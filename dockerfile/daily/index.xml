<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-06T01:34:26Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fly-apps/dockerfile-rails</title>
    <updated>2023-06-06T01:34:26Z</updated>
    <id>tag:github.com,2023-06-06:/fly-apps/dockerfile-rails</id>
    <link href="https://github.com/fly-apps/dockerfile-rails" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Provides a Rails generator to produce Dockerfiles and related files.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Provides a Rails generator to produce Dockerfiles and related files. This is being proposed as the generator to be included in Rails 7.1, and a substantial number of pull requests along those lines have already been merged. This repository contains fixes and features beyond those pull requests. Highlights:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports all &lt;a href=&#34;https://guides.rubyonrails.org/maintenance_policy.html&#34;&gt;Rails supported releases&lt;/a&gt;, not just Rails 7.1, and likely works with a number of previous releases.&lt;/li&gt; &#xA; &lt;li&gt;Can be customized using flags on the &lt;code&gt;generate dockerfile&lt;/code&gt; command, and rerun to produce a custom tailored dockerfile based on detecting the actual features used by your application.&lt;/li&gt; &#xA; &lt;li&gt;Will set &lt;code&gt;.node_version&lt;/code&gt;, &lt;code&gt;packageManager&lt;/code&gt; and install gems if needed to deploy your application.&lt;/li&gt; &#xA; &lt;li&gt;Can produce a &lt;code&gt;docker-compose.yml&lt;/code&gt; file for locally testing your configuration before deploying.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more background:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fly-apps/dockerfile-rails/main/MOTIVATION.md&#34;&gt;Motivation&lt;/a&gt; - why this generator was created and what problems it is meant to solve&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fly-apps/dockerfile-rails/main/DEMO.md&#34;&gt;Demos&lt;/a&gt; - scripts to copy and paste into an empty directory to launch demo apps&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fly-apps/dockerfile-rails/main/test/results&#34;&gt;Test Results&lt;/a&gt; - expected outputs for each test&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;bundle add dockerfile-rails --optimistic --group development&#xA;bin/rails generate dockerfile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;General option:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--force&lt;/code&gt; - overwrite existing files&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Runtime Optimizations:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--fullstaq&lt;/code&gt; - use &lt;a href=&#34;https://fullstaqruby.org/&#34;&gt;fullstaq&lt;/a&gt; &lt;a href=&#34;https://github.com/evilmartians/fullstaq-ruby-docker&#34;&gt;images&lt;/a&gt; on &lt;a href=&#34;https://quay.io/repository/evl.ms/fullstaq-ruby?tab=tags&amp;amp;tag=latest&#34;&gt;quay.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--jemalloc&lt;/code&gt; - use &lt;a href=&#34;https://jemalloc.net/&#34;&gt;jemalloc&lt;/a&gt; memory allocator&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--swap=n&lt;/code&gt; - allocate swap space. See &lt;a href=&#34;https://man7.org/linux/man-pages/man1/fallocate.1.html#OPTIONS&#34;&gt;falloc options&lt;/a&gt; for suffixes&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--yjit&lt;/code&gt; - enable &lt;a href=&#34;https://github.com/ruby/ruby/raw/master/doc/yjit/yjit.md&#34;&gt;YJIT&lt;/a&gt; optimizing compiler&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Build optimizations:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--cache&lt;/code&gt; - use build caching to speed up builds&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--parallel&lt;/code&gt; - use multi-stage builds to install gems and node modules in parallel&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Add/remove a Feature:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--ci&lt;/code&gt; - include test gems in deployed image&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--compose&lt;/code&gt; - generate a &lt;code&gt;docker-compose.yml&lt;/code&gt; file&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--max-idle=n&lt;/code&gt; - exit afer &lt;em&gt;n&lt;/em&gt; seconds of inactivity. Supports &lt;a href=&#34;https://en.wikipedia.org/wiki/ISO_8601#Durations&#34;&gt;iso 8601&lt;/a&gt; and &lt;a href=&#34;https://man7.org/linux/man-pages/man1/sleep.1.html#DESCRIPTION&#34;&gt;sleep&lt;/a&gt; syntaxes. Uses passenger for now, awaiting &lt;a href=&#34;https://github.com/puma/puma/issues/2580&#34;&gt;puma&lt;/a&gt; support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--nginx&lt;/code&gt; - serve static files via &lt;a href=&#34;https://www.nginx.com/&#34;&gt;nginx&lt;/a&gt;. May require &lt;code&gt;--root&lt;/code&gt; on some targets to access &lt;code&gt;/dev/stdout&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--no-link&lt;/code&gt; - don&#39;t add &lt;a href=&#34;https://docs.docker.com/engine/reference/builder/#copy---link&#34;&gt;--link&lt;/a&gt; to COPY statements. Some tools (like at the moment, &lt;a href=&#34;https://www.redhat.com/en/topics/containers/what-is-buildah&#34;&gt;buildah&lt;/a&gt;) don&#39;t yet support this feature.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--no-lock&lt;/code&gt; - don&#39;t add linux platforms, set &lt;code&gt;BUNDLE_DEPLOY&lt;/code&gt;, or &lt;code&gt;--frozen-lockfile&lt;/code&gt;. May be needed at times to work around a &lt;a href=&#34;https://github.com/rubygems/rubygems/issues/6082#issuecomment-1329756343&#34;&gt;rubygems bug&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--sudo&lt;/code&gt; - install and configure sudo to enable &lt;code&gt;sudo -iu rails&lt;/code&gt; access to full environment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Add a Database:&lt;/h3&gt; &#xA;&lt;p&gt;Generally the dockerfile generator will be able to determine what dependencies you are actually using. But should you be using DATABASE_URL, for example, at runtime additional support may be needed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--litefs&lt;/code&gt; - use &lt;a href=&#34;https://fly.io/docs/litefs/&#34;&gt;LiteFS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--mysql&lt;/code&gt; - add mysql libraries&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--postgresql&lt;/code&gt; - add postgresql libraries&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--redis&lt;/code&gt; - add redis libraries&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--sqlite3&lt;/code&gt; - add sqlite3 libraries&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Add a package/environment variable/build argument:&lt;/h3&gt; &#xA;&lt;p&gt;Not all of your needs can be determined by scanning your application. For example, I like to add &lt;a href=&#34;https://www.vim.org/&#34;&gt;vim&lt;/a&gt; and &lt;a href=&#34;https://packages.debian.org/bullseye/procps&#34;&gt;procps&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--add package...&lt;/code&gt; - add one or more debian packages&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--arg=name:value&lt;/code&gt; - add a &lt;a href=&#34;https://docs.docker.com/engine/reference/builder/#arg&#34;&gt;build argument&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--env=name:value&lt;/code&gt; - add an environment variable&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--remove package...&lt;/code&gt; - remove package from &#34;to be added&#34; list&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Each of these can be tailored to a specific build phase by adding &lt;code&gt;-base&lt;/code&gt;, &lt;code&gt;-build&lt;/code&gt;, or &lt;code&gt;-deploy&lt;/code&gt; after the flag name (e.g &lt;code&gt;--add-build freetds-dev --add-deploy freetds-bin&lt;/code&gt;). If no such suffix is found, the default for arg is &lt;code&gt;-base&lt;/code&gt;, and the default for the rest is &lt;code&gt;-deploy&lt;/code&gt;. Removal of an arg or environment variable is done by leaving the value blank (e.g &lt;code&gt;--env-build=PORT:&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Configuration:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--bin-cd&lt;/code&gt; - adjust binstubs to set current working directory &lt;a href=&#34;https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration#_core_autocrlf&#34;&gt;autocrlf&lt;/a&gt; enabled or may not be able to set bin stubs as executable.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--label=name:value&lt;/code&gt; - specify docker label. Can be used multiple times. See &lt;a href=&#34;https://docs.docker.com/engine/reference/builder/#label&#34;&gt;LABEL&lt;/a&gt; for detail&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--no-prepare&lt;/code&gt; - omit &lt;code&gt;db:prepare&lt;/code&gt;. Useful for cloud platforms with &lt;a href=&#34;https://devcenter.heroku.com/articles/release-phase&#34;&gt;release&lt;/a&gt; phases&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--platform=s&lt;/code&gt; - specify target platform. See &lt;a href=&#34;https://docs.docker.com/engine/reference/builder/#from&#34;&gt;FROM&lt;/a&gt; for details&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--precompile=defer&lt;/code&gt; - may be needed when your configuration requires access to secrets that are not available at build time. Results in larger images and slower deployments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--root&lt;/code&gt; - run application as root&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--windows&lt;/code&gt; - make Dockerfile work for Windows users that may have set &lt;code&gt;git config --global core.autocrlf true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Options are saved between runs into &lt;code&gt;config/dockerfile.yml&lt;/code&gt;. To invert a boolean options, add or remove a &lt;code&gt;no-&lt;/code&gt; prefix from the option name.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;A single invocation of &lt;code&gt;rake test:all&lt;/code&gt; will run all of the tests defined. dockerfile-rails has are three types of tests:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;rake test:rubocop&lt;/code&gt; runs &lt;a href=&#34;https://github.com/rubocop/rubocop&#34;&gt;rubocop&lt;/a&gt; using the same options as the Rails codebase.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rake test:system&lt;/code&gt; creates a new esbuild application, generates a dockerfile, builds and runs it. As this is time consuming, only one application is tested this way at this time, and a &lt;code&gt;--javascript&lt;/code&gt; example was selected as it exercises a large portion of the features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rake test&lt;/code&gt; runs integration tests, as described below&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The current integration testing strategy is to run &lt;code&gt;rails new&lt;/code&gt; and &lt;code&gt;generate dockerfile&lt;/code&gt; with various configurations and compare the generated artifacts with expected results. &lt;code&gt;ARG&lt;/code&gt; values in &lt;code&gt;Dockerfiles&lt;/code&gt; are masked before comparison.&lt;/p&gt; &#xA;&lt;p&gt;Running all integration tests, or even a single individual test can be done as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rake test&#xA;ruby test/test_minimal.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To assis with this process, outputs of tests can be captured automatically. This is useful when adding new tests and when making a change that affects many tests. Be sure to inspect the output (e.g., by using &lt;code&gt;git diff&lt;/code&gt;) before committing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rake test:capture&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are running a single test, the following environment variables settings may be helpful:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;RAILS_ENV=TEST&lt;/code&gt; will match the environment used to produce the captured outputs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TEST_CAPTURE=1&lt;/code&gt; will capture test results.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TEST_KEEP=1&lt;/code&gt; will leave the test app behind for inspection after the test completes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Historical Links&lt;/h2&gt; &#xA;&lt;p&gt;The following links relate to the coordination between this package and Rails 7.1.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.fly.io/t/preparations-for-rails-7-1/9512&#34;&gt;Preparations for Rails 7.1&lt;/a&gt; - &lt;a href=&#34;https://fly.io/&#34;&gt;Fly.io&lt;/a&gt;&#39;s plans and initial discussions with DHH&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discuss.rubyonrails.org/t/rails-dockerfile-futures/82091/1&#34;&gt;Rails Dockerfile futures&lt;/a&gt; - rationale for a generator&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fly.io/docs/rails/cookbooks/&#34;&gt;Fly Cookbooks&lt;/a&gt; - deeper dive into Dockerfile design choices&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rails/rails/raw/main/railties/lib/rails/generators/rails/app/templates/Dockerfile.tt&#34;&gt;app/templates/Dockerfile.tt&lt;/a&gt; - current Rails 7.1 template&lt;/li&gt; &#xA; &lt;li&gt;Fly.io &lt;a href=&#34;https://community.fly.io/t/cut-over-to-rails-dockerfile-generator-on-sunday-29-jan-2023/10350&#34;&gt;Cut over to Rails Dockerfile Generator on Sunday 29 Jan 2023&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fly.io &lt;a href=&#34;https://fly.io/docs/rails/getting-started/dockerfiles/&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DDH&#39;s &lt;a href=&#34;https://github.com/rails/rails/pull/47372#issuecomment-1438971730&#34;&gt;target&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Parallel efforts for Hanami:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discourse.hanamirb.org/t/dockerfile-hanami/816&#34;&gt;Proposal&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>