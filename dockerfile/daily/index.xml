<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-05T01:30:46Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>itzg/docker-rcon-web-admin</title>
    <updated>2025-05-05T01:30:46Z</updated>
    <id>tag:github.com,2025-05-05:/itzg/docker-rcon-web-admin</id>
    <link href="https://github.com/itzg/docker-rcon-web-admin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Docker image that runs rcon-web-admin&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/itzg/rcon&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/itzg/rcon&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This image lets you run the &lt;a href=&#34;https://github.com/rcon-web-admin/rcon-web-admin&#34;&gt;rcon-web-admin&lt;/a&gt; administration tool as a Docker container. A great benefit of running rcon-web-admin in Docker, especially in a Docker Composition is that the RCON port of your game server can remain securely isolated within the Docker network.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To get up and running quickly, it is best use Docker Compose with a &lt;code&gt;docker-compose.yml&lt;/code&gt; such as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;3.3&#39;&#xA;&#xA;services:&#xA;  web:&#xA;    image: itzg/rcon&#xA;    environment:&#xA;      RWA_USERNAME: admin&#xA;      RWA_PASSWORD: admin&#xA;      RWA_ADMIN: &#34;TRUE&#34;&#xA;      # is referring to the service name &#39;mc&#39; declared below&#xA;      RWA_RCON_HOST: mc&#xA;      # needs to match the password configured for the container, see RCON_PASSWORD below&#xA;      RWA_RCON_PASSWORD: &#34;changethis!&#34;&#xA;    ports:&#xA;      - &#34;4326:4326&#34;&#xA;      - &#34;4327:4327&#34;&#xA;  mc:&#xA;    image: itzg/minecraft-server&#xA;    ports:&#xA;      - &#34;25565:25565&#34;&#xA;      # DO NOT expose rcon port 25575 here&#xA;    environment:&#xA;      EULA: &#34;TRUE&#34;&#xA;      RCON_PASSWORD: &#34;changethis!&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To manually create containers with &lt;code&gt;docker run&lt;/code&gt;s, which is &lt;strong&gt;not recommended&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a user network&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker network create rcon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Create minecraft container with &lt;code&gt;--network rcon&lt;/code&gt; and &lt;code&gt;--network-alias=mc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create rcon-web container with &lt;code&gt;--network rcon&lt;/code&gt;, &lt;code&gt;-e RWA_RCON_HOST=mc&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -d --name rcon-web --network rcon \&#xA;  -p 4326:4326 -p 4327:4327 \&#xA;  -e RWA_PASSWORD=password \&#xA;  itzg/rcon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With that you can follow the &lt;a href=&#34;https://github.com/rcon-web-admin/rcon-web-admin#visit-the-ui&#34;&gt;regular instructions&lt;/a&gt; and access the web UI at http://YOUR_DOCKER_HOST:4326&lt;/p&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/rcon-web-admin/rcon-web-admin#environment-variables&#34;&gt;Environment Variables&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;RWA_ENV&lt;/code&gt; is preset to &#34;TRUE&#34; in this image, so &lt;a href=&#34;https://github.com/rcon-web-admin/rcon-web-admin#environment-variables&#34;&gt;all of the environment variables described in rcon-web-admin&lt;/a&gt; are available for use.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;RWA_PASSWORD&lt;/code&gt; : required to be set for the initial user (by default &lt;code&gt;admin&lt;/code&gt;) password&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;RWA_RCON_HOST&lt;/code&gt; : should be set to the Minecraft server&#39;s hostname, such as the service name in a Docker Compose deployment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;VOLUMEs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;/opt/rcon-web-admin/db&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PORTs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;4326 : web UI&lt;/li&gt; &#xA; &lt;li&gt;4327 : websocket access from UI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Running with itzg/minecraft-server&lt;/h3&gt; &#xA;&lt;p&gt;To run this with the &lt;code&gt;itzg/minecraft-server&lt;/code&gt; image, simply download/modify &lt;a href=&#34;https://github.com/itzg/docker-rcon-web-admin/raw/master/docker-compose.yml&#34;&gt;this docker-compose.yml&lt;/a&gt; and then use &lt;code&gt;docker-compose&lt;/code&gt; or &lt;code&gt;docker stack deploy -c&lt;/code&gt; to bring up the composition.&lt;/p&gt; &#xA;&lt;p&gt;With that particular composition, configure a new server as shown here (with an RCON password of &#34;testing&#34;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/qTrwkaO.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;With the server configured, go to the Dashboard and pick the server &#34;minecraft&#34;. The following shows adding a &#34;Console&#34; widget and running the &#34;help&#34; command against Minecraft:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/UYr7I7C.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>