<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-30T01:37:40Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nigelpoulton/TheK8sBook</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/nigelpoulton/TheK8sBook</id>
    <link href="https://github.com/nigelpoulton/TheK8sBook" rel="alternate"></link>
    <summary type="html">&lt;p&gt;YAML files for use with The Kubernetes Book&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Kubernetes Book&lt;/h1&gt; &#xA;&lt;p&gt;Lab files for &lt;strong&gt;The Kubernetes Book&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Enjoy!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Errata&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;page 155. typo: &lt;em&gt;incomng&lt;/em&gt; should be &lt;em&gt;incoming&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>AlanTur1ng/Free-VPN-for-Coursera</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/AlanTur1ng/Free-VPN-for-Coursera</id>
    <link href="https://github.com/AlanTur1ng/Free-VPN-for-Coursera" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔑 🔓免费开源的科学上网工具&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VPN-for-Coursera&lt;/h1&gt; &#xA;&lt;p&gt;科学上网工具：主要是为了解决部分用户在Coursera上遇到的视频无法观看，黑屏，缓冲问题。&lt;br&gt;更多解决方法见： &lt;a href=&#34;https://blog.csdn.net/qq_39521554/article/details/79039548#comments&#34;&gt;Coursera视频无法观看的三种不同解决方法（亲测有效）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;VPN工具一：Shadow-SSR-4.0&lt;/h2&gt; &#xA;&lt;h3&gt;使用方法&lt;br&gt;&lt;/h3&gt; &#xA;&lt;br&gt; 第一步：将文件解压缩至本地&#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Y1ran/JavaSE/raw/master/%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%87/1.JPG&#34; alt=&#34;步骤一&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; 第二步：打开Shadow-ssr-dot-4.0（粉红小飞机图标）&#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Y1ran/JavaSE/raw/master/%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%87/2.JPG&#34; alt=&#34;步骤一&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; 第三步：在任务栏图标处找到白色小飞机&#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Y1ran/JavaSE/raw/master/%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%87/3.JPG&#34; alt=&#34;步骤一&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; 第四步：右键白色小飞机，选择import-SSR links from-clipboard &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Y1ran/JavaSE/raw/master/%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%87/4.JPG&#34; alt=&#34;步骤一&#34;&gt; &lt;br&gt; &lt;em&gt;执行这一步前请先在项目文件内找到&lt;strong&gt;节点.txt&lt;/strong&gt;并ctrl+C复制里面内容)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;br&gt; 第五步：双击白色小飞机，更改设置如下 &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Y1ran/JavaSE/raw/master/%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%87/Capture.JPG&#34; alt=&#34;步骤一&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt;此时点击OK进行连接，即可科学上网，除了Coursera还可以上谷歌,FB,INS等网站&lt;/p&gt; &#xA;&lt;h2&gt;VPN工具二：SSTap&lt;/h2&gt; &#xA;&lt;h3&gt;使用方法&lt;br&gt;&lt;/h3&gt; &#xA;&lt;br&gt; 第一步：将文件解压缩至本地&#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Y1ran/JavaSE/raw/master/%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%87/5.JPG&#34; alt=&#34;步骤一&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; 第二步：打开红色标记图标&#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Y1ran/JavaSE/raw/master/%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%87/6.JPG&#34; alt=&#34;步骤一&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; 第三步：单击绿色加号，选择第三个选项&#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Y1ran/JavaSE/raw/master/%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%87/7.JPG&#34; alt=&#34;步骤一&#34;&gt; &lt;br&gt; &lt;em&gt;执行这一步前请先在项目文件内找到&lt;strong&gt;节点.txt&lt;/strong&gt;并ctrl+C复制里面内容)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;第四步：点击闪电标志进行测试，如果运行正常则如下图所示 &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Y1ran/JavaSE/raw/master/%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%87/8.JPG&#34; alt=&#34;步骤一&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jenkinsci/docker</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/jenkinsci/docker</id>
    <link href="https://github.com/jenkinsci/docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker official jenkins repo&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Official Jenkins Docker image&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/jenkins/jenkins/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/jenkins/jenkins.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/jenkins/jenkins/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/jenkins/jenkins.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/jenkinsci/docker?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/jenkinsci/docker.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/jenkinsci/docker&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Jenkins Continuous Integration and Delivery server &lt;a href=&#34;https://hub.docker.com/r/jenkins/jenkins&#34;&gt;available on Docker Hub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is a fully functional Jenkins server. &lt;a href=&#34;https://jenkins.io/&#34;&gt;https://jenkins.io/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://jenkins.io/sites/default/files/jenkins_logo.png&#34;&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: read the section &lt;a href=&#34;https://raw.githubusercontent.com/jenkinsci/docker/master/#connecting-agents&#34;&gt;&lt;em&gt;Connecting agents&lt;/em&gt;&lt;/a&gt; below for the role of the &lt;code&gt;50000&lt;/code&gt; port mapping.&lt;/p&gt; &#xA;&lt;p&gt;This will store the workspace in &lt;code&gt;/var/jenkins_home&lt;/code&gt;. All Jenkins data lives in there - including plugins and configuration. You will probably want to make that an explicit volume so you can manage it and attach to another container for upgrades :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 8080:8080 -p 50000:50000 --restart=on-failure -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will automatically create a &#39;jenkins_home&#39; &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;docker volume&lt;/a&gt; on the host machine. Docker volumes retain their content even when the container is stopped, started, or deleted.&lt;/p&gt; &#xA;&lt;p&gt;NOTE: Avoid using a &lt;a href=&#34;https://docs.docker.com/storage/bind-mounts/&#34;&gt;bind mount&lt;/a&gt; from a folder on the host machine into &lt;code&gt;/var/jenkins_home&lt;/code&gt;, as this might result in file permission issues (the user used inside the container might not have rights to the folder on the host machine). If you &lt;em&gt;really&lt;/em&gt; need to bind mount jenkins_home, ensure that the directory on the host is accessible by the jenkins user inside the container (jenkins user - uid 1000) or use &lt;code&gt;-u some_other_user&lt;/code&gt; parameter with &lt;code&gt;docker run&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d -v jenkins_home:/var/jenkins_home -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;this will run Jenkins in detached mode with port forwarding and volume added. You can access logs with command &#39;docker logs CONTAINER_ID&#39; in order to check first login token. ID of container will be returned from output of command above.&lt;/p&gt; &#xA;&lt;h2&gt;Backing up data&lt;/h2&gt; &#xA;&lt;p&gt;If you bind mount in a volume - you can simply back up that directory (which is jenkins_home) at any time.&lt;/p&gt; &#xA;&lt;p&gt;This is highly recommended. Treat the jenkins_home directory as you would a database - in Docker you would generally put a database on a volume.&lt;/p&gt; &#xA;&lt;p&gt;If your volume is inside a container - you can use &lt;code&gt;docker cp $ID:/var/jenkins_home&lt;/code&gt; command to extract the data, or other options to find where the volume data is. Note that some symlinks on some OSes may be converted to copies (this can confuse jenkins with lastStableBuild links etc)&lt;/p&gt; &#xA;&lt;p&gt;For more info check Docker docs section on &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;Use volumes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Setting the number of executors&lt;/h1&gt; &#xA;&lt;p&gt;You can define the number of executors on the Jenkins built-in node using a groovy script. By default it is set to 2 executors, but you can extend the image and change it to your desired number of executors (recommended 0 executors on the built-in node) :&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;executors.groovy&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import jenkins.model.*&#xA;Jenkins.instance.setNumExecutors(0) // Recommended to not run builds on the built-in node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and &lt;code&gt;Dockerfile&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts&#xA;COPY --chown=jenkins:jenkins executors.groovy /usr/share/jenkins/ref/init.groovy.d/executors.groovy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Connecting agents&lt;/h1&gt; &#xA;&lt;p&gt;You can run builds on the controller out of the box. The Jenkins project recommends that no executors be enabled on the controller.&lt;/p&gt; &#xA;&lt;p&gt;In order to connect agents &lt;strong&gt;through an inbound TCP connection&lt;/strong&gt;, map the port: &lt;code&gt;-p 50000:50000&lt;/code&gt;. That port will be used when you connect agents to the controller.&lt;/p&gt; &#xA;&lt;p&gt;If you are only using &lt;a href=&#34;https://plugins.jenkins.io/ssh-slaves/&#34;&gt;SSH (outbound) build agents&lt;/a&gt;, this port is not required, as connections are established from the controller. If you connect agents using web sockets (since Jenkins 2.217), the TCP agent port is not used either.&lt;/p&gt; &#xA;&lt;h1&gt;Passing JVM parameters&lt;/h1&gt; &#xA;&lt;p&gt;You might need to customize the JVM running Jenkins, typically to adjust &lt;a href=&#34;https://www.jenkins.io/doc/book/managing/system-properties/&#34;&gt;system properties&lt;/a&gt; or tweak heap memory settings. Use the &lt;code&gt;JAVA_OPTS&lt;/code&gt; or &lt;code&gt;JENKINS_JAVA_OPTS&lt;/code&gt; environment variables for this purpose :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --name myjenkins -p 8080:8080 -p 50000:50000 --restart=on-failure --env JAVA_OPTS=-Dhudson.footerURL=http://mycompany.com jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;JVM options specifically for the Jenkins controller should be set through &lt;code&gt;JENKINS_JAVA_OPTS&lt;/code&gt;, as other tools might also respond to the &lt;code&gt;JAVA_OPTS&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;h1&gt;Configuring logging&lt;/h1&gt; &#xA;&lt;p&gt;Jenkins logging can be configured through a properties file and &lt;code&gt;java.util.logging.config.file&lt;/code&gt; Java property. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir data&#xA;cat &amp;gt; data/log.properties &amp;lt;&amp;lt;EOF&#xA;handlers=java.util.logging.ConsoleHandler&#xA;jenkins.level=FINEST&#xA;java.util.logging.ConsoleHandler.level=FINEST&#xA;EOF&#xA;docker run --name myjenkins -p 8080:8080 -p 50000:50000 --restart=on-failure --env JAVA_OPTS=&#34;-Djava.util.logging.config.file=/var/jenkins_home/log.properties&#34; -v `pwd`/data:/var/jenkins_home jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Configuring reverse proxy&lt;/h1&gt; &#xA;&lt;p&gt;If you want to install Jenkins behind a reverse proxy with a prefix, example: mysite.com/jenkins, you need to add environment variable &lt;code&gt;JENKINS_OPTS=&#34;--prefix=/jenkins&#34;&lt;/code&gt; and then follow the below procedures to configure your reverse proxy, which will depend if you have Apache or Nginx:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-apache/&#34;&gt;Apache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-nginx/&#34;&gt;Nginx&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Passing Jenkins launcher parameters&lt;/h1&gt; &#xA;&lt;p&gt;Arguments you pass to docker running the Jenkins image are passed to jenkins launcher, so for example you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run jenkins/jenkins:lts-jdk11 --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will show the Jenkins version, the same as when you run Jenkins from an executable war.&lt;/p&gt; &#xA;&lt;p&gt;You can also define Jenkins arguments via &lt;code&gt;JENKINS_OPTS&lt;/code&gt;. This is useful for customizing arguments to the jenkins launcher in a derived Jenkins image. The following sample Dockerfile uses this option to force use of HTTPS with a certificate included in the image.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;&#xA;COPY --chown=jenkins:jenkins https.pem /var/lib/jenkins/cert&#xA;COPY --chown=jenkins:jenkins https.key /var/lib/jenkins/pk&#xA;ENV JENKINS_OPTS --httpPort=-1 --httpsPort=8083 --httpsCertificate=/var/lib/jenkins/cert --httpsPrivateKey=/var/lib/jenkins/pk&#xA;EXPOSE 8083&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also change the default agent port for Jenkins by defining &lt;code&gt;JENKINS_SLAVE_AGENT_PORT&lt;/code&gt; in a sample Dockerfile.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;ENV JENKINS_SLAVE_AGENT_PORT 50001&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or as a parameter to docker,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --name myjenkins -p 8080:8080 -p 50001:50001 --restart=on-failure --env JENKINS_SLAVE_AGENT_PORT=50001 jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This environment variable will be used to set the &lt;a href=&#34;https://www.jenkins.io/doc/book/managing/system-properties/&#34;&gt;system property&lt;/a&gt; &lt;code&gt;jenkins.model.Jenkins.slaveAgentPort&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If this property is already set in &lt;strong&gt;JAVA_OPTS&lt;/strong&gt; or &lt;strong&gt;JENKINS_JAVA_OPTS&lt;/strong&gt;, then the value of &lt;code&gt;JENKINS_SLAVE_AGENT_PORT&lt;/code&gt; will be ignored.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Installing more tools&lt;/h1&gt; &#xA;&lt;p&gt;You can run your container as root - and install via apt-get, install as part of build steps via jenkins tool installers, or you can create your own Dockerfile to customise, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;# if we want to install via apt&#xA;USER root&#xA;RUN apt-get update &amp;amp;&amp;amp; apt-get install -y ruby make more-thing-here&#xA;# drop back to the regular jenkins user - good practice&#xA;USER jenkins&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In such a derived image, you can customize your jenkins instance with hook scripts or additional plugins. For this purpose, use &lt;code&gt;/usr/share/jenkins/ref&lt;/code&gt; as a place to define the default JENKINS_HOME content you wish the target installation to look like :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;COPY --chown=jenkins:jenkins custom.groovy /usr/share/jenkins/ref/init.groovy.d/custom.groovy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Preinstalling plugins&lt;/h2&gt; &#xA;&lt;h3&gt;Install plugins script&lt;/h3&gt; &#xA;&lt;p&gt;You can rely on the plugin manager CLI to pass a set of plugins to download with their dependencies. This tool will perform downloads from update centers, and internet access is required for the default update centers.&lt;/p&gt; &#xA;&lt;h3&gt;Setting update centers&lt;/h3&gt; &#xA;&lt;p&gt;During the download, the script will use update centers defined by the following environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_UC&lt;/code&gt; - Main update center. This update center may offer plugin versions depending on the Jenkins LTS Core versions. Default value: &lt;a href=&#34;https://updates.jenkins.io&#34;&gt;https://updates.jenkins.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_UC_EXPERIMENTAL&lt;/code&gt; - &lt;a href=&#34;https://jenkins.io/blog/2013/09/23/experimental-plugins-update-center/&#34;&gt;Experimental Update Center&lt;/a&gt;. This center offers Alpha and Beta versions of plugins. Default value: &lt;a href=&#34;https://updates.jenkins.io/experimental&#34;&gt;https://updates.jenkins.io/experimental&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_INCREMENTALS_REPO_MIRROR&lt;/code&gt; - Defines Maven mirror to be used to download plugins from the &lt;a href=&#34;https://jenkins.io/blog/2018/05/15/incremental-deployment/&#34;&gt;Incrementals repo&lt;/a&gt;. Default value: &lt;a href=&#34;https://repo.jenkins-ci.org/incrementals&#34;&gt;https://repo.jenkins-ci.org/incrementals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_UC_DOWNLOAD&lt;/code&gt; - Download url of the Update Center. Default value: &lt;code&gt;$JENKINS_UC/download&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is possible to override the environment variables in images.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;❗&lt;/span&gt; Note that changing update center variables &lt;strong&gt;will not&lt;/strong&gt; change the Update Center being used by Jenkins runtime.&lt;/p&gt; &#xA;&lt;h3&gt;Installing Custom Plugins&lt;/h3&gt; &#xA;&lt;p&gt;Installing prebuilt, custom plugins can be accomplished by copying the plugin HPI file into &lt;code&gt;/usr/share/jenkins/ref/plugins/&lt;/code&gt; within the &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;COPY --chown=jenkins:jenkins path/to/custom.hpi /usr/share/jenkins/ref/plugins/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;You can run the CLI manually in Dockerfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM jenkins/jenkins:lts-jdk11&#xA;RUN jenkins-plugin-cli --plugins pipeline-model-definition github-branch-source:1.8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Furthermore it is possible to pass a file that contains this set of plugins (with or without line breaks).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM jenkins/jenkins:lts-jdk11&#xA;COPY --chown=jenkins:jenkins plugins.txt /usr/share/jenkins/ref/plugins.txt&#xA;RUN jenkins-plugin-cli -f /usr/share/jenkins/ref/plugins.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When jenkins container starts, it will check &lt;code&gt;JENKINS_HOME&lt;/code&gt; has this reference content, and copy them there if required. It will not override such files, so if you upgraded some plugins from UI they won&#39;t be reverted on next start.&lt;/p&gt; &#xA;&lt;p&gt;In case you &lt;em&gt;do&lt;/em&gt; want to override, append &#39;.override&#39; to the name of the reference file. E.g. a file named &lt;code&gt;/usr/share/jenkins/ref/config.xml.override&lt;/code&gt; will overwrite an existing &lt;code&gt;config.xml&lt;/code&gt; file in JENKINS_HOME.&lt;/p&gt; &#xA;&lt;p&gt;Also see &lt;a href=&#34;https://issues.jenkins.io/browse/JENKINS-24986&#34;&gt;JENKINS-24986&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here is an example to get the list of plugins from an existing server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;JENKINS_HOST=username:password@myhost.com:port&#xA;curl -sSL &#34;http://$JENKINS_HOST/pluginManager/api/xml?depth=1&amp;amp;xpath=/*/*/shortName|/*/*/version&amp;amp;wrapper=plugins&#34; | perl -pe &#39;s/.*?&amp;lt;shortName&amp;gt;([\w-]+).*?&amp;lt;version&amp;gt;([^&amp;lt;]+)()(&amp;lt;\/\w+&amp;gt;)+/\1 \2\n/g&#39;|sed &#39;s/ /:/&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cucumber-testresult-plugin:0.8.2&#xA;pam-auth:1.1&#xA;matrix-project:1.4.1&#xA;script-security:1.13&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For 2.x-derived images, you may also want to&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;RUN echo 2.0 &amp;gt; /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to indicate that this Jenkins installation is fully configured. Otherwise a banner will appear prompting the user to install additional plugins, which may be inappropriate.&lt;/p&gt; &#xA;&lt;h3&gt;Updating plugins file&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/jenkinsci/plugin-installation-manager-tool&#34;&gt;plugin-installation-manager-tool&lt;/a&gt; supports updating the plugin file for you.&lt;/p&gt; &#xA;&lt;p&gt;Example command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-command&#34;&gt;JENKINS_IMAGE=jenkins/jenkins:lts-jdk11&#xA;docker run -it ${JENKINS_IMAGE} bash -c &#34;stty -onlcr &amp;amp;&amp;amp; jenkins-plugin-cli -f /usr/share/jenkins/ref/plugins.txt --available-updates --output txt&#34; &amp;gt;  plugins2.txt&#xA;mv plugins2.txt plugins.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Upgrading&lt;/h2&gt; &#xA;&lt;p&gt;All the data needed is in the /var/jenkins_home directory - so depending on how you manage that - depends on how you upgrade. Generally - you can copy it out - and then &#34;docker pull&#34; the image again - and you will have the latest LTS - you can then start up with -v pointing to that data (/var/jenkins_home) and everything will be as you left it.&lt;/p&gt; &#xA;&lt;p&gt;As always - please ensure that you know how to drive docker - especially volume handling!&lt;/p&gt; &#xA;&lt;h3&gt;Upgrading plugins&lt;/h3&gt; &#xA;&lt;p&gt;By default, plugins will be upgraded if they haven&#39;t been upgraded manually and if the version from the docker image is newer than the version in the container. Versions installed by the docker image are tracked through a marker file.&lt;/p&gt; &#xA;&lt;p&gt;To force upgrades of plugins that have been manually upgraded, run the docker image with &lt;code&gt;-e PLUGINS_FORCE_UPGRADE=true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The default behaviour when upgrading from a docker image that didn&#39;t write marker files is to leave existing plugins in place. If you want to upgrade existing plugins without marker you may run the docker image with &lt;code&gt;-e TRY_UPGRADE_IF_NO_MARKER=true&lt;/code&gt;. Then plugins will be upgraded if the version provided by the docker image is newer.&lt;/p&gt; &#xA;&lt;h3&gt;Hacking&lt;/h3&gt; &#xA;&lt;p&gt;If you wish to contribute fixes to this repository, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/jenkinsci/docker/master/HACKING.adoc&#34;&gt;dedicated documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Questions?&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re on Gitter, &lt;a href=&#34;https://gitter.im/jenkinsci/docker&#34;&gt;https://gitter.im/jenkinsci/docker&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>yankils/Simple-DevOps-Project</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/yankils/Simple-DevOps-Project</id>
    <link href="https://github.com/yankils/Simple-DevOps-Project" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Simple DevOps Project&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.udemy.com/course/valaxy-devops/?referralCode=8147A5CF4C8C7D9E253F&#34;&gt;&lt;img src=&#34;https://github.com/yankils/Simple-DevOps-Project/raw/master/Devops_course.PNG&#34; alt=&#34;Image&#34; title=&#34;DevOps Project - CI/CD with Jenkins Ansible Docker Kubernetes &#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This Repository is a collection of Implementation documents.&lt;/p&gt; &#xA;&lt;h3&gt;Purpose:&lt;/h3&gt; &#xA;&lt;p&gt;By following this repository you can able to setup a DevOps CI/CD Pipeline using&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;git&lt;/li&gt; &#xA; &lt;li&gt;Jenkins&lt;/li&gt; &#xA; &lt;li&gt;Maven&lt;/li&gt; &#xA; &lt;li&gt;Ansible&lt;/li&gt; &#xA; &lt;li&gt;Docker &amp;amp;&lt;/li&gt; &#xA; &lt;li&gt;Kubernetes&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>aschmelyun/docker-compose-laravel</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/aschmelyun/docker-compose-laravel</id>
    <link href="https://github.com/aschmelyun/docker-compose-laravel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A docker-compose workflow for local Laravel development&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;docker-compose-laravel&lt;/h1&gt; &#xA;&lt;p&gt;A pretty simplified Docker Compose workflow that sets up a LEMP network of containers for local Laravel development. You can view the full article that inspired this repo &lt;a href=&#34;https://dev.to/aschmelyun/the-beauty-of-docker-for-local-laravel-development-13c0&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitnft.quine.sh/app/commits/list/repo/docker-compose-laravel&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%94%AE-Open%20in%20GitNFT-darkviolet?style=flat&#34; alt=&#34;GitNFT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To get started, make sure you have &lt;a href=&#34;https://docs.docker.com/docker-for-mac/install/&#34;&gt;Docker installed&lt;/a&gt; on your system, and then clone this repository.&lt;/p&gt; &#xA;&lt;p&gt;Next, navigate in your terminal to the directory you cloned this, and spin up the containers for the web server by running &lt;code&gt;docker-compose up -d --build site&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;After that completes, follow the steps from the &lt;a href=&#34;https://raw.githubusercontent.com/aschmelyun/docker-compose-laravel/main/src/README.md&#34;&gt;src/README.md&lt;/a&gt; file to get your Laravel project added in (or create a new blank one).&lt;/p&gt; &#xA;&lt;p&gt;Bringing up the Docker Compose network with &lt;code&gt;site&lt;/code&gt; instead of just using &lt;code&gt;up&lt;/code&gt;, ensures that only our site&#39;s containers are brought up at the start, instead of all of the command containers as well. The following are built for our web server, with their exposed ports detailed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;nginx&lt;/strong&gt; - &lt;code&gt;:80&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;mysql&lt;/strong&gt; - &lt;code&gt;:3306&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;php&lt;/strong&gt; - &lt;code&gt;:9000&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;redis&lt;/strong&gt; - &lt;code&gt;:6379&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;mailhog&lt;/strong&gt; - &lt;code&gt;:8025&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Three additional containers are included that handle Composer, NPM, and Artisan commands &lt;em&gt;without&lt;/em&gt; having to have these platforms installed on your local computer. Use the following command examples from your project root, modifying them to fit your particular use case.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose run --rm composer update&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose run --rm npm run dev&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose run --rm artisan migrate&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Permissions Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter any issues with filesystem permissions while visiting your application or running a container command, try completing one of the sets of steps below.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you are using your server or local environment as the root user:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bring any container(s) down with &lt;code&gt;docker-compose down&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rename &lt;code&gt;docker-compose.root.yml&lt;/code&gt; file to &lt;code&gt;docker-compose.root.yml&lt;/code&gt;, replacing the previous one&lt;/li&gt; &#xA; &lt;li&gt;Re-build the containers by running &lt;code&gt;docker-compose build --no-cache&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you are using your server or local environment as a user that is not root:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bring any container(s) down with &lt;code&gt;docker-compose down&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;In your terminal, run &lt;code&gt;export UID=$(id -u)&lt;/code&gt; and then &lt;code&gt;export GID=$(id -g)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you see any errors about readonly variables from the above step, you can ignore them and continue&lt;/li&gt; &#xA; &lt;li&gt;Re-build the containers by running &lt;code&gt;docker-compose build --no-cache&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then, either bring back up your container network or re-run the command you were trying before, and see if that fixes it.&lt;/p&gt; &#xA;&lt;h2&gt;Persistent MySQL Storage&lt;/h2&gt; &#xA;&lt;p&gt;By default, whenever you bring down the Docker network, your MySQL data will be removed after the containers are destroyed. If you would like to have persistent data that remains after bringing containers down and back up, do the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;mysql&lt;/code&gt; folder in the project root, alongside the &lt;code&gt;nginx&lt;/code&gt; and &lt;code&gt;src&lt;/code&gt; folders.&lt;/li&gt; &#xA; &lt;li&gt;Under the mysql service in your &lt;code&gt;docker-compose.yml&lt;/code&gt; file, add the following lines:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;volumes:&#xA;  - ./mysql:/var/lib/mysql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using BrowserSync with Laravel Mix&lt;/h2&gt; &#xA;&lt;p&gt;If you want to enable the hot-reloading that comes with Laravel Mix&#39;s BrowserSync option, you&#39;ll have to follow a few small steps. First, ensure that you&#39;re using the updated &lt;code&gt;docker-compose.yml&lt;/code&gt; with the &lt;code&gt;:3000&lt;/code&gt; and &lt;code&gt;:3001&lt;/code&gt; ports open on the npm service. Then, add the following to the end of your Laravel project&#39;s &lt;code&gt;webpack.mix.js&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;.browserSync({&#xA;    proxy: &#39;site&#39;,&#xA;    open: false,&#xA;    port: 3000,&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From your terminal window at the project root, run the following command to start watching for changes with the npm container and its mapped ports:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose run --rm --service-ports npm run watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That should keep a small info pane open in your terminal (which you can exit with Ctrl + C). Visiting &lt;a href=&#34;http://localhost:3000&#34;&gt;localhost:3000&lt;/a&gt; in your browser should then load up your Laravel application with BrowserSync enabled and hot-reloading active.&lt;/p&gt; &#xA;&lt;h2&gt;MailHog&lt;/h2&gt; &#xA;&lt;p&gt;The current version of Laravel (8 as of today) uses MailHog as the default application for testing email sending and general SMTP work during local development. Using the provided Docker Hub image, getting an instance set up and ready is simple and straight-forward. The service is included in the &lt;code&gt;docker-compose.yml&lt;/code&gt; file, and spins up alongside the webserver and database services.&lt;/p&gt; &#xA;&lt;p&gt;To see the dashboard and view any emails coming through the system, visit &lt;a href=&#34;http://localhost:8025&#34;&gt;localhost:8025&lt;/a&gt; after running &lt;code&gt;docker-compose up -d site&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>p0dalirius/Awesome-RCE-techniques</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/p0dalirius/Awesome-RCE-techniques</id>
    <link href="https://github.com/p0dalirius/Awesome-RCE-techniques" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Awesome list of techniques to achieve Remote Code Execution on various apps!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome RCE techniques&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Awesome list of techniques to achieve Remote Code Execution (RCE) on various apps! &lt;br&gt; &lt;img alt=&#34;Number of RCE techniques&#34; src=&#34;https://img.shields.io/badge/techniques-10-brightgreen&#34;&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=podalirius_&#34; title=&#34;Follow&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/podalirius_?label=Podalirius&amp;amp;style=social&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/c/Podalirius_?sub_confirmation=1&#34; title=&#34;Subscribe&#34;&gt;&lt;img alt=&#34;YouTube Channel Subscribers&#34; src=&#34;https://img.shields.io/youtube/channel/subscribers/UCF_x5O7CSfr82AfNVTKOv_A?style=social&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Goal of this project&lt;/h2&gt; &#xA;&lt;p&gt;The goal of this project is to provide an OpenSource knowledge database of all the techniques to achieve Remote Code Execution (RCE) on various applications.&lt;/p&gt; &#xA;&lt;p&gt;All of these techniques also comes with a test environnement (usually a Docker image) for you to train these Remote Code Execution (RCE) techniques.&lt;/p&gt; &#xA;&lt;h2&gt;Techniques&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Content-Management-Systems-(CMS)/&#34;&gt;Content-Management-Systems-(CMS)&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Content-Management-Systems-(CMS)/Drupal/&#34;&gt;&lt;strong&gt;Drupal&lt;/strong&gt;: (0 technique)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Content-Management-Systems-(CMS)/Joomla/&#34;&gt;&lt;strong&gt;Joomla&lt;/strong&gt;: (1 technique)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Content-Management-Systems-(CMS)/Typo3/&#34;&gt;&lt;strong&gt;Typo3&lt;/strong&gt;: (1 techniques)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Content-Management-Systems-(CMS)/Wordpress/&#34;&gt;&lt;strong&gt;Wordpress&lt;/strong&gt;: (3 techniques)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Learning-Management-Systems-(LMS)/&#34;&gt;Learning-Management-Systems-(LMS)&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Content-Management-Systems-(CMS)/Moodle/&#34;&gt;&lt;strong&gt;Moodle&lt;/strong&gt;: (1 technique)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Frameworks/&#34;&gt;Frameworks&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Frameworks/JBoss/&#34;&gt;&lt;strong&gt;JBoss&lt;/strong&gt;: (1 technique)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Frameworks/JoGet/&#34;&gt;&lt;strong&gt;JoGet&lt;/strong&gt;: (1 technique)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Frameworks/Tomcat/&#34;&gt;&lt;strong&gt;Tomcat&lt;/strong&gt;: (2 techniques)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Frameworks/WildFly/&#34;&gt;&lt;strong&gt;WildFly&lt;/strong&gt;: (1 technique)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Other/&#34;&gt;Other&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Other/GiTea/&#34;&gt;&lt;strong&gt;GiTea&lt;/strong&gt;: (1 technique)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Other/Jenkins/&#34;&gt;&lt;strong&gt;Jenkins&lt;/strong&gt;: (1 technique)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Other/LimeSurvey/&#34;&gt;&lt;strong&gt;LimeSurvey&lt;/strong&gt;: (1 technique)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are welcome. Feel free to open an issue if you want to add other features.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vikas99341/K8S-pipeline</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/vikas99341/K8S-pipeline</id>
    <link href="https://github.com/vikas99341/K8S-pipeline" rel="alternate"></link>
    <summary type="html">&lt;p&gt;k8s-pipeline&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;K8S-pipeline&lt;/h1&gt; &#xA;&lt;p&gt;k8s-pipeline&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vulhub/vulhub</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/vulhub/vulhub</id>
    <link href="https://github.com/vulhub/vulhub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pre-Built Vulnerable Environments Based on Docker-Compose&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/vulhub/vulhub/master/.github/assets/logo.svg?sanitize=true&#34; alt=&#34;Vulhub&#34; height=&#34;300&#34;&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/vulhub/vulhub/raw/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/vulhub/vulhub.svg?sanitize=true&#34; alt=&#34;GitHub&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.wangan.com/vulhub&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Official-Community-blue.svg?sanitize=true&#34; alt=&#34;Official Community&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/GhMB3Z&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/485505185167179778.svg?sanitize=true&#34; alt=&#34;Chat on Discord&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.patreon.com/phith0n&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/sponsor-patreon-73d6a1.svg?sanitize=true&#34; alt=&#34;Backers and sponors on Patreon&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vulhub#backer&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/backer-opencollective-f89a76.svg?sanitize=true&#34; alt=&#34;Backers and sponors on Opencollective&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;Vulhub is an open-source collection of pre-built vulnerable docker environments. No pre-existing knowledge of docker is required, just execute two simple commands and you have a vulnerable environment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vulhub/vulhub/master/README.zh-cn.md&#34;&gt;中文版本(Chinese version)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the docker/docker-compose on Ubuntu 20.04:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install pip&#xA;curl -s https://bootstrap.pypa.io/get-pip.py | python3&#xA;&#xA;# Install the latest version docker&#xA;curl -s https://get.docker.com/ | sh&#xA;&#xA;# Run docker service&#xA;systemctl start docker&#xA;&#xA;# Install docker compose&#xA;pip install docker-compose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The installation steps of docker and docker-compose for other operating systems might be slightly different, please refer to the &lt;a href=&#34;https://docs.docker.com/&#34;&gt;docker documentation&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Download project&#xA;wget https://github.com/vulhub/vulhub/archive/master.zip -O vulhub-master.zip&#xA;unzip vulhub-master.zip&#xA;cd vulhub-master&#xA;&#xA;# Enter the directory of vulnerability/environment&#xA;cd flask/ssti&#xA;&#xA;# Compile environment&#xA;docker-compose build&#xA;&#xA;# Run environment&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is a &lt;strong&gt;README&lt;/strong&gt; document in each environment directory, please read this file for vulnerability/environment testing and usage.&lt;/p&gt; &#xA;&lt;p&gt;After the test, delete the environment with the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose down -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is recommended to use a VPS of at least 1GB memory to build a vulnerability environment. The &lt;code&gt;your-ip&lt;/code&gt; mentioned in the documentation refers to the IP address of your VPS. If you are using a virtual machine, it refers to your virtual machine IP, not the IP inside the docker container.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;All environments in this project are for testing purposes only and should not be used as a production environment!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Notice&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;To prevent permission errors, it is best to use the root user to execute the docker and docker-compose commands.&lt;/li&gt; &#xA; &lt;li&gt;Some docker images do not support running on ARM machines.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;This project relies on docker. So any error during compilation and running are thrown by docker and related programs. Please find the cause of the error by yourself first. If it is determined that the dockerfile is written incorrectly (or the code is wrong in vulhub), then submit the issue. More details please 👉&lt;a href=&#34;https://github.com/phith0n/vulhub/wiki/%E7%BC%96%E8%AF%91%E5%A4%B1%E8%B4%A5%E7%9A%84%E5%8E%9F%E5%9B%A0&#34;&gt;Common reasons for compilation failure&lt;/a&gt;, hope it can help you.&lt;/p&gt; &#xA;&lt;p&gt;For more question, please contact:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.wangan.com/vulhub&#34;&gt;Chinese Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/GhMB3Z&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/vulhub&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks for the following contributors:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vulhub/vulhub/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/vulhub/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;More contributors：&lt;a href=&#34;https://raw.githubusercontent.com/vulhub/vulhub/master/contributors.md&#34;&gt;Contributors List&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Partner&lt;/h2&gt; &#xA;&lt;p&gt;Our Partners and users:&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://www.wangan.com/vulhub&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://vulhub.org/img/sponsor/wangan.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.cvebase.com&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://vulhub.org/img/sponsor/cvebase.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.huoxian.cn&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://vulhub.org/img/sponsor/huoxian.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.chaitin.cn&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://vulhub.org/img/sponsor/chaitin.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://xianzhi.aliyun.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://vulhub.org/img/sponsor/aliyun.svg?sanitize=true&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Sponsor vulhub on patreon 🙏&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/bePatron?u=12677520&#34;&gt;&lt;img src=&#34;https://vulhub.org/img/sponsor/patreon.png&#34; width=&#34;150&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sponsor vulhub on opencollective 🙏&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://opencollective.com/vulhub#backer&#34;&gt;&lt;img src=&#34;https://opencollective.com/vulhub/backers.svg?width=138&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vulhub#sponsor&#34;&gt;&lt;img src=&#34;https://opencollective.com/vulhub/sponsors.svg?width=138&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;More &lt;a href=&#34;http://vulhub.org/#/docs/donate/&#34;&gt;Donate&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Vulhub is licensed under the MIT License. See &lt;a href=&#34;https://raw.githubusercontent.com/vulhub/vulhub/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sprintcube/docker-compose-lamp</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/sprintcube/docker-compose-lamp</id>
    <link href="https://github.com/sprintcube/docker-compose-lamp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A basic LAMP stack environment built using Docker Compose.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LAMP stack built with Docker Compose&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/43859895/141092846-905eae39-0169-4fd7-911f-9ff32c48b7e8.png&#34; alt=&#34;Landing Page&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A basic LAMP stack environment built using Docker Compose. It consists of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PHP&lt;/li&gt; &#xA; &lt;li&gt;Apache&lt;/li&gt; &#xA; &lt;li&gt;MySQL&lt;/li&gt; &#xA; &lt;li&gt;phpMyAdmin&lt;/li&gt; &#xA; &lt;li&gt;Redis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As of now, we have several different PHP versions. Use appropriate php version as needed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;5.4.x&lt;/li&gt; &#xA; &lt;li&gt;5.6.x&lt;/li&gt; &#xA; &lt;li&gt;7.1.x&lt;/li&gt; &#xA; &lt;li&gt;7.2.x&lt;/li&gt; &#xA; &lt;li&gt;7.3.x&lt;/li&gt; &#xA; &lt;li&gt;7.4.x&lt;/li&gt; &#xA; &lt;li&gt;8.0.x&lt;/li&gt; &#xA; &lt;li&gt;8.1.x&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone this repository on your local computer&lt;/li&gt; &#xA; &lt;li&gt;configure .env as needed&lt;/li&gt; &#xA; &lt;li&gt;Run the &lt;code&gt;docker-compose up -d&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/sprintcube/docker-compose-lamp.git&#xA;cd docker-compose-lamp/&#xA;cp sample.env .env&#xA;// modify sample.env as needed&#xA;docker-compose up -d&#xA;// visit localhost&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Your LAMP stack is now ready!! You can access it via &lt;code&gt;http://localhost&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration and Usage&lt;/h2&gt; &#xA;&lt;h3&gt;General Information&lt;/h3&gt; &#xA;&lt;p&gt;This Docker Stack is build for local development and not for production usage.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;This package comes with default configuration options. You can modify them by creating &lt;code&gt;.env&lt;/code&gt; file in your root directory. To make it easy, just copy the content from &lt;code&gt;sample.env&lt;/code&gt; file and update the environment variable values as per your need.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration Variables&lt;/h3&gt; &#xA;&lt;p&gt;There are following configuration variables available and you can customize them by overwritting in your own &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;PHP&lt;/h4&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;PHPVERSION&lt;/strong&gt;&lt;/em&gt; Is used to specify which PHP Version you want to use. Defaults always to latest PHP Version.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;PHP_INI&lt;/strong&gt;&lt;/em&gt; Define your custom &lt;code&gt;php.ini&lt;/code&gt; modification to meet your requirments.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Apache&lt;/h4&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;DOCUMENT_ROOT&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;It is a document root for Apache server. The default value for this is &lt;code&gt;./www&lt;/code&gt;. All your sites will go here and will be synced automatically.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;APACHE_DOCUMENT_ROOT&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Apache config file value. The default value for this is /var/www/html.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;VHOSTS_DIR&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is for virtual hosts. The default value for this is &lt;code&gt;./config/vhosts&lt;/code&gt;. You can place your virtual hosts conf files here.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure you add an entry to your system&#39;s &lt;code&gt;hosts&lt;/code&gt; file for each virtual host.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;APACHE_LOG_DIR&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This will be used to store Apache logs. The default value for this is &lt;code&gt;./logs/apache2&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Database&lt;/h4&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For Apple Silicon Users: Please select Mariadb as Database. Oracle doesn&#39;t build their SQL Containers for the arm Architecure&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;DATABASE&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Define which MySQL or MariaDB Version you would like to use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;MYSQL_INITDB_DIR&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;When a container is started for the first time files in this directory with the extensions &lt;code&gt;.sh&lt;/code&gt;, &lt;code&gt;.sql&lt;/code&gt;, &lt;code&gt;.sql.gz&lt;/code&gt; and &lt;code&gt;.sql.xz&lt;/code&gt; will be executed in alphabetical order. &lt;code&gt;.sh&lt;/code&gt; files without file execute permission are sourced rather than executed. The default value for this is &lt;code&gt;./config/initdb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;MYSQL_DATA_DIR&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is MySQL data directory. The default value for this is &lt;code&gt;./data/mysql&lt;/code&gt;. All your MySQL data files will be stored here.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;MYSQL_LOG_DIR&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This will be used to store Apache logs. The default value for this is &lt;code&gt;./logs/mysql&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Web Server&lt;/h2&gt; &#xA;&lt;p&gt;Apache is configured to run on port 80. So, you can access it via &lt;code&gt;http://localhost&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Apache Modules&lt;/h4&gt; &#xA;&lt;p&gt;By default following modules are enabled.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;rewrite&lt;/li&gt; &#xA; &lt;li&gt;headers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you want to enable more modules, just update &lt;code&gt;./bin/phpX/Dockerfile&lt;/code&gt;. You can also generate a PR and we will merge if seems good for general purpose. You have to rebuild the docker image by running &lt;code&gt;docker-compose build&lt;/code&gt; and restart the docker containers.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Connect via SSH&lt;/h4&gt; &#xA;&lt;p&gt;You can connect to web server using &lt;code&gt;docker-compose exec&lt;/code&gt; command to perform various operation on it. Use below command to login to container via ssh.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker-compose exec webserver bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;PHP&lt;/h2&gt; &#xA;&lt;p&gt;The installed version of php depends on your &lt;code&gt;.env&lt;/code&gt;file.&lt;/p&gt; &#xA;&lt;h4&gt;Extensions&lt;/h4&gt; &#xA;&lt;p&gt;By default following extensions are installed. May differ for PHP Versions &amp;lt;7.x.x&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;mysqli&lt;/li&gt; &#xA; &lt;li&gt;pdo_sqlite&lt;/li&gt; &#xA; &lt;li&gt;pdo_mysql&lt;/li&gt; &#xA; &lt;li&gt;mbstring&lt;/li&gt; &#xA; &lt;li&gt;zip&lt;/li&gt; &#xA; &lt;li&gt;intl&lt;/li&gt; &#xA; &lt;li&gt;mcrypt&lt;/li&gt; &#xA; &lt;li&gt;curl&lt;/li&gt; &#xA; &lt;li&gt;json&lt;/li&gt; &#xA; &lt;li&gt;iconv&lt;/li&gt; &#xA; &lt;li&gt;xml&lt;/li&gt; &#xA; &lt;li&gt;xmlrpc&lt;/li&gt; &#xA; &lt;li&gt;gd&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you want to install more extension, just update &lt;code&gt;./bin/webserver/Dockerfile&lt;/code&gt;. You can also generate a PR and we will merge if it seems good for general purpose. You have to rebuild the docker image by running &lt;code&gt;docker-compose build&lt;/code&gt; and restart the docker containers.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;phpMyAdmin&lt;/h2&gt; &#xA;&lt;p&gt;phpMyAdmin is configured to run on port 8080. Use following default credentials.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://localhost:8080/&#34;&gt;http://localhost:8080/&lt;/a&gt;&lt;br&gt; username: root&lt;br&gt; password: tiger&lt;/p&gt; &#xA;&lt;h2&gt;Xdebug&lt;/h2&gt; &#xA;&lt;p&gt;Xdebug comes installed by default and it&#39;s version depends on the PHP version chosen in the &lt;code&gt;&#34;.env&#34;&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Xdebug versions:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;PHP &amp;lt;= 7.3: Xdebug 2.X.X&lt;/p&gt; &#xA;&lt;p&gt;PHP &amp;gt;= 7.4: Xdebug 3.X.X&lt;/p&gt; &#xA;&lt;p&gt;To use Xdebug you need to enable the settings in the &lt;code&gt;./config/php/php.ini&lt;/code&gt; file according to the chosen version PHP.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Xdebug 2&#xA;#xdebug.remote_enable=1&#xA;#xdebug.remote_autostart=1&#xA;#xdebug.remote_connect_back=1&#xA;#xdebug.remote_host = host.docker.internal&#xA;#xdebug.remote_port=9000&#xA;&#xA;# Xdebug 3&#xA;#xdebug.mode=debug&#xA;#xdebug.start_with_request=yes&#xA;#xdebug.client_host=host.docker.internal&#xA;#xdebug.client_port=9003&#xA;#xdebug.idekey=VSCODE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Xdebug VS Code: you have to install the Xdebug extension &#34;PHP Debug&#34;. After installed, go to Debug and create the launch file so that your IDE can listen and work properly.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;VERY IMPORTANT:&lt;/strong&gt; the &lt;code&gt;pathMappings&lt;/code&gt; depends on how you have opened the folder in VS Code. Each folder has your own configurations launch, that you can view in &lt;code&gt;.vscode/launch.json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;version&#34;: &#34;0.2.0&#34;,&#xA;    &#34;configurations&#34;: [&#xA;        {&#xA;            &#34;name&#34;: &#34;Listen for Xdebug&#34;,&#xA;            &#34;type&#34;: &#34;php&#34;,&#xA;            &#34;request&#34;: &#34;launch&#34;,&#xA;            // &#34;port&#34;: 9000, // Xdebug 2&#xA;            &#34;port&#34;: 9003, // Xdebug 3&#xA;            &#34;pathMappings&#34;: {&#xA;                // &#34;/var/www/html&#34;: &#34;${workspaceFolder}/www&#34; // if you have opened VSCODE in root folder&#xA;                &#34;/var/www/html&#34;: &#34;${workspaceFolder}&#34; // if you have opened VSCODE in ./www folder&#xA;            }&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, make a breakpoint and run debug.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tip!&lt;/strong&gt; After theses configurations, you may need to restart container.&lt;/p&gt; &#xA;&lt;h2&gt;Redis&lt;/h2&gt; &#xA;&lt;p&gt;It comes with Redis. It runs on default port &lt;code&gt;6379&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We are happy if you want to create a pull request or help people with their issues. If you want to create a PR, please remember that this stack is not built for production usage, and changes should be good for general purpose and not overspecialized.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please note that we simplified the project structure from several branches for each php version, to one centralized master branch. Please create your PR against master branch.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Thank you!&lt;/p&gt; &#xA;&lt;h2&gt;Why you shouldn&#39;t use this stack unmodified in production&lt;/h2&gt; &#xA;&lt;p&gt;We want to empower developers to quickly create creative Applications. Therefore we are providing an easy to set up a local development environment for several different Frameworks and PHP Versions. In Production you should modify at a minimum the following subjects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;php handler: mod_php=&amp;gt; php-fpm&lt;/li&gt; &#xA; &lt;li&gt;secure mysql users with proper source IP limitations&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>SonarSource/docker-sonarqube</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/SonarSource/docker-sonarqube</id>
    <link href="https://github.com/SonarSource/docker-sonarqube" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐳 SonarQube in Docker&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;About this Repo&lt;/h1&gt; &#xA;&lt;p&gt;This is the Git repo of the official Docker image for &lt;a href=&#34;https://registry.hub.docker.com/_/sonarqube/&#34;&gt;SonarQube&lt;/a&gt;. See the Hub page for the full readme on how to use the Docker image and for information regarding contributing and issues.&lt;/p&gt; &#xA;&lt;p&gt;The full readme is generated over in &lt;a href=&#34;https://github.com/docker-library/docs&#34;&gt;docker-library/docs&lt;/a&gt;, specifically in &lt;a href=&#34;https://github.com/docker-library/docs/tree/master/sonarqube&#34;&gt;docker-library/docs/sonarqube&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/SonarSource/docker-sonarqube&#34;&gt;&lt;img src=&#34;https://travis-ci.org/SonarSource/docker-sonarqube.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Have Question or Feedback?&lt;/h2&gt; &#xA;&lt;p&gt;For support questions (&#34;How do I?&#34;, &#34;I got this error, why?&#34;, ...), please first read the &lt;a href=&#34;https://docs.sonarqube.org&#34;&gt;documentation&lt;/a&gt; and then head to the &lt;a href=&#34;https://community.sonarsource.com/&#34;&gt;SonarSource forum&lt;/a&gt;. There are chances that a question similar to yours has already been answered.&lt;/p&gt; &#xA;&lt;p&gt;Be aware that this forum is a community, so the standard pleasantries (&#34;Hi&#34;, &#34;Thanks&#34;, ...) are expected. And if you don&#39;t get an answer to your thread, you should sit on your hands for at least three days before bumping it. Operators are not standing by. :-)&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to see a new feature, please create a new thread in the forum &lt;a href=&#34;https://community.sonarsource.com/c/suggestions/features&#34;&gt;&#34;Suggest new features&#34;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please be aware that we are not actively looking for feature contributions. We typically accept minor improvements and bug-fixes.&lt;/p&gt; &#xA;&lt;p&gt;With that in mind, if you would like to submit a code contribution, please create a pull request for this repository. Please explain your motives to contribute this change: what problem you are trying to fix, what improvement you are trying to make.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;Copyright 2015-2020 SonarSource.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;http://www.gnu.org/licenses/lgpl.txt&#34;&gt;GNU Lesser General Public License, Version 3.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>spritsail/fivem</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/spritsail/fivem</id>
    <link href="https://github.com/spritsail/fivem" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FiveM GTA modded multiplayer server&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://hub.docker.com/r/spritsail/fivem&#34;&gt;spritsail/fivem&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://microbadger.com/images/spritsail/fivem&#34;&gt;&lt;img src=&#34;https://images.microbadger.com/badges/image/spritsail/fivem.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/spritsail/fivem&#34;&gt;&lt;img src=&#34;https://images.microbadger.com/badges/version/spritsail/fivem.svg?sanitize=true&#34; alt=&#34;Latest Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/spritsail/fivem&#34;&gt;&lt;img src=&#34;https://images.microbadger.com/badges/commit/spritsail/fivem.svg?sanitize=true&#34; alt=&#34;Git Commit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/spritsail/fivem&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/spritsail/fivem.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/spritsail/fivem&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/spritsail/fivem.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://drone.spritsail.io/spritsail/fivem&#34;&gt;&lt;img src=&#34;https://drone.spritsail.io/api/badges/spritsail/fivem/status.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This docker image allows you to run a server for FiveM, a modded GTA multiplayer program. Upon first run, the configuration is generated in the host mount for the &lt;code&gt;/config&lt;/code&gt; directory. The container should be stopped so fivem can be configured to the user requirements in the &lt;code&gt;server.cfg&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License Key&lt;/h2&gt; &#xA;&lt;p&gt;A freely obtained license key is required to use this server, which should be declared as &lt;code&gt;$LICENSE_KEY&lt;/code&gt;. A tutorial on how to obtain a license key can be found &lt;a href=&#34;https://forum.fivem.net/t/explained-how-to-make-add-a-server-key/56120&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;docker-compose&lt;/code&gt; script provided if you wish to run a couchdb server with FiveM, else use the line below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -d \&#xA;  --name FiveM \&#xA;  --restart=on-failure \&#xA;  -e LICENSE_KEY=&amp;lt;your-license-here&amp;gt; \&#xA;  -p 30120:30120 \&#xA;  -p 30120:30120/udp \&#xA;  -v /volumes/fivem:/config \&#xA;  -ti \&#xA;  spritsail/fivem&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;It is important that you use &lt;code&gt;interactive&lt;/code&gt; and &lt;code&gt;pseudo-tty&lt;/code&gt; options otherwise the container will crash on startup&lt;/em&gt; See &lt;a href=&#34;https://github.com/spritsail/fivem/issues/3&#34;&gt;issue #3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Environment Variables&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;LICENSE_KEY&lt;/code&gt; - This is a required variable for the license key needed to start the server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;RCON_PASSWORD&lt;/code&gt; - A password to use for the RCON functionality of the fxserver. If not specified, a random 16 character password is assigned. This is only used upon creation of the default configs&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NO_DEFAULT_CONFIG&lt;/code&gt; - Optional. Set to any non-zero value to disable the default exec config.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NO_LICENSE_KEY&lt;/code&gt; - Optional. Set to any non-zero length value to disable specifying the license key in the environment. Useful if your license key is in a config file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NO_ONESYNC&lt;/code&gt; - Optional. Set to any non-zero value to disable OneSync being added to the default configs.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>danielbeach/data-engineering-practice</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/danielbeach/data-engineering-practice</id>
    <link href="https://github.com/danielbeach/data-engineering-practice" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Data Engineering Practice Problems&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Data Engineering Practice Problems&lt;/h2&gt; &#xA;&lt;p&gt;One of the main obstacles of Data Engineering is the large and varied technical skills that can be required on a day-to-day basis.&lt;/p&gt; &#xA;&lt;p&gt;*** Note - If you email a link to your GitHub repo with all the completed exercises, I will send you back a free copy of my ebook Introduction to Data Engineering. ***&lt;/p&gt; &#xA;&lt;p&gt;This aim of this repository is to help you develop and learn those skills. Generally, here are the high level topics that these practice problems will cover.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python data processing.&lt;/li&gt; &#xA; &lt;li&gt;csv, flat-file, parquet, json, etc.&lt;/li&gt; &#xA; &lt;li&gt;SQL database table design.&lt;/li&gt; &#xA; &lt;li&gt;Python + Postgres, data ingestion and retrieval.&lt;/li&gt; &#xA; &lt;li&gt;PySpark&lt;/li&gt; &#xA; &lt;li&gt;Data cleansing / dirty data.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to work on the problems.&lt;/h3&gt; &#xA;&lt;p&gt;You will need two things to work effectively on most all of these problems.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Docker&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All the tools and technologies you need will be packaged into the &lt;code&gt;dockerfile&lt;/code&gt; for each exercise.&lt;/p&gt; &#xA;&lt;p&gt;For each exercise you will need to &lt;code&gt;cd&lt;/code&gt; into that folder and run the &lt;code&gt;docker build&lt;/code&gt; command, that command will be listed in the &lt;code&gt;README&lt;/code&gt; for each exercise, follow those instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Beginner Exercises&lt;/h3&gt; &#xA;&lt;h4&gt;Exercise 1 - Downloading files.&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/danielbeach/data-engineering-practice/tree/main/Exercises/Exercise-1&#34;&gt;first exercise&lt;/a&gt; tests your ability to download a number of files from an &lt;code&gt;HTTP&lt;/code&gt; source and unzip them, storing them locally with &lt;code&gt;Python&lt;/code&gt;. &lt;code&gt;cd Exercises/Exercise-1&lt;/code&gt; and see &lt;code&gt;README&lt;/code&gt; in that location for instructions.&lt;/p&gt; &#xA;&lt;h4&gt;Exercise 2 - Web Scraping + Downloading + Pandas&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/danielbeach/data-engineering-practice/tree/main/Exercises/Exercise-2&#34;&gt;second exercise&lt;/a&gt; tests your ability perform web scraping, build uris, download files, and use Pandas to do some simple cumulative actions. &lt;code&gt;cd Exercises/Exercise-2&lt;/code&gt; and see &lt;code&gt;README&lt;/code&gt; in that location for instructions.&lt;/p&gt; &#xA;&lt;h4&gt;Exercise 3 - Boto3 AWS + s3 + Python.&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/danielbeach/data-engineering-practice/tree/main/Exercises/Exercise-3&#34;&gt;third exercise&lt;/a&gt; tests a few skills. This time we will be using a popular &lt;code&gt;aws&lt;/code&gt; package called &lt;code&gt;boto3&lt;/code&gt; to try to perform a multi-step actions to download some open source &lt;code&gt;s3&lt;/code&gt; data files. &lt;code&gt;cd Exercises/Exercise-3&lt;/code&gt; and see &lt;code&gt;README&lt;/code&gt; in that location for instructions.&lt;/p&gt; &#xA;&lt;h4&gt;Exercise 4 - Convert JSON to CSV + Ragged Directories.&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/danielbeach/data-engineering-practice/tree/main/Exercises/Exercise-4&#34;&gt;fourth exercise&lt;/a&gt; focuses more file types &lt;code&gt;json&lt;/code&gt; and &lt;code&gt;csv&lt;/code&gt;, and working with them in &lt;code&gt;Python&lt;/code&gt;. You will have to traverse a ragged directory structure, finding any &lt;code&gt;json&lt;/code&gt; files and converting them to &lt;code&gt;csv&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Exercise 5 - Data Modeling for Postgres + Python.&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/danielbeach/data-engineering-practice/tree/main/Exercises/Exercise-5&#34;&gt;fifth exercise&lt;/a&gt; is going to be a little different than the rest. In this problem you will be given a number of &lt;code&gt;csv&lt;/code&gt; files. You must create a data model / schema to hold these data sets, including indexes, then create all the tables inside &lt;code&gt;Postgres&lt;/code&gt; by connecting to the database with &lt;code&gt;Python&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Intermediate Exercises&lt;/h3&gt; &#xA;&lt;h4&gt;Exercise 6 - Ingestion and Aggregation with PySpark.&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/danielbeach/data-engineering-practice/tree/main/Exercises/Exercise-6&#34;&gt;sixth exercise&lt;/a&gt; Is going to step it up a little and move onto more popular tools. In this exercise we are going to load some files using &lt;code&gt;PySpark&lt;/code&gt; and then be asked to do some basic aggregation. Best of luck!&lt;/p&gt; &#xA;&lt;h4&gt;Exercise 7 - Ingestion and Retrieval with ElasticSearch.&lt;/h4&gt; &#xA;&lt;p&gt;*** IN PROGRESS ** The &lt;a href=&#34;https://github.com/danielbeach/data-engineering-practice/tree/main/Exercises/Exercise-7&#34;&gt;seventh exercise&lt;/a&gt; Again, we are going to try a project with another popular Big Data tool, namely &lt;code&gt;ElasticSearch&lt;/code&gt;. Very different from the last project with &lt;code&gt;PySpark&lt;/code&gt;, but this exercise will require more attention to detail and fine-tuning. You will ingest a &lt;code&gt;.txt&lt;/code&gt; file into a locally running &lt;code&gt;ElasticSearch&lt;/code&gt; instance and then retrieve some information from what you just stored.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Dicksoi/Heroku</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/Dicksoi/Heroku</id>
    <link href="https://github.com/Dicksoi/Heroku" rel="alternate"></link>
    <summary type="html">&lt;p&gt;由大佬开发的加密版。本人修改为vless+ws+tls。 性能至上、可扩展性空前，目标是全场景终极协议&lt;/p&gt;&lt;hr&gt;&lt;p&gt;【金山文档】 申请Freenom域名的正确做法 &lt;a href=&#34;https://kdocs.cn/l/cmqB5kYnODzN&#34;&gt;https://kdocs.cn/l/cmqB5kYnODzN&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;【金山文档】 CloudFlare Workers 被墙解决方案 &lt;a href=&#34;https://kdocs.cn/l/cp7ppdbff6Yw&#34;&gt;https://kdocs.cn/l/cp7ppdbff6Yw&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;【金山文档】 Heroku搭建教程 &lt;a href=&#34;https://kdocs.cn/l/cuGOXoYA2DwO&#34;&gt;https://kdocs.cn/l/cuGOXoYA2DwO&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;讨论群组 &lt;a href=&#34;https://t.me/herokuvless&#34;&gt;https://t.me/herokuvless&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;v2ray-heroku&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/qq198812/Hreoku.git&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://heroku.com/deploy?template=&#34;&gt;https://heroku.com/deploy?template=&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;注意事项&lt;/h2&gt; &#xA;&lt;h3&gt;heroku上部署v2ray&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持VMess和VLESS两种协议&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 使用v2ray最新版构建&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;环境变量说明&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;名称&lt;/th&gt; &#xA;   &lt;th&gt;值&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PROTOCOL&lt;/td&gt; &#xA;   &lt;td&gt;vless&lt;br&gt;vmess（可选）&lt;/td&gt; &#xA;   &lt;td&gt;协议：vless+ws+tls或vmess+ws+tls&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UUID&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.uuidgenerator.net&#34; title=&#34;uuid在线生成器&#34;&gt;uuid在线生成器&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;用户主ID&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;CloudFlare Workers反代代码&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Workers单账户反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;addEventListener(&#xA;    &#34;fetch&#34;,event =&amp;gt; {&#xA;        let url=new URL(event.request.url);&#xA;        url.hostname=&#34;appname.herokuapp.com&#34;;&#xA;        let request=new Request(url,event.request);&#xA;        event. respondWith(&#xA;            fetch(request)&#xA;        )&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Workers单双日轮换反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const SingleDay = &#39;app0.herokuapp.com&#39;&#xA;const DoubleDay = &#39;app1.herokuapp.com&#39;&#xA;addEventListener(&#xA;    &#34;fetch&#34;,event =&amp;gt; {&#xA;    &#xA;        let nd = new Date();&#xA;        if (nd.getDate()%2) {&#xA;            host = SingleDay&#xA;        } else {&#xA;            host = DoubleDay&#xA;        }&#xA;        &#xA;        let url=new URL(event.request.url);&#xA;        url.hostname=host;&#xA;        let request=new Request(url,event.request);&#xA;        event. respondWith(&#xA;            fetch(request)&#xA;        )&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Workers每五天轮换一遍式反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const Day0 = &#39;app0.herokuapp.com&#39;&#xA;const Day1 = &#39;app1.herokuapp.com&#39;&#xA;const Day2 = &#39;app2.herokuapp.com&#39;&#xA;const Day3 = &#39;app3.herokuapp.com&#39;&#xA;const Day4 = &#39;app4.herokuapp.com&#39;&#xA;addEventListener(&#xA;    &#34;fetch&#34;,event =&amp;gt; {&#xA;    &#xA;        let nd = new Date();&#xA;        let day = nd.getDate() % 5;&#xA;        if (day === 0) {&#xA;            host = Day0&#xA;        } else if (day === 1) {&#xA;            host = Day1&#xA;        } else if (day === 2) {&#xA;            host = Day2&#xA;        } else if (day === 3){&#xA;            host = Day3&#xA;        } else if (day === 4){&#xA;            host = Day4&#xA;        } else {&#xA;            host = Day1&#xA;        }&#xA;        &#xA;        let url=new URL(event.request.url);&#xA;        url.hostname=host;&#xA;        let request=new Request(url,event.request);&#xA;        event. respondWith(&#xA;            fetch(request)&#xA;        )&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Workers一周轮换反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const Day0 = &#39;app0.herokuapp.com&#39;&#xA;const Day1 = &#39;app1.herokuapp.com&#39;&#xA;const Day2 = &#39;app2.herokuapp.com&#39;&#xA;const Day3 = &#39;app3.herokuapp.com&#39;&#xA;const Day4 = &#39;app4.herokuapp.com&#39;&#xA;const Day5 = &#39;app5.herokuapp.com&#39;&#xA;const Day6 = &#39;app6.herokuapp.com&#39;&#xA;addEventListener(&#xA;    &#34;fetch&#34;,event =&amp;gt; {&#xA;    &#xA;        let nd = new Date();&#xA;        let day = nd.getDay();&#xA;        if (day === 0) {&#xA;            host = Day0&#xA;        } else if (day === 1) {&#xA;            host = Day1&#xA;        } else if (day === 2) {&#xA;            host = Day2&#xA;        } else if (day === 3){&#xA;            host = Day3&#xA;        } else if (day === 4) {&#xA;            host = Day4&#xA;        } else if (day === 5) {&#xA;            host = Day5&#xA;        } else if (day === 6) {&#xA;            host = Day6&#xA;        } else {&#xA;            host = Day1&#xA;        }&#xA;        &#xA;        let url=new URL(event.request.url);&#xA;        url.hostname=host;&#xA;        let request=new Request(url,event.request);&#xA;        event. respondWith(&#xA;            fetch(request)&#xA;        )&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Pages单账户反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;export default {&#xA;  async fetch(request, env) {&#xA;    let url = new URL(request.url);&#xA;    if (url.pathname.startsWith(&#39;/&#39;)) {&#xA;      url.hostname = &#39;app0.herokuapp.com&#39;&#xA;      let new_request = new Request(url, request);&#xA;      return fetch(new_request);&#xA;    }&#xA;    return env.ASSETS.fetch(request);&#xA;  },&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Pages单双日轮换反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;export default {&#xA;  async fetch(request, env) {&#xA;    const day1 = &#39;app0.herokuapp.com&#39;&#xA;    const day2 = &#39;app1.herokuapp.com&#39;&#xA;    let url = new URL(request.url);&#xA;    if (url.pathname.startsWith(&#39;/&#39;)) {&#xA;      let day = new Date()&#xA;      if (day.getDay() % 2) {&#xA;        url.hostname = day1&#xA;      } else {&#xA;        url.hostname = day2&#xA;      }&#xA;      let new_request = new Request(url, request);&#xA;      return fetch(new_request);&#xA;    }&#xA;    return env.ASSETS.fetch(request);&#xA;  },&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;客户端配置&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;  - 别名: &#34;yourName&#34;&#xA;    协议: vless&#xA;    地址: yourName.workers.dev&#xA;    端口: 443&#xA;    用户id: yourUuid&#xA;    流控: xtls-rprx-direct&#xA;    加密: none&#xA;    伪装域名: yourName.workers.dev&#xA;    传输类型: ws&#xA;    路径: /&#xA;    传输层安全：tls   跳过证书验证：false&#xA;    SNI：yourName.workers.dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;特别鸣谢：Misaka、rptec、DaoChen6大佬提供脚本、教程和思路&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PowerShell/PowerShell-Docker</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/PowerShell/PowerShell-Docker</id>
    <link href="https://github.com/PowerShell/PowerShell-Docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repository for building PowerShell Docker images&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PowerShell-Docker&lt;/h1&gt; &#xA;&lt;p&gt;These &lt;code&gt;Dockerfile&lt;/code&gt;s enable running PowerShell in a container for each Linux distribution we support.&lt;/p&gt; &#xA;&lt;p&gt;This requires Docker 17.05 or newer. It also expects you to be able to run Docker without &lt;code&gt;sudo&lt;/code&gt;. Please follow &lt;a href=&#34;https://docs.docker.com/engine/installation/&#34;&gt;Docker&#39;s official instructions&lt;/a&gt; to install Docker correctly.&lt;/p&gt; &#xA;&lt;h2&gt;Release&lt;/h2&gt; &#xA;&lt;p&gt;The release containers derive from the official distribution image, such as &lt;code&gt;centos:7&lt;/code&gt;, then install dependencies, and finally install the PowerShell package.&lt;/p&gt; &#xA;&lt;p&gt;These containers live at &lt;a href=&#34;https://hub.docker.com/r/microsoft/powershell/&#34;&gt;hub.docker.com/r/microsoft/powershell&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;At about 440 megabytes, they are decently minimal, with their size being the sum of the base image (200 megabytes) plus the uncompressed package (120 megabytes), and about 120 megabytes of .NET Core and bootstrapping dependencies.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;The Dockerfiles in the community folder were contributed by the community and are not yet officially supported.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;To run PowerShell from using a container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ docker run -it mcr.microsoft.com/powershell&#xA;Unable to find image &#39;mcr.microsoft.com/powershell:latest&#39; locally&#xA;latest: Pulling from mcr.microsoft.com/powershell&#xA;cad964aed91d: Already exists&#xA;3a80a22fea63: Already exists&#xA;50de990d7957: Already exists&#xA;61e032b8f2cb: Already exists&#xA;9f03ce1741bf: Already exists&#xA;adf6ad28fa0e: Pull complete&#xA;10db13a8ca02: Pull complete&#xA;75bdb54ff5ae: Pull complete&#xA;Digest: sha256:92c79c5fcdaf3027626643aef556344b8b4cbdaccf8443f543303319949c7f3a&#xA;Status: Downloaded newer image for mcr.microsoft.com/powershell:latest&#xA;PowerShell&#xA;Copyright (c) Microsoft Corporation. All rights reserved.&#xA;&#xA;PS /&amp;gt; Write-Host &#34;Hello, World!&#34;&#xA;Hello, World!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/PowerShell/PowerShell-Docker/wiki/Known-Issues&#34;&gt;Known Issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Developing and Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://github.com/PowerShell/PowerShell/tree/master/.github/CONTRIBUTING.md&#34;&gt;Contribution Guide&lt;/a&gt; for general information about how to develop and contribute.&lt;/p&gt; &#xA;&lt;p&gt;For information specific to &lt;code&gt;PowerShell-Docker&lt;/code&gt; see &lt;a href=&#34;https://github.com/PowerShell/PowerShell-Docker/raw/master/docs/development.md&#34;&gt;Development&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have any problems, please consult the &lt;a href=&#34;https://github.com/PowerShell/PowerShell/tree/master/docs/KNOWNISSUES.md&#34;&gt;known issues&lt;/a&gt;, developer [FAQ][], and &lt;a href=&#34;https://github.com/PowerShell/PowerShell/issues&#34;&gt;GitHub issues&lt;/a&gt;. If you do not see your problem captured, please file a &lt;a href=&#34;https://github.com/PowerShell/PowerShell/issues/new&#34;&gt;new issue&lt;/a&gt; and follow the provided template. If you are developing .NET Core C# applications targeting PowerShell Core, please &lt;a href=&#34;https://github.com/PowerShell/PowerShell/tree/master/docs/FAQ.md#where-do-i-get-the-powershell-core-sdk-package&#34;&gt;check out our FAQ&lt;/a&gt; to learn more about the PowerShell SDK NuGet package.&lt;/p&gt; &#xA;&lt;p&gt;Also make sure to check out our &lt;a href=&#34;https://github.com/powershell/powershell-rfc&#34;&gt;PowerShell-RFC repository&lt;/a&gt; for request-for-comments (RFC) documents to submit and give comments on proposed and future designs.&lt;/p&gt; &#xA;&lt;h2&gt;Legal and Licensing&lt;/h2&gt; &#xA;&lt;p&gt;PowerShell is licensed under the &lt;a href=&#34;https://github.com/PowerShell/PowerShell/tree/master/LICENSE.txt&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Windows Docker Files and Images&lt;/h3&gt; &#xA;&lt;p&gt;License: By requesting and using the Container OS Image for Windows containers, you acknowledge, understand, and consent to the Supplemental License Terms available on Docker hub:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/microsoft/windowsservercore/&#34;&gt;Windows Server Core&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/microsoft/nanoserver/&#34;&gt;Nano Server&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Telemetry&lt;/h3&gt; &#xA;&lt;p&gt;By default, PowerShell collects the OS description and the version of PowerShell (equivalent to &lt;code&gt;$PSVersionTable.OS&lt;/code&gt; and &lt;code&gt;$PSVersionTable.GitCommitId&lt;/code&gt;) using &lt;a href=&#34;https://azure.microsoft.com/en-us/services/application-insights/&#34;&gt;Application Insights&lt;/a&gt;. To opt-out of sending telemetry, create an environment variable called &lt;code&gt;POWERSHELL_TELEMETRY_OPTOUT&lt;/code&gt; set to a value of &lt;code&gt;1&lt;/code&gt; before starting PowerShell from the installed location. The telemetry we collect fall under the &lt;a href=&#34;https://privacy.microsoft.com/en-us/privacystatement/&#34;&gt;Microsoft Privacy Statement&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Governance&lt;/h2&gt; &#xA;&lt;p&gt;Governance policy for PowerShell project is described &lt;a href=&#34;https://github.com/PowerShell/PowerShell/raw/master/docs/community/governance.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/tree/master/./CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;http://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;http://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>linuxserver/docker-code-server</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/linuxserver/docker-code-server</id>
    <link href="https://github.com/linuxserver/docker-code-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://linuxserver.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver_medium.png&#34; alt=&#34;linuxserver.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34; title=&#34;all the things you can do with our containers including How-To guides, opinions and much more!&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Blog&#34; alt=&#34;Blog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/YWrKVTn&#34; title=&#34;realtime support / chat with the community and the team.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/354974912613449730.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Discord&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discourse.linuxserver.io&#34; title=&#34;post on our community forum.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/https/discourse.linuxserver.io/topics.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=discourse&#34; alt=&#34;Discourse&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fleet.linuxserver.io&#34; title=&#34;an online web interface which displays all of our maintained images.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Fleet&#34; alt=&#34;Fleet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver&#34; title=&#34;view the source for all of our repositories.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub&amp;amp;logo=github&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/linuxserver&#34; title=&#34;please consider helping us by either donating or contributing to our budget&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/all/linuxserver.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Supporters&amp;amp;logo=open%20collective&#34; alt=&#34;Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://linuxserver.io&#34;&gt;LinuxServer.io&lt;/a&gt; team brings you another container release featuring:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;regular and timely application updates&lt;/li&gt; &#xA; &lt;li&gt;easy user mappings (PGID, PUID)&lt;/li&gt; &#xA; &lt;li&gt;custom base image with s6 overlay&lt;/li&gt; &#xA; &lt;li&gt;weekly base OS updates with common layers across the entire LinuxServer.io ecosystem to minimise space usage, down time and bandwidth&lt;/li&gt; &#xA; &lt;li&gt;regular security updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Find us at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34;&gt;Blog&lt;/a&gt; - all the things you can do with our containers including How-To guides, opinions and much more!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/YWrKVTn&#34;&gt;Discord&lt;/a&gt; - realtime support / chat with the community and the team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discourse.linuxserver.io&#34;&gt;Discourse&lt;/a&gt; - post on our community forum.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fleet.linuxserver.io&#34;&gt;Fleet&lt;/a&gt; - an online web interface which displays all of our maintained images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linuxserver&#34;&gt;GitHub&lt;/a&gt; - view the source for all of our repositories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opencollective.com/linuxserver&#34;&gt;Open Collective&lt;/a&gt; - please consider helping us by either donating or contributing to our budget&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/linuxserver/docker-code-server&#34;&gt;linuxserver/code-server&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scarf.sh/gateway/linuxserver-ci/docker/linuxserver%2Fcode-server&#34;&gt;&lt;img src=&#34;https://scarf.sh/installs-badge/linuxserver-ci/linuxserver%2Fcode-server?color=94398d&amp;amp;label-color=555555&amp;amp;logo-color=ffffff&amp;amp;style=for-the-badge&amp;amp;package-type=docker&#34; alt=&#34;Scarf.io pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-code-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/linuxserver/docker-code-server.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-code-server/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/linuxserver/docker-code-server.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-code-server/packages&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub%20Package&amp;amp;logo=github&#34; alt=&#34;GitHub Package Repository&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitlab.com/linuxserver.io/docker-code-server/container_registry&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitLab%20Registry&amp;amp;logo=gitlab&#34; alt=&#34;GitLab Container Registry&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/linuxserver.io/code-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Quay.io&#34; alt=&#34;Quay.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/code-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/linuxserver/code-server.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/code-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/linuxserver/code-server.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=stars&amp;amp;logo=docker&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.linuxserver.io/job/Docker-Pipeline-Builders/job/docker-code-server/job/master/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build?labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;jobUrl=https%3A%2F%2Fci.linuxserver.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-code-server%2Fjob%2Fmaster%2F&amp;amp;logo=jenkins&#34; alt=&#34;Jenkins Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci-tests.linuxserver.io/linuxserver/code-server/latest/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=CI&amp;amp;query=CI&amp;amp;url=https%3A%2F%2Fci-tests.linuxserver.io%2Flinuxserver%2Fcode-server%2Flatest%2Fci-status.yml&#34; alt=&#34;LSIO CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://coder.com&#34;&gt;Code-server&lt;/a&gt; is VS Code running on a remote server, accessible through the browser.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Code on your Chromebook, tablet, and laptop with a consistent dev environment.&lt;/li&gt; &#xA; &lt;li&gt;If you have a Windows or Mac workstation, more easily develop for Linux.&lt;/li&gt; &#xA; &lt;li&gt;Take advantage of large cloud servers to speed up tests, compilations, downloads, and more.&lt;/li&gt; &#xA; &lt;li&gt;Preserve battery life when you&#39;re on the go.&lt;/li&gt; &#xA; &lt;li&gt;All intensive computation runs on your server.&lt;/li&gt; &#xA; &lt;li&gt;You&#39;re no longer running excess instances of Chrome.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://coder.com&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/code-server-banner.png&#34; alt=&#34;code-server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Architectures&lt;/h2&gt; &#xA;&lt;p&gt;We utilise the docker manifest for multi-platform awareness. More information is available from docker &lt;a href=&#34;https://github.com/docker/distribution/raw/master/docs/spec/manifest-v2-2.md#manifest-list&#34;&gt;here&lt;/a&gt; and our announcement &lt;a href=&#34;https://blog.linuxserver.io/2019/02/21/the-lsio-pipeline-project/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Simply pulling &lt;code&gt;lscr.io/linuxserver/code-server:latest&lt;/code&gt; should retrieve the correct image for your arch, but you can also pull specific arch images via tags.&lt;/p&gt; &#xA;&lt;p&gt;The architectures supported by this image are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Tag&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86-64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;amd64-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arm64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;arm64v8-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;armhf&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;arm32v7-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Version Tags&lt;/h2&gt; &#xA;&lt;p&gt;This image provides various versions that are available via tags. Please read the descriptions carefully and exercise caution when using unstable or development tags.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tag&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;latest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Stable releases&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;focal&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;DEPRECATED (no longer updated, &lt;code&gt;latest&lt;/code&gt; is rebased on focal) - Stable releases, based on Ubuntu Focal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;development&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;DEPRECATED (no longer updated) - Prereleases from their GitHub&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Application Setup&lt;/h2&gt; &#xA;&lt;p&gt;Access the webui at &lt;code&gt;http://&amp;lt;your-ip&amp;gt;:8443&lt;/code&gt;. For github integration, drop your ssh key in to &lt;code&gt;/config/.ssh&lt;/code&gt;. Then open a terminal from the top menu and set your github username and email via the following commands&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git config --global user.name &#34;username&#34;&#xA;git config --global user.email &#34;email address&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Hashed code-server password&lt;/h3&gt; &#xA;&lt;p&gt;How to create the &lt;a href=&#34;https://github.com/cdr/code-server/raw/master/docs/FAQ.md#can-i-store-my-password-hashed&#34;&gt;hashed password&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Here are some example snippets to help you get started creating a container.&lt;/p&gt; &#xA;&lt;h3&gt;docker-compose (recommended, &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;version: &#34;2.1&#34;&#xA;services:&#xA;  code-server:&#xA;    image: lscr.io/linuxserver/code-server:latest&#xA;    container_name: code-server&#xA;    environment:&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      - TZ=Europe/London&#xA;      - PASSWORD=password #optional&#xA;      - HASHED_PASSWORD= #optional&#xA;      - SUDO_PASSWORD=password #optional&#xA;      - SUDO_PASSWORD_HASH= #optional&#xA;      - PROXY_DOMAIN=code-server.my.domain #optional&#xA;      - DEFAULT_WORKSPACE=/config/workspace #optional&#xA;    volumes:&#xA;      - /path/to/appdata/config:/config&#xA;    ports:&#xA;      - 8443:8443&#xA;    restart: unless-stopped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;docker cli (&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/cli/&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name=code-server \&#xA;  -e PUID=1000 \&#xA;  -e PGID=1000 \&#xA;  -e TZ=Europe/London \&#xA;  -e PASSWORD=password `#optional` \&#xA;  -e HASHED_PASSWORD= `#optional` \&#xA;  -e SUDO_PASSWORD=password `#optional` \&#xA;  -e SUDO_PASSWORD_HASH= `#optional` \&#xA;  -e PROXY_DOMAIN=code-server.my.domain `#optional` \&#xA;  -e DEFAULT_WORKSPACE=/config/workspace `#optional` \&#xA;  -p 8443:8443 \&#xA;  -v /path/to/appdata/config:/config \&#xA;  --restart unless-stopped \&#xA;  lscr.io/linuxserver/code-server:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Parameters&lt;/h2&gt; &#xA;&lt;p&gt;Container images are configured using parameters passed at runtime (such as those above). These parameters are separated by a colon and indicate &lt;code&gt;&amp;lt;external&amp;gt;:&amp;lt;internal&amp;gt;&lt;/code&gt; respectively. For example, &lt;code&gt;-p 8080:80&lt;/code&gt; would expose port &lt;code&gt;80&lt;/code&gt; from inside the container to be accessible from the host&#39;s IP on port &lt;code&gt;8080&lt;/code&gt; outside the container.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 8443&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;web gui&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PUID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for UserID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PGID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for GroupID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e TZ=Europe/London&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a timezone to use EG Europe/London&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PASSWORD=password&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optional web gui password, if &lt;code&gt;PASSWORD&lt;/code&gt; or &lt;code&gt;HASHED_PASSWORD&lt;/code&gt; is not provided, there will be no auth.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e HASHED_PASSWORD=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optional web gui password, overrides &lt;code&gt;PASSWORD&lt;/code&gt;, instructions on how to create it is below.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e SUDO_PASSWORD=password&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If this optional variable is set, user will have sudo access in the code-server terminal with the specified password.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e SUDO_PASSWORD_HASH=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optionally set sudo password via hash (takes priority over &lt;code&gt;SUDO_PASSWORD&lt;/code&gt; var). Format is &lt;code&gt;$type$salt$hashed&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PROXY_DOMAIN=code-server.my.domain&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If this optional variable is set, this domain will be proxied for subdomain proxying. See &lt;a href=&#34;https://github.com/cdr/code-server/raw/master/docs/FAQ.md#sub-domains&#34;&gt;Documentation&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DEFAULT_WORKSPACE=/config/workspace&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If this optional variable is set, code-server will open this directory by default&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Contains all relevant configuration files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Environment variables from files (Docker secrets)&lt;/h2&gt; &#xA;&lt;p&gt;You can set any environment variable from a file by using a special prepend &lt;code&gt;FILE__&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;-e FILE__PASSWORD=/run/secrets/mysecretpassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will set the environment variable &lt;code&gt;PASSWORD&lt;/code&gt; based on the contents of the &lt;code&gt;/run/secrets/mysecretpassword&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Umask for running applications&lt;/h2&gt; &#xA;&lt;p&gt;For all of our images we provide the ability to override the default umask settings for services started within the containers using the optional &lt;code&gt;-e UMASK=022&lt;/code&gt; setting. Keep in mind umask is not chmod it subtracts from permissions based on it&#39;s value it does not add. Please read up &lt;a href=&#34;https://en.wikipedia.org/wiki/Umask&#34;&gt;here&lt;/a&gt; before asking for support.&lt;/p&gt; &#xA;&lt;h2&gt;User / Group Identifiers&lt;/h2&gt; &#xA;&lt;p&gt;When using volumes (&lt;code&gt;-v&lt;/code&gt; flags) permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user &lt;code&gt;PUID&lt;/code&gt; and group &lt;code&gt;PGID&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ensure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.&lt;/p&gt; &#xA;&lt;p&gt;In this instance &lt;code&gt;PUID=1000&lt;/code&gt; and &lt;code&gt;PGID=1000&lt;/code&gt;, to find yours use &lt;code&gt;id user&lt;/code&gt; as below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ id username&#xA;    uid=1000(dockeruser) gid=1000(dockergroup) groups=1000(dockergroup)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Mods&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mods.linuxserver.io/?mod=code-server&#34; title=&#34;view available mods for this container.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=code-server&amp;amp;query=%24.mods%5B%27code-server%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Mods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mods.linuxserver.io/?mod=universal&#34; title=&#34;view available universal mods.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=universal&amp;amp;query=%24.mods%5B%27universal%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Universal Mods&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We publish various &lt;a href=&#34;https://github.com/linuxserver/docker-mods&#34;&gt;Docker Mods&lt;/a&gt; to enable additional functionality within the containers. The list of Mods available for this image (if any) as well as universal mods that can be applied to any one of our images can be accessed via the dynamic badges above.&lt;/p&gt; &#xA;&lt;h2&gt;Support Info&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shell access whilst the container is running: &lt;code&gt;docker exec -it code-server /bin/bash&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To monitor the logs of the container in realtime: &lt;code&gt;docker logs -f code-server&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;container version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; code-server&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;image version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; lscr.io/linuxserver/code-server:latest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updating Info&lt;/h2&gt; &#xA;&lt;p&gt;Most of our images are static, versioned, and require an image update and container recreation to update the app inside. With some exceptions (ie. nextcloud, plex), we do not recommend or support updating apps inside the container. Please consult the &lt;a href=&#34;https://raw.githubusercontent.com/linuxserver/docker-code-server/master/#application-setup&#34;&gt;Application Setup&lt;/a&gt; section above to see if it is recommended for the image.&lt;/p&gt; &#xA;&lt;p&gt;Below are the instructions for updating containers:&lt;/p&gt; &#xA;&lt;h3&gt;Via Docker Compose&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update all images: &lt;code&gt;docker-compose pull&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single image: &lt;code&gt;docker-compose pull code-server&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Let compose update all containers as necessary: &lt;code&gt;docker-compose up -d&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single container: &lt;code&gt;docker-compose up -d code-server&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Docker Run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update the image: &lt;code&gt;docker pull lscr.io/linuxserver/code-server:latest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stop the running container: &lt;code&gt;docker stop code-server&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Delete the container: &lt;code&gt;docker rm code-server&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your &lt;code&gt;/config&lt;/code&gt; folder and settings will be preserved)&lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Watchtower auto-updater (only use if you don&#39;t remember the original parameters)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pull the latest image at its tag and replace it with the same env variables in one run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm \&#xA;-v /var/run/docker.sock:/var/run/docker.sock \&#xA;containrrr/watchtower \&#xA;--run-once code-server&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We do not endorse the use of Watchtower as a solution to automated updates of existing Docker containers. In fact we generally discourage automated updates. However, this is a useful tool for one-time manual updates of containers where you have forgotten the original parameters. In the long term, we highly recommend using &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;Docker Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Image Update Notifications - Diun (Docker Image Update Notifier)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We recommend &lt;a href=&#34;https://crazymax.dev/diun/&#34;&gt;Diun&lt;/a&gt; for update notifications. Other tools that automatically update containers unattended are not recommended or supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building locally&lt;/h2&gt; &#xA;&lt;p&gt;If you want to make local modifications to these images for development purposes or just to customize the logic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/linuxserver/docker-code-server.git&#xA;cd docker-code-server&#xA;docker build \&#xA;  --no-cache \&#xA;  --pull \&#xA;  -t lscr.io/linuxserver/code-server:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ARM variants can be built on x86_64 hardware using &lt;code&gt;multiarch/qemu-user-static&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --privileged multiarch/qemu-user-static:register --reset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once registered you can define the dockerfile to use with &lt;code&gt;-f Dockerfile.aarch64&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.02.22:&lt;/strong&gt; - Install using the official tarballs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.12.21:&lt;/strong&gt; - Add &lt;code&gt;install-extension&lt;/code&gt; as a helper for mods to install extensions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;06.12.21:&lt;/strong&gt; - Add &lt;code&gt;DEFAULT_WORKSPACE&lt;/code&gt; env var.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.11.21:&lt;/strong&gt; - Rebase to Ubuntu focal.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16.09.21:&lt;/strong&gt; - Fix slow &lt;code&gt;chown&lt;/code&gt; on large workspace (contents of workspace folder no longer chowned).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;11.07.21:&lt;/strong&gt; - Bump node to 14 to fix builds&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;08.05.21:&lt;/strong&gt; - Fix doc link&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;04.02.20:&lt;/strong&gt; - Allow setting gui password via hash using env var &lt;code&gt;HASHED_PASSWORD&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.12.20:&lt;/strong&gt; - Allow setting sudo password via hash using env var &lt;code&gt;SUDO_PASSWORD_HASH&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.05.20:&lt;/strong&gt; - Add --domain-proxy support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;21.05.20:&lt;/strong&gt; - Shrink images, install via yarn, fix arm32v7 build.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;18.05.20:&lt;/strong&gt; - Switch to multi-arch images, install via npm.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.04.20:&lt;/strong&gt; - Update start arguments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.04.20:&lt;/strong&gt; - Structural changes required for v3.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;17.01.20:&lt;/strong&gt; - Fix artifact url retrieval from github.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;24.10.19:&lt;/strong&gt; - Upgrade to v2 builds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;28.09.19:&lt;/strong&gt; - Update project logo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;21.09.19:&lt;/strong&gt; - Add development builds/tag.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.07.19:&lt;/strong&gt; - Add optional sudo access.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.07.19:&lt;/strong&gt; - Add nano.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;24.06.19:&lt;/strong&gt; - Initial Release.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>techno-tim/launchpad</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/techno-tim/launchpad</id>
    <link href="https://github.com/techno-tim/launchpad" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of quick starters for ansible, kubernetes, docker, linux, windows, and more. Great for HomeLabs!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;launchpad 🚀&lt;/h1&gt; &#xA;&lt;h2&gt;Info&lt;/h2&gt; &#xA;&lt;p&gt;A collection of quick starters for ansible, kubernetes, docker, linux, windows, and more. Great for HomeLabs, learning, and automation!&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t forget to ⭐ this repo and fork it too! 👆&lt;/p&gt; &#xA;&lt;p&gt;See each folder for details 📁&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Created by &lt;a href=&#34;https://technotim.live&#34;&gt;TechnoTim&lt;/a&gt; and updated by the community with 💛&lt;/p&gt; &#xA;&lt;p&gt;► YouTube &lt;a href=&#34;https://www.youtube.com/technotimlive&#34;&gt;https://www.youtube.com/technotimlive&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;► Twitch &lt;a href=&#34;https://www.twitch.tv/TechnoTim&#34;&gt;https://www.twitch.tv/TechnoTim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;► Twitter &lt;a href=&#34;https://twitter.com/TechnoTimLive&#34;&gt;https://twitter.com/TechnoTimLive&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;► Discord &lt;a href=&#34;https://l.technotim.live/discord&#34;&gt;https://l.technotim.live/discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;► GitHub &lt;a href=&#34;https://github.com/timothystewart6&#34;&gt;https://github.com/timothystewart6&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>docker-library/python</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/docker-library/python</id>
    <link href="https://github.com/docker-library/python" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker Official Image packaging for Python&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://github.com/docker-library/python&#34;&gt;https://github.com/docker-library/python&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;Maintained by: &lt;a href=&#34;https://github.com/docker-library/python&#34;&gt;the Docker Community&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;This is the Git repo of the &lt;a href=&#34;https://github.com/docker-library/official-images#what-are-official-images&#34;&gt;Docker &#34;Official Image&#34;&lt;/a&gt; for &lt;a href=&#34;https://hub.docker.com/_/python/&#34;&gt;&lt;code&gt;python&lt;/code&gt;&lt;/a&gt; (not to be confused with any official &lt;code&gt;python&lt;/code&gt; image provided by &lt;code&gt;python&lt;/code&gt; upstream). See &lt;a href=&#34;https://hub.docker.com/_/python/&#34;&gt;the Docker Hub page&lt;/a&gt; for the full readme on how to use this Docker image and for information regarding contributing and issues.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://hub.docker.com/_/python/&#34;&gt;full image description on Docker Hub&lt;/a&gt; is generated/maintained over in &lt;a href=&#34;https://github.com/docker-library/docs&#34;&gt;the docker-library/docs repository&lt;/a&gt;, specifically in &lt;a href=&#34;https://github.com/docker-library/docs/tree/master/python&#34;&gt;the &lt;code&gt;python&lt;/code&gt; directory&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;See a change merged here that doesn&#39;t show up on Docker Hub yet?&lt;/h2&gt; &#xA;&lt;p&gt;For more information about the full official images change lifecycle, see &lt;a href=&#34;https://github.com/docker-library/faq#an-images-source-changed-in-git-now-what&#34;&gt;the &#34;An image&#39;s source changed in Git, now what?&#34; FAQ entry&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For outstanding &lt;code&gt;python&lt;/code&gt; image PRs, check &lt;a href=&#34;https://github.com/docker-library/official-images/labels/library%2Fpython&#34;&gt;PRs with the &#34;library/python&#34; label on the official-images repository&lt;/a&gt;. For the current &#34;source of truth&#34; for &lt;a href=&#34;https://hub.docker.com/_/python/&#34;&gt;&lt;code&gt;python&lt;/code&gt;&lt;/a&gt;, see &lt;a href=&#34;https://github.com/docker-library/official-images/raw/master/library/python&#34;&gt;the &lt;code&gt;library/python&lt;/code&gt; file in the official-images repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker-library/python/actions?query=workflow%3A%22GitHub+CI%22+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/docker-library/python/GitHub%20CI/master?label=GitHub%20CI&#34; alt=&#34;build status badge&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/update.sh/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/update.sh/job/python.svg?label=Automated%20update.sh&#34; alt=&#34;build status badge&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Build&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Status&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Badges&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;(per-arch)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/amd64/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/amd64/job/python.svg?label=amd64&#34; alt=&#34;amd64 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/arm32v5/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/arm32v5/job/python.svg?label=arm32v5&#34; alt=&#34;arm32v5 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/arm32v6/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/arm32v6/job/python.svg?label=arm32v6&#34; alt=&#34;arm32v6 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/arm32v7/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/arm32v7/job/python.svg?label=arm32v7&#34; alt=&#34;arm32v7 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/arm64v8/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/arm64v8/job/python.svg?label=arm64v8&#34; alt=&#34;arm64v8 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/i386/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/i386/job/python.svg?label=i386&#34; alt=&#34;i386 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/mips64le/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/mips64le/job/python.svg?label=mips64le&#34; alt=&#34;mips64le build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/ppc64le/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/ppc64le/job/python.svg?label=ppc64le&#34; alt=&#34;ppc64le build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/s390x/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/s390x/job/python.svg?label=s390x&#34; alt=&#34;s390x build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/windows-amd64/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/windows-amd64/job/python.svg?label=windows-amd64&#34; alt=&#34;windows-amd64 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/put-shared/job/light/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/put-shared/job/light/job/python.svg?label=put-shared&#34; alt=&#34;put-shared build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- THIS FILE IS GENERATED BY https://github.com/docker-library/docs/blob/master/generate-repo-stub-readme.sh --&gt;</summary>
  </entry>
  <entry>
    <title>nocodb/nocodb-seed-heroku</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/nocodb/nocodb-seed-heroku</id>
    <link href="https://github.com/nocodb/nocodb-seed-heroku" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;heroku&lt;/h1&gt; &#xA;&lt;h2&gt;1-Click Deploy&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34; width=&#34;250px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://render.com/deploy?repo=https://github.com/nocodb/nocodb-seed-heroku&#34;&gt;&lt;img src=&#34;https://render.com/images/deploy-to-render-button.svg?sanitize=true&#34; alt=&#34;Deploy to Render&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.runx.dev/deploy-with-aws?url=https%3A%2F%2Fgithub.com%2Fnocodb%2Fnocodb-seed-heroku%2Fblob%2Fmain%2Fopta.yaml&amp;amp;name=NocoDB&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/run-x/opta/main/assets/deploy-to-aws-using-opta.svg?sanitize=true&#34; alt=&#34;Deploy&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dunglas/symfony-docker</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/dunglas/symfony-docker</id>
    <link href="https://github.com/dunglas/symfony-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Docker-based installer and runtime for Symfony. Install: download and `docker-compose up`.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Symfony Docker&lt;/h1&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;-based installer and runtime for the &lt;a href=&#34;https://symfony.com&#34;&gt;Symfony&lt;/a&gt; web framework, with full &lt;a href=&#34;https://symfony.com/doc/current/weblink.html&#34;&gt;HTTP/2&lt;/a&gt;, HTTP/3 and HTTPS support.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/dunglas/symfony-docker/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If not already done, &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;install Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;docker-compose build --pull --no-cache&lt;/code&gt; to build fresh images&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;docker-compose up&lt;/code&gt; (the logs will be displayed in the current shell)&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;https://localhost&lt;/code&gt; in your favorite web browser and &lt;a href=&#34;https://stackoverflow.com/a/15076602/1352334&#34;&gt;accept the auto-generated TLS certificate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;docker-compose down --remove-orphans&lt;/code&gt; to stop the Docker containers.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Production, development and CI ready&lt;/li&gt; &#xA; &lt;li&gt;Automatic HTTPS (in dev and in prod!)&lt;/li&gt; &#xA; &lt;li&gt;HTTP/2, HTTP/3 and &lt;a href=&#34;https://symfony.com/doc/current/web_link.html&#34;&gt;Preload&lt;/a&gt; support&lt;/li&gt; &#xA; &lt;li&gt;Built-in &lt;a href=&#34;https://symfony.com/doc/current/mercure.html&#34;&gt;Mercure&lt;/a&gt; hub&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vulcain.rocks&#34;&gt;Vulcain&lt;/a&gt; support&lt;/li&gt; &#xA; &lt;li&gt;Just 2 services (PHP FPM and Caddy server)&lt;/li&gt; &#xA; &lt;li&gt;Super-readable configuration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Enjoy!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Docs&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/build.md&#34;&gt;Build options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/existing-project.md&#34;&gt;Using Symfony Docker with an existing project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/extra-services.md&#34;&gt;Support for extra services&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/production.md&#34;&gt;Deploying in production&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/xdebug.md&#34;&gt;Installing Xdebug&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/makefile.md&#34;&gt;Using a Makefile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/troubleshooting.md&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Created by &lt;a href=&#34;https://dunglas.fr&#34;&gt;Kévin Dunglas&lt;/a&gt;, co-maintained by &lt;a href=&#34;https://twitter.com/maxhelias&#34;&gt;Maxime Helias&lt;/a&gt; and sponsored by &lt;a href=&#34;https://les-tilleuls.coop&#34;&gt;Les-Tilleuls.coop&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gd1214b/okteto-debain-desktop</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/gd1214b/okteto-debain-desktop</id>
    <link href="https://github.com/gd1214b/okteto-debain-desktop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An Debain desktop for Okteto&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;okteto-debain-desktop&lt;/h1&gt; &#xA;&lt;p&gt;教程：&lt;a href=&#34;https://blog.gd1214b.icu/post/90HZMOqyO/&#34;&gt;https://blog.gd1214b.icu/post/90HZMOqyO/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>developeranaz/Ubuntu-Desktop-noVNC-Heroku-VPS</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/developeranaz/Ubuntu-Desktop-noVNC-Heroku-VPS</id>
    <link href="https://github.com/developeranaz/Ubuntu-Desktop-noVNC-Heroku-VPS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ubuntu-Desktop-noVNC-Heroku-VPS serves docker VPS via heroku web and noVNC&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ubuntu-Desktop-noVNC-Heroku-VPS (EXPERIMENTAL)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developeranaz.github.io/Ubuntu-Desktop-noVNC-Heroku-VPS/random.html&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ubuntu-Desktop-noVNC-Heroku-VPS serves docker VPS via heroku web and noVNC&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/developeranaz/Ubuntu-Desktop-noVNC-Heroku-VPS/raw/main/vncimgs/Screenshot_20210519-094834.jpg&#34; alt=&#34;1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/developeranaz/Ubuntu-Desktop-noVNC-Heroku-VPS/raw/main/vncimgs/Screenshot_20210519_104452_com.brave.browser_nightly.jpg&#34; alt=&#34;2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/developeranaz/Ubuntu-Desktop-noVNC-Heroku-VPS/raw/main/vncimgs/Screenshot_20210519-094825.jpg&#34; alt=&#34;3&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s New&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Modern novnc.&lt;/li&gt; &#xA; &lt;li&gt;Mobile Browser compatability.&lt;/li&gt; &#xA; &lt;li&gt;Remote scaling and local scaling available.&lt;/li&gt; &#xA; &lt;li&gt;Mouse&lt;/li&gt; &#xA; &lt;li&gt;Keyboard&lt;/li&gt; &#xA; &lt;li&gt;Browser installed (FALKON BROWSER)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This is Just a recreated version Now added with Mordern VNC&lt;/p&gt; &#xA;&lt;p&gt;NOTE : Heroku can&#39;t handle a full machine&#39;s workload.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Don&#39;t post issues this repository is full of issues i can&#39;t fix them.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developeranaz.github.io/Ubuntu-Desktop-noVNC-Heroku-VPS/random.html&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>udacity/cd0354-monolith-to-microservices-exercises</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/udacity/cd0354-monolith-to-microservices-exercises</id>
    <link href="https://github.com/udacity/cd0354-monolith-to-microservices-exercises" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Exercise code for cd0354 Monolith to Microservices at Scale course taught by Justin Lee&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Monolith to Microservices Exercise and Demo Code&lt;/h1&gt; &#xA;&lt;p&gt;This repo contains code for all of the exercises in the Monolith to Microservices at Scale&lt;/p&gt; &#xA;&lt;h2&gt;Lesson 1: Introduction to Microservices&lt;/h2&gt; &#xA;&lt;p&gt;No exercise or demos code&lt;/p&gt; &#xA;&lt;h2&gt;Lesson 2: Microservices Design Principles and Best Practices&lt;/h2&gt; &#xA;&lt;p&gt;No exercise or demos code&lt;/p&gt; &#xA;&lt;h2&gt;Lesson 3: Containers Using Docker&lt;/h2&gt; &#xA;&lt;h3&gt;Exercise Code&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/udacity/cd0354-monolith-to-microservices-exercises/main/lesson-3-containers/exercises/docker-app-exercise/README.md&#34;&gt;Create a Docker App&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/udacity/cd0354-monolith-to-microservices-exercises/main/lesson-3-containers/exercises/debugging-exercise/README.md&#34;&gt;Debugging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/udacity/cd0354-monolith-to-microservices-exercises/main/lesson-3-containers/exercises/base-images-exercise/README.md&#34;&gt;Base Images&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/vscode-remote-try-node</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/microsoft/vscode-remote-try-node</id>
    <link href="https://github.com/microsoft/vscode-remote-try-node" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Node.js sample project for trying out the VS Code Remote - Containers extension&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Try Out Development Containers: Node.js&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode-remote-try-node&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Remote%20-%20Containers&amp;amp;message=Open&amp;amp;color=blue&amp;amp;logo=visualstudiocode&#34; alt=&#34;Open in Remote - Containers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A &lt;strong&gt;development container&lt;/strong&gt; is a running &lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; container with a well-defined tool/runtime stack and its prerequisites. You can try out development containers with &lt;strong&gt;&lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&#34;https://aka.ms/vscode-remote/containers&#34;&gt;Visual Studio Code Remote - Containers&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is a sample project that lets you try out either option in a few easy steps. We have a variety of other &lt;a href=&#34;https://github.com/search?q=org%3Amicrosoft+vscode-remote-try-&amp;amp;type=Repositories&#34;&gt;vscode-remote-try-*&lt;/a&gt; sample projects, too.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you already have a Codespace or dev container, you can jump to the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-remote-try-node/main/#things-to-try&#34;&gt;Things to try&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Setting up the development container&lt;/h2&gt; &#xA;&lt;h3&gt;GitHub Codespaces&lt;/h3&gt; &#xA;&lt;p&gt;Follow these steps to open this sample in a Codespace:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Click the Code drop-down menu and select the &lt;strong&gt;Open with Codespaces&lt;/strong&gt; option.&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;+ New codespace&lt;/strong&gt; at the bottom on the pane.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more info, check out the &lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/github/developing-online-with-codespaces/creating-a-codespace#creating-a-codespace&#34;&gt;GitHub documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;VS Code Remote - Containers&lt;/h3&gt; &#xA;&lt;p&gt;If you already have VS Code and Docker installed, you can click the badge above or &lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode-remote-try-node&#34;&gt;here&lt;/a&gt; to get started. Clicking these links will cause VS Code to automatically install the Remote - Containers extension if needed, clone the source code into a container volume, and spin up a dev container for use.&lt;/p&gt; &#xA;&lt;p&gt;Follow these steps to open this sample in a container using the VS Code Remote - Containers extension:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If this is your first time using a development container, please ensure your system meets the pre-reqs (i.e. have Docker installed) in the &lt;a href=&#34;https://aka.ms/vscode-remote/containers/getting-started&#34;&gt;getting started steps&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To use this repository, you can either open the repository in an isolated Docker volume:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Try a Sample...&lt;/strong&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;Choose the &#34;Node&#34; sample, wait for the container to start, and try things out! &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Under the hood, this will use the &lt;strong&gt;Remote-Containers: Clone Repository in Container Volume...&lt;/strong&gt; command to clone the source code in a Docker volume instead of the local filesystem. &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;Volumes&lt;/a&gt; are the preferred mechanism for persisting container data.&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Or open a locally cloned copy of the code:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Clone this repository to your local filesystem.&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Open Folder in Container...&lt;/strong&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;Select the cloned copy of this folder, wait for the container to start, and try things out!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Things to try&lt;/h2&gt; &#xA;&lt;p&gt;Once you have this sample opened, you&#39;ll be able to work with it like you would locally.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This container runs as a non-root user with sudo access by default. Comment out &lt;code&gt;&#34;remoteUser&#34;: &#34;node&#34;&lt;/code&gt; in &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; if you&#39;d prefer to run as root.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Some things to try:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open &lt;code&gt;server.js&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Try adding some code and check out the language features.&lt;/li&gt; &#xA;   &lt;li&gt;Notice that &lt;code&gt;eslint&lt;/code&gt; and the &lt;code&gt;vscode-eslint&lt;/code&gt; extension are already installed in the container since the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; lists &lt;code&gt;&#34;dbaeumer.vscode-eslint&#34;&lt;/code&gt; as an extension to install automatically when the container is created.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Terminal:&lt;/strong&gt; Press &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;`&lt;/kbd&gt; and type &lt;code&gt;uname&lt;/code&gt; and other Linux commands from the terminal window.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build, Run, and Debug:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open &lt;code&gt;server.js&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Add a breakpoint (e.g. on line 20).&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F5&lt;/kbd&gt; to launch the app in the container.&lt;/li&gt; &#xA;   &lt;li&gt;Once the breakpoint is hit, try hovering over variables, examining locals, and more.&lt;/li&gt; &#xA;   &lt;li&gt;Continue (&lt;kbd&gt;F5&lt;/kbd&gt;). You can connect to the server in the container by either: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Clicking on &lt;code&gt;Open in Browser&lt;/code&gt; in the notification telling you: &lt;code&gt;Your service running on port 3000 is available&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;Clicking the globe icon in the &#39;Ports&#39; view. The &#39;Ports&#39; view gives you an organized table of your forwarded ports, and you can access it with the command &lt;strong&gt;Ports: Focus on Ports View&lt;/strong&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Notice port 3000 in the &#39;Ports&#39; view is labeled &#34;Hello Remote World.&#34; In &lt;code&gt;devcontainer.json&lt;/code&gt;, you can set &lt;code&gt;&#34;portsAttributes&#34;&lt;/code&gt;, such as a label for your forwarded ports and the action to be taken when the port is autoforwarded. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;If we didn&#39;t know the port was 3000, we could&#39;ve used a regex instead of &#34;3000&#34; in the &lt;code&gt;&#34;portsAttributes&#34;&lt;/code&gt;, such as &#34;.+/server.js&#34;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In Remote - Containers, you can access your app at &lt;code&gt;http://localhost:3000&lt;/code&gt; in a local browser. But in a browser-based Codespace, you must click the link from the notification or the &lt;code&gt;Ports&lt;/code&gt; view so that the service handles port forwarding in the browser and generates the correct URL.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Rebuild or update your container&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You may want to make changes to your container, such as installing a different version of a software or forwarding a new port. You&#39;ll rebuild your container for your changes to take effect.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Open browser automatically:&lt;/strong&gt; As an example change, let&#39;s update the &lt;code&gt;portsAttributes&lt;/code&gt; in the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; file to open a browser when our port is automatically forwarded.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; file.&lt;/li&gt; &#xA;   &lt;li&gt;Modify the &lt;code&gt;&#34;onAutoForward&#34;&lt;/code&gt; attribute in your &lt;code&gt;portsAttributes&lt;/code&gt; from &lt;code&gt;&#34;notify&#34;&lt;/code&gt; to &lt;code&gt;&#34;openBrowser&#34;&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Rebuild Container&lt;/strong&gt; or &lt;strong&gt;Codespaces: Rebuild Container&lt;/strong&gt; command so the modifications are picked up.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.microsoft.com&#34;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright © Microsoft Corporation All rights reserved.&lt;br&gt; Licensed under the MIT License. See LICENSE in the project root for license information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ALPHA-OFFICIAL-TEAM/ALPHA-V5</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/ALPHA-OFFICIAL-TEAM/ALPHA-V5</id>
    <link href="https://github.com/ALPHA-OFFICIAL-TEAM/ALPHA-V5" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🎭🇱🇰𝙰𝙻𝙿𝙷𝙰🇱🇰🎭 v5 World best Sinhala/English WhatsApp Button Bot Developer Achi Fernando Enjoy Our Bot&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://camo.githubusercontent.com/71b837571c48af3aa60a73dbc9d5936aa359d78efbfa8a6743cbbbc16b80ef4d/68747470733a2f2f63646e2e646973636f72646170702e636f6d2f6174746163686d656e74732f3830353930323039333930363630383138362f3830353931333937323533353539303932322f74656e6f722e676966&#34;&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;h1&gt;🎭🇱🇰 𝙰𝙻𝙿𝙷𝙰 🇱🇰🎭 WhatsApp User Bot v5.0.0&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://telegra.ph/file/f3b0b4e681583334b7330.jpg&#34; width=&#34;300&#34; height=&#34;300&#34;&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;img src=&#34;https://camo.githubusercontent.com/71b837571c48af3aa60a73dbc9d5936aa359d78efbfa8a6743cbbbc16b80ef4d/68747470733a2f2f63646e2e646973636f72646170702e636f6d2f6174746163686d656e74732f3830353930323039333930363630383138362f3830353931333937323533353539303932322f74656e6f722e676966&#34;&gt; &#xA;  &lt;p&gt;&lt;/p&gt; &#xA;  &lt;div align=&#34;center&#34;&gt; &#xA;   &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ALPHA-OFFICIAL-TEAM/ALPHA-V5/main/#&#34;&gt;&lt;img title=&#34;Achi Fernando&#34; src=&#34;https://img.shields.io/badge/ACHIYA-red?colorA=%23ff0000&amp;amp;colorB=%23017e40&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;   &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/RIPPER-SER&#xA;&#34;&gt;&lt;img title=&#34;Author&#34; src=&#34;https://img.shields.io/badge/Author-RIPPER-SER/ALPHA_WA?color=blue&amp;amp;style=for-the-badge&amp;amp;logo=whatsapp&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;p align=&#34;center&#34;&gt; Project created by &lt;a href=&#34;https://github.com/RIPPER-SER&#34;&gt;Achiya&lt;/a&gt; to make it public &lt;br&gt; | © | Reserved | &lt;br&gt; &lt;/p&gt; &#xA;  &lt;hr&gt; &#xA;  &lt;pre&gt;&lt;code&gt;&amp;lt;/div&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;p align=&#34;center&#34;&gt; World best Sinhala/English WhatsApp Button Bot Developer Achi Fernando Enjoy Our Bot &lt;br&gt; &lt;a href=&#34;https://chat.whatsapp.com/EmxfOklzLVIIyDEKPx4IYj&#34;&gt;Whatsapp Support Group 01&lt;/a&gt; | &lt;a href=&#34;https://chat.whatsapp.com/KpBbjUuoKCE5DclK9lKdr0&#34;&gt;Whatsapp Support Group 02&lt;/a&gt; | &lt;a href=&#34;https://t.me/+TaQGxVd7ZM43NDk1&#34;&gt;Telegarm Support Group&lt;/a&gt; | &lt;a href=&#34;https://achibrolk.wordpress.com/alpha-bot-service&#34;&gt;Official Web Site &lt;/a&gt; | &lt;a href=&#34;https://www.youtube.com/c/ABLKPGAchiBrolk&#34;&gt;Youtube Channel&lt;/a&gt; | &lt;a href=&#34;https://chat.whatsapp.com/FTtlr84ndUWIkR7PeHoqXJ&#34;&gt;Whatsapp Bot Group&lt;/a&gt; | &lt;a href=&#34;https://chat.whatsapp.com/KQRCEydZ4QwJ7JpKypx5gg&#34;&gt;Whatsapp Tech Group&lt;/a&gt; | &lt;a href=&#34;https://chat.whatsapp.com/BiRfTmouLQ2J7MaLdczOY5&#34;&gt;Whatsapp Ehi Group&lt;/a&gt; | &lt;a href=&#34;https://chat.whatsapp.com/GPUvBfhhz7OLZhckbGi8mj&#34;&gt;Whatsapp knowledge Group&lt;/a&gt; | &lt;a href=&#34;https://chat.whatsapp.com/GSijEqwPZBS4a3VzzlvKLM&#34;&gt;Whatsapp Market Group&lt;/a&gt; &lt;br&gt; &lt;/p&gt; &#xA;  &lt;h4&gt;TOTAL REPO VIEWS&lt;/h4&gt; &#xA;  &lt;p&gt;&lt;img src=&#34;https://profile-counter.glitch.me/ALPHA-OFFICIAL-TEAM/count.svg?sanitize=true&#34; alt=&#34;Visitor Count&#34;&gt;&lt;/p&gt; &#xA;  &lt;p&gt;&lt;/p&gt; &#xA;  &lt;h4 align=&#34;center&#34;&gt;Support Video For Deploy Bot 👇:&lt;/h4&gt; &#xA;  &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://youtu.be/uAuIcxlGFKw&#34; target=&#34;blank&#34;&gt;&lt;img align=&#34;center&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/e/e1/Logo_of_YouTube_%282015-2017%29.svg/1200px-Logo_of_YouTube_%282015-2017%29.svg.png&#34; height=&#34;45&#34; width=&#34;90&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;  &lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;  &lt;p&gt;&amp;nbsp;&lt;img align=&#34;center&#34; src=&#34;https://github-readme-streak-stats.herokuapp.com/?user=ALPHA-OFFICIAL-TEAM&amp;amp;theme=dark&#34; alt=&#34;RIPPER-SER&#34; center&#34;&gt;&lt;/p&gt; &#xA;  &lt;p&gt;&lt;/p&gt; &#xA;  &lt;h2&gt;&lt;/h2&gt; &#xA;  &lt;h3 align=&#34;center&#34;&gt;📢 Support Group :&lt;/h3&gt; &#xA;  &lt;p align=&#34;center&#34;&gt; Click WA logo to Join Support Group 👇 &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://chat.whatsapp.com/EmxfOklzLVIIyDEKPx4IYj&#34; target=&#34;blank&#34;&gt;&lt;img align=&#34;center&#34; src=&#34;https://github.com/Alien-alfa/PublicBot/blob/main/wlogo.svg.png &#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;  &lt;h3&gt;QR CODE&lt;/h3&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://replit.com/@ALPHAOFFICIAL/V5&#34;&gt;&lt;img src=&#34;https://repl.it/badge/github/quiec/whatsasena&#34; alt=&#34;Run on Repl.it&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;h3&gt;Deploy Page&lt;/h3&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/ALPHA-OFFICIAL-TEAM/ALPHA-V5&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;/div&gt; &#xA; &lt;br&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://replit.com/@ALPHAOFFICIAL/V5&#34;&gt;&lt;img src=&#34;https://github.com/Platane/snk/raw/output/github-contribution-grid-snake.svg?sanitize=true&#34; alt=&#34;Run on Repl.it&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;/div&gt;&#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>wyveo/nginx-php-fpm</title>
    <updated>2022-05-30T01:37:40Z</updated>
    <id>tag:github.com,2022-05-30:/wyveo/nginx-php-fpm</id>
    <link href="https://github.com/wyveo/nginx-php-fpm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Nginx + PHP-FPM 8.1.x / 8.0.x / 7.4.x / 7.3.x / 7.2.x / 7.1.x / 7.0.x + Composer built on Debian (Bullseye/Buster) image&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/wyveo/nginx-php-fpm/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docker%20hub-wyveo%2Fnginx--php--fpm-blue.svg?&amp;amp;logo=docker&amp;amp;style=for-the-badge&#34; alt=&#34;Docker Hub; wyveo/nginx-php-fpm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/wyveo/nginx-php-fpm/&#34;&gt;&lt;img src=&#34;https://badges.weareopensource.me/docker/pulls/wyveo/nginx-php-fpm?style=for-the-badge&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/wyveo/nginx-php-fpm/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/wyveo/nginx-php-fpm/latest?style=for-the-badge&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://nginx.org/en/CHANGES&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/nginx-1.21.6-brightgreen.svg?&amp;amp;logo=nginx&amp;amp;logoColor=white&amp;amp;style=for-the-badge&#34; alt=&#34;nginx 1.21.6&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://secure.php.net/releases/8_1_3.php&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/php--fpm-8.1.3-blue.svg?&amp;amp;logo=php&amp;amp;logoColor=white&amp;amp;style=for-the-badge&#34; alt=&#34;php 8.1.3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wyveo/nginx-php-fpm/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?&amp;amp;style=for-the-badge&#34; alt=&#34;License MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This is a Dockerfile to build a debian based container image running nginx and php-fpm 8.1.x / 8.0.x / 7.4.x / 7.3.x / 7.2.x / 7.1.x / 7.0.x &amp;amp; Composer.&lt;/p&gt; &#xA;&lt;h3&gt;Versioning&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Docker Tag&lt;/th&gt; &#xA;   &lt;th&gt;GitHub Release&lt;/th&gt; &#xA;   &lt;th&gt;Nginx Version&lt;/th&gt; &#xA;   &lt;th&gt;PHP Version&lt;/th&gt; &#xA;   &lt;th&gt;Debian Version&lt;/th&gt; &#xA;   &lt;th&gt;Composer&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;latest&lt;/td&gt; &#xA;   &lt;td&gt;master Branch&lt;/td&gt; &#xA;   &lt;td&gt;1.21.6&lt;/td&gt; &#xA;   &lt;td&gt;8.1.3&lt;/td&gt; &#xA;   &lt;td&gt;bullseye&lt;/td&gt; &#xA;   &lt;td&gt;2.2.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;php81&lt;/td&gt; &#xA;   &lt;td&gt;php81 Branch&lt;/td&gt; &#xA;   &lt;td&gt;1.21.6&lt;/td&gt; &#xA;   &lt;td&gt;8.1.3&lt;/td&gt; &#xA;   &lt;td&gt;bullseye&lt;/td&gt; &#xA;   &lt;td&gt;2.2.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;php80&lt;/td&gt; &#xA;   &lt;td&gt;php80 Branch&lt;/td&gt; &#xA;   &lt;td&gt;1.21.6&lt;/td&gt; &#xA;   &lt;td&gt;8.0.16&lt;/td&gt; &#xA;   &lt;td&gt;buster&lt;/td&gt; &#xA;   &lt;td&gt;2.0.13&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;php74&lt;/td&gt; &#xA;   &lt;td&gt;php74 Branch&lt;/td&gt; &#xA;   &lt;td&gt;1.21.6&lt;/td&gt; &#xA;   &lt;td&gt;7.4.28&lt;/td&gt; &#xA;   &lt;td&gt;buster&lt;/td&gt; &#xA;   &lt;td&gt;2.0.13&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;php73&lt;/td&gt; &#xA;   &lt;td&gt;php73 Branch&lt;/td&gt; &#xA;   &lt;td&gt;1.21.6&lt;/td&gt; &#xA;   &lt;td&gt;7.3.33&lt;/td&gt; &#xA;   &lt;td&gt;buster&lt;/td&gt; &#xA;   &lt;td&gt;2.0.13&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;php72&lt;/td&gt; &#xA;   &lt;td&gt;php72 Branch&lt;/td&gt; &#xA;   &lt;td&gt;1.21.6&lt;/td&gt; &#xA;   &lt;td&gt;7.2.34&lt;/td&gt; &#xA;   &lt;td&gt;buster&lt;/td&gt; &#xA;   &lt;td&gt;2.0.13&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;php71&lt;/td&gt; &#xA;   &lt;td&gt;php71 Branch&lt;/td&gt; &#xA;   &lt;td&gt;1.21.6&lt;/td&gt; &#xA;   &lt;td&gt;7.1.33&lt;/td&gt; &#xA;   &lt;td&gt;buster&lt;/td&gt; &#xA;   &lt;td&gt;2.0.13&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;php70&lt;/td&gt; &#xA;   &lt;td&gt;php70 Branch&lt;/td&gt; &#xA;   &lt;td&gt;1.21.6&lt;/td&gt; &#xA;   &lt;td&gt;7.0.33&lt;/td&gt; &#xA;   &lt;td&gt;buster&lt;/td&gt; &#xA;   &lt;td&gt;2.0.13&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Building from source&lt;/h2&gt; &#xA;&lt;p&gt;To build from source you need to clone the git repo and run docker build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/wyveo/nginx-php-fpm.git&#xA;$ cd nginx-php-fpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;followed by&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker build -t nginx-php-fpm:php81 . # PHP 8.1.x&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Pulling from Docker Hub&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker pull wyveo/nginx-php-fpm:php81&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;To run the container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo docker run -d wyveo/nginx-php-fpm:php81&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Default web root:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/usr/share/nginx/html&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>