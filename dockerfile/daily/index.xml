<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-06T01:30:40Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>emzimmer/server-wp-mcp</title>
    <updated>2025-05-06T01:30:40Z</updated>
    <id>tag:github.com,2025-05-06:/emzimmer/server-wp-mcp</id>
    <link href="https://github.com/emzimmer/server-wp-mcp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WordPress MCP Server&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://smithery.ai/server/server-wp-mcp&#34;&gt;&lt;img src=&#34;https://smithery.ai/badge/server-wp-mcp&#34; alt=&#34;smithery badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://modelcontextprotocol.io/&#34;&gt;Model Context Protocol (MCP)&lt;/a&gt; server that enables AI assistants to interact with WordPress sites through the WordPress REST API. Supports multiple WordPress sites with secure authentication, enabling content management, post operations, and site configuration through natural language.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-Site Support&lt;/strong&gt;: Connect to multiple WordPress sites simultaneously&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;REST API Integration&lt;/strong&gt;: Full access to WordPress REST API endpoints&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Secure Authentication&lt;/strong&gt;: Uses application passwords for secure API access&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dynamic Endpoint Discovery&lt;/strong&gt;: Automatically maps available endpoints for each site&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Flexible Operations&lt;/strong&gt;: Support for GET, POST, PUT, DELETE, and PATCH methods&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Error Handling&lt;/strong&gt;: Graceful error handling with meaningful messages&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simple Configuration&lt;/strong&gt;: Easy-to-maintain JSON configuration file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Installing via Smithery&lt;/h3&gt; &#xA;&lt;p&gt;To install WordPress Server for Claude Desktop automatically via &lt;a href=&#34;https://smithery.ai/server/server-wp-mcp&#34;&gt;Smithery&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx -y @smithery/cli install server-wp-mcp --client claude&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install server-wp-mcp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tools Reference&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;wp_discover_endpoints&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Maps all available REST API endpoints on a WordPress site.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Arguments:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;site&#34;: {&#xA;&#x9;&#x9;&#34;type&#34;: &#34;string&#34;,&#xA;&#x9;&#x9;&#34;description&#34;: &#34;Site alias (as defined in configuration)&#34;,&#xA;&#x9;&#x9;&#34;required&#34;: true&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt; List of available endpoints with their methods and namespaces.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;wp_call_endpoint&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Executes REST API requests to WordPress sites.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Arguments:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;site&#34;: {&#xA;&#x9;&#x9;&#34;type&#34;: &#34;string&#34;,&#xA;&#x9;&#x9;&#34;description&#34;: &#34;Site alias&#34;,&#xA;&#x9;&#x9;&#34;required&#34;: true&#xA;&#x9;},&#xA;&#x9;&#34;endpoint&#34;: {&#xA;&#x9;&#x9;&#34;type&#34;: &#34;string&#34;,&#xA;&#x9;&#x9;&#34;description&#34;: &#34;API endpoint path&#34;,&#xA;&#x9;&#x9;&#34;required&#34;: true&#xA;&#x9;},&#xA;&#x9;&#34;method&#34;: {&#xA;&#x9;&#x9;&#34;type&#34;: &#34;string&#34;,&#xA;&#x9;&#x9;&#34;enum&#34;: [&#34;GET&#34;, &#34;POST&#34;, &#34;PUT&#34;, &#34;DELETE&#34;, &#34;PATCH&#34;],&#xA;&#x9;&#x9;&#34;description&#34;: &#34;HTTP method&#34;,&#xA;&#x9;&#x9;&#34;default&#34;: &#34;GET&#34;&#xA;&#x9;},&#xA;&#x9;&#34;params&#34;: {&#xA;&#x9;&#x9;&#34;type&#34;: &#34;object&#34;,&#xA;&#x9;&#x9;&#34;description&#34;: &#34;Request parameters or body data&#34;,&#xA;&#x9;&#x9;&#34;required&#34;: false&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Getting an Application Password&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Log in to your WordPress admin dashboard&lt;/li&gt; &#xA; &lt;li&gt;Go to Users â†’ Profile&lt;/li&gt; &#xA; &lt;li&gt;Scroll to the &#34;Application Passwords&#34; section&lt;/li&gt; &#xA; &lt;li&gt;Enter a name for the application (e.g., &#34;MCP Server&#34;)&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Add New Application Password&#34;&lt;/li&gt; &#xA; &lt;li&gt;Copy the generated password (you won&#39;t be able to see it again)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Note: Application Passwords require WordPress 5.6 or later and HTTPS.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration File Setup&lt;/h3&gt; &#xA;&lt;p&gt;Create a JSON configuration file (e.g., &lt;code&gt;wp-sites.json&lt;/code&gt;) with your WordPress site details:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;myblog&#34;: {&#xA;&#x9;&#x9;&#34;URL&#34;: &#34;https://myblog.com&#34;,&#xA;&#x9;&#x9;&#34;USER&#34;: &#34;yourusername&#34;,&#xA;&#x9;&#x9;&#34;PASS&#34;: &#34;abcd 1234 efgh 5678&#34;&#xA;&#x9;},&#xA;&#x9;&#34;testsite&#34;: {&#xA;&#x9;&#x9;&#34;URL&#34;: &#34;https://test.example.com&#34;,&#xA;&#x9;&#x9;&#34;USER&#34;: &#34;anotherusername&#34;,&#xA;&#x9;&#x9;&#34;PASS&#34;: &#34;wxyz 9876 lmno 5432&#34;&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Each site configuration requires:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;URL&lt;/code&gt;: WordPress site URL (must include http:// or https://)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;USER&lt;/code&gt;: WordPress username&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PASS&lt;/code&gt;: Application password (spaces will be automatically removed)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The configuration key (e.g., &#34;myblog&#34;, &#34;testsite&#34;) becomes the site alias you&#39;ll use when interacting with the server.&lt;/p&gt; &#xA;&lt;h3&gt;Usage with Claude Desktop&lt;/h3&gt; &#xA;&lt;p&gt;Add to your &lt;code&gt;claude_desktop_config.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;mcpServers&#34;: {&#xA;&#x9;&#x9;&#34;wordpress&#34;: {&#xA;&#x9;&#x9;&#x9;&#34;command&#34;: &#34;node&#34;,&#xA;&#x9;&#x9;&#x9;&#34;args&#34;: [&#34;path/to/server/dist/index.js&#34;],&#xA;&#x9;&#x9;&#x9;&#34;env&#34;: {&#xA;&#x9;&#x9;&#x9;&#x9;&#34;WP_SITES_PATH&#34;: &#34;/absolute/path/to/wp-sites.json&#34;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;WP_SITES_PATH&lt;/code&gt; environment variable must point to the absolute path of your configuration file.&lt;/p&gt; &#xA;&lt;h3&gt;Example Usage&lt;/h3&gt; &#xA;&lt;p&gt;Once configured, you can ask Claude to perform various WordPress operations:&lt;/p&gt; &#xA;&lt;h4&gt;List and Query Posts&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;Can you show me all posts from myblog published in the last month?&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Find all posts on testsite tagged with &#34;technology&#34; and &#34;AI&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Show me draft posts from myblog that need review&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Create and Edit Content&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;Create a new draft post on testsite titled &#34;The Future of AI&#34; with these key points: [points]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Update the featured image on myblog&#39;s latest post about machine learning&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Add a new category called &#34;Tech News&#34; to myblog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Manage Comments&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;Show me all pending comments on myblog&#39;s latest post&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Find comments from testsite that might be spam&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;List the most engaged commenters on myblog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Plugin Management&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;What plugins are currently active on myblog?&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Check if any plugins on testsite need updates&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Tell me about the security plugins installed on myblog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;User Management&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;Show me all users with editor role on testsite&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Create a new author account on myblog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Update user roles and permissions on testsite&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Site Settings and Configuration&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;What theme is currently active on myblog?&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Check the permalink structure on testsite&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Show me the current media library settings on myblog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Maintenance and Diagnostics&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;Check if there are any broken links on myblog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Show me the PHP version and other system info for testsite&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;List any pending database updates on myblog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Error Handling&lt;/h2&gt; &#xA;&lt;p&gt;The server handles common errors including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Invalid configuration file path or format&lt;/li&gt; &#xA; &lt;li&gt;Invalid site configurations&lt;/li&gt; &#xA; &lt;li&gt;Authentication failures&lt;/li&gt; &#xA; &lt;li&gt;Missing or invalid endpoints&lt;/li&gt; &#xA; &lt;li&gt;API rate limiting&lt;/li&gt; &#xA; &lt;li&gt;Network errors&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All errors are returned with descriptive messages to help diagnose issues.&lt;/p&gt; &#xA;&lt;h2&gt;Security Considerations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Keep your &lt;code&gt;wp-sites.json&lt;/code&gt; file secure and never commit it to version control&lt;/li&gt; &#xA; &lt;li&gt;Consider using environment variables for sensitive data in production&lt;/li&gt; &#xA; &lt;li&gt;Store the config file outside of public directories&lt;/li&gt; &#xA; &lt;li&gt;Use HTTPS for all WordPress sites&lt;/li&gt; &#xA; &lt;li&gt;Regularly rotate application passwords&lt;/li&gt; &#xA; &lt;li&gt;Follow the principle of least privilege when assigning user roles&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;@modelcontextprotocol/sdk - MCP protocol implementation&lt;/li&gt; &#xA; &lt;li&gt;axios - HTTP client for API requests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
</feed>