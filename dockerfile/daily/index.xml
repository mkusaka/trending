<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-16T01:40:04Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>radix-ai/poetry-cookiecutter</title>
    <updated>2022-08-16T01:40:04Z</updated>
    <id>tag:github.com,2022-08-16:/radix-ai/poetry-cookiecutter</id>
    <link href="https://github.com/radix-ai/poetry-cookiecutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐍 A modern Cookiecutter template for scaffolding Python packages and apps.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Poetry Cookiecutter&lt;/h1&gt; &#xA;&lt;p&gt;A modern &lt;a href=&#34;https://github.com/cookiecutter/cookiecutter&#34;&gt;Cookiecutter&lt;/a&gt; template for scaffolding Python packages and apps.&lt;/p&gt; &#xA;&lt;h2&gt;🍿 Demo&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/radix-ai/my-package&#34;&gt;My Package&lt;/a&gt; for an example of a Python package and app that is scaffolded with this template.&lt;/p&gt; &#xA;&lt;p&gt;Starting development in My Package is as easy as cloning the repository with &lt;code&gt;git clone git@github.com:radix-ai/my-package&lt;/code&gt;, opening the cloned repository in &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;VS Code&lt;/a&gt; and then running &lt;kbd&gt;Ctrl/⌘&lt;/kbd&gt; + &lt;kbd&gt;⇧&lt;/kbd&gt; + &lt;kbd&gt;P&lt;/kbd&gt; → &lt;em&gt;Remote-Containers: Reopen in Container&lt;/em&gt; with VS Code&#39;s &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers&#34;&gt;Remote-Containers extension&lt;/a&gt; to start a &lt;a href=&#34;https://code.visualstudio.com/docs/remote/containers&#34;&gt;Dev Container&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🎁 Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🧑‍💻 Quick and reproducible development environments with VS Code&#39;s &lt;a href=&#34;https://code.visualstudio.com/docs/remote/containers&#34;&gt;Dev Containers&lt;/a&gt; and PyCharm&#39;s &lt;a href=&#34;https://www.jetbrains.com/help/pycharm/using-docker-compose-as-a-remote-interpreter.html#docker-compose-remote&#34;&gt;Docker Compose interpreter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🌈 Cross-platform support for Linux, macOS (Apple silicon and Intel), and Windows&lt;/li&gt; &#xA; &lt;li&gt;🐚 Modern shell prompt with &lt;a href=&#34;https://github.com/starship/starship&#34;&gt;Starship&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;📦 Packaging and dependency management with &lt;a href=&#34;https://github.com/python-poetry/poetry&#34;&gt;Poetry&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🚚 Installing from and publishing to private package repositories and &lt;a href=&#34;https://pypi.org/&#34;&gt;PyPI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;⚡️ Task running with &lt;a href=&#34;https://github.com/nat-n/poethepoet&#34;&gt;Poe the Poet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;✍️ Code formatting with &lt;a href=&#34;https://github.com/MarcoGorelli/absolufy-imports&#34;&gt;absolufy-imports&lt;/a&gt;, &lt;a href=&#34;https://github.com/psf/black&#34;&gt;black&lt;/a&gt;, &lt;a href=&#34;https://github.com/PyCQA/isort&#34;&gt;isort&lt;/a&gt;, &lt;a href=&#34;https://github.com/asottile/pyupgrade&#34;&gt;pyupgrade&lt;/a&gt;, and &lt;a href=&#34;https://github.com/asottile/yesqa&#34;&gt;yesqa&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;✅ Code linting with &lt;a href=&#34;https://pre-commit.com/&#34;&gt;pre-commit&lt;/a&gt;: &lt;a href=&#34;https://github.com/PyCQA/bandit&#34;&gt;bandit&lt;/a&gt;, &lt;a href=&#34;https://github.com/terrencepreilly/darglint&#34;&gt;darglint&lt;/a&gt;, &lt;a href=&#34;https://github.com/PyCQA/flake8&#34;&gt;flake8&lt;/a&gt;, &lt;a href=&#34;https://github.com/python/mypy&#34;&gt;mypy&lt;/a&gt;, &lt;a href=&#34;https://github.com/pre-commit/pre-commit-hooks&#34;&gt;pre-commit-hooks&lt;/a&gt;, &lt;a href=&#34;https://github.com/PyCQA/pydocstyle&#34;&gt;pydocstyle&lt;/a&gt;, &lt;a href=&#34;https://github.com/pre-commit/pygrep-hooks&#34;&gt;pygrep-hooks&lt;/a&gt;, &lt;a href=&#34;https://github.com/pyupio/safety&#34;&gt;safety&lt;/a&gt;, &lt;a href=&#34;https://github.com/koalaman/shellcheck&#34;&gt;shellcheck&lt;/a&gt;, and &lt;a href=&#34;https://github.com/agronholm/typeguard&#34;&gt;typeguard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🏷 Follows the &lt;a href=&#34;https://www.conventionalcommits.org/&#34;&gt;Conventional Commits&lt;/a&gt; standard to automate &lt;a href=&#34;https://semver.org/&#34;&gt;Semantic Versioning&lt;/a&gt; and &lt;a href=&#34;https://keepachangelog.com/&#34;&gt;Keep A Changelog&lt;/a&gt; with &lt;a href=&#34;https://github.com/commitizen-tools/commitizen&#34;&gt;Commitizen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;💌 Verified commits with &lt;a href=&#34;https://gnupg.org/&#34;&gt;GPG&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;♻️ Continuous integration with &lt;a href=&#34;https://docs.github.com/en/actions&#34;&gt;GitHub Actions&lt;/a&gt; or &lt;a href=&#34;https://docs.gitlab.com/ee/ci/&#34;&gt;GitLab CI/CD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🧪 Test coverage with &lt;a href=&#34;https://github.com/nedbat/coveragepy&#34;&gt;Coverage.py&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🏗 Scaffolding updates with &lt;a href=&#34;https://github.com/cookiecutter/cookiecutter&#34;&gt;Cookiecutter&lt;/a&gt; and &lt;a href=&#34;https://github.com/cruft/cruft&#34;&gt;Cruft&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🧰 Dependency updates with &lt;a href=&#34;https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/about-dependabot-version-updates&#34;&gt;Dependabot&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;✨ Using&lt;/h2&gt; &#xA;&lt;h3&gt;Creating a new Python project&lt;/h3&gt; &#xA;&lt;p&gt;To create a new Python project with this template:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/cruft/cruft&#34;&gt;Cruft&lt;/a&gt; in your &lt;a href=&#34;https://github.com/pyenv/pyenv-virtualenv&#34;&gt;Python environment&lt;/a&gt; with: &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install cruft&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create a new repository and clone it locally.&lt;/li&gt; &#xA; &lt;li&gt;In the repository&#39;s parent directory, run: &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cruft create -f git@github.com:radix-ai/poetry-cookiecutter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Updating your Python project&lt;/h3&gt; &#xA;&lt;p&gt;To update your Python project with the latest template:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run &lt;code&gt;cruft update&lt;/code&gt; to update your project with the latest template.&lt;/li&gt; &#xA; &lt;li&gt;If any of the updates failed, resolve them by inspecting the generated &lt;code&gt;.rej&lt;/code&gt; files.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;🤓 Template parameters&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;package_name&lt;/code&gt; &lt;br&gt; &#34;Spline Reticulator&#34;&lt;/td&gt; &#xA;   &lt;td&gt;The name of the package. Will be slugified to snake_case for importing and kebab-case for installing.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;package_description&lt;/code&gt; &lt;br&gt; &#34;A Python package that reticulates splines.&#34;&lt;/td&gt; &#xA;   &lt;td&gt;A single-line description of the package.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;package_url&lt;/code&gt; &lt;br&gt; &#34;&lt;a href=&#34;https://github.com/user/spline-reticulator&#34;&gt;https://github.com/user/spline-reticulator&lt;/a&gt;&#34;&lt;/td&gt; &#xA;   &lt;td&gt;The URL to the package&#39;s repository.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;author_name&lt;/code&gt; &lt;br&gt; &#34;John Smith&#34;&lt;/td&gt; &#xA;   &lt;td&gt;The full name of the primary author of the package.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;author_email&lt;/code&gt; &lt;br&gt; &#34;&lt;a href=&#34;mailto:john@example.com&#34;&gt;john@example.com&lt;/a&gt;&#34;&lt;/td&gt; &#xA;   &lt;td&gt;The email address of the primary author of the package.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;python_version&lt;/code&gt; &lt;br&gt; &#34;3.10&#34;&lt;/td&gt; &#xA;   &lt;td&gt;The minimum Python version that the package requires.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;with_fastapi_api&lt;/code&gt; &lt;br&gt; [&#34;0&#34;, &#34;1&#34;]&lt;/td&gt; &#xA;   &lt;td&gt;If &#34;1&#34;, &lt;a href=&#34;https://github.com/tiangolo/fastapi&#34;&gt;FastAPI&lt;/a&gt; is added as a run time dependency, FastAPI API stubs and tests are added, &lt;code&gt;poe&lt;/code&gt; commands for serving the API are added, and an &lt;code&gt;app&lt;/code&gt; stage is added to the Dockerfile that packages the API. Additionally, the CI workflow will push the application as a Docker image instead of publishing the Python package.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;with_jupyter_lab&lt;/code&gt; &lt;br&gt; [&#34;0&#34;, &#34;1&#34;]&lt;/td&gt; &#xA;   &lt;td&gt;If &#34;1&#34;, &lt;a href=&#34;https://github.com/jupyterlab/jupyterlab&#34;&gt;JupyterLab&lt;/a&gt; is added to Poetry&#39;s dev dependencies, and a &lt;code&gt;poe lab&lt;/code&gt; command is added to start Jupyter Lab in the &lt;code&gt;notebooks/&lt;/code&gt; directory.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;with_pydantic_typing&lt;/code&gt; &lt;br&gt; [&#34;0&#34;, &#34;1&#34;]&lt;/td&gt; &#xA;   &lt;td&gt;If &#34;1&#34;, &lt;a href=&#34;https://github.com/samuelcolvin/pydantic&#34;&gt;Pydantic&lt;/a&gt; is added as a run time dependency, and the &lt;a href=&#34;https://pydantic-docs.helpmanual.io/mypy_plugin/&#34;&gt;Pydantic mypy plugin&lt;/a&gt; is enabled and configured.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;with_sentry_logging&lt;/code&gt; &lt;br&gt; [&#34;0&#34;, &#34;1&#34;]&lt;/td&gt; &#xA;   &lt;td&gt;If &#34;1&#34;, &lt;a href=&#34;https://github.com/getsentry/sentry-python&#34;&gt;Sentry&lt;/a&gt; is added as a run time dependency, and a Sentry configuration stub and tests are added.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;with_streamlit_app&lt;/code&gt; &lt;br&gt; [&#34;0&#34;, &#34;1&#34;]&lt;/td&gt; &#xA;   &lt;td&gt;If &#34;1&#34;, &lt;a href=&#34;https://github.com/streamlit/streamlit&#34;&gt;Streamlit&lt;/a&gt; is added as a run time dependency, a Streamlit application stub is added, a &lt;code&gt;poe streamlit&lt;/code&gt; command is added to serve the Streamlit app, and an &lt;code&gt;app&lt;/code&gt; stage is added to the Dockerfile that packages the Streamlit app. Additionally, the CI workflow will push the application as a Docker image instead of publishing the Python package.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;with_typer_cli&lt;/code&gt; &lt;br&gt; [&#34;0&#34;, &#34;1&#34;]&lt;/td&gt; &#xA;   &lt;td&gt;If &#34;1&#34;, &lt;a href=&#34;https://github.com/tiangolo/typer&#34;&gt;Typer&lt;/a&gt; is added as a run time dependency, Typer CLI stubs and tests are added, the package itself is registered as a CLI, and an &lt;code&gt;app&lt;/code&gt; stage is added to the Dockerfile that packages the CLI.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;continuous_integration&lt;/code&gt; &lt;br&gt; [&#34;GitHub&#34;, &#34;GitLab&#34;]&lt;/td&gt; &#xA;   &lt;td&gt;Whether to include a &lt;a href=&#34;https://docs.github.com/en/actions&#34;&gt;GitHub Actions&lt;/a&gt; or a &lt;a href=&#34;https://docs.gitlab.com/ee/ci/&#34;&gt;GitLab CI/CD&lt;/a&gt; continuous integration workflow for testing and publishing the package or app.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;docstring_style&lt;/code&gt; &lt;br&gt; [&#34;NumPy&#34;, &#34;Google&#34;]&lt;/td&gt; &#xA;   &lt;td&gt;Whether to use and validate &lt;a href=&#34;https://numpydoc.readthedocs.io/en/latest/format.html&#34;&gt;NumPy-style&lt;/a&gt; or &lt;a href=&#34;https://google.github.io/styleguide/pyguide.html#38-comments-and-docstrings&#34;&gt;Google-style docstrings&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;private_package_repository_name&lt;/code&gt; &lt;br&gt; &#34;Private Package Repository&#34;&lt;/td&gt; &#xA;   &lt;td&gt;Optional name of a private package repository to install packages from and publish this package to.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;private_package_repository_url&lt;/code&gt; &lt;br&gt; &#34;&lt;a href=&#34;https://pypi.example.com/simple&#34;&gt;https://pypi.example.com/simple&lt;/a&gt;&#34;&lt;/td&gt; &#xA;   &lt;td&gt;Optional URL of a private package repository to install packages from and publish this package to. Make sure to include the &lt;code&gt;/simple&lt;/code&gt; suffix.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>sonatype/docker-nexus3</title>
    <updated>2022-08-16T01:40:04Z</updated>
    <id>tag:github.com,2022-08-16:/sonatype/docker-nexus3</id>
    <link href="https://github.com/sonatype/docker-nexus3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dockerized version of Nexus Repo Manager 3&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sonatype Nexus3 Docker: sonatype/nexus3&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/sonatype/nexus-developers?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/sonatype/nexus-developers.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/sonatype/nexus-developers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Dockerfile for Sonatype Nexus Repository Manager 3, starting with 3.18 the image is based on the &lt;a href=&#34;https://www.redhat.com/en/blog/introducing-red-hat-universal-base-image&#34;&gt;Red Hat Universal Base Image&lt;/a&gt; while earlier versions used CentOS.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/master/#contribution-guidelines&#34;&gt;Contribution Guidlines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/master/#running&#34;&gt;Running&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/master/#building-the-nexus-repository-manager-image&#34;&gt;Building the Nexus Repository Manager image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/master/#chef-solo-for-runtime-and-application&#34;&gt;Chef Solo for Runtime and Application&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/master/#testing-the-dockerfile&#34;&gt;Testing the Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/master/#red-hat-certified-image&#34;&gt;Red Hat Certified Image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/master/#notes&#34;&gt;Notes&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/master/#persistent-data&#34;&gt;Persistent Data&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/master/#getting-help&#34;&gt;Getting Help&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution Guidelines&lt;/h2&gt; &#xA;&lt;p&gt;Go read &lt;a href=&#34;https://github.com/sonatype/docker-nexus3/raw/master/.github/CONTRIBUTING.md&#34;&gt;our contribution guidelines&lt;/a&gt; to get a bit more familiar with how we would like things to flow.&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;To run, binding the exposed port 8081 to the host, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker run -d -p 8081:8081 --name nexus sonatype/nexus3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When stopping, be sure to allow sufficient time for the databases to fully shut down.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker stop --time=120 &amp;lt;CONTAINER_NAME&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To test:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ curl http://localhost:8081/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building the Nexus Repository Manager image&lt;/h2&gt; &#xA;&lt;p&gt;To build a docker image from the &lt;a href=&#34;https://github.com/sonatype/docker-nexus3/raw/master/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; you can use this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker build --rm=true --tag=sonatype/nexus3 .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following optional variables can be used when building the image:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NEXUS_VERSION: Version of the Nexus Repository Manager&lt;/li&gt; &#xA; &lt;li&gt;NEXUS_DOWNLOAD_URL: Download URL for Nexus Repository, alternative to using &lt;code&gt;NEXUS_VERSION&lt;/code&gt; to download from Sonatype&lt;/li&gt; &#xA; &lt;li&gt;NEXUS_DOWNLOAD_SHA256_HASH: Sha256 checksum for the downloaded Nexus Repository Manager archive. Required if &lt;code&gt;NEXUS_VERSION&lt;/code&gt; or &lt;code&gt;NEXUS_DOWNLOAD_URL&lt;/code&gt; is provided&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Chef Solo for Runtime and Application&lt;/h2&gt; &#xA;&lt;p&gt;Chef Solo is used to build out the runtime and application layers of the Docker image. The Chef cookbook being used is available on GitHub at &lt;a href=&#34;https://github.com/sonatype/chef-nexus-repository-manager&#34;&gt;sonatype/chef-nexus-repository-manager&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Testing the Dockerfile&lt;/h2&gt; &#xA;&lt;p&gt;We are using &lt;code&gt;rspec&lt;/code&gt; as the test framework. &lt;code&gt;serverspec&lt;/code&gt; provides a docker backend (see the method &lt;code&gt;set&lt;/code&gt; in the test code) to run the tests inside the docker container, and abstracts away the difference between distributions in the tests (e.g. yum, apt,...).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rspec [--backtrace] spec/Dockerfile_spec.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Red Hat Certified Image&lt;/h2&gt; &#xA;&lt;p&gt;A Red Hat certified container image can be created using &lt;a href=&#34;https://github.com/sonatype/docker-nexus3/raw/master/Dockerfile.rh.ubi&#34;&gt;Dockerfile.rh.ubi&lt;/a&gt; which is built to be compliant with Red Hat certification. The image includes additional meta data to comform with Kubernetes and OpenShift standards, a directory with the licenses applicable to the software and a man file for help on how to use the software. It also uses an ENTRYPOINT script the ensure the running user has access to the appropriate permissions for OpenShift &#39;restricted&#39; SCC.&lt;/p&gt; &#xA;&lt;p&gt;The Red Hat certified container image is available from the &lt;a href=&#34;https://access.redhat.com/containers/#/registry.connect.redhat.com/sonatype/nexus-repository-manager&#34;&gt;Red Hat Container Catalog&lt;/a&gt; and qualified accounts can pull it from registry.connect.redhat.com.&lt;/p&gt; &#xA;&lt;h2&gt;Other Red Hat Images&lt;/h2&gt; &#xA;&lt;p&gt;In addition to the Universal Base Image, we can build images based on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Red Hat Enterprise Linux: &lt;a href=&#34;https://github.com/sonatype/docker-nexus3/raw/master/Dockerfile.rh.el&#34;&gt;Dockerfile.rh.el&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CentOS: &lt;a href=&#34;https://github.com/sonatype/docker-nexus3/raw/master/Dockerfile.rh.centos&#34;&gt;Dockerfile.rh.centos&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Our &lt;a href=&#34;https://help.sonatype.com/display/NXRM3/System+Requirements&#34;&gt;system requirements&lt;/a&gt; should be taken into account when provisioning the Docker container.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Default user is &lt;code&gt;admin&lt;/code&gt; and the uniquely generated password can be found in the &lt;code&gt;admin.password&lt;/code&gt; file inside the volume. See &lt;a href=&#34;https://raw.githubusercontent.com/sonatype/docker-nexus3/master/#user-content-persistent-data&#34;&gt;Persistent Data&lt;/a&gt; for information about the volume.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It can take some time (2-3 minutes) for the service to launch in a new container. You can tail the log to determine once Nexus is ready:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker logs -f nexus&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Installation of Nexus is to &lt;code&gt;/opt/sonatype/nexus&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A persistent directory, &lt;code&gt;/nexus-data&lt;/code&gt;, is used for configuration, logs, and storage. This directory needs to be writable by the Nexus process, which runs as UID 200.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;There is an environment variable that is being used to pass JVM arguments to the startup script&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;INSTALL4J_ADD_VM_PARAMS&lt;/code&gt;, passed to the Install4J startup script. Defaults to &lt;code&gt;-Xms2703m -Xmx2703m -XX:MaxDirectMemorySize=2703m -Djava.util.prefs.userRoot=${NEXUS_DATA}/javaprefs&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;This can be adjusted at runtime:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ docker run -d -p 8081:8081 --name nexus -e INSTALL4J_ADD_VM_PARAMS=&#34;-Xms2703m -Xmx2703m -XX:MaxDirectMemorySize=2703m -Djava.util.prefs.userRoot=/some-other-dir&#34; sonatype/nexus3&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Of particular note, &lt;code&gt;-Djava.util.prefs.userRoot=/some-other-dir&lt;/code&gt; can be set to a persistent path, which will maintain the installed Nexus Repository License if the container is restarted.&lt;/p&gt; &lt;p&gt;Be sure to check the &lt;a href=&#34;https://help.sonatype.com/display/NXRM3/System+Requirements#SystemRequirements-MemoryRequirements&#34;&gt;memory requirements&lt;/a&gt; when deciding how much heap and direct memory to allocate.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Another environment variable can be used to control the Nexus Context Path&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;NEXUS_CONTEXT&lt;/code&gt;, defaults to /&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;This can be supplied at runtime:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ docker run -d -p 8081:8081 --name nexus -e NEXUS_CONTEXT=nexus sonatype/nexus3&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Persistent Data&lt;/h3&gt; &#xA;&lt;p&gt;There are two general approaches to handling persistent storage requirements with Docker. See &lt;a href=&#34;https://docs.docker.com/engine/tutorials/dockervolumes/&#34;&gt;Managing Data in Containers&lt;/a&gt; for additional information.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;em&gt;Use a docker volume&lt;/em&gt;. Since docker volumes are persistent, a volume can be created specifically for this purpose. This is the recommended approach.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker volume create --name nexus-data&#xA;$ docker run -d -p 8081:8081 --name nexus -v nexus-data:/nexus-data sonatype/nexus3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;em&gt;Mount a host directory as the volume&lt;/em&gt;. This is not portable, as it relies on the directory existing with correct permissions on the host. However it can be useful in certain situations where this volume needs to be assigned to certain specific underlying storage.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mkdir /some/dir/nexus-data &amp;amp;&amp;amp; chown -R 200 /some/dir/nexus-data&#xA;$ docker run -d -p 8081:8081 --name nexus -v /some/dir/nexus-data:/nexus-data sonatype/nexus3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;Looking to contribute to our Docker image but need some help? There&#39;s a few ways to get information or our attention:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chat with us on &lt;a href=&#34;https://gitter.im/sonatype/nexus-developers&#34;&gt;Gitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;File an issue &lt;a href=&#34;https://issues.sonatype.org/projects/NEXUS/&#34;&gt;on our public JIRA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check out the &lt;a href=&#34;http://stackoverflow.com/questions/tagged/nexus3&#34;&gt;Nexus3&lt;/a&gt; tag on Stack Overflow&lt;/li&gt; &#xA; &lt;li&gt;Check out the &lt;a href=&#34;https://groups.google.com/a/glists.sonatype.com/forum/?hl=en#!forum/nexus-users&#34;&gt;Nexus Repository User List&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Nexus Repository OSS is distributed with Sencha Ext JS pursuant to a FLOSS Exception agreed upon between Sonatype, Inc. and Sencha Inc. Sencha Ext JS is licensed under GPL v3 and cannot be redistributed as part of a closed source work.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>GrupoYACCK/odoo-docker</title>
    <updated>2022-08-16T01:40:04Z</updated>
    <id>tag:github.com,2022-08-16:/GrupoYACCK/odoo-docker</id>
    <link href="https://github.com/GrupoYACCK/odoo-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Odoo, Nginx, Postgres Usando Docker Compose&lt;/h1&gt; &#xA;&lt;p&gt;El repositorio, es una base para las soluciones de odoo usando Docker&lt;/p&gt; &#xA;&lt;h2&gt;Instalacion&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Uso&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Guia&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=jkd5G6Yg2XI&#34;&gt;YOUTUBE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contribuir&lt;/h2&gt; &#xA;&lt;p&gt;Las solicitudes para contribuir son bienvenidas. Para cambios importantes, abra un issue primero para discutir qué le gustaría cambiar.&lt;/p&gt;</summary>
  </entry>
</feed>