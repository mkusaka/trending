<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-22T01:31:53Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lavanet/lava-helm-charts</title>
    <updated>2023-11-22T01:31:53Z</updated>
    <id>tag:github.com,2023-11-22:/lavanet/lava-helm-charts</id>
    <link href="https://github.com/lavanet/lava-helm-charts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Helm charts for running lava nodes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;lava-helm-charts&lt;/h1&gt; &#xA;&lt;p&gt;Helm charts for running lava nodes&lt;/p&gt; &#xA;&lt;h2&gt;Provider&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docs &lt;a href=&#34;https://raw.githubusercontent.com/lavanet/lava-helm-charts/main/charts/provider/README.md&#34;&gt;/charts/provider/README.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Example &lt;a href=&#34;https://raw.githubusercontent.com/lavanet/lava-helm-charts/main/examples/provider&#34;&gt;/examples/provider/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chart: &lt;code&gt;oci://us-central1-docker.pkg.dev/lavanet-public/charts/lava-provider&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Image: &lt;code&gt;us-central1-docker.pkg.dev/lavanet-public/images/lava-provider:latest&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;RPC&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docs &lt;a href=&#34;https://raw.githubusercontent.com/lavanet/lava-helm-charts/main/charts/rpc/README.md&#34;&gt;/charts/rpc/README.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Example &lt;a href=&#34;https://raw.githubusercontent.com/lavanet/lava-helm-charts/main/examples/rpc&#34;&gt;/examples/rpc/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chart: &lt;code&gt;oci://us-central1-docker.pkg.dev/lavanet-public/charts/lava-rpc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Image: &lt;code&gt;us-central1-docker.pkg.dev/lavanet-public/images/lava-rpc:latest&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other Images:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;lavad: &lt;code&gt;us-central1-docker.pkg.dev/lavanet-public/images/lavad:latest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;lavap: &lt;code&gt;us-central1-docker.pkg.dev/lavanet-public/images/lavap:latest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;lavavisor: &lt;code&gt;us-central1-docker.pkg.dev/lavanet-public/images/lavavisor:latest&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>imagegenius/docker-immich</title>
    <updated>2023-11-22T01:31:53Z</updated>
    <id>tag:github.com,2023-11-22:/imagegenius/docker-immich</id>
    <link href="https://github.com/imagegenius/docker-immich" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Monolithic (Single) Docker Container for Immich&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://github.com/imagegenius/docker-immich&#34;&gt;imagegenius/immich&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/imagegenius/docker-immich/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/imagegenius/docker-immich.svg?color=007EC6&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/imagegenius/docker-immich/packages&#34;&gt;&lt;img src=&#34;https://shields.io/badge/GitHub%20Package-blue?logo=github&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub Package Repository&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.imagegenius.io/job/Docker-Pipeline-Builders/job/docker-immich/job/main/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build?labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;jobUrl=https%3A%2F%2Fci.imagegenius.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-immich%2Fjob%2Fmain%2F&amp;amp;logo=jenkins&#34; alt=&#34;Jenkins Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci-tests.imagegenius.io/immich/latest-main/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=007EC6&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=CI&amp;amp;query=CI&amp;amp;url=https%3A%2F%2Fci-tests.imagegenius.io%2Fimmich%2Flatest-main%2Fci-status.yml&#34; alt=&#34;IG CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://immich.app/&#34;&gt;Immich&lt;/a&gt; is a high performance self-hosted photo and video backup solution.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://immich.app/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/27055614/182044984-2ee6d1ed-c4a7-4331-8a4b-64fcde77fe1f.png&#34; alt=&#34;immich&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Architectures&lt;/h2&gt; &#xA;&lt;p&gt;We use Docker manifest for cross-platform compatibility. More details can be found on &lt;a href=&#34;https://github.com/docker/distribution/raw/master/docs/spec/manifest-v2-2.md#manifest-list&#34;&gt;Docker&#39;s website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To obtain the appropriate image for your architecture, simply pull &lt;code&gt;ghcr.io/imagegenius/immich:latest&lt;/code&gt;. Alternatively, you can also obtain specific architecture images by using tags.&lt;/p&gt; &#xA;&lt;p&gt;This image supports the following architectures:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Tag&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86-64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;amd64-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arm64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;arm64v8-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;armhf&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Version Tags&lt;/h2&gt; &#xA;&lt;p&gt;This image offers different versions via tags. Be cautious when using unstable or development tags, and read their descriptions carefully.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tag&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;latest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Latest Immich release with an Ubuntu base.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;noml&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Latest Immich release with an Ubuntu base. Machine-learning is completely removed.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;alpine&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Latest Immich release with an Alpine base. Machine-learning and Search with Typesense are completely removed, making it a very lightweight image.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Application Setup&lt;/h2&gt; &#xA;&lt;p&gt;The WebUI can be accessed at &lt;code&gt;http://your-ip:8080&lt;/code&gt; Follow the wizard to set up Immich.&lt;/p&gt; &#xA;&lt;p&gt;To use Immich, you need to have PostgreSQL 15 server set up externally, and Redis set up externally or within the container using a docker mod.&lt;/p&gt; &#xA;&lt;p&gt;To set up redis using the docker mod, use the following:&lt;/p&gt; &#xA;&lt;p&gt;Set &lt;code&gt;DOCKER_MODS=imagegenius/mods:universal-redis&lt;/code&gt;, and &lt;code&gt;REDIS_HOSTNAME&lt;/code&gt; to &lt;code&gt;localhost&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To use a SSL connection to your PostgreSQL database, include a PostgreSQL URL in a new &lt;code&gt;DB_URL&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;p&gt;Machine Learning operations tend to be CPU-intensive. If you&#39;re operating Immich on less capable hardware, we recommend disabling this feature. You can easily do so by setting &lt;code&gt;DISABLE_IMMICH_MACHINE_LEARNING&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Search functionality is powered by Typesense, which requires a CPU compatible with AVX. If your CPU does not support AVX, you can disable the search feature by setting &lt;code&gt;DISABLE_TYPESENSE&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To import your existing libraries into Immich :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mount your existing library folder to &lt;code&gt;/import&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;In your administration settings, include &lt;code&gt;/import&lt;/code&gt; as the external path for your user (if you have multiple users with existing libraries set the external path to &lt;code&gt;/import/&amp;lt;user&amp;gt;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;In your account settings, add a new library and set the path to &lt;code&gt;/import&lt;/code&gt; or &lt;code&gt;/import/&amp;lt;user&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Example snippets to start creating a container:&lt;/p&gt; &#xA;&lt;h3&gt;Docker Compose&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;version: &#34;2.1&#34;&#xA;services:&#xA;  immich:&#xA;    image: ghcr.io/imagegenius/immich:latest&#xA;    container_name: immich&#xA;    environment:&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      - TZ=Etc/UTC&#xA;      - DB_HOSTNAME=192.168.1.x&#xA;      - DB_USERNAME=postgres&#xA;      - DB_PASSWORD=postgres&#xA;      - DB_DATABASE_NAME=immich&#xA;      - REDIS_HOSTNAME=192.168.1.x&#xA;      - DISABLE_MACHINE_LEARNING=false #optional&#xA;      - DISABLE_TYPESENSE=false #optional&#xA;      - DB_PORT=5432 #optional&#xA;      - REDIS_PORT=6379 #optional&#xA;      - REDIS_PASSWORD= #optional&#xA;      - MACHINE_LEARNING_WORKERS=1 #optional&#xA;      - MACHINE_LEARNING_WORKER_TIMEOUT=120 #optional&#xA;    volumes:&#xA;      - path_to_appdata:/config&#xA;      - path_to_photos:/photos&#xA;      - path_to_machine-learning:/config/machine-learning #optional&#xA;      - path_to_imports:/import:ro #optional&#xA;    ports:&#xA;      - 8080:8080&#xA;    restart: unless-stopped&#xA;# This container requires an external application to be run separately to be run separately.&#xA;# Redis:&#xA;  redis:&#xA;    image: redis&#xA;    ports:&#xA;      - 6379:6379&#xA;    container_name: redis&#xA;# PostgreSQL 15:&#xA;  postgres15:&#xA;    image: postgres:15&#xA;    ports:&#xA;      - 5432:5432&#xA;    container_name: postgres15&#xA;    environment:&#xA;      POSTGRES_USER: postgres&#xA;      POSTGRES_PASSWORD: postgres&#xA;      POSTGRES_DB: immich&#xA;    volumes:&#xA;      - path_to_postgres:/var/lib/postgresql/data&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker CLI (&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/cli/&#34;&gt;Click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name=immich \&#xA;  -e PUID=1000 \&#xA;  -e PGID=1000 \&#xA;  -e TZ=Etc/UTC \&#xA;  -e DB_HOSTNAME=192.168.1.x \&#xA;  -e DB_USERNAME=postgres \&#xA;  -e DB_PASSWORD=postgres \&#xA;  -e DB_DATABASE_NAME=immich \&#xA;  -e REDIS_HOSTNAME=192.168.1.x \&#xA;  -e DISABLE_MACHINE_LEARNING=false `#optional` \&#xA;  -e DISABLE_TYPESENSE=false `#optional` \&#xA;  -e DB_PORT=5432 `#optional` \&#xA;  -e REDIS_PORT=6379 `#optional` \&#xA;  -e REDIS_PASSWORD= `#optional` \&#xA;  -e MACHINE_LEARNING_WORKERS=1 `#optional` \&#xA;  -e MACHINE_LEARNING_WORKER_TIMEOUT=120 `#optional` \&#xA;  -p 8080:8080 \&#xA;  -v path_to_appdata:/config \&#xA;  -v path_to_photos:/photos \&#xA;  -v path_to_machine-learning:/config/machine-learning `#optional` \&#xA;  -v path_to_imports:/import:ro `#optional` \&#xA;  --restart unless-stopped \&#xA;  ghcr.io/imagegenius/immich:latest&#xA;&#xA;# This container requires an external application to be run separately.&#xA;# Redis:&#xA;docker run -d \&#xA;  --name=redis \&#xA;  -p 6379:6379 \&#xA;  redis&#xA;&#xA;# PostgreSQL 15:&#xA;docker run -d \&#xA;  --name=postgres15 \&#xA;  -e POSTGRES_USER=postgres \&#xA;  -e POSTGRES_PASSWORD=postgres \&#xA;  -e POSTGRES_DB=immich \&#xA;  -v path_to_postgres:/var/lib/postgresql/data \&#xA;  -p 5432:5432 \&#xA;  postgres:15&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Variables&lt;/h2&gt; &#xA;&lt;p&gt;To configure the container, pass variables at runtime using the format &lt;code&gt;&amp;lt;external&amp;gt;:&amp;lt;internal&amp;gt;&lt;/code&gt;. For instance, &lt;code&gt;-p 8080:80&lt;/code&gt; exposes port &lt;code&gt;80&lt;/code&gt; inside the container, making it accessible outside the container via the host&#39;s IP on port &lt;code&gt;8080&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 8080&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;WebUI Port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PUID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;UID for permissions - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PGID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GID for permissions - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e TZ=Etc/UTC&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a timezone to use, see this &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List&#34;&gt;list&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DB_HOSTNAME=192.168.1.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PostgreSQL Host&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DB_USERNAME=postgres&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PostgreSQL Username&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DB_PASSWORD=postgres&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PostgreSQL Password&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DB_DATABASE_NAME=immich&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PostgreSQL Database Name&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e REDIS_HOSTNAME=192.168.1.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Redis Hostname&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DISABLE_MACHINE_LEARNING=false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set to &lt;code&gt;true&lt;/code&gt; to disable machine learning&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DISABLE_TYPESENSE=false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set to &lt;code&gt;true&lt;/code&gt; to disable Typesense (disables searching completely!)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DB_PORT=5432&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PostgreSQL Port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e REDIS_PORT=6379&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Redis Port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e REDIS_PASSWORD=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Redis password&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e MACHINE_LEARNING_WORKERS=1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Machine learning workers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e MACHINE_LEARNING_WORKER_TIMEOUT=120&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Machine learning worker timeout&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Contains the logs, machine learning models and typesense data&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /photos&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Contains all the photos uploaded to Immich&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /config/machine-learning&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Store the machine learning models (~1.5GB)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /import:ro&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This folder will be periodically scanned, contents will be automatically imported into Immich&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Umask for running applications&lt;/h2&gt; &#xA;&lt;p&gt;All of our images allow overriding the default umask setting for services started within the containers using the optional -e UMASK=022 option. Note that umask works differently than chmod and subtracts permissions based on its value, not adding. For more information, please refer to the Wikipedia article on umask &lt;a href=&#34;https://en.wikipedia.org/wiki/Umask&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;User / Group Identifiers&lt;/h2&gt; &#xA;&lt;p&gt;To avoid permissions issues when using volumes (&lt;code&gt;-v&lt;/code&gt; flags) between the host OS and the container, you can specify the user (&lt;code&gt;PUID&lt;/code&gt;) and group (&lt;code&gt;PGID&lt;/code&gt;). Make sure that the volume directories on the host are owned by the same user you specify, and the issues will disappear.&lt;/p&gt; &#xA;&lt;p&gt;Example: &lt;code&gt;PUID=1000&lt;/code&gt; and &lt;code&gt;PGID=1000&lt;/code&gt;. To find your PUID and PGID, run &lt;code&gt;id user&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ id username&#xA;    uid=1000(dockeruser) gid=1000(dockergroup) groups=1000(dockergroup)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Updating the Container&lt;/h2&gt; &#xA;&lt;p&gt;Most of our images are static, versioned, and require an image update and container recreation to update the app. We do not recommend or support updating apps inside the container. Check the &lt;a href=&#34;https://raw.githubusercontent.com/imagegenius/docker-immich/main/#application-setup&#34;&gt;Application Setup&lt;/a&gt; section for recommendations for the specific image.&lt;/p&gt; &#xA;&lt;p&gt;Instructions for updating containers:&lt;/p&gt; &#xA;&lt;h3&gt;Via Docker Compose&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update all images: &lt;code&gt;docker-compose pull&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single image: &lt;code&gt;docker-compose pull immich&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Let compose update all containers as necessary: &lt;code&gt;docker-compose up -d&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single container: &lt;code&gt;docker-compose up -d immich&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Docker Run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update the image: &lt;code&gt;docker pull ghcr.io/imagegenius/immich:latest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stop the running container: &lt;code&gt;docker stop immich&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Delete the container: &lt;code&gt;docker rm immich&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your &lt;code&gt;/config&lt;/code&gt; folder and settings will be preserved)&lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;08.11.23:&lt;/strong&gt; - move to using seperate immich baseimage&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;24.09.23:&lt;/strong&gt; - house cleaning&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;24.09.23:&lt;/strong&gt; - add vars for ml workers/timeout&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.07.23:&lt;/strong&gt; - remove cuda acceleration for machine-learning&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.05.23:&lt;/strong&gt; - move to ubuntu lunar and support cuda acceleration for machine-learning&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;22.05.23:&lt;/strong&gt; - deprecate postgresql docker mod&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;18.05.23:&lt;/strong&gt; - add support for facial recognition&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;07.05.23:&lt;/strong&gt; - remove unused &lt;code&gt;JWT_SECRET&lt;/code&gt; env&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;13.04.23:&lt;/strong&gt; - add variables to disable typesense and machine learning&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;10.04.23:&lt;/strong&gt; - fix gunicorn&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;04.04.23:&lt;/strong&gt; - use environment variables to set location of the photos folder&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.04.23:&lt;/strong&gt; - Cache is downloaded to the host (/config/transformers)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.04.23:&lt;/strong&gt; - remove unused Immich environment variables&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;21.03.23:&lt;/strong&gt; - Add service checks&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;05.03.23:&lt;/strong&gt; - add typesense&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;27.02.23:&lt;/strong&gt; - re-enable aarch64 with pre-release torch build&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;18.02.23:&lt;/strong&gt; - use machine-learning with python&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;11.02.23:&lt;/strong&gt; - use external app block&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.02.23:&lt;/strong&gt; - Use Immich environment variables for immich services instead of hosts file&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.02.23:&lt;/strong&gt; - execute CLI with the command immich&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;04.02.23:&lt;/strong&gt; - shrink image&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;26.01.23:&lt;/strong&gt; - add unraid migration to readme&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;26.01.23:&lt;/strong&gt; - use find to apply chown to /app, excluding node_modules&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;26.01.23:&lt;/strong&gt; - enable ci testing&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;24.01.23:&lt;/strong&gt; - fix services starting prematurely, causing permission errors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.01.23:&lt;/strong&gt; - add noml image to readme and add aarch64 image to readme, make github release stable&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;21.01.23:&lt;/strong&gt; - BREAKING: Redis is removed. Update missing param_env_vars &amp;amp; opt_param_env_vars for redis &amp;amp; postgres&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;02.01.23:&lt;/strong&gt; - Initial Release.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/vscode-linux-build-agent</title>
    <updated>2023-11-22T01:31:53Z</updated>
    <id>tag:github.com,2023-11-22:/microsoft/vscode-linux-build-agent</id>
    <link href="https://github.com/microsoft/vscode-linux-build-agent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;VS Code Linux Build Agent&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VS Code Linux Build Agent&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/monacotools/Monaco/_build/latest?definitionId=509&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/monacotools/Monaco/_apis/build/status%2FVS%20Code%20Linux%20Build%20Agent?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Develop&lt;/h2&gt; &#xA;&lt;p&gt;Just push to &lt;code&gt;main&lt;/code&gt;!&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.microsoft.com&#34;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
</feed>