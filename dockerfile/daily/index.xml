<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-11T01:38:32Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>serversideup/docker-php</title>
    <updated>2022-08-11T01:38:32Z</updated>
    <id>tag:github.com,2022-08-11:/serversideup/docker-php</id>
    <link href="https://github.com/serversideup/docker-php" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Production-ready Docker images for PHP. Optimized for Laravel, WordPress, and more!&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/serversideup/docker-php/main/.github/header.png&#34; width=&#34;1200&#34; alt=&#34;Docker Images Logo&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://actions-badge.atrox.dev/serversideup/docker-php/goto?ref=main&#34;&gt;&lt;img alt=&#34;Build Status&#34; src=&#34;https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2Fserversideup%2Fdocker-php%2Fbadge%3Fref%3Dmain&amp;amp;style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/serversideup/docker-php/raw/main/LICENSE&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://badgen.net/github/license/serversideup/docker-php&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/serversideup&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/icon/Support%20Us?label=GitHub%20Sponsors&amp;amp;color=orange&#34; alt=&#34;Support us&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://hub.docker.com/r/serversideup/php/&#34;&gt;&lt;img alt=&#34;Docker Pulls&#34; src=&#34;https://img.shields.io/docker/pulls/serversideup/php&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://community.serversideup.net&#34;&gt;&lt;img alt=&#34;Discourse users&#34; src=&#34;https://img.shields.io/discourse/users?color=blue&amp;amp;server=https%3A%2F%2Fcommunity.serversideup.net&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://serversideup.net/discord&#34;&gt;&lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/910287105714954251?color=blueviolet&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Hi! We&#39;re &lt;a href=&#34;https://twitter.com/danpastori&#34;&gt;Dan&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/jaydrogers&#34;&gt;Jay&lt;/a&gt;. We&#39;re a two person team with a passion for open source products. We created &lt;a href=&#34;https://serversideup.net&#34;&gt;Server Side Up&lt;/a&gt; to help share what we learn.&lt;/p&gt; &#xA;&lt;h3&gt;Find us at:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìñ &lt;a href=&#34;https://serversideup.net&#34;&gt;Blog&lt;/a&gt; - get the latest guides and free courses on all things web/mobile development.&lt;/li&gt; &#xA; &lt;li&gt;üôã &lt;a href=&#34;https://community.serversideup.net&#34;&gt;Community&lt;/a&gt; - get friendly help from our community members.&lt;/li&gt; &#xA; &lt;li&gt;ü§µ‚Äç‚ôÇÔ∏è &lt;a href=&#34;https://serversideup.net/get-help&#34;&gt;Get Professional Help&lt;/a&gt; - get guaranteed responses within next business day.&lt;/li&gt; &#xA; &lt;li&gt;üíª &lt;a href=&#34;https://github.com/serversideup&#34;&gt;GitHub&lt;/a&gt; - check out our other open source projects&lt;/li&gt; &#xA; &lt;li&gt;üì´ &lt;a href=&#34;https://serversideup.net/subscribe&#34;&gt;Newsletter&lt;/a&gt; - skip the algorithms and get quality content right to your inbox&lt;/li&gt; &#xA; &lt;li&gt;üê• &lt;a href=&#34;https://twitter.com/serversideup&#34;&gt;Twitter&lt;/a&gt; - you can also follow &lt;a href=&#34;https://twitter.com/danpastori&#34;&gt;Dan&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/jaydrogers&#34;&gt;Jay&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;‚ù§Ô∏è &lt;a href=&#34;https://github.com/sponsors/serversideup&#34;&gt;Sponsor Us&lt;/a&gt; - please consider sponsoring us so we can create more helpful resources&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Our Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;All of our software is free an open to the world. None of this can be brought to you without the financial backing of our sponsors.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/sponsors/serversideup&#34;&gt;&lt;img src=&#34;https://serversideup.net/wp-content/themes/serversideup/images/sponsor-empty-state.png&#34; alt=&#34;Sponsors&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Available Docker Images&lt;/h1&gt; &#xA;&lt;p&gt;This is a list of the docker images this repository creates:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;‚öôÔ∏è Variation&lt;/th&gt; &#xA;   &lt;th&gt;‚ú® Version&lt;/th&gt; &#xA;   &lt;th&gt;üöÄ Size&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cli&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=7.4-cli&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;7.4&lt;/a&gt;, &lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.0-cli&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;8.0&lt;/a&gt;, &lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.1-cli&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;8.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=cli&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/8.1-cli&#34; alt=&#34;Docker Image Size (tag)&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fpm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=7.4-fpm&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;7.4&lt;/a&gt;, &lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.0-fpm&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;8.0&lt;/a&gt;, &lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.1-fpm&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;8.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=fpm&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/8.1-fpm&#34; alt=&#34;Docker Image Size (tag)&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=7.4-fpm-apache&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;7.4&lt;/a&gt;, &lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.0-fpm-apache&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;8.0&lt;/a&gt;, &lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.1-fpm-apache&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;8.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=fpm-apache&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/8.1-fpm-apache&#34; alt=&#34;Docker Image Size (tag)&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fpm-nginx&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=7.4-fpm-nginx&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;7.4&lt;/a&gt;, &lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.0-fpm-nginx&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;8.0&lt;/a&gt;, &lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.1-fpm-nginx&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;8.1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=fpm-nginx&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/8.1-fpm-nginx&#34; alt=&#34;Docker Image Size (tag)&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Simply use this image name pattern in any of your projects:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;serversideup/php:{{version}}-{{variation-name}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example... If I wanted to run &lt;strong&gt;PHP 8.0&lt;/strong&gt; with &lt;strong&gt;FPM + NGINX&lt;/strong&gt;, I would use this image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;serversideup/php:8.0-fpm-nginx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Real-life working example&lt;/h3&gt; &#xA;&lt;p&gt;You can see a bigger picture on how these images are used from Development to Production by viewing this video that shows a high level overview how we deploy &#34;&lt;a href=&#34;https://roastandbrew.coffee/&#34;&gt;ROAST&lt;/a&gt;&#34; which is a demo production app for &lt;a href=&#34;https://serversideup.net/ultimate-guide-to-building-apis-and-spas-with-laravel-and-vuejs/&#34;&gt;our book&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Click the image below to view the video:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=PInGAWnvkjM&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/PInGAWnvkjM/0.jpg&#34; alt=&#34;Laravel + NuxtJS From Dev to production&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Updates&lt;/h3&gt; &#xA;&lt;p&gt;‚úÖ The image builds automatically run weekly (Tuesday at 0800 UTC) for latest security updates.&lt;/p&gt; &#xA;&lt;h3&gt;How these images are built&lt;/h3&gt; &#xA;&lt;p&gt;All images are built off of the official Ubuntu 20.04 docker image. We first build our CLI image, then our FPM, etc. Here is what this looks like:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/serversideup/docker-php/main/.github/dependency-diagram.png&#34; alt=&#34;Dependency Diagram&#34;&gt; &#xA;&lt;h1&gt;Where do you host your stuff?&lt;/h1&gt; &#xA;&lt;p&gt;We get this question often. Our biggest principle is: &lt;strong&gt;your infrastructure should be able to run anywhere.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;We believe privacy and control is the #1 priority when it comes to hosting infrastructure. We try to avoid the &#34;big clouds&#34; as much as possible because we&#39;re not comfortable that all 3 major players practice data mining of users and their products usually contain some sort of &#34;vendor-lock&#34;.&lt;/p&gt; &#xA;&lt;p&gt;We run all of our production servers on the latest LTS release of Ubuntu Server. The hosts we use are below. Some may be affiliate links that kick a few bucks at no extra cost to you, but they do not affect our recommendations at all.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://vultr.grsm.io/create&#34;&gt;Vultr&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Our current favorite.&lt;/strong&gt; Excellent performance and value. Lots of datacenter options too.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://m.do.co/c/f3bad4b927ca&#34;&gt;Digital Ocean&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Lots of developer love here. Not the best performing servers, but they do have a lot of awesome products!&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://www.linode.com/?r=5a1b585e4eb919d3d89ad242bd1bb2924754c444&#34;&gt;Linode&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Great performance and great support. These guys have really enhanced their offering over the last few years.&lt;/p&gt; &#xA;&lt;h3&gt;Benchmarks&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re shopping for a host, &lt;a href=&#34;https://www.notion.so/521dimensions/Benchmark-Results-for-Self-hosted-Gitlab-Server-c6eca7c5f16d4bb8aeb989174fc58ffe&#34;&gt;check out the benchmarks we&#39;ve ran ‚Üí&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Can I run this on another host?&lt;/h3&gt; &#xA;&lt;p&gt;Sure! It all depends what platform you want to use, but if it supports Docker images, you likely can run it. These images are designed to give you freedom no matter where you want to run them.&lt;/p&gt; &#xA;&lt;h1&gt;About this project&lt;/h1&gt; &#xA;&lt;p&gt;We&#39;re taking the extra effort to open source as much as we can. Not only could this potentially help someone learn a little bit of Docker, but it makes it a &lt;em&gt;heck of a lot&lt;/em&gt; easier for us to work with you on new open source ideas.&lt;/p&gt; &#xA;&lt;h3&gt;Project credits &amp;amp; inspiration&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/fideloper&#34;&gt;Chris Fidao&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Majority of our knowledge came from Chris&#39; course, &lt;a href=&#34;https://serversforhackers.com/shipping-docker&#34;&gt;Shipping Docker&lt;/a&gt;. If you have yet to discover his content, you will be very satisfied with every course he has to offer. He&#39;s a great human being and excellent educator.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/phpdocker-io/base-images&#34;&gt;PHPDocker.io&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This team has an excellent repository and millions of pulls per month. We really like how they structured their code.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://www.linuxserver.io/&#34;&gt;linuxserver.io&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;These guys are absolute aces when it comes to Docker development. They are a great resource for tons of open source Docker images.&lt;/p&gt; &#xA;&lt;h1&gt;Why these images and not other ones?&lt;/h1&gt; &#xA;&lt;p&gt;These images have a few key differences. These images are:&lt;/p&gt; &#xA;&lt;h2&gt;üöÄ These images are used in production&lt;/h2&gt; &#xA;&lt;p&gt;Our philosophy is: &lt;strong&gt;What you run in production is what you should be running in development.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You&#39;d be shocked how many people create a Docker image and use it in the local development only. These images are designed with the intention of being deployed to the open and wild Internet.&lt;/p&gt; &#xA;&lt;h2&gt;üîß Optimized for Laravel and WordPress&lt;/h2&gt; &#xA;&lt;p&gt;We have a ton of helpful scripts and security settings configured for managing Laravel and WordPress.&lt;/p&gt; &#xA;&lt;h3&gt;Automated tasks executed on every container start up&lt;/h3&gt; &#xA;&lt;p&gt;We automatically detect if Laravel is installed and give you the option to enable automatic migrations and apply storage linking.&lt;/p&gt; &#xA;&lt;h4&gt;Database Migrations:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;php artisan migrate --force&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Automatic migrations are DISABLED by default.&lt;/strong&gt; To enable, set an environment variable of &lt;code&gt;AUTORUN_LARAVEL_MIGRATION=true&lt;/code&gt; on your container. We &lt;strong&gt;do not recommend&lt;/strong&gt; enabling this on large or distributed applications. You should run your migrations manually for larger apps.&lt;/p&gt; &#xA;&lt;h4&gt;Storage Linking:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;php artisan storage:link&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Storage linking is ENABLED by default.&lt;/strong&gt; You can disable this behavior by setting &lt;code&gt;AUTORUN_LARAVEL_STORAGE_LINK=false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Running a Laravel Task Scheduler&lt;/h3&gt; &#xA;&lt;p&gt;We need to run the &lt;a href=&#34;https://laravel.com/docs/8.x/scheduling#running-the-scheduler-locally&#34;&gt;schedule:work&lt;/a&gt; command from Laravel. Although the docs say &#34;Running the scheduler locally&#34;, this is what we want in production. It will run the scheduler in the foreground and execute it every minute. You can configure your Laravel app for the exact time that a command should run through a &lt;a href=&#34;https://laravel.com/docs/8.x/scheduling#scheduling-artisan-commands&#34;&gt;scheduled task&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Task Scheduler Command:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;php artisan schedule:work&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example Docker Compose File:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;3&#39;&#xA;services:&#xA;  php:&#xA;    image: my/laravel-app&#xA;    environment:&#xA;      PHP_POOL_NAME: &#34;my-app_php&#34;&#xA;&#xA;  task:&#xA;    image: my/laravel-app&#xA;    # Switch to &#34;webuser&#34; before running `php artisan`&#xA;    # Declare command in list manner for environment variable expansion&#xA;    command: [&#34;su&#34;, &#34;webuser&#34;, &#34;-c&#34;, &#34;php artisan schedule:work&#34;]&#xA;    environment:&#xA;      PHP_POOL_NAME: &#34;my-app_task&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running a Laravel Queue&lt;/h3&gt; &#xA;&lt;p&gt;All you need to do is pass the Laravel Queue command to the container and S6 will automatically monitor it for you.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Task Command:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;php artisan queue:work --tries=3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example Docker Compose File:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;3&#39;&#xA;services:&#xA;  php:&#xA;    image: my/laravel-app&#xA;    environment:&#xA;      PHP_POOL_NAME: &#34;my-app_php&#34;&#xA;&#xA;  queue:&#xA;    image: my/laravel-app&#xA;    # Switch to &#34;webuser&#34; before running `php artisan`&#xA;    # Declare command in list manner for environment variable expansion&#xA;    command: [&#34;su&#34;, &#34;webuser&#34;, &#34;-c&#34;, &#34;php artisan queue:work --tries=3&#34;]&#xA;    environment:&#xA;      PHP_POOL_NAME: &#34;my-app_queue&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running Laravel Horizon with a Redis Queue&lt;/h3&gt; &#xA;&lt;p&gt;By passing Laravel Horizon to our container, S6 will automatically monitor it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Horizon Command:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;php artisan horizon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example Docker Compose File:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;3&#39;&#xA;services:&#xA;  php:&#xA;    image: my/laravel-app&#xA;    environment:&#xA;      PHP_POOL_NAME: &#34;my-app_php&#34;&#xA;&#xA;  redis:&#xA;    image: redis:6&#xA;    command: &#34;redis-server --appendonly yes --requirepass redispassword&#34;&#xA;&#xA;  horizon:&#xA;    image: my/laravel-app&#xA;    # Switch to &#34;webuser&#34; before running `php artisan`&#xA;    # Declare command in list manner for environment variable expansion&#xA;    command: [&#34;su&#34;, &#34;webuser&#34;, &#34;-c&#34;, &#34;php artisan horizon&#34;]&#xA;    environment:&#xA;      PHP_POOL_NAME: &#34;my-app_horizon&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üîë WordPress &amp;amp; Security Optimizations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hardening of Apache &amp;amp; NGINX included&lt;/li&gt; &#xA; &lt;li&gt;Disabling of XML-RPC&lt;/li&gt; &#xA; &lt;li&gt;Preventative access to sensitive version control or CI files&lt;/li&gt; &#xA; &lt;li&gt;Protection against other common attacks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://raw.githubusercontent.com/serversideup/docker-php/main/php/8.0/fpm-apache/etc/apache2/conf-available/security.conf&#34;&gt;Apache security.conf&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/serversideup/docker-php/main/php/8.0/fpm-nginx/etc/nginx/server-opts.d/security.conf&#34;&gt;NGINX security.conf&lt;/a&gt; for more detail.&lt;/p&gt; &#xA;&lt;h3&gt;Examples of running WordPress&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re looking for a deeper example on how we run our WordPress blog, &lt;a href=&#34;https://serversideup.net&#34;&gt;Server Side Up&lt;/a&gt;, check out this repository for a boilerplate example: &lt;a href=&#34;https://github.com/serversideup/docker-wordpress&#34;&gt;https://github.com/serversideup/docker-wordpress&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üßê Based off of &lt;a href=&#34;https://github.com/just-containers/s6-overlay&#34;&gt;S6 Overlay&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;S6 Overlay is very helpful in managing a container&#39;s lifecycle that has multiple processes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Wait... Isn&#39;t Docker supposed to be a &#34;single process per container&#34;?&lt;/strong&gt; Yes, that&#39;s what it&#39;s like in a perfect world. Unfortunately PHP isn&#39;t like that. You need both a web server and a PHP-FPM server to see your files in order for your application to load.&lt;/p&gt; &#xA;&lt;p&gt;We follow the &lt;a href=&#34;https://github.com/just-containers/s6-overlay#the-docker-way&#34;&gt;S6 Overlay Philosophy&lt;/a&gt; on how we can still get a single, disposable, and repeatable image of our application out to our servers.&lt;/p&gt; &#xA;&lt;h1&gt;Environment Variables&lt;/h1&gt; &#xA;&lt;p&gt;We like to customize our images on a per app basis using environment variables. Look below to see what variables are available and what their defaults are. You can easily override them in your own docker environments (&lt;a href=&#34;https://docs.docker.com/compose/environment-variables/#set-environment-variables-in-containers&#34;&gt;see Docker&#39;s documentation&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;üîÄ Variable Name&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;üìö Description&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;‚öôÔ∏è Used in variation&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;#Ô∏è‚É£ Default Value&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PUID&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;User ID the webserver and PHP should run as.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;all&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9999&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PGID&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Group ID the webserver and PHP should run as.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;all&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9999&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WEBUSER_HOME&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;BETA: You can change the home of the web user if needed.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;all (except *-nginx)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;/var/www/html&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PHP_DATE_TIMEZONE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Control your timezone. (&lt;a href=&#34;https://www.php.net/manual/en/datetime.configuration.php#ini.date.timezone&#34;&gt;Official Docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm,&lt;br&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;UTC&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PHP_DISPLAY_ERRORS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Show PHP errors on screen. (&lt;a href=&#34;https://www.php.net/manual/en/errorfunc.configuration.php#ini.display-errors&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm,&lt;br&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;On&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PHP_ERROR_REPORTING&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Set PHP error reporting level. (&lt;a href=&#34;https://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm,&lt;br&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;E_ALL &amp;amp; ~E_DEPRECATED &amp;amp; ~E_STRICT&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PHP_MAX_EXECUTION_TIME&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Set the maximum time in seconds a script is allowed to run before it is terminated by the parser. (&lt;a href=&#34;https://www.php.net/manual/en/info.configuration.php#ini.max-execution-time&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm,&lt;br&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;99&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PHP_MEMORY_LIMIT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Set the maximum amount of memory in bytes that a script is allowed to allocate. (&lt;a href=&#34;https://www.php.net/manual/en/ini.core.php#ini.memory-limit&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm,&lt;br&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;256M&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PHP_PM_CONTROL&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Choose how the process manager will control the number of child processes. (&lt;a href=&#34;https://www.php.net/manual/en/install.fpm.configuration.php&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm,&lt;br&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;fpm:&lt;/strong&gt; dynamic&lt;br&gt;&lt;strong&gt;fpm-apache:&lt;/strong&gt; ondemand&lt;br&gt;&lt;strong&gt;fpm-nginx:&lt;/strong&gt; ondemand&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PHP_PM_MAX_CHILDREN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;The number of child processes to be created when pm is set to static and the maximum number of child processes to be created when pm is set to dynamic. (&lt;a href=&#34;https://www.php.net/manual/en/install.fpm.configuration.php&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm,&lt;br&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;20&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PHP_PM_MAX_SPARE_SERVERS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;The desired maximum number of idle server processes. Used only when pm is set to dynamic. (&lt;a href=&#34;https://www.php.net/manual/en/install.fpm.configuration.php&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm,&lt;br&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;3&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PHP_PM_MIN_SPARE_SERVERS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;The desired minimum number of idle server processes. Used only when pm is set to dynamic. (&lt;a href=&#34;https://www.php.net/manual/en/install.fpm.configuration.php&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm,&lt;br&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;1&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PHP_PM_START_SERVERS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;The number of child processes created on startup. Used only when pm is set to dynamic. (&lt;a href=&#34;https://www.php.net/manual/en/install.fpm.configuration.php&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm,&lt;br&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;2&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PHP_POOL_NAME&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Set the name of your PHP-FPM pool (helpful when running multiple sites on a single server).&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm,&lt;br&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;www&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PHP_POST_MAX_SIZE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Sets max size of post data allowed. (&lt;a href=&#34;https://www.php.net/manual/en/ini.core.php#ini.post-max-size&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm,&lt;br&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;100M&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PHP_UPLOAD_MAX_FILE_SIZE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;The maximum size of an uploaded file. (&lt;a href=&#34;https://www.php.net/manual/en/ini.core.php#ini.upload-max-filesize&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm,&lt;br&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;100M&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AUTORUN_ENABLED&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Enable or disable all autoruns. It&#39;s advised to set this to &lt;code&gt;false&lt;/code&gt; in certain CI environments (especially during a composer install)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm,&lt;br&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;true&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AUTORUN_LARAVEL_STORAGE_LINK&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Automatically run &#34;php artisan storage:link&#34; on container start&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm,&lt;br&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;true&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AUTORUN_LARAVEL_MIGRATION&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Automatically run &#34;php artisan migrate --force&#34; on container start. This is &lt;strong&gt;not&lt;/strong&gt; recommended for large or distributed apps. Run your migrations manually instead.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm,&lt;br&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;false&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;MSMTP_RELAY_SERVER_HOSTNAME&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Server that should relay emails for MSMTP. (&lt;a href=&#34;https://marlam.de/msmtp/msmtp.html&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;mailhog&#34;&lt;br&gt;&lt;br&gt;üö® IMPORTANT: Change this value if you want emails to work. (we set it to &lt;a href=&#34;https://github.com/mailhog/MailHog&#34;&gt;Mailhog&lt;/a&gt; so our staging sites do not send emails out)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;MSMTP_RELAY_SERVER_PORT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Port the SMTP server is listening on. (&lt;a href=&#34;https://marlam.de/msmtp/msmtp.html&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;1025&#34; (default port for Mailhog)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;DEBUG_OUTPUT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Set this variable to &lt;code&gt;true&lt;/code&gt; if you want to put PHP and your web server in debug mode.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm-nginx,&lt;br&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;(undefined, false)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;APACHE_DOCUMENT_ROOT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Sets the directory from which Apache will serve files. (&lt;a href=&#34;https://httpd.apache.org/docs/2.4/mod/core.html#documentroot&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;/var/www/html&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;APACHE_MAX_CONNECTIONS_PER_CHILD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Sets the limit on the number of connections that an individual child server process will handle.(&lt;a href=&#34;https://httpd.apache.org/docs/2.4/mod/mpm\_common.html#maxconnectionsperchild&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;0&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;APACHE_MAX_REQUEST_WORKERS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Sets the limit on the number of simultaneous requests that will be served. (&lt;a href=&#34;https://httpd.apache.org/docs/2.4/mod/mpm\_common.html#maxrequestworkers&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;150&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;APACHE_MAX_SPARE_THREADS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Maximum number of idle threads. (&lt;a href=&#34;https://httpd.apache.org/docs/2.4/mod/mpm\_common.html#maxsparethreads&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;75&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;APACHE_MIN_SPARE_THREADS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Minimum number of idle threads to handle request spikes. (&lt;a href=&#34;https://httpd.apache.org/docs/2.4/mod/mpm\_common.html#minsparethreads&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;10&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;APACHE_RUN_GROUP&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Set the username of what Apache should run as.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;webgroup&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;APACHE_RUN_USER&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Set the username of what Apache should run as.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;webuser&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;APACHE_START_SERVERS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Sets the number of child server processes created on startup.(&lt;a href=&#34;https://httpd.apache.org/docs/2.4/mod/mpm\_common.html#startservers&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;2&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;APACHE_THREAD_LIMIT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Set the maximum configured value for ThreadsPerChild for the lifetime of the Apache httpd process. (&lt;a href=&#34;https://httpd.apache.org/docs/2.4/mod/mpm\_common.html#threadlimit&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;64&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;APACHE_THREADS_PER_CHILD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;This directive sets the number of threads created by each child process. (&lt;a href=&#34;https://httpd.apache.org/docs/2.4/mod/mpm\_common.html#threadsperchild&#34;&gt;Official docs&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;25&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Other customizations&lt;/h1&gt; &#xA;&lt;h3&gt;Installing additional PHP extensions&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s say that we have a basic Docker compose image working in development:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;3.7&#39;&#xA;services:&#xA;  php:&#xA;    image: serversideup/php:8.0-fpm-nginx&#xA;    volumes:&#xA;      - .:/var/www/html/:cached&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now let&#39;s say we want to add the &lt;strong&gt;PHP ImageMagick&lt;/strong&gt; extension. To do this, we will use the &lt;a href=&#34;https://docs.docker.com/compose/compose-file/compose-file-v3/#build&#34;&gt;docker compose build&lt;/a&gt; option in our YAML file.&lt;/p&gt; &#xA;&lt;p&gt;This means we would need to change our file above to look like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;3.7&#39;&#xA;services:&#xA;  php:&#xA;    build:&#xA;      context: .&#xA;      dockerfile: Dockerfile&#xA;    volumes:&#xA;      - .:/var/www/html/:cached&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notice the &lt;code&gt;services.php.build&lt;/code&gt; options. We set a &lt;code&gt;.&lt;/code&gt; to look for a dockerfile called &lt;code&gt;Dockerfile&lt;/code&gt; within the same directory as our &lt;code&gt;docker-compose.yml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;For extra clarity, my project directory would look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;.&#xA;‚îú‚îÄ‚îÄ Dockerfile&#xA;‚îú‚îÄ‚îÄ docker-compose.yml&#xA;‚îî‚îÄ‚îÄ public&#xA;    ‚îî‚îÄ‚îÄ index.php&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Dockerfile is where all the magic will happen. This is where we pull the Server Side Up image as a dependency, then run standard Ubuntu commands to add the extension that we need.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Dockerfile:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;# Set our base image&#xA;FROM serversideup/php:8.0-fpm-nginx&#xA;&#xA;# Install PHP Imagemagick using regular Ubuntu commands&#xA;RUN apt-get update \&#xA;    &amp;amp;&amp;amp; apt-get install -y --no-install-recommends php8.0-imagick \&#xA;    &amp;amp;&amp;amp; apt-get clean \&#xA;    &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The next time you run &lt;code&gt;docker compose up&lt;/code&gt;, Docker will build and cache the image for you automatically.&lt;/p&gt; &#xA;&lt;p&gt;You can verify the CLI option installed correctly by echoing out the installed modules. Run this command in a new window &lt;strong&gt;while your containers are running via Docker Compose&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker compose exec php php -m&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To check that PHP-FPM loaded everything properly, use the &lt;a href=&#34;https://www.php.net/manual/en/function.phpinfo.php&#34;&gt;phpinfo()&lt;/a&gt; functionally.&lt;/p&gt; &#xA;&lt;h4&gt;‚ö†Ô∏è Important note about caching&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You&#39;ll notice Docker likes to cache image builds (which is great for most functions)&lt;/li&gt; &#xA; &lt;li&gt;If you make changes to your &lt;em&gt;Dockerfile&lt;/em&gt;, you may need to include &lt;code&gt;--build&lt;/code&gt; with your Docker compose command (&lt;a href=&#34;https://docs.docker.com/compose/reference/up/&#34;&gt;read more here&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to rebuild, then you would run this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker compose up --build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;How do I know which package name to use?&lt;/h4&gt; &#xA;&lt;p&gt;Refer to the official instructions of the extension that you are trying to install. We use Ondrej&#39;s PHP repository, so chances are you might be able to find in in here: &lt;a href=&#34;https://launchpad.net/~ondrej/+archive/ubuntu/php/+packages&#34;&gt;https://launchpad.net/~ondrej/+archive/ubuntu/php/+packages&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Make sure to use the same version number as well. For example... If you are using &lt;code&gt;8.0&lt;/code&gt; and want to install the &lt;strong&gt;php-imagick&lt;/strong&gt; package, use the name &lt;code&gt;php8.0-imagick&lt;/code&gt; during install (see my examples above).&lt;/p&gt; &#xA;&lt;h3&gt;Production SSL Configurations&lt;/h3&gt; &#xA;&lt;p&gt;You have a few options for running SSL. By default, we generate a self-signed certificate for simple local development. For production use, we recommend using &lt;a href=&#34;https://traefik.io/&#34;&gt;Traefik&lt;/a&gt; or &lt;a href=&#34;https://caddyserver.com/&#34;&gt;Caddy&lt;/a&gt; as a proxy to your actual container. This is what we do and it&#39;s really nice to use the automatic Let&#39;s Encrypt SSL management with these products.&lt;/p&gt; &#xA;&lt;p&gt;If you really want you use your own provided certificate, you&#39;ll just need to use &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;Docker Volumes&lt;/a&gt; and mount the &lt;code&gt;/etc/ssl/web&lt;/code&gt; folder with these two files in that directory:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;/etc/ssl/web/ssl.crt&lt;/li&gt; &#xA; &lt;li&gt;/etc/ssl/web/ssl.key&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Submitting issues and pull requests&lt;/h1&gt; &#xA;&lt;p&gt;Since there are a lot of dependencies on these images, please understand that it can make it complicated on merging your pull request.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;d love to have your help, but it might be best to explain your intentions first before contributing.&lt;/p&gt; &#xA;&lt;h3&gt;Like we said -- we&#39;re always learning&lt;/h3&gt; &#xA;&lt;p&gt;If you find a critical security flaw, please open an issue or learn more about &lt;a href=&#34;https://www.notion.so/Responsible-Disclosure-Policy-421a6a3be1714d388ebbadba7eebbdc8&#34;&gt;our responsible disclosure policy&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>renovatebot/tutorial</title>
    <updated>2022-08-11T01:38:32Z</updated>
    <id>tag:github.com,2022-08-11:/renovatebot/tutorial</id>
    <link href="https://github.com/renovatebot/tutorial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Renovate Bot Tutorial source&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Renovate - Hands On Tutorial&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to the Renovate hands-on tutorial.&lt;/p&gt; &#xA;&lt;p&gt;This tutorial is based on the Renovate GitHub App. You can also run Renovate as a CLI tool or a self-hosted application.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Although this tutorial is based on the GitHub App, the concepts discussed apply to all environments.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;In this tutorial, you will learn how to configure Renovate and become familiar with some of the basic features.&lt;/p&gt; &#xA;&lt;p&gt;What you will learn:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Installation&lt;/li&gt; &#xA; &lt;li&gt;Onboarding&lt;/li&gt; &#xA; &lt;li&gt;Getting to know Renovate‚Äôs update PRs&lt;/li&gt; &#xA; &lt;li&gt;Dependency Dashboard&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We will begin this tutorial with configuring and installing the Renovate app and an overview of the default settings and basic functionalities.&lt;/p&gt; &#xA;&lt;p&gt;Later, we will dive deeper into functional use-cases, advanced features, and &lt;code&gt;best practices&lt;/code&gt; so you&#39;ll know how to leverage Renovate to its fullest.&lt;/p&gt; &#xA;&lt;h2&gt;Part 1 - Installation&lt;/h2&gt; &#xA;&lt;p&gt;Let‚Äôs start by forking the tutorial repo to your account, installing the Renovate GitHub App, and configuring it to your repo.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure you are logged in to GitHub.com&lt;/li&gt; &#xA; &lt;li&gt;Fork this &lt;a href=&#34;https://github.com/PhilipAbed/RenovateTutorial&#34;&gt;RenovateTutorial&lt;/a&gt; repository. The tutorial instructions will be based on the contents of this repository&lt;/li&gt; &#xA; &lt;li&gt;The following instructions are directed at those that don‚Äôt have Renovate installed: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Install the Renovate App to your account by navigating to the &lt;a href=&#34;https://github.com/apps/renovate&#34;&gt;Renovate App GitHub installation page&lt;/a&gt; and select Install: &lt;img src=&#34;https://user-images.githubusercontent.com/102745725/178965463-525a385e-d914-4309-aeb4-cb4358dc12bc.png&#34; alt=&#34;image&#34;&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;If you do have Renovate installed: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;navigate to the &lt;a href=&#34;https://github.com/apps/renovate&#34;&gt;Renovate app page&lt;/a&gt; and select configure: &lt;img src=&#34;https://user-images.githubusercontent.com/42116482/178491021-a0b7ba34-3bc7-4953-8452-416fbd3d6ec9.png&#34; alt=&#34;image&#34;&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You will reach an installation configuration page where you are asked to configure Repository Access.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; for existing users, installation configuration appears at the bottom of the page.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Mark &lt;code&gt;Only select repositories&lt;/code&gt; and make sure to select the forked RenovateTutorial repo&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; each selected repo gets an onboarding PR.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;If you select &lt;code&gt;All repositories&lt;/code&gt;, forked repos will be skipped by default (including RenovateTutorial).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click on &lt;code&gt;Install&lt;/code&gt; (‚ÄúSave‚Äù for existing users)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;629&#34; alt=&#34;configuration page&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178964980-df55dafd-f087-433a-90f7-986fa01c1ac0.png&#34;&gt; &#xA;&lt;p&gt;For new installs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You will be redirected to our ‚ÄúThank you for installing Renovate‚Äù page while we are setting up your account.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/42116482/178492276-ac0f5c03-db21-482c-95e9-07dc229ac298.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;After a few seconds, you will be automatically directed to a dashboard where you can login and view the Renovate logs. We recommend saving this &lt;a href=&#34;https://app.renovatebot.com/dashboard&#34;&gt;link&lt;/a&gt; for future use.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;625&#34; alt=&#34;Screen Shot 2022-07-14 at 14 24 26&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178972035-abe2e859-0756-498c-91d5-ec2f0cfdd503.png&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;Congratulations! You have successfully installed Renovate to your account.&lt;/strong&gt; üéà&lt;/p&gt; &#xA;&lt;h2&gt;Part 2 - Onboarding&lt;/h2&gt; &#xA;&lt;p&gt;Now you have installed Renovate, we can begin onboarding.&lt;/p&gt; &#xA;&lt;p&gt;Let‚Äôs review the concepts of the Onboarding PR and learn about Renovate‚Äôs initial settings.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; For your convenience, Renovate will not make any changes to your repo or raise PRs until after you finish onboarding.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upon installing Renovate, an onboarding PR will be automatically generated.&lt;/li&gt; &#xA; &lt;li&gt;This PR is there to help you understand Renovate and its default settings before Renovate starts running on your repository.&lt;/li&gt; &#xA; &lt;li&gt;The Onboarding PR creates a configuration file called &lt;code&gt;renovate.json&lt;/code&gt;, which contains Renovate‚Äôs default settings and can be modified during onboarding.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Let‚Äôs review the onboarding PR:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to the &lt;code&gt;Pull Requests&lt;/code&gt; section in GitHub, and open the newly generated PR - &lt;code&gt;Configure Renovate&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;1500&#34; alt=&#34;onboarding PR&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178965966-76aa3941-cac4-4df3-bd89-75b9f8002924.png&#34;&gt; &#xA;&lt;img width=&#34;935&#34; alt=&#34;onboarding content&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178966039-b11315b8-8c75-416b-9f18-c8109c17d0ab.png&#34;&gt; &#xA;&lt;h4&gt;The onboarding PR contains:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Detected Package Files&lt;/strong&gt; - All package files detected by Renovate in your code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configuration Summary&lt;/strong&gt; - The default configuration settings that will be applied.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;What to Expect&lt;/strong&gt; - The dependency update PRs that Renovate is about to automatically create.&lt;/li&gt; &#xA; &lt;li&gt;The link to Renovate‚Äôs official &lt;a href=&#34;https://docs.renovatebot.com/&#34;&gt;documentation&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The link to review jobs logs in the &lt;a href=&#34;https://app.renovatebot.com/dashboard&#34;&gt;Renovate dashboard&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Renovate will not create dependency update PRs until the onboarding PR will be merged.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;These are some of the default configurations of Renovate:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enables creation of the ‚ÄúDependency Dashboard‚Äù - a dashboard that shows an overview of the state of your repositories&#39; dependencies.&lt;/li&gt; &#xA; &lt;li&gt;PRs will be created at a rate of 2 PRs per hour.&lt;/li&gt; &#xA; &lt;li&gt;The limit of simultaneous open Renovate PRs is set to 10.&lt;/li&gt; &#xA; &lt;li&gt;Renovate automatically groups known monorepo packages to a single PR (example can be seen in the &lt;code&gt;date-io&lt;/code&gt; PR under the &lt;strong&gt;what to expect&lt;/strong&gt; section).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Renovate offers the ability to change configurations before merging the onboarding PR as well as preview the results of these changes. At this point, Renovate has created a branch called renovate/configure which contains the &lt;code&gt;renovate.json&lt;/code&gt; configuration file. By default, Renovate limits branch creation to 2 per hour:&lt;/p&gt; &#xA;&lt;img width=&#34;829&#34; alt=&#34;onboarding warning hourly&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178961193-2f1f1548-5282-4d33-b8ef-6e141f0a643d.png&#34;&gt; &#xA;&lt;p&gt;Example&lt;/p&gt; &#xA;&lt;p&gt;As a user, despite Renovate‚Äôs suggestion to limit hourly PR creation to 2, we might want to increase the limit to a different number. Let‚Äôs try changing this hourly limitation to 3:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the newly created branch - &lt;code&gt;renovate/configure&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;763&#34; alt=&#34;new branch&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178966974-35c089c6-4190-4721-b1c2-956d84e80d07.png&#34;&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Go into the &lt;code&gt;renovate.json&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/42116482/178494908-89189f2e-632a-42ee-a49a-16941a40101b.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Add the following code segment:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;prHourlyLimit&#34;: 3&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img width=&#34;591&#34; alt=&#34;change in config 1&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178967120-51ec5940-42bc-444e-8c4d-b98ea4ee5948.png&#34;&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Commit the changes&lt;/li&gt; &#xA; &lt;li&gt;Revisit the onboarding PR and notice how the onboarding PR automatically updates to reflect the changes you made to the configuration&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;830&#34; alt=&#34;onboarding warning hourly update&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178960884-40077a5c-8fe1-422f-81c1-567ea1e6619b.png&#34;&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; May take a few moments to update.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Merge the onboarding pull request.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Congratulations! You have successfully onboarded Renovate.&lt;/strong&gt; üéà&lt;/p&gt; &#xA;&lt;h2&gt;Part 3 - Getting to know Renovate‚Äôs update PRs&lt;/h2&gt; &#xA;&lt;p&gt;Now that you have merged the onboarding PR, Renovate will generate Update PRs to the most recent dependency version based on your configuration.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; PRs may take a couple of minutes to appear&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Here we will review the basic concepts of Renovate update PRs and merge it.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;By default, Renovate will create up to 2 update PRs per hour. However, if you completed the onboarding section of this tutorial, Renovate will now create 3 PRs.&lt;/li&gt; &#xA; &lt;li&gt;You should already see notifications for these pull requests in the &lt;code&gt;Pull Requests&lt;/code&gt; section of the repo.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Let‚Äôs go ahead and take a look at a Renovate update PR:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to the &lt;code&gt;Pull requests&lt;/code&gt; section and open - &lt;code&gt;Update dependency lodash to x.y.z&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;1256&#34; alt=&#34;open PRs&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178967929-690b3866-190b-4576-a961-981ce78cbd1b.png&#34;&gt; &#xA;&lt;h3&gt;Each update PR contains:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dependency information (name and version changes)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.renovatebot.com/merge-confidence/&#34;&gt;Merge Confidence&lt;/a&gt; values&lt;/li&gt; &#xA; &lt;li&gt;Up-to-date release notes&lt;/li&gt; &#xA; &lt;li&gt;Renovate configuration-related info&lt;/li&gt; &#xA; &lt;li&gt;Option to rebase PR&lt;/li&gt; &#xA; &lt;li&gt;Link to view Renovate logs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/42116482/178495994-7cce93f1-db65-4f09-b682-7506dc242fdc.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Renovate‚Äôs update PRs will update the relevant dependency across your entire repo. In our RenovateTutorial repo, this will be both the &lt;code&gt;package.json&lt;/code&gt; file and the &lt;code&gt;package-lock.json&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;1488&#34; alt=&#34;file diff lodash&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178968020-865560f7-173c-4e9e-a073-488147dbb137.png&#34;&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Merge this pull request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note - Renovate is highly configurable and supports:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;On-demand PR creation.&lt;/li&gt; &#xA;  &lt;li&gt;Automatic merging of PRs.&lt;/li&gt; &#xA;  &lt;li&gt;Settings for specific dependencies/package managers.&lt;/li&gt; &#xA;  &lt;li&gt;Scheduling.&lt;/li&gt; &#xA;  &lt;li&gt;Grouping.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;All the above and more will be discussed in future parts of the tutorial.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Congratulations! You have now updated your first dependency with Renovate.&lt;/strong&gt; üéà&lt;/p&gt; &#xA;&lt;h2&gt;Part 4 - Dependency Dashboard&lt;/h2&gt; &#xA;&lt;p&gt;Renovate‚Äôs Dependency Dashboard is a GitHub Issue that enables you to manage and monitor Renovate‚Äôs activity in your repo. In this section, we will go over some of its main functionalities and capabilities.&lt;/p&gt; &#xA;&lt;p&gt;Let‚Äôs begin by creating and enabling the Dependency Dashboard. Since GitHub defaults to disable &lt;code&gt;issues&lt;/code&gt; on forked repositories, we need to enable it on the forked RenovateTutorial repo:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the main page of the repo&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;settings&lt;/code&gt; -&amp;gt; &lt;code&gt;general&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check the &lt;code&gt;issues&lt;/code&gt; checkbox under the Features section:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;1284&#34; alt=&#34;issues settings&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178968523-fb002cf1-2510-4b4f-b840-f9776e660d92.png&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In order for the Dependency Dashboard to become available, we will need to re-run Renovate by triggering a webhook (for example, closing an update PR).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; This is usually done in a click via the Dependency Dashboard.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the &lt;code&gt;Pull requests&lt;/code&gt; section&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;code&gt;Update dependency php to v8.1&lt;/code&gt; and select &lt;code&gt;Close pull request&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;927&#34; alt=&#34;close php&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178969009-7239db99-4abe-44d1-a86c-a0effdf6fb7a.png&#34;&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;This will trigger Renovate to run and the Dependency Dashboard will appear under the &lt;code&gt;Issues&lt;/code&gt; section - navigate to it&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; It may take a minute to appear.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;The Dependency Dashboard includes:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Overview of all updates that are still to-do:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Open&lt;/strong&gt; PRs&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Rate Limited&lt;/strong&gt; - PRs blocked by rate limit setting and will be opened based on preferences.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Pending Approval&lt;/strong&gt; - PRs that require manual triggering based on configurations.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Awaiting Schedule&lt;/strong&gt; - PRs creation blocked by Renovate scheduling settings.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Pending Status Checks&lt;/strong&gt; - updates that await pending status checks in order to be created.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Visibility into &lt;strong&gt;rejected/deferred updates&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;List of all the &lt;strong&gt;detected dependencies&lt;/strong&gt; and &lt;strong&gt;package managers&lt;/strong&gt; in your repository.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;942&#34; alt=&#34;Screen Shot 2022-07-14 at 14 05 40&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178968912-24ef22ec-fc98-4bf1-a293-9fb5dbf4c1b8.png&#34;&gt; &#xA;&lt;p&gt;Users can manually trigger the creation of dependency updates directly from the dashboard.&lt;/p&gt; &#xA;&lt;p&gt;You can also re-run the Renovate bot manually directly from the Dependency Dashboard by enabling the ‚ÄúCheck this box to trigger a request Renovate to run again on this repository‚Äù option:&lt;/p&gt; &#xA;&lt;img width=&#34;867&#34; alt=&#34;rerun renovate&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178969114-c1b64333-b45a-4508-b638-1e25ad0adab5.png&#34;&gt; &#xA;&lt;p&gt;Let‚Äôs dive into one of the Dependency Dashboard capabilities - &lt;strong&gt;the Pending Approval feature&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Say we want to take extra measures before updating major versions of a package (either to reduce noise or to handle it more carefully). Renovate offers an option to prevent automatic creation of major version update PRs and create such PRs only upon manual request from the Dependency Dashboard.&lt;/p&gt; &#xA;&lt;p&gt;In the Dependency Dashboard, under the &lt;code&gt;Rate Limited&lt;/code&gt; section, the &lt;code&gt;Update dependency commander to vX&lt;/code&gt; is waiting to be created.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Based on the previously set &lt;code&gt;prHourlyLimit&lt;/code&gt; configuration, 3 PRs per hour in our case, this PR will be created within an hour.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;img width=&#34;928&#34; alt=&#34;commander in Rate Limited&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178960104-c254c12f-08fb-4508-824d-20df60b2290f.png&#34;&gt; &#xA;&lt;p&gt;Since we decided that we want to handle it manually, we will edit configurations and see how the Dependency Dashboard is affected by this change.&lt;/p&gt; &#xA;&lt;p&gt;In order to limit all &lt;code&gt;major&lt;/code&gt; updates to on-demand creation:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add this code segment to your &lt;code&gt;renovate.json&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;packageRules&#34;: [&#xA;    {&#xA;      &#34;matchUpdateTypes&#34;: [&#34;major&#34;],&#xA;      &#34;dependencyDashboardApproval&#34;: true&#xA;    }&#xA;  ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img width=&#34;924&#34; alt=&#34;change in config - pending approval&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178962677-612e8172-fac7-45fb-937b-46a559d848f0.png&#34;&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Commit the changes&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Changing the &lt;code&gt;renovate.json&lt;/code&gt; configuration file is a webhook that triggers Renovate to re-run.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Now go back to the Dependency Dashboard in the Issues section&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;As you can see, &lt;code&gt;commander&lt;/code&gt; major update PR now appears under the &lt;strong&gt;Pending Approval&lt;/strong&gt; section and &lt;strong&gt;will not&lt;/strong&gt; be opened unless manually triggered&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; it make take a minute to complete Renovate&#39;s run&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;926&#34; alt=&#34;commander in pending approval&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178962735-84f1ae00-df4c-4fed-adf5-12fefeb94e9f.png&#34;&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;You can now decide to manually open this PR by checking the box next to it&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the &lt;code&gt;Pull requests&lt;/code&gt; section to review the generated PR and merge it to the repo.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Congratulations! You are now familiar with Renovate‚Äôs Dependency Dashboard.&lt;/strong&gt; üéà&lt;/p&gt; &#xA;&lt;h2&gt;What you learned:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;How to install Renovate&lt;/li&gt; &#xA; &lt;li&gt;Onboarding Renovate by reviewing, configuring, and merging the onboarding PR&lt;/li&gt; &#xA; &lt;li&gt;How to update a dependency with Renovate&lt;/li&gt; &#xA; &lt;li&gt;How to utilize the Dependency Dashboard&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;General Comments:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Granting access to all repositories or change repo selections can be modified at any time on the &lt;a href=&#34;https://github.com/apps/renovate&#34;&gt;Renovate App GitHub page&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Renovate configuration can be modified by manual configurations, global organization configurations and existing Renovate presets.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Congratulations!&lt;/h3&gt; &#xA;&lt;p&gt;You have successfully completed Renovate‚Äôs hands-on tutorial and have taken your first steps to automate dependency updates in your projects. Now, it&#39;s time to configure Renovate on the rest of your repositories and let Renovate manage your dependencies&#39; health.&lt;/p&gt; &#xA;&lt;h3&gt;Upcoming Tutorials:&lt;/h3&gt; &#xA;&lt;p&gt;We&#39;re working on more advanced Renovate tutorials and will post updates when we publish new tutorials.&lt;/p&gt; &#xA;&lt;p&gt;What‚Äôs coming next:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Merge confidence&lt;/li&gt; &#xA; &lt;li&gt;Auto Merge&lt;/li&gt; &#xA; &lt;li&gt;Labeling&lt;/li&gt; &#xA; &lt;li&gt;Grouping&lt;/li&gt; &#xA; &lt;li&gt;Schedule&lt;/li&gt; &#xA; &lt;li&gt;Package Rules&lt;/li&gt; &#xA; &lt;li&gt;GitHub Actions&lt;/li&gt; &#xA; &lt;li&gt;PR Assignees and PR reviewers&lt;/li&gt; &#xA; &lt;li&gt;Regex Managers&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins</title>
    <updated>2022-08-11T01:38:32Z</updated>
    <id>tag:github.com,2022-08-11:/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins</id>
    <link href="https://github.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create a fully automated environment using Slack, Jenkins, and GitHub integration&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Configuring CI/CD on Kubernetes with Jenkins&lt;/h1&gt; &#xA;&lt;h3&gt;Introduction&lt;/h3&gt; &#xA;&lt;p&gt;DevOps encourages collaboration, cooperation, and communication between developers and operations teams to improve the speed and quality of software development. One of the key principles of DevOps is automation, which reduces human error, provides consistent results, and even mitigates risks. With the help of automation, you and your team can build, test, and deploy software quickly and efficiently.&lt;/p&gt; &#xA;&lt;p&gt;In this tutorial, you‚Äôll learn how to achieve a fully automated environment with Jenkins on Kubernetes.&lt;/p&gt; &#xA;&lt;h3&gt;Learning objectives&lt;/h3&gt; &#xA;&lt;p&gt;In this tutorial, you will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set up a Jenkins environment on Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;Configure a CI/CD Jenkins pipeline&lt;/li&gt; &#xA; &lt;li&gt;Build Docker images using Jenkins&lt;/li&gt; &#xA; &lt;li&gt;Push Docker images to a Docker registry&lt;/li&gt; &#xA; &lt;li&gt;Deploy Docker images to a Kubernetes environment&lt;/li&gt; &#xA; &lt;li&gt;Integrate Slack and Jenkins&lt;/li&gt; &#xA; &lt;li&gt;Integrate GitHub and Jenkins using GitHub webhooks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a free &lt;a href=&#34;https://cloud.ibm.com&#34;&gt;IBM Cloud Account&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install the &lt;a href=&#34;https://cloud.ibm.com/docs/cli?topic=cloud-cli-install-ibmcloud-cli&#34;&gt;IBM Cloud CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download and install &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;a href=&#34;https://hub.docker.com&#34;&gt;Docker Hub Account&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install the &lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-kubectl/&#34;&gt;Kubernetes CLI(kubectl)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install a &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git Client&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;a href=&#34;https://github.com&#34;&gt;GitHub Account&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;a href=&#34;https://slack.com&#34;&gt;Slack Account&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;(Optional) Note:&lt;/strong&gt; Open up a terminal and run the following command to install the IBM Cloud CLI and Developer Tools, which include IBM Cloud CLI, Kubernetes CLI (kubectl), Docker CLI, and Git CLI.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ curl -sL https://ibm.biz/idt-installer | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Before we begin creating, building, and deploying, let‚Äôs first understand some of the tools and software we&#39;ll be using throughout this tutorial.&lt;/p&gt; &#xA;&lt;h3&gt;What is Jenkins?&lt;/h3&gt; &#xA;&lt;p&gt;Jenkins is an open source automation server that you can use to automate tasks related to software development, testing, or deployments.&lt;/p&gt; &#xA;&lt;h3&gt;What is Docker?&lt;/h3&gt; &#xA;&lt;p&gt;Docker is an open source software platform built to make it easier to create, deploy, and run applications using containers. A container is a standardized package of software, which can include libraries and other dependencies.&lt;/p&gt; &#xA;&lt;h3&gt;What is Kubernetes?&lt;/h3&gt; &#xA;&lt;p&gt;Kubernetes is an open source container orchestration platform for automating deployment and scaling and managing containerized workloads and services.&lt;/p&gt; &#xA;&lt;p&gt;Now we‚Äôre ready to get started.&lt;/p&gt; &#xA;&lt;h2&gt;Steps&lt;/h2&gt; &#xA;&lt;p&gt;Follow these steps to setup and run this tutorial.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/#1-create-a-kubernetes-cluster-on-ibm-cloud&#34;&gt;Create a Kubernetes Cluster on IBM Cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/#2-build-a-modified-jenkins-image&#34;&gt;Build a Modified Jenkins Image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/#3-deploy-a-modified-jenkins-image-to-kubernetes&#34;&gt;Deploy a Modified Jenkins Image to Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/#4-set-up-jenkins-environment&#34;&gt;Set up Jenkins Environment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/#5-create-the-first-jenkins-pipeline&#34;&gt;Create the First Jenkins Pipeline&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/#6-integrate-jenkins-and-slack&#34;&gt;Integrate Jenkins and Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/#7-integrate-jenkins-and-github&#34;&gt;Integrate Jenkins and GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/#8-test-the-first-jenkins-pipeline&#34;&gt;Test the First Jenkins Pipeline&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;1. Create a Kubernetes Cluster on IBM Cloud&lt;/h3&gt; &#xA;&lt;p&gt;Login to IBM Cloud and choose the &lt;code&gt;&#39;Kubernetes&#39;&lt;/code&gt; option from the navigation menu. Then, click on the &lt;code&gt;&#39;Create Cluster&#39;&lt;/code&gt; button and select the &lt;code&gt;&#39;Free&#39;&lt;/code&gt; plan.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This process will take approximately 40 minutes.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/gif/create-a-kubernetes-cluster-scaled.gif&#34; alt=&#34;create-a-kubernetes-cluster-on-ibm-cloud&#34; title=&#34;Create a Kubernetes Cluster on IBM Cloud&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2. Build a Modified Jenkins Image&lt;/h3&gt; &#xA;&lt;p&gt;Early on, Jenkins was designed to run on physical machines without any containerization technology. As containerization become more popular, Jenkins adapted its solution to the new containerized world. Unfortunately, this change brought some challenges. For instance, Jenkins requires Docker to build Docker images. However, a containerized version of Jenkins does not contain Docker and Docker CLI by default. For this reason, a new Docker image that contains Docker CLI and other tools must be created by using a Jenkins image as a base image.&lt;/p&gt; &#xA;&lt;p&gt;Docker uses &lt;code&gt;&#39;Dockerfile&#39;&lt;/code&gt; to build custom images. For further information please see: &lt;a href=&#34;https://docs.docker.com/engine/reference/builder/&#34;&gt;Dockerfile reference&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In &lt;code&gt;&#39;modified-jenkins&#39;&lt;/code&gt; directory there is a &lt;code&gt;&#39;Dockerfile&#39;&lt;/code&gt; to build custom &lt;code&gt;&#39;Mofidied Jenkins Image&#39;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s see how it looks like!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts&#xA;&#xA;USER root&#xA;&#xA;ENV DOCKERVERSION=18.03.1-ce&#xA;&#xA;RUN curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKERVERSION}.tgz \&#xA;  &amp;amp;&amp;amp; tar xzvf docker-${DOCKERVERSION}.tgz --strip 1 \&#xA;                 -C /usr/local/bin docker/docker \&#xA;  &amp;amp;&amp;amp; rm docker-${DOCKERVERSION}.tgz&#xA;&#xA;RUN curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \&#xA;&#x9;&amp;amp;&amp;amp; chmod +x ./kubectl \&#xA;&#x9;&amp;amp;&amp;amp; mv ./kubectl /usr/local/bin/kubectl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Let&#39;s examine the steps one by one.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This step specifies the base image.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;USER root&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This step grants root access to image. Root access will be used while installing the Docker CLI and Kubernetes CLI(kubectl).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;ENV DOCKERVERSION=18.03.1-ce&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This step sets an environment variable.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;RUN curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKERVERSION}.tgz \&#xA;  &amp;amp;&amp;amp; tar xzvf docker-${DOCKERVERSION}.tgz --strip 1 \&#xA;                 -C /usr/local/bin docker/docker \&#xA;  &amp;amp;&amp;amp; rm docker-${DOCKERVERSION}.tgz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This step downloads Docker, installs the Docker CLI and removes the Docker Daemon.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The mofidied Jenkins image does not contain Docker Daemon. Docker Daemon will run in another container. Modified Jenkins image will refer to that Docker Daemon container. (See: &lt;a href=&#34;https://hub.docker.com/_/docker&#34;&gt;Docker in Docker&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;RUN curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \&#xA;&#x9;&amp;amp;&amp;amp; chmod +x ./kubectl \&#xA;&#x9;&amp;amp;&amp;amp; mv ./kubectl /usr/local/bin/kubectl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This step downloads the Kubernetes CLI(kubectl) and installs it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Docker reads the steps one by one and builds customized image. Let&#39;s see how Docker builds custom images.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Next, open a terminal and navigate to the &lt;code&gt;&#39;modified-jenkins&#39;&lt;/code&gt; directory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd modified-jenkins&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Replace &lt;code&gt;&#39;kmlaydin&#39;&lt;/code&gt; with your Docker Hub username and run the following command to build a modified Jenkins image:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build -t kmlaydin/modified-jenkins:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/gif/build-a-modified-jenkins-image.gif&#34; alt=&#34;build-a-modified-jenkins-image&#34; title=&#34;Build a Modified Jenkins Image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Congratulations! The modified Jenkins image was successfully built.&lt;/p&gt; &#xA;&lt;h3&gt;3. Deploy a Modified Jenkins Image to Kubernetes&lt;/h3&gt; &#xA;&lt;p&gt;The modified Jenkins image is in the local environment now and Kubernetes cannot access the local images. This is where Docker Hub comes into the picture. Docker Hub is a cloud-based repository in which Docker users and partners create, test, store, and distribute container images. A modified Jenkins image is needed to push to the Docker Hub or other container registries like &lt;a href=&#34;https://www.ibm.com/cloud/container-registry&#34;&gt;IBM Cloud Container Registry&lt;/a&gt;. By default, Docker uses Docker Hub.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;First, start by running the following command to login to Docker Hub via the terminal:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker login&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Next, push the modified Jenkins image to Docker Hub with this command (remember to replace &lt;code&gt;&#39;kmlaydin&#39;&lt;/code&gt; with your Docker Hub username):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker push kmlaydin/modified-jenkins:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/gif/push-image-to-dockerhub.gif&#34; alt=&#34;push-image-to-dockerhub&#34; title=&#34;Push Modified Jenkins Image to Docker Hub&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The pushed image can now be seen via &lt;a href=&#34;https://hub.docker.com/&#34;&gt;Docker Hub&lt;/a&gt; and Kubernetes can now access the image conveniently. Kubernetes works with &lt;a href=&#34;https://developer.ibm.com/tutorials/yaml-basics-and-usage-in-kubernetes&#34;&gt;YAML files&lt;/a&gt; to handle configurations.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Now you need to open the &lt;code&gt;&#39;jenkins-deployment.yaml&#39;&lt;/code&gt; file, located in the &lt;code&gt;&#39;modified-jenkins directory&#39;&lt;/code&gt;, with a code editor.&lt;/li&gt; &#xA; &lt;li&gt;Find &lt;code&gt;&#39;kmlaydin/modified-jenkins:latest&#39;&lt;/code&gt; and replace the Docker Hub username, pushed image&#39;s name, and version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/gif/jenkins-deployment-image-change.gif&#34; alt=&#34;jenkins-deployment-image-change&#34; title=&#34;Jenkins Deployment Change Image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The deployment file is now ready to deploy modified Jenkins to Kubernetes.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Now, open the Kubernetes cluster dashboard which we created in step 1. Navigate to the &lt;code&gt;&#39;Access&#39;&lt;/code&gt; tab and run the commands to gain access to the Kubernetes cluster via the terminal.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/gif/kubernetes-gain-access-via-terminal-scaled.gif&#34; alt=&#34;kubernetes-gain-access-via-terminal&#34; title=&#34;Kubernetes Gain Access via Terminal&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure that the directory is &lt;code&gt;&#39;modified-jenkins&#39;&lt;/code&gt; and run the following commands to deploy the modified Jenkins to Kubernetes:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubectl apply -f jenkins-deployment.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubectl apply -f jenkins-service.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Now run the following command to make sure that Jenkins is deployed and has a running status. The deployment process may take a couple of minutes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubectl get deployment,pod,service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/gif/deploy-jenkins-to-kubernetes.gif&#34; alt=&#34;deploy-jenkins-to-kubernetes&#34; title=&#34;Deploy Jenkins to Kubernetes&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the following commands to retrieve the external IP of your worker node to gain access to the Jenkins dashboard:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ export EXTERNAL_IP=$(kubectl get nodes -o jsonpath=&#39;{.items[0].status.addresses[?(@.type==&#34;ExternalIP&#34;)].address }&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;$&amp;nbsp;export NODE_PORT=30100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ echo $EXTERNAL_IP:$NODE_PORT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/gif/get-external-ip-kubernetes-worker-node-scaled.gif&#34; alt=&#34;get-external-ip-kubernetes-worker-node&#34; title=&#34;Get External IP of Kubernetes Worker Node&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;4. Set up Jenkins Environment&lt;/h3&gt; &#xA;&lt;p&gt;Now it‚Äôs time to set up your Jenkins environment. Jenkins assigns the initial admin password, which can be found by logging the Jenkins container.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the following command to obtain the logs of the Jenkins container:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubectl logs $(kubectl get pods --selector=app=jenkins -o=jsonpath=&#39;{.items[0].metadata.name}&#39;) jenkins&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The initial admin password can be found between the rows of asterisks.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Now select the &lt;code&gt;&#39;Install suggested plugins&#39;&lt;/code&gt; option. Continue by selecting &lt;code&gt;&#39;Continue as admin&#39;&lt;/code&gt; and then click the &lt;code&gt;&#39;Save and Finish&#39;&lt;/code&gt; button.&lt;/p&gt; &#xA;&lt;p&gt;And just like that, Jenkins is ready to use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/gif/jenkins-first-set-up-scaled.gif&#34; alt=&#34;jenkins-first-set-up&#34; title=&#34;Jenkins First Set up&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;With Jenkins ready for use, the following credentials are needed for Jenkins to fulfill a duty conveniently and to run properly:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&#39;GitHub&#39;&lt;/code&gt; credentials to gain access to source code&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&#39;DockerHub&#39;&lt;/code&gt; credentials to push a built image to Docker Hub&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&#39;Kubeconfig&#39;&lt;/code&gt; file to gain access to a Kubernetes cluster&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;&#39;GitHub&#39;&lt;/code&gt; and &lt;code&gt;&#39;DockerHub&#39;&lt;/code&gt; credentials are type of &lt;code&gt;&#39;Username with password&#39;&lt;/code&gt;. But &lt;code&gt;&#39;Kubeconfig&#39;&lt;/code&gt; credential is type of &lt;code&gt;&#39;Secret file&#39;&lt;/code&gt;. Remember in step 3, you downloaded the Kubeconfig file and it was exported as an environment variable to your local computer.&lt;/p&gt; &#xA;&lt;p&gt;Now you need to go to the Kubeconfig directory of the Kubernetes cluster (the Kubeconfig environment variable should be set before running this command):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd $(echo $KUBECONFIG | awk &#39;{split($0,a,&#34;kube-config&#34;); print a[1];}&#39;) &amp;amp;&amp;amp; ls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There should be two files in the directory.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;&#39;&amp;lt;PEM-FILE&amp;gt;.pem&#39;&lt;/code&gt; file that stands for Privacy-Enhanced Mail and is a file format for storing and sending cryptographic keys, certificates, and other data.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;&#39;&amp;lt;KUBE-CONFIG&amp;gt;.yml&#39;&lt;/code&gt; file is used to configure access to a cluster and sometimes is called a kubeconfig file, which is a generic way of referring to configuration files.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Both files should be in the same directory. In Jenkins, there is no option to keep these two files in the same directory. For this reason, the &lt;code&gt;&#39;&amp;lt;PEM-FILE&amp;gt;.pem&#39;&lt;/code&gt; file should be embedded into the &lt;code&gt;&#39;&amp;lt;KUBE-CONFIG&amp;gt;.yml&#39;&lt;/code&gt;file. To do this, copy both files in to the desktop directory. The copying process is not obligatory but is done to preserve the original files.&lt;/p&gt; &#xA;&lt;p&gt;Now run this command in the directory that contains the &lt;code&gt;&#39;&amp;lt;PEM-FILE&amp;gt;.pem&#39;&lt;/code&gt; file and the &lt;code&gt;&#39;&amp;lt;KUBE-CONFIG&amp;gt;.yml&#39;&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ for file in ./*; do cp $file /Users/$USER/Desktop; done;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you‚Äôd like, the destination directory can be changed by editing &lt;code&gt;&#39;/Users/$USER/Desktop&#39;&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Next, go to the desktop directory via the terminal. Encode the &lt;code&gt;&#39;&amp;lt;PEM-FILE&amp;gt;.pem&#39;&lt;/code&gt; file as base64:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ base64 &amp;lt;PEM-FILE&amp;gt;.pem&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Copy the result and open the &lt;code&gt;&#39;&amp;lt;KUBE-CONFIG&amp;gt;.yml&#39;&lt;/code&gt; file with a code editor. Find &lt;code&gt;&#39;certificate-authority: &amp;lt;PEM-FILE&amp;gt;.pem&#39;&lt;/code&gt; and change it to &lt;code&gt;&#39;certificate-authority-data: &amp;lt;BASE64-RESULT&amp;gt;&#39;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/gif/kube-config-editing-scaled.gif&#34; alt=&#34;kube-config-editing&#34; title=&#34;Kubeconfig Editing&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After completing the steps above, the &lt;code&gt;&#39;&amp;lt;KUBE-CONFIG&amp;gt;.yml&#39;&lt;/code&gt; now contains the &lt;code&gt;&#39;&amp;lt;PEM-FILE&amp;gt;.pem&#39;&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Now go back to the Jenkins dashboard and find the &lt;code&gt;&#39;Credentials&#39;&lt;/code&gt; option in the left pane and select the &lt;code&gt;&#39;(global)&#39;&lt;/code&gt; option. The credentials can be added by clicking the &lt;code&gt;&#39;Add Credentials&#39;&lt;/code&gt; button in the left pane. First, add the &lt;code&gt;&#39;GitHub&#39;&lt;/code&gt; credentials as &lt;code&gt;&#39;Username with password&#39;&lt;/code&gt; with the ID &lt;code&gt;&#39;github&#39;&lt;/code&gt;. Then add the &lt;code&gt;&#39;DockerHub&#39;&lt;/code&gt; credentials as &lt;code&gt;&#39;Username with password&#39;&lt;/code&gt; with the ID &lt;code&gt;&#39;dockerhub&#39;&lt;/code&gt;. Lastly, add the &lt;code&gt;&#39;Kubeconfig&#39;&lt;/code&gt; credentials as &lt;code&gt;&#39;Secret file&#39;&lt;/code&gt; with the ID &lt;code&gt;&#39;kubeconfig&#39;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The credentials are now ready to use and now plugins need to be installed. Jenkins has a wide range of plugin options. The &lt;a href=&#34;https://plugins.jenkins.io/kubernetes-cli&#34;&gt;Kubernetes CLI&lt;/a&gt; plugin is not mandatory; however, it eases the process. Kubernetes CLI allows you to configure &lt;code&gt;&#39;kubectl&#39;&lt;/code&gt; to interact with Kubernetes clusters.&lt;/p&gt; &#xA;&lt;p&gt;Let‚Äôs get that set up by going back to the Jenkins dashboard and finding the &lt;code&gt;&#39;Manage Jenkins&#39;&lt;/code&gt; option in the left pane. Select &lt;code&gt;&#39;Manage Plugins&#39;&lt;/code&gt; and then choose the &lt;code&gt;&#39;Available&#39;&lt;/code&gt; tab. There should be a lot of available plugins in that tab. Search for the &lt;code&gt;&#39;Kubernetes CLI&#39;&lt;/code&gt; plugin and install it. Hooray, Jenkins is ready for the first landing!&lt;/p&gt; &#xA;&lt;h3&gt;5. Create the First Jenkins Pipeline&lt;/h3&gt; &#xA;&lt;p&gt;To create the first Jenkins pipeline, a GitHub account that contains example files is needed. Example files can be &lt;code&gt;&#39;deployment.yaml&#39;&lt;/code&gt;, &lt;code&gt;&#39;Dockerfile&#39;&lt;/code&gt;, &lt;code&gt;&#39;index.js&#39;&lt;/code&gt;, &lt;code&gt;&#39;Jenkinsfile&#39;&lt;/code&gt; or &lt;code&gt;&#39;service.yaml&#39;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Navigate back to the Jenkins dashboard and find the &lt;code&gt;&#39;New Item&#39;&lt;/code&gt; option in the left pane. Enter an item name and choose &lt;code&gt;&#39;Pipeline&#39;&lt;/code&gt;. (An example project URL is &lt;code&gt;&#39;https://github.com/kemallaydin/jenkins-example&#39;&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;Choose &lt;code&gt;&#39;GitHub project&#39;&lt;/code&gt; and type your project‚Äôs URL. Find the &lt;code&gt;&#39;Pipeline&#39;&lt;/code&gt; section and change the definition value from &lt;code&gt;&#39;Pipeline script&#39;&lt;/code&gt; to &lt;code&gt;&#39;Pipeline script from SCM&#39;&lt;/code&gt;. For the &lt;code&gt;&#39;SCM&#39;&lt;/code&gt; option, choose &lt;code&gt;&#39;Git&#39;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now type in your repository URL and choose the &lt;code&gt;&#39;Github&#39;&lt;/code&gt; credentials. (An example repository url is &lt;code&gt;&#39;https://github.com/kemallaydin/jenkins-example.git&#39;&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/gif/jenkins-first-pipeline-scaled.gif&#34; alt=&#34;jenkins-first-pipeline&#34; title=&#34;Jenkins First Pipeline&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Great! You‚Äôre now ready for the next step.&lt;/p&gt; &#xA;&lt;h3&gt;6. Integrate Jenkins and Slack&lt;/h3&gt; &#xA;&lt;p&gt;To post notifications to a Slack channel, Jenkins needs the &lt;code&gt;&#39;Slack Plugin&#39;&lt;/code&gt;. Go back to the Jenkins dashboard and find the &lt;code&gt;&#39;Manage Jenkins&#39;&lt;/code&gt; option in the left pane. Select the &lt;code&gt;&#39;Manage Plugins&#39;&lt;/code&gt; option and choose the &lt;code&gt;&#39;Available&#39;&lt;/code&gt; tab. Search for the &lt;code&gt;&#39;Slack Notification&#39;&lt;/code&gt; plugin and install it.&lt;/p&gt; &#xA;&lt;p&gt;Hopefully you‚Äôve already created your Slack account. If not, &lt;a href=&#34;https://slack.com/&#34;&gt;click here&lt;/a&gt; to get started. Once you have a Slack account, configure the Jenkins integration by using &lt;a href=&#34;https://my.slack.com/services/new/jenkins-ci&#34;&gt;Jenkins CI&lt;/a&gt;. After configuration, click on &lt;code&gt;&#39;Manage Jenkins&#39;&lt;/code&gt; again in the left navigation and go to &lt;code&gt;&#39;Configure System&#39;&lt;/code&gt;. Find the &lt;code&gt;&#39;Slack&#39;&lt;/code&gt; section and add the following values:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;Workspace&lt;/code&gt;&lt;/strong&gt;: &amp;lt;TEAM-SUBDOMAIN&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;Credential&lt;/code&gt;&lt;/strong&gt;: &amp;lt;INTEGRATION-TOKEN-CREDENTIAL-ID&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;Default channel / member id&lt;/code&gt;&lt;/strong&gt;: &amp;lt;CHANNEL-NAME&amp;gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you‚Äôd like, you can create a secret text credential by clicking the &lt;code&gt;&#39;Add&#39;&lt;/code&gt; button. You can also test the Jenkins and Slack integration by clicking the &lt;code&gt;&#39;Test Connection&#39;&lt;/code&gt; button.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/gif/jenkins-slack-integration-scaled.gif&#34; alt=&#34;jenkins-slack-integration&#34; title=&#34;Jenkins Slack Integration&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;7. Integrate Jenkins and GitHub&lt;/h3&gt; &#xA;&lt;p&gt;To receive specified events to Jenkins from GitHub, you need to configure &lt;a href=&#34;https://developer.github.com/webhooks/&#34;&gt;Webhooks&lt;/a&gt;. Webhooks allow external services to be notified when certain events happen. When the specified events happen, GitHub will send a POST request to Jenkins.&lt;/p&gt; &#xA;&lt;p&gt;To begin configuration, navigate to your project repository on GitHub. Click &lt;code&gt;Settings&lt;/code&gt; in the right corner and find the Webhooks option in the left pane. Click the &lt;code&gt;Add webhook&lt;/code&gt; button. The payload URL is &lt;code&gt;http://&amp;lt;JENKINS-URL&amp;gt;:&amp;lt;JENKINS-PORT&amp;gt;/github-webhook/&lt;/code&gt;. An example URL looks like &lt;code&gt;http://169.47.252.31:30100/github-webhook/&lt;/code&gt;. Make sure you save the webhook.&lt;/p&gt; &#xA;&lt;p&gt;Jenkins is now configured to accept events from GitHub and there‚Äôs only a few more steps to complete the Jenkins and GitHub integration.&lt;/p&gt; &#xA;&lt;p&gt;Head over to the first pipeline&#39;s dashboard and click the &lt;code&gt;&#39;Configure&#39;&lt;/code&gt; option. Choose &lt;code&gt;&#39;GitHub hook trigger for GITScm polling&#39;&lt;/code&gt; under the &lt;code&gt;&#39;Build Triggers&#39;&lt;/code&gt; section and save the configuration. The pipeline should be triggered manually once to identify stages which are used in the Jenkinsfile. After that, the GitHub webhook can trigger the pipeline.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;u&gt;Pipeline should be triggered manually once&lt;/u&gt; to be identified Jenkinsfile steps by Jenkins. After that, GitHub wekbooks can trigger the pipeline.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/gif/jenkins-github-integration-scaled.gif&#34; alt=&#34;jenkins-github-integration&#34; title=&#34;Jenkins GitHub Integration&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;8. Test the First Jenkins Pipeline&lt;/h3&gt; &#xA;&lt;p&gt;You‚Äôve made it to the final step! Jenkins is finally ready to test. Go to the first pipeline&#39;s dashboard and click &lt;code&gt;&#39;Build Now&#39;&lt;/code&gt;. The steps that are defined in Jenkinsfile are now available. Simply make a small change on the &lt;code&gt;&#39;index.js&#39;&lt;/code&gt; and push it to &lt;code&gt;GitHub&lt;/code&gt;. The pipeline is triggered by GitHub and Jenkins deploys a sample NodeJS application to Kubernetes. The application can be found at &lt;code&gt;http://&amp;lt;JENKINS-URL&amp;gt;:30300/getpodinfo&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/gif/test-the-first-pipeline-scaled.gif&#34; alt=&#34;test-the-first-pipeline&#34; title=&#34;Test the First Pipeline&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Lastly, run the following command to watch the changes in Kubernetes while the building process is running.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubectl get pods -w&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kemallaydin/Configuring-CI-CD-on-Kubernetes-with-Jenkins/master/gif/change-the-replicas-scaled.gif&#34; alt=&#34;change-the-replicas&#34; title=&#34;Change The Replicas&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In this demonstration, the replica size is increased from 1 to 10. To test it modify the &lt;code&gt;&#39;deployment.yaml&#39;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Summary&lt;/h3&gt; &#xA;&lt;p&gt;Congratulations! You‚Äôve successfully set up a continuous integration environment using Jenkins, Slack, and GitHub. Integrating GitHub with Jenkins automates deployment, testing, and ensures your projects are always up to date.&lt;/p&gt;</summary>
  </entry>
</feed>