<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-13T01:20:27Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>opengisch/demo.build.qgis-server</title>
    <updated>2024-04-13T01:20:27Z</updated>
    <id>tag:github.com,2024-04-13:/opengisch/demo.build.qgis-server</id>
    <link href="https://github.com/opengisch/demo.build.qgis-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;QGIS Server&lt;/h1&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This is a small demo repo. It utilizes several practices:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;build QGIS-Server directly from source (resulting image size is around 1gb)&lt;/li&gt; &#xA; &lt;li&gt;strictly separate QGIS-Server from the Webserver&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pg_service.conf&lt;/code&gt; file per project (sufficient for many things but mainly useful for DEV/STAG/PROD etc)&lt;/li&gt; &#xA; &lt;li&gt;Gateway route trafic to QGIS-Server, project is determined by subdomain (&lt;a href=&#34;http://test.localhost:8081/wfs3&#34;&gt;http://test.localhost:8081/wfs3&lt;/a&gt; uses &lt;code&gt;test/test.qgs&lt;/code&gt; and &lt;code&gt;test/pg_service.conf&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;project file is sent as &lt;code&gt;fcgi param&lt;/code&gt; instead of &lt;code&gt;url param&lt;/code&gt; &lt;code&gt;map&lt;/code&gt; (avoid ugly url rewriting)&lt;/li&gt; &#xA; &lt;li&gt;wfs3 is working fully with multiple projects&lt;/li&gt; &#xA; &lt;li&gt;a listing of avalable projects can be shown &lt;a href=&#34;http://localhost:8081/projects/&#34;&gt;http://localhost:8081/projects/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Webserver answers correctly 404 if project file does not exist (traffic does not go all the way to QGIS-Server)&lt;/li&gt; &#xA; &lt;li&gt;use &lt;a href=&#34;https://github.com/krallin/tini&#34;&gt;tini&lt;/a&gt; to transparently send signals (stopping/killing docker containers is working - aka no wait time until force) and correct handling of maybe existing zombie processes (cleaning in long running deployments)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All this is a demonstrator setup. It showcases the possibilities to produce minuscule images and resource saving scalable variable setup.&lt;/p&gt; &#xA;&lt;h2&gt;HowTo&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose build&#xA;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://localhost:8081/projects/&#34;&gt;Projects list page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://test.localhost:8081/ogc&#34;&gt;Test project OGC (WMS/WFS/etc.)&lt;/a&gt; or &lt;a href=&#34;http://test.localhost:8081&#34;&gt;Test project OGC (WMS/WFS/etc.)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://test.localhost:8081/wfs3&#34;&gt;Test project WFS3&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Stats&lt;/h2&gt; &#xA;&lt;p&gt;The main difference between regular scenario and this one is the number of qgis processes inside a container and the slightly smaller memory footprint. The stats below show 2 servers deploments in idle. While the difference in this situation is minimal it spreads a lot when systems get load. While we can&#39;t handle/scale resources well in the regular aproach it can be handled better in this showcase approach. Especially if combined with a queue system to even out the load better (with simple webserver in front the problem of request jam/no good load balancing still exists).&lt;/p&gt; &#xA;&lt;h3&gt;This showcase scenario&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;CONTAINER ID   NAME            CPU %     MEM USAGE / LIMIT     MEM %     NET I/O           BLOCK I/O        PIDS&#xA;4a238bc8e49d   qgis-server-2   0.00%     87.8MiB / 30.19GiB    0.28%     9.73MB / 9.43MB   0B / 193kB       8&#xA;f6f482728e10   qgis-server-1   0.01%     92.8MiB / 30.19GiB    0.30%     10.7MB / 9.31MB   0B / 193kB       8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;A regular setup with &lt;a href=&#34;https://hub.docker.com/r/opengisch/qgis-server&#34;&gt;opengisch/qgis-server:3.28.4-jammy&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;CONTAINER ID   NAME            CPU %     MEM USAGE / LIMIT     MEM %     NET I/O         BLOCK I/O         PIDS&#xA;e83de12a953f   qgis-server-1   0.00%     106.7MiB / 30.19GiB   0.35%     12.6kB / 726B   0B / 3.59MB       40&#xA;6205ee06edc5   qgis-server-2   0.00%     120.6MiB / 30.19GiB   0.39%     12.3kB / 656B   0B / 3.59MB       40&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker image sizes&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;REPOSITORY             TAG           IMAGE ID       CREATED         SIZE&#xA;qgis-server-showcase   3.34.5        3a88ff9d87d6   2 hours ago     1.1GB&#xA;opengisch/qgis-server  3.28.4-jammy  9ca95b03e286   13 months ago   2.2GB&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>