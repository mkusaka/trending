<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-11T01:29:20Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gabrielfroes/byebg</title>
    <updated>2023-09-11T01:29:20Z</updated>
    <id>tag:github.com,2023-09-11:/gabrielfroes/byebg</id>
    <link href="https://github.com/gabrielfroes/byebg" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Remova o fundo das fotos automagicamente!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;byebg&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Remova o fundo de suas imagens JPG automagicamente.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gabrielfroes/byebg/main/docs/byebg.png&#34; alt=&#34;√çcone byebg&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üìå Descri√ß√£o&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;byebg&lt;/code&gt; √© uma ferramenta de linha de comando e tamb√©m uma integra√ß√£o com o menu de contexto do Windows, permitindo que desenvolvedores e usu√°rios removam o fundo de imagens JPG de forma autom√°tica.&lt;/p&gt; &#xA;&lt;h2&gt;üöÄ Instala√ß√£o e Compila√ß√£o&lt;/h2&gt; &#xA;&lt;h3&gt;Pr√©-requisitos&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python &amp;gt;=3.8,&amp;lt;3.12&lt;/li&gt; &#xA; &lt;li&gt;Pip ou Poetry&lt;/li&gt; &#xA; &lt;li&gt;PyInstaller (para compila√ß√£o do execut√°vel)&lt;/li&gt; &#xA; &lt;li&gt;Docker&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Passos utilizando PIP&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone o reposit√≥rio:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/gabrielfroes/byebg.git&#xA;cd byebg&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Construa e execute a image docker:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose up --build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Opcional&lt;/em&gt;: Gerar executavel com Docker compose&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose -f docker-compose.pyinstaller.yaml up --build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Compile o projeto (opcional):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pyinstaller --onefile --noconsole --icon=byebg.ico ./src/byebg.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Pode ser que voc√™ precise ajustar o caminho correto do √≠cone se quiser incorpor√°-lo no execut√°vel.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Passos Utilizando Poetry&lt;/h3&gt; &#xA;&lt;p&gt;Certifique-se de ter o Poetry instalado (&lt;a href=&#34;https://python-poetry.org/docs/&#34;&gt;tutorial oficial&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone o reposit√≥rio:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/gabrielfroes/byebg.git&#xA;cd byebg&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Crie um ambiente virtual e instale as depend√™ncias:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Compile o projeto (opcional):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pyinstaller --onefile --noconsole --icon=byebg.ico ./src/byebg.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Pode ser que voc√™ precise ajustar o caminho correto do √≠cone se quiser incorpor√°-lo no execut√°vel.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Instala√ß√£o do menu de contexto&lt;/h3&gt; &#xA;&lt;p&gt;Ap√≥s compilar, se voc√™ quiser adicionar a op√ß√£o no menu de contexto do Windows:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Adapte o arquivo .reg para apontar para o local correto do seu execut√°vel.&lt;/li&gt; &#xA; &lt;li&gt;Execute o arquivo .reg como administrador.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Docker branch&lt;/h3&gt; &#xA;&lt;p&gt;Aos desenvolvedores que n√£o tem o Python instalado e quiserem testar a funcionalide do byebg, podem testar utilizando o docker.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Para mais detalhes, visualize a &lt;a href=&#34;https://github.com/gabrielfroes/byebg/tree/main&#34;&gt;branch main&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;üéØ Como usar&lt;/h2&gt; &#xA;&lt;h3&gt;Linha de Comando&lt;/h3&gt; &#xA;&lt;p&gt;Execute o script ou o execut√°vel compilado passando a imagem de entrada e a sa√≠da desejada:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python byebg.py input.jpg output.png&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Menu de Contexto&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gabrielfroes/byebg/main/docs/menu-contexto-byebg.png&#34; alt=&#34;√çcone byebg&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ap√≥s instalar a integra√ß√£o com o menu de contexto:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navegue at√© uma imagem JPG no windows explorer.&lt;/li&gt; &#xA; &lt;li&gt;Clique com o bot√£o direito na imagem.&lt;/li&gt; &#xA; &lt;li&gt;Selecione a op√ß√£o &#34;Remover Fundo&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Uma nova imagem ser√° gerada no mesmo diret√≥rio com o sufixo &#34;_byebg.png&#34;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;ü§ñ Contribui√ß√µes&lt;/h2&gt; &#xA;&lt;p&gt;Se voc√™ encontrar bugs, tiver sugest√µes de melhorias ou quiser expandir as funcionalidades, sinta-se √† vontade para abrir uma issue ou enviar um pull request.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>linuxserver/docker-unifi-network-application</title>
    <updated>2023-09-11T01:29:20Z</updated>
    <id>tag:github.com,2023-09-11:/linuxserver/docker-unifi-network-application</id>
    <link href="https://github.com/linuxserver/docker-unifi-network-application" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://linuxserver.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver_medium.png&#34; alt=&#34;linuxserver.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34; title=&#34;all the things you can do with our containers including How-To guides, opinions and much more!&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Blog&#34; alt=&#34;Blog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/YWrKVTn&#34; title=&#34;realtime support / chat with the community and the team.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/354974912613449730.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Discord&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discourse.linuxserver.io&#34; title=&#34;post on our community forum.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/https/discourse.linuxserver.io/topics.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=discourse&#34; alt=&#34;Discourse&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fleet.linuxserver.io&#34; title=&#34;an online web interface which displays all of our maintained images.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Fleet&#34; alt=&#34;Fleet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver&#34; title=&#34;view the source for all of our repositories.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub&amp;amp;logo=github&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/linuxserver&#34; title=&#34;please consider helping us by either donating or contributing to our budget&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/all/linuxserver.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Supporters&amp;amp;logo=open%20collective&#34; alt=&#34;Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://linuxserver.io&#34;&gt;LinuxServer.io&lt;/a&gt; team brings you another container release featuring:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;regular and timely application updates&lt;/li&gt; &#xA; &lt;li&gt;easy user mappings (PGID, PUID)&lt;/li&gt; &#xA; &lt;li&gt;custom base image with s6 overlay&lt;/li&gt; &#xA; &lt;li&gt;weekly base OS updates with common layers across the entire LinuxServer.io ecosystem to minimise space usage, down time and bandwidth&lt;/li&gt; &#xA; &lt;li&gt;regular security updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Find us at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34;&gt;Blog&lt;/a&gt; - all the things you can do with our containers including How-To guides, opinions and much more!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/YWrKVTn&#34;&gt;Discord&lt;/a&gt; - realtime support / chat with the community and the team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discourse.linuxserver.io&#34;&gt;Discourse&lt;/a&gt; - post on our community forum.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fleet.linuxserver.io&#34;&gt;Fleet&lt;/a&gt; - an online web interface which displays all of our maintained images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linuxserver&#34;&gt;GitHub&lt;/a&gt; - view the source for all of our repositories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opencollective.com/linuxserver&#34;&gt;Open Collective&lt;/a&gt; - please consider helping us by either donating or contributing to our budget&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/linuxserver/docker-unifi-network-application&#34;&gt;linuxserver/unifi-network-application&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scarf.sh/gateway/linuxserver-ci/docker/linuxserver%2Funifi-network-application&#34;&gt;&lt;img src=&#34;https://scarf.sh/installs-badge/linuxserver-ci/linuxserver%2Funifi-network-application?color=94398d&amp;amp;label-color=555555&amp;amp;logo-color=ffffff&amp;amp;style=for-the-badge&amp;amp;package-type=docker&#34; alt=&#34;Scarf.io pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-unifi-network-application&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/linuxserver/docker-unifi-network-application.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-unifi-network-application/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/linuxserver/docker-unifi-network-application.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-unifi-network-application/packages&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub%20Package&amp;amp;logo=github&#34; alt=&#34;GitHub Package Repository&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitlab.com/linuxserver.io/docker-unifi-network-application/container_registry&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitLab%20Registry&amp;amp;logo=gitlab&#34; alt=&#34;GitLab Container Registry&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/linuxserver.io/unifi-network-application&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Quay.io&#34; alt=&#34;Quay.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/unifi-network-application&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/linuxserver/unifi-network-application.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/unifi-network-application&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/linuxserver/unifi-network-application.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=stars&amp;amp;logo=docker&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.linuxserver.io/job/Docker-Pipeline-Builders/job/docker-unifi-network-application/job/main/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build?labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;jobUrl=https%3A%2F%2Fci.linuxserver.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-unifi-network-application%2Fjob%2Fmain%2F&amp;amp;logo=jenkins&#34; alt=&#34;Jenkins Build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://ui.com/&#34;&gt;Unifi-network-application&lt;/a&gt; software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ui.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/unifi-banner.png&#34; alt=&#34;unifi-network-application&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Architectures&lt;/h2&gt; &#xA;&lt;p&gt;We utilise the docker manifest for multi-platform awareness. More information is available from docker &lt;a href=&#34;https://github.com/docker/distribution/raw/master/docs/spec/manifest-v2-2.md#manifest-list&#34;&gt;here&lt;/a&gt; and our announcement &lt;a href=&#34;https://blog.linuxserver.io/2019/02/21/the-lsio-pipeline-project/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Simply pulling &lt;code&gt;lscr.io/linuxserver/unifi-network-application:latest&lt;/code&gt; should retrieve the correct image for your arch, but you can also pull specific arch images via tags.&lt;/p&gt; &#xA;&lt;p&gt;The architectures supported by this image are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Tag&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86-64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;amd64-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arm64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;arm64v8-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;armhf&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Application Setup&lt;/h2&gt; &#xA;&lt;h3&gt;This container requires an external mongodb database instance.&lt;/h3&gt; &#xA;&lt;p&gt;The web UI is at &lt;a href=&#34;https://ip:8443&#34;&gt;https://ip:8443&lt;/a&gt;, setup with the first run wizard.&lt;/p&gt; &#xA;&lt;h3&gt;Setting Up Your External Database&lt;/h3&gt; &#xA;&lt;p&gt;Formally only mongodb 3.6 through 4.4 are supported, however, it has been reported that newer versions will work. If you choose to use a newer version be aware that you will not be operating a supported configuration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Make sure you pin your database image version and do not use &lt;code&gt;latest&lt;/code&gt;, as mongodb does not support automatic upgrades between major versions.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are using the &lt;a href=&#34;https://hub.docker.com/_/mongo/&#34;&gt;official mongodb container&lt;/a&gt;, you can create your databases using an &lt;code&gt;init-mongo.js&lt;/code&gt; file with the following contents:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;db.getSiblingDB(&#34;MONGO_DBNAME&#34;).createUser({user: &#34;MONGO_USER&#34;, pwd: &#34;MONGO_PASS&#34;, roles: [{role: &#34;readWrite&#34;, db: &#34;MONGO_DBNAME&#34;}]});&#xA;db.getSiblingDB(&#34;MONGO_DBNAME_stat&#34;).createUser({user: &#34;MONGO_USER&#34;, pwd: &#34;MONGO_PASS&#34;, roles: [{role: &#34;readWrite&#34;, db: &#34;MONGO_DBNAME_stat&#34;}]});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Being sure to replace the placeholders with the same values you supplied to the Unifi container, and mount it into your &lt;em&gt;mongodb&lt;/em&gt; container.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;volumes:&#xA;  - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note that the init script method will only work on first run. If you start the mongodb container without an init script it will generate test data automatically and you will have to manually create your databases, or restart with a clean &lt;code&gt;/data/db&lt;/code&gt; volume and an init script mounted.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;If you are using the init script method do not also set &lt;code&gt;MONGO_INITDB_ROOT_USERNAME&lt;/code&gt; or &lt;code&gt;MONGO_INITDB_ROOT_PASSWORD&lt;/code&gt; values as they will cause conflicts.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also run the commands directly against the database using either &lt;code&gt;mongo&lt;/code&gt; (&amp;lt; 6.0) or &lt;code&gt;mongosh&lt;/code&gt; (&amp;gt;= 6.0).&lt;/p&gt; &#xA;&lt;h3&gt;Device Adoption&lt;/h3&gt; &#xA;&lt;p&gt;For Unifi to adopt other devices, e.g. an Access Point, it is required to change the inform IP address. Because Unifi runs inside Docker by default it uses an IP address not accessible by other devices. To change this go to Settings &amp;gt; System &amp;gt; Advanced and set the Inform Host to a hostname or IP address accessible by your devices. Additionally the checkbox &#34;Override&#34; has to be checked, so that devices can connect to the controller during adoption (devices use the inform-endpoint during adoption).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please note, Unifi change the location of this option every few releases so if it&#39;s not where it says, search for &#34;Inform&#34; or &#34;Inform Host&#34; in the settings.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;In order to manually adopt a device take these steps:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ssh ubnt@$AP-IP&#xA;set-inform http://$address:8080/inform&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default device password is &lt;code&gt;ubnt&lt;/code&gt;. &lt;code&gt;$address&lt;/code&gt; is the IP address of the host you are running this container on and &lt;code&gt;$AP-IP&lt;/code&gt; is the Access Point IP address.&lt;/p&gt; &#xA;&lt;p&gt;When using a Security Gateway (router) it could be that network connected devices are unable to obtain an ip address. This can be fixed by setting &#34;DHCP Gateway IP&#34;, under Settings &amp;gt; Networks &amp;gt; network_name, to a correct (and accessible) ip address.&lt;/p&gt; &#xA;&lt;h3&gt;Migration From &lt;a href=&#34;https://github.com/linuxserver/docker-unifi-controller&#34;&gt;Unifi-Controller&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;If you were using the &lt;code&gt;mongoless&lt;/code&gt; tag for the Unifi Controller container, you can switch directly to the Unifi Network Application container without needing to perform any migration steps.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;You cannot perform an in-place upgrade from an existing Unifi-Controller container, you must run a backup and then a restore.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The simplest migration approach is to take a full backup of your existing install, including history, from the Unifi-Controller web UI, then shut down the old container.&lt;/p&gt; &#xA;&lt;p&gt;You can then start up the new container with a clean &lt;code&gt;/config&lt;/code&gt; mount (and a database container configured), and perform a restore using the setup wizard.&lt;/p&gt; &#xA;&lt;h3&gt;Strict reverse proxies&lt;/h3&gt; &#xA;&lt;p&gt;This image uses a self-signed certificate by default. This naturally means the scheme is &lt;code&gt;https&lt;/code&gt;. If you are using a reverse proxy which validates certificates, you need to &lt;a href=&#34;https://docs.linuxserver.io/faq#strict-proxy&#34;&gt;disable this check for the container&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Here are some example snippets to help you get started creating a container.&lt;/p&gt; &#xA;&lt;h3&gt;docker-compose (recommended, &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;version: &#34;2.1&#34;&#xA;services:&#xA;  unifi-network-application:&#xA;    image: lscr.io/linuxserver/unifi-network-application:latest&#xA;    container_name: unifi-network-application&#xA;    environment:&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      - TZ=Etc/UTC&#xA;      - MONGO_USER=unifi&#xA;      - MONGO_PASS=&#xA;      - MONGO_HOST=unifi-db&#xA;      - MONGO_PORT=27017&#xA;      - MONGO_DBNAME=unifi&#xA;      - MEM_LIMIT=1024 #optional&#xA;      - MEM_STARTUP=1024 #optional&#xA;    volumes:&#xA;      - /path/to/data:/config&#xA;    ports:&#xA;      - 8443:8443&#xA;      - 3478:3478/udp&#xA;      - 10001:10001/udp&#xA;      - 8080:8080&#xA;      - 1900:1900/udp #optional&#xA;      - 8843:8843 #optional&#xA;      - 8880:8880 #optional&#xA;      - 6789:6789 #optional&#xA;      - 5514:5514/udp #optional&#xA;    restart: unless-stopped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;docker cli (&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/cli/&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name=unifi-network-application \&#xA;  -e PUID=1000 \&#xA;  -e PGID=1000 \&#xA;  -e TZ=Etc/UTC \&#xA;  -e MONGO_USER=unifi \&#xA;  -e MONGO_PASS= \&#xA;  -e MONGO_HOST=unifi-db \&#xA;  -e MONGO_PORT=27017 \&#xA;  -e MONGO_DBNAME=unifi \&#xA;  -e MEM_LIMIT=1024 `#optional` \&#xA;  -e MEM_STARTUP=1024 `#optional` \&#xA;  -p 8443:8443 \&#xA;  -p 3478:3478/udp \&#xA;  -p 10001:10001/udp \&#xA;  -p 8080:8080 \&#xA;  -p 1900:1900/udp `#optional` \&#xA;  -p 8843:8843 `#optional` \&#xA;  -p 8880:8880 `#optional` \&#xA;  -p 6789:6789 `#optional` \&#xA;  -p 5514:5514/udp `#optional` \&#xA;  -v /path/to/data:/config \&#xA;  --restart unless-stopped \&#xA;  lscr.io/linuxserver/unifi-network-application:latest&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Parameters&lt;/h2&gt; &#xA;&lt;p&gt;Container images are configured using parameters passed at runtime (such as those above). These parameters are separated by a colon and indicate &lt;code&gt;&amp;lt;external&amp;gt;:&amp;lt;internal&amp;gt;&lt;/code&gt; respectively. For example, &lt;code&gt;-p 8080:80&lt;/code&gt; would expose port &lt;code&gt;80&lt;/code&gt; from inside the container to be accessible from the host&#39;s IP on port &lt;code&gt;8080&lt;/code&gt; outside the container.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 8443&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unifi web admin port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 3478/udp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unifi STUN port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 10001/udp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Required for AP discovery&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 8080&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Required for device communication&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 1900/udp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Required for &lt;code&gt;Make controller discoverable on L2 network&lt;/code&gt; option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 8843&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unifi guest portal HTTPS redirect port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 8880&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unifi guest portal HTTP redirect port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 6789&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;For mobile throughput test&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 5514/udp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Remote syslog port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PUID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for UserID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PGID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for GroupID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e TZ=Etc/UTC&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;specify a timezone to use, see this &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List&#34;&gt;list&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e MONGO_USER=unifi&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mongodb Username. Only evaluated on first run.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e MONGO_PASS=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mongodb Password. Only evaluated on first run.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e MONGO_HOST=unifi-db&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mongodb Hostname. Only evaluated on first run.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e MONGO_PORT=27017&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mongodb Port. Only evaluated on first run.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e MONGO_DBNAME=unifi&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mongodb Database Name (stats DB is automatically suffixed with &lt;code&gt;_stat&lt;/code&gt;). Only evaluated on first run.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e MEM_LIMIT=1024&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optionally change the Java memory limit (in Megabytes). Set to &lt;code&gt;default&lt;/code&gt; to reset to default&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e MEM_STARTUP=1024&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optionally change the Java initial/minimum memory (in Megabytes). Set to &lt;code&gt;default&lt;/code&gt; to reset to default&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All Unifi data stored here&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Environment variables from files (Docker secrets)&lt;/h2&gt; &#xA;&lt;p&gt;You can set any environment variable from a file by using a special prepend &lt;code&gt;FILE__&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;-e FILE__PASSWORD=/run/secrets/mysecretpassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will set the environment variable &lt;code&gt;PASSWORD&lt;/code&gt; based on the contents of the &lt;code&gt;/run/secrets/mysecretpassword&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Umask for running applications&lt;/h2&gt; &#xA;&lt;p&gt;For all of our images we provide the ability to override the default umask settings for services started within the containers using the optional &lt;code&gt;-e UMASK=022&lt;/code&gt; setting. Keep in mind umask is not chmod it subtracts from permissions based on it&#39;s value it does not add. Please read up &lt;a href=&#34;https://en.wikipedia.org/wiki/Umask&#34;&gt;here&lt;/a&gt; before asking for support.&lt;/p&gt; &#xA;&lt;h2&gt;User / Group Identifiers&lt;/h2&gt; &#xA;&lt;p&gt;When using volumes (&lt;code&gt;-v&lt;/code&gt; flags) permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user &lt;code&gt;PUID&lt;/code&gt; and group &lt;code&gt;PGID&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ensure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.&lt;/p&gt; &#xA;&lt;p&gt;In this instance &lt;code&gt;PUID=1000&lt;/code&gt; and &lt;code&gt;PGID=1000&lt;/code&gt;, to find yours use &lt;code&gt;id user&lt;/code&gt; as below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ id username&#xA;    uid=1000(dockeruser) gid=1000(dockergroup) groups=1000(dockergroup)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Mods&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mods.linuxserver.io/?mod=unifi-network-application&#34; title=&#34;view available mods for this container.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=unifi-network-application&amp;amp;query=%24.mods%5B%27unifi-network-application%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Mods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mods.linuxserver.io/?mod=universal&#34; title=&#34;view available universal mods.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=universal&amp;amp;query=%24.mods%5B%27universal%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Universal Mods&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We publish various &lt;a href=&#34;https://github.com/linuxserver/docker-mods&#34;&gt;Docker Mods&lt;/a&gt; to enable additional functionality within the containers. The list of Mods available for this image (if any) as well as universal mods that can be applied to any one of our images can be accessed via the dynamic badges above.&lt;/p&gt; &#xA;&lt;h2&gt;Support Info&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shell access whilst the container is running: &lt;code&gt;docker exec -it unifi-network-application /bin/bash&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To monitor the logs of the container in realtime: &lt;code&gt;docker logs -f unifi-network-application&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;container version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; unifi-network-application&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;image version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; lscr.io/linuxserver/unifi-network-application:latest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updating Info&lt;/h2&gt; &#xA;&lt;p&gt;Most of our images are static, versioned, and require an image update and container recreation to update the app inside. With some exceptions (ie. nextcloud, plex), we do not recommend or support updating apps inside the container. Please consult the &lt;a href=&#34;https://raw.githubusercontent.com/linuxserver/docker-unifi-network-application/main/#application-setup&#34;&gt;Application Setup&lt;/a&gt; section above to see if it is recommended for the image.&lt;/p&gt; &#xA;&lt;p&gt;Below are the instructions for updating containers:&lt;/p&gt; &#xA;&lt;h3&gt;Via Docker Compose&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update all images: &lt;code&gt;docker-compose pull&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single image: &lt;code&gt;docker-compose pull unifi-network-application&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Let compose update all containers as necessary: &lt;code&gt;docker-compose up -d&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single container: &lt;code&gt;docker-compose up -d unifi-network-application&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Docker Run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update the image: &lt;code&gt;docker pull lscr.io/linuxserver/unifi-network-application:latest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stop the running container: &lt;code&gt;docker stop unifi-network-application&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Delete the container: &lt;code&gt;docker rm unifi-network-application&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your &lt;code&gt;/config&lt;/code&gt; folder and settings will be preserved)&lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Watchtower auto-updater (only use if you don&#39;t remember the original parameters)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pull the latest image at its tag and replace it with the same env variables in one run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm \&#xA;-v /var/run/docker.sock:/var/run/docker.sock \&#xA;containrrr/watchtower \&#xA;--run-once unifi-network-application&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We do not endorse the use of Watchtower as a solution to automated updates of existing Docker containers. In fact we generally discourage automated updates. However, this is a useful tool for one-time manual updates of containers where you have forgotten the original parameters. In the long term, we highly recommend using &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;Docker Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Image Update Notifications - Diun (Docker Image Update Notifier)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We recommend &lt;a href=&#34;https://crazymax.dev/diun/&#34;&gt;Diun&lt;/a&gt; for update notifications. Other tools that automatically update containers unattended are not recommended or supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building locally&lt;/h2&gt; &#xA;&lt;p&gt;If you want to make local modifications to these images for development purposes or just to customize the logic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/linuxserver/docker-unifi-network-application.git&#xA;cd docker-unifi-network-application&#xA;docker build \&#xA;  --no-cache \&#xA;  --pull \&#xA;  -t lscr.io/linuxserver/unifi-network-application:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ARM variants can be built on x86_64 hardware using &lt;code&gt;multiarch/qemu-user-static&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --privileged multiarch/qemu-user-static:register --reset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once registered you can define the dockerfile to use with &lt;code&gt;-f Dockerfile.aarch64&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;05.09.23:&lt;/strong&gt; - Initial release.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>SuhailTechInfo/Secktor-bot</title>
    <updated>2023-09-11T01:29:20Z</updated>
    <id>tag:github.com,2023-09-11:/SuhailTechInfo/Secktor-bot</id>
    <link href="https://github.com/SuhailTechInfo/Secktor-bot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;‚ùå Repository Closed ‚ùå &lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;This repository is Depricated&lt;/h3&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; Deploy Suhail Md From &lt;a href=&#34;https://github.com/SuhailTechInfo/Suhail-Md&#34;&gt; Here. &lt;/a&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a aria-label=&#34;Suhail_Md&#34; href=&#34;https://github.com/SuhailTechInfo/Suhail-Md&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;click me&#34; src=&#34;https://img.shields.io/badge/click me Suhail_md here-8A2BE2&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt; &lt;a aria-label=&#34;Suhail Ser&#34; href=&#34;https://wa.me/923184474176&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;click me&#34; src=&#34;https://img.shields.io/badge/Suhail&#39;s Whatsapp-77A2BE3&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt; &lt;a aria-label=&#34;Suhail_Md is free to use&#34; href=&#34;https://youtube.com/@suhailtechinfo&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;SuhailTechInfo Yt&#34; src=&#34;https://img.shields.io/youtube/channel/subscribers/UCU071AMRqcd5mfTdCgJFwPg&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
</feed>