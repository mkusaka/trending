<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-30T01:34:02Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ygminds73/docker-compose</title>
    <updated>2023-03-30T01:34:02Z</updated>
    <id>tag:github.com,2023-03-30:/ygminds73/docker-compose</id>
    <link href="https://github.com/ygminds73/docker-compose" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;docker-compose&lt;/h1&gt; &#xA;&lt;p&gt;Tutorial: &lt;a href=&#34;https://docs.docker.com/compose/gettingstarted/&#34;&gt;Get started with Docker Compose&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How can I start my services in the background?&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How can I see what environment variables are available to the $SERVICE service defined in my docker-compose file?&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SERVICE=web&#xA;docker compose run $SERVICE env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note how this creates a container and then exists&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker ps -a&#xA;CONTAINER ID   IMAGE                COMMAND                  CREATED          STATUS                     PORTS     NAMES&#xA;0352eb7204cf   docker-compose_web   &#34;env&#34;                    2 seconds ago    Exited (0) 1 second ago              docker-compose_web_run_cf43592bca36&#xA;567aa67651ab   docker-compose_web   &#34;env&#34;                    3 minutes ago    Exited (0) 3 minutes ago             docker-compose_web_run_a506a07db24&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How can I stop services running in the background?&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker compose stop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How can I bring everything down, removing the containers entirely? What if I also want to remove the data volume?&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And to also remove the data volume:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose down --volumes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Will stopping (ctrl+C or &lt;code&gt;docker compose stop&lt;/code&gt;) remove containers?&lt;/h2&gt; &#xA;&lt;p&gt;No, the containers just exit. &lt;code&gt;docker compose down&lt;/code&gt; will remove the containers. The stopped container is why the counter will remain the same when runing &lt;code&gt;docker compose up&lt;/code&gt; in a loop while stopping it each time, the data remains the redis container.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>qbittorrent/docker-qbittorrent-nox</title>
    <updated>2023-03-30T01:34:02Z</updated>
    <id>tag:github.com,2023-03-30:/qbittorrent/docker-qbittorrent-nox</id>
    <link href="https://github.com/qbittorrent/docker-qbittorrent-nox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official qbittorrent-nox docker image&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;qBittorrent-nox Docker Image &lt;a href=&#34;https://github.com/qbittorrent/docker-qbittorrent-nox/actions&#34;&gt;&lt;img src=&#34;https://github.com/qbittorrent/docker-qbittorrent-nox/actions/workflows/release.yaml/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions CI Status&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Repository on Docker Hub: &lt;a href=&#34;https://hub.docker.com/r/qbittorrentofficial/qbittorrent-nox&#34;&gt;https://hub.docker.com/r/qbittorrentofficial/qbittorrent-nox&lt;/a&gt; &lt;br&gt; Repository on GitHub: &lt;a href=&#34;https://github.com/qbittorrent/docker-qbittorrent-nox&#34;&gt;https://github.com/qbittorrent/docker-qbittorrent-nox&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported architectures&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;linux/amd64&lt;/li&gt; &#xA; &lt;li&gt;linux/arm/v6&lt;/li&gt; &#xA; &lt;li&gt;linux/arm/v7&lt;/li&gt; &#xA; &lt;li&gt;linux/arm64/v8&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reporting bugs&lt;/h2&gt; &#xA;&lt;p&gt;If the problem is related to Docker, please report it to this repository: &lt;br&gt; &lt;a href=&#34;https://github.com/qbittorrent/docker-qbittorrent-nox/issues&#34;&gt;https://github.com/qbittorrent/docker-qbittorrent-nox/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If the problem is with qBittorrent, please report the issue to its main repository: &lt;br&gt; &lt;a href=&#34;https://github.com/qbittorrent/qBittorrent/issues&#34;&gt;https://github.com/qbittorrent/qBittorrent/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Prerequisites&lt;/p&gt; &lt;p&gt;In order to run this image you&#39;ll need Docker installed: &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;https://docs.docker.com/get-docker/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you don&#39;t need the GUI, you can just install Docker Engine: &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;https://docs.docker.com/engine/install/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It is also recommended to install Docker Compose as it can significantly ease the process: &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;https://docs.docker.com/compose/install/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download this repository&lt;/p&gt; &lt;p&gt;You can either &lt;code&gt;git clone&lt;/code&gt; this repository or download an .zip of it: &lt;a href=&#34;https://github.com/qbittorrent/docker-qbittorrent-nox/archive/refs/heads/main.zip&#34;&gt;https://github.com/qbittorrent/docker-qbittorrent-nox/archive/refs/heads/main.zip&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Edit Docker environment file&lt;/p&gt; &lt;p&gt;If you are not using Docker Compose you can skip editing the environment file. However the variables presented below is crucial in later steps, make sure you understand them.&lt;/p&gt; &lt;p&gt;Find and open the &lt;code&gt;.env&lt;/code&gt; file in the repository you cloned (or the .zip archive you downloaded). &lt;br&gt; There are a few variables that you must take care of before you can run the image. &lt;br&gt; You can find the meanings of these variables in the following section. Make sure you understand every one of them.&lt;/p&gt; &lt;h4&gt;Environment variables&lt;/h4&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;QBT_EULA&lt;/code&gt; &lt;br&gt; This environment variable defines whether you accept the end-user license agreement (EULA) of qBittorrent. &lt;br&gt; &lt;strong&gt;Put &lt;code&gt;accept&lt;/code&gt; only if you understand and accepted the EULA.&lt;/strong&gt; You can find the EULA &lt;a href=&#34;https://github.com/qbittorrent/qBittorrent/raw/56667e717b82c79433ecb8a5ff6cc2d7b315d773/src/app/main.cpp#L320-L323&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;QBT_VERSION&lt;/code&gt; &lt;br&gt; This environment variable specifies the version of qBittorrent-nox to use. &lt;br&gt; For example, &lt;code&gt;4.4.5-1&lt;/code&gt; is a valid entry. You can find all tagged versions &lt;a href=&#34;https://hub.docker.com/r/qbittorrentofficial/qbittorrent-nox/tags&#34;&gt;here&lt;/a&gt;. &lt;br&gt; Or you can put &lt;code&gt;latest&lt;/code&gt; to use the latest stable release of qBittorrent. &lt;br&gt; If you are up to test the bleeding-edge version, you can put &lt;code&gt;alpha&lt;/code&gt; to get the weekly build.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;QBT_WEBUI_PORT&lt;/code&gt; &lt;br&gt; This environment variable sets the port number which qBittorrent WebUI will be binded to.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;h4&gt;Volumes&lt;/h4&gt; &lt;p&gt;There are some paths involved:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;&amp;lt;your_path&amp;gt;/config&lt;/code&gt; &lt;br&gt; Full path to a folder on your host machine which will store qBittorrent configurations. Using relative path won&#39;t work.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;&amp;lt;your_path&amp;gt;/downloads&lt;/code&gt; &lt;br&gt; Full path to a folder on your host machine which will store the files downloaded by qBittorrent. Using relative path won&#39;t work.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Running the image&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;If using Docker (not Docker Compose), edit the variables and run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export \&#xA;  QBT_EULA=&amp;lt;put_accept_here&amp;gt; \&#xA;  QBT_VERSION=latest \&#xA;  QBT_WEBUI_PORT=8080 \&#xA;  QBT_CONFIG_PATH=&#34;&amp;lt;your_path&amp;gt;/config&#34; \&#xA;  QBT_DOWNLOADS_PATH=&#34;&amp;lt;your_path&amp;gt;/downloads&#34;&#xA;docker run \&#xA;  -t \&#xA;  --name qbittorrent-nox \&#xA;  --read-only \&#xA;  --rm \&#xA;  --stop-timeout 1800 \&#xA;  --tmpfs /tmp \&#xA;  -e QBT_EULA \&#xA;  -e QBT_WEBUI_PORT \&#xA;  -p &#34;$QBT_WEBUI_PORT&#34;:&#34;$QBT_WEBUI_PORT&#34;/tcp \&#xA;  -p 6881:6881/tcp \&#xA;  -p 6881:6881/udp \&#xA;  -v &#34;$QBT_CONFIG_PATH&#34;:/config \&#xA;  -v &#34;$QBT_DOWNLOADS_PATH&#34;:/downloads \&#xA;  qbittorrentofficial/qbittorrent-nox:${QBT_VERSION}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;If using Docker Compose:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;A few notes:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Alternatively, you can use &lt;code&gt;ghcr.io/qbittorrent/docker-qbittorrent-nox:${QBT_VERSION}&lt;/code&gt; for the image path.&lt;/li&gt; &#xA;     &lt;li&gt;By default the timezone in the container uses the default of Alpine Linux (which is most likely &lt;code&gt;UTC&lt;/code&gt;). You can set the environment variable &lt;code&gt;TZ&lt;/code&gt; to your preferred value.&lt;/li&gt; &#xA;     &lt;li&gt;You can change the User ID (UID) and Group ID (GID) of the &lt;code&gt;qbittorrent-nox&lt;/code&gt; process by setting environment variables &lt;code&gt;PUID&lt;/code&gt; and &lt;code&gt;PGID&lt;/code&gt; respectively. By default they are both set to &lt;code&gt;1000&lt;/code&gt;. &lt;br&gt; Note that you will need to remove &lt;code&gt;--read-only&lt;/code&gt; flag (when using Docker) or set &lt;code&gt;read_only: false&lt;/code&gt; (when using Docker Compose) as they are incompatible with it.&lt;/li&gt; &#xA;     &lt;li&gt;You can set additional group ID (AGID) of the &lt;code&gt;qbittorrent-nox&lt;/code&gt; process by setting the environment variable &lt;code&gt;PAGID&lt;/code&gt;. For example: &lt;code&gt;10000,10001&lt;/code&gt;, this will set the process to be in two (secondary) groups &lt;code&gt;10000&lt;/code&gt; and &lt;code&gt;10001&lt;/code&gt;. By default there is no additional group. &lt;br&gt; Note that you will need to remove &lt;code&gt;--read-only&lt;/code&gt; flag (when using Docker) or set &lt;code&gt;read_only: false&lt;/code&gt; (when using Docker Compose) as they are incompatible with it.&lt;/li&gt; &#xA;     &lt;li&gt;It is possible to set the umask of the &lt;code&gt;qbittorrent-nox&lt;/code&gt; process by setting the environment variable &lt;code&gt;UMASK&lt;/code&gt;. By default it uses the default from Alpine Linux.&lt;/li&gt; &#xA;     &lt;li&gt;You can list the compile-time Software Bill of Materials (sbom) with the following command: &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --entrypoint /bin/cat --rm qbittorrentofficial/qbittorrent-nox:latest /sbom.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Then you can login to qBittorrent-nox at: &lt;code&gt;http://&amp;lt;your_docker_host_address&amp;gt;:8080&lt;/code&gt; &lt;br&gt; The default username/password is: &lt;code&gt;admin/adminadmin&lt;/code&gt;. &lt;br&gt; Don&#39;t forget to change the login password to something else! &lt;br&gt; You can change it at &#39;Tools&#39; menu -&amp;gt; &#39;Options...&#39; -&amp;gt; &#39;Web UI&#39; tab -&amp;gt; &#39;Authentication&#39;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Stopping container&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;When using Docker (not Docker Compose):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker stop qbittorrent-nox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;When using Docker Compose:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Build image manually&lt;/h2&gt; &#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://github.com/qbittorrent/docker-qbittorrent-nox/tree/main/manual_build&#34;&gt;manual_build&lt;/a&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;p&gt;To attach gdb to the running qbittorent-nox process, follow the steps below:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Before you start the container&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Remove &lt;code&gt;--read-only&lt;/code&gt; as it will need additional packages within the container. &lt;br&gt; Or disable the respective attributes in docker-compose.yml.&lt;/li&gt; &#xA;   &lt;li&gt;Add &lt;code&gt;--cap-add=SYS_PTRACE&lt;/code&gt; to &lt;code&gt;docker run&lt;/code&gt; argument list. &lt;br&gt; Or enable the respective attributes in docker-compose.yml.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the container&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Drop into container&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# to find container id&#xA;docker ps&#xA;# drop into container&#xA;docker exec -it &amp;lt;container_id&amp;gt; /bin/sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install packages&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;apk add \&#xA;  gdb \&#xA;  musl-dbg&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Attach gdb to the running process&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# to find PID of qbittorrent-nox&#xA;ps -a&#xA;# attach debugger&#xA;gdb -p &amp;lt;PID&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>