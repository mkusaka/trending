<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-22T01:33:13Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>LinkedInLearning/java-unit-testing-with-codespaces-3266042</title>
    <updated>2023-05-22T01:33:13Z</updated>
    <id>tag:github.com,2023-05-22:/LinkedInLearning/java-unit-testing-with-codespaces-3266042</id>
    <link href="https://github.com/LinkedInLearning/java-unit-testing-with-codespaces-3266042" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is a repository for the LinkedIn Learning course Java Unit Testing with Codespaces.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Java: Practice Unit Testing&lt;/h1&gt; &#xA;&lt;p&gt;This is the repository for the LinkedIn Learning course Java: Practice Unit Testing. The full course is available from &lt;a href=&#34;https://www.linkedin.com/learning/java-practice-unit-testing?dApp=59033956&amp;amp;leis=LAA&#34;&gt;LinkedIn Learning&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.licdn.com/dms/image/D560DAQG64CVbQvghgw/learning-public-crop_288_512/0/1682710101423?e=2147483647&amp;amp;v=beta&amp;amp;t=T9hyFxJmfPX1w1oqV7Nyy-ph9XukOqwycWKoB1TZRR8&#34; alt=&#34;Java: Practice Unit Testing&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The beauty of test-driven development is that it allows you to iterate your codebase one step at a time, testing and reworking individual cases as you go. Not only does this reduce the likelihood of bugs and errors, it also helps you write more effective and more reliable code.&lt;/p&gt; &#xA;&lt;p&gt;In this course, instructor Bethan Palmer covers the essentials of unit testing in Java to showcase the benefits of test-driven development. Explore practical topics including common assertions, comparing arrays, and testing exceptions as well as some of the more advanced features of JUnit, the Java unit testing framework that lets you run parameterized tests. Along the way, take advantage of the opportunity to practice writing your own unit tests with hands-on, interactive coding exercises in GitHub Codespaces.&lt;/p&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;p&gt;This repository has branches for each of the videos in the course. You can use the branch pop up menu in github to switch to a specific branch and take a look at the course at that stage, or you can add &lt;code&gt;/tree/BRANCH_NAME&lt;/code&gt; to the URL to go to the branch you want to access.&lt;/p&gt; &#xA;&lt;h2&gt;Branches&lt;/h2&gt; &#xA;&lt;p&gt;The branches are structured to correspond to the videos in the course. The naming convention is &lt;code&gt;CHAPTER#_MOVIE#&lt;/code&gt;. As an example, the branch named &lt;code&gt;02_03&lt;/code&gt; corresponds to the second chapter and the third video in that chapter. Some branches will have a beginning and an end state. These are marked with the letters &lt;code&gt;b&lt;/code&gt; for &#34;beginning&#34; and &lt;code&gt;e&lt;/code&gt; for &#34;end&#34;. The &lt;code&gt;b&lt;/code&gt; branch contains the code as it is at the beginning of the movie. The &lt;code&gt;e&lt;/code&gt; branch contains the code as it is at the end of the movie. The &lt;code&gt;main&lt;/code&gt; branch holds the final state of the code when in the course.&lt;/p&gt; &#xA;&lt;p&gt;When switching from one exercise files branch to the next after making changes to the files, you may get a message like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;error: Your local changes to the following files would be overwritten by checkout:        [files]&#xA;Please commit your changes or stash them before you switch branches.&#xA;Aborting&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To resolve this issue:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Add changes to git using this command: git add .&#xA;Commit changes using this command: git commit -m &#34;some message&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Instructor&lt;/h3&gt; &#xA;&lt;p&gt;Bethan Palmer&lt;/p&gt; &#xA;&lt;p&gt;Software Developer&lt;/p&gt; &#xA;&lt;p&gt;Check out my other courses on &lt;a href=&#34;https://www.linkedin.com/learning/instructors/bethan-palmer&#34;&gt;LinkedIn Learning&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fga-eps-mds/2023-1-CAPJu-Doc</title>
    <updated>2023-05-22T01:33:13Z</updated>
    <id>tag:github.com,2023-05-22:/fga-eps-mds/2023-1-CAPJu-Doc</id>
    <link href="https://github.com/fga-eps-mds/2023-1-CAPJu-Doc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repositório destinado à documentação do CAPJu, um sistema de controle e acompanhamento de processos da Justiça Federal.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CAPJu - Documentação 2023/1&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://i.imgur.com/0KsqIUe.png&#34; alt=&#34;logo&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Sobre o Projeto&lt;/h2&gt; &#xA;&lt;p&gt;O CAPJu é abreviação para &lt;em&gt;&#34;Controle e Acompanhamento de Processos da Justiça&#34;&lt;/em&gt;, no qual trata-se de uma projeto de código aberto que tem como objetivo ajudar os usuários da 4ª vara cível da Justiça Federal na realização de gerenciar os processos.&lt;/p&gt; &#xA;&lt;p&gt;Este repositório, em especial, é totalmente dedicado à manutenção dos detalhes do Microserviço Interface do projeto. Sinta-se livre para contribuir, mas antes leia o guia de contribuição.&lt;/p&gt; &#xA;&lt;p&gt;O CAPJu é uma aplicação &lt;em&gt;Web&lt;/em&gt; compatível com qualquer navegador.&lt;/p&gt; &#xA;&lt;h2&gt;Rodando Localmente o Github Pages&lt;/h2&gt; &#xA;&lt;h3&gt;Requisitos&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;python 3.x&lt;/li&gt; &#xA; &lt;li&gt;pip (Se você está usando a última versão de Python, &lt;em&gt;pip&lt;/em&gt; provavelmente já está instalado por padrão)&lt;/li&gt; &#xA; &lt;li&gt;mkdocs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Você pode checar a se já tem eles instalados a partir da linha de comando:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;$ python --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;$ pip --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;$ mkdocs --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Uso&lt;/h3&gt; &#xA;&lt;p&gt;Para rodar localmente o github pages é preciso instalar o tema para mkdocs, o mkdocs-material com o comando:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;$ pip install mkdocs-material&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Após sua instalação execute o comando:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;$ mkdocs serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OBS: Por padrão o site deverá estar rodando em &lt;a href=&#34;http://127.0.0.1:8000/&#34;&gt;http://127.0.0.1:8000/&lt;/a&gt; ou &lt;a href=&#34;http://localhost:8000/&#34;&gt;http://localhost:8000/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contribuidores&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/fga-eps-mds/2023-1-CAPJu-Doc/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=fga-eps-mds/2023-1-CAPJu-Doc&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>Jisan09/SSH4Me</title>
    <updated>2023-05-22T01:33:13Z</updated>
    <id>tag:github.com,2023-05-22:/Jisan09/SSH4Me</id>
    <link href="https://github.com/Jisan09/SSH4Me" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SSH4Me is a Docker container for secure root access to development environments via an Ngrok tunnel.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SSH4Me&lt;/h1&gt; &#xA;&lt;p&gt;SSH4Me is a Docker container that provides secure root access to development environments via an Ngrok tunnel. With configuration for root login and common development ports, SSH4Me makes it easy to access your environment securely from anywhere, including platforms like Railway.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;To use SSH4Me, you will need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A GitHub account to fork the SSH4Me repository&lt;/li&gt; &#xA; &lt;li&gt;An ngrok account to get an authentication token&lt;/li&gt; &#xA; &lt;li&gt;Docker installed on your local machine if you want to run SSH4Me locally&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation and Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Fork the SSH4Me Repository on GitHub&lt;/h3&gt; &lt;p&gt;The first step is to fork the SSH4Me repository on GitHub. To do this click the &#34;Fork&#34; button in the top-right corner of the page.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;Sign up for an ngrok Account and Get Your Authentication Token&lt;/h3&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Sign up for an ngrok account at &lt;a href=&#34;https://dashboard.ngrok.com/signup&#34;&gt;https://dashboard.ngrok.com/signup&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Get your ngrok authentication token from &lt;a href=&#34;https://dashboard.ngrok.com/get-started/your-authtoken&#34;&gt;https://dashboard.ngrok.com/get-started/your-authtoken&lt;/a&gt;.&lt;/p&gt; &#xA;    &lt;figure&gt;&#xA;     &lt;img src=&#34;https://graph.org/file/a540090cbde42cb121f81.jpg&#34; alt=&#34;ngrok dashboard&#34; width=&#34;720&#34;&gt;&#xA;    &lt;/figure&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;You will need this token when you build the Docker container on Railway or locally.&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h3&gt;〣 Deploy on Railway&lt;/h3&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Go to &lt;a href=&#34;https://railway.app/new&#34;&gt;https://railway.app/new&lt;/a&gt; and build the Docker container with the following environment variables:&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;code&gt;AUTH_TOKEN&lt;/code&gt;: Your ngrok authentication token.&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PASSWORD&lt;/code&gt;: Password for SSH access (optional, default is &lt;code&gt;rootuser&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;   &lt;figure&gt;&#xA;    &lt;img src=&#34;https://graph.org/file/e68689ddfbdb12cdc37d8.jpg&#34; alt=&#34;Railway app buildL&#34; width=&#34;720&#34;&gt;&#xA;   &lt;/figure&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h3&gt;〣 Run Locally&lt;/h3&gt;&lt;/summary&gt; &#xA; &lt;h4&gt;Install Docker&lt;/h4&gt; &#xA; &lt;p&gt;First, you need to install Docker on your local machine. You can download the appropriate version of Docker for your operating system from the &lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Docker website&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h4&gt;Clone the SSH4Me Repository&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Open a terminal window on your local machine.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Clone the SSH4Me repository by running the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone https://github.com/Jisan09/SSH4Me&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;Build and Run the Docker Container&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Navigate to the &lt;code&gt;ssh4me&lt;/code&gt; directory by running the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cd ssh4me&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Build the Docker container by running the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;docker build -t ssh4me .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Run the Docker container by running the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;docker run -e AUTH_TOKEN=&amp;lt;your-ngrok-auth-token&amp;gt; -e PASSWORD=&amp;lt;your-password&amp;gt; ssh4me&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;strong&gt;Wait for the build to complete. Once it&#39;s done, you should see your ssh &amp;amp; password in log.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome and encourage contributions to SSH4Me. If you find a bug or have an idea for a new feature, please open an issue or a pull request.&lt;/p&gt; &#xA;&lt;p&gt;If you found SSH4Me useful, please consider giving it a star on GitHub by clicking the ⭐️ button. This helps to increase the visibility of the project and lets us know that you find it valuable.&lt;/p&gt; &#xA;&lt;p&gt;Thank you for your support!&lt;/p&gt;</summary>
  </entry>
</feed>