<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-20T01:28:23Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>abarichello/godot-ci</title>
    <updated>2023-09-20T01:28:23Z</updated>
    <id>tag:github.com,2023-09-20:/abarichello/godot-ci</id>
    <link href="https://github.com/abarichello/godot-ci" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker image to export Godot Engine games. Templates for Gitlab CI and GitHub Actions to deploy to GitLab Pages/GitHub Pages/Itch.io.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;godot-ci&lt;/h1&gt; &#xA;&lt;p&gt;Docker image to export Godot Engine games and deploy to GitLab/GitHub Pages and Itch.io using GitLab CI and GitHub Actions.&lt;/p&gt; &#xA;&lt;img src=&#34;https://i.imgur.com/3z4Sxhd.png&#34; width=&#34;450&#34;&gt; &#xA;&lt;h2&gt;Docker Hub&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/barichello/godot-ci/&#34;&gt;https://hub.docker.com/r/barichello/godot-ci/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How To Use&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;.gitlab-ci.yml&lt;/code&gt; and &lt;code&gt;.github/workflows/godot-ci.yml&lt;/code&gt; are included in this project as reference. &lt;br&gt;For live projects, examples and tutorials using this template check the list below:&lt;br&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=wbc1qut0vT4&#34;&gt;Video tutorial by Kyle Luce&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=4oUs4IV_Mj4&amp;amp;list=PLCBLMvLIundAOAiCvluBNuEA0-ea7_EDp&#34;&gt;Video tutorial series by David Snopek&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Repository examples: &lt;a href=&#34;https://github.com/aBARICHELLO/godot-ci/tree/master/test-project&#34;&gt;test-project&lt;/a&gt; | &lt;a href=&#34;https://gitlab.com/BARICHELLO/game-off&#34;&gt;game-off&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Test deploys using this tool: &lt;a href=&#34;http://barichello.me/godot-ci/&#34;&gt;GitHub Pages&lt;/a&gt; | &lt;a href=&#34;https://barichello.gitlab.io/godot-ci/&#34;&gt;GitLab Pages&lt;/a&gt; | &lt;a href=&#34;https://barichello.itch.io/test-project&#34;&gt;Itch.io&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Mono/C#&lt;/h3&gt; &#xA;&lt;p&gt;To build a Godot project with Mono (C#) enabled, you must do two things for each job:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Change the container&#39;s &lt;code&gt;image&lt;/code&gt; tag from &lt;code&gt;barichello/godot-ci:VERSION&lt;/code&gt; to &lt;code&gt;barichello/godot-ci:mono-VERSION&lt;/code&gt; in &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; (Gitlab) or &lt;code&gt;godot-ci.yml&lt;/code&gt; (Github). (e.g. &lt;code&gt;barichello/godot-ci:mono-3.2.1&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;You will also need to change your &#34;Setup&#34; step&#39;s run commands (looks like &lt;code&gt;run: mv /root/.local ...&lt;/code&gt;) from ending with &lt;code&gt;...${GODOT_VERSION}.stable&lt;/code&gt; to ending with &lt;code&gt;...${GODOT_VERSION}.stable.mono&lt;/code&gt;. You will need to do this for both directories in the command.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;becomes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/templates/${GODOT_VERSION}.stable.mono&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;p&gt;To build a debug release (debug.keystore), use the &lt;code&gt;android_debug&lt;/code&gt; job example in the &lt;code&gt;gitlab-ci.yml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;If you want to export for Android with your own keystore, you can do this with the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Take your generated keystore and convert it to Base64: Linux &amp;amp; macOS: &lt;code&gt;base64 release.keystore -w 0&lt;/code&gt; Windows: &lt;code&gt;certutil -encodehex -f release.keystore encoded.txt 0x40000001&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;strong&gt;GitLab Project &amp;gt; Settings &amp;gt; CI/CD &amp;gt; Variables&lt;/strong&gt; and copy the Base64-encoded keystore value in a new variable &lt;code&gt;SECRET_RELEASE_KEYSTORE_BASE64&lt;/code&gt; as type variable.&lt;/li&gt; &#xA; &lt;li&gt;Create a second variable SECRET_RELEASE_KEYSTORE_USER as type variable with the alias of your keystore as value.&lt;/li&gt; &#xA; &lt;li&gt;Create a third variable SECRET_RELEASE_KEYSTORE_PASSWORD as type variable with the password of your keystore as value.&lt;/li&gt; &#xA; &lt;li&gt;Use the &lt;code&gt;android&lt;/code&gt; job example in the &lt;code&gt;gitlab-ci.yml&lt;/code&gt; file.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;GDNative/C++&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/2shady4u/godot-cpp-ci&#34;&gt;this repository&lt;/a&gt; for automating GDNative C++ compilation, which is based off this repository.&lt;/p&gt; &#xA;&lt;h3&gt;Modules&lt;/h3&gt; &#xA;&lt;p&gt;You have to compile Godot with the modules included first. See &lt;a href=&#34;https://gitlab.com/Calinou/godot-builds-ci&#34;&gt;this excellent repository&lt;/a&gt; by Calinou for automating Godot builds.&lt;/p&gt; &#xA;&lt;p&gt;After that, you would use the custom build to export your project as usual. See &lt;a href=&#34;https://gitlab.com/greenfox/godot-build-automation/-/blob/master/advanced_topics.md#using-a-custom-build-of-godot&#34;&gt;this guide&lt;/a&gt; by Greenfox on how to use a custom Godot build for automated exports.&lt;/p&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;p&gt;Not available yet. Automating Xcode projects is doable but not trivial, and macOS runners only recently became available for GitHub actions, so it will happen eventually.&lt;/p&gt; &#xA;&lt;h2&gt;Platforms&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s a mapping between each supported CI service, the template jobs and a live example.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;CI&lt;/th&gt; &#xA;   &lt;th&gt;Template&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GitLab CI&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/aBARICHELLO/godot-ci/raw/master/.gitlab-ci.yml#L16-L58&#34;&gt;Godot Exports&lt;/a&gt; / &lt;a href=&#34;https://github.com/aBARICHELLO/godot-ci/raw/master/.gitlab-ci.yml#L60-L76&#34;&gt;GitHub Pages&lt;/a&gt; / &lt;a href=&#34;https://github.com/aBARICHELLO/godot-ci/raw/master/.gitlab-ci.yml#L78-L91&#34;&gt;GitLab Pages&lt;/a&gt; / &lt;a href=&#34;https://github.com/aBARICHELLO/godot-ci/raw/master/.gitlab-ci.yml#L93-L113&#34;&gt;Itch.io&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitlab.com/BARICHELLO/godot-ci/pipelines&#34;&gt;GitLab CI Pipelines&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/aBARICHELLO/godot-ci/raw/master/.github/workflows/godot-ci.yml#L8-99&#34;&gt;Godot Exports&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/aBARICHELLO/godot-ci/actions&#34;&gt;GitHub Actions running&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Environment configuration&lt;/h2&gt; &#xA;&lt;p&gt;First you need to remove unused jobs/stages from the &lt;code&gt;.yml&lt;/code&gt; file you are using as a template(&lt;code&gt;.gitlab-ci.yml&lt;/code&gt; or &lt;code&gt;.github/workflows/godot-ci.yml&lt;/code&gt;).&lt;br&gt; Then you have to add these environments to a configuration panel depending on the chosen CI and jobs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;GitHub&lt;/strong&gt;: &lt;code&gt;https://github.com/&amp;lt;username&amp;gt;/&amp;lt;project-name&amp;gt;/settings/secrets&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GitLab&lt;/strong&gt;: &lt;code&gt;https://gitlab.com/&amp;lt;username&amp;gt;/&amp;lt;repo-name&amp;gt;/settings/ci_cd&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;GitHub Pages&lt;/h3&gt; &#xA;&lt;p&gt;Secrets needed for a GitHub Pages deploy via GitLab CI:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;REMOTE_URL&lt;/td&gt; &#xA;   &lt;td&gt;The &lt;code&gt;git remote&lt;/code&gt; where the web export will be hosted (in this case GitHub), it should contain your &lt;a href=&#34;https://github.com/settings/tokens&#34;&gt;deploy/personal access token&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://&amp;lt;github username&amp;gt;:&amp;lt;deploy token&amp;gt;@github.com/&amp;lt;username&amp;gt;/&amp;lt;repository&amp;gt;.git&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GIT_EMAIL&lt;/td&gt; &#xA;   &lt;td&gt;Git email of the account that will commit to the &lt;code&gt;gh-pages&lt;/code&gt; branch.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;email@example.com&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GIT_USERNAME&lt;/td&gt; &#xA;   &lt;td&gt;Username of the account that will commit to the &lt;code&gt;gh-pages&lt;/code&gt; branch.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;username&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Others variables are set automatically by the &lt;code&gt;gitlab-runner&lt;/code&gt;, see the documentation for &lt;a href=&#34;https://docs.gitlab.com/ee/ci/variables/predefined_variables.html&#34;&gt;predefined variables&lt;/a&gt;.&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Itch.io&lt;/h3&gt; &#xA;&lt;p&gt;Deployment to Itch.io is done via &lt;a href=&#34;https://itch.io/docs/butler/&#34;&gt;Butler&lt;/a&gt;.&lt;br&gt; Secrets needed for a Itch.io deploy via GitLab CI:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ITCHIO_USERNAME&lt;/td&gt; &#xA;   &lt;td&gt;Your username on Itch.io, as in your personal page will be at &lt;code&gt;https://&amp;lt;username&amp;gt;.itch.io&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;username&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ITCHIO_GAME&lt;/td&gt; &#xA;   &lt;td&gt;the name of your game on Itchio, as in your game will be available at &lt;code&gt;https://&amp;lt;username&amp;gt;.itch.io/&amp;lt;game&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;game&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BUTLER_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;An &lt;a href=&#34;https://itch.io/user/settings/api-keys&#34;&gt;Itch.io API key&lt;/a&gt; is necessary for Butler so that the CI can authenticate on Itch.io on your behalf. &lt;strong&gt;Make that API key &lt;code&gt;Masked&lt;/code&gt;(GitLab CI) to keep it secret&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Troubleshoot&lt;/h2&gt; &#xA;&lt;h4&gt;Problems while exporting&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Check that the export presets file (&lt;code&gt;export_presets.cfg&lt;/code&gt;) is committed to version control.&lt;/strong&gt; In other words, &lt;code&gt;export_presets.cfg&lt;/code&gt; must &lt;em&gt;not&lt;/em&gt; be in &lt;code&gt;.gitignore&lt;/code&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Make sure you don&#39;t accidentally commit Android release keystore or Windows codesigning credentials. These credentials cannot be revoked if they are leaked!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Check that the export names on &lt;code&gt;export_presets.cfg&lt;/code&gt; match the ones used in your CI script &lt;strong&gt;(case-sensitive)&lt;/strong&gt;. Export preset names that contain spaces must be written within quotes (single or double).&lt;/li&gt; &#xA; &lt;li&gt;Check the paths used in your CI script. Some commands may be running in the wrong place if you are keeping the project in a folder (like the &lt;code&gt;test-project&lt;/code&gt; template) or not.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Authentication errors with Butler&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If using GitLab, check that the &#39;protected&#39; tag is disabled in the &lt;a href=&#34;https://github.com/aBARICHELLO/godot-ci#environment-configuration&#34;&gt;CI/CD variables panel&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Additional Resources&lt;/h2&gt; &#xA;&lt;p&gt;Greenfox has an &lt;a href=&#34;https://gitlab.com/greenfox/godot-build-automation&#34;&gt;excellent repo&lt;/a&gt; that is also for automating Godot exports.&lt;/p&gt;</summary>
  </entry>
</feed>