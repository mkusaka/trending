<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-21T01:34:38Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kavidu-dilhara/Kali-Linux-VPS</title>
    <updated>2023-03-21T01:34:38Z</updated>
    <id>tag:github.com,2023-03-21:/kavidu-dilhara/Kali-Linux-VPS</id>
    <link href="https://github.com/kavidu-dilhara/Kali-Linux-VPS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository contains the configuration files and Docker setup for a Kali Linux virtual private server (VPS) on Railway.app.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kali Linux VPS&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/kavidu-dilhara/Kali-Linux-VPS/raw/main/img/kali-logo.jpeg?resize=1024%2C555&amp;amp;ssl=1&#34; alt=&#34;kali&#34;&gt;&lt;/p&gt; &#xA;&lt;h5 align=&#34;left&#34;&gt; This repository provides instructions and scripts for creating a Kali Linux virtual private server (VPS) using a Kali Linux Docker image, Railway, and Ngrok.(Completely free) &lt;/h5&gt; &#xA;&lt;center&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/kavidu-dilhara/Kali-Linux-VPS/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/kavidu-dilhara/Kali-Linux-VPS?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/forks/kavidu-dilhara/Kali-Linux-VPS?style=social&#34; alt=&#34;GitHub fork&#34;&gt; &lt;a href=&#34;https://github.com/kavidu-dilhara/Kali-Linux-VPS/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kavidu-dilhara/Kali-Linux-VPS/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/version-1.0.0-green.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kavidu-dilhara/Kali-Linux-VPS/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/kavidu-dilhara/Kali-Linux-VPS.svg?sanitize=true&#34; alt=&#34;Last Commit&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/center&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;Before you get started, make sure you have the following:&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;1.Github account&lt;/code&gt; &lt;br&gt; &lt;code&gt;2.Railway account&lt;/code&gt;&lt;br&gt; &lt;code&gt;3.Ngrok account&lt;/code&gt; &lt;br&gt; (you can sign up for free)&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kavidu-dilhara/Kali-Linux-VPS/raw/main/deploy.md&#34;&gt;&lt;img src=&#34;https://railway.app/button.svg?sanitize=true&#34; alt=&#34;Deploy on Railway&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;blockquote&gt;&#xA;  Railway.app may have its own limitations on the amount of resources (CPU, memory, disk) that you can use for your VPS, depending on your subscription plan. &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Note:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read this Before Deploy : &lt;a href=&#34;https://railway.app/legal/fair-use&#34;&gt;Term Of Service Railway&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;This repository is intended for educational and experimental purposes only. Using Kali Linux or its tools for unauthorized or illegal activities is prohibited and may result in legal consequences.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Use this application at your own risk. We are not affiliated with railway.app and cannot be held responsible for any account suspensions or terminations due to suspicious activity.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dr007bot/GdriveX.Stable</title>
    <updated>2023-03-21T01:34:38Z</updated>
    <id>tag:github.com,2023-03-21:/dr007bot/GdriveX.Stable</id>
    <link href="https://github.com/dr007bot/GdriveX.Stable" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Koyeb,Render,Railway deploy&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Koeyb Deploy&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;docker image &lt;strong&gt;npt13/gdrivex&lt;/strong&gt; ရွေးပါ&lt;/li&gt; &#xA; &lt;li&gt;BOT_TOKEN, DATABASE_URL များ Env မှာ ထည့်ပါ&lt;/li&gt; &#xA; &lt;li&gt;Service port 80 ထားပြီး deploy ပါ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Render Deploy&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://telegra.ph/DeployGcloneonRender-01-12&#34;&gt;see here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;BOT_TOKEN, DATABASE_URL များသာ Env မှာ ထည့်ရန်။&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;**DATABASE ကို &lt;a href=&#34;https://www.mongodb.com&#34;&gt;https://www.mongodb.com&lt;/a&gt; တွင်လုပ်ပါ။&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/drivetalk&#34;&gt;For more info Click Here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;✅ Video Tutorial ကြည့်လိုလျှင်&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://t.me/drivetalkchannel/172&#34;&gt;Render Deploy Video&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://t.me/drivetalkchannel/173&#34;&gt;Mongo Database ထုတ်ယူပုံ Video&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Bot commands to be set in &lt;a href=&#34;https://t.me/BotFather&#34;&gt;@BotFather&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;start - useless command&#xA;help - How to use me&#xA;auth - Authorizing GDrive Account&#xA;setfolder - Set Custom Upload Folder&#xA;copy - Copy GDrive Files&#xA;revoke - Revoke GDrive Account&#xA;del - Delete GDrive Files&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>drum-grammer/docker-pro-wanted</title>
    <updated>2023-03-21T01:34:38Z</updated>
    <id>tag:github.com,2023-03-21:/drum-grammer/docker-pro-wanted</id>
    <link href="https://github.com/drum-grammer/docker-pro-wanted" rel="alternate"></link>
    <summary type="html">&lt;p&gt;원티드와 함께하는 Docker 뽀개기&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docker : 나만의 도커 이미지 만들기 부터, 클라우드 배포까지!&lt;/h1&gt; &#xA;&lt;p&gt;4월 원티드 프리 온보딩 챌린지 - docker 뽀개기&lt;/p&gt; &#xA;&lt;h2&gt;I. 사전 미션하는 법&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;해당 repository를 clone 하세요:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:drum-grammer/docker-pro-wanted.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;별도의 브랜치를 생성하세요:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git checkout -b my-branch-xx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;아래 사전 미션 내용을 보고 답안을 마크다운 형식으로 작성하시고, &lt;code&gt;./mission/{nickName}&lt;/code&gt; 디렉토리 저장해주세요.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;해당 브랜치를 푸쉬해주세요.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git push -u origin my-branch-xx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Pull Request를 생성하여, 사전 미션을 제출해주세요.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;II. 사전 미션&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;컨테이너 기술이란 무엇입니까? (100자 이내로 요약)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;도커란 무엇입니까? (100자 이내로 요약)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;도커 파일, 도커 이미지, 도커 컨테이너의 개념은 무엇이고, 서로 어떤 관계입니까?&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[실전 미션] 도커 설치하기 (참조: &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;도커 공식 설치 페이지&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;아래 &lt;code&gt;도커 설치부터 실행 튜토리얼&lt;/code&gt;을 참조하여 도커를 설치하고, 도커 컨테이너를 실행한 화면을 캡쳐해서 Pull Request에 올리세요.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;III. 도커 설치부터 실행 튜토리얼&lt;/h2&gt; &#xA;&lt;h3&gt;도커 설치&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;도커 공식 웹사이트에서 &#34;&lt;a href=&#34;https://www.docker.com/get-started&#34;&gt;Get Started&lt;/a&gt;&#34;를 클릭합니다.&lt;/li&gt; &#xA; &lt;li&gt;OS에 맞는 설치 파일을 다운로드 받습니다.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MacOS의 경우 &#34;Download for Mac&#34;을 클릭합니다.&lt;/li&gt; &#xA; &lt;li&gt;Window 일 경우 &#34;Download for Windows&#34;를 클릭합니다.&lt;/li&gt; &#xA; &lt;li&gt;다운로드한 설치 파일을 실행합니다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;도커 컨테이너 실행 시키기&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;나의 사전 미션 폴더&lt;/code&gt;를 만들고 해당 폴더로 이동합니다.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd path/to/docker-pro-wanted/mission&#xA;mkdir my-name&#xA;cd my-name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&#34;Hello, World!&#34;를 출력하는 도커 파일을 만듭니다.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;vim Dockefile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;i&lt;/code&gt;를 눌러 편집모드로 전환 후 아래 내용을 작성합니다:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM alpine:latest&#xA;CMD [&#34;echo&#34;, &#34;Hello, World&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ESC&lt;/code&gt;를 눌러 명령모드로 전환 후, &lt;code&gt;:wq&lt;/code&gt; 입력, &lt;code&gt;enter&lt;/code&gt;키를 눌러 &lt;code&gt;Dockerfile&lt;/code&gt;을 생성합니다. 3. 도커 파일로 도커 이미지를 빌드합니다.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker build -t hello-world .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(위 명령어의 의미는 &#34;현재 디렉토리에서 &lt;code&gt;Dockerfile&lt;/code&gt;을 읽어 도커 이미지를 만들고, 해당 이미지에 &lt;code&gt;hello-world&lt;/code&gt;라는 &lt;code&gt;tag&lt;/code&gt; 를 붙혀라&#34; 입니다.) 4. 빌드한 도커 이미지를 실행합니다.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run hello-world&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;이 명령어는 hello-world라는 이름의 도커 이미지를 실행시켜 &#34;Hello, World!&#34;를 출력합니다.&lt;/p&gt;</summary>
  </entry>
</feed>