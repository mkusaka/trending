<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-22T01:33:49Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>geerlingguy/pi-nvr</title>
    <updated>2024-04-22T01:33:49Z</updated>
    <id>tag:github.com,2024-04-22:/geerlingguy/pi-nvr</id>
    <link href="https://github.com/geerlingguy/pi-nvr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Raspberry Pi NVR for home CCTV recording.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Raspberry Pi NVR Configuration&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/geerlingguy/pi-nvr/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/geerlingguy/pi-nvr/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository contains Raspberry Pi NVR (Network Video Recorder) configurations, for capturing and managing CCTV/IP camera streams.&lt;/p&gt; &#xA;&lt;p&gt;Currently supported Raspberry Pi models:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Raspberry Pi 5&lt;/li&gt; &#xA; &lt;li&gt;Raspberry Pi 4&lt;/li&gt; &#xA; &lt;li&gt;Raspberry Pi Compute Module 4 (CM4)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Current Status&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;m experimenting with many different DVR applications. From time to time, I create videos about NVR solutions, and I&#39;ll update this list with all the related videos:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=7wkVGcdI2vk&#34;&gt;I spy, with my little Pi...&lt;/a&gt; (on Frigate + Axzez Interceptor + CM4)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &#39;NVR Solutions&#39; section below for my thoughts on different applications, and read through the GitHub issues to see current progress in testing.&lt;/p&gt; &#xA;&lt;h2&gt;Cameras&lt;/h2&gt; &#xA;&lt;p&gt;Currently, I use a mix of two different types of cameras in my setups:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/48N3VXT&#34;&gt;ANNKE C800 4K PoE Security Camera&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/3S8o2Kv&#34;&gt;HIKVISION DS-2CD2122FWD-IS HD Outdoor PoE Security Camera&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The C800 does H.265-only (at 4K), while the DS-2CD2122FW does H.264-only (at 1080p), so between the two, I have tested a variety of recording scenarios.&lt;/p&gt; &#xA;&lt;p&gt;Both of these cameras also offer a substream at 640x360, which is more suitable for motion detection and object recognition, since you don&#39;t need full resolution for that purpose.&lt;/p&gt; &#xA;&lt;p&gt;Setup of PoE or other IP security cameras is outside of the scope of this README. The main goal is to get cameras covering as much or as little of your property as you would like.&lt;/p&gt; &#xA;&lt;h2&gt;Raspberry Pi Setup&lt;/h2&gt; &#xA;&lt;p&gt;For an NVR, you should use storage other than built-in eMMC (CM4 only) or microSD (Pi 5/4 or Lite CM4). For my own purposes, I&#39;m booting a Pi off of an NVMe drive. See my articles on how to do this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jeffgeerling.com/blog/2023/nvme-ssd-boot-raspberry-pi-5&#34;&gt;NVMe Boot on Raspberry Pi 5&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jeffgeerling.com/blog/2021/raspberry-pi-can-boot-nvme-ssds-now&#34;&gt;NVMe Boot on Compute Module 4&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You also need a lot of storage. Multiple TB of storage is best if you want any form of long-term archive.&lt;/p&gt; &#xA;&lt;p&gt;And finally, some applications like Frigate are much more powerful with the addition of a &lt;a href=&#34;https://amzn.to/3HlXlMp&#34;&gt;Coral TPU&lt;/a&gt; (note: these are hard to get at list price currently).&lt;/p&gt; &#xA;&lt;p&gt;To prep the Pi, make sure you&#39;re running the latest version of Raspberry Pi OS, can reach the Pi over SSH, and can log into it with something like &lt;code&gt;ssh pi@dvr.local&lt;/code&gt; (that&#39;s the default address I&#39;m using to test).&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Make sure you have Ansible installed (I install with Pip: &lt;code&gt;pip3 install ansible&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Copy the &lt;code&gt;example.inventory.ini&lt;/code&gt; file to &lt;code&gt;inventory.ini&lt;/code&gt; and change the IP address under the &lt;code&gt;[dvr]&lt;/code&gt; section to the IP or hostname of your Pi, and the username after &lt;code&gt;ansible_user&lt;/code&gt; to your Pi username.&lt;/p&gt; &#xA;&lt;p&gt;Copy the &lt;code&gt;example.config.yml&lt;/code&gt; to &lt;code&gt;config.yml&lt;/code&gt; and modify the settings to your liking.&lt;/p&gt; &#xA;&lt;p&gt;Run the Ansible playbook to prepare the Pi for NVR applications:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ansible-playbook main.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Ideally you will have set up an &lt;a href=&#34;https://www.raspberrypi-spy.co.uk/2019/02/setting-up-ssh-keys-on-the-raspberry-pi/&#34;&gt;SSH key pair&lt;/a&gt; to access the Pi without entering a password. If you need to enter a password to SSH into the Pi, add &lt;code&gt;-k&lt;/code&gt; after the &lt;code&gt;ansible-*&lt;/code&gt; commands and Ansible will prompt you for the password when it runs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Then run specific NVR playbook, e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ansible-playbook frigate/main.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Be sure to have storage settings configured (e.g. any network or local mounts) prior to starting any of these applications.&lt;/p&gt; &#xA;&lt;h3&gt;Frigate setup&lt;/h3&gt; &#xA;&lt;p&gt;The Frigate &lt;code&gt;docker-compose&lt;/code&gt; configures the Frigate storage volume to be synced to &lt;code&gt;/mnt/frigate&lt;/code&gt;, so you should either mount a network share in that path, or make sure &lt;code&gt;/mnt&lt;/code&gt; exists locally.&lt;/p&gt; &#xA;&lt;p&gt;For example, set up a RAID volume or a single disk (NVMe, SSD, or HDD), and made sure it was mounted at the path &lt;code&gt;/mnt/frigate&lt;/code&gt; before running the playbook.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;There are a number of great guides for Frigate out there, but I am indebted especially to &lt;a href=&#34;https://www.simplepush.io/blog/frigate-nvr-push-notification-guide#run-mosquitto-mqtt-in-docker&#34;&gt;this Frigate guide from Simplepush&lt;/a&gt; for a broad understanding of all Frigate&#39;s moving parts.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Shinobi setup&lt;/h3&gt; &#xA;&lt;p&gt;After the playbook completes, visit the URL of your NVR, at the &lt;code&gt;/super&lt;/code&gt; path, e.g. &lt;code&gt;http://dvr.local:8080/super&lt;/code&gt;. The default login credentials are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Email: &lt;code&gt;admin@shinobi.video&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Password: &lt;code&gt;admin&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Raspberry Pi NVR Solutions&lt;/h2&gt; &#xA;&lt;p&gt;Here are my notes on different options for DVR/NVR/CCTV solutions that could run on the Pi:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shinobi (&lt;a href=&#34;https://shinobi.video&#34;&gt;https://shinobi.video&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Guide: &lt;a href=&#34;https://www.heystephenwood.com/2018/08/shinobi-on-raspberry-pi-3-b.html&#34;&gt;https://www.heystephenwood.com/2018/08/shinobi-on-raspberry-pi-3-b.html&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Seems popular, well supported&lt;/li&gt; &#xA;   &lt;li&gt;Docker image only available for arm32v7 right now (see: &lt;a href=&#34;https://github.com/geerlingguy/pi-nvr/issues/1&#34;&gt;https://github.com/geerlingguy/pi-nvr/issues/1&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Frigate (&lt;a href=&#34;https://docs.frigate.video&#34;&gt;https://docs.frigate.video&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use with Google Coral TPU... &lt;a href=&#34;https://docs.frigate.video/hardware&#34;&gt;https://docs.frigate.video/hardware&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Runs in Docker, though storage configuration can be annoying&lt;/li&gt; &#xA;   &lt;li&gt;Seems to integrate &lt;em&gt;really&lt;/em&gt; well with Home Assistant&lt;/li&gt; &#xA;   &lt;li&gt;Requires an MQTT server elsewhere?&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;ZoneMinder (&lt;a href=&#34;https://zoneminder.com&#34;&gt;https://zoneminder.com&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Pi guide: &lt;a href=&#34;https://wiki.zoneminder.com/Raspberry_Pi_4_-_Raspbian&#34;&gt;https://wiki.zoneminder.com/Raspberry_Pi_4_-_Raspbian&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Old and trusted... but also harder to configure&lt;/li&gt; &#xA;   &lt;li&gt;No official Docker images for arm64v8, but &lt;a href=&#34;https://registry.hub.docker.com/r/nardo86/zoneminder&#34;&gt;this one&lt;/a&gt; seems okay.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;MotionEyeOS (&lt;a href=&#34;https://github.com/motioneye-project/motioneyeos&#34;&gt;https://github.com/motioneye-project/motioneyeos&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Latest release from October 2020... which is kinda old. Dev work to get on Python 3...&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Orchid Core from IPConfigure (&lt;a href=&#34;https://www.ipconfigure.com/download&#34;&gt;https://www.ipconfigure.com/download&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Unlimited cameras, but they do like you to use licensed version maybe. Not open source?&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;PiNVR (&lt;a href=&#34;https://www.pinvr.net&#34;&gt;https://www.pinvr.net&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Cool logo, but beta not open, Forums look spammed out&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;On-NAS Surveillance Center (ASUSTOR) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Even though it&#39;s proprietary, I wanted to see if it was plug-and-play&lt;/li&gt; &#xA;   &lt;li&gt;Safari plugin doesn&#39;t seem to work with latest Safari&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;This project was created in 2022 by &lt;a href=&#34;https://www.jeffgeerling.com&#34;&gt;Jeff Geerling&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>eooce/ws-argo</title>
    <updated>2024-04-22T01:33:49Z</updated>
    <id>tag:github.com,2024-04-22:/eooce/ws-argo</id>
    <link href="https://github.com/eooce/ws-argo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;本项目采用ws连接argo隧道部署节点，集成哪吒探针(可选)，输出sub节点文件和sub订阅，域名/sub或域名:端口/sub查看节点信息，也是订阅链接，argo端口默认8001&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;说明 （部署前请仔细阅读完）&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;本项目是针对node环境的容器平台和游戏玩具而生，采用nodews组件连接argo隧道部署节点，集成哪吒探针服务(可选)。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;node玩具平台只需上传index.js和package.json即可，需要docker部署的才上传Dockerfile。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如需是链接github部署，请先删除README.md说明文件，安全起见，已混淆主代码部分，无日志输出。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;不填写ARGO_DOMAIN和ARGO_AUTH两个变量即启用临时隧道，反之则使用固定隧道。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;若遇到已获取到临时隧道但节点不通，说明域名被墙，重启即可&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;哪吒三个变量不全则不运行，无需设置NEZHA_TLS,当哪吒端口为{443,8443,2096,2087,2083,2053}其中之一时，自动开启tls。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;右边的Releases中有适配FreeBSD系统的版本，请看清楚对应系统的版本自行下载，像serv00，CT8等&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;容器平台设置的环境变量&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;变量名&lt;/th&gt; &#xA;     &lt;th&gt;是否必须&lt;/th&gt; &#xA;     &lt;th&gt;默认值&lt;/th&gt; &#xA;     &lt;th&gt;备注&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;URL&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;项目域名&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;UUID&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;8804add9-5c68-8bab-870c-08cd5320df33&lt;/td&gt; &#xA;     &lt;td&gt;UUID&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;TIME&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;120&lt;/td&gt; &#xA;     &lt;td&gt;自动访问间隔时间（默认120s）&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_SERVER&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;哪吒服务端域名，&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_PORT&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;5555&lt;/td&gt; &#xA;     &lt;td&gt;当哪吒端口为{443,8443,2096,2087,2083,2053}其中之一时，自动开启tls&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_KEY&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;哪吒客户端专用KEY&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;ARGO_DOMAIN&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;argo固定隧道域名&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;ARGO_AUTH&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;argo固定隧道json或token&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;CFIP&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;skk.moe&lt;/td&gt; &#xA;     &lt;td&gt;节点优选域名或ip&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NAME&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;Vls&lt;/td&gt; &#xA;     &lt;td&gt;节点名称前缀，例如：Glitch，Replit&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;PORT&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;3000&lt;/td&gt; &#xA;     &lt;td&gt;监听端口，也是sub订阅端口&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;ARGO_PORT&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;8001&lt;/td&gt; &#xA;     &lt;td&gt;ws端口也是argo隧道端口，使用固定隧道token请改回8080，或在cf后台更改端口与这里对应&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;节点信息&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本项目采用ws连接argo隧道，生成sub节点文件和sub订阅，域名/sub查看节点信息&lt;/li&gt; &#xA; &lt;li&gt;节点订阅：项目分配的域名/sub 例如：&lt;a href=&#34;https://www.google.com/sub&#34;&gt;https://www.google.com/sub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;非标端口订阅（游戏类）：项目分配的域名:端口/sub 例如：&lt;a href=&#34;http://www.google.com:1234/sub&#34;&gt;http://www.google.com:1234/sub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;其他&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;右边的package是本项目的镜像，支持镜像部署的推荐使用镜像，本项目已添加自动访问保活功能，需在index.js第14行中添加项目分配的域名。可配合外部保活，项目地址：&lt;a href=&#34;https://github.com/eooce/Auto-keep-online&#34;&gt;https://github.com/eooce/Auto-keep-online&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;免责声明&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本程序仅供学习了解, 非盈利目的，请于下载后 24 小时内删除, 不得用作任何商业用途, 文字、数据及图片均有所属版权, 如转载须注明来源。&lt;/li&gt; &#xA; &lt;li&gt;使用本程序必循遵守部署免责声明，使用本程序必循遵守部署服务器所在地、所在国家和用户所在国家的法律法规, 程序作者不对使用者任何不当行为负责。&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>jrmash/docker-build-fixtures</title>
    <updated>2024-04-22T01:33:49Z</updated>
    <id>tag:github.com,2024-04-22:/jrmash/docker-build-fixtures</id>
    <link href="https://github.com/jrmash/docker-build-fixtures" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;docker-build-fixtures&lt;/h1&gt;</summary>
  </entry>
</feed>