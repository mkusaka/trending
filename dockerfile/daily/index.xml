<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-19T01:31:55Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mikumifa/QChatGPT-Docker-Installer</title>
    <updated>2022-12-19T01:31:55Z</updated>
    <id>tag:github.com,2022-12-19:/mikumifa/QChatGPT-Docker-Installer</id>
    <link href="https://github.com/mikumifa/QChatGPT-Docker-Installer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;QChatGPT的docker部署&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;README&lt;/h1&gt; &#xA;&lt;h3&gt;项目地址&lt;a href=&#34;https://github.com/RockChinQ/QChatGPT&#34;&gt;RockChinQ/QChatGPT&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;本项目旨在为原项目提供一个简单的 Docker 部署方式，方便大家使用。&lt;/p&gt; &#xA;&lt;p&gt;下述命令均在项目根目录下执行。&lt;/p&gt; &#xA;&lt;p&gt;原项目地址：&lt;a href=&#34;https://github.com/RockChinQ/QChatGPT&#34;&gt;RockChinQ/QChatGPT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;1. 安装 Docker和 Docker Compose&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;获取 Docker 桌面版 (已包含 Compose)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dockerdocs.cn/get-docker/index.html&#34;&gt;中文&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/Hilaph/article/details/124295252&#34;&gt;Linux参考此文章&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2. 下载所需要文件&lt;/h2&gt; &#xA;&lt;h3&gt;i. 克隆仓库&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/mikumifa/QChatGPT-Docker-Installer&#xA;cd QChatGPT-Docker-Installer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;ii. 进行部署&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;linux&lt;/code&gt;系统可以直接使用loadFile.sh (已安装 git 和 wget)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;chmod +x loadFile.sh &amp;amp;&amp;amp; ./loadFile.sh &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;windows&lt;/code&gt;可以下载&lt;a href=&#34;https://github.com/iTXTech/mirai-console-loader/releases/download/v2.1.2/mcl-2.1.2.zip&#34;&gt;ITXTech&lt;/a&gt;和&lt;a href=&#34;https://github.com/RockChinQ/QChatGPT&#34;&gt;RockChinQ/QChatGPT&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;最终效果如下，&lt;code&gt;bot&lt;/code&gt;目录内是当前的&lt;a href=&#34;https://github.com/RockChinQ/QChatGPT&#34;&gt;RockChinQ/QChatGPT&lt;/a&gt;项目里面的内容,&lt;code&gt;mirai&lt;/code&gt;目录内是&lt;a href=&#34;https://github.com/iTXTech/mirai-console-loader/releases/download/v2.1.2/mcl-2.1.2.zip&#34;&gt;ITXTech&lt;/a&gt;下载后解压到&lt;code&gt;mirai&lt;/code&gt;里面&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.&#xA;├── bot&#xA;│   ├── config-template.py&#xA;│   ├── LICENSE&#xA;│   ├── main.py&#xA;│   ├── pkg&#xA;│   ├── README.md&#xA;│   ├── requirements.txt&#xA;│   ├── res&#xA;│   ├── sensitive.json&#xA;│   └── tests&#xA;├── docker-compose.yaml&#xA;├── loadFile.sh&#xA;├── mirai&#xA;│   ├── LICENSE&#xA;│   ├── mcl&#xA;│   ├── mcl.cmd&#xA;│   ├── mcl.jar&#xA;│   └── README.md&#xA;├── _mirai.Dockerfile&#xA;└── _setup.Dockerfile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;3. 配置 启动mirai&lt;/h2&gt; &#xA;&lt;h3&gt;i. 初始化mirai&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker compose run --rm mirai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;上面这一步，windows操作系统的可能会报错&lt;code&gt;error during connect: This error may indicate that the docker daemon is not running&lt;/code&gt; 解决方式是CMD管理员模式&lt;code&gt;DISM /Online /Enable-Feature /All /FeatureName:Microsoft-Hyper-V&lt;/code&gt; 等待安装，并按照提示操作登录。(第一次失败的话就，&lt;code&gt;Ctrl + C&lt;/code&gt;退出，再重来一次)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;ii. 在mirai上登录QQ&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;login &amp;lt;机器人QQ号&amp;gt; &amp;lt;机器人QQ密码&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;具体见&lt;a href=&#34;https://yiri-mirai.wybxc.cc/tutorials/01/configuration#4-%E7%99%BB%E5%BD%95-qq&#34;&gt;此教程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;iii. 配置自动登录&lt;/h3&gt; &#xA;&lt;p&gt;当机器人账号登录成功以后，执行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;autologin add &amp;lt;机器人QQ号&amp;gt; &amp;lt;机器人密码&amp;gt;&#xA;autologin setConfig &amp;lt;机器人QQ号&amp;gt; protocol ANDROID_PAD&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;出现&lt;code&gt;mirai登录时提示版本过低：当前QQ版本过低，请升级至最新版本后再登录。点击进入下载页面&lt;/code&gt;报错时候删除&lt;code&gt;mirai/bots&lt;/code&gt;文件夹里面的数据，见&lt;a href=&#34;https://github.com/RockChinQ/QChatGPT/issues/38&#34;&gt;此issue&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;完成后, &lt;code&gt;Ctrl + C&lt;/code&gt; 退出。&lt;/p&gt; &#xA;&lt;h3&gt;iv. 编写配置文件&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;在&lt;code&gt;bot&lt;/code&gt;目录下创建&lt;code&gt;config.py&lt;/code&gt;，将&lt;code&gt;config-template.py&lt;/code&gt;的内容复制进去，编辑&lt;code&gt;config.py&lt;/code&gt;修改&lt;strong&gt;必需项&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在&lt;code&gt; mirai/config/net.mamoe.mirai-api-http&lt;/code&gt; 文件夹中找到&lt;code&gt;setting.yml&lt;/code&gt;，这是&lt;code&gt;mirai-api-http&lt;/code&gt;的配置文件&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;将这个文件的内容修改为：&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;adapters:&#xA;  - ws&#xA;debug: true&#xA;enableVerify: true&#xA;verifyKey: yirimirai&#xA;singleMode: false&#xA;cacheSize: 4096&#xA;adapterSettings:&#xA;  ws:&#xA;    host: localhost&#xA;    port: 8080&#xA;    reservedSyncId: -1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;verifyKey&lt;/code&gt;要求与&lt;code&gt;bot&lt;/code&gt;的&lt;code&gt;config.py&lt;/code&gt;中的&lt;code&gt;verifyKey&lt;/code&gt;相同&lt;/p&gt; &#xA;&lt;h2&gt;4. 启动&lt;/h2&gt; &#xA;&lt;h3&gt;i. 启动mirai容器&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker compose run -itd mirai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;此命令将在后台启动mirai容器&lt;/p&gt; &#xA;&lt;h3&gt;ii. 启动主程序容器&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker compose run -itd setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;此命令将在后台启动主程序的容器并完成配置&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;❓如何将容器切到前台查看日志？&lt;/summary&gt; &#xA; &lt;p&gt;查看容器进程&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;docker ps&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;在输出中查看容器的ID，例如：&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;root@docker-test:~# docker ps&#xA;CONTAINER ID   IMAGE                             COMMAND                  CREATED              STATUS              PORTS     NAMES&#xA;f633b8c1051c   qchatgpt-docker-installer-setup   &#34;/bin/sh -c &#39;python …&#34;   About a minute ago   Up About a minute             qchatgpt-docker-installer_setup_run_998f5335ab18&#xA;227e44d7d5a2   qchatgpt-docker-installer-mirai   &#34;/bin/sh -c &#39;java -j…&#34;   2 minutes ago        Up 2 minutes                  qchatgpt-docker-installer_mirai_run_c6c8f60da3aa&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;若要切换到主程序控制台，请查看&lt;code&gt;IMAGE&lt;/code&gt;名为&lt;code&gt;qchatgpt-docker-installer-setup&lt;/code&gt;的容器的&lt;code&gt;CONTAINER ID&lt;/code&gt;，在这里是&lt;code&gt;f633b8c1051c&lt;/code&gt;，于是使用以下命令将其切到前台：&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;docker attach f633b&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;这是便可以看到主程序的控制台，查看mirai控制台同理&lt;/p&gt; &#xA; &lt;p&gt;如需将其切到后台运行，请使用组合键&lt;code&gt;Ctrl+P+Q&lt;/code&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;root@docker-test:~# docker attach f633b&#xA;[2022-12-18 07:00:27.247] manager.py (173) - [INFO] : [person_1010553892]发送消息:2&#xA;[2022-12-18 07:00:27.248] util.py (67) - [INFO] : message=&#39;Request to OpenAI API&#39; method=post path=https://api.openai.com/v1/completions&#xA;[2022-12-18 07:00:29.629] util.py (67) - [INFO] : message=&#39;OpenAI API response&#39; path=https://api.openai.com/v1/completions processing_ms=872 request_id=6d9f172ce9c1b3f315aa59dc09333836 response_code=200&#xA;[2022-12-18 07:00:29.631] manager.py (195) - [INFO] : 回复[person_1010553892]消息:我不明白你的意思。输入!help获取帮助&#xA;read escape sequence&#xA;root@docker-test:~#&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>metatube-community/metatube-server-heroku</title>
    <updated>2022-12-19T01:31:55Z</updated>
    <id>tag:github.com,2022-12-19:/metatube-community/metatube-server-heroku</id>
    <link href="https://github.com/metatube-community/metatube-server-heroku" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Deploy MetaTube Server to Heroku.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavTube Server Heroku&lt;/h1&gt; &#xA;&lt;h2&gt;‼️置顶&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Heroku Update&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Starting November 28th, 2022, free Heroku Dynos, free Heroku Postgres, and free Heroku Data for Redis® will no longer be available. If you have apps using any of these resources, you must upgrade to paid plans by this date to ensure your apps continue to run and to retain your data. For students, we will announce a new program by the end of September.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Heroku不再免费，请使用Docker部署后端，或使用&lt;a href=&#34;https://github.com/javtube/javtube-server-koyeb&#34;&gt;Koyeb快速部署&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;项目介绍&lt;/h2&gt; &#xA;&lt;!-- [![Heroku](https://img.shields.io/badge/heroku-%23430098.svg?style=flat-square&amp;logo=heroku&amp;logoColor=white)](https://heroku.com)&#xA;[![License](https://img.shields.io/github/license/javtube/javtube-server-heroku?style=flat-square&amp;logo=github&amp;color=blue)](https://github.com/javtube/javtube-server-heroku/blob/main/LICENSE) --&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;部分新建的应用有可能需要科学访问，如果需要可以套一层Cloudflare CDN或Workers。&lt;/li&gt; &#xA;  &lt;li&gt;Heroku对免费账号存在如内存、冷启动等限制，但是对于个人部署使用JavTube后端项目理论上是足够的，具体可以参考&lt;a href=&#34;https://www.heroku.com/pricing&#34;&gt;Pricing&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;使用本仓库可以快速将&lt;code&gt;JavTube&lt;/code&gt;后端&lt;del&gt;免费&lt;/del&gt;部署至&lt;a href=&#34;https://heroku.com&#34;&gt;&lt;code&gt;Heroku&lt;/code&gt;&lt;/a&gt;云平台。&lt;/p&gt; &#xA;&lt;h2&gt;一键部署&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;具体说明&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;以下步骤需要登录Heroku账号，没有账号的可以先进行&lt;a href=&#34;https://signup.heroku.com/&#34;&gt;注册&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/#%E9%83%A8%E7%BD%B2%E5%BA%94%E7%94%A8&#34;&gt;部署应用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/#%E6%9B%B4%E6%96%B0%E5%BA%94%E7%94%A8&#34;&gt;更新应用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/#%E5%88%A0%E9%99%A4%E5%BA%94%E7%94%A8&#34;&gt;删除应用&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;部署应用&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;点击本页面中的&lt;a href=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/#%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2&#34;&gt;一键部署&lt;/a&gt;按钮创建app。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/deploy.png&#34; alt=&#34;deploy&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在&lt;code&gt;App name&lt;/code&gt;中输入自定义的应用名。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;建议&lt;/strong&gt;将地区选择为&lt;code&gt;United States&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;在&lt;code&gt;Config Vars&lt;/code&gt;中输入新的&lt;code&gt;TOKEN&lt;/code&gt;并&lt;strong&gt;复制&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;点击&lt;code&gt;Deploy app&lt;/code&gt;完成部署。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/create.png&#34; alt=&#34;create&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;右键&lt;strong&gt;复制&lt;/strong&gt;View中的&lt;code&gt;JavTube Server URL&lt;/code&gt;链接地址。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/view.png&#34; alt=&#34;view&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可以点击View，出现类似如下的页面即为部署成功。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/page.png&#34; alt=&#34;page&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在JavTube插件中分别粘贴进之前复制的&lt;code&gt;JavTube Server URL&lt;/code&gt;与&lt;code&gt;TOKEN&lt;/code&gt;以完成插件配置。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/plugin.png&#34; alt=&#34;plugin&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;更新应用&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;本节仅当有更新需求时参考。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;点击本仓库右上方的&lt;code&gt;Fork&lt;/code&gt;按钮。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/fork.png&#34; alt=&#34;fork&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;点击&lt;code&gt;Create fork&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/create-fork.png&#34; alt=&#34;create-fork&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如果&lt;strong&gt;之前已经Fork过&lt;/strong&gt;本仓库，则选择&lt;code&gt;Fetch upstream -&amp;gt; Fetch and merge&lt;/code&gt;，&lt;strong&gt;否则跳过此步骤&lt;/strong&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;建议每次在更新后端之前，都尝试&lt;code&gt;Fetch and merge&lt;/code&gt;以与源仓库保持同步。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/fetch-merge.png&#34; alt=&#34;fetch-merge&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;然后进入&lt;a href=&#34;https://dashboard.heroku.com/apps&#34;&gt;Heroku Dashboard&lt;/a&gt;，选择之前部署的应用。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/dashboard.png&#34; alt=&#34;dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在Dashboard中，选择&lt;code&gt;Deploy&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/overview-deploy.png&#34; alt=&#34;overview-deploy&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在&lt;code&gt;Deploy&lt;/code&gt;中，选择&lt;code&gt;GitHub&lt;/code&gt;并点击&lt;code&gt;Connect to GitHub&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/deploy-github.png&#34; alt=&#34;deploy-github&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在弹出的页面中，点击&lt;code&gt;Authorize Heroku&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/auth-heroku.png&#34; alt=&#34;auth-heroku&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;按如下步骤连接之前Fork的仓库。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/connect-repo.png&#34; alt=&#34;connect-repo&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;点击&lt;code&gt;Deploy Branch&lt;/code&gt;，即可完成更新。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;后续更新后端也只需要点击&lt;code&gt;Deploy Branch&lt;/code&gt;即可。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/deploy-branch.png&#34; alt=&#34;deploy-branch&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如下图所示，即表示已完成更新。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/deployed.png&#34; alt=&#34;deployed&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;PS：当然也可以直接通过&lt;strong&gt;删除&lt;/strong&gt;并&lt;strong&gt;重新创建&lt;/strong&gt;应用来进行更新，但是注意&lt;code&gt;app name&lt;/code&gt;和&lt;code&gt;token&lt;/code&gt;需要和之前保持一致。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;删除应用&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠本节会删除之前部署的应用导致后续刮削请求失败。除非有明确需求（例如重新部署应用），否则请略过。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;进入&lt;a href=&#34;https://dashboard.heroku.com/apps&#34;&gt;Heroku Dashboard&lt;/a&gt;，点击需要删除的应用。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/dashboard.png&#34; alt=&#34;dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;点击设置&lt;code&gt;Settings&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/overview-settings.png&#34; alt=&#34;overview-settings&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;拉到设置最底部，点击&lt;code&gt;Delete app&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/settings.png&#34; alt=&#34;settings&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;按提示，重新输入一遍应用名以删除应用。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/metatube-community/metatube-server-heroku/main/images/delete.png&#34; alt=&#34;delete&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>