<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-06T01:35:13Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>HyeonJaeGil/DockerSLAM</title>
    <updated>2023-07-06T01:35:13Z</updated>
    <id>tag:github.com,2023-07-06:/HyeonJaeGil/DockerSLAM</id>
    <link href="https://github.com/HyeonJaeGil/DockerSLAM" rel="alternate"></link>
    <summary type="html">&lt;p&gt;User-friendly Docker images for SLAM&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DockerSLAM&lt;/h1&gt; &#xA;&lt;h2&gt;User-friendly way to run SLAM on Docker&lt;/h2&gt; &#xA;&lt;p&gt;This is a personal Dockerfile hub for SLAM algorithms.&lt;br&gt; Since SLAM consists of various modules, it is quite hard for a beginner to compile and run them from scratch.&lt;br&gt; &lt;strong&gt;This DockerSLAM repository is suitable for SLAM beginners. All you need is to install Docker beforehand!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported SLAM algorithm&lt;/h2&gt; &#xA;&lt;h4&gt;For convenience, all SLAM algorithms are wrapped with ROS1 support.&lt;/h4&gt; &#xA;&lt;h3&gt;LiDAR SLAM&lt;/h3&gt; &#xA;&lt;center&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;LiDAR SLAM&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Link to original repository&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Link to Docker Hub&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;FAST-LIO2&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/hku-mars/FAST_LIO.git&#34;&gt;FAST-LIO2 repository&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Docker hub&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;LEGO-LOAM&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/RobustFieldAutonomyLab/LeGO-LOAM.git&#34;&gt;LEGO-LOAM repository&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Docker hub&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;LIO-SAM&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/TixiaoShan/LIO-SAM.git&#34;&gt;LIO-SAM repository&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Docker hub&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/center&gt; &#xA;&lt;h3&gt;Visual SLAM&lt;/h3&gt; &#xA;&lt;center&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Visual SLAM&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Link to original repository&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Link to Docker Hub&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;DSO&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/HyeonJaeGil/dso.git&#34;&gt;DSO repository&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Docker hub&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;ORB-SLAM2&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/HyeonJaeGil/ORB_SLAM2.git&#34;&gt;ORB-SLAM2 repository&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Docker hub&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;VINS-Mono&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/HKUST-Aerial-Robotics/VINS-Mono.git&#34;&gt;VINS-Mono repository&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Docker hub&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;RTABMap&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/introlab/rtabmap_ros.git&#34;&gt;RTABMap-ROS repository&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Docker hub&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;PL-VINS&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/HyeonJaeGil/PL-VINS.git&#34;&gt;PL-VINS repository&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Docker hub&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;PL-VIO&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/HeYijia/PL-VIO.git&#34;&gt;PL-VIO repository&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Docker hub&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;ProSLAM&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://gitlab.com/HyeonJaeGil/srrg_proslam.git&#34;&gt;ProSLAM repository&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Docker hub&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/center&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;h3&gt;0. Install Prerequisite&lt;/h3&gt; &#xA;&lt;h4&gt;Docker&lt;/h4&gt; &#xA;&lt;p&gt;Please follow the &lt;a href=&#34;https://docs.docker.com/engine/install/ubuntu/&#34;&gt;official guidance link&lt;/a&gt; to install Docker.&lt;br&gt; Make sure to perform &lt;a href=&#34;https://docs.docker.com/engine/install/linux-postinstall/&#34;&gt;post-installation step&lt;/a&gt;, especially adding docker to your group.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;newgroup docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;NVIDIA-Docker&lt;/h4&gt; &#xA;&lt;p&gt;In order to use &lt;code&gt;--gpus all&lt;/code&gt; option when running a container, please install &lt;a href=&#34;https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html#step-1-install-nvidia-container-toolkit&#34;&gt;NVIDIA Container Toolkit&lt;/a&gt; properly.&lt;/p&gt; &#xA;&lt;h3&gt;1. Prepare Docker Image&lt;/h3&gt; &#xA;&lt;p&gt;First, check available algorithm (vins-mono, lio-sam, ... ) for Docker image. &lt;br&gt; You can either build it by yourself...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./build.sh &amp;lt;target_algorithm&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or just pull from dockerhub&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull hyeonjaegil/&amp;lt;target_algorithm&amp;gt;:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check if image is ready with &lt;code&gt;$ docker images&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;h3&gt;2. Run Container&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./run &amp;lt;target_algorithm&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Customizing &lt;a href=&#34;https://raw.githubusercontent.com/HyeonJaeGil/DockerSLAM/master/run.sh&#34;&gt;run.sh&lt;/a&gt; File&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You can modify &lt;a href=&#34;https://raw.githubusercontent.com/HyeonJaeGil/DockerSLAM/master/run.sh&#34;&gt;run.sh&lt;/a&gt; to use extra options, such as &lt;code&gt;--volume&lt;/code&gt; option to mount your directories.&lt;br&gt; For example, mount local &lt;code&gt;~/Download/Dataset&lt;/code&gt; folder into container &lt;code&gt;/dataset&lt;/code&gt; folder.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Inside run.sh file...&#xA;&#xA;docker run --gpus all --rm -it --ipc=host --net=host --privileged \&#xA;    --env=&#34;DISPLAY&#34; \&#xA;    --volume=&#34;/etc/localtime:/etc/localtime:ro&#34; \&#xA;    --volume=&#34;$HOME/Downloads/Dataset:/dataset&#34; \ # add this line.&#xA;    ${docker_image}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;If you don&#39;t want to delete container when exiting, please remove &lt;code&gt;--rm&lt;/code&gt; options.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Be aware that current &lt;code&gt;run.sh&lt;/code&gt; file gives container the highest authority.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It gives all available GPUs (&lt;code&gt;--gpus all&lt;/code&gt;),&lt;/li&gt; &#xA; &lt;li&gt;gives maximum shared memory (&lt;code&gt;--ipc host&lt;/code&gt;),&lt;/li&gt; &#xA; &lt;li&gt;offers the same network stack with host (&lt;code&gt;--net host&lt;/code&gt;),&lt;/li&gt; &#xA; &lt;li&gt;and gives access to all the devices on the host (&lt;code&gt;--privileged&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;AND container can connect from any host (&lt;code&gt;xhost +&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>