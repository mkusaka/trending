<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-26T01:39:42Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MithunTechnologiesDevOps/metrics-server</title>
    <updated>2022-06-26T01:39:42Z</updated>
    <id>tag:github.com,2022-06-26:/MithunTechnologiesDevOps/metrics-server</id>
    <link href="https://github.com/MithunTechnologiesDevOps/metrics-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kubernetes Metrics Server&lt;/h1&gt; &#xA;&lt;p&gt;Metrics-server aggregates resource consumption data like CPU and memory usage for Kubernetes nodes, pods and containers. These metrics are collected from the API exposed by the Kubelet on each node.&lt;/p&gt; &#xA;&lt;p&gt;The metrics server is commonly used by other Kubernetes add ons, such as the Horizontal Pod Autoscaler or the Kubernetes Dashboard.&lt;/p&gt; &#xA;&lt;p&gt;It is not deployed by default.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;In order to deploy metrics-server in your kubernetes master machine clone &lt;a href=&#34;https://github.com/MithunTechnologiesDevOps/metrics-server.git&#34;&gt;https://github.com/MithunTechnologiesDevOps/metrics-server.git&lt;/a&gt; and run the following command from the top-level directory(metrics-server) of this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ kubectl apply -f deploy/1.8+/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# Display node metrics&#xA;$ kubectl top nodes&#xA;&#xA;# Display pod metrics&#xA;$ kubectl top pods&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;User guide&lt;/h2&gt; &#xA;&lt;p&gt;You can find the user guide in &lt;a href=&#34;https://kubernetes.io/docs/tasks/debug-application-cluster/resource-metrics-pipeline/&#34;&gt;the official Kubernetes documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Design&lt;/h2&gt; &#xA;&lt;p&gt;The detailed design of the project can be found in the following docs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/community/raw/master/contributors/design-proposals/instrumentation/resource-metrics-api.md&#34;&gt;Metrics API&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/community/raw/master/contributors/design-proposals/instrumentation/metrics-server.md&#34;&gt;Metrics Server&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/metrics-server.git&#34;&gt;Metrics Server Git Hub&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the broader view of monitoring in Kubernetes take a look into &lt;a href=&#34;https://github.com/kubernetes/community/raw/master/contributors/design-proposals/instrumentation/monitoring_architecture.md&#34;&gt;Monitoring architecture&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/vscode-remote-try-java</title>
    <updated>2022-06-26T01:39:42Z</updated>
    <id>tag:github.com,2022-06-26:/microsoft/vscode-remote-try-java</id>
    <link href="https://github.com/microsoft/vscode-remote-try-java" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Java sample project for trying out the VS Code Remote - Containers extension&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Try Out Development Containers: Java&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode-remote-try-java&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Remote%20-%20Containers&amp;amp;message=Open&amp;amp;color=blue&amp;amp;logo=visualstudiocode&#34; alt=&#34;Open in Remote - Containers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A &lt;strong&gt;development container&lt;/strong&gt; is a running &lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; container with a well-defined tool/runtime stack and its prerequisites. You can try out development containers with &lt;strong&gt;&lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&#34;https://aka.ms/vscode-remote/containers&#34;&gt;Visual Studio Code Remote - Containers&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is a sample project that lets you try out either option in a few easy steps. We have a variety of other &lt;a href=&#34;https://github.com/search?q=org%3Amicrosoft+vscode-remote-try-&amp;amp;type=Repositories&#34;&gt;vscode-remote-try-*&lt;/a&gt; sample projects, too.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you already have a Codespace or dev container, you can jump to the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-remote-try-java/main/#things-to-try&#34;&gt;Things to try&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Setting up the development container&lt;/h2&gt; &#xA;&lt;h3&gt;GitHub Codespaces&lt;/h3&gt; &#xA;&lt;p&gt;Follow these steps to open this sample in a Codespace:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Click the Code drop-down menu and select the &lt;strong&gt;Open with Codespaces&lt;/strong&gt; option.&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;+ New codespace&lt;/strong&gt; at the bottom on the pane.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more info, check out the &lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/github/developing-online-with-codespaces/creating-a-codespace#creating-a-codespace&#34;&gt;GitHub documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;VS Code Remote - Containers&lt;/h3&gt; &#xA;&lt;p&gt;If you already have VS Code and Docker installed, you can click the badge above or &lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode-remote-try-java&#34;&gt;here&lt;/a&gt; to get started. Clicking these links will cause VS Code to automatically install the Remote - Containers extension if needed, clone the source code into a container volume, and spin up a dev container for use.&lt;/p&gt; &#xA;&lt;p&gt;Follow these steps to open this sample in a container using the VS Code Remote - Containers extension:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If this is your first time using a development container, please ensure your system meets the pre-reqs (i.e. have Docker installed) in the &lt;a href=&#34;https://aka.ms/vscode-remote/containers/getting-started&#34;&gt;getting started steps&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To use this repository, you can either open the repository in an isolated Docker volume:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Try a Sample...&lt;/strong&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;Choose the &#34;Java&#34; sample, wait for the container to start, and try things out! &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Under the hood, this will use the &lt;strong&gt;Remote-Containers: Clone Repository in Container Volume...&lt;/strong&gt; command to clone the source code in a Docker volume instead of the local filesystem. &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;Volumes&lt;/a&gt; are the preferred mechanism for persisting container data.&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Or open a locally cloned copy of the code:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Clone this repository to your local filesystem.&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Open Folder in Container...&lt;/strong&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;Select the cloned copy of this folder, wait for the container to start, and try things out!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Things to try&lt;/h2&gt; &#xA;&lt;p&gt;Once you have this sample opened, you&#39;ll be able to work with it like you would locally.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This container runs as a non-root user with sudo access by default. Comment out &lt;code&gt;&#34;remoteUser&#34;: &#34;vscode&#34;&lt;/code&gt; in &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; if you&#39;d prefer to run as root.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Some things to try:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Edit:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open &lt;code&gt;src/main/java/com/mycompany/app/App.java&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Try adding some code and check out the language features.&lt;/li&gt; &#xA;   &lt;li&gt;Notice that the Java extension pack is already installed in the container since the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; lists &lt;code&gt;&#34;vscjava.vscode-java-pack&#34;&lt;/code&gt; as an extension to install automatically when the container is created.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Terminal:&lt;/strong&gt; Press &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;`&lt;/kbd&gt; and type &lt;code&gt;uname&lt;/code&gt; and other Linux commands from the terminal window.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Build, Run, and Debug:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open &lt;code&gt;src/main/java/com/mycompany/app/App.java&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Add a breakpoint.&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F5&lt;/kbd&gt; to launch the app in the container.&lt;/li&gt; &#xA;   &lt;li&gt;Once the breakpoint is hit, try hovering over variables, examining locals, and more.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run a Test:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open &lt;code&gt;src/test/java/com/mycompany/app/AppTest.java&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Put a breakpoint in a test.&lt;/li&gt; &#xA;   &lt;li&gt;Click the &lt;code&gt;Debug Test&lt;/code&gt; in the Code Lens above the function and watch it hit the breakpoint.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.microsoft.com&#34;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright © Microsoft Corporation All rights reserved.&lt;br&gt; Licensed under the MIT License. See LICENSE in the project root for license information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>javtube/javtube-server-heroku</title>
    <updated>2022-06-26T01:39:42Z</updated>
    <id>tag:github.com,2022-06-26:/javtube/javtube-server-heroku</id>
    <link href="https://github.com/javtube/javtube-server-heroku" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Deploy JavTube Server to Heroku.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavTube Server Heroku&lt;/h1&gt; &#xA;&lt;!-- [![Heroku](https://img.shields.io/badge/heroku-%23430098.svg?style=flat-square&amp;logo=heroku&amp;logoColor=white)](https://heroku.com)&#xA;[![License](https://img.shields.io/github/license/javtube/javtube-server-heroku?style=flat-square&amp;logo=github&amp;color=blue)](https://github.com/javtube/javtube-server-heroku/blob/main/LICENSE) --&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;部分新建的应用有可能需要科学访问，如果需要可以套一层Cloudflare CDN或Workers。&lt;/li&gt; &#xA;  &lt;li&gt;Heroku对免费账号存在如内存、冷启动等限制，但是对于个人部署使用JavTube后端项目理论上是足够的，具体可以参考&lt;a href=&#34;https://www.heroku.com/pricing&#34;&gt;Pricing&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;使用本仓库可以快速将&lt;code&gt;JavTube&lt;/code&gt;后端&lt;strong&gt;免费&lt;/strong&gt;部署至&lt;a href=&#34;https://heroku.com&#34;&gt;&lt;code&gt;Heroku&lt;/code&gt;&lt;/a&gt;云平台。&lt;/p&gt; &#xA;&lt;h2&gt;一键部署&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;具体说明&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;以下步骤需要登录Heroku账号，没有账号的可以先进行&lt;a href=&#34;https://signup.heroku.com/&#34;&gt;注册&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/#%E9%83%A8%E7%BD%B2%E5%BA%94%E7%94%A8&#34;&gt;部署应用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/#%E6%9B%B4%E6%96%B0%E5%BA%94%E7%94%A8&#34;&gt;更新应用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/#%E5%88%A0%E9%99%A4%E5%BA%94%E7%94%A8&#34;&gt;删除应用&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;部署应用&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;点击本页面中的&lt;a href=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/#%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2&#34;&gt;一键部署&lt;/a&gt;按钮创建app。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/deploy.png&#34; alt=&#34;deploy&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在&lt;code&gt;App name&lt;/code&gt;中输入自定义的应用名。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;建议&lt;/strong&gt;将地区选择为&lt;code&gt;United States&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;在&lt;code&gt;Config Vars&lt;/code&gt;中输入新的&lt;code&gt;TOKEN&lt;/code&gt;并&lt;strong&gt;复制&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;点击&lt;code&gt;Deploy app&lt;/code&gt;完成部署。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/create.png&#34; alt=&#34;create&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;右键&lt;strong&gt;复制&lt;/strong&gt;View中的&lt;code&gt;JavTube Server URL&lt;/code&gt;链接地址。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/view.png&#34; alt=&#34;view&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可以点击View，出现类似如下的页面即为部署成功。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/page.png&#34; alt=&#34;page&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在JavTube插件中分别粘贴进之前复制的&lt;code&gt;JavTube Server URL&lt;/code&gt;与&lt;code&gt;TOKEN&lt;/code&gt;以完成插件配置。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/plugin.png&#34; alt=&#34;plugin&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;更新应用&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;本节仅当有更新需求时参考。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;点击本仓库右上方的&lt;code&gt;Fork&lt;/code&gt;按钮。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/fork.png&#34; alt=&#34;fork&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;点击&lt;code&gt;Create fork&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/create-fork.png&#34; alt=&#34;create-fork&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如果&lt;strong&gt;之前已经Fork过&lt;/strong&gt;本仓库，则选择&lt;code&gt;Fetch upstream -&amp;gt; Fetch and merge&lt;/code&gt;，&lt;strong&gt;否则跳过此步骤&lt;/strong&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;建议每次在更新后端之前，都尝试&lt;code&gt;Fetch and merge&lt;/code&gt;以与源仓库保持同步。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/fetch-merge.png&#34; alt=&#34;fetch-merge&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;然后进入&lt;a href=&#34;https://dashboard.heroku.com/apps&#34;&gt;Heroku Dashboard&lt;/a&gt;，选择之前部署的应用。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/dashboard.png&#34; alt=&#34;dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在Dashboard中，选择&lt;code&gt;Deploy&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/overview-deploy.png&#34; alt=&#34;overview-deploy&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在&lt;code&gt;Deploy&lt;/code&gt;中，选择&lt;code&gt;GitHub&lt;/code&gt;并点击&lt;code&gt;Connect to GitHub&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/deploy-github.png&#34; alt=&#34;deploy-github&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在弹出的页面中，点击&lt;code&gt;Authorize Heroku&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/auth-heroku.png&#34; alt=&#34;auth-heroku&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;按如下步骤连接之前Fork的仓库。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/connect-repo.png&#34; alt=&#34;connect-repo&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;点击&lt;code&gt;Deploy Branch&lt;/code&gt;，即可完成更新。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;后续更新后端也只需要点击&lt;code&gt;Deploy Branch&lt;/code&gt;即可。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/deploy-branch.png&#34; alt=&#34;deploy-branch&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如下图所示，即表示已完成更新。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/deployed.png&#34; alt=&#34;deployed&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;PS：当然也可以直接通过&lt;strong&gt;删除&lt;/strong&gt;并&lt;strong&gt;重新创建&lt;/strong&gt;应用来进行更新，但是注意&lt;code&gt;app name&lt;/code&gt;和&lt;code&gt;token&lt;/code&gt;需要和之前保持一致。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;删除应用&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠本节会删除之前部署的应用导致后续刮削请求失败。除非有明确需求（例如重新部署应用），否则请略过此节。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;进入&lt;a href=&#34;https://dashboard.heroku.com/apps&#34;&gt;Heroku Dashboard&lt;/a&gt;，点击需要删除的应用。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/dashboard.png&#34; alt=&#34;dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;点击设置&lt;code&gt;Settings&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/overview-settings.png&#34; alt=&#34;overview-settings&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;拉到设置最底部，点击&lt;code&gt;Delete app&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/settings.png&#34; alt=&#34;settings&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;按提示，重新输入一遍应用名以删除应用。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/javtube/javtube-server-heroku/main/images/delete.png&#34; alt=&#34;delete&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>