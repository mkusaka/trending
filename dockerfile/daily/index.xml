<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-19T01:27:43Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ublue-os/image-template</title>
    <updated>2024-04-19T01:27:43Z</updated>
    <id>tag:github.com,2024-04-19:/ublue-os/image-template</id>
    <link href="https://github.com/ublue-os/image-template" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build your own custom Universal Blue Image!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;image-template&lt;/h1&gt; &#xA;&lt;h1&gt;Purpose&lt;/h1&gt; &#xA;&lt;p&gt;This repository is meant to be a template for building your own custom Universal Blue image. This template is the recommended way to make customizations to any image published by the Universal Blue Project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://getaurora.dev/&#34;&gt;Aurora&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bazzite.gg/&#34;&gt;Bazzite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://projectbluefin.io/&#34;&gt;Bluefin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://projectucore.io/&#34;&gt;uCore&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ublue-os/main/&#34;&gt;main&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ublue-os/hwe/&#34;&gt;hwe&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This template includes a Containerfile and a Github workflow for building the container image. As soon as the workflow is enabled in your repository, it will build the container image and push it to the Github Container Registry.&lt;/p&gt; &#xA;&lt;h1&gt;Prerequisites&lt;/h1&gt; &#xA;&lt;p&gt;Working knowledge in the following topics:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Containers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=SnSH8Ht3MIc&#34;&gt;https://www.youtube.com/watch?v=SnSH8Ht3MIc&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.mankier.com/5/Containerfile&#34;&gt;https://www.mankier.com/5/Containerfile&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;rpm-ostree &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://coreos.github.io/rpm-ostree/container/&#34;&gt;https://coreos.github.io/rpm-ostree/container/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Fedora Silverblue (and other Fedora Atomic variants) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.fedoraproject.org/en-US/fedora-silverblue/&#34;&gt;https://docs.fedoraproject.org/en-US/fedora-silverblue/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Github Workflows &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/actions/using-workflows&#34;&gt;https://docs.github.com/en/actions/using-workflows&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;How to Use&lt;/h1&gt; &#xA;&lt;h2&gt;Template&lt;/h2&gt; &#xA;&lt;p&gt;Select &lt;code&gt;Use this Template&lt;/code&gt; and create a new repository from it. To enable the workflows, you may need to go the &lt;code&gt;Actions&lt;/code&gt; tab of the new repository and click to enable workflows.&lt;/p&gt; &#xA;&lt;h2&gt;Containerfile&lt;/h2&gt; &#xA;&lt;p&gt;This file defines the operations used to customize the selected image. It contains examples of possible modifications, including how to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;change the upstream from which the custom image is derived&lt;/li&gt; &#xA; &lt;li&gt;add additional RPM packages&lt;/li&gt; &#xA; &lt;li&gt;add binaries as a layer from other images&lt;/li&gt; &#xA; &lt;li&gt;modify system files (like /etc/systemd/system.conf)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Workflows&lt;/h2&gt; &#xA;&lt;h3&gt;build.yml&lt;/h3&gt; &#xA;&lt;p&gt;This workflow creates your custom OCI image and publishes it to the Github Container Registry (GHCR).&lt;/p&gt; &#xA;&lt;h4&gt;Container Signing&lt;/h4&gt; &#xA;&lt;p&gt;Container signing is important for end-user security and is enabled on all Universal Blue images. It is recommended you set this up, and by default the image builds &lt;em&gt;will fail&lt;/em&gt; if you don&#39;t.&lt;/p&gt; &#xA;&lt;p&gt;This provides users a method of verifying the image.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the &lt;a href=&#34;https://edu.chainguard.dev/open-source/sigstore/cosign/how-to-install-cosign/#installing-cosign-with-the-cosign-binary&#34;&gt;cosign CLI tool&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run inside your repo folder:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cosign generate-key-pair&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Do NOT put in a password when it asks you to, just press enter. The signing key will be used in GitHub Actions and will not work if it is encrypted.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Be careful to &lt;em&gt;never&lt;/em&gt; accidentally commit &lt;code&gt;cosign.key&lt;/code&gt; into your git repo.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Add the private key to GitHub&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;This can also be done manually. Go to your repository settings, under Secrets and Variables -&amp;gt; Actions &lt;img src=&#34;https://user-images.githubusercontent.com/1264109/216735595-0ecf1b66-b9ee-439e-87d7-c8cc43c2110a.png&#34; alt=&#34;image&#34;&gt; Add a new secret and name it &lt;code&gt;SIGNING_SECRET&lt;/code&gt;, then paste the contents of &lt;code&gt;cosign.key&lt;/code&gt; into the secret and save it. Make sure it&#39;s the .key file and not the .pub file. Once done, it should look like this: &lt;img src=&#34;https://user-images.githubusercontent.com/1264109/216735690-2d19271f-cee2-45ac-a039-23e6a4c16b34.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;(CLI instructions) If you have the &lt;code&gt;github-cli&lt;/code&gt; installed, run:&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gh secret set SIGNING_SECRET &amp;lt; cosign.key&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Commit the &lt;code&gt;cosign.pub&lt;/code&gt; file into your git repository&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>iam-veeramalla/kubernetes-troubleshooting-zero-to-hero</title>
    <updated>2024-04-19T01:27:43Z</updated>
    <id>tag:github.com,2024-04-19:/iam-veeramalla/kubernetes-troubleshooting-zero-to-hero</id>
    <link href="https://github.com/iam-veeramalla/kubernetes-troubleshooting-zero-to-hero" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Learn how to troubleshoot the most common Kubernetes Issues&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;kubernetes-troubleshooting-zero-to-hero&lt;/h1&gt; &#xA;&lt;p&gt;Learn how to troubleshoot the most common Kubernetes Issues&lt;/p&gt; &#xA;&lt;h2&gt;Day-01&lt;/h2&gt; &#xA;&lt;h3&gt;ImagePullBackOff&lt;/h3&gt; &#xA;&lt;p&gt;Video Link - &lt;a href=&#34;https://youtu.be/vGab4v3RWEw&#34;&gt;https://youtu.be/vGab4v3RWEw&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;When a kubelet starts creating containers for a Pod using a container runtime, it might be possible the container is in Waiting state because of ImagePullBackOff.&lt;/p&gt; &#xA;&lt;p&gt;The status ImagePullBackOff means that a container could not start because Kubernetes could not pull a container image for reasons such as&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Invalid image name or&lt;/li&gt; &#xA; &lt;li&gt;Pulling from a private registry without imagePullSecret.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The BackOff part indicates that Kubernetes will keep trying to pull the image, with an increasing back-off delay.&lt;/p&gt; &#xA;&lt;p&gt;Kubernetes raises the delay between each attempt until it reaches a compiled-in limit, which is 300 seconds (5 minutes).&lt;/p&gt; &#xA;&lt;h2&gt;Day-02&lt;/h2&gt; &#xA;&lt;h3&gt;CrashLoopBackOff&lt;/h3&gt; &#xA;&lt;p&gt;When you see &#34;CrashLoopBackOff,&#34; it means that kubelet is trying to run the container, but it keeps failing and crashing. After crashing, Kubernetes tries to restart the container automatically, but if the container keeps failing repeatedly, you end up in a loop of crashes and restarts, thus the term &#34;CrashLoopBackOff.&#34;&lt;/p&gt; &#xA;&lt;p&gt;This situation indicates that something is wrong with the application or the configuration that needs to be fixed.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>shyim/shopware</title>
    <updated>2024-04-19T01:27:43Z</updated>
    <id>tag:github.com,2024-04-19:/shyim/shopware</id>
    <link href="https://github.com/shyim/shopware" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Shopware 6 Docker Image&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;What is Shopware?&lt;/h1&gt; &#xA;&lt;p&gt;Shopware is a trendsetting ecommerce platform to power your online business. Our ecommerce solution offers the perfect combination of beauty &amp;amp; brains you need to build and customize a fully responsive online store.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://assets.shopware.com/media/logos/shopware_logo_blue.svg?sanitize=true&#34; alt=&#34;Shopware Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;How to use this image&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;br&gt; With Shopware 6.5 this Docker image is not recommanded anymore as extensions can require additional Composer dependencies which will modify the vendor folder what is not mounted. &lt;a href=&#34;https://github.com/shopware/docker&#34;&gt;Checkout the new approach&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To run Shopware 6 you will need a compatible MySQL or MariaDB container.&lt;/p&gt; &#xA;&lt;p&gt;Smallest example with docker-compose&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#34;3.8&#34;&#xA;services:&#xA;  mysql:&#xA;    image: mysql:8.0&#xA;    environment:&#xA;      MYSQL_ROOT_PASSWORD: root&#xA;      MYSQL_DATABASE: shopware&#xA;      MYSQL_USER: shopware&#xA;      MYSQL_PASSWORD: shopware&#xA;  shopware:&#xA;    image: shyim/shopware:6.4.20-php8.2&#xA;    environment:&#xA;      APP_SECRET: 440dec3766de53010c5ccf6231c182acfc90bd25cff82e771245f736fd276518&#xA;      INSTANCE_ID: 10612e3916e153dd3447850e944a03fabe89440970295447a30a75b151bd844e&#xA;      APP_URL: http://localhost&#xA;      BLUE_GREEN_DEPLOYMENT: 0&#xA;      DATABASE_HOST: mysql&#xA;      DATABASE_PORT: 3306&#xA;      DATABASE_URL: mysql://shopware:shopware@mysql:3306/shopware&#xA;    ports:&#xA;      - 80:80&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://labs.play-with-docker.com/?stack=https://raw.githubusercontent.com/shyim/shopware/main/docker-compose.yml&#34;&gt;&lt;img src=&#34;https://github.com/play-with-docker/stacks/raw/cff22438cb4195ace27f9b15784bbb497047afa7/assets/images/button.png&#34; alt=&#34;Try&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The installation will be accessible at &lt;code&gt;http://localhost&lt;/code&gt;. The default credentials for the administration are &lt;code&gt;admin&lt;/code&gt; and &lt;code&gt;shopware&lt;/code&gt; as password.&lt;/p&gt; &#xA;&lt;p&gt;Following environment can be set:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Default Value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;APP_ENV&lt;/td&gt; &#xA;   &lt;td&gt;prod&lt;/td&gt; &#xA;   &lt;td&gt;Environment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;APP_SECRET&lt;/td&gt; &#xA;   &lt;td&gt;(empty)&lt;/td&gt; &#xA;   &lt;td&gt;Can be generated with &lt;code&gt;openssl rand -hex 32&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;APP_URL&lt;/td&gt; &#xA;   &lt;td&gt;(empty)&lt;/td&gt; &#xA;   &lt;td&gt;Where Shopware will be accessible&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;INSTANCE_ID&lt;/td&gt; &#xA;   &lt;td&gt;(empty)&lt;/td&gt; &#xA;   &lt;td&gt;Unique Identifier for the Store: Can be generated with &lt;code&gt;openssl rand -hex 32&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DATABASE_HOST&lt;/td&gt; &#xA;   &lt;td&gt;(empty)&lt;/td&gt; &#xA;   &lt;td&gt;Host of MySQL (needed for for checking is MySQL alive)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DATABASE_PORT&lt;/td&gt; &#xA;   &lt;td&gt;(empty)&lt;/td&gt; &#xA;   &lt;td&gt;Host of MySQL (needed for for checking is MySQL alive)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BLUE_GREEN_DEPLOYMENT&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;This needs super priviledge to create trigger&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DATABASE_URL&lt;/td&gt; &#xA;   &lt;td&gt;(empty)&lt;/td&gt; &#xA;   &lt;td&gt;MySQL credentials as DSN&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DATABASE_SSL_CA&lt;/td&gt; &#xA;   &lt;td&gt;(empty)&lt;/td&gt; &#xA;   &lt;td&gt;Path to SSL CA file (needs to be readable for uid 1000)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DATABASE_SSL_CERT&lt;/td&gt; &#xA;   &lt;td&gt;(empty)&lt;/td&gt; &#xA;   &lt;td&gt;Path to SSL Cert file (needs to be readable for uid 1000)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DATABASE_SSL_KEY&lt;/td&gt; &#xA;   &lt;td&gt;(empty)&lt;/td&gt; &#xA;   &lt;td&gt;Path to SSL Key file (needs to be readable for uid 1000)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DATABASE_SSL_DONT_VERIFY_SERVER_CERT&lt;/td&gt; &#xA;   &lt;td&gt;(empty)&lt;/td&gt; &#xA;   &lt;td&gt;Disables verification of the server certificate (1 disables it)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MAILER_URL&lt;/td&gt; &#xA;   &lt;td&gt;null://localhost&lt;/td&gt; &#xA;   &lt;td&gt;Mailer DSN (Admin Configuration overwrites this)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SHOPWARE_ES_HOSTS&lt;/td&gt; &#xA;   &lt;td&gt;(empty)&lt;/td&gt; &#xA;   &lt;td&gt;Elasticsearch Hosts&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SHOPWARE_ES_ENABLED&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;Elasticsearch Support Enabled?&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SHOPWARE_ES_INDEXING_ENABLED&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;Elasticsearch Indexing Enabled?&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SHOPWARE_ES_INDEX_PREFIX&lt;/td&gt; &#xA;   &lt;td&gt;(empty)&lt;/td&gt; &#xA;   &lt;td&gt;Elasticsearch Index Prefix&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;COMPOSER_HOME&lt;/td&gt; &#xA;   &lt;td&gt;/tmp/composer&lt;/td&gt; &#xA;   &lt;td&gt;Caching for the Plugin Manager&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SHOPWARE_HTTP_CACHE_ENABLED&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Is HTTP Cache enabled?&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SHOPWARE_HTTP_DEFAULT_TTL&lt;/td&gt; &#xA;   &lt;td&gt;7200&lt;/td&gt; &#xA;   &lt;td&gt;Default TTL for Http Cache&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SHOPWARE_AUTOMATICALLY_EMPTY_CACHE_ENABLED&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Empty cache automatically. See &lt;a href=&#34;https://docs.shopware.com/en/shopware-6-en/configuration/caches-indexes#empty-cache-automatically&#34;&gt;Caches &amp;amp; Indexes &amp;gt; Empty cache automatically&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SHOPWARE_EMPTY_CACHE_INTERVAL&lt;/td&gt; &#xA;   &lt;td&gt;86400 (24 hours)&lt;/td&gt; &#xA;   &lt;td&gt;Interval with which to clear the cache in seconds.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DISABLE_ADMIN_WORKER&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Disables the admin worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;INSTALL_LOCALE&lt;/td&gt; &#xA;   &lt;td&gt;en-GB&lt;/td&gt; &#xA;   &lt;td&gt;Default locale for the Shop&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;INSTALL_CURRENCY&lt;/td&gt; &#xA;   &lt;td&gt;EUR&lt;/td&gt; &#xA;   &lt;td&gt;Default currency for the Shop&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;INSTALL_ADMIN_USERNAME&lt;/td&gt; &#xA;   &lt;td&gt;admin&lt;/td&gt; &#xA;   &lt;td&gt;Default admin username&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;INSTALL_ADMIN_PASSWORD&lt;/td&gt; &#xA;   &lt;td&gt;shopware&lt;/td&gt; &#xA;   &lt;td&gt;Default admin password&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CACHE_ADAPTER&lt;/td&gt; &#xA;   &lt;td&gt;default&lt;/td&gt; &#xA;   &lt;td&gt;Set this to redis to enable redis caching&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;REDIS_CACHE_HOST&lt;/td&gt; &#xA;   &lt;td&gt;redis&lt;/td&gt; &#xA;   &lt;td&gt;Host for redis caching&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;REDIS_CACHE_PORT&lt;/td&gt; &#xA;   &lt;td&gt;6379&lt;/td&gt; &#xA;   &lt;td&gt;Redis cache port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;REDIS_CACHE_DATABASE&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;Redis database index&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SESSION_ADAPTER&lt;/td&gt; &#xA;   &lt;td&gt;default&lt;/td&gt; &#xA;   &lt;td&gt;Set this to redis to enable redis session adapter&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;REDIS_SESSION_HOST&lt;/td&gt; &#xA;   &lt;td&gt;redis&lt;/td&gt; &#xA;   &lt;td&gt;Host for redis session&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;REDIS_SESSION_PORT&lt;/td&gt; &#xA;   &lt;td&gt;6379&lt;/td&gt; &#xA;   &lt;td&gt;Redis session port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;REDIS_SESSION_DATABASE&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;Redis session index&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ACTIVE_PLUGINS&lt;/td&gt; &#xA;   &lt;td&gt;(empty)&lt;/td&gt; &#xA;   &lt;td&gt;A list of plugins which should be installed and updated&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TZ&lt;/td&gt; &#xA;   &lt;td&gt;Europe/Berlin&lt;/td&gt; &#xA;   &lt;td&gt;PHP default timezone&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PHP_MAX_UPLOAD_SIZE&lt;/td&gt; &#xA;   &lt;td&gt;128m&lt;/td&gt; &#xA;   &lt;td&gt;See php documentation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PHP_MAX_EXECUTION_TIME&lt;/td&gt; &#xA;   &lt;td&gt;300&lt;/td&gt; &#xA;   &lt;td&gt;See php documentation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PHP_MEMORY_LIMIT&lt;/td&gt; &#xA;   &lt;td&gt;512m&lt;/td&gt; &#xA;   &lt;td&gt;See php documentation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FPM_PM&lt;/td&gt; &#xA;   &lt;td&gt;dynamic&lt;/td&gt; &#xA;   &lt;td&gt;See php fpm documentation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FPM_PM_MAX_CHILDREN&lt;/td&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;See php fpm documentation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FPM_PM_START_SERVERS&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;See php fpm documentation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FPM_PM_MIN_SPARE_SERVERS&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;See php fpm documentation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FPM_PM_MAX_SPARE_SERVERS&lt;/td&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;See php fpm documentation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;When Shopware with SSL behind a reverse proxy such as NGINX which is responsible for doing TLS termination, be sure configure &lt;a href=&#34;https://symfony.com/doc/current/deployment/proxies.html&#34;&gt;Trusted Headers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Updates&lt;/h1&gt; &#xA;&lt;p&gt;When you update the image version, automatically all required migrations will run. Downgrade works in a similar way. Please check before here the Blue-Green compatibility of Shopware.&lt;/p&gt; &#xA;&lt;h1&gt;Running multiple containers&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;code&gt;docker-compose-advanced.yml&lt;/code&gt; for a full docker-compose example.&lt;/p&gt; &#xA;&lt;h2&gt;Mode: default&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The container will check is Shopware installed and install or update it (and execute hooks).&lt;/li&gt; &#xA; &lt;li&gt;Will start Web server&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;command: [&#39;default&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Mode: web&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Will start Web server&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;command: [&#39;web&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Mode: maintenance&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The container will check is Shopware installed and install or update it (and execute hooks).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;command: [&#39;maintenance&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Mode: cli&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Allows to run cli commands like message consumer and other tasks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;command: [&#39;cli&#39;, &#39;symfony:command&#39;, &#39;arg1&#39;, &#39;arg2&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Volumes&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Path&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/state&lt;/td&gt; &#xA;   &lt;td&gt;Contains state about current installed version.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/var/www/html/custom/plugins&lt;/td&gt; &#xA;   &lt;td&gt;Installed plugins&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/var/www/html/files&lt;/td&gt; &#xA;   &lt;td&gt;Documents and other private files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/var/www/html/var/log&lt;/td&gt; &#xA;   &lt;td&gt;Logs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/var/www/html/public/theme&lt;/td&gt; &#xA;   &lt;td&gt;Compiled theme files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/var/www/html/public/media&lt;/td&gt; &#xA;   &lt;td&gt;Uploaded files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/var/www/html/public/bundles&lt;/td&gt; &#xA;   &lt;td&gt;Bundle Assets&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/var/www/html/public/sitemap&lt;/td&gt; &#xA;   &lt;td&gt;Sitemap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/var/www/html/public/thumbnail&lt;/td&gt; &#xA;   &lt;td&gt;Generated Thumbnails&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/var/www/html/config/jwt&lt;/td&gt; &#xA;   &lt;td&gt;JWT Certificate for API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Reducing usage of Volumes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;/state &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The state can be ignored by having a &lt;code&gt;INSTALLED_SHOPWARE_VERSION&lt;/code&gt; environment variable with the current used Shopware version. This will be used to detect if database migrations needs to be executed.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;/config/jwt &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In Kubernetes you can mount a secretmap to this location with your certificates&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;/public/* &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use external storage adapter, see Shopware documentation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Extending the image&lt;/h1&gt; &#xA;&lt;h2&gt;Additional hooks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To run script on installation, add a new file to &lt;code&gt;/etc/shopware/scripts/on-install/xx.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To run script on update, add a new file to &lt;code&gt;/etc/shopware/scripts/on-update/xx.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To run script on startup, add a new file to &lt;code&gt;/etc/shopware/scripts/on-startup/xx.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install plugins from packages.shopware.com&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-docker&#34;&gt;FROM shyim/shopware:6.4&#xA;&#xA;# Add repository&#xA;RUN jq &#39;.repositories += [{&#34;type&#34;: &#34;composer&#34;,&#34;url&#34;: &#34;https://packages.shopware.com/&#34;,&#34;options&#34;: {&#34;http&#34;: {&#34;header&#34;: [&#34;Token: MyToken&#34;]}}}]&#39; /var/www/html/composer.json &amp;gt; /var/www/html/composer2.json &amp;amp;&amp;amp; \&#xA;  cp composer2.json composer.json &amp;amp;&amp;amp; \&#xA;  chown 1000:1000 composer.json&#xA;&#xA;RUN sudo -E -u www-data composer require store.shopware.com/swagcmsextensions&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>