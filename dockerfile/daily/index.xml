<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-02T01:33:31Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>CaiJimmy/hugo-theme-stack-starter</title>
    <updated>2022-10-02T01:33:31Z</updated>
    <id>tag:github.com,2022-10-02:/CaiJimmy/hugo-theme-stack-starter</id>
    <link href="https://github.com/CaiJimmy/hugo-theme-stack-starter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A quickstart template to create a Hugo blog using hugo-theme-stack&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Hugo Theme Stack Starter Template&lt;/h2&gt; &#xA;&lt;p&gt;This is a quick start template for &lt;a href=&#34;https://github.com/CaiJimmy/hugo-theme-stack&#34;&gt;Hugo theme Stack&lt;/a&gt;. It uses &lt;a href=&#34;https://gohugo.io/hugo-modules/&#34;&gt;Hugo modules&lt;/a&gt; feature to load the theme.&lt;/p&gt; &#xA;&lt;p&gt;It comes with a basic theme structure and configuration. GitHub action has been set up to deploy the theme to a public GitHub page automatically. Also, there&#39;s a cron job to update the theme automatically everyday.&lt;/p&gt; &#xA;&lt;p&gt;To get started:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Click &lt;em&gt;Use this template&lt;/em&gt;, and create your repository on GitHub. &lt;img src=&#34;https://user-images.githubusercontent.com/5889006/156916624-20b2a784-f3a9-4718-aa5f-ce2a436b241f.png&#34; alt=&#34;Step 1&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Once the repository is created, create a GitHub codespace asociated with it. &lt;img src=&#34;https://user-images.githubusercontent.com/5889006/156916672-43b7b6e9-4ffb-4704-b4ba-d5ca40ffcae7.png&#34; alt=&#34;Create codespace&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;And voila! You&#39;re ready to go. The codespace has been configured with the latest version of Hugo extended, just run &lt;code&gt;hugo server&lt;/code&gt; in the terminal and see your new site in action.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check &lt;code&gt;config&lt;/code&gt; folder for the configuration files. You can edit them to suit your needs. Make sure to update the &lt;code&gt;baseurl&lt;/code&gt; property in &lt;code&gt;config/_default/config.toml&lt;/code&gt; to your site&#39;s URL.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Once you&#39;re done editing the site, just commit it and push it. GitHub action will deploy the site automatically to GitHub page asociated with the repository. &lt;img src=&#34;https://user-images.githubusercontent.com/5889006/156916881-90b8bb9b-1925-4e60-9d7a-8026cda729bf.png&#34; alt=&#34;GitHub action&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;In case you don&#39;t want to use GitHub codespace, you can also run this template in your local machine. &lt;strong&gt;You need to install Git, Go and Hugo extended locally.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Update theme manually&lt;/h3&gt; &#xA;&lt;p&gt;Run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo mod get -u github.com/CaiJimmy/hugo-theme-stack/v3&#xA;hugo mod tidy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This starter template has been configured with &lt;code&gt;v3&lt;/code&gt; version of theme. Due to the limitation of Go module, once the &lt;code&gt;v4&lt;/code&gt; or up version of theme is released, you need to update the theme manually. (Modifying &lt;code&gt;config/module.toml&lt;/code&gt; file)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Deploy to another static page hostings&lt;/h3&gt; &#xA;&lt;p&gt;If you want to build this site using another static page hosting, you need to make sure they have Go installed in the machine.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Vercel&lt;/summary&gt; &#xA; &lt;p&gt;You need to overwrite build command to install manually Go:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;amazon-linux-extras install golang1.11 &amp;amp;&amp;amp; hugo -D --gc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5889006/156917172-01e4d418-3469-4ffb-97e4-a905d28b8424.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;Make sure also to specify Hugo version in the environment variable &lt;code&gt;HUGO_VERSION&lt;/code&gt; (Use the latest version of Hugo extended):&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5889006/156917212-afb7c70d-ab85-480f-8288-b15781a462c0.png&#34; alt=&#34;Environment variable&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>ryansheehan/terraria</title>
    <updated>2022-10-02T01:33:31Z</updated>
    <id>tag:github.com,2022-10-02:/ryansheehan/terraria</id>
    <link href="https://github.com/ryansheehan/terraria" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dockerfile for terraria&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Terraria&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;[UPDATE]&lt;/strong&gt; I know a lot of people are excited for Terraria v1.4 Journey&#39;s End! This source code is built around the pre-release of &lt;a href=&#34;https://github.com/Pryaxis/TShock/releases&#34;&gt;TShock&lt;/a&gt;. Will continue to update as new releases come out.&lt;/p&gt; &#xA;&lt;p&gt;This project is a Dockerfile to containerize &lt;a href=&#34;https://github.com/Pryaxis/TShock/releases&#34;&gt;TShock&lt;/a&gt; and &lt;a href=&#34;https://terraria.org/&#34;&gt;Terraria&lt;/a&gt; TerrariaServer.exe to run on linux. &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker&lt;/a&gt; will remove the need for someone to worry about how to setup a server in linux with all the right dependencies to run. The installation and usage instructions are written with complete beginners in mind.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start guide&lt;/h2&gt; &#xA;&lt;p&gt;First you need a linux machine with &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker&lt;/a&gt; installed. Everything from here on out assumes the docker service is running &lt;em&gt;(you may need to start the service after install)&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Create directory to save your world to&lt;/h3&gt; &#xA;&lt;p&gt;Next create a directory for your world file, configuration, and logs&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p $HOME/terraria/world&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Creating a fresh world&lt;/h3&gt; &#xA;&lt;p&gt;For the first run you will need to generate a new world with a size where: &lt;em&gt;1=Small, 2=Medium, 3=Large&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo docker run -it -p 7777:7777 --rm -v $HOME/terraria/world:/root/.local/share/Terraria/Worlds ryshe/terraria:latest -world /root/.local/share/Terraria/Worlds/&amp;lt;world_name_here&amp;gt;.wld -autocreate &amp;lt;world_size_number_here&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you close the the terminal, the server will stop running. You will need to restart with a preexisting world. It may be worth while to close after creation anyway to update the initial &lt;code&gt;config.json&lt;/code&gt; settings.&lt;/p&gt; &#xA;&lt;p&gt;To create a world with a few more initial options, you can do so in an interactive mode.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo docker run -it -p 7777:7777 --rm -v $HOME/terraria/world:/root/.local/share/Terraria/Worlds ryshe/terraria:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;To start with a preexisting world&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo docker run -d --rm -p 7777:7777 -v $HOME/terraria/world:/root/.local/share/Terraria/Worlds --name=&#34;terraria&#34; -e WORLD_FILENAME=&amp;lt;.wld world_filename_here&amp;gt; ryshe/terraria:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This command is designed to run in the background, and it is safe to close the terminal window.&lt;/p&gt; &#xA;&lt;p&gt;Any &lt;code&gt;config.json&lt;/code&gt; in the directory will automatically be loaded. The &lt;code&gt;&amp;lt;world_file_name&amp;gt;.wld&lt;/code&gt; should be the name of your wld file in your $HOME/terraria/world directory.&lt;/p&gt; &#xA;&lt;h2&gt;Updating your container&lt;/h2&gt; &#xA;&lt;p&gt;Updating is easy!&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Grab the latest terraria container&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull ryshe/terraria:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;First we need to find our running container to stop, so we can later restart with the latest&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker container ls | grep ryshe/terraria&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The first few numbers and letters, on a line, are the container hash. Remember the first 3 or so letters or numbers&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;f25261ac55a4        ryshe/terraria:latest   &#34;/bin/sh bootstrap.sâ€¦&#34;   3 minutes ago       Up 3 minutes        0.0.0.0:7777-&amp;gt;7777/tcp, 7878/tcp   reverent_solomon&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;f25&lt;/code&gt; would be the first few letters/numbers of the container hash&lt;/p&gt; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you see multiple lines, find the one that still has an &lt;code&gt;up&lt;/code&gt; status.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Stop and remove the container&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker container rm -f xxx # xxx is the letters/numbers from the last step&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start your container again with your world &lt;em&gt;(see the &lt;a href=&#34;https://raw.githubusercontent.com/ryansheehan/terraria/master/#Quick-start-guide&#34;&gt;Quick start&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;[Virtual] Machine Setup&lt;/h2&gt; &#xA;&lt;p&gt;Provision a linux machine that can support docker and containerization. For more information visit &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;docker&lt;/a&gt;. For a small or medium world with no more than 8 users a linux machine with 1-1.5GB of ram should suffice. &lt;strong&gt;If you are running a vm in the cloud, make sure to expose tcp port 7777 and udp port 7777.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Before starting the build process make sure the &lt;a href=&#34;https://github.com/Pryaxis/TShock/releases&#34;&gt;latest tshock version&lt;/a&gt; is specified in the &lt;a href=&#34;https://github.com/ryansheehan/terraria/raw/master/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; under&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;ADD https://github.com/Pryaxis/TShock/releases/download/v4.4.0-pre1/TShock_4.4.0_226_Pre1_Terraria1.4.0.2.zip /&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building from source&lt;/h2&gt; &#xA;&lt;p&gt;Assuming &lt;a href=&#34;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&#34;&gt;git&lt;/a&gt; and &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;docker&lt;/a&gt; are installed..&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repository&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/ryansheehan/terraria.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open a terminal window into the directory downloaded by the git&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the container&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t &amp;lt;name_here&amp;gt; .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Running a container image&lt;/h2&gt; &#xA;&lt;p&gt;Whether you build your own container, or use &lt;a href=&#34;https://hub.docker.com/r/ryshe/terraria&#34;&gt;my container&lt;/a&gt; published to docker hub, we are ready to run our terraria server!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; For a full set of docker run options go &lt;a href=&#34;https://docs.docker.com/engine/reference/run/&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;First run&lt;/h3&gt; &#xA;&lt;p&gt;The first run of the server will give you the opportunity to create a world, and it will generate the server&#39;s config file. You may wish to add the config file for many reasons, but one of which is to add a password to your server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm -p 7777:7777 -v $HOME/terraria/world:/root/.local/share/Terraria/Worlds ryshe/terraria:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Let&#39;s break down this command:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command Part&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;docker run&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;tells linux to run a docker image&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-it&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;run interactively and output the text to terminal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--rm&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;remove docker container when the container stops or fails&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-p 7777:7777&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;exposes terraria port &amp;lt;host machine side&amp;gt;:&amp;lt;container side&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-v $HOME/terraria/world:/root/.local/share/Terraria/Worlds&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;maps a folder on the host machine into the container for saving the .wld file. This does not have to be &lt;code&gt;$HOME/terraria/world&lt;/code&gt;. Anything left of the &lt;code&gt;:&lt;/code&gt; is host machine directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ryshe/terraria&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;the name of the image. This could be your image if you build from source&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:latest&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;the tag, which defaults to &lt;code&gt;latest&lt;/code&gt; if not specified. &lt;code&gt;latest&lt;/code&gt; is the most recently published container&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The config file can be found in the directory specified by the &lt;code&gt;-v&lt;/code&gt; volume.&lt;/li&gt; &#xA; &lt;li&gt;If the terminal window is shut down, that will exit the process. Make sure to do so after the world is created!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running with an existing generated world&lt;/h3&gt; &#xA;&lt;p&gt;After a world has been generated, you may want to load directly into it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --rm -p 7777:7777 -v $HOME/terraria/world:/root/.local/share/Terraria/Worlds ryshe/terraria:latest -world /root/.local/share/Terraria/Worlds/&amp;lt;world_filename_here&amp;gt;.wld&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Let&#39;s break down the command:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command Part&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-d&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;run this in the background. It is okay to close the terminal window, the container will continue to run&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-world /root/.local/share/Terraria/Worlds/&amp;lt;world_filename_here&amp;gt;.wld&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;specifies the world file name you wish to immediately load into&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;for the other parts check out the &lt;a href=&#34;https://raw.githubusercontent.com/ryansheehan/terraria/master/#First-run&#34;&gt;First run&lt;/a&gt; section&lt;/li&gt; &#xA; &lt;li&gt;check out additional server startup flags &lt;a href=&#34;https://tshock.readme.io/docs/command-line-parameters&#34;&gt;here&lt;/a&gt;. They go on after the &lt;code&gt;ryshe/terraria:latest&lt;/code&gt; portion of the line&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Plugin support&lt;/h2&gt; &#xA;&lt;p&gt;A volume exists to support plugins. Create a folder, not inside your &lt;code&gt;/world&lt;/code&gt; folder, for your plugins&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir ServerPlugins&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Mount the plugins directory with an additional -v switch on your &lt;code&gt;docker run ...&lt;/code&gt; command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;-v &amp;lt;path_to_your_ServerPlugins_folder&amp;gt;:/plugins&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Environment variables&lt;/h2&gt; &#xA;&lt;p&gt;Ability to overwrite file locations and file names&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Vanilla&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ENV LOGPATH=/terraria-server/logs&#xA;ENV WORLDPATH=/root/.local/share/Terraria/Worlds&#xA;ENV WORLD_FILENAME=&#34;&#34;&#xA;ENV CONFIGPATH=/config&#xA;ENV CONFIG_FILENAME=&#34;serverconfig.txt&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Logs&lt;/h2&gt; &#xA;&lt;p&gt;A separate directory can be volumed in for storing logs outside of the image&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;-v &amp;lt;path_to_store_logs&amp;gt;:/tshock/logs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;em&gt;Notes&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;sudo&lt;/code&gt; may be required to run docker commands.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Please post to the &lt;a href=&#34;https://github.com/Pryaxis/TShock/discussions&#34;&gt;TShock&lt;/a&gt; team with questions on how to run a server.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Any &lt;a href=&#34;https://tshock.readme.io/docs/command-line-parameters&#34;&gt;additional command-line instructions&lt;/a&gt; can be added to the end of either method for launching a server. Docker maps the $HOME/terraria/world linux-host folder to the /tshock/world container-folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Expecting your server to run for a while? Add &lt;code&gt;--log-opt max-size=200k&lt;/code&gt; to limit your log file size. Otherwise one day you will wake up to see all your hdd space chewed up for a terraria docker setup!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;em&gt;Contributing&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Email me rsheehan at gmail dot com if any of these instructions do not seem to work.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork it!&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch: &lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes: &lt;code&gt;git commit -am &#39;Add some feature&#39;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch: &lt;code&gt;git push origin my-new-feature&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Submit a pull request :D&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;em&gt;TODO&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fork TShock and create a Dockerfile to build the project&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Java-Techie-jt/docker-jenkins-integration-sample</title>
    <updated>2022-10-02T01:33:31Z</updated>
    <id>tag:github.com,2022-10-02:/Java-Techie-jt/docker-jenkins-integration-sample</id>
    <link href="https://github.com/Java-Techie-jt/docker-jenkins-integration-sample" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;docker-jenkins-integration-sample&lt;/h1&gt; &#xA;&lt;h6&gt;Docker &lt;a href=&#34;https://www.youtube.com/watch?v=Tg2krHXHzBc&amp;amp;list=PLVz2XdJiJQxzMiFDnwxUDxmuZQU3igcBb&#34;&gt;Playlist&lt;/a&gt;.&lt;/h6&gt; &#xA;&lt;h6&gt;Jenkins &lt;a href=&#34;https://www.youtube.com/watch?v=Nw3UohhcPO0&amp;amp;list=PLVz2XdJiJQxwS0BZUHX34ocLTJtRGSQzN&#34;&gt;Playlist&lt;/a&gt;.&lt;/h6&gt;</summary>
  </entry>
</feed>