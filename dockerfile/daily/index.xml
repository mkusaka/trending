<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-01T01:39:00Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>p0dalirius/Awesome-RCE-techniques</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/p0dalirius/Awesome-RCE-techniques</id>
    <link href="https://github.com/p0dalirius/Awesome-RCE-techniques" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Awesome list of techniques to achieve Remote Code Execution on various apps!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome RCE techniques&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Awesome list of techniques to achieve Remote Code Execution (RCE) on various apps! &lt;br&gt; &lt;img alt=&#34;Number of RCE techniques&#34; src=&#34;https://img.shields.io/badge/techniques-10-brightgreen&#34;&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=podalirius_&#34; title=&#34;Follow&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/podalirius_?label=Podalirius&amp;amp;style=social&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/c/Podalirius_?sub_confirmation=1&#34; title=&#34;Subscribe&#34;&gt;&lt;img alt=&#34;YouTube Channel Subscribers&#34; src=&#34;https://img.shields.io/youtube/channel/subscribers/UCF_x5O7CSfr82AfNVTKOv_A?style=social&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Goal of this project&lt;/h2&gt; &#xA;&lt;p&gt;The goal of this project is to provide an OpenSource knowledge database of all the techniques to achieve Remote Code Execution (RCE) on various applications.&lt;/p&gt; &#xA;&lt;p&gt;All of these techniques also comes with a test environnement (usually a Docker image) for you to train these Remote Code Execution (RCE) techniques.&lt;/p&gt; &#xA;&lt;h2&gt;Techniques&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Content-Management-Systems-(CMS)/&#34;&gt;Content-Management-Systems-(CMS)&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Content-Management-Systems-(CMS)/Drupal/&#34;&gt;&lt;strong&gt;Drupal&lt;/strong&gt;: (0 technique)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Content-Management-Systems-(CMS)/Joomla/&#34;&gt;&lt;strong&gt;Joomla&lt;/strong&gt;: (1 technique)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Content-Management-Systems-(CMS)/SweetRice/&#34;&gt;&lt;strong&gt;SweetRice&lt;/strong&gt;: (2 techniques)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Content-Management-Systems-(CMS)/Typo3/&#34;&gt;&lt;strong&gt;Typo3&lt;/strong&gt;: (1 techniques)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Content-Management-Systems-(CMS)/Wordpress/&#34;&gt;&lt;strong&gt;Wordpress&lt;/strong&gt;: (3 techniques)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Learning-Management-Systems-(LMS)/&#34;&gt;Learning-Management-Systems-(LMS)&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Content-Management-Systems-(CMS)/Moodle/&#34;&gt;&lt;strong&gt;Moodle&lt;/strong&gt;: (1 technique)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Frameworks/&#34;&gt;Frameworks&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Frameworks/JBoss/&#34;&gt;&lt;strong&gt;JBoss&lt;/strong&gt;: (1 technique)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Frameworks/JoGet/&#34;&gt;&lt;strong&gt;JoGet&lt;/strong&gt;: (1 technique)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Frameworks/Tomcat/&#34;&gt;&lt;strong&gt;Tomcat&lt;/strong&gt;: (2 techniques)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Frameworks/WildFly/&#34;&gt;&lt;strong&gt;WildFly&lt;/strong&gt;: (1 technique)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Other/&#34;&gt;Other&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Other/GiTea/&#34;&gt;&lt;strong&gt;GiTea&lt;/strong&gt;: (1 technique)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Other/Jenkins/&#34;&gt;&lt;strong&gt;Jenkins&lt;/strong&gt;: (1 technique)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/p0dalirius/Awesome-RCE-techniques/master/Other/LimeSurvey/&#34;&gt;&lt;strong&gt;LimeSurvey&lt;/strong&gt;: (1 technique)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are welcome. Feel free to open an issue if you want to add other features.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dunglas/symfony-docker</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/dunglas/symfony-docker</id>
    <link href="https://github.com/dunglas/symfony-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Docker-based installer and runtime for Symfony. Install: download and `docker-compose up`.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Symfony Docker&lt;/h1&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;-based installer and runtime for the &lt;a href=&#34;https://symfony.com&#34;&gt;Symfony&lt;/a&gt; web framework, with full &lt;a href=&#34;https://symfony.com/doc/current/weblink.html&#34;&gt;HTTP/2&lt;/a&gt;, HTTP/3 and HTTPS support.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/dunglas/symfony-docker/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If not already done, &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;install Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;docker-compose build --pull --no-cache&lt;/code&gt; to build fresh images&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;docker-compose up&lt;/code&gt; (the logs will be displayed in the current shell)&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;https://localhost&lt;/code&gt; in your favorite web browser and &lt;a href=&#34;https://stackoverflow.com/a/15076602/1352334&#34;&gt;accept the auto-generated TLS certificate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;docker-compose down --remove-orphans&lt;/code&gt; to stop the Docker containers.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Production, development and CI ready&lt;/li&gt; &#xA; &lt;li&gt;Automatic HTTPS (in dev and in prod!)&lt;/li&gt; &#xA; &lt;li&gt;HTTP/2, HTTP/3 and &lt;a href=&#34;https://symfony.com/doc/current/web_link.html&#34;&gt;Preload&lt;/a&gt; support&lt;/li&gt; &#xA; &lt;li&gt;Built-in &lt;a href=&#34;https://symfony.com/doc/current/mercure.html&#34;&gt;Mercure&lt;/a&gt; hub&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vulcain.rocks&#34;&gt;Vulcain&lt;/a&gt; support&lt;/li&gt; &#xA; &lt;li&gt;Just 2 services (PHP FPM and Caddy server)&lt;/li&gt; &#xA; &lt;li&gt;Super-readable configuration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Enjoy!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Docs&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/build.md&#34;&gt;Build options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/existing-project.md&#34;&gt;Using Symfony Docker with an existing project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/extra-services.md&#34;&gt;Support for extra services&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/production.md&#34;&gt;Deploying in production&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/xdebug.md&#34;&gt;Installing Xdebug&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/makefile.md&#34;&gt;Using a Makefile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/troubleshooting.md&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Created by &lt;a href=&#34;https://dunglas.fr&#34;&gt;KÃ©vin Dunglas&lt;/a&gt;, co-maintained by &lt;a href=&#34;https://twitter.com/maxhelias&#34;&gt;Maxime Helias&lt;/a&gt; and sponsored by &lt;a href=&#34;https://les-tilleuls.coop&#34;&gt;Les-Tilleuls.coop&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sprintcube/docker-compose-lamp</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/sprintcube/docker-compose-lamp</id>
    <link href="https://github.com/sprintcube/docker-compose-lamp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A basic LAMP stack environment built using Docker Compose.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LAMP stack built with Docker Compose&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/43859895/141092846-905eae39-0169-4fd7-911f-9ff32c48b7e8.png&#34; alt=&#34;Landing Page&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A basic LAMP stack environment built using Docker Compose. It consists of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PHP&lt;/li&gt; &#xA; &lt;li&gt;Apache&lt;/li&gt; &#xA; &lt;li&gt;MySQL&lt;/li&gt; &#xA; &lt;li&gt;phpMyAdmin&lt;/li&gt; &#xA; &lt;li&gt;Redis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As of now, we have several different PHP versions. Use appropriate php version as needed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;5.4.x&lt;/li&gt; &#xA; &lt;li&gt;5.6.x&lt;/li&gt; &#xA; &lt;li&gt;7.1.x&lt;/li&gt; &#xA; &lt;li&gt;7.2.x&lt;/li&gt; &#xA; &lt;li&gt;7.3.x&lt;/li&gt; &#xA; &lt;li&gt;7.4.x&lt;/li&gt; &#xA; &lt;li&gt;8.0.x&lt;/li&gt; &#xA; &lt;li&gt;8.1.x&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone this repository on your local computer&lt;/li&gt; &#xA; &lt;li&gt;configure .env as needed&lt;/li&gt; &#xA; &lt;li&gt;Run the &lt;code&gt;docker-compose up -d&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/sprintcube/docker-compose-lamp.git&#xA;cd docker-compose-lamp/&#xA;cp sample.env .env&#xA;// modify sample.env as needed&#xA;docker-compose up -d&#xA;// visit localhost&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Your LAMP stack is now ready!! You can access it via &lt;code&gt;http://localhost&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration and Usage&lt;/h2&gt; &#xA;&lt;h3&gt;General Information&lt;/h3&gt; &#xA;&lt;p&gt;This Docker Stack is build for local development and not for production usage.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;This package comes with default configuration options. You can modify them by creating &lt;code&gt;.env&lt;/code&gt; file in your root directory. To make it easy, just copy the content from &lt;code&gt;sample.env&lt;/code&gt; file and update the environment variable values as per your need.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration Variables&lt;/h3&gt; &#xA;&lt;p&gt;There are following configuration variables available and you can customize them by overwritting in your own &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;PHP&lt;/h4&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;PHPVERSION&lt;/strong&gt;&lt;/em&gt; Is used to specify which PHP Version you want to use. Defaults always to latest PHP Version.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;PHP_INI&lt;/strong&gt;&lt;/em&gt; Define your custom &lt;code&gt;php.ini&lt;/code&gt; modification to meet your requirments.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Apache&lt;/h4&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;DOCUMENT_ROOT&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;It is a document root for Apache server. The default value for this is &lt;code&gt;./www&lt;/code&gt;. All your sites will go here and will be synced automatically.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;APACHE_DOCUMENT_ROOT&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Apache config file value. The default value for this is /var/www/html.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;VHOSTS_DIR&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is for virtual hosts. The default value for this is &lt;code&gt;./config/vhosts&lt;/code&gt;. You can place your virtual hosts conf files here.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure you add an entry to your system&#39;s &lt;code&gt;hosts&lt;/code&gt; file for each virtual host.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;APACHE_LOG_DIR&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This will be used to store Apache logs. The default value for this is &lt;code&gt;./logs/apache2&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Database&lt;/h4&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For Apple Silicon Users: Please select Mariadb as Database. Oracle doesn&#39;t build their SQL Containers for the arm Architecure&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;DATABASE&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Define which MySQL or MariaDB Version you would like to use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;MYSQL_INITDB_DIR&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;When a container is started for the first time files in this directory with the extensions &lt;code&gt;.sh&lt;/code&gt;, &lt;code&gt;.sql&lt;/code&gt;, &lt;code&gt;.sql.gz&lt;/code&gt; and &lt;code&gt;.sql.xz&lt;/code&gt; will be executed in alphabetical order. &lt;code&gt;.sh&lt;/code&gt; files without file execute permission are sourced rather than executed. The default value for this is &lt;code&gt;./config/initdb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;MYSQL_DATA_DIR&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is MySQL data directory. The default value for this is &lt;code&gt;./data/mysql&lt;/code&gt;. All your MySQL data files will be stored here.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;MYSQL_LOG_DIR&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This will be used to store Apache logs. The default value for this is &lt;code&gt;./logs/mysql&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Web Server&lt;/h2&gt; &#xA;&lt;p&gt;Apache is configured to run on port 80. So, you can access it via &lt;code&gt;http://localhost&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Apache Modules&lt;/h4&gt; &#xA;&lt;p&gt;By default following modules are enabled.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;rewrite&lt;/li&gt; &#xA; &lt;li&gt;headers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you want to enable more modules, just update &lt;code&gt;./bin/phpX/Dockerfile&lt;/code&gt;. You can also generate a PR and we will merge if seems good for general purpose. You have to rebuild the docker image by running &lt;code&gt;docker-compose build&lt;/code&gt; and restart the docker containers.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Connect via SSH&lt;/h4&gt; &#xA;&lt;p&gt;You can connect to web server using &lt;code&gt;docker-compose exec&lt;/code&gt; command to perform various operation on it. Use below command to login to container via ssh.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker-compose exec webserver bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;PHP&lt;/h2&gt; &#xA;&lt;p&gt;The installed version of php depends on your &lt;code&gt;.env&lt;/code&gt;file.&lt;/p&gt; &#xA;&lt;h4&gt;Extensions&lt;/h4&gt; &#xA;&lt;p&gt;By default following extensions are installed. May differ for PHP Versions &amp;lt;7.x.x&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;mysqli&lt;/li&gt; &#xA; &lt;li&gt;pdo_sqlite&lt;/li&gt; &#xA; &lt;li&gt;pdo_mysql&lt;/li&gt; &#xA; &lt;li&gt;mbstring&lt;/li&gt; &#xA; &lt;li&gt;zip&lt;/li&gt; &#xA; &lt;li&gt;intl&lt;/li&gt; &#xA; &lt;li&gt;mcrypt&lt;/li&gt; &#xA; &lt;li&gt;curl&lt;/li&gt; &#xA; &lt;li&gt;json&lt;/li&gt; &#xA; &lt;li&gt;iconv&lt;/li&gt; &#xA; &lt;li&gt;xml&lt;/li&gt; &#xA; &lt;li&gt;xmlrpc&lt;/li&gt; &#xA; &lt;li&gt;gd&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you want to install more extension, just update &lt;code&gt;./bin/webserver/Dockerfile&lt;/code&gt;. You can also generate a PR and we will merge if it seems good for general purpose. You have to rebuild the docker image by running &lt;code&gt;docker-compose build&lt;/code&gt; and restart the docker containers.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;phpMyAdmin&lt;/h2&gt; &#xA;&lt;p&gt;phpMyAdmin is configured to run on port 8080. Use following default credentials.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://localhost:8080/&#34;&gt;http://localhost:8080/&lt;/a&gt;&lt;br&gt; username: root&lt;br&gt; password: tiger&lt;/p&gt; &#xA;&lt;h2&gt;Xdebug&lt;/h2&gt; &#xA;&lt;p&gt;Xdebug comes installed by default and it&#39;s version depends on the PHP version chosen in the &lt;code&gt;&#34;.env&#34;&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Xdebug versions:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;PHP &amp;lt;= 7.3: Xdebug 2.X.X&lt;/p&gt; &#xA;&lt;p&gt;PHP &amp;gt;= 7.4: Xdebug 3.X.X&lt;/p&gt; &#xA;&lt;p&gt;To use Xdebug you need to enable the settings in the &lt;code&gt;./config/php/php.ini&lt;/code&gt; file according to the chosen version PHP.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Xdebug 2&#xA;#xdebug.remote_enable=1&#xA;#xdebug.remote_autostart=1&#xA;#xdebug.remote_connect_back=1&#xA;#xdebug.remote_host = host.docker.internal&#xA;#xdebug.remote_port=9000&#xA;&#xA;# Xdebug 3&#xA;#xdebug.mode=debug&#xA;#xdebug.start_with_request=yes&#xA;#xdebug.client_host=host.docker.internal&#xA;#xdebug.client_port=9003&#xA;#xdebug.idekey=VSCODE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Xdebug VS Code: you have to install the Xdebug extension &#34;PHP Debug&#34;. After installed, go to Debug and create the launch file so that your IDE can listen and work properly.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;VERY IMPORTANT:&lt;/strong&gt; the &lt;code&gt;pathMappings&lt;/code&gt; depends on how you have opened the folder in VS Code. Each folder has your own configurations launch, that you can view in &lt;code&gt;.vscode/launch.json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;version&#34;: &#34;0.2.0&#34;,&#xA;    &#34;configurations&#34;: [&#xA;        {&#xA;            &#34;name&#34;: &#34;Listen for Xdebug&#34;,&#xA;            &#34;type&#34;: &#34;php&#34;,&#xA;            &#34;request&#34;: &#34;launch&#34;,&#xA;            // &#34;port&#34;: 9000, // Xdebug 2&#xA;            &#34;port&#34;: 9003, // Xdebug 3&#xA;            &#34;pathMappings&#34;: {&#xA;                // &#34;/var/www/html&#34;: &#34;${workspaceFolder}/www&#34; // if you have opened VSCODE in root folder&#xA;                &#34;/var/www/html&#34;: &#34;${workspaceFolder}&#34; // if you have opened VSCODE in ./www folder&#xA;            }&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, make a breakpoint and run debug.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tip!&lt;/strong&gt; After theses configurations, you may need to restart container.&lt;/p&gt; &#xA;&lt;h2&gt;Redis&lt;/h2&gt; &#xA;&lt;p&gt;It comes with Redis. It runs on default port &lt;code&gt;6379&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We are happy if you want to create a pull request or help people with their issues. If you want to create a PR, please remember that this stack is not built for production usage, and changes should be good for general purpose and not overspecialized.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please note that we simplified the project structure from several branches for each php version, to one centralized master branch. Please create your PR against master branch.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Thank you!&lt;/p&gt; &#xA;&lt;h2&gt;Why you shouldn&#39;t use this stack unmodified in production&lt;/h2&gt; &#xA;&lt;p&gt;We want to empower developers to quickly create creative Applications. Therefore we are providing an easy to set up a local development environment for several different Frameworks and PHP Versions. In Production you should modify at a minimum the following subjects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;php handler: mod_php=&amp;gt; php-fpm&lt;/li&gt; &#xA; &lt;li&gt;secure mysql users with proper source IP limitations&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>docker-library/python</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/docker-library/python</id>
    <link href="https://github.com/docker-library/python" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker Official Image packaging for Python&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://github.com/docker-library/python&#34;&gt;https://github.com/docker-library/python&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;Maintained by: &lt;a href=&#34;https://github.com/docker-library/python&#34;&gt;the Docker Community&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;This is the Git repo of the &lt;a href=&#34;https://github.com/docker-library/official-images#what-are-official-images&#34;&gt;Docker &#34;Official Image&#34;&lt;/a&gt; for &lt;a href=&#34;https://hub.docker.com/_/python/&#34;&gt;&lt;code&gt;python&lt;/code&gt;&lt;/a&gt; (not to be confused with any official &lt;code&gt;python&lt;/code&gt; image provided by &lt;code&gt;python&lt;/code&gt; upstream). See &lt;a href=&#34;https://hub.docker.com/_/python/&#34;&gt;the Docker Hub page&lt;/a&gt; for the full readme on how to use this Docker image and for information regarding contributing and issues.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://hub.docker.com/_/python/&#34;&gt;full image description on Docker Hub&lt;/a&gt; is generated/maintained over in &lt;a href=&#34;https://github.com/docker-library/docs&#34;&gt;the docker-library/docs repository&lt;/a&gt;, specifically in &lt;a href=&#34;https://github.com/docker-library/docs/tree/master/python&#34;&gt;the &lt;code&gt;python&lt;/code&gt; directory&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;See a change merged here that doesn&#39;t show up on Docker Hub yet?&lt;/h2&gt; &#xA;&lt;p&gt;For more information about the full official images change lifecycle, see &lt;a href=&#34;https://github.com/docker-library/faq#an-images-source-changed-in-git-now-what&#34;&gt;the &#34;An image&#39;s source changed in Git, now what?&#34; FAQ entry&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For outstanding &lt;code&gt;python&lt;/code&gt; image PRs, check &lt;a href=&#34;https://github.com/docker-library/official-images/labels/library%2Fpython&#34;&gt;PRs with the &#34;library/python&#34; label on the official-images repository&lt;/a&gt;. For the current &#34;source of truth&#34; for &lt;a href=&#34;https://hub.docker.com/_/python/&#34;&gt;&lt;code&gt;python&lt;/code&gt;&lt;/a&gt;, see &lt;a href=&#34;https://github.com/docker-library/official-images/raw/master/library/python&#34;&gt;the &lt;code&gt;library/python&lt;/code&gt; file in the official-images repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker-library/python/actions?query=workflow%3A%22GitHub+CI%22+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/docker-library/python/GitHub%20CI/master?label=GitHub%20CI&#34; alt=&#34;build status badge&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/update.sh/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/update.sh/job/python.svg?label=Automated%20update.sh&#34; alt=&#34;build status badge&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Build&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Status&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Badges&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;(per-arch)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/amd64/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/amd64/job/python.svg?label=amd64&#34; alt=&#34;amd64 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/arm32v5/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/arm32v5/job/python.svg?label=arm32v5&#34; alt=&#34;arm32v5 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/arm32v6/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/arm32v6/job/python.svg?label=arm32v6&#34; alt=&#34;arm32v6 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/arm32v7/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/arm32v7/job/python.svg?label=arm32v7&#34; alt=&#34;arm32v7 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/arm64v8/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/arm64v8/job/python.svg?label=arm64v8&#34; alt=&#34;arm64v8 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/i386/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/i386/job/python.svg?label=i386&#34; alt=&#34;i386 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/mips64le/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/mips64le/job/python.svg?label=mips64le&#34; alt=&#34;mips64le build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/ppc64le/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/ppc64le/job/python.svg?label=ppc64le&#34; alt=&#34;ppc64le build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/s390x/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/s390x/job/python.svg?label=s390x&#34; alt=&#34;s390x build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/windows-amd64/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/windows-amd64/job/python.svg?label=windows-amd64&#34; alt=&#34;windows-amd64 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/put-shared/job/light/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/put-shared/job/light/job/python.svg?label=put-shared&#34; alt=&#34;put-shared build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- THIS FILE IS GENERATED BY https://github.com/docker-library/docs/blob/master/generate-repo-stub-readme.sh --&gt;</summary>
  </entry>
  <entry>
    <title>nodejs/docker-node</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/nodejs/docker-node</id>
    <link href="https://github.com/nodejs/docker-node" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official Docker Image for Node.js ð³ ð¢ ð&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node.js&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://registry.hub.docker.com/_/node/&#34;&gt;&lt;img src=&#34;http://dockeri.co/image/_/node&#34; alt=&#34;dockeri.co&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nodejs/docker-node&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/nodejs/docker-node.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34; title=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nodejs/docker-node&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/nodejs/docker-node.svg?sanitize=true&#34; alt=&#34;GitHub stars&#34; title=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The official Node.js docker image, made with love by the node community.&lt;/p&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#what-is-nodejs&#34;&gt;What is Node.js?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#how-to-use-this-image&#34;&gt;How to use this image&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#create-a-dockerfile-in-your-nodejs-app-project&#34;&gt;Create a &lt;code&gt;Dockerfile&lt;/code&gt; in your Node.js app project&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#best-practices&#34;&gt;Best Practices&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#run-a-single-nodejs-script&#34;&gt;Run a single Node.js script&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#verbosity&#34;&gt;Verbosity&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#docker-run&#34;&gt;Docker Run&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#npm-run&#34;&gt;NPM run&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#image-variants&#34;&gt;Image Variants&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#nodeversion&#34;&gt;&lt;code&gt;node:&amp;lt;version&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#nodealpine&#34;&gt;&lt;code&gt;node:alpine&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#nodebuster&#34;&gt;&lt;code&gt;node:buster&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#nodestretch&#34;&gt;&lt;code&gt;node:stretch&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#nodeslim&#34;&gt;&lt;code&gt;node:slim&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#supported-docker-versions&#34;&gt;Supported Docker versions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#supported-nodejs-versions&#34;&gt;Supported Node.js versions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#governance-and-current-members&#34;&gt;Governance and Current Members&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#docker-working-group-members&#34;&gt;Docker Working Group Members&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#docker-working-group-collaborators&#34;&gt;Docker Working Group Collaborators&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#emeritus&#34;&gt;Emeritus&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#docker-working-group-members-1&#34;&gt;Docker Working Group Members&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;h2&gt;What is Node.js?&lt;/h2&gt; &#xA;&lt;p&gt;Node.js is a platform built on Chrome&#39;s JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.&lt;/p&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;http://nodejs.org&#34;&gt;http://nodejs.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to use this image&lt;/h2&gt; &#xA;&lt;h3&gt;Create a &lt;code&gt;Dockerfile&lt;/code&gt; in your Node.js app project&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;# specify the node base image with your desired version node:&amp;lt;version&amp;gt;&#xA;FROM node:16&#xA;# replace this with your application&#39;s default port&#xA;EXPOSE 8888&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then build and run the Docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker build -t my-nodejs-app .&#xA;$ docker run -it --rm --name my-running-app my-nodejs-app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you prefer Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;version: &#34;2&#34;&#xA;services:&#xA;  node:&#xA;    image: &#34;node:8&#34;&#xA;    user: &#34;node&#34;&#xA;    working_dir: /home/node/app&#xA;    environment:&#xA;      - NODE_ENV=production&#xA;    volumes:&#xA;      - ./:/home/node/app&#xA;    expose:&#xA;      - &#34;8081&#34;&#xA;    command: &#34;npm start&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then run using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Docker Compose example copies your current directory (including node_modules) to the container. It assumes that your application has a file named &lt;a href=&#34;https://docs.npmjs.com/files/package.json&#34;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; defining &lt;a href=&#34;https://docs.npmjs.com/misc/scripts#default-values&#34;&gt;start script&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Best Practices&lt;/h3&gt; &#xA;&lt;p&gt;We have assembled a &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/docs/BestPractices.md&#34;&gt;Best Practices Guide&lt;/a&gt; for those using these images on a daily basis.&lt;/p&gt; &#xA;&lt;h3&gt;Run a single Node.js script&lt;/h3&gt; &#xA;&lt;p&gt;For many simple, single file projects, you may find it inconvenient to write a complete &lt;code&gt;Dockerfile&lt;/code&gt;. In such cases, you can run a Node.js script by using the Node.js Docker image directly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -it --rm --name my-running-script -v &#34;$PWD&#34;:/usr/src/app -w /usr/src/app node:8 node your-daemon-or-script.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Verbosity&lt;/h3&gt; &#xA;&lt;p&gt;Prior to 8.7.0 and 6.11.4 the docker images overrode the default npm log level from &lt;code&gt;warn&lt;/code&gt; to &lt;code&gt;info&lt;/code&gt;. However due to improvements to npm and new Docker patterns (e.g. multi-stage builds) the working group reached a &lt;a href=&#34;https://github.com/nodejs/docker-node/issues/528&#34;&gt;consensus&lt;/a&gt; to revert the log level to npm defaults. If you need more verbose output, please use one of the following methods to change the verbosity level.&lt;/p&gt; &#xA;&lt;h4&gt;Dockerfile&lt;/h4&gt; &#xA;&lt;p&gt;If you create your own &lt;code&gt;Dockerfile&lt;/code&gt; which inherits from the &lt;code&gt;node&lt;/code&gt; image you can simply use &lt;code&gt;ENV&lt;/code&gt; to override &lt;code&gt;NPM_CONFIG_LOGLEVEL&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;FROM node&#xA;ENV NPM_CONFIG_LOGLEVEL info&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Docker Run&lt;/h4&gt; &#xA;&lt;p&gt;If you run the node image using &lt;code&gt;docker run&lt;/code&gt; you can use the &lt;code&gt;-e&lt;/code&gt; flag to override &lt;code&gt;NPM_CONFIG_LOGLEVEL&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -e NPM_CONFIG_LOGLEVEL=info node ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;NPM run&lt;/h4&gt; &#xA;&lt;p&gt;If you are running npm commands you can use &lt;code&gt;--loglevel&lt;/code&gt; to control the verbosity of the output.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run node npm --loglevel=warn ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Image Variants&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;node&lt;/code&gt; images come in many flavors, each designed for a specific use case. All of the images contain pre-installed versions of &lt;code&gt;node&lt;/code&gt;, &lt;a href=&#34;https://www.npmjs.com/&#34;&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&#34;https://yarnpkg.com&#34;&gt;&lt;code&gt;yarn&lt;/code&gt;&lt;/a&gt;. For each supported architecture, the supported variants are different. In the file: &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/versions.json&#34;&gt;versions.json&lt;/a&gt;, it lists all supported variants for all of the architectures that we support now.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;node:&amp;lt;version&amp;gt;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This is the defacto image. If you are unsure about what your needs are, you probably want to use this one. It is designed to be used both as a throw away container (mount your source code and start the container to start your app), as well as the base to build other images off of. This tag is based off of &lt;a href=&#34;https://registry.hub.docker.com/_/buildpack-deps/&#34;&gt;&lt;code&gt;buildpack-deps&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;buildpack-deps&lt;/code&gt; is designed for the average user of docker who has many images on their system. It, by design, has a large number of extremely common Debian packages. This reduces the number of packages that images that derive from it need to install, thus reducing the overall size of all images on your system.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;node:alpine&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This image is based on the popular &lt;a href=&#34;http://alpinelinux.org&#34;&gt;Alpine Linux project&lt;/a&gt;, available in &lt;a href=&#34;https://hub.docker.com/_/alpine&#34;&gt;the &lt;code&gt;alpine&lt;/code&gt; official image&lt;/a&gt;. Alpine Linux is much smaller than most distribution base images (~5MB), and thus leads to much slimmer images in general.&lt;/p&gt; &#xA;&lt;p&gt;This variant is highly recommended when final image size being as small as possible is desired. The main caveat to note is that it does use &lt;a href=&#34;http://www.musl-libc.org&#34;&gt;musl libc&lt;/a&gt; instead of &lt;a href=&#34;http://www.etalabs.net/compare_libcs.html&#34;&gt;glibc and friends&lt;/a&gt;, so certain software might run into issues depending on the depth of their libc requirements. However, most software doesn&#39;t have an issue with this, so this variant is usually a very safe choice. See &lt;a href=&#34;https://news.ycombinator.com/item?id=10782897&#34;&gt;this Hacker News comment thread&lt;/a&gt; for more discussion of the issues that might arise and some pro/con comparisons of using Alpine-based images. One common issue that may arise is a missing shared library required for use of &lt;code&gt;process.dlopen&lt;/code&gt;. To add the missing shared libraries to your image, adding the &lt;a href=&#34;https://pkgs.alpinelinux.org/package/edge/main/x86/libc6-compat&#34;&gt;&lt;code&gt;libc6-compat&lt;/code&gt;&lt;/a&gt; package in your Dockerfile is recommended: &lt;code&gt;apk add --no-cache libc6-compat&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To minimize image size, it&#39;s uncommon for additional related tools (such as &lt;code&gt;git&lt;/code&gt; or &lt;code&gt;bash&lt;/code&gt;) to be included in Alpine-based images. Using this image as a base, add the things you need in your own Dockerfile (see the &lt;a href=&#34;https://hub.docker.com/_/alpine/&#34;&gt;&lt;code&gt;alpine&lt;/code&gt; image description&lt;/a&gt; for examples of how to install packages if you are unfamiliar).&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;node:buster&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This image is based on version 10 of &lt;a href=&#34;http://debian.org&#34;&gt;Debian&lt;/a&gt;, available in &lt;a href=&#34;https://hub.docker.com/_/debian&#34;&gt;the &lt;code&gt;debian&lt;/code&gt; official image&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;node:stretch&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This image is based on version 9 of &lt;a href=&#34;http://debian.org&#34;&gt;Debian&lt;/a&gt;, available in &lt;a href=&#34;https://hub.docker.com/_/debian&#34;&gt;the &lt;code&gt;debian&lt;/code&gt; official image&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;node:slim&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This image does not contain the common packages contained in the default tag and only contains the minimal packages needed to run &lt;code&gt;node&lt;/code&gt;. Unless you are working in an environment where &lt;em&gt;only&lt;/em&gt; the Node.js image will be deployed and you have space constraints, we highly recommend using the default image of this repository.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nodejs/node/raw/master/LICENSE&#34;&gt;License information&lt;/a&gt; for the software contained in this image. &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/LICENSE&#34;&gt;License information&lt;/a&gt; for the Node.js Docker project.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Docker versions&lt;/h2&gt; &#xA;&lt;p&gt;This image is officially supported on Docker version 1.9.1.&lt;/p&gt; &#xA;&lt;p&gt;Support for older versions (down to 1.6) is provided on a best-effort basis.&lt;/p&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://docs.docker.com/installation/&#34;&gt;the Docker installation documentation&lt;/a&gt; for details on how to upgrade your Docker daemon.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Node.js versions&lt;/h2&gt; &#xA;&lt;p&gt;This project will support Node.js versions as still under active support as per the &lt;a href=&#34;https://github.com/nodejs/Release&#34;&gt;Node.js release schedule&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Governance and Current Members&lt;/h2&gt; &#xA;&lt;p&gt;The Node.js Docker Image is governed by the Docker Working Group. See &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/GOVERNANCE.md&#34;&gt;GOVERNANCE.md&lt;/a&gt; to learn more about the group&#39;s structure and &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for guidance about the expectations for all contributors to this project.&lt;/p&gt; &#xA;&lt;h3&gt;Docker Working Group Members&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hans Kristian Flaatten (&lt;a href=&#34;https://github.com/starefossen&#34;&gt;starefossen&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Hugues Malphettes (&lt;a href=&#34;https://github.com/hmalphettes&#34;&gt;hmalphettes&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;John Mitchell (&lt;a href=&#34;https://github.com/jlmitch5&#34;&gt;jlmitch5&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker Working Group Collaborators&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mikeal Rogers (&lt;a href=&#34;https://github.com/mikeal&#34;&gt;mikeal&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Laurent Goderre (&lt;a href=&#34;https://github.com/LaurentGoderre&#34;&gt;LaurentGoderre&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Simen Bekkhus (&lt;a href=&#34;https://github.com/SimenB&#34;&gt;SimenB&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Peter Dave Hello (&lt;a href=&#34;https://github.com/PeterDaveHello&#34;&gt;PeterDaveHello&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Emeritus&lt;/h3&gt; &#xA;&lt;h4&gt;Docker Working Group Members&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Christopher Horrell (&lt;a href=&#34;https://github.com/chorrell&#34;&gt;chorrell&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Peter Petrov (&lt;a href=&#34;https://github.com/pesho&#34;&gt;pesho&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>yankils/Simple-DevOps-Project</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/yankils/Simple-DevOps-Project</id>
    <link href="https://github.com/yankils/Simple-DevOps-Project" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Simple DevOps Project&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.udemy.com/course/valaxy-devops/?referralCode=8147A5CF4C8C7D9E253F&#34;&gt;&lt;img src=&#34;https://github.com/yankils/Simple-DevOps-Project/raw/master/Devops_course.PNG&#34; alt=&#34;Image&#34; title=&#34;DevOps Project - CI/CD with Jenkins Ansible Docker Kubernetes &#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This Repository is a collection of Implementation documents.&lt;/p&gt; &#xA;&lt;h3&gt;Purpose:&lt;/h3&gt; &#xA;&lt;p&gt;By following this repository you can able to setup a DevOps CI/CD Pipeline using&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;git&lt;/li&gt; &#xA; &lt;li&gt;Jenkins&lt;/li&gt; &#xA; &lt;li&gt;Maven&lt;/li&gt; &#xA; &lt;li&gt;Ansible&lt;/li&gt; &#xA; &lt;li&gt;Docker &amp;amp;&lt;/li&gt; &#xA; &lt;li&gt;Kubernetes&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>appleboy/ssh-action</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/appleboy/ssh-action</id>
    <link href="https://github.com/appleboy/ssh-action" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GitHub Actions for executing remote ssh commands.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ð SSH for GitHub Actions&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Action&lt;/a&gt; for executing remote ssh commands.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/appleboy/ssh-action/master/images/ssh-workflow.png&#34; alt=&#34;ssh workflow&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/appleboy/ssh-action/actions&#34;&gt;&lt;img src=&#34;https://github.com/appleboy/ssh-action/workflows/remote%20ssh%20command/badge.svg?sanitize=true&#34; alt=&#34;Actions Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: Only support &lt;strong&gt;Linux&lt;/strong&gt; &lt;a href=&#34;https://www.docker.com/&#34;&gt;docker&lt;/a&gt; container.&lt;/p&gt; &#xA;&lt;h2&gt;Input variables&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/appleboy/ssh-action/master/action.yml&#34;&gt;action.yml&lt;/a&gt; for more detailed information.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;host&lt;/code&gt; - ssh host&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;port&lt;/code&gt; - ssh port, default is &lt;code&gt;22&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;username&lt;/code&gt; - ssh username&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;password&lt;/code&gt; - ssh password&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;passphrase&lt;/code&gt; - the passphrase is usually to encrypt the private key&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sync&lt;/code&gt; - synchronous execution if multiple hosts, default is false&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;timeout&lt;/code&gt; - timeout for ssh to remote host, default is &lt;code&gt;30s&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;command_timeout&lt;/code&gt; - timeout for ssh command, default is &lt;code&gt;10m&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;key&lt;/code&gt; - content of ssh private key. ex raw content of ~/.ssh/id_rsa&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;key_path&lt;/code&gt; - path of ssh private key&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fingerprint&lt;/code&gt; - fingerprint SHA256 of the host public key, default is to skip verification&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;script&lt;/code&gt; - execute commands&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;script_stop&lt;/code&gt; - stop script after first failure&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;envs&lt;/code&gt; - pass environment variable to shell script&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;debug&lt;/code&gt; - enable debug mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;use_insecure_cipher&lt;/code&gt; - include more ciphers with use_insecure_cipher (see &lt;a href=&#34;https://github.com/appleboy/ssh-action/issues/56&#34;&gt;#56&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cipher&lt;/code&gt; - the allowed cipher algorithms. If unspecified then a sensible&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;SSH Proxy Setting:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_host&lt;/code&gt; - proxy host&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_port&lt;/code&gt; - proxy port, default is &lt;code&gt;22&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_username&lt;/code&gt; - proxy username&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_password&lt;/code&gt; - proxy password&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_passphrase&lt;/code&gt; - the passphrase is usually to encrypt the private key&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_timeout&lt;/code&gt; - timeout for ssh to proxy host, default is &lt;code&gt;30s&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_key&lt;/code&gt; - content of ssh proxy private key.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_key_path&lt;/code&gt; - path of ssh proxy private key&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_fingerprint&lt;/code&gt; - fingerprint SHA256 of the proxy host public key, default is to skip verification&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_use_insecure_cipher&lt;/code&gt; - include more ciphers with use_insecure_cipher (see &lt;a href=&#34;https://github.com/appleboy/ssh-action/issues/56&#34;&gt;#56&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_cipher&lt;/code&gt; - the allowed cipher algorithms. If unspecified then a sensible&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Executing remote ssh commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;name: remote ssh command&#xA;on: [push]&#xA;jobs:&#xA;&#xA;  build:&#xA;    name: Build&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;    - name: executing remote ssh commands using password&#xA;      uses: appleboy/ssh-action@master&#xA;      with:&#xA;        host: ${{ secrets.HOST }}&#xA;        username: ${{ secrets.USERNAME }}&#xA;        password: ${{ secrets.PASSWORD }}&#xA;        port: ${{ secrets.PORT }}&#xA;        script: whoami&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;======CMD======&#xA;whoami&#xA;======END======&#xA;out: ***&#xA;==============================================&#xA;â Successfully executed commands to all host.&#xA;==============================================&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting up a SSH Key&lt;/h3&gt; &#xA;&lt;p&gt;Make sure to follow the below steps while creating SSH Keys and using them. The best practice is create the SSH Keys on local machine not remote machine. Login with username specified in Github Secrets. Generate a RSA Key-Pair:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;rsa&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh-keygen -t rsa -b 4096 -C &#34;your_email@example.com&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;ed25519&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh-keygen -t ed25519 -a 200 -C &#34;your_email@example.com&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Add newly generated key into Authorized keys. Read more about authorized keys &lt;a href=&#34;https://www.ssh.com/ssh/authorized_keys/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;rsa&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat .ssh/id_rsa.pub | ssh b@B &#39;cat &amp;gt;&amp;gt; .ssh/authorized_keys&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;ed25519&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat .ssh/id_ed25519.pub | ssh b@B &#39;cat &amp;gt;&amp;gt; .ssh/authorized_keys&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Copy Private Key content and paste in Github Secrets.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;rsa&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;clip &amp;lt; ~/.ssh/id_rsa&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;ed25519&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;clip &amp;lt; ~/.ssh/id_ed25519&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;See the detail information about &lt;a href=&#34;http://www.linuxproblem.org/art_9.html&#34;&gt;SSH login without password&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A note&lt;/strong&gt; from one of our readers: Depending on your version of SSH you might also have to do the following changes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Put the public key in &lt;code&gt;.ssh/authorized_keys2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Change the permissions of &lt;code&gt;.ssh&lt;/code&gt; to 700&lt;/li&gt; &#xA; &lt;li&gt;Change the permissions of &lt;code&gt;.ssh/authorized_keys2&lt;/code&gt; to 640&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;h4&gt;Executing remote ssh commands using password&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: executing remote ssh commands using password&#xA;  uses: appleboy/ssh-action@master&#xA;  with:&#xA;    host: ${{ secrets.HOST }}&#xA;    username: ${{ secrets.USERNAME }}&#xA;    password: ${{ secrets.PASSWORD }}&#xA;    port: ${{ secrets.PORT }}&#xA;    script: whoami&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using private key&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: executing remote ssh commands using ssh key&#xA;  uses: appleboy/ssh-action@master&#xA;  with:&#xA;    host: ${{ secrets.HOST }}&#xA;    username: ${{ secrets.USERNAME }}&#xA;    key: ${{ secrets.KEY }}&#xA;    port: ${{ secrets.PORT }}&#xA;    script: whoami&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Multiple Commands&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: multiple command&#xA;  uses: appleboy/ssh-action@master&#xA;  with:&#xA;    host: ${{ secrets.HOST }}&#xA;    username: ${{ secrets.USERNAME }}&#xA;    key: ${{ secrets.KEY }}&#xA;    port: ${{ secrets.PORT }}&#xA;    script: |&#xA;      whoami&#xA;      ls -al&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/appleboy/ssh-action/master/images/output-result.png&#34; alt=&#34;result&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Multiple Hosts&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;  - name: multiple host&#xA;    uses: appleboy/ssh-action@master&#xA;    with:&#xA;-     host: &#34;foo.com&#34;&#xA;+     host: &#34;foo.com,bar.com&#34;&#xA;      username: ${{ secrets.USERNAME }}&#xA;      key: ${{ secrets.KEY }}&#xA;      port: ${{ secrets.PORT }}&#xA;      script: |&#xA;        whoami&#xA;        ls -al&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Multiple hosts with different port&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;  - name: multiple host&#xA;    uses: appleboy/ssh-action@master&#xA;    with:&#xA;-     host: &#34;foo.com&#34;&#xA;+     host: &#34;foo.com:1234,bar.com:5678&#34;&#xA;      username: ${{ secrets.USERNAME }}&#xA;      key: ${{ secrets.KEY }}&#xA;      script: |&#xA;        whoami&#xA;        ls -al&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Synchronous execution on multiple hosts&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;  - name: multiple host&#xA;    uses: appleboy/ssh-action@master&#xA;    with:&#xA;      host: &#34;foo.com,bar.com&#34;&#xA;+     sync: true&#xA;      username: ${{ secrets.USERNAME }}&#xA;      key: ${{ secrets.KEY }}&#xA;      port: ${{ secrets.PORT }}&#xA;      script: |&#xA;        whoami&#xA;        ls -al&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Pass environment variable to shell script&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;  - name: pass environment&#xA;    uses: appleboy/ssh-action@master&#xA;+   env:&#xA;+     FOO: &#34;BAR&#34;&#xA;+     BAR: &#34;FOO&#34;&#xA;+     SHA: ${{ github.sha }}&#xA;    with:&#xA;      host: ${{ secrets.HOST }}&#xA;      username: ${{ secrets.USERNAME }}&#xA;      key: ${{ secrets.KEY }}&#xA;      port: ${{ secrets.PORT }}&#xA;+     envs: FOO,BAR&#xA;      script: |&#xA;        echo &#34;I am $FOO&#34;&#xA;        echo &#34;I am $BAR&#34;&#xA;        echo &#34;sha: $SHA&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Inside &lt;code&gt;env&lt;/code&gt; object, you need to pass every environment variable as a string, passing &lt;code&gt;Integer&lt;/code&gt; data type or any other may output unexpected results.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Stop script after first failure&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ex: missing &lt;code&gt;abc&lt;/code&gt; folder&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;  - name: stop script if command error&#xA;    uses: appleboy/ssh-action@master&#xA;    with:&#xA;      host: ${{ secrets.HOST }}&#xA;      username: ${{ secrets.USERNAME }}&#xA;      key: ${{ secrets.KEY }}&#xA;      port: ${{ secrets.PORT }}&#xA;+     script_stop: true&#xA;      script: |&#xA;        mkdir abc/def&#xA;        ls -al&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;======CMD======&#xA;mkdir abc/def&#xA;ls -al&#xA;&#xA;======END======&#xA;2019/11/21 01:16:21 Process exited with status 1&#xA;err: mkdir: cannot create directory âabc/defâ: No such file or directory&#xA;##[error]Docker run failed with exit code 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;How to connect remote server using &lt;code&gt;ProxyCommand&lt;/code&gt;?&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;+--------+       +----------+      +-----------+&#xA;| Laptop | &amp;lt;--&amp;gt;  | Jumphost | &amp;lt;--&amp;gt; | FooServer |&#xA;+--------+       +----------+      +-----------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;in your &lt;code&gt;~/.ssh/config&lt;/code&gt;, you will see the following.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Host Jumphost&#xA;  HostName Jumphost&#xA;  User ubuntu&#xA;  Port 22&#xA;  IdentityFile ~/.ssh/keys/jump_host.pem&#xA;&#xA;Host FooServer&#xA;  HostName FooServer&#xA;  User ubuntu&#xA;  Port 22&#xA;  ProxyCommand ssh -q -W %h:%p Jumphost&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;How to convert to YAML format of GitHubActions&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;  - name: ssh proxy command&#xA;    uses: appleboy/ssh-action@master&#xA;    with:&#xA;      host: ${{ secrets.HOST }}&#xA;      username: ${{ secrets.USERNAME }}&#xA;      key: ${{ secrets.KEY }}&#xA;      port: ${{ secrets.PORT }}&#xA;+     proxy_host: ${{ secrets.PROXY_HOST }}&#xA;+     proxy_username: ${{ secrets.PROXY_USERNAME }}&#xA;+     proxy_key: ${{ secrets.PROXY_KEY }}&#xA;+     proxy_port: ${{ secrets.PROXY_PORT }}&#xA;      script: |&#xA;        mkdir abc/def&#xA;        ls -al&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Protecting a Private Key&lt;/h4&gt; &#xA;&lt;p&gt;The purpose of the passphrase is usually to encrypt the private key. This makes the key file by itself useless to an attacker. It is not uncommon for files to leak from backups or decommissioned hardware, and hackers commonly exfiltrate files from compromised systems.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;  - name: ssh key passphrase&#xA;    uses: appleboy/ssh-action@master&#xA;    with:&#xA;      host: ${{ secrets.HOST }}&#xA;      username: ${{ secrets.USERNAME }}&#xA;      key: ${{ secrets.KEY }}&#xA;      port: ${{ secrets.PORT }}&#xA;+     passphrase: ${{ secrets.PASSPHRASE }}&#xA;      script: |&#xA;        whoami&#xA;        ls -al&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using host fingerprint verification&lt;/h4&gt; &#xA;&lt;p&gt;Setting up SSH host fingerprint verification can help to prevent Person-in-the-Middle attacks. Before setting this up, run the command below to get your SSH host fingerprint. Remember to replace &lt;code&gt;ed25519&lt;/code&gt; with your appropriate key type (&lt;code&gt;rsa&lt;/code&gt;, &lt;code&gt;dsa&lt;/code&gt;, etc.) that your server is using and &lt;code&gt;example.com&lt;/code&gt; with your host.&lt;/p&gt; &#xA;&lt;p&gt;In modern OpenSSH releases, the &lt;em&gt;default&lt;/em&gt; key types to be fetched are &lt;code&gt;rsa&lt;/code&gt; (since version 5.1), &lt;code&gt;ecdsa&lt;/code&gt; (since version 6.0), and &lt;code&gt;ed25519&lt;/code&gt; (since version 6.7).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ssh example.com ssh-keygen -l -f /etc/ssh/ssh_host_ed25519_key.pub | cut -d &#39; &#39; -f2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can adjust you config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;  - name: ssh key passphrase&#xA;    uses: appleboy/ssh-action@master&#xA;    with:&#xA;      host: ${{ secrets.HOST }}&#xA;      username: ${{ secrets.USERNAME }}&#xA;      key: ${{ secrets.KEY }}&#xA;      port: ${{ secrets.PORT }}&#xA;+     fingerprint: ${{ secrets.FINGERPRINT }}&#xA;      script: |&#xA;        whoami&#xA;        ls -al&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We would love for you to contribute to &lt;code&gt;appleboy/ssh-action&lt;/code&gt;, pull requests are welcome!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The scripts and documentation in this project are released under the &lt;a href=&#34;https://raw.githubusercontent.com/appleboy/ssh-action/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>laradock/laradock</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/laradock/laradock</id>
    <link href="https://github.com/laradock/laradock" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Full PHP development environment for Docker.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/laradock/laradock/master/.github/home-page-images/laradock-logo.jpg?raw=true&#34; alt=&#34;Laradock Logo&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;http://laradock.io/contributing&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&#34; alt=&#34;contributions welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/laradock/laradock/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/laradock/laradock.svg?sanitize=true&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/laradock/laradock/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/laradock/laradock.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/laradock/laradock/stargazers&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/laradock/laradock/master/#backers&#34; alt=&#34;sponsors on Open Collective&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/backers/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/laradock/laradock/master/#sponsors&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/sponsors/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/laradock/laradock.svg?sanitize=true&#34; alt=&#34;GitHub stars&#34;&gt; &lt;a href=&#34;https://github.com/laradock/laradock/actions/workflows/main-ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/laradock/laradock/actions/workflows/main-ci.yml/badge.svg?sanitize=true&#34; alt=&#34;GitHub CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/laradock/laradock&#34;&gt;&lt;img src=&#34;https://travis-ci.org/laradock/laradock.svg?branch=master&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/laradock/laradock/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;b&gt;Full PHP development environment based on Docker.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;http://zalt.me&#34;&gt;&lt;img src=&#34;http://forthebadge.com/images/badges/built-by-developers.svg?sanitize=true&#34; alt=&#34;forthebadge&#34; width=&#34;180&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4 align=&#34;center&#34; style=&#34;color:#7d58c2&#34;&gt;Use Docker First - Learn About It Later!&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;http://laradock.io&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/laradock/laradock/master/.github/home-page-images/documentation-button.png&#34; width=&#34;300px&#34; alt=&#34;Laradock Documentation&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Join Us&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/Laradock/laradock?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Laradock/laradock.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/laradock/laradock&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-ready--to--code-blue&#34; alt=&#34;Gitpod&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Awesome People&lt;/h2&gt; &#xA;&lt;p&gt;Laradock is an MIT-licensed open source project with its ongoing development made possible entirely by the support of all these smart and generous people, from code contributors to financial contributors. ð&lt;/p&gt; &#xA;&lt;h3&gt;Project Maintainers&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; &lt;img width=&#34;125&#34; height=&#34;125&#34; src=&#34;https://github.com/mahmoudz.png?s=150&#34;&gt; &lt;br&gt; &lt;strong&gt;Mahmoud Zalt&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/Mahmoudz&#34;&gt;@mahmoudz&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; &lt;img width=&#34;125&#34; height=&#34;125&#34; src=&#34;https://github.com/appleboy.png?s=150&#34;&gt; &lt;br&gt; &lt;strong&gt;Bo-Yi Wu&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/appleboy&#34;&gt;@appleboy&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; &lt;img width=&#34;125&#34; height=&#34;125&#34; src=&#34;https://github.com/philtrep.png?s=150&#34;&gt; &lt;br&gt; &lt;strong&gt;Philippe TrÃ©panier&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/philtrep&#34;&gt;@philtrep&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; &lt;img width=&#34;125&#34; height=&#34;125&#34; src=&#34;https://github.com/mikeerickson.png?s=150&#34;&gt; &lt;br&gt; &lt;strong&gt;Mike Erickson&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/mikeerickson&#34;&gt;@mikeerickson&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; &lt;img width=&#34;125&#34; height=&#34;125&#34; src=&#34;https://github.com/zeroc0d3.png?s=150&#34;&gt; &lt;br&gt; &lt;strong&gt;Dwi Fahni Denni&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/zeroc0d3&#34;&gt;@zeroc0d3&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; &lt;img width=&#34;125&#34; height=&#34;125&#34; src=&#34;https://github.com/thorerik.png?s=150&#34;&gt; &lt;br&gt; &lt;strong&gt;Thor Erik&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/thorerik&#34;&gt;@thorerik&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; &lt;img width=&#34;125&#34; height=&#34;125&#34; src=&#34;https://github.com/winfried-van-loon.png?s=150&#34;&gt; &lt;br&gt; &lt;strong&gt;Winfried van Loon&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/winfried-van-loon&#34;&gt;@winfried-van-loon&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; &lt;img width=&#34;125&#34; height=&#34;125&#34; src=&#34;https://github.com/sixlive.png?s=150&#34;&gt; &lt;br&gt; &lt;strong&gt;TJ Miller&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/sixlive&#34;&gt;@sixlive&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; &lt;img width=&#34;125&#34; height=&#34;125&#34; src=&#34;https://github.com/bestlong.png?s=150&#34;&gt; &lt;br&gt; &lt;strong&gt;Yu-Lung Shao (Allen)&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/bestlong&#34;&gt;@bestlong&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; &lt;img width=&#34;125&#34; height=&#34;125&#34; src=&#34;https://github.com/urukalo.png?s=150&#34;&gt; &lt;br&gt; &lt;strong&gt;Milan Urukalo&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/urukalo&#34;&gt;@urukalo&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; &lt;img width=&#34;125&#34; height=&#34;125&#34; src=&#34;https://github.com/vwchu.png?s=150&#34;&gt; &lt;br&gt; &lt;strong&gt;Vince Chu&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/vwchu&#34;&gt;@vwchu&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; &lt;img width=&#34;125&#34; height=&#34;125&#34; src=&#34;https://github.com/zuohuadong.png?s=150&#34;&gt; &lt;br&gt; &lt;strong&gt;Huadong Zuo&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/zuohuadong&#34;&gt;@zuohuadong&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; &lt;img width=&#34;125&#34; height=&#34;125&#34; src=&#34;https://github.com/lanphan.png?s=150&#34;&gt; &lt;br&gt; &lt;strong&gt;Lan Phan&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/lanphan&#34;&gt;@lanphan&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; &lt;img width=&#34;125&#34; height=&#34;125&#34; src=&#34;https://github.com/ahkui.png?s=150&#34;&gt; &lt;br&gt; &lt;strong&gt;Ahkui&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/ahkui&#34;&gt;@ahkui&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34;&gt; &lt;img width=&#34;125&#34; height=&#34;125&#34; src=&#34;https://raw.githubusercontent.com/laradock/laradock/master/.github/home-page-images/join-us.png&#34;&gt; &lt;br&gt; &lt;strong&gt;&amp;lt; Join Us &amp;gt;&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/laradock&#34;&gt;@laradock&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Code Contributors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/laradock/laradock/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/contributors.svg?width=890&amp;amp;button=false&amp;amp;isActive=true&#34; alt=&#34;Laradock Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Financial Contributors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/laradock#contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/awesome-backers.svg?width=890&amp;amp;button=false&amp;amp;isActive=true&#34; alt=&#34;Open Collective backers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can support us using any of the methods below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;1:&lt;/b&gt; &lt;a href=&#34;https://opencollective.com/laradock&#34;&gt;Open Collective&lt;/a&gt; &lt;br&gt; &lt;b&gt;2:&lt;/b&gt; &lt;a href=&#34;https://paypal.me/mzmmzz&#34;&gt;Paypal&lt;/a&gt; &lt;br&gt; &lt;b&gt;3:&lt;/b&gt; &lt;a href=&#34;https://github.com/sponsors/Mahmoudz&#34;&gt;Github Sponsors&lt;/a&gt; &lt;br&gt; &lt;b&gt;4:&lt;/b&gt; &lt;a href=&#34;https://www.patreon.com/zalt&#34;&gt;Patreon&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Sponsoring is an act of giving in a different fashion. ð±&lt;/p&gt; &#xA;&lt;h3&gt;Gold Sponsors&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://kasynohex.com/&#34; target=&#34;_blank&#34; style=&#34;margin-right: 4em&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/laradock/laradock/master/.github/home-page-images/custom-sponsors/PLD.png&#34; height=&#34;75px&#34; alt=&#34;KasynoHEX.com Polska&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://onlinecasinohex.ca/online-casinos/&#34; target=&#34;_blank&#34; style=&#34;margin-right: 4em&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/laradock/laradock/master/.github/home-page-images/custom-sponsors/CA.png&#34; height=&#34;75px&#34; alt=&#34;Online casino list in Canada by OnlineCasinoHEX.ca&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://aussiecasinohex.com/online-pokies/&#34; target=&#34;_blank&#34; style=&#34;margin-right: 4em&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/laradock/laradock/master/.github/home-page-images/custom-sponsors/AU.png&#34; height=&#34;75px&#34; alt=&#34;Online pokies by AussieCasinoHEX.com&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://apiato.io/&#34; target=&#34;_blank&#34; style=&#34;margin-right: 4em&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/laradock/laradock/master/.github/home-page-images/custom-sponsors/apiato.png&#34; height=&#34;75px&#34; alt=&#34;Apiato Build PHP API&#39;s faster&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.bestonlinecasino.com/&#34; target=&#34;_blank&#34; style=&#34;margin-right: 4em&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/laradock/laradock/master/.github/home-page-images/custom-sponsors/bestonlinecasino.jpg&#34; height=&#34;75px&#34; alt=&#34;We thank bestonlinecasino.com for their support&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://casinopilotti.com/&#34; target=&#34;_blank&#34; style=&#34;margin-right: 4em&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/laradock/laradock/master/.github/home-page-images/custom-sponsors/casinopilotti.png&#34; height=&#34;75px&#34; alt=&#34;CasinoPilotti&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/0/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;75px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/1/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;75px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/2/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;75px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/3/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;75px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/4/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;75px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/5/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;75px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/6/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;75px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/7/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;75px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/8/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;75px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/9/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;75px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/10/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;75px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/11/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/11/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;75px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/12/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/12/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;75px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/13/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/13/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;75px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/14/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/14/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;75px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/15/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/gold-sponsors/15/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;75px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Silver Sponsors&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://veepn.com/vpn-apps/vpn-for-chrome/&#34; target=&#34;_blank&#34; style=&#34;margin-right: 4em&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/laradock/laradock/master/.github/home-page-images/custom-sponsors/VeePN.png&#34; height=&#34;65px&#34; alt=&#34;VeePN Chrome extension&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/0/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/1/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/2/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/3/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/4/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/5/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/6/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/7/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/8/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/9/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/10/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/11/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/11/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/12/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/12/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/13/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/13/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/14/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/14/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/15/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/15/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/16/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/16/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/17/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/17/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/18/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/18/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/19/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/19/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/20/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/20/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/21/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/21/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/22/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/22/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/23/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/23/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/24/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/24/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/25/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/silver-sponsors/25/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;65px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Bronze Sponsors&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/0/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/1/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/2/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/3/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/4/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/5/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/6/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/7/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/8/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/9/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/10/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/11/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/11/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/12/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/12/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/13/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/13/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/14/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/14/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/15/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/15/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/16/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/16/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/17/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/17/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/18/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/18/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/19/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/19/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/20/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/20/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/21/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/21/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/22/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/22/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/23/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/23/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/24/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/24/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/25/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/25/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/26/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/26/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/27/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/27/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/28/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/28/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/29/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/29/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/30/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/30/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/31/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/31/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/32/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/32/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/33/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/33/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/34/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/34/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/35/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/35/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/36/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/36/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/37/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/37/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/38/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/38/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/39/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/39/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/40/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/40/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/41/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/41/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/42/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/42/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/43/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/43/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/44/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/44/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/45/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/45/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/46/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/46/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/47/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/47/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/48/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/48/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/49/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/49/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/50/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/50/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/51/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/51/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/52/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/52/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/53/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/53/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/54/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/54/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/55/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/55/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/56/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/56/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/57/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/57/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/58/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/58/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/59/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/laradock/tiers/bronze-sponsors/59/avatar.svg?button=false&amp;amp;isActive=true&#34; height=&#34;55px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can sponsor us using any of the methods below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;1:&lt;/b&gt; Sponsor via &lt;a href=&#34;https://opencollective.com/laradock/&#34;&gt;Open Collective&lt;/a&gt;. &lt;br&gt; &lt;b&gt;2:&lt;/b&gt; Email us at &lt;a href=&#34;mailto: support@laradock.io&#34;&gt;&lt;/a&gt;&lt;a href=&#34;mailto:support@laradock.io&#34;&gt;support@laradock.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Sponsors logos are displayed on the &lt;a href=&#34;https://github.com/laradock/laradock/&#34;&gt;github repository&lt;/a&gt; page and the &lt;a href=&#34;http://laradock.io/&#34;&gt;documentation website&lt;/a&gt; home page.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/laradock/laradock/raw/master/LICENSE&#34;&gt;MIT&lt;/a&gt; Â© Mahmoud Zalt&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>keeganwitt/docker-gradle</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/keeganwitt/docker-gradle</id>
    <link href="https://github.com/keeganwitt/docker-gradle" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker images with Gradle&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;docker-gradle&lt;/h1&gt; &#xA;&lt;h2&gt;Supported tags and respective Dockerfile links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keeganwitt/docker-gradle/raw/master/jdk8/Dockerfile&#34;&gt;jdk8&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keeganwitt/docker-gradle/raw/master/jdk11/Dockerfile&#34;&gt;jdk11&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keeganwitt/docker-gradle/raw/master/jdk11-alpine/Dockerfile&#34;&gt;jdk11-alpine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keeganwitt/docker-gradle/raw/master/jdk17/Dockerfile&#34;&gt;jdk17, latest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keeganwitt/docker-gradle/raw/master/jdk17-alpine/Dockerfile&#34;&gt;jdk17-alpine, alpine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keeganwitt/docker-gradle/raw/master/jdk18/Dockerfile&#34;&gt;jdk18&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keeganwitt/docker-gradle/raw/master/jdk18-alpine/Dockerfile&#34;&gt;jdk18-alpine&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is Gradle?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle&lt;/a&gt; is a build tool with a focus on build automation and support for multi-language development. If you are building, testing, publishing, and deploying software on any platform, Gradle offers a flexible model that can support the entire development lifecycle from compiling and packaging code to publishing web sites. Gradle has been designed to support build automation across multiple languages and platforms including Java, Scala, Android, C/C++, and Groovy, and is closely integrated with development tools and continuous integration servers including Eclipse, IntelliJ, and Jenkins.&lt;/p&gt; &#xA;&lt;h2&gt;How to use this image&lt;/h2&gt; &#xA;&lt;p&gt;If you are mounting a volume and the uid/gid running Docker is not &lt;em&gt;1000&lt;/em&gt;, you should run as user &lt;em&gt;root&lt;/em&gt; (&lt;code&gt;-u root&lt;/code&gt;). &lt;em&gt;root&lt;/em&gt; is also the default, so you can also simply not specify a user.&lt;/p&gt; &#xA;&lt;h3&gt;Building a Gradle project&lt;/h3&gt; &#xA;&lt;p&gt;Run this from the directory of the Gradle project you want to build.&lt;/p&gt; &#xA;&lt;h4&gt;Bash/Zsh&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;docker run --rm -u gradle -v &#34;$PWD&#34;:/home/gradle/project -w /home/gradle/project gradle:latest gradle &amp;lt;gradle-task&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;PowerShell&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;docker run --rm -v &#34;${pwd}:/home/gradle/project&#34; -w /home/gradle/project gradle:latest gradle &amp;lt;gradle-task&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Windows CMD&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;docker run --rm -v &#34;%cd%:/home/gradle/project&#34; -w /home/gradle/project gradle:latest gradle &amp;lt;gradle-task&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note the above command runs using uid/gid 1000 (user &lt;em&gt;gradle&lt;/em&gt;) to avoid running as root.&lt;/p&gt; &#xA;&lt;h3&gt;Reusing the Gradle cache&lt;/h3&gt; &#xA;&lt;p&gt;The local Gradle cache can be reused across containers by creating a volume and mounting it to &lt;em&gt;/home/gradle/.gradle&lt;/em&gt;. Note that sharing between concurrently running containers doesn&#39;t work currently (see &lt;a href=&#34;https://github.com/gradle/gradle/issues/851&#34;&gt;#851&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Also, currently it&#39;s &lt;a href=&#34;https://github.com/moby/moby/issues/3465&#34;&gt;not possible&lt;/a&gt; to override the volume declaration of the parent. So if you are using this image as a base image and want the Gradle cache to be written into the next layer, you will need to use a new user (or use the &lt;code&gt;--gradle-user-home&lt;/code&gt;/&lt;code&gt;-g&lt;/code&gt; argument) so that a new cache is created that isn&#39;t mounted to a volume.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker volume create --name gradle-cache&#xA;docker run --rm -u gradle -v gradle-cache:/home/gradle/.gradle -v &#34;$PWD&#34;:/home/gradle/project -w /home/gradle/project gradle:latest gradle &amp;lt;gradle-task&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Instructions for a new Gradle release&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run &lt;code&gt;update.sh&lt;/code&gt; or &lt;code&gt;update.ps1&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Commit and push the changes.&lt;/li&gt; &#xA; &lt;li&gt;Update &lt;a href=&#34;https://github.com/docker-library/official-images&#34;&gt;official-images&lt;/a&gt; (and &lt;a href=&#34;https://github.com/docker-library/docs&#34;&gt;docs&lt;/a&gt; if appropriate).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/keeganwitt/docker-gradle/actions?query=workflow%3A%22GitHub+CI%22&#34;&gt;&lt;img src=&#34;https://github.com/keeganwitt/docker-gradle/workflows/GitHub%20CI/badge.svg?sanitize=true&#34; alt=&#34;Build status badge&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jessfraz/dockerfiles</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/jessfraz/dockerfiles</id>
    <link href="https://github.com/jessfraz/dockerfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Various Dockerfiles I use on the desktop and on servers.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;dockerfiles&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jessfraz/dockerfiles/actions?query=workflow%3A%22make+test%22+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/jessfraz/dockerfiles/workflows/make%20test/badge.svg?sanitize=true&#34; alt=&#34;make test&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a repo to hold various Dockerfiles for images I create.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;!-- toc --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jessfraz/dockerfiles/master/#about&#34;&gt;About&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jessfraz/dockerfiles/master/#resources&#34;&gt;Resources&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jessfraz/dockerfiles/master/#my-dotfiles&#34;&gt;My dotfiles&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jessfraz/dockerfiles/master/#contributing&#34;&gt;Contributing&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jessfraz/dockerfiles/master/#using-the-makefile&#34;&gt;Using the &lt;code&gt;Makefile&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- tocstop --&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;Almost all of these live on dockerhub under &lt;a href=&#34;https://hub.docker.com/u/jess/&#34;&gt;jess&lt;/a&gt;. Because you cannot use notary with autobuilds on dockerhub I also build these continuously on a private registry at &lt;a href=&#34;https://r.j3ss.co/&#34;&gt;r.j3ss.co&lt;/a&gt; for public download. (You&#39;re welcome.)&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;h3&gt;My dotfiles&lt;/h3&gt; &#xA;&lt;p&gt;You may also want to checkout my &lt;a href=&#34;https://github.com/jessfraz/dotfiles&#34;&gt;dotfiles&lt;/a&gt;, specifically the aliases for all these files which are here: &lt;a href=&#34;https://github.com/jessfraz/dotfiles/raw/master/.dockerfunc&#34;&gt;github.com/jessfraz/dotfiles/blob/master/.dockerfunc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;I try to make sure each Dockerfile has a command at the top to document running it, if a file you are looking at does not have a command, please pull request it!&lt;/p&gt; &#xA;&lt;h3&gt;Using the &lt;code&gt;Makefile&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ make help&#xA;build                          Builds all the dockerfiles in the repository.&#xA;dockerfiles                    Tests the changes to the Dockerfiles build.&#xA;image                          Build a Dockerfile (ex. DIR=telnet).&#xA;latest-versions                Checks all the latest versions of the Dockerfile contents.&#xA;run                            Run a Dockerfile from the command at the top of the file (ex. DIR=telnet).&#xA;shellcheck                     Runs the shellcheck tests on the scripts.&#xA;test                           Runs the tests on the repository.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>hysnsec/awesome-threat-modelling</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/hysnsec/awesome-threat-modelling</id>
    <link href="https://github.com/hysnsec/awesome-threat-modelling" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A curated list of threat modeling resources (Books, courses - free and paid, videos, tools, tutorials and workshops to practice on ) for learning Threat modeling and initial phases of security review.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome Threat Modeling &lt;a href=&#34;https://awesome.re&#34;&gt;&lt;img src=&#34;https://awesome.re/badge.svg?sanitize=true&#34; alt=&#34;Awesome&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.practical-devsecops.com/devsecops-university/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/images/awesome-threat-modelling.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A curated list of threat modeling resources (books, courses - free and paid, videos, tools, tutorials and workshop to practice on) for learning Threat modeling and initial phases of security review.&lt;/p&gt; &#xA;&lt;p&gt;Contributions welcome. Add links through pull requests or create an issue to start a discussion.&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/#fundamentals&#34;&gt;Fundamentals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/#books&#34;&gt;Books&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/#courses&#34;&gt;Courses&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/#videos&#34;&gt;Videos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/#tutorials-and-blogs&#34;&gt;Tutorials and Blogs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/#threat-model-examples&#34;&gt;Threat Model examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/#tools&#34;&gt;Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/#sponsor&#34;&gt;Sponsor&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Fundamentals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.threatmodelingmanifesto.org&#34;&gt;The Threat Modeling Manifesto&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Books&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Books on threat modeling.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.amazon.com/Threat-Modeling-Designing-Adam-Shostack/dp/1118809998&#34;&gt;Threat Modeling: Designing for Security&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.amazon.in/Threat-Modeling-Microsoft-Professional-Swiderski/dp/0735619913&#34;&gt;Threat Modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.amazon.in/Risk-Centric-Threat-Modeling-Simulation/dp/0470500964&#34;&gt;Risk Centric Threat Modeling: Process for Attack Simulation and Threat Analysis&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.oreilly.com/library/view/threat-modeling/9781492056546/&#34;&gt;Threat Modeling: A Practical Guide for Development Teams&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Courses&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Courses/Training videos on threat modeling.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Free&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.coursera.org/lecture/software-security/threat-modeling-or-architectural-risk-analysis-bQAoU&#34;&gt;Threat Modeling, or Architectural Risk Analysis by Coursera&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rhurlbut/CodeMash2019/raw/master/Robert-Hurlbut-CodeMash2019-Threat-Modeling-Workshop-20190108.pdf&#34;&gt;Threat Modeling Workshop by Robert Hurlbut&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/geoffrey-hill-tutamantic/rapid-threat-model-prototyping-docs&#34;&gt;Rapid Threat Model Prototyping (RTMP)&lt;/a&gt; - Methodology to create quick threat models (1) add threat metadata describing the threats and mitigations directly to software diagrams using 11 simple and repeatable steps (2) integrate these steps into Agile workstreams (3) how to best use the outputs of a threat model (Threats &amp;amp; Mitigations)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Paid&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.practical-devsecops.com/certified-devsecops-expert/&#34;&gt;DevSecOps Expert by Practical DevSecOps&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.pluralsight.com/courses/threat-modeling-fundamentals&#34;&gt;Threat Modeling Fundamentals&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.udemy.com/course/cybersec-first-responder-threat-detection-response-cfr210/&#34;&gt;CyberSec First Responder: Threat Detection &amp;amp; Response CFR210&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.lynda.com/Web-Development-tutorials/Learning-Threat-Modeling-Security-Professionals/769294-2.html&#34;&gt;Learning Threat Modeling for Security Professionals&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.lynda.com/IT-tutorials/Threat-Modeling-Spoofing-Depth/769300-2.html?srchtrk=index%3a7%0alinktypeid%3a2%0aq%3athreat+modelling%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2&#34;&gt;Threat Modeling: Spoofing In Depth&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.lynda.com/IT-tutorials/Threat-Modeling-Tampering-Depth/2810167-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3athreat+modelling%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2&#34;&gt;Threat Modeling: Tampering in Depth&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.toreon.com/threatmodeling/&#34;&gt;Threat Modeling or Whiteboard Hacking training&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://learning.oreilly.com/live-events/kubernetes-threat-modeling/0636920055610/0636920059945/&#34;&gt;Kubernetes Threat Modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Videos&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Videos talking about Threat modeling.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=GqmQg-cszw4&#34;&gt;Introduction, Threat Models&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-VokDIHS5XM&#34;&gt;Creating a Threat Model using TMT 2016&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=n8ozucTo810&#34;&gt;Using Threat Modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ZoxHIpzaZ6U&#34;&gt;Threat Modeling in 2019&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=KGy_KCRUGd4&#34;&gt;Threat Modeling Toolkit&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=YTtO_TGV2fU&#34;&gt;Adaptive Threat Modelling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=v8aYNcE1QlI&#34;&gt;Threat modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=VbW-X0j35gw&#34;&gt;Threat Model Every Story: Practical Continuous Threat Modeling Work for Your Team&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=OH2LqzDk2Zg&#34;&gt;Threat Modeling for Secure Software Design&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-dQcg0FDLpk&#34;&gt;Fixing Threat Models with OWASP Efforts&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=6fhEdJ9YcU0&#34;&gt;Designing for Security through Threat Modelling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=J_ksjjUz73s&#34;&gt;Unlocking Threat Modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=iw-FzeKaj48&#34;&gt;An Agile Approach to Threat Modeling for Securing Open Source Project EdgeX Foundry&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=QQ7StGiy_-M&#34;&gt;Threat Modeling 101 (SAFECode On Demand Training Course)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/3LsNx-ljIK8?t=1180&#34;&gt;ISO/SAE 21434 by Example&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=yjvSI755auM&amp;amp;t=5069s&#34;&gt;Introduction to Threat Modeling by Avi Douglen&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ASwZ7cnz-Q4&amp;amp;ab_channel=Auth0&#34;&gt;Look, there&#39;s a threat model in my DevOps&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tutorials and Blogs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Tutorials and blogs that explain threat modeling&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://misti.com/infosec-insider/threat-modeling-what-why-and-how&#34;&gt;Threat Modeling: What, Why, and How?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://insights.sei.cmu.edu/sei_blog/2018/12/threat-modeling-12-available-methods.html&#34;&gt;Threat Modeling: 12 Available Methods&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.dummies.com/programming/certification/security-threat-modeling/&#34;&gt;What Is Security Threat Modeling?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://cheatsheetseries.owasp.org/cheatsheets/Threat_Modeling_Cheat_Sheet.html&#34;&gt;Threat-modeling CheatSheet By Owasp&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://securityintelligence.com/threat-modeling-in-the-enterprise-part-1-understanding-the-basics/&#34;&gt;Threat Modeling in the Enterprise&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://increment.com/security/approachable-threat-modeling/&#34;&gt;Approachable threat modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.slideshare.net/AdamEnglander/threat-modeling-for-dummies-cascadia-php-2018&#34;&gt;Threat Modeling for Dummies&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://medium.com/@brunoamaroalmeida/devsecops-threat-modelling-and-you-get-started-using-the-stride-method-85d143ab86f4&#34;&gt;DevSecOps, Threat Modeling and You: Get started using the STRIDE method&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://devops.com/threat-modeling-the-why-how-when-and-which-tools/&#34;&gt;Threat Modeling: The Why, How, When and Which Tools&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.synopsys.com/content/dam/synopsys/sig-assets/datasheets/threat-modeling-datasheet.pdf&#34;&gt;Threat-modeling datasheet&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://blog.securityinnovation.com/topic/threat-modeling&#34;&gt;Threat Modeling blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.varonis.com/blog/threat-modeling/&#34;&gt;Threat Modeling: 6 Mistakes You are Probably Making&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.threatstack.com/blog/how-to-create-a-threat-model-for-cloud-infrastructure-security&#34;&gt;How to Create a Threat Model for Cloud Infrastructure Security&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://community.arm.com/developer/ip-products/security/b/security-ip-blog/posts/why-you-should-care-about-threat-modelling&#34;&gt;Why You Should Care About Threat Modelling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://nvisium.com/blog/2019/05/30/benefits-of-threat-modeling.html&#34;&gt;Benefits of Threat Modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://resources.sei.cmu.edu/asset_files/WhitePaper/2018_019_001_524597.pdf&#34;&gt;Threat Modeling: a Summary of Available Methods Whitepaper&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://owasp.org/www-pdf-archive/Threat_Modelling_-_STRIDE_Cards_-_TW_Branded.pdf&#34;&gt;Threat Modelling Toolkit&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hackernoon.com/how-to-get-started-with-threat-modeling-before-you-get-hacked-1bf0ea3310df&#34;&gt;How to get started with Threat Modeling, before you get hacked&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/threat-modelling/&#34;&gt;Thread Modeling tutorial&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/threat-modeling-goran-aviani/&#34;&gt;How to analyze the security of your application with threat modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://safecode.org/wp-content/uploads/2017/05/SAFECode_TM_Whitepaper.pdf&#34;&gt;Tactical Threat Modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.lookingglasscyber.com/resources/white-papers/the-power-of-a-tailored-threat-model/&#34;&gt;The Power of a Tailored Threat Model Whitepaper&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://threatmodeler.com/wp-content/uploads/2018/12/7-Easy-Steps-for-Building-a-Scalable-Threat-Modeling-Process-copy.pdf&#34;&gt;7 Easy Steps For Building a Scalable Threat Modeling Process&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://blog.appsecco.com/where-is-my-threat-model-b6f8b077ac47&#34;&gt;Where is my Threat Model?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://diablohorn.com/2019/11/18/secure-slack-bot-an-exercise-in-threat-modeling/&#34;&gt;Secure Slack bot an exercise in threat modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Threat Model examples&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Threat model examples for reference.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc6819&#34;&gt;OAuth 2.0 Threat Model and Security Considerations&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.ssllabs.com/downloads/SSL_Threat_Model.png&#34;&gt;SSL Threat model by Qualys&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.netmeister.org/blog/doh-dot-dnssec.html&#34;&gt;DNS Security: Threat Modeling DNSSEC, DoT, and DoH by Jan Schuamann&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.slideshare.net/NCC_Group/real-world-application-threat-modelling-by-example&#34;&gt;Email Encryption Gateway Threat model by NCC Group&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/OWASP/threat-model-cookbook&#34;&gt;OWASP Threat Model Cookbook&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/sig-security/tree/main/sig-security-external-audit/security-audit-2019/findings&#34;&gt;Kubernetes Threat Model&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Yakindu/YSA-examples&#34;&gt;ISO/SAE 21434 Annex G Example&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tools&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Tools which helps in threat modelling.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Free tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://owasp.org/www-project-threat-dragon/&#34;&gt;OWASP Threat Dragon&lt;/a&gt; - An online threat modelling web application including system diagramming and a rule engine to auto-generate threats/mitigations.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-gb/azure/security/develop/threat-modeling-tool&#34;&gt;Microsoft Threat Modeling Tool&lt;/a&gt; - Microsoft Threat Modeling Tool 2016 is a tool that helps in finding threats in the design phase of software projects.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/appsecco/owasp-threat-dragon-gitlab&#34;&gt;Owasp-threat-dragon-gitlab&lt;/a&gt; - This project is a fork of the original OWASP Threat Dragon web application by Mike Goodwin with Gitlab integration instead of GitHub. You can use it with the Gitlab.com or your own instance of Gitlab.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/devsecops/raindance&#34;&gt;Raindance&lt;/a&gt; - Project intended to make Attack Maps part of software development by reducing the time it takes to complete them.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://threatspec.org/&#34;&gt;Threatspec&lt;/a&gt; - Threatspec is an open source project that aims to close the gap between development and security by bringing the threat modelling process further into the development process.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/izar/pytm&#34;&gt;PyTM&lt;/a&gt; - PyTM is an open source project providing a library for threat modeling with code. Describe your system using OO syntax (object.property = value) and have your threat modeling report automatically generated. 100+ threats currently supported.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mal-lang.org&#34;&gt;MAL&lt;/a&gt; - MAL is an open source project that supports creation of cyber threat modeling systems and attack simulations.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Threagile/threagile&#34;&gt;Threagile&lt;/a&gt; - Threagile is an open-source toolkit for agile threat modeling&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rusakovichma/TicTaaC&#34;&gt;TicTaaC&lt;/a&gt; - Threat modeling-as-a-Code in a Tick (TicTaaC). Lightweight and easy-to-use Threat modeling solution following DevSecOps principles&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dehydr8/elevation-of-privilege&#34;&gt;Threat Modeling Online Game&lt;/a&gt; - Online version of the Elevation of Privilege and Cornucopia card games. The easy way to get started with threat modeling.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rpetrich/deciduous&#34;&gt;Deciduous&lt;/a&gt; - A web app that simplifies building attack decision trees. Hosted at &lt;a href=&#34;https://www.deciduous.app/&#34;&gt;https://www.deciduous.app/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Paid tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://iriusrisk.com/threat-modeling-tool/&#34;&gt;Irius risk&lt;/a&gt; - Iriusrisk is a threat modeling tool with an adaptive questionnaire driven by an expert system which guides the user through straight forward questions about the technical architecture, the planned features and security context of the application.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.securitycompass.com/sdelements/threat-modeling/&#34;&gt;SD elements&lt;/a&gt; - Automate Threat Modeling with SD Elements.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.foreseeti.com/&#34;&gt;Foreseeti&lt;/a&gt; - SecuriCAD Vanguard is an attack simulation and automated threat modeling SaaS service that enables you to automatically simulate attacks on a virtual model of your AWS environment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tutamantic.com&#34;&gt;Tutamen Threat Model system&lt;/a&gt; - This tool allows threat model metadata to be added to any software diagram, turning that diagram into a threat model. It&#39;s simple to use, requires no lock-in license, and is driven by the Common Weakness Enumeration, STRIDE and OWASP Top 10.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.itemis.com/de/yakindu/security-analyst/&#34;&gt;YAKINDU Security Analyst&lt;/a&gt; - YAKINDU Security Analyst is a model-based software tool for threat analysis and risk assessment of technical systems. You can identify your protection needs, analyze possible threats and calculate the resulting risks. The underlying assessment model and calculation logic are highly customizable and can be integrated into existing toolchains.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsor&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/images/practical-devsecops-logo.png&#34; alt=&#34;Practical DevSecOps&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please refer the guidelines at &lt;a href=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/Contributing.md&#34;&gt;contributing.md for details&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vulhub/vulhub</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/vulhub/vulhub</id>
    <link href="https://github.com/vulhub/vulhub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pre-Built Vulnerable Environments Based on Docker-Compose&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/vulhub/vulhub/master/.github/assets/logo.svg?sanitize=true&#34; alt=&#34;Vulhub&#34; height=&#34;300&#34;&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/vulhub/vulhub/raw/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/vulhub/vulhub.svg?sanitize=true&#34; alt=&#34;GitHub&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.wangan.com/vulhub&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Official-Community-blue.svg?sanitize=true&#34; alt=&#34;Official Community&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/GhMB3Z&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/485505185167179778.svg?sanitize=true&#34; alt=&#34;Chat on Discord&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.patreon.com/phith0n&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/sponsor-patreon-73d6a1.svg?sanitize=true&#34; alt=&#34;Backers and sponors on Patreon&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vulhub#backer&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/backer-opencollective-f89a76.svg?sanitize=true&#34; alt=&#34;Backers and sponors on Opencollective&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;Vulhub is an open-source collection of pre-built vulnerable docker environments. No pre-existing knowledge of docker is required, just execute two simple commands and you have a vulnerable environment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vulhub/vulhub/master/README.zh-cn.md&#34;&gt;ä¸­æçæ¬(Chinese version)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the docker/docker-compose on Ubuntu 20.04:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install pip&#xA;curl -s https://bootstrap.pypa.io/get-pip.py | python3&#xA;&#xA;# Install the latest version docker&#xA;curl -s https://get.docker.com/ | sh&#xA;&#xA;# Run docker service&#xA;systemctl start docker&#xA;&#xA;# Install docker compose&#xA;pip install docker-compose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The installation steps of docker and docker-compose for other operating systems might be slightly different, please refer to the &lt;a href=&#34;https://docs.docker.com/&#34;&gt;docker documentation&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Download project&#xA;wget https://github.com/vulhub/vulhub/archive/master.zip -O vulhub-master.zip&#xA;unzip vulhub-master.zip&#xA;cd vulhub-master&#xA;&#xA;# Enter the directory of vulnerability/environment&#xA;cd flask/ssti&#xA;&#xA;# Compile environment&#xA;docker-compose build&#xA;&#xA;# Run environment&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is a &lt;strong&gt;README&lt;/strong&gt; document in each environment directory, please read this file for vulnerability/environment testing and usage.&lt;/p&gt; &#xA;&lt;p&gt;After the test, delete the environment with the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose down -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is recommended to use a VPS of at least 1GB memory to build a vulnerability environment. The &lt;code&gt;your-ip&lt;/code&gt; mentioned in the documentation refers to the IP address of your VPS. If you are using a virtual machine, it refers to your virtual machine IP, not the IP inside the docker container.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;All environments in this project are for testing purposes only and should not be used as a production environment!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Notice&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;To prevent permission errors, it is best to use the root user to execute the docker and docker-compose commands.&lt;/li&gt; &#xA; &lt;li&gt;Some docker images do not support running on ARM machines.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;This project relies on docker. So any error during compilation and running are thrown by docker and related programs. Please find the cause of the error by yourself first. If it is determined that the dockerfile is written incorrectly (or the code is wrong in vulhub), then submit the issue. More details please ð&lt;a href=&#34;https://github.com/phith0n/vulhub/wiki/%E7%BC%96%E8%AF%91%E5%A4%B1%E8%B4%A5%E7%9A%84%E5%8E%9F%E5%9B%A0&#34;&gt;Common reasons for compilation failure&lt;/a&gt;, hope it can help you.&lt;/p&gt; &#xA;&lt;p&gt;For more question, please contact:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.wangan.com/vulhub&#34;&gt;Chinese Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/GhMB3Z&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/vulhub&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks for the following contributors:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vulhub/vulhub/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/vulhub/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;More contributorsï¼&lt;a href=&#34;https://raw.githubusercontent.com/vulhub/vulhub/master/contributors.md&#34;&gt;Contributors List&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Partner&lt;/h2&gt; &#xA;&lt;p&gt;Our Partners and users:&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://www.wangan.com/vulhub&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://vulhub.org/img/sponsor/wangan.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.cvebase.com&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://vulhub.org/img/sponsor/cvebase.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.huoxian.cn&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://vulhub.org/img/sponsor/huoxian.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.chaitin.cn&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://vulhub.org/img/sponsor/chaitin.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://xianzhi.aliyun.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://vulhub.org/img/sponsor/aliyun.svg?sanitize=true&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Sponsor vulhub on patreon ð&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/bePatron?u=12677520&#34;&gt;&lt;img src=&#34;https://vulhub.org/img/sponsor/patreon.png&#34; width=&#34;150&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sponsor vulhub on opencollective ð&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://opencollective.com/vulhub#backer&#34;&gt;&lt;img src=&#34;https://opencollective.com/vulhub/backers.svg?width=138&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vulhub#sponsor&#34;&gt;&lt;img src=&#34;https://opencollective.com/vulhub/sponsors.svg?width=138&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;More &lt;a href=&#34;http://vulhub.org/#/docs/donate/&#34;&gt;Donate&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Vulhub is licensed under the MIT License. See &lt;a href=&#34;https://raw.githubusercontent.com/vulhub/vulhub/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>linuxserver/docker-code-server</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/linuxserver/docker-code-server</id>
    <link href="https://github.com/linuxserver/docker-code-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://linuxserver.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver_medium.png&#34; alt=&#34;linuxserver.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34; title=&#34;all the things you can do with our containers including How-To guides, opinions and much more!&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Blog&#34; alt=&#34;Blog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/YWrKVTn&#34; title=&#34;realtime support / chat with the community and the team.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/354974912613449730.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Discord&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discourse.linuxserver.io&#34; title=&#34;post on our community forum.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/https/discourse.linuxserver.io/topics.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=discourse&#34; alt=&#34;Discourse&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fleet.linuxserver.io&#34; title=&#34;an online web interface which displays all of our maintained images.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Fleet&#34; alt=&#34;Fleet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver&#34; title=&#34;view the source for all of our repositories.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub&amp;amp;logo=github&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/linuxserver&#34; title=&#34;please consider helping us by either donating or contributing to our budget&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/all/linuxserver.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Supporters&amp;amp;logo=open%20collective&#34; alt=&#34;Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://linuxserver.io&#34;&gt;LinuxServer.io&lt;/a&gt; team brings you another container release featuring:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;regular and timely application updates&lt;/li&gt; &#xA; &lt;li&gt;easy user mappings (PGID, PUID)&lt;/li&gt; &#xA; &lt;li&gt;custom base image with s6 overlay&lt;/li&gt; &#xA; &lt;li&gt;weekly base OS updates with common layers across the entire LinuxServer.io ecosystem to minimise space usage, down time and bandwidth&lt;/li&gt; &#xA; &lt;li&gt;regular security updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Find us at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34;&gt;Blog&lt;/a&gt; - all the things you can do with our containers including How-To guides, opinions and much more!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/YWrKVTn&#34;&gt;Discord&lt;/a&gt; - realtime support / chat with the community and the team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discourse.linuxserver.io&#34;&gt;Discourse&lt;/a&gt; - post on our community forum.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fleet.linuxserver.io&#34;&gt;Fleet&lt;/a&gt; - an online web interface which displays all of our maintained images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linuxserver&#34;&gt;GitHub&lt;/a&gt; - view the source for all of our repositories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opencollective.com/linuxserver&#34;&gt;Open Collective&lt;/a&gt; - please consider helping us by either donating or contributing to our budget&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/linuxserver/docker-code-server&#34;&gt;linuxserver/code-server&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scarf.sh/gateway/linuxserver-ci/docker/linuxserver%2Fcode-server&#34;&gt;&lt;img src=&#34;https://scarf.sh/installs-badge/linuxserver-ci/linuxserver%2Fcode-server?color=94398d&amp;amp;label-color=555555&amp;amp;logo-color=ffffff&amp;amp;style=for-the-badge&amp;amp;package-type=docker&#34; alt=&#34;Scarf.io pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-code-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/linuxserver/docker-code-server.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-code-server/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/linuxserver/docker-code-server.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-code-server/packages&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub%20Package&amp;amp;logo=github&#34; alt=&#34;GitHub Package Repository&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitlab.com/linuxserver.io/docker-code-server/container_registry&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitLab%20Registry&amp;amp;logo=gitlab&#34; alt=&#34;GitLab Container Registry&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/linuxserver.io/code-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Quay.io&#34; alt=&#34;Quay.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/code-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/linuxserver/code-server.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/code-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/linuxserver/code-server.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=stars&amp;amp;logo=docker&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.linuxserver.io/job/Docker-Pipeline-Builders/job/docker-code-server/job/master/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build?labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;jobUrl=https%3A%2F%2Fci.linuxserver.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-code-server%2Fjob%2Fmaster%2F&amp;amp;logo=jenkins&#34; alt=&#34;Jenkins Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci-tests.linuxserver.io/linuxserver/code-server/latest/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=CI&amp;amp;query=CI&amp;amp;url=https%3A%2F%2Fci-tests.linuxserver.io%2Flinuxserver%2Fcode-server%2Flatest%2Fci-status.yml&#34; alt=&#34;LSIO CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://coder.com&#34;&gt;Code-server&lt;/a&gt; is VS Code running on a remote server, accessible through the browser.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Code on your Chromebook, tablet, and laptop with a consistent dev environment.&lt;/li&gt; &#xA; &lt;li&gt;If you have a Windows or Mac workstation, more easily develop for Linux.&lt;/li&gt; &#xA; &lt;li&gt;Take advantage of large cloud servers to speed up tests, compilations, downloads, and more.&lt;/li&gt; &#xA; &lt;li&gt;Preserve battery life when you&#39;re on the go.&lt;/li&gt; &#xA; &lt;li&gt;All intensive computation runs on your server.&lt;/li&gt; &#xA; &lt;li&gt;You&#39;re no longer running excess instances of Chrome.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://coder.com&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/code-server-banner.png&#34; alt=&#34;code-server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Architectures&lt;/h2&gt; &#xA;&lt;p&gt;We utilise the docker manifest for multi-platform awareness. More information is available from docker &lt;a href=&#34;https://github.com/docker/distribution/raw/master/docs/spec/manifest-v2-2.md#manifest-list&#34;&gt;here&lt;/a&gt; and our announcement &lt;a href=&#34;https://blog.linuxserver.io/2019/02/21/the-lsio-pipeline-project/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Simply pulling &lt;code&gt;lscr.io/linuxserver/code-server:latest&lt;/code&gt; should retrieve the correct image for your arch, but you can also pull specific arch images via tags.&lt;/p&gt; &#xA;&lt;p&gt;The architectures supported by this image are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Tag&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86-64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;â&lt;/td&gt; &#xA;   &lt;td&gt;amd64-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arm64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;â&lt;/td&gt; &#xA;   &lt;td&gt;arm64v8-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;armhf&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;â&lt;/td&gt; &#xA;   &lt;td&gt;arm32v7-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Version Tags&lt;/h2&gt; &#xA;&lt;p&gt;This image provides various versions that are available via tags. Please read the descriptions carefully and exercise caution when using unstable or development tags.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tag&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;latest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;â&lt;/td&gt; &#xA;   &lt;td&gt;Stable releases&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;focal&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;â&lt;/td&gt; &#xA;   &lt;td&gt;DEPRECATED (no longer updated, &lt;code&gt;latest&lt;/code&gt; is rebased on focal) - Stable releases, based on Ubuntu Focal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;development&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;â&lt;/td&gt; &#xA;   &lt;td&gt;DEPRECATED (no longer updated) - Prereleases from their GitHub&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Application Setup&lt;/h2&gt; &#xA;&lt;p&gt;Access the webui at &lt;code&gt;http://&amp;lt;your-ip&amp;gt;:8443&lt;/code&gt;. For github integration, drop your ssh key in to &lt;code&gt;/config/.ssh&lt;/code&gt;. Then open a terminal from the top menu and set your github username and email via the following commands&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git config --global user.name &#34;username&#34;&#xA;git config --global user.email &#34;email address&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Hashed code-server password&lt;/h3&gt; &#xA;&lt;p&gt;How to create the &lt;a href=&#34;https://github.com/cdr/code-server/raw/master/docs/FAQ.md#can-i-store-my-password-hashed&#34;&gt;hashed password&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Here are some example snippets to help you get started creating a container.&lt;/p&gt; &#xA;&lt;h3&gt;docker-compose (recommended, &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;version: &#34;2.1&#34;&#xA;services:&#xA;  code-server:&#xA;    image: lscr.io/linuxserver/code-server:latest&#xA;    container_name: code-server&#xA;    environment:&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      - TZ=Europe/London&#xA;      - PASSWORD=password #optional&#xA;      - HASHED_PASSWORD= #optional&#xA;      - SUDO_PASSWORD=password #optional&#xA;      - SUDO_PASSWORD_HASH= #optional&#xA;      - PROXY_DOMAIN=code-server.my.domain #optional&#xA;      - DEFAULT_WORKSPACE=/config/workspace #optional&#xA;    volumes:&#xA;      - /path/to/appdata/config:/config&#xA;    ports:&#xA;      - 8443:8443&#xA;    restart: unless-stopped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;docker cli (&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/cli/&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name=code-server \&#xA;  -e PUID=1000 \&#xA;  -e PGID=1000 \&#xA;  -e TZ=Europe/London \&#xA;  -e PASSWORD=password `#optional` \&#xA;  -e HASHED_PASSWORD= `#optional` \&#xA;  -e SUDO_PASSWORD=password `#optional` \&#xA;  -e SUDO_PASSWORD_HASH= `#optional` \&#xA;  -e PROXY_DOMAIN=code-server.my.domain `#optional` \&#xA;  -e DEFAULT_WORKSPACE=/config/workspace `#optional` \&#xA;  -p 8443:8443 \&#xA;  -v /path/to/appdata/config:/config \&#xA;  --restart unless-stopped \&#xA;  lscr.io/linuxserver/code-server:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Parameters&lt;/h2&gt; &#xA;&lt;p&gt;Container images are configured using parameters passed at runtime (such as those above). These parameters are separated by a colon and indicate &lt;code&gt;&amp;lt;external&amp;gt;:&amp;lt;internal&amp;gt;&lt;/code&gt; respectively. For example, &lt;code&gt;-p 8080:80&lt;/code&gt; would expose port &lt;code&gt;80&lt;/code&gt; from inside the container to be accessible from the host&#39;s IP on port &lt;code&gt;8080&lt;/code&gt; outside the container.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 8443&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;web gui&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PUID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for UserID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PGID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for GroupID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e TZ=Europe/London&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a timezone to use EG Europe/London&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PASSWORD=password&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optional web gui password, if &lt;code&gt;PASSWORD&lt;/code&gt; or &lt;code&gt;HASHED_PASSWORD&lt;/code&gt; is not provided, there will be no auth.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e HASHED_PASSWORD=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optional web gui password, overrides &lt;code&gt;PASSWORD&lt;/code&gt;, instructions on how to create it is below.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e SUDO_PASSWORD=password&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If this optional variable is set, user will have sudo access in the code-server terminal with the specified password.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e SUDO_PASSWORD_HASH=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optionally set sudo password via hash (takes priority over &lt;code&gt;SUDO_PASSWORD&lt;/code&gt; var). Format is &lt;code&gt;$type$salt$hashed&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PROXY_DOMAIN=code-server.my.domain&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If this optional variable is set, this domain will be proxied for subdomain proxying. See &lt;a href=&#34;https://github.com/cdr/code-server/raw/master/docs/FAQ.md#sub-domains&#34;&gt;Documentation&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DEFAULT_WORKSPACE=/config/workspace&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If this optional variable is set, code-server will open this directory by default&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Contains all relevant configuration files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Environment variables from files (Docker secrets)&lt;/h2&gt; &#xA;&lt;p&gt;You can set any environment variable from a file by using a special prepend &lt;code&gt;FILE__&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;-e FILE__PASSWORD=/run/secrets/mysecretpassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will set the environment variable &lt;code&gt;PASSWORD&lt;/code&gt; based on the contents of the &lt;code&gt;/run/secrets/mysecretpassword&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Umask for running applications&lt;/h2&gt; &#xA;&lt;p&gt;For all of our images we provide the ability to override the default umask settings for services started within the containers using the optional &lt;code&gt;-e UMASK=022&lt;/code&gt; setting. Keep in mind umask is not chmod it subtracts from permissions based on it&#39;s value it does not add. Please read up &lt;a href=&#34;https://en.wikipedia.org/wiki/Umask&#34;&gt;here&lt;/a&gt; before asking for support.&lt;/p&gt; &#xA;&lt;h2&gt;User / Group Identifiers&lt;/h2&gt; &#xA;&lt;p&gt;When using volumes (&lt;code&gt;-v&lt;/code&gt; flags) permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user &lt;code&gt;PUID&lt;/code&gt; and group &lt;code&gt;PGID&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ensure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.&lt;/p&gt; &#xA;&lt;p&gt;In this instance &lt;code&gt;PUID=1000&lt;/code&gt; and &lt;code&gt;PGID=1000&lt;/code&gt;, to find yours use &lt;code&gt;id user&lt;/code&gt; as below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ id username&#xA;    uid=1000(dockeruser) gid=1000(dockergroup) groups=1000(dockergroup)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Mods&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mods.linuxserver.io/?mod=code-server&#34; title=&#34;view available mods for this container.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=code-server&amp;amp;query=%24.mods%5B%27code-server%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Mods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mods.linuxserver.io/?mod=universal&#34; title=&#34;view available universal mods.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=universal&amp;amp;query=%24.mods%5B%27universal%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Universal Mods&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We publish various &lt;a href=&#34;https://github.com/linuxserver/docker-mods&#34;&gt;Docker Mods&lt;/a&gt; to enable additional functionality within the containers. The list of Mods available for this image (if any) as well as universal mods that can be applied to any one of our images can be accessed via the dynamic badges above.&lt;/p&gt; &#xA;&lt;h2&gt;Support Info&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shell access whilst the container is running: &lt;code&gt;docker exec -it code-server /bin/bash&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To monitor the logs of the container in realtime: &lt;code&gt;docker logs -f code-server&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;container version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; code-server&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;image version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; lscr.io/linuxserver/code-server:latest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updating Info&lt;/h2&gt; &#xA;&lt;p&gt;Most of our images are static, versioned, and require an image update and container recreation to update the app inside. With some exceptions (ie. nextcloud, plex), we do not recommend or support updating apps inside the container. Please consult the &lt;a href=&#34;https://raw.githubusercontent.com/linuxserver/docker-code-server/master/#application-setup&#34;&gt;Application Setup&lt;/a&gt; section above to see if it is recommended for the image.&lt;/p&gt; &#xA;&lt;p&gt;Below are the instructions for updating containers:&lt;/p&gt; &#xA;&lt;h3&gt;Via Docker Compose&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update all images: &lt;code&gt;docker-compose pull&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single image: &lt;code&gt;docker-compose pull code-server&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Let compose update all containers as necessary: &lt;code&gt;docker-compose up -d&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single container: &lt;code&gt;docker-compose up -d code-server&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Docker Run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update the image: &lt;code&gt;docker pull lscr.io/linuxserver/code-server:latest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stop the running container: &lt;code&gt;docker stop code-server&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Delete the container: &lt;code&gt;docker rm code-server&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your &lt;code&gt;/config&lt;/code&gt; folder and settings will be preserved)&lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Watchtower auto-updater (only use if you don&#39;t remember the original parameters)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pull the latest image at its tag and replace it with the same env variables in one run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm \&#xA;-v /var/run/docker.sock:/var/run/docker.sock \&#xA;containrrr/watchtower \&#xA;--run-once code-server&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We do not endorse the use of Watchtower as a solution to automated updates of existing Docker containers. In fact we generally discourage automated updates. However, this is a useful tool for one-time manual updates of containers where you have forgotten the original parameters. In the long term, we highly recommend using &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;Docker Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Image Update Notifications - Diun (Docker Image Update Notifier)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We recommend &lt;a href=&#34;https://crazymax.dev/diun/&#34;&gt;Diun&lt;/a&gt; for update notifications. Other tools that automatically update containers unattended are not recommended or supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building locally&lt;/h2&gt; &#xA;&lt;p&gt;If you want to make local modifications to these images for development purposes or just to customize the logic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/linuxserver/docker-code-server.git&#xA;cd docker-code-server&#xA;docker build \&#xA;  --no-cache \&#xA;  --pull \&#xA;  -t lscr.io/linuxserver/code-server:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ARM variants can be built on x86_64 hardware using &lt;code&gt;multiarch/qemu-user-static&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --privileged multiarch/qemu-user-static:register --reset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once registered you can define the dockerfile to use with &lt;code&gt;-f Dockerfile.aarch64&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.02.22:&lt;/strong&gt; - Install using the official tarballs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.12.21:&lt;/strong&gt; - Add &lt;code&gt;install-extension&lt;/code&gt; as a helper for mods to install extensions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;06.12.21:&lt;/strong&gt; - Add &lt;code&gt;DEFAULT_WORKSPACE&lt;/code&gt; env var.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.11.21:&lt;/strong&gt; - Rebase to Ubuntu focal.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16.09.21:&lt;/strong&gt; - Fix slow &lt;code&gt;chown&lt;/code&gt; on large workspace (contents of workspace folder no longer chowned).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;11.07.21:&lt;/strong&gt; - Bump node to 14 to fix builds&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;08.05.21:&lt;/strong&gt; - Fix doc link&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;04.02.20:&lt;/strong&gt; - Allow setting gui password via hash using env var &lt;code&gt;HASHED_PASSWORD&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.12.20:&lt;/strong&gt; - Allow setting sudo password via hash using env var &lt;code&gt;SUDO_PASSWORD_HASH&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.05.20:&lt;/strong&gt; - Add --domain-proxy support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;21.05.20:&lt;/strong&gt; - Shrink images, install via yarn, fix arm32v7 build.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;18.05.20:&lt;/strong&gt; - Switch to multi-arch images, install via npm.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.04.20:&lt;/strong&gt; - Update start arguments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.04.20:&lt;/strong&gt; - Structural changes required for v3.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;17.01.20:&lt;/strong&gt; - Fix artifact url retrieval from github.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;24.10.19:&lt;/strong&gt; - Upgrade to v2 builds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;28.09.19:&lt;/strong&gt; - Update project logo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;21.09.19:&lt;/strong&gt; - Add development builds/tag.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.07.19:&lt;/strong&gt; - Add optional sudo access.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.07.19:&lt;/strong&gt; - Add nano.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;24.06.19:&lt;/strong&gt; - Initial Release.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>linuxserver/docker-wireguard</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/linuxserver/docker-wireguard</id>
    <link href="https://github.com/linuxserver/docker-wireguard" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://linuxserver.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver_medium.png&#34; alt=&#34;linuxserver.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34; title=&#34;all the things you can do with our containers including How-To guides, opinions and much more!&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Blog&#34; alt=&#34;Blog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/YWrKVTn&#34; title=&#34;realtime support / chat with the community and the team.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/354974912613449730.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Discord&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discourse.linuxserver.io&#34; title=&#34;post on our community forum.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/https/discourse.linuxserver.io/topics.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=discourse&#34; alt=&#34;Discourse&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fleet.linuxserver.io&#34; title=&#34;an online web interface which displays all of our maintained images.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Fleet&#34; alt=&#34;Fleet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver&#34; title=&#34;view the source for all of our repositories.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub&amp;amp;logo=github&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/linuxserver&#34; title=&#34;please consider helping us by either donating or contributing to our budget&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/all/linuxserver.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Supporters&amp;amp;logo=open%20collective&#34; alt=&#34;Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://linuxserver.io&#34;&gt;LinuxServer.io&lt;/a&gt; team brings you another container release featuring:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;regular and timely application updates&lt;/li&gt; &#xA; &lt;li&gt;easy user mappings (PGID, PUID)&lt;/li&gt; &#xA; &lt;li&gt;custom base image with s6 overlay&lt;/li&gt; &#xA; &lt;li&gt;weekly base OS updates with common layers across the entire LinuxServer.io ecosystem to minimise space usage, down time and bandwidth&lt;/li&gt; &#xA; &lt;li&gt;regular security updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Find us at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34;&gt;Blog&lt;/a&gt; - all the things you can do with our containers including How-To guides, opinions and much more!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/YWrKVTn&#34;&gt;Discord&lt;/a&gt; - realtime support / chat with the community and the team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discourse.linuxserver.io&#34;&gt;Discourse&lt;/a&gt; - post on our community forum.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fleet.linuxserver.io&#34;&gt;Fleet&lt;/a&gt; - an online web interface which displays all of our maintained images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linuxserver&#34;&gt;GitHub&lt;/a&gt; - view the source for all of our repositories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opencollective.com/linuxserver&#34;&gt;Open Collective&lt;/a&gt; - please consider helping us by either donating or contributing to our budget&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/linuxserver/docker-wireguard&#34;&gt;linuxserver/wireguard&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scarf.sh/gateway/linuxserver-ci/docker/linuxserver%2Fwireguard&#34;&gt;&lt;img src=&#34;https://scarf.sh/installs-badge/linuxserver-ci/linuxserver%2Fwireguard?color=94398d&amp;amp;label-color=555555&amp;amp;logo-color=ffffff&amp;amp;style=for-the-badge&amp;amp;package-type=docker&#34; alt=&#34;Scarf.io pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-wireguard&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/linuxserver/docker-wireguard.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-wireguard/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/linuxserver/docker-wireguard.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-wireguard/packages&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub%20Package&amp;amp;logo=github&#34; alt=&#34;GitHub Package Repository&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitlab.com/linuxserver.io/docker-wireguard/container_registry&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitLab%20Registry&amp;amp;logo=gitlab&#34; alt=&#34;GitLab Container Registry&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/linuxserver.io/wireguard&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Quay.io&#34; alt=&#34;Quay.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/wireguard&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/linuxserver/wireguard.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/wireguard&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/linuxserver/wireguard.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=stars&amp;amp;logo=docker&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.linuxserver.io/job/Docker-Pipeline-Builders/job/docker-wireguard/job/master/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build?labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;jobUrl=https%3A%2F%2Fci.linuxserver.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-wireguard%2Fjob%2Fmaster%2F&amp;amp;logo=jenkins&#34; alt=&#34;Jenkins Build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.wireguard.com/&#34;&gt;WireGuardÂ®&lt;/a&gt; is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.wireguard.com/&#34;&gt;&lt;img src=&#34;https://www.wireguard.com/img/wireguard.svg?sanitize=true&#34; alt=&#34;wireguard&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Architectures&lt;/h2&gt; &#xA;&lt;p&gt;We utilise the docker manifest for multi-platform awareness. More information is available from docker &lt;a href=&#34;https://github.com/docker/distribution/raw/master/docs/spec/manifest-v2-2.md#manifest-list&#34;&gt;here&lt;/a&gt; and our announcement &lt;a href=&#34;https://blog.linuxserver.io/2019/02/21/the-lsio-pipeline-project/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Simply pulling &lt;code&gt;lscr.io/linuxserver/wireguard:latest&lt;/code&gt; should retrieve the correct image for your arch, but you can also pull specific arch images via tags.&lt;/p&gt; &#xA;&lt;p&gt;The architectures supported by this image are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Tag&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86-64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;â&lt;/td&gt; &#xA;   &lt;td&gt;amd64-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arm64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;â&lt;/td&gt; &#xA;   &lt;td&gt;arm64v8-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;armhf&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;â&lt;/td&gt; &#xA;   &lt;td&gt;arm32v7-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Application Setup&lt;/h2&gt; &#xA;&lt;p&gt;During container start, it will first check if the wireguard module is already installed and loaded. Kernels newer than 5.6 generally have the wireguard module built-in (along with some older custom kernels). However, the module may not be enabled. Make sure it is enabled prior to starting the container.&lt;/p&gt; &#xA;&lt;p&gt;If the kernel is not built-in, or installed on host, the container will check if the kernel headers are present (in &lt;code&gt;/usr/src&lt;/code&gt;) and if not, it will attempt to download the necessary kernel headers from the &lt;code&gt;ubuntu xenial/bionic&lt;/code&gt;, &lt;code&gt;debian/raspbian buster&lt;/code&gt; repos; then will attempt to compile and install the kernel module. If the kernel headers are not found in either &lt;code&gt;usr/src&lt;/code&gt; or in the repos mentioned, container will sleep indefinitely as wireguard cannot be installed.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re on a debian/ubuntu based host with a custom or downstream distro provided kernel (ie. Pop!_OS), the container won&#39;t be able to install the kernel headers from the regular ubuntu and debian repos. In those cases, you can try installing the headers on the host via &lt;code&gt;sudo apt install linux-headers-$(uname -r)&lt;/code&gt; (if distro version) and then add a volume mapping for &lt;code&gt;/usr/src:/usr/src&lt;/code&gt;, or if custom built, map the location of the existing headers to allow the container to use host installed headers to build the kernel module (tested successful on Pop!_OS, ymmv).&lt;/p&gt; &#xA;&lt;p&gt;With regards to arm32/64 devices, Raspberry Pi 2-4 running the &lt;a href=&#34;https://ubuntu.com/download/raspberry-pi&#34;&gt;official ubuntu images&lt;/a&gt; or Raspbian Buster are supported out of the box. For all other devices and OSes, you can try installing the kernel headers on the host, and mapping &lt;code&gt;/usr/src:/usr/src&lt;/code&gt; and it may just work (no guarantees).&lt;/p&gt; &#xA;&lt;p&gt;This can be run as a server or a client, based on the parameters used.&lt;/p&gt; &#xA;&lt;h2&gt;Server Mode&lt;/h2&gt; &#xA;&lt;p&gt;If the environment variable &lt;code&gt;PEERS&lt;/code&gt; is set to a number or a list of strings separated by comma, the container will run in server mode and the necessary server and peer/client confs will be generated. The peer/client config qr codes will be output in the docker log. They will also be saved in text and png format under &lt;code&gt;/config/peerX&lt;/code&gt; in case &lt;code&gt;PEERS&lt;/code&gt; is a variable and an integer or &lt;code&gt;/config/peer_X&lt;/code&gt; in case a list of names was provided instead of an integer.&lt;/p&gt; &#xA;&lt;p&gt;Variables &lt;code&gt;SERVERURL&lt;/code&gt;, &lt;code&gt;SERVERPORT&lt;/code&gt;, &lt;code&gt;INTERNAL_SUBNET&lt;/code&gt; and &lt;code&gt;PEERDNS&lt;/code&gt; are optional variables used for server mode. Any changes to these environment variables will trigger regeneration of server and peer confs. Peer/client confs will be recreated with existing private/public keys. Delete the peer folders for the keys to be recreated along with the confs.&lt;/p&gt; &#xA;&lt;p&gt;To add more peers/clients later on, you increment the &lt;code&gt;PEERS&lt;/code&gt; environment variable or add more elements to the list and recreate the container.&lt;/p&gt; &#xA;&lt;p&gt;To display the QR codes of active peers again, you can use the following command and list the peer numbers as arguments: &lt;code&gt;docker exec -it wireguard /app/show-peer 1 4 5&lt;/code&gt; or &lt;code&gt;docker exec -it wireguard /app/show-peer myPC myPhone myTablet&lt;/code&gt; (Keep in mind that the QR codes are also stored as PNGs in the config folder).&lt;/p&gt; &#xA;&lt;p&gt;The templates used for server and peer confs are saved under &lt;code&gt;/config/templates&lt;/code&gt;. Advanced users can modify these templates and force conf generation by deleting &lt;code&gt;/config/wg0.conf&lt;/code&gt; and restarting the container.&lt;/p&gt; &#xA;&lt;h2&gt;Client Mode&lt;/h2&gt; &#xA;&lt;p&gt;Do not set the &lt;code&gt;PEERS&lt;/code&gt; environment variable. Drop your client conf into the config folder as &lt;code&gt;/config/wg0.conf&lt;/code&gt; and start the container.&lt;/p&gt; &#xA;&lt;p&gt;If you get IPv6 related errors in the log and connection cannot be established, edit the &lt;code&gt;AllowedIPs&lt;/code&gt; line in your peer/client wg0.conf to include only &lt;code&gt;0.0.0.0/0&lt;/code&gt; and not &lt;code&gt;::/0&lt;/code&gt;; and restart the container.&lt;/p&gt; &#xA;&lt;h2&gt;Road warriors, roaming and returning home&lt;/h2&gt; &#xA;&lt;p&gt;If you plan to use Wireguard both remotely and locally, say on your mobile phone, you will need to consider routing. Most firewalls will not route ports forwarded on your WAN interface correctly to the LAN out of the box. This means that when you return home, even though you can see the Wireguard server, the return packets will probably get lost.&lt;/p&gt; &#xA;&lt;p&gt;This is not a Wireguard specific issue and the two generally accepted solutions are NAT reflection (setting your edge router/firewall up in such a way as it translates internal packets correctly) or split horizon DNS (setting your internal DNS to return the private rather than public IP when connecting locally).&lt;/p&gt; &#xA;&lt;p&gt;Both of these approaches have positives and negatives however their setup is out of scope for this document as everyone&#39;s network layout and equipment will be different.&lt;/p&gt; &#xA;&lt;h2&gt;Maintaining local access to attached services&lt;/h2&gt; &#xA;&lt;p&gt;** Note: This is not a supported configuration by Linuxserver.io - use at your own risk.&lt;/p&gt; &#xA;&lt;p&gt;When routing via Wireguard from another container using the &lt;code&gt;service&lt;/code&gt; option in docker, you might lose access to the containers webUI locally. To avoid this, exclude the docker subnet from being routed via Wireguard by modifying your &lt;code&gt;wg0.conf&lt;/code&gt; like so (modifying the subnets as you require):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Interface]&#xA;PrivateKey = &amp;lt;private key&amp;gt;&#xA;Address = 9.8.7.6/32&#xA;DNS = 8.8.8.8&#xA;PostUp = DROUTE=$(ip route | grep default | awk &#39;{print $3}&#39;); HOMENET=192.168.0.0/16; HOMENET2=10.0.0.0/8; HOMENET3=172.16.0.0/12; ip route add $HOMENET3 via $DROUTE;ip route add $HOMENET2 via $DROUTE; ip route add $HOMENET via $DROUTE;iptables -I OUTPUT -d $HOMENET -j ACCEPT;iptables -A OUTPUT -d $HOMENET2 -j ACCEPT; iptables -A OUTPUT -d $HOMENET3 -j ACCEPT;  iptables -A OUTPUT ! -o %i -m mark ! --mark $(wg show %i fwmark) -m addrtype ! --dst-type LOCAL -j REJECT&#xA;PreDown = HOMENET=192.168.0.0/16; HOMENET2=10.0.0.0/8; HOMENET3=172.16.0.0/12; ip route del $HOMENET3 via $DROUTE;ip route del $HOMENET2 via $DROUTE; ip route del $HOMENET via $DROUTE; iptables -D OUTPUT ! -o %i -m mark ! --mark $(wg show %i fwmark) -m addrtype ! --dst-type LOCAL -j REJECT; iptables -D OUTPUT -d $HOMENET -j ACCEPT; iptables -D OUTPUT -d $HOMENET2 -j ACCEPT; iptables -D OUTPUT -d $HOMENET3 -j ACCEPT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Site-to-site VPN&lt;/h2&gt; &#xA;&lt;p&gt;** Note: This is not a supported configuration by Linuxserver.io - use at your own risk.&lt;/p&gt; &#xA;&lt;p&gt;Site-to-site VPN in server mode requires customizing the &lt;code&gt;AllowedIPs&lt;/code&gt; statement for a specific peer in &lt;code&gt;wg0.conf&lt;/code&gt;. Since &lt;code&gt;wg0.conf&lt;/code&gt; is autogenerated when server vars are changed, it is not recommended to edit it manually.&lt;/p&gt; &#xA;&lt;p&gt;In order to customize the &lt;code&gt;AllowedIPs&lt;/code&gt; statement for a specific peer in &lt;code&gt;wg0.conf&lt;/code&gt;, you can set an env var &lt;code&gt;SERVER_ALLOWEDIPS_PEER_&amp;lt;peer name or number&amp;gt;&lt;/code&gt; to the additional subnets you&#39;d like to add, comma separated and excluding the peer IP (ie. &lt;code&gt;&#34;192.168.1.0/24,192.168.2.0/24&#34;&lt;/code&gt;). Replace &lt;code&gt;&amp;lt;peer name or number&amp;gt;&lt;/code&gt; with either the name or number of a peer (whichever is used in the &lt;code&gt;PEERS&lt;/code&gt; var).&lt;/p&gt; &#xA;&lt;p&gt;For instance &lt;code&gt;SERVER_ALLOWEDIPS_PEER_laptop=&#34;192.168.1.0/24,192.168.2.0/24&#34;&lt;/code&gt; will result in the wg0.conf entry &lt;code&gt;AllowedIPs = 10.13.13.2,192.168.1.0/24,192.168.2.0/24&lt;/code&gt; for the peer named &lt;code&gt;laptop&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Keep in mind that this var will only be considered when the confs are regenerated. Adding this var for an existing peer won&#39;t force a regeneration. You can delete wg0.conf and restart the container to force regeneration if necessary.&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t forget to set the necessary POSTUP and POSTDOWN rules in your client&#39;s peer conf for lan access.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Here are some example snippets to help you get started creating a container.&lt;/p&gt; &#xA;&lt;h3&gt;docker-compose (recommended, &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;version: &#34;2.1&#34;&#xA;services:&#xA;  wireguard:&#xA;    image: lscr.io/linuxserver/wireguard:latest&#xA;    container_name: wireguard&#xA;    cap_add:&#xA;      - NET_ADMIN&#xA;      - SYS_MODULE&#xA;    environment:&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      - TZ=Europe/London&#xA;      - SERVERURL=wireguard.domain.com #optional&#xA;      - SERVERPORT=51820 #optional&#xA;      - PEERS=1 #optional&#xA;      - PEERDNS=auto #optional&#xA;      - INTERNAL_SUBNET=10.13.13.0 #optional&#xA;      - ALLOWEDIPS=0.0.0.0/0 #optional&#xA;      - LOG_CONFS=true #optional&#xA;    volumes:&#xA;      - /path/to/appdata/config:/config&#xA;      - /lib/modules:/lib/modules&#xA;    ports:&#xA;      - 51820:51820/udp&#xA;    sysctls:&#xA;      - net.ipv4.conf.all.src_valid_mark=1&#xA;    restart: unless-stopped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;docker cli (&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/cli/&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name=wireguard \&#xA;  --cap-add=NET_ADMIN \&#xA;  --cap-add=SYS_MODULE \&#xA;  -e PUID=1000 \&#xA;  -e PGID=1000 \&#xA;  -e TZ=Europe/London \&#xA;  -e SERVERURL=wireguard.domain.com `#optional` \&#xA;  -e SERVERPORT=51820 `#optional` \&#xA;  -e PEERS=1 `#optional` \&#xA;  -e PEERDNS=auto `#optional` \&#xA;  -e INTERNAL_SUBNET=10.13.13.0 `#optional` \&#xA;  -e ALLOWEDIPS=0.0.0.0/0 `#optional` \&#xA;  -e LOG_CONFS=true `#optional` \&#xA;  -p 51820:51820/udp \&#xA;  -v /path/to/appdata/config:/config \&#xA;  -v /lib/modules:/lib/modules \&#xA;  --sysctl=&#34;net.ipv4.conf.all.src_valid_mark=1&#34; \&#xA;  --restart unless-stopped \&#xA;  lscr.io/linuxserver/wireguard:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Parameters&lt;/h2&gt; &#xA;&lt;p&gt;Container images are configured using parameters passed at runtime (such as those above). These parameters are separated by a colon and indicate &lt;code&gt;&amp;lt;external&amp;gt;:&amp;lt;internal&amp;gt;&lt;/code&gt; respectively. For example, &lt;code&gt;-p 8080:80&lt;/code&gt; would expose port &lt;code&gt;80&lt;/code&gt; from inside the container to be accessible from the host&#39;s IP on port &lt;code&gt;8080&lt;/code&gt; outside the container.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 51820/udp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;wireguard port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PUID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for UserID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PGID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for GroupID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e TZ=Europe/London&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a timezone to use EG Europe/London&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e SERVERURL=wireguard.domain.com&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;External IP or domain name for docker host. Used in server mode. If set to &lt;code&gt;auto&lt;/code&gt;, the container will try to determine and set the external IP automatically&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e SERVERPORT=51820&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;External port for docker host. Used in server mode.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PEERS=1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Number of peers to create confs for. Required for server mode. Can also be a list of names: &lt;code&gt;myPC,myPhone,myTablet&lt;/code&gt; (alphanumeric only)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PEERDNS=auto&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;DNS server set in peer/client configs (can be set as &lt;code&gt;8.8.8.8&lt;/code&gt;). Used in server mode. Defaults to &lt;code&gt;auto&lt;/code&gt;, which uses wireguard docker host&#39;s DNS via included CoreDNS forward.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e INTERNAL_SUBNET=10.13.13.0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Internal subnet for the wireguard and server and peers (only change if it clashes). Used in server mode.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e ALLOWEDIPS=0.0.0.0/0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The IPs/Ranges that the peers will be able to reach using the VPN connection. If not specified the default value is: &#39;0.0.0.0/0, ::0/0&#39; This will cause ALL traffic to route through the VPN, if you want split tunneling, set this to only the IPs you would like to use the tunnel AND the ip of the server&#39;s WG ip, such as 10.13.13.1.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e LOG_CONFS=true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Generated QR codes will be displayed in the docker log. Set to &lt;code&gt;false&lt;/code&gt; to skip log output.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Contains all relevant configuration files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /lib/modules&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Maps host&#39;s modules folder.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--sysctl=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Required for client mode.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Portainer notice&lt;/h3&gt; &#xA;&lt;p&gt;This image utilises &lt;code&gt;cap_add&lt;/code&gt; or &lt;code&gt;sysctl&lt;/code&gt; to work properly. This is not implemented properly in some versions of Portainer, thus this image may not work if deployed through Portainer.&lt;/p&gt; &#xA;&lt;h2&gt;Environment variables from files (Docker secrets)&lt;/h2&gt; &#xA;&lt;p&gt;You can set any environment variable from a file by using a special prepend &lt;code&gt;FILE__&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;-e FILE__PASSWORD=/run/secrets/mysecretpassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will set the environment variable &lt;code&gt;PASSWORD&lt;/code&gt; based on the contents of the &lt;code&gt;/run/secrets/mysecretpassword&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Umask for running applications&lt;/h2&gt; &#xA;&lt;p&gt;For all of our images we provide the ability to override the default umask settings for services started within the containers using the optional &lt;code&gt;-e UMASK=022&lt;/code&gt; setting. Keep in mind umask is not chmod it subtracts from permissions based on it&#39;s value it does not add. Please read up &lt;a href=&#34;https://en.wikipedia.org/wiki/Umask&#34;&gt;here&lt;/a&gt; before asking for support.&lt;/p&gt; &#xA;&lt;h2&gt;User / Group Identifiers&lt;/h2&gt; &#xA;&lt;p&gt;When using volumes (&lt;code&gt;-v&lt;/code&gt; flags) permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user &lt;code&gt;PUID&lt;/code&gt; and group &lt;code&gt;PGID&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ensure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.&lt;/p&gt; &#xA;&lt;p&gt;In this instance &lt;code&gt;PUID=1000&lt;/code&gt; and &lt;code&gt;PGID=1000&lt;/code&gt;, to find yours use &lt;code&gt;id user&lt;/code&gt; as below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ id username&#xA;    uid=1000(dockeruser) gid=1000(dockergroup) groups=1000(dockergroup)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Mods&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mods.linuxserver.io/?mod=wireguard&#34; title=&#34;view available mods for this container.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=wireguard&amp;amp;query=%24.mods%5B%27wireguard%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Mods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mods.linuxserver.io/?mod=universal&#34; title=&#34;view available universal mods.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=universal&amp;amp;query=%24.mods%5B%27universal%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Universal Mods&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We publish various &lt;a href=&#34;https://github.com/linuxserver/docker-mods&#34;&gt;Docker Mods&lt;/a&gt; to enable additional functionality within the containers. The list of Mods available for this image (if any) as well as universal mods that can be applied to any one of our images can be accessed via the dynamic badges above.&lt;/p&gt; &#xA;&lt;h2&gt;Support Info&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shell access whilst the container is running: &lt;code&gt;docker exec -it wireguard /bin/bash&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To monitor the logs of the container in realtime: &lt;code&gt;docker logs -f wireguard&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;container version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; wireguard&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;image version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; lscr.io/linuxserver/wireguard:latest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updating Info&lt;/h2&gt; &#xA;&lt;p&gt;Most of our images are static, versioned, and require an image update and container recreation to update the app inside. With some exceptions (ie. nextcloud, plex), we do not recommend or support updating apps inside the container. Please consult the &lt;a href=&#34;https://raw.githubusercontent.com/linuxserver/docker-wireguard/master/#application-setup&#34;&gt;Application Setup&lt;/a&gt; section above to see if it is recommended for the image.&lt;/p&gt; &#xA;&lt;p&gt;Below are the instructions for updating containers:&lt;/p&gt; &#xA;&lt;h3&gt;Via Docker Compose&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update all images: &lt;code&gt;docker-compose pull&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single image: &lt;code&gt;docker-compose pull wireguard&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Let compose update all containers as necessary: &lt;code&gt;docker-compose up -d&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single container: &lt;code&gt;docker-compose up -d wireguard&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Docker Run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update the image: &lt;code&gt;docker pull lscr.io/linuxserver/wireguard:latest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stop the running container: &lt;code&gt;docker stop wireguard&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Delete the container: &lt;code&gt;docker rm wireguard&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your &lt;code&gt;/config&lt;/code&gt; folder and settings will be preserved)&lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Watchtower auto-updater (only use if you don&#39;t remember the original parameters)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pull the latest image at its tag and replace it with the same env variables in one run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm \&#xA;-v /var/run/docker.sock:/var/run/docker.sock \&#xA;containrrr/watchtower \&#xA;--run-once wireguard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We do not endorse the use of Watchtower as a solution to automated updates of existing Docker containers. In fact we generally discourage automated updates. However, this is a useful tool for one-time manual updates of containers where you have forgotten the original parameters. In the long term, we highly recommend using &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;Docker Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Image Update Notifications - Diun (Docker Image Update Notifier)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We recommend &lt;a href=&#34;https://crazymax.dev/diun/&#34;&gt;Diun&lt;/a&gt; for update notifications. Other tools that automatically update containers unattended are not recommended or supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building locally&lt;/h2&gt; &#xA;&lt;p&gt;If you want to make local modifications to these images for development purposes or just to customize the logic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/linuxserver/docker-wireguard.git&#xA;cd docker-wireguard&#xA;docker build \&#xA;  --no-cache \&#xA;  --pull \&#xA;  -t lscr.io/linuxserver/wireguard:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ARM variants can be built on x86_64 hardware using &lt;code&gt;multiarch/qemu-user-static&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --privileged multiarch/qemu-user-static:register --reset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once registered you can define the dockerfile to use with &lt;code&gt;-f Dockerfile.aarch64&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;16.05.22:&lt;/strong&gt; - Improve NAT handling in server mode when multiple ethernet devices are present.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.04.22:&lt;/strong&gt; - Add pre-shared key support. Automatically added to all new peer confs generated, existing ones are left without to ensure no breaking changes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;10.04.22:&lt;/strong&gt; - Rebase to Ubuntu Focal. Add &lt;code&gt;LOG_CONFS&lt;/code&gt; env var. Remove deprecated &lt;code&gt;add-peer&lt;/code&gt; command.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;28.10.21:&lt;/strong&gt; - Add site-to-site vpn support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;11.02.21:&lt;/strong&gt; - Fix bug related to changing internal subnet and named peer confs not updating.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;06.10.20:&lt;/strong&gt; - Disable CoreDNS in client mode, or if port 53 is already in use in server mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;04.10.20:&lt;/strong&gt; - Allow to specify a list of names as PEERS and add ALLOWEDIPS environment variable. Also, add peer name/id to each one of the peer sections in wg0.conf. Important: Existing users need to delete &lt;code&gt;/config/templates/peer.conf&lt;/code&gt; and restart&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;27.09.20:&lt;/strong&gt; - Cleaning service binding example to have accurate PreDown script.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;06.08.20:&lt;/strong&gt; - Replace resolvconf with openresolv due to dns issues when a client based on this image is connected to a server also based on this image. Add IPv6 info to readme. Display kernel version in logs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.07.20:&lt;/strong&gt; - Update Coredns config to detect dns loops (existing users need to delete &lt;code&gt;/config/coredns/Corefile&lt;/code&gt; and restart).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;27.07.20:&lt;/strong&gt; - Update Coredns config to prevent issues with non-user-defined bridge networks (existing users need to delete &lt;code&gt;/config/coredns/Corefile&lt;/code&gt; and restart).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;05.07.20:&lt;/strong&gt; - Add Debian updates and security repos for headers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;25.06.20:&lt;/strong&gt; - Simplify module tests, prevent iptables issues from resulting in false negatives.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;19.06.20:&lt;/strong&gt; - Add support for Ubuntu Focal (20.04) kernels. Compile wireguard tools and kernel module instead of using the ubuntu packages. Make module install optional. Improve verbosity in logs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.05.20:&lt;/strong&gt; - Add support for 64bit raspbian.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;28.04.20:&lt;/strong&gt; - Add Buster/Stretch backports repos for Debian. Tested with OMV 5 and OMV 4 (on kernel 4.19.0-0.bpo.8-amd64).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.04.20:&lt;/strong&gt; - Fix typo in client mode conf existence check.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;13.04.20:&lt;/strong&gt; - Fix bug that forced conf recreation on every start.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;08.04.20:&lt;/strong&gt; - Add arm32/64 builds and enable multi-arch (rpi4 with ubuntu and raspbian buster tested). Add CoreDNS for &lt;code&gt;PEERDNS=auto&lt;/code&gt; setting. Update the &lt;code&gt;add-peer&lt;/code&gt;/&lt;code&gt;show-peer&lt;/code&gt; scripts to utilize the templates and the &lt;code&gt;INTERNAL_SUBNET&lt;/code&gt; var (previously missed, oops).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;05.04.20:&lt;/strong&gt; - Add &lt;code&gt;INTERNAL_SUBNET&lt;/code&gt; variable to prevent subnet clashes. Add templates for server and peer confs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.04.20:&lt;/strong&gt; - Add &lt;code&gt;show-peer&lt;/code&gt; script and include info on host installed headers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;31.03.20:&lt;/strong&gt; - Initial Release.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/dotnet-docker</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/dotnet/dotnet-docker</id>
    <link href="https://github.com/dotnet/dotnet-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker images for .NET and the .NET Tools.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Featured Repos&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-sdk/&#34;&gt;dotnet/sdk&lt;/a&gt;: .NET SDK&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-aspnet/&#34;&gt;dotnet/aspnet&lt;/a&gt;: ASP.NET Core Runtime&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-runtime/&#34;&gt;dotnet/runtime&lt;/a&gt;: .NET Runtime&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-runtime-deps/&#34;&gt;dotnet/runtime-deps&lt;/a&gt;: .NET Runtime Dependencies&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-monitor/&#34;&gt;dotnet/monitor&lt;/a&gt;: .NET Monitor Tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-samples/&#34;&gt;dotnet/samples&lt;/a&gt;: .NET Samples&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;About&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/dotnet/core/&#34;&gt;.NET&lt;/a&gt; is a general purpose development platform maintained by Microsoft and the .NET community on &lt;a href=&#34;https://github.com/dotnet/core&#34;&gt;GitHub&lt;/a&gt;. It is cross-platform, supporting Windows, macOS and Linux, and can be used in device, cloud, and embedded/IoT scenarios.&lt;/p&gt; &#xA;&lt;p&gt;.NET has several capabilities that make development easier, including automatic memory management, (runtime) generic types, reflection, asynchrony, concurrency, and native interop. Millions of developers take advantage of these capabilities to efficiently build high-quality applications.&lt;/p&gt; &#xA;&lt;p&gt;You can use C# or F# to write .NET apps.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/dotnet/csharp/&#34;&gt;C#&lt;/a&gt; is simple, powerful, type-safe, and object-oriented while retaining the expressiveness and elegance of C-style languages. Anyone familiar with C and similar languages will find it straightforward to write in C#.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/dotnet/fsharp/&#34;&gt;F#&lt;/a&gt; is a cross-platform, open-source, functional programming language for .NET. It also includes object-oriented and imperative programming.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dotnet/core&#34;&gt;.NET&lt;/a&gt; is open source (MIT and Apache 2 licenses) and was contributed to the &lt;a href=&#34;http://dotnetfoundation.org&#34;&gt;.NET Foundation&lt;/a&gt; by Microsoft in 2014. It can be freely adopted by individuals and companies, including for personal, academic or commercial purposes. Multiple companies use .NET as part of apps, tools, new platforms and hosting services.&lt;/p&gt; &#xA;&lt;p&gt;You are invited to &lt;a href=&#34;https://github.com/dotnet/core/raw/master/CONTRIBUTING.md&#34;&gt;contribute new features&lt;/a&gt;, fixes, or updates, large or small; we are always thrilled to receive pull requests, and do our best to process them as fast as we can.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/dotnet/core/&#34;&gt;https://docs.microsoft.com/dotnet/core/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Watch &lt;a href=&#34;https://github.com/dotnet/dotnet-docker/discussions/categories/announcements&#34;&gt;discussions&lt;/a&gt; for Docker-related .NET announcements.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/dotnet/dotnet-docker/raw/main/samples/README.md&#34;&gt;.NET Docker samples&lt;/a&gt; show various ways to use .NET and Docker together. See &lt;a href=&#34;https://docs.microsoft.com/dotnet/core/docker/building-net-docker-images&#34;&gt;Building Docker Images for .NET Applications&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;h2&gt;Container sample: Run a simple application&lt;/h2&gt; &#xA;&lt;p&gt;You can quickly run a container with a pre-built &lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-samples/&#34;&gt;.NET Docker image&lt;/a&gt;, based on the &lt;a href=&#34;https://github.com/dotnet/dotnet-docker/raw/main/samples/dotnetapp/README.md&#34;&gt;.NET console sample&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Type the following command to run a sample console application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;docker run --rm mcr.microsoft.com/dotnet/samples&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Container sample: Run a web application&lt;/h2&gt; &#xA;&lt;p&gt;You can quickly run a container with a pre-built &lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-samples/&#34;&gt;.NET Docker image&lt;/a&gt;, based on the &lt;a href=&#34;https://github.com/dotnet/dotnet-docker/raw/main/samples/aspnetapp/README.md&#34;&gt;ASP.NET Core sample&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Type the following command to run a sample web application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;docker run -it --rm -p 8000:80 --name aspnetcore_sample mcr.microsoft.com/dotnet/samples:aspnetapp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the application starts, navigate to &lt;code&gt;http://localhost:8000&lt;/code&gt; in your web browser.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/dotnet/dotnet-docker/raw/main/samples/host-aspnetcore-https.md&#34;&gt;Hosting ASP.NET Core Images with Docker over HTTPS&lt;/a&gt; to use HTTPS with this image.&lt;/p&gt; &#xA;&lt;h1&gt;Related Repos&lt;/h1&gt; &#xA;&lt;p&gt;.NET:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-nightly-sdk/&#34;&gt;dotnet/nightly/sdk&lt;/a&gt;: .NET SDK (Preview)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-nightly-aspnet/&#34;&gt;dotnet/nightly/aspnet&lt;/a&gt;: ASP.NET Core Runtime (Preview)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-nightly-runtime/&#34;&gt;dotnet/nightly/runtime&lt;/a&gt;: .NET Runtime (Preview)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-nightly-runtime-deps/&#34;&gt;dotnet/nightly/runtime-deps&lt;/a&gt;: .NET Runtime Dependencies (Preview)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-nightly-monitor/&#34;&gt;dotnet/nightly/monitor&lt;/a&gt;: .NET Monitor Tool (Preview)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;.NET Framework:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-framework/&#34;&gt;dotnet/framework&lt;/a&gt;: .NET Framework, ASP.NET and WCF&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-framework-samples/&#34;&gt;dotnet/framework/samples&lt;/a&gt;: .NET Framework, ASP.NET and WCF Samples&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Support&lt;/h1&gt; &#xA;&lt;h2&gt;Lifecycle&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/core/raw/main/microsoft-support.md&#34;&gt;Microsoft Support for .NET&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/dotnet-docker/raw/main/documentation/supported-platforms.md&#34;&gt;Supported Container Platforms Policy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/dotnet-docker/raw/main/documentation/supported-tags.md&#34;&gt;Supported Tags Policy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Image Update Policy&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We update the supported .NET images within 12 hours of any updates to their base images (e.g. debian:buster-slim, windows/nanoserver:ltsc2022, buildpack-deps:bionic-scm, etc.).&lt;/li&gt; &#xA; &lt;li&gt;We publish .NET images as part of releasing new versions of .NET including major/minor and servicing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/dotnet-docker/issues/new/choose&#34;&gt;File an issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://support.microsoft.com/contactus/&#34;&gt;Contact Microsoft Support&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Legal Notice: &lt;a href=&#34;https://aka.ms/mcr/osslegalnotice&#34;&gt;Container License Information&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/dotnet-docker/raw/main/LICENSE&#34;&gt;.NET license&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/dotnet-docker/raw/main/documentation/image-artifact-details.md&#34;&gt;Discover licensing for Linux image contents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/virtualization/windowscontainers/images-eula&#34;&gt;Windows base image license&lt;/a&gt; (only applies to Windows containers)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/cloud-platform/windows-server-pricing&#34;&gt;Pricing and licensing for Windows Server 2019&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>cypress-io/cypress-docker-images</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/cypress-io/cypress-docker-images</id>
    <link href="https://github.com/cypress-io/cypress-docker-images" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker images with Cypress dependencies and browsers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cypress Docker Images &lt;a href=&#34;https://circleci.com/gh/cypress-io/cypress-docker-images/tree/master&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/cypress-io/cypress-docker-images/tree/master.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;These images provide all of the required dependencies for running Cypress in Docker.&lt;/p&gt; &#xA;&lt;p&gt;We build three main images, click on the image name to see the available tags and versions.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Image&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Monthly pulls&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cypress-io/cypress-docker-images/master/base&#34;&gt;cypress/base&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cypress/base:16.13.0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All operating system dependencies, no Cypress, and no browsers.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/cypress/base/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/cypress/base.svg?maxAge=604800&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cypress-io/cypress-docker-images/master/browsers&#34;&gt;cypress/browsers&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cypress/browsers:chrome69&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All operating system dependencies and some browsers.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/cypress/browsers/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/cypress/browsers.svg?maxAge=604800&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cypress-io/cypress-docker-images/master/included&#34;&gt;cypress/included&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cypress/included:9.4.1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All operating system dependencies, Cypress, and some browsers installed globally.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/cypress/included/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/cypress/included.svg?maxAge=604800&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Of these images, we provide multiple tags for various operating systems and specific browser versions. These allow you to target specific combinations you need.&lt;/p&gt; &#xA;&lt;h2&gt;Best practice&lt;/h2&gt; &#xA;&lt;p&gt;It is recommended to use a specific image tag, and not rely on the &lt;code&gt;default&lt;/code&gt; tag. For example, it is better to use &lt;code&gt;cypress/base:12&lt;/code&gt; than &lt;code&gt;cypress/base&lt;/code&gt;. Even better it is to use full version of the image, like &lt;code&gt;cypress/base:12.18.0&lt;/code&gt; - we will never overwrite the existing Docker images to prevent accidental changes.&lt;/p&gt; &#xA;&lt;h2&gt;DockerHub&lt;/h2&gt; &#xA;&lt;p&gt;All of the images and tags are published to DockerHub under&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/cypress/base&#34;&gt;https://hub.docker.com/r/cypress/base&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/cypress/browsers&#34;&gt;https://hub.docker.com/r/cypress/browsers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/cypress/included&#34;&gt;https://hub.docker.com/r/cypress/included&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;These images have all dependencies necessary to install and run Cypress. Just install your NPM dependencies (including Cypress) and run the tests. We utilize many of these docker images in our own projects, with different CI providers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://on.cypress.io/docker&#34;&gt;Check out our docs for examples.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to use the &lt;code&gt;cypress/included&lt;/code&gt; image, read &lt;a href=&#34;https://www.cypress.io/blog/2019/05/02/run-cypress-with-a-single-docker-command/&#34;&gt;Run Cypress with a single Docker command&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cypress-io/cypress-docker-images/master/examples/included-as-non-root&#34;&gt;examples/included-as-non-root&lt;/a&gt; shows how to build a new Docker image on top of &lt;code&gt;cypress/included&lt;/code&gt; image and run the tests as non-root user &lt;code&gt;node&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cypress-io/cypress-docker-images/master/examples/included-as-non-root-alternative&#34;&gt;examples/included-as-non-root-alternative&lt;/a&gt; shows another approach to allow built-in non-root user &lt;code&gt;node&lt;/code&gt; to run tests using &lt;code&gt;cypress/included&lt;/code&gt; image.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cypress-io/cypress-docker-images/master/examples/included-as-non-root-mapped&#34;&gt;examples/included-as-non-root-mapped&lt;/a&gt; shows how to build a Docker image on top of &lt;code&gt;cypress/included&lt;/code&gt; that runs with a non-root user that matches the id of the user on the host machine. This way, the permissions on any files created during the test run match the user&#39;s permissions on the host machine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cypress-io/cypress-docker-images/master/examples/included-with-plugins&#34;&gt;examples/included-with-plugins&lt;/a&gt; shows how to use locally installed &lt;a href=&#34;https://on.cypress.io/plugins&#34;&gt;Cypress plugins&lt;/a&gt; while running &lt;code&gt;cypress/included&lt;/code&gt; image.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Common problems&lt;/h2&gt; &#xA;&lt;h3&gt;Cannot run post-install hook&lt;/h3&gt; &#xA;&lt;p&gt;Some versions of Node restrict running the &lt;code&gt;postinstall&lt;/code&gt; hook with the following error message:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;lifecycle realworld@1.0.0~postinstall: cannot run in wd realworld@1.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In that case run install with &lt;code&gt;npm install --unsafe-perm&lt;/code&gt; flag, or set an environment variable in the container&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm_config_unsafe_perm: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Blank screen in Chrome&lt;/h3&gt; &#xA;&lt;p&gt;When running headed tests with X11 forwarding in Cypress v4 you might see a blank Chrome screen. Try disabling memory sharing by setting the following environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export QT_X11_NO_MITSHM=1&#xA;export _X11_NO_MITSHM=1&#xA;export _MITSHM=0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/cypress-io/cypress-docker-images/issues/270&#34;&gt;issue #270&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/cypress-io/cypress-docker-images/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/cypress-io/cypress-docker-images/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SonarSource/docker-sonarqube</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/SonarSource/docker-sonarqube</id>
    <link href="https://github.com/SonarSource/docker-sonarqube" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ð³ SonarQube in Docker&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;About this Repo&lt;/h1&gt; &#xA;&lt;p&gt;This is the Git repo of the official Docker image for &lt;a href=&#34;https://registry.hub.docker.com/_/sonarqube/&#34;&gt;SonarQube&lt;/a&gt;. See the Hub page for the full readme on how to use the Docker image and for information regarding contributing and issues.&lt;/p&gt; &#xA;&lt;p&gt;The full readme is generated over in &lt;a href=&#34;https://github.com/docker-library/docs&#34;&gt;docker-library/docs&lt;/a&gt;, specifically in &lt;a href=&#34;https://github.com/docker-library/docs/tree/master/sonarqube&#34;&gt;docker-library/docs/sonarqube&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/SonarSource/docker-sonarqube&#34;&gt;&lt;img src=&#34;https://travis-ci.org/SonarSource/docker-sonarqube.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Have Question or Feedback?&lt;/h2&gt; &#xA;&lt;p&gt;For support questions (&#34;How do I?&#34;, &#34;I got this error, why?&#34;, ...), please first read the &lt;a href=&#34;https://docs.sonarqube.org&#34;&gt;documentation&lt;/a&gt; and then head to the &lt;a href=&#34;https://community.sonarsource.com/&#34;&gt;SonarSource forum&lt;/a&gt;. There are chances that a question similar to yours has already been answered.&lt;/p&gt; &#xA;&lt;p&gt;Be aware that this forum is a community, so the standard pleasantries (&#34;Hi&#34;, &#34;Thanks&#34;, ...) are expected. And if you don&#39;t get an answer to your thread, you should sit on your hands for at least three days before bumping it. Operators are not standing by. :-)&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to see a new feature, please create a new thread in the forum &lt;a href=&#34;https://community.sonarsource.com/c/suggestions/features&#34;&gt;&#34;Suggest new features&#34;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please be aware that we are not actively looking for feature contributions. We typically accept minor improvements and bug-fixes.&lt;/p&gt; &#xA;&lt;p&gt;With that in mind, if you would like to submit a code contribution, please create a pull request for this repository. Please explain your motives to contribute this change: what problem you are trying to fix, what improvement you are trying to make.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;Copyright 2015-2020 SonarSource.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;http://www.gnu.org/licenses/lgpl.txt&#34;&gt;GNU Lesser General Public License, Version 3.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/vscode-remote-try-node</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/microsoft/vscode-remote-try-node</id>
    <link href="https://github.com/microsoft/vscode-remote-try-node" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Node.js sample project for trying out the VS Code Remote - Containers extension&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Try Out Development Containers: Node.js&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode-remote-try-node&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Remote%20-%20Containers&amp;amp;message=Open&amp;amp;color=blue&amp;amp;logo=visualstudiocode&#34; alt=&#34;Open in Remote - Containers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A &lt;strong&gt;development container&lt;/strong&gt; is a running &lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; container with a well-defined tool/runtime stack and its prerequisites. You can try out development containers with &lt;strong&gt;&lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&#34;https://aka.ms/vscode-remote/containers&#34;&gt;Visual Studio Code Remote - Containers&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is a sample project that lets you try out either option in a few easy steps. We have a variety of other &lt;a href=&#34;https://github.com/search?q=org%3Amicrosoft+vscode-remote-try-&amp;amp;type=Repositories&#34;&gt;vscode-remote-try-*&lt;/a&gt; sample projects, too.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you already have a Codespace or dev container, you can jump to the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-remote-try-node/main/#things-to-try&#34;&gt;Things to try&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Setting up the development container&lt;/h2&gt; &#xA;&lt;h3&gt;GitHub Codespaces&lt;/h3&gt; &#xA;&lt;p&gt;Follow these steps to open this sample in a Codespace:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Click the Code drop-down menu and select the &lt;strong&gt;Open with Codespaces&lt;/strong&gt; option.&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;+ New codespace&lt;/strong&gt; at the bottom on the pane.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more info, check out the &lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/github/developing-online-with-codespaces/creating-a-codespace#creating-a-codespace&#34;&gt;GitHub documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;VS Code Remote - Containers&lt;/h3&gt; &#xA;&lt;p&gt;If you already have VS Code and Docker installed, you can click the badge above or &lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode-remote-try-node&#34;&gt;here&lt;/a&gt; to get started. Clicking these links will cause VS Code to automatically install the Remote - Containers extension if needed, clone the source code into a container volume, and spin up a dev container for use.&lt;/p&gt; &#xA;&lt;p&gt;Follow these steps to open this sample in a container using the VS Code Remote - Containers extension:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If this is your first time using a development container, please ensure your system meets the pre-reqs (i.e. have Docker installed) in the &lt;a href=&#34;https://aka.ms/vscode-remote/containers/getting-started&#34;&gt;getting started steps&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To use this repository, you can either open the repository in an isolated Docker volume:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Try a Sample...&lt;/strong&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;Choose the &#34;Node&#34; sample, wait for the container to start, and try things out! &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Under the hood, this will use the &lt;strong&gt;Remote-Containers: Clone Repository in Container Volume...&lt;/strong&gt; command to clone the source code in a Docker volume instead of the local filesystem. &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;Volumes&lt;/a&gt; are the preferred mechanism for persisting container data.&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Or open a locally cloned copy of the code:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Clone this repository to your local filesystem.&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Open Folder in Container...&lt;/strong&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;Select the cloned copy of this folder, wait for the container to start, and try things out!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Things to try&lt;/h2&gt; &#xA;&lt;p&gt;Once you have this sample opened, you&#39;ll be able to work with it like you would locally.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This container runs as a non-root user with sudo access by default. Comment out &lt;code&gt;&#34;remoteUser&#34;: &#34;node&#34;&lt;/code&gt; in &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; if you&#39;d prefer to run as root.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Some things to try:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open &lt;code&gt;server.js&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Try adding some code and check out the language features.&lt;/li&gt; &#xA;   &lt;li&gt;Notice that &lt;code&gt;eslint&lt;/code&gt; and the &lt;code&gt;vscode-eslint&lt;/code&gt; extension are already installed in the container since the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; lists &lt;code&gt;&#34;dbaeumer.vscode-eslint&#34;&lt;/code&gt; as an extension to install automatically when the container is created.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Terminal:&lt;/strong&gt; Press &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;`&lt;/kbd&gt; and type &lt;code&gt;uname&lt;/code&gt; and other Linux commands from the terminal window.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build, Run, and Debug:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open &lt;code&gt;server.js&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Add a breakpoint (e.g. on line 20).&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F5&lt;/kbd&gt; to launch the app in the container.&lt;/li&gt; &#xA;   &lt;li&gt;Once the breakpoint is hit, try hovering over variables, examining locals, and more.&lt;/li&gt; &#xA;   &lt;li&gt;Continue (&lt;kbd&gt;F5&lt;/kbd&gt;). You can connect to the server in the container by either: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Clicking on &lt;code&gt;Open in Browser&lt;/code&gt; in the notification telling you: &lt;code&gt;Your service running on port 3000 is available&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;Clicking the globe icon in the &#39;Ports&#39; view. The &#39;Ports&#39; view gives you an organized table of your forwarded ports, and you can access it with the command &lt;strong&gt;Ports: Focus on Ports View&lt;/strong&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Notice port 3000 in the &#39;Ports&#39; view is labeled &#34;Hello Remote World.&#34; In &lt;code&gt;devcontainer.json&lt;/code&gt;, you can set &lt;code&gt;&#34;portsAttributes&#34;&lt;/code&gt;, such as a label for your forwarded ports and the action to be taken when the port is autoforwarded. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;If we didn&#39;t know the port was 3000, we could&#39;ve used a regex instead of &#34;3000&#34; in the &lt;code&gt;&#34;portsAttributes&#34;&lt;/code&gt;, such as &#34;.+/server.js&#34;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In Remote - Containers, you can access your app at &lt;code&gt;http://localhost:3000&lt;/code&gt; in a local browser. But in a browser-based Codespace, you must click the link from the notification or the &lt;code&gt;Ports&lt;/code&gt; view so that the service handles port forwarding in the browser and generates the correct URL.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Rebuild or update your container&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You may want to make changes to your container, such as installing a different version of a software or forwarding a new port. You&#39;ll rebuild your container for your changes to take effect.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Open browser automatically:&lt;/strong&gt; As an example change, let&#39;s update the &lt;code&gt;portsAttributes&lt;/code&gt; in the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; file to open a browser when our port is automatically forwarded.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; file.&lt;/li&gt; &#xA;   &lt;li&gt;Modify the &lt;code&gt;&#34;onAutoForward&#34;&lt;/code&gt; attribute in your &lt;code&gt;portsAttributes&lt;/code&gt; from &lt;code&gt;&#34;notify&#34;&lt;/code&gt; to &lt;code&gt;&#34;openBrowser&#34;&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Rebuild Container&lt;/strong&gt; or &lt;strong&gt;Codespaces: Rebuild Container&lt;/strong&gt; command so the modifications are picked up.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.microsoft.com&#34;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright Â© Microsoft Corporation All rights reserved.&lt;br&gt; Licensed under the MIT License. See LICENSE in the project root for license information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jenkinsci/docker</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/jenkinsci/docker</id>
    <link href="https://github.com/jenkinsci/docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker official jenkins repo&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Official Jenkins Docker image&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/jenkins/jenkins/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/jenkins/jenkins.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/jenkins/jenkins/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/jenkins/jenkins.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/jenkinsci/docker?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/jenkinsci/docker.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/jenkinsci/docker&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Jenkins Continuous Integration and Delivery server &lt;a href=&#34;https://hub.docker.com/r/jenkins/jenkins&#34;&gt;available on Docker Hub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is a fully functional Jenkins server. &lt;a href=&#34;https://jenkins.io/&#34;&gt;https://jenkins.io/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://jenkins.io/sites/default/files/jenkins_logo.png&#34;&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: read the section &lt;a href=&#34;https://raw.githubusercontent.com/jenkinsci/docker/master/#connecting-agents&#34;&gt;&lt;em&gt;Connecting agents&lt;/em&gt;&lt;/a&gt; below for the role of the &lt;code&gt;50000&lt;/code&gt; port mapping.&lt;/p&gt; &#xA;&lt;p&gt;This will store the workspace in &lt;code&gt;/var/jenkins_home&lt;/code&gt;. All Jenkins data lives in there - including plugins and configuration. You will probably want to make that an explicit volume so you can manage it and attach to another container for upgrades :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 8080:8080 -p 50000:50000 --restart=on-failure -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will automatically create a &#39;jenkins_home&#39; &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;docker volume&lt;/a&gt; on the host machine. Docker volumes retain their content even when the container is stopped, started, or deleted.&lt;/p&gt; &#xA;&lt;p&gt;NOTE: Avoid using a &lt;a href=&#34;https://docs.docker.com/storage/bind-mounts/&#34;&gt;bind mount&lt;/a&gt; from a folder on the host machine into &lt;code&gt;/var/jenkins_home&lt;/code&gt;, as this might result in file permission issues (the user used inside the container might not have rights to the folder on the host machine). If you &lt;em&gt;really&lt;/em&gt; need to bind mount jenkins_home, ensure that the directory on the host is accessible by the jenkins user inside the container (jenkins user - uid 1000) or use &lt;code&gt;-u some_other_user&lt;/code&gt; parameter with &lt;code&gt;docker run&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d -v jenkins_home:/var/jenkins_home -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;this will run Jenkins in detached mode with port forwarding and volume added. You can access logs with command &#39;docker logs CONTAINER_ID&#39; in order to check first login token. ID of container will be returned from output of command above.&lt;/p&gt; &#xA;&lt;h2&gt;Backing up data&lt;/h2&gt; &#xA;&lt;p&gt;If you bind mount in a volume - you can simply back up that directory (which is jenkins_home) at any time.&lt;/p&gt; &#xA;&lt;p&gt;This is highly recommended. Treat the jenkins_home directory as you would a database - in Docker you would generally put a database on a volume.&lt;/p&gt; &#xA;&lt;p&gt;If your volume is inside a container - you can use &lt;code&gt;docker cp $ID:/var/jenkins_home&lt;/code&gt; command to extract the data, or other options to find where the volume data is. Note that some symlinks on some OSes may be converted to copies (this can confuse jenkins with lastStableBuild links etc)&lt;/p&gt; &#xA;&lt;p&gt;For more info check Docker docs section on &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;Use volumes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Setting the number of executors&lt;/h1&gt; &#xA;&lt;p&gt;You can define the number of executors on the Jenkins built-in node using a groovy script. By default it is set to 2 executors, but you can extend the image and change it to your desired number of executors (recommended 0 executors on the built-in node) :&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;executors.groovy&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import jenkins.model.*&#xA;Jenkins.instance.setNumExecutors(0) // Recommended to not run builds on the built-in node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and &lt;code&gt;Dockerfile&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts&#xA;COPY --chown=jenkins:jenkins executors.groovy /usr/share/jenkins/ref/init.groovy.d/executors.groovy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Connecting agents&lt;/h1&gt; &#xA;&lt;p&gt;You can run builds on the controller out of the box. The Jenkins project recommends that no executors be enabled on the controller.&lt;/p&gt; &#xA;&lt;p&gt;In order to connect agents &lt;strong&gt;through an inbound TCP connection&lt;/strong&gt;, map the port: &lt;code&gt;-p 50000:50000&lt;/code&gt;. That port will be used when you connect agents to the controller.&lt;/p&gt; &#xA;&lt;p&gt;If you are only using &lt;a href=&#34;https://plugins.jenkins.io/ssh-slaves/&#34;&gt;SSH (outbound) build agents&lt;/a&gt;, this port is not required, as connections are established from the controller. If you connect agents using web sockets (since Jenkins 2.217), the TCP agent port is not used either.&lt;/p&gt; &#xA;&lt;h1&gt;Passing JVM parameters&lt;/h1&gt; &#xA;&lt;p&gt;You might need to customize the JVM running Jenkins, typically to adjust &lt;a href=&#34;https://www.jenkins.io/doc/book/managing/system-properties/&#34;&gt;system properties&lt;/a&gt; or tweak heap memory settings. Use the &lt;code&gt;JAVA_OPTS&lt;/code&gt; or &lt;code&gt;JENKINS_JAVA_OPTS&lt;/code&gt; environment variables for this purpose :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --name myjenkins -p 8080:8080 -p 50000:50000 --restart=on-failure --env JAVA_OPTS=-Dhudson.footerURL=http://mycompany.com jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;JVM options specifically for the Jenkins controller should be set through &lt;code&gt;JENKINS_JAVA_OPTS&lt;/code&gt;, as other tools might also respond to the &lt;code&gt;JAVA_OPTS&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;h1&gt;Configuring logging&lt;/h1&gt; &#xA;&lt;p&gt;Jenkins logging can be configured through a properties file and &lt;code&gt;java.util.logging.config.file&lt;/code&gt; Java property. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir data&#xA;cat &amp;gt; data/log.properties &amp;lt;&amp;lt;EOF&#xA;handlers=java.util.logging.ConsoleHandler&#xA;jenkins.level=FINEST&#xA;java.util.logging.ConsoleHandler.level=FINEST&#xA;EOF&#xA;docker run --name myjenkins -p 8080:8080 -p 50000:50000 --restart=on-failure --env JAVA_OPTS=&#34;-Djava.util.logging.config.file=/var/jenkins_home/log.properties&#34; -v `pwd`/data:/var/jenkins_home jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Configuring reverse proxy&lt;/h1&gt; &#xA;&lt;p&gt;If you want to install Jenkins behind a reverse proxy with a prefix, example: mysite.com/jenkins, you need to add environment variable &lt;code&gt;JENKINS_OPTS=&#34;--prefix=/jenkins&#34;&lt;/code&gt; and then follow the below procedures to configure your reverse proxy, which will depend if you have Apache or Nginx:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-apache/&#34;&gt;Apache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-nginx/&#34;&gt;Nginx&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Passing Jenkins launcher parameters&lt;/h1&gt; &#xA;&lt;p&gt;Arguments you pass to docker running the Jenkins image are passed to jenkins launcher, so for example you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run jenkins/jenkins:lts-jdk11 --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will show the Jenkins version, the same as when you run Jenkins from an executable war.&lt;/p&gt; &#xA;&lt;p&gt;You can also define Jenkins arguments via &lt;code&gt;JENKINS_OPTS&lt;/code&gt;. This is useful for customizing arguments to the jenkins launcher in a derived Jenkins image. The following sample Dockerfile uses this option to force use of HTTPS with a certificate included in the image.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;&#xA;COPY --chown=jenkins:jenkins https.pem /var/lib/jenkins/cert&#xA;COPY --chown=jenkins:jenkins https.key /var/lib/jenkins/pk&#xA;ENV JENKINS_OPTS --httpPort=-1 --httpsPort=8083 --httpsCertificate=/var/lib/jenkins/cert --httpsPrivateKey=/var/lib/jenkins/pk&#xA;EXPOSE 8083&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also change the default agent port for Jenkins by defining &lt;code&gt;JENKINS_SLAVE_AGENT_PORT&lt;/code&gt; in a sample Dockerfile.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;ENV JENKINS_SLAVE_AGENT_PORT 50001&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or as a parameter to docker,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --name myjenkins -p 8080:8080 -p 50001:50001 --restart=on-failure --env JENKINS_SLAVE_AGENT_PORT=50001 jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This environment variable will be used to set the &lt;a href=&#34;https://www.jenkins.io/doc/book/managing/system-properties/&#34;&gt;system property&lt;/a&gt; &lt;code&gt;jenkins.model.Jenkins.slaveAgentPort&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If this property is already set in &lt;strong&gt;JAVA_OPTS&lt;/strong&gt; or &lt;strong&gt;JENKINS_JAVA_OPTS&lt;/strong&gt;, then the value of &lt;code&gt;JENKINS_SLAVE_AGENT_PORT&lt;/code&gt; will be ignored.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Installing more tools&lt;/h1&gt; &#xA;&lt;p&gt;You can run your container as root - and install via apt-get, install as part of build steps via jenkins tool installers, or you can create your own Dockerfile to customise, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;# if we want to install via apt&#xA;USER root&#xA;RUN apt-get update &amp;amp;&amp;amp; apt-get install -y ruby make more-thing-here&#xA;# drop back to the regular jenkins user - good practice&#xA;USER jenkins&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In such a derived image, you can customize your jenkins instance with hook scripts or additional plugins. For this purpose, use &lt;code&gt;/usr/share/jenkins/ref&lt;/code&gt; as a place to define the default JENKINS_HOME content you wish the target installation to look like :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;COPY --chown=jenkins:jenkins custom.groovy /usr/share/jenkins/ref/init.groovy.d/custom.groovy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Preinstalling plugins&lt;/h2&gt; &#xA;&lt;h3&gt;Install plugins script&lt;/h3&gt; &#xA;&lt;p&gt;You can rely on the plugin manager CLI to pass a set of plugins to download with their dependencies. This tool will perform downloads from update centers, and internet access is required for the default update centers.&lt;/p&gt; &#xA;&lt;h3&gt;Setting update centers&lt;/h3&gt; &#xA;&lt;p&gt;During the download, the script will use update centers defined by the following environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_UC&lt;/code&gt; - Main update center. This update center may offer plugin versions depending on the Jenkins LTS Core versions. Default value: &lt;a href=&#34;https://updates.jenkins.io&#34;&gt;https://updates.jenkins.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_UC_EXPERIMENTAL&lt;/code&gt; - &lt;a href=&#34;https://jenkins.io/blog/2013/09/23/experimental-plugins-update-center/&#34;&gt;Experimental Update Center&lt;/a&gt;. This center offers Alpha and Beta versions of plugins. Default value: &lt;a href=&#34;https://updates.jenkins.io/experimental&#34;&gt;https://updates.jenkins.io/experimental&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_INCREMENTALS_REPO_MIRROR&lt;/code&gt; - Defines Maven mirror to be used to download plugins from the &lt;a href=&#34;https://jenkins.io/blog/2018/05/15/incremental-deployment/&#34;&gt;Incrementals repo&lt;/a&gt;. Default value: &lt;a href=&#34;https://repo.jenkins-ci.org/incrementals&#34;&gt;https://repo.jenkins-ci.org/incrementals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_UC_DOWNLOAD&lt;/code&gt; - Download url of the Update Center. Default value: &lt;code&gt;$JENKINS_UC/download&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is possible to override the environment variables in images.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;â&lt;/span&gt; Note that changing update center variables &lt;strong&gt;will not&lt;/strong&gt; change the Update Center being used by Jenkins runtime.&lt;/p&gt; &#xA;&lt;h3&gt;Installing Custom Plugins&lt;/h3&gt; &#xA;&lt;p&gt;Installing prebuilt, custom plugins can be accomplished by copying the plugin HPI file into &lt;code&gt;/usr/share/jenkins/ref/plugins/&lt;/code&gt; within the &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;COPY --chown=jenkins:jenkins path/to/custom.hpi /usr/share/jenkins/ref/plugins/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;You can run the CLI manually in Dockerfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM jenkins/jenkins:lts-jdk11&#xA;RUN jenkins-plugin-cli --plugins pipeline-model-definition github-branch-source:1.8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Furthermore it is possible to pass a file that contains this set of plugins (with or without line breaks).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM jenkins/jenkins:lts-jdk11&#xA;COPY --chown=jenkins:jenkins plugins.txt /usr/share/jenkins/ref/plugins.txt&#xA;RUN jenkins-plugin-cli -f /usr/share/jenkins/ref/plugins.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When jenkins container starts, it will check &lt;code&gt;JENKINS_HOME&lt;/code&gt; has this reference content, and copy them there if required. It will not override such files, so if you upgraded some plugins from UI they won&#39;t be reverted on next start.&lt;/p&gt; &#xA;&lt;p&gt;In case you &lt;em&gt;do&lt;/em&gt; want to override, append &#39;.override&#39; to the name of the reference file. E.g. a file named &lt;code&gt;/usr/share/jenkins/ref/config.xml.override&lt;/code&gt; will overwrite an existing &lt;code&gt;config.xml&lt;/code&gt; file in JENKINS_HOME.&lt;/p&gt; &#xA;&lt;p&gt;Also see &lt;a href=&#34;https://issues.jenkins.io/browse/JENKINS-24986&#34;&gt;JENKINS-24986&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here is an example to get the list of plugins from an existing server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;JENKINS_HOST=username:password@myhost.com:port&#xA;curl -sSL &#34;http://$JENKINS_HOST/pluginManager/api/xml?depth=1&amp;amp;xpath=/*/*/shortName|/*/*/version&amp;amp;wrapper=plugins&#34; | perl -pe &#39;s/.*?&amp;lt;shortName&amp;gt;([\w-]+).*?&amp;lt;version&amp;gt;([^&amp;lt;]+)()(&amp;lt;\/\w+&amp;gt;)+/\1 \2\n/g&#39;|sed &#39;s/ /:/&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cucumber-testresult-plugin:0.8.2&#xA;pam-auth:1.1&#xA;matrix-project:1.4.1&#xA;script-security:1.13&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For 2.x-derived images, you may also want to&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;RUN echo 2.0 &amp;gt; /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to indicate that this Jenkins installation is fully configured. Otherwise a banner will appear prompting the user to install additional plugins, which may be inappropriate.&lt;/p&gt; &#xA;&lt;h3&gt;Updating plugins file&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/jenkinsci/plugin-installation-manager-tool&#34;&gt;plugin-installation-manager-tool&lt;/a&gt; supports updating the plugin file for you.&lt;/p&gt; &#xA;&lt;p&gt;Example command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-command&#34;&gt;JENKINS_IMAGE=jenkins/jenkins:lts-jdk11&#xA;docker run -it ${JENKINS_IMAGE} bash -c &#34;stty -onlcr &amp;amp;&amp;amp; jenkins-plugin-cli -f /usr/share/jenkins/ref/plugins.txt --available-updates --output txt&#34; &amp;gt;  plugins2.txt&#xA;mv plugins2.txt plugins.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Upgrading&lt;/h2&gt; &#xA;&lt;p&gt;All the data needed is in the /var/jenkins_home directory - so depending on how you manage that - depends on how you upgrade. Generally - you can copy it out - and then &#34;docker pull&#34; the image again - and you will have the latest LTS - you can then start up with -v pointing to that data (/var/jenkins_home) and everything will be as you left it.&lt;/p&gt; &#xA;&lt;p&gt;As always - please ensure that you know how to drive docker - especially volume handling!&lt;/p&gt; &#xA;&lt;h3&gt;Upgrading plugins&lt;/h3&gt; &#xA;&lt;p&gt;By default, plugins will be upgraded if they haven&#39;t been upgraded manually and if the version from the docker image is newer than the version in the container. Versions installed by the docker image are tracked through a marker file.&lt;/p&gt; &#xA;&lt;p&gt;To force upgrades of plugins that have been manually upgraded, run the docker image with &lt;code&gt;-e PLUGINS_FORCE_UPGRADE=true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The default behaviour when upgrading from a docker image that didn&#39;t write marker files is to leave existing plugins in place. If you want to upgrade existing plugins without marker you may run the docker image with &lt;code&gt;-e TRY_UPGRADE_IF_NO_MARKER=true&lt;/code&gt;. Then plugins will be upgraded if the version provided by the docker image is newer.&lt;/p&gt; &#xA;&lt;h3&gt;Hacking&lt;/h3&gt; &#xA;&lt;p&gt;If you wish to contribute fixes to this repository, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/jenkinsci/docker/master/HACKING.adoc&#34;&gt;dedicated documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Questions?&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re on Gitter, &lt;a href=&#34;https://gitter.im/jenkinsci/docker&#34;&gt;https://gitter.im/jenkinsci/docker&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MithunTechnologiesDevOps/Dockerfiles</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/MithunTechnologiesDevOps/Dockerfiles</id>
    <link href="https://github.com/MithunTechnologiesDevOps/Dockerfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>linuxserver/docker-swag</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/linuxserver/docker-swag</id>
    <link href="https://github.com/linuxserver/docker-swag" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Nginx webserver and reverse proxy with php support and a built-in Certbot (Let&#39;s Encrypt) client. It also contains fail2ban for intrusion prevention.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://linuxserver.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver_medium.png&#34; alt=&#34;linuxserver.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34; title=&#34;all the things you can do with our containers including How-To guides, opinions and much more!&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Blog&#34; alt=&#34;Blog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/YWrKVTn&#34; title=&#34;realtime support / chat with the community and the team.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/354974912613449730.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Discord&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discourse.linuxserver.io&#34; title=&#34;post on our community forum.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/https/discourse.linuxserver.io/topics.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=discourse&#34; alt=&#34;Discourse&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fleet.linuxserver.io&#34; title=&#34;an online web interface which displays all of our maintained images.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Fleet&#34; alt=&#34;Fleet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver&#34; title=&#34;view the source for all of our repositories.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub&amp;amp;logo=github&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/linuxserver&#34; title=&#34;please consider helping us by either donating or contributing to our budget&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/all/linuxserver.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Supporters&amp;amp;logo=open%20collective&#34; alt=&#34;Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://linuxserver.io&#34;&gt;LinuxServer.io&lt;/a&gt; team brings you another container release featuring:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;regular and timely application updates&lt;/li&gt; &#xA; &lt;li&gt;easy user mappings (PGID, PUID)&lt;/li&gt; &#xA; &lt;li&gt;custom base image with s6 overlay&lt;/li&gt; &#xA; &lt;li&gt;weekly base OS updates with common layers across the entire LinuxServer.io ecosystem to minimise space usage, down time and bandwidth&lt;/li&gt; &#xA; &lt;li&gt;regular security updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Find us at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34;&gt;Blog&lt;/a&gt; - all the things you can do with our containers including How-To guides, opinions and much more!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/YWrKVTn&#34;&gt;Discord&lt;/a&gt; - realtime support / chat with the community and the team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discourse.linuxserver.io&#34;&gt;Discourse&lt;/a&gt; - post on our community forum.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fleet.linuxserver.io&#34;&gt;Fleet&lt;/a&gt; - an online web interface which displays all of our maintained images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linuxserver&#34;&gt;GitHub&lt;/a&gt; - view the source for all of our repositories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opencollective.com/linuxserver&#34;&gt;Open Collective&lt;/a&gt; - please consider helping us by either donating or contributing to our budget&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/linuxserver/docker-swag&#34;&gt;linuxserver/swag&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scarf.sh/gateway/linuxserver-ci/docker/linuxserver%2Fswag&#34;&gt;&lt;img src=&#34;https://scarf.sh/installs-badge/linuxserver-ci/linuxserver%2Fswag?color=94398d&amp;amp;label-color=555555&amp;amp;logo-color=ffffff&amp;amp;style=for-the-badge&amp;amp;package-type=docker&#34; alt=&#34;Scarf.io pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-swag&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/linuxserver/docker-swag.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-swag/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/linuxserver/docker-swag.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-swag/packages&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub%20Package&amp;amp;logo=github&#34; alt=&#34;GitHub Package Repository&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitlab.com/linuxserver.io/docker-swag/container_registry&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitLab%20Registry&amp;amp;logo=gitlab&#34; alt=&#34;GitLab Container Registry&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/linuxserver.io/swag&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Quay.io&#34; alt=&#34;Quay.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/swag&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/linuxserver/swag.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/swag&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/linuxserver/swag.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=stars&amp;amp;logo=docker&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.linuxserver.io/job/Docker-Pipeline-Builders/job/docker-swag/job/master/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build?labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;jobUrl=https%3A%2F%2Fci.linuxserver.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-swag%2Fjob%2Fmaster%2F&amp;amp;logo=jenkins&#34; alt=&#34;Jenkins Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci-tests.linuxserver.io/linuxserver/swag/latest/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=CI&amp;amp;query=CI&amp;amp;url=https%3A%2F%2Fci-tests.linuxserver.io%2Flinuxserver%2Fswag%2Flatest%2Fci-status.yml&#34; alt=&#34;LSIO CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let&#39;s Encryptâ¢) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let&#39;s Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://linuxserver.io&#34;&gt;&lt;img src=&#34;https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/swag.gif&#34; alt=&#34;swag&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Architectures&lt;/h2&gt; &#xA;&lt;p&gt;We utilise the docker manifest for multi-platform awareness. More information is available from docker &lt;a href=&#34;https://github.com/docker/distribution/raw/master/docs/spec/manifest-v2-2.md#manifest-list&#34;&gt;here&lt;/a&gt; and our announcement &lt;a href=&#34;https://blog.linuxserver.io/2019/02/21/the-lsio-pipeline-project/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Simply pulling &lt;code&gt;lscr.io/linuxserver/swag:latest&lt;/code&gt; should retrieve the correct image for your arch, but you can also pull specific arch images via tags.&lt;/p&gt; &#xA;&lt;p&gt;The architectures supported by this image are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Tag&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86-64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;â&lt;/td&gt; &#xA;   &lt;td&gt;amd64-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arm64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;â&lt;/td&gt; &#xA;   &lt;td&gt;arm64v8-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;armhf&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;â&lt;/td&gt; &#xA;   &lt;td&gt;arm32v7-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Application Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Validation and initial setup&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Before running this container, make sure that the url and subdomains are properly forwarded to this container&#39;s host, and that port 443 (and/or 80) is not being used by another service on the host (NAS gui, another webserver, etc.).&lt;/li&gt; &#xA; &lt;li&gt;For &lt;code&gt;http&lt;/code&gt; validation, port 80 on the internet side of the router should be forwarded to this container&#39;s port 80&lt;/li&gt; &#xA; &lt;li&gt;For &lt;code&gt;dns&lt;/code&gt; validation, make sure to enter your credentials into the corresponding ini (or json for some plugins) file under &lt;code&gt;/config/dns-conf&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Cloudflare provides free accounts for managing dns and is very easy to use with this image. Make sure that it is set up for &#34;dns only&#34; instead of &#34;dns + proxy&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Google dns plugin is meant to be used with &#34;Google Cloud DNS&#34;, a paid enterprise product, and not for &#34;Google Domains DNS&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For &lt;code&gt;duckdns&lt;/code&gt; validation, either leave the &lt;code&gt;SUBDOMAINS&lt;/code&gt; variable empty or set it to &lt;code&gt;wildcard&lt;/code&gt;, and set the &lt;code&gt;DUCKDNSTOKEN&lt;/code&gt; variable with your duckdns token. Due to a limitation of duckdns, the resulting cert will only cover either main subdomain (ie. &lt;code&gt;yoursubdomain.duckdns.org&lt;/code&gt;), or sub-subdomains (ie. &lt;code&gt;*.yoursubdomain.duckdns.org&lt;/code&gt;), but will not both at the same time. You can use our &lt;a href=&#34;https://hub.docker.com/r/linuxserver/duckdns/&#34;&gt;duckdns image&lt;/a&gt; to update your IP on duckdns.org.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--cap-add=NET_ADMIN&lt;/code&gt; is required for fail2ban to modify iptables&lt;/li&gt; &#xA; &lt;li&gt;If you need a dynamic dns provider, you can use the free provider duckdns.org where the &lt;code&gt;URL&lt;/code&gt; will be &lt;code&gt;yoursubdomain.duckdns.org&lt;/code&gt; and the &lt;code&gt;SUBDOMAINS&lt;/code&gt; can be &lt;code&gt;www,ftp,cloud&lt;/code&gt; with http validation, or &lt;code&gt;wildcard&lt;/code&gt; with dns validation.&lt;/li&gt; &#xA; &lt;li&gt;After setup, navigate to &lt;code&gt;https://yourdomain.url&lt;/code&gt; to access the default homepage (http access through port 80 is disabled by default, you can enable it by editing the default site config at &lt;code&gt;/config/nginx/site-confs/default&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Certs are checked nightly and if expiration is within 30 days, renewal is attempted. If your cert is about to expire in less than 30 days, check the logs under &lt;code&gt;/config/log/letsencrypt&lt;/code&gt; to see why the renewals have been failing. It is recommended to input your e-mail in docker parameters so you receive expiration notices from Let&#39;s Encrypt in those circumstances.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Security and password protection&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The container detects changes to url and subdomains, revokes existing certs and generates new ones during start.&lt;/li&gt; &#xA; &lt;li&gt;Per &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc7919&#34;&gt;RFC7919&lt;/a&gt;, the container is shipping &lt;a href=&#34;https://ssl-config.mozilla.org/ffdhe4096.txt&#34;&gt;ffdhe4096&lt;/a&gt; as the &lt;code&gt;dhparams.pem&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;d like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file &lt;code&gt;docker exec -it swag htpasswd -c /config/nginx/.htpasswd &amp;lt;username&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can add multiple user:pass to &lt;code&gt;.htpasswd&lt;/code&gt;. For the first user, use the above command, for others, use the above command without the &lt;code&gt;-c&lt;/code&gt; flag, as it will force deletion of the existing &lt;code&gt;.htpasswd&lt;/code&gt; and creation of a new one&lt;/li&gt; &#xA; &lt;li&gt;You can also use ldap auth for security and access control. A sample, user configurable ldap.conf is provided, and it requires the separate image &lt;a href=&#34;https://hub.docker.com/r/linuxserver/ldap-auth/&#34;&gt;linuxserver/ldap-auth&lt;/a&gt; to communicate with an ldap server.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Site config and reverse proxy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The default site config resides at &lt;code&gt;/config/nginx/site-confs/default&lt;/code&gt;. Feel free to modify this file, and you can add other conf files to this directory. However, if you delete the &lt;code&gt;default&lt;/code&gt; file, a new default will be created on container start.&lt;/li&gt; &#xA; &lt;li&gt;Preset reverse proxy config files are added for popular apps. See the &lt;code&gt;README.md&lt;/code&gt; file under &lt;code&gt;/config/nginx/proxy_confs&lt;/code&gt; for instructions on how to enable them. The preset confs reside in and get imported from &lt;a href=&#34;https://github.com/linuxserver/reverse-proxy-confs&#34;&gt;this repo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you wish to hide your site from search engine crawlers, you may find it useful to add this configuration line to your site config, within the server block, above the line where ssl.conf is included &lt;code&gt;add_header X-Robots-Tag &#34;noindex, nofollow, nosnippet, noarchive&#34;;&lt;/code&gt; This will &lt;em&gt;ask&lt;/em&gt; Google et al not to index and list your site. Be careful with this, as you will eventually be de-listed if you leave this line in on a site you wish to be present on search engines&lt;/li&gt; &#xA; &lt;li&gt;If you wish to redirect http to https, you must expose port 80&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Using certs in other containers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This container includes auto-generated pfx and private-fullchain-bundle pem certs that are needed by other apps like Emby and Znc. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To use these certs in other containers, do either of the following:&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;em&gt;(Easier)&lt;/em&gt; Mount the container&#39;s config folder in other containers (ie. &lt;code&gt;-v /path-to-le-config:/le-ssl&lt;/code&gt;) and in the other containers, use the cert location &lt;code&gt;/le-ssl/keys/letsencrypt/&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;(More secure)&lt;/em&gt; Mount the SWAG folder &lt;code&gt;etc&lt;/code&gt; that resides under &lt;code&gt;/config&lt;/code&gt; in other containers (ie. &lt;code&gt;-v /path-to-le-config/etc:/le-ssl&lt;/code&gt;) and in the other containers, use the cert location &lt;code&gt;/le-ssl/letsencrypt/live/&amp;lt;your.domain.url&amp;gt;/&lt;/code&gt; (This is more secure because the first method shares the entire SWAG config folder with other containers, including the www files, whereas the second method only shares the ssl certs)&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;These certs include:&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;cert.pem&lt;/code&gt;, &lt;code&gt;chain.pem&lt;/code&gt;, &lt;code&gt;fullchain.pem&lt;/code&gt; and &lt;code&gt;privkey.pem&lt;/code&gt;, which are generated by Certbot and used by nginx and various other apps&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;privkey.pfx&lt;/code&gt;, a format supported by Microsoft and commonly used by dotnet apps such as Emby Server (no password)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;priv-fullchain-bundle.pem&lt;/code&gt;, a pem cert that bundles the private key and the fullchain, used by apps like ZNC&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Using fail2ban&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This container includes fail2ban set up with 5 jails by default: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;nginx-http-auth&lt;/li&gt; &#xA;   &lt;li&gt;nginx-badbots&lt;/li&gt; &#xA;   &lt;li&gt;nginx-botsearch&lt;/li&gt; &#xA;   &lt;li&gt;nginx-deny&lt;/li&gt; &#xA;   &lt;li&gt;nginx-unauthorized&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;To enable or disable other jails, modify the file &lt;code&gt;/config/fail2ban/jail.local&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To modify filters and actions, instead of editing the &lt;code&gt;.conf&lt;/code&gt; files, create &lt;code&gt;.local&lt;/code&gt; files with the same name and edit those because .conf files get overwritten when the actions and filters are updated. &lt;code&gt;.local&lt;/code&gt; files will append whatever&#39;s in the &lt;code&gt;.conf&lt;/code&gt; files (ie. &lt;code&gt;nginx-http-auth.conf&lt;/code&gt; --&amp;gt; &lt;code&gt;nginx-http-auth.local&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;You can check which jails are active via &lt;code&gt;docker exec -it swag fail2ban-client status&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can check the status of a specific jail via &lt;code&gt;docker exec -it swag fail2ban-client status &amp;lt;jail name&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can unban an IP via &lt;code&gt;docker exec -it swag fail2ban-client set &amp;lt;jail name&amp;gt; unbanip &amp;lt;IP&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;A list of commands can be found here: &lt;a href=&#34;https://www.fail2ban.org/wiki/index.php/Commands&#34;&gt;https://www.fail2ban.org/wiki/index.php/Commands&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Updating configs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This container creates a number of configs for nginx, proxy samples, etc.&lt;/li&gt; &#xA; &lt;li&gt;Config updates are noted in the changelog but not automatically applied to your files.&lt;/li&gt; &#xA; &lt;li&gt;If you have modified a file with noted changes in the changelog: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Keep your existing configs as is (not broken, don&#39;t fix)&lt;/li&gt; &#xA;   &lt;li&gt;Review our repository commits and apply the new changes yourself&lt;/li&gt; &#xA;   &lt;li&gt;Delete the modified config file with listed updates, restart the container, reapply your changes&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;If you have NOT modified a file with noted changes in the changelog: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Delete the config file with listed updates, restart the container&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Proxy sample updates are not listed in the changelog. See the changes here: &lt;a href=&#34;https://github.com/linuxserver/reverse-proxy-confs/commits/master&#34;&gt;https://github.com/linuxserver/reverse-proxy-confs/commits/master&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Proxy sample files WILL be updated, however your renamed (enabled) proxy files will not.&lt;/li&gt; &#xA; &lt;li&gt;You can check the new sample and adjust your active config as needed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Migration from the old &lt;code&gt;linuxserver/letsencrypt&lt;/code&gt; image&lt;/h3&gt; &#xA;&lt;p&gt;Please follow the instructions &lt;a href=&#34;https://www.linuxserver.io/blog/2020-08-21-introducing-swag#migrate&#34;&gt;on this blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Here are some example snippets to help you get started creating a container.&lt;/p&gt; &#xA;&lt;h3&gt;docker-compose (recommended, &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;version: &#34;2.1&#34;&#xA;services:&#xA;  swag:&#xA;    image: lscr.io/linuxserver/swag:latest&#xA;    container_name: swag&#xA;    cap_add:&#xA;      - NET_ADMIN&#xA;    environment:&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      - TZ=Europe/London&#xA;      - URL=yourdomain.url&#xA;      - VALIDATION=http&#xA;      - SUBDOMAINS=www, #optional&#xA;      - CERTPROVIDER= #optional&#xA;      - DNSPLUGIN=cloudflare #optional&#xA;      - PROPAGATION= #optional&#xA;      - DUCKDNSTOKEN= #optional&#xA;      - EMAIL= #optional&#xA;      - ONLY_SUBDOMAINS=false #optional&#xA;      - EXTRA_DOMAINS= #optional&#xA;      - STAGING=false #optional&#xA;    volumes:&#xA;      - /path/to/appdata/config:/config&#xA;    ports:&#xA;      - 443:443&#xA;      - 80:80 #optional&#xA;    restart: unless-stopped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;docker cli (&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/cli/&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name=swag \&#xA;  --cap-add=NET_ADMIN \&#xA;  -e PUID=1000 \&#xA;  -e PGID=1000 \&#xA;  -e TZ=Europe/London \&#xA;  -e URL=yourdomain.url \&#xA;  -e VALIDATION=http \&#xA;  -e SUBDOMAINS=www, `#optional` \&#xA;  -e CERTPROVIDER= `#optional` \&#xA;  -e DNSPLUGIN=cloudflare `#optional` \&#xA;  -e PROPAGATION= `#optional` \&#xA;  -e DUCKDNSTOKEN= `#optional` \&#xA;  -e EMAIL= `#optional` \&#xA;  -e ONLY_SUBDOMAINS=false `#optional` \&#xA;  -e EXTRA_DOMAINS= `#optional` \&#xA;  -e STAGING=false `#optional` \&#xA;  -p 443:443 \&#xA;  -p 80:80 `#optional` \&#xA;  -v /path/to/appdata/config:/config \&#xA;  --restart unless-stopped \&#xA;  lscr.io/linuxserver/swag:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Parameters&lt;/h2&gt; &#xA;&lt;p&gt;Container images are configured using parameters passed at runtime (such as those above). These parameters are separated by a colon and indicate &lt;code&gt;&amp;lt;external&amp;gt;:&amp;lt;internal&amp;gt;&lt;/code&gt; respectively. For example, &lt;code&gt;-p 8080:80&lt;/code&gt; would expose port &lt;code&gt;80&lt;/code&gt; from inside the container to be accessible from the host&#39;s IP on port &lt;code&gt;8080&lt;/code&gt; outside the container.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 443&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Https port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 80&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Http port (required for http validation and http -&amp;gt; https redirect)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PUID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for UserID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PGID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for GroupID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e TZ=Europe/London&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a timezone to use EG Europe/London.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e URL=yourdomain.url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Top url you have control over (&lt;code&gt;customdomain.com&lt;/code&gt; if you own it, or &lt;code&gt;customsubdomain.ddnsprovider.com&lt;/code&gt; if dynamic dns).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e VALIDATION=http&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Certbot validation method to use, options are &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;dns&lt;/code&gt; or &lt;code&gt;duckdns&lt;/code&gt; (&lt;code&gt;dns&lt;/code&gt; method also requires &lt;code&gt;DNSPLUGIN&lt;/code&gt; variable set) (&lt;code&gt;duckdns&lt;/code&gt; method requires &lt;code&gt;DUCKDNSTOKEN&lt;/code&gt; variable set, and the &lt;code&gt;SUBDOMAINS&lt;/code&gt; variable must be either empty or set to &lt;code&gt;wildcard&lt;/code&gt;).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e SUBDOMAINS=www,&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Subdomains you&#39;d like the cert to cover (comma separated, no spaces) ie. &lt;code&gt;www,ftp,cloud&lt;/code&gt;. For a wildcard cert, set this &lt;em&gt;exactly&lt;/em&gt; to &lt;code&gt;wildcard&lt;/code&gt; (wildcard cert is available via &lt;code&gt;dns&lt;/code&gt; and &lt;code&gt;duckdns&lt;/code&gt; validation only)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e CERTPROVIDER=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optionally define the cert provider. Set to &lt;code&gt;zerossl&lt;/code&gt; for ZeroSSL certs (requires existing &lt;a href=&#34;https://app.zerossl.com/signup&#34;&gt;ZeroSSL account&lt;/a&gt; and the e-mail address entered in &lt;code&gt;EMAIL&lt;/code&gt; env var). Otherwise defaults to Let&#39;s Encrypt.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DNSPLUGIN=cloudflare&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Required if &lt;code&gt;VALIDATION&lt;/code&gt; is set to &lt;code&gt;dns&lt;/code&gt;. Options are &lt;code&gt;aliyun&lt;/code&gt;, &lt;code&gt;azure&lt;/code&gt;, &lt;code&gt;cloudflare&lt;/code&gt;, &lt;code&gt;cloudxns&lt;/code&gt;, &lt;code&gt;cpanel&lt;/code&gt;, &lt;code&gt;desec&lt;/code&gt;, &lt;code&gt;digitalocean&lt;/code&gt;, &lt;code&gt;directadmin&lt;/code&gt;, &lt;code&gt;dnsimple&lt;/code&gt;, &lt;code&gt;dnsmadeeasy&lt;/code&gt;, &lt;code&gt;dnspod&lt;/code&gt;, &lt;code&gt;domeneshop&lt;/code&gt;, &lt;code&gt;gandi&lt;/code&gt;, &lt;code&gt;gehirn&lt;/code&gt;, &lt;code&gt;google&lt;/code&gt;, &lt;code&gt;he&lt;/code&gt;, &lt;code&gt;hetzner&lt;/code&gt;, &lt;code&gt;infomaniak&lt;/code&gt;, &lt;code&gt;inwx&lt;/code&gt;, &lt;code&gt;ionos&lt;/code&gt;, &lt;code&gt;linode&lt;/code&gt;, &lt;code&gt;loopia&lt;/code&gt;, &lt;code&gt;luadns&lt;/code&gt;, &lt;code&gt;netcup&lt;/code&gt;, &lt;code&gt;njalla&lt;/code&gt;, &lt;code&gt;nsone&lt;/code&gt;, &lt;code&gt;ovh&lt;/code&gt;, &lt;code&gt;rfc2136&lt;/code&gt;, &lt;code&gt;route53&lt;/code&gt;, &lt;code&gt;sakuracloud&lt;/code&gt;, &lt;code&gt;standalone&lt;/code&gt;, &lt;code&gt;transip&lt;/code&gt; and &lt;code&gt;vultr&lt;/code&gt;. Also need to enter the credentials into the corresponding ini (or json for some plugins) file under &lt;code&gt;/config/dns-conf&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PROPAGATION=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optionally override (in seconds) the default propagation time for the dns plugins.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DUCKDNSTOKEN=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Required if &lt;code&gt;VALIDATION&lt;/code&gt; is set to &lt;code&gt;duckdns&lt;/code&gt;. Retrieve your token from &lt;a href=&#34;https://www.duckdns.org&#34;&gt;https://www.duckdns.org&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e EMAIL=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optional e-mail address used for cert expiration notifications (Required for ZeroSSL).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e ONLY_SUBDOMAINS=false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If you wish to get certs only for certain subdomains, but not the main domain (main domain may be hosted on another machine and cannot be validated), set this to &lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e EXTRA_DOMAINS=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Additional fully qualified domain names (comma separated, no spaces) ie. &lt;code&gt;extradomain.com,subdomain.anotherdomain.org,*.anotherdomain.org&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e STAGING=false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set to &lt;code&gt;true&lt;/code&gt; to retrieve certs in staging mode. Rate limits will be much higher, but the resulting cert will not pass the browser&#39;s security test. Only to be used for testing purposes.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All the config files including the webroot reside here.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Portainer notice&lt;/h3&gt; &#xA;&lt;p&gt;This image utilises &lt;code&gt;cap_add&lt;/code&gt; or &lt;code&gt;sysctl&lt;/code&gt; to work properly. This is not implemented properly in some versions of Portainer, thus this image may not work if deployed through Portainer.&lt;/p&gt; &#xA;&lt;h2&gt;Environment variables from files (Docker secrets)&lt;/h2&gt; &#xA;&lt;p&gt;You can set any environment variable from a file by using a special prepend &lt;code&gt;FILE__&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;-e FILE__PASSWORD=/run/secrets/mysecretpassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will set the environment variable &lt;code&gt;PASSWORD&lt;/code&gt; based on the contents of the &lt;code&gt;/run/secrets/mysecretpassword&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Umask for running applications&lt;/h2&gt; &#xA;&lt;p&gt;For all of our images we provide the ability to override the default umask settings for services started within the containers using the optional &lt;code&gt;-e UMASK=022&lt;/code&gt; setting. Keep in mind umask is not chmod it subtracts from permissions based on it&#39;s value it does not add. Please read up &lt;a href=&#34;https://en.wikipedia.org/wiki/Umask&#34;&gt;here&lt;/a&gt; before asking for support.&lt;/p&gt; &#xA;&lt;h2&gt;User / Group Identifiers&lt;/h2&gt; &#xA;&lt;p&gt;When using volumes (&lt;code&gt;-v&lt;/code&gt; flags) permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user &lt;code&gt;PUID&lt;/code&gt; and group &lt;code&gt;PGID&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ensure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.&lt;/p&gt; &#xA;&lt;p&gt;In this instance &lt;code&gt;PUID=1000&lt;/code&gt; and &lt;code&gt;PGID=1000&lt;/code&gt;, to find yours use &lt;code&gt;id user&lt;/code&gt; as below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ id username&#xA;    uid=1000(dockeruser) gid=1000(dockergroup) groups=1000(dockergroup)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Mods&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mods.linuxserver.io/?mod=swag&#34; title=&#34;view available mods for this container.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=swag&amp;amp;query=%24.mods%5B%27swag%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Mods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mods.linuxserver.io/?mod=universal&#34; title=&#34;view available universal mods.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=universal&amp;amp;query=%24.mods%5B%27universal%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Universal Mods&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We publish various &lt;a href=&#34;https://github.com/linuxserver/docker-mods&#34;&gt;Docker Mods&lt;/a&gt; to enable additional functionality within the containers. The list of Mods available for this image (if any) as well as universal mods that can be applied to any one of our images can be accessed via the dynamic badges above.&lt;/p&gt; &#xA;&lt;h2&gt;Support Info&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shell access whilst the container is running: &lt;code&gt;docker exec -it swag /bin/bash&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To monitor the logs of the container in realtime: &lt;code&gt;docker logs -f swag&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;container version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; swag&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;image version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; lscr.io/linuxserver/swag:latest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updating Info&lt;/h2&gt; &#xA;&lt;p&gt;Most of our images are static, versioned, and require an image update and container recreation to update the app inside. With some exceptions (ie. nextcloud, plex), we do not recommend or support updating apps inside the container. Please consult the &lt;a href=&#34;https://raw.githubusercontent.com/linuxserver/docker-swag/master/#application-setup&#34;&gt;Application Setup&lt;/a&gt; section above to see if it is recommended for the image.&lt;/p&gt; &#xA;&lt;p&gt;Below are the instructions for updating containers:&lt;/p&gt; &#xA;&lt;h3&gt;Via Docker Compose&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update all images: &lt;code&gt;docker-compose pull&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single image: &lt;code&gt;docker-compose pull swag&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Let compose update all containers as necessary: &lt;code&gt;docker-compose up -d&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single container: &lt;code&gt;docker-compose up -d swag&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Docker Run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update the image: &lt;code&gt;docker pull lscr.io/linuxserver/swag:latest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stop the running container: &lt;code&gt;docker stop swag&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Delete the container: &lt;code&gt;docker rm swag&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your &lt;code&gt;/config&lt;/code&gt; folder and settings will be preserved)&lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Watchtower auto-updater (only use if you don&#39;t remember the original parameters)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pull the latest image at its tag and replace it with the same env variables in one run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm \&#xA;-v /var/run/docker.sock:/var/run/docker.sock \&#xA;containrrr/watchtower \&#xA;--run-once swag&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We do not endorse the use of Watchtower as a solution to automated updates of existing Docker containers. In fact we generally discourage automated updates. However, this is a useful tool for one-time manual updates of containers where you have forgotten the original parameters. In the long term, we highly recommend using &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;Docker Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Image Update Notifications - Diun (Docker Image Update Notifier)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We recommend &lt;a href=&#34;https://crazymax.dev/diun/&#34;&gt;Diun&lt;/a&gt; for update notifications. Other tools that automatically update containers unattended are not recommended or supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building locally&lt;/h2&gt; &#xA;&lt;p&gt;If you want to make local modifications to these images for development purposes or just to customize the logic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/linuxserver/docker-swag.git&#xA;cd docker-swag&#xA;docker build \&#xA;  --no-cache \&#xA;  --pull \&#xA;  -t lscr.io/linuxserver/swag:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ARM variants can be built on x86_64 hardware using &lt;code&gt;multiarch/qemu-user-static&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --privileged multiarch/qemu-user-static:register --reset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once registered you can define the dockerfile to use with &lt;code&gt;-f Dockerfile.aarch64&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;18.05.22:&lt;/strong&gt; - Added support for Azure DNS validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.04.22:&lt;/strong&gt; - Added certbot-dns-loopia for DNS01 validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;05.04.22:&lt;/strong&gt; - Added support for standalone DNS validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;28.03.22:&lt;/strong&gt; - created a logfile for fail2ban nginx-unauthorized in /etc/cont-init.d/50-config&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.01.22:&lt;/strong&gt; - Added a fail2ban jail for nginx unauthorized&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;21.12.21:&lt;/strong&gt; - Fixed issue with iptables not working as expected&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;30.11.21:&lt;/strong&gt; - Move maxmind to a &lt;a href=&#34;https://github.com/linuxserver/docker-mods/tree/swag-maxmind&#34;&gt;new mod&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;22.11.21:&lt;/strong&gt; - Added support for Infomaniak DNS for certificate generation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.11.21:&lt;/strong&gt; - Added support for dnspod validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;15.11.21:&lt;/strong&gt; - Added support for deSEC DNS for wildcard certificate generation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;26.10.21:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; proxy.conf - Mitigate &lt;a href=&#34;https://httpoxy.org/&#34;&gt;https://httpoxy.org/&lt;/a&gt; vulnerabilities. Ref: &lt;a href=&#34;https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx#Defeating-the-Attack-using-NGINX-and-NGINX-Plus&#34;&gt;https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx#Defeating-the-Attack-using-NGINX-and-NGINX-Plus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.10.21:&lt;/strong&gt; - Fix Hurricane Electric (HE) DNS validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;12.10.21:&lt;/strong&gt; - Fix deprecated LE root cert check to fix failures when using &lt;code&gt;STAGING=true&lt;/code&gt;, and failures in revoking.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;06.10.21:&lt;/strong&gt; - Added support for Hurricane Electric (HE) DNS validation. Added lxml build deps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.10.21:&lt;/strong&gt; - Check if the cert uses the old LE root cert, revoke and regenerate if necessary. &lt;a href=&#34;https://twitter.com/letsencrypt/status/1443621997288767491&#34;&gt;Here&#39;s more info&lt;/a&gt; on LE root cert expiration&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;19.09.21:&lt;/strong&gt; - Add an optional header to opt out of Google FLoC in &lt;code&gt;ssl.conf&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;17.09.21:&lt;/strong&gt; - Mark &lt;code&gt;SUBDOMAINS&lt;/code&gt; var as optional.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.08.21:&lt;/strong&gt; - Add support for ionos dns validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;15.07.21:&lt;/strong&gt; - Fix libmaxminddb issue due to upstream change.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;07.07.21:&lt;/strong&gt; - Rebase to alpine 3.14.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;24.06.21:&lt;/strong&gt; - Update default nginx conf folder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;28.05.21:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; authelia-server.conf - Use &lt;code&gt;resolver.conf&lt;/code&gt; and patch for &lt;code&gt;CVE-2021-32637&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.05.21:&lt;/strong&gt; - Modify resolver.conf generation to detect and ignore ipv6.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;14.05.21:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; nginx.conf, ssl.conf, proxy.conf, and the default site-conf - Rework nginx.conf to be inline with alpine upstream and relocate lines from other files. Use linuxserver.io wheel index for pip packages. Switch to using &lt;a href=&#34;https://ssl-config.mozilla.org/ffdhe4096.txt&#34;&gt;ffdhe4096&lt;/a&gt; for &lt;code&gt;dhparams.pem&lt;/code&gt; per &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc7919&#34;&gt;RFC7919&lt;/a&gt;. Added &lt;code&gt;worker_processes.conf&lt;/code&gt;, which sets the number of nginx workers, and &lt;code&gt;resolver.conf&lt;/code&gt;, which sets the dns resolver. Both conf files are auto-generated only on first start and can be user modified later.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;21.04.21:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; authelia-server.conf and authelia-location.conf - Add remote name/email headers and pass http method.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;12.04.21:&lt;/strong&gt; - Add php7-gmp and php7-pecl-mailparse.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;12.04.21:&lt;/strong&gt; - Add support for vultr dns validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;14.03.21:&lt;/strong&gt; - Add support for directadmin dns validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;12.02.21:&lt;/strong&gt; - Clean up rust/cargo cache, which ballooned the image size in the last couple of builds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;10.02.21:&lt;/strong&gt; - Fix aliyun, domeneshop, inwx and transip dns confs for existing users.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.02.21:&lt;/strong&gt; - Rebasing to alpine 3.13. Add nginx mods brotli and dav-ext. Remove nginx mods lua and lua-upstream (due to regression over the last couple of years).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;26.01.21:&lt;/strong&gt; - Add support for hetzner dns validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.01.21:&lt;/strong&gt; - Add check for ZeroSSL EAB retrieval.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;08.01.21:&lt;/strong&gt; - Add support for getting certs from &lt;a href=&#34;https://zerossl.com/&#34;&gt;ZeroSSL&lt;/a&gt; via optional &lt;code&gt;CERTPROVIDER&lt;/code&gt; env var. Update aliyun, domeneshop, inwx and transip dns plugins with the new plugin names. Hide &lt;code&gt;donoteditthisfile.conf&lt;/code&gt; because users were editing it despite its name. Suppress harmless error when no proxy confs are enabled.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;03.01.21:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; /config/nginx/site-confs/default - Add helper pages to aid troubleshooting&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;10.12.20:&lt;/strong&gt; - Add support for njalla dns validation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.12.20:&lt;/strong&gt; - Check for template/conf updates and notify in the log. Add support for gehirn and sakuracloud dns validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.11.20:&lt;/strong&gt; - Add support for netcup dns validation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.10.20:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; ssl.conf - Add frame-ancestors to Content-Security-Policy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;04.10.20:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; nginx.conf, proxy.conf, and ssl.conf - Minor cleanups and reordering.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.09.20:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; nginx.conf - Added geoip2 configs. Added MAXMINDDB_LICENSE_KEY variable to readme.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;08.09.20:&lt;/strong&gt; - Add php7-xsl.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.09.20:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; nginx.conf, proxy.conf, and various proxy samples - Global websockets across all configs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;03.08.20:&lt;/strong&gt; - Initial release.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>chainstack/docs</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/chainstack/docs</id>
    <link href="https://github.com/chainstack/docs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Platform documentation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chainstack documentation&lt;/h1&gt; &#xA;&lt;p&gt;Static Markdown-powered website based on &lt;a href=&#34;https://github.com/vuejs/vuepress&#34;&gt;VuePress&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;h2&gt;Install dependencies&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The website will be running on &lt;code&gt;http://127.0.0.1:8080&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The assets will be generated in &lt;code&gt;docs/.vuepress/dist&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/chainstack/docs/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bosh-packages/cf-cli-release</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/bosh-packages/cf-cli-release</id>
    <link href="https://github.com/bosh-packages/cf-cli-release" rel="alternate"></link>
    <summary type="html">&lt;p&gt;BOSH release of Cloud Foundry CLI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cf-cli-release&lt;/h1&gt; &#xA;&lt;p&gt;This release allows a BOSH release author to install a specific *official version of the CF CLI binary in their deployment. The release currently comprises two major versions of the CLI: v7 (via the &lt;code&gt;cf-cli-7-linux&lt;/code&gt; package) and v8 (via the &lt;code&gt;cf-cli-8-linux&lt;/code&gt; package).&lt;/p&gt; &#xA;&lt;p&gt;*official: the CF CLI binary is signed with a Cloud Foundry Foundation certificate, certifying that the source code has not been tampered with.&lt;/p&gt; &#xA;&lt;h2&gt;Consuming the release&lt;/h2&gt; &#xA;&lt;p&gt;To co-locate the Linux CF CLI BOSH job on your target VM, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add the &lt;code&gt;cf-cli&lt;/code&gt; BOSH release to your deployment manifest.&lt;/li&gt; &#xA; &lt;li&gt;Colocate either the &lt;code&gt;cf-cli-7-linux&lt;/code&gt; or &lt;code&gt;cf-cli-8-linux&lt;/code&gt; BOSH job on the instance group you want to use the CF CLI binary on.&lt;/li&gt; &#xA; &lt;li&gt;Modify your BOSH job script that uses the cli to add the &lt;code&gt;cf&lt;/code&gt; binary of your choice to the PATH.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Behind the scenes, the CF CLI binary is installed on the target machine at compile time via the &lt;code&gt;cf-cli-7-linux&lt;/code&gt; or &lt;code&gt;cf-cli-8-linux&lt;/code&gt; BOSH package (dependency of the &lt;code&gt;cf-cli-(7 | 8)-linux&lt;/code&gt; BOSH job). The binary will be located at &lt;code&gt;/var/vcap/packages/cf-cli-(7 | 8)-linux/bin/cf&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Warning&lt;/h3&gt; &#xA;&lt;p&gt;Before consuming the release, ensure you&#39;ve removed all previous &lt;code&gt;cf&lt;/code&gt; CLI from either your blobs or packages.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;To test installation of the CF CLI binary via BOSH job co-location, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./tests/run.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create a deployment using your currently targeted BOSH Director.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>accupara/docker-images</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/accupara/docker-images</id>
    <link href="https://github.com/accupara/docker-images" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docker images for various compilation contexts&lt;/h1&gt; &#xA;&lt;h2&gt;Why?&lt;/h2&gt; &#xA;&lt;p&gt;Getting just the right dependencies to compile a project is a chore.&lt;br&gt; Why can&#39;t it just be available without the libraries stepping on each other and polluting your pristine development environment?&lt;br&gt; A Docker container can contain the entire build environment into an easy to use package that will not pollute your dev box.&lt;br&gt; Besides, you could even have multiple build environments without any environment interfering with the other.&lt;br&gt; It is like a Python virtualenv that works even for non-Python projects!&lt;br&gt; &lt;img src=&#34;https://i.imgflip.com/1ecipw.jpg&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;When building on the Accupara infrastructure, these docker images are a good starting point for containing the dependencies required for compiling your projects.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All containers are based off non-root Ubuntu images&lt;/li&gt; &#xA; &lt;li&gt;I&#39;ve tried to keep the obvious similarities higher up in the image layer stack&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;List of build environments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux kernel compilation: &lt;a href=&#34;https://github.com/accupara/docker-images/raw/master/linuxkernel/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;, and &lt;a href=&#34;https://hub.docker.com/r/accupara/lkbuild/&#34;&gt;image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Android apps: &lt;a href=&#34;https://github.com/accupara/docker-images/raw/master/mobile/android/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;, and &lt;a href=&#34;https://hub.docker.com/r/accupara/android/&#34;&gt;image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;BlackBerry 10 apps: &lt;a href=&#34;https://github.com/accupara/docker-images/raw/master/mobile/bb10/ndk/Makefile&#34;&gt;Makefile&lt;/a&gt;, and &lt;a href=&#34;https://hub.docker.com/r/accupara/bbndk/&#34;&gt;image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Qt apps targeting Linux: &lt;a href=&#34;https://github.com/accupara/docker-images/tree/master/qt&#34;&gt;Top level&lt;/a&gt;, and images: &lt;a href=&#34;https://hub.docker.com/r/accupara/qt4/&#34;&gt;qt4&lt;/a&gt;, &lt;a href=&#34;https://hub.docker.com/r/accupara/qt5/&#34;&gt;qt5&lt;/a&gt;, etc.&lt;/li&gt; &#xA; &lt;li&gt;qemu: &lt;a href=&#34;https://github.com/accupara/docker-images/raw/master/qemu/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;, and &lt;a href=&#34;https://hub.docker.com/r/accupara/qemu/&#34;&gt;image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;rsync: &lt;a href=&#34;https://github.com/accupara/docker-images/raw/master/rsync/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;, and &lt;a href=&#34;https://hub.docker.com/r/accupara/rsync/&#34;&gt;image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;gcc &lt;a href=&#34;https://github.com/accupara/docker-images/raw/master/gcc/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;, and &lt;a href=&#34;https://hub.docker.com/r/accupara/gcc/&#34;&gt;image&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>bit-bots/containers</title>
    <updated>2022-06-01T01:39:00Z</updated>
    <id>tag:github.com,2022-06-01:/bit-bots/containers</id>
    <link href="https://github.com/bit-bots/containers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Collection of docker containers used in various capacities&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bit-Bots containers&lt;/h1&gt; &#xA;&lt;p&gt;A collection of docker containers used in various capacities.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bit-bots/containers/main/jenkins&#34;&gt;jenkins&lt;/a&gt; A periodically rebuilt container that includes all plugins needed by our Jenkins instance (&lt;a href=&#34;http://ci.bit-bots.de&#34;&gt;ci.bit-bots.de&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bit-bots/containers/main/bitbots_builder&#34;&gt;bitbots_builder&lt;/a&gt; A container image which is able to compile and document our codebase. It exists so that we don&#39;t need to reinstall all dependencies whenever a build is triggered.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>