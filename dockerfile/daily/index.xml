<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-24T01:39:02Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mak-mat/Docker_Webserver</title>
    <updated>2022-07-24T01:39:02Z</updated>
    <id>tag:github.com,2022-07-24:/mak-mat/Docker_Webserver</id>
    <link href="https://github.com/mak-mat/Docker_Webserver" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>rocker-org/rocker-versioned2</title>
    <updated>2022-07-24T01:39:02Z</updated>
    <id>tag:github.com,2022-07-24:/rocker-org/rocker-versioned2</id>
    <link href="https://github.com/rocker-org/rocker-versioned2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run current &amp; prior versions of R using docker. rocker/r-ver, rocker/rstudio, rocker/shiny, rocker/tidyverse, and so on.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Version-stable Rocker images &lt;img src=&#34;https://avatars0.githubusercontent.com/u/9100160?v=3&amp;amp;s=200&#34; align=&#34;right&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/GPL-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPLv2-blue.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.repostatus.org/#active&#34;&gt;&lt;img src=&#34;https://www.repostatus.org/badges/latest/active.svg?sanitize=true&#34; alt=&#34;Project Status: Active â€“ The project has reached a stable, usable state and is being actively developed.&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rocker-org/rocker-versioned2/actions/workflows/dockerfiles.yml&#34;&gt;&lt;img src=&#34;https://github.com/rocker-org/rocker-versioned2/actions/workflows/dockerfiles.yml/badge.svg?sanitize=true&#34; alt=&#34;Update container definition files&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rocker-org/rocker-versioned2/actions/workflows/core.yml&#34;&gt;&lt;img src=&#34;https://github.com/rocker-org/rocker-versioned2/actions/workflows/core.yml/badge.svg?sanitize=true&#34; alt=&#34;Build &amp;amp; Push Core images&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rocker-org/rocker-versioned2/actions/workflows/devel.yml&#34;&gt;&lt;img src=&#34;https://github.com/rocker-org/rocker-versioned2/actions/workflows/devel.yml/badge.svg?sanitize=true&#34; alt=&#34;Build &amp;amp; Push R devel images and RStudio daily build images&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://rocker-project.org&#34;&gt;rocker-project.org&lt;/a&gt; for more about available Rocker images, configuration, and use.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This repository provides &lt;a href=&#34;https://hub.docker.com/r/rocker/r-ver&#34;&gt;&lt;code&gt;rocker/r-ver&lt;/code&gt;&lt;/a&gt; and its derived images, alternate stack to &lt;a href=&#34;https://hub.docker.com/_/r-base&#34;&gt;&lt;code&gt;r-base&lt;/code&gt;&lt;/a&gt;, with an emphasis on reproducibility.&lt;/p&gt; &#xA;&lt;p&gt;Compared to &lt;code&gt;r-base&lt;/code&gt;, this stack:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Builds on Ubuntu LTS rather than Debian and system libraries are tied to the Ubuntu version. Images will use the most recent LTS available at the time when the corresponding R version was released. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Since compatibility problems are likely to occur immediately after the release of a new Ubuntu LTS, the version to be used is the one that is at least 90 days past release. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;rocker/r-ver:4.0.0&lt;/code&gt; is based on Ubuntu 20.04 (&lt;code&gt;ubuntu:focal&lt;/code&gt;) because no interval was set at the time of the Ubuntu 20.04 release.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Installs a fixed version of R itself from source, rather than whatever is already packaged for Ubuntu (the &lt;code&gt;r-base&lt;/code&gt; stack gets the latest R version as a binary from Debian unstable).&lt;/li&gt; &#xA; &lt;li&gt;The only platforms available are &lt;code&gt;linux/amd64&lt;/code&gt; and &lt;code&gt;linux/arm64&lt;/code&gt; (arm64 images are experimental and only available for &lt;code&gt;rocker/r-ver&lt;/code&gt; 4.1.0 or later).&lt;/li&gt; &#xA; &lt;li&gt;Set &lt;a href=&#34;https://packagemanager.rstudio.com&#34;&gt;the RStudio Public Package Manager (RSPM)&lt;/a&gt; as default CRAN mirror. For the amd64 platform, RSPM serves compiled Linux binaries of R packages and greatly speeds up package installs.&lt;/li&gt; &#xA; &lt;li&gt;Non-latest R version images installs all R packages from a fixed snapshot of CRAN mirror at a given date. This setting ensures that the same version of the R package is installed no matter when the installation is performed. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In addition to CRAN mirror, the version of RStudio Server installed in &lt;code&gt;rocker/rstudio&lt;/code&gt; and the date of CTAN mirror set in &lt;code&gt;rocker/verse&lt;/code&gt; are also fixed. Please check &lt;a href=&#34;https://github.com/rocker-org/rocker-versioned2/wiki/Versions&#34;&gt;the document about versions&lt;/a&gt; for details.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Provides images that are generally smaller than the &lt;code&gt;r-base&lt;/code&gt; series.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: This repository is for R &amp;gt;= 4.0.0 images. For images with R &amp;lt;= 3.6.3, please see the &lt;a href=&#34;https://github.com/rocker-org/rocker-versioned&#34;&gt;&lt;code&gt;rocker-versioned&lt;/code&gt;&lt;/a&gt; repository, or the &lt;a href=&#34;https://github.com/rocker-org/shiny&#34;&gt;&lt;code&gt;shiny&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/rocker-org/geospatial&#34;&gt;&lt;code&gt;geospatial&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&#34;https://github.com/rocker-org/binder&#34;&gt;&lt;code&gt;binder&lt;/code&gt;&lt;/a&gt; repositories.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Pre-built images&lt;/h2&gt; &#xA;&lt;p&gt;The following images have been built and are available on DockerHub or &lt;a href=&#34;https://github.com/orgs/rocker-org/packages?repo_name=rocker-versioned2&#34;&gt;GitHub Container Registry&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more information about these container images, please see &lt;a href=&#34;https://github.com/rocker-org/rocker-versioned2/wiki&#34;&gt;the Wiki of this repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Image list&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://rocker-project.org/images/#the-versioned-stack&#34;&gt;the Rocker project site&lt;/a&gt; for the list of images.&lt;/p&gt; &#xA;&lt;h3&gt;Tags&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://github.com/rocker-org/rocker-versioned2/wiki&#34;&gt;the Wiki&lt;/a&gt; for the list of tags.&lt;/p&gt; &#xA;&lt;h4&gt;Spacial tags for daily builds&lt;/h4&gt; &#xA;&lt;p&gt;There are also special tags that are not listed in the wiki, &lt;code&gt;devel&lt;/code&gt; and &lt;code&gt;latest-daily&lt;/code&gt;. The GitHub Actions workflow build and push these images daily.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;devel&lt;/code&gt; images are based on &lt;code&gt;ubuntu:latest&lt;/code&gt; (the latest Ubuntu LTS version) and install &lt;a href=&#34;https://cloud.r-project.org/src/base-prerelease/&#34;&gt;the latest R-devel daily snapshot&lt;/a&gt;. &lt;code&gt;devel&lt;/code&gt; tag is vailable for &lt;code&gt;rocker/r-ver&lt;/code&gt;, &lt;code&gt;rocker/rstudio&lt;/code&gt;, &lt;code&gt;rocker/tidyverse&lt;/code&gt;, &lt;code&gt;rocker/verse&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;latest-daily&lt;/code&gt; tag images are based on &lt;code&gt;rocker/r-ver:latest&lt;/code&gt; and install &lt;a href=&#34;https://dailies.rstudio.com/&#34;&gt;the latest RStudio daily build&lt;/a&gt;. &lt;code&gt;latest-daily&lt;/code&gt; tag is available for &lt;code&gt;rocker/rstudio&lt;/code&gt;, &lt;code&gt;rocker/tidyverse&lt;/code&gt;, &lt;code&gt;rocker/verse&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Spacial tags for geospatial toolkit&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;rocker/geospatial:ubuntugis&lt;/code&gt; (&lt;code&gt;rocker/geospatial:X.Y.Z-ubuntugis&lt;/code&gt;) and &lt;code&gt;rocker/geospatial:dev-osgeo&lt;/code&gt; are special images that differ slightly from the regular &lt;code&gt;rocker/geospatial&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ubuntugis&lt;/code&gt; is built on packages installed from &lt;a href=&#34;https://launchpad.net/~ubuntugis/+archive/ubuntu/ubuntugis-unstable&#34;&gt;the ubuntugis-unstable PPA&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dev-osgeo&lt;/code&gt; is built on the latest release of &lt;a href=&#34;https://proj.org/&#34;&gt;PROJ&lt;/a&gt;, &lt;a href=&#34;https://gdal.org/&#34;&gt;GDAL&lt;/a&gt;, and &lt;a href=&#34;https://libgeos.org/&#34;&gt;GEOS&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Modifying and extending images&lt;/h2&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://rocker-project.org/use/extending.html&#34;&gt;the Rocker project site&lt;/a&gt; for common methods for Rocker images.&lt;/p&gt; &#xA;&lt;h3&gt;Install R packages&lt;/h3&gt; &#xA;&lt;p&gt;Please install R packages from source using the &lt;code&gt;install.packages()&lt;/code&gt; R function or the &lt;code&gt;install2.r&lt;/code&gt; script, and use &lt;code&gt;apt&lt;/code&gt; only to install necessary system libraries (e.g. &lt;code&gt;libxml2&lt;/code&gt;). Do not use &lt;code&gt;apt install r-cran-*&lt;/code&gt; to install R packages.&lt;/p&gt; &#xA;&lt;p&gt;If you would prefer to install only the latest verions of packages from pre-built binaries using &lt;code&gt;apt&lt;/code&gt;, consider using &lt;code&gt;r-base&lt;/code&gt; or &lt;a href=&#34;https://github.com/rocker-org/bspm&#34;&gt;&lt;code&gt;rocker/r-bspm&lt;/code&gt;&lt;/a&gt; instead.&lt;/p&gt; &#xA;&lt;h3&gt;Rocker scripts&lt;/h3&gt; &#xA;&lt;p&gt;The Docker images built from this repository describe the software installation method in standalone scripts rather than directly in the Dockerfiles. These files are under &lt;a href=&#34;https://raw.githubusercontent.com/rocker-org/rocker-versioned2/master/scripts/&#34;&gt;the &lt;code&gt;scripts&lt;/code&gt; directory&lt;/a&gt;, and these files are copied in all Docker images, under a top-level &lt;code&gt;/rocker_scripts&lt;/code&gt; directory. This allows users to extend images by selecting additional modules to install on top of any pre-built images.&lt;/p&gt; &#xA;&lt;p&gt;For instance, if one wishes to install Shiny Server on top of a base of &lt;code&gt;rocker/rstudio:4.0.0&lt;/code&gt;, one could write a simple Dockerfile as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM rocker/rstudio:4.0.0&#xA;RUN /rocker_scripts/install_shiny_server.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install scripts can generally take a version as a first argument or ingest an environment variable to specify the version to install. So to install fixed versions, one can use either of the following syntaxes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM rocker/rstudio:4.0.0&#xA;ENV SHINY_SERVER_VERSION 1.5.14.948&#xA;RUN /rocker_scripts/install_shiny_server.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM rocker/rstudio:4.0.0&#xA;RUN /rocker_scripts/install_shiny_server.sh 1.5.14.948&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;RStudio Server and Shiny Server are managed by &lt;a href=&#34;https://github.com/just-containers/s6-overlay&#34;&gt;the S6 supervisor system&lt;/a&gt;, which allows containers to manage multiple background processes gracefully.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: No longer support &lt;code&gt;ADD=&lt;/code&gt; runtime triggers for installing Shiny or similar modules, which is used for R &amp;lt;= 3.6.3 images.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build images&lt;/h2&gt; &#xA;&lt;h3&gt;Container definition files&lt;/h3&gt; &#xA;&lt;p&gt;Dockerfiles and docker-bake.json files, which define the pre-built images, are in &lt;a href=&#34;https://raw.githubusercontent.com/rocker-org/rocker-versioned2/master/dockerfiles/&#34;&gt;the &lt;code&gt;dockerfiles&lt;/code&gt; folder&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/rocker-org/rocker-versioned2/master/bakefiles/&#34;&gt;the &lt;code&gt;bakefiles&lt;/code&gt; folder&lt;/a&gt;. And, these files are created from the JSON files under &lt;a href=&#34;https://raw.githubusercontent.com/rocker-org/rocker-versioned2/master/stacks/&#34;&gt;the &lt;code&gt;stacks&lt;/code&gt; folder&lt;/a&gt; by the build scripts under &lt;a href=&#34;https://raw.githubusercontent.com/rocker-org/rocker-versioned2/master/build/&#34;&gt;the &lt;code&gt;build&lt;/code&gt; folder&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When a new version of R or RStudio is released, GitHub Actions will automatically create a Pull Request to update these files.&lt;/p&gt; &#xA;&lt;h3&gt;Update pre-built images&lt;/h3&gt; &#xA;&lt;p&gt;Latest R version images will be built on a rolling basis; when the Dockerfiles are updated, they are immediately built by GitHub Actions.&lt;/p&gt; &#xA;&lt;p&gt;Non-latest R version images will be built when a new R version is released. At this time, a tag and a GitHub release will also be created.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please check &lt;a href=&#34;https://github.com/rocker-org/rocker/wiki/How-to-contribute&#34;&gt;https://github.com/rocker-org/rocker/wiki/How-to-contribute&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The Dockerfiles and the scripts in this repository are licensed under the GPL 2 or later.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nestybox/dockerfiles</title>
    <updated>2022-07-24T01:39:02Z</updated>
    <id>tag:github.com,2022-07-24:/nestybox/dockerfiles</id>
    <link href="https://github.com/nestybox/dockerfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dockerfiles repository&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nestybox System Container Dockerfiles&lt;/h1&gt; &#xA;&lt;p&gt;This directory contains the Dockerfiles for system container images uploaded to the Nestybox public repos on DockerHub and Github.&lt;/p&gt; &#xA;&lt;p&gt;The Dockerfiles and associated images are meant to be used as examples.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to copy them and modify them to your needs, or source them from within your Dockerfiles.&lt;/p&gt; &#xA;&lt;h1&gt;Pulling a Nestybox system container image&lt;/h1&gt; &#xA;&lt;p&gt;For example, to run the system container image that contains Ubuntu Bionic + Docker, simply type the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;DockerHub registry&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --runtime=sysbox-runc -it nestybox/ubuntu-bionic-docker:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Github registry:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --runtime=sysbox-runc -it ghcr.io/nestybox/ubuntu-bionic-docker:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Customizing the system container to your needs&lt;/h1&gt; &#xA;&lt;p&gt;Two approaches: either source the Nestybox image from within your own Dockerfile, or copy the Nestybox Dockerfile and modify it.&lt;/p&gt; &#xA;&lt;p&gt;The former approach makes sense if you wish to leverage the entire image.&lt;/p&gt; &#xA;&lt;p&gt;The latter approach makes sense if there is some instruction within the Nestybox Dockerfile that you wish to change.&lt;/p&gt; &#xA;&lt;h2&gt;Sourcing the Nestybox Image&lt;/h2&gt; &#xA;&lt;p&gt;Simply add this at the beginning of your Dockerfile&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;FROM nestybox/ubuntu-disco-docker:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then add your instructions to the Dockerfile.&lt;/p&gt; &#xA;&lt;p&gt;Then build the image and tag it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker build .&#xA;$ docker tag &amp;lt;image-tag&amp;gt; my-custom-syscont:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And run it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --runtime=sysbox-runc -it my-custom-syscont:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then push the image to your own container image repo for later re-use.&lt;/p&gt; &#xA;&lt;h2&gt;Copy the Dockerfile, modify it, and build a new image&lt;/h2&gt; &#xA;&lt;p&gt;First, copy the Nestybox Dockerfile to some directory, &lt;code&gt;cd&lt;/code&gt; to that directory, and modify it per your needs.&lt;/p&gt; &#xA;&lt;p&gt;Then build the image and tag it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker build .&#xA;$ docker tag &amp;lt;image-tag&amp;gt; my-custom-syscont:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And run it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --runtime=sysbox-runc -it my-custom-syscont:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then push the image to your own container image repo for later re-use.&lt;/p&gt;</summary>
  </entry>
</feed>