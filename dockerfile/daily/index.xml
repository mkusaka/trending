<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-08T01:18:18Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>t4p-community/python-codespace</title>
    <updated>2024-05-08T01:18:18Z</updated>
    <id>tag:github.com,2024-05-08:/t4p-community/python-codespace</id>
    <link href="https://github.com/t4p-community/python-codespace" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;How to use the Python Codespace&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Fork this repository to your GitHub account. Name the forked repository as something similar to the new one in your class or your project.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;From the forked repository in your account, click on the green &lt;code&gt;Code&lt;/code&gt; button, then click on the &lt;code&gt;Codespaces&lt;/code&gt; tab. Next, click &lt;code&gt;Create codespace on main&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GitHub will create a new Codespace. Codespaces are browser-based programming environments built on VS Code and Docker Containers.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>avinash-chauhan-mu/jenkins</title>
    <updated>2024-05-08T01:18:18Z</updated>
    <id>tag:github.com,2024-05-08:/avinash-chauhan-mu/jenkins</id>
    <link href="https://github.com/avinash-chauhan-mu/jenkins" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Files needed for Jenkins class&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;Build the Jenkins BlueOcean Docker Image&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build -t myjenkins-blueocean:lts-jdk11 .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Create the network &#39;jenkins&#39;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker network create jenkins&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run the Container&lt;/h2&gt; &#xA;&lt;h3&gt;MacOS / Linux&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --name jenkins-blueocean --restart=on-failure --detach \&#xA;  --network jenkins --env DOCKER_HOST=tcp://docker:2376 \&#xA;  --env DOCKER_CERT_PATH=/certs/client --env DOCKER_TLS_VERIFY=1 \&#xA;  --publish 8080:8080 --publish 50000:50000 \&#xA;  --volume jenkins-data:/var/jenkins_home \&#xA;  --volume jenkins-docker-certs:/certs/client:ro \&#xA;  myjenkins-blueocean:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --name jenkins-blueocean --restart=on-failure --detach `&#xA;  --network jenkins --env DOCKER_HOST=tcp://docker:2376 `&#xA;  --env DOCKER_CERT_PATH=/certs/client --env DOCKER_TLS_VERIFY=1 `&#xA;  --volume jenkins-data:/var/jenkins_home `&#xA;  --volume jenkins-docker-certs:/certs/client:ro `&#xA;  --publish 8080:8080 --publish 50000:50000 myjenkins-blueocean:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Get the Password for Admin&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker exec jenkins-blueocean cat /var/jenkins_home/secrets/initialAdminPassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Connect to the Jenkins&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://localhost:8080/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation Reference:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jenkins.io/doc/book/installing/docker/&#34;&gt;https://www.jenkins.io/doc/book/installing/docker/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;alpine/socat container to forward traffic from Jenkins to Docker Desktop on Host Machine&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/47709208/how-to-find-docker-host-uri-to-be-used-in-jenkins-docker-plugin&#34;&gt;https://stackoverflow.com/questions/47709208/how-to-find-docker-host-uri-to-be-used-in-jenkins-docker-plugin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d --restart=always -p 127.0.0.1:2376:2375 --network jenkins -v /var/run/docker.sock:/var/run/docker.sock alpine/socat tcp-listen:2375,fork,reuseaddr unix-connect:/var/run/docker.sock&#xA;docker inspect &amp;lt;container_id&amp;gt; | grep IPAddress&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>