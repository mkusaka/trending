<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-28T01:26:23Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>GOUSERABBANI44/Node_APP</title>
    <updated>2023-12-28T01:26:23Z</updated>
    <id>tag:github.com,2023-12-28:/GOUSERABBANI44/Node_APP</id>
    <link href="https://github.com/GOUSERABBANI44/Node_APP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;sample node.js Application&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node APPS DEPLOYER!&lt;/h1&gt; &#xA;&lt;p&gt;Simple node.js app that servers &#34;Hello APPS DEPLOYER!&#34;&lt;/p&gt; &#xA;&lt;p&gt;Great for testing simple deployments to the cloud&lt;/p&gt; &#xA;&lt;h2&gt;To host node.js application in docker container with the help of Dockerfile&lt;/h2&gt; &#xA;&lt;h2&gt;Working Process&lt;/h2&gt; &#xA;&lt;h3&gt;First launch brand new EC2 instance&lt;/h3&gt; &#xA;&lt;h3&gt;Next install docker and setup the docker with commands&lt;/h3&gt; &#xA;&lt;p&gt;&#34;sudo yum -y install docker&#34; &#34;sudo systemctl start docker&#34; &#34;sudo systemctl enable docker&#34; &#34;sudo chmod 666 /var/run/docker.sock&#34;&lt;/p&gt; &#xA;&lt;h3&gt;Next install GIT tool to clone the node.js application code from the remote platform(Github)&lt;/h3&gt; &#xA;&lt;p&gt;&#34;sudo yum -y install git&#34; &#34;git clone URL link of the node.js application repository&#34;&lt;/p&gt; &#xA;&lt;h3&gt;Next go inside the cloned node.js code repository with command as&lt;/h3&gt; &#xA;&lt;p&gt;&#34;cd cloned repository name&#34;&lt;/p&gt; &#xA;&lt;h3&gt;Next write the Docker file with vi/vim edit mode&lt;/h3&gt; &#xA;&lt;p&gt;&#34;sudo vi Dockerfile&#34;&lt;/p&gt; &#xA;&lt;h3&gt;Write the Dockerfile with Instructions as&lt;/h3&gt; &#xA;&lt;h3&gt;Use an official Node.js runtime as a base image&lt;/h3&gt; &#xA;&lt;p&gt;FROM node:14&lt;/p&gt; &#xA;&lt;h3&gt;Set the working directory inside the container&lt;/h3&gt; &#xA;&lt;p&gt;WORKDIR /usr/src/app&lt;/p&gt; &#xA;&lt;h3&gt;Copy package.json and package-lock.json to the working directory&lt;/h3&gt; &#xA;&lt;p&gt;COPY package*.json ./&lt;/p&gt; &#xA;&lt;h3&gt;Install app dependencies&lt;/h3&gt; &#xA;&lt;p&gt;RUN npm install&lt;/p&gt; &#xA;&lt;h3&gt;Copy the application files to the working directory&lt;/h3&gt; &#xA;&lt;p&gt;COPY . .&lt;/p&gt; &#xA;&lt;h3&gt;Expose the port that your app will run on&lt;/h3&gt; &#xA;&lt;p&gt;EXPOSE 3000&lt;/p&gt; &#xA;&lt;h3&gt;Command to run your application&lt;/h3&gt; &#xA;&lt;p&gt;CMD [&#34;npm&#34;, &#34;start&#34;]&lt;/p&gt; &#xA;&lt;h3&gt;Next build the image from the Dockerfile through its instructions with the command&lt;/h3&gt; &#xA;&lt;p&gt;&#34;docker build -t app(image name) .(path of the Dockerfile)&#34;&lt;/p&gt; &#xA;&lt;h3&gt;Next run the container from the created image with the help of command as&lt;/h3&gt; &#xA;&lt;p&gt;&#34;docker run -dt --name web -p 3000:3000 app&#34;&lt;/p&gt; &#xA;&lt;h3&gt;Next copy the public ip of the running or existing EC2 instance and browse it along with port 3000.&lt;/h3&gt;</summary>
  </entry>
</feed>