<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-23T01:44:27Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mustafamuratcoskun/Sifirdan-Ileri-Seviyeye-Python-Programlama</title>
    <updated>2022-07-23T01:44:27Z</updated>
    <id>tag:github.com,2022-07-23:/mustafamuratcoskun/Sifirdan-Ileri-Seviyeye-Python-Programlama</id>
    <link href="https://github.com/mustafamuratcoskun/Sifirdan-Ileri-Seviyeye-Python-Programlama" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Udemy üzerindeki Python kurslarında kullanılan materyaller&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sıfırdan İleri Seviyeye Python Programlama&lt;/h1&gt; &#xA;&lt;p&gt;Udemy üzerindeki &lt;a href=&#34;https://www.udemy.com/course/sifirdan-ileri-seviyeye-python/?couponCode=PYTHON6&#34;&gt;Sıfırdan İleri Seviyeye Python Programlama&lt;/a&gt; kursundaki Çalışma Notebookları ve Kullanılan Kodlar&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>udacity/DevOps_Microservices</title>
    <updated>2022-07-23T01:44:27Z</updated>
    <id>tag:github.com,2022-07-23:/udacity/DevOps_Microservices</id>
    <link href="https://github.com/udacity/DevOps_Microservices" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Supporting material and projects for a course on Cloud DevOps: Microservices.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cloud DevOps ND - C4- Microservices at Scale using AWS &amp;amp; Kubernetes - Supporting Material and Project Starter&lt;/h2&gt; &#xA;&lt;p&gt;This repository is associated with Cloud DevOps ND - Course 04 - Microservices at Scale using AWS &amp;amp; Kubernetes. In here, you&#39;ll find:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Supporting material used in the video demonstration in the course&lt;/li&gt; &#xA; &lt;li&gt;Starting code for a project, in which you can containerize and deploy a machine learning srevice using Kubernetes.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;A. Dependencies&lt;/h3&gt; &#xA;&lt;h4&gt;A.1. Python&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Download and install the python&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;A.2. Docker Desktop&lt;/h4&gt; &#xA;&lt;p&gt;You would require you to install Docker Desktop to create containers for individual microservices. Refer the following links for instructions&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/docker-for-mac/install/&#34;&gt;macOS&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/docker-for-windows/install/&#34;&gt;Windows 10 64-bit: Pro, Enterprise, or Education&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/toolbox/toolbox_install_windows/&#34;&gt;Windows 10 64-bit Home&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You can find installation instructions for other operating systems at: &lt;a href=&#34;https://docs.docker.com/install/&#34;&gt;https://docs.docker.com/install/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;A.3. Kubernetes&lt;/h4&gt; &#xA;&lt;p&gt;You would need to install any one tool for creating a Kubernetes cluster - KubeOne / Minikube / kubectl on top of Docker Desktop:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-kubectl/&#34;&gt;Install and Set Up kubectl&lt;/a&gt; directly on top of Docker desktop - For Windows/macOS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-minikube/&#34;&gt;Install Minikube&lt;/a&gt; - For Linux/macOS&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;A.4. AWS account to access AWS Lambda&lt;/h4&gt; &#xA;&lt;p&gt;You&#39;ll need an &lt;a href=&#34;https://aws.amazon.com/free/?all-free-tier.&amp;amp;all-free-tier.sort-by=item.additionalFields.SortRank&amp;amp;all-free-tier.sort-order=asc&#34;&gt;AWS account&lt;/a&gt; to get started with &lt;a href=&#34;https://aws.amazon.com/lambda/&#34;&gt;AWS Lambda&lt;/a&gt;, which is a serverless computing platform on cloud.&lt;/p&gt; &#xA;&lt;h4&gt;A.5. An account with Circle CI&lt;/h4&gt; &#xA;&lt;p&gt;You may sign up on &lt;a href=&#34;https://circleci.com/signup/&#34;&gt;CircleCI.com&lt;/a&gt; with your GitHub credentials.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;B. The Overarching Diagram&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/bb29cd924f9eb66730bbf7b0ed069a6ae03d2f1a/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f35383739322f35353335343438332d62616537616638302d353437612d313165392d393930392d6135363231323531303635622e706e67&#34; alt=&#34;Overview&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;C. Tutorials&lt;/h3&gt; &#xA;&lt;h4&gt;C.1. AWS Lambda &amp;amp; Serverless&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/udacity/DevOps_Microservices/tree/master/lambda-functions/make-change-tutorial&#34;&gt;Making Change&lt;/a&gt;: Create and deploy a serverless lambda function that responds to an input request; this example creates the correct amount of change to make up a value in US dollars.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/udacity/DevOps_Microservices/tree/master/lambda-functions/wikipedia-query&#34;&gt;Wikipedia Query&lt;/a&gt;: Deploy a lambda function that responds to an input, wikipedia page query; this example returns the first sentence of a specific wikipedia page upon being queried.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;D. Project Instructions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/udacity/DevOps_Microservices/tree/master/project-ml-microservice-kubernetes&#34;&gt;Operationalize a Machine Learning Microservice API&lt;/a&gt;: Deploy a containerized, machine learning application using Kubernetes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To run any project code, you&#39;ll have to set up a virtual environment with the project dependencies. All of the following instructions are to be completed via a terminal/command line prompt.&lt;/p&gt; &#xA;&lt;h3&gt;E. Create and Activate an Environment&lt;/h3&gt; &#xA;&lt;h4&gt;E.1. Git and version control&lt;/h4&gt; &#xA;&lt;p&gt;These instructions also assume you have &lt;code&gt;git&lt;/code&gt; installed for working with Github from a terminal window, but if you do not, you can download that first from this &lt;a href=&#34;https://www.atlassian.com/git/tutorials/install-git&#34;&gt;Github installation page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Now, you&#39;re ready to create your local environment!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If you haven&#39;t already done so, clone the project repository, and navigate to the main project folder.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/udacity/DevOps_Microservices.git&#xA;cd DevOps_Microservices/project-ml-microservice-kubernetes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Create (and activate) a new environment, named &lt;code&gt;.devops&lt;/code&gt; with Python 3. If prompted to proceed with the install &lt;code&gt;(Proceed [y]/n)&lt;/code&gt; type y.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m venv ~/.devops&#xA;source ~/.devops/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;At this point your command line should look something like: &lt;code&gt;(.devops) &amp;lt;User&amp;gt;:project-ml-microservice-kubernetes&amp;lt;user&amp;gt;$&lt;/code&gt;. The &lt;code&gt;(.devops)&lt;/code&gt; indicates that your environment has been activated, and you can proceed with further package installations.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Installing dependencies via project &lt;code&gt;Makefile&lt;/code&gt;. Many of the project dependencies are listed in the file &lt;code&gt;requirements.txt&lt;/code&gt;; these can be installed using &lt;code&gt;pip&lt;/code&gt; commands in the provided &lt;code&gt;Makefile&lt;/code&gt;. While in your project directory, type the following command to install these dependencies.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now most of the &lt;code&gt;.devops&lt;/code&gt; libraries are available to you. There are a couple of other libraries that we&#39;ll be using, which can be downloaded as specified, below.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;E.2. Other Libraries&lt;/h4&gt; &#xA;&lt;p&gt;While you still have your &lt;code&gt;.devops&lt;/code&gt; environment activated, you will still need to install:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker&lt;/li&gt; &#xA; &lt;li&gt;Hadolint&lt;/li&gt; &#xA; &lt;li&gt;Kubernetes (&lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-minikube/&#34;&gt;Minikube&lt;/a&gt; if you want to run Kubernetes locally)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;E.3. Docker&lt;/h4&gt; &#xA;&lt;p&gt;You will need to use Docker to build and upload a containerized application. If you already have this installed and created a docker account, you may skip this step.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;You’ll need to &lt;a href=&#34;https://hub.docker.com/signup&#34;&gt;create a free docker account&lt;/a&gt;, where you’ll choose a unique username and link your email to a docker account. &lt;strong&gt;Your username is your unique docker ID.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To install the latest version of docker, choose the Community Edition (CE) for your operating system, &lt;a href=&#34;https://docs.docker.com/v17.12/install/&#34;&gt;on docker’s installation site&lt;/a&gt;. It is also recommended that you install the latest, &lt;strong&gt;stable&lt;/strong&gt; release:&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After installation, you can verify that you’ve successfully installed docker by printing its version in your terminal: &lt;code&gt;docker --version&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;E.4. Run Lint Checks&lt;/h4&gt; &#xA;&lt;p&gt;This project also must pass two lint checks; &lt;code&gt;hadolint&lt;/code&gt; checks the Dockerfile for errors and &lt;code&gt;pylint&lt;/code&gt; checks the &lt;code&gt;app.py&lt;/code&gt; source code for errors.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install &lt;code&gt;hadolint&lt;/code&gt; following the instructions, &lt;a href=&#34;https://github.com/hadolint/hadolint&#34;&gt;on hadolint&#39;s page&lt;/a&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Mac:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install hadolint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Windows:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scoop install hadolint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;In your terminal, type: &lt;code&gt;make lint&lt;/code&gt; to run lint checks on the project code. If you haven’t changed any code, all requirements should be satisfied, and you should see a printed statement that rates your code (and prints out any additional comments):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;------------------------------------&#xA;Your code has been rated at 10.00/10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s about it! When working with kubernetes, you may need to install some other libraries, but these instructions will set you up with an environment that can build and deploy Docker containers.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>megvii-research/CoNR</title>
    <updated>2022-07-23T01:44:27Z</updated>
    <id>tag:github.com,2022-07-23:/megvii-research/CoNR</id>
    <link href="https://github.com/megvii-research/CoNR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official implement of CoNR: Collaborative Neural Rendering using Anime Character Sheets&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/megvii-research/CoNR/raw/main/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://github.com/megvii-research/CoNR/raw/main/README_chinese.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;CoNR: Collaborative Neural Rendering using Anime Character Sheets&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://conr.ml&#34;&gt;HomePage&lt;/a&gt; | Colab &lt;a href=&#34;https://colab.research.google.com/github/megvii-research/CoNR/blob/main/notebooks/conr.ipynb&#34;&gt;English&lt;/a&gt;/&lt;a href=&#34;https://colab.research.google.com/github/megvii-research/CoNR/blob/main/notebooks/conr_chinese.ipynb&#34;&gt;中文&lt;/a&gt; | &lt;a href=&#34;https://arxiv.org/abs/2207.05378&#34;&gt;arXiv&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/megvii-research/CoNR/main/images/MAIN.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This project is the official implement of &lt;a href=&#34;https://arxiv.org/abs/2207.05378&#34;&gt;Collaborative Neural Rendering using Anime Character Sheets&lt;/a&gt;, which aims to genarate vivid dancing videos from hand-drawn anime character sheets(ACS). Watch more demos in our &lt;a href=&#34;https://conr.ml&#34;&gt;HomePage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Contributors: &lt;a href=&#34;https://github.com/transpchan/&#34;&gt;@transpchan&lt;/a&gt;, &lt;a href=&#34;https://github.com/P2Oileen&#34;&gt;@P2Oileen&lt;/a&gt;, &lt;a href=&#34;https://github.com/hzwer&#34;&gt;@hzwer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h4&gt;Prerequisites&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NVIDIA GPU + CUDA + CUDNN&lt;/li&gt; &#xA; &lt;li&gt;Python 3.6&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Installation&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone this repository&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/megvii-research/CoNR&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dependencies&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To install all the dependencies, please run the following commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd CoNR&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download Weights Download weights from Google Drive. Alternatively, you can download from &lt;a href=&#34;https://pan.baidu.com/s/1U11iIk-DiJodgCveSzB6ig?pwd=RDxc&#34;&gt;Baidu Netdisk&lt;/a&gt; (password:RDxc).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir weights &amp;amp;&amp;amp; cd weights&#xA;gdown https://drive.google.com/uc?id=1M1LEpx70tJ72AIV2TQKr6NE_7mJ7tLYx&#xA;gdown https://drive.google.com/uc?id=1YvZy3NHkJ6gC3pq_j8agcbEJymHCwJy0&#xA;gdown https://drive.google.com/uc?id=1AOWZxBvTo9nUf2_9Y7Xe27ZFQuPrnx9i&#xA;gdown https://drive.google.com/uc?id=19jM1-GcqgGoE1bjmQycQw_vqD9C5e-Jm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Prepare inputs&lt;/h4&gt; &#xA;&lt;p&gt;We prepared two Ultra-Dense Pose sequences for two characters. You can generate more UDPs via 3D models and motions refers to &lt;a href=&#34;ttps://arxiv.org/abs/2207.05378&#34;&gt;our paper&lt;/a&gt;. &lt;a href=&#34;https://pan.baidu.com/s/1hWvz4iQXnVTaTSb6vu1NBg?pwd=RDxc&#34;&gt;Baidu Netdisk&lt;/a&gt; (password:RDxc)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# for short hair girl&#xA;gdown https://drive.google.com/uc?id=11HMSaEkN__QiAZSnCuaM6GI143xo62KO&#xA;unzip short_hair.zip&#xA;mv short_hair/ poses/&#xA;&#xA;# for double ponytail girl&#xA;gdown https://drive.google.com/uc?id=1WNnGVuU0ZLyEn04HzRKzITXqib1wwM4Q&#xA;unzip double_ponytail.zip&#xA;mv double_ponytail/ poses/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We provide sample inputs of anime character sheets. You can also draw more by yourself. Character sheets need to be cut out from the background and in png format. &lt;a href=&#34;https://pan.baidu.com/s/1shpP90GOMeHke7MuT0-Txw?pwd=RDxc&#34;&gt;Baidu Netdisk&lt;/a&gt; (password:RDxc)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# for short hair girl&#xA;gdown https://drive.google.com/uc?id=1r-3hUlENSWj81ve2IUPkRKNB81o9WrwT&#xA;unzip short_hair_images.zip&#xA;mv short_hair_images/ character_sheet/&#xA;&#xA;# for double ponytail girl&#xA;gdown https://drive.google.com/uc?id=1XMrJf9Lk_dWgXyTJhbEK2LZIXL9G3MWc&#xA;unzip double_ponytail_images.zip&#xA;mv double_ponytail_images/ character_sheet/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;RUN!&lt;/h4&gt; &#xA;&lt;p&gt;We provide two ways: with web UI or via terminal.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;with web UI (powered by &lt;a href=&#34;https://streamlit.io/&#34;&gt;Streamlit&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;streamlit run streamlit.py --server_port=8501&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then open your browser and visit &lt;code&gt;localhost:8501&lt;/code&gt;, follow the instructions to genarate video.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;via terminal&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir {dir_to_save_result}&#xA;&#xA;python -m torch.distributed.launch \&#xA;--nproc_per_node=1 train.py --mode=test \&#xA;--world_size=1 --dataloaders=2 \&#xA;--test_input_poses_images={dir_to_poses} \&#xA;--test_input_person_images={dir_to_character_sheet} \&#xA;--test_output_dir={dir_to_save_result} \&#xA;--test_checkpoint_dir={dir_to_weights}&#xA;&#xA;ffmpeg -r 30 -y -i {dir_to_save_result}/%d.png -r 30 -c:v libx264 output.mp4 -r 30&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{lin2022conr,&#xA;  title={Collaborative Neural Rendering using Anime Character Sheets},&#xA;  author={Lin, Zuzeng and Huang, Ailin and Huang, Zhewei and Hu, Chen and Zhou, Shuchang},&#xA;  journal={arXiv preprint arXiv:2207.05378},&#xA;  year={2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>