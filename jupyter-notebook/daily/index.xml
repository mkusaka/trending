<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-14T01:44:49Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mazzzystar/disco-diffusion-wrapper</title>
    <updated>2022-07-14T01:44:49Z</updated>
    <id>tag:github.com,2022-07-14:/mazzzystar/disco-diffusion-wrapper</id>
    <link href="https://github.com/mazzzystar/disco-diffusion-wrapper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implementation of disco-diffusion wrapper that could run on your own GPU with batch text input.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;disco-diffusion-wrapper&lt;/h1&gt; &#xA;&lt;p&gt;Implementation of a &lt;a href=&#34;https://github.com/alembics/disco-diffusion&#34;&gt;disco diffusion&lt;/a&gt; wrapper that could run on your own GPU with a batch of input text.&lt;/p&gt; &#xA;&lt;p&gt;Based on this work, an AI painting website (&lt;a href=&#34;https://6pen.art/&#34;&gt;https://6pen.art/&lt;/a&gt;) was built, you may have a try.&lt;/p&gt; &#xA;&lt;h2&gt;What this repo did&lt;/h2&gt; &#xA;&lt;p&gt;1.Separate the model loading and model inference parts of the initial code. Now you can use it like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# init and load pretrain model.&#xA;disco = DiscoDiffusion()&#xA;# infer&#xA;disco.draw(text, ...)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2.Use &lt;a href=&#34;https://www.deepl.com/translator&#34;&gt;deepL&lt;/a&gt; to preprocess the text, so that you can use any language you like to draw. The default language pair is from &lt;code&gt;Chinese&lt;/code&gt;-&amp;gt;&lt;code&gt;English&lt;/code&gt;(&lt;code&gt;ZH&lt;/code&gt;-&amp;gt;&lt;code&gt;EN-US&lt;/code&gt;)，you can change it in &lt;code&gt;run.py&lt;/code&gt; or &lt;code&gt;run_batch.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def translate(text, source_lang=&#34;ZH&#34;, target_lang=&#34;EN-US&#34;):&#xA;    res = translator.translate_text(text, source_lang=&#34;ZH&#34;, target_lang=&#34;EN-US&#34;)&#xA;    return res&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also turn-off text translation by setting &lt;code&gt;USE_TRANSLATE=False&lt;/code&gt; so that you don&#39;t need the DeepL authKey.&lt;/p&gt; &#xA;&lt;p&gt;3.Batch generating &amp;amp; saving. As the loading part and the inferring part is seperated, you do not need to load pretrain model again for a new sentence. This reduces a bunch of time.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cd disco-diffusion-wrapper/wrapper&#xA;# create and fill the sentence.list&#xA;python run_batch.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The output images is saved by the name of the origin text, so you can easily find it even after a deepL.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:mazzzystar/disco-diffusion-wrapper.git&#xA;cd disco-diffusion-wrapper/&#xA;conda create --name disco&#xA;conda activate disco&#xA;pip install -r requirements.txt&#xA;cd wrapper/&#xA;&#xA;# download pretrain model checkpoints&#xA;&#34;&#34;&#34;If this step is slow, you can download these model mannually from urls in the &#xA;code of mutils.py, then put these checkpoints in the corresponding folder.&#34;&#34;&#34;&#xA;python mutils.py&#xA;&#xA;# Get your deepL API key, then add it to your run.py or batch_run.py to replace:&#xA;auth_key = &#34;&#34;&#xA;&#xA;# generated image by one sentence&#xA;python run.py &#34;一行白鹭上青天&#34;&#xA;&#xA;# batch generation&#xA;touch sentence.list&#xA;# fill your text in, one by a line.&#xA;python batch_run.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Samples&lt;/h2&gt; &#xA;&lt;p&gt;Below are some samples generated using this repo. &lt;img src=&#34;https://raw.githubusercontent.com/mazzzystar/disco-diffusion-wrapper/master/samples/A_half-acre_square_pond_is_open_the_sky_and_clouds_wandering_together_ink_painting.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;半亩方塘一鉴开，天光云影共徘徊，水墨画&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mazzzystar/disco-diffusion-wrapper/master/samples/Snowy_mountains_plains_army_of_ghosts_marching_at_night_with_fluorescent_green_torches_abstract_painting_Trending_on_artstation.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;雪山，平原，幽鬼军队在夜里打着荧光绿色的火把前行，抽象画，Trending on artstation&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mazzzystar/disco-diffusion-wrapper/master/samples/Glass_whale_lying_in_ruins_abstract_painting_Trending_on_artstation.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;躺在废墟中的玻璃鲸鱼，抽象画&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mazzzystar/disco-diffusion-wrapper/master/samples/%E6%98%8E%E6%9C%88%E6%9D%BE%E9%97%B4%E7%85%A7%E6%B8%85%E6%B3%89%E7%9F%B3%E4%B8%8A%E6%B5%81%E4%B8%AD%E5%9B%BD%E7%94%BB.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;明月松间照，清泉石上流，中国画&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mazzzystar/disco-diffusion-wrapper/master/samples/Effie_castle.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Elf Castle&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mazzzystar/disco-diffusion-wrapper/master/samples/%E5%B1%B1%E9%9A%8F%E5%B9%B3%E9%87%8E%E5%B0%BD%E6%B1%9F%E5%85%A5%E5%A4%A7%E8%8D%92%E6%B5%81Trending_on_artstation.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;山随平野尽，江入大荒流，Trending on artstation&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can download all our Chinese poem generating results from &lt;a href=&#34;https://drive.google.com/file/d/1OIsupQqMaYYWu4B0eemUWgvPfTSGyaqf/view?usp=sharing&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you use this project and produced some interesting results, submissions are welcomed.&lt;/p&gt; &#xA;&lt;h2&gt;Problems&lt;/h2&gt; &#xA;&lt;p&gt;As it&#39;s for fun, I did not look much into the details, and deleted many features(such as VR/3D/Video ...) to make me faster and more clear on the project resonctruction. It&#39;s awesome if you&#39;re interested in restoring the original function, PR is wellcomed.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ShusenTang/Dive-into-DL-PyTorch</title>
    <updated>2022-07-14T01:44:49Z</updated>
    <id>tag:github.com,2022-07-14:/ShusenTang/Dive-into-DL-PyTorch</id>
    <link href="https://github.com/ShusenTang/Dive-into-DL-PyTorch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;本项目将《动手学深度学习》(Dive into Deep Learning)原书中的MXNet实现改为PyTorch实现。&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;500&#34; src=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/img/cover.png&#34; alt=&#34;封面&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tangshusen.me/Dive-into-DL-PyTorch&#34;&gt;本项目&lt;/a&gt;将&lt;a href=&#34;http://zh.d2l.ai/&#34;&gt;《动手学深度学习》&lt;/a&gt;&amp;nbsp;原书中MXNet代码实现改为PyTorch实现。原书作者：阿斯顿·张、李沐、扎卡里 C. 立顿、亚历山大 J. 斯莫拉以及其他社区贡献者，GitHub地址：&lt;a href=&#34;https://github.com/d2l-ai/d2l-zh&#34;&gt;https://github.com/d2l-ai/d2l-zh&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;此书的&lt;a href=&#34;https://zh.d2l.ai/&#34;&gt;中&lt;/a&gt;&lt;a href=&#34;https://d2l.ai/&#34;&gt;英&lt;/a&gt;版本存在一些不同，针对此书英文版的PyTorch重构可参考&lt;a href=&#34;https://github.com/dsgiitr/d2l-pytorch&#34;&gt;这个项目&lt;/a&gt;。 There are some differences between the &lt;a href=&#34;https://zh.d2l.ai/&#34;&gt;Chinese&lt;/a&gt; and &lt;a href=&#34;https://d2l.ai/&#34;&gt;English&lt;/a&gt; versions of this book. For the PyTorch modifying of the English version, you can refer to &lt;a href=&#34;https://github.com/dsgiitr/d2l-pytorch&#34;&gt;this repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;本仓库主要包含code和docs两个文件夹（外加一些数据存放在data中）。其中code文件夹就是每章相关jupyter notebook代码（基于PyTorch）；docs文件夹就是markdown格式的《动手学深度学习》书中的相关内容，然后利用&lt;a href=&#34;https://docsify.js.org/#/zh-cn/&#34;&gt;docsify&lt;/a&gt;将网页文档部署到GitHub Pages上，由于原书使用的是MXNet框架，所以docs内容可能与原书略有不同，但是整体内容是一样的。欢迎对本项目做出贡献或提出issue。&lt;/p&gt; &#xA;&lt;h2&gt;面向人群&lt;/h2&gt; &#xA;&lt;p&gt;本项目面向对深度学习感兴趣，尤其是想使用PyTorch进行深度学习的童鞋。本项目并不要求你有任何深度学习或者机器学习的背景知识，你只需了解基础的数学和编程，如基础的线性代数、微分和概率，以及基础的Python编程。&lt;/p&gt; &#xA;&lt;h2&gt;食用方法&lt;/h2&gt; &#xA;&lt;h3&gt;方法一&lt;/h3&gt; &#xA;&lt;p&gt;本仓库包含一些latex公式，但github的markdown原生是不支持公式显示的，而docs文件夹已经利用&lt;a href=&#34;https://docsify.js.org/#/zh-cn/&#34;&gt;docsify&lt;/a&gt;被部署到了GitHub Pages上，所以查看文档最简便的方法就是直接访问&lt;a href=&#34;https://tangshusen.me/Dive-into-DL-PyTorch&#34;&gt;本项目网页版&lt;/a&gt;。当然如果你还想跑一下运行相关代码的话还是得把本项目clone下来，然后运行code文件夹下相关代码。&lt;/p&gt; &#xA;&lt;h3&gt;方法二&lt;/h3&gt; &#xA;&lt;p&gt;你还可以在本地访问文档，先安装&lt;code&gt;docsify-cli&lt;/code&gt;工具:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm i docsify-cli -g&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后将本项目clone到本地:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/ShusenTang/Dive-into-DL-PyTorch.git&#xA;cd Dive-into-DL-PyTorch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后运行一个本地服务器，这样就可以很方便的在&lt;code&gt;http://localhost:3000&lt;/code&gt;实时访问文档网页渲染效果。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docsify serve docs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;方法三&lt;/h3&gt; &#xA;&lt;p&gt;如果你不想安装&lt;code&gt;docsify-cli&lt;/code&gt;工具，甚至你的电脑上都没有安装&lt;code&gt;Node.js&lt;/code&gt;，而出于某些原因你又想在本地浏览文档，那么你可以在&lt;code&gt;docker&lt;/code&gt;容器中运行网页服务。&lt;/p&gt; &#xA;&lt;p&gt;首先将本项目clone到本地:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/ShusenTang/Dive-into-DL-PyTorch.git&#xA;cd Dive-into-DL-PyTorch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;之后使用如下命令创建一个名称为「d2dl」的&lt;code&gt;docker&lt;/code&gt;镜像：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker build -t d2dl .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;镜像创建好后，运行如下命令创建一个新的容器：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -dp 3000:3000 d2dl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;最后在浏览器中打开这个地址&lt;code&gt;http://localhost:3000/#/&lt;/code&gt;，就能愉快地访问文档了。适合那些不想在电脑上装太多工具的小伙伴。&lt;/p&gt; &#xA;&lt;h2&gt;目录&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;&#34;&gt;简介&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/read_guide.md&#34;&gt;阅读指南&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter01_DL-intro/deep-learning-intro.md&#34;&gt;1. 深度学习简介&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;2. 预备知识 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter02_prerequisite/2.1_install.md&#34;&gt;2.1 环境配置&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter02_prerequisite/2.2_tensor.md&#34;&gt;2.2 数据操作&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter02_prerequisite/2.3_autograd.md&#34;&gt;2.3 自动求梯度&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;3. 深度学习基础 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter03_DL-basics/3.1_linear-regression.md&#34;&gt;3.1 线性回归&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter03_DL-basics/3.2_linear-regression-scratch.md&#34;&gt;3.2 线性回归的从零开始实现&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter03_DL-basics/3.3_linear-regression-pytorch.md&#34;&gt;3.3 线性回归的简洁实现&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter03_DL-basics/3.4_softmax-regression.md&#34;&gt;3.4 softmax回归&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter03_DL-basics/3.5_fashion-mnist.md&#34;&gt;3.5 图像分类数据集（Fashion-MNIST）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter03_DL-basics/3.6_softmax-regression-scratch.md&#34;&gt;3.6 softmax回归的从零开始实现&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter03_DL-basics/3.7_softmax-regression-pytorch.md&#34;&gt;3.7 softmax回归的简洁实现&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter03_DL-basics/3.8_mlp.md&#34;&gt;3.8 多层感知机&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter03_DL-basics/3.9_mlp-scratch.md&#34;&gt;3.9 多层感知机的从零开始实现&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter03_DL-basics/3.10_mlp-pytorch.md&#34;&gt;3.10 多层感知机的简洁实现&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter03_DL-basics/3.11_underfit-overfit.md&#34;&gt;3.11 模型选择、欠拟合和过拟合&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter03_DL-basics/3.12_weight-decay.md&#34;&gt;3.12 权重衰减&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter03_DL-basics/3.13_dropout.md&#34;&gt;3.13 丢弃法&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter03_DL-basics/3.14_backprop.md&#34;&gt;3.14 正向传播、反向传播和计算图&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter03_DL-basics/3.15_numerical-stability-and-init.md&#34;&gt;3.15 数值稳定性和模型初始化&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter03_DL-basics/3.16_kaggle-house-price.md&#34;&gt;3.16 实战Kaggle比赛：房价预测&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;4. 深度学习计算 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter04_DL_computation/4.1_model-construction.md&#34;&gt;4.1 模型构造&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter04_DL_computation/4.2_parameters.md&#34;&gt;4.2 模型参数的访问、初始化和共享&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter04_DL_computation/4.3_deferred-init.md&#34;&gt;4.3 模型参数的延后初始化&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter04_DL_computation/4.4_custom-layer.md&#34;&gt;4.4 自定义层&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter04_DL_computation/4.5_read-write.md&#34;&gt;4.5 读取和存储&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter04_DL_computation/4.6_use-gpu.md&#34;&gt;4.6 GPU计算&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;5. 卷积神经网络 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter05_CNN/5.1_conv-layer.md&#34;&gt;5.1 二维卷积层&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter05_CNN/5.2_padding-and-strides.md&#34;&gt;5.2 填充和步幅&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter05_CNN/5.3_channels.md&#34;&gt;5.3 多输入通道和多输出通道&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter05_CNN/5.4_pooling.md&#34;&gt;5.4 池化层&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter05_CNN/5.5_lenet.md&#34;&gt;5.5 卷积神经网络（LeNet）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter05_CNN/5.6_alexnet.md&#34;&gt;5.6 深度卷积神经网络（AlexNet）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter05_CNN/5.7_vgg.md&#34;&gt;5.7 使用重复元素的网络（VGG）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter05_CNN/5.8_nin.md&#34;&gt;5.8 网络中的网络（NiN）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter05_CNN/5.9_googlenet.md&#34;&gt;5.9 含并行连结的网络（GoogLeNet）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter05_CNN/5.10_batch-norm.md&#34;&gt;5.10 批量归一化&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter05_CNN/5.11_resnet.md&#34;&gt;5.11 残差网络（ResNet）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter05_CNN/5.12_densenet.md&#34;&gt;5.12 稠密连接网络（DenseNet）&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;6. 循环神经网络 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter06_RNN/6.1_lang-model.md&#34;&gt;6.1 语言模型&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter06_RNN/6.2_rnn.md&#34;&gt;6.2 循环神经网络&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter06_RNN/6.3_lang-model-dataset.md&#34;&gt;6.3 语言模型数据集（周杰伦专辑歌词）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter06_RNN/6.4_rnn-scratch.md&#34;&gt;6.4 循环神经网络的从零开始实现&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter06_RNN/6.5_rnn-pytorch.md&#34;&gt;6.5 循环神经网络的简洁实现&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter06_RNN/6.6_bptt.md&#34;&gt;6.6 通过时间反向传播&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter06_RNN/6.7_gru.md&#34;&gt;6.7 门控循环单元（GRU）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter06_RNN/6.8_lstm.md&#34;&gt;6.8 长短期记忆（LSTM）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter06_RNN/6.9_deep-rnn.md&#34;&gt;6.9 深度循环神经网络&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter06_RNN/6.10_bi-rnn.md&#34;&gt;6.10 双向循环神经网络&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;7. 优化算法 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter07_optimization/7.1_optimization-intro.md&#34;&gt;7.1 优化与深度学习&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter07_optimization/7.2_gd-sgd.md&#34;&gt;7.2 梯度下降和随机梯度下降&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter07_optimization/7.3_minibatch-sgd.md&#34;&gt;7.3 小批量随机梯度下降&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter07_optimization/7.4_momentum.md&#34;&gt;7.4 动量法&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter07_optimization/7.5_adagrad.md&#34;&gt;7.5 AdaGrad算法&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter07_optimization/7.6_rmsprop.md&#34;&gt;7.6 RMSProp算法&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter07_optimization/7.7_adadelta.md&#34;&gt;7.7 AdaDelta算法&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter07_optimization/7.8_adam.md&#34;&gt;7.8 Adam算法&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;8. 计算性能 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter08_computational-performance/8.1_hybridize.md&#34;&gt;8.1 命令式和符号式混合编程&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter08_computational-performance/8.2_async-computation.md&#34;&gt;8.2 异步计算&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter08_computational-performance/8.3_auto-parallelism.md&#34;&gt;8.3 自动并行计算&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter08_computational-performance/8.4_multiple-gpus.md&#34;&gt;8.4 多GPU计算&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;9. 计算机视觉 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter09_computer-vision/9.1_image-augmentation.md&#34;&gt;9.1 图像增广&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter09_computer-vision/9.2_fine-tuning.md&#34;&gt;9.2 微调&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter09_computer-vision/9.3_bounding-box.md&#34;&gt;9.3 目标检测和边界框&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter09_computer-vision/9.4_anchor.md&#34;&gt;9.4 锚框&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter09_computer-vision/9.5_multiscale-object-detection.md&#34;&gt;9.5 多尺度目标检测&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter09_computer-vision/9.6_object-detection-dataset.md&#34;&gt;9.6 目标检测数据集（皮卡丘）&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 9.7 单发多框检测（SSD）&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter09_computer-vision/9.8_rcnn.md&#34;&gt;9.8 区域卷积神经网络（R-CNN）系列&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter09_computer-vision/9.9_semantic-segmentation-and-dataset.md&#34;&gt;9.9 语义分割和数据集&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 9.10 全卷积网络（FCN）&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter09_computer-vision/9.11_neural-style.md&#34;&gt;9.11 样式迁移&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 9.12 实战Kaggle比赛：图像分类（CIFAR-10）&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 9.13 实战Kaggle比赛：狗的品种识别（ImageNet Dogs）&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;10. 自然语言处理 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter10_natural-language-processing/10.1_word2vec.md&#34;&gt;10.1 词嵌入（word2vec）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter10_natural-language-processing/10.2_approx-training.md&#34;&gt;10.2 近似训练&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter10_natural-language-processing/10.3_word2vec-pytorch.md&#34;&gt;10.3 word2vec的实现&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter10_natural-language-processing/10.4_fasttext.md&#34;&gt;10.4 子词嵌入（fastText）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter10_natural-language-processing/10.5_glove.md&#34;&gt;10.5 全局向量的词嵌入（GloVe）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter10_natural-language-processing/10.6_similarity-analogy.md&#34;&gt;10.6 求近义词和类比词&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter10_natural-language-processing/10.7_sentiment-analysis-rnn.md&#34;&gt;10.7 文本情感分类：使用循环神经网络&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter10_natural-language-processing/10.8_sentiment-analysis-cnn.md&#34;&gt;10.8 文本情感分类：使用卷积神经网络（textCNN）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter10_natural-language-processing/10.9_seq2seq.md&#34;&gt;10.9 编码器—解码器（seq2seq）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter10_natural-language-processing/10.10_beam-search.md&#34;&gt;10.10 束搜索&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter10_natural-language-processing/10.11_attention.md&#34;&gt;10.11 注意力机制&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ShusenTang/Dive-into-DL-PyTorch/master/chapter10_natural-language-processing/10.12_machine-translation.md&#34;&gt;10.12 机器翻译&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;持续更新中......&lt;/p&gt; &#xA;&lt;h2&gt;原书地址&lt;/h2&gt; &#xA;&lt;p&gt;中文版：&lt;a href=&#34;https://zh.d2l.ai/&#34;&gt;动手学深度学习&lt;/a&gt; | &lt;a href=&#34;https://github.com/d2l-ai/d2l-zh&#34;&gt;Github仓库&lt;/a&gt;&lt;br&gt; English Version: &lt;a href=&#34;https://d2l.ai/&#34;&gt;Dive into Deep Learning&lt;/a&gt; | &lt;a href=&#34;https://github.com/d2l-ai/d2l-en&#34;&gt;Github Repo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;引用&lt;/h2&gt; &#xA;&lt;p&gt;如果您在研究中使用了这个项目请引用原书:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@book{zhang2019dive,&#xA;    title={Dive into Deep Learning},&#xA;    author={Aston Zhang and Zachary C. Lipton and Mu Li and Alexander J. Smola},&#xA;    note={\url{http://www.d2l.ai}},&#xA;    year={2020}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>veb-101/Data-Science-Projects</title>
    <updated>2022-07-14T01:44:49Z</updated>
    <id>tag:github.com,2022-07-14:/veb-101/Data-Science-Projects</id>
    <link href="https://github.com/veb-101/Data-Science-Projects" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Collection of data science projects in Python&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Data Science Projects&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This is a compiled list of different project topics for learning purposes&lt;/li&gt; &#xA; &lt;li&gt;The main purpose of this list is to get hands-on experience on different topics.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Sr. No.&lt;/th&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Resource link&lt;/th&gt; &#xA;   &lt;th&gt;Completed&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;BASIC&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Sentiment Analysis&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt; &lt;a href=&#34;https://www.kaggle.com/anshulrai/cudnnlstm-implementation-93-7-accuracy&#34;&gt;Amazon reviews dataset&lt;/a&gt; &lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/muonneutrino/sentiment-analysis-with-amazon-reviews&#34;&gt;Amazon reviews dataset&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://towardsdatascience.com/creating-the-twitter-sentiment-analysis-program-in-python-with-naive-bayes-classification-672e5589a7ed&#34;&gt;Twitter Sentiment analysis - Medium&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.analyticsvidhya.com/blog/2018/07/hands-on-sentiment-analysis-dataset-python/&#34;&gt;Twitter Sentiment analysis - analytics vidhya&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;Fake News detection&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://data-flair.training/blogs/advanced-python-project-detecting-fake-news/&#34;&gt;Detecting Fake News&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;Detecting Parkinsons&#39;s Disease&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://data-flair.training/blogs/python-machine-learning-project-detecting-parkinson-disease/&#34;&gt;Disease detection using XGBoost&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2019/04/29/detecting-parkinsons-disease-with-opencv-computer-vision-and-the-spiral-wave-test/&#34;&gt;pyimagesearch - Detecting Parkinsons&#39;s Disease&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;Color Detection&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://data-flair.training/blogs/project-in-python-colour-detection/&#34;&gt;OpenCV Project&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;Iris Data Set - Predict the class of the flower&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://repl.it/@LakshayArora1/Iris-Dataset-Logistic-Regression&#34;&gt;many - analytics vidhya&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☑&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;Loan Prediction - Predict if a loan will get approved or not.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://repl.it/@LakshayArora1/Logistic-Regression-Loan-Dataset&#34;&gt;many - analytics vidhya&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;BigMart Sales Dataset - Predict the sales of a store.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://repl.it/@LakshayArora1/Linear-Regression&#34;&gt;many - analytics vidhya&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;House Price Regression&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.kaggle.com/c/house-prices-advanced-regression-techniques/notebooks&#34;&gt;kaggle&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☑&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;Wine quality - Predict the quality of the wine.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.kaggle.com/uciml/red-wine-quality-cortez-et-al-2009/kernels&#34;&gt;Kaggle kernel&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;Heights and Weights Dataset - Predict the height or weight of a person&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www3.nd.edu/~steve/computing_with_data/2_Motivation/motivate_ht_wt.html&#34;&gt;Study of height versus weight&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;Email Classification&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=exHwwy9kVcg&#34;&gt;youtube&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;Titanic dataset&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/pmarcelino/comprehensive-data-exploration-with-python&#34;&gt;Comprehensive data exploration with Python- Kaggle&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/startupsci/titanic-data-science-solutions&#34;&gt;Titanic Data Science Solutions - Kaggle&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/kanncaa1/data-sciencetutorial-for-beginners&#34;&gt;Data ScienceTutorial for Beginners - Kaggle&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/arthurtok/introduction-to-ensembling-stacking-in-python&#34;&gt;Introduction to Ensembling/Stacking in Python - Kaggle&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/ldfreeman3/a-data-science-framework-to-achieve-99-accuracy&#34;&gt;A Data Science Framework: To Achieve 99% Accuracy - Kaggle&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/serigne/stacked-regressions-top-4-on-leaderboard&#34;&gt;Stacked Regressions : Top 4% on LeaderBoard - Kaggle&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/helgejo/an-interactive-data-science-tutorial&#34;&gt;An Interactive Data Science Tutorial - Kaggle&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/ash316/eda-to-prediction-dietanic&#34;&gt;EDA To Prediction(DieTanic) - Kaggle&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/c/titanic&#34;&gt;Titanic: Machine Learning from Disaster - Kaggle&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Intermediate&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Speech Emotion Recognition&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://data-flair.training/blogs/python-mini-project-speech-emotion-recognition/&#34;&gt;Speech Emotion Recognition with librosa&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;Gender and Age Detection&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2020/04/13/opencv-age-detection-with-deep-learning/&#34;&gt;pyimagesearch - Age Detection with deep learning&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.learnopencv.com/age-gender-classification-using-opencv-deep-learning-c-python/&#34;&gt;learnopencv - Gender &amp;amp; Age Classification using OpenCV Deep Learning&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://data-flair.training/blogs/python-project-gender-age-detection/&#34;&gt;DataFlair - Gender and Age Detection with OpenCV&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.analyticsvidhya.com/blog/2017/06/hands-on-with-deep-learning-solution-for-age-detection-practice-problem/&#34;&gt;analytics vidhya - Age Detection&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;Driver Drowsiness detection&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2017/04/17/real-time-facial-landmark-detection-opencv-python-dlib/&#34;&gt;Real-time facial landmark detection&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2017/04/24/eye-blink-detection-opencv-python-dlib/&#34;&gt;Eye blink detection&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2017/05/08/drowsiness-detection-opencv/&#34;&gt;Drowsiness detection with OpenCV&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://data-flair.training/blogs/python-project-driver-drowsiness-detection-system/&#34;&gt;DataFlair - System with OpenCV &amp;amp; Keras&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt; &#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;Basic Chatbot&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://data-flair.training/blogs/python-chatbot-project/&#34;&gt;chatbot using NLTK &amp;amp; Keras&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;Handwritten Digit Recognition&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://data-flair.training/blogs/python-deep-learning-project-handwritten-digit-recognition/&#34;&gt;Handwritten Digit Recognition&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/tarunkr/digit-recognition-tutorial-cnn-99-67-accuracy&#34;&gt;kaggle - Digit Recognition-Tutorial (CNN)&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;Black Friday Dataset - Predict purchase amount.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rouseguy/BlackFridayDataHack&#34;&gt;github&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;Trip History Dataset - Predict the class of user.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.analyticsvidhya.com/blog/2015/06/solution-kaggle-competition-bike-sharing-demand/&#34;&gt;analytics vidhya&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;Song recommendation&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://towardsdatascience.com/how-to-build-a-simple-song-recommender-296fcbc8c85&#34;&gt;Medium - Simple song recommender system&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://towardsdatascience.com/a-simple-song-recommender-system-in-python-tutorial-3e4c111198d6&#34;&gt;Medium - A Simple Song Recommender System in Python&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://analyticsindiamag.com/beginners-guide-to-building-a-song-recommender-in-python/&#34;&gt;analytics vidhya - Guide to song recommendation system&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=39vJRxIPSxw&#34;&gt;Youtube - Building Recommender Systems Using Python&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=RIW7jjurpPI&#34;&gt;Youtube - Music Search and Recommendation from Millions of Songs&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;Handwritten Text Recognition&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://towardsdatascience.com/build-a-handwritten-text-recognition-system-using-tensorflow-2326a3487cd5&#34;&gt;Build a Handwritten Text Recognition System using TensorFlow&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;Sentiment analysis - IMDB movie review dataset&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.tensorflow.org/tutorials/text/text_classification_rnn&#34;&gt;tensorflow&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;Text generation - Shakespeare&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.tensorflow.org/tutorials/text/text_generation&#34;&gt;tensorflow&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;Sign language MNIST classification&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/ranjeetjain3/deep-learning-using-sign-langugage#CNN-Model&#34;&gt;kaggle - Deep learning using sign langugage&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/madz2000/cnn-using-keras-99-7-accuracy&#34;&gt;kaggle - CNN using Keras&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Advanced&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Image Captioning&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.tensorflow.org/tutorials/text/image_captioning&#34;&gt;Image Captioning with visual Attention&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☑&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;Credit Card Fraud Detection&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/ml-credit-card-fraud-detection/&#34;&gt;geeksforgeeks - Credit Card Fraud Detection&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/mlg-ulb/creditcardfraud/kernels&#34;&gt;Kaggel kernels&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.google.com/search?q=Credit+Card+Fraud+Detection&amp;amp;rlz=1C1CHBF_enIN820IN820&amp;amp;oq=Credit+Card+Fraud+Detection&amp;amp;aqs=chrome..69i57j69i60&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&#34;&gt;Google search results&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;Recommendation System&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://engmrk.com/module-18-machine-learning-based-recommendation-systems/?utm_campaign=News&amp;amp;utm_medium=Community&amp;amp;utm_source=DataCamp.com&#34;&gt;Recommendation Systems&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://technotipsondatascience.wordpress.com/2018/10/22/recommendation-system/&#34;&gt;RECOMMENDATION SYSTEM&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://towardsdatascience.com/movie-recommender-system-part-1-7f126d2f90e2&#34;&gt;Medium - Movie recommendation&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/rounakbanik/movie-recommender-systems&#34;&gt;kaggel - Movies Recommender System&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.analyticsvidhya.com/blog/2016/06/quick-guide-build-recommendation-engine-python/&#34;&gt;Quick Guide to Build a Recommendation Engine in Python &amp;amp; R&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;Customer Segmentation&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://towardsdatascience.com/data-driven-growth-with-python-part-2-customer-segmentation-5c019d150444&#34;&gt;Customer Segmentation by RFM clustering&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/fabiendaniel/customer-segmentation&#34;&gt;kaggle - Customer Segmentation&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://towardsdatascience.com/customer-segmentation-with-machine-learning-a0ac8c3d4d84&#34;&gt;Customer Segmentation by KMeans&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.kdnuggets.com/2017/03/yhat-beginner-guide-customer-segmentation.html&#34;&gt;KDnuggets - Beginner’s Guide to Customer Segmentation&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.kdnuggets.com/2019/11/customer-segmentation-using-k-means-clustering.html&#34;&gt;KDnuggets - Customer Segmentation Using K Means Clustering&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.mktr.ai/applications-and-methods-in-data-science-customer-segmentation/&#34;&gt;Customer Segmentation: A Technical Guide&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;Breast Cancer Classification&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2019/02/18/breast-cancer-classification-with-keras-and-deep-learning/&#34;&gt;pyimagesearch - Breast cancer classification with Keras and Deep Learning&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://data-flair.training/blogs/project-in-python-breast-cancer-classification/&#34;&gt;Dataflair - Breast Cancer Classification&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;Traffic Signs Recognition&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2019/11/04/traffic-sign-classification-with-keras-and-deep-learning/&#34;&gt;pyimagesearch - Traffic Sign Classification with Keras and Deep Learning&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☑&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;Urban Sound Classification&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/&#34;&gt;Audio Data Analysis using Deep Learning&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;Human Activity Recognition&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://machinelearningmastery.com/deep-learning-models-for-human-activity-recognition/&#34;&gt;MLM - Deep Learning Models for Human Activity Recognition&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2019/11/25/human-activity-recognition-with-opencv-and-deep-learning/&#34;&gt;Human Activity Recognition with OpenCV and Deep Learning&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;Covid-19&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2020/03/16/detecting-covid-19-in-x-ray-images-with-keras-tensorflow-and-deep-learning/&#34;&gt;pyimagesearch - Covid-19 in X-ray images&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2020/05/04/covid-19-face-mask-detector-with-opencv-keras-tensorflow-and-deep-learning/&#34;&gt;pyimagesearch - Mask detection&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://rubikscode.net/2020/03/23/detection-of-covid-19-in-chest-x-rays-with-deep-learning/&#34;&gt;rubiks-code Detection of COVID-19 in chest X-Rays with Deep Learning&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ol&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;     &lt;li&gt;☐&lt;/li&gt;&#xA;    &lt;/ol&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;Video classification&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2019/07/15/video-classification-with-keras-and-deep-learning/&#34;&gt;pyimagesearch&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;Fire and smoke detection&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2019/11/18/fire-and-smoke-detection-with-keras-and-deep-learning/&#34;&gt;pyimagesearch&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;Detecting Natural Disasters&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2019/11/11/detecting-natural-disasters-with-keras-and-deep-learning/&#34;&gt;pyimagesearch&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;13&lt;/td&gt; &#xA;   &lt;td&gt;Anonymizing faces&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2020/04/06/blur-and-anonymize-faces-with-opencv-and-python/&#34;&gt;pyimagesearch&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td&gt;Text Summarization&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.one-tab.com/page/at7XZn6iRsKSgpgNAqK0dw&#34;&gt;list of links&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td&gt;Deep Dream and Style Transfer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.one-tab.com/page/RYc4BqXSRWOE_A1GIUAPYA&#34;&gt;list of links&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;☐&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Additional resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/firmai/industry-machine-learning&#34;&gt;A curated list of applied machine learning and data science notebooks and libraries across different industries.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/edyoda/data-science-complete-tutorial&#34;&gt;edyoda/data-science-complete-tutorial: For extensive instructor led learning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLegWUnz91Wftp1CsVFQaCgZAILUslEVhF&#34;&gt;Advanced Data Science - YouTube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/kanncaa1/data-sciencetutorial-for-beginners&#34;&gt;Data ScienceTutorial for Beginners | Kaggle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/data-science-ipython-notebooks&#34;&gt;donnemartin/data-science-ipython-notebooks&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>