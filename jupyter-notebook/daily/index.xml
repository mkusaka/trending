<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-02T01:43:42Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>GoogleCloudPlatform/training-data-analyst</title>
    <updated>2022-07-02T01:43:42Z</updated>
    <id>tag:github.com,2022-07-02:/GoogleCloudPlatform/training-data-analyst</id>
    <link href="https://github.com/GoogleCloudPlatform/training-data-analyst" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Labs and demos for courses for GCP Training (http://cloud.google.com/training).&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>datawhalechina/joyful-pandas</title>
    <updated>2022-07-02T01:43:42Z</updated>
    <id>tag:github.com,2022-07-02:/datawhalechina/joyful-pandas</id>
    <link href="https://github.com/datawhalechina/joyful-pandas" rel="alternate"></link>
    <summary type="html">&lt;p&gt;pandas中文教程&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Joyful-Pandas&lt;/h1&gt; &#xA;&lt;h2&gt;【好消息！】&lt;/h2&gt; &#xA;&lt;p&gt;基于Joyful Pandas教程编写的纸质版书籍将于七月中旬在各大网络平台上线，欢迎选购（玩命了买！）。本书使用新版的1.4.0，对网页版教程（基于1.2.0）内容作了大量修订，包括内容增改以及习题更新，同时增加了数据可视化、特征工程和性能优化三个章节的内容。本书设计练一练共计121题，章后习题共计41题，各章节分布与目录见后文。有关本书籍和pandas的任何问题可以在本仓库提issue，或者加最后的二维码进讨论群提问。&lt;/p&gt; &#xA;&lt;img src=&#34;source/_static/pandas封面.jpg&#34; width=&#34;48%&#34;&gt; &#xA;&lt;p&gt;在写作期间，Joyful Pandas也被pandas官方增选为&lt;a href=&#34;https://pandas.pydata.org/docs/dev/getting_started/tutorials.html#joyful-pandas&#34;&gt;社区推荐教程&lt;/a&gt;，在此对pandas核心开发组多年来的长期维护和社区建设表示感谢！&lt;/p&gt; &#xA;&lt;img src=&#34;source/_static/社区推荐.png&#34; width=&#34;80%&#34;&gt; &#xA;&lt;h3&gt;纸质版&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;数据集：&lt;a href=&#34;https://pan.baidu.com/s/1uE3PcuQ_q8N-ls3rrOqldg&#34;&gt;下载&lt;/a&gt;（提取码：9e8r）&lt;/li&gt; &#xA; &lt;li&gt;参考答案：&lt;a href=&#34;https://gyhhaha.github.io/pd-book/&#34;&gt;链接&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;练一练与习题&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;章节&lt;/th&gt; &#xA;   &lt;th&gt;练一练（题数）&lt;/th&gt; &#xA;   &lt;th&gt;习题（*为纸质版新增）&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;第一章 预备知识&lt;/td&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td&gt;一、利用列表推导式实现矩阵乘法&lt;br&gt;二、计算卡方统计量&lt;br&gt;* 三、统计某商店的月度销量情况&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;第二章 pandas基础&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;* 一、整理某服装店的商品情况&lt;br&gt;* 二、汇总某课程的学生总评分数&lt;br&gt;三、实现指数加权窗口&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;第三章 索引&lt;/td&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;* 一、实现sample()函数&lt;br&gt;二、公司员工数据的索引操作&lt;br&gt;三、巧克力评价数据的索引操作&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;第四章 分组&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;一、汽车数据的分组分析&lt;br&gt;* 二、某海洋物种在三大海域的分布研究&lt;br&gt;三、实现transform()函数&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;第五章 变形&lt;/td&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;* 一、某连锁店的库存统计&lt;br&gt;* 二、整理某地区的化石燃料数据&lt;br&gt;三、特殊的wide_to_long()方法&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;第六章 连接&lt;/td&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;一、合并员工信息表&lt;br&gt;二、实现join()函数&lt;br&gt;* 三、条件连接&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;第七章 缺失数据&lt;/td&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;* 一、缺失数据筛选&lt;br&gt;二、K近邻填充&lt;br&gt;* 三、条件近邻插值&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;第八章 文本数据&lt;/td&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;一、房屋数据的文本提取&lt;br&gt;* 二、巴洛克作曲家的年龄统计&lt;br&gt;* 三、汇总显卡测试的结果&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;第九章 分类数据&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;一、统计未出现的类别&lt;br&gt;二、钻石数据的类别构造&lt;br&gt;* 三、有序类别下的逻辑斯蒂回归&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;第十章 时间序列数据&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;一、太阳辐射数据的时序分析&lt;br&gt;二、水果销量分析&lt;br&gt;* 三、使用Prophet进行时序预测&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;第十一章 数据观测&lt;/td&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td&gt;* 一、图片绘制&lt;br&gt;* 二、数据观测实战&lt;br&gt;* 三、基于PyOD库的异常检测&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;第十二章 特征工程&lt;/td&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;* 一、卡方分箱&lt;br&gt;* 二、基于标签的特征构造&lt;br&gt;* 三、信用卡诈骗数据的特征工程&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;第十三章 性能优化&lt;/td&gt; &#xA;   &lt;td&gt;20&lt;/td&gt; &#xA;   &lt;td&gt;* 一、DNA链的碱基序列处理&lt;br&gt;* 二、捕捉电信号的激活态区间&lt;br&gt;* 三、药物靶点的关联性分析&lt;br&gt;* 四、物质浓度的指标检测&lt;br&gt;* 五、设计滑窗类&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新增的三个章节目录&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;第十一章 数据观测&lt;/td&gt; &#xA;   &lt;td&gt;11.1 可视化方法&lt;/td&gt; &#xA;   &lt;td&gt;11.1.1 基本绘图&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;11.1.2 元素控制&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;11.1.3 子图控制&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;11.2 数据观测方法&lt;/td&gt; &#xA;   &lt;td&gt;11.2.1 数据类型&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;11.2.2 数据统计量&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;11.2.3 数据分布&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;11.2.4 基于数据报告的观测&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;11.3 习题&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;第十二章 特征工程&lt;/td&gt; &#xA;   &lt;td&gt;12.1 单特征构造&lt;/td&gt; &#xA;   &lt;td&gt;12.1.1 特征变换&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;12.1.2 文本数据特征&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;12.1.3 时间序列数据特征&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;12.1.4 单特征构造的一般方法&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;12.2 多特征构造&lt;/td&gt; &#xA;   &lt;td&gt;12.2.1 分组技术&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;12.2.2 特征降维&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;12.3 特征选择&lt;/td&gt; &#xA;   &lt;td&gt;12.3.1 基于统计量的选择&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;12.3.2 基于模型的选择&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;12.4 习题&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;第十三章 性能优化&lt;/td&gt; &#xA;   &lt;td&gt;13.1 pandasic代码要义&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;13.2 多进程加速&lt;/td&gt; &#xA;   &lt;td&gt;13.2.1 多进程和多线程&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;13.2.2 多进程的陷阱&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;13.2.3 异步进程&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;13.2.4 进程中的数据共享&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;13.2.5 在pandas中使用多进程&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;13.3 利用Cython加速&lt;/td&gt; &#xA;   &lt;td&gt;13.3.1 初识Cython&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;13.3.2 优化策略&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;13.3.3 多线程加速&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;13.3.4 Cython类及其应用&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;13.3.5 模块构建&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;13.4 利用Numba加速&lt;/td&gt; &#xA;   &lt;td&gt;13.4.1 noPython模式&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;13.4.2 ufunc与向量化&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;13.4.3 jitclass及其应用&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;13.5 习题&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;网页版&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://joyfulpandas.datawhale.club/&#34;&gt;http://joyfulpandas.datawhale.club/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://imgchr.com/i/DzAqIg&#34;&gt;&lt;img src=&#34;https://s3.ax1x.com/2020/12/07/DzAqIg.png&#34; alt=&#34;DzAqIg.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;文件内容&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;data：网页版教程数据集&lt;/li&gt; &#xA; &lt;li&gt;ebook：网页版教程电子版&lt;/li&gt; &#xA; &lt;li&gt;notebook：网页版教程notebook&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;参考资料&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.amazon.com/Python-Data-Analysis-Wrangling-IPython/dp/1491957662/ref=sr_1_2?keywords=wes+mckinney&amp;amp;qid=1656348228&amp;amp;sprefix=wes+mc%2Caps%2C107&amp;amp;sr=8-2&#34;&gt;Python for Data Analysis&lt;/a&gt; Wes McKinney著&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.amazon.com/Pandas-1-x-Cookbook-scientific-exploratory/dp/1839213108/ref=sr_1_1_sspa?crid=9V843I0IED24&amp;amp;keywords=pandas+cookbook&amp;amp;qid=1656348206&amp;amp;sprefix=pandas+cookbook%2Caps%2C153&amp;amp;sr=8-1-spons&amp;amp;psc=1&amp;amp;spLa=ZW5jcnlwdGVkUXVhbGlmaWVyPUEyVDZUTUUxQ0RFUVRZJmVuY3J5cHRlZElkPUEwNjkzMDczMjdXSFNaM0YzQ1NKRyZlbmNyeXB0ZWRBZElkPUEwNjczNDI3MVFZSTA0M0xWSzZKWiZ3aWRnZXROYW1lPXNwX2F0ZiZhY3Rpb249Y2xpY2tSZWRpcmVjdCZkb05vdExvZ0NsaWNrPXRydWU=&#34;&gt;Pandas Cookbook&lt;/a&gt; Theodore Petrou著&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pandas.pydata.org/docs/user_guide/index.html#user-guide&#34;&gt;User Guide&lt;/a&gt; Pandas开发团队编写&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;交流群&lt;/h3&gt; &#xA;&lt;p&gt;关注Datawhale公众号，回复关键词“熊猫”获得二维码&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/datawhalechina/joyful-pandas/master/source/_static/qrcode.jpeg&#34; width=&#34;30%&#34;&gt; &#xA;&lt;h3&gt;LICENSE&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img alt=&#34;知识共享许可协议&#34; style=&#34;border-width:0&#34; src=&#34;https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png&#34;&gt;&lt;br&gt;本作品采用&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议&lt;/a&gt;进行许可&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bryandlee/animegan2-pytorch</title>
    <updated>2022-07-02T01:43:42Z</updated>
    <id>tag:github.com,2022-07-02:/bryandlee/animegan2-pytorch</id>
    <link href="https://github.com/bryandlee/animegan2-pytorch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PyTorch implementation of AnimeGANv2&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;PyTorch Implementation of &lt;a href=&#34;https://github.com/TachibanaYoshino/AnimeGANv2&#34;&gt;AnimeGANv2&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Updates&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;2021-10-17&lt;/code&gt; Add weights for &lt;a href=&#34;https://raw.githubusercontent.com/bryandlee/animegan2-pytorch/main/#additional-model-weights&#34;&gt;FacePortraitV2&lt;/a&gt;. &lt;a href=&#34;https://colab.research.google.com/github/bryandlee/animegan2-pytorch/blob/main/colab_demo.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/26464535/142294796-54394a4a-a566-47a1-b9ab-4e715b901442.gif&#34; alt=&#34;sample&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;2021-11-07&lt;/code&gt; Thanks to &lt;a href=&#34;https://twitter.com/ak92501&#34;&gt;ak92501&lt;/a&gt;, a &lt;a href=&#34;https://huggingface.co/spaces/akhaliq/AnimeGANv2&#34;&gt;web demo&lt;/a&gt; is integrated to &lt;a href=&#34;https://huggingface.co/spaces&#34;&gt;Huggingface Spaces&lt;/a&gt; with &lt;a href=&#34;https://github.com/gradio-app/gradio&#34;&gt;Gradio&lt;/a&gt;. &lt;a href=&#34;https://huggingface.co/spaces/akhaliq/AnimeGANv2&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue&#34; alt=&#34;Hugging Face Spaces&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;2021-11-07&lt;/code&gt; Thanks to &lt;a href=&#34;https://github.com/xhlulu&#34;&gt;xhlulu&lt;/a&gt;, the &lt;code&gt;torch.hub&lt;/code&gt; model is now available. See &lt;a href=&#34;https://raw.githubusercontent.com/bryandlee/animegan2-pytorch/main/#torch-hub-usage&#34;&gt;Torch Hub Usage&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basic Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Inference&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python test.py --input_dir [image_folder_path] --device [cpu/cuda]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Torch Hub Usage&lt;/h2&gt; &#xA;&lt;p&gt;You can load the model via &lt;code&gt;torch.hub&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;model = torch.hub.load(&#34;bryandlee/animegan2-pytorch&#34;, &#34;generator&#34;).eval()&#xA;out = model(img_tensor)  # BCHW tensor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Currently, the following &lt;code&gt;pretrained&lt;/code&gt; shorthands are available:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;model = torch.hub.load(&#34;bryandlee/animegan2-pytorch:main&#34;, &#34;generator&#34;, pretrained=&#34;celeba_distill&#34;)&#xA;model = torch.hub.load(&#34;bryandlee/animegan2-pytorch:main&#34;, &#34;generator&#34;, pretrained=&#34;face_paint_512_v1&#34;)&#xA;model = torch.hub.load(&#34;bryandlee/animegan2-pytorch:main&#34;, &#34;generator&#34;, pretrained=&#34;face_paint_512_v2&#34;)&#xA;model = torch.hub.load(&#34;bryandlee/animegan2-pytorch:main&#34;, &#34;generator&#34;, pretrained=&#34;paprika&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also load the &lt;code&gt;face2paint&lt;/code&gt; util function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from PIL import Image&#xA;&#xA;face2paint = torch.hub.load(&#34;bryandlee/animegan2-pytorch:main&#34;, &#34;face2paint&#34;, size=512)&#xA;&#xA;img = Image.open(...).convert(&#34;RGB&#34;)&#xA;out = face2paint(model, img)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More details about &lt;code&gt;torch.hub&lt;/code&gt; is in &lt;a href=&#34;https://pytorch.org/docs/stable/hub.html&#34;&gt;the torch docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Weight Conversion from the Original Repo (Tensorflow)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the &lt;a href=&#34;https://github.com/TachibanaYoshino/AnimeGANv2#requirements&#34;&gt;original repo&#39;s dependencies&lt;/a&gt;: python 3.6, tensorflow 1.15.0-gpu&lt;/li&gt; &#xA; &lt;li&gt;Install torch &amp;gt;= 1.7.1&lt;/li&gt; &#xA; &lt;li&gt;Clone the original repo &amp;amp; run&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/TachibanaYoshino/AnimeGANv2&#xA;python convert_weights.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;samples&lt;/summary&gt; &#xA; &lt;br&gt; Results from converted `Paprika` style model (input image, original tensorflow result, pytorch result from left to right) &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bryandlee/animegan2-pytorch/main/samples/compare/1.jpg&#34; width=&#34;960&#34;&gt; &amp;nbsp; &lt;img src=&#34;https://raw.githubusercontent.com/bryandlee/animegan2-pytorch/main/samples/compare/2.jpg&#34; width=&#34;960&#34;&gt; &amp;nbsp; &lt;img src=&#34;https://raw.githubusercontent.com/bryandlee/animegan2-pytorch/main/samples/compare/3.jpg&#34; width=&#34;960&#34;&gt; &amp;nbsp;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Results from converted weights slightly different due to the &lt;a href=&#34;https://github.com/pytorch/pytorch/issues/10604&#34;&gt;bilinear upsample issue&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Additional Model Weights&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Webtoon Face&lt;/strong&gt; &lt;a href=&#34;https://drive.google.com/file/d/10T6F3-_RFOCJn6lMb-6mRmcISuYWJXGc&#34;&gt;[ckpt]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;samples&lt;/summary&gt; &#xA; &lt;p&gt;Trained on &lt;b&gt;256x256&lt;/b&gt; face images. Distilled from &lt;a href=&#34;https://github.com/bryandlee/naver-webtoon-faces/raw/master/README.md#face2webtoon&#34;&gt;webtoon face model&lt;/a&gt; with L2 + VGG + GAN Loss and CelebA-HQ images.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/26464535/143959011-1740d4d3-790b-4c4c-b875-24404ef9c614.jpg&#34; alt=&#34;face_results&#34;&gt; &amp;nbsp;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;strong&gt;Face Portrait v1&lt;/strong&gt; &lt;a href=&#34;https://drive.google.com/file/d/1WK5Mdt6mwlcsqCZMHkCUSDJxN1UyFi0-&#34;&gt;[ckpt]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;samples&lt;/summary&gt; &#xA; &lt;p&gt;Trained on &lt;b&gt;512x512&lt;/b&gt; face images.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/drive/1jCqcKekdtKzW7cxiw_bjbbfLsPh-dEds?usp=sharing&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/26464535/127134790-93595da2-4f8b-4aca-a9d7-98699c5e6914.jpg&#34; alt=&#34;samples&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://youtu.be/CbMfI-HNCzw?t=317&#34;&gt;📺&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/26464535/129888683-98bb6283-7bb8-4d1a-a04a-e795f5858dcf.gif&#34; alt=&#34;sample&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;strong&gt;Face Portrait v2&lt;/strong&gt; &lt;a href=&#34;https://drive.google.com/uc?id=18H3iK09_d54qEDoWIc82SyWB2xun4gjU&#34;&gt;[ckpt]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;samples&lt;/summary&gt; &#xA; &lt;p&gt;Trained on &lt;b&gt;512x512&lt;/b&gt; face images. Compared to v1, &lt;code&gt;🔻beautify&lt;/code&gt; &lt;code&gt;🔺robustness&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/drive/1jCqcKekdtKzW7cxiw_bjbbfLsPh-dEds?usp=sharing&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/26464535/137619176-59620b59-4e20-4d98-9559-a424f86b7f24.jpg&#34; alt=&#34;face_portrait_v2_0&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/26464535/137619181-a45c9230-f5e7-4f3c-8002-7c266f89de45.jpg&#34; alt=&#34;face_portrait_v2_1&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;🦑 🎮 🔥&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/26464535/137619183-20e94f11-7a8e-4c3e-9b45-378ab63827ca.jpg&#34; alt=&#34;face_portrait_v2_squid_game&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
</feed>