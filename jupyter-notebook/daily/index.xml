<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-18T01:34:48Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rainyear/python3-in-one-pic</title>
    <updated>2024-01-18T01:34:48Z</updated>
    <id>tag:github.com,2024-01-18:/rainyear/python3-in-one-pic</id>
    <link href="https://github.com/rainyear/python3-in-one-pic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Learn python3 in one picture.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Python3 in one pic&lt;/h1&gt; &#xA;&lt;p&gt;[ Languages: &lt;a href=&#34;https://raw.githubusercontent.com/rainyear/python3-in-one-pic/master/README.md&#34;&gt;English&lt;/a&gt; ]&lt;/p&gt; &#xA;&lt;!-- BADGES/ --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/coodict/python3-in-one-pic&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/gitter-Join%20Chat-brightgreen.svg?sanitize=true&#34; alt=&#34;Gitter chat button&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.coinbase.com/rainyear&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/bitcoin-donate-yellow.svg?sanitize=true&#34; alt=&#34;BitCoin donate button&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- /BADGES --&gt; &#xA;&lt;h1&gt;Online Version&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://git.io/Coo-py3&#34;&gt;https://git.io/Coo-py3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Notebook&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/coodict/python3-in-one-pic/raw/master/notebooks/py3-in-one-pic.ipynb&#34;&gt;IPython Notebook Version&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rainyear/python3-in-one-pic/master/py3%20in%20one%20pic.png&#34; alt=&#34;py3 in one pic&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Releated projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coodict/javascript-in-one-pic&#34;&gt;Javascript in one pic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go in one pic (in preparation)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;Use IPython notebook, it&#39;s really very cool!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;&lt;code&gt;import this&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;Basic Syntax&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;Native Datatypes&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Number&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; String&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Boolean&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; None&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Byte&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; List&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Tuple&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Set&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dict&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;Operators &amp;amp; Casting&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;Flow Control&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;if/elif/else&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;for...in...&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;while&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;break&lt;/code&gt; &amp;amp; &lt;code&gt;continue&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Iterators &amp;amp; Generators&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Comprehensions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;Function&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Definition&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Arguments&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Lambda&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Documentation&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; @decorator&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;Class(OOP)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;class&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;__init__()&lt;/code&gt; &amp;amp; &lt;code&gt;self&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Instance&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Inheritance&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Override&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;p&gt;Module&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;import&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Search Path&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Package&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Pythonic&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Standard Libraries&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;code&gt;os, sys&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;code&gt;datetime&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Donation&lt;/h2&gt; &#xA;&lt;p&gt;If you find this project helpful, please consider making a donation with &lt;a href=&#34;https://www.coinbase.com/rainyear&#34;&gt;bitcoin&lt;/a&gt; or &lt;a href=&#34;https://github.com/rainyear/lolita/wiki/Donation&#34;&gt;other way&lt;/a&gt; &lt;span&gt;üçª&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/index.html&#34;&gt;Python 3.4.3 documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.diveintopython3.net/table-of-contents.html&#34;&gt;Dive Into Python 3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Writing Idiomatic Python 3.3&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://google.github.io/styleguide/pyguide.html&#34;&gt;Google Python Style Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000&#34;&gt;ÂªñÈõ™Â≥∞ÁöÑPythonÊïôÁ®ã&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/rainyear/python3-in-one-pic/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for license rights and limitations (MIT).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TencentARC/PhotoMaker</title>
    <updated>2024-01-18T01:34:48Z</updated>
    <id>tag:github.com,2024-01-18:/TencentARC/PhotoMaker</id>
    <link href="https://github.com/TencentARC/PhotoMaker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PhotoMaker&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://photo-maker.github.io/assets/logo.png&#34; height=&#34;100&#34;&gt; &lt;/p&gt; &#xA;&lt;!-- ## &lt;div align=&#34;center&#34;&gt;&lt;b&gt;PhotoMaker&lt;/b&gt;&lt;/div&gt; --&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h2&gt;PhotoMaker: Customizing Realistic Human Photos via Stacked ID Embedding&lt;/h2&gt; &#xA; &lt;p&gt;[&lt;a href=&#34;https://huggingface.co/papers/2312.04461&#34;&gt;Paper&lt;/a&gt;] ‚ÄÉ [&lt;a href=&#34;https://photo-maker.github.io&#34;&gt;Project Page&lt;/a&gt;] ‚ÄÉ [&lt;a href=&#34;https://huggingface.co/TencentARC/PhotoMaker&#34;&gt;Model Card&lt;/a&gt;] &lt;br&gt;&lt;/p&gt; &#xA; &lt;p&gt;[&lt;a href=&#34;https://huggingface.co/spaces/TencentARC/PhotoMaker&#34;&gt;ü§ó Demo (Realistic)&lt;/a&gt;] ‚ÄÉ [&lt;a href=&#34;https://huggingface.co/spaces/TencentARC/PhotoMaker-Style&#34;&gt;ü§ó Demo (Stylization)&lt;/a&gt;] &#xA;  &lt;be&gt;&lt;/be&gt;&lt;/p&gt; &#xA; &lt;p&gt;If the ID fidelity is not enough for you, please try our &lt;a href=&#34;https://huggingface.co/spaces/TencentARC/PhotoMaker-Style&#34;&gt;stylization application&lt;/a&gt;, you may be pleasantly surprised.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Official implementation of &lt;strong&gt;&lt;a href=&#34;https://huggingface.co/papers/2312.04461&#34;&gt;PhotoMaker: Customizing Realistic Human Photos via Stacked ID Embedding&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;üå† &lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Rapid customization &lt;strong&gt;within seconds&lt;/strong&gt;, with no additional LoRA training.&lt;/li&gt; &#xA; &lt;li&gt;Ensures impressive ID fidelity, offering diversity, promising text controllability, and high-quality generation.&lt;/li&gt; &#xA; &lt;li&gt;Can serve as an &lt;strong&gt;Adapter&lt;/strong&gt; to collaborate with other Base Models alongside LoRA modules in community.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;‚ùó‚ùó Note: If there are any PhotoMaker based resources and applications, please leave them in the &lt;a href=&#34;https://github.com/TencentARC/PhotoMaker/discussions/36&#34;&gt;discussion&lt;/a&gt; and we will list them in the &lt;a href=&#34;https://github.com/TencentARC/PhotoMaker?tab=readme-ov-file#related-resources&#34;&gt;Related Resources&lt;/a&gt; section in README file.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/TencentARC/PhotoMaker/assets/21050959/e72cbf4d-938f-417d-b308-55e76a4bc5c8&#34; alt=&#34;photomaker_demo_fast&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;üö© &lt;strong&gt;New Features/Updates&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚úÖ Jan. 15, 2024. We release PhotoMaker.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üî• &lt;strong&gt;Examples&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Realistic generation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/spaces/TencentARC/PhotoMaker&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Demo&amp;amp;message=Huggingface%20Gradio&amp;amp;color=orange&#34; alt=&#34;Huggingface PhotoMaker&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/PhotoMaker/main/photomaker_demo.ipynb&#34;&gt;&lt;strong&gt;PhotoMaker notebook demo&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn-uploads.huggingface.co/production/uploads/6285a9133ab6642179158944/BYBZNyfmN4jBKBxxt4uxz.jpeg&#34; height=&#34;450&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn-uploads.huggingface.co/production/uploads/6285a9133ab6642179158944/9KYqoDxfbNVLzVKZzSzwo.jpeg&#34; height=&#34;450&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Stylization generation&lt;/h3&gt; &#xA;&lt;p&gt;Note: only change the base model and add the LoRA modules for better stylization&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/spaces/TencentARC/PhotoMaker-Style&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Demo&amp;amp;message=Huggingface%20Gradio&amp;amp;color=orange&#34; alt=&#34;Huggingface PhotoMaker-Style&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/PhotoMaker/main/photomaker_style_demo.ipynb&#34;&gt;&lt;strong&gt;PhotoMaker-Style notebook demo&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn-uploads.huggingface.co/production/uploads/6285a9133ab6642179158944/du884lcjpqqjnJIxpATM2.jpeg&#34; height=&#34;450&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn-uploads.huggingface.co/production/uploads/6285a9133ab6642179158944/-AC7Hr5YL4yW1zXGe_Izl.jpeg&#34; height=&#34;450&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;üîß Dependencies and Installation&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python &amp;gt;= 3.8 (Recommend to use &lt;a href=&#34;https://www.anaconda.com/download/#linux&#34;&gt;Anaconda&lt;/a&gt; or &lt;a href=&#34;https://docs.conda.io/en/latest/miniconda.html&#34;&gt;Miniconda&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pytorch.org/&#34;&gt;PyTorch &amp;gt;= 2.0.0&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create --name photomaker python=3.10&#xA;conda activate photomaker&#xA;pip install -U pip&#xA;&#xA;# Install requirements&#xA;pip install -r requirements.txt&#xA;&#xA;# Install photomaker&#xA;pip install git+https://github.com/TencentARC/PhotoMaker.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can run the following command to use it&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from photomaker import PhotoMakerStableDiffusionXLPipeline&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;‚è¨ Download Models&lt;/h1&gt; &#xA;&lt;p&gt;The model will be automatically downloaded through following two lines:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from huggingface_hub import hf_hub_download&#xA;photomaker_path = hf_hub_download(repo_id=&#34;TencentARC/PhotoMaker&#34;, filename=&#34;photomaker-v1.bin&#34;, repo_type=&#34;model&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also choose to download manually from this &lt;a href=&#34;https://huggingface.co/TencentARC/PhotoMaker&#34;&gt;url&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;üíª How to Test&lt;/h1&gt; &#xA;&lt;h2&gt;Use like &lt;a href=&#34;https://github.com/huggingface/diffusers&#34;&gt;diffusers&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dependency&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;import torch&#xA;import os&#xA;from diffusers.utils import load_image&#xA;from diffusers import EulerDiscreteScheduler&#xA;from photomaker import PhotoMakerStableDiffusionXLPipeline&#xA;&#xA;### Load base model&#xA;pipe = PhotoMakerStableDiffusionXLPipeline.from_pretrained(&#xA;    base_model_path,  # can change to any base model based on SDXL&#xA;    torch_dtype=torch.bfloat16, &#xA;    use_safetensors=True, &#xA;    variant=&#34;fp16&#34;&#xA;).to(device)&#xA;&#xA;### Load PhotoMaker checkpoint&#xA;pipe.load_photomaker_adapter(&#xA;    os.path.dirname(photomaker_path),&#xA;    subfolder=&#34;&#34;,&#xA;    weight_name=os.path.basename(photomaker_path),&#xA;    trigger_word=&#34;img&#34;  # define the trigger word&#xA;)     &#xA;&#xA;pipe.scheduler = EulerDiscreteScheduler.from_config(pipe.scheduler.config)&#xA;&#xA;### Also can cooperate with other LoRA modules&#xA;# pipe.load_lora_weights(os.path.dirname(lora_path), weight_name=lora_model_name, adapter_name=&#34;xl_more_art-full&#34;)&#xA;# pipe.set_adapters([&#34;photomaker&#34;, &#34;xl_more_art-full&#34;], adapter_weights=[1.0, 0.5])&#xA;&#xA;pipe.fuse_lora()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Input ID Images&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;### define the input ID images&#xA;input_folder_name = &#39;./examples/newton_man&#39;&#xA;image_basename_list = os.listdir(input_folder_name)&#xA;image_path_list = sorted([os.path.join(input_folder_name, basename) for basename in image_basename_list])&#xA;&#xA;input_id_images = []&#xA;for image_path in image_path_list:&#xA;    input_id_images.append(load_image(image_path))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/TencentARC/PhotoMaker/assets/21050959/01d53dfa-7528-4f09-a1a5-96b349ae7800&#34; align=&#34;center&#34;&gt;&lt;img style=&#34;margin:0;padding:0;&#34; src=&#34;https://github.com/TencentARC/PhotoMaker/assets/21050959/01d53dfa-7528-4f09-a1a5-96b349ae7800&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;# Note that the trigger word `img` must follow the class word for personalization&#xA;prompt = &#34;a half-body portrait of a man img wearing the sunglasses in Iron man suit, best quality&#34;&#xA;negative_prompt = &#34;(asymmetry, worst quality, low quality, illustration, 3d, 2d, painting, cartoons, sketch), open mouth, grayscale&#34;&#xA;generator = torch.Generator(device=device).manual_seed(42)&#xA;images = pipe(&#xA;    prompt=prompt,&#xA;    input_id_images=input_id_images,&#xA;    negative_prompt=negative_prompt,&#xA;    num_images_per_prompt=1,&#xA;    num_inference_steps=num_steps,&#xA;    start_merge_step=10,&#xA;    generator=generator,&#xA;).images[0]&#xA;gen_images.save(&#39;out_photomaker.png&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/TencentARC/PhotoMaker/assets/21050959/703c00e1-5e50-4c19-899e-25ee682d2c06&#34; align=&#34;center&#34;&gt;&lt;img width=&#34;400&#34; style=&#34;margin:0;padding:0;&#34; src=&#34;https://github.com/TencentARC/PhotoMaker/assets/21050959/703c00e1-5e50-4c19-899e-25ee682d2c06&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Start a local gradio demo&lt;/h2&gt; &#xA;&lt;p&gt;Run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python gradio_demo/app.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You could customize this script in &lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/PhotoMaker/main/gradio_demo/app.py&#34;&gt;this file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage Tips:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upload more photos of the person to be customized to improve ID fidelty. If the input is Asian face(s), maybe consider adding &#39;asian&#39; before the class word, e.g., &lt;code&gt;asian woman img&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;When stylizing, does the generated face look too realistic? Adjust the Style strength to 30-50, the larger the number, the less ID fidelty, but the stylization ability will be better. You could also try out other base models or LoRAs with good stylization effects.&lt;/li&gt; &#xA; &lt;li&gt;For faster speed, reduce the number of generated images and sampling steps. However, please note that reducing the sampling steps may compromise the ID fidelity.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Related Resources&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://replicate.com/jd7h/photomaker&#34;&gt;Replicate demo of PhotoMaker&lt;/a&gt; by &lt;a href=&#34;https://github.com/yorickvP&#34;&gt;@yorickvP&lt;/a&gt;, transfer PhotoMaker to replicate.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bmaltais/PhotoMaker/tree/v1.0.1&#34;&gt;Windows version of PhotoMaker&lt;/a&gt; by &lt;a href=&#34;https://github.com/bmaltais&#34;&gt;@bmaltais&lt;/a&gt;, easy to deploy PhotoMaker on Windows. The description can be found in &lt;a href=&#34;https://github.com/TencentARC/PhotoMaker/discussions/36#discussioncomment-8156199&#34;&gt;this link&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;ü§ó Acknowledgements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PhotoMaker is co-hosted by Tencent ARC Lab and Nankai University &lt;a href=&#34;https://mmcheng.net/cmm/&#34;&gt;MCG-NKU&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Inspired from many excellent demos and repos, including &lt;a href=&#34;https://github.com/tencent-ailab/IP-Adapter&#34;&gt;IP-Adapter&lt;/a&gt;, &lt;a href=&#34;https://huggingface.co/spaces/multimodalart/Ip-Adapter-FaceID&#34;&gt;multimodalart/Ip-Adapter-FaceID&lt;/a&gt;, &lt;a href=&#34;https://github.com/mit-han-lab/fastcomposer&#34;&gt;FastComposer&lt;/a&gt;, and &lt;a href=&#34;https://github.com/TencentARC/T2I-Adapter&#34;&gt;T2I-Adapter&lt;/a&gt;. Thanks for their great works!&lt;/li&gt; &#xA; &lt;li&gt;Thanks for Venus team in Tencent PCG for their feedback and suggestions.&lt;/li&gt; &#xA; &lt;li&gt;Thanks for HuggingFace team for their generous support!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Disclaimer&lt;/h1&gt; &#xA;&lt;p&gt;This project strives to positively impact the domain of AI-driven image generation. Users are granted the freedom to create images using this tool, but they are expected to comply with local laws and utilize it in a responsible manner. The developers do not assume any responsibility for potential misuse by users.&lt;/p&gt; &#xA;&lt;h1&gt;BibTeX&lt;/h1&gt; &#xA;&lt;p&gt;If you find PhotoMaker useful for your research and applications, please cite using this BibTeX:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{li2023photomaker,&#xA;  title={PhotoMaker: Customizing Realistic Human Photos via Stacked ID Embedding},&#xA;  author={Li, Zhen and Cao, Mingdeng and Wang, Xintao and Qi, Zhongang and Cheng, Ming-Ming and Shan, Ying},&#xA;  booktitle={arXiv preprint arxiv:2312.04461},&#xA;  year={2023}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>charent/Phi2-mini-Chinese</title>
    <updated>2024-01-18T01:34:48Z</updated>
    <id>tag:github.com,2024-01-18:/charent/Phi2-mini-Chinese</id>
    <link href="https://github.com/charent/Phi2-mini-Chinese" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Phi2-Chinese-0.2B ‰ªé0ÂºÄÂßãËÆ≠ÁªÉËá™Â∑±ÁöÑPhi2‰∏≠ÊñáÂ∞èÊ®°ÂûãÔºåÊîØÊåÅÂä†ËΩΩÊú¨Âú∞Áü•ËØÜÂ∫ìÂÅöÊ£ÄÁ¥¢Â¢ûÂº∫ÁîüÊàêRAG„ÄÇTraining your own Phi2 small chat model from scratch.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Phi2-Chinese-0.2B ‰ªé0ÂºÄÂßãËÆ≠ÁªÉËá™Â∑±ÁöÑPhi2‰∏≠ÊñáÂ∞èÊ®°Âûã&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Êú¨È°πÁõÆ‰∏∫ÂÆûÈ™åÈ°πÁõÆÔºåÂºÄÊ∫ê‰ª£Á†ÅÂèäÊ®°ÂûãÊùÉÈáçÔºåÈ¢ÑËÆ≠ÁªÉÊï∞ÊçÆËæÉÂ∞ëÔºåÂ¶ÇÊûúÈúÄË¶ÅÊïàÊûúÊõ¥Â•ΩÁöÑ‰∏≠ÊñáÂ∞èÊ®°ÂûãÔºåÂèØ‰ª•ÂèÇËÄÉÈ°πÁõÆ&lt;a href=&#34;https://github.com/charent/ChatLM-mini-Chinese&#34;&gt;ChatLM-mini-Chinese&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÊîØÊåÅflash attention 2 Âä†ÈÄü&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;1. ‚öóÔ∏èÊï∞ÊçÆÊ∏ÖÊ¥ó&lt;/h1&gt; &#xA;&lt;p&gt;ÊØîÂ¶ÇÂè•Êú´Ê∑ªÂä†Âè•Âè∑„ÄÅÁπÅ‰ΩìËΩ¨ÁÆÄ‰Ωì„ÄÅÂà†Èô§ÈáçÂ§çÁöÑÊ†áÁÇπÁ¨¶Âè∑ÔºàÊØîÂ¶ÇÊúâ‰∫õÂØπËØùËØ≠ÊñôÈùûÂ∏∏Â§ö&lt;code&gt;&#34;„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ&#34;&lt;/code&gt;Ôºâ„ÄÅNFKC UnicodeÊ†áÂáÜÂåñÔºà‰∏ªË¶ÅÊòØÂÖ®ËßíËΩ¨ÂçäËßíÂèäÁΩëÈ°µÊï∞ÊçÆÁöÑ\u3000 \xa0ÈóÆÈ¢òÔºâÁ≠âÁ≠â„ÄÇ&lt;br&gt; ÂÖ∑‰ΩìÁöÑÊï∞ÊçÆÊ∏ÖÊ¥óËøáÁ®ãËØ∑ÂèÇËÄÉÈ°πÁõÆ&lt;a href=&#34;https://github.com/charent/ChatLM-mini-Chinese&#34;&gt;ChatLM-mini-Chinese&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h1&gt;2. üó®Ô∏ètokenizerËÆ≠ÁªÉ&lt;/h1&gt; &#xA;&lt;p&gt;‰ª£Á†ÅÔºö&lt;a href=&#34;https://raw.githubusercontent.com/charent/Phi2-mini-Chinese/main/1.tokeinzer.ipynb&#34;&gt;tokeinzer.ipynb&lt;/a&gt; Êú¨È°πÁõÆ‰ΩøÁî®&lt;code&gt;byte level&lt;/code&gt;ÁöÑ&lt;code&gt;BPE&lt;/code&gt;ÂàÜËØçÂô®„ÄÇÂÖ±Êèê‰æõÁöÑ‰∏§ÁßçÂàÜËØçÂô®&lt;code&gt;char level&lt;/code&gt; Âíå&lt;code&gt;byte level&lt;/code&gt;ÁöÑËÆ≠ÁªÉ‰ª£Á†Å„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ËÆ≠ÁªÉÂÆåÁöÑtokenizerËÆ∞ÂæóÊ£ÄÊü•ËØçË°®‰∏≠ÊòØÂê¶ÊúâÂ∏∏ËßÅÁöÑÁâπÊÆäÁ¨¶Âè∑ÔºåÂ¶Ç&lt;code&gt;\t&lt;/code&gt;„ÄÅ&lt;code&gt;\n&lt;/code&gt;Á≠âÔºåÂèØ‰ª•Â∞ùËØïÁºñ‰∏ÄÂè•ÂåÖÂê´ÁâπÊÆäÂ≠óÁ¨¶ÁöÑÊñáÊú¨&lt;code&gt;encode&lt;/code&gt;„ÄÅ&lt;code&gt;decode&lt;/code&gt;ÁúãÁúãËÉΩ‰∏çËÉΩËøòÂéü„ÄÇÂ¶ÇÊûú‰∏çÂåÖÂê´Ëøô‰∫õÁâπÊÆäÂ≠óÁ¨¶ÔºåÈÄöËøá&lt;code&gt;add_tokens&lt;/code&gt;ÂáΩÊï∞Ê∑ªÂä†„ÄÇ‰ΩøÁî®&lt;code&gt;len(tokenizer)&lt;/code&gt;Ëé∑ÂèñËØçË°®Â§ßÂ∞èÔºå&lt;code&gt;tokenizer.vocab_size&lt;/code&gt;‰∏çÁªüËÆ°Ëá™Â∑±ÈÄöËøá&lt;code&gt;add_tokens&lt;/code&gt;ÂáΩÊï∞Ê∑ªÂä†ÁöÑÂ≠óÁ¨¶„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;tokenizerËÆ≠ÁªÉÈùûÂ∏∏ÂêÉÂÜÖÂ≠òÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;byte level&lt;/code&gt;ËÆ≠ÁªÉ1‰∫ø‰∏™Â≠óÁ¨¶Ëá≥Â∞ëÈúÄË¶Å&lt;code&gt;32G&lt;/code&gt;ÂÜÖÂ≠òÔºàÂÖ∂ÂÆû&lt;code&gt;32G&lt;/code&gt;ËøòÊòØ‰∏çÂ§™Â§üÔºå‰ºöÈ¢ëÁπÅËß¶ÂèëswapÔºâÔºå&lt;code&gt;13600k&lt;/code&gt;ËÆ≠ÁªÉÊó∂ÈïøÂ§ßÊ¶Ç1‰∏™Â∞èÊó∂„ÄÇ&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;char level&lt;/code&gt;ËÆ≠ÁªÉ6.5‰∫ø‰∏™Â≠óÁ¨¶ÔºàÂàöÂ•ΩÊòØ‰∏≠ÊñáwikiÁôæÁßëÁöÑÊï∞ÊçÆÈáèÔºâËá≥Â∞ëÈúÄË¶Å32GÂÜÖÂ≠òÔºåÂõ†‰∏∫Â§öÊ¨°Ëß¶Âèë‰∫ÜswapÔºåÂÆûÈôÖ‰ΩøÁî®ÈáèËøú‰∏çÊ≠¢32GÔºå&lt;code&gt;13600K&lt;/code&gt;ËÆ≠ÁªÉÊó∂ÈïøÁ∫¶Âçä‰∏™Â∞èÊó∂„ÄÇ&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;ÊâÄ‰ª•Â§ßÊï∞ÊçÆÈõÜÊó∂ÔºàGBÁ∫ßÂà´ÔºâÔºåÂª∫ËÆÆËÆ≠ÁªÉ&lt;code&gt;tokenizer&lt;/code&gt;Êó∂‰ªéÊï∞ÊçÆÈõÜ‰∏≠ËøõË°åÈááÊ†∑„ÄÇ&lt;/p&gt; &#xA;&lt;h1&gt;3. ‚õèÔ∏èCLMÂõ†ÊûúÊ®°ÂûãÈ¢ÑËÆ≠ÁªÉ&lt;/h1&gt; &#xA;&lt;p&gt;Áî®Â§ßÈáèÊñáÊú¨ËøõË°åÊó†ÁõëÁù£È¢ÑËÆ≠ÁªÉÔºå‰∏ªË¶Å‰ΩøÁî®&lt;code&gt;bell open source&lt;/code&gt;ÁöÑÊï∞ÊçÆÈõÜ&lt;a href=&#34;https://github.com/LianjiaTech/BELLE&#34;&gt;BELLE&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Êï∞ÊçÆÈõÜÊ†ºÂºèÔºö‰∏Ä‰∏™Ê†∑Êú¨‰∏ÄÂè•ËØùÔºåÂ§™ÈïøÁöÑÂèØ‰ª•Êà™Êñ≠ÂàÜ‰∏∫Â§ö‰∏™Ê†∑Êú¨„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;CLMÈ¢ÑËÆ≠ÁªÉËøáÁ®ã‰∏≠ÔºåÊ®°ÂûãËæìÂÖ•ÂíåËæìÂá∫ÊòØ‰∏ÄÊ†∑ÁöÑÔºåËÆ°ÁÆó‰∫§ÂèâÁÜµÊçüÂ§±ÁöÑÊó∂ÂÄôÔºåË¶ÅÈîôÂºÄ‰∏Ä‰ΩçÔºà&lt;code&gt;shift&lt;/code&gt;Ôºâ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Â§ÑÁêÜÁôæÁßëËØ≠ÊñôÊó∂ÔºåÂª∫ËÆÆÂú®ÊØè‰∏™ËØçÊù°ÁªìÊùüÂêéÂä†‰∏ä&lt;code&gt;&#39;[EOS]&#39;&lt;/code&gt;Ê†áËÆ∞„ÄÇÂÖ∂‰ªñËØ≠ÊñôÂ§ÑÁêÜ‰πüÁ±ª‰ººÔºå‰∏Ä‰∏™&lt;code&gt;doc&lt;/code&gt;ÁöÑÁªìÊùüÔºàÂèØ‰ª•Êó∂‰∏ÄÁØáÊñáÁ´†ÁªìÊùüÊàñËÄÖÊÆµËêΩÁªìÊùüÔºâÈÉΩË¶ÅÂä†‰∏ä&lt;code&gt;&#39;[EOS]&#39;&lt;/code&gt;Ê†áËÆ∞„ÄÇÂºÄÂßãÊ†áËÆ∞&lt;code&gt;&#39;[BOS]&#39;&lt;/code&gt;ÂèØÂä†ÂèØ‰∏çÂä†„ÄÇ&lt;/p&gt; &#xA;&lt;h1&gt;4. ‚öíÔ∏èSFTÊåá‰ª§ÂæÆË∞É&lt;/h1&gt; &#xA;&lt;p&gt;‰∏ªË¶Å‰ΩøÁî®&lt;code&gt;bell open source&lt;/code&gt;ÁöÑÊï∞ÊçÆÈõÜ„ÄÇÊÑüË∞¢Â§ß‰Ω¨&lt;a href=&#34;https://github.com/LianjiaTech/BELLE&#34;&gt;BELLE&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;SFTËÆ≠ÁªÉÁöÑÊï∞ÊçÆÊ†ºÂºèÂ¶Ç‰∏ãÔºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;text = f&#34;##ÊèêÈóÆ:\n{example[&#39;instruction&#39;]}\n##ÂõûÁ≠î:\n{example[&#39;output&#39;][EOS]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Ê®°ÂûãËÆ°ÁÆóÊçüÂ§±Êó∂‰ºöÂøΩÁï•Ê†áËÆ∞&lt;code&gt;&#34;##ÂõûÁ≠î:&#34;&lt;/code&gt;‰πãÂâçÁöÑÈÉ®ÂàÜÔºà&lt;code&gt;&#34;##ÂõûÁ≠î:&#34;&lt;/code&gt;‰πü‰ºöË¢´ÂøΩÁï•ÔºâÔºå‰ªé&lt;code&gt;&#34;##ÂõûÁ≠î:&#34;&lt;/code&gt;ÂêéÈù¢ÂºÄÂßã„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ËÆ∞ÂæóÊ∑ªÂä†&lt;code&gt;EOS&lt;/code&gt;Âè•Â≠êÁªìÊùüÁâπÊÆäÊ†áËÆ∞ÔºåÂê¶ÂàôÊ®°Âûã&lt;code&gt;decode&lt;/code&gt;ÁöÑÊó∂ÂÄô‰∏çÁü•ÈÅìË¶Å‰ªÄ‰πàÊó∂ÂÄôÂÅú‰∏ãÊù•„ÄÇ&lt;code&gt;BOS&lt;/code&gt;Âè•Â≠êÂºÄÂßãÊ†áËÆ∞ÂèØÂ°´ÂèØ‰∏çÂ°´„ÄÇ&lt;/p&gt; &#xA;&lt;h1&gt;5. üìùRLHF‰ºòÂåñ&lt;/h1&gt; &#xA;&lt;p&gt;ÈááÁî®Êõ¥ÁÆÄÂçï„ÄÅÊõ¥ËäÇÁúÅÊòæÂ≠òÁöÑdpoÂÅèÂ•Ω‰ºòÂåñÊñπÊ≥ï„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;‰ª£Á†ÅÔºö&lt;a href=&#34;https://raw.githubusercontent.com/charent/Phi2-mini-Chinese/main/4.dpo.ipynb&#34;&gt;dpo.ipynb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ê†πÊçÆ‰∏™‰∫∫ÂñúÂ•ΩÂØπSFTÊ®°ÂûãÂæÆË∞ÉÔºåÊï∞ÊçÆÈõÜË¶ÅÊûÑÈÄ†‰∏âÂàó&lt;code&gt;prompt&lt;/code&gt;„ÄÅ&lt;code&gt;chosen&lt;/code&gt;Âíå &lt;code&gt;rejected&lt;/code&gt;Ôºå&lt;code&gt;rejected&lt;/code&gt;Ëøô‰∏ÄÂàóÊúâÈÉ®ÂàÜÊï∞ÊçÆÊàëÊòØ‰ªésftÈò∂ÊÆµÂàùÁ∫ßÊ®°ÂûãÔºàÊØîÂ¶ÇsftËÆ≠ÁªÉ4‰∏™&lt;code&gt;epoch&lt;/code&gt;ÔºåÂèñ0.5‰∏™&lt;code&gt;epoch&lt;/code&gt;Ê£ÄÊü•ÁÇπÁöÑÊ®°ÂûãÔºâÁîüÊàêÔºåÂ¶ÇÊûúÁîüÊàêÁöÑ&lt;code&gt;rejected&lt;/code&gt;Âíå&lt;code&gt;chosen&lt;/code&gt;Áõ∏‰ººÂ∫¶Âú®0.9‰ª•‰∏äÔºåÂàô‰∏çË¶ÅËøôÊù°Êï∞ÊçÆ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;DPOËøáÁ®ã‰∏≠Ë¶ÅÊúâ‰∏§‰∏™Ê®°ÂûãÔºå‰∏Ä‰∏™ÊòØË¶ÅËÆ≠ÁªÉÁöÑÊ®°ÂûãÔºå‰∏Ä‰∏™ÊòØÂèÇËÄÉÁöÑÊ®°ÂûãÔºåÂú®Âä†ËΩΩÁöÑÊó∂ÂÄôÂÖ∂ÂÆûÊòØÂêå‰∏Ä‰∏™Ê®°ÂûãÔºåÂè™‰∏çËøáÂèÇËÄÉÊ®°Âûã‰∏çÂèÇ‰∏éÂèÇÊï∞Êõ¥Êñ∞„ÄÇ&lt;/p&gt; &#xA;&lt;h1&gt;6. üìëÊú¨È°πÁõÆÊ®°Âûã‰ΩøÁî®ÊñπÊ≥ï&lt;/h1&gt; &#xA;&lt;h2&gt;6.1 ÊôÆÈÄöÂØπËØùËÉΩÂäõ&lt;/h2&gt; &#xA;&lt;p&gt;Ê®°ÂûãÊùÉÈáç&lt;code&gt;huggingface&lt;/code&gt;‰ªìÂ∫ìÔºö&lt;a href=&#34;https://huggingface.co/charent/Phi2-Chinese-0.2B&#34;&gt;Phi2-Chinese-0.2B&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from transformers import AutoTokenizer, AutoModelForCausalLM, GenerationConfig&#xA;import torch&#xA;&#xA;device = torch.device(&#34;cuda&#34;) if torch.cuda.is_available() else torch.device(&#34;cpu&#34;)&#xA;&#xA;tokenizer = AutoTokenizer.from_pretrained(&#39;charent/Phi2-Chinese-0.2B&#39;)&#xA;model = AutoModelForCausalLM.from_pretrained(&#39;charent/Phi2-Chinese-0.2B&#39;).to(device)&#xA;&#xA;txt = &#39;ÊÑüÂÜí‰∫ÜË¶ÅÊÄé‰πàÂäûÔºü&#39;&#xA;prompt = f&#34;##ÊèêÈóÆ:\n{txt}\n##ÂõûÁ≠î:\n&#34;&#xA;&#xA;# greedy search&#xA;gen_conf = GenerationConfig(&#xA;    num_beams=1,&#xA;    do_sample=False,&#xA;    max_length=320,&#xA;    max_new_tokens=256,&#xA;    no_repeat_ngram_size=4,&#xA;    eos_token_id=tokenizer.eos_token_id,&#xA;    pad_token_id=tokenizer.pad_token_id,&#xA;)&#xA;&#xA;tokend = tokenizer.encode_plus(text=prompt)&#xA;input_ids, attention_mask = torch.LongTensor([tokend.input_ids]).to(device), \&#xA;    torch.LongTensor([tokend.attention_mask]).to(device)&#xA;&#xA;outputs = model.generate(&#xA;    inputs=input_ids,&#xA;    attention_mask=attention_mask,&#xA;    generation_config=gen_conf,&#xA;)&#xA;&#xA;outs = tokenizer.decode(outputs[0].cpu().numpy(), clean_up_tokenization_spaces=True, skip_special_tokens=True,)&#xA;print(outs)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;##ÊèêÈóÆ:&#xA;ÊÑüÂÜí‰∫ÜË¶ÅÊÄé‰πàÂäûÔºü&#xA;##ÂõûÁ≠î:&#xA;ÊÑüÂÜíÊòØÁî±ÁóÖÊØíÂºïËµ∑ÁöÑÔºåÊÑüÂÜí‰∏ÄËà¨Áî±ÁóÖÊØíÂºïËµ∑Ôºå‰ª•‰∏ãÊòØ‰∏Ä‰∫õÂ∏∏ËßÅÊÑüÂÜíÁöÑÊñπÊ≥ïÔºö&#xA;- Ê¥óÊâãÔºåÁâπÂà´ÊòØÂú®Êé•Ëß¶ÂÖ∂‰ªñ‰∫∫ÊàñÁâ©ÂìÅÂêé„ÄÇ&#xA;- Âí≥ÂóΩÊàñÊâìÂñ∑ÂöèÊó∂Áî®Á∫∏Â∑æÊàñÊâãËÇòÈÅÆ‰ΩèÂè£Èºª„ÄÇ&#xA;- Áî®ÊâãËß¶Êë∏Âè£ÈºªÔºåÁâπÂà´ÊòØÂñâÂíôÂíåÈºªÂ≠ê„ÄÇ&#xA;- Â¶ÇÊûúÂí≥ÂóΩÊàñÊâìÂñ∑ÂöèÔºåÂèØ‰ª•Áî®Á∫∏Â∑æÊàñÊâãÁª¢Êù•ÈÅÆ‰ΩèÂè£ÈºªÔºå‰ΩÜË¶ÅËøúÁ¶ªÂÖ∂‰ªñ‰∫∫„ÄÇ&#xA;- Â¶ÇÊûú‰Ω†ÊÑüÂÜí‰∫ÜÔºåÊúÄÂ•Ω‰∏çË¶ÅËß¶Êë∏Ëá™Â∑±ÁöÑÁúºÁùõ„ÄÅÈºªÂ≠êÂíåÂò¥Â∑¥„ÄÇ&#xA;- Âú®ÊÑüÂÜíÊúüÈó¥ÔºåÊúÄÂ•Ω‰øùÊåÅÂÖÖË∂≥ÁöÑÊ∞¥ÂàÜÂíå‰ºëÊÅØÔºå‰ª•ÁºìËß£Ë∫´‰ΩìÁöÑÁñ≤Âä≥„ÄÇ&#xA;- Â¶ÇÊûúÊÇ®Â∑≤ÁªèÊÑüÂÜí‰∫ÜÔºåÂèØ‰ª•Âñù‰∏Ä‰∫õÊ∏©Ê∞¥ÊàñÁõêÊ∞¥Êù•Ë°•ÂÖÖ‰ΩìÊ∂≤„ÄÇ&#xA;- Âè¶Â§ñÔºåÂ¶ÇÊûúÊÑüÂÜí‰∫ÜÔºåÂª∫ËÆÆÂèäÊó∂Â∞±Âåª„ÄÇ&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;6.2 Ê£ÄÁ¥¢ÂºèÁîüÊàêÔºàRAGÔºâ&lt;/h2&gt; &#xA;&lt;p&gt;ÂÖ∑‰Ωì‰ª£Á†ÅËßÅ&lt;code&gt;rag_with_langchain.ipynb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/charent/Phi2-mini-Chinese/main/imgs/rag.png&#34; alt=&#34;rag&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;7„ÄÅüéìÂºïÁî®&lt;/h1&gt; &#xA;&lt;p&gt;Â¶ÇÊûú‰Ω†ËßâÂæóÊú¨È°πÁõÆÂØπ‰Ω†ÊúâÊâÄÂ∏ÆÂä©ÔºåÊ¨¢ËøéÂºïÁî®„ÄÇ&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;@misc{Charent2023,&#xA;    author={Charent Chen},&#xA;    title={A small Chinese causal language model with 0.2B parameters base on Phi2},&#xA;    year={2023},&#xA;    publisher = {GitHub},&#xA;    journal = {GitHub repository},&#xA;    howpublished = {\url{https://github.com/charent/Phi2-mini-Chinese}},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;8„ÄÅü§îÂÖ∂‰ªñ‰∫ãÈ°π&lt;/h1&gt; &#xA;&lt;p&gt;Êú¨È°πÁõÆ‰∏çÊâøÊãÖÂºÄÊ∫êÊ®°ÂûãÂíå‰ª£Á†ÅÂØºËá¥ÁöÑÊï∞ÊçÆÂÆâÂÖ®„ÄÅËàÜÊÉÖÈ£éÈô©ÊàñÂèëÁîü‰ªª‰ΩïÊ®°ÂûãË¢´ËØØÂØº„ÄÅÊª•Áî®„ÄÅ‰º†Êí≠„ÄÅ‰∏çÂΩìÂà©Áî®ËÄå‰∫ßÁîüÁöÑÈ£éÈô©ÂíåË¥£‰ªª„ÄÇ&lt;/p&gt;</summary>
  </entry>
</feed>