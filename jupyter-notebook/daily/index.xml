<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-15T01:35:43Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>divamgupta/diffusionbee-stable-diffusion-ui</title>
    <updated>2022-09-15T01:35:43Z</updated>
    <id>tag:github.com,2022-09-15:/divamgupta/diffusionbee-stable-diffusion-ui</id>
    <link href="https://github.com/divamgupta/diffusionbee-stable-diffusion-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Diffusion Bee is the easiest way to run Stable Diffusion locally on your M1 Mac. Comes with a one-click installer. No dependencies or technical knowledge needed.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Diffusion Bee - Stable Diffusion GUI App for M1 Mac&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/divamgupta&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url.svg?label=Follow%20%40divamgupta&amp;amp;style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Fdivamgupta&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Diffusion Bee is the easiest way to run Stable Diffusion locally on your M1 Mac. Comes with a one-click installer. No dependencies or technical knowledge needed.&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Runs locally on your computer no data is sent to the cloud ( other than request to download the weights and checking for software updates ).&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;If you like Diffusion Bee, consider checking &lt;a href=&#34;https://Liner.ai&#34;&gt;https://Liner.ai&lt;/a&gt; , a one-click tool to train machine learning models&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://diffusionbee.com/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1890549/189538422-52d50488-c1fa-4924-bec6-186c9e0f307b.png&#34; alt=&#34;Download&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/divamgupta/diffusionbee-stable-diffusion-ui/releases/download/0.1.0/DiffusionBee-0.1.0-arm64.dmg&#34;&gt;https://github.com/divamgupta/diffusionbee-stable-diffusion-ui/releases/download/0.1.0/DiffusionBee-0.1.0-arm64.dmg&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;For prompt ideas visit &lt;a href=&#34;https://arthub.ai&#34;&gt;https://arthub.ai&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Join discord server : &lt;a href=&#34;https://discord.gg/t6rC5RaJQn&#34;&gt;https://discord.gg/t6rC5RaJQn&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full data privacy - nothing is sent to the cloud&lt;/li&gt; &#xA; &lt;li&gt;Clean and easy to use UI&lt;/li&gt; &#xA; &lt;li&gt;One click installer&lt;/li&gt; &#xA; &lt;li&gt;No dependencies needed&lt;/li&gt; &#xA; &lt;li&gt;Multiple image sizes&lt;/li&gt; &#xA; &lt;li&gt;Optimized for M1/M2 Chips&lt;/li&gt; &#xA; &lt;li&gt;Runs locally on your computer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download and start the application&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enter the text prompt.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;1162&#34; alt=&#34;Screen Shot 2022-09-11 at 12 33 52 PM&#34; src=&#34;https://user-images.githubusercontent.com/1890549/189538839-45ac91b1-cd66-4543-9ece-956220d0d769.png&#34;&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Wait a few seconds to get the generated image&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1890549/189539684-222482fb-63f7-4799-bfc1-005b84508e35.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;M1 / M2 Mac&lt;/li&gt; &#xA; &lt;li&gt;16 GB RAM preferred. It will run a bit slow with 8GB ram.&lt;/li&gt; &#xA; &lt;li&gt;MacOS 12.5.1 or later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;License : Stable Diffusion is released under the CreativeML OpenRAIL M license : &lt;a href=&#34;https://github.com/CompVis/stable-diffusion/raw/main/LICENSE&#34;&gt;https://github.com/CompVis/stable-diffusion/blob/main/LICENSE&lt;/a&gt; Diffusion Bee is just a GUI wrapper on top of Stable Diffusion, so all the term of Stable Diffusion are applied on the outputs.&lt;/p&gt; &#xA;&lt;p&gt;References&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bfirsh/stable-diffusion/tree/apple-silicon-mps-support&#34;&gt;https://github.com/bfirsh/stable-diffusion/tree/apple-silicon-mps-support&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>mitmath/1806</title>
    <updated>2022-09-15T01:35:43Z</updated>
    <id>tag:github.com,2022-09-15:/mitmath/1806</id>
    <link href="https://github.com/mitmath/1806" rel="alternate"></link>
    <summary type="html">&lt;p&gt;18.06 course at MIT&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MIT Course 18.06, Fall 2022&lt;/h1&gt; &#xA;&lt;p&gt;This is a repository for the course &lt;a href=&#34;http://web.mit.edu/18.06&#34;&gt;18.06: Linear Algebra&lt;/a&gt; at MIT in Fall 2022. See &lt;a href=&#34;https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/managing-branches-in-your-repository/viewing-branches-in-your-repository&#34;&gt;other branches&lt;/a&gt; of this repository for previous semesters.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Instructor&lt;/strong&gt;: &lt;a href=&#34;http://math.mit.edu/~stevenj&#34;&gt;Prof. Steven G. Johnson&lt;/a&gt;. Course administrator: &lt;a href=&#34;https://math.mit.edu/directory/profile.php?pid=2113&#34;&gt;Sergei Korotkikh&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Lectures&lt;/strong&gt;: MWF11 in 26-100. &lt;a href=&#34;https://www.dropbox.com/s/a1xy4oh6wb2i5ub/18.06%20Fall%202022.pdf?dl=0&#34;&gt;Handwritten notes&lt;/a&gt; are posted online, along with video recordings (linked below) and other materials (slides, further reading) in the lecture summaries below.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Exams&lt;/strong&gt;: 11am in 26-100, on 10/7, 11/14, &amp;amp; 12/9. Final exam: date TBA.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Recitations&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;R01,R02 —&amp;nbsp;&lt;a href=&#34;https://web.mit.edu/directory/?id=cfalor&amp;amp;d=mit.edu&#34;&gt;Chirag Falor&lt;/a&gt;: T9 in 2-143, T10 in 2-146 (office hours Mon 3pm &lt;a href=&#34;https://mit.zoom.us/j/96071172098&#34;&gt;via Zoom&lt;/a&gt;, Wed 3pm in TBD).&lt;/li&gt; &#xA; &lt;li&gt;R03,R05 — &lt;a href=&#34;https://sites.google.com/view/mshermanbennett&#34;&gt;Melissa Sherman-Bennett&lt;/a&gt;: T11 in 2-147, T12 in 2-147 (office hours Wed 10am &lt;a href=&#34;https://mit.zoom.us/j/96071172098&#34;&gt;via Zoom&lt;/a&gt;, Thurs 10am in TBD).&lt;/li&gt; &#xA; &lt;li&gt;R04 — &lt;a href=&#34;https://math.mit.edu/directory/profile.php?pid=2113&#34;&gt;Sergei Korotkikh&lt;/a&gt;: T11 in 2-146 (office hours Tues 6pm &lt;a href=&#34;https://mit.zoom.us/j/96071172098&#34;&gt;via Zoom&lt;/a&gt;, Thurs 6pm in 2-231D).&lt;/li&gt; &#xA; &lt;li&gt;R06,R09 — &lt;a href=&#34;https://web.mit.edu/directory/?id=vrong&amp;amp;d=mit.edu&#34;&gt;Victor Rong&lt;/a&gt;: T12 in 2-146, T1 in 2-146 (office hours Mon 8pm &lt;a href=&#34;https://mit.zoom.us/j/96071172098&#34;&gt;via Zoom&lt;/a&gt;, Tues 2pm in TBD).&lt;/li&gt; &#xA; &lt;li&gt;R07,R08 — &lt;a href=&#34;https://math.mit.edu/directory/profile.php?pid=2180&#34;&gt;Mitchell Harris&lt;/a&gt;: T12 in 2-361, T1 in 2-142 (office hours Mon 2pm &lt;a href=&#34;https://mit.zoom.us/j/96071172098&#34;&gt;via Zoom&lt;/a&gt;, Fri 2pm in 32-D 6th-floor lounge).&lt;/li&gt; &#xA; &lt;li&gt;R10,R11 — &lt;a href=&#34;https://math.mit.edu/directory/profile.php?pid=2185&#34;&gt;Ishan Levy&lt;/a&gt;: T1 in 2-136, T2 in 2-142 (office hours Thurs 10:30am &lt;a href=&#34;https://mit.zoom.us/j/96071172098&#34;&gt;via Zoom&lt;/a&gt;, Wed 2pm in 2-390).&lt;/li&gt; &#xA; &lt;li&gt;R12,R13 — &lt;a href=&#34;https://math.mit.edu/directory/profile.php?pid=2178&#34;&gt;Gefei Dang&lt;/a&gt;: T2 in 2-146, T3 in 2-142 (office hours Thurs 4pm &lt;a href=&#34;https://mit.zoom.us/j/96071172098&#34;&gt;via Zoom&lt;/a&gt;, Wed 11am in 2-239).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Undergraduate Assistants&lt;/strong&gt;: TBA.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;: &lt;a href=&#34;https://piazza.com/class/l7g5ixuivav3rm&#34;&gt;Piazza discussion forum&lt;/a&gt;, &lt;a href=&#34;https://math.mit.edu/learningcenter/&#34;&gt;math learning center&lt;/a&gt;, &lt;a href=&#34;https://ome.mit.edu/programs/talented-scholars-resource-room-tsr2&#34;&gt;TSR^2 study/resource room&lt;/a&gt;, &lt;a href=&#34;https://psetpartners.mit.edu/&#34;&gt;pset partners&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This document is a &lt;em&gt;brief&lt;/em&gt; summary of what was covered in each 18.06 lecture, along with links and suggestions for further reading. It is &lt;em&gt;not&lt;/em&gt; a good substitute for attending lecture, but may provide a useful study guide. (You can also look at the analogous summaries from &lt;a href=&#34;https://github.com/stevengj/1806/raw/spring22/README.md&#34;&gt;Spring 2022&lt;/a&gt;.)&lt;/p&gt; &#xA;&lt;h2&gt;Lecture 1 (Sep 7)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1ivbV1nr67XfasBdXezZF9UWILzDoQtQev8vSqRKBfu0/edit?usp=sharing&#34;&gt;course overview/syllabus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mitmath/1806/master/psets/pset1.ipynb&#34;&gt;pset 1&lt;/a&gt;: due &lt;strong&gt;Friday Sep 16 at 11am&lt;/strong&gt; (submit your solutions on Gradescope).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mit.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=19855fd0-d2be-4252-aa41-af0900816383&#34;&gt;video&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Slides giving the syllabus and the &#34;big picture&#34; of what 18.06 is about. Introduction to thinking about matrices as linear operations, not just as &#34;bags of numbers&#34;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Further reading&lt;/strong&gt;: Strang, chapter 1, and section 8.1 on linear transformations. 3blue1brown has a nice video on &lt;a href=&#34;https://youtu.be/XkY2DOUCWMU&#34;&gt;matrix multiplication as composition of linear transformations&lt;/a&gt;. If you&#39;ve forgotten the basics of how to multiply matrices by vectors or matrices by matrices, google for some tutorial material online (e.g. &lt;a href=&#34;https://www.khanacademy.org/math/precalculus/x9e81a4f98389efdf:matrices/x9e81a4f98389efdf:multiplying-matrices-by-matrices/a/multiplying-matrices&#34;&gt;Khan academy&lt;/a&gt;) and do a quick brush-up.&lt;/p&gt; &#xA;&lt;h2&gt;Lecture 2 (Sep 9)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;handwritten notes: see link above (at beginning)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mit.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=b9662b0d-6280-448a-b745-af090062417b&#34;&gt;video&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Gaussian_elimination&#34;&gt;Gaussian elimination&lt;/a&gt; for &lt;strong&gt;Ax=b&lt;/strong&gt;: I started with the grade-school/high-school viewpoint of writing out three equations in three unknowns, adding/subtracting multiples of equations until we were left with one equation in one unknown. Then, I wrote the same equations in matrix form, and renamed this process &#34;Gaussian elimination&#34;: we add/subtract multiples of matrix rows to introduce zeros below the diagonal, i.e. to make the matrix &lt;a href=&#34;https://en.wikipedia.org/wiki/Triangular_matrix&#34;&gt;upper triangular&lt;/a&gt; &lt;strong&gt;U&lt;/strong&gt;. We then do the same row operations to the right hand side &lt;strong&gt;b&lt;/strong&gt; to get a new vector &lt;strong&gt;c&lt;/strong&gt;. Finally, we solve &lt;strong&gt;Ux=c&lt;/strong&gt; for x by working from bottom (1 equation in 1 variable) to top, a process called &#34;backsubstitution&#34;.&lt;/p&gt; &#xA;&lt;p&gt;To do the same operations to both &lt;strong&gt;A&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt;, a useful trick for hand calculations is to &lt;a href=&#34;https://en.wikipedia.org/wiki/Augmented_matrix&#34;&gt;augment&lt;/a&gt; the matrix with a new column representing the right-hand side, forming &lt;strong&gt;[A b]&lt;/strong&gt; before starting Gaussian elimination.&lt;/p&gt; &#xA;&lt;p&gt;What comes next? The problem with expressing Gaussian elimination this way, as operations on individual numbers in the matrix, is that it is impossible to follow the process in detail for anything except a very tiny matrix. We need a higher-level &#34;algebraic&#34; way to express the process, both to help us understand it and also to help us to &lt;em&gt;use&lt;/em&gt; it (e.g. to perform additional algebraic transformations afterwards). To do this, we want to express the process, not as operations on individual numbers, but as matrix operations.&lt;/p&gt; &#xA;&lt;p&gt;Rewrote Gaussian elimination in matrix form: we multiply a matrix A on the &lt;em&gt;left&lt;/em&gt; by a sequence of &lt;strong&gt;lower&lt;/strong&gt;-triangular &#34;elimination matrices&#34; Eₙ to arrive at an &lt;strong&gt;upper&lt;/strong&gt;-triangular matrix U = EA. To solve Ax=b, we can think of the earlier process as multiplying &lt;em&gt;both sides&lt;/em&gt; on the &lt;em&gt;left&lt;/em&gt; by &lt;strong&gt;E&lt;/strong&gt;, the linear operator representing the composition (product) of all of the elimination steps, yielding Ux=EAx on the left and c=Eb on the right.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re not done: it turns out to be even more fruitful to &lt;em&gt;reverse&lt;/em&gt; the process, and write A = LU: L represents the operations required to turn the matrix U back into A, and turns out toe be a &lt;strong&gt;lower&lt;/strong&gt;-triangular matrix whose entries are just a record of the elimination steps. This &lt;strong&gt;LU factorization&lt;/strong&gt; is extremely useful and important because it allows us to replace a &lt;em&gt;complicated&lt;/em&gt; matrix A with two &lt;em&gt;much simpler&lt;/em&gt; (triangular) ones. For example, solving Ax=b turns into LUx=b, and we can do this just by two &#34;triangular&#34; solves. More on this next time.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Further reading:&lt;/strong&gt; Textbook sections 2.1, 2.2, 2.3. Strang &lt;a href=&#34;https://www.youtube.com/watch?v=QVKj3LADCnA&amp;amp;list=PLE7DDD91010BC51F8&amp;amp;index=3&#34;&gt;lecture 2 video&lt;/a&gt;. And there is a Gaussian-elimination &lt;a href=&#34;https://nbviewer.org/github/mitmath/1806/blob/master/notes/Gaussian-elimination.ipynb&#34;&gt;Julia notebook&lt;/a&gt; that covers the same steps in Julia form. See also &#34;The key reason why A = LU&#34; in section 2.6 of the textbook.&lt;/p&gt; &#xA;&lt;h2&gt;Lecture 3 (Feb 4): recorded&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;video (only): see the &lt;a href=&#34;https://mit.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=885fb286-4dab-4aa6-9ef0-ae2e00f05ceb&#34;&gt;spring 2022 recording&lt;/a&gt;, lecture 3&lt;/li&gt; &#xA; &lt;li&gt;handwritten notes&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.org/github/mitmath/1806/blob/master/notes/Inverses-LU-intro.ipynb&#34;&gt;Matrix inverse and LU notebook&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(Prof. Johnson is sick and so we will use the recorded lecture from spring.)&lt;/p&gt; &#xA;&lt;p&gt;Showed that Gaussian elimination can be viewed as &lt;strong&gt;LU factorization&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gaussian elimination A ⟿ U=EA (without row swaps) can be thought of as A=LU: factorizing A into a &lt;strong&gt;product of two simpler (triangular) matrices&lt;/strong&gt; (L=lower, U=upper). U is the matrix that you normally get when you do elimination by hand, and L (the inverse of the elimination steps L=E⁻¹, a lower-triangular matrix with 1&#39;s on the diagonal) is essentially a &lt;em&gt;&#34;record&#34; of the elimination steps&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;L is the matrix that &#34;reverses&#34; Gaussian elimination: it tells you how to get A back from L. Despite this, I showed in lecture that L is actually &lt;em&gt;easier&lt;/em&gt; to get than E: all you do is make a diagonal matrix of 1&#39;s, and then fill in the &lt;em&gt;multipliers&lt;/em&gt; from the elimination steps (flipping subtraction to addition) below the diagonal. So, L just requires bookkeeping, and &lt;em&gt;no&lt;/em&gt; computation.&lt;/p&gt; &#xA;&lt;p&gt;Computing U is hard (elimination is a lot of work, even for a computer), but once you have U and L then many things that you might want to do with A become easy.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For example, suppose you want to solve Ax=b, given A=LU. Write LUx=b=L(Ux), and let y=Ux. Then Ly=b, and we can solve for y by forward-substitution. Given y, we can then solve Ux=y by back-substitution. Both of these steps are easy because the systems are triangular. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Moreover, solving Ly=b turns out to &lt;em&gt;exactly&lt;/em&gt; correspond to applying the elimination steps from A ⟿ U to b. (The 1&#39;s on L&#39;s diagonal mean that there are no divisions required, either.)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;This means that we can re-use L and U to solve Ax=b for &lt;em&gt;many right-hand sides&lt;/em&gt;. In contrast, if you &#34;augment&#34; A with b and then do elimination (A|b)⟶(U|y), you get the &lt;em&gt;same&lt;/em&gt; new right-hand side y but you haven&#39;t kept a record of the elimination steps, so if you have a new right-hand side you might naively repeat the whole elimination process (hard!) rather than solving Ly=b (easy!).&lt;/li&gt; &#xA; &lt;li&gt;More generally, whenever you have A as a product of &#34;simpler&#34; matrices (e.g. triangular, diagonal, …), you can solve Ax=b by a sequence of &#34;simpler&#34; solves.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Introduction to the concept of a matrix inverse more generally as the matrix that reverses the action of a linear operator. Key ideas from the notebook:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A⁻¹ is the matrix that does the &#34;reverse&#34; of A: A⁻¹(Ax)=x for any x. It also follows that A is the reverse of A⁻¹: A(A⁻¹x)=x for any x, i.e. (A⁻¹)⁻¹=A. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;That is, if Ax=b, then A⁻¹b=x (for any x). (Equivalently, it gives the solution to Ax=b.)&lt;/li&gt; &#xA;   &lt;li&gt;It only exists for &lt;strong&gt;square, nonsingular&lt;/strong&gt; matrices A. (i.e. an m×m matrix A must give m nonzero pivots when you do elimination.)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Equivalently, A⁻¹ is the matrix for which A⁻¹A = A⁻¹A = I (the m×m identity matrix). &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;I is an identity matrix, the matrix that gives Ix=x for any x or IA=A and AI=A for any A. There are m×m identity matrices for all m, and when we write &#34;I&#34; we usually infer from context how big an I we mean.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In the next lecture (which will start with the end of this notebook), we will look at calculating inverses more generally (although it turns out that this is something that you should almost never do explicitly, even on a computer!).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Further reading:&lt;/strong&gt; Textbook sections 2.5, 2.6. Strang &lt;a href=&#34;https://www.youtube.com/watch?v=5hO3MrzPa0A&#34;&gt;lecture 4 video&lt;/a&gt; and &lt;a href=&#34;https://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/video-lectures/lecture-3-multiplication-and-inverse-matrices/&#34;&gt;lecture 3 video&lt;/a&gt;. See also &#34;The key reason why A = LU&#34; in section 2.6 of the textbook.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;em&gt;Optional&lt;/em&gt; Julia Tutorial: recorded&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mit.zoom.us/rec/share/w7o2TQjDOnHsaRlJvbS1iysu5Sh23gGVFt3nX_VShRoRBr5UCsPlMhEu1EeyQrk.Vq1WOfArkC3v-Lma?startTime=1643839179000&#34;&gt;video recording&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(No live tutorial since Prof. Johnson is sick.)&lt;/p&gt; &#xA;&lt;p&gt;A basic overview of the Julia programming environment for numerical computations that we will use in 18.06 for simple computational exploration. This (Zoom-based) tutorial will cover what Julia is and the basics of interaction, scalar/vector/matrix arithmetic, and plotting — we&#39;ll be using it as just a &#34;fancy calculator&#34; and no &#34;real programming&#34; will be required.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mitmath/julia-mit&#34;&gt;Tutorial materials&lt;/a&gt; (and links to other resources)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If possible, try to install Julia on your laptop beforehand using the instructions at the above link. Failing that, you can run Julia in the cloud (see instructions above).&lt;/p&gt; &#xA;&lt;h2&gt;Lecture 4 (Sep 14)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mit.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=faf2a3ef-fcc2-4ff4-a928-af0900628908&#34;&gt;video recording&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.org/github/mitmath/1806/blob/master/notes/Gauss-Jordan.ipynb&#34;&gt;Matrix inverse and Gauss–Jordan&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Reviewed matrix inverses and key properties thereof.&lt;/p&gt; &#xA;&lt;p&gt;Went through how to explicitly compute A⁻¹ by solving AA⁻¹ = I. Essentially, this is just solving Ax=b multiple times, where b is each column of I. A common way to organize this for &lt;em&gt;hand&lt;/em&gt; calculation (ugh) is the Gauss–Jordan algorithm (on a 3×3 example that can also be found in the textbook): If we do row operations on A to get I, then the &lt;em&gt;same&lt;/em&gt; row operations on I give A⁻¹! To carry this out by hand, we augment (A|I), do ordinary Gaussian elimination to get (U|C), and then do elimination &#34;upwards&#34; to get (I|A⁻¹).&lt;/p&gt; &#xA;&lt;p&gt;Matrix inverses are mainly a &lt;em&gt;conceptual&lt;/em&gt; tool that we use to move matrices around &lt;em&gt;symbolically&lt;/em&gt; in equations. Once you are through with your algebraic manipulations, you might end up with an expression like A⁻¹b — but when it comes time to actually &lt;em&gt;compute&lt;/em&gt; the answer, you should &lt;strong&gt;read &#34;A⁻¹b&#34; as &#34;solve Ax=b for x by the best available method&#34;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Further reading:&lt;/strong&gt; Textbook sections 2.5, 2.6. Strang &lt;a href=&#34;https://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/video-lectures/lecture-3-multiplication-and-inverse-matrices/&#34;&gt;video lecture 3&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>