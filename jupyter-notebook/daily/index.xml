<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-01T01:41:32Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>xl0/lovely-tensors</title>
    <updated>2022-12-01T01:41:32Z</updated>
    <id>tag:github.com,2022-12-01:/xl0/lovely-tensors</id>
    <link href="https://github.com/xl0/lovely-tensors" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tensors, ready for human consumption&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;‚ù§Ô∏è Lovely Tensors&lt;/h1&gt; &#xA;&lt;!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! --&gt; &#xA;&lt;div&gt; &#xA; &lt;h2&gt;&lt;a href=&#34;https://xl0.github.io/lovely-tensors&#34;&gt;Read full docs&lt;/a&gt; | üíò &lt;a href=&#34;https://github.com/xl0/lovely-jax&#34;&gt;Lovely &lt;code&gt;JAX&lt;/code&gt;&lt;/a&gt; | üíü &lt;a href=&#34;https://github.com/xl0/lovely-numpy&#34;&gt;Lovely &lt;code&gt;NumPy&lt;/code&gt;&lt;/a&gt; | &lt;a href=&#34;https://discord.gg/4NxRV7NH&#34;&gt;Discord&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install lovely-tensors&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;p&gt;How often do you find yourself debugging PyTorch code? You dump a tensor to the cell output, and see this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;numbers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor([[[-0.3541, -0.3369, -0.4054,  ..., -0.5596, -0.4739,  2.2489],&#xA;         [-0.4054, -0.4226, -0.4911,  ..., -0.9192, -0.8507,  2.1633],&#xA;         [-0.4739, -0.4739, -0.5424,  ..., -1.0390, -1.0390,  2.1975],&#xA;         ...,&#xA;         [-0.9020, -0.8335, -0.9363,  ..., -1.4672, -1.2959,  2.2318],&#xA;         [-0.8507, -0.7822, -0.9363,  ..., -1.6042, -1.5014,  2.1804],&#xA;         [-0.8335, -0.8164, -0.9705,  ..., -1.6555, -1.5528,  2.1119]],&#xA;&#xA;        [[-0.1975, -0.1975, -0.3025,  ..., -0.4776, -0.3725,  2.4111],&#xA;         [-0.2500, -0.2325, -0.3375,  ..., -0.7052, -0.6702,  2.3585],&#xA;         [-0.3025, -0.2850, -0.3901,  ..., -0.7402, -0.8102,  2.3761],&#xA;         ...,&#xA;         [-0.4251, -0.2325, -0.3725,  ..., -1.0903, -1.0203,  2.4286],&#xA;         [-0.3901, -0.2325, -0.4251,  ..., -1.2304, -1.2304,  2.4111],&#xA;         [-0.4076, -0.2850, -0.4776,  ..., -1.2829, -1.2829,  2.3410]],&#xA;&#xA;        [[-0.6715, -0.9853, -0.8807,  ..., -0.9678, -0.6890,  2.3960],&#xA;         [-0.7238, -1.0724, -0.9678,  ..., -1.2467, -1.0201,  2.3263],&#xA;         [-0.8284, -1.1247, -1.0201,  ..., -1.2641, -1.1596,  2.3786],&#xA;         ...,&#xA;         [-1.2293, -1.4733, -1.3861,  ..., -1.5081, -1.2641,  2.5180],&#xA;         [-1.1944, -1.4559, -1.4210,  ..., -1.6476, -1.4733,  2.4308],&#xA;         [-1.2293, -1.5256, -1.5081,  ..., -1.6824, -1.5256,  2.3611]]])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Was it really useful for you, as a human, to see all these numbers?&lt;/p&gt; &#xA;&lt;p&gt;What is the shape? The size?&lt;br&gt; What are the statistics?&lt;br&gt; Are any of the values &lt;code&gt;nan&lt;/code&gt; or &lt;code&gt;inf&lt;/code&gt;?&lt;br&gt; Is it an image of a man holding a tench?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import lovely_tensors as lt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;lt.monkey_patch()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;code&gt;__repr__&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;numbers # torch.Tensor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor[3, 196, 196] n=115248 x‚àà[-2.118, 2.640] Œº=-0.388 œÉ=1.073&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Better, huh?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;numbers[1,:6,1] # Still shows values if there are not too many.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor[6] x‚àà[-0.443, -0.197] Œº=-0.311 œÉ=0.091 [-0.197, -0.232, -0.285, -0.373, -0.443, -0.338]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;spicy = numbers[0,:12,0].clone()&#xA;&#xA;spicy[0] *= 10000&#xA;spicy[1] /= 10000&#xA;spicy[2] = float(&#39;inf&#39;)&#xA;spicy[3] = float(&#39;-inf&#39;)&#xA;spicy[4] = float(&#39;nan&#39;)&#xA;&#xA;spicy = spicy.reshape((2,6))&#xA;spicy # Spicy stuff&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor[2, 6] n=12 x‚àà[-3.541e+03, -4.054e-05] Œº=-393.842 œÉ=1.180e+03 +Inf! -Inf! NaN!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;torch.zeros(10, 10) # A zero tensor - make it obvious&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor[10, 10] all_zeros&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;spicy.v # Verbose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor[2, 6] n=12 x‚àà[-3.541e+03, -4.054e-05] Œº=-393.842 œÉ=1.180e+03 +Inf! -Inf! NaN!&#xA;tensor([[-3.5405e+03, -4.0543e-05,         inf,        -inf,         nan, -6.1093e-01],&#xA;        [-6.1093e-01, -5.9380e-01, -5.9380e-01, -5.4243e-01, -5.4243e-01, -5.4243e-01]])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;spicy.p # The plain old way&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor([[-3.5405e+03, -4.0543e-05,         inf,        -inf,         nan, -6.1093e-01],&#xA;        [-6.1093e-01, -5.9380e-01, -5.9380e-01, -5.4243e-01, -5.4243e-01, -5.4243e-01]])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Going &lt;code&gt;.deeper&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;numbers.deeper&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor[3, 196, 196] n=115248 x‚àà[-2.118, 2.640] Œº=-0.388 œÉ=1.073&#xA;  tensor[196, 196] n=38416 x‚àà[-2.118, 2.249] Œº=-0.324 œÉ=1.036&#xA;  tensor[196, 196] n=38416 x‚àà[-1.966, 2.429] Œº=-0.274 œÉ=0.973&#xA;  tensor[196, 196] n=38416 x‚àà[-1.804, 2.640] Œº=-0.567 œÉ=1.178&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# You can go deeper if you need to&#xA;numbers[:,:3,:5].deeper(2)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor[3, 3, 5] n=45 x‚àà[-1.316, -0.197] Œº=-0.593 œÉ=0.306&#xA;  tensor[3, 5] n=15 x‚àà[-0.765, -0.337] Œº=-0.492 œÉ=0.124&#xA;    tensor[5] x‚àà[-0.440, -0.337] Œº=-0.385 œÉ=0.041 [-0.354, -0.337, -0.405, -0.440, -0.388]&#xA;    tensor[5] x‚àà[-0.662, -0.405] Œº=-0.512 œÉ=0.108 [-0.405, -0.423, -0.491, -0.577, -0.662]&#xA;    tensor[5] x‚àà[-0.765, -0.474] Œº=-0.580 œÉ=0.125 [-0.474, -0.474, -0.542, -0.645, -0.765]&#xA;  tensor[3, 5] n=15 x‚àà[-0.513, -0.197] Œº=-0.321 œÉ=0.099&#xA;    tensor[5] x‚àà[-0.303, -0.197] Œº=-0.243 œÉ=0.055 [-0.197, -0.197, -0.303, -0.303, -0.215]&#xA;    tensor[5] x‚àà[-0.408, -0.232] Œº=-0.327 œÉ=0.084 [-0.250, -0.232, -0.338, -0.408, -0.408]&#xA;    tensor[5] x‚àà[-0.513, -0.285] Œº=-0.394 œÉ=0.102 [-0.303, -0.285, -0.390, -0.478, -0.513]&#xA;  tensor[3, 5] n=15 x‚àà[-1.316, -0.672] Œº=-0.964 œÉ=0.176&#xA;    tensor[5] x‚àà[-0.985, -0.672] Œº=-0.846 œÉ=0.123 [-0.672, -0.985, -0.881, -0.776, -0.916]&#xA;    tensor[5] x‚àà[-1.212, -0.724] Œº=-0.989 œÉ=0.179 [-0.724, -1.072, -0.968, -0.968, -1.212]&#xA;    tensor[5] x‚àà[-1.316, -0.828] Œº=-1.058 œÉ=0.179 [-0.828, -1.125, -1.020, -1.003, -1.316]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Now in &lt;code&gt;.rgb&lt;/code&gt; color&lt;/h2&gt; &#xA;&lt;p&gt;The important queston - is it our man?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;numbers.rgb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xl0/lovely-tensors/master/index_files/figure-gfm/cell-13-output-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Maaaaybe?&lt;/em&gt; Looks like someone normalized him.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;in_stats = ( (0.485, 0.456, 0.406),     # mean &#xA;             (0.229, 0.224, 0.225) )    # std&#xA;&#xA;# numbers.rgb(in_stats, cl=True) # For channel-last input format&#xA;numbers.rgb(in_stats)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xl0/lovely-tensors/master/index_files/figure-gfm/cell-14-output-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It‚Äôs indeed our hero, the Tenchman!&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;.plt&lt;/code&gt; the statistics&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;(numbers+3).plt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xl0/lovely-tensors/master/index_files/figure-gfm/cell-15-output-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;(numbers+3).plt(center=&#34;mean&#34;, max_s=1000)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xl0/lovely-tensors/master/index_files/figure-gfm/cell-16-output-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;(numbers+3).plt(center=&#34;range&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xl0/lovely-tensors/master/index_files/figure-gfm/cell-17-output-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;See the &lt;code&gt;.chans&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# .chans will map values betwen [0,1] to colors.&#xA;# Make our values fit into that range to avoid clipping.&#xA;mean = torch.tensor(in_stats[0])[:,None,None]&#xA;std = torch.tensor(in_stats[1])[:,None,None]&#xA;numbers_01 = (numbers*std + mean)&#xA;numbers_01&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor[3, 196, 196] n=115248 x‚àà[0., 1.000] Œº=0.361 œÉ=0.248&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;numbers_01.chans&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xl0/lovely-tensors/master/index_files/figure-gfm/cell-19-output-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Let‚Äôs try with a Convolutional Neural Network&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from torchvision.models import vgg11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;features: torch.nn.Sequential = vgg11().features&#xA;&#xA;# I saved the first 5 layers in &#34;features.pt&#34;&#xA;_ = features.load_state_dict(torch.load(&#34;../features.pt&#34;), strict=False)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Activatons of the second max pool layer of VGG11&#xA;acts = (features[:6](numbers[None])[0]/2) # /2 to reduce clipping&#xA;acts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor[128, 49, 49] n=307328 x‚àà[0., 12.508] Œº=0.367 œÉ=0.634 grad DivBackward0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;acts.chans&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xl0/lovely-tensors/master/index_files/figure-gfm/cell-23-output-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Grouping&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Make 8 images with progressively higher brightness and stack them 2x2x2.&#xA;eight_images = (torch.stack([numbers]*8)&#xA;                    .add(torch.linspace(-3, 3, 8)[:,None,None,None])&#xA;                    .mul(torch.tensor(in_stats[1])[:,None,None])&#xA;                    .add(torch.tensor(in_stats[0])[:,None,None])&#xA;                    .clamp(0,1)&#xA;                    .view(2,2,2,3,196,196)&#xA;)&#xA;eight_images&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor[2, 2, 2, 3, 196, 196] n=921984 x‚àà[0., 1.000] Œº=0.411 œÉ=0.369&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;eight_images.rgb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xl0/lovely-tensors/master/index_files/figure-gfm/cell-25-output-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Weights of the second conv layer of VGG11&#xA;features[3].weight&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Parameter containing:&#xA;Parameter[128, 64, 3, 3] n=73728 x‚àà[-0.783, 0.776] Œº=-0.004 œÉ=0.065 grad&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Quick and dirty normalization. I want +/- 2œÉ to fall in the range [0..1]&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;weights = features[3].weight.data&#xA;weights = weights / (2*2*weights.std()) # *2 because we want 2œÉ on both sides, so 4œÉ&#xA;weights += weights.std() * 2&#xA;weights.plt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xl0/lovely-tensors/master/index_files/figure-gfm/cell-27-output-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Weights of the second conv layer (64ch -&amp;gt; 128ch) of VGG11,&#xA;# grouped per output channel.&#xA;weights.chans(frame_px=1, gutter_px=0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xl0/lovely-tensors/master/index_files/figure-gfm/cell-28-output-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It‚Äôs a bit hard to see. Scale up 10x, but onyl show the first 4 filters.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;weights[:4].chans(frame_px=1, gutter_px=0, scale=10)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xl0/lovely-tensors/master/index_files/figure-gfm/cell-29-output-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Without &lt;code&gt;.monkey_patch&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;lt.lovely(spicy)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor[2, 6] n=12 x‚àà[-3.541e+03, -4.054e-05] Œº=-393.842 œÉ=1.180e+03 +Inf! -Inf! NaN!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;lt.lovely(spicy, verbose=True)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor[2, 6] n=12 x‚àà[-3.541e+03, -4.054e-05] Œº=-393.842 œÉ=1.180e+03 +Inf! -Inf! NaN!&#xA;tensor([[-3.5405e+03, -4.0543e-05,         inf,        -inf,         nan, -6.1093e-01],&#xA;        [-6.1093e-01, -5.9380e-01, -5.9380e-01, -5.4243e-01, -5.4243e-01, -5.4243e-01]])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;lt.lovely(numbers, depth=1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor[3, 196, 196] n=115248 x‚àà[-2.118, 2.640] Œº=-0.388 œÉ=1.073&#xA;  tensor[196, 196] n=38416 x‚àà[-2.118, 2.249] Œº=-0.324 œÉ=1.036&#xA;  tensor[196, 196] n=38416 x‚àà[-1.966, 2.429] Œº=-0.274 œÉ=0.973&#xA;  tensor[196, 196] n=38416 x‚àà[-1.804, 2.640] Œº=-0.567 œÉ=1.178&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;lt.rgb(numbers, in_stats)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xl0/lovely-tensors/master/index_files/figure-gfm/cell-33-output-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;lt.plot(numbers, center=&#34;mean&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xl0/lovely-tensors/master/index_files/figure-gfm/cell-34-output-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;lt.chans(numbers_01)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xl0/lovely-tensors/master/index_files/figure-gfm/cell-35-output-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MLEveryday/100-Days-Of-ML-Code</title>
    <updated>2022-12-01T01:41:32Z</updated>
    <id>tag:github.com,2022-12-01:/MLEveryday/100-Days-Of-ML-Code</id>
    <link href="https://github.com/MLEveryday/100-Days-Of-ML-Code" rel="alternate"></link>
    <summary type="html">&lt;p&gt;100-Days-Of-ML-Code‰∏≠ÊñáÁâà&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Êú∫Âô®Â≠¶‰π†100Â§©&lt;/h1&gt; &#xA;&lt;p&gt;Ëã±ÊñáÂéüÁâàËØ∑ÁßªÊ≠•&lt;a href=&#34;https://github.com/Avik-Jain/100-Days-Of-ML-Code&#34;&gt;Avik-Jain&lt;/a&gt;„ÄÇÊï∞ÊçÆÂú®&lt;a href=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/tree/master/datasets&#34;&gt;ËøôÈáå&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ÁøªËØëÂâçËØ∑ÂÖàÈòÖËØª&lt;a href=&#34;https://raw.githubusercontent.com/MLEveryday/100-Days-Of-ML-Code/master/Translation%20specification.MD&#34;&gt;ËßÑËåÉ&lt;/a&gt;„ÄÇÂ∏∏ËßÅÈóÆÈ¢òËß£Á≠îËßÅ&lt;a href=&#34;https://raw.githubusercontent.com/MLEveryday/100-Days-Of-ML-Code/master/FAQ.MD&#34;&gt;FAQ&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h1&gt;ÁõÆÂΩï&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÊúâÁõëÁù£Â≠¶‰π† &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MLEveryday/100-Days-Of-ML-Code/master/#%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86--%E7%AC%AC1%E5%A4%A9&#34;&gt;Êï∞ÊçÆÈ¢ÑÂ§ÑÁêÜ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MLEveryday/100-Days-Of-ML-Code/master/#%E7%AE%80%E5%8D%95%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92--%E7%AC%AC2%E5%A4%A9&#34;&gt;ÁÆÄÂçïÁ∫øÊÄßÂõûÂΩí&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MLEveryday/100-Days-Of-ML-Code/master/#%E5%A4%9A%E5%85%83%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92--%E7%AC%AC3%E5%A4%A9&#34;&gt;Â§öÂÖÉÁ∫øÊÄßÂõûÂΩí&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MLEveryday/100-Days-Of-ML-Code/master/#%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92--%E7%AC%AC4%E5%A4%A9&#34;&gt;ÈÄªËæëÂõûÂΩí&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MLEveryday/100-Days-Of-ML-Code/master/#k%E8%BF%91%E9%82%BB%E6%B3%95k-nn--%E7%AC%AC7%E5%A4%A9&#34;&gt;kËøëÈÇªÊ≥ï(k-NN)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MLEveryday/100-Days-Of-ML-Code/master/#%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BAsvm--%E7%AC%AC12%E5%A4%A9&#34;&gt;ÊîØÊåÅÂêëÈáèÊú∫(SVM)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MLEveryday/100-Days-Of-ML-Code/master/#%E5%86%B3%E7%AD%96%E6%A0%91--%E7%AC%AC23%E5%A4%A9&#34;&gt;ÂÜ≥Á≠ñÊ†ë&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MLEveryday/100-Days-Of-ML-Code/master/#%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97--%E7%AC%AC33%E5%A4%A9&#34;&gt;ÈöèÊú∫Ê£ÆÊûó&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Êó†ÁõëÁù£Â≠¶‰π† &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MLEveryday/100-Days-Of-ML-Code/master/#k-%E5%9D%87%E5%80%BC%E8%81%9A%E7%B1%BB--%E7%AC%AC43%E5%A4%A9&#34;&gt;K-ÂùáÂÄºËÅöÁ±ª&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MLEveryday/100-Days-Of-ML-Code/master/#%E5%B1%82%E6%AC%A1%E8%81%9A%E7%B1%BB--%E7%AC%AC54%E5%A4%A9&#34;&gt;Â±ÇÊ¨°ËÅöÁ±ª&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Êï∞ÊçÆÈ¢ÑÂ§ÑÁêÜ | Á¨¨1Â§©&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Code/Day%201_Data_Preprocessing.md&#34;&gt;Êï∞ÊçÆÈ¢ÑÂ§ÑÁêÜÂÆûÁé∞&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Info-graphs/Day%201.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;ÁÆÄÂçïÁ∫øÊÄßÂõûÂΩí | Á¨¨2Â§©&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Code/Day%202_Simple_Linear_Regression.md&#34;&gt;ÁÆÄÂçïÁ∫øÊÄßÂõûÂΩíÂÆûÁé∞&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Info-graphs/Day%202.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Â§öÂÖÉÁ∫øÊÄßÂõûÂΩí | Á¨¨3Â§©&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Code/Day%203_Multiple_Linear_Regression.md&#34;&gt;Â§öÂÖÉÁ∫øÊÄßÂõûÂΩíÂÆûÁé∞&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Info-graphs/Day%203.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;ÈÄªËæëÂõûÂΩí | Á¨¨4Â§©&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Info-graphs/Day%204.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;ÈÄªËæëÂõûÂΩí | Á¨¨5Â§©&lt;/h2&gt; &#xA;&lt;p&gt;‰ªäÂ§©ÊàëÊ∑±ÂÖ•Á†îÁ©∂‰∫ÜÈÄªËæëÂõûÂΩíÂà∞Â∫ïÊòØ‰ªÄ‰πàÔºå‰ª•ÂèäÂÆÉËÉåÂêéÁöÑÊï∞Â≠¶ÊòØ‰ªÄ‰πà„ÄÇÂ≠¶‰π†‰∫ÜÂ¶Ç‰ΩïËÆ°ÁÆó‰ª£‰ª∑ÂáΩÊï∞Ôºå‰ª•ÂèäÂ¶Ç‰Ωï‰ΩøÁî®Ê¢ØÂ∫¶‰∏ãÈôçÊ≥ïÊù•Â∞Ü‰ª£‰ª∑ÂáΩÊï∞Èôç‰ΩéÂà∞ÊúÄÂ∞è„ÄÇ&lt;br&gt; Áî±‰∫éÊó∂Èó¥ÂÖ≥Á≥ªÔºåÊàëÂ∞ÜÈöîÂ§©ÂèëÂ∏É‰ø°ÊÅØÂõæ„ÄÇÂ¶ÇÊûúÊúâ‰∫∫Âú®Êú∫Âô®Â≠¶‰π†È¢ÜÂüüÊúâ‰∏ÄÂÆöÁªèÈ™åÔºåÂπ∂ÊÑøÊÑèÂ∏ÆÊàëÁºñÂÜô‰ª£Á†ÅÊñáÊ°£Ôºå‰πü‰∫ÜËß£githubÁöÑMarkdownËØ≠Ê≥ïÔºåËØ∑Âú®È¢ÜËã±ËÅîÁ≥ªÊàë„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÈÄªËæëÂõûÂΩí | Á¨¨6Â§©&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Code/Day%206_Logistic_Regression.md&#34;&gt;ÈÄªËæëÂõûÂΩíÂÆûÁé∞&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;KËøëÈÇªÊ≥ï(k-NN) | Á¨¨7Â§©&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Info-graphs/Day%207.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;ÈÄªËæëÂõûÂΩíËÉåÂêéÁöÑÊï∞Â≠¶ | Á¨¨8Â§©&lt;/h2&gt; &#xA;&lt;p&gt;‰∏∫‰∫Ü‰ΩøÊàëÂØπÈÄªËæëÂõûÂΩíÁöÑËßÅËß£Êõ¥Âä†Ê∏ÖÊô∞ÔºåÊàëÂú®ÁΩë‰∏äÊêúÁ¥¢‰∫Ü‰∏Ä‰∫õËµÑÊ∫êÊàñÊñáÁ´†ÔºåÁÑ∂ÂêéÊàëÂ∞±ÂèëÁé∞‰∫ÜSaishruthi SwaminathanÁöÑ&lt;a href=&#34;https://towardsdatascience.com/logistic-regression-detailed-overview-46c4da4303bc&#34;&gt;ËøôÁØáÊñáÁ´†&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;ÂÆÉÁªôÂá∫‰∫ÜÈÄªËæëÂõûÂΩíÁöÑËØ¶ÁªÜÊèèËø∞„ÄÇËØ∑Âä°ÂøÖÁúã‰∏ÄÁúã„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÊîØÊåÅÂêëÈáèÊú∫(SVM) | Á¨¨9Â§©&lt;/h2&gt; &#xA;&lt;p&gt;Áõ¥ËßÇ‰∫ÜËß£SVMÊòØ‰ªÄ‰πà‰ª•ÂèäÂ¶Ç‰Ωï‰ΩøÁî®ÂÆÉÊù•Ëß£ÂÜ≥ÂàÜÁ±ªÈóÆÈ¢ò„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÊîØÊåÅÂêëÈáèÊú∫ÂíåKËøëÈÇªÊ≥ï | Á¨¨10Â§©&lt;/h2&gt; &#xA;&lt;p&gt;‰∫ÜËß£Êõ¥Â§öÂÖ≥‰∫éSVMÂ¶Ç‰ΩïÂ∑•‰ΩúÂíåÂÆûÁé∞knnÁÆóÊ≥ïÁöÑÁü•ËØÜ„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;KËøëÈÇªÊ≥ï(k-NN) | Á¨¨11Â§©&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Code/Day%2011_K-NN.md&#34;&gt;KËøëÈÇªÊ≥ï(k-NN)ÂÆûÁé∞&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ÊîØÊåÅÂêëÈáèÊú∫(SVM) | Á¨¨12Â§©&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Info-graphs/Day%2012.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;ÊîØÊåÅÂêëÈáèÊú∫(SVM) | Á¨¨13Â§©&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Code/Day%2013_SVM.md&#34;&gt;SVMÂÆûÁé∞&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ÊîØÊåÅÂêëÈáèÊú∫(SVM)ÁöÑÂÆûÁé∞ | Á¨¨14Â§©&lt;/h2&gt; &#xA;&lt;p&gt;‰ªäÂ§©ÊàëÂú®Á∫øÊÄßÁõ∏ÂÖ≥Êï∞ÊçÆ‰∏äÂÆûÁé∞‰∫ÜSVM„ÄÇ‰ΩøÁî®Scikit-LearnÂ∫ì„ÄÇÂú®scikit-learn‰∏≠Êàë‰ª¨ÊúâSVCÂàÜÁ±ªÂô®ÔºåÊàë‰ª¨Áî®ÂÆÉÊù•ÂÆåÊàêËøô‰∏™‰ªªÂä°„ÄÇÂ∞ÜÂú®‰∏ã‰∏ÄÊ¨°ÂÆûÁé∞Êó∂‰ΩøÁî®kernel-trick„ÄÇPython‰ª£Á†ÅËßÅ&lt;a href=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Code/Day%2013_SVM.py&#34;&gt;Ê≠§Â§Ñ&lt;/a&gt;,Jupyter notebookËßÅ&lt;a href=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Code/Day%2013_SVM.ipynb&#34;&gt;Ê≠§Â§Ñ&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Êú¥Á¥†Ë¥ùÂè∂ÊñØÂàÜÁ±ªÂô®(Naive Bayes Classifier)ÂíåÈªëÁõíÊú∫Âô®Â≠¶‰π†(Black Box Machine Learning) | Á¨¨15Â§©&lt;/h2&gt; &#xA;&lt;p&gt;Â≠¶‰π†‰∏çÂêåÁ±ªÂûãÁöÑÊú¥Á¥†Ë¥ùÂè∂ÊñØÂàÜÁ±ªÂô®ÂêåÊó∂ÂºÄÂßã&lt;a href=&#34;https://bloomberg.github.io/foml/#home&#34;&gt;Bloomberg&lt;/a&gt;ÁöÑËØæÁ®ã„ÄÇËØæÁ®ãÂàóË°®‰∏≠ÁöÑÁ¨¨‰∏Ä‰∏™ÊòØÈªëÁõíÊú∫Âô®Â≠¶‰π†„ÄÇÂÆÉÁªôÂá∫‰∫ÜÈ¢ÑÊµãÂáΩÊï∞ÔºåÁâπÂæÅÊèêÂèñÔºåÂ≠¶‰π†ÁÆóÊ≥ïÔºåÊÄßËÉΩËØÑ‰º∞Ôºå‰∫§ÂèâÈ™åËØÅÔºåÊ†∑Êú¨ÂÅèÂ∑ÆÔºåÈùûÂπ≥Á®≥ÊÄßÔºåËøáÂ∫¶ÊãüÂêàÂíåË∂ÖÂèÇÊï∞Ë∞ÉÊï¥ÁöÑÊï¥‰ΩìËßÇÁÇπ„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÈÄöËøáÂÜÖÊ†∏ÊäÄÂ∑ßÂÆûÁé∞ÊîØÊåÅÂêëÈáèÊú∫ | Á¨¨16Â§©&lt;/h2&gt; &#xA;&lt;p&gt;‰ΩøÁî®Scikit-LearnÂ∫ìÂÆûÁé∞‰∫ÜSVMÁÆóÊ≥ï‰ª•ÂèäÂÜÖÊ†∏ÂáΩÊï∞ÔºåËØ•ÂáΩÊï∞Â∞ÜÊàë‰ª¨ÁöÑÊï∞ÊçÆÁÇπÊò†Â∞ÑÂà∞Êõ¥È´òÁª¥Â∫¶‰ª•ÊâæÂà∞ÊúÄ‰Ω≥Ë∂ÖÂπ≥Èù¢„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Âú®CourseraÂºÄÂßãÊ∑±Â∫¶Â≠¶‰π†ÁöÑ‰∏ì‰∏öËØæÁ®ã | Á¨¨17Â§©&lt;/h2&gt; &#xA;&lt;p&gt;Âú®1Â§©ÂÜÖÂÆåÊàêÁ¨¨1Âë®ÂíåÁ¨¨2Âë®ÂÜÖÂÆπ‰ª•ÂèäÂ≠¶‰π†ËØæÁ®ã‰∏≠ÁöÑÈÄªËæëÂõûÂΩíÁ•ûÁªèÁΩëÁªú„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÁªßÁª≠Coursera‰∏äÁöÑÊ∑±Â∫¶Â≠¶‰π†‰∏ì‰∏öËØæÁ®ã | Á¨¨18Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ÂÆåÊàêËØæÁ®ã1„ÄÇÁî®PythonËá™Â∑±ÂÆûÁé∞‰∏Ä‰∏™Á•ûÁªèÁΩëÁªú„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Â≠¶‰π†ÈóÆÈ¢òÂíåYaser Abu-MostafaÊïôÊéà | Á¨¨19Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ÂºÄÂßãYaser Abu-MostafaÊïôÊéàÁöÑCaltechÊú∫Âô®Â≠¶‰π†ËØæÁ®ã-CS156‰∏≠ÁöÑËØæÁ®ã1„ÄÇËøôÂü∫Êú¨‰∏äÊòØÂØπÂç≥Â∞ÜÂà∞Êù•ÁöÑËØæÁ®ãÁöÑ‰∏ÄÁßç‰ªãÁªç„ÄÇ‰ªñ‰πü‰ªãÁªç‰∫ÜÊÑüÁü•ÁÆóÊ≥ï„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Ê∑±Â∫¶Â≠¶‰π†‰∏ì‰∏öËØæÁ®ã2 | Á¨¨20Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ÂÆåÊàêÊîπËøõÊ∑±Â∫¶Á•ûÁªèÁΩëÁªúÁ¨¨1Âë®ÂÜÖÂÆπÔºöÂèÇÊï∞Ë∞ÉÊï¥ÔºåÊ≠£ÂàôÂåñÂíå‰ºòÂåñ„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÁΩëÈ°µÊêúÁΩó | Á¨¨21Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ËßÇÁúã‰∫Ü‰∏Ä‰∫õÂÖ≥‰∫éÂ¶Ç‰Ωï‰ΩøÁî®Beautiful SoupËøõË°åÁΩëÁªúÁà¨Ëô´ÁöÑÊïôÁ®ãÔºå‰ª•‰æøÊî∂ÈõÜÁî®‰∫éÊûÑÂª∫Ê®°ÂûãÁöÑÊï∞ÊçÆ„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Â≠¶‰π†ËøòÂèØË°åÂêó? | Á¨¨22Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ÂÆåÊàêYaser Abu-MostafaÊïôÊéàÁöÑCaltechÊú∫Âô®Â≠¶‰π†ËØæÁ®ã-CS156‰∏≠ÁöÑËØæÁ®ã2„ÄÇÂ≠¶‰π†Hoeffding‰∏çÁ≠âÂºè„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÂÜ≥Á≠ñÊ†ë | Á¨¨23Â§©&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Info-graphs/Day%2023%20-%20Chinese.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;ÁªüËÆ°Â≠¶‰π†ÁêÜËÆ∫ÁöÑ‰ªãÁªç | Á¨¨24Â§©&lt;/h2&gt; &#xA;&lt;p&gt;Bloomberg MLËØæÁ®ãÁöÑÁ¨¨3ËØæ‰ªãÁªç‰∫Ü‰∏Ä‰∫õÊ†∏ÂøÉÊ¶ÇÂøµÔºåÂ¶ÇËæìÂÖ•Á©∫Èó¥ÔºåÂä®‰ΩúÁ©∫Èó¥ÔºåÁªìÊûúÁ©∫Èó¥ÔºåÈ¢ÑÊµãÂáΩÊï∞ÔºåÊçüÂ§±ÂáΩÊï∞ÂíåÂÅáËÆæÁ©∫Èó¥„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÂÜ≥Á≠ñÊ†ë | Á¨¨25Â§©&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Code/Day%2025_Decision_Tree.md&#34;&gt;ÂÜ≥Á≠ñÊ†ëÂÆûÁé∞&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ë∑≥Âà∞Â§ç‰π†Á∫øÊÄß‰ª£Êï∞ | Á¨¨26Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ÂèëÁé∞YouTube‰∏Ä‰∏™Á•ûÂ•áÁöÑÈ¢ëÈÅì&lt;a href=&#34;https://www.youtube.com/channel/UCYO_jab_esuFRV4b17AJtAw&#34;&gt;3Blue1Brown&lt;/a&gt;ÔºåÂÆÉÊúâ‰∏Ä‰∏™Êí≠ÊîæÂàóË°®„ÄäÁ∫øÊÄß‰ª£Êï∞ÁöÑÊú¨Ë¥®„Äã„ÄÇÁúãÂÆå‰∫Ü4‰∏™ËßÜÈ¢ëÔºåÂåÖÊã¨‰∫ÜÂêëÈáèÔºåÁ∫øÊÄßÁªÑÂêàÔºåË∑®Â∫¶ÔºåÂü∫ÂêëÈáèÔºåÁ∫øÊÄßÂèòÊç¢ÂíåÁü©Èòµ‰πòÊ≥ï„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;BÁ´ôÊí≠ÊîæÂàóË°®Âú®&lt;a href=&#34;https://space.bilibili.com/88461692/#/channel/detail?cid=9450&#34;&gt;ËøôÈáå&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Ë∑≥Âà∞Â§ç‰π†Á∫øÊÄß‰ª£Êï∞ | Á¨¨27Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ÁªßÁª≠ËßÇÁúã‰∫Ü4‰∏™ËßÜÈ¢ëÔºåÂÜÖÂÆπÂåÖÊã¨‰∏âÁª¥ÂèòÊç¢„ÄÅË°åÂàóÂºè„ÄÅÈÄÜÁü©Èòµ„ÄÅÂàóÁ©∫Èó¥„ÄÅÈõ∂Á©∫Èó¥ÂíåÈùûÊñπÁü©Èòµ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;BÁ´ôÊí≠ÊîæÂàóË°®Âú®&lt;a href=&#34;https://space.bilibili.com/88461692/#/channel/detail?cid=9450&#34;&gt;ËøôÈáå&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Ë∑≥Âà∞Â§ç‰π†Á∫øÊÄß‰ª£Êï∞ | Á¨¨28Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ÁªßÁª≠ËßÇÁúã‰∫Ü3‰∏™ËßÜÈ¢ëÔºåÂÜÖÂÆπÂåÖÊã¨ÁÇπÁßØÂíåÂèâÁßØ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;BÁ´ôÊí≠ÊîæÂàóË°®Âú®&lt;a href=&#34;https://space.bilibili.com/88461692/#/channel/detail?cid=9450&#34;&gt;ËøôÈáå&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Ë∑≥Âà∞Â§ç‰π†Á∫øÊÄß‰ª£Êï∞ | Á¨¨29Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ËßÇÁúã‰∫ÜÂâ©‰ΩôÁöÑËßÜÈ¢ë12Âà∞14ÔºåÂÜÖÂÆπÂåÖÊã¨ÁâπÂæÅÂêëÈáèÂíåÁâπÂæÅÂÄºÔºå‰ª•ÂèäÊäΩË±°ÂêëÈáèÁ©∫Èó¥„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;BÁ´ôÊí≠ÊîæÂàóË°®Âú®&lt;a href=&#34;https://space.bilibili.com/88461692/#/channel/detail?cid=9450&#34;&gt;ËøôÈáå&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÂæÆÁßØÂàÜÁöÑÊú¨Ë¥® | Á¨¨30Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ÂÆåÊàê‰∏ä‰∏ÄÊí≠ÊîæÂàóË°®ÂêéÔºåYouTubeÊé®Ëçê‰∫ÜÊñ∞ÂÜÖÂÆπ„ÄäÂæÆÁßØÂàÜÁöÑÊú¨Ë¥®„ÄãÔºå‰ªäÂ§©ÁúãÂÆå‰∫ÜÂÖ∂‰∏≠ÁöÑ3‰∏™ËßÜÈ¢ëÔºåÂåÖÊã¨ÂØºÊï∞„ÄÅÈìæÂºèÊ≥ïÂàô„ÄÅ‰πòÁßØÊ≥ïÂàôÂíåÊåáÊï∞ÂØºÊï∞„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;BÁ´ôÊí≠ÊîæÂàóË°®Âú®&lt;a href=&#34;https://space.bilibili.com/88461692/#/channel/detail?cid=13407&#34;&gt;ËøôÈáå&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÂæÆÁßØÂàÜÁöÑÊú¨Ë¥® | Á¨¨31Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ËßÇÁúã‰∫Ü2‰∏™ËßÜÈ¢ëÔºåÂÜÖÂÆπÂåÖÊã¨ÈöêÂàÜÂåñ‰∏éÊûÅÈôê„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;BÁ´ôÊí≠ÊîæÂàóË°®Âú®&lt;a href=&#34;https://space.bilibili.com/88461692/#/channel/detail?cid=13407&#34;&gt;ËøôÈáå&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÂæÆÁßØÂàÜÁöÑÊú¨Ë¥® | Á¨¨32Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ËßÇÁúã‰∫ÜÂâ©‰ΩôÁöÑ4‰∏™ËßÜÈ¢ëÔºåÂÜÖÂÆπÂåÖÊã¨ÁßØÂàÜ‰∏éÈ´òÈò∂ÂØºÊï∞„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;BÁ´ôÊí≠ÊîæÂàóË°®Âú®&lt;a href=&#34;https://space.bilibili.com/88461692/#/channel/detail?cid=13407&#34;&gt;ËøôÈáå&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÈöèÊú∫Ê£ÆÊûó | Á¨¨33Â§©&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Info-graphs/Day%2033.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;ÈöèÊú∫Ê£ÆÊûó | Á¨¨34Â§©&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Code/Day%2034_Random_Forests.md&#34;&gt;ÈöèÊú∫Ê£ÆÊûóÂÆûÁé∞&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‰ªÄ‰πàÊòØÁ•ûÁªèÁΩëÁªúÔºü | Ê∑±Â∫¶Â≠¶‰π†ÔºåÁ¨¨1Á´† | Á¨¨ 35Â§©&lt;/h2&gt; &#xA;&lt;p&gt;YoutubeÈ¢ëÈÅì3Blue1Brown‰∏≠ÊúâÁ≤æÂΩ©ÁöÑËßÜÈ¢ë‰ªãÁªçÁ•ûÁªèÁΩëÁªú„ÄÇËøô‰∏™ËßÜÈ¢ëÊèê‰æõ‰∫ÜÂæàÂ•ΩÁöÑËß£ÈáäÔºåÂπ∂‰ΩøÁî®ÊâãÂÜôÊï∞Â≠óÊï∞ÊçÆÈõÜÊºîÁ§∫Âü∫Êú¨Ê¶ÇÂøµ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;BÁ´ôËßÜÈ¢ëÂú®&lt;a href=&#34;https://space.bilibili.com/88461692/#/channel/detail?cid=26587&#34;&gt;ËøôÈáå&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Ê¢ØÂ∫¶‰∏ãÈôçÊ≥ïÔºåÁ•ûÁªèÁΩëÁªúÂ¶Ç‰ΩïÂ≠¶‰π† | Ê∑±Â∫¶Â≠¶‰π†ÔºåÁ¨¨2Á´† | Á¨¨36Â§©&lt;/h2&gt; &#xA;&lt;p&gt;YoutubeÈ¢ëÈÅì3Blue1BrownÂÖ≥‰∫éÁ•ûÁªèÁΩëÁªúÁöÑÁ¨¨2ÈÉ®ÂàÜÔºåËøô‰∏™ËßÜÈ¢ëÁî®ÊúâË∂£ÁöÑÊñπÂºèËß£Èáä‰∫ÜÊ¢ØÂ∫¶‰∏ãÈôçÊ≥ï„ÄÇÊé®ËçêÂøÖÈ°ªËßÇÁúã169.&lt;/p&gt; &#xA;&lt;p&gt;BÁ´ôËßÜÈ¢ëÂú®&lt;a href=&#34;https://space.bilibili.com/88461692/#/channel/detail?cid=26587&#34;&gt;ËøôÈáå&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÂèçÂêë‰º†Êí≠Ê≥ïÁ©∂Á´üÂÅö‰ªÄ‰πàÔºü | Ê∑±Â∫¶Â≠¶‰π†ÔºåÁ¨¨3Á´† | Á¨¨37Â§©&lt;/h2&gt; &#xA;&lt;p&gt;YoutubeÈ¢ëÈÅì3Blue1BrownÂÖ≥‰∫éÁ•ûÁªèÁΩëÁªúÁöÑÁ¨¨3ÈÉ®ÂàÜÔºåËøô‰∏™ËßÜÈ¢ë‰∏ªË¶Å‰ªãÁªç‰∫ÜÂÅèÂØºÊï∞ÂíåÂèçÂêë‰º†Êí≠Ê≥ï„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;BÁ´ôËßÜÈ¢ëÂú®&lt;a href=&#34;https://space.bilibili.com/88461692/#/channel/detail?cid=26587&#34;&gt;ËøôÈáå&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÂèçÂêë‰º†Êí≠Ê≥ïÊºîÁÆó | Ê∑±Â∫¶Â≠¶‰π†ÔºåÁ¨¨4Á´† | Á¨¨38Â§©&lt;/h2&gt; &#xA;&lt;p&gt;YoutubeÈ¢ëÈÅì3Blue1BrownÂÖ≥‰∫éÁ•ûÁªèÁΩëÁªúÁöÑÁ¨¨3ÈÉ®ÂàÜÔºåËøô‰∏™ËßÜÈ¢ë‰∏ªË¶Å‰ªãÁªç‰∫ÜÂÅèÂØºÊï∞ÂíåÂèçÂêë‰º†Êí≠Ê≥ï„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;BÁ´ôËßÜÈ¢ëÂú®&lt;a href=&#34;https://space.bilibili.com/88461692/#/channel/detail?cid=26587&#34;&gt;ËøôÈáå&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Á¨¨1ÈÉ®ÂàÜ | Ê∑±Â∫¶Â≠¶‰π†Âü∫Á°ÄPythonÔºåTensorFlowÂíåKeras | Á¨¨39Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ËßÜÈ¢ëÂú∞ÂùÄÂú®&lt;a href=&#34;https://www.youtube.com/watch?v=wQ8BIBpya2k&amp;amp;t=19s&amp;amp;index=2&amp;amp;list=PLQVvvaa0QuDfhTox0AjmQ6tvTgMBZBEXN&#34;&gt;ËøôÈáå&lt;/a&gt;„ÄÇ &lt;br&gt;‰∏≠ÊñáÊñáÂ≠óÁâà&lt;a href=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Code/Day%2039.ipynb&#34;&gt;notebook&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Á¨¨2ÈÉ®ÂàÜ | Ê∑±Â∫¶Â≠¶‰π†Âü∫Á°ÄPythonÔºåTensorFlowÂíåKeras | Á¨¨40Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ËßÜÈ¢ëÂú∞ÂùÄÂú®&lt;a href=&#34;https://www.youtube.com/watch?v=wQ8BIBpya2k&amp;amp;t=19s&amp;amp;index=2&amp;amp;list=PLQVvvaa0QuDfhTox0AjmQ6tvTgMBZBEXN&#34;&gt;ËøôÈáå&lt;/a&gt;„ÄÇ &lt;br&gt;‰∏≠ÊñáÊñáÂ≠óÁâà&lt;a href=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Code/Day%2040.ipynb&#34;&gt;notebook&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Á¨¨3ÈÉ®ÂàÜ | Ê∑±Â∫¶Â≠¶‰π†Âü∫Á°ÄPythonÔºåTensorFlowÂíåKeras | Á¨¨41Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ËßÜÈ¢ëÂú∞ÂùÄÂú®&lt;a href=&#34;https://www.youtube.com/watch?v=wQ8BIBpya2k&amp;amp;t=19s&amp;amp;index=2&amp;amp;list=PLQVvvaa0QuDfhTox0AjmQ6tvTgMBZBEXN&#34;&gt;ËøôÈáå&lt;/a&gt;„ÄÇ &lt;br&gt;‰∏≠ÊñáÊñáÂ≠óÁâà&lt;a href=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Code/Day%2041.ipynb&#34;&gt;notebook&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Á¨¨4ÈÉ®ÂàÜ | Ê∑±Â∫¶Â≠¶‰π†Âü∫Á°ÄPythonÔºåTensorFlowÂíåKeras | Á¨¨42Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ËßÜÈ¢ëÂú∞ÂùÄÂú®&lt;a href=&#34;https://www.youtube.com/watch?v=wQ8BIBpya2k&amp;amp;t=19s&amp;amp;index=2&amp;amp;list=PLQVvvaa0QuDfhTox0AjmQ6tvTgMBZBEXN&#34;&gt;ËøôÈáå&lt;/a&gt;„ÄÇ &lt;br&gt;‰∏≠ÊñáÊñáÂ≠óÁâà&lt;a href=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Code/Day%2042.ipynb&#34;&gt;notebook&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;K-ÂùáÂÄºËÅöÁ±ª | Á¨¨43Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ËΩ¨Âà∞Êó†ÁõëÁù£Â≠¶‰π†ÔºåÂπ∂Á†îÁ©∂‰∫ÜËÅöÁ±ª„ÄÇÂèØÂú®&lt;a href=&#34;http://www.avikjain.me/&#34;&gt;‰ΩúËÄÖÁΩëÁ´ô&lt;/a&gt;Êü•ËØ¢„ÄÇÂèëÁé∞‰∏Ä‰∏™Â•áÂ¶ôÁöÑ&lt;a href=&#34;http://shabal.in/visuals/kmeans/6.html&#34;&gt;Âä®Áîª&lt;/a&gt;ÊúâÂä©‰∫éÁêÜËß£K-ÂùáÂÄºËÅöÁ±ª„ÄÇ&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Info-graphs/Day%2043.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;K-ÂùáÂÄºËÅöÁ±ª | Á¨¨44Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ÂÆûÁé∞ÔºàÂæÖÊ∑ªÂä†‰ª£Á†ÅÔºâ&lt;/p&gt; &#xA;&lt;h2&gt;Ê∑±ÂÖ•Á†îÁ©∂ | NUMPY | Á¨¨45Â§©&lt;/h2&gt; &#xA;&lt;p&gt;ÂæóÂà∞JK VanderPlasÂÜôÁöÑ‰π¶„ÄäPythonÊï∞ÊçÆÁßëÂ≠¶ÊâãÂÜåÔºàPython Data Science HandBookÔºâ„ÄãÔºåJupyter notebooksÂú®&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook&#34;&gt;ËøôÈáå&lt;/a&gt;„ÄÇ &lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Other%20Docs/Python%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E6%89%8B%E5%86%8C.zip&#34;&gt;È´òÊ∏Ö‰∏≠ÊñáÁâàpdf&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;Á¨¨2Á´†ÔºöNumPy‰ªãÁªçÔºåÂåÖÊã¨Êï∞ÊçÆÁ±ªÂûã„ÄÅÊï∞ÁªÑÂíåÊï∞ÁªÑËÆ°ÁÆó„ÄÇ &lt;br&gt;‰ª£Á†ÅÂ¶Ç‰∏ãÔºö &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/02.00-Introduction-to-NumPy.ipynb&#34;&gt;2 NumPyÂÖ•Èó®&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/02.01-Understanding-Data-Types.ipynb&#34;&gt;2.1 ÁêÜËß£Python‰∏≠ÁöÑÊï∞ÊçÆÁ±ªÂûã&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/02.02-The-Basics-Of-NumPy-Arrays.ipynb&#34;&gt;2.2 NumPyÊï∞ÁªÑÂü∫Á°Ä&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/02.03-Computation-on-arrays-ufuncs.ipynb&#34;&gt;2.3 NumPyÊï∞ÁªÑÁöÑËÆ°ÁÆóÔºöÈÄöÁî®ÂáΩÊï∞&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ê∑±ÂÖ•Á†îÁ©∂ | NUMPY | Á¨¨46Â§©&lt;/h2&gt; &#xA;&lt;p&gt;Á¨¨2Á´†Ôºö ËÅöÂêà, ÊØîËæÉËøêÁÆóÁ¨¶ÂíåÂπøÊí≠„ÄÇ &lt;br&gt;‰ª£Á†ÅÂ¶Ç‰∏ãÔºö &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/02.04-Computation-on-arrays-aggregates.ipynb&#34;&gt;2.4 ËÅöÂêàÔºöÊúÄÂ∞èÂÄº„ÄÅÊúÄÂ§ßÂÄºÂíåÂÖ∂‰ªñÂÄº&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/02.05-Computation-on-arrays-broadcasting.ipynb&#34;&gt;2.5 Êï∞ÁªÑÁöÑËÆ°ÁÆóÔºöÂπøÊí≠&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/02.06-Boolean-Arrays-and-Masks.ipynb&#34;&gt;2.6 ÊØîËæÉ„ÄÅÊé©Á†ÅÂíåÂ∏ÉÂ∞îËøêÁÆó&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ê∑±ÂÖ•Á†îÁ©∂ | NUMPY | Á¨¨47Â§©&lt;/h2&gt; &#xA;&lt;p&gt;Á¨¨2Á´†Ôºö Ëä±Âì®ÁöÑÁ¥¢ÂºïÔºåÊï∞ÁªÑÊéíÂ∫èÔºåÁªìÊûÑÂåñÊï∞ÊçÆ„ÄÇ &lt;br&gt;‰ª£Á†ÅÂ¶Ç‰∏ãÔºö &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/02.07-Fancy-Indexing.ipynb&#34;&gt;2.7 Ëä±Âì®ÁöÑÁ¥¢Âºï&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/02.08-Sorting.ipynb&#34;&gt;2.8 Êï∞ÁªÑÁöÑÊéíÂ∫è&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/02.09-%3Cbr%3EStructured-Data-NumPy.ipynb&#34;&gt;2.9 ÁªìÊûÑÂåñÊï∞ÊçÆÔºöNumPyÁöÑÁªìÊûÑÂåñÊï∞ÁªÑ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ê∑±ÂÖ•Á†îÁ©∂ | PANDAS | Á¨¨48Â§©&lt;/h2&gt; &#xA;&lt;p&gt;Á¨¨3Á´†ÔºöPandasÊï∞ÊçÆÂ§ÑÁêÜ &lt;br&gt;ÂåÖÂê´PandasÂØπË±°ÔºåÊï∞ÊçÆÂèñÂÄº‰∏éÈÄâÊã©ÔºåÊï∞ÂÄºËøêÁÆóÊñπÊ≥ïÔºåÂ§ÑÁêÜÁº∫Â§±ÂÄºÔºåÂ±ÇÁ∫ßÁ¥¢ÂºïÔºåÂêàÂπ∂Êï∞ÊçÆÈõÜ„ÄÇ &lt;br&gt;‰ª£Á†ÅÂ¶Ç‰∏ãÔºö &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/03.00-Introduction-to-Pandas.ipynb&#34;&gt;3 PandasÊï∞ÊçÆÂ§ÑÁêÜ&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/03.01-Introducing-Pandas-Objects.ipynb&#34;&gt;3.1 PandasÂØπË±°ÁÆÄ‰ªã&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/03.02-Data-Indexing-and-Selection.ipynb&#34;&gt;3.2 Êï∞ÊçÆÂèñÂÄº‰∏éÈÄâÊã©&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/03.03-Operations-in-Pandas.ipynb&#34;&gt;3.3 PandasÊï∞ÂÄºËøêÁÆóÊñπÊ≥ï&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/03.04-Missing-Values.ipynb&#34;&gt;3.4 Â§ÑÁêÜÁº∫Â§±ÂÄº&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/03.05-Hierarchical-Indexing.ipynb&#34;&gt;3.5 Â±ÇÁ∫ßÁ¥¢Âºï&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/03.06-Concat-And-Append.ipynb&#34;&gt;3.6 ÂêàÂπ∂Êï∞ÊçÆÈõÜÔºöConCatÂíåAppendÊñπÊ≥ï&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ê∑±ÂÖ•Á†îÁ©∂ | PANDAS | Á¨¨49Â§©&lt;/h2&gt; &#xA;&lt;p&gt;Á¨¨3Á´†ÔºöÂÆåÊàêÂâ©‰ΩôÂÜÖÂÆπ-ÂêàÂπ∂‰∏éËøûÊé•ÔºåÁ¥ØËÆ°‰∏éÂàÜÁªÑÔºåÊï∞ÊçÆÈÄèËßÜË°®„ÄÇ &lt;br&gt;‰ª£Á†ÅÂ¶Ç‰∏ãÔºö &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/03.07-Merge-and-Join.ipynb&#34;&gt;3.7 ÂêàÂπ∂Êï∞ÊçÆÈõÜÔºöÂêàÂπ∂‰∏éËøûÊé•&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/03.08-Aggregation-and-Grouping.ipynb&#34;&gt;3.8 Á¥ØËÆ°‰∏éÂàÜÁªÑ&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/03.09-Pivot-Tables.ipynb&#34;&gt;3.9 Êï∞ÊçÆÈÄèËßÜË°®&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ê∑±ÂÖ•Á†îÁ©∂ | PANDAS | Á¨¨50Â§©&lt;/h2&gt; &#xA;&lt;p&gt;Á¨¨3Á´†ÔºöÂêëÈáèÂåñÂ≠óÁ¨¶‰∏≤Êìç‰ΩúÔºåÂ§ÑÁêÜÊó∂Èó¥Â∫èÂàó„ÄÇ &lt;br&gt;‰ª£Á†ÅÂ¶Ç‰∏ãÔºö &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/03.10-Working-With-Strings.ipynb&#34;&gt;3.10 ÂêëÈáèÂåñÂ≠óÁ¨¶‰∏≤Êìç‰Ωú&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/03.11-Working-with-Time-Series.ipynb&#34;&gt;3.11 Â§ÑÁêÜÊó∂Èó¥Â∫èÂàó&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/03.12-Performance-Eval-and-Query.ipynb&#34;&gt;3.12 È´òÊÄßËÉΩPandasÔºöeval()‰∏équery()&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ê∑±ÂÖ•Á†îÁ©∂ | MATPLOTLIB | Á¨¨51Â§©&lt;/h2&gt; &#xA;&lt;p&gt;Á¨¨4Á´†ÔºöMatplotlibÊï∞ÊçÆÂèØËßÜÂåñ &lt;br&gt;Â≠¶‰π†ÁÆÄÊòìÁ∫øÂΩ¢Âõæ, ÁÆÄÊòìÊï£ÁÇπÂõæÔºåÂØÜÂ∫¶Âõæ‰∏éÁ≠âÈ´òÁ∫øÂõæ. &lt;br&gt;‰ª£Á†ÅÂ¶Ç‰∏ãÔºö &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/04.00-Introduction-To-Matplotlib.ipynb&#34;&gt;4 MatplotlibÊï∞ÊçÆÂèØËßÜÂåñ&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/04.01-Simple-Line-Plots.ipynb&#34;&gt;4.1 ÁÆÄÊòìÁ∫øÂΩ¢Âõæ&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/04.02-Simple-Scatter-Plots.ipynb&#34;&gt;4.2 ÁÆÄÊòìÊï£ÁÇπÂõæ&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/04.03-Errorbars.ipynb&#34;&gt;4.3 ÂèØËßÜÂåñÂºÇÂ∏∏Â§ÑÁêÜ&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/04.04-Density-and-Contour-Plots.ipynb&#34;&gt;4.4 ÂØÜÂ∫¶Âõæ‰∏éÁ≠âÈ´òÁ∫øÂõæ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ê∑±ÂÖ•Á†îÁ©∂ | MATPLOTLIB | Á¨¨52Â§©&lt;/h2&gt; &#xA;&lt;p&gt;Á¨¨4Á´†ÔºöMatplotlibÊï∞ÊçÆÂèØËßÜÂåñ &lt;br&gt;Â≠¶‰π†Áõ¥ÊñπÂõæÔºåÈÖçÁΩÆÂõæ‰æãÔºåÈÖçÁΩÆÈ¢úËâ≤Êù°ÔºåÂ§öÂ≠êÂõæ„ÄÇ &lt;br&gt;‰ª£Á†ÅÂ¶Ç‰∏ãÔºö &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/04.05-Histograms-and-Binnings.ipynb&#34;&gt;4.5 Áõ¥ÊñπÂõæ&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/04.06-Customizing-Legends.ipynb&#34;&gt;4.6 ÈÖçÁΩÆÂõæ‰æã&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/04.07-Customizing-Colorbars.ipynb&#34;&gt;4.7 ÈÖçÁΩÆÈ¢úËâ≤Êù°&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/04.08-Multiple-Subplots.ipynb&#34;&gt;4.8 Â§öÂ≠êÂõæ&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/04.09-Text-and-Annotation.ipynb&#34;&gt;4.9 ÊñáÂ≠ó‰∏éÊ≥®Èáä&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ê∑±ÂÖ•Á†îÁ©∂ | MATPLOTLIB | Á¨¨53Â§©&lt;/h2&gt; &#xA;&lt;p&gt;Á¨¨4Á´†ÔºöMatplotlibÊï∞ÊçÆÂèØËßÜÂåñ &lt;br&gt;Â≠¶‰π†‰∏âÁª¥ÁªòÂõæ„ÄÇ &lt;br&gt;&lt;a href=&#34;https://github.com/jakevdp/PythonDataScienceHandbook/raw/master/notebooks/04.12-Three-Dimensional-Plotting.ipynb&#34;&gt;4.12 Áîª‰∏âÁª¥Âõæ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Â±ÇÊ¨°ËÅöÁ±ª | Á¨¨54Â§©&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Other%20Docs/%E5%B1%82%E6%AC%A1%E8%81%9A%E7%B1%BB.gif&#34;&gt;Âä®ÁîªÊºîÁ§∫&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/MachineLearning100/100-Days-Of-ML-Code/raw/master/Info-graphs/Day%2054.jpg&#34;&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>RSNA/AI-Deep-Learning-Lab-2022</title>
    <updated>2022-12-01T01:41:32Z</updated>
    <id>tag:github.com,2022-12-01:/RSNA/AI-Deep-Learning-Lab-2022</id>
    <link href="https://github.com/RSNA/AI-Deep-Learning-Lab-2022" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RSNA AI Deep Learning Lab 2022&lt;/h1&gt; &#xA;&lt;h2&gt;Intro&lt;/h2&gt; &#xA;&lt;p&gt;Welcome Deep Learners!&lt;/p&gt; &#xA;&lt;p&gt;This document provides all the information you need to participate in the RSNA AI Deep Learning Lab. This set of classes provides a hands-on opportunity to engage with deep learning tools, write basic algorithms, learn how to organize data to implement deep learning and improve your understanding of AI technology.&lt;/p&gt; &#xA;&lt;p&gt;The classes will be held in the RSNA AI Deep Learning Lab classroom, which is located in the Lakeside Learning Center, Level 3. Here&#39;s the schedule of &lt;a href=&#34;https://raw.githubusercontent.com/RSNA/AI-Deep-Learning-Lab-2022/main/#class-schedule&#34;&gt;classes&lt;/a&gt;. CME credit is available for each session.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;All lessons are designed to run in Google Colab, which is a free web-based version of Jupyter hosted by Google. You will need a Google account (eg, gmail) to use Colab. If you don&#39;t already have a Google account, please create one in advance at the &lt;a href=&#34;https://accounts.google.com/signup/v2/webcreateaccount?flowName=GlifWebSignIn&amp;amp;flowEntry=SignUp&#34;&gt;account sign-up page&lt;/a&gt;. You can &lt;a href=&#34;https://support.google.com/accounts/answer/32046?hl=en&#34;&gt;delete the account&lt;/a&gt; when you complete the lessons if you wish.&lt;/p&gt; &#xA;&lt;p&gt;We recommend that you use a computer with a recent vintage processor running the &lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;Chrome browser&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Class Schedule&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Date / Time&lt;/th&gt; &#xA;   &lt;th&gt;Class&lt;/th&gt; &#xA;   &lt;th&gt;Notebooks&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sunday, November 27, 2022&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sun 10:30-11:30 am&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RSNA/AI-Deep-Learning-Lab-2022/tree/main/sessions/dicom-wrangling&#34;&gt;DICOM Data Wrangling with Python&lt;/a&gt; (&lt;em&gt;Beginner friendly&lt;/em&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/RSNA/AI-Deep-Learning-Lab-2022/blob/main/sessions/dicom-wrangling/DataWranglingRSNA2022.ipynb&#34;&gt;Notebook&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sun 12:00-1:00 pm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RSNA/AI-Deep-Learning-Lab-2022/tree/main/sessions/data-curation&#34;&gt;Data Processing &amp;amp; Curation for Deep Learning&lt;/a&gt; (&lt;em&gt;Beginner friendly&lt;/em&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/RSNA/AI-Deep-Learning-Lab-2022/blob/main/sessions/data-curation/RSNA22_DLL_Data_Processing_Curation_for_Deep_Learning.ipynb&#34;&gt;Notebook&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Monday, November 28, 2022&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mon 9:00-10:00 am&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RSNA/AI-Deep-Learning-Lab-2022/tree/main/sessions/nci-idc&#34;&gt;NCI Imaging Data Commons: Curated data and Reproducible AI workflows&lt;/a&gt; (&lt;em&gt;Beginner friendly&lt;/em&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RSNA/AI-Deep-Learning-Lab-2022/tree/main/sessions/nci-idc&#34;&gt;See README in course folder&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mon 10:30-11:30 am&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RSNA/AI-Deep-Learning-Lab-2022/tree/main/sessions/tcia&#34;&gt;Accessing freely available public datasets from The Cancer Imaging Archive (TCIA)&lt;/a&gt; (&lt;em&gt;Beginner friendly&lt;/em&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/RSNA/AI-Deep-Learning-Lab-2022/blob/main/sessions/tcia/TCIA_RSNA_Deep_Learning_Lab.ipynb&#34;&gt;Notebook&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mon 12:00-1:00 pm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RSNA/AI-Deep-Learning-Lab-2022/tree/main/sessions/mednist-monai&#34;&gt;MedNIST Exam Classification with MONAI&lt;/a&gt; (&lt;em&gt;Beginner friendly&lt;/em&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/RSNA/AI-Deep-Learning-Lab-2022/blob/main/sessions/mednist-monai/MedNIST_Classification_MONAI.ipynb&#34;&gt;Notebook&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mon 1:30-2:30 pm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RSNA/AI-Deep-Learning-Lab-2022/tree/main/sessions/ct-body-part&#34;&gt;CT Body Part Classification&lt;/a&gt; (&lt;em&gt;Beginner friendly&lt;/em&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/RSNA/AI-Deep-Learning-Lab-2022/blob/main/sessions/ct-body-part/inference.ipynb&#34;&gt;Notebook #1&lt;/a&gt;, &lt;a href=&#34;https://colab.research.google.com/github/RSNA/AI-Deep-Learning-Lab-2022/blob/main/sessions/ct-body-part/train.ipynb&#34;&gt;Notebook #2&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mon 3:00-4:00 pm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RSNA/AI-Deep-Learning-Lab-2022/tree/main/sessions/nlp-basics&#34;&gt;Basics of NLP in Radiology&lt;/a&gt; (&lt;em&gt;Beginner friendly&lt;/em&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/RSNA/AI-Deep-Learning-Lab-2022/blob/main/sessions/nlp-basics/DLL03_Basics_NLP_Radiology.ipynb&#34;&gt;Notebook&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tuesday, November 29, 2022&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tues 10:00-11:00 am&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RSNA/AI-Deep-Learning-Lab-2022/tree/main/sessions/yolo&#34;&gt;YOLO: Bounding Box Segmentation &amp;amp; Classification&lt;/a&gt; - &lt;strong&gt;Part 1&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/RSNA/AI-Deep-Learning-Lab-2022/blob/main/sessions/yolo/YOLO_notebook.ipynb&#34;&gt;Notebook&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tues 11:30 am-12:30 pm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RSNA/AI-Deep-Learning-Lab-2022/tree/main/sessions/gans&#34;&gt;Generative Adversarial Networks&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/RSNA/AI-Deep-Learning-Lab-2022/blob/main/sessions/gans/RSNA2022_DLL_GAN.ipynb&#34;&gt;Notebook&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tues 1:00-2:00 pm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RSNA/AI-Deep-Learning-Lab-2022/tree/main/sessions/best-practices-training&#34;&gt;Best Practices for Model Training: Architectures, Hyperparameters &amp;amp; Optimization&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Course Faculty will provide instructions&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tue 3:00-4:00 pm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RSNA/AI-Deep-Learning-Lab-2022/tree/main/sessions/nlp-text-classification&#34;&gt;NLP: Text Classification with Transformers&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/RSNA/AI-Deep-Learning-Lab-2022/blob/main/sessions/nlp-text-classification/RSNA22_DLL_NLP_Transformers.ipynb&#34;&gt;Notebook&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Wednesday, November 30, 2022&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Wed 10:00-11:00 am&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RSNA/AI-Deep-Learning-Lab-2022/tree/main/sessions/yolo&#34;&gt;YOLO: Bounding Box Segmentation &amp;amp; Classification&lt;/a&gt; - &lt;strong&gt;Part 2&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/RSNA/AI-Deep-Learning-Lab-2022/blob/main/sessions/yolo/YOLO_notebook.ipynb&#34;&gt;Notebook&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Wed 11:30 am-12:30 pm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RSNA/AI-Deep-Learning-Lab-2022/tree/main/sessions/custom-dl-pytorch&#34;&gt;Building custom deep learning models with PyTorch&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/RSNA/AI-Deep-Learning-Lab-2022/blob/main/sessions/custom-dl-pytorch/RSNA_PyTorch_Model_Architecture.ipynb&#34;&gt;Notebook&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Wed 1:00-2:00 pm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RSNA/AI-Deep-Learning-Lab-2022/tree/main/sessions/dicom-seg&#34;&gt;DICOM In, DICOM Out for Segmentation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/RSNA/AI-Deep-Learning-Lab-2022/blob/main/sessions/dicom-seg/RSNA_2022_DICOM_IN_DICOM_OUT_Segmentation.ipynb&#34;&gt;Notebook&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Thursday, December 1, 2022&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Thurs 9:00-10:00 am&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RSNA/AI-Deep-Learning-Lab-2022/tree/main/sessions/monai-sagemaker&#34;&gt;Accelerate your AI-based medical imaging research with MONAI Core on SageMaker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Course Faculty will provide instructions&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Thurs 10:30-11:30 am&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RSNA/AI-Deep-Learning-Lab-2022/tree/main/sessions/multi-modal-pe&#34;&gt;Multimodal Fusion for Pulmonary Embolism Detection Using CTs and Patient EMR&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/RSNA/AI-Deep-Learning-Lab-2022/blob/main/sessions/multi-modal-pe/Multimodal%20Fusion%20for%20PE%20Detection%20(Clean).ipynb&#34;&gt;Notebook&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>