<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-06T01:37:26Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ykwon0407/WeightedSHAP</title>
    <updated>2022-11-06T01:37:26Z</updated>
    <id>tag:github.com,2022-11-06:/ykwon0407/WeightedSHAP</id>
    <link href="https://github.com/ykwon0407/WeightedSHAP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WeightedSHAP: analyzing and improving Shapley based feature attributions (NeurIPS 2022)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WeightedSHAP: analyzing and improving Shapley based feature attributions&lt;/h1&gt; &#xA;&lt;p&gt;This repository provides an implementation of the paper &lt;em&gt;&lt;a href=&#34;https://arxiv.org/abs/2209.13429&#34;&gt;WeightedSHAP: analyzing and improving Shapley based feature attributions&lt;/a&gt;&lt;/em&gt; accepted at &lt;a href=&#34;https://nips.cc/Conferences/2022&#34;&gt;NeurIPS 2022&lt;/a&gt;. We show the suboptimality of SHAP and propose &lt;strong&gt;a new feature attribution method called WeightedSHAP&lt;/strong&gt;. WeightedSHAP is a generalization of SHAP and is more effective to capture influential features.&lt;/p&gt; &#xA;&lt;h3&gt;Quick start&lt;/h3&gt; &#xA;&lt;p&gt;We provide an easy-to-follow &lt;a href=&#34;https://raw.githubusercontent.com/ykwon0407/WeightedSHAP/main/notebook/Example_fraud_inclusion_AUC.ipynb&#34;&gt;Jupyter notebook&lt;/a&gt;, which introduces how to compute the WeightedSHAP on the Fraud dataset.&lt;/p&gt; &#xA;&lt;h3&gt;Key results&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ykwon0407/WeightedSHAP/main/fig/2d-weightedshap.png&#34; width=&#34;500&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;→ Illustrations of the suboptimality of Shapley-based feature attributions (SHAP) when $d=2$. &lt;em&gt;&lt;strong&gt;Shapley value fails to assign large attributions to more influential features&lt;/strong&gt;&lt;/em&gt; on grey area.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ykwon0407/WeightedSHAP/main/fig/inclusion-weightedshap.png&#34; width=&#34;750&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;→ Illustrations of the prediction recovery error curve and the Inclusion AUC curve as a function of the number of features added. &lt;em&gt;&lt;strong&gt;WeightedSHAP effectively assigns larger values for more influential features&lt;/strong&gt;&lt;/em&gt; and recovers the original prediction $\hat{f}(x)$ significantly faster than other state-of-the-art methods.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ykwon0407/WeightedSHAP/main/fig/mnist-weightedshap.png&#34; width=&#34;750&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;→ &lt;em&gt;&lt;strong&gt;WeightedSHAP can identify more interpretable features&lt;/strong&gt;&lt;/em&gt;. In particular, SHAP fails to capture the last stroke of digit nine, which is a crucially important stroke to differentiate from the digit zero.&lt;/p&gt; &#xA;&lt;h3&gt;References&lt;/h3&gt; &#xA;&lt;p&gt;This repository highly depends on the following two repositories.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Covert, I., Lundberg, S. M., &amp;amp; Lee, S. I. (2021). Explaining by Removing: A Unified Framework for Model Explanation. J. Mach. Learn. Res., 22, 209-1. &lt;a href=&#34;https://github.com/iancovert/removal-explanations&#34;&gt;[GitHub]&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Jethani, N., Sudarshan, M., Covert, I. C., Lee, S. I., &amp;amp; Ranganath, R. (2021, September). FastSHAP: Real-Time Shapley Value Estimation. In International Conference on Learning Representations. &lt;a href=&#34;https://github.com/iancovert/fastshap/tree/main/fastshap&#34;&gt;[GitHub]&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Authors&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Yongchan Kwon (yk3012 (at) columbia (dot) edu)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;James Zou (jamesz (at) stanford (dot) edu)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>harvardnlp/annotated-transformer</title>
    <updated>2022-11-06T01:37:26Z</updated>
    <id>tag:github.com,2022-11-06:/harvardnlp/annotated-transformer</id>
    <link href="https://github.com/harvardnlp/annotated-transformer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An annotated implementation of the Transformer paper.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Code for The Annotated Transformer blog post:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://nlp.seas.harvard.edu/annotated-transformer/&#34;&gt;http://nlp.seas.harvard.edu/annotated-transformer/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/harvardnlp/annotated-transformer/blob/master/AnnotatedTransformer.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/35882/166251887-9da909a9-660b-45a9-ae72-0aae89fb38d4.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Package Dependencies&lt;/h1&gt; &#xA;&lt;p&gt;Use &lt;code&gt;requirements.txt&lt;/code&gt; to install library dependencies with pip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Notebook Setup&lt;/h1&gt; &#xA;&lt;p&gt;The Annotated Transformer is created using &lt;a href=&#34;https://github.com/mwouts/jupytext&#34;&gt;jupytext&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Regular notebooks pose problems for source control - cell outputs end up in the repo history and diffs between commits are difficult to examine. Using jupytext, there is a python script (&lt;code&gt;.py&lt;/code&gt; file) that is automatically kept in sync with the notebook file by the jupytext plugin.&lt;/p&gt; &#xA;&lt;p&gt;The python script is committed contains all the cell content and can be used to generate the notebook file. The python script is a regular python source file, markdown sections are included using a standard comment convention, and outputs are not saved. The notebook itself is treated as a build artifact and is not commited to the git repository.&lt;/p&gt; &#xA;&lt;p&gt;Prior to using this repo, make sure jupytext is installed by following the &lt;a href=&#34;https://github.com/mwouts/jupytext/raw/main/docs/install.md&#34;&gt;installation instructions here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To produce the &lt;code&gt;.ipynb&lt;/code&gt; notebook file using the markdown source, run (under the hood, the &lt;code&gt;notebook&lt;/code&gt; build target simply runs &lt;code&gt;jupytext --to ipynb the_annotated_transformer.py&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make notebook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To produce the html version of the notebook, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;make html&lt;/code&gt; is just a shortcut for for generating the notebook with &lt;code&gt;jupytext --to ipynb the_annotated_transformer.py&lt;/code&gt; followed by using the jupyter nbconvert command to produce html using &lt;code&gt;jupyter nbconvert --to html the_annotated_transformer.ipynb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Formatting and Linting&lt;/h1&gt; &#xA;&lt;p&gt;To keep the code formatting clean, the annotated transformer git repo has a git action to check that the code conforms to &lt;a href=&#34;https://www.python.org/dev/peps/pep-0008/&#34;&gt;PEP8 coding standards&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To make this easier, there are two &lt;code&gt;Makefile&lt;/code&gt; build targets to run automatic code formatting with black and flake8.&lt;/p&gt; &#xA;&lt;p&gt;Be sure to &lt;a href=&#34;https://github.com/psf/black#installation&#34;&gt;install black&lt;/a&gt; and &lt;a href=&#34;https://flake8.pycqa.org/en/latest/&#34;&gt;flake8&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can then run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make black&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(or alternatively manually call black &lt;code&gt;black --line-length 79 the_annotated_transformer.py&lt;/code&gt;) to format code automatically using black and:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make flake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(or manually call flake8 `flake8 --show-source the_annotated_transformer.py) to check for PEP8 violations.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s recommended to run these two commands and fix any flake8 errors that arise, when submitting a PR, otherwise the github actions CI will report an error.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>alan-turing-institute/rse-course</title>
    <updated>2022-11-06T01:37:26Z</updated>
    <id>tag:github.com,2022-11-06:/alan-turing-institute/rse-course</id>
    <link href="https://github.com/alan-turing-institute/rse-course" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Materials for The Alan Turing Institute&#39;s Research Software Engineering course&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://www.repostatus.org/#active&#34;&gt;&lt;img src=&#34;https://www.repostatus.org/badges/latest/active.svg?sanitize=true&#34; alt=&#34;Project Status: Active – The project has reached a stable, usable state and is being actively developed.&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/alan-turing-institute/rse-course/actions/workflows/build_docs.yaml&#34;&gt;&lt;img src=&#34;https://github.com/alan-turing-institute/rse-course/actions/workflows/build_docs.yaml/badge.svg?sanitize=true&#34; alt=&#34;Build documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34; alt=&#34;Code style&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true&#34; alt=&#34;Licence: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.8%20%7C%203.9%20%7C%203.10-blue.svg?sanitize=true&#34; alt=&#34;Python 3.8 | 3.9 | 3.10&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Research Software Engineering Course&lt;/h1&gt; &#xA;&lt;p&gt;Course materials for Turing&#39;s Research Software Engineering course.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation for the course is hosted at &lt;a href=&#34;https://alan-turing-institute.github.io/rse-course&#34;&gt;&lt;code&gt;https://alan-turing-institute.github.io/rse-course&lt;/code&gt;&lt;/a&gt;. You can build the documentation from source by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -U jupyter-book&#xA;./build_docs.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are always welcome! Please do the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;add an issue to the &lt;a href=&#34;https://github.com/alan-turing-institute/rse-course&#34;&gt;course repo&lt;/a&gt;, explaining the problem and, potentially, its solution.&lt;/li&gt; &#xA; &lt;li&gt;if you know how to fix it, please also open a pull request that contains the fix. By doing this, you will improve the instructions for future users. &lt;span&gt;🎉&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;if you need to add a dependency, please edit &lt;code&gt;pyproject.toml&lt;/code&gt; which is used to automatically generate &lt;code&gt;requirements.txt&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The full list of contributors can be &lt;a href=&#34;https://github.com/alan-turing-institute/rse-course/graphs/contributors&#34;&gt;seen here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;This course began as a fork of the &lt;a href=&#34;https://github.com/UCL/rsd-engineeringcourse&#34;&gt;UCL RSD course&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>