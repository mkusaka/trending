<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-30T01:45:47Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>NanoComp/meep</title>
    <updated>2022-07-30T01:45:47Z</updated>
    <id>tag:github.com,2022-07-30:/NanoComp/meep</id>
    <link href="https://github.com/NanoComp/meep" rel="alternate"></link>
    <summary type="html">&lt;p&gt;free finite-difference time-domain (FDTD) software for electromagnetic simulations&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/NanoComp/meep/master/doc/docs/images/Meep-banner.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/NanoComp/meep/actions/workflows/build-ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/NanoComp/meep/actions/workflows/build-ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/NanoComp/meep/actions/workflows/build-san.yml&#34;&gt;&lt;img src=&#34;https://github.com/NanoComp/meep/actions/workflows/build-san.yml/badge.svg?sanitize=true&#34; alt=&#34;Sanitizers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://meep.readthedocs.io/en/latest/&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/meep/badge/?version=latest&#34; alt=&#34;Latest Docs&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/python-3.7%2C%203.7%2C%203.8%2C%203.10-brightgreen.svg?sanitize=true&#34; alt=&#34;Python versions 3.7–3.10&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/NanoComp/meep&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/NanoComp/meep/branch/master/graph/badge.svg?token=k88ZuW3795&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Meep&lt;/strong&gt; is a free and open-source software package for &lt;a href=&#34;https://en.wikipedia.org/wiki/Electromagnetism&#34;&gt;electromagnetics&lt;/a&gt; simulation via the &lt;a href=&#34;https://en.wikipedia.org/wiki/Finite-difference_time-domain_method&#34;&gt;finite-difference time-domain&lt;/a&gt; (FDTD) method spanning a broad range of applications.&lt;/p&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Free and open-source software&lt;/strong&gt; under the &lt;a href=&#34;https://en.wikipedia.org/wiki/GNU_General_Public_License&#34;&gt;GNU GPL&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Complete &lt;strong&gt;scriptability&lt;/strong&gt; via &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_Tutorials/Basics/&#34;&gt;Python&lt;/a&gt;, &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Scheme_Tutorials/Basics&#34;&gt;Scheme&lt;/a&gt;, or &lt;a href=&#34;https://meep.readthedocs.io/en/master/C++_Tutorial/&#34;&gt;C++&lt;/a&gt; APIs.&lt;/li&gt; &#xA; &lt;li&gt;Simulation in &lt;strong&gt;1d, 2d, 3d&lt;/strong&gt;, and &lt;strong&gt;cylindrical&lt;/strong&gt; coordinates.&lt;/li&gt; &#xA; &lt;li&gt;Distributed memory &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Parallel_Meep&#34;&gt;parallelism&lt;/a&gt; on any system supporting &lt;a href=&#34;https://en.wikipedia.org/wiki/MPI&#34;&gt;MPI&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Portable to any Unix-like operating system such as &lt;a href=&#34;https://en.wikipedia.org/wiki/Linux&#34;&gt;Linux&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/macOS&#34;&gt;macOS&lt;/a&gt;, and &lt;a href=&#34;https://en.wikipedia.org/wiki/FreeBSD&#34;&gt;FreeBSD&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Precompiled binary packages&lt;/strong&gt; of official releases via &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Installation/#conda-packages&#34;&gt;Conda&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Variety of arbitrary &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Materials&#34;&gt;material&lt;/a&gt; types: &lt;strong&gt;anisotropic&lt;/strong&gt; electric permittivity ε and magnetic permeability μ, along with &lt;strong&gt;dispersive&lt;/strong&gt; ε(ω) and μ(ω) including loss/gain, &lt;strong&gt;nonlinear&lt;/strong&gt; (Kerr &amp;amp; Pockels) dielectric and magnetic materials, electric/magnetic &lt;strong&gt;conductivities&lt;/strong&gt; σ, &lt;strong&gt;saturable&lt;/strong&gt; gain/absorption, and &lt;strong&gt;gyrotropic&lt;/strong&gt; media (magneto-optical effects).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://meep.readthedocs.io/en/latest/Materials/#materials-library&#34;&gt;Materials library&lt;/a&gt; containing predefined broadband, complex refractive indices.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://meep.readthedocs.io/en/latest/Perfectly_Matched_Layer&#34;&gt;Perfectly matched layer&lt;/a&gt; (&lt;strong&gt;PML&lt;/strong&gt;) absorbing boundaries as well as &lt;strong&gt;Bloch-periodic&lt;/strong&gt; and perfect-conductor boundary conditions.&lt;/li&gt; &#xA; &lt;li&gt;Exploitation of &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Exploiting_Symmetry&#34;&gt;symmetries&lt;/a&gt; to reduce the computation size, including even/odd mirror planes and 90°/180° rotations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://meep.readthedocs.io/en/latest/Subpixel_Smoothing/&#34;&gt;Subpixel smoothing&lt;/a&gt; for improving accuracy and shape optimization.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_Tutorials/Custom_Source/&#34;&gt;Custom current sources&lt;/a&gt; with arbitrary time and spatial profile as well as a &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_Tutorials/Eigenmode_Source/&#34;&gt;mode launcher&lt;/a&gt; for waveguides and planewaves, and &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_User_Interface/#gaussianbeamsource&#34;&gt;Gaussian beams&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_User_Interface/#frequency-domain-solver&#34;&gt;Frequency-domain solver&lt;/a&gt; for finding the response to a &lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_wave&#34;&gt;continuous-wave&lt;/a&gt; (CW) source as well as a &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_User_Interface/#frequency-domain-eigensolver&#34;&gt;frequency-domain eigensolver&lt;/a&gt; for finding resonant modes.&lt;/li&gt; &#xA; &lt;li&gt;ε/μ and field import/export in the &lt;a href=&#34;https://en.wikipedia.org/wiki/HDF5&#34;&gt;HDF5&lt;/a&gt; data format.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_User_Interface/#gdsii-support&#34;&gt;GDSII&lt;/a&gt; file import for planar geometries.&lt;/li&gt; &#xA; &lt;li&gt;Field analyses including &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_User_Interface/#field-computations&#34;&gt;discrete-time Fourier transform (DTFT)&lt;/a&gt;, &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_Tutorials/Basics/#transmittance-spectrum-of-a-waveguide-bend&#34;&gt;Poynting flux&lt;/a&gt;, &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_Tutorials/Mode_Decomposition/&#34;&gt;mode decomposition&lt;/a&gt; (for &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_Tutorials/GDSII_Import/#s-parameters-of-a-directional-coupler&#34;&gt;S-parameters&lt;/a&gt;), &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_User_Interface/#energy-density-spectra&#34;&gt;energy density&lt;/a&gt;, &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_Tutorials/Near_to_Far_Field_Spectra/&#34;&gt;near to far transformation&lt;/a&gt;, &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_Tutorials/Basics/#modes-of-a-ring-resonator&#34;&gt;frequency extraction&lt;/a&gt;, &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_Tutorials/Local_Density_of_States/&#34;&gt;local density of states&lt;/a&gt; (LDOS), &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_User_Interface/#field-computations&#34;&gt;modal volume&lt;/a&gt;, &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_Tutorials/Basics/#mie-scattering-of-a-lossless-dielectric-sphere&#34;&gt;scattering cross section&lt;/a&gt;, &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_Tutorials/Optical_Forces/&#34;&gt;Maxwell stress tensor&lt;/a&gt;, &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_Tutorials/Basics/#absorbed-power-density-map-of-a-lossy-cylinder&#34;&gt;absorbed power density&lt;/a&gt;, &lt;a href=&#34;https://meep.readthedocs.io/en/latest/Field_Functions/&#34;&gt;arbitrary functions&lt;/a&gt;; completely programmable.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_Tutorials/Adjoint_Solver&#34;&gt;Adjoint solver&lt;/a&gt; for &lt;strong&gt;inverse design&lt;/strong&gt; and &lt;strong&gt;topology optimization&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://meep.readthedocs.io/en/latest/Python_User_Interface/#data-visualization&#34;&gt;Visualization routines&lt;/a&gt; for the simulation domain involving geometries, fields, boundary layers, sources, and monitors.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citing Meep&lt;/h2&gt; &#xA;&lt;p&gt;We kindly request that you cite the following paper in any published work for which you used Meep:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A. Oskooi, D. Roundy, M. Ibanescu, P. Bermel, J.D. Joannopoulos, and S.G. Johnson, &lt;a href=&#34;http://dx.doi.org/doi:10.1016/j.cpc.2009.11.008&#34;&gt;MEEP: A flexible free-software package for electromagnetic simulations by the FDTD method&lt;/a&gt;, Computer Physics Communications, Vol. 181, pp. 687-702 (2010) (&lt;a href=&#34;http://ab-initio.mit.edu/~oskooi/papers/Oskooi10.pdf&#34;&gt;pdf&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://meep.readthedocs.io/en/latest&#34;&gt;manual on readthedocs&lt;/a&gt; for the latest documentation.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Kodluyoruz/taskforce</title>
    <updated>2022-07-30T01:45:47Z</updated>
    <id>tag:github.com,2022-07-30:/Kodluyoruz/taskforce</id>
    <link href="https://github.com/Kodluyoruz/taskforce" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Taskforce ile amacımız topluluk destekli ve açık kaynaklı eğitim içerikleri oluşturmak ve programlama öğrenmek isteyen kişilere temelden ileri seviyeye kadar proje bazlı içerikler sağlamak.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Taskforce&lt;/h1&gt; &#xA;&lt;p&gt;Taskforce ile amacımız topluluk destekli ve açık kaynaklı eğitim içerikleri oluşturmak ve programlama öğrenmek isteyen kişilere temelden ileri seviyeye kadar proje bazlı içerikler sağlamak.&lt;/p&gt; &#xA;&lt;h2&gt;Nasıl destek olabilirsin&lt;/h2&gt; &#xA;&lt;p&gt;İçeriklerimizi geliştirmemize yardım etmek mi istiyorsun? Bunu yapmak çok basit. Buradan içerik oluşturma şablonumuzu inceleyebilirsin ve sen de önerdiğin içerikleri bize &lt;em&gt;Pull Request&lt;/em&gt; yaparak gönderebilirsin. Ardından içerikler takımımız tarafından incelenecek ve eğer onaylanırsa branch&#39;e eklenecek! (Buradan &lt;em&gt;Pull Request nasıl yapılır?&lt;/em&gt; yazımıza göz atabilirsin.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Elbette destek olmanın başka yolları da var!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;İçerik oluşturacak zamanın veya teknik bilgin olmayabilir. Ama içeriklerimizi okurken bizimle gözümüzden kaçan detayları paylaşabilirsin bunun için &lt;strong&gt;Öneri veya sorun bildir&lt;/strong&gt; başlığına göz at!&lt;/p&gt; &#xA;&lt;h2&gt;Öneri veya sorun bildir&lt;/h2&gt; &#xA;&lt;p&gt;Bütün enerji ve dikkatimizle bu içerikleri oluşturduk! Ama gözümüzden kaçan ve senin dikkati çeken detaylar olabilir!&lt;/p&gt; &#xA;&lt;p&gt;Bunlar basit yazım hatalarından, çalışmayan kod parçalarına hemen her şey ile ilgili olabilir.&lt;/p&gt; &#xA;&lt;p&gt;Sana yol göstermesi açısından hazır şablonlar da oluşturduk. Lütfen içerikleri okurken karşılaştığın sorunları takımımızla &lt;a href=&#34;https://github.com/Kodluyoruz/taskforce/issues/new/choose&#34;&gt;buradan&lt;/a&gt; paylaş ve buradaki içerikleri en kusursuz haline hep birlikte getirelim!&lt;/p&gt; &#xA;&lt;h2&gt;Katkı verenler&lt;/h2&gt; &#xA;&lt;p&gt;&#34;Bir elin nesi var iki elin sesi var.&#34; atasözümüzün belki de en güzel örneği! Bu içerikleri bir kaç kişi değil yüzlerce insan hep birlikte oluşturduk. Bu içerikleri oluşturan kahramanlara &lt;a href=&#34;https://github.com/Kodluyoruz/taskforce/graphs/contributors&#34;&gt;buradan&lt;/a&gt; bakabilirsin! Eğer sen de burada yer almak istersen &lt;strong&gt;Nasıl destek olabilirsin&lt;/strong&gt; başlığına göz at!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Bu bir &lt;a href=&#34;http://kodluyoruz.org&#34;&gt;Kodluyoruz&lt;/a&gt; projesidir!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Nixtla/statsforecast</title>
    <updated>2022-07-30T01:45:47Z</updated>
    <id>tag:github.com,2022-07-30:/Nixtla/statsforecast</id>
    <link href="https://github.com/Nixtla/statsforecast" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lightning ⚡️ fast forecasting with statistical and econometric models.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nixtla &amp;nbsp; &lt;a href=&#34;https://twitter.com/intent/tweet?text=Statistical%20Forecasting%20Algorithms%20by%20Nixtla%20&amp;amp;url=https://github.com/Nixtla/statsforecast&amp;amp;via=nixtlainc&amp;amp;hashtags=StatisticalModels,TimeSeries,Forecasting&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&#34; alt=&#34;Tweet&#34;&gt;&lt;/a&gt; &amp;nbsp;&lt;a href=&#34;https://join.slack.com/t/nixtlaworkspace/shared_invite/zt-135dssye9-fWTzMpv2WBthq8NK0Yvu6A&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-4A154B?&amp;amp;logo=slack&amp;amp;logoColor=white&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/statsforecast/main/#contributors-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-16-orange.svg?style=flat-square&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Nixtla/neuralforecast/main/nbs/indx_imgs/branding/logo_mid.png&#34;&gt; &#xA; &lt;h1 align=&#34;center&#34;&gt;Statistical ⚡️ Forecast&lt;/h1&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt;Lightning fast forecasting with statistical and econometric models&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/Nixtla/statsforecast/actions/workflows/ci.yaml&#34;&gt;&lt;img src=&#34;https://github.com/Nixtla/statsforecast/actions/workflows/ci.yaml/badge.svg?branch=main&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/statsforecast/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/statsforecast&#34; alt=&#34;Python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/statsforecast/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/statsforecast?color=blue&#34; alt=&#34;PyPi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://anaconda.org/conda-forge/statsforecast&#34;&gt;&lt;img src=&#34;https://img.shields.io/conda/vn/conda-forge/statsforecast?color=seagreen&amp;amp;label=conda&#34; alt=&#34;conda-nixtla&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Nixtla/statsforecast/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://nixtla.github.io/statsforecast/&#34;&gt;&lt;img src=&#34;https://img.shields.io/website-up-down-green-red/http/nixtla.github.io/statsforecast.svg?label=docs&#34; alt=&#34;docs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;StatsForecast&lt;/strong&gt; offers a collection of widely used univariate time series forecasting models, including automatic &lt;code&gt;ARIMA&lt;/code&gt; and &lt;code&gt;ETS&lt;/code&gt; modeling optimized for high performance using &lt;code&gt;numba&lt;/code&gt;. It also includes a large battery of benchmarking models.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;💻 Installation and Getting Started&lt;/h2&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;PyPI&lt;/summary&gt; &#xA; &lt;p&gt;You can install the &lt;em&gt;released version&lt;/em&gt; of &lt;code&gt;StatsForecast&lt;/code&gt; from the &lt;a href=&#34;https://pypi.org&#34;&gt;Python package index&lt;/a&gt; with:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pip install statsforecast&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;(Installing inside a python virtualenvironment or a conda environment is recommended.)&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;Conda&lt;/summary&gt; &#xA; &lt;p&gt;Also you can install the &lt;em&gt;released version&lt;/em&gt; of &lt;code&gt;StatsForecast&lt;/code&gt; from &lt;a href=&#34;https://anaconda.org&#34;&gt;conda&lt;/a&gt; with:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;conda install -c conda-forge statsforecast&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;(Installing inside a python virtualenvironment or a conda environment is recommended.)&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Dev Mode&lt;/summary&gt; If you want to make some modifications to the code and see the effects in real time (without reinstalling), follow the steps below: &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Nixtla/statsforecast.git&#xA;cd statsforecast&#xA;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;To get started just follow this &lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/statsforecast/main/examples/Getting_Started_with_Auto_Arima_and_ETS.ipynb&#34;&gt;guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🎉 New!&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/nixtla/statsforecast/blob/main/examples/Getting_Started_with_Auto_Arima_and_ETS.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt; &lt;strong&gt;ETS Example&lt;/strong&gt;: 4x faster than StatsModels with improved accuracy and robustness.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/nixtla/statsforecast/blob/main/examples/arima.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt; &lt;strong&gt;Complete pipeline and comparison&lt;/strong&gt;: 20x faster than pmdarima and 500x faster than Prophet.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔥 Highlights&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Fastest and most accurate &lt;code&gt;auto_arima&lt;/code&gt; in &lt;code&gt;Python&lt;/code&gt; and &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fastest and most accurate &lt;code&gt;ets&lt;/code&gt; in &lt;code&gt;Python&lt;/code&gt; and &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Replace FB-Prophet in two lines of code and gain speed and accuracy. Check the experiments &lt;a href=&#34;https://github.com/Nixtla/statsforecast/tree/main/experiments/arima_prophet_adapter&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Distributed computation in clusters with &lt;a href=&#34;https://github.com/ray-project/ray&#34;&gt;ray&lt;/a&gt;. (Forecast 1M series in &lt;a href=&#34;https://github.com/Nixtla/statsforecast/tree/main/experiments/ray&#34;&gt;30min&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Good Ol&#39; sklearn interface with &lt;code&gt;AutoARIMA().fit(y).predict(h=7)&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🎊 Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Inclusion of &lt;code&gt;exogenous variables&lt;/code&gt; and &lt;code&gt;prediction intervals&lt;/code&gt; for ARIMA.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;20x faster than &lt;code&gt;pmdarima&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;1.5x faster than &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;500x faster than &lt;code&gt;Prophet&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;4x faster than &lt;code&gt;statsmodels&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Compiled to high performance machine code through &lt;a href=&#34;https://numba.pydata.org/&#34;&gt;&lt;code&gt;numba&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;1,000,000 series in &lt;a href=&#34;https://github.com/Nixtla/statsforecast/tree/main/experiments/ray&#34;&gt;30 min&lt;/a&gt; with &lt;a href=&#34;https://github.com/ray-project/ray&#34;&gt;ray&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Out of the box implementation of &lt;code&gt;ses&lt;/code&gt;, &lt;code&gt;adida&lt;/code&gt;, &lt;code&gt;historic_average&lt;/code&gt;, &lt;code&gt;croston_classic&lt;/code&gt;, &lt;code&gt;croston_sba&lt;/code&gt;, &lt;code&gt;croston_optimized&lt;/code&gt;, &lt;code&gt;seasonal_window_average&lt;/code&gt;, &lt;code&gt;seasonal_naive&lt;/code&gt;, &lt;code&gt;imapa&lt;/code&gt; &lt;code&gt;naive&lt;/code&gt;, &lt;code&gt;random_walk_with_drift&lt;/code&gt;, &lt;code&gt;window_average&lt;/code&gt;, &lt;code&gt;seasonal_exponential_smoothing&lt;/code&gt;, &lt;code&gt;tsb&lt;/code&gt;, &lt;code&gt;auto_arima&lt;/code&gt; and &lt;code&gt;ets&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Missing something? Please open an issue or write us in &lt;a href=&#34;https://join.slack.com/t/nixtlaworkspace/shared_invite/zt-135dssye9-fWTzMpv2WBthq8NK0Yvu6A&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-4A154B?&amp;amp;logo=slack&amp;amp;logoColor=white&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📖 Why?&lt;/h2&gt; &#xA;&lt;p&gt;Current Python alternatives for statistical models are slow, inaccurate and don&#39;t scale well. So we created a library that can be used to forecast in production environments or as benchmarks. &lt;code&gt;StatsForecast&lt;/code&gt; includes an extensive battery of models that can efficiently fit millions of time series.&lt;/p&gt; &#xA;&lt;h2&gt;🔬 Accuracy &amp;amp; ⏲ Speed&lt;/h2&gt; &#xA;&lt;h3&gt;ARIMA&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;auto_arima&lt;/code&gt; model implemented in &lt;code&gt;StatsForecast&lt;/code&gt; is &lt;strong&gt;20x faster&lt;/strong&gt; than &lt;code&gt;pmdarima&lt;/code&gt; and &lt;strong&gt;1.5x faster&lt;/strong&gt; than &lt;code&gt;R&lt;/code&gt; while improving accuracy. You can see the exact comparison and reproduce the results &lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/statsforecast/main/experiments/arima/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;ETS&lt;/h3&gt; &#xA;&lt;p&gt;StatsForecast&#39;s exponential smoothing is &lt;strong&gt;4x faster than StatsModels&#39;&lt;/strong&gt; and &lt;strong&gt;1.6x faster than R&#39;s&lt;/strong&gt;, with improved accuracy and robustness. You can see the exact comparison and reproduce the results&lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/statsforecast/main/experiments/ets/&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Benchmarks at Scale&lt;/h3&gt; &#xA;&lt;p&gt;With &lt;code&gt;StatsForecast&lt;/code&gt; you can fit 9 benchmark models on &lt;strong&gt;1,000,000&lt;/strong&gt; series in under &lt;strong&gt;5 min&lt;/strong&gt;. Reproduce the results &lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/statsforecast/main/experiments/benchmarks_at_scale/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🧬 Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You can run this notebooks to get you started.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Example of different &lt;code&gt;auto_arima&lt;/code&gt; models on M4 data &lt;a href=&#34;https://colab.research.google.com/github/nixtla/statsforecast/blob/main/examples/arima.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In this notebook we present Nixtla&#39;s &lt;code&gt;auto_arima&lt;/code&gt;. The &lt;code&gt;auto_arima&lt;/code&gt; model is widely used to forecast time series in production and as a benchmark. However, the alternative python implementation (&lt;code&gt;pmdarima&lt;/code&gt;) is so slow that prevents data scientists from quickly iterating and deploying &lt;code&gt;auto_arima&lt;/code&gt; in production for a large number of time series.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Shorter Example of fitting and &lt;code&gt;auto_arima&lt;/code&gt; and an &lt;code&gt;ets&lt;/code&gt; model. &lt;a href=&#34;https://colab.research.google.com/github/nixtla/statsforecast/blob/main/examples/Forecasting_with_Auto_Arima_&amp;amp;_ETS_.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Benchmarking 9 models on millions of &lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/statsforecast/main/experiments/benchmarks_at_scale/&#34;&gt;series&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📖 Documentation (WIP)&lt;/h2&gt; &#xA;&lt;p&gt;Here is a link to the &lt;a href=&#34;https://nixtla.github.io/statsforecast/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🔨 How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/Nixtla/statsforecast/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;📃 References&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;auto_arima&lt;/code&gt; model is based (translated) from the R implementation included in the &lt;a href=&#34;https://github.com/robjhyndman/forecast&#34;&gt;forecast&lt;/a&gt; package developed by Rob Hyndman.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;ets&lt;/code&gt; model is based (translated) from the R implementation included in the &lt;a href=&#34;https://github.com/robjhyndman/forecast&#34;&gt;forecast&lt;/a&gt; package developed by Rob Hyndman.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/FedericoGarza&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/10517170?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;fede&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/statsforecast/commits?author=FedericoGarza&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/statsforecast/main/#maintenance-FedericoGarza&#34; title=&#34;Maintenance&#34;&gt;🚧&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jmoralez&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/8473587?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;José Morales&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/statsforecast/commits?author=jmoralez&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/statsforecast/main/#maintenance-jmoralez&#34; title=&#34;Maintenance&#34;&gt;🚧&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.linkedin.com/in/sugatoray/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/10201242?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sugato Ray&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/statsforecast/commits?author=sugatoray&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.jefftackes.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/9125316?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jeff Tackes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/statsforecast/issues?q=author%3Atackes&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/darinkist&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/62692170?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;darinkist&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/statsforecast/main/#ideas-darinkist&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alech97&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/22159405?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alec Helyar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/statsforecast/main/#question-alech97&#34; title=&#34;Answering Questions&#34;&gt;💬&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dhirschfeld.github.io&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/881019?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dave Hirschfeld&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/statsforecast/main/#question-dhirschfeld&#34; title=&#34;Answering Questions&#34;&gt;💬&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mergenthaler&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4086186?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mergenthaler&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/statsforecast/commits?author=mergenthaler&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/kdgutier&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/19935241?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/statsforecast/commits?author=kdgutier&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Yasslight90&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/58293883?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yasslight90&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/statsforecast/main/#ideas-Yasslight90&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/asinig&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/99350687?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;asinig&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/statsforecast/main/#ideas-asinig&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/guerda&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/230782?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Philip Gillißen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/statsforecast/commits?author=guerda&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/shagn&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/16029092?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sebastian Hagn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/statsforecast/issues?q=author%3Ashagn&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/fugue-project/fugue&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/21092479?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Han Wang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/statsforecast/commits?author=goodwanghan&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.linkedin.com/in/benjamin-jeffrey-218548a8/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/36240394?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ben Jeffrey&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/statsforecast/issues?q=author%3Abjeffrey92&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Beliavsky&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/38887928?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Beliavsky&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/statsforecast/commits?author=Beliavsky&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</summary>
  </entry>
</feed>