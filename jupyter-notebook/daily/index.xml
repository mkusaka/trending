<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-09T01:42:54Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>guipsamora/pandas_exercises</title>
    <updated>2022-06-09T01:42:54Z</updated>
    <id>tag:github.com,2022-06-09:/guipsamora/pandas_exercises</id>
    <link href="https://github.com/guipsamora/pandas_exercises" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Practice your pandas skills!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pandas Exercises&lt;/h1&gt; &#xA;&lt;p&gt;Fed up with a ton of tutorials but no easy way to find exercises I decided to create a repo just with exercises to practice pandas. Don&#39;t get me wrong, tutorials are great resources, but to learn is to do. So unless you practice you won&#39;t learn.&lt;/p&gt; &#xA;&lt;p&gt;There will be three different types of files:&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1. Exercise instructions&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2. Solutions without code&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3. Solutions with code and comments&lt;/p&gt; &#xA;&lt;p&gt;My suggestion is that you learn a topic in a tutorial, video or documentation and then do the first exercises. Learn one more topic and do more exercises. If you are stuck, don&#39;t go directly to the solution with code files. Check the solutions only and try to get the correct answer.&lt;/p&gt; &#xA;&lt;p&gt;Suggestions and collaborations are more than welcome.🙂 Please open an issue or make a PR indicating the exercise and your problem/solution.&lt;/p&gt; &#xA;&lt;h1&gt;Lessons&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/guipsamora/pandas_exercises/master/#getting-and-knowing&#34;&gt;Getting and knowing&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/guipsamora/pandas_exercises/master/#merge&#34;&gt;Merge&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/guipsamora/pandas_exercises/master/#time-series&#34;&gt;Time Series&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/guipsamora/pandas_exercises/master/#filtering-and-sorting&#34;&gt;Filtering and Sorting&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/guipsamora/pandas_exercises/master/#stats&#34;&gt;Stats&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/guipsamora/pandas_exercises/master/#deleting&#34;&gt;Deleting&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/guipsamora/pandas_exercises/master/#grouping&#34;&gt;Grouping&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/guipsamora/pandas_exercises/master/#visualization&#34;&gt;Visualization&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Indexing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/guipsamora/pandas_exercises/master/#apply&#34;&gt;Apply&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/guipsamora/pandas_exercises/master/#creating-series-and-dataframes&#34;&gt;Creating Series and DataFrames&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Exporting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/01_Getting_%26_Knowing_Your_Data&#34;&gt;Getting and knowing&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/01_Getting_%26_Knowing_Your_Data/Chipotle&#34;&gt;Chipotle&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/01_Getting_%26_Knowing_Your_Data/Occupation&#34;&gt;Occupation&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/01_Getting_%26_Knowing_Your_Data/World%20Food%20Facts&#34;&gt;World Food Facts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/02_Filtering_%26_Sorting&#34;&gt;Filtering and Sorting&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/02_Filtering_%26_Sorting/Chipotle&#34;&gt;Chipotle&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/02_Filtering_%26_Sorting/Euro12&#34;&gt;Euro12&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/02_Filtering_%26_Sorting/Fictional%20Army&#34;&gt;Fictional Army&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/03_Grouping&#34;&gt;Grouping&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/03_Grouping/Alcohol_Consumption&#34;&gt;Alcohol Consumption&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/03_Grouping/Occupation&#34;&gt;Occupation&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/03_Grouping/Regiment&#34;&gt;Regiment&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/04_Apply&#34;&gt;Apply&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/04_Apply/Students_Alcohol_Consumption&#34;&gt;Students Alcohol Consumption&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/04_Apply/US_Crime_Rates&#34;&gt;US_Crime_Rates&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/05_Merge&#34;&gt;Merge&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/05_Merge/Auto_MPG&#34;&gt;Auto_MPG&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/05_Merge/Fictitous%20Names&#34;&gt;Fictitious Names&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/05_Merge/Housing%20Market&#34;&gt;House Market&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/06_Stats&#34;&gt;Stats&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/06_Stats/US_Baby_Names&#34;&gt;US_Baby_Names&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/06_Stats/Wind_Stats&#34;&gt;Wind_Stats&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/07_Visualization&#34;&gt;Visualization&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/07_Visualization/Chipotle&#34;&gt;Chipotle&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/07_Visualization/Titanic_Desaster&#34;&gt;Titanic Disaster&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/07_Visualization/Scores&#34;&gt;Scores&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/07_Visualization/Online_Retail&#34;&gt;Online Retail&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/07_Visualization/Tips&#34;&gt;Tips&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/08_Creating_Series_and_DataFrames&#34;&gt;Creating Series and DataFrames&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/08_Creating_Series_and_DataFrames/Pokemon&#34;&gt;Pokemon&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/09_Time_Series&#34;&gt;Time Series&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/09_Time_Series/Apple_Stock&#34;&gt;Apple_Stock&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/09_Time_Series/Getting_Financial_Data&#34;&gt;Getting_Financial_Data&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/09_Time_Series/Getting_Financial_Data&#34;&gt;Investor_Flow_of_Funds_US&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/10_Deleting&#34;&gt;Deleting&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/10_Deleting/Iris&#34;&gt;Iris&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/guipsamora/pandas_exercises/tree/master/10_Deleting/Wine&#34;&gt;Wine&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Video Solutions&lt;/h1&gt; &#xA;&lt;p&gt;Video tutorials of data scientists working through the above exercises:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=pu3IpU937xs&amp;amp;list=PLgJhDSE2ZLxaY_DigHeiIDC1cD09rXgJv&#34;&gt;Data Talks - Pandas Learning By Doing&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pycaret/pycaret</title>
    <updated>2022-06-09T01:42:54Z</updated>
    <id>tag:github.com,2022-06-09:/pycaret/pycaret</id>
    <link href="https://github.com/pycaret/pycaret" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source, low-code machine learning library in Python&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/pycaret/pycaret/master/docs/images/logo.png&#34; alt=&#34;drawing&#34; width=&#34;200&#34;&gt; &#xA; &lt;p&gt;&lt;strong&gt;An open-source, low-code machine learning library in Python&lt;/strong&gt; &lt;br&gt; &lt;span&gt;🚀&lt;/span&gt; &lt;strong&gt;PyCaret 3.0-rc is now out. &lt;code&gt;pip install --pre pycaret&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.pycaret.org&#34;&gt;Official&lt;/a&gt; • &lt;a href=&#34;https://pycaret.gitbook.io/&#34;&gt;Docs&lt;/a&gt; • &lt;a href=&#34;https://pycaret.gitbook.io/docs/get-started/installation&#34;&gt;Install&lt;/a&gt; • &lt;a href=&#34;https://pycaret.gitbook.io/docs/get-started/tutorials&#34;&gt;Tutorials&lt;/a&gt; • &lt;a href=&#34;https://pycaret.gitbook.io/docs/learn-pycaret/faqs&#34;&gt;FAQs&lt;/a&gt; • &lt;a href=&#34;https://pycaret.gitbook.io/docs/learn-pycaret/cheat-sheet&#34;&gt;Cheat sheet&lt;/a&gt; • &lt;a href=&#34;https://github.com/pycaret/pycaret/discussions&#34;&gt;Discussions&lt;/a&gt; • &lt;a href=&#34;https://pycaret.readthedocs.io/en/latest/contribute.html&#34;&gt;Contribute&lt;/a&gt; • &lt;a href=&#34;https://github.com/pycaret/pycaret/tree/master/resources&#34;&gt;Resources&lt;/a&gt; • &lt;a href=&#34;https://pycaret.gitbook.io/docs/learn-pycaret/official-blog&#34;&gt;Blog&lt;/a&gt; • &lt;a href=&#34;https://www.linkedin.com/company/pycaret/&#34;&gt;LinkedIn&lt;/a&gt; • &lt;a href=&#34;https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g&#34;&gt;YouTube&lt;/a&gt; • &lt;a href=&#34;https://join.slack.com/t/pycaret/shared_invite/zt-row9phbm-BoJdEVPYnGf7_NxNBP307w&#34;&gt;Slack&lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://badge.fury.io/py/pycaret&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-3.6%20%7C%203.7%20%7C%203.8%20%7C%203.9-blue&#34; alt=&#34;Python&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/pycaret/pycaret/workflows/pytest%20on%20push/badge.svg?sanitize=true&#34; alt=&#34;pytest on push&#34;&gt; &lt;a href=&#34;http://pip.pypa.io/en/stable/?badge=stable&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/pip/badge/?version=stable&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/py/pycaret&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/pycaret.svg?sanitize=true&#34; alt=&#34;PyPI version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/pypi/l/ansicolortags.svg&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/l/ansicolortags.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;!-- [![Git count](http://hits.dwyl.com/pycaret/pycaret/pycaret.svg)](http://hits.dwyl.com/pycaret/pycaret/pycaret) --&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://join.slack.com/t/pycaret/shared_invite/zt-row9phbm-BoJdEVPYnGf7_NxNBP307w&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-chat-green.svg?logo=slack&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pycaret/pycaret/master/docs/images/quick_start.gif&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA; &lt;div align=&#34;left&#34;&gt; &#xA;  &lt;h2&gt;Welcome to PyCaret&lt;/h2&gt; &#xA;  &lt;p&gt;PyCaret is an open-source, low-code machine learning library in Python that automates machine learning workflows. It is an end-to-end machine learning and model management tool that speeds up the experiment cycle exponentially and makes you more productive.&lt;/p&gt; &#xA;  &lt;p&gt;In comparison with the other open-source machine learning libraries, PyCaret is an alternate low-code library that can be used to replace hundreds of lines of code with few lines only. This makes experiments exponentially fast and efficient. PyCaret is essentially a Python wrapper around several machine learning libraries and frameworks such as scikit-learn, XGBoost, LightGBM, CatBoost, spaCy, Optuna, Hyperopt, Ray, and few more.&lt;/p&gt; &#xA;  &lt;p&gt;The design and simplicity of PyCaret are inspired by the emerging role of citizen data scientists, a term first used by Gartner. Citizen Data Scientists are power users who can perform both simple and moderately sophisticated analytical tasks that would previously have required more technical expertise.&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;Important Links&lt;/th&gt; &#xA;     &lt;th&gt;&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;span&gt;⭐&lt;/span&gt; &lt;strong&gt;&lt;a href=&#34;https://pycaret.gitbook.io/docs/get-started/tutorials&#34;&gt;Tutorials&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;New to PyCaret? Checkout our official notebooks!&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;span&gt;📋&lt;/span&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/pycaret/pycaret/tree/master/examples&#34;&gt;Example Notebooks&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Example notebooks created by community.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;span&gt;📙&lt;/span&gt; &lt;strong&gt;&lt;a href=&#34;https://pycaret.gitbook.io/docs/learn-pycaret/official-blog&#34;&gt;Official Blog&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Tutorials and articles by contributors.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;span&gt;📚&lt;/span&gt; &lt;strong&gt;&lt;a href=&#34;https://pycaret.gitbook.io&#34;&gt;Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;The detailed API docs of PyCaret&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;span&gt;📺&lt;/span&gt; &lt;strong&gt;&lt;a href=&#34;https://pycaret.gitbook.io/docs/learn-pycaret/videos&#34;&gt;Video Tutorials&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Our video tutorial from various events.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;✈️ &lt;strong&gt;&lt;a href=&#34;https://pycaret.gitbook.io/docs/learn-pycaret/cheat-sheet&#34;&gt;Cheat sheet&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cheat sheet for all functions across modules.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;span&gt;📢&lt;/span&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/pycaret/pycaret/discussions&#34;&gt;Discussions&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Have questions? Engage with community and contributors.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;span&gt;🛠&lt;/span&gt; &lt;strong&gt;&lt;a href=&#34;https://pycaret.gitbook.io/docs/get-started/release-notes&#34;&gt;Changelog&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Changes and version history.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;span&gt;🌳&lt;/span&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/pycaret/pycaret/issues/1756&#34;&gt;Roadmap&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;PyCaret&#39;s software and community development plan.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &#xA;  &lt;h2&gt;Installation&lt;/h2&gt; &#xA;  &lt;p&gt;PyCaret&#39;s default installation only installs hard dependencies as listed in the &lt;a href=&#34;https://raw.githubusercontent.com/pycaret/pycaret/master/requirements.txt&#34;&gt;requirements.txt&lt;/a&gt; file.&lt;/p&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pip install pycaret&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;p&gt;To install the full version:&lt;/p&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pip install pycaret[full]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;div align=&#34;center&#34;&gt; &#xA;   &lt;h2&gt;Supervised Workflow&lt;/h2&gt; &#xA;   &lt;table&gt; &#xA;    &lt;thead&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;Classification&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;Regression&lt;/th&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/thead&gt; &#xA;    &lt;tbody&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pycaret/pycaret/master/docs/images/pycaret_classification.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pycaret/pycaret/master/docs/images/pycaret_regression.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt; &#xA;   &lt;/table&gt; &#xA;   &lt;h2&gt;Unsupervised Workflow&lt;/h2&gt; &#xA;   &lt;table&gt; &#xA;    &lt;thead&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;Clustering&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;Anomaly Detection&lt;/th&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/thead&gt; &#xA;    &lt;tbody&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pycaret/pycaret/master/docs/images/pycaret_clustering.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pycaret/pycaret/master/docs/images/pycaret_anomaly.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt; &#xA;   &lt;/table&gt; &#xA;   &lt;div align=&#34;left&#34;&gt; &#xA;    &lt;h2&gt;⚡ PyCaret Time Series Module (beta)&lt;/h2&gt; &#xA;    &lt;p&gt;PyCaret new time series module is now available in beta. Staying true to simplicity of PyCaret, it is consistent with our existing API and fully loaded with functionalities. Statistical testing, model training and selection (30+ algorithms), model analysis, automated hyperparameter tuning, experiment logging, deployment on cloud, and more. All of this with only few lines of code (just like the other modules of pycaret). If you would like to give it a try, checkout our official &lt;a href=&#34;https://nbviewer.org/github/pycaret/pycaret/blob/time_series_beta/time_series_101.ipynb&#34;&gt;quick start&lt;/a&gt; notebook.&lt;/p&gt; &#xA;    &lt;p&gt;&lt;span&gt;📚&lt;/span&gt; &lt;a href=&#34;https://pycaret.readthedocs.io/en/time_series/api/time_series.html&#34;&gt;Time Series Docs&lt;/a&gt;&lt;/p&gt; &#xA;    &lt;p&gt;&lt;span&gt;❓&lt;/span&gt; &lt;a href=&#34;https://github.com/pycaret/pycaret/discussions/categories/faqs?discussions_q=category%3AFAQs+label%3Atime_series&#34;&gt;Time Series FAQs&lt;/a&gt;&lt;/p&gt; &#xA;    &lt;p&gt;&lt;span&gt;🚀&lt;/span&gt; &lt;a href=&#34;https://github.com/pycaret/pycaret/issues/1648&#34;&gt;Features and Roadmap&lt;/a&gt;&lt;/p&gt; &#xA;    &lt;p&gt;The module is still in beta. We are adding new functionalities every day and doing weekly pip releases. Please ensure to create a separate python environment to avoid dependency conflicts with main pycaret. The final release of this module will be merged with the main pycaret in next major release.&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code&gt;pip install pycaret-ts-alpha&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pycaret/pycaret/master/docs/images/pycaret_ts_quickdemo.gif&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;    &lt;h2&gt;Who should use PyCaret?&lt;/h2&gt; &#xA;    &lt;p&gt;PyCaret is an open source library that anybody can use. In our view the ideal target audience of PyCaret is: &lt;br&gt;&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Experienced Data Scientists who want to increase productivity.&lt;/li&gt; &#xA;     &lt;li&gt;Citizen Data Scientists who prefer a low code machine learning solution.&lt;/li&gt; &#xA;     &lt;li&gt;Data Science Professionals who want to build rapid prototypes.&lt;/li&gt; &#xA;     &lt;li&gt;Data Science and Machine Learning students and enthusiasts.&lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;    &lt;h2&gt;PyCaret GPU support&lt;/h2&gt; &#xA;    &lt;p&gt;With PyCaret &amp;gt;= 2.2, you can train models on GPU and speed up your workflow by 10x. To train models on GPU simply pass &lt;code&gt;use_gpu = True&lt;/code&gt; in the setup function. There is no change in the use of the API, however, in some cases, additional libraries have to be installed as they are not installed with the default version or the full version. As of the latest release, the following models can be trained on GPU:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Extreme Gradient Boosting (requires no further installation)&lt;/li&gt; &#xA;     &lt;li&gt;CatBoost (requires no further installation)&lt;/li&gt; &#xA;     &lt;li&gt;Light Gradient Boosting Machine requires &lt;a href=&#34;https://lightgbm.readthedocs.io/en/latest/GPU-Tutorial.html&#34;&gt;GPU installation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Logistic Regression, Ridge Classifier, Random Forest, K Neighbors Classifier, K Neighbors Regressor, Support Vector Machine, Linear Regression, Ridge Regression, Lasso Regression requires &lt;a href=&#34;https://github.com/rapidsai/cuml&#34;&gt;cuML &amp;gt;= 0.15&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;    &lt;h2&gt;License&lt;/h2&gt; &#xA;    &lt;p&gt;PyCaret is completely free and open-source and licensed under the &lt;a href=&#34;https://github.com/pycaret/pycaret/raw/master/LICENSE&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt; &#xA;    &lt;h2&gt;Contributors&lt;/h2&gt; &#xA;    &lt;a href=&#34;https://github.com/pycaret/pycaret/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contributors-img.web.app/image?repo=pycaret/pycaret&#34; width=&#34;500/&#34;&gt; &lt;/a&gt; &#xA;   &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>Nixtla/neuralforecast</title>
    <updated>2022-06-09T01:42:54Z</updated>
    <id>tag:github.com,2022-06-09:/Nixtla/neuralforecast</id>
    <link href="https://github.com/Nixtla/neuralforecast" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Scalable and user friendly neural 🧠 forecasting algorithms for time series data 〰️.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&#xA; &lt;center&gt;&#xA;  Nixtla &amp;nbsp; &#xA;  &lt;a href=&#34;https://twitter.com/intent/tweet?text=SOTA%20Neural%20Forecasting%20Algorithms%20by%20Nixtla%204&amp;amp;url=https://github.com/Nixtla/neuralforecast&amp;amp;via=nixtlainc&amp;amp;hashtags=DeepLearning,TimeSeries,Forecasting&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&#34; alt=&#34;Tweet&#34;&gt;&lt;/a&gt; &amp;nbsp;&#xA;  &lt;a href=&#34;https://join.slack.com/t/nixtlaworkspace/shared_invite/zt-135dssye9-fWTzMpv2WBthq8NK0Yvu6A&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-4A154B?&amp;amp;logo=slack&amp;amp;logoColor=white&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&#xA; &lt;/center&gt;&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Nixtla/neuralforecast/main/nbs/indx_imgs/branding/logo_mid.png&#34;&gt; &#xA; &lt;h1 align=&#34;center&#34;&gt;Neural 🧠 Forecast&lt;/h1&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt;Deep Learning for time series&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/Nixtla/neuralforecast/actions/workflows/ci-linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/Nixtla/neuralforecast/actions/workflows/ci-linux.yml/badge.svg?&#34; alt=&#34;CI Linux&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Nixtla/neuralforecast/actions/workflows/ci-mac.yml&#34;&gt;&lt;img src=&#34;https://github.com/Nixtla/neuralforecast/actions/workflows/ci-mac.yml/badge.svg?&#34; alt=&#34;CI Mac&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/Nixtla/neuralforecast&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/Nixtla/neuralforecast/branch/main/graph/badge.svg?token=C2P2BJI6S1&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/neuralforecast/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/neuralforecast&#34; alt=&#34;Python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/neuralforecast/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/neuralforecast?color=blue&#34; alt=&#34;PyPi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://anaconda.org/conda-forge/neuralforecast&#34;&gt;&lt;img src=&#34;https://img.shields.io/conda/vn/conda-forge/neuralforecast?color=seagreen&amp;amp;label=conda&#34; alt=&#34;conda-nixtla&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Nixtla/neuralforecast/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://nixtla.github.io/neuralforecast/&#34;&gt;&lt;img src=&#34;https://img.shields.io/website-up-down-green-red/http/nixtla.github.io/neuralforecast.svg?label=docs&#34; alt=&#34;docs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;State-of-the-art time series forecasting for PyTorch.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;NeuralForecast&lt;/code&gt; is a Python library for time series forecasting with deep learning models. It includes &lt;em&gt;benchmark datasets&lt;/em&gt;, &lt;em&gt;data-loading utilities&lt;/em&gt;, &lt;em&gt;evaluation functions&lt;/em&gt;, statistical &lt;em&gt;tests&lt;/em&gt;, univariate model &lt;em&gt;benchmarks&lt;/em&gt; and &lt;em&gt;SOTA models&lt;/em&gt; implemented in PyTorch and PyTorchLightning.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/neuralforecast/main/#%F0%9F%A7%AC%20Getting%20Started&#34;&gt;Getting started&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/neuralforecast/main/#%F0%9F%92%BB-installation&#34;&gt;Installation&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/neuralforecast/main/#forecasting-models&#34;&gt;Models&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🎉 New!&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/Nixtla/neuralforecast/blob/main/examples/mqnhits.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt; &lt;strong&gt;MQN-HiTS example&lt;/strong&gt;: produce accurate and efficient probabilistic forecasts in long-horizon settings. Outperforming &lt;code&gt;AutoARIMA&lt;/code&gt;&#39;s accuracy in a fraction of the time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/drive/1WjBbQzaivQhOldGolzymOtLmo6QX4Ieg#scrollTo=HXKT2-fpUD0Z&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt; &lt;strong&gt;N-HiTS example&lt;/strong&gt;: load, train, and tune hyperparameter, to achieve SoTA. Outperform Transformers by &lt;strong&gt;25% in 50x&lt;/strong&gt; less time.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⚡ Why Deep Learning on Time Series?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Accuracy&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Global model is fitted simultaneously for several time series.&lt;/li&gt; &#xA; &lt;li&gt;Shared information helps with highly parametrized and flexible models.&lt;/li&gt; &#xA; &lt;li&gt;Useful for items/skus that have little to no history available.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Efficiency:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatic featurization processes.&lt;/li&gt; &#xA; &lt;li&gt;Fast computations (GPU or TPU).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📖 Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Here is a link to the &lt;a href=&#34;https://nixtla.github.io/neuralforecast/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🧬 Getting Started &lt;a href=&#34;https://colab.research.google.com/github/nixtla/neuralforecast/blob/main/examples/getting_started.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Nixtla/neuralforecast/raw/main/examples/getting_started.ipynb&#34;&gt;Example Jupyter Notebook&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/mCdyxYtLLTNCQ0WhkP/giphy.gif&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💻 Installation&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;PyPI&lt;/summary&gt; &#xA; &lt;p&gt;You can install the &lt;em&gt;released version&lt;/em&gt; of &lt;code&gt;NeuralForecast&lt;/code&gt; from the &lt;a href=&#34;https://pypi.org&#34;&gt;Python package index&lt;/a&gt; with:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pip install neuralforecast&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;(Installing inside a python virtualenvironment or a conda environment is recommended.)&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Conda&lt;/summary&gt; &#xA; &lt;p&gt;Also you can install the &lt;em&gt;released version&lt;/em&gt; of &lt;code&gt;NeuralForecast&lt;/code&gt; from &lt;a href=&#34;https://anaconda.org&#34;&gt;conda&lt;/a&gt; with:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;conda install -c conda-forge neuralforecast&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;(Installing inside a python virtualenvironment or a conda environment is recommended.)&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Dev Mode&lt;/summary&gt; If you want to make some modifications to the code and see the effects in real time (without reinstalling), follow the steps below: &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Nixtla/neuralforecast.git&#xA;cd neuralforecast&#xA;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Forecasting models&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2201.12886&#34;&gt;Neural Hierarchical Interpolation for Time Series Forecasting (N-HiTS)&lt;/a&gt;: A new model for long-horizon forecasting which incorporates novel hierarchical interpolation and multi-rate data sampling techniques to specialize blocks of its architecture to different frequency band of the time-series signal. It achieves SoTA performance on several benchmark datasets, outperforming current Transformer-based models by more than 25%.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Nixtla/neuralforecast/main/nbs/indx_imgs/NHits.jpeg&#34; width=&#34;300&#34; title=&#34;N-HiTS&#34; align=&#34;rigth&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sciencedirect.com/science/article/pii/S0169207019301153&#34;&gt;Exponential Smoothing Recurrent Neural Network (ES-RNN)&lt;/a&gt;: A hybrid model that combines the expressivity of non linear models to capture the trends while it normalizes using a Holt-Winters inspired model for the levels and seasonals. This model is the winner of the M4 forecasting competition.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Nixtla/neuralforecast/main/nbs/indx_imgs/ESRNN.png&#34; width=&#34;300&#34; title=&#34;ES-RNN&#34; align=&#34;rigth&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1905.10437&#34;&gt;Neural Basis Expansion Analysis (N-BEATS)&lt;/a&gt;: A model from Element-AI (Yoshua Bengio’s lab) that has proven to achieve state-of-the-art performance on benchmark large scale forecasting datasets like Tourism, M3, and M4. The model is fast to train and has an interpretable configuration.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Nixtla/neuralforecast/main/nbs/indx_imgs/NBeats.png&#34; width=&#34;300&#34; title=&#34;N-BEATS&#34; align=&#34;rigth&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2104.05522&#34;&gt;Neural Basis Expansion Analysis with Exogenous Variables (N-BEATSx)&lt;/a&gt;: The neural basis expansion with exogenous variables is an extension to the original N-BEATS that allows it to include time dependent covariates.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Nixtla/neuralforecast/main/nbs/indx_imgs/NBEATSX.png&#34; width=&#34;300&#34; title=&#34;N-BEATSx&#34; align=&#34;rigth&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1706.03762&#34;&gt;Transformer-Based Models&lt;/a&gt;: Transformer-based framework for unsupervised representation learning of multivariate time series. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2106.13008&#34;&gt;Autoformer&lt;/a&gt;: Encoder-decoder model with decomposition capabilities and an approximation to attention based on Fourier transform.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2012.07436&#34;&gt;Informer&lt;/a&gt;: Transformer with MLP based multi-step prediction strategy, that approximates self-attention with sparsity.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;&#34;&gt;Transformer&lt;/a&gt;: Classical vanilla Transformer.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📃 License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the GPLv3 License - see the &lt;a href=&#34;https://github.com/Nixtla/neuralforecast/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; &#xA;&lt;h2&gt;🔨 How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/Nixtla/neuralforecast/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!--&#xA;## How to cite&#xA;&#xA;If you use `NeuralForecast` in a scientific publication, we encourage you to add&#xA;the following references to the related papers:&#xA;&#xA;&#xA;```bibtex&#xA;@article{neuralforecast_arxiv,&#xA;  author  = {XXXX},&#xA;  title   = {{NeuralForecast: Deep Learning for Time Series Forecasting}},&#xA;  journal = {arXiv preprint arXiv:XXX.XXX},&#xA;  year    = {2022}&#xA;}&#xA;```&#xA;---&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/FedericoGarza&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/10517170?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;fede&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/neuralforecast/commits?author=FedericoGarza&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/Nixtla/neuralforecast/issues?q=author%3AFedericoGarza&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt; &lt;a href=&#34;https://github.com/Nixtla/neuralforecast/commits?author=FedericoGarza&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/gdevos010&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/15316026?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Greg DeVos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/neuralforecast/main/#ideas-gdevos010&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/cchallu&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/31133398?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Cristian Challu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/neuralforecast/commits?author=cchallu&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mergenthaler&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4086186?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mergenthaler&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/neuralforecast/commits?author=mergenthaler&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://github.com/Nixtla/neuralforecast/commits?author=mergenthaler&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/kdgutier&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/19935241?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/neuralforecast/commits?author=kdgutier&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/Nixtla/neuralforecast/issues?q=author%3Akdgutier&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/neuralforecast/main/#data-kdgutier&#34; title=&#34;Data&#34;&gt;🔣&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jmoralez&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/8473587?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;José Morales&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/neuralforecast/commits?author=jmoralez&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alejandroxag&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/64334543?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alejandro&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/neuralforecast/commits?author=alejandroxag&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://lavattiata.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/48966177?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;stefanialvs&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Nixtla/neuralforecast/main/#design-stefanialvs&#34; title=&#34;Design&#34;&gt;🎨&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://bandism.net/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/22633385?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ikko Ashimine&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/neuralforecast/issues?q=author%3Aeltociear&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/vglaucus&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/75549033?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;vglaucus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/neuralforecast/issues?q=author%3Avglaucus&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/pitmonticone&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/38562595?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pietro Monticone&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Nixtla/neuralforecast/issues?q=author%3Apitmonticone&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</summary>
  </entry>
</feed>