<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-16T01:29:47Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ray-project/llm-applications</title>
    <updated>2023-09-16T01:29:47Z</updated>
    <id>tag:github.com,2023-09-16:/ray-project/llm-applications</id>
    <link href="https://github.com/ray-project/llm-applications" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A comprehensive guide to building RAG-based LLM applications for production.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LLM Applications&lt;/h1&gt; &#xA;&lt;p&gt;A comprehensive guide to building RAG-based LLM applications for production.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Blog post&lt;/strong&gt;: &lt;a href=&#34;https://www.anyscale.com/blog/a-comprehensive-guide-for-building-rag-based-llm-applications-part-1&#34;&gt;https://www.anyscale.com/blog/a-comprehensive-guide-for-building-rag-based-llm-applications-part-1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GitHub repository&lt;/strong&gt;: &lt;a href=&#34;https://github.com/ray-project/llm-applications&#34;&gt;https://github.com/ray-project/llm-applications&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Interactive notebook&lt;/strong&gt;: &lt;a href=&#34;https://github.com/ray-project/llm-applications/raw/main/notebooks/rag.ipynb&#34;&gt;https://github.com/ray-project/llm-applications/blob/main/notebooks/rag.ipynb&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Anyscale Endpoints&lt;/strong&gt;: &lt;a href=&#34;https://endpoints.anyscale.com/&#34;&gt;https://endpoints.anyscale.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ray documentation&lt;/strong&gt;: &lt;a href=&#34;https://docs.ray.io/&#34;&gt;https://docs.ray.io/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In this guide, we will learn how to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ðŸ’» Develop a retrieval augmented generation (RAG) based LLM application from scratch.&lt;/li&gt; &#xA; &lt;li&gt;ðŸš€ Scale the major components (load, chunk, embed, index, serve, etc.) in our application.&lt;/li&gt; &#xA; &lt;li&gt;âœ… Evaluate different configurations of our application to optimize for both per-component (ex. retrieval_score) and overall performance (quality_score).&lt;/li&gt; &#xA; &lt;li&gt;ðŸ”€ Implement LLM hyrbid routing approach to bridge the gap b/w OSS and closed LLMs.&lt;/li&gt; &#xA; &lt;li&gt;ðŸ“¦ Serve the application in a highly scalable and available manner.&lt;/li&gt; &#xA; &lt;li&gt;ðŸ’¥ Share the 1st order and 2nd order impacts LLM applications have had on our products.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;img width=&#34;800&#34; src=&#34;https://images.ctfassets.net/xjan103pcp94/7FWrvPPlIdz5fs8wQgxLFz/fdae368044275028f0544a3d252fcfe4/image15.png&#34;&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;h3&gt;API keys&lt;/h3&gt; &#xA;&lt;p&gt;We&#39;ll be using &lt;a href=&#34;https://platform.openai.com/docs/models/&#34;&gt;OpenAI&lt;/a&gt; to access ChatGPT models like &lt;code&gt;gpt-3.5-turbo&lt;/code&gt;, &lt;code&gt;gpt-4&lt;/code&gt;, etc. and &lt;a href=&#34;https://endpoints.anyscale.com/&#34;&gt;Anyscale Endpoints&lt;/a&gt; to access OSS LLMs like &lt;code&gt;Llama-2-70b&lt;/code&gt;. Be sure to create your accounts for both and have your credentials ready.&lt;/p&gt; &#xA;&lt;h3&gt;Compute&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Local&lt;/summary&gt; You could run this on your local laptop but a we highly recommend using a setup with access to GPUs. You can set this up on your own or on [Anyscale](http://anyscale.com/). &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;Anyscale&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Start a new &lt;a href=&#34;https://console.anyscale-staging.com/o/anyscale-internal/workspaces&#34;&gt;Anyscale workspace on staging&lt;/a&gt; using an &lt;a href=&#34;https://instances.vantage.sh/aws/ec2/g3.8xlarge&#34;&gt;&lt;code&gt;g3.8xlarge&lt;/code&gt;&lt;/a&gt; head node, which has 2 GPUs and 32 CPUs. We can also add GPU worker nodes to run the workloads faster. If you&#39;re not on Anyscale, you can configure a similar instance on your cloud.&lt;/li&gt; &#xA;  &lt;li&gt;Use the &lt;a href=&#34;https://docs.anyscale.com/reference/base-images/ray-262/py39#ray-2-6-2-py39&#34;&gt;&lt;code&gt;default_cluster_env_2.6.2_py39&lt;/code&gt;&lt;/a&gt; cluster environment.&lt;/li&gt; &#xA;  &lt;li&gt;Use the &lt;code&gt;us-west-2&lt;/code&gt; if you&#39;d like to use the artifacts in our shared storage (source docs, vector DB dumps, etc.).&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Repository&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/ray-project/llm-applications.git .&#xA;git config --global user.name &amp;lt;GITHUB-USERNAME&amp;gt;&#xA;git config --global user.email &amp;lt;EMAIL-ADDRESS&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Data&lt;/h3&gt; &#xA;&lt;p&gt;Our data is already ready at &lt;code&gt;/efs/shared_storage/goku/docs.ray.io/en/master/&lt;/code&gt; (on Staging, &lt;code&gt;us-east-1&lt;/code&gt;) but if you wanted to load it yourself, run this bash command (change &lt;code&gt;/desired/output/directory&lt;/code&gt;, but make sure it&#39;s on the shared storage, so that it&#39;s accessible to the workers)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/ray-project/llm-applications.git .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Environment&lt;/h3&gt; &#xA;&lt;p&gt;Then set up the environment correctly by specifying the values in your &lt;code&gt;.env&lt;/code&gt; file, and installing the dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install --user -r requirements.txt&#xA;export PYTHONPATH=$PYTHONPATH:$PWD&#xA;pre-commit install&#xA;pre-commit autoupdate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Credentials&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;touch .env&#xA;# Add environment variables to .env&#xA;OPENAI_API_BASE=&#34;https://api.openai.com/v1&#34;&#xA;OPENAI_API_KEY=&#34;&#34;  # https://platform.openai.com/account/api-keys&#xA;ANYSCALE_API_BASE=&#34;https://api.endpoints.anyscale.com/v1&#34;&#xA;ANYSCALE_API_KEY=&#34;&#34;  # https://app.endpoints.anyscale.com/credentials&#xA;DB_CONNECTION_STRING=&#34;dbname=postgres user=postgres host=localhost password=postgres&#34;&#xA;source .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now we&#39;re ready to go through the &lt;a href=&#34;https://raw.githubusercontent.com/ray-project/llm-applications/main/notebooks/rag.ipynb&#34;&gt;rag.ipynb&lt;/a&gt; interactive notebook to develop and serve our LLM application!&lt;/p&gt; &#xA;&lt;h3&gt;Learn more&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If your team is investing heavily in developing LLM applications, &lt;a href=&#34;mailto:endpoints-help@anyscale.com&#34;&gt;reach out&lt;/a&gt; to us to learn more about how &lt;a href=&#34;https://github.com/ray-project/ray&#34;&gt;Ray&lt;/a&gt; and &lt;a href=&#34;http://anyscale.com/&#34;&gt;Anyscale&lt;/a&gt; can help you scale and productionize everything.&lt;/li&gt; &#xA; &lt;li&gt;Start serving (+fine-tuning) OSS LLMs with &lt;a href=&#34;https://endpoints.anyscale.com/&#34;&gt;Anyscale Endpoints&lt;/a&gt; ($1/M tokens for &lt;code&gt;Llama-2-70b&lt;/code&gt;) and private endpoints available upon request (1M free tokens trial).&lt;/li&gt; &#xA; &lt;li&gt;Learn more about how companies like OpenAI, Netflix, Pinterest, Verizon, Instacart and others leverage Ray and Anyscale for their AI workloads at the &lt;a href=&#34;https://raysummit.anyscale.com/&#34;&gt;Ray Summit 2023&lt;/a&gt; this Sept 18-20 in San Francisco.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>