<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-26T01:33:15Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>giswqs/geospatial-data-catalogs</title>
    <updated>2022-12-26T01:33:15Z</updated>
    <id>tag:github.com,2022-12-26:/giswqs/geospatial-data-catalogs</id>
    <link href="https://github.com/giswqs/geospatial-data-catalogs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A list of open geospatial datasets available on AWS, Earth Engine, Planetary Computer, and STAC Index&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;geospatial-data-catalogs&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/giswqs/geospatial-data-catalogs/blob/master/examples.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Colab&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mybinder.org/v2/gh/giswqs/geospatial-data-catalogs/HEAD?labpath=examples.ipynb&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Some of the popular cloud-computing platforms (e.g., &lt;a href=&#34;https://aws.amazon.com/earth/&#34;&gt;AWS&lt;/a&gt;, &lt;a href=&#34;https://earthengine.google.com/&#34;&gt;Google Earth Engine&lt;/a&gt;, &lt;a href=&#34;https://planetarycomputer.microsoft.com/&#34;&gt;Microsoft Planetary Computer&lt;/a&gt;) host a lot of publicly available geospatial datasets. This repo compiles the list of all geospatial datasets on these platforms as a CSV file and as a JSON file, making it easier to find and use them programmatically. The list is updated daily.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;This repo provides the list of geospatial datasets in two formats:&lt;/p&gt; &#xA;&lt;h3&gt;Tab separated values (TSV) format&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AWS Open Data: &lt;a href=&#34;https://github.com/giswqs/geospatial-data-catalogs/raw/master/aws_open_datasets.tsv&#34;&gt;aws_open_datasets.tsv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AWS Open Geospatial Data: &lt;a href=&#34;https://github.com/giswqs/geospatial-data-catalogs/raw/master/aws_geo_datasets.tsv&#34;&gt;aws_geo_datasets.tsv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AWS Open Geospatial Data with STAC endpoint: &lt;a href=&#34;https://github.com/giswqs/geospatial-data-catalogs/raw/master/aws_stac_catalogs.tsv&#34;&gt;aws_stac_catalogs.tsv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;STAC Index Catalogs: &lt;a href=&#34;https://github.com/giswqs/geospatial-data-catalogs/raw/master/stac_catalogs.tsv&#34;&gt;stac_catalogs.tsv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Earth Engine Catalog: &lt;a href=&#34;https://github.com/giswqs/geospatial-data-catalogs/raw/master/gee_catalog.tsv&#34;&gt;gee_catalog.tsv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Planetary Computer Catalog: &lt;a href=&#34;https://github.com/giswqs/geospatial-data-catalogs/raw/master/pc_catalog.tsv&#34;&gt;pc_catalog.tsv&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;JSON format&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AWS Open Data: &lt;a href=&#34;https://github.com/giswqs/geospatial-data-catalogs/raw/master/aws_open_datasets.json&#34;&gt;aws_open_datasets.json&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AWS Open Geospatial Data: &lt;a href=&#34;https://github.com/giswqs/geospatial-data-catalogs/raw/master/aws_geo_datasets.json&#34;&gt;aws_geo_datasets.json&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AWS Open Geospatial Data with STAC endpoint: &lt;a href=&#34;https://github.com/giswqs/geospatial-data-catalogs/raw/master/aws_stac_catalogs.json&#34;&gt;aws_stac_catalogs.json&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;STAC Index Catalogs: &lt;a href=&#34;https://github.com/giswqs/geospatial-data-catalogs/raw/master/stac_catalogs.json&#34;&gt;stac_catalogs.json&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Earth Engine Catalog: &lt;a href=&#34;https://github.com/giswqs/geospatial-data-catalogs/raw/master/gee_catalog.json&#34;&gt;gee_catalog.json&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Planetary Computer Catalog: &lt;a href=&#34;https://github.com/giswqs/geospatial-data-catalogs/raw/master/pc_catalog.json&#34;&gt;pc_catalog.json&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;p&gt;The TSV file can be easily read into a Pandas DataFrame using the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd&#xA;&#xA;url = &#39;https://github.com/giswqs/geospatial-data-catalogs/raw/master/aws_geo_datasets.tsv&#39;&#xA;df = pd.read_csv(url, sep=&#39;\t&#39;)&#xA;df.head()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Related Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A list of open datasets on AWS: &lt;a href=&#34;https://github.com/giswqs/aws-open-data&#34;&gt;aws-open-data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;A list of open geospatial datasets on AWS: &lt;a href=&#34;https://github.com/giswqs/aws-open-data-geo&#34;&gt;aws-open-data-geo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;A list of open geospatial datasets on AWS with a STAC endpoint: &lt;a href=&#34;https://github.com/giswqs/aws-open-data-stac&#34;&gt;aws-open-data-stac&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;A list of STAC endpoints from stacindex.org: &lt;a href=&#34;https://github.com/giswqs/stac-index-catalogs&#34;&gt;stac-index-catalogs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;A list of geospatial datasets on Microsoft Planetary Computer: &lt;a href=&#34;https://github.com/giswqs/Planetary-Computer-Catalog&#34;&gt;Planetary-Computer-Catalog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;A list of geospatial datasets on Google Earth Engine: &lt;a href=&#34;https://github.com/giswqs/Earth-Engine-Catalog&#34;&gt;Earth-Engine-Catalog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;A list of geospatial data catalogs: &lt;a href=&#34;https://github.com/giswqs/geospatial-data-catalogs&#34;&gt;geospatial-data-catalogs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>jupyterlite/xeus-python-demo</title>
    <updated>2022-12-26T01:33:15Z</updated>
    <id>tag:github.com,2022-12-26:/jupyterlite/xeus-python-demo</id>
    <link href="https://github.com/jupyterlite/xeus-python-demo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;JupyterLite template repository with xeus-python as default kernel&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;xeus-python + JupyterLite demo&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://jupyterlite.github.io/xeus-python-demo/retro/notebooks/?path=demo.ipynb&#34;&gt;&lt;img src=&#34;https://jupyterlite.rtfd.io/en/latest/_static/badge.svg?sanitize=true&#34; alt=&#34;lite-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;xeus-python + JupyterLite deployed as a static site to GitHub Pages, for demo purposes.&lt;/p&gt; &#xA;&lt;h2&gt;âœ¨ Try it in your browser âœ¨&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://jupyterlite.github.io/xeus-python-demo/retro/notebooks/?path=demo.ipynb&#34;&gt;https://jupyterlite.github.io/xeus-python-demo/retro/notebooks/?path=demo.ipynb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;â‰  How does it compare to the Pyodide kernel?&lt;/h2&gt; &#xA;&lt;h4&gt;Pyodide kernel:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Is based on &lt;a href=&#34;https://github.com/pyodide/pyodide&#34;&gt;Pyodide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Uses &lt;a href=&#34;https://github.com/ipython/ipython&#34;&gt;IPython&lt;/a&gt; for the code execution (access to IPython magics, support for the inline Matplotlib backend, &lt;em&gt;etc&lt;/em&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Provides a way to dynamically install packages with &lt;code&gt;piplite&lt;/code&gt; (&lt;strong&gt;e.g.&lt;/strong&gt; &lt;code&gt;await piplite.install(&#34;ipywidgets&#34;)&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Does not support&lt;/strong&gt; sleeping with &lt;code&gt;from time import sleep&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Does not support&lt;/strong&gt; pre-installing packages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;jupyterlite-xeus-python:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Is based on &lt;a href=&#34;https://github.com/jupyter-xeus/xeus-python&#34;&gt;xeus-python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Uses &lt;a href=&#34;https://github.com/ipython/ipython&#34;&gt;IPython&lt;/a&gt; for the code execution (access to IPython magics, support for the inline Matplotlib backend, &lt;em&gt;etc&lt;/em&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Does not provide&lt;/strong&gt; a way to dynamically install packages (yet. We are working on building a &lt;code&gt;mamba&lt;/code&gt; package manager for WASM)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Supports&lt;/strong&gt; sleeping with &lt;code&gt;from time import sleep&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Supports&lt;/strong&gt; pre-installing packages from &lt;code&gt;emscripten-forge&lt;/code&gt; and &lt;code&gt;conda-forge&lt;/code&gt;, by providing an &lt;code&gt;environment.yml&lt;/code&gt; file defining the runtime environment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ðŸ’¡ How to make your own deployment&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jupyterlite/xeus-python-demo/main/deploy.gif&#34; alt=&#34;Deploy your own&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then your site will be published under https://{USERNAME}.github.io/{DEMO_REPO_NAME}&lt;/p&gt; &#xA;&lt;h2&gt;ðŸ“¦ How to install extra packages&lt;/h2&gt; &#xA;&lt;p&gt;You can pre-install extra packages for xeus-python by adding them to the &lt;code&gt;environment.yml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Only &lt;code&gt;no-arch&lt;/code&gt; packages from &lt;code&gt;conda-forge&lt;/code&gt; and packages from &lt;code&gt;emscripten-forge&lt;/code&gt; can be installed.&lt;/p&gt; &#xA;&lt;p&gt;For example, if you want to create a JupyterLite deployment with NumPy and Matplotlib pre-installed, you would need to edit the &lt;code&gt;environment.yml&lt;/code&gt; file as following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;name: xeus-python-kernel&#xA;channels:&#xA;  - https://repo.mamba.pm/emscripten-forge&#xA;  - https://repo.mamba.pm/conda-forge&#xA;dependencies:&#xA;  - numpy&#xA;  - matplotlib&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>