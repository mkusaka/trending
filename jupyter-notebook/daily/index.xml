<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-17T01:33:52Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>NisaarAgharia/AI-Shorts-Creator</title>
    <updated>2023-09-17T01:33:52Z</updated>
    <id>tag:github.com,2023-09-17:/NisaarAgharia/AI-Shorts-Creator</id>
    <link href="https://github.com/NisaarAgharia/AI-Shorts-Creator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AI-Video-Cropper is a Python-based tool that leverages the power of GPT-4 (OpenAI&#39;s language model) to automatically analyze videos, extract the most interesting sections, and crop them for improved viewing experience. This project combines the capabilities of GPT-4, FFmpeg, and OpenCV to automate the process of identifying highlights in videos&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#AI-Shorts-Creator! üé•‚úÇÔ∏è (WIP, You Might face some Bugs)&lt;/p&gt; &#xA;&lt;p&gt;AI-Shorts-Creator is a powerful tool designed for content creators, podcasters, and video enthusiasts to effortlessly extract captivating segments from their videos. Leveraging the advanced language model GPT-4, this innovative solution intelligently analyzes video transcripts to identify the most viral and exciting moments. By harnessing the capabilities of FFmpeg and OpenCV, AI-Shorts-Creator automatically crops videos, allowing you to focus on the key highlights and provide an enhanced viewing experience.&lt;/p&gt; &#xA;&lt;h2&gt;AI-Shorts-Creator is a powerful tool designed to:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatically extract captivating segments from videos.&lt;/li&gt; &#xA; &lt;li&gt;Identify the most viral and exciting moments using GPT-4.&lt;/li&gt; &#xA; &lt;li&gt;Crop videos to emphasize key highlights with precise face detection.&lt;/li&gt; &#xA; &lt;li&gt;Streamline video editing and save time by eliminating manual searching.&lt;/li&gt; &#xA; &lt;li&gt;Work seamlessly with various video formats for maximum compatibility.&lt;/li&gt; &#xA; &lt;li&gt;Enhance the viewing experience for your audience with perfectly cropped highlights.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples:&lt;/h2&gt; &#xA;&lt;p&gt;Source Video : &lt;a href=&#34;https://www.youtube.com/watch?v=NHaczOsMQ20&#34;&gt;https://www.youtube.com/watch?v=NHaczOsMQ20&lt;/a&gt; &lt;img src=&#34;https://github.com/NisaarAgharia/AI-Video-Cropper/assets/22457544/7dbf9b92-2a08-4948-bb49-e41350ae4a02&#34; alt=&#34;thumbnail&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Output Shorts:&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/NisaarAgharia/AI-Video-Cropper/assets/22457544/81b0759b-7cc9-4622-9440-3ccf9400ede2&#34; alt=&#34;Demo GIF 1&#34; width=&#34;280&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/NisaarAgharia/AI-Video-Cropper/assets/22457544/f3ea6e7d-f999-4597-87fc-0166c1be7840&#34; alt=&#34;Demo GIF 2&#34; width=&#34;280&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/NisaarAgharia/AI-Video-Cropper/assets/22457544/8aeeb666-cff0-493a-8a9a-18780badd79f&#34; alt=&#34;Demo GIF 3&#34; width=&#34;280&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/NisaarAgharia/AI-Shorts-Creator/assets/22457544/318c8cf1-bcc3-4ed7-a979-7af17e545e6e&#34;&gt;https://github.com/NisaarAgharia/AI-Shorts-Creator/assets/22457544/318c8cf1-bcc3-4ed7-a979-7af17e545e6e&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Get started with AI-Shorts-Creator today and unlock the potential of your videos like never before!&lt;/p&gt; &#xA;&lt;p&gt;Requirements&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.x&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pytube&lt;/code&gt; library (install with &lt;code&gt;pip install pytube&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;opencv-python&lt;/code&gt; library (install with &lt;code&gt;pip install opencv-python&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;openai&lt;/code&gt; library (install with &lt;code&gt;pip install openai&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;youtube-transcript-api&lt;/code&gt; library (install with &lt;code&gt;pip install youtube-transcript-api&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;FFmpeg (install according to your operating system)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the required libraries by running the following command:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Install FFmpeg by following the installation instructions for your operating system. Make sure the &lt;code&gt;ffmpeg&lt;/code&gt; command is accessible from the command line.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set up your OpenAI API key by replacing &lt;code&gt;openai.api_key = &#39;&#39;&lt;/code&gt; with your actual OpenAI API key.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Modify the &lt;code&gt;video_id&lt;/code&gt; variable in the &lt;code&gt;main()&lt;/code&gt; function to specify the YouTube video you want to process.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the script:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python auto_cropper.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The script will download the YouTube video, analyze its transcript using OpenAI&#39;s GPT-4, extract the best sections based on the analysis, crop the video using FFmpeg, and apply face detection using OpenCV to further refine the cropping.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Information&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;download_video(url, filename)&lt;/code&gt; function downloads a YouTube video by providing the URL and specifying the filename.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;segment_video(response)&lt;/code&gt; function segments the video into interesting sections based on a transcript analysis using OpenAI&#39;s GPT-4 model.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;detect_faces(video_file)&lt;/code&gt; function uses face detection to identify faces in a video file.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;crop_video(faces, input_file, output_file)&lt;/code&gt; function crops the video around the detected faces using FFmpeg.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;is_talking_in_batch(frames)&lt;/code&gt; function analyzes the lip movement or facial muscle activity within a batch of frames to determine if talking behavior is present.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;adjust_focus(frame, talking)&lt;/code&gt; function applies visual effects or adjustments to emphasize the speaker in the frame.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please note that the GPT-4 model and transcript analysis functionality in the provided code are simulated and not fully functional. You would need a valid OpenAI API key and a working GPT-4 model to perform transcript analysis.&lt;/p&gt;</summary>
  </entry>
</feed>