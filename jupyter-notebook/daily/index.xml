<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-17T01:44:52Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>microsoft/AutoBrewML</title>
    <updated>2022-07-17T01:44:52Z</updated>
    <id>tag:github.com,2022-07-17:/microsoft/AutoBrewML</id>
    <link href="https://github.com/microsoft/AutoBrewML" rel="alternate"></link>
    <summary type="html">&lt;p&gt;With AutoBrewML Framework the time it takes to get production-ready ML models with great ease and efficiency highly accelerates.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/41840390/179023586-9c017fe4-d909-462a-a1e0-ad92ad24c5f7.png&#34; alt=&#34;image&#34;&gt; Traditional machine learning model development is resource-intensive, requiring significant domain/statistical knowledge and time to produce and compare dozens of models. With automated machine learning, the time it takes to get production-ready ML models with great ease and efficiency highly accelerates. However, the Automated Machine Learning does not yet provide much in terms of data preparation and feature engineering. The AutoBrewML framework tries to solve this problem at scale as well as simplifies the overall process for the user. It leverages the Azure Automated ML coupled with components like Data Profiler, Data Sampler, Data Cleanser, Anomaly Detector which ensures quality data as a critical pre-step for building the ML model. This is powered with Telemetry, DevOps and Power BI integration, thus providing the users with a one-stop shop solution to productionize any ML model. The framework aims at ‘Democratizing’ AI all the while maintaining the vision of ‘Responsible’ AI. &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/41840390/179023870-d12f00aa-0524-4acf-9dd9-c5a360753d37.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Our Inspiration Story&lt;/h2&gt; &#xA;&lt;p&gt;As we think about the future of technology, it resides in the notion of intelligence. At Microsoft, we have an approach that’s both ambitious and broad, an approach that seeks to Democratize Machine Learning &amp;amp; Artificial Intelligence, to take it from the high walls of ivory towers and make it accessible for all.&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt;It is very rightly said that if you want something you never had, you have to do something you have never done! When we started on our ML journey we hoped to have a hand-holding which could accelerate our sail across the extensive nature of ML. We were stuck in the vicious loop of finding right algorithms and tools to achieve our target rather than focusing on the data at hand and fine tuning it with our Business Domain knowledge. Also traditional machine learning model development is resource-intensive, requiring significant domain/statistical knowledge and time to produce and compare dozens of models. A team comprises of folks from various backgrounds and ML knowledge base, but driven by our mission at Microsoft &#39;To empower every person and every organization on the planet to achieve more&#39; we want to open ways for each and everyone to have access over the wonders of ML &amp;amp; AI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt;So by amalgamating all our pain points and covering the aspects of an end-to-end ML pipeline we came up with a Framework to get production-ready ML models with great ease and efficiency.&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt;How we pursue this bold ambition to democratize AI for all via this Framework:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Implement machine learning solutions without extensive programming knowledge&lt;/li&gt; &#xA; &lt;li&gt;Find the right dataset for modelling&lt;/li&gt; &#xA; &lt;li&gt;Save time and resources&lt;/li&gt; &#xA; &lt;li&gt;Leverage Data Science best practices &amp;amp; Responsible AI&lt;/li&gt; &#xA; &lt;li&gt;Provide agile problem-solving&lt;/li&gt; &#xA; &lt;li&gt;Provide visualizations to interpret data&lt;/li&gt; &#xA; &lt;li&gt;Capture telemetry throughout the process&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Azure Databricks&lt;/li&gt; &#xA; &lt;li&gt;Auto Brew ML Notebooks &lt;strong&gt;(Master, Trigger notebooks)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Azure ML Services workspace&lt;/li&gt; &#xA; &lt;li&gt;Python cluster in Databricks with configurations as mentioned in Installations link above (PyPi library azureml-sdk[automl],azureml-opendatasets, azureml-widgets in cluster)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to use it&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;AMLMasterNotebook: Contains all the base functions used Data Acquisition, EDA, Sampling, Cleansing, Anomaly Detection, Azure AutoML Trigger, AutoML Trigger bypassing authentication to Azure ML(used for pipelining the notebook).&lt;/li&gt; &#xA; &lt;li&gt;AMLMasterNotebook_Trigger: Function calls in order to perform a pipeline of tasks. &lt;br&gt;go to- &lt;a href=&#34;https://github.com/microsoft/AutoBrewML/tree/main/Notebooks/Supervised%20Machine%20Learning&#34;&gt;Supervised Learning Notebooks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For Text Analytics go to- &lt;a href=&#34;https://github.com/microsoft/AutoBrewML/tree/main/Notebooks/Text%20Analytics&#34;&gt;Text Analytics Notebooks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For sample notebook run go to- &lt;a href=&#34;https://github.com/microsoft/AutoBrewML/wiki/Sample-Runs&#34;&gt;Sample Runs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://cla.opensource.microsoft.com/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com?&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: To know in detail of the workings of Auto Brew ML Framework, please visit &lt;a href=&#34;https://github.com/microsoft/AutoBrewML/wiki&#34;&gt;Auto Brew ML WiKi&lt;/a&gt;.&lt;/em&gt; Copyright (c) Microsoft Corporation &lt;br&gt;Licensed under the MIT License&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ageron/handson-ml</title>
    <updated>2022-07-17T01:44:52Z</updated>
    <id>tag:github.com,2022-07-17:/ageron/handson-ml</id>
    <link href="https://github.com/ageron/handson-ml" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A series of Jupyter notebooks that walk you through the fundamentals of Machine Learning and Deep Learning in python using Scikit-Learn and TensorFlow.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Machine Learning Notebooks&lt;/h1&gt; &#xA;&lt;p&gt;This project aims at teaching you the fundamentals of Machine Learning in python. It contains the example code and solutions to the exercises in my O&#39;Reilly book &lt;a href=&#34;https://learning.oreilly.com/library/view/hands-on-machine-learning/9781491962282/&#34;&gt;Hands-on Machine Learning with Scikit-Learn and TensorFlow&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://learning.oreilly.com/library/view/hands-on-machine-learning/9781491962282/&#34;&gt;&lt;img src=&#34;http://akamaicovers.oreilly.com/images/9781491962282/cat.gif&#34; alt=&#34;book&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: there is now a newer edition of this book, please check out &lt;a href=&#34;https://github.com/ageron/handson-ml2&#34;&gt;github.com/ageron/handson-ml2&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;Want to play with these notebooks online without having to install anything?&lt;/h3&gt; &#xA;&lt;p&gt;Use any of the following services.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: Please be aware that these services provide temporary environments: anything you do will be deleted after a while, so make sure you download any data you care about.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Recommended&lt;/strong&gt;: open this repository in &lt;a href=&#34;https://colab.research.google.com/github/ageron/handson-ml/blob/master/&#34;&gt;Colaboratory&lt;/a&gt;: &lt;a href=&#34;https://colab.research.google.com/github/ageron/handson-ml/blob/master/&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/img/colab_favicon.ico&#34; width=&#34;90&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Or open it in &lt;a href=&#34;https://mybinder.org/v2/gh/ageron/handson-ml/master&#34;&gt;Binder&lt;/a&gt;: &lt;a href=&#34;https://mybinder.org/v2/gh/ageron/handson-ml/master&#34;&gt;&lt;img src=&#34;https://matthiasbussonnier.com/posts/img/binder_logo_128x128.png&#34; width=&#34;90&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Note&lt;/em&gt;: Most of the time, Binder starts up quickly and works great, but when handson-ml is updated, Binder creates a new environment from scratch, and this can take quite some time.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Or open it in &lt;a href=&#34;https://beta.deepnote.com/launch?template=data-science&amp;amp;url=https%3A//github.com/ageron/handson-ml/blob/master/index.ipynb&#34;&gt;Deepnote&lt;/a&gt;: &lt;a href=&#34;https://beta.deepnote.com/launch?template=data-science&amp;amp;url=https%3A//github.com/ageron/handson-ml/blob/master/index.ipynb&#34;&gt;&lt;img src=&#34;https://www.deepnote.com/static/illustration.png&#34; width=&#34;150&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Just want to quickly look at some notebooks, without executing any code?&lt;/h3&gt; &#xA;&lt;p&gt;Browse this repository using &lt;a href=&#34;https://nbviewer.jupyter.org/github/ageron/handson-ml/blob/master/index.ipynb&#34;&gt;jupyter.org&#39;s notebook viewer&lt;/a&gt;: &lt;a href=&#34;https://nbviewer.jupyter.org/github/ageron/handson-ml/blob/master/index.ipynb&#34;&gt;&lt;img src=&#34;https://jupyter.org/assets/nav_logo.svg?sanitize=true&#34; width=&#34;150&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/ageron/handson-ml/master/index.ipynb&#34;&gt;github.com&#39;s notebook viewer&lt;/a&gt; also works but it is slower and the math equations are not always displayed correctly.&lt;/p&gt; &#xA;&lt;h3&gt;Want to run this project using a Docker image?&lt;/h3&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://github.com/ageron/handson-ml/tree/master/docker&#34;&gt;Docker instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Want to install this project on your own machine?&lt;/h3&gt; &#xA;&lt;p&gt;Start by installing &lt;a href=&#34;https://www.anaconda.com/distribution/&#34;&gt;Anaconda&lt;/a&gt; (or &lt;a href=&#34;https://docs.conda.io/en/latest/miniconda.html&#34;&gt;Miniconda&lt;/a&gt;), &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;git&lt;/a&gt;, and if you have a TensorFlow-compatible GPU, install the &lt;a href=&#34;https://www.nvidia.com/Download/index.aspx&#34;&gt;GPU driver&lt;/a&gt;, as well as the appropriate version of CUDA and cuDNN (see TensorFlow&#39;s documentation for more details).&lt;/p&gt; &#xA;&lt;p&gt;Next, clone this project by opening a terminal and typing the following commands (do not type the first &lt;code&gt;$&lt;/code&gt; signs on each line, they just indicate that these are terminal commands):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/ageron/handson-ml.git&#xA;$ cd handson-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ conda env create -f environment.yml&#xA;$ conda activate tf1&#xA;$ python -m ipykernel install --user --name=python3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, start Jupyter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ jupyter notebook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need further instructions, read the &lt;a href=&#34;https://raw.githubusercontent.com/ageron/handson-ml/master/INSTALL.md&#34;&gt;detailed installation instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Which Python version should I use?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;I recommend Python 3.7. If you follow the installation instructions above, that&#39;s the version you will get. Most code will work with other versions of Python 3, but some libraries do not support Python 3.8 or 3.9 yet, which is why I recommend Python 3.7.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;I&#39;m getting an error when I call &lt;code&gt;load_housing_data()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Make sure you call &lt;code&gt;fetch_housing_data()&lt;/code&gt; &lt;em&gt;before&lt;/em&gt; you call &lt;code&gt;load_housing_data()&lt;/code&gt;. If you&#39;re getting an HTTP error, make sure you&#39;re running the exact same code as in the notebook (copy/paste it if needed). If the problem persists, please check your network configuration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;I&#39;m getting an SSL error on MacOSX&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You probably need to install the SSL certificates (see this &lt;a href=&#34;https://stackoverflow.com/questions/27835619/urllib-and-ssl-certificate-verify-failed-error&#34;&gt;StackOverflow question&lt;/a&gt;). If you downloaded Python from the official website, then run &lt;code&gt;/Applications/Python\ 3.7/Install\ Certificates.command&lt;/code&gt; in a terminal (change &lt;code&gt;3.7&lt;/code&gt; to whatever version you installed). If you installed Python using MacPorts, run &lt;code&gt;sudo port install curl-ca-bundle&lt;/code&gt; in a terminal.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;I&#39;ve installed this project locally. How do I update it to the latest version?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/ageron/handson-ml/master/INSTALL.md&#34;&gt;INSTALL.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How do I update my Python libraries to the latest versions, when using Anaconda?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/ageron/handson-ml/master/INSTALL.md&#34;&gt;INSTALL.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;I would like to thank everyone &lt;a href=&#34;https://github.com/ageron/handson-ml/graphs/contributors&#34;&gt;who contributed to this project&lt;/a&gt;, either by providing useful feedback, filing issues or submitting Pull Requests. Special thanks go to Haesun Park and Ian Beauregard who reviewed every notebook and submitted many PRs, including help on some of the exercise solutions. Thanks as well to Steven Bunkley and Ziembla who created the &lt;code&gt;docker&lt;/code&gt; directory, and to github user SuperYorio who helped on some exercise solutions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MorvanZhou/PyTorch-Tutorial</title>
    <updated>2022-07-17T01:44:52Z</updated>
    <id>tag:github.com,2022-07-17:/MorvanZhou/PyTorch-Tutorial</id>
    <link href="https://github.com/MorvanZhou/PyTorch-Tutorial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build your neural network easy and fast, 莫烦Python中文教学&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;http://pytorch.org/&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;40%&#34; src=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/logo.png&#34; style=&#34;max-width:100%;&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;If you&#39;d like to use &lt;strong&gt;Tensorflow&lt;/strong&gt;, no worries, I made a new &lt;strong&gt;Tensorflow Tutorial&lt;/strong&gt; just like PyTorch. Here is the link: &lt;a href=&#34;https://github.com/MorvanZhou/Tensorflow-Tutorial&#34;&gt;https://github.com/MorvanZhou/Tensorflow-Tutorial&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h1&gt;pyTorch Tutorials&lt;/h1&gt; &#xA;&lt;p&gt;In these tutorials for pyTorch, we will build our first Neural Network and try to build some advanced Neural Network architectures developed recent years.&lt;/p&gt; &#xA;&lt;p&gt;Thanks for &lt;a href=&#34;https://github.com/liufuyang&#34;&gt;liufuyang&#39;s&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents-notebooks&#34;&gt;&lt;strong&gt;notebook files&lt;/strong&gt;&lt;/a&gt; which is a great contribution to this tutorial.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;pyTorch basic &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/201_torch_numpy.py&#34;&gt;torch and numpy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/202_variable.py&#34;&gt;Variable&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/203_activation.py&#34;&gt;Activation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Build your first network &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/301_regression.py&#34;&gt;Regression&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/302_classification.py&#34;&gt;Classification&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/303_build_nn_quickly.py&#34;&gt;An easy way&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/304_save_reload.py&#34;&gt;Save and reload&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/305_batch_train.py&#34;&gt;Train on batch&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/306_optimizer.py&#34;&gt;Optimizers&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Advanced neural network &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/401_CNN.py&#34;&gt;CNN&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/402_RNN_classifier.py&#34;&gt;RNN-Classification&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/403_RNN_regressor.py&#34;&gt;RNN-Regression&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/404_autoencoder.py&#34;&gt;AutoEncoder&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/405_DQN_Reinforcement_learning.py&#34;&gt;DQN Reinforcement Learning&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/MorvanZhou/pytorch-A3C&#34;&gt;A3C Reinforcement Learning&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/406_GAN.py&#34;&gt;GAN (Generative Adversarial Nets)&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/406_conditional_GAN.py&#34;&gt;Conditional GAN&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Others (WIP) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/501_why_torch_dynamic_graph.py&#34;&gt;Why torch dynamic&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/502_GPU.py&#34;&gt;Train on GPU&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/503_dropout.py&#34;&gt;Dropout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/504_batch_normalization.py&#34;&gt;Batch Normalization&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Chinese speakers: All methods mentioned below have their video and text tutorial in Chinese. Visit &lt;a href=&#34;https://mofanpy.com/tutorials/&#34;&gt;莫烦 Python&lt;/a&gt; for more. You can watch my &lt;a href=&#34;https://www.youtube.com/channel/UCdyjiB5H8Pu7aDTNVXTTpcg&#34;&gt;Youtube channel&lt;/a&gt; as well.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/301_regression.py&#34;&gt;Regression&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/301_regression.py&#34;&gt; &lt;img class=&#34;course-image&#34; src=&#34;https://mofanpy.com/static/results/torch/1-1-2.gif&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/302_classification.py&#34;&gt;Classification&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/302_classification.py&#34;&gt; &lt;img class=&#34;course-image&#34; src=&#34;https://mofanpy.com/static/results/torch/1-1-3.gif&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/401_CNN.py&#34;&gt;CNN&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/401_CNN.py&#34;&gt; &lt;img class=&#34;course-image&#34; src=&#34;https://mofanpy.com/static/results/torch/4-1-2.gif&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/403_RNN_regressor.py&#34;&gt;RNN&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/403_RNN_regressor.py&#34;&gt; &lt;img class=&#34;course-image&#34; src=&#34;https://mofanpy.com/static/results/torch/4-3-1.gif&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/404_autoencoder.py&#34;&gt;Autoencoder&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/403_RNN_regressor.py&#34;&gt; &lt;img class=&#34;course-image&#34; src=&#34;https://mofanpy.com/static/results/torch/4-4-1.gif&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/403_RNN_regressor.py&#34;&gt; &lt;img class=&#34;course-image&#34; src=&#34;https://mofanpy.com/static/results/torch/4-4-2.gif&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/406_GAN.py&#34;&gt;GAN (Generative Adversarial Nets)&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/406_GAN.py&#34;&gt; &lt;img class=&#34;course-image&#34; src=&#34;https://mofanpy.com/static/results/torch/4-6-1.gif&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/503_dropout.py&#34;&gt;Dropout&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/503_dropout.py&#34;&gt; &lt;img class=&#34;course-image&#34; src=&#34;https://mofanpy.com/static/results/torch/5-3-1.gif&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/504_batch_normalization.py&#34;&gt;Batch Normalization&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/MorvanZhou/PyTorch-Tutorial/master/tutorial-contents/504_batch_normalization.py&#34;&gt; &lt;img class=&#34;course-image&#34; src=&#34;https://mofanpy.com/static/results/torch/5-4-2.gif&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;Donation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;If this does help you, please consider donating to support me for better tutorials. Any contribution is greatly appreciated!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=morvanzhou%40gmail%2ecom&amp;amp;lc=C2&amp;amp;item_name=MorvanPython&amp;amp;currency_code=AUD&amp;amp;bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted&#34;&gt; &lt;img style=&#34;border-radius: 20px;  box-shadow: 0px 0px 10px 1px  #888888;&#34; src=&#34;https://www.paypalobjects.com/webstatic/en_US/i/btn/png/silver-pill-paypal-44px.png&#34; alt=&#34;Paypal&#34; height=&#34;auto&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;div&gt; &#xA; &lt;a href=&#34;https://www.patreon.com/morvan&#34;&gt; &lt;img src=&#34;https://mofanpy.com/static/img/support/patreon.jpg&#34; alt=&#34;Patreon&#34; height=&#34;120&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
</feed>