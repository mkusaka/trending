<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-01T01:41:55Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>truera/trulens</title>
    <updated>2023-12-01T01:41:55Z</updated>
    <id>tag:github.com,2023-12-01:/truera/trulens</id>
    <link href="https://github.com/truera/trulens" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Evaluation and Tracking for LLM Experiments&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/trulens_eval?label=trulens_eval&amp;amp;link=https%3A%2F%2Fpypi.org%2Fproject%2Ftrulens-eval%2F&#34; alt=&#34;PyPI - Version&#34;&gt; &lt;img src=&#34;https://img.shields.io/azure-devops/build/truera/5a27f3d2-132d-40fc-9b0c-81abd1182f41/9&#34; alt=&#34;Azure DevOps builds (job)&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/truera/trulens&#34; alt=&#34;GitHub&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/dm/trulens_eval&#34; alt=&#34;PyPI - Downloads&#34;&gt; &lt;a href=&#34;https://communityinviter.com/apps/aiqualityforum/josh&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join-green?logo=slack&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.trulens.org/welcome/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-trulens.org-blue&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://colab.research.google.com/github/truera/trulens/blob/releases/rc-trulens-eval-0.17.0/trulens_eval/examples/quickstart/colab/langchain_quickstart_colab.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ü¶ë &lt;strong&gt;Welcome to TruLens!&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;p&gt;TruLens provides a set of tools for developing and monitoring neural nets, including large language models. This includes both tools for evaluation of LLMs and LLM-based applications with &lt;em&gt;TruLens-Eval&lt;/em&gt; and deep learning explainability with &lt;em&gt;TruLens-Explain&lt;/em&gt;. &lt;em&gt;TruLens-Eval&lt;/em&gt; and &lt;em&gt;TruLens-Explain&lt;/em&gt; are housed in separate packages and can be used independently.&lt;/p&gt; &#xA;&lt;p&gt;The best way to support TruLens is to give us a ‚≠ê on &lt;a href=&#34;https://www.github.com/truera/trulens&#34;&gt;GitHub&lt;/a&gt; and join our &lt;a href=&#34;https://communityinviter.com/apps/aiqualityforum/josh&#34;&gt;slack community&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://www.trulens.org/assets/images/Neural_Network_Explainability.png&#34; alt=&#34;TruLens&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;TruLens-Eval&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Don&#39;t just vibe-check your llm app!&lt;/strong&gt; Systematically evaluate and track your LLM experiments with TruLens. As you develop your app including prompts, models, retreivers, knowledge sources and more, TruLens-Eval is the tool you need to understand its performance.&lt;/p&gt; &#xA;&lt;p&gt;Fine-grained, stack-agnostic instrumentation and comprehensive evaluations help you to identify failure modes &amp;amp; systematically iterate to improve your application.&lt;/p&gt; &#xA;&lt;p&gt;Read more about the core concepts behind TruLens including &lt;a href=&#34;https://raw.githubusercontent.com/truera/trulens/main/trulens_eval/core_concepts_feedback_functions.md&#34;&gt;Feedback Functions&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/truera/trulens/main/core_concepts_rag_triad.md&#34;&gt;The RAG Triad&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/truera/trulens/main/core_concepts_honest_harmless_helpful_evals.md&#34;&gt;Honest, Harmless and Helpful Evals&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;TruLens in the development workflow&lt;/h2&gt; &#xA;&lt;p&gt;Build your first prototype then connect instrumentation and logging with TruLens. Decide what feedbacks you need, and specify them with TruLens to run alongside your app. Then iterate and compare versions of your app in an easy-to-use user interface üëá&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://www.trulens.org/assets/images/TruLens_Architecture.png&#34; alt=&#34;Architecture Diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installation and Setup&lt;/h3&gt; &#xA;&lt;p&gt;Install the trulens-eval pip package from PyPI.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;    pip install trulens-eval&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Quick Usage&lt;/h3&gt; &#xA;&lt;p&gt;Walk through how to instrument and evaluate a RAG built from scratch with TruLens.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/truera/trulens/blob/main/trulens_eval/examples/quickstart/quickstart.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;üí° Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Interested in contributing? See our &lt;a href=&#34;https://github.com/truera/trulens/tree/main/trulens_eval/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;TruLens-Explain&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;TruLens-Explain&lt;/strong&gt; is a cross-framework library for deep learning explainability. It provides a uniform abstraction over a number of different frameworks. It provides a uniform abstraction layer over TensorFlow, Pytorch, and Keras and allows input and internal explanations.&lt;/p&gt; &#xA;&lt;h3&gt;Installation and Setup&lt;/h3&gt; &#xA;&lt;p&gt;These installation instructions assume that you have conda installed and added to your path.&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;Create a virtual environment (or modify an existing one).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create -n &#34;&amp;lt;my_name&amp;gt;&#34; python=3  # Skip if using existing environment.&#xA;conda activate &amp;lt;my_name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install dependencies.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda install tensorflow-gpu=1  # Or whatever backend you&#39;re using.&#xA;conda install keras             # Or whatever backend you&#39;re using.&#xA;conda install matplotlib        # For visualizations.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;[Pip installation] Install the trulens pip package from PyPI.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install trulens&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Quick Usage&lt;/h3&gt; &#xA;&lt;p&gt;To quickly play around with the TruLens library, check out the following Colab notebooks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PyTorch: &lt;a href=&#34;https://colab.research.google.com/drive/1n77IGrPDO2XpeIVo_LQW0gY78enV-tY9?usp=sharing&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;TensorFlow 2 / Keras: &lt;a href=&#34;https://colab.research.google.com/drive/1f-ETsdlppODJGQCdMXG-jmGmfyWyW2VD?usp=sharing&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more information, see &lt;a href=&#34;https://www.trulens.org/trulens_explain/quickstart/&#34;&gt;TruLens-Explain Documentation&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>