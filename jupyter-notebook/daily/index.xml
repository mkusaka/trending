<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-26T01:38:31Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>garimasingh128/awesome-python-projects</title>
    <updated>2023-03-26T01:38:31Z</updated>
    <id>tag:github.com,2023-03-26:/garimasingh128/awesome-python-projects</id>
    <link href="https://github.com/garimasingh128/awesome-python-projects" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üì± ‚úÖ Some awesome projects in python! üì± ‚úÖ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üë£ &lt;strong&gt;Awesome python projects&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;h3&gt;üßê A collection of super-cool Python projects for starters!! ‚ú®&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/author-garimasingh128-orange&#34; alt=&#34;Author&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/author-mrinal41298-orange&#34; alt=&#34;Author&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-MIT-brightgreen&#34; alt=&#34;License&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/platform-Visual%20Studio%20Code-blue&#34; alt=&#34;Platform&#34;&gt; &lt;img src=&#34;https://img.shields.io/maintenance/yes/2020&#34; alt=&#34;Maintained&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/garimasingh128/awesome-python-projects&#34; alt=&#34;Last Commit&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release-date/garimasingh128/awesome-python-projects&#34; alt=&#34;Release Date&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/garimasingh128/awesome-python-projects&#34; alt=&#34;Issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/garimasingh128/awesome-python-projects&#34; alt=&#34;Stars GitHub&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/languages/top/garimasingh128/awesome-python-projects&#34; alt=&#34;Language&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/repo-size/garimasingh128/awesome-python-projects&#34; alt=&#34;Size&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;This project was a part of #Build with LetsUpgrade 2020 üë£&lt;/h1&gt; &#xA;&lt;p&gt;OPEN SOURCE CONTEST - Build with LetsUpgrade 2020&lt;/p&gt; &#xA;&lt;h3&gt;About Build with LetsUpgrade 2020 üíª&lt;/h3&gt; &#xA;&lt;p&gt;Build with LetsUpgrade is a 2 month-long program conducted by LetsUpgrade with aim to help beginners get started with Open Source Development. Students are paired with mentors, helping to gain exposure to real-world software development and techniques. The organizations are able to identify and bring in new developers and continue to contribute to open source after end also.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h3&gt;&#34;The main mantra is to technically inspire all the beginners&#34;&lt;/h3&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;‚≠ê &lt;a href=&#34;https://letsupgrade.in/BWLU/&#34;&gt;Check out the website of Build with Lets Upgrade 2020&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;strong&gt;üë© Project ID: 20&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h2&gt;&lt;strong&gt;Project Manager: Garima Singh&lt;/strong&gt;&lt;/h2&gt; &#xA; &lt;h2&gt;&lt;strong&gt;Project Mentor: Mrinal Kumar, Garima Singh&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h2&gt;‚úç&amp;nbsp; PROJECT DESCRIPTION&lt;/h2&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;It basically has some ideas of awesome python projects which you can implement on a day-to-day basic.üë©‚Äçüîé For example: it has a tic tac toe game using python. Some other projects namely Password manager, air quality detector and weather app are also implemented. You can add your own ideas and suggest some in the issues section.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h2&gt;üìÇ&amp;nbsp; RELEVANT TECHNOLOGY&lt;/h2&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;ONLY PYTHON üë®‚Äçüíª&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python&lt;/li&gt; &#xA; &lt;li&gt;Python GUI&lt;/li&gt; &#xA; &lt;li&gt;Tkinter Module&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h2&gt;üíª&amp;nbsp; GETTING STARTED&lt;/h2&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;=&amp;gt; &lt;strong&gt;Fork &lt;a href=&#34;https://github.com/LetsUpgrade/NEW-VIEW&#34;&gt;&lt;img src=&#34;https://img.icons8.com/ios/24/000000/code-fork.png&#34;&gt;&lt;/a&gt;this repository to start contributing.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;=&amp;gt; Open your Git Bash command window and in the root directory type the following commands :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;    1) git init -initializes the git repository from the GitHub.&#xA;    2) git clone -Clone the repository to your local machine&#xA;      (git clone https://github.com/&amp;lt;your-github-username&amp;gt;/garimasingh128/awesome-python-projects)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h2&gt;üìù&amp;nbsp; Learning Resources&lt;/h2&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Read these articles to get a quick grab on Python:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/about/gettingstarted/&#34;&gt;https://www.python.org/about/gettingstarted/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.learnpython.org&#34;&gt;https://www.learnpython.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.programiz.com/python-programming&#34;&gt;https://www.programiz.com/python-programming&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Resources to learn Git:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://try.github.io/&#34;&gt;https://try.github.io/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for Sentiment analyser ML project :&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=dyN_WtjdfpA&#34;&gt;https://www.youtube.com/watch?v=dyN_WtjdfpA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/nlp-how-tokenizing-text-sentence-words-works/&#34;&gt;https://www.geeksforgeeks.org/nlp-how-tokenizing-text-sentence-words-works/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/pyplot-in-matplotlib/&#34;&gt;https://www.geeksforgeeks.org/pyplot-in-matplotlib/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for pin your note :&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ilI3H2O5KYg&#34;&gt;https://www.youtube.com/watch?v=ilI3H2O5KYg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tutorialspoint.com/python/time_sleep.htm&#34;&gt;https://www.tutorialspoint.com/python/time_sleep.htm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/python-gui-tkinter/&#34;&gt;https://www.geeksforgeeks.org/python-gui-tkinter/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for Notification app :&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=vPsM7qdnhzc&#34;&gt;https://www.youtube.com/watch?v=vPsM7qdnhzc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/desktop-notifier-python/&#34;&gt;https://www.geeksforgeeks.org/desktop-notifier-python/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/python-desktop-notifier-using-plyer-module/&#34;&gt;https://www.geeksforgeeks.org/python-desktop-notifier-using-plyer-module/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for Contact Book Application :&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=0rzNAGe-gUs&#34;&gt;https://www.youtube.com/watch?v=0rzNAGe-gUs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/python-tkinter-tutorial/&#34;&gt;https://www.geeksforgeeks.org/python-tkinter-tutorial/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/sql-using-python-sqlite-set-2/&#34;&gt;https://www.geeksforgeeks.org/sql-using-python-sqlite-set-2/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for Typing Speed Test :&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=0e6gmdYqXrc&#34;&gt;https://www.youtube.com/watch?v=0e6gmdYqXrc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/python-string-split/&#34;&gt;https://www.geeksforgeeks.org/python-string-split/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/taking-input-in-python/&#34;&gt;https://www.geeksforgeeks.org/taking-input-in-python/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for Secure your password:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/taking-input-in-python/&#34;&gt;https://www.geeksforgeeks.org/taking-input-in-python/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/edu/python/dict-files&#34;&gt;https://developers.google.com/edu/python/dict-files&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.edureka.co/blog/print-in-python/&#34;&gt;https://www.edureka.co/blog/print-in-python/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for Tic Tac Toe:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/byte-tales/the-classic-tic-tac-toe-game-in-python-3-1427c68b8874&#34;&gt;https://medium.com/byte-tales/the-classic-tic-tac-toe-game-in-python-3-1427c68b8874&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inventwithpython.com/chapter10.html&#34;&gt;https://inventwithpython.com/chapter10.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/python-implementation-automatic-tic-tac-toe-game-using-random-number/&#34;&gt;https://www.geeksforgeeks.org/python-implementation-automatic-tic-tac-toe-game-using-random-number/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for Password manager:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/python-gui-tkinter/&#34;&gt;https://www.geeksforgeeks.org/python-gui-tkinter/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/generating-strong-password-using-python/&#34;&gt;https://www.geeksforgeeks.org/generating-strong-password-using-python/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/file-handling-python/&#34;&gt;https://www.geeksforgeeks.org/file-handling-python/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for Weather application:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=vJCjDevYDt8&#34;&gt;https://www.youtube.com/watch?v=vJCjDevYDt8&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://tomasz-kluczkowski.com/project/the-weather-app/&#34;&gt;http://tomasz-kluczkowski.com/project/the-weather-app/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/python-real-time-weather-detection-using-tkinter/&#34;&gt;https://www.geeksforgeeks.org/python-real-time-weather-detection-using-tkinter/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tomasz-Kluczkowski/Weather-App&#34;&gt;https://github.com/Tomasz-Kluczkowski/Weather-App&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for Air quality detector:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=vJCjDevYDt8&#34;&gt;https://www.youtube.com/watch?v=vJCjDevYDt8&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for Iris Flower Detector:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Iris_flower_data_set&#34;&gt;https://en.wikipedia.org/wiki/Iris_flower_data_set&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Support_vector_machine&#34;&gt;https://en.wikipedia.org/wiki/Support_vector_machine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Y17Y_8RK6pc&#34;&gt;https://www.youtube.com/watch?v=Y17Y_8RK6pc&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for Flight Fare Prediction:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/nikhilmittal/flight-fare-prediction-mh&#34;&gt;https://www.kaggle.com/nikhilmittal/flight-fare-prediction-mh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://scikit-learn.org/stable/modules/generated/sklearn.linear_model&#34;&gt;https://scikit-learn.org/stable/modules/generated/sklearn.linear_model&lt;/a&gt;. LinearRegression.html&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/code-to-express/flight-price-prediction-7c83616a13bb&#34;&gt;https://medium.com/code-to-express/flight-price-prediction-7c83616a13bb&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for Rock Paper Scissor:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/python-program-implement-rock-paper-scissor-game&#34;&gt;https://www.geeksforgeeks.org/python-program-implement-rock-paper-scissor-game&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.afiniti.com/corporate/rock-paper-scissors&#34;&gt;https://www.afiniti.com/corporate/rock-paper-scissors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tes.com/teaching-resource/building-a-rock-paper-scissors-game-using-scratch-11268599&#34;&gt;https://www.tes.com/teaching-resource/building-a-rock-paper-scissors-game-using-scratch-11268599&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=KnVwmBh1bo0&#34;&gt;https://www.youtube.com/watch?v=KnVwmBh1bo0&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for Rolling Dice:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/python-if-else/#if-elif&#34;&gt;https://www.geeksforgeeks.org/python-if-else/#if-elif&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/python-while-loops/?ref=lbp&#34;&gt;https://www.geeksforgeeks.org/python-while-loops/?ref=lbp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tutorialsteacher.com/python/random-module&#34;&gt;https://www.tutorialsteacher.com/python/random-module&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for Quiz Application:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=VR-yNEpGk3g&#34;&gt;https://www.youtube.com/watch?v=VR-yNEpGk3g&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/python-multiple-choice-questions/&#34;&gt;https://www.geeksforgeeks.org/python-multiple-choice-questions/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=cwJBEZjQJtc&#34;&gt;https://www.youtube.com/watch?v=cwJBEZjQJtc&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for License Plate Detection :&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://youtube.com/watch?v=GXyLSx8l9gM&#34;&gt;http://youtube.com/watch?v=GXyLSx8l9gM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.opencv.org/master/d9/df8/tutorial_root.html&#34;&gt;https://docs.opencv.org/master/d9/df8/tutorial_root.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for Alarm Clock :&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tutorialspoint.com/python/python_gui_programming.htm&#34;&gt;https://www.tutorialspoint.com/python/python_gui_programming.htm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/library/datetime.html&#34;&gt;https://docs.python.org/3/library/datetime.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for Simple Calculator&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/make-simple-calculator-using-python/https://www.geeksforgeeks.org/make-simple-calculator-using-python/%60&#34;&gt;https://www.geeksforgeeks.org/make-simple-calculator-using-python/https://www.geeksforgeeks.org/make-simple-calculator-using-python/`&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=miC7ni64hbw&#34;&gt;https://www.youtube.com/watch?v=miC7ni64hbw&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=B1U0gUhUeQs&#34;&gt;https://www.youtube.com/watch?v=B1U0gUhUeQs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for File Renaming Tool&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/rename-multiple-files-using-python/&#34;&gt;https://www.geeksforgeeks.org/rename-multiple-files-using-python/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/&#34;&gt;https://docs.python.org/3/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for IRIS FLOWER CLASSIFICATION USING ML:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/gft-engineering/start-to-learn-machine-learning-with-the-iris-flower-classification-challenge-4859a920e5e3&#34;&gt;https://medium.com/gft-engineering/start-to-learn-machine-learning-with-the-iris-flower-classification-challenge-4859a920e5e3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.neuraldesigner.com/learning/examples/iris-flowers-classification&#34;&gt;https://www.neuraldesigner.com/learning/examples/iris-flowers-classification&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.skyfilabs.com/project-ideas/iris-flower-classification-using-machine-learning&#34;&gt;https://www.skyfilabs.com/project-ideas/iris-flower-classification-using-machine-learning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://analyticsindiamag.com/start-building-first-machine-learning-project-famous-dataset/&#34;&gt;https://analyticsindiamag.com/start-building-first-machine-learning-project-famous-dataset/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=FLuqwQgSBDw&amp;amp;ab_channel=AppliedAICourse&#34;&gt;https://www.youtube.com/watch?v=FLuqwQgSBDw&amp;amp;ab_channel=AppliedAICourse&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CLvboTdwpjc&amp;amp;ab_channel=RealKnow&#34;&gt;https://www.youtube.com/watch?v=CLvboTdwpjc&amp;amp;ab_channel=RealKnow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/Y17Y_8RK6pc?list=PL5tcWHG-UPH1OeZ2vU5xQd7RVpkWvwJny&#34;&gt;https://youtu.be/Y17Y_8RK6pc?list=PL5tcWHG-UPH1OeZ2vU5xQd7RVpkWvwJny&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/ACdBKML9l4s&#34;&gt;https://youtu.be/ACdBKML9l4s&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reference for Using Google API&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/googleapis/google-api-python-client&#34;&gt;https://github.com/googleapis/google-api-python-client&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=IVjZMIWhz3Y&#34;&gt;https://www.youtube.com/watch?v=IVjZMIWhz3Y&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for Admission Prediction using ML&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.udemy.com/share/103wKGAEETdltURH8B/&#34;&gt;https://www.udemy.com/share/103wKGAEETdltURH8B/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for IPL score predictor&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/4CtyDxfhoN8&#34;&gt;https://youtu.be/4CtyDxfhoN8&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Refrences for Twitter Sentiment Analysis using ML&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://towardsdatascience.com/social-media-sentiment-analysis-49b395771197&#34;&gt;https://towardsdatascience.com/social-media-sentiment-analysis-49b395771197&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://towardsdatascience.com/social-media-sentiment-analysis-part-ii-bcacca5aaa39&#34;&gt;https://towardsdatascience.com/social-media-sentiment-analysis-part-ii-bcacca5aaa39&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reference for Credit Card Fraud Detection&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/ml-credit-card-fraud-detection/&#34;&gt;https://www.geeksforgeeks.org/ml-credit-card-fraud-detection/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References for alarm clock&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtube.com/playlist?list=PLu0W_9lII9ajLcqRcj4PoEihkukF_OTzA&#34;&gt;https://youtube.com/playlist?list=PLu0W_9lII9ajLcqRcj4PoEihkukF_OTzA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itsourcecode.com/free-projects/python-projects/alarm-clock-using-python-with-source-code/&#34;&gt;https://itsourcecode.com/free-projects/python-projects/alarm-clock-using-python-with-source-code/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h2&gt;üíª&amp;nbsp; System Requirements&lt;/h2&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Git&lt;/li&gt; &#xA; &lt;li&gt;Code Editor (Visual Studio Code, Sublime Text)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h2&gt;üèÜ&amp;nbsp; Contributing&lt;/h2&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/garimasingh128/awesome-python-projects/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for information on how to contribute to the project.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h2&gt;üíº&amp;nbsp; Code of Conduct&lt;/h2&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;We want to facilitate a healthy and constructive community behavior by adopting and enforcing our code of conduct.&lt;/p&gt; &#xA;&lt;p&gt;Please adhere towards our &lt;a href=&#34;https://raw.githubusercontent.com/garimasingh128/awesome-python-projects/master/code-of-conduct.md&#34;&gt;code-of-conduct.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h2&gt;üë¨&amp;nbsp; Owner&lt;/h2&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/garimasingh128&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/44302373?s=460&amp;amp;u=efaafa72f4d83d40b66fc68258d14cebbf1d7de0&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Garima Singh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/mrinal41298&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/55679963?s=460&amp;amp;u=66c9d1ec2ce9183bb517311a4f5ff32286e4df72&amp;amp;v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mrinal Kumar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mrinal41298/&#34;&gt;&lt;img src=&#34;https://forthebadge.com/images/badges/built-with-love.svg?sanitize=true&#34; alt=&#34;built with love&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ù§Ô∏è Thanks to our awesome contributors.&lt;/h2&gt;</summary>
  </entry>
  <entry>
    <title>michigan-traffic-lab/Dense-Deep-Reinforcement-Learning</title>
    <updated>2023-03-26T01:38:31Z</updated>
    <id>tag:github.com,2023-03-26:/michigan-traffic-lab/Dense-Deep-Reinforcement-Learning</id>
    <link href="https://github.com/michigan-traffic-lab/Dense-Deep-Reinforcement-Learning" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repo contains the code for paper &#34;Dense reinforcement learning for safety validation of autonomous vehicles&#34;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dense reinforcement learning for safety validation of autonomous vehicles&lt;/h1&gt; &#xA;&lt;!-- ABOUT THE PROJECT --&gt; &#xA;&lt;h1&gt;Introduction of the Project&lt;/h1&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;This project contains the source code and data for the paper titled &#34;Dense reinforcement learning for safety validation of autonomous vehicles&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;Code Structure&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Dense-Deep-Reinforcement-Learning/&#xA;|__ conf: experiment configurations&#xA;|__ maps: maps for SUMO simulator&#xA;|__ checkpoints: model checkpoints for D2RL&#xA;|__ source_data: source data for constructing NDE and D2RL-based testing &#xA;|__ mtlsp: simulation platform&#xA;|__ envs: NDE and D2RL-based testing environments&#xA;|__ controller: vehicle controllers (e.g. IDM)&#xA;|__ data_analysis: refer to &#34;Usage&#34; section for detailed information&#xA;|__ main.py: main function for running NDE and D2RL-based testing&#xA;|__ utils.py: utility functions&#xA;|__ nadeinfoextractor.py: information extractor for logging experiment information&#xA;|__ requirements.txt: required packages&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Citation&lt;/h1&gt; &#xA;&lt;p&gt;Feng, S., Sun, H., Yan, X., Zhu, H., Zou, Z., Shen, S., and Liu H.X. (2023). Dense reinforcement learning for safety validation of autonomous vehicles. Nature 615, 620‚Äì627. &lt;a href=&#34;https://doi.org/10.1038/s41586-023-05732-2&#34;&gt;https://doi.org/10.1038/s41586-023-05732-2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{Feng2023,&#xA;&#x9;title = {Dense reinforcement learning for safety validation of autonomous vehicles},&#xA;&#x9;volume = {615},&#xA;&#x9;url = {https://www.nature.com/articles/s41586-023-05732-2},&#xA;&#x9;doi = {https://doi.org/10.1038/s41586-023-05732-2},&#xA;&#x9;number = {7953},&#xA;&#x9;journal = {Nature},&#xA;&#x9;author = {Shuo Feng, Haowei Sun, Xintao Yan, Haojie Zhu, Zhengxia Zou, Shengyin Shen, Henry X. Liu},&#xA;&#x9;year = {2023},&#xA;&#x9;note = {Publisher: Nature Publishing Group},&#xA;&#x9;pages = {620-627},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;Pre-requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python installation &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This repository is developed and tested under python 3.10.4 on Ubuntu 20.04 system.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Download all required datasets &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The user should download the &lt;code&gt;data_analysis&lt;/code&gt; folder from &lt;a href=&#34;https://dense-deep-reinforcement-learning.s3.us-east-2.amazonaws.com/data_analysis.zip&#34;&gt;here&lt;/a&gt;. Then, the user should merge the downloaded &lt;code&gt;data_analysis&lt;/code&gt; folder with the original &lt;code&gt;data_analysis&lt;/code&gt; folder in the repo.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation and configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Clone this repository&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/michigan-traffic-lab/Dense-Deep-Reinforcement-Learning.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create a new virtual environment (Optional)&lt;/h3&gt; &#xA;&lt;p&gt;To ensure high flexibility, it is recommended to use a virtual environment when running this repository. To set up the virtual environment, please follow the commands provided below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;virtualenv venv&#xA;source venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install all required packages&lt;/h3&gt; &#xA;&lt;p&gt;To install the Python packages required for this repository, execute the command provided below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install ipykernel (Jupyter Notebook) for data analysis&lt;/h3&gt; &#xA;&lt;p&gt;In order to use Jupyter notebooks for data analysis, it is necessary to have the ipykernel installed. To install it, users can execute the command provided below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install ipykernel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- USAGE EXAMPLES --&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;The project includes a data_analysis directory, which stores data (raw &amp;amp; processed), code (data processing and data analysis), and outcomes (figures) related to data analysis. The project analyzes various performance metrics such as time-to-collision, post-encroachment-time, bumper-to-bumper distance, crash rate, crash type, and crash severity. This section will focus on the post-encroachment-time (PET) analysis as an example, while the same procedure applies to all other performance metrics. Each performance metric analysis has a separate Jupyter notebook that contains its respective code.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For jupyter notebook usage, please refer to &lt;a href=&#34;https://docs.jupyter.org/en/latest/&#34;&gt;https://docs.jupyter.org/en/latest/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Since generating raw data is a time-consuming process (e.g., NDE testing experiment requires 72,000 core*hours), we have included the data generated during our experiments for users to quickly replicate the results. There are three running modes available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mode 1 (recommended)&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/michigan-traffic-lab/Dense-Deep-Reinforcement-Learning/main/#step3&#34;&gt;data analysis&lt;/a&gt; using the data generated in our experiments;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mode 2&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/michigan-traffic-lab/Dense-Deep-Reinforcement-Learning/main/#step2&#34;&gt;data processing&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/michigan-traffic-lab/Dense-Deep-Reinforcement-Learning/main/#step3&#34;&gt;data analysis&lt;/a&gt; using the data generated in our experiments;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mode 3&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/michigan-traffic-lab/Dense-Deep-Reinforcement-Learning/main/#step1&#34;&gt;raw data generation&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/michigan-traffic-lab/Dense-Deep-Reinforcement-Learning/main/#step2&#34;&gt;data processing&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/michigan-traffic-lab/Dense-Deep-Reinforcement-Learning/main/#step3&#34;&gt;data analysis&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;1 core*hour denotes the simulation running on one CPU core (Intel Xeon Gold 6154 3.0GHz) for one hour.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To provide further details of the three code running modes, a flowchart of PET data generation, processing, and analysis is provided as follows:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/michigan-traffic-lab/Dense-Deep-Reinforcement-Learning/main/images/documentation_figure.png&#34; alt=&#34;File structure&#34; title=&#34;Title&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;1. &lt;span id=&#34;step1&#34;&gt;Raw Data Generation&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;For Mode 1:&lt;/strong&gt; N/A&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;For Mode 2:&lt;/strong&gt; N/A&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;For Mode 3:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Please run the following commands to run the simulation and generate the raw experiment results for Naturalistic Driving Environment (NDE) testing and D2RL-based testing (the experiment_name can be specified by users): &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python main.py --experiment_name 2lane_400m_NDE_testing --mode NDE # Use this for NDE Testing&#xA;python main.py --experiment_name 2lane_400m_D2RL_testing --mode D2RL # Use this for D2RL Testing      &#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;     &lt;li&gt;By default, the simulation result will be stored in &lt;code&gt;./data_analysis/raw_data/experiment_name&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2. &lt;span id=&#34;step2&#34;&gt;Data Processing&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;For Mode 1:&lt;/strong&gt; N/A&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;For Mode 2:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Before running mode 2, the zipped dataset under &lt;code&gt;/data_analysis/raw_data&lt;/code&gt; needs to be unzipped to the same directory. Please note that the total size of the unzipped files will be around 130 GB.&lt;/li&gt; &#xA;   &lt;li&gt;Run all the code cells in the jupyter notebook (click &#34;Run all&#34; button in the menu bar of the notebook)&lt;/li&gt; &#xA;   &lt;li&gt;The data processing code is stored in &lt;code&gt;/data_analysis/processed_data/&lt;/code&gt;. For example, the code for processing PET for both NDE experiments and D2RL experiments can be found in the jupyter notebook &lt;code&gt;pet_process.ipynb&lt;/code&gt;, including several major steps: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Load raw experiment results&lt;/li&gt; &#xA;     &lt;li&gt;Data processing: convert raw information (e.g., speed and position) to performance metrics (e.g., PET)&lt;/li&gt; &#xA;     &lt;li&gt;Store the processed data in &lt;code&gt;/data_analysis/processed_data/NDE&lt;/code&gt; or &lt;code&gt;/data_analysis/processed_data/D2RL&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Newly generated files can be located after the completion of data processing: &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;code&gt;NADE_near_miss_pet_weight.npy&lt;/code&gt; and &lt;code&gt;NADE_near_miss_pet.npy&lt;/code&gt; under &lt;code&gt;/data_analysis/processed_data/D2RL&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;NDE_near_miss_pet.npy&lt;/code&gt; under &lt;code&gt;/data_analysis/processed_data/NDE&lt;/code&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;For Mode 3:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In the Jupyter notebook, please modify the following codes to analyse the recently generated experimental outcomes: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;root_folder = &#34;../raw_simulation_results/D2RL/&#34; # Please change it to the position where you stored the newly generated raw experiment data&#xA;path_list = [&#34;Experiment-2lane_400m_IDM_NADE_2022-09-01&#34;] # Please change it as the name of the folder generated in your new experiments&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;After the modification, users can follow the data processing section of Mode 2: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Run all the code cells in the jupyter notebook (click &#34;Run all&#34; button in the menu bar of the notebook)&lt;/li&gt; &#xA;     &lt;li&gt;The data processing code is stored in &lt;code&gt;/data_analysis/processed_data/&lt;/code&gt;. For example, the code for processing PET for both NDE experiments and D2RL experiments can be found in the jupyter notebook &lt;code&gt;pet_process.ipynb&lt;/code&gt;, including several major steps: &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Load raw experiment results&lt;/li&gt; &#xA;       &lt;li&gt;Data processing: convert raw information (e.g., speed and position) to performance metrics (e.g., PET)&lt;/li&gt; &#xA;       &lt;li&gt;Store the processed data in &lt;code&gt;/data_analysis/processed_data/NDE&lt;/code&gt; or &lt;code&gt;/data_analysis/processed_data/D2RL&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;Newly generated files can be located after the completion of data processing: &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;&lt;code&gt;NADE_near_miss_pet_weight.npy&lt;/code&gt; and &lt;code&gt;NADE_near_miss_pet.npy&lt;/code&gt; under &lt;code&gt;/data_analysis/processed_data/D2RL&lt;/code&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;code&gt;NDE_near_miss_pet.npy&lt;/code&gt; under &lt;code&gt;/data_analysis/processed_data/NDE&lt;/code&gt;&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;3. &lt;span id=&#34;step3&#34;&gt;Data Analysis&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This step is the same for all three running modes.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The directory &lt;code&gt;/data_analysis/analysis_and_figures/&lt;/code&gt; contains all the codes for data analysis and the figures generated. The file structure of the directory is shown below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;data_analysis/&#xA;|__ raw_data&#xA;|__ processed_data&#xA;|___analysis_and_figures&#xA;|______ crash_analysis&#xA;|_________ crash_severity_type_plot.ipynb # Analyze the crash severity and the crash type&#xA;|______ crash_rate&#xA;|_________ crash_rate_bootstrap_plot.ipynb # Analyze the crash rate, the convergency number&#xA;|______ near_miss_TTC_distance&#xA;|_________ ttc_distance_analysis_json.ipynb # Analyze the TTC, bumper-to-bumper distance&#xA;|______ PET&#xA;|_________ pet_analysis.ipynb # Analyze the PET&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, the PET data analysis code can be found in &lt;code&gt;/data_analysis/analysis_and_figures/PET/pet_analysis.ipynb&lt;/code&gt;, including following major steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Load the processed experiment data from &lt;code&gt;/data_analysis/processed_data&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Plot the PET histogram of D2RL experiments and NDE experiments, and then save figures to &lt;code&gt;/data_analysis/analysis_and_figures/PET&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Contributions are what make the open source community such an amazing place to be learn, inspire, and create. Any contributions you make are &lt;strong&gt;greatly appreciated&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the Project&lt;/li&gt; &#xA; &lt;li&gt;Create your Feature Branch (&lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your Changes (&lt;code&gt;git commit -m &#39;Add some AmazingFeature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the Branch (&lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Open a Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This project is licensed under the [PolyForm Noncommercial License 1.0.0]. Please refer to LICENSE for more details.&lt;/p&gt; &#xA;&lt;p&gt;H. L. and the team have filed a US provisional patent application 63/338,424.&lt;/p&gt; &#xA;&lt;h1&gt;Developers&lt;/h1&gt; &#xA;&lt;p&gt;Haowei Sun (&lt;a href=&#34;mailto:haoweis@umich.edu&#34;&gt;haoweis@umich.edu&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;Haojie Zhu (&lt;a href=&#34;mailto:zhuhj@umich.edu&#34;&gt;zhuhj@umich.edu&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;Shuo Feng (&lt;a href=&#34;mailto:fshuo@umich.edu&#34;&gt;fshuo@umich.edu&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;For help or issues using the code, please create an issue for this repository or contact Haowei Sun (&lt;a href=&#34;mailto:haoweis@umich.edu&#34;&gt;haoweis@umich.edu&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h1&gt;Contact&lt;/h1&gt; &#xA;&lt;p&gt;For general questions about the paper, please contact Henry Liu (&lt;a href=&#34;mailto:henryliu@umich.edu&#34;&gt;henryliu@umich.edu&lt;/a&gt;).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hikariming/alpaca_chinese_dataset</title>
    <updated>2023-03-26T01:38:31Z</updated>
    <id>tag:github.com,2023-03-26:/hikariming/alpaca_chinese_dataset</id>
    <link href="https://github.com/hikariming/alpaca_chinese_dataset" rel="alternate"></link>
    <summary type="html">&lt;p&gt;‰∫∫Â∑•Á≤æË∞ÉÁöÑ‰∏≠ÊñáÂØπËØùÊï∞ÊçÆÈõÜÂíå‰∏ÄÊÆµchatglmÁöÑÂæÆË∞É‰ª£Á†Å&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;alpaca_chinese_dataset&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;È≤ÅËøÖËØ¥ËøáÔºöÊúâÂ§öÂ∞ë‰∫∫Â∑•ÔºåÊâçÊúâÂ§öÂ∞ëÊô∫ËÉΩ&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;ÂΩìÂâçÁöÑËÅäÂ§©ÂØπËØùÊ®°ÂûãÊï∞ÊçÆÈõÜ‰∏ªË¶ÅÈÉΩÊòØÁî±Ëã±ÊñáÊûÑÊàêÔºå‰ΩÜÊòØÂΩìÂâç‰∏≠ÊñáËÅäÂ§©Ê®°ÂûãÊûÑÂª∫ÁöÑÈúÄÊ±Ç‰πüËæÉ‰∏∫Ëø´ÂàáÔºåÂõ†Ê≠§Êàë‰ª¨Â∞ÜÊñØÂù¶Á¶èÁöÑalpacaÊï∞ÊçÆÈõÜËøõË°å‰∏≠ÊñáÁøªËØëÔºåÂπ∂ÂÜçÂà∂ÈÄ†‰∏Ä‰∫õÂØπËØùÊï∞ÊçÆÔºåÂπ∂ÂºÄÊ∫êÊèê‰æõ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Êàë‰ª¨ÂèëÁé∞ÁøªËØëAPIÁöÑÊïàÊûú‰∏çÂ¶ÇchatGPTÔºåÂõ†Ê≠§Êàë‰ª¨Áé∞Âú®Â∞ÜÂàáÂàÜÊàê17‰ªΩÁöÑÊï∞ÊçÆÈõÜ‰ΩøÁî®chatGPTÊõø‰ª£‰∫Ü‰ΩøÁî®ÁøªËØëAPIËøõË°åÁøªËØë„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Ê≠§ÁøªËØëÂπ∂ÈùûÂÆåÂÖ®ÁöÑchatgptÊú∫ÁøªÔºå‰ºöËøõË°å‰∫∫Â∑•Ê†°È™åÔºåÈÅáÂà∞Ëã±ÊñáÁâπÂºÇÊÄßË°®ËææÁöÑÊó∂ÂÄô‰ºöÂèò‰∏∫ËæÉ‰∏∫‰∏≠ÊñáÂåñÁöÑË°®Ëø∞ÔºåÂõ†Ê≠§ÊØèÊó•ÁøªËØëÈáèÊúâÈôê„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ÈÅáÂà∞ÂÆåÂÖ®‰∏çËÉΩÁøªËØë‰∏∫‰∏≠ÊñáÁöÑÊï∞ÊçÆÔºåÂèØËÉΩ‰ºöË∑≥ËøáÔºåÂõ†Ê≠§ËøôÂ∞Ü‰∏çÊòØ‰∏Ä‰∏™Á∫Ø‰∏≠ÊñáÊàñ‰∏≠Êñá--Ëã±ÊñáÊï∞ÊçÆÈõÜ„ÄÇÂèØËÉΩ‰∏çÈÄÇÂêàÊãøÊù•ÂÅöÁøªËØëÁõ∏ÂÖ≥ËÆ≠ÁªÉ&lt;/p&gt; &#xA;&lt;p&gt;ÂàÜÈÖç‰∏ãÂéªÁöÑÊï∞ÊçÆÈõÜÂ∫îËØ•ËÉΩÂ§üÁ°Æ‰øùÂÖ®ÈÉ®ÁøªËØëÔºåÈ¢ÑËÆ°alpacaÊØèÊó•Â¢ûÈáèÁ∫¶2500Ë°åÔºåÈ¢ùÂ§ñÁöÑÈùûalpaca‰∏≠ÊñáÊï∞ÊçÆÈõÜÊàë‰ª¨È¢ÑËÆ°‰πü‰ºö‰ª•Â∑•‰ΩúÊó•120Êù°Â∑¶Âè≥ÁöÑÈÄüÂ∫¶Â¢ûÂä†ËÆ∞ÂΩïÔºåÈ¢ÑËÆ°ÊØèÂ§©‰ºö500Ë°åÂ∑¶Âè≥ÁöÑÊï∞ÊçÆ&lt;/p&gt; &#xA;&lt;h2&gt;chatglmÂæÆË∞ÉÁõ∏ÂÖ≥ 20230325&lt;/h2&gt; &#xA;&lt;p&gt;Êàë‰ª¨Êäägithub‰∏ä‰ª£Á†ÅÈÉΩËØï‰∫Ü‰∏Ä‰∏ãÔºåÁé∞Âú®ËÉΩÁúãÂá∫ÊòéÊòæÂèòÂåñÁöÑÂ∞±ÊòØ&lt;a href=&#34;https://github.com/ssbuild/chatglm_finetuning%EF%BC%8C&#34;&gt;https://github.com/ssbuild/chatglm_finetuningÔºå&lt;/a&gt; Êàë‰ª¨Â∞ÜÂ∞ùËØïÂÜô‰∏ÄÊÆµËÑöÊú¨ÔºåÊääÊàë‰ª¨ÁöÑÊï∞ÊçÆÈõÜÂèòÊàêËøôÁßçÂØπËØùÂΩ¢ÂºèÊï∞ÊçÆÈõÜ&lt;/p&gt; &#xA;&lt;h2&gt;chatglmÂæÆË∞ÉÁõ∏ÂÖ≥ 20230324&lt;/h2&gt; &#xA;&lt;p&gt;Êàë‰ª¨Âü∫‰∫éÊàë‰ª¨ÁöÑÊï∞ÊçÆÈõÜÂú®colab‰∏äË∑ë‰∫ÜÂæÆË∞É‰ª£Á†ÅÔºå‰ª£Á†ÅËøòÊ≤°Êï¥ÁêÜÔºåÊòØÂü∫‰∫é&lt;a href=&#34;https://github.com/yuanzhoulvpi2017/zero_nlp&#34;&gt;https://github.com/yuanzhoulvpi2017/zero_nlp&lt;/a&gt; È°πÁõÆÂÅöÁöÑÂæÆË∞É ‰ΩÜÊòØÁõÆÂâçÊàë‰ª¨ÂèëÁé∞ÂæÆË∞ÉÂêéÁöÑÊ®°ÂûãÂíå‰πãÂâçÁöÑÂá†‰πéÊØ´Êó†Âå∫Âà´ÔºåÂõ†Ê≠§Áé∞Âú®Ê≠£Âú®Á†îÁ©∂ÂéüÂõ†Ôºå‰πüÂñúÊ¨¢ÂíåÂ§ßÂÆ∂‰∏ÄËµ∑Êé¢ËÆ®ÔºåÈ¢ÑËÆ°Âú®‰ªäÂ§©ÊîæÂá∫‰ª£Á†Å&lt;/p&gt; &#xA;&lt;p&gt;ÁúãÂà∞‰∫ÜÂÖ∂‰ªñÈ°πÁõÆÁõ∏ÂÖ≥issueÂ¶Ç&lt;a href=&#34;https://github.com/mymusise/ChatGLM-Tuning/issues/59&#34;&gt;https://github.com/mymusise/ChatGLM-Tuning/issues/59&lt;/a&gt; ÁõÆÂâçÊ≠£Âú®ÊµãËØï‰∏≠&lt;/p&gt; &#xA;&lt;h2&gt;20230322Êõ¥Êñ∞&lt;/h2&gt; &#xA;&lt;p&gt;Êàë‰ª¨ÂèëÁé∞&lt;a href=&#34;https://github.com/carbonz0/alpaca-chinese-dataset&#34;&gt;https://github.com/carbonz0/alpaca-chinese-dataset&lt;/a&gt; Ëøô‰∏™È°πÁõÆÂ∑≤ÁªèÈÄöËøáÊú∫Âô®ÁøªËØëÊääalpacaÊï∞ÊçÆËøõË°å‰∫ÜÁøªËØëÔºåÊàë‰ª¨ÂêéÁª≠‰ºöÈÄêÊù°Êü•Áúãcarbonz01ÁöÑÁøªËØëÊï∞ÊçÆÔºåÂπ∂‰∫∫Â∑•Ê†°ÂØπÂ∞ÜÈùû‰∏≠ÊñáÂåñÁöÑË°®Ëø∞Ë∑≥ËøáÔºåÂπ∂Ê∑ªÂä†Êõ¥Â§ö‰∏≠ÂõΩÁâπËâ≤Êï∞ÊçÆÈõÜ„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÁõÆÂâçÊï∞ÊçÆÈõÜËÆ§È¢ÜÊÉÖÂÜµÔºö&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÈòøÊâ£Êâ£ Ê∏ÖÂçéÂ§ßÂ≠¶Â∑•Â∑•Ôºàalpaca_data-0-3252-Ëã±ÊñáÔºâ&lt;/li&gt; &#xA; &lt;li&gt;ÈªÑÂ†ÉÊ∑è ÁîµÂ≠êÁßëÂ§ßËΩØÈô¢Ôºàalpaca_data-3252-6382-Ëã±ÊñáÔºâ&lt;/li&gt; &#xA; &lt;li&gt;ÁÑ¶‰∏ΩÂçé ÁîµÂ≠êÁßëÂ§ßËΩØÈô¢Ôºàalpaca_data-6382-9407-Ëã±ÊñáÔºâ&lt;/li&gt; &#xA; &lt;li&gt;‰Ωï‰ΩôÊô® ÁîµÂ≠êÁßëÂ§ßËΩØÈô¢Ôºàalpaca_data-9407-12345-Ëã±ÊñáÔºâ&lt;/li&gt; &#xA; &lt;li&gt;Âº†ÁëûÈí¶ ÁîµÂ≠êÁßëÂ§ßËΩØÈô¢Ôºàalpaca_data-12345-15323-Ëã±ÊñáÔºâ&lt;/li&gt; &#xA; &lt;li&gt;Ê¢ÅÊ∏ä ÁîµÂ≠êÁßëÂ§ßËΩØÈô¢Ôºàalpaca_data-15323-18280-Ëã±ÊñáÔºâ&lt;/li&gt; &#xA; &lt;li&gt;ÁéãÈì∂Êùâ ÁîµÂ≠êÁßëÂ§ßËΩØÈô¢Ôºàalpaca_data-18280-21320-Ëã±ÊñáÔºâ&lt;/li&gt; &#xA; &lt;li&gt;ÂÖ∂‰ªñÊï∞ÊçÆÈõÜÂΩìÂâçÊöÇÊó†‰∫∫ËÆ§È¢ÜÔºåÁ≠âÂæÖÊàë‰ª¨‰πãÂâçÁöÑÊï∞ÊçÆÊ†áËÆ∞ÂÆåÊàñËÄÖÂÖ∂‰ªñÂ∞è‰ºô‰º¥ËÆ§È¢ÜÔΩû&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;È¢ùÂ§ñÊï∞ÊçÆÈõÜ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÈòøÊâ£Êâ£Ôºà‰ºÅ‰∏öÁÆ°ÁêÜÈóÆÈ¢ò„ÄÅ‰∏âÂõΩÈóÆÈ¢òÔºâ&lt;/li&gt; &#xA; &lt;li&gt;ÈªÑÂ†ÉÊ∑è ÁîµÂ≠êÁßëÂ§ßËΩØÈô¢ÔºàÂêçËØçËß£ÈáäÁ±ªÈóÆÈ¢òÔºâ&lt;/li&gt; &#xA; &lt;li&gt;ÁÑ¶‰∏ΩÂçé ÁîµÂ≠êÁßëÂ§ßËΩØÈô¢ÔºàÂÖöÂª∫Á±ªÊï∞ÊçÆÈõÜÔºâ&lt;/li&gt; &#xA; &lt;li&gt;‰Ωï‰ΩôÊô® ÁîµÂ≠êÁßëÂ§ßËΩØÈô¢ÔºàÂª∫ËÆÆÁ±ªÊï∞ÊçÆÈõÜÔºâ&lt;/li&gt; &#xA; &lt;li&gt;Âº†ÁëûÈí¶ ÁîµÂ≠êÁßëÂ§ßËΩØÈô¢ÔºàÂéÜÂè≤Á±ªÊï∞ÊçÆÈõÜÔºâ&lt;/li&gt; &#xA; &lt;li&gt;Ê¢ÅÊ∏ä ÁîµÂ≠êÁßëÂ§ßËΩØÈô¢ÔºàÂ≠¶‰π†Á±ªÊï∞ÊçÆÈõÜÔºâ&lt;/li&gt; &#xA; &lt;li&gt;ÁéãÈì∂Êùâ ÁîµÂ≠êÁßëÂ§ßËΩØÈô¢ÔºàÁßëÊäÄÁ±ªÊï∞ÊçÆÈõÜÔºâ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;DOING&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Âä†ÂÖ•Èô§‰∫Üalpaca‰πãÂ§ñÁöÑÂÖ∂‰ªñ‰∏≠ÊñáËÅäÂ§©ÂØπËØù&lt;/li&gt; &#xA; &lt;li&gt;‰∫∫Â∑•ÂæÆË∞ÉÔºåÈÉ®ÂàÜÂπ∂‰∏ç‰∏≠ÊñáÂåñÁöÑÈóÆÈ¢òÔºåÊàë‰ª¨Â∞ÜÈáçÊñ∞ËØ¢ÈóÆchatgptÊàñÊñáÂøÉ‰∏ÄË®ÄÔºåÈáçÊñ∞Ëé∑ÂèñÂõûÁ≠îÂπ∂Ë¶ÜÁõñÊéâalpacaÁöÑÂõûÁ≠î&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ÂÖ∂‰ªñÊï∞ÊçÆÈõÜ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;chatglmÈóÆÈ¢òÊï∞ÊçÆÈõÜÔºöÈíàÂØπchatglm‰∏≠Êàë‰ª¨ÂèëÁé∞ÁöÑÈóÆÈ¢òÔºå‰ΩøÁî®ÊñáÂøÉ‰∏ÄË®ÄÊàñchatgptËøõË°åÂõûÁ≠îÔºåÂπ∂ÈáçÊñ∞Êî∂ÂΩï&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>