<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-14T01:37:50Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>camenduru/grounded-segment-anything-colab</title>
    <updated>2023-04-14T01:37:50Z</updated>
    <id>tag:github.com,2023-04-14:/camenduru/grounded-segment-anything-colab</id>
    <link href="https://github.com/camenduru/grounded-segment-anything-colab" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;üê£ Please follow me for new updates &lt;a href=&#34;https://twitter.com/camenduru&#34;&gt;https://twitter.com/camenduru&lt;/a&gt; &lt;br&gt; üî• Please join our discord server &lt;a href=&#34;https://discord.gg/k5BwmmvJJU&#34;&gt;https://discord.gg/k5BwmmvJJU&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üö¶ WIP üö¶&lt;/h2&gt; &#xA;&lt;h2&gt;ü¶í Colab&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Colab&lt;/th&gt; &#xA;   &lt;th&gt;Info&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/camenduru/grounded-segment-anything-colab/blob/main/grounded-segment-anything-colab.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;grounded-segment-anything-colab &lt;br&gt; runwayml/stable-diffusion-inpainting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/camenduru/grounded-segment-anything-colab/blob/main/grounded-segment-anything-custom.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt; &lt;br&gt; üö¶ WIP üö¶&lt;/td&gt; &#xA;   &lt;td&gt;grounded-segment-anything-custom &lt;br&gt; Custom Inpainting Model &lt;br&gt; maybe only 16-bit inpainting diffuser models are compatible with Free T4 üòê &lt;br&gt; &lt;br&gt; 16-bit models &lt;br&gt; ckpt/dreamlike-diffusion-1.0-inpainting &lt;br&gt; runwayml/stable-diffusion-inpainting &lt;br&gt; ckpt/f222-inpainting &lt;br&gt; ckpt/realistic_vision_inpainting &lt;br&gt; ckpt/SS_0.15_x_protogen-inpainting &lt;br&gt; ckpt/PhotoMerge-inpainting &lt;br&gt; ckpt/AniMerge-inpainting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Main Repo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/IDEA-Research/Grounded-Segment-Anything&#34;&gt;https://github.com/IDEA-Research/Grounded-Segment-Anything&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tutorial&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=A7x513Ah1Zk&#34;&gt;https://www.youtube.com/watch?v=A7x513Ah1Zk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Output&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;.&lt;/th&gt; &#xA;   &lt;th&gt;.&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/54370274/230939654-6e667075-1c5c-4e91-9720-69631cd259dc.png&#34; alt=&#34;segment-inpainting&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/54370274/231049649-a0c57991-ec04-4d2d-a10d-cca75ab92a13.png&#34; alt=&#34;segment-inpainting3&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>agiresearch/OpenAGI</title>
    <updated>2023-04-14T01:37:50Z</updated>
    <id>tag:github.com,2023-04-14:/agiresearch/OpenAGI</id>
    <link href="https://github.com/agiresearch/OpenAGI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenAGI: When LLM Meets Domain Experts&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAGI: When LLM Meets Domain Experts&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&#34;May the Force be with LLM and Domain Experts.&#34; -- Generated by ChatGPT&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://arxiv.org/pdf/2304.04370.pdf&#34;&gt;Paper on arXiv&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/agiresearch/OpenAGI/main/image/pipeline.png&#34; alt=&#34;Teaser&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Human intelligence has the remarkable ability to assemble basic skills into complex ones so as to solve complex tasks. This ability is equally important for Artificial Intelligence (AI), and thus, we assert that in addition to the development of large, comprehensive intelligent models, it is equally crucial to equip such models with the capability to harness various domain-specific expert models for complex task-solving in the pursuit of Artificial General Intelligence (AGI). Recent developments in Large Language Models (LLMs) have demonstrated remarkable learning and reasoning abilities, making them promising as a controller to select, synthesize, and execute external models to solve complex tasks.&lt;/p&gt; &#xA;&lt;p&gt;This project presents OpenAGI, an open-source AGI research platform, specifically designed to offer complex, multi-step tasks and accompanied by task-specific datasets, evaluation metrics, and a diverse range of extensible models. OpenAGI formulates complex tasks as natural language queries, serving as input to the LLM. The LLM subsequently selects, synthesizes, and executes models provided by OpenAGI to address the task. Furthermore, the project presents the Reinforcement Learning from Task Feedback (RLTF) mechanism, which uses the task-solving result as feedback to improve the LLM&#39;s task-solving ability. Thus, the LLM is responsible for synthesizing various external models for solving complex tasks, while RLTF provides feedback to improve its task-solving ability, enabling a feedback loop for self-improving AI. We believe that the paradigm of LLMs operating various expert models for complex task-solving is a promising approach towards AGI.&lt;/p&gt; &#xA;&lt;p&gt;To facilitate the community&#39;s long-term improvement and evaluation of AGI&#39;s ability, we open-source the code, benchmark, and evaluation methods of the OpenAGI project, and we appreciate any discussions, comments, suggestions or contributions from the community.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.9.16&lt;/li&gt; &#xA; &lt;li&gt;PyTorch 1.12.1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you encounter any issues while installing transformers==4.27.0.dev0, refer to &lt;a href=&#34;https://github.com/treadon/llama-7b-example&#34;&gt;this repository&lt;/a&gt; for assistance. If you do not plan to run LLaMA, you can install other stable versions instead.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repo&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone https://github.com/agiresearch/OpenAGI.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the preprocessed data from this &lt;a href=&#34;https://drive.google.com/drive/folders/1AjT6y7qLIMxcmHhUBG5IE1_5SnCPR57e?usp=share_link&#34;&gt;Google Drive link&lt;/a&gt;, put it into the &lt;em&gt;root/&lt;/em&gt; folder, then unzip it. If you would like to preprocess your own data, please run data_augmentation.py in the &lt;em&gt;data&lt;/em&gt; folder. Raw data will be automatically downloaded using Hugging Face datasets library; for COCO, please download from &lt;a href=&#34;https://cocodataset.org/#download&#34;&gt;COCO&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget http://images.cocodataset.org/zips/val2017.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/agiresearch/OpenAGI/main/image/data_sample.png&#34; alt=&#34;Teaser&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;To get a teaser of OpenAGI platform, check out the demo.ipynb notebook.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To evaluate Zero-shot and Few-shot LLMs, use jupyter notebook in &lt;em&gt;zero_shot/&lt;/em&gt; folder or &lt;em&gt;few_shot/&lt;/em&gt; folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To evaluate finetuned Flan-T5-Large, please first download the pretrained checkpoints from this &lt;a href=&#34;https://drive.google.com/drive/folders/1AjT6y7qLIMxcmHhUBG5IE1_5SnCPR57e?usp=share_link&#34;&gt;Google Drive link&lt;/a&gt; into &lt;em&gt;finetune/&lt;/em&gt; folder, then run the notebook in that folder. Or pretrain with scripts in &lt;em&gt;finetune/&lt;/em&gt; folder to get your own checkpoint, such as&lt;/p&gt; &lt;pre&gt;&lt;code&gt;python finetune/flan_t5_finetune.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Under construction.&lt;/p&gt; &#xA;&lt;!--&#xA;4. Evaluate with example jupyter notebooks in the *notebooks* folder. Before testing, create a soft link of *data* folder to the *notebooks* folder by&#xA;   &#xA;   ```&#xA;   cd notebooks&#xA;   ln -s ../data .&#xA;   ```&#xA;--&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{openagi,&#xA;  title={OpenAGI: When LLM Meets Domain Experts},&#xA;  author={Ge, Yingqiang and Hua, Wenyue and Ji, Jianchao and Tan, Juntao and Xu, Shuyuan and Zhang, Yongfeng},&#xA;  journal={arXiv},&#xA;  year={2023}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>geekyutao/Inpaint-Anything</title>
    <updated>2023-04-14T01:37:50Z</updated>
    <id>tag:github.com,2023-04-14:/geekyutao/Inpaint-Anything</id>
    <link href="https://github.com/geekyutao/Inpaint-Anything" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Inpaint anything using SAM + inpainting models.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/IAM.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Inpaint Anything: Segment Anything Meets Image Inpainting&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Authors: Tao Yu, Runseng Feng, Ruoyu Feng, Jinming Liu, Xin Jin, Wenjun Zeng and Zhibo Chen.&lt;/li&gt; &#xA; &lt;li&gt;Paper: &lt;a href=&#34;&#34;&gt;arXiv&lt;/a&gt; (releasing)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/MainFramework.png&#34; width=&#34;100%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Inpaint Anything Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Remove&lt;/strong&gt; Anything&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Fill&lt;/strong&gt; Anything&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Replace&lt;/strong&gt; Anything&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Any aspect ratio supported&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 2K resolution supported&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Demo Website (coming soon)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- ## Updates&#xA;| Date | News |&#xA;| ------ | --------&#xA;| 2023-04-12 | Release the Fill Anything feature | &#xA;| 2023-04-10 | Release the Remove Anything feature |&#xA;| 2023-04-10 | Release the first version of Inpaint Anything | --&gt; &#xA;&lt;h2&gt;Remove Anything&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/remove-anything/dog/with_points.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/remove-anything/dog/with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/remove-anything/dog/inpainted_with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Click&lt;/strong&gt; on an object in the image, and Inpainting Anything will &lt;strong&gt;remove&lt;/strong&gt; it instantly!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Click on an object;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://segment-anything.com/&#34;&gt;Segment Anything Model&lt;/a&gt; (SAM) segments the object out;&lt;/li&gt; &#xA; &lt;li&gt;Inpainting models (e.g., &lt;a href=&#34;https://advimman.github.io/lama-project/&#34;&gt;LaMa&lt;/a&gt;) fill the &#34;hole&#34;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Requires &lt;code&gt;python&amp;gt;=3.8&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m pip install torch torchvision torchaudio&#xA;python -m pip install -e segment_anything&#xA;python -m pip install -r lama/requirements.txt &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Specify an image and a point, and Inpaint-Anything will remove the object at the point.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python remove_anything.py \&#xA;    --input_img ./example/remove-anything/dog.jpg \&#xA;    --point_coords 200 450 \&#xA;    --point_labels 1 \&#xA;    --dilate_kernel_size 15 \&#xA;    --output_dir ./results \&#xA;    --sam_model_type &#34;vit_h&#34; \&#xA;    --sam_ckpt sam_vit_h_4b8939.pth \&#xA;    --lama_config ./lama/configs/prediction/default.yaml \&#xA;    --lama_ckpt big-lama&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Demo&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/remove-anything/person/with_points.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/remove-anything/person/with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/remove-anything/person/inpainted_with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/remove-anything/bridge/with_points.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/remove-anything/bridge/with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/remove-anything/bridge/inpainted_with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/remove-anything/boat/with_points.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/remove-anything/boat/with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/remove-anything/boat/inpainted_with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/remove-anything/baseball/with_points.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/remove-anything/baseball/with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/remove-anything/baseball/inpainted_with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Fill Anything&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;caption style=&#34;text-align: center;&#34;&gt;&#xA;  Text prompt: &#34;a teddy bear on a bench&#34;&#xA; &lt;/caption&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/fill-anything/sample1/with_points.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/fill-anything/sample1/with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/fill-anything/sample1/filled_with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Click&lt;/strong&gt; on an object, &lt;strong&gt;type&lt;/strong&gt; in what you want to fill, and Inpaint Anything will &lt;strong&gt;fill&lt;/strong&gt; it!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Click on an object;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://segment-anything.com/&#34;&gt;SAM&lt;/a&gt; segments the object out;&lt;/li&gt; &#xA; &lt;li&gt;Input a text prompt;&lt;/li&gt; &#xA; &lt;li&gt;Text-prompt-guided inpainting models (e.g., &lt;a href=&#34;https://github.com/CompVis/stable-diffusion&#34;&gt;Stable Diffusion&lt;/a&gt;) fill the &#34;hole&#34; according to the text.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Requires &lt;code&gt;python&amp;gt;=3.8&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m pip install torch torchvision torchaudio&#xA;python -m pip install -e segment_anything&#xA;python -m pip install diffusers transformers accelerate scipy safetensors&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Specify an image, a point and text prompt, and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python fill_anything.py \&#xA;    --input_img ./example/fill-anything/sample1.png \&#xA;    --point_coords 750 500 \&#xA;    --point_labels 1 \&#xA;    --text_prompt &#34;a teddy bear on a bench&#34; \&#xA;    --dilate_kernel_size 50 \&#xA;    --output_dir ./results \&#xA;    --sam_model_type &#34;vit_h&#34; \&#xA;    --sam_ckpt sam_vit_h_4b8939.pth&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Demo&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;caption style=&#34;text-align: center;&#34;&gt;&#xA;  Text prompt: &#34;a camera lens in the hand&#34;&#xA; &lt;/caption&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/fill-anything/sample2/with_points.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/fill-anything/sample2/with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/fill-anything/sample2/filled_with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;caption style=&#34;text-align: center;&#34;&gt;&#xA;  Text prompt: &#34;a Picasso painting on the wall&#34;&#xA; &lt;/caption&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/fill-anything/sample5/with_points.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/fill-anything/sample5/with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/fill-anything/sample5/filled_with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;caption style=&#34;text-align: center;&#34;&gt;&#xA;  Text prompt: &#34;an aircraft carrier on the sea&#34;&#xA; &lt;/caption&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/fill-anything/sample3/with_points.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/fill-anything/sample3/with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/fill-anything/sample3/filled_with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;caption style=&#34;text-align: center;&#34;&gt;&#xA;  Text prompt: &#34;a sports car on a road&#34;&#xA; &lt;/caption&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/fill-anything/sample4/with_points.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/fill-anything/sample4/with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/fill-anything/sample4/filled_with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Replace Anything&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;caption style=&#34;text-align: center;&#34;&gt;&#xA;  Text prompt: &#34;sit on the swing&#34;&#xA; &lt;/caption&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/replace-anything/dog/with_points.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/replace-anything/dog/with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/replace-anything/dog/replaced_with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Click&lt;/strong&gt; on an object, &lt;strong&gt;type&lt;/strong&gt; in what background you want to replace, and Inpaint Anything will &lt;strong&gt;replace&lt;/strong&gt; it!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Click on an object;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://segment-anything.com/&#34;&gt;SAM&lt;/a&gt; segments the object out;&lt;/li&gt; &#xA; &lt;li&gt;Input a text prompt;&lt;/li&gt; &#xA; &lt;li&gt;Text-prompt-guided inpainting models (e.g., &lt;a href=&#34;https://github.com/CompVis/stable-diffusion&#34;&gt;Stable Diffusion&lt;/a&gt;) replace the background according to the text.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;caption style=&#34;text-align: center;&#34;&gt;&#xA;  Text prompt: &#34;a bus, on the center of a country road, summer&#34;&#xA; &lt;/caption&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/replace-anything/bus/with_points.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/replace-anything/bus/with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/replace-anything/bus/replaced_with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;caption style=&#34;text-align: center;&#34;&gt;&#xA;  Text prompt: &#34;breakfast&#34;&#xA; &lt;/caption&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/replace-anything/000000029675/with_points.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/replace-anything/000000029675/with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/replace-anything/000000029675/replaced_with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;caption style=&#34;text-align: center;&#34;&gt;&#xA;  Text prompt: &#34;a man in office&#34;&#xA; &lt;/caption&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/replace-anything/man/with_points.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/replace-anything/man/with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/replace-anything/man/replaced_with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;caption style=&#34;text-align: center;&#34;&gt;&#xA;  Text prompt: &#34;crossroad in the city&#34;&#xA; &lt;/caption&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/replace-anything/000000000724/with_points.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/replace-anything/000000000724/with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekyutao/Inpaint-Anything/main/example/replace-anything/000000000724/replaced_with_mask.png&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- ## Cite Us --&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facebookresearch/segment-anything&#34;&gt;Segment Anything&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/advimman/lama&#34;&gt;LaMa&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CompVis/stable-diffusion&#34;&gt;Stable Diffusion&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other Interesting Repoepositories&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VainF/Awesome-Anything&#34;&gt;Awesome Anything&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/IDEA-Research/Grounded-Segment-Anything&#34;&gt;Grounded SAM&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- ## Citation&#xA;If you find this project helpful, please cite the following BibTeX entry.&#xA;```BibTex&#xA;@article{kirillov2023segany,&#xA;  title={Segment Anything}, &#xA;  author={Kirillov, Alexander and Mintun, Eric and Ravi, Nikhila and Mao, Hanzi and Rolland, Chloe and Gustafson, Laura and Xiao, Tete and Whitehead, Spencer and Berg, Alexander C. and Lo, Wan-Yen and Doll{\&#39;a}r, Piotr and Girshick, Ross},&#xA;  journal={arXiv:2304.02643},&#xA;  year={2023}&#xA;} --&gt;</summary>
  </entry>
</feed>