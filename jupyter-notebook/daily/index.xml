<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-26T01:36:18Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>scikit-learn-contrib/hdbscan</title>
    <updated>2022-10-26T01:36:18Z</updated>
    <id>tag:github.com,2022-10-26:/scikit-learn-contrib/hdbscan</id>
    <link href="https://github.com/scikit-learn-contrib/hdbscan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A high performance implementation of HDBSCAN clustering.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/pypi/v/hdbscan.svg&#34;&gt;https://img.shields.io/pypi/v/hdbscan.svg&lt;/a&gt; :target: &lt;a href=&#34;https://pypi.python.org/pypi/hdbscan/&#34;&gt;https://pypi.python.org/pypi/hdbscan/&lt;/a&gt; :alt: PyPI Version .. image:: &lt;a href=&#34;https://anaconda.org/conda-forge/hdbscan/badges/version.svg&#34;&gt;https://anaconda.org/conda-forge/hdbscan/badges/version.svg&lt;/a&gt; :target: &lt;a href=&#34;https://anaconda.org/conda-forge/hdbscan&#34;&gt;https://anaconda.org/conda-forge/hdbscan&lt;/a&gt; :alt: Conda-forge Version .. image:: &lt;a href=&#34;https://anaconda.org/conda-forge/hdbscan/badges/downloads.svg&#34;&gt;https://anaconda.org/conda-forge/hdbscan/badges/downloads.svg&lt;/a&gt; :target: &lt;a href=&#34;https://anaconda.org/conda-forge/hdbscan&#34;&gt;https://anaconda.org/conda-forge/hdbscan&lt;/a&gt; :alt: Conda-forge downloads .. image:: &lt;a href=&#34;https://img.shields.io/pypi/l/hdbscan.svg&#34;&gt;https://img.shields.io/pypi/l/hdbscan.svg&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/scikit-learn-contrib/hdbscan/raw/master/LICENSE&#34;&gt;https://github.com/scikit-learn-contrib/hdbscan/blob/master/LICENSE&lt;/a&gt; :alt: License .. image:: &lt;a href=&#34;https://travis-ci.org/scikit-learn-contrib/hdbscan.svg&#34;&gt;https://travis-ci.org/scikit-learn-contrib/hdbscan.svg&lt;/a&gt; :target: &lt;a href=&#34;https://travis-ci.org/scikit-learn-contrib/hdbscan&#34;&gt;https://travis-ci.org/scikit-learn-contrib/hdbscan&lt;/a&gt; :alt: Travis Build Status .. image:: &lt;a href=&#34;https://codecov.io/gh/scikit-learn-contrib/hdbscan/branch/master/graph/badge.svg&#34;&gt;https://codecov.io/gh/scikit-learn-contrib/hdbscan/branch/master/graph/badge.svg&lt;/a&gt; :target: &lt;a href=&#34;https://codecov.io/gh/scikit-learn-contrib/hdbscan&#34;&gt;https://codecov.io/gh/scikit-learn-contrib/hdbscan&lt;/a&gt; :alt: Test Coverage .. image:: &lt;a href=&#34;https://readthedocs.org/projects/hdbscan/badge/?version=latest&#34;&gt;https://readthedocs.org/projects/hdbscan/badge/?version=latest&lt;/a&gt; :target: &lt;a href=&#34;https://hdbscan.readthedocs.org&#34;&gt;https://hdbscan.readthedocs.org&lt;/a&gt; :alt: Docs .. image:: &lt;a href=&#34;http://joss.theoj.org/papers/10.21105/joss.00205/status.svg&#34;&gt;http://joss.theoj.org/papers/10.21105/joss.00205/status.svg&lt;/a&gt; :target: &lt;a href=&#34;http://joss.theoj.org/papers/10.21105/joss.00205&#34;&gt;http://joss.theoj.org/papers/10.21105/joss.00205&lt;/a&gt; :alt: JOSS article .. image:: &lt;a href=&#34;https://mybinder.org/badge.svg&#34;&gt;https://mybinder.org/badge.svg&lt;/a&gt; :target: &lt;a href=&#34;https://mybinder.org/v2/gh/scikit-learn-contrib/hdbscan&#34;&gt;https://mybinder.org/v2/gh/scikit-learn-contrib/hdbscan&lt;/a&gt; :alt: Launch example notebooks in Binder&lt;/p&gt; &#xA;&lt;h1&gt;======= HDBSCAN&lt;/h1&gt; &#xA;&lt;p&gt;HDBSCAN - Hierarchical Density-Based Spatial Clustering of Applications with Noise. Performs DBSCAN over varying epsilon values and integrates the result to find a clustering that gives the best stability over epsilon. This allows HDBSCAN to find clusters of varying densities (unlike DBSCAN), and be more robust to parameter selection.&lt;/p&gt; &#xA;&lt;p&gt;In practice this means that HDBSCAN returns a good clustering straight away with little or no parameter tuning -- and the primary parameter, minimum cluster size, is intuitive and easy to select.&lt;/p&gt; &#xA;&lt;p&gt;HDBSCAN is ideal for exploratory data analysis; it&#39;s a fast and robust algorithm that you can trust to return meaningful clusters (if there are any).&lt;/p&gt; &#xA;&lt;p&gt;Based on the papers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;McInnes L, Healy J. *Accelerated Hierarchical Density Based Clustering* &#xA;In: 2017 IEEE International Conference on Data Mining Workshops (ICDMW), IEEE, pp 33-42.&#xA;2017 `[pdf] &amp;lt;http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;amp;arnumber=8215642&amp;gt;`_&#xA;&#xA;R. Campello, D. Moulavi, and J. Sander, *Density-Based Clustering Based on&#xA;Hierarchical Density Estimates*&#xA;In: Advances in Knowledge Discovery and Data Mining, Springer, pp 160-172.&#xA;2013&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Documentation, including tutorials, are available on ReadTheDocs at &lt;a href=&#34;http://hdbscan.readthedocs.io/en/latest/&#34;&gt;http://hdbscan.readthedocs.io/en/latest/&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;Notebooks &lt;code&gt;comparing HDBSCAN to other clustering algorithms &amp;lt;http://nbviewer.jupyter.org/github/scikit-learn-contrib/hdbscan/blob/master/notebooks/Comparing%20Clustering%20Algorithms.ipynb&amp;gt;&lt;/code&gt;&lt;em&gt;, explaining &lt;code&gt;how HDBSCAN works &amp;lt;http://nbviewer.jupyter.org/github/scikit-learn-contrib/hdbscan/blob/master/notebooks/How%20HDBSCAN%20Works.ipynb&amp;gt;&lt;/code&gt;&lt;/em&gt; and &lt;code&gt;comparing performance with other python clustering implementations &amp;lt;http://nbviewer.jupyter.org/github/scikit-learn-contrib/hdbscan/blob/master/notebooks/Benchmarking%20scalability%20of%20clustering%20implementations-v0.7.ipynb&amp;gt;&lt;/code&gt;_ are available.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;How to use HDBSCAN&lt;/h2&gt; &#xA;&lt;p&gt;The hdbscan package inherits from sklearn classes, and thus drops in neatly next to other sklearn clusterers with an identical calling API. Similarly it supports input in a variety of formats: an array (or pandas dataframe, or sparse matrix) of shape &lt;code&gt;(num_samples x num_features)&lt;/code&gt;; an array (or sparse matrix) giving a distance matrix between samples.&lt;/p&gt; &#xA;&lt;p&gt;.. code:: python&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import hdbscan&#xA;from sklearn.datasets import make_blobs&#xA;&#xA;data, _ = make_blobs(1000)&#xA;&#xA;clusterer = hdbscan.HDBSCAN(min_cluster_size=10)&#xA;cluster_labels = clusterer.fit_predict(data)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;Significant effort has been put into making the hdbscan implementation as fast as possible. It is &lt;code&gt;orders of magnitude faster than the reference implementation &amp;lt;http://nbviewer.jupyter.org/github/scikit-learn-contrib/hdbscan/blob/master/notebooks/Python%20vs%20Java.ipynb&amp;gt;&lt;/code&gt;_ in Java, and is currently faster than highly optimized single linkage implementations in C and C++. &lt;code&gt;version 0.7 performance can be seen in this notebook &amp;lt;http://nbviewer.jupyter.org/github/scikit-learn-contrib/hdbscan/blob/master/notebooks/Benchmarking%20scalability%20of%20clustering%20implementations-v0.7.ipynb&amp;gt;&lt;/code&gt;_ . In particular &lt;code&gt;performance on low dimensional data is better than sklearn&#39;s DBSCAN &amp;lt;http://nbviewer.jupyter.org/github/scikit-learn-contrib/hdbscan/blob/master/notebooks/Benchmarking%20scalability%20of%20clustering%20implementations%202D%20v0.7.ipynb&amp;gt;&lt;/code&gt;_ , and via support for caching with joblib, re-clustering with different parameters can be almost free.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Additional functionality&lt;/h2&gt; &#xA;&lt;p&gt;The hdbscan package comes equipped with visualization tools to help you understand your clustering results. After fitting data the clusterer object has attributes for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The condensed cluster hierarchy&lt;/li&gt; &#xA; &lt;li&gt;The robust single linkage cluster hierarchy&lt;/li&gt; &#xA; &lt;li&gt;The reachability distance minimal spanning tree&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All of which come equipped with methods for plotting and converting to Pandas or NetworkX for further analysis. See the notebook on &lt;code&gt;how HDBSCAN works &amp;lt;http://nbviewer.jupyter.org/github/scikit-learn-contrib/hdbscan/blob/master/notebooks/How%20HDBSCAN%20Works.ipynb&amp;gt;&lt;/code&gt;_ for examples and further details.&lt;/p&gt; &#xA;&lt;p&gt;The clusterer objects also have an attribute providing cluster membership strengths, resulting in optional soft clustering (and no further compute expense). Finally each cluster also receives a persistence score giving the stability of the cluster over the range of distance scales present in the data. This provides a measure of the relative strength of clusters.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Outlier Detection&lt;/h2&gt; &#xA;&lt;p&gt;The HDBSCAN clusterer objects also support the GLOSH outlier detection algorithm. After fitting the clusterer to data the outlier scores can be accessed via the &lt;code&gt;outlier_scores_&lt;/code&gt; attribute. The result is a vector of score values, one for each data point that was fit. Higher scores represent more outlier like objects. Selecting outliers via upper quantiles is often a good approach.&lt;/p&gt; &#xA;&lt;p&gt;Based on the paper: R.J.G.B. Campello, D. Moulavi, A. Zimek and J. Sander &lt;em&gt;Hierarchical Density Estimates for Data Clustering, Visualization, and Outlier Detection&lt;/em&gt;, ACM Trans. on Knowledge Discovery from Data, Vol 10, 1 (July 2015), 1-51.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Robust single linkage&lt;/h2&gt; &#xA;&lt;p&gt;The hdbscan package also provides support for the &lt;em&gt;robust single linkage&lt;/em&gt; clustering algorithm of Chaudhuri and Dasgupta. As with the HDBSCAN implementation this is a high performance version of the algorithm outperforming scipy&#39;s standard single linkage implementation. The robust single linkage hierarchy is available as an attribute of the robust single linkage clusterer, again with the ability to plot or export the hierarchy, and to extract flat clusterings at a given cut level and gamma value.&lt;/p&gt; &#xA;&lt;p&gt;Example usage:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: python&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import hdbscan&#xA;from sklearn.datasets import make_blobs&#xA;&#xA;data, _ = make_blobs(1000)&#xA;&#xA;clusterer = hdbscan.RobustSingleLinkage(cut=0.125, k=7)&#xA;cluster_labels = clusterer.fit_predict(data)&#xA;hierarchy = clusterer.cluster_hierarchy_&#xA;alt_labels = hierarchy.get_clusters(0.100, 5)&#xA;hierarchy.plot()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Based on the paper: K. Chaudhuri and S. Dasgupta. &lt;em&gt;&#34;Rates of convergence for the cluster tree.&#34;&lt;/em&gt; In Advances in Neural Information Processing Systems, 2010.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;Easiest install, if you have Anaconda (thanks to conda-forge which is awesome!):&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda install -c conda-forge hdbscan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;PyPI install, presuming you have an up to date pip:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install hdbscan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Binary wheels for a number of platforms are available thanks to the work of Ryan Helinski &lt;a href=&#34;mailto:rlhelinski@gmail.com&#34;&gt;rlhelinski@gmail.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If pip is having difficulties pulling the dependencies then we&#39;d suggest to first upgrade pip to at least version 10 and try again:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install --upgrade pip&#xA;pip install hdbscan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Otherwise install the dependencies manually using anaconda followed by pulling hdbscan from pip:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda install cython&#xA;conda install numpy scipy&#xA;conda install scikit-learn&#xA;pip install hdbscan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a manual install of the latest code directly from GitHub:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install --upgrade git+https://github.com/scikit-learn-contrib/hdbscan.git#egg=hdbscan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively download the package, install requirements, and manually run the installer:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget https://github.com/scikit-learn-contrib/hdbscan/archive/master.zip&#xA;unzip master.zip&#xA;rm master.zip&#xA;cd hdbscan-master&#xA;&#xA;pip install -r requirements.txt&#xA;&#xA;python setup.py install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Running the Tests&lt;/h2&gt; &#xA;&lt;p&gt;The package tests can be run after installation using the command:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nosetests -s hdbscan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or, if &lt;code&gt;nose&lt;/code&gt; is installed but &lt;code&gt;nosetests&lt;/code&gt; is not in your &lt;code&gt;PATH&lt;/code&gt; variable:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -m nose -s hdbscan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If one or more of the tests fail, please report a bug at &lt;a href=&#34;https://github.com/scikit-learn-contrib/hdbscan/issues/new&#34;&gt;https://github.com/scikit-learn-contrib/hdbscan/issues/new&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Python Version&lt;/h2&gt; &#xA;&lt;p&gt;The hdbscan library supports both Python 2 and Python 3. However we recommend Python 3 as the better option if it is available to you.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Help and Support&lt;/h2&gt; &#xA;&lt;p&gt;For simple issues you can consult the &lt;code&gt;FAQ &amp;lt;https://hdbscan.readthedocs.io/en/latest/faq.html&amp;gt;&lt;/code&gt;_ in the documentation. If your issue is not suitably resolved there, please check the &lt;code&gt;issues &amp;lt;https://github.com/scikit-learn-contrib/hdbscan/issues&amp;gt;&lt;/code&gt;_ on github. Finally, if no solution is available there feel free to &lt;code&gt;open an issue &amp;lt;https://github.com/scikit-learn-contrib/hdbscan/issues/new&amp;gt;&lt;/code&gt;_ ; the authors will attempt to respond in a reasonably timely fashion.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions in any form! Assistance with documentation, particularly expanding tutorials, is always welcome. To contribute please &lt;code&gt;fork the project &amp;lt;https://github.com/scikit-learn-contrib/hdbscan/issues#fork-destination-box&amp;gt;&lt;/code&gt;_ make your changes and submit a pull request. We will do our best to work through any issues with you and get your code merged into the main branch.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Citing&lt;/h2&gt; &#xA;&lt;p&gt;If you have used this codebase in a scientific publication and wish to cite it, please use the &lt;code&gt;Journal of Open Source Software article &amp;lt;http://joss.theoj.org/papers/10.21105/joss.00205&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;L. McInnes, J. Healy, S. Astels, *hdbscan: Hierarchical density based clustering*&#xA;In: Journal of Open Source Software, The Open Journal, volume 2, number 11.&#xA;2017&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;.. code:: bibtex&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{mcinnes2017hdbscan,&#xA;  title={hdbscan: Hierarchical density based clustering},&#xA;  author={McInnes, Leland and Healy, John and Astels, Steve},&#xA;  journal={The Journal of Open Source Software},&#xA;  volume={2},&#xA;  number={11},&#xA;  pages={205},&#xA;  year={2017}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To reference the high performance algorithm developed in this library please cite our paper in ICDMW 2017 proceedings.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;McInnes L, Healy J. *Accelerated Hierarchical Density Based Clustering* &#xA;In: 2017 IEEE International Conference on Data Mining Workshops (ICDMW), IEEE, pp 33-42.&#xA;2017&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;.. code:: bibtex&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@inproceedings{mcinnes2017accelerated,&#xA;  title={Accelerated Hierarchical Density Based Clustering},&#xA;  author={McInnes, Leland and Healy, John},&#xA;  booktitle={Data Mining Workshops (ICDMW), 2017 IEEE International Conference on},&#xA;  pages={33--42},&#xA;  year={2017},&#xA;  organization={IEEE}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;The hdbscan package is 3-clause BSD licensed. Enjoy.&lt;/p&gt;</summary>
  </entry>
</feed>