<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-28T01:32:03Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>GAP-LAB-CUHK-SZ/gaustudio</title>
    <updated>2024-04-28T01:32:03Z</updated>
    <id>tag:github.com,2024-04-28:/GAP-LAB-CUHK-SZ/gaustudio</id>
    <link href="https://github.com/GAP-LAB-CUHK-SZ/gaustudio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Modular Framework for 3D Gaussian Splatting and Beyond&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;img alt=&#34;gaustudio&#34; src=&#34;https://raw.githubusercontent.com/GAP-LAB-CUHK-SZ/gaustudio/master/assets/logo.PNG&#34; width=&#34;30%&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;GauStudio is a modular framework that supports and accelerates research and development in the rapidly advancing field of 3D Gaussian Splatting (3DGS) and its diverse applications.&lt;/b&gt; &lt;/p&gt; &#xA;&lt;img alt=&#34;gaustudio&#34; src=&#34;https://github.com/GAP-LAB-CUHK-SZ/gaustudio/assets/40767265/c7ae8183-583f-4467-ab67-e34c77c3bfd6&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://drive.google.com/file/d/1mizzZSXn-YToww7kW3OV0lUbfME9Mobg/view?usp=sharing&#34;&gt;Paper&lt;/a&gt; | &lt;a href=&#34;&#34;&gt;Document(Comming Soon)&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Before installing the software, please note that the following steps have been tested on Ubuntu 20.04. If you encounter any issues during the installation on Windows, we are open to addressing and resolving such issues.&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NVIDIA graphics card with at least 6GB VRAM&lt;/li&gt; &#xA; &lt;li&gt;CUDA installed&lt;/li&gt; &#xA; &lt;li&gt;Python &amp;gt;= 3.8&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Optional Step: Create a Conda Environment&lt;/h2&gt; &#xA;&lt;p&gt;It is recommended to create a conda environment before proceeding with the installation. You can create a conda environment using the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Create a new conda environment&#xA;conda create -n gaustudio python=3.8&#xA;# Activate the conda environment&#xA;conda activate gaustudio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Step 1: Install PyTorch&lt;/h2&gt; &#xA;&lt;p&gt;You will need to install PyTorch. The software has been tested with torch1.12.1+cu113 and torch2.0.1+cu118, but other versions should also work fine. You can install PyTorch using conda as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Example command to install PyTorch version 1.12.1+cu113&#xA;conda install pytorch=1.12.1 torchvision=0.13.1 cudatoolkit=11.3 -c pytorch&#xA;&#xA;# Example command to install PyTorch version 2.0.1+cu118&#xA;pip install torch torchvision --index-url https://download.pytorch.org/whl/cu118&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Step 2: Install Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;Install the necessary dependencies by running the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Step 3: Install Customed Rasterizer and Gaustudio&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd submodules/gaustudio-diff-gaussian-rasterization&#xA;python setup.py install&#xA;cd ../../&#xA;python setup.py develop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Optional Step: Install PyTorch3D&lt;/h2&gt; &#xA;&lt;p&gt;If you require mesh rendering and further mesh refinement, you can install PyTorch3D follow the &lt;a href=&#34;https://github.com/facebookresearch/pytorch3d/raw/main/INSTALL.md&#34;&gt;link&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;h1&gt;QuickStart&lt;/h1&gt; &#xA;&lt;h2&gt;Mesh Extraction for 3DGS&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;img alt=&#34;gaustudio&#34; src=&#34;https://github.com/GAP-LAB-CUHK-SZ/gaustudio/assets/40767265/ee6bf7ae-379b-4264-9065-2929f1654c9a&#34; width=&#34;100%&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Prepare the input data&lt;/h3&gt; &#xA;&lt;p&gt;We currently support the output directory generated by most gaussian splatting methods such as &lt;a href=&#34;https://github.com/graphdeco-inria/gaussian-splatting&#34;&gt;3DGS&lt;/a&gt;, &lt;a href=&#34;https://github.com/autonomousvision/mip-splatting&#34;&gt;mip-splatting&lt;/a&gt;, &lt;a href=&#34;https://github.com/kcheng1021/GaussianPro&#34;&gt;GaussianPro&lt;/a&gt; with the following minimal structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;- output_dir&#xA;    - cameras.json (necessary)&#xA;    - point_cloud &#xA;        - iteration_xxxx&#xA;            - point_cloud.ply (necessary)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We are preparing some &lt;a href=&#34;&#34;&gt;demo data(comming soon)&lt;/a&gt; for quick-start testing.&lt;/p&gt; &#xA;&lt;h3&gt;Running the Mesh Extraction&lt;/h3&gt; &#xA;&lt;p&gt;To extract a mesh from the input data, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gs-extract-mesh -m ./data/1750250955326095360_data/result -o ./output/1750250955326095360_data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;./data/1750250955326095360_data/result&lt;/code&gt; with the path to your input output_dir. Replace &lt;code&gt;./output/1750250955326095360_data&lt;/code&gt; with the desired path for the output mesh.&lt;/p&gt; &#xA;&lt;h3&gt;Binding Texture to the Mesh&lt;/h3&gt; &#xA;&lt;p&gt;The output data is organized in the same format as &lt;a href=&#34;https://github.com/nmoehrle/mvs-texturing/tree/master&#34;&gt;mvs-texturing&lt;/a&gt;. Follow these steps to add texture to the mesh:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compile the mvs-texturing repository on your system.&lt;/li&gt; &#xA; &lt;li&gt;Add the build/bin directory to your PATH environment variable&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the output directory containing the mesh.&lt;/li&gt; &#xA; &lt;li&gt;Run the following command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;texrecon ./images ./fused_mesh.ply ./textured_mesh --outlier_removal=gauss_clamping --data_term=area --no_intermediate_results&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Plan of Release&lt;/h1&gt; &#xA;&lt;p&gt;GauStudio will support more 3DGS-based methods in the near future, if you are also interested in GauStudio and want to improve it, welcome to submit PR!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Release mesh extraction and rendering toolkit&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Release common nerf and neus dataset loader and preprocessing code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Release Semi-Dense, MVSplat-based, and DepthAnything-based Gaussians Initialization&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Release of full pipelines for training&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Release Gaussian Sky Modeling and Sky Mask Generation Scripts&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Release VastGaussian Reimplementation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Release Mip-Splatting, Scaffold-GS, and Triplane-GS training&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Release &#39;gs-viewer&#39; for online visualization and &#39;gs-compress&#39; for 3DGS postprocessing&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Release SparseGS and FSGS training&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Release Sugar and GaussianPro training&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;BibTeX&lt;/h1&gt; &#xA;&lt;p&gt;If you found this library useful for your research, please consider citing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{ye2024gaustudio,&#xA;  title={GauStudio: A Modular Framework for 3D Gaussian Splatting and Beyond},&#xA;  author={Ye, Chongjie and Nie, Yinyu and Chang, Jiahao and Chen, Yuantao and Zhi, Yihao and Han, Xiaoguang},&#xA;  journal={arXiv preprint arXiv:2403.19632},&#xA;  year={2024}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;The code is released under the MIT License except the rasterizer. We also welcome commercial cooperation to advance the applications of 3DGS and address unresolved issues. If you are interested, welcome to contact Chongjie at &lt;a href=&#34;mailto:chongjieye@link.cuhk.edu.cn&#34;&gt;chongjieye@link.cuhk.edu.cn&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>GoogleCloudPlatform/applied-ai-engineering-samples</title>
    <updated>2024-04-28T01:32:03Z</updated>
    <id>tag:github.com,2024-04-28:/GoogleCloudPlatform/applied-ai-engineering-samples</id>
    <link href="https://github.com/GoogleCloudPlatform/applied-ai-engineering-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository compiles code samples and notebooks demonstrating how to use Generative AI on Google Cloud Vertex AI.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google Cloud Applied AI Engineering&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/applied-ai-engineering-samples/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to the Google Cloud Applied AI Engineering repository. This repository contains reference guides, blueprints, code samples, and hands-on labs developed by the Google Cloud Applied AI Engineering team.&lt;/p&gt; &#xA;&lt;h2&gt;Repository structure&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/applied-ai-engineering-samples/main/genai-on-vertex-ai/README.md&#34;&gt;Generative AI on Vertex AI&lt;/a&gt;&lt;/strong&gt;: This section contains code samples and hands-on labs demonstrating the use of &lt;a href=&#34;https://cloud.google.com/vertex-ai/docs/generative-ai/learn/overview&#34;&gt;Generative AI models and tools in Vertex AI&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GoogleCloudPlatform/applied-ai-engineering-samples/main/ai-infrastructure/README.md&#34;&gt;Google Cloud AI/ML infrastructure&lt;/a&gt;&lt;/strong&gt;: Reference guides and blueprints that compile best practices, and prescriptive guidance for running large-scale AI/ML workloads on Google Cloud AI/ML infrastructure.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions or if you found any problems with this repository, please report through GitHub issues.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This is not an officially supported Google product. The code in this repository is for demonstrative purposes only.&lt;/p&gt;</summary>
  </entry>
</feed>