<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-11T01:38:53Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>youssefHosni/Time-Series-With-Python</title>
    <updated>2023-02-11T01:38:53Z</updated>
    <id>tag:github.com,2023-02-11:/youssefHosni/Time-Series-With-Python</id>
    <link href="https://github.com/youssefHosni/Time-Series-With-Python" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Time Series In Python&lt;/h1&gt; &#xA;&lt;p&gt;Time series data is one of the most common data types in the industry and you will probably be working with it in your career. Therefore understanding how to work with it and how to apply analytical and forecasting techniques are critical for every aspiring data scientist. In this series of articles, I will go through the basic techniques to work with time-series data, starting from data manipulation, analysis, and visualization to understand your data and prepare it for and then using the statistical, machine, and deep learning techniques for forecasting and classification. It will be more of a practical guide in which I will be applying each discussed and explained concept to real data.&lt;/p&gt; &#xA;&lt;p&gt;This repository contins the codes and the data used in the &lt;a href=&#34;https://medium.com/@youssefraafat57/list/time-series-in-python-a152db6b5b2c&#34;&gt;Time Series In Python series of articles on medium&lt;/a&gt;, this series will contain ten articles as the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Manipulating Time Series Data In Python Pandas [A Practical Guide] &lt;a href=&#34;https://github.com/youssefHosni/Time-Series-With-Python/tree/main/Time%20Series%20Manipulation&#34;&gt;Codes &amp;amp; Data&lt;/a&gt; | &lt;a href=&#34;https://pub.towardsai.net/manipulating-time-series-data-in-python-49aed42685a0&#34;&gt;Article&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Time Series Analysis in Python Pandas [A Practical Guide]&amp;nbsp;&lt;a href=&#34;https://github.com/youssefHosni/Time-Series-With-Python/tree/main/Time%20Series%20Analysis&#34;&gt;Codes &amp;amp; Data&lt;/a&gt; | &lt;a href=&#34;https://pub.towardsai.net/time-series-data-analysis-in-python-1492ee4ca974&#34;&gt;Article&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Visualizing Time Series Data in Python [A practical Guide] &lt;a href=&#34;https://github.com/youssefHosni/Time-Series-With-Python/tree/main/Time%20Series%20Data%20Visualization&#34;&gt;Codes &amp;amp; Data&lt;/a&gt; | &lt;a href=&#34;https://pub.towardsai.net/time-series-data-visualization-in-python-2b1959726312&#34;&gt;Article&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Arima Models in Python [A practical Guide] [Part1] &lt;a href=&#34;https://pub.towardsai.net/time-series-forecasting-with-arima-models-in-python-part-1-c2940a7dbc48&#34;&gt;Codes &amp;amp; Data&lt;/a&gt; | &lt;a href=&#34;https://pub.towardsai.net/time-series-forecasting-with-arima-models-in-python-part-1-c2940a7dbc48&#34;&gt;Article&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Arima Models in Python [A practical Guide] [Part2] &lt;a href=&#34;https://pub.towardsai.net/time-series-forecasting-with-arima-models-in-python-part-1-c2940a7dbc48&#34;&gt;Codes &amp;amp; Data&lt;/a&gt; | &lt;a href=&#34;https://pub.towardsai.net/time-series-forecasting-with-arima-models-in-python-part-2-91a30d10efb0&#34;&gt;Article&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Machine Learning for Time Series Data [A practical Guide] [Regression] &lt;a href=&#34;https://github.com/youssefHosni/Time-Series-With-Python/tree/main/Machine%20Learning%20For%20Time%20Series&#34;&gt;Codes &amp;amp; Data&lt;/a&gt; | &lt;a href=&#34;https://pub.towardsai.net/machine-learning-for-time-series-data-in-python-regression-5e19fa2e7471&#34;&gt;Article&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Machine Learning for Time Series Data [A practical Guide] [Classifcation] &lt;a href=&#34;&#34;&gt;Codes &amp;amp; Data&lt;/a&gt; | &lt;a href=&#34;&#34;&gt;Article&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Deep Learning for Time Series Data [A practical Guide] &lt;a href=&#34;&#34;&gt;Codes &amp;amp; Data&lt;/a&gt; | &lt;a href=&#34;&#34;&gt;Article&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Time Series Forecasting project using statistical analysis, machine learning &amp;amp; deep learning &lt;a href=&#34;&#34;&gt;Codes &amp;amp; Data&lt;/a&gt; | &lt;a href=&#34;&#34;&gt;Article&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Time Series Classification using statistical analysis, machine learning &amp;amp; deep learning &lt;a href=&#34;&#34;&gt;Codes &amp;amp; Data&lt;/a&gt; | &lt;a href=&#34;&#34;&gt;Article&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>Paraworks/vits_with_chatgpt-gpt3</title>
    <updated>2023-02-11T01:38:53Z</updated>
    <id>tag:github.com,2023-02-11:/Paraworks/vits_with_chatgpt-gpt3</id>
    <link href="https://github.com/Paraworks/vits_with_chatgpt-gpt3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;2023/2/10更新 vits-onnx 一键式启动&lt;/h2&gt; &#xA;&lt;h1&gt;第一步：server端启动后端api程序(Windows也可以)&lt;/h1&gt; &#xA;&lt;h2&gt;Combining chatgpt/gpt3&amp;amp;vits as api and launch it（Server suggested）&lt;/h2&gt; &#xA;&lt;p&gt;onnx model : &lt;a href=&#34;https://huggingface.co/Mahiruoshi/vits_onnx_model&#34;&gt;https://huggingface.co/Mahiruoshi/vits_onnx_model&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#核心思路:服务器部署api，完成主要工作&#xA;#Installing cmake and FFmpeg, showing FFmpeg&#xA;sudo apt update&#xA;sudo apt upgrade&#xA;sudo apt install ffmpeg&#xA;ffmpeg -version&#xA;#Creating enviornments&#xA;conda create -n chatbot python=3.8&#xA;conda init bash&#xA;bash&#xA;conda activate chatbot&#xA;git clone https://github.com/Paraworks/vits_with_chatgpt-gpt3&#xA;cd vits_with_chatgpt-gpt3&#xA;pip install -r requirements.txt&#xA;#after uploading onnx models and edit it in the api_launch.py, launch&#xA;python api_launch.py --key &#39;openapikey see: https://openai.com/api/&#39;&#xA;#这只是一种思路，建议根据自己的需求自行修改，先实现普通的tts后再去整大活，比如随时随地掏出手机和老婆聊天()。&#xA; #* Running on all addresses (0.0.0.0)&#xA; #* Running on http://127.0.0.1:8080&#xA; #* Running on http://172.16.5.4:8080&#xA;#部署到服务器以后的标准网页格式,http://yourhost:8080/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;第二步：从release中下载前端，解压后直接运行&lt;/h1&gt; &#xA;&lt;p&gt;Run basic.exe after exporting it from release&lt;/p&gt; &#xA;&lt;h1&gt;2023/2/1更新 本地化vtb版本&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Paraworks/audio-drive-live2d-with-vits-support&#34;&gt;https://github.com/Paraworks/audio-drive-live2d-with-vits-support&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;启动api&lt;/h2&gt; &#xA;&lt;h2&gt;Why using api?&lt;/h2&gt; &#xA;&lt;p&gt;本地能不能跑成gpt都是个问题，当然挂服务器上也是一个可行措施，当然，你也可以在把自己的电脑当作api&lt;/p&gt; &#xA;&lt;h2&gt;Need Chatgpt instead?&lt;/h2&gt; &#xA;&lt;p&gt;Using these codes to replace gpt3_chat(text)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#CHATGPT抓取&#xA;session_token = &#39;参考https://www.youtube.com/watch?v=TdNSj_qgdFk&#39;&#xA;api = ChatGPT(session_token)&#xA;response_from_chatgpt = api.send_message(text)&#xA;text= response_from_chatgpt[&#39;message&#39;].replace(&#39;\n&#39;,&#39;&#39;).replace(&#39; &#39;,&#39;&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to chat with it indiscriminately as if it is your waifu, the company will stop you lol.&lt;/p&gt; &#xA;&lt;h2&gt;What to do with game?&lt;/h2&gt; &#xA;&lt;p&gt;Official website of RenPy &lt;a href=&#34;https://www.renpy.org/&#34;&gt;https://www.renpy.org/&lt;/a&gt; You can follow the instructions and beautify your game, can take my game given as a reference.&lt;/p&gt; &#xA;&lt;h2&gt;极速入门renpy&lt;/h2&gt; &#xA;&lt;p&gt;抛弃那些花里胡哨的设置，只编辑script.rpy。交互式live2d的核心代码&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#定义角色,这个类将会继承我们需要的live2d模型和语音文件这些花里胡哨的东西&#xA;define Character1 = Character(&#34;First Character&#34;)&#xA;#为游戏配置live2d，你需要在安装renpy后将从live2d官网下载的cublism for native压缩包放到renpy的目录下，之后点开renpy按照指示自动加载。&#xA;define config.gl2 = True&#xA;#导入live2d模型,大部分live2d模型的文件夹名字和model3文件的名字相同，可以直接将路径名设置为文件夹的名字，保险起见也可直接对应model3文件&#xA;image Character1 = Live2D(&#34;live2d/hiyori&#34;,loop=True)&#xA;#一定要有一个&#34;开始&#34;场景，场景用label标记。&#xA;label start:&#xA;#导入背景图片，在image 处自定义，格式‘bg name.png’,中间要带空格号，我也不知道为什么要这样设定&#xA;    show bg name&#xA;    #加载live2d动作，参考https://www.renpy.cn/doc/live2d.html&#xA;#live2d模型都有自己的动作名，你可以在model3文件中查看，也可以自己用动作捕捉工具(steam里搜vtuber)自定义。&#xA;    show Character1 m04&#xA;#renpy有两种加载python命令的方式，一种是&#34;$ &#34;+代码，另外一种是&#34;Python:&#34;，下一行缩进后编写，这里先用&#34;$ &#34;&#xA;#导入需要的库&#xA;    $ import requests&#xA;    $ import os&#xA;    $ import threading &#xA;#这些参数是我认为适合在应用端设定的&#xA;#spk_id是vits模型中的人物id，vits多人模型通过变化spk_id来修改说话人&#xA;    $ global spk_id&#xA;#your_name是为了增加代入感和gpt3的chatbot聊天用的，chatgpt则不需要&#xA;    $ global your_name&#xA;#open_api_key则是每个人特有的，你也可以从官网上复制好后直接存储在游戏中&#xA;    $ global open_api_key&#xA;#web_base就是程序生成的网址，我设定的程序都是host/route_nameX?parameter1=[your_input1]&amp;amp;parameter2=[your_input2]......&amp;amp;parameter3=[your_input3]这种形式，你也可以改成表单&#xA;    $ global web_base&#xA;#这三个是vits用到的参数，樱花妹说中文还是需要仔细调的，不然很难听进去。特别是轻量化模型，日文也需要()&#xA;    $ global noise_scale&#xA;    $ global noise_scale_w&#xA;    $ global speaking_speed&#xA;#jump直接切换至下一场景&#xA;    jump setting0&#xA;return&#xA;&#xA;label setting0:&#xA;#renpy需要在python命令中用renpy.input获取文本输入，这样就可以修改参数了。调试后可以将这些参数存储在游戏文件中。&#xA;    $ web_base = renpy.input(&#34;输入后端api的地址，如本地推理为&#39;http://127.0.0.1:8080&#39;，终端运行inference_api.py时查看&#34;,length=100)&#xA;    jump sense1&#xA;&#xA;label sense1:&#xA;#获取当前项目所在路径，创建存储音频文件的路径&#xA;    $ current_work_dir = os.path.dirname(__file__)&#xA;    $ weight_path = os.path.join(current_work_dir, &#39;temp.ogg&#39;)&#xA;    $ weight_path = weight_path.replace(&#34;\\&#34;,&#34;/&#34;)&#xA;#交互的第一步&#xA;    $ your_text = renpy.input(&#39;&#39;,length=60)&#xA;#合成网址用来发送请求(本来只有需传入文本就行了，后来参数越传越多)&#xA;    $ webs = web_base + &#34;/gpt?text=&#34;+ your_text&#xA;#这就是另外一种插入python指令的方法了，用treading实现同步运行&#xA;    python:&#xA;        def get_voice():&#xA;            res = requests.get(webs)&#xA;            music = res.content&#xA;            with open(weight_path, &#39;wb&#39;) as code:&#xA;                code.write(music)&#xA;            web2 = web_base + &#34;/word&#34;&#xA;            answer = requests.get(web2).text&#xA;            global answer&#xA;#            os.system(weight_path)&#xA;        thread = threading.Thread(target=get_voice)&#xA;        thread.start()&#xA;#这是选择界面，决定是否要remake&#xA;menu:&#xA;    &#34;查看回复&#34;:&#xA;        jump reply&#xA;    &#34;重新设定&#34;:&#xA;        jump setting0&#xA;#最后的展示阶段，可以自己添加动作，这里选择用voice播放声音而不是简单粗暴的os&#xA;label reply:&#xA;    show Character1 m02&#xA;    voice weight_path&#xA;    Character1 &#39;[answer]&#39;&#xA;    show Character1 m03&#xA;    jump sense1&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>BlockchainCommons/Learning-Bitcoin-from-the-Command-Line</title>
    <updated>2023-02-11T01:38:53Z</updated>
    <id>tag:github.com,2023-02-11:/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line</id>
    <link href="https://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A complete course for learning Bitcoin programming and usage from the command&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Learning Bitcoin from the Command Line 2.2.0&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;em&gt;by Christopher Allen and Shannon Appelcline&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://www.blockchaincommons.com/images/projects/lbtc-screen.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Learning Bitcoin from the Command Line is a tutorial for working with Bitcoin (and Lightning) that teaches direct interaction with the servers themselves, as the most robust and secure way to begin cryptocurrency work.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: This is a draft in progress, so that I can get some feedback from early reviewers. It is not yet ready for use.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;em&gt;This tutorial assumes that you have some minimal background of how to use the command line interface. If not, there are many tutorials available, and I have one for Mac users at &lt;a href=&#34;https://github.com/ChristopherA/intro-mac-command-line&#34;&gt;https://github.com/ChristopherA/intro-mac-command-line&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/tree/portuguese-translation/pt/README.md&#34;&gt;Portuguese&lt;/a&gt; — v2.0.1 translation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/tree/spanish-translation/es/README.md&#34;&gt;Spanish&lt;/a&gt; - v2.0.1 translation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;d like to make your own translation, please see &lt;a href=&#34;https://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/tree/master#contributing&#34;&gt;Contributing&lt;/a&gt;, below.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;h3&gt;PART ONE: PREPARING FOR BITCOIN&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Status:&lt;/strong&gt; Finished. Updated for 0.20.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/01_0_Introduction.md&#34;&gt;1.0: Introduction to Programming with Bitcoin Core and Lightning&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/01_1_Introducing_Bitcoin.md&#34;&gt;Interlude: Introducing Bitcoin&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/02_0_Setting_Up_a_Bitcoin-Core_VPS.md&#34;&gt;2.0: Setting Up a Bitcoin-Core VPS&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/02_1_Setting_Up_a_Bitcoin-Core_VPS_with_StackScript.md&#34;&gt;2.1: Setting Up a Bitcoin-Core VPS with Bitcoin Standup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/02_2_Setting_Up_Bitcoin_Core_Other.md&#34;&gt;2.2: Setting Up a Bitcoin-Core Machine via Other Means&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PART TWO: USING BITCOIN-CLI&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Status:&lt;/strong&gt; Finished. Updated for 0.20.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/03_0_Understanding_Your_Bitcoin_Setup.md&#34;&gt;3.0: Understanding Your Bitcoin Setup&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/03_1_Verifying_Your_Bitcoin_Setup.md&#34;&gt;3.1: Verifying Your Bitcoin Setup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/03_2_Knowing_Your_Bitcoin_Setup.md&#34;&gt;3.2: Knowing Your Bitcoin Setup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/03_3_Setting_Up_Your_Wallet.md&#34;&gt;3.3: Setting Up Your Wallet&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/03_3__Interlude_Using_Command-Line_Variables.md&#34;&gt;Interlude: Using Command-Line Variables&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/03_4_Receiving_a_Transaction.md&#34;&gt;3.4: Receiving a Transaction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/03_5_Understanding_the_Descriptor.md&#34;&gt;3.5: Understanding the Descriptor&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/04_0_Sending_Bitcoin_Transactions.md&#34;&gt;4.0: Sending Bitcoin Transactions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/04_1_Sending_Coins_The_Easy_Way.md&#34;&gt;4.1: Sending Coins the Easy Way&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/04_2_Creating_a_Raw_Transaction.md&#34;&gt;4.2: Creating a Raw Transaction&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/04_2__Interlude_Using_JQ.md&#34;&gt;Interlude: Using JQ&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/04_3_Creating_a_Raw_Transaction_with_Named_Arguments.md&#34;&gt;4.3: Creating a Raw Transaction with Named Arguments&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/04_4_Sending_Coins_with_a_Raw_Transaction.md&#34;&gt;4.4: Sending Coins with Raw Transactions&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/04_4__Interlude_Using_Curl.md&#34;&gt;Interlude: Using Curl&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/04_5_Sending_Coins_with_Automated_Raw_Transactions.md&#34;&gt;4.5: Sending Coins with Automated Raw Transactions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/04_6_Creating_a_Segwit_Transaction.md&#34;&gt;4.6: Creating a Segwit Transaction&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/05_0_Controlling_Bitcoin_Transactions.md&#34;&gt;5.0: Controlling Bitcoin Transactions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/05_1_Watching_for_Stuck_Transactions.md&#34;&gt;5.1 Watching for Stuck Transactions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/05_2_Resending_a_Transaction_with_RBF.md&#34;&gt;5.2: Resending a Transaction with RBF&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/05_3_Funding_a_Transaction_with_CPFP.md&#34;&gt;5.3: Funding a Transaction with CPFP&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/06_0_Expanding_Bitcoin_Transactions_Multisigs.md&#34;&gt;6.0: Expanding Bitcoin Transactions with Multisigs&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/06_1_Sending_a_Transaction_to_a_Multisig.md&#34;&gt;6.1: Sending a Transaction with a Multisig&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/06_2_Spending_a_Transaction_to_a_Multisig.md&#34;&gt;6.2: Spending a Transaction with a Multisig&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/06_3_Sending_an_Automated_Multisig.md&#34;&gt;6.3: Sending &amp;amp; Spending an Automated Multisig&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/07_0_Expanding_Bitcoin_Transactions_PSBTs.md&#34;&gt;7.0: Expanding Bitcoin Transactions with PSBTs&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/07_1_Creating_a_Partially_Signed_Bitcoin_Transaction.md&#34;&gt;7.1: Creating a Partially Signed Bitcoin Transaction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/07_2_Using_a_Partially_Signed_Bitcoin_Transaction.md&#34;&gt;7.2: Using a Partially Signed Bitcoin Transaction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/07_3_Integrating_with_Hardware_Wallets.md&#34;&gt;7.3: Integrating with Hardware Wallets&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/08_0_Expanding_Bitcoin_Transactions_Other.md&#34;&gt;8.0: Expanding Bitcoin Transactions in Other Ways&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/08_1_Sending_a_Transaction_with_a_Locktime.md&#34;&gt;8.1: Sending a Transaction with a Locktime&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/08_2_Sending_a_Transaction_with_Data.md&#34;&gt;8.2: Sending a Transaction with Data&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PART THREE: BITCOIN SCRIPTING&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Status:&lt;/strong&gt; Finished. Updated for 0.20 and btcdeb.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/09_0_Introducing_Bitcoin_Scripts.md&#34;&gt;9.0: Introducing Bitcoin Scripts&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/09_1_Understanding_the_Foundation_of_Transactions.md&#34;&gt;9.1: Understanding the Foundation of Transactions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/09_2_Running_a_Bitcoin_Script.md&#34;&gt;9.2: Running a Bitcoin Script&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/09_3_Testing_a_Bitcoin_Script.md&#34;&gt;9.3: Testing a Bitcoin Script&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/09_4_Scripting_a_P2PKH.md&#34;&gt;9.4: Scripting a P2PKH&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/09_5_Scripting_a_P2WPKH.md&#34;&gt;9.5: Scripting a P2WPKH&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/10_0_Embedding_Bitcoin_Scripts_in_P2SH_Transactions.md&#34;&gt;10.0: Embedding Bitcoin Scripts in P2SH Transactions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/10_1_Understanding_the_Foundation_of_P2SH.md&#34;&gt;10.1: Understanding the Foundation of P2SH&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/10_2_Building_the_Structure_of_P2SH.md&#34;&gt;10.2: Building the Structure of P2SH&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/10_3_Running_a_Bitcoin_Script_with_P2SH.md&#34;&gt;10.3: Running a Bitcoin Script with P2SH&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/10_4_Scripting_a_Multisig.md&#34;&gt;10.4: Scripting a Multisig&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/10_5_Scripting_a_Segwit_Script.md&#34;&gt;10.5: Scripting a Segwit Script&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/10_6_Spending_a_P2SH_Transaction.md&#34;&gt;10.6: Spending a P2SH Transaction&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/11_0_Empowering_Timelock_with_Bitcoin_Scripts.md&#34;&gt;11.0: Empowering Timelock with Bitcoin Scripts&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/11_1_Understanding_Timelock_Options.md&#34;&gt;11.1: Understanding Timelock Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/11_2_Using_CLTV_in_Scripts.md&#34;&gt;11.2: Using CLTV in Scripts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/11_3_Using_CSV_in_Scripts.md&#34;&gt;11.3: Using CSV in Scripts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/12_0_Expanding_Bitcoin_Scripts.md&#34;&gt;12.0: Expanding Bitcoin Scripts&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/12_1_Using_Script_Conditionals.md&#34;&gt;12.1: Using Script Conditionals&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/12_2_Using_Other_Script_Commands.md&#34;&gt;12.2: Using Other Script Commands&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/13_0_Designing_Real_Bitcoin_Scripts.md&#34;&gt;13.0: Designing Real Bitcoin Scripts&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/13_1_Writing_Puzzle_Scripts.md&#34;&gt;13.1: Writing Puzzles Scripts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/13_2_Writing_Complex_Multisig_Scripts.md&#34;&gt;13.2: Writing Complex Multisig Scripts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/13_3_Empowering_Bitcoin_with_Scripts.md&#34;&gt;13.3: Empowering Bitcoin with Scripts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PART FOUR: PRIVACY&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Status:&lt;/strong&gt; Finished.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/14_0_Using_Tor.md&#34;&gt;14.0: Using Tor&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/14_1_Verifying_Your_Tor_Setup.md&#34;&gt;14.1: Verifying Your Tor Setup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/14_2_Changing_Your_Bitcoin_Hidden_Services.md&#34;&gt;14.2: Changing Your Bitcoin Hidden Services&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/14_3_Adding_SSH_Hidden_Services.md&#34;&gt;14.3: Adding SSH Hidden Services&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/15_0_Using_i2p.md&#34;&gt;15.0: Using i2p&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/15_1_i2p_service.md&#34;&gt;15.1: Bitcoin Core as an I2P (Invisible Internet Project) service&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PART FIVE: PROGRAMMING WITH RPC&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Status:&lt;/strong&gt; Finished.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/16_0_Talking_to_Bitcoind.md&#34;&gt;16.0: Talking to Bitcoind with C&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/16_1_Accessing_Bitcoind_with_C.md&#34;&gt;16.1: Accessing Bitcoind in C with RPC Libraries&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/16_2_Programming_Bitcoind_with_C.md&#34;&gt;16.2: Programming Bitcoind in C with RPC Libraries&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/16_3_Receiving_Bitcoind_Notifications_with_C.md&#34;&gt;16.3: Receiving Notifications in C with ZMQ Libraries&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/17_0_Programming_with_Libwally.md&#34;&gt;17.0: Programming Bitcoin with Libwally&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/17_1_Setting_Up_Libwally.md&#34;&gt;17.1: Setting Up Libwally&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/17_2_Using_BIP39_in_Libwally.md&#34;&gt;17.2: Using BIP39 in Libwally&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/17_3_Using_BIP32_in_Libwally.md&#34;&gt;17.3: Using BIP32 in Libwally&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/17_4_Using_PSBTs_in_Libwally.md&#34;&gt;17.4: Using PSBTs in Libwally&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/17_5_Using_Scripts_in_Libwally.md&#34;&gt;17.5: Using Scripts in Libwally&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/17_6_Using_Other_Functions_in_Libwally.md&#34;&gt;17.6: Using Other Functions in Libwally&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/17_7_Integrating_Libwally_and_Bitcoin-CLI.md&#34;&gt;17.7: Integrating Libwally and Bitcoin-CLI&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/18_0_Talking_to_Bitcoind_Other.md&#34;&gt;18.0: Talking to Bitcoind with Other Languages&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/18_1_Accessing_Bitcoind_with_Go.md&#34;&gt;18.1: Accessing Bitcoind with Go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/18_2_Accessing_Bitcoind_with_Java.md&#34;&gt;18.2: Accessing Bitcoind with Java&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/18_3_Accessing_Bitcoind_with_NodeJS.md&#34;&gt;18.3: Accessing Bitcoind with Node JS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/18_4_Accessing_Bitcoind_with_Python.md&#34;&gt;18.4: Accessing Bitcoind with Python&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/18_5_Accessing_Bitcoind_with_Rust.md&#34;&gt;18.5: Accessing Bitcoind with Rust&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/18_6_Accessing_Bitcoind_with_Swift.md&#34;&gt;18.6: Accessing Bitcoind with Swift&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PART SIX: USING LIGHTNING-CLI&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Status:&lt;/strong&gt; Finished.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/19_0_Understanding_Your_Lightning_Setup.md&#34;&gt;19.0: Understanding Your Lightning Setup&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/19_1_Verifying_Your_Lightning_Setup.md&#34;&gt;19.1: Verifying Your c-lightning Setup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/19_2_Knowing_Your_lightning_Setup.md&#34;&gt;19.2: Knowing Your c-lightning Setup&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/19_2__Interlude_Accessing_a_Second_Lightning_Node.md&#34;&gt;Interlude: Accessing a Second Lightning Node&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/19_3_Setting_Up_a_Channel.md&#34;&gt;19.3: Creating a Lightning Channel&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/20_0_Using_Lightning.md&#34;&gt;20.0: Using Lightning&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/20_1_Generate_a_Payment_Request.md&#34;&gt;20.1: Generating a Payment Request&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/20_2_Paying_a_Invoice.md&#34;&gt;20.2: Paying an Invoice&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/(20_3_Closing_a_Channel.md)&#34;&gt;20.3: Closing a Lighnting Channel&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/20_4_Lightning_Network_Review.md&#34;&gt;20.4: Expanding the Lightning Network&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;APPENDICES&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Status:&lt;/strong&gt; Finished.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/A0_Appendices.md&#34;&gt;Appendices&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/A1_0_Understanding_Bitcoin_Standup.md&#34;&gt;Appendix I: Understanding Bitcoin Standup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/A2_0_Compiling_Bitcoin_from_Source.md&#34;&gt;Appendix II: Compiling Bitcoin from Source&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/A3_0_Using_Bitcoin_Regtest.md&#34;&gt;Appendix III: Using Bitcoin Regtest&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status - Beta&lt;/h2&gt; &#xA;&lt;p&gt;v2.1.0 of &lt;strong&gt;Learning Bitcoin from the Command Line&lt;/strong&gt; is feature complete and has undergone full editing and integration. It is ready for learning&lt;/p&gt; &#xA;&lt;p&gt;We are also tentatively considering what we could include in a &lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/TODO-30.md&#34;&gt;v3.0&lt;/a&gt; of the course. If you&#39;d like to support work of that sort, become a &lt;a href=&#34;https://github.com/sponsors/BlockchainCommons&#34;&gt;GitHub Sponsor&lt;/a&gt; or support us at our &lt;a href=&#34;https://btcpay.blockchaincommons.com/&#34;&gt;BTCPay Server&lt;/a&gt;, and let us know that &lt;strong&gt;Learning Bitcoin&lt;/strong&gt; was the reason why.&lt;/p&gt; &#xA;&lt;h3&gt;Version History&lt;/h3&gt; &#xA;&lt;h4&gt;2.2.0 (November 17, 2021)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/tree/master/pt&#34;&gt;Portuguese translation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/tree/master/es&#34;&gt;Spanish translation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;2.1.0 (October 12, 2021)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New chapter 15 (i2p).&lt;/li&gt; &#xA; &lt;li&gt;Added fixes to wallet usage from 0.21&lt;/li&gt; &#xA; &lt;li&gt;Updated install to new Bitcoin Scripts for 22.0&lt;/li&gt; &#xA; &lt;li&gt;Incorporated numerous fixes revealed by first translation projects&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;2.0.1 (June 15, 2021)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Numerous small patches following 2.0&lt;/li&gt; &#xA; &lt;li&gt;Intended as baseline for translations (2.2.0), but 2.1.0 material on i2p slipped in&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;2.0.0 (November 3, 2020)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Second major release of Learning Bitcoin&lt;/li&gt; &#xA; &lt;li&gt;Added material on Segwit, Tor, hardware wallets, lightning, regtest&lt;/li&gt; &#xA; &lt;li&gt;Completely previous unfinished work on programming using a variety of languages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;1.0.0 (pre-2020)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Original, extensive but incomplete version&lt;/li&gt; &#xA; &lt;li&gt;Contained comprehensive sections on setup, bitcoin-cli, and scripting&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Origin, Authors, Copyright &amp;amp; Licenses&lt;/h2&gt; &#xA;&lt;p&gt;Unless otherwise noted (either in this &lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/README.md&#34;&gt;/README.md&lt;/a&gt; or in the file&#39;s header comments) the contents of this repository are Copyright © 2020 by Blockchain Commons, LLC, and are licensed under &lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/LICENSE-CC-BY-4.0.md&#34;&gt;CC-BY&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Financial Support&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Learning Bitcoin from the Command Line&lt;/em&gt; is a project of &lt;a href=&#34;https://www.blockchaincommons.com/&#34;&gt;Blockchain Commons&lt;/a&gt;. We are proudly a &#34;not-for-profit&#34; social benefit corporation committed to open source &amp;amp; open development. Our work is funded entirely by donations and collaborative partnerships with people like you. Every contribution will be spent on building open tools, technologies, and techniques that sustain and advance blockchain and internet security infrastructure and promote an open web.&lt;/p&gt; &#xA;&lt;p&gt;To financially support further development of &lt;em&gt;Learning Bitcoin from the Command Line&lt;/em&gt; and other projects, please consider becoming a Patron of Blockchain Commons through ongoing monthly patronage as a &lt;a href=&#34;https://github.com/sponsors/BlockchainCommons&#34;&gt;GitHub Sponsor&lt;/a&gt;. You can also support Blockchain Commons with bitcoins at our &lt;a href=&#34;https://btcpay.blockchaincommons.com/&#34;&gt;BTCPay Server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We encourage public contributions through issues and pull requests! Please review &lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for details on our development process. All contributions to this repository require a GPG signed &lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/CLA.md&#34;&gt;Contributor License Agreement&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;if you would like to provide a translation of Learning Bitcoin into another language, please additionally see &lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/TRANSLATING.md&#34;&gt;TRANSLATING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Discussions&lt;/h3&gt; &#xA;&lt;p&gt;The best place to talk about Blockchain Commons and its projects is in our GitHub Discussions areas.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/BlockchainCommons/Community/discussions&#34;&gt;&lt;strong&gt;Blockchain Commons Discussions&lt;/strong&gt;&lt;/a&gt;. For developers, interns, and patrons of Blockchain Commons, please use the discussions area of the &lt;a href=&#34;https://github.com/BlockchainCommons/Community&#34;&gt;Community repo&lt;/a&gt; to talk about general Blockchain Commons issues, the intern program, or topics other than those covered by the &lt;a href=&#34;https://github.com/BlockchainCommons/Gordian-Developer-Community/discussions&#34;&gt;Gordian Developer Community&lt;/a&gt; or the &lt;a href=&#34;https://github.com/BlockchainCommons/Gordian/discussions&#34;&gt;Gordian User Community&lt;/a&gt;.&#39;&lt;/p&gt; &#xA;&lt;h3&gt;Other Questions &amp;amp; Problems&lt;/h3&gt; &#xA;&lt;p&gt;As an open-source, open-development community, Blockchain Commons does not have the resources to provide direct support of our projects. Please consider the discussions area as a locale where you might get answers to questions. Alternatively, please use this repository&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/issues&#34;&gt;issues&lt;/a&gt; feature. Unfortunately, we can not make any promises on response time.&lt;/p&gt; &#xA;&lt;p&gt;If your company requires support to use our projects, please feel free to contact us directly about options. We may be able to offer you a contract for support from one of our contributors, or we might be able to point you to another entity who can offer the contractual support that you need.&lt;/p&gt; &#xA;&lt;h3&gt;Credits&lt;/h3&gt; &#xA;&lt;p&gt;The following people directly contributed to this repository. You can add your name here by getting involved. The first step is learning how to contribute from our &lt;a href=&#34;https://raw.githubusercontent.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Role&lt;/th&gt; &#xA;   &lt;th&gt;Github&lt;/th&gt; &#xA;   &lt;th&gt;Email&lt;/th&gt; &#xA;   &lt;th&gt;GPG Fingerprint&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Christopher Allen&lt;/td&gt; &#xA;   &lt;td&gt;Lead Author&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ChristopherA&#34;&gt;@ChristopherA&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;&lt;a href=&#34;mailto:ChristopherA@LifeWithAlacrity.com&#34;&gt;ChristopherA@LifeWithAlacrity.com&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;FDFE 14A5 4ECB 30FC 5D22 74EF F8D3 6C91 3574 05ED&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shannon Appelcline&lt;/td&gt; &#xA;   &lt;td&gt;Lead Author&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/shannona&#34;&gt;@shannona&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;&lt;a href=&#34;mailto:shannon.appelcline@gmail.com&#34;&gt;shannon.appelcline@gmail.com&lt;/a&gt;&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;7EC6 B928 606F 27AD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Additional contributions are listed below:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Role&lt;/th&gt; &#xA;   &lt;th&gt;Names&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;&lt;strong&gt;Contributors:&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gg2001&#34;&gt;gg2001&lt;/a&gt; (Go, Node.js sections), &lt;a href=&#34;https://github.com/gorazdko&#34;&gt;gorazdko&lt;/a&gt; (Rust section), &lt;a href=&#34;https://github.com/javiervargas&#34;&gt;Javier Vargas&lt;/a&gt; (C, Java, Lightning, Tor sections), &lt;a href=&#34;https://github.com/jodobear&#34;&gt;jodobear&lt;/a&gt; (Appendix: Compiling Bitcoin, Python section), &lt;a href=&#34;https://github.com/prayank23&#34;&gt;Prayank&lt;/a&gt; (i2p sections)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;&lt;strong&gt;Reviewers:&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Glen Willem &lt;a href=&#34;https://github.com/gwillem&#34;&gt;@gwillem&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;&lt;strong&gt;Sponsors:&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Blockstream Corporation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Translation Credits&lt;/h3&gt; &#xA;&lt;p&gt;Thanks to the volunteers who spent extensive time writing and reviewing other-language translations of the original English-language course.&lt;/p&gt; &#xA;&lt;h4&gt;Portuguese Translation&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Role&lt;/th&gt; &#xA;   &lt;th&gt;Github&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Namcios&lt;/td&gt; &#xA;   &lt;td&gt;Translator &amp;amp; Reviewer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/namcios&#34;&gt;@namcios&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Korea&lt;/td&gt; &#xA;   &lt;td&gt;Translator &amp;amp; Reviewer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/KoreaComK&#34;&gt;@KoreaComK&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Luke Pavsky&lt;/td&gt; &#xA;   &lt;td&gt;Translator &amp;amp; Reviewer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/lukedevj&#34;&gt;@lukedevj&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hgrams&lt;/td&gt; &#xA;   &lt;td&gt;Translator &amp;amp; Reviewer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/hgrams&#34;&gt;@hgrams&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Spanish Translation&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Role&lt;/th&gt; &#xA;   &lt;th&gt;GitHub&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ian Culp&lt;/td&gt; &#xA;   &lt;td&gt;Translator &amp;amp; Reviewer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/icculp&#34;&gt;@icculp&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Maxi Goyheneche&lt;/td&gt; &#xA;   &lt;td&gt;Translator&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/maxcrowar&#34;&gt;@maxcrowar&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Said Rahal&lt;/td&gt; &#xA;   &lt;td&gt;Translator&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/srahalh&#34;&gt;@srahalh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;César A. Vallero&lt;/td&gt; &#xA;   &lt;td&gt;Translator &amp;amp; Reviewer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/csralvall&#34;&gt;@csralvall&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Javier Vargas&lt;/td&gt; &#xA;   &lt;td&gt;Translator &amp;amp; Reviewer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/javiervargas&#34;&gt;@javiervargas&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Responsible Disclosure&lt;/h2&gt; &#xA;&lt;p&gt;We want to keep all of our software safe for everyone. If you have discovered a security vulnerability, we appreciate your help in disclosing it to us in a responsible manner. We are unfortunately not able to offer bug bounties at this time.&lt;/p&gt; &#xA;&lt;p&gt;We do ask that you offer us good faith and use best efforts not to leak information or harm any user, their data, or our developer community. Please give us a reasonable amount of time to fix the issue before you publish it. Do not defraud our users or us in the process of discovery. We promise not to bring legal action against researchers who point out a problem provided they do their best to follow the these guidelines.&lt;/p&gt; &#xA;&lt;h3&gt;Reporting a Vulnerability&lt;/h3&gt; &#xA;&lt;p&gt;Please report suspected security vulnerabilities in private via email to &lt;a href=&#34;mailto:ChristopherA@BlockchainCommons.com&#34;&gt;ChristopherA@BlockchainCommons.com&lt;/a&gt; (do not use this email for support). Please do NOT create publicly viewable issues for suspected security vulnerabilities.&lt;/p&gt; &#xA;&lt;p&gt;The following keys may be used to communicate sensitive information to developers:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Fingerprint&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Christopher Allen&lt;/td&gt; &#xA;   &lt;td&gt;FDFE 14A5 4ECB 30FC 5D22 74EF F8D3 6C91 3574 05ED&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can import a key by running the following command with that individual’s fingerprint: &lt;code&gt;gpg --recv-keys &#34;&amp;lt;fingerprint&amp;gt;&#34;&lt;/code&gt; Ensure that you put quotes around fingerprints that contain spaces.&lt;/p&gt;</summary>
  </entry>
</feed>