<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-28T01:38:50Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nicknochnack/ImageClassification</title>
    <updated>2023-04-28T01:38:50Z</updated>
    <id>tag:github.com,2023-04-28:/nicknochnack/ImageClassification</id>
    <link href="https://github.com/nicknochnack/ImageClassification" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Jupyter notebook showing how to build an image classifier with Python and Tensorflow&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>zzsza/Boostcamp-AI-Tech-Product-Serving</title>
    <updated>2023-04-28T01:38:50Z</updated>
    <id>tag:github.com,2023-04-28:/zzsza/Boostcamp-AI-Tech-Product-Serving</id>
    <link href="https://github.com/zzsza/Boostcamp-AI-Tech-Product-Serving" rel="alternate"></link>
    <summary type="html">&lt;p&gt;[Machine Learning Engineer Basic Guide] 부스트캠프 AI Tech - Product Serving 자료&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Boostcamp-AI-Tech-Product-Serving&lt;/h1&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zzsza/Boostcamp-AI-Tech-Product-Serving/main/#contributors-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-5-orange.svg?style=flat-square&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://boostcamp.connect.or.kr/program_ai.html&#34;&gt;부스트캠프 AI Tech&lt;/a&gt; - Product Serving 자료&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Repository 구조&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;part1(MLOps 개론, Model Serving, 머신러닝 프로젝트 라이프 사이클은 별도의 코드가 없으며, part2 ~ part4는 강의 자료에서 사용한 코드가 저장되어 있습니다&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;assets&lt;/code&gt;엔 예제로 사용할 Mask Classification Model이 저장되어 있습니다 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;만약 실무였다면 part 아래에 있는 폴더들에 같이 저장되는 것이 조금 더 좋지만, 교육용 Github Repo라서 중복 저장을 피하기 위해 이렇게 저장했습니다&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;├── README.md&#xA;├── .github/workflows : Github Action Workflow&#xA;├── assets : Mask Classification Model&#xA;│&amp;nbsp;&amp;nbsp; └── mask_task&#xA;├── part2&#xA;│&amp;nbsp;&amp;nbsp; ├── 01-voila&#xA;│&amp;nbsp;&amp;nbsp; ├── 02-streamlit&#xA;│&amp;nbsp;&amp;nbsp; └── 04-cicd&#xA;├── part3&#xA;│&amp;nbsp;&amp;nbsp; ├── 01-fastapi&#xA;│&amp;nbsp;&amp;nbsp; ├── 02-docker&#xA;│&amp;nbsp;&amp;nbsp; ├── 03-logging&#xA;│&amp;nbsp;&amp;nbsp; └── 04-mlflow&#xA;└── part4&#xA;    ├── 01-bentoml&#xA;    └── 02-airflow&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;추천 학습 방식&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;강의를 수강한 후, 강의에서 나온 공식 문서를 보며 코드를 작성합니다&lt;/li&gt; &#xA; &lt;li&gt;강의에서 활용한 코드를 그대로 복사 붙여넣기하지 말고, &lt;strong&gt;직접 타이핑해주세요&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;오류를 많이 경험하고, 오류가 발생했다면 그 이유와 해결 방법을 별도로 기록해주세요&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;강의에서 진행된 코드를 더 좋게 개선해도 좋아요 :)&lt;/li&gt; &#xA; &lt;li&gt;강의에서 다룬 내용보다 더 넓은 내용을 찾아보고 정리해서 나만의 Serving 노트를 만들어보아요&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;만약 이슈가 생겼다면&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;실습 코드 관련 문의는 &lt;strong&gt;슬랙 채널&lt;/strong&gt;에 문의해주세요 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;어떤 상황에서(OS, Python 버전 등) 어떤 오류가 발생했는지 자세히 알려주시면 좋아요. 같이 해결해보아요!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;강의 영상 및 강의 자료 관련 문의는 &lt;strong&gt;부스트코스&lt;/strong&gt;를 통해서 해주세요!&lt;/li&gt; &#xA; &lt;li&gt;이해하기 어렵거나 토론하고 싶은 소재가 있다면 &lt;strong&gt;슬랙 채널&lt;/strong&gt;에 공유해주세요! &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;단순히 GET이 뭐에요? 라는 질문보다는 간단히 검색한 후, 검색한 자료를 공유하면서 어떤 부분이 어려운지 질문주시는 것을 추천드려요 :)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;협업 규칙&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;커밋 메시지 컨벤션은 &lt;a href=&#34;https://www.conventionalcommits.org/en/v1.0.0/&#34;&gt;conventional commit&lt;/a&gt;을 따릅니다 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/commitizen-tools/commitizen&#34;&gt;commitizen&lt;/a&gt;을 사용하면 더욱 쉽게 커밋할 수 있습니다&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;작업은 기본적으로 별도의 브랜치를 생성하여 작업합니다. 작업이 완료되면 PR로 리뷰 받습니다&lt;/li&gt; &#xA; &lt;li&gt;PR 리뷰 후 머지 방식은 Squash &amp;amp; Merge를 따릅니다 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Merge 전에 PR 제목을 되도록이면 convetional commit 형태로 만들어주세요&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://zzsza.github.io&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/18207755?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sung Yun Byeon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zzsza/Boostcamp-AI-Tech-Product-Serving/main/#projectManagement-zzsza&#34; title=&#34;Project Management&#34;&gt;📆&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/zzsza/Boostcamp-AI-Tech-Product-Serving/main/#maintenance-zzsza&#34; title=&#34;Maintenance&#34;&gt;🚧&lt;/a&gt; &lt;a href=&#34;https://github.com/zzsza/Boostcamp-AI-Tech-Product-Serving/commits?author=zzsza&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/zzsza/Boostcamp-AI-Tech-Product-Serving/commits?author=zzsza&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://codethief.io&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/12247655?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jungwon Seo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/zzsza/Boostcamp-AI-Tech-Product-Serving/commits?author=thejungwon&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/zzsza/Boostcamp-AI-Tech-Product-Serving/main/#content-thejungwon&#34; title=&#34;Content&#34;&gt;🖋&lt;/a&gt; &lt;a href=&#34;https://github.com/zzsza/Boostcamp-AI-Tech-Product-Serving/commits?author=thejungwon&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/zzsza/Boostcamp-AI-Tech-Product-Serving/main/#example-thejungwon&#34; title=&#34;Examples&#34;&gt;💡&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://humphreyahn.dev/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/24207964?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;humphrey&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/zzsza/Boostcamp-AI-Tech-Product-Serving/commits?author=ahnsv&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/zzsza/Boostcamp-AI-Tech-Product-Serving/main/#content-ahnsv&#34; title=&#34;Content&#34;&gt;🖋&lt;/a&gt; &lt;a href=&#34;https://github.com/zzsza/Boostcamp-AI-Tech-Product-Serving/commits?author=ahnsv&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/zzsza/Boostcamp-AI-Tech-Product-Serving/main/#example-ahnsv&#34; title=&#34;Examples&#34;&gt;💡&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://dailyheumsi.tistory.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/31306282?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;heumsi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/zzsza/Boostcamp-AI-Tech-Product-Serving/commits?author=heumsi&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/zzsza/Boostcamp-AI-Tech-Product-Serving/main/#content-heumsi&#34; title=&#34;Content&#34;&gt;🖋&lt;/a&gt; &lt;a href=&#34;https://github.com/zzsza/Boostcamp-AI-Tech-Product-Serving/commits?author=heumsi&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/zzsza/Boostcamp-AI-Tech-Product-Serving/main/#example-heumsi&#34; title=&#34;Examples&#34;&gt;💡&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.linkedin.com/in/ykmoon/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/45195471?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;YkMoon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/zzsza/Boostcamp-AI-Tech-Product-Serving/commits?author=Ykmoon&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/zzsza/Boostcamp-AI-Tech-Product-Serving/main/#content-Ykmoon&#34; title=&#34;Content&#34;&gt;🖋&lt;/a&gt; &lt;a href=&#34;https://github.com/zzsza/Boostcamp-AI-Tech-Product-Serving/commits?author=Ykmoon&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/zzsza/Boostcamp-AI-Tech-Product-Serving/main/#example-Ykmoon&#34; title=&#34;Examples&#34;&gt;💡&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gottingen/search-legend</title>
    <updated>2023-04-28T01:38:50Z</updated>
    <id>tag:github.com,2023-04-28:/gottingen/search-legend</id>
    <link href="https://github.com/gottingen/search-legend" rel="alternate"></link>
    <summary type="html">&lt;p&gt;docs for search system and ai infra&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;search legend&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/README_cn.md&#34;&gt;中文版&lt;/a&gt;|&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/NEWS.md&#34;&gt;Release Notes&lt;/a&gt;|&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/contributors.md&#34;&gt;Contributors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;what it is?&lt;/h1&gt; &#xA;&lt;p&gt;In 2023 or the second half of 2022, after several years of dormancy, the big model finally showed his powerful ability to the world in the form of chatgpt. This project is the entry project of the Gottingen organization, which aims to introduce how to implement a search system and provide a suitable way to access the components of the large model. The project takes engineering realization and actual landing projects as the main line, and gradually explains the principle, design and function of the system.&lt;/p&gt; &#xA;&lt;h2&gt;Technical discussions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;@author Jeff.li&lt;/li&gt; &#xA; &lt;li&gt;@email &lt;a href=&#34;mailto:bohuli2048@gmail.com&#34;&gt;bohuli2048@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;reference project&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;flowchart TB&#xA;    A[turbo]--&amp;gt;B[libtext]&#xA;    A[turbo]--&amp;gt;BB[titan-redis]&#xA;    A[turbo]--&amp;gt;BC[titan-ann]&#xA;    BB--&amp;gt;C[lambda]&#xA;    BC--&amp;gt;C[lambda]&#xA;    A[turbo]--&amp;gt;E[rigel]&#xA;    E[rigel]--&amp;gt;D[hercules]&#xA;    D[hercules]--&amp;gt;F[hvm]&#xA;    C[lambda]--&amp;gt;F[hvm]&#xA;    B[libtext]--&amp;gt;F[hvm]&#xA;    E[rigel]--&amp;gt;G[melon-rpc]&#xA;    G[melon-rpc]--&amp;gt;F[hvm]&#xA;    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gottingen/turbo.git&#34;&gt;turbo&lt;/a&gt; c++ foundation library.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gottingen/libtext.git&#34;&gt;libtext&lt;/a&gt; chinese segment and normalize library.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gottingen/titan-redis.git&#34;&gt;titan-redis&lt;/a&gt; disk storage using redis interface.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gottingen/titan-ann.git&#34;&gt;titan-ann&lt;/a&gt; ann search engine base on graph.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gottingen/lambda.git&#34;&gt;lambda&lt;/a&gt; host local search engine for mix term and vector search.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gottingen/rigel.git&#34;&gt;rigel&lt;/a&gt; ai and rpc runtime library, to manage memory and fiber or thread schedule.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gottingen/hercules.git&#34;&gt;hercules&lt;/a&gt; python Aot framework for integrated components interface rpc and ai backend like tesorflow or pytorch&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gottingen/hvm.git&#34;&gt;hvm&lt;/a&gt; (not start now) framework gateway, let us write python and generate c++ code and run in llvm.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;the goals&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;flowchart LR&#xA;    A[python code]--&amp;gt;B[hvm.compile]&#xA;    B--&amp;gt;C[so library and graph]&#xA;    G[ci/cd]--&amp;gt;C[so library and graph]&#xA;    D[c++ runtime]-.-&amp;gt;G&#xA;    D[c++ runtime]--&amp;gt;E[c++ app]&#xA;    F[service mess]--&amp;gt;E[c++ app]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;it will reduce c++ communication and development phrase during business development。 may reduce business development days a lot and provide bug free code.&lt;/p&gt; &#xA;&lt;p&gt;how ever, in some Modularity is not good system, you need to do a lot work int &lt;code&gt;test and online&lt;/code&gt;, it is a very frustrating thing that， if many people develop together, so fuzz..&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;flowchart LR&#xA;  A[python algorithm]--&amp;gt;B[c++ review]--&amp;gt;C[c++ develop]--&amp;gt;D[test and online]&#xA;  AA[python algorithm]--&amp;gt;E[generate c++]--&amp;gt;D[test and online]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;inspire by the ai aot. design it write a few python code like below&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import hvm&#xA;&#xA;q:str=&#39;刘德华&#39;&#xA;def do_search(q:tr)-&amp;gt;List[Any]&#xA;  qp = hvm.QU.parse(q)&#xA;  qt = hvm.query.boolen_query&#xA;  sq = hvm.query.term_query(qp)&#xA;  sq.must(&#39;title&#39;)&#xA;  qt.add_sub_query(sq)&#xA;  searcher  = hvm.search&#xA;  searcher.set_relavece(&#39;bm25&#39;)&#xA;  searcher.set_ranker(&#39;dw_fm&#39;)&#xA;  searcher.set_l1_sort(&#39;default&#39;)&#xA;  searcher.set_l2_sort(&#39;ctr_pri_sorter&#39;)&#xA;  result = searcher.search(engine)&#xA;  return result&#xA;hvm.compile(do_search, &#34;./search_demo&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;at c++ side,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;hvm::Session session;&#xA;bool rs = session.load(&#34;./search_demo&#34;)&#xA;if(!rs){&#xA;    return false;&#xA;}      &#xA;string query;&#xA;session.run(query);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;so it can do things in c++ code,Enjoy the joy brought by c++. and hidden the difficult code via c++ and hidden complex service governance logic behind.&lt;/p&gt; &#xA;&lt;h1&gt;nlp roadmap&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/images/algo-arch.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Table of contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/ch-00/README.md&#34;&gt;开发准备准备&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/ch-00/conda_guide.md&#34;&gt;conda guide&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/ch-00/cmake_guide.md&#34;&gt;cmake guide&lt;/a&gt; 待完成&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/ch-00/bazel_guide.md&#34;&gt;bazel guide&lt;/a&gt; 待完成&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/pf/README.md&#34;&gt;工程基础&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;基础库 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/pf/base_rules/README.md&#34;&gt;项目发布约束&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;跨平台&lt;/a&gt; 待完成&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;单元测试&lt;/a&gt; 待完成&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;string类&lt;/a&gt; 待完成&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;容器类&lt;/a&gt; 待完成&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;内存 &amp;amp; cpu &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;cpu 缓存&lt;/a&gt; 待完成&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;numa&lt;/a&gt; 待完成&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;内存池&lt;/a&gt; 待完成&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;多线程 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;任务调度&lt;/a&gt; 待完成&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;smp&lt;/a&gt; 待完成&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;读优化&lt;/a&gt; 待完成&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;写优化&lt;/a&gt; 待完成&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;多协程&lt;/a&gt; 待完成&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/index.ipynb&#34;&gt;机器学习基础&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;算法 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/linear/index.ipynb&#34;&gt;线性回归&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/math_index.ipynb&#34;&gt;数学符号&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/linear/index.ipynb&#34;&gt;线性回归&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/multilayer_perceptrons/index.ipynb&#34;&gt;感知机&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/deep_learning_computation/index.ipynb&#34;&gt;深度学习计算&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/convolutional_neural_networks/index.ipynb&#34;&gt;卷积神经网络&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/convolutional_modern/index.ipynb&#34;&gt;现代卷积神经网络&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/recurrent_neural_networks/index.ipynb&#34;&gt;循环神经网络&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/recurrent_modern/index.ipynb&#34;&gt;现代神经网络&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/attention_mechanisms/index.ipynb&#34;&gt;注意力机制&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/optimization/index.ipynb&#34;&gt;优化算法&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/computational_performance/index.ipynb&#34;&gt;计算性能&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/natural_language_processing_pretraining/index.ipynb&#34;&gt;自然语言处理：预训练&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/natural_language_processing_applications/index.ipynb&#34;&gt;自然语言处理：应用&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;机器学习框架 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/framework/index.ipynb&#34;&gt;机器学习框架&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/graph/index.ipynb&#34;&gt;计算图&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/compiler/index.ipynb&#34;&gt;ai编译器&lt;/a&gt; 待完成&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;数据处理框架&lt;/a&gt; 待完成&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;分布式训练&lt;/a&gt; 待完成&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;模型部署&lt;/a&gt; 待完成&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;工程实践 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;c++ &amp;amp;&amp;amp; python&lt;/a&gt; 待完成&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;tensorflow专题&lt;/a&gt; 待完成&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;tensorflow serving部署&lt;/a&gt; 待完成&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;triton inference server&lt;/a&gt; 待完成&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;GPU编程&lt;/a&gt; 待完成&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;IR专题&lt;/a&gt; 待完成&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;扩展资料 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/dl/readings.ipynb&#34;&gt;扩展阅读&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/ch-01/README.md&#34;&gt;Significance of search system&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/ch-01/search_solv.md&#34;&gt;What problem does search solve&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/ch-01/search_develop.md&#34;&gt;1.2 搜索的发展历史&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/ch-02/README.md&#34;&gt;2 搜索架构&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/ch-02/arch_total.md&#34;&gt;2.1 整体架构&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/ch-02/stream.md&#34;&gt;2.2 搜索的引流&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/ch-02/evolate.md&#34;&gt;2.2 搜索的评估&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/ch-11/README.md&#34;&gt;引擎内核设计&lt;/a&gt; &lt;a href=&#34;https://github.com/gottingen/lambda.git&#34;&gt;lambda engine&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/ch-11/table_struct.md&#34;&gt;table struct&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;[11.2 向量引擎]&lt;/li&gt; &#xA;   &lt;li&gt;[11.3 term引擎]&lt;/li&gt; &#xA;   &lt;li&gt;[11.4 融合索引]&lt;/li&gt; &#xA;   &lt;li&gt;[11.5 query语法]&lt;/li&gt; &#xA;   &lt;li&gt;[11.6 引擎同步]&lt;/li&gt; &#xA;   &lt;li&gt;[11.7 实时引擎]&lt;/li&gt; &#xA;   &lt;li&gt;[11.8 存储引擎]&lt;/li&gt; &#xA;   &lt;li&gt;[11.9 拉链归并]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/qu/README.md&#34;&gt;3 query理解&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/qu/seg/README.md&#34;&gt;3.1 分词&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;[3.2 纠错]&lt;/li&gt; &#xA;   &lt;li&gt;[3.3 改写]&lt;/li&gt; &#xA;   &lt;li&gt;[3.4 实体识别]&lt;/li&gt; &#xA;   &lt;li&gt;[3.5 意图]&lt;/li&gt; &#xA;   &lt;li&gt;[3.6 默认词]&lt;/li&gt; &#xA;   &lt;li&gt;[3.7 提示词]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/ch-04/README.md&#34;&gt;4. 召回&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[4.1 倒排]&lt;/li&gt; &#xA;   &lt;li&gt;[4.2 正排]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/ch-05/README.md&#34;&gt;5. 排序&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/ch-05/cpai.md&#34;&gt;5.1 粗排&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gottingen/search-legend/master/ch-05/jpai.md&#34;&gt;5.2精排&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[6. 搜索系统]&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[6.1 搜索控制]&lt;/li&gt; &#xA;   &lt;li&gt;[6.2 缓存系统]&lt;/li&gt; &#xA;   &lt;li&gt;[6.3 索引分层]&lt;/li&gt; &#xA;   &lt;li&gt;[6.4 干预系统]&lt;/li&gt; &#xA;   &lt;li&gt;[6.5 特征收集]&lt;/li&gt; &#xA;   &lt;li&gt;[6.6 离线计算]&lt;/li&gt; &#xA;   &lt;li&gt;[6.7 存储系统]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[7. 服务治理]&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[7.1 微服务]&lt;/li&gt; &#xA;   &lt;li&gt;[7.2 多机房]&lt;/li&gt; &#xA;   &lt;li&gt;[7.3 多集群]&lt;/li&gt; &#xA;   &lt;li&gt;[7.4 实时数据]&lt;/li&gt; &#xA;   &lt;li&gt;[7.5 服务降级与容灾]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[8. 开发预备]&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[8.1 cmake使用]&lt;/li&gt; &#xA;   &lt;li&gt;[8.2 conda集成]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[9. 设计分析]&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[9.1 query理解]&lt;/li&gt; &#xA;   &lt;li&gt;[9.2 实时同步]&lt;/li&gt; &#xA;   &lt;li&gt;[9.3 引擎]&lt;/li&gt; &#xA;   &lt;li&gt;[9.4 rank]&lt;/li&gt; &#xA;   &lt;li&gt;[9.5 干预]&lt;/li&gt; &#xA;   &lt;li&gt;[9.6 A/B试验]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[10. 系统实现]&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[10.1 模块分解]&lt;/li&gt; &#xA;   &lt;li&gt;[10.2 基础库]&lt;/li&gt; &#xA;   &lt;li&gt;[10.3 算子库]&lt;/li&gt; &#xA;   &lt;li&gt;[10.4 rpc通信]&lt;/li&gt; &#xA;   &lt;li&gt;[10.5 存储引擎]&lt;/li&gt; &#xA;   &lt;li&gt;[10.6 同步协同]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[12 qu模块实现]&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[12.1 标准化]&lt;/li&gt; &#xA;   &lt;li&gt;[12.2 分词]&lt;/li&gt; &#xA;   &lt;li&gt;[12.3 纠错]&lt;/li&gt; &#xA;   &lt;li&gt;[12.4 改写]&lt;/li&gt; &#xA;   &lt;li&gt;[12.5 实体识别]&lt;/li&gt; &#xA;   &lt;li&gt;[12.6 意图识别]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[13 rank]&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[相关性]&lt;/li&gt; &#xA;   &lt;li&gt;[实效性]&lt;/li&gt; &#xA;   &lt;li&gt;[权威性]&lt;/li&gt; &#xA;   &lt;li&gt;[ctr]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[14 ir新架构]&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[14.1 机器学习编译]&lt;/li&gt; &#xA;   &lt;li&gt;[14.2 python与c++]&lt;/li&gt; &#xA;   &lt;li&gt;[14.3 在线dag]&lt;/li&gt; &#xA;   &lt;li&gt;[14.3 llvm ir]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[15 向量引擎]&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[15.1 向量引擎需求]&lt;/li&gt; &#xA;   &lt;li&gt;[15.2 向量算法]&lt;/li&gt; &#xA;   &lt;li&gt;[15.3 向量引擎对比]&lt;/li&gt; &#xA;   &lt;li&gt;[15.4 向量引擎与生产环境]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[16 机器学习平台]&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[16.1 数据并行]&lt;/li&gt; &#xA;   &lt;li&gt;[16.2 模型并行]&lt;/li&gt; &#xA;   &lt;li&gt;[16.3 参数服务器]&lt;/li&gt; &#xA;   &lt;li&gt;[16.4 horovod]&lt;/li&gt; &#xA;   &lt;li&gt;[16.5 分布式并行-mpi] &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;[16.5.1 gloo]&lt;/li&gt; &#xA;     &lt;li&gt;[16.5.2 openmpi]&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[17 技术需求]&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[17.1 高并发原子操作]&lt;/li&gt; &#xA;   &lt;li&gt;[17.2 双buffer与rcu]&lt;/li&gt; &#xA;   &lt;li&gt;[17.3 simd高性能计算]&lt;/li&gt; &#xA;   &lt;li&gt;[17.4 fiber and eventloop]&lt;/li&gt; &#xA;   &lt;li&gt;[17.5 内存分配与内存池]&lt;/li&gt; &#xA;   &lt;li&gt;[17.6 gpu计算]&lt;/li&gt; &#xA;   &lt;li&gt;[17.7 dpdk与大模型]&lt;/li&gt; &#xA;   &lt;li&gt;[17.8 rdma]&lt;/li&gt; &#xA;   &lt;li&gt;[17.9 nccl通信]&lt;/li&gt; &#xA;   &lt;li&gt;[17.10 numa与任务调度]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[18 机器学习框架]&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[18.1 机器学习框架]&lt;/li&gt; &#xA;   &lt;li&gt;[18.2 tensorflow算子开发]&lt;/li&gt; &#xA;   &lt;li&gt;[18.3. tensorflow model]&lt;/li&gt; &#xA;   &lt;li&gt;[18.4 xla]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[19 特征工程]&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>