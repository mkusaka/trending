<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-01T01:45:54Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>CjangCjengh/tacotron2-japanese</title>
    <updated>2022-08-01T01:45:54Z</updated>
    <id>tag:github.com,2022-08-01:/CjangCjengh/tacotron2-japanese</id>
    <link href="https://github.com/CjangCjengh/tacotron2-japanese" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tacotron2 implementation of Japanese&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Reference: &lt;a href=&#34;https://github.com/NVIDIA/tacotron2&#34;&gt;NVIDIA/tacotron2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Put raw Japanese texts in ./filelists&lt;/li&gt; &#xA; &lt;li&gt;Put WAV files in ./wav&lt;/li&gt; &#xA; &lt;li&gt;(Optional) Download NVIDIA&#39;s &lt;a href=&#34;https://drive.google.com/file/d/1c5ZTuT7J08wLUoVZ2KkUs_VdZuJ86ZqA/view?usp=sharing&#34;&gt;pretrained model&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open ./train.ipynb to install requirements and start training&lt;/li&gt; &#xA; &lt;li&gt;Download NVIDIA&#39;s &lt;a href=&#34;https://drive.google.com/open?id=1rpK8CzAAirq9sWZhe9nlfvxMF1dRgFbF&#34;&gt;WaveGlow model&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open ./inference.ipynb to generate voice&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Cleaners&lt;/h2&gt; &#xA;&lt;p&gt;File ./hparams.py line 30&lt;/p&gt; &#xA;&lt;h3&gt;1. &#39;japanese_cleaners&#39;&lt;/h3&gt; &#xA;&lt;h4&gt;Before&lt;/h4&gt; &#xA;&lt;p&gt;何かあったらいつでも話して下さい。学院のことじゃなく、私事に関することでも何でも&lt;/p&gt; &#xA;&lt;h4&gt;After&lt;/h4&gt; &#xA;&lt;p&gt;nanikaacltaraitsudemohanashItekudasai.gakuiNnokotojanaku,shijinikaNsurukotodemonanidemo.&lt;/p&gt; &#xA;&lt;h3&gt;2. &#39;japanese_tokenization_cleaners&#39;&lt;/h3&gt; &#xA;&lt;h4&gt;Before&lt;/h4&gt; &#xA;&lt;p&gt;何かあったらいつでも話して下さい。学院のことじゃなく、私事に関することでも何でも&lt;/p&gt; &#xA;&lt;h4&gt;After&lt;/h4&gt; &#xA;&lt;p&gt;nani ka acl tara itsu demo hanashi te kudasai. gakuiN no koto ja naku, shiji nikaNsuru koto de mo naNdemo.&lt;/p&gt; &#xA;&lt;h3&gt;3. &#39;japanese_accent_cleaners&#39;&lt;/h3&gt; &#xA;&lt;h4&gt;Before&lt;/h4&gt; &#xA;&lt;p&gt;何かあったらいつでも話して下さい。学院のことじゃなく、私事に関することでも何でも&lt;/p&gt; &#xA;&lt;h4&gt;After&lt;/h4&gt; &#xA;&lt;p&gt;:na)nika a)cltara i)tsudemo ha(na)shIte ku(dasa)i.:ga(kuiNno ko(to)janaku,:shi)jini ka(Nsu)ru ko(to)demo na)nidemo.&lt;/p&gt; &#xA;&lt;h3&gt;4. &#39;japanese_phrase_cleaners&#39;&lt;/h3&gt; &#xA;&lt;h4&gt;Before&lt;/h4&gt; &#xA;&lt;p&gt;何かあったらいつでも話して下さい。学院のことじゃなく、私事に関することでも何でも&lt;/p&gt; &#xA;&lt;h4&gt;After&lt;/h4&gt; &#xA;&lt;p&gt;nanika acltara itsudemo hanashIte kudasai. gakuiNno kotojanaku, shijini kaNsuru kotodemo nanidemo.&lt;/p&gt; &#xA;&lt;h2&gt;Models&lt;/h2&gt; &#xA;&lt;p&gt;Remember to change this line in ./inference.ipynb&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;sequence = np.array(text_to_sequence(text, [&#39;japanese_cleaners&#39;]))[None, :]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sanoba Witch&lt;/h3&gt; &#xA;&lt;h4&gt;Ayachi Nene&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sjtueducn-my.sharepoint.com/:u:/g/personal/cjang_cjengh_sjtu_edu_cn/ESltqOvyK3ZPsLMQwpv5FH0BoX8slLVsz3eUKwHHKkg9ww?e=vc5fdd&#34;&gt;Model 1&lt;/a&gt; [&#39;japanese_cleaners&#39;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sjtueducn-my.sharepoint.com/:u:/g/personal/cjang_cjengh_sjtu_edu_cn/ETNLDYH_ZRpMmNR0VGALhNQB5-LiJOqTaWQz8tXtbvCV-g?e=7nf2Ec&#34;&gt;Model 2&lt;/a&gt; [&#39;japanese_tokenization_cleaners&#39;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sjtueducn-my.sharepoint.com/:u:/g/personal/cjang_cjengh_sjtu_edu_cn/Eb0WROtOsYBInTmQQZHf36IBSXmyVd4JiCF7OnQjOZkjGg?e=qbbsv4&#34;&gt;Model 3&lt;/a&gt; [&#39;japanese_accent_cleaners&#39;]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Inaba Meguru&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sjtueducn-my.sharepoint.com/:u:/g/personal/cjang_cjengh_sjtu_edu_cn/Ed29Owd-E1NKstl_EFGZFVABe-F-a65jSAefeW_uEQuWxw?e=J628nT&#34;&gt;Model 1&lt;/a&gt; [&#39;japanese_tokenization_cleaners&#39;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sjtueducn-my.sharepoint.com/:u:/g/personal/cjang_cjengh_sjtu_edu_cn/ER8C2tiu4-RPi_MtQ3TCuTkBVRvO1MgJOPAKpAUD4ZLiow?e=ktT81t&#34;&gt;Model 2&lt;/a&gt; [&#39;japanese_tokenization_cleaners&#39;]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Senren Banka&lt;/h3&gt; &#xA;&lt;h4&gt;Takemoto Yoshino&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sjtueducn-my.sharepoint.com/:u:/g/personal/cjang_cjengh_sjtu_edu_cn/EdfFetSH3tpMr7nkiqAKzwEBXjuCRICcvgUortEvE4pdjw?e=UyvkyI&#34;&gt;Model 1&lt;/a&gt; [&#39;japanese_tokenization_cleaners&#39;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sjtueducn-my.sharepoint.com/:u:/g/personal/cjang_cjengh_sjtu_edu_cn/EeE4h5teC5xKms1VRnaNiW8BuqslFeR8VW7bCk7SWh2r8w?e=qADqbu&#34;&gt;Model 2&lt;/a&gt; [&#39;japanese_phrase_cleaners&#39;]&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>probml/pml-book</title>
    <updated>2022-08-01T01:45:54Z</updated>
    <id>tag:github.com,2022-08-01:/probml/pml-book</id>
    <link href="https://github.com/probml/pml-book" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&#34;Probabilistic Machine Learning&#34; - a book series by Kevin Murphy&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&#34;Probabilistic machine learning&#34;: a book series by Kevin Murphy&lt;/h1&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;Book 0: &#34;Machine Learning: A Probabilistic Perspective&#34; (2012)&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://probml.github.io/pml-book/book0.html&#34;&gt;this link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!--&#xA;See [this link](https://probml.github.io/pml-book/pml0/book0.html)&#xA;--&gt; &#xA;&lt;h2&gt;Book 1: &#34;Probabilistic Machine Learning: An Introduction&#34; (2022)&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://probml.github.io/pml-book/book1.html&#34;&gt;this link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Book 2: &#34;Probabilistic Machine Learning: Advanced Topics&#34; (2023)&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://probml.github.io/pml-book/book2.html&#34;&gt;this link&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>IBM/claimed</title>
    <updated>2022-08-01T01:45:54Z</updated>
    <id>tag:github.com,2022-08-01:/IBM/claimed</id>
    <link href="https://github.com/IBM/claimed" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Elyra Component Library - The Component Library for AI, Machine Learning, ETL, and Data Science&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;set of re-usable coarse-grained components (just a bunch of code)&lt;/li&gt; &#xA; &lt;li&gt;think of tasks, not functions (e.g., read from a database, transform data, train model, deploy model)&lt;/li&gt; &#xA; &lt;li&gt;write once, runs everywhere (export to Kubeflow, Apache Airflow, Apache Nifi)&lt;/li&gt; &#xA; &lt;li&gt;just use python - no other skills required (no Kubeflow component YAML, maven, Java)&lt;/li&gt; &#xA; &lt;li&gt;1st class citizen in JupyterLab and the Elyra Pipeline Editor (creating a low code / no code IDE for data science)&lt;/li&gt; &#xA; &lt;li&gt;upstream repository to IBM Watson Studio Pipelines contributed components in IBM Cloud Pak for Data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;CLAIMED is a component library for artificial intelligence, machine learning, &#34;extract, transform, load&#34; processes, and data science. The goal is to enable low-code/no-code rapid prototyping. The library provides ready-made components for various business domains, supports multiple computer languages, works on different data flow editors, and runs various execution engines. To demonstrate its utility, we constructed a workflow composed exclusively of this library&#39;s components. To display the capabilities of this library, we made use of a publicly available Computed Tomography (CT) scan dataset [covidata]. We created a deep learning model, which is supposed to classify exams as either COVID-19 positive or negative. We built the pipeline with Elyra&#39;s Pipeline Visual Editor, with support for local, Airflow, and Kubeflow execution &lt;a href=&#34;https://arxiv.org/abs/2103.03281&#34;&gt;https://arxiv.org/abs/2103.03281&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/IBM/claimed/raw/master/images/elyra_pipeline.png&#34; alt=&#34;Low Code / No Code pipeline creation tool for data science&#34;&gt; &lt;em&gt;Low Code / No Code pipeline creation tool for data science&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bring the latest and greatest libraries to the hands of everybody.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/IBM/claimed/raw/master/images/elyra_lime.png&#34; alt=&#34;AIX360/LIME highlights a poor deep learning covid classification model looking at bones only&#34;&gt; &lt;em&gt;AIX360/LIME highlights a poor deep learning covid classification model looking at bones only&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Components of this library can be exported as:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Kubeflow pipeline components&lt;/li&gt; &#xA; &lt;li&gt;Apache Airflow components&lt;/li&gt; &#xA; &lt;li&gt;Standalone graphical components for the Elyra pipeline editor&lt;/li&gt; &#xA; &lt;li&gt;Standalone components to be run from the command line&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/IBM/claimed/raw/master/images/elyra_graphical_export.png&#34; alt=&#34;Visually create pipelines from notebooks and run everywhere&#34;&gt; &lt;em&gt;Visually create pipelines from notebooks and run them everywhere&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Each notebook is following a similar format.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The first cell contains a description of the component itself.&lt;/li&gt; &#xA; &lt;li&gt;The second cell installs all dependencies using pip3.&lt;/li&gt; &#xA; &lt;li&gt;The third cell imports all dependencies.&lt;/li&gt; &#xA; &lt;li&gt;The fourth cell contains a list of dependencies, input parameters, and return values as Python comments&lt;/li&gt; &#xA; &lt;li&gt;The fifth cell reads the input parameters from environment variables.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/IBM/claimed/raw/master/images/elyra_cli_export.png&#34; alt=&#34;Export notebooks and files as runtime components for different engines&#34;&gt; &lt;em&gt;Export notebooks and files as runtime components for different engines&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;To learn more on how this library works in practice, please have a look at the following &lt;a href=&#34;https://www.youtube.com/watch?v=FuV2oG55C5s&#34;&gt;video&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Related work&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ploomber/ploomber&#34;&gt;Ploomber&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.orchest.io/&#34;&gt;Orchest&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;[covidata] Joseph Paul Cohen et al. &lt;em&gt;COVID-19 Image Data Collection: Prospective Predictions Are the Future&lt;/em&gt;, arXiv:2006.11988, 2020&lt;/p&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;We welcome your questions, ideas, and feedback. Please create an &lt;a href=&#34;https://github.com/IBM/claimed/issues&#34;&gt;issue&lt;/a&gt; or a &lt;a href=&#34;https://github.com/IBM/claimed/discussions&#34;&gt;discussion thread&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to CLAIMED&lt;/h2&gt; &#xA;&lt;p&gt;Interested in helping make the NLP editor better? We encourage you to take a look at our &lt;a href=&#34;https://raw.githubusercontent.com/IBM/claimed/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; page.&lt;/p&gt;</summary>
  </entry>
</feed>