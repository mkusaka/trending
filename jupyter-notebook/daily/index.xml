<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-17T01:32:07Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mongodb-developer/GenAI-Showcase</title>
    <updated>2025-02-17T01:32:07Z</updated>
    <id>tag:github.com,2025-02-17:/mongodb-developer/GenAI-Showcase</id>
    <link href="https://github.com/mongodb-developer/GenAI-Showcase" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GenAI Cookbook&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;MongoDB&#39;s GenAI Showcase&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to MongoDB&#39;s Generative AI Showcase Repository!&lt;/p&gt; &#xA;&lt;p&gt;Whether you are just starting out on your Generative AI journey, or looking to build advanced GenAI applications, we&#39;ve got you covered. This repository has an exhaustive list of examples and sample applications that cover Retrieval-Augmented Generation (RAG), AI Agents, and industry-specific use cases.&lt;/p&gt; &#xA;&lt;p&gt;Discover how MongoDB integrates into RAG pipelines and AI Agents, serving as a vector database, operational database, and memory provider.&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;p&gt;This repo mainly contains:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Jupyter notebooks examples for RAG, agentic applications, evaluations etc. under &lt;code&gt;notebooks&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Javascipt and Python apps and demos under &lt;code&gt;apps&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Contributions from our AI partners under &lt;code&gt;partners&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You will need to connect to a MongoDB cluster to run any of the apps or examples in this repo. Follow these steps to get set up:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Register for a &lt;a href=&#34;https://www.mongodb.com/cloud/atlas/register&#34;&gt;free MongoDB Atlas account&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mongodb.com/docs/guides/atlas/cluster/&#34;&gt;Create a new database cluster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mongodb.com/docs/guides/atlas/connection-string/&#34;&gt;Obtain the connection string&lt;/a&gt; for your database cluster&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions! Please read our &lt;a href=&#34;https://raw.githubusercontent.com/mongodb-developer/GenAI-Showcase/main/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt; for more information on how to participate.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/mongodb-developer/GenAI-Showcase/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Support&lt;/h2&gt; &#xA;&lt;p&gt;As you work through these examples, if you encounter any problems, please &lt;a href=&#34;https://github.com/mongodb-developer/GenAI-Showcase/issues/new&#34;&gt;open a new issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mongodb.com/resources/use-cases/artificial-intelligence&#34;&gt;AI Learning Hub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mongodb.com/community/forums/c/generative-ai/162&#34;&gt;GenAI Community Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mongodb/docs-notebooks&#34;&gt;Tutorials and code examples from our official docs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ag2ai/ag2</title>
    <updated>2025-02-17T01:32:07Z</updated>
    <id>tag:github.com,2025-02-17:/ag2ai/ag2</id>
    <link href="https://github.com/ag2ai/ag2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AG2 (formerly AutoGen): The Open-Source AgentOS. Join us at: https://discord.gg/pAbnFJrkgZ&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name=&#34;readme-top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;!-- The image URL points to the GitHub-hosted content, ensuring it displays correctly on the PyPI website.--&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ag2ai/ag2/27b37494a6f72b1f8050f6bd7be9a7ff232cf749/website/static/img/ag2.svg?sanitize=true&#34; width=&#34;150&#34; title=&#34;hover text&#34;&gt; &lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://img.shields.io/pypi/dm/pyautogen?label=PyPI%20downloads&#34;&gt; &lt;a href=&#34;https://badge.fury.io/py/autogen&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/autogen.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ag2ai/ag2/actions/workflows/python-package.yml&#34;&gt; &lt;img src=&#34;https://github.com/ag2ai/ag2/actions/workflows/python-package.yml/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/3.9%20%7C%203.10%20%7C%203.11%20%7C%203.12-blue&#34;&gt; &lt;a href=&#34;https://discord.gg/pAbnFJrkgZ&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/1153072414184452236?logo=discord&amp;amp;style=flat&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://x.com/ag2oss&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/url/https/twitter.com/cloudposse.svg?style=social&amp;amp;label=Follow%20%40ag2ai&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://docs.ag2.ai/&#34;&gt;üìö Documentation&lt;/a&gt; | &lt;a href=&#34;https://github.com/ag2ai/build-with-ag2&#34;&gt;üí° Examples&lt;/a&gt; | &lt;a href=&#34;https://docs.ag2.ai/docs/contributor-guide/contributing&#34;&gt;ü§ù Contributing&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#related-papers&#34;&gt;üìù Cite paper&lt;/a&gt; | &lt;a href=&#34;https://discord.gg/pAbnFJrkgZ&#34;&gt;üí¨ Join Discord&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; AG2 was evolved from AutoGen. Fully open-sourced. We invite collaborators from all organizations to contribute. &lt;/p&gt; &#xA;&lt;h1&gt;AG2: Open-Source AgentOS for AI Agents&lt;/h1&gt; &#xA;&lt;p&gt;AG2 (formerly AutoGen) is an open-source programming framework for building AI agents and facilitating cooperation among multiple agents to solve tasks. AG2 aims to streamline the development and research of agentic AI. It offers features such as agents capable of interacting with each other, facilitates the use of various large language models (LLMs) and tool use support, autonomous and human-in-the-loop workflows, and multi-agent conversation patterns.&lt;/p&gt; &#xA;&lt;p&gt;The project is currently maintained by a &lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/MAINTAINERS.md&#34;&gt;dynamic group of volunteers&lt;/a&gt; from several organizations. Contact project administrators Chi Wang and Qingyun Wu via &lt;a href=&#34;mailto:support@ag2.ai&#34;&gt;support@ag2.ai&lt;/a&gt; if you are interested in becoming a maintainer.&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#ag2-open-source-agentos-for-ai-agents&#34;&gt;AG2: Open-Source AgentOS for AI Agents&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#table-of-contents&#34;&gt;Table of contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#getting-started&#34;&gt;Getting started&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#setup-your-api-keys&#34;&gt;Setup your API keys&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#run-your-first-agent&#34;&gt;Run your first agent&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#example-applications&#34;&gt;Example applications&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#introduction-of-different-agent-concepts&#34;&gt;Introduction of different agent concepts&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#conversable-agent&#34;&gt;Conversable agent&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#human-in-the-loop&#34;&gt;Human in the loop&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#orchestrating-multiple-agents&#34;&gt;Orchestrating multiple agents&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#tools&#34;&gt;Tools&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#advanced-agentic-design-patterns&#34;&gt;Advanced agentic design patterns&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#announcements&#34;&gt;Announcements&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#contributors-wall&#34;&gt;Contributors Wall&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#code-style-and-linting&#34;&gt;Code style and linting&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#related-papers&#34;&gt;Related papers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#cite-the-project&#34;&gt;Cite the project&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;For a step-by-step walk through of AG2 concepts and code, see &lt;a href=&#34;https://docs.ag2.ai/docs/user-guide/basic-concepts&#34;&gt;Basic Concepts&lt;/a&gt; in our documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;AG2 requires &lt;strong&gt;Python version &amp;gt;= 3.9, &amp;lt; 3.14&lt;/strong&gt;. AG2 is available via &lt;code&gt;ag2&lt;/code&gt; (or its alias &lt;code&gt;pyautogen&lt;/code&gt; or &lt;code&gt;autogen&lt;/code&gt;) on PyPI.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install ag2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Minimal dependencies are installed by default. You can install extra options based on the features you need.&lt;/p&gt; &#xA;&lt;h3&gt;Setup your API keys&lt;/h3&gt; &#xA;&lt;p&gt;To keep your LLM dependencies neat we recommend using the &lt;code&gt;OAI_CONFIG_LIST&lt;/code&gt; file to store your API keys.&lt;/p&gt; &#xA;&lt;p&gt;You can use the sample file &lt;code&gt;OAI_CONFIG_LIST_sample&lt;/code&gt; as a template.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[&#xA;  {&#xA;    &#34;model&#34;: &#34;gpt-4o&#34;,&#xA;    &#34;api_key&#34;: &#34;&amp;lt;your OpenAI API key here&amp;gt;&#34;&#xA;  }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run your first agent&lt;/h3&gt; &#xA;&lt;p&gt;Create a script or a Jupyter Notebook and run your first agent.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from autogen import AssistantAgent, UserProxyAgent, config_list_from_json&#xA;&#xA;llm_config = {&#xA;    &#34;config_list&#34;: config_list_from_json(env_or_file=&#34;OAI_CONFIG_LIST&#34;)&#xA;}&#xA;&#xA;assistant = AssistantAgent(&#34;assistant&#34;, llm_config=llm_config)&#xA;user_proxy = UserProxyAgent(&#34;user_proxy&#34;, code_execution_config={&#34;work_dir&#34;: &#34;coding&#34;, &#34;use_docker&#34;: False})&#xA;user_proxy.initiate_chat(assistant, message=&#34;Plot a chart of NVDA and TESLA stock price change YTD.&#34;)&#xA;# This initiates an automated chat between the two agents to solve the task&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example applications&lt;/h2&gt; &#xA;&lt;p&gt;We maintain a dedicated repository with a wide range of applications to help you get started with various use cases or check out our collection of jupyter notebooks as a starting point.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ag2ai/build-with-ag2&#34;&gt;Build with AG2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/notebook&#34;&gt;Jupyter Notebooks&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction of different agent concepts&lt;/h2&gt; &#xA;&lt;p&gt;We have several agent concepts in AG2 to help you build your AI agents. We introduce the most common ones here.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Conversable Agent&lt;/strong&gt;: Agents that are able to send messages, receive messages and generate replies using GenAI models, non-GenAI tools, or human inputs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Human in the loop&lt;/strong&gt;: Add human input to the conversation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Orchestrating multiple agents&lt;/strong&gt;: Users can orchestrate multiple agents with built-in conversation patterns such as swarms, group chats, nested chats, sequential chats or customize the orchestration by registering custom reply methods.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Programs that can be registered, invoked and executed by agents&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Advanced Concepts&lt;/strong&gt;: AG2 supports more concepts such as structured outputs, rag, code execution, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Conversable agent&lt;/h3&gt; &#xA;&lt;p&gt;The conversable agent is the most used agent and is created for generating conversations among agents. It serves as a base class for all agents in AG2.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from autogen import ConversableAgent&#xA;&#xA;# Create an AI agent&#xA;assistant = ConversableAgent(&#xA;    name=&#34;assistant&#34;,&#xA;    system_message=&#34;You are an assistant that responds concisely.&#34;,&#xA;    llm_config=llm_config&#xA;)&#xA;&#xA;# Create another AI agent&#xA;fact_checker = ConversableAgent(&#xA;    name=&#34;fact_checker&#34;,&#xA;    system_message=&#34;You are a fact-checking assistant.&#34;,&#xA;    llm_config=llm_config&#xA;)&#xA;&#xA;# Start the conversation&#xA;assistant.initiate_chat(&#xA;    recipient=fact_checker,&#xA;    message=&#34;What is AG2?&#34;,&#xA;    max_turns=2&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Human in the loop&lt;/h3&gt; &#xA;&lt;p&gt;Sometimes your wished workflow requires human input. Therefore you can enable the human in the loop feature.&lt;/p&gt; &#xA;&lt;p&gt;If you set &lt;code&gt;human_input_mode&lt;/code&gt; to &lt;code&gt;ALWAYS&lt;/code&gt; on ConversableAgent you can give human input to the conversation.&lt;/p&gt; &#xA;&lt;p&gt;There are three modes for &lt;code&gt;human_input_mode&lt;/code&gt;: &lt;code&gt;ALWAYS&lt;/code&gt;, &lt;code&gt;NEVER&lt;/code&gt;, &lt;code&gt;TERMINATE&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We created a class which sets the &lt;code&gt;human_input_mode&lt;/code&gt; to &lt;code&gt;ALWAYS&lt;/code&gt; for you. Its called &lt;code&gt;UserProxyAgent&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from autogen import ConversableAgent&#xA;&#xA;# Create an AI agent&#xA;assistant = ConversableAgent(&#xA;    name=&#34;assistant&#34;,&#xA;    system_message=&#34;You are a helpful assistant.&#34;,&#xA;    llm_config=llm_config&#xA;)&#xA;&#xA;# Create a human agent with manual input mode&#xA;human = ConversableAgent(&#xA;    name=&#34;human&#34;,&#xA;    human_input_mode=&#34;ALWAYS&#34;&#xA;)&#xA;# or&#xA;human = UserProxyAgent(name=&#34;human&#34;, code_execution_config={&#34;work_dir&#34;: &#34;coding&#34;, &#34;use_docker&#34;: False})&#xA;&#xA;# Start the chat&#xA;human.initiate_chat(&#xA;    recipient=assistant,&#xA;    message=&#34;Hello! What&#39;s 2 + 2?&#34;&#xA;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Orchestrating multiple agents&lt;/h3&gt; &#xA;&lt;p&gt;Users can define their own orchestration patterns using the flexible programming interface from AG2.&lt;/p&gt; &#xA;&lt;p&gt;Additionally AG2 provides multiple built-in patterns to orchestrate multiple agents, such as &lt;code&gt;GroupChat&lt;/code&gt; and &lt;code&gt;Swarm&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Both concepts are used to orchestrate multiple agents to solve a task.&lt;/p&gt; &#xA;&lt;p&gt;The group chat works like a chat where each registered agent can participate in the conversation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from autogen import ConversableAgent, GroupChat, GroupChatManager&#xA;&#xA;# Create AI agents&#xA;teacher = ConversableAgent(name=&#34;teacher&#34;, system_message=&#34;You suggest lesson topics.&#34;)&#xA;planner = ConversableAgent(name=&#34;planner&#34;, system_message=&#34;You create lesson plans.&#34;)&#xA;reviewer = ConversableAgent(name=&#34;reviewer&#34;, system_message=&#34;You review lesson plans.&#34;)&#xA;&#xA;# Create GroupChat&#xA;groupchat = GroupChat(agents=[teacher, planner, reviewer], speaker_selection_method=&#34;auto&#34;)&#xA;&#xA;# Create the GroupChatManager, it will manage the conversation and uses an LLM to select the next agent&#xA;manager = GroupChatManager(name=&#34;manager&#34;, groupchat=groupchat)&#xA;&#xA;# Start the conversation&#xA;teacher.initiate_chat(manager, &#34;Create a lesson on photosynthesis.&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The swarm requires a more rigid structure and the flow needs to be defined with hand-off, post-tool, and post-work transitions from an agent to another agent.&lt;/p&gt; &#xA;&lt;p&gt;Read more about it in the &lt;a href=&#34;https://docs.ag2.ai/docs/user-guide/advanced-concepts/conversation-patterns-deep-dive&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tools&lt;/h3&gt; &#xA;&lt;p&gt;Agents gain significant utility through tools as they provide access to external data, APIs, and functionality.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from datetime import datetime&#xA;from typing import Annotated&#xA;&#xA;from autogen import ConversableAgent, register_function&#xA;&#xA;# 1. Our tool, returns the day of the week for a given date&#xA;def get_weekday(date_string: Annotated[str, &#34;Format: YYYY-MM-DD&#34;]) -&amp;gt; str:&#xA;    date = datetime.strptime(date_string, &#34;%Y-%m-%d&#34;)&#xA;    return date.strftime(&#34;%A&#34;)&#xA;&#xA;# 2. Agent for determining whether to run the tool&#xA;date_agent = ConversableAgent(&#xA;    name=&#34;date_agent&#34;,&#xA;    system_message=&#34;You get the day of the week for a given date.&#34;,&#xA;    llm_config=llm_config,&#xA;)&#xA;&#xA;# 3. And an agent for executing the tool&#xA;executor_agent = ConversableAgent(&#xA;    name=&#34;executor_agent&#34;,&#xA;    human_input_mode=&#34;NEVER&#34;,&#xA;)&#xA;&#xA;# 4. Registers the tool with the agents, the description will be used by the LLM&#xA;register_function(&#xA;    get_weekday,&#xA;    caller=date_agent,&#xA;    executor=executor_agent,&#xA;    description=&#34;Get the day of the week for a given date&#34;,&#xA;)&#xA;&#xA;# 5. Two-way chat ensures the executor agent follows the suggesting agent&#xA;chat_result = executor_agent.initiate_chat(&#xA;    recipient=date_agent,&#xA;    message=&#34;I was born on the 25th of March 1995, what day was it?&#34;,&#xA;    max_turns=1,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Advanced agentic design patterns&lt;/h3&gt; &#xA;&lt;p&gt;AG2 supports more advanced concepts to help you build your AI agent workflows. You can find more information in the documentation.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ag2.ai/docs/user-guide/basic-concepts/structured-outputs&#34;&gt;Structured Output&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ag2.ai/docs/user-guide/basic-concepts/ending-a-chat&#34;&gt;Ending a conversation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ag2.ai/docs/user-guide/advanced-concepts/rag&#34;&gt;Retrieval Augmented Generation (RAG)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ag2.ai/docs/user-guide/advanced-concepts/code-execution&#34;&gt;Code Execution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ag2.ai/docs/user-guide/advanced-concepts/tools-with-secrets&#34;&gt;Tools with Secrets&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Announcements&lt;/h2&gt; &#xA;&lt;p&gt;üî• üéâ &lt;strong&gt;Nov 11, 2024:&lt;/strong&gt; We are evolving AutoGen into &lt;strong&gt;AG2&lt;/strong&gt;! A new organization &lt;a href=&#34;https://github.com/ag2ai&#34;&gt;AG2AI&lt;/a&gt; is created to host the development of AG2 and related projects with open governance. Check &lt;a href=&#34;https://ag2.ai/&#34;&gt;AG2&#39;s new look&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;üìÑ &lt;strong&gt;License:&lt;/strong&gt; We adopt the Apache 2.0 license from v0.3. This enhances our commitment to open-source collaboration while providing additional protections for contributors and users alike.&lt;/p&gt; &#xA;&lt;p&gt;üéâ May 29, 2024: DeepLearning.ai launched a new short course &lt;a href=&#34;https://www.deeplearning.ai/short-courses/ai-agentic-design-patterns-with-autogen&#34;&gt;AI Agentic Design Patterns with AutoGen&lt;/a&gt;, made in collaboration with Microsoft and Penn State University, and taught by AutoGen creators &lt;a href=&#34;https://github.com/sonichi&#34;&gt;Chi Wang&lt;/a&gt; and &lt;a href=&#34;https://github.com/qingyun-wu&#34;&gt;Qingyun Wu&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;üéâ May 24, 2024: Foundation Capital published an article on &lt;a href=&#34;https://www.forbes.com/sites/joannechen/2024/05/24/the-promise-of-multi-agent-ai/?sh=2c1e4f454d97&#34;&gt;Forbes: The Promise of Multi-Agent AI&lt;/a&gt; and a video &lt;a href=&#34;https://www.youtube.com/watch?v=RLwyXRVvlNk&#34;&gt;AI in the Real World Episode 2: Exploring Multi-Agent AI and AutoGen with Chi Wang&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;üéâ Apr 17, 2024: Andrew Ng cited AutoGen in &lt;a href=&#34;https://www.deeplearning.ai/the-batch/issue-245/&#34;&gt;The Batch newsletter&lt;/a&gt; and &lt;a href=&#34;https://youtu.be/sal78ACtGTc?si=JduUzN_1kDnMq0vF&#34;&gt;What&#39;s next for AI agentic workflows&lt;/a&gt; at Sequoia Capital&#39;s AI Ascent (Mar 26).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/announcements.md&#34;&gt;More Announcements&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors Wall&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/ag2ai/ag2/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=ag2ai/ag2&amp;amp;max=204&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Code style and linting&lt;/h2&gt; &#xA;&lt;p&gt;This project uses pre-commit hooks to maintain code quality. Before contributing:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install pre-commit:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install pre-commit&#xA;pre-commit install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;The hooks will run automatically on commit, or you can run them manually:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pre-commit run --all-files&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Related papers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2308.08155&#34;&gt;AutoGen: Enabling Next-Gen LLM Applications via Multi-Agent Conversation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2303.04673&#34;&gt;EcoOptiGen: Hyperparameter Optimization for Large Language Model Generation Inference&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2306.01337&#34;&gt;MathChat: Converse to Tackle Challenging Math Problems with LLM Agents&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://arxiv.org/pdf/2402.11359&#34;&gt;AgentOptimizer: Offline Training of Language Model Agents with Functions as Learnable Weights&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2403.11322&#34;&gt;StateFlow: Enhancing LLM Task-Solving through State-Driven Workflows&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cite the project&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@software{AG2_2024,&#xA;author = {Chi Wang and Qingyun Wu and the AG2 Community},&#xA;title = {AG2: Open-Source AgentOS for AI Agents},&#xA;year = {2024},&#xA;url = {https://github.com/ag2ai/ag2},&#xA;note = {Available at https://docs.ag2.ai/},&#xA;version = {latest}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/LICENSE&#34;&gt;Apache License, Version 2.0 (Apache-2.0)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project is a spin-off of &lt;a href=&#34;https://github.com/microsoft/autogen&#34;&gt;AutoGen&lt;/a&gt; and contains code under two licenses:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The original code from &lt;a href=&#34;https://github.com/microsoft/autogen&#34;&gt;https://github.com/microsoft/autogen&lt;/a&gt; is licensed under the MIT License. See the &lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/license_original/LICENSE_original_MIT&#34;&gt;LICENSE_original_MIT&lt;/a&gt; file for details.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Modifications and additions made in this fork are licensed under the Apache License, Version 2.0. See the &lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for the full license text.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We have documented these changes for clarity and to ensure transparency with our user and contributor community. For more details, please see the &lt;a href=&#34;https://raw.githubusercontent.com/ag2ai/ag2/main/NOTICE.md&#34;&gt;NOTICE&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
</feed>