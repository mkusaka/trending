<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-28T01:31:41Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MervinPraison/PraisonAI</title>
    <updated>2024-12-28T01:31:41Z</updated>
    <id>tag:github.com,2024-12-28:/MervinPraison/PraisonAI</id>
    <link href="https://github.com/MervinPraison/PraisonAI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PraisonAI is an AI Agents Framework with Self Reflection. PraisonAI application combines PraisonAI Agents, AutoGen, and CrewAI into a low-code solution for building and managing multi-agent LLM systems, focusing on simplicity, customisation, and efficient human‚Äìagent collaboration.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;docs/logo/dark.png&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;docs/logo/light.png&#34;&gt; &#xA;  &lt;img alt=&#34;PraisonAI Logo&#34; src=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/docs/logo/light.png&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/MervinPraison/PraisonAI&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/badge/PraisonAI&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/MervinPraison/PraisonAI&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/MervinPraison/PraisonAI&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/MervinPraison/PraisonAI&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Praison AI&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://trendshift.io/repositories/9130&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://trendshift.io/api/badge/repositories/9130&#34; alt=&#34;MervinPraison%2FPraisonAI | Trendshift&#34; style=&#34;width: 250px; height: 55px;&#34; width=&#34;250&#34; height=&#34;55&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;PraisonAI is an AI Agents Framework with Self Reflection. PraisonAI application combines PraisonAI Agents, AutoGen, and CrewAI into a low-code solution for building and managing multi-agent LLM systems, focusing on simplicity, customisation, and efficient human‚Äìagent collaboration.&lt;/p&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ü§ñ Automated AI Agents Creation&lt;/li&gt; &#xA; &lt;li&gt;üîÑ Use CrewAI or AutoGen Framework&lt;/li&gt; &#xA; &lt;li&gt;üíØ 100+ LLM Support&lt;/li&gt; &#xA; &lt;li&gt;üíª Chat with ENTIRE Codebase&lt;/li&gt; &#xA; &lt;li&gt;üñ•Ô∏è Interactive UIs&lt;/li&gt; &#xA; &lt;li&gt;üìÑ YAML-based Configuration&lt;/li&gt; &#xA; &lt;li&gt;üõ†Ô∏è Custom Tool Integration&lt;/li&gt; &#xA; &lt;li&gt;üîç Internet Search Capability (using Crawl4AI and Tavily)&lt;/li&gt; &#xA; &lt;li&gt;üëÅÔ∏è Vision Language Model (VLM) Support&lt;/li&gt; &#xA; &lt;li&gt;üéôÔ∏è Real-time Voice Interaction&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using No Code&lt;/h2&gt; &#xA;&lt;h3&gt;Auto Mode:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install praisonai&#xA;export OPENAI_API_KEY=xxxxxxxxxxxxxxxxxxxxxx&#xA;praisonai --auto create a movie script about Robots in Mars&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Initialise Mode:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install praisonai&#xA;export OPENAI_API_KEY=xxxxxxxxxxxxxxxxxxxxxx&#xA;praisonai --init create a movie script about Robots in Mars&#xA;praisonai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using Coding&lt;/h2&gt; &#xA;&lt;p&gt;Light weight package dedicated for coding:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install praisonaiagents&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export OPENAI_API_KEY=xxxxxxxxxxxxxxxxxxxxxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create app.py file and add the code below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from praisonaiagents import Agent, Task, PraisonAIAgents&#xA;&#xA;# 1. Create agents&#xA;researcher = Agent(&#xA;    name=&#34;Researcher&#34;,&#xA;    role=&#34;Senior Research Analyst&#34;,&#xA;    goal=&#34;Uncover cutting-edge developments in AI and data science&#34;,&#xA;    backstory=&#34;&#34;&#34;You are an expert at a technology research group, &#xA;    skilled in identifying trends and analyzing complex data.&#34;&#34;&#34;,&#xA;    verbose=True,&#xA;    llm=&#34;gpt-4o&#34;,&#xA;    markdown=True&#xA;)&#xA;writer = Agent(&#xA;    name=&#34;Writer&#34;,&#xA;    role=&#34;Tech Content Strategist&#34;,&#xA;    goal=&#34;Craft compelling content on tech advancements&#34;,&#xA;    backstory=&#34;&#34;&#34;You are a content strategist known for &#xA;    making complex tech topics interesting and easy to understand.&#34;&#34;&#34;,&#xA;    llm=&#34;gpt-4o&#34;,&#xA;    markdown=True&#xA;)&#xA;&#xA;# 2. Define Tasks&#xA;task1 = Task(&#xA;    name=&#34;research_task&#34;,&#xA;    description=&#34;&#34;&#34;Analyze 2024&#39;s AI advancements. &#xA;    Find major trends, new technologies, and their effects.&#34;&#34;&#34;,&#xA;    expected_output=&#34;&#34;&#34;A detailed report on 2024 AI advancements&#34;&#34;&#34;,&#xA;    agent=researcher&#xA;)&#xA;&#xA;task2 = Task(&#xA;    name=&#34;writing_task&#34;,&#xA;    description=&#34;&#34;&#34;Create a blog post about major AI advancements using the insights you have.&#xA;    Make it interesting, clear, and suited for tech enthusiasts. &#xA;    It should be at least 4 paragraphs long.&#34;&#34;&#34;,&#xA;    expected_output=&#34;A blog post of at least 4 paragraphs&#34;,&#xA;    agent=writer,&#xA;)&#xA;&#xA;agents = PraisonAIAgents(&#xA;    agents=[researcher, writer],&#xA;    tasks=[task1, task2],&#xA;    verbose=False,&#xA;    process=&#34;hierarchical&#34;,&#xA;    manager_llm=&#34;gpt-4o&#34;&#xA;)&#xA;&#xA;result = agents.start()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python app.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Ollama Integration&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export OPENAI_BASE_URL=http://localhost:11434/v1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Groq Integration&lt;/h2&gt; &#xA;&lt;p&gt;Replace xxxx with Groq API KEY:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export OPENAI_API_KEY=xxxxxxxxxxx&#xA;export OPENAI_BASE_URL=https://api.groq.com/openai/v1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Logging&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export LOGLEVEL=info&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Advanced logging:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export LOGLEVEL=debug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;docs/images/architecture-dark.png&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;docs/images/architecture-light.png&#34;&gt; &#xA;  &lt;img alt=&#34;PraisonAI Architecture&#34; src=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/docs/images/architecture-light.png&#34;&gt; &#xA; &lt;/picture&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Different User Interfaces:&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Interface&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;URL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;UI&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Multi Agents such as CrewAI or AutoGen&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.praison.ai/ui/ui&#34;&gt;https://docs.praison.ai/ui/ui&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Chat&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Chat with 100+ LLMs, single AI Agent&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.praison.ai/ui/chat&#34;&gt;https://docs.praison.ai/ui/chat&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Code&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Chat with entire Codebase, single AI Agent&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.praison.ai/ui/code&#34;&gt;https://docs.praison.ai/ui/code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Realtime&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Real-time voice interaction with AI&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.praison.ai/ui/realtime&#34;&gt;https://docs.praison.ai/ui/realtime&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Other Features&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Docs&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Train&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fine-tune LLMs using your custom data&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.praison.ai/train&#34;&gt;https://docs.praison.ai/train&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Google Colab Multi Agents&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Cookbook&lt;/th&gt; &#xA;   &lt;th&gt;Open in Colab&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Basic&lt;/td&gt; &#xA;   &lt;td&gt;PraisonAI&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://colab.research.google.com/github/MervinPraison/PraisonAI/blob/main/cookbooks/praisonai-googlecolab.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Include Tools&lt;/td&gt; &#xA;   &lt;td&gt;PraisonAI Tools&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://colab.research.google.com/github/MervinPraison/PraisonAI/blob/main/cookbooks/praisonai-tools-googlecolab.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation Options&lt;/h2&gt; &#xA;&lt;h3&gt;Using pip&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install praisonai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Framework-specific Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install with CrewAI support&#xA;pip install &#34;praisonai[crewai]&#34;&#xA;&#xA;# Install with AutoGen support&#xA;pip install &#34;praisonai[autogen]&#34;&#xA;&#xA;# Install with both frameworks&#xA;pip install &#34;praisonai[crewai,autogen]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;UI and Additional Features&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install UI support&#xA;pip install &#34;praisonai[ui]&#34;&#xA;&#xA;# Install Chat interface&#xA;pip install &#34;praisonai[chat]&#34;&#xA;&#xA;# Install Code interface&#xA;pip install &#34;praisonai[code]&#34;&#xA;&#xA;# Install Realtime voice interaction&#xA;pip install &#34;praisonai[realtime]&#34;&#xA;&#xA;# Install Call feature&#xA;pip install &#34;praisonai[call]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Set your OpenAI API key&#xA;export OPENAI_API_KEY=&#34;Enter your API key&#34;&#xA;&#xA;# Initialize with CrewAI (default)&#xA;praisonai --init &#34;create a movie script about dog in moon&#34;&#xA;&#xA;# Or initialize with AutoGen&#xA;praisonai --framework autogen --init &#34;create a movie script about dog in moon&#34;&#xA;&#xA;# Run the agents&#xA;praisonai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Full Automatic Mode&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# With CrewAI (default)&#xA;praisonai --auto &#34;create a movie script about Dog in Moon&#34;&#xA;&#xA;# With AutoGen&#xA;praisonai --framework autogen --auto &#34;create a movie script about Dog in Moon&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Framework-specific Features&lt;/h2&gt; &#xA;&lt;h3&gt;CrewAI&lt;/h3&gt; &#xA;&lt;p&gt;When installing with &lt;code&gt;pip install &#34;praisonai[crewai]&#34;&lt;/code&gt;, you get:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CrewAI framework support&lt;/li&gt; &#xA; &lt;li&gt;PraisonAI tools integration&lt;/li&gt; &#xA; &lt;li&gt;Task delegation capabilities&lt;/li&gt; &#xA; &lt;li&gt;Sequential and parallel task execution&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;AutoGen&lt;/h3&gt; &#xA;&lt;p&gt;When installing with &lt;code&gt;pip install &#34;praisonai[autogen]&#34;&lt;/code&gt;, you get:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AutoGen framework support&lt;/li&gt; &#xA; &lt;li&gt;PraisonAI tools integration&lt;/li&gt; &#xA; &lt;li&gt;Multi-agent conversation capabilities&lt;/li&gt; &#xA; &lt;li&gt;Code execution environment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;TL;DR Multi Agents&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install praisonai&#xA;export OPENAI_API_KEY=&#34;Enter your API key&#34;&#xA;praisonai --init create a movie script about dog in moon&#xA;praisonai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#initialise&#34;&gt;Initialise&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#run&#34;&gt;Run&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#full-automatic-mode&#34;&gt;Full Automatic Mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#user-interface&#34;&gt;User Interface&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#praison-ai-chat&#34;&gt;Praison AI Chat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#create-custom-tools&#34;&gt;Create Custom Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#agents-playbook&#34;&gt;Agents Playbook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#include-praisonai-package-in-your-project&#34;&gt;Include praisonai package in your project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#commands-to-install-dependencies&#34;&gt;Commands to Install Dev Dependencies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#other-models&#34;&gt;Other Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MervinPraison/PraisonAI/main/#star-history&#34;&gt;Star History&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation Multi Agents&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install praisonai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Initialise&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export OPENAI_API_KEY=&#34;Enter your API key&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generate your OPENAI API KEY from here: &lt;a href=&#34;https://platform.openai.com/api-keys&#34;&gt;https://platform.openai.com/api-keys&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note: You can use other providers such as Ollama, Mistral ... etc. Details are provided at the bottom.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;praisonai --init create a movie script about dog in moon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will automatically create agents.yaml file in the current directory.&lt;/p&gt; &#xA;&lt;h3&gt;To initialise with a specific agent framework (Optional):&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;praisonai --framework autogen --init create movie script about cat in mars&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;praisonai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m praisonai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Specify the agent framework (Optional):&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;praisonai --framework autogen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Full Automatic Mode&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;praisonai --auto create a movie script about Dog in Moon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;User Interface&lt;/h2&gt; &#xA;&lt;h2&gt;PraisonAI User Interfaces:&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Interface&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;URL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;UI&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Multi Agents such as CrewAI or AutoGen&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.praison.ai/ui/ui&#34;&gt;https://docs.praisonai.com/ui/ui&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Chat&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Chat with 100+ LLMs, single AI Agent&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.praison.ai/ui/chat&#34;&gt;https://docs.praisonai.com/ui/chat&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Code&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Chat with entire Codebase, single AI Agent&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.praison.ai/ui/code&#34;&gt;https://docs.praisonai.com/ui/code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -U &#34;praisonai[ui]&#34;&#xA;export OPENAI_API_KEY=&#34;Enter your API key&#34;&#xA;chainlit create-secret&#xA;export CHAINLIT_AUTH_SECRET=xxxxxxxx&#xA;praisonai ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -m praisonai ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Praison AI Chat&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.praison.ai/chat/&#34;&gt;https://docs.praison.ai/chat/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install &#34;praisonai[chat]&#34;&#xA;export OPENAI_API_KEY=&#34;Enter your API key&#34;&#xA;praisonai chat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Internet Search&lt;/h3&gt; &#xA;&lt;p&gt;Praison AI Chat and Praison AI Code now includes internet search capabilities using Crawl4AI and Tavily, allowing you to retrieve up-to-date information during your conversations.&lt;/p&gt; &#xA;&lt;h3&gt;Vision Language Model Support&lt;/h3&gt; &#xA;&lt;p&gt;You can now upload images and ask questions based on them using Vision Language Models. This feature enables visual understanding and analysis within your chat sessions.&lt;/p&gt; &#xA;&lt;h2&gt;Praison AI Code&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install &#34;praisonai[code]&#34;&#xA;export OPENAI_API_KEY=&#34;Enter your API key&#34;&#xA;praisonai code&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Internet Search&lt;/h3&gt; &#xA;&lt;p&gt;Praison AI Code also includes internet search functionality, enabling you to find relevant code snippets and programming information online.&lt;/p&gt; &#xA;&lt;h2&gt;Create Custom Tools&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.praison.ai/tools/custom/&#34;&gt;https://docs.praison.ai/tools/custom/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Agents Playbook&lt;/h2&gt; &#xA;&lt;h3&gt;Simple Playbook Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;framework: crewai&#xA;topic: Artificial Intelligence&#xA;roles:&#xA;  screenwriter:&#xA;    backstory: &#34;Skilled in crafting scripts with engaging dialogue about {topic}.&#34;&#xA;    goal: Create scripts from concepts.&#xA;    role: Screenwriter&#xA;    tasks:&#xA;      scriptwriting_task:&#xA;        description: &#34;Develop scripts with compelling characters and dialogue about {topic}.&#34;&#xA;        expected_output: &#34;Complete script ready for production.&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use 100+ Models&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.praison.ai/models/&#34;&gt;https://docs.praison.ai/models/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Include praisonai package in your project&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.praison.ai/developers/wrapper&#34;&gt;https://docs.praison.ai/developers/wrapper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.praison.ai/developers/wrapper-tools/&#34;&gt;https://docs.praison.ai/developers/wrapper-tools/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Option 1: Using RAW YAML&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from praisonai import PraisonAI&#xA;&#xA;# Example agent_yaml content&#xA;agent_yaml = &#34;&#34;&#34;&#xA;framework: &#34;crewai&#34;&#xA;topic: &#34;Space Exploration&#34;&#xA;&#xA;roles:&#xA;  astronomer:&#xA;    role: &#34;Space Researcher&#34;&#xA;    goal: &#34;Discover new insights about {topic}&#34;&#xA;    backstory: &#34;You are a curious and dedicated astronomer with a passion for unraveling the mysteries of the cosmos.&#34;&#xA;    tasks:&#xA;      investigate_exoplanets:&#xA;        description: &#34;Research and compile information about exoplanets discovered in the last decade.&#34;&#xA;        expected_output: &#34;A summarized report on exoplanet discoveries, including their size, potential habitability, and distance from Earth.&#34;&#xA;&#34;&#34;&#34;&#xA;&#xA;# Create a PraisonAI instance with the agent_yaml content&#xA;praisonai = PraisonAI(agent_yaml=agent_yaml)&#xA;&#xA;# Run PraisonAI&#xA;result = praisonai.run()&#xA;&#xA;# Print the result&#xA;print(result)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Option 2: Using separate agents.yaml file&lt;/h2&gt; &#xA;&lt;p&gt;Note: Please create agents.yaml file before hand.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from praisonai import PraisonAI&#xA;&#xA;def basic(): # Basic Mode&#xA;    praisonai = PraisonAI(agent_file=&#34;agents.yaml&#34;)&#xA;    praisonai.run()&#xA;&#xA;if __name__ == &#34;__main__&#34;:&#xA;    basic()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Commands to Install Dependencies:&lt;/h2&gt; &#xA;&lt;h3&gt;Using uv&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install uv if you haven&#39;t already&#xA;pip install uv&#xA;&#xA;# Install from requirements&#xA;uv pip install -r pyproject.toml&#xA;&#xA;# Install with extras&#xA;uv pip install -r pyproject.toml --extra code&#xA;uv pip install -r pyproject.toml --extra &#34;crewai,autogen&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fork on GitHub: Use the &#34;Fork&#34; button on the repository page.&lt;/li&gt; &#xA; &lt;li&gt;Clone your fork: &lt;code&gt;git clone https://github.com/yourusername/praisonAI.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a branch: &lt;code&gt;git checkout -b new-feature&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Make changes and commit: &lt;code&gt;git commit -am &#34;Add some feature&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Push to your fork: &lt;code&gt;git push origin new-feature&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Submit a pull request via GitHub&#39;s web interface.&lt;/li&gt; &#xA; &lt;li&gt;Await feedback from project maintainers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.praison.ai&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=MervinPraison/PraisonAI&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Praison AI is an open-sourced software licensed under the &lt;strong&gt;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT license&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Video Tutorials&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Video&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Introduction&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Fn1lQjC0GO0&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/Fn1lQjC0GO0/0.jpg&#34; alt=&#34;Introduction&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tools Overview&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=XaQRgRpV7jo&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/XaQRgRpV7jo/0.jpg&#34; alt=&#34;Tools Overview&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Custom Tools&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=JSU2Rndh06c&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/JSU2Rndh06c/0.jpg&#34; alt=&#34;Custom Tools&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Firecrawl Integration&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=UoqUDcLcOYo&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/UoqUDcLcOYo/0.jpg&#34; alt=&#34;Firecrawl&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;User Interface&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=tg-ZjNl3OCg&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/tg-ZjNl3OCg/0.jpg&#34; alt=&#34;UI&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Crawl4AI Integration&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=KAvuVUh0XU8&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/KAvuVUh0XU8/0.jpg&#34; alt=&#34;Crawl4AI&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chat Interface&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=sw3uDqn2h1Y&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/sw3uDqn2h1Y/0.jpg&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Code Interface&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=_5jQayO-MQY&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/_5jQayO-MQY/0.jpg&#34; alt=&#34;Code&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mem0 Integration&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=KIGSgRxf1cY&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/KIGSgRxf1cY/0.jpg&#34; alt=&#34;Mem0&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Training&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=aLawE8kwCrI&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/aLawE8kwCrI/0.jpg&#34; alt=&#34;Training&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Realtime Voice Interface&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=frRHfevTCSw&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/frRHfevTCSw/0.jpg&#34; alt=&#34;Realtime&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Call Interface&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=m1cwrUG2iAk&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/m1cwrUG2iAk/0.jpg&#34; alt=&#34;Call&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Praison AI is an open-sourced software licensed under the &lt;strong&gt;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT license&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>