<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-04T01:49:19Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wesm/pydata-book</title>
    <updated>2022-07-04T01:49:19Z</updated>
    <id>tag:github.com,2022-07-04:/wesm/pydata-book</id>
    <link href="https://github.com/wesm/pydata-book" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Materials and IPython notebooks for &#34;Python for Data Analysis&#34; by Wes McKinney, published by O&#39;Reilly Media&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Python for Data Analysis, 2nd Edition&lt;/h1&gt; &#xA;&lt;p&gt;Materials and IPython notebooks for &#34;Python for Data Analysis&#34; by Wes McKinney, published by O&#39;Reilly Media&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://amzn.to/2vvBijB&#34;&gt;Buy the book on Amazon&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://notebooks.azure.com/import/gh/wesm/pydata-book&#34;&gt;&lt;img src=&#34;https://notebooks.azure.com/launch.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Follow Wes on Twitter: &lt;a href=&#34;https://twitter.com/wesmckinn&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/wesmckinn.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;1st Edition Readers&lt;/h1&gt; &#xA;&lt;p&gt;If you are reading the &lt;a href=&#34;http://amzn.to/2vvBijB&#34;&gt;1st Edition&lt;/a&gt; (published in 2012), please find the reorganized book materials on the &lt;a href=&#34;https://github.com/wesm/pydata-book/tree/1st-edition&#34;&gt;&lt;code&gt;1st-edition&lt;/code&gt; branch&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Translations&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BrambleXu/pydata-notebook&#34;&gt;Chinese&lt;/a&gt; by Xu Liang&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mbiesiad/pydata-book/tree/pl_PL&#34;&gt;Polish&lt;/a&gt; by Michal Biesiada&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;IPython Notebooks:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch02.ipynb&#34;&gt;Chapter 2: Python Language Basics, IPython, and Jupyter Notebooks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch03.ipynb&#34;&gt;Chapter 3: Built-in Data Structures, Functions, and Files&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch04.ipynb&#34;&gt;Chapter 4: NumPy Basics: Arrays and Vectorized Computation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch05.ipynb&#34;&gt;Chapter 5: Getting Started with pandas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch06.ipynb&#34;&gt;Chapter 6: Data Loading, Storage, and File Formats&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch07.ipynb&#34;&gt;Chapter 7: Data Cleaning and Preparation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch08.ipynb&#34;&gt;Chapter 8: Data Wrangling: Join, Combine, and Reshape&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch09.ipynb&#34;&gt;Chapter 9: Plotting and Visualization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch10.ipynb&#34;&gt;Chapter 10: Data Aggregation and Group Operations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch11.ipynb&#34;&gt;Chapter 11: Time Series&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch12.ipynb&#34;&gt;Chapter 12: Advanced pandas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch13.ipynb&#34;&gt;Chapter 13: Introduction to Modeling Libraries in Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch14.ipynb&#34;&gt;Chapter 14: Data Analysis Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/appa.ipynb&#34;&gt;Appendix A: Advanced NumPy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;h3&gt;Code&lt;/h3&gt; &#xA;&lt;p&gt;The code in this repository, including all code samples in the notebooks listed above, is released under the &lt;a href=&#34;https://raw.githubusercontent.com/wesm/pydata-book/2nd-edition/LICENSE-CODE&#34;&gt;MIT license&lt;/a&gt;. Read more at the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;Open Source Initiative&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>keras-team/keras-io</title>
    <updated>2022-07-04T01:49:19Z</updated>
    <id>tag:github.com,2022-07-04:/keras-team/keras-io</id>
    <link href="https://github.com/keras-team/keras-io" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Keras documentation, hosted live at keras.io&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Keras.io documentation generator&lt;/h1&gt; &#xA;&lt;p&gt;This repository hosts the code used to generate the &lt;a href=&#34;https://keras.io&#34;&gt;keras.io&lt;/a&gt; website.&lt;/p&gt; &#xA;&lt;h2&gt;Generating a local copy of the website&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt&#xA;cd scripts&#xA;python autogen.py make&#xA;python autogen.py serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have Docker (you don&#39;t need the gpu version of Docker), you can run instead:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build -t keras-io . &amp;amp;&amp;amp; docker run --rm -p 8000:8000 keras-io&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It will take a while the first time because it&#39;s going to pull the image and the dependencies, but on the next times it&#39;ll be much faster.&lt;/p&gt; &#xA;&lt;p&gt;Another way of testing using Docker is via our Makefile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make container-test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will build a Docker image with a documentation server and run it.&lt;/p&gt; &#xA;&lt;h2&gt;Call for examples&lt;/h2&gt; &#xA;&lt;p&gt;Are you interested in submitting new examples for publication on keras.io? We welcome your contributions! Please read the information below about adding new code examples.&lt;/p&gt; &#xA;&lt;p&gt;We are currently interested in &lt;a href=&#34;https://github.com/keras-team/keras-io/raw/master/call_for_contributions.md&#34;&gt;the following examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Adding a new code example&lt;/h2&gt; &#xA;&lt;p&gt;Keras code examples are implemented as &lt;strong&gt;tutobooks&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A tutobook is a script available simultaneously as a notebook, as a Python file, and as a nicely-rendered webpage.&lt;/p&gt; &#xA;&lt;p&gt;Its source-of-truth (for manual edition and version control) is its Python script form, but you can also create one by starting from a notebook and converting it with the command &lt;code&gt;nb2py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Text cells are stored in markdown-formatted comment blocks. the first line (starting with &lt;code&gt;&#34;&#34;&#34;&lt;/code&gt;) may optionally contain a special annotation, one of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;shell&lt;/code&gt;: execute this block while prefixing each line with &lt;code&gt;!&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;invisible&lt;/code&gt;: do not render this block.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The script form should start with a header with the following fields:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Title: (title)&#xA;Author: (could be `Authors`: as well, and may contain markdown links)&#xA;Date created: (date in yyyy/mm/dd format)&#xA;Last modified: (date in yyyy/mm/dd format)&#xA;Description: (one-line text description)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To see examples of tutobooks, you can check out any &lt;code&gt;.py&lt;/code&gt; file in &lt;code&gt;examples/&lt;/code&gt; or &lt;code&gt;guides/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Creating a new example starting from a &lt;code&gt;ipynb&lt;/code&gt; file&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Save the &lt;code&gt;ipynb&lt;/code&gt; file to local disk.&lt;/li&gt; &#xA; &lt;li&gt;Convert the file to a tutobook by running: (assuming you are in the &lt;code&gt;scripts/&lt;/code&gt; directory)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;python tutobooks.py nb2py path_to_your_nb.ipynb ../examples/vision/script_name.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create the file &lt;code&gt;examples/vision/script_name.py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Open it, fill in the headers, and generally edit it so that it looks nice.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;NOTE THAT THE CONVERSION SCRIPT MAY MAKE MISTAKES IN ITS ATTEMPTS TO SHORTEN LINES. MAKE SURE TO PROOFREAD THE GENERATED .py IN FULL. Or alternatively, make sure to keep your lines reasonably-sized (&amp;lt;90 char) to start with, so that the script won&#39;t have to shorten them.&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Run &lt;code&gt;python autogen.py add_example vision/script_name&lt;/code&gt;. This will generate an ipynb and markdown rendering of your example, creating files in &lt;code&gt;examples/vision/ipynb&lt;/code&gt;, &lt;code&gt;examples/vision/md&lt;/code&gt;, and &lt;code&gt;examples/vision/img&lt;/code&gt;. Do not modify any of these files by hand; only the original Python script should ever be edited manually.&lt;/li&gt; &#xA; &lt;li&gt;Submit a PR adding &lt;code&gt;examples/vision/script_name.py&lt;/code&gt; (only the &lt;code&gt;.py&lt;/code&gt;, not the generated files). Get a review and approval.&lt;/li&gt; &#xA; &lt;li&gt;Once the PR is approved, add to the PR the files created by the &lt;code&gt;add_example&lt;/code&gt; command. Then we will merge the PR.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Creating a new example starting from a Python script&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Format the script with &lt;code&gt;black&lt;/code&gt;: &lt;code&gt;black script_name.py&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add tutobook header&lt;/li&gt; &#xA; &lt;li&gt;Put the script in the relevant subfolder of &lt;code&gt;examples/&lt;/code&gt; (e.g. &lt;code&gt;examples/vision/script_name&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;python autogen.py add_example vision/script_name&lt;/code&gt;. This will generate an ipynb and markdown rendering of your example, creating files in &lt;code&gt;examples/vision/ipynb&lt;/code&gt;, &lt;code&gt;examples/vision/md&lt;/code&gt;, and &lt;code&gt;examples/vision/img&lt;/code&gt;. Do not modify any of these files by hand; only the original Python script should ever be edited manually.&lt;/li&gt; &#xA; &lt;li&gt;Submit a PR adding &lt;code&gt;examples/vision/script_name.py&lt;/code&gt; (only the &lt;code&gt;.py&lt;/code&gt;, not the generated files). Get a review and approval.&lt;/li&gt; &#xA; &lt;li&gt;Once the PR is approved, add to the PR the files created by the &lt;code&gt;add_example&lt;/code&gt; command. Then we will merge the PR.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Previewing a new example&lt;/h3&gt; &#xA;&lt;p&gt;You can locally preview what the example looks like by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd scripts&#xA;python autogen.py add_example vision/script_name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(Assuming the tutobook file is &lt;code&gt;examples/vision/script_name.py&lt;/code&gt;.)&lt;/p&gt; &#xA;&lt;p&gt;NOTE THAT THIS COMMAND WILL ERROR OUT IF ANY CELLS TAKES TOO LONG TO EXECUTE. In that case, make your code lighter/faster. Remember that examples are meant to demonstrate workflows, not train state-of-the-art models. They should stay very lightweight.&lt;/p&gt; &#xA;&lt;p&gt;Then serving the website:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python autogen.py make&#xA;python autogen.py serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And navigating to &lt;code&gt;0.0.0.0:8000/examples&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Read-only autogenerated files&lt;/h2&gt; &#xA;&lt;p&gt;The contents of the following folders should &lt;strong&gt;not&lt;/strong&gt; be modified by hand:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;site/*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sources/*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;templates/examples/*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;templates/guides/*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;examples/*/md/*&lt;/code&gt;, &lt;code&gt;examples/*/ipynb/*&lt;/code&gt;, &lt;code&gt;examples/*/img/*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;guides/md/*&lt;/code&gt;, &lt;code&gt;guides/ipynb/*&lt;/code&gt;, &lt;code&gt;guides/img/*&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Modifiable files&lt;/h2&gt; &#xA;&lt;p&gt;These are the only files that should be edited by hand:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;templates/*.md&lt;/code&gt;, with the exception of &lt;code&gt;templates/examples/*&lt;/code&gt; and &lt;code&gt;templates/guides/*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;examples/*/*.py&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;guides/*.py&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;theme/*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scripts/*.py&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>RobertRosenbaum/ModelingNeuralCircuits</title>
    <updated>2022-07-04T01:49:19Z</updated>
    <id>tag:github.com,2022-07-04:/RobertRosenbaum/ModelingNeuralCircuits</id>
    <link href="https://github.com/RobertRosenbaum/ModelingNeuralCircuits" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PDF and Code to accompany the textbook &#34;Modeling Neural Circuits Made Simple&#34;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Modeling Neural Circuits Made Simple&lt;/h1&gt; &#xA;&lt;p&gt;PDF and accompanying Python code for a preliminary draft of the textbook &#34;Modeling Neural Circuits Made Simple&#34; by Robert Rosenbaum.&lt;/p&gt; &#xA;&lt;p&gt;The folder CodeFromBook contains Python notebooks that run simulations and generate figures from the book. The book contains references to each notebook.&lt;/p&gt; &#xA;&lt;p&gt;The Python notebooks can also be found in the following Drive folder where they can be run in Google Colab: &lt;a href=&#34;https://drive.google.com/drive/folders/1UFS60MnpSUHIGsnGyIbsmtJliZLd3b2c?usp=sharing&#34;&gt;https://drive.google.com/drive/folders/1UFS60MnpSUHIGsnGyIbsmtJliZLd3b2c?usp=sharing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The book is under contract to be published by MIT Press with an open-access online version available. Stay tuned!&lt;/p&gt; &#xA;&lt;p&gt;Please email any corrections or suggestions to &lt;a href=&#34;mailto:Robert.Rosenbaum@nd.edu&#34;&gt;Robert.Rosenbaum@nd.edu&lt;/a&gt; and include the term MNCBOOK in the subject line.&lt;/p&gt;</summary>
  </entry>
</feed>