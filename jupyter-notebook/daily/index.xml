<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-12T01:38:08Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hemansnation/Python-Roadmap-2022</title>
    <updated>2022-09-12T01:38:08Z</updated>
    <id>tag:github.com,2022-09-12:/hemansnation/Python-Roadmap-2022</id>
    <link href="https://github.com/hemansnation/Python-Roadmap-2022" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Learning Python Programming&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Python-Roadmap-2022&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/hemansnation/Python-Roadmap-2022/raw/main/images/pythoncoreheader.png&#34; alt=&#34;Python Core Header&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;The Roadmap is divided into 30 Sections&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Introduction and Basics of Python&lt;/li&gt; &#xA; &lt;li&gt;Operators&lt;/li&gt; &#xA; &lt;li&gt;Conditional Statements&lt;/li&gt; &#xA; &lt;li&gt;While Loops&lt;/li&gt; &#xA; &lt;li&gt;Lists&lt;/li&gt; &#xA; &lt;li&gt;Strings&lt;/li&gt; &#xA; &lt;li&gt;For Loop&lt;/li&gt; &#xA; &lt;li&gt;Functions&lt;/li&gt; &#xA; &lt;li&gt;Dictionary&lt;/li&gt; &#xA; &lt;li&gt;Tuples&lt;/li&gt; &#xA; &lt;li&gt;Set&lt;/li&gt; &#xA; &lt;li&gt;Object-Oriented Programming&lt;/li&gt; &#xA; &lt;li&gt;File Handling&lt;/li&gt; &#xA; &lt;li&gt;Exception Handling&lt;/li&gt; &#xA; &lt;li&gt;Regular Expression&lt;/li&gt; &#xA; &lt;li&gt;Modules and Packages&lt;/li&gt; &#xA; &lt;li&gt;Data Structures&lt;/li&gt; &#xA; &lt;li&gt;Higher-Order Functions&lt;/li&gt; &#xA; &lt;li&gt;Python Web Scrapping&lt;/li&gt; &#xA; &lt;li&gt;Virtual Environment&lt;/li&gt; &#xA; &lt;li&gt;Web Application Project&lt;/li&gt; &#xA; &lt;li&gt;Git and GitHub&lt;/li&gt; &#xA; &lt;li&gt;Deployment&lt;/li&gt; &#xA; &lt;li&gt;Python Package Manager&lt;/li&gt; &#xA; &lt;li&gt;Python with MongoDB Database&lt;/li&gt; &#xA; &lt;li&gt;Building API&lt;/li&gt; &#xA; &lt;li&gt;Statistics with NumPy&lt;/li&gt; &#xA; &lt;li&gt;Data Analysis with Pandas&lt;/li&gt; &#xA; &lt;li&gt;Data Visualization with Matplotlib&lt;/li&gt; &#xA; &lt;li&gt;What to do Now?&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;1 | Introduction and Basics&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installation&lt;/li&gt; &#xA; &lt;li&gt;Python Org, Python 3&lt;/li&gt; &#xA; &lt;li&gt;Variables&lt;/li&gt; &#xA; &lt;li&gt;Print function&lt;/li&gt; &#xA; &lt;li&gt;Input from user&lt;/li&gt; &#xA; &lt;li&gt;Data Types&lt;/li&gt; &#xA; &lt;li&gt;Type Conversion&lt;/li&gt; &#xA; &lt;li&gt;First Program&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2 | Operators&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Arithmetic Operators&lt;/li&gt; &#xA; &lt;li&gt;Relational Operators&lt;/li&gt; &#xA; &lt;li&gt;Bitwise Operators&lt;/li&gt; &#xA; &lt;li&gt;Logical Operators&lt;/li&gt; &#xA; &lt;li&gt;Assignment Operators&lt;/li&gt; &#xA; &lt;li&gt;Compound Operators&lt;/li&gt; &#xA; &lt;li&gt;Membership Operators&lt;/li&gt; &#xA; &lt;li&gt;Identity Operators&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;3 | Conditional Statements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If Else&lt;/li&gt; &#xA; &lt;li&gt;If&lt;/li&gt; &#xA; &lt;li&gt;Else&lt;/li&gt; &#xA; &lt;li&gt;El If (else if)&lt;/li&gt; &#xA; &lt;li&gt;If Else Ternary Expression&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;4 | While Loop&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;While loop logic building&lt;/li&gt; &#xA; &lt;li&gt;Series based Questions&lt;/li&gt; &#xA; &lt;li&gt;Break&lt;/li&gt; &#xA; &lt;li&gt;Continue&lt;/li&gt; &#xA; &lt;li&gt;Nested While Loops&lt;/li&gt; &#xA; &lt;li&gt;Pattern-Based Questions&lt;/li&gt; &#xA; &lt;li&gt;pass&lt;/li&gt; &#xA; &lt;li&gt;Loop else&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;5 | Lists&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;List Basics&lt;/li&gt; &#xA; &lt;li&gt;List Operations&lt;/li&gt; &#xA; &lt;li&gt;List Comprehensions / Slicing&lt;/li&gt; &#xA; &lt;li&gt;List Methods&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;6 | Strings&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;String Basics&lt;/li&gt; &#xA; &lt;li&gt;String Literals&lt;/li&gt; &#xA; &lt;li&gt;String Operations&lt;/li&gt; &#xA; &lt;li&gt;String Comprehensions / Slicing&lt;/li&gt; &#xA; &lt;li&gt;String Methods&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;7 | For Loops&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Range function&lt;/li&gt; &#xA; &lt;li&gt;For loop&lt;/li&gt; &#xA; &lt;li&gt;Nested For Loops&lt;/li&gt; &#xA; &lt;li&gt;Pattern-Based Questions&lt;/li&gt; &#xA; &lt;li&gt;Break&lt;/li&gt; &#xA; &lt;li&gt;Continue&lt;/li&gt; &#xA; &lt;li&gt;Pass&lt;/li&gt; &#xA; &lt;li&gt;Loop else&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;8 | Functions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Definition&lt;/li&gt; &#xA; &lt;li&gt;Call&lt;/li&gt; &#xA; &lt;li&gt;Function Arguments&lt;/li&gt; &#xA; &lt;li&gt;Default Arguments&lt;/li&gt; &#xA; &lt;li&gt;Docstrings&lt;/li&gt; &#xA; &lt;li&gt;Scope&lt;/li&gt; &#xA; &lt;li&gt;Special functions Lambda, Map, and Filter&lt;/li&gt; &#xA; &lt;li&gt;Recursion&lt;/li&gt; &#xA; &lt;li&gt;Functional Programming and Reference Functions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;9 | Dictionary&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dictionaries Basics&lt;/li&gt; &#xA; &lt;li&gt;Operations&lt;/li&gt; &#xA; &lt;li&gt;Comprehensions&lt;/li&gt; &#xA; &lt;li&gt;Dictionaries Methods&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;10 | Tuple&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tuples Basics&lt;/li&gt; &#xA; &lt;li&gt;Tuples Comprehensions / Slicing&lt;/li&gt; &#xA; &lt;li&gt;Tuple Functions&lt;/li&gt; &#xA; &lt;li&gt;Tuple Methods&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;11 | Set&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sets Basics&lt;/li&gt; &#xA; &lt;li&gt;Sets Operations&lt;/li&gt; &#xA; &lt;li&gt;Union&lt;/li&gt; &#xA; &lt;li&gt;Intersection&lt;/li&gt; &#xA; &lt;li&gt;Difference and Symmetric Difference&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;12 | Object-Oriented Programming&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Classes&lt;/li&gt; &#xA; &lt;li&gt;Objects&lt;/li&gt; &#xA; &lt;li&gt;Method Calls&lt;/li&gt; &#xA; &lt;li&gt;Inheritance and Its Types&lt;/li&gt; &#xA; &lt;li&gt;Overloading&lt;/li&gt; &#xA; &lt;li&gt;Overriding&lt;/li&gt; &#xA; &lt;li&gt;Data Hiding&lt;/li&gt; &#xA; &lt;li&gt;Operator Overloading&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;13 | File Handling&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;File Basics&lt;/li&gt; &#xA; &lt;li&gt;Opening Files&lt;/li&gt; &#xA; &lt;li&gt;Reading Files&lt;/li&gt; &#xA; &lt;li&gt;Writing Files&lt;/li&gt; &#xA; &lt;li&gt;Editing Files&lt;/li&gt; &#xA; &lt;li&gt;Working with different extensions of file&lt;/li&gt; &#xA; &lt;li&gt;With Statements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;14 | Exception Handling&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Common Exceptions&lt;/li&gt; &#xA; &lt;li&gt;Exception Handling&lt;/li&gt; &#xA; &lt;li&gt;Try&lt;/li&gt; &#xA; &lt;li&gt;Except&lt;/li&gt; &#xA; &lt;li&gt;Try except else&lt;/li&gt; &#xA; &lt;li&gt;Finally&lt;/li&gt; &#xA; &lt;li&gt;Raising exceptions&lt;/li&gt; &#xA; &lt;li&gt;Assertion&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;15 | Regular Expression&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Basic RE functions&lt;/li&gt; &#xA; &lt;li&gt;Patterns&lt;/li&gt; &#xA; &lt;li&gt;Meta Characters&lt;/li&gt; &#xA; &lt;li&gt;Character Classes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;16 | Modules &amp;amp; Packages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Different types of modules&lt;/li&gt; &#xA; &lt;li&gt;Inbuilt modules&lt;/li&gt; &#xA; &lt;li&gt;OS&lt;/li&gt; &#xA; &lt;li&gt;Sys&lt;/li&gt; &#xA; &lt;li&gt;Statistics&lt;/li&gt; &#xA; &lt;li&gt;Math&lt;/li&gt; &#xA; &lt;li&gt;String&lt;/li&gt; &#xA; &lt;li&gt;Random&lt;/li&gt; &#xA; &lt;li&gt;Create your own module&lt;/li&gt; &#xA; &lt;li&gt;Building Packages&lt;/li&gt; &#xA; &lt;li&gt;Build your own python module and deploy it on pip&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;17 | Data Structures&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Stack&lt;/li&gt; &#xA; &lt;li&gt;Queue&lt;/li&gt; &#xA; &lt;li&gt;Linked Lists&lt;/li&gt; &#xA; &lt;li&gt;Sorting&lt;/li&gt; &#xA; &lt;li&gt;Searching&lt;/li&gt; &#xA; &lt;li&gt;Linear Search&lt;/li&gt; &#xA; &lt;li&gt;Binary Search&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;18 | Higher-Order Functions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Function as a parameter&lt;/li&gt; &#xA; &lt;li&gt;Function as a return value&lt;/li&gt; &#xA; &lt;li&gt;Closures&lt;/li&gt; &#xA; &lt;li&gt;Decorators&lt;/li&gt; &#xA; &lt;li&gt;Map, Filter, Reduce Functions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;19 | Python Web Scrapping&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Understanding BeautifulSoup&lt;/li&gt; &#xA; &lt;li&gt;Extracting Data from websites&lt;/li&gt; &#xA; &lt;li&gt;Extracting Tables&lt;/li&gt; &#xA; &lt;li&gt;Data in JSON format&lt;/li&gt; &#xA; &lt;li&gt;20 | Virtual Environment&lt;/li&gt; &#xA; &lt;li&gt;Virtual Environment Setup&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;21 | Web Application Project&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Flask&lt;/li&gt; &#xA; &lt;li&gt;Project Structure&lt;/li&gt; &#xA; &lt;li&gt;Routes&lt;/li&gt; &#xA; &lt;li&gt;Templates&lt;/li&gt; &#xA; &lt;li&gt;Navigations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;22 | Git and GitHub&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Git - Version Control System&lt;/li&gt; &#xA; &lt;li&gt;GitHub Profile building&lt;/li&gt; &#xA; &lt;li&gt;Manage your work on GitHub&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;23 | Deployment&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Heroku Deployment&lt;/li&gt; &#xA; &lt;li&gt;Flask Integration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;24 | Python Package Manager&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;What is PIP?&lt;/li&gt; &#xA; &lt;li&gt;Installation&lt;/li&gt; &#xA; &lt;li&gt;PIP Freeze&lt;/li&gt; &#xA; &lt;li&gt;Creating Your Own Package&lt;/li&gt; &#xA; &lt;li&gt;Upload it on PIP&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;25 | Python with MongoDB Database&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SQL and NoSQL&lt;/li&gt; &#xA; &lt;li&gt;Connecting to MongoDB URI&lt;/li&gt; &#xA; &lt;li&gt;Flask application and MongoDB integration&lt;/li&gt; &#xA; &lt;li&gt;CRUD Operations&lt;/li&gt; &#xA; &lt;li&gt;Find&lt;/li&gt; &#xA; &lt;li&gt;Delete&lt;/li&gt; &#xA; &lt;li&gt;Drop&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;26 | Building API&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;API (Application Programming Interface)&lt;/li&gt; &#xA; &lt;li&gt;Building API&lt;/li&gt; &#xA; &lt;li&gt;Structure of an API&lt;/li&gt; &#xA; &lt;li&gt;PUT&lt;/li&gt; &#xA; &lt;li&gt;POST&lt;/li&gt; &#xA; &lt;li&gt;DELETE&lt;/li&gt; &#xA; &lt;li&gt;Using Postman&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;27 | Statistics with NumPy&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Statistics&lt;/li&gt; &#xA; &lt;li&gt;NumPy basics&lt;/li&gt; &#xA; &lt;li&gt;Working with Matrix&lt;/li&gt; &#xA; &lt;li&gt;Linear Algebra operations&lt;/li&gt; &#xA; &lt;li&gt;Descriptive Statistics&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;28 | Data Analysis with Pandas&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Data Analysis basics&lt;/li&gt; &#xA; &lt;li&gt;Dataframe operations&lt;/li&gt; &#xA; &lt;li&gt;Working with 2-dimensional data&lt;/li&gt; &#xA; &lt;li&gt;Data Cleaning&lt;/li&gt; &#xA; &lt;li&gt;Data Grouping&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;29 | Data Visualization with Matplotlib&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Matplotlib Basics&lt;/li&gt; &#xA; &lt;li&gt;Working with plots&lt;/li&gt; &#xA; &lt;li&gt;Plot&lt;/li&gt; &#xA; &lt;li&gt;Pie Chart&lt;/li&gt; &#xA; &lt;li&gt;Histogram&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;30 | What to do Now?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Discussions on how to process further with this knowledge.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Join the Python Core 2022 WhatsApp Group here:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chat.whatsapp.com/Fay4UDQo9ZcA2XpMK6biSF&#34;&gt;https://chat.whatsapp.com/Fay4UDQo9ZcA2XpMK6biSF&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Connect with me on these platforms:&lt;/h2&gt; &#xA;&lt;p&gt;GitHub: &lt;a href=&#34;https://github.com/hemansnation&#34;&gt;https://github.com/hemansnation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Twitter: &lt;a href=&#34;https://twitter.com/hemansnation&#34;&gt;https://twitter.com/hemansnation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;LinkedIn: &lt;a href=&#34;https://www.linkedin.com/in/hemansnation/&#34;&gt;https://www.linkedin.com/in/hemansnation/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Instagram: &lt;a href=&#34;https://www.instagram.com/masterdexter.ai/&#34;&gt;https://www.instagram.com/masterdexter.ai/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rinnakk/japanese-stable-diffusion</title>
    <updated>2022-09-12T01:38:08Z</updated>
    <id>tag:github.com,2022-09-12:/rinnakk/japanese-stable-diffusion</id>
    <link href="https://github.com/rinnakk/japanese-stable-diffusion" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Japanese Stable Diffusion is a Japanese specific latent text-to-image diffusion model capable of generating photo-realistic images given any text input.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Japanese Stable Diffusion&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/rinnakk/japanese-stable-diffusion/master/data/out.png&#34; alt=&#34;img&#34;&gt; &#xA;&lt;p&gt;Japanese Stable Diffusion is a Japanese-specific latent text-to-image diffusion model.&lt;/p&gt; &#xA;&lt;p&gt;This model was trained by using a powerful text-to-image model, &lt;a href=&#34;https://github.com/CompVis/stable-diffusion&#34;&gt;Stable Diffusion&lt;/a&gt;. Many thanks to &lt;a href=&#34;https://github.com/CompVis&#34;&gt;CompVis&lt;/a&gt;, &lt;a href=&#34;https://stability.ai/&#34;&gt;Stability AI&lt;/a&gt; and &lt;a href=&#34;https://laion.ai/&#34;&gt;LAION&lt;/a&gt; for public release.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Table of Contents&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rinnakk/japanese-stable-diffusion/master/#news&#34;&gt;News&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rinnakk/japanese-stable-diffusion/master/#model-details&#34;&gt;Model Details&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rinnakk/japanese-stable-diffusion/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rinnakk/japanese-stable-diffusion/master/#citation&#34;&gt;Citation&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rinnakk/japanese-stable-diffusion/master/#license&#34;&gt;License&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;h3&gt;September 9, 2022&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Release Japanese Stable Diffusion under the &lt;a href=&#34;https://raw.githubusercontent.com/rinnakk/japanese-stable-diffusion/master/LICENSE&#34;&gt;CreativeML Open RAIL M License&lt;/a&gt; in huggingface hub (&lt;a href=&#34;https://huggingface.co/rinna/japanese-stable-diffusion&#34;&gt;link&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Model Details&lt;/h2&gt; &#xA;&lt;h3&gt;Why Japanese Stable Diffusion?&lt;/h3&gt; &#xA;&lt;p&gt;Stable Diffusion is a very powerful text-to-image model, not only in terms of quality but also in terms of computational cost. Because Stable Diffusion was trained on English dataset, you need translate prompts or use directly if you are non-English users. Surprisingly, Stable Diffusion can sometimes generate nice images even by using non-English prompts. So, why do we need a language-specific Japanese Stable Diffusion?&lt;/p&gt; &#xA;&lt;p&gt;Because we want a model to understand our culture, identity, and unique expressions such as slang. For example, one of the famous Japanglish is &#34;salary man&#34; which means a businessman especially we often imagine he&#39;s wearing a suit. Stable Diffusion cannot understand such Japanese unique words correctly because Japanese is not their target.&lt;/p&gt; &#xA;&lt;p&gt;So, we made a language-specific version of Stable Diffusion! Japanese Stable Diffusion can achieve the following points compared to the original Stable Diffusion.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generate Japanese-style images&lt;/li&gt; &#xA; &lt;li&gt;Understand Japanglish&lt;/li&gt; &#xA; &lt;li&gt;Understand Japanese unique onomatope&lt;/li&gt; &#xA; &lt;li&gt;Understand Japanese proper noun&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/rinnakk/japanese-stable-diffusion/master/data/salary_man.png&#34; alt=&#34;img&#34; width=&#34;256&#34; height=&#34;256&#34;&gt; &#xA;&lt;p&gt;&lt;em&gt;caption: &#34;サラリーマン 油絵&#34;, that means &#34;salary man, oil painting&#34;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Training&lt;/h3&gt; &#xA;&lt;p&gt;Japanese Stable Diffusion was trained by using Stable Diffusion and has the same architecture and the same number of parameters. But, this is not a fully fine-tuned model on Japanese datasets because Stable Diffusion was trained on English dataset and the CLIP tokenizer is basically for English. To achieve make a Japanese-specific model based on Stable Diffusion, we had 2 stages inspired by &lt;a href=&#34;https://arxiv.org/abs/2205.12952&#34;&gt;PITI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Train a Japanese-specific text encoder with our Japanese tokenizer from scratch with the latent diffusion model fixed. This stage is expected to map Japanese captions to Stable Diffusion&#39;s latent space.&lt;/li&gt; &#xA; &lt;li&gt;Fine-tune the text encoder and the latent diffusion model jointly. This stage is expected to generate Japanese-style images more.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We used the following dataset for training the model:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Approximately 100 million images with Japanese captions, including the Japanese subset of &lt;a href=&#34;https://laion.ai/blog/laion-5b/&#34;&gt;LAION-5B&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/rinnakk/japanese-stable-diffusion/blob/master/scripts/txt2img.ipynb&#34; target=&#34;_parent&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Firstly, install our package as follows. This package is modified &lt;a href=&#34;https://github.com/huggingface/diffusers&#34;&gt;🤗&#39;s Diffusers library&lt;/a&gt; to run Japanese Stable Diffusion.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install git+https://github.com/rinnakk/japanese-stable-diffusion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You need to accept the model license before downloading or using the weights. So, you&#39;ll need to visit its card, read the license and tick the checkbox if you agree.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/rinna/japanese-stable-diffusion&#34;&gt;https://huggingface.co/rinna/japanese-stable-diffusion&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You have to be a registered user in 🤗 Hugging Face Hub, and you&#39;ll also need to use an access token for the code to work. For more information on access tokens, please refer to &lt;a href=&#34;https://huggingface.co/docs/hub/security-tokens&#34;&gt;this section of the documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;huggingface-cli login&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Running the pipeline with the k_lms scheduler:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from torch import autocast&#xA;from diffusers import LMSDiscreteScheduler&#xA;from japanese_stable_diffusion import JapaneseStableDiffusionPipeline&#xA;&#xA;model_id = &#34;rinna/japanese-stable-diffusion&#34;&#xA;device = &#34;cuda&#34;&#xA;# Use the K-LMS scheduler here instead&#xA;scheduler = LMSDiscreteScheduler(beta_start=0.00085, beta_end=0.012, beta_schedule=&#34;scaled_linear&#34;, num_train_timesteps=1000)&#xA;pipe = JapaneseStableDiffusionPipeline.from_pretrained(model_id, scheduler=scheduler, use_auth_token=True)&#xA;pipe = pipe.to(device)&#xA;&#xA;prompt = &#34;猫の肖像画 油絵&#34;&#xA;with autocast(&#34;cuda&#34;):&#xA;    image = pipe(prompt, guidance_scale=7.5)[&#34;sample&#34;][0]  &#xA;    &#xA;image.save(&#34;output.png&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: &lt;code&gt;JapaneseStableDiffusionPipeline&lt;/code&gt; is almost same as diffusers&#39; &lt;code&gt;StableDiffusionPipeline&lt;/code&gt; but added some lines to initialize our models properly.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Japanese Stable Diffusion pipelines also include&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a &lt;a href=&#34;https://github.com/huggingface/diffusers/raw/main/src/diffusers/pipelines/stable_diffusion/safety_checker.py&#34;&gt;Safety Checker Module&lt;/a&gt;, to reduce the probability of explicit outputs,&lt;/li&gt; &#xA; &lt;li&gt;an &lt;a href=&#34;https://github.com/ShieldMnt/invisible-watermark&#34;&gt;invisible watermarking&lt;/a&gt; of the outputs, to help viewers identify the images as machine-generated.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@InProceedings{Rombach_2022_CVPR,&#xA;      author    = {Rombach, Robin and Blattmann, Andreas and Lorenz, Dominik and Esser, Patrick and Ommer, Bj\&#34;orn},&#xA;      title     = {High-Resolution Image Synthesis With Latent Diffusion Models},&#xA;      booktitle = {Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)},&#xA;      month     = {June},&#xA;      year      = {2022},&#xA;      pages     = {10684-10695}&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{japanese_stable_diffusion,&#xA;    author    = {Shing, Makoto and Sawada, Kei},&#xA;    title     = {Japanese Stable Diffusion},&#xA;    howpublished = {\url{https://github.com/rinnakk/japanese-stable-diffusion}},&#xA;    month     = {September},&#xA;    year      = {2022},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rinnakk/japanese-stable-diffusion/master/LICENSE&#34;&gt;The CreativeML OpenRAIL M license&lt;/a&gt; is an &lt;a href=&#34;https://www.licenses.ai/blog/2022/8/18/naming-convention-of-responsible-ai-licenses&#34;&gt;Open RAIL M license&lt;/a&gt;, adapted from the work that &lt;a href=&#34;https://bigscience.huggingface.co/&#34;&gt;BigScience&lt;/a&gt; and &lt;a href=&#34;https://www.licenses.ai/&#34;&gt;the RAIL Initiative&lt;/a&gt; are jointly carrying in the area of responsible AI licensing. See also &lt;a href=&#34;https://bigscience.huggingface.co/blog/the-bigscience-rail-license&#34;&gt;the article about the BLOOM Open RAIL license&lt;/a&gt; on which our license is based.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tamojit-maiti/upgrad-teaching</title>
    <updated>2022-09-12T01:38:08Z</updated>
    <id>tag:github.com,2022-09-12:/tamojit-maiti/upgrad-teaching</id>
    <link href="https://github.com/tamojit-maiti/upgrad-teaching" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Teaching materials for upGrad&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Teaching Materials for UOA MSDS | upGrad&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains teaching materials, namely slides and accompanying Jupyter Notebooks corresponding to the weekend lecture sessions I deliver at &lt;a href=&#34;https://www.upgrad.com/data-science-ms-uoa/&#34;&gt; University of Arizona&#39;s Masters in Data Science Program &lt;/a&gt; in association with upGrad.&lt;/p&gt; &#xA;&lt;p&gt;Topics covered so far include&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Time Series Forecasting &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Introduction&lt;/li&gt; &#xA;   &lt;li&gt;Naive Models&lt;/li&gt; &#xA;   &lt;li&gt;ARIMA Models&lt;/li&gt; &#xA;   &lt;li&gt;Exponential Smoothing Models&lt;/li&gt; &#xA;   &lt;li&gt;Regression Models&lt;/li&gt; &#xA;   &lt;li&gt;Hands on Session&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Clustering &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;KMeans&lt;/li&gt; &#xA;   &lt;li&gt;KModes&lt;/li&gt; &#xA;   &lt;li&gt;Hierarchical&lt;/li&gt; &#xA;   &lt;li&gt;DBSCAN&lt;/li&gt; &#xA;   &lt;li&gt;Hands on Session&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Model and Feature Selection &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Complexity vs Interpretability&lt;/li&gt; &#xA;   &lt;li&gt;Bias Variance Tradeoff&lt;/li&gt; &#xA;   &lt;li&gt;Cross Validation&lt;/li&gt; &#xA;   &lt;li&gt;Feature Selection&lt;/li&gt; &#xA;   &lt;li&gt;Regularization&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;CTR Prediction Problem Overview &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/c/avazu-ctr-prediction&#34;&gt; Kaggle link to the problem statement &lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Outline of steps to follow to solve an inbalanced classification problem&lt;/li&gt; &#xA;   &lt;li&gt;Hands on Session&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Hiring Manager Session &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Interview Questions on the previous topics&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://jamboard.google.com/d/1nz6C7qqlb5Mlx2ZRuIqOg5x5KxStOWOdw0voLNFmsqo/edit?usp=sharing&#34;&gt; Google Jamboard Scribbles&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/tamojit-maiti/upgrad-teaching/raw/main/interview_questions/Hiring%20Manager%20Questions.pdf&#34;&gt; Interview Questions &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>