<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-27T01:37:36Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MuhammadMoinFaisal/LargeLanguageModelsProjects</title>
    <updated>2023-08-27T01:37:36Z</updated>
    <id>tag:github.com,2023-08-27:/MuhammadMoinFaisal/LargeLanguageModelsProjects</id>
    <link href="https://github.com/MuhammadMoinFaisal/LargeLanguageModelsProjects" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Large Language Model Projects&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>Nixtla/nixtla</title>
    <updated>2023-08-27T01:37:36Z</updated>
    <id>tag:github.com,2023-08-27:/Nixtla/nixtla</id>
    <link href="https://github.com/Nixtla/nixtla" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Python SDK for TimeGPT&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nixtla &amp;nbsp; &lt;a href=&#34;https://twitter.com/intent/tweet?text=Statistical%20Forecasting%20Algorithms%20by%20Nixtla%20&amp;amp;url=https://github.com/Nixtla/statsforecast&amp;amp;via=nixtlainc&amp;amp;hashtags=StatisticalModels,TimeSeries,Forecasting&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&#34; alt=&#34;Tweet&#34;&gt;&lt;/a&gt; &amp;nbsp;&lt;a href=&#34;https://join.slack.com/t/nixtlacommunity/shared_invite/zt-1pmhan9j5-F54XR20edHk0UtYAPcW4KQ&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-4A154B?&amp;amp;logo=slack&amp;amp;logoColor=white&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Nixtla/neuralforecast/main/nbs/imgs_indx/logo_mid.png&#34;&gt; &#xA; &lt;h1 align=&#34;center&#34;&gt;NixtlaTS&lt;/h1&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt;Forecast using TimeGPT&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/Nixtla/nixtla/actions/workflows/ci.yaml&#34;&gt;&lt;img src=&#34;https://github.com/Nixtla/nixtla/actions/workflows/ci.yaml/badge.svg?branch=main&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/nixtlats/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/nixtlats&#34; alt=&#34;Python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/nixtlats/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/nixtlats?color=blue&#34; alt=&#34;PyPi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Nixtla/nixtlats/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://nixtla.github.io/nixtla/&#34;&gt;&lt;img src=&#34;https://img.shields.io/website-up-down-green-red/http/nixtla.github.io/nixtla.svg?label=docs&#34; alt=&#34;docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pepy.tech/project/nixtlats&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/nixtlats&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;NixtlaTS&lt;/strong&gt; offers a collection of classes and methods to interact with the API of TimeGPT.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;üï∞Ô∏è TimeGPT: Revolutionizing Time-Series Analysis&lt;/h1&gt; &#xA;&lt;p&gt;Developed by Nixtla, TimeGPT is a cutting-edge generative pre-trained transformer model dedicated to prediction tasks. üöÄ By leveraging the most extensive dataset ever ‚Äì financial, weather, energy, and sales data ‚Äì TimeGPT brings unparalleled time-series analysis right to your terminal! üë©‚Äçüíªüë®‚Äçüíª&lt;/p&gt; &#xA;&lt;p&gt;In seconds, TimeGPT can discern complex patterns and predict future data points, transforming the landscape of data science and predictive analytics.&lt;/p&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Fine-Tuning: For Precision Prediction&lt;/h2&gt; &#xA;&lt;p&gt;In addition to its core capabilities, TimeGPT supports fine-tuning, enhancing its specialization for specific prediction tasks. üéØ This feature is like training a machine learning model on a targeted data subset to improve its task-specific performance, making TimeGPT an even more versatile tool for your predictive needs.&lt;/p&gt; &#xA;&lt;h2&gt;üîÑ &lt;code&gt;NixtlaTS&lt;/code&gt;: Your Gateway to TimeGPT&lt;/h2&gt; &#xA;&lt;p&gt;With &lt;code&gt;NixtlaTS&lt;/code&gt;, you can easily interact with TimeGPT through simple API calls, making the power of TimeGPT readily accessible in your projects.&lt;/p&gt; &#xA;&lt;h2&gt;üíª Installation&lt;/h2&gt; &#xA;&lt;p&gt;Get &lt;code&gt;NixtlaTS&lt;/code&gt; up and running with a simple pip command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pip install nixtlats&amp;gt;=0.1.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üéà Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Get started with TimeGPT now:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df = pd.read_csv(&#39;https://raw.githubusercontent.com/Nixtla/transfer-learning-time-series/main/datasets/electricity-short.csv&#39;)&#xA;&#xA;from nixtlats import TimeGPT&#xA;timegpt = TimeGPT(token=os.environ[&#39;TIMEGPT_TOKEN&#39;])&#xA;fcst_df = timegpt.forecast(df, h=24, level=[80, 90])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Nixtla/nixtla/main/nbs/img/forecast_readme.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mljar/automl-app</title>
    <updated>2023-08-27T01:37:36Z</updated>
    <id>tag:github.com,2023-08-27:/mljar/automl-app</id>
    <link href="https://github.com/mljar/automl-app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AutoML Web App created from Jupyter Notebook&lt;/p&gt;&lt;hr&gt;&lt;p&gt; &lt;img src=&#34;https://github.com/mljar/automl-app/raw/main/media/what_is_supervised.png&#34; width=&#34;70%&#34; alt=&#34;Supervised learning&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;AutoML Web App ü§ñ&lt;/h1&gt; &#xA;&lt;p&gt;This is a Web Application designed to train Machine Learning pipelines using MLJAR AutoML, specifically tailored for tabular data. All the generated models are compressed into an archive format, allowing their reuse to compute predictions in batch mode.&lt;/p&gt; &#xA;&lt;p&gt;This repo consists of three notebooks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mljar/automl-app/raw/main/train-automl.ipynb&#34;&gt;notebook&lt;/a&gt; for training AutoML with simple UI,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mljar/automl-app/raw/main/train-automl-advanced.ipynb&#34;&gt;advanced notebook&lt;/a&gt; for training AutoML with more advanced UI (you can select feature engineering methods, algorithms, validation strategy, and evaluation metric),&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mljar/automl-app/raw/main/automl-predict.ipynb&#34;&gt;notebook&lt;/a&gt; for computing predictions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The Web App harnesses the capabilities of &lt;a href=&#34;https://github.com/mljar/mercury&#34;&gt;mljar-supervised&lt;/a&gt; to construct the Machine Learning pipeline with AutoML. This involves the automation of several key tasks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;data preprocessing,&lt;/li&gt; &#xA; &lt;li&gt;features engineering,&lt;/li&gt; &#xA; &lt;li&gt;algorithm selection &amp;amp; tuning,&lt;/li&gt; &#xA; &lt;li&gt;ML models explanations,&lt;/li&gt; &#xA; &lt;li&gt;automatic documentation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt; &lt;img src=&#34;https://github.com/mljar/automl-app/raw/main/media/pipeline_AutoML.png&#34; width=&#34;100%&#34; alt=&#34;Supervised learning&#34;&gt; &lt;/p&gt; The Web App is created directly from Jupyter Notebooks with [Mercury](https://github.com/mljar/mercury) framework. &#xA;&lt;h3&gt;Demo&lt;/h3&gt; &#xA;&lt;kbd&gt; &lt;img src=&#34;https://github.com/mljar/automl-app/raw/main/media/demo.gif&#34; alt=&#34;AutoML Web App demo&#34;&gt; &lt;/kbd&gt; &#xA;&lt;h3&gt;Online demo&lt;/h3&gt; &#xA;&lt;p&gt;The Web App is available online at &lt;a href=&#34;https://automl.runmercury.com&#34;&gt;automl.runmercury.com&lt;/a&gt;. Input data upload is limited to 1MB.&lt;/p&gt; &#xA;&lt;kbd&gt; &lt;img src=&#34;https://github.com/mljar/automl-app/raw/main/media/web-app-online.png&#34; alt=&#34;AutoML Web App online&#34;&gt; &lt;/kbd&gt; &#xA;&lt;h3&gt;Run locally üñ•Ô∏è&lt;/h3&gt; &#xA;&lt;p&gt;Please run the below commands to run Web App locally. It requires Python &amp;gt;= 3.8.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;mercury run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Training Notebook üìì&lt;/h3&gt; &#xA;&lt;p&gt;If you would like to increase the input file limit, please change the cell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;data_file = mr.File(label=&#34;Upload CSV with training data&#34;, max_file_size=&#34;1MB&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and set your &lt;code&gt;max_file_size&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please change the following cell to increase training time:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;time_limit = mr.Select(label=&#34;Time limit (seconds)&#34;, value=&#34;60&#34;, choices=[&#34;60&#34;, &#34;120&#34;, &#34;240&#34;, &#34;300&#34;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Times are in seconds. Please just increase the values.&lt;/p&gt; &#xA;&lt;kbd&gt; &lt;img src=&#34;https://github.com/mljar/automl-app/raw/main/media/notebook.gif&#34; alt=&#34;AutoML training notebook&#34;&gt; &lt;/kbd&gt; &#xA;&lt;h3&gt;Training models in Web App&lt;/h3&gt; &#xA;&lt;p&gt;Please upload a CSV file with training data, select input features &amp;amp; target, and click &lt;code&gt;Start training&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;kbd&gt; &lt;img src=&#34;https://github.com/mljar/automl-app/raw/main/media/web-app.gif&#34; alt=&#34;AutoML training in Web App&#34;&gt; &lt;/kbd&gt; &#xA;&lt;p&gt;All models created during the training are available for download as a zip file:&lt;/p&gt; &#xA;&lt;kbd&gt; &lt;img src=&#34;https://github.com/mljar/automl-app/raw/main/media/web-app-download.gif&#34; alt=&#34;AutoML models available for download&#34;&gt; &lt;/kbd&gt; &#xA;&lt;h3&gt;Advanced Training Notebook üí™&lt;/h3&gt; &#xA;&lt;p&gt;Please use advanced mode if you would like to tweak AutoML parameters:&lt;/p&gt; &#xA;&lt;kbd&gt; &lt;img src=&#34;https://github.com/mljar/automl-app/raw/main/media/web-app-advanced.gif&#34; alt=&#34;Advanced AutoML training notebook&#34;&gt; &lt;/kbd&gt; &#xA;&lt;h3&gt;Good luck with ML training!&lt;/h3&gt;</summary>
  </entry>
</feed>