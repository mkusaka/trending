<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-22T01:33:07Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lit26/finvizfinance</title>
    <updated>2025-07-22T01:33:07Z</updated>
    <id>tag:github.com,2025-07-22:/lit26/finvizfinance</id>
    <link href="https://github.com/lit26/finvizfinance" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Finviz analysis python library.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/finvizfinance&#34; alt=&#34;PyPI - Python Version&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/finvizfinance&#34; alt=&#34;PyPI&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/wheel/finvizfinance&#34; alt=&#34;PyPI - Wheel&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/l/finvizfinance?color=gre&#34; alt=&#34;PyPI - License&#34;&gt; &lt;a href=&#34;https://coveralls.io/github/lit26/finvizfinance&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/lit26/finvizfinance/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/readthedocs/finvizfinance&#34; alt=&#34;Read the Docs&#34;&gt; &lt;a href=&#34;https://pepy.tech/project/finvizfinance&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/finvizfinance&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/lit26/finvizfinance/overview/master&#34;&gt;&lt;img src=&#34;https://www.codefactor.io/repository/github/lit26/finvizfinance/badge/master&#34; alt=&#34;CodeFactor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.me/TIANNINGL/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate%20%24-PayPal-brightgreen.svg?sanitize=true&#34; alt=&#34;Donate PayPal&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34; alt=&#34;Code style: black&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;finvizfinance&lt;/h1&gt; &#xA;&lt;p&gt;finvizfinance is a package which collects financial information from FinViz website. The package provides the information of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Stock charts, fundamental &amp;amp; technical information, insider information and stock news&lt;/li&gt; &#xA; &lt;li&gt;Forex charts and performance&lt;/li&gt; &#xA; &lt;li&gt;Crypto charts and performance&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Screener and Group provide dataframes for comparing stocks according to different filters and trading signals.&lt;/p&gt; &#xA;&lt;p&gt;Docs: &lt;a href=&#34;https://finvizfinance.readthedocs.io/en/latest/&#34;&gt;https://finvizfinance.readthedocs.io/en/latest/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Downloads&lt;/h3&gt; &#xA;&lt;p&gt;To download the latest version from GitHub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/lit26/finvizfinance.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or install from PyPi:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pip install finvizfinance&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Quote&lt;/h3&gt; &#xA;&lt;p&gt;Getting information (fundament, description, outer rating, stock news, inside trader) of an individual stock.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from finvizfinance.quote import finvizfinance&#xA;&#xA;stock = finvizfinance(&#39;tsla&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Chart&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;stock.ticker_charts()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Fundament&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;stock_fundament = stock.ticker_fundament()&#xA;&#xA;# result&#xA;# stock_fundament = {&#39;Company&#39;: &#39;Tesla, Inc.&#39;, &#39;Sector&#39;: &#39;Consumer Cyclical&#39;,&#xA;# &#39;Industry&#39;: &#39;Auto Manufacturers&#39;, &#39;Country&#39;: &#39;USA&#39;, &#39;Index&#39;: &#39;-&#39;, &#39;P/E&#39;: &#39;849.57&#39;,&#xA;# &#39;EPS (ttm)&#39;: &#39;1.94&#39;, &#39;Insider Own&#39;: &#39;0.10%&#39;, &#39;Shs Outstand&#39;: &#39;186.00M&#39;,&#xA;# &#39;Perf Week&#39;: &#39;13.63%&#39;, &#39;Market Cap&#39;: &#39;302.10B&#39;, &#39;Forward P/E&#39;: &#39;106.17&#39;,&#xA;# ...}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Description&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;stock_description = stock.ticker_description()&#xA;&#xA;# stock_description&#xA;# stock_description = &#39;Tesla, Inc. designs, develops, manufactures, ...&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Outer Ratings&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;outer_ratings_df = stock.ticker_outer_ratings()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lit26/finvizfinance/master/asset/outer_rating.png&#34; alt=&#34;Outer Ratings example&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Stock News&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;news_df = stock.ticker_news()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lit26/finvizfinance/master/asset/stock_news.png&#34; alt=&#34;stock news example&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Inside Trader&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;inside_trader_df = stock.ticker_inside_trader()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lit26/finvizfinance/master/asset/insider_trader.png&#34; alt=&#34;insider trader example&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;News&lt;/h3&gt; &#xA;&lt;p&gt;Getting recent financial news from finviz.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from finvizfinance.news import News&#xA;&#xA;fnews = News()&#xA;all_news = fnews.get_news()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finviz News include &#39;news&#39; and &#39;blogs&#39;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;all_news[&#39;news&#39;].head()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lit26/finvizfinance/master/asset/news_news.png&#34; alt=&#34;news example&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;all_news[&#39;blogs&#39;].head()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lit26/finvizfinance/master/asset/news_blogs.png&#34; alt=&#34;news example&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Insider&lt;/h3&gt; &#xA;&lt;p&gt;Getting insider trading information.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from finvizfinance.insider import Insider&#xA;&#xA;finsider = Insider(option=&#39;top owner trade&#39;)&#xA;# option: latest, top week, top owner trade&#xA;# default: latest&#xA;&#xA;insider_trader = finsider.get_insider()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lit26/finvizfinance/master/asset/insider.png&#34; alt=&#34;insider example&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Screener (Overview, Valuation, Financial, Ownership, Performance, Technical)&lt;/h3&gt; &#xA;&lt;p&gt;Getting multiple tickers&#39; information according to the filters.&lt;/p&gt; &#xA;&lt;h4&gt;Example: Overview&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from finvizfinance.screener.overview import Overview&#xA;&#xA;foverview = Overview()&#xA;filters_dict = {&#39;Index&#39;:&#39;S&amp;amp;P 500&#39;,&#39;Sector&#39;:&#39;Basic Materials&#39;}&#xA;foverview.set_filter(filters_dict=filters_dict)&#xA;df = foverview.screener_view()&#xA;df.head()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lit26/finvizfinance/master/asset/screen_overview.png&#34; alt=&#34;insider example&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Screener (Ticker)&lt;/h3&gt; &#xA;&lt;p&gt;Getting list of tickers according to the filters.&lt;/p&gt; &#xA;&lt;h3&gt;Misc (Proxy)&lt;/h3&gt; &#xA;&lt;p&gt;Optional proxy can be used for getting information from FinViz website. Accessible from finvizfinance it&#39;s an extension of requests library proxies&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from finvizfinance.util import set_proxy&#xA;&#xA;proxies={&#39;http&#39;: &#39;http://127.0.0.1:8080&#39;}&#xA;set_proxy(proxies)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Credit&lt;/h3&gt; &#xA;&lt;p&gt;Developed by Tianning Li. Feel free to give comments or suggestions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AllenDowney/ThinkPython</title>
    <updated>2025-07-22T01:33:07Z</updated>
    <id>tag:github.com,2025-07-22:/AllenDowney/ThinkPython</id>
    <link href="https://github.com/AllenDowney/ThinkPython" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Jupyter notebooks and other resources for Think Python by Allen Downey, published by O&#39;Reilly Media.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Think Python, 3rd edition&lt;/h1&gt; &#xA;&lt;p&gt;Jupyter notebooks and other material for the 3rd edition of &lt;em&gt;Think Python: How to Think Like a Computer Scientist&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;by Allen B. Downey&lt;/p&gt; &#xA;&lt;p&gt;You can order print and electronic versions of &lt;em&gt;Think Python 3e&lt;/em&gt; from &lt;a href=&#34;https://bookshop.org/a/98697/9781098155438&#34;&gt;Bookshop.org&lt;/a&gt; and &lt;a href=&#34;https://www.amazon.com/_/dp/1098155432?smid=ATVPDKIKX0DER&amp;amp;_encoding=UTF8&amp;amp;tag=oreilly20-20&amp;amp;_encoding=UTF8&amp;amp;tag=greenteapre01-20&amp;amp;linkCode=ur2&amp;amp;linkId=e2a529f94920295d27ec8a06e757dc7c&amp;amp;camp=1789&amp;amp;creative=9325&#34;&gt;Amazon&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The home page for the book is at &lt;a href=&#34;http://thinkpython.com&#34;&gt;Green Tea Press&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>