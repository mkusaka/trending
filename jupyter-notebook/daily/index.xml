<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-24T02:19:24Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tirthajyoti/Machine-Learning-with-Python</title>
    <updated>2023-11-24T02:19:24Z</updated>
    <id>tag:github.com,2023-11-24:/tirthajyoti/Machine-Learning-with-Python</id>
    <link href="https://github.com/tirthajyoti/Machine-Learning-with-Python" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Practice and tutorial-style notebooks covering wide variety of machine learning techniques&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/BSD-2-Clause&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-BSD%202--Clause-orange.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/tirthajyoti/Machine-Learning-with-Python.svg?sanitize=true&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/tirthajyoti/Machine-Learning-with-Python.svg?sanitize=true&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Python Machine Learning Jupyter Notebooks (&lt;a href=&#34;https://machine-learning-with-python.readthedocs.io/en/latest/&#34;&gt;ML website&lt;/a&gt;)&lt;/h1&gt; &#xA;&lt;h3&gt;Dr. Tirthajyoti Sarkar, Fremont, California (&lt;a href=&#34;https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7&#34;&gt;Please feel free to connect on LinkedIn here&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tirthajyoti/Machine-Learning-with-Python/master/Images/ML-DS-cycle-1.png&#34; alt=&#34;ml-ds&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Also check out these super-useful Repos that I curated&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Papers-Literature-ML-DL-RL-AI&#34;&gt;Highly cited and useful papers related to machine learning, deep learning, AI, game theory, reinforcement learning&lt;/a&gt;&lt;/h3&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Data-science-best-resources&#34;&gt;Carefully curated resource links for data science in one place&lt;/a&gt;&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Python 3.6+&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;NumPy (&lt;code&gt;pip install numpy&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pandas (&lt;code&gt;pip install pandas&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scikit-learn (&lt;code&gt;pip install scikit-learn&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SciPy (&lt;code&gt;pip install scipy&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Statsmodels (&lt;code&gt;pip install statsmodels&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MatplotLib (&lt;code&gt;pip install matplotlib&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Seaborn (&lt;code&gt;pip install seaborn&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sympy (&lt;code&gt;pip install sympy&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Flask (&lt;code&gt;pip install flask&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;WTForms (&lt;code&gt;pip install wtforms&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tensorflow (&lt;code&gt;pip install tensorflow&amp;gt;=1.15&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Keras (&lt;code&gt;pip install keras&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;pdpipe (&lt;code&gt;pip install pdpipe&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;You can start with this article that I wrote in Heartbeat magazine (on Medium platform):&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://heartbeat.fritz.ai/some-essential-hacks-and-tricks-for-machine-learning-with-python-5478bc6593f2&#34;&gt;&#34;Some Essential Hacks and Tricks for Machine Learning with Python&#34;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;img src=&#34;https://cookieegroup.com/wp-content/uploads/2018/10/2-1.png&#34; width=&#34;450&#34; height=&#34;300&#34;&gt; &#xA;&lt;h2&gt;Essential tutorial-type notebooks on Pandas and Numpy&lt;/h2&gt; &#xA;&lt;p&gt;Jupyter notebooks covering a wide range of functions and operations on the topics of NumPy, Pandans, Seaborn, Matplotlib etc.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Pandas%20and%20Numpy/Numpy_operations.ipynb&#34;&gt;Detailed Numpy operations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Pandas%20and%20Numpy/Pandas_Operations.ipynb&#34;&gt;Detailed Pandas operations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Pandas%20and%20Numpy/Numpy_Pandas_Quick.ipynb&#34;&gt;Numpy and Pandas quick basics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Pandas%20and%20Numpy/Matplotlib_Seaborn_basics.ipynb&#34;&gt;Matplotlib and Seaborn quick basics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Pandas%20and%20Numpy/Advanced%20Pandas%20Operations.ipynb&#34;&gt;Advanced Pandas operations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Pandas%20and%20Numpy/Read_data_various_sources/How%20to%20read%20various%20sources%20in%20a%20DataFrame.ipynb&#34;&gt;How to read various data sources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Pandas%20and%20Numpy/Read_data_various_sources/PDF%20table%20reading%20and%20processing%20demo.ipynb&#34;&gt;PDF reading and table processing demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Pandas%20and%20Numpy/How%20fast%20are%20NumPy%20ops.ipynb&#34;&gt;How fast are Numpy operations compared to pure Python code?&lt;/a&gt; (Read my &lt;a href=&#34;https://towardsdatascience.com/why-you-should-forget-for-loop-for-data-science-code-and-embrace-vectorization-696632622d5f&#34;&gt;article&lt;/a&gt; on Medium related to this topic)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Pandas%20and%20Numpy/Numpy_Reading.ipynb&#34;&gt;Fast reading from Numpy using .npy file format&lt;/a&gt; (Read my &lt;a href=&#34;https://towardsdatascience.com/why-you-should-start-using-npy-file-more-often-df2a13cc0161&#34;&gt;article&lt;/a&gt; on Medium on this topic)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tutorial-type notebooks covering regression, classification, clustering, dimensionality reduction, and some basic neural network algorithms&lt;/h2&gt; &#xA;&lt;h3&gt;Regression&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple linear regression with t-statistic generation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://slideplayer.com/slide/6053182/20/images/10/Simple+Linear+Regression+Model.jpg&#34; width=&#34;400&#34; height=&#34;300&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Regression/Linear_Regression_Methods.ipynb&#34;&gt;Multiple ways to perform linear regression in Python and their speed comparison&lt;/a&gt; (&lt;a href=&#34;https://medium.freecodecamp.org/data-science-with-python-8-ways-to-do-linear-regression-and-measure-their-speed-b5577d75f8b&#34;&gt;check the article I wrote on freeCodeCamp&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Regression/Multi-variate%20LASSO%20regression%20with%20CV.ipynb&#34;&gt;Multi-variate regression with regularization&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/L1_and_L2_balls.svg/300px-L1_and_L2_balls.svg.png&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Polynomial regression using &lt;em&gt;&lt;strong&gt;scikit-learn pipeline feature&lt;/strong&gt;&lt;/em&gt; (&lt;a href=&#34;https://towardsdatascience.com/machine-learning-with-python-easy-and-robust-method-to-fit-nonlinear-data-19e8a1ddbd49&#34;&gt;check the article I wrote on &lt;em&gt;Towards Data Science&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Regression/Random_Forest_Regression.ipynb&#34;&gt;Decision trees and Random Forest regression&lt;/a&gt; (showing how the Random Forest works as a robust/regularized meta-estimator rejecting overfitting)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Regression/Regression_Diagnostics.ipynb&#34;&gt;Detailed visual analytics and goodness-of-fit diagnostic tests for a linear regression problem&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Regression/Robust%20Linear%20Regression.ipynb&#34;&gt;Robust linear regression using &lt;code&gt;HuberRegressor&lt;/code&gt; from Scikit-learn&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Classification&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Logistic regression/classification (&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Classification/Logistic_Regression_Classification.ipynb&#34;&gt;Here is the Notebook&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://qph.fs.quoracdn.net/main-qimg-914b29e777e78b44b67246b66a4d6d71&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;k&lt;/em&gt;-nearest neighbor classification (&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Classification/KNN_Classification.ipynb&#34;&gt;Here is the Notebook&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Decision trees and Random Forest Classification (&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Classification/DecisionTrees_RandomForest_Classification.ipynb&#34;&gt;Here is the Notebook&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support vector machine classification (&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Classification/Support_Vector_Machine_Classification.ipynb&#34;&gt;Here is the Notebook&lt;/a&gt;) (&lt;strong&gt;&lt;a href=&#34;https://towardsdatascience.com/how-the-good-old-sorting-algorithm-helps-a-great-machine-learning-technique-9e744020254b&#34;&gt;check the article I wrote in Towards Data Science on SVM and sorting algorithm&lt;/a&gt;)&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://docs.opencv.org/2.4/_images/optimal-hyperplane.png&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Naive Bayes classification (&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Classification/Naive_Bayes_Classification.ipynb&#34;&gt;Here is the Notebook&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Clustering&lt;/h3&gt; &#xA;&lt;img src=&#34;https://i.ytimg.com/vi/IJt62uaZR-M/maxresdefault.jpg&#34; width=&#34;450&#34; height=&#34;300&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;K&lt;/em&gt;-means clustering (&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Clustering-Dimensionality-Reduction/K_Means_Clustering_Practice.ipynb&#34;&gt;Here is the Notebook&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Affinity propagation (showing its time complexity and the effect of damping factor) (&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Clustering-Dimensionality-Reduction/Affinity_Propagation.ipynb&#34;&gt;Here is the Notebook&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mean-shift technique (showing its time complexity and the effect of noise on cluster discovery) (&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Clustering-Dimensionality-Reduction/Mean_Shift_Clustering.ipynb&#34;&gt;Here is the Notebook&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DBSCAN (showing how it can generically detect areas of high density irrespective of cluster shapes, which the k-means fails to do) (&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Clustering-Dimensionality-Reduction/DBScan_Clustering.ipynb&#34;&gt;Here is the Notebook&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Hierarchical clustering with Dendograms showing how to choose optimal number of clusters (&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Clustering-Dimensionality-Reduction/Hierarchical_Clustering.ipynb&#34;&gt;Here is the Notebook&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://www.researchgate.net/profile/Carsten_Walther/publication/273456906/figure/fig3/AS:294866065084419@1447312956501/Example-of-hierarchical-clustering-clusters-are-consecutively-merged-with-the-most.png&#34; width=&#34;700&#34; height=&#34;400&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Dimensionality reduction&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Principal component analysis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://i.ytimg.com/vi/QP43Iy-QQWY/maxresdefault.jpg&#34; width=&#34;450&#34; height=&#34;300&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Deep Learning/Neural Network&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Function%20Approximation%20by%20Neural%20Network/Polynomial%20regression%20-%20linear%20and%20neural%20network.ipynb&#34;&gt;Demo notebook to illustrate the superiority of deep neural network for complex nonlinear function approximation task&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Step-by-step building of 1-hidden-layer and 2-hidden-layer dense network using basic TensorFlow methods&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Random data generation using symbolic expressions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;How to use &lt;a href=&#34;https://www.sympy.org/en/index.html&#34;&gt;Sympy package&lt;/a&gt; to generate random datasets using symbolic mathematical expressions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Here is my article on Medium on this topic: &lt;a href=&#34;https://towardsdatascience.com/random-regression-and-classification-problem-generation-with-symbolic-expression-a4e190e37b8d&#34;&gt;Random regression and classification problem generation with symbolic expression&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Synthetic data generation techniques&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/tree/master/Synthetic_data_generation&#34;&gt;Notebooks here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Simple deployment examples (serving ML models on web API)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/tree/master/Deployment/Linear_regression&#34;&gt;Serving a linear regression model through a simple HTTP server interface&lt;/a&gt;. User needs to request predictions by executing a Python script. Uses &lt;code&gt;Flask&lt;/code&gt; and &lt;code&gt;Gunicorn&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/tree/master/Deployment/rnn_app&#34;&gt;Serving a recurrent neural network (RNN) through a HTTP webpage&lt;/a&gt;, complete with a web form, where users can input parameters and click a button to generate text based on the pre-trained RNN model. Uses &lt;code&gt;Flask&lt;/code&gt;, &lt;code&gt;Jinja&lt;/code&gt;, &lt;code&gt;Keras&lt;/code&gt;/&lt;code&gt;TensorFlow&lt;/code&gt;, &lt;code&gt;WTForms&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Object-oriented programming with machine learning&lt;/h3&gt; &#xA;&lt;p&gt;Implementing some of the core OOP principles in a machine learning context by &lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/OOP_in_ML/Class_MyLinearRegression.ipynb&#34;&gt;building your own Scikit-learn-like estimator, and making it better&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See my articles on Medium on this topic.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://towardsdatascience.com/object-oriented-programming-for-data-scientists-build-your-ml-estimator-7da416751f64&#34;&gt;Object-oriented programming for data scientists: Build your ML estimator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://towardsdatascience.com/how-a-simple-mix-of-object-oriented-programming-can-sharpen-your-deep-learning-prototype-19893bd969bd&#34;&gt;How a simple mix of object-oriented programming can sharpen your deep learning prototype&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Unit testing ML code with Pytest&lt;/h3&gt; &#xA;&lt;p&gt;Check the files and detailed instructions in the &lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/tree/master/Pytest&#34;&gt;Pytest&lt;/a&gt; directory to understand how one should write unit testing code/module for machine learning models&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Memory and timing profiling&lt;/h3&gt; &#xA;&lt;p&gt;Profiling data science code and ML models for memory footprint and computing time is a critical but often overlooed area. Here are a couple of Notebooks showing the ideas,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/tree/master/Memory-profiling/Scalene&#34;&gt;Memory profling using Scalene&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tirthajyoti/Machine-Learning-with-Python/raw/master/Time-profiling/cProfile.ipynb&#34;&gt;Time-profiling data science code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>