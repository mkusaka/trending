<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-05T01:39:50Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>anupamkliv/FedERA</title>
    <updated>2023-06-05T01:39:50Z</updated>
    <id>tag:github.com,2023-06-05:/anupamkliv/FedERA</id>
    <link href="https://github.com/anupamkliv/FedERA" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Federated Learning Framework&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://federa.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/federa/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/anupamkliv/FedERA/main/media/license.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/anupam-kliv/fl_framework_initial/actions/workflows/ubuntu.yml&#34;&gt;&lt;img src=&#34;https://github.com/anupam-kliv/fl_framework_initial/actions/workflows/ubuntu.yml/badge.svg?sanitize=true&#34; alt=&#34;Ubuntu CI status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/anupam-kliv/fl_framework_initial/actions/workflows/windows.yml&#34;&gt;&lt;img src=&#34;https://github.com/anupam-kliv/fl_framework_initial/actions/workflows/windows.yml/badge.svg?sanitize=true&#34; alt=&#34;Windows CI status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/7362&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/7362/badge&#34; alt=&#34;OpenSSF Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;FedERA&lt;/code&gt; is a highly dynamic and customizable framework that can accommodate many use cases with flexibility by implementing several functionalities over different federated learning algorithms, and essentially creating a plug-and-play architecture to accommodate different use cases.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Devices&lt;/h2&gt; &#xA;&lt;p&gt;FedERA has been extensively tested on and works with the following devices:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Intel CPUs&lt;/li&gt; &#xA; &lt;li&gt;Nvidia GPUs&lt;/li&gt; &#xA; &lt;li&gt;Nvidia Jetson&lt;/li&gt; &#xA; &lt;li&gt;Raspberry Pi&lt;/li&gt; &#xA; &lt;li&gt;Intel NUC&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With &lt;code&gt;FedERA&lt;/code&gt;, it is possible to operate the server and clients on &lt;strong&gt;separate devices&lt;/strong&gt; or on a &lt;strong&gt;single device&lt;/strong&gt; through various means, such as utilizing different terminals or implementing multiprocessing.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the latest version from source code:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/anupamkliv/FedERA.git&#xA;$ cd FedERA&#xA;$ pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- - Install the stable version (old version) via pip:&#xA;```&#xA;# assign the version federa==1.1.2&#xA;$ pip install federa&#xA;``` --&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Website documentation has been made availbale for &lt;code&gt;FedERA&lt;/code&gt;. Please visit &lt;a href=&#34;https://federa.readthedocs.io/en/latest/index.html&#34;&gt;FedERA Documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://federa.readthedocs.io/en/latest/overview.html&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://federa.readthedocs.io/en/latest/installation.html&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://federa.readthedocs.io/en/latest/tutorials.html&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://federa.readthedocs.io/en/latest/contribution.html&#34;&gt;Contribution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://federa.readthedocs.io/en/latest/api.html&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Starting server&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -m federa.server.start_server \&#xA; --algorithm fedavg \&#xA; --clients 1 \&#xA; --rounds 10 \&#xA; --epochs 10 \&#xA; --batch_size 10 \&#xA; --lr 0.01 \&#xA; --dataset mnist \&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Starting client&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -m federa.client.start_client \&#xA; --ip localhost:8214 \&#xA; --device cpu \&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using Docker&lt;/h2&gt; &#xA;&lt;p&gt;Create a docker image&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build -t federa .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the docker image&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run federa&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Arguments to the clients and server&lt;/h2&gt; &#xA;&lt;h3&gt;Server&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Argument&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;algorithm&lt;/td&gt; &#xA;   &lt;td&gt;specifies the aggregation algorithm&lt;/td&gt; &#xA;   &lt;td&gt;fedavg&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;clients&lt;/td&gt; &#xA;   &lt;td&gt;specifies number of clients selected per round&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fraction&lt;/td&gt; &#xA;   &lt;td&gt;specifies fraction of clients selected&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;rounds&lt;/td&gt; &#xA;   &lt;td&gt;specifies total number of rounds&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;model_path&lt;/td&gt; &#xA;   &lt;td&gt;specifies initial server model path&lt;/td&gt; &#xA;   &lt;td&gt;initial_model.pt&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;epochs&lt;/td&gt; &#xA;   &lt;td&gt;specifies client epochs per round&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;accept_conn&lt;/td&gt; &#xA;   &lt;td&gt;determines if connections accepted after FL begins&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;verify&lt;/td&gt; &#xA;   &lt;td&gt;specifies if verification module runs before rounds&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;threshold&lt;/td&gt; &#xA;   &lt;td&gt;specifies minimum verification score&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;timeout&lt;/td&gt; &#xA;   &lt;td&gt;specifies client training time limit per round&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;resize_size&lt;/td&gt; &#xA;   &lt;td&gt;specifies dataset resize dimension&lt;/td&gt; &#xA;   &lt;td&gt;32&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;batch_size&lt;/td&gt; &#xA;   &lt;td&gt;specifies dataset batch size&lt;/td&gt; &#xA;   &lt;td&gt;32&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;net&lt;/td&gt; &#xA;   &lt;td&gt;specifies network architecture&lt;/td&gt; &#xA;   &lt;td&gt;LeNet&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dataset&lt;/td&gt; &#xA;   &lt;td&gt;specifies dataset name&lt;/td&gt; &#xA;   &lt;td&gt;FashionMNIST&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;niid&lt;/td&gt; &#xA;   &lt;td&gt;specifies data distribution among clients&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;carbon&lt;/td&gt; &#xA;   &lt;td&gt;specifies if carbon emissions tracked at client side&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;encryption&lt;/td&gt; &#xA;   &lt;td&gt;specifies whether to use ssl encryption or not&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;server_key&lt;/td&gt; &#xA;   &lt;td&gt;specifies path to server key certificate&lt;/td&gt; &#xA;   &lt;td&gt;server-key.pem&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;server_cert&lt;/td&gt; &#xA;   &lt;td&gt;specifies path to server certificate&lt;/td&gt; &#xA;   &lt;td&gt;server.pem&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Client&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Argument&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;server_ip&lt;/td&gt; &#xA;   &lt;td&gt;specifies server IP address&lt;/td&gt; &#xA;   &lt;td&gt;localhost:8214&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;device&lt;/td&gt; &#xA;   &lt;td&gt;specifies device&lt;/td&gt; &#xA;   &lt;td&gt;cpu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;encryption&lt;/td&gt; &#xA;   &lt;td&gt;specifies whether to use ssl encryption or not&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ca&lt;/td&gt; &#xA;   &lt;td&gt;specifies path to CA certificate&lt;/td&gt; &#xA;   &lt;td&gt;ca.pem&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;Files architecture of &lt;code&gt;FedERA&lt;/code&gt;. These contents may be helpful for users to understand our repo.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FedERA&#xA;├── federa&#xA;│   ├── client&#xA;│   │   ├── src&#xA;│   |   |   ├── client_lib&#xA;│   |   |   ├── client&#xA;│   |   |   ├── ClientConnection_pb2_grpc&#xA;│   |   |   ├── ClientConnection_pb2&#xA;│   |   |   ├── data_utils&#xA;│   |   |   ├── distribution&#xA;│   |   |   ├── get_data&#xA;│   |   |   ├── net_lib&#xA;│   |   |   ├── net&#xA;│   │   └── start_client&#xA;│   └── server&#xA;│       ├── src&#xA;│       |   ├── algorithms&#xA;│       |   ├── server_evaluate&#xA;│       |   ├── client_connection_servicer&#xA;│       |   ├── client_manager&#xA;│       |   ├── client_wrapper&#xA;│       |   ├── ClientConnection_pb2_grpc&#xA;│       |   ├── ClientConnection_pb2&#xA;│       |   ├── server_lib&#xA;│       |   ├── server&#xA;│       |   ├── verification&#xA;│       └── start_server&#xA;└── test&#xA;    ├── misc&#xA;    ├── benchtest&#xA;    |   ├── test_algorithms&#xA;    |   ├── test_datasets&#xA;    |   ├── test_models&#xA;    |   ├── test_modules&#xA;    |   ├── test_results&#xA;    |   └── test_scalability&#xA;    └──unittest&#xA;        └── test_algorithms&#xA;        &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;The framework is be composed of 4 modules, each module building upon the last:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Module 1: Verification module&lt;/strong&gt; &lt;a href=&#34;https://federa.readthedocs.io/en/latest/overview.html#verification-module&#34;&gt;docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Module 2: Timeout module&lt;/strong&gt; &lt;a href=&#34;https://federa.readthedocs.io/en/latest/overview.html#timeout-module&#34;&gt;docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Module 3: Intermediate client connections module&lt;/strong&gt; &lt;a href=&#34;https://federa.readthedocs.io/en/latest/overview.html#intermediate-client-connections-module&#34;&gt;docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Module 4: Carbon emission tracking module&lt;/strong&gt; &lt;a href=&#34;https://federa.readthedocs.io/en/latest/overview.html#carbon-emissions-tracking-module&#34;&gt;docs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running tests&lt;/h2&gt; &#xA;&lt;p&gt;Various unit tests are available in the &lt;code&gt;test&lt;/code&gt; directory. To run any tests, run the following command from the root directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -m test.benchtest.test_algorithms&#xA;python -m test.benchtest.test_datasets&#xA;python -m test.benchtest.test_models&#xA;python -m test.benchtest.test_modules&#xA;python -m test.benchtest.test_scalability&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Federated Learning Algorithms&lt;/h2&gt; &#xA;&lt;p&gt;Following federated learning algorithms are implemented in this framework:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Method&lt;/th&gt; &#xA;   &lt;th&gt;Paper&lt;/th&gt; &#xA;   &lt;th&gt;Publication&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FedAvg&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://proceedings.mlr.press/v54/mcmahan17a/mcmahan17a.pdf&#34;&gt;Communication-Efficient Learning of Deep Networks from Decentralized Data&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;AISTATS&#39;2017&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FedDyn&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://openreview.net/forum?id=B7v4QMR6Z9w&#34;&gt;Federated Learning Based on Dynamic Regularization&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ICLR&#39; 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Scaffold&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;&#34;&gt;SCAFFOLD: Stochastic Controlled Averaging for Federated Learning&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ICML&#39;2020&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Personalized FedAvg&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/pdf/1909.12488.pdf&#34;&gt;Improving Federated Learning Personalization via Model Agnostic Meta Learning&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Pre-print&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FedAdagrad&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/pdf/2003.00295.pdf&#34;&gt;Adaptive Federated Optimization&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ICML&#39;2020&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FedAdam&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/pdf/2003.00295.pdf&#34;&gt;Adaptive Federated Optimization&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ICML&#39;2020&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FedYogi&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/pdf/2003.00295.pdf&#34;&gt;Adaptive Federated Optimization&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ICML&#39;2020&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mime&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/pdf/2008.03606.pdf&#34;&gt;Mime: Mimicking Centralized Stochastic Algorithms in Federated Learning&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ICML&#39;2020&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mimelite&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/pdf/2008.03606.pdf&#34;&gt;Mime: Mimicking Centralized Stochastic Algorithms in Federated Learning&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ICML&#39;2020&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Datasets &amp;amp; Data Partition&lt;/h2&gt; &#xA;&lt;p&gt;Sophisticated in the real world, FL needs to handle various kind of data distribution scenarios, including iid and non-iid scenarios. Though there already exists some datasets and partition schemes for published data benchmark, it still can be very messy and hard for researchers to partition datasets according to their specific research problems, and maintain partition results during simulation.&lt;/p&gt; &#xA;&lt;h3&gt;Data Partition&lt;/h3&gt; &#xA;&lt;p&gt;We provide multiple Non-IID data partition schemes. Here we show the data partition visualization of several common used datasets as the examples.&lt;/p&gt; &#xA;&lt;h4&gt;Balanced IID partition&lt;/h4&gt; &#xA;&lt;p&gt;Each client has same number of samples, and same distribution for all class samples.&lt;/p&gt; &#xA;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/anupamkliv/FedERA/main/media/data_distribution/class_stats_0.png&#34; width=&#34;300&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/anupamkliv/FedERA/main/media/data_distribution/sample_stats_0.png&#34; width=&#34;300&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h4&gt;Non-IID partition 2&lt;/h4&gt; &#xA;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/anupamkliv/FedERA/main/media/data_distribution/class_stats_1.png&#34; width=&#34;300&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/anupamkliv/FedERA/main/media/data_distribution/sample_stats_1.png&#34; width=&#34;300&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h4&gt;Non-IID partition 3&lt;/h4&gt; &#xA;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/anupamkliv/FedERA/main/media/data_distribution/class_stats_2.png&#34; width=&#34;300&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/anupamkliv/FedERA/main/media/data_distribution/sample_stats_2.png&#34; width=&#34;300&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- #### Non-IID partition 4&#xA;&#xA;&lt;div align=&#34;left&#34;&gt;&#xA;    &lt;img src=&#34;media/class_stats_3.png&#34; width=&#34;300&#34; /&gt;&#xA;    &lt;img src=&#34;media/sample_stats_3.png&#34; width=&#34;300&#34; /&gt;&#xA;&lt;/div&gt;&#xA;&#xA;#### Non-IID partition 5&#xA;&#xA;&lt;div align=&#34;left&#34;&gt;&#xA;    &lt;img src=&#34;media/class_stats_4.png&#34; width=&#34;300&#34; /&gt;&#xA;    &lt;img src=&#34;media/sample_stats_4.png&#34; width=&#34;300&#34; /&gt;&#xA;&lt;/div&gt; --&gt; &#xA;&lt;h3&gt;Datasets Supported&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Dataset&lt;/th&gt; &#xA;   &lt;th&gt;Training samples&lt;/th&gt; &#xA;   &lt;th&gt;Test samples&lt;/th&gt; &#xA;   &lt;th&gt;Classes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MNIST&lt;/td&gt; &#xA;   &lt;td&gt;60,000&lt;/td&gt; &#xA;   &lt;td&gt;10,000&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FashionMnist&lt;/td&gt; &#xA;   &lt;td&gt;60,000&lt;/td&gt; &#xA;   &lt;td&gt;10,000&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CIFAR-10&lt;/td&gt; &#xA;   &lt;td&gt;50,000&lt;/td&gt; &#xA;   &lt;td&gt;10,000&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CIFAR-100&lt;/td&gt; &#xA;   &lt;td&gt;50,000&lt;/td&gt; &#xA;   &lt;td&gt;10,000&lt;/td&gt; &#xA;   &lt;td&gt;100&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Custom Dataset Support&lt;/h3&gt; &#xA;&lt;p&gt;We also provide a simple way to add your own dataset to the framework. Look into &lt;a href=&#34;https://federa.readthedocs.io/en/latest/tutorials/dataset.html#adding-support-for-new-datasets&#34;&gt;docs&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Models Supported&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;FedERA&lt;/code&gt; has support for the following Deep Learning models, which are loaded from &lt;code&gt;torchvision.models&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;LeNet&lt;/li&gt; &#xA; &lt;li&gt;ResNet18&lt;/li&gt; &#xA; &lt;li&gt;ResNet50&lt;/li&gt; &#xA; &lt;li&gt;VGG16&lt;/li&gt; &#xA; &lt;li&gt;AlexNet&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Custom Model Support&lt;/h3&gt; &#xA;&lt;p&gt;We also provide a simple way to add your own models to the framework. Look into &lt;a href=&#34;https://federa.readthedocs.io/en/latest/tutorials/dataset.html#adding-support-for-new-datasets&#34;&gt;docs&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Carbon emission tracking&lt;/h2&gt; &#xA;&lt;p&gt;In &lt;code&gt;FedERA&lt;/code&gt; CodeCarbon&lt;a href=&#34;https://raw.githubusercontent.com/anupamkliv/FedERA/main/#1&#34;&gt;[1]&lt;/a&gt; package is used to estimate the carbon emissions generated by clients during training. CodeCarbon is a Python package that provides an estimation of the carbon emissions associated with software code.&lt;/p&gt; &#xA;&lt;h3&gt;Nvidia gpu&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;raspberry pi&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Performance Evaluation under different Non-IID setting&lt;/h2&gt; &#xA;&lt;!--&#xA;The `accuracy.py`  file has functions defined needed to plot all the graphs show in this section.&#xA;&#xA;### Accuracy of various FL algorithms available in the framework with a few dataset&#xA;&#xA;&lt;br&gt;&#xA;&#xA;&lt;div align=&#34;center&#34;&gt;&#xA;&lt;table style=&#34;margin: auto&#34;&gt;&#xA;    &lt;thead&gt;&#xA;        &lt;tr&gt;&#xA;            &lt;th&gt;Dataset&lt;/th&gt;&#xA;            &lt;th colspan=3&gt;MNIST&lt;/th&gt;&#xA;            &lt;th colspan=3&gt;CIFAR-10&lt;/th&gt;&#xA;            &lt;th colspan=3&gt;CIFAR-100&lt;/th&gt;&#xA;        &lt;/tr&gt;&#xA;    &lt;/thead&gt;&#xA;    &lt;tbody&gt;&#xA;        &lt;tr&gt;&#xA;            &lt;td  style=&#34;text-align: center&#34; &gt;Algorithm &lt;/td&gt;&#xA;            &lt;td  style=&#34;text-align: center&#34;&gt;K=1&lt;/td&gt;&#xA;            &lt;td  style=&#34;text-align: center&#34;&gt;K=2&lt;/td&gt;&#xA;            &lt;td  style=&#34;text-align: center&#34;&gt;K=3&lt;/td&gt;&#xA;            &lt;td  style=&#34;text-align: center&#34;&gt;K=1&lt;/td&gt;&#xA;            &lt;td  style=&#34;text-align: center&#34;&gt;K=2&lt;/td&gt;&#xA;            &lt;td  style=&#34;text-align: center&#34;&gt;K=3&lt;/td&gt;&#xA;            &lt;td  style=&#34;text-align: center&#34;&gt;K=1&lt;/td&gt;&#xA;            &lt;td  style=&#34;text-align: center&#34;&gt;K=2&lt;/td&gt;&#xA;            &lt;td  style=&#34;text-align: center&#34;&gt;K=3&lt;/td&gt;&#xA;        &lt;/tr&gt;&#xA;        &lt;tr&gt;&#xA;            &lt;td&gt;FedAvg &lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;             &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;        &lt;/tr&gt;&#xA;        &lt;tr&gt;&#xA;            &lt;td&gt;FedAvgM &lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;             &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;        &lt;/tr&gt;&#xA;         &lt;tr&gt;&#xA;            &lt;td&gt;FedAdam &lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;             &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;        &lt;/tr&gt;&#xA;         &lt;tr&gt;&#xA;            &lt;td&gt;FedAdagrad &lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;             &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;        &lt;/tr&gt;&#xA;         &lt;tr&gt;&#xA;            &lt;td&gt;FedYogi &lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;             &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;        &lt;/tr&gt;&#xA; &lt;tr&gt;&#xA;            &lt;td&gt;Mime &lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;             &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;        &lt;/tr&gt;&#xA;        &lt;tr&gt;&#xA;            &lt;td&gt;Mimelite &lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;             &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;        &lt;/tr&gt;&#xA;         &lt;tr&gt;&#xA;            &lt;td&gt;FedDyn &lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;             &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;        &lt;/tr&gt;&#xA;         &lt;tr&gt;&#xA;            &lt;td&gt;Scaffold &lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;             &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;        &lt;/tr&gt;&#xA;         &lt;tr&gt;&#xA;            &lt;td&gt;Personalized-FedAvg &lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;             &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;            &lt;td&gt;&lt;/td&gt;&#xA;        &lt;/tr&gt;&#xA;    &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;--&gt; &#xA;&lt;h3&gt;Plotting the accuracy of some algorithms against different Non-IID distributions&lt;/h3&gt; &#xA;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/anupamkliv/FedERA/main/media/accuracy/Al_0.png&#34; width=&#34;230&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/anupamkliv/FedERA/main/media/accuracy/Al_1.png&#34; width=&#34;230&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/anupamkliv/FedERA/main/media/accuracy/Al_3.png&#34; width=&#34;230&#34;&gt; &#xA; &lt;!-- &lt;img src=&#34;media/accuracy/Al_4.png&#34; width=&#34;230&#34; /&gt; --&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Plotting accuracy on Non-IID distribution with different algorithms&lt;/h3&gt; &#xA;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/anupamkliv/FedERA/main/media/accuracy/niid_1.png&#34; width=&#34;220&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/anupamkliv/FedERA/main/media/accuracy/niid_2.png&#34; width=&#34;220&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/anupamkliv/FedERA/main/media/accuracy/niid_3.png&#34; width=&#34;220&#34;&gt; &#xA; &lt;!-- &lt;img src=&#34;media/accuracy/niid_4.png&#34; width=&#34;220&#34; /&gt; --&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Comparing accuracy of different algorithm with different Non-IID distributions&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;40%&#34; alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/anupamkliv/FedERA/main/media/accuracy/Accuracy.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- ## References&#xA;&#xA;&lt;a id=&#34;1&#34;&gt;[1]&lt;/a&gt; Schmidt, V., Goyal, K., Joshi, A., Feld, B., Conell, L., Laskaris, N., Blank, D., Wilson, J., Friedler, S., &amp; Luccioni, S. (2021). CodeCarbon: Estimate and Track Carbon Emissions from Machine Learning Computing. https://doi.org/10.5281/zenodo.4658424&#xA;&#xA;&lt;a id=&#34;2&#34;&gt;[2]&lt;/a&gt; --&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;!-- Project Investigator: [Prof. ](https://scholar.google.com/citations?user=gF0H9nEAAAAJ&amp;hl=ennjujbj) (abc@edu).&#xA;&#xA;For technical issues related to __**FedERA**__ development, please contact our development team through Github issues or email:&#xA;&#xA;- [Name Sirname](https://scholar.google.com/citations___): _____@gmail.com --&gt; &#xA;&lt;p&gt;For technical issues related to &lt;strong&gt;&lt;strong&gt;FedERA&lt;/strong&gt;&lt;/strong&gt; development, please contact our development team through Github issues or email:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Principal Investigator&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/debdoot/&#34;&gt;Dr Debdoot Sheet&lt;/a&gt; &lt;br&gt; Department of Electrical Engineering,&lt;br&gt; Indian Institute of Technology Kharagpur&lt;br&gt; email: &lt;a href=&#34;mailto:debdoot@ee.iitkgp.ac.in&#34;&gt;debdoot@ee.iitkgp.ac.in&lt;/a&gt;,&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Contributor&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://in.linkedin.com/in/anupam-borthakur-b85000185/&#34;&gt;Anupam Borthakur&lt;/a&gt; &lt;br&gt; Centre of Excellence in Artificial Intelligence, &lt;br&gt; Indian Institute of Technology Kharagpur &lt;br&gt; email: &lt;a href=&#34;mailto:anupamborthakur@kgpian.iitkgp.ac.in&#34;&gt;anupamborthakur@kgpian.iitkgp.ac.in&lt;/a&gt; &lt;br&gt; Github username: anupam-kliv&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/asimmanna17/&#34;&gt;Asim Manna&lt;/a&gt; &lt;br&gt; Centre of Excellence in Artificial Intelligence, &lt;br&gt; Indian Institute of Technology Kharagpur &lt;br&gt; email: &lt;a href=&#34;mailto:asimmanna17@kgpian.iitkgp.ac.in&#34;&gt;asimmanna17@kgpian.iitkgp.ac.in&lt;/a&gt; &lt;br&gt; Github username: asimmanna17&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/aditya-kasliwal-982525227&#34;&gt; Aditya Kasliwal&lt;/a&gt;&lt;br&gt; Manipal Institute of Technology&lt;br&gt; email: &lt;a href=&#34;mailto:kasliwaladitya17@gmail.com&#34;&gt;kasliwaladitya17@gmail.com&lt;/a&gt; &lt;br&gt; Github username: Kasliwal17&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/dipayan-dewan-aabb8a79/&#34;&gt;Dipayan Dewan&lt;/a&gt; &lt;br&gt; Centre of Excellence in Artificial Intelligence, &lt;br&gt; Indian Institute of Technology Kharagpur &lt;br&gt; email: &lt;a href=&#34;mailto:diipayan93@kgpian.iitkgp.ac.in&#34;&gt;diipayan93@kgpian.iitkgp.ac.in&lt;/a&gt; &lt;br&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dome272/Wuerstchen</title>
    <updated>2023-06-05T01:39:50Z</updated>
    <id>tag:github.com,2023-06-05:/dome272/Wuerstchen</id>
    <link href="https://github.com/dome272/Wuerstchen" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official implementation of Würstchen: Efficient Pretraining of Text-to-Image Models&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/drive/1UTP9Xn2UIrVbAXyL-SKEvyLmgVWdw-Vy?usp=sharing&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Würstchen&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/dome272/wuerstchen/assets/61938694/cc811cfd-c603-4767-bdc7-4cd1539daa35&#34; alt=&#34;main-figure-github&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is this?&lt;/h2&gt; &#xA;&lt;p&gt;Würstchen is a new framework for training text-conditional models by moving the computationally expensive text-conditional stage into a highly compressed latent space. Common approaches make use of a single stage compression, while Würstchen introduces another Stage that introduces even more compression. In total we have Stage A &amp;amp; B that are responsible for compressing images and Stage C that learns the text-conditional part in the low dimensional latent space. With that Würstchen achieves a 42x compression factor, while still reconstructing images faithfully. This enables training of Stage C to be fast and computationally cheap. We refer to &lt;a href=&#34;https://arxiv.org/abs/2306.00637&#34;&gt;the paper&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Use Würstchen&lt;/h2&gt; &#xA;&lt;p&gt;You can use the model simply through the notebooks here. The &lt;a href=&#34;https://github.com/dome272/wuerstchen/raw/main/w%C3%BCrstchen-stage-B.ipynb&#34;&gt;Stage B&lt;/a&gt; notebook only for reconstruction and the &lt;a href=&#34;https://github.com/dome272/wuerstchen/raw/main/w%C3%BCrstchen-stage-C.ipynb&#34;&gt;Stage C&lt;/a&gt; notebook is for the text-conditional generation. You can also try the text-to-image generation on &lt;a href=&#34;https://colab.research.google.com/drive/1UTP9Xn2UIrVbAXyL-SKEvyLmgVWdw-Vy?usp=sharing&#34;&gt;Google Colab&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Train your own Würstchen&lt;/h2&gt; &#xA;&lt;p&gt;Training Würstchen is considerably faster and cheaper than other text-to-image as it trains in a much smaller latent space of 12x12. We provide training scripts for both &lt;a href=&#34;https://github.com/dome272/wuerstchen/raw/main/train_stage_B.py&#34;&gt;Stage B&lt;/a&gt; and &lt;a href=&#34;https://github.com/dome272/wuerstchen/raw/main/train_stage_C.py&#34;&gt;Stage C&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Download Models&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;/th&gt; &#xA;   &lt;th&gt;Download&lt;/th&gt; &#xA;   &lt;th&gt;Parameters&lt;/th&gt; &#xA;   &lt;th&gt;Conditioning&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Würstchen v1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/dome272/wuerstchen&#34;&gt;Huggingface&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1B (Stage C) + 600M (Stage B) + 19M (Stage A)&lt;/td&gt; &#xA;   &lt;td&gt;CLIP-H-Text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Acknowledgment&lt;/h2&gt; &#xA;&lt;p&gt;Special thanks to &lt;a href=&#34;https://stability.ai/&#34;&gt;Stability AI&lt;/a&gt; for providing compute for our research.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>BatchDrake/ASignInSpace</title>
    <updated>2023-06-05T01:39:50Z</updated>
    <id>tag:github.com,2023-06-05:/BatchDrake/ASignInSpace</id>
    <link href="https://github.com/BatchDrake/ASignInSpace" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repository for documentation of existing findings and artifacts&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ASignInSpace&lt;/h1&gt; &#xA;&lt;p&gt;This repository intends to be a centralized place and primary reference for documentation on existing findings, visualizations, sonifications and other data products (artifacts), resulting on the analysis of the message data.&lt;/p&gt; &#xA;&lt;h2&gt;Directory structure&lt;/h2&gt; &#xA;&lt;p&gt;The provided signal recording can be seen as an onion with multiple layers of encoding (and not encryption). We had to decode the lowest-level ones in order to get to arrive to the top-level ones. The analysis of signal recording is therefore structured in directories, according to the layers we are referring to. Bottom-up, these directories are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BatchDrake/ASignInSpace/master/PHY/&#34;&gt;&lt;strong&gt;PHY&lt;/strong&gt;&lt;/a&gt;: Analysis of the physical layer (from raw signal samples to demodulated symbols)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BatchDrake/ASignInSpace/master/TM/&#34;&gt;&lt;strong&gt;TM&lt;/strong&gt;&lt;/a&gt;: Analysis of the CCSDS TM Data Link frames (MAC layer)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BatchDrake/ASignInSpace/master/SPP/&#34;&gt;&lt;strong&gt;SPP&lt;/strong&gt;&lt;/a&gt;: Analysis of the CCSDS Space Packets protocol (transport layer)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BatchDrake/ASignInSpace/master/APID_Streams/&#34;&gt;&lt;strong&gt;APID_Streams&lt;/strong&gt;&lt;/a&gt;: Analysis of the contents of the application layer encapsulated by the space packets, in a per APID basis.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, the following directories are also included:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BatchDrake/ASignInSpace/master/Meta/&#34;&gt;&lt;strong&gt;Meta&lt;/strong&gt;&lt;/a&gt;: Other ancillary information, like time analysis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BatchDrake/ASignInSpace/master/Candidates/&#34;&gt;&lt;strong&gt;Candidates&lt;/strong&gt;&lt;/a&gt;: First-contact message candidates.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BatchDrake/ASignInSpace/master/The_Message/&#34;&gt;&lt;strong&gt;The_Message&lt;/strong&gt;&lt;/a&gt;: &lt;strong&gt;Interpretation of the embedded message&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The layer directories have the following subdirectory structure:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;README.md&lt;/code&gt;: Summary of the current state of the analysis of this layer, with appropriate links to files in this subdirectory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;analysis/&lt;/code&gt;: Text describing how the analysis was done.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;artifacts/&lt;/code&gt;: Data products resulting from this analysis (this is an &lt;strong&gt;output&lt;/strong&gt; or &lt;strong&gt;results&lt;/strong&gt; folder, used as input of the next layer).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;doc/&lt;/code&gt;: Documents and specifications needed to understand the nature of the data being analyzed here.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sonifications/&lt;/code&gt;: Sonifications of the data inputs of this layer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tools/&lt;/code&gt;: Tools and scripts that generated the data product of this layer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;visual/&lt;/code&gt;: Plots, images and visualizations of the data inputs of this layer.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>