<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-26T01:31:32Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>langchain-ai/langchain-academy</title>
    <updated>2024-10-26T01:31:32Z</updated>
    <id>tag:github.com,2024-10-26:/langchain-ai/langchain-academy</id>
    <link href="https://github.com/langchain-ai/langchain-academy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LangChain Academy&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to LangChain Academy! This is a growing set of modules focused on foundational concepts within the LangChain ecosystem. Module 0 is basic setup and Modules 1 - 4 focus on LangGraph, progressively adding more advanced themes. In each module folder, you&#39;ll see a set of notebooks. A LangChain Academy accompanies each notebook to guide you through the topic. Each module also has a &lt;code&gt;studio&lt;/code&gt; subdirectory, with a set of relevant graphs that we will explore using the LangGraph API and Studio.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Python version&lt;/h3&gt; &#xA;&lt;p&gt;To get the most out of this course, please ensure you&#39;re using Python 3.11 or later. This version is required for optimal compatibility with LangGraph. If you&#39;re on an older version, upgrading will ensure everything runs smoothly.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Clone repo&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/langchain-ai/langchain-academy.git&#xA;$ cd langchain-academy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create an environment and install dependencies&lt;/h3&gt; &#xA;&lt;h4&gt;Mac/Linux/WSL&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ python3 -m venv lc-academy-env&#xA;$ source lc-academy-env/bin/activate&#xA;$ pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows Powershell&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS&amp;gt; python3 -m venv lc-academy-env&#xA;PS&amp;gt; Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process&#xA;PS&amp;gt; lc-academy-env\scripts\activate&#xA;PS&amp;gt; pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running notebooks&lt;/h3&gt; &#xA;&lt;p&gt;If you don&#39;t have Jupyter set up, follow installation instructions &lt;a href=&#34;https://jupyter.org/install&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ jupyter notebook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting up env variables&lt;/h3&gt; &#xA;&lt;p&gt;Briefly going over how to set up environment variables. You can also use a &lt;code&gt;.env&lt;/code&gt; file with &lt;code&gt;python-dotenv&lt;/code&gt; library.&lt;/p&gt; &#xA;&lt;h4&gt;Mac/Linux/WSL&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ export API_ENV_VAR=&#34;your-api-key-here&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows Powershell&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS&amp;gt; $env:API_ENV_VAR = &#34;your-api-key-here&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Set OpenAI API key&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you don&#39;t have an OpenAI API key, you can sign up &lt;a href=&#34;https://openai.com/index/openai-api/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Set &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; in your environment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Sign up and Set LangSmith API&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sign up for LangSmith &lt;a href=&#34;https://smith.langchain.com/&#34;&gt;here&lt;/a&gt;, find out more about LangSmith&lt;/li&gt; &#xA; &lt;li&gt;and how to use it within your workflow &lt;a href=&#34;https://www.langchain.com/langsmith&#34;&gt;here&lt;/a&gt;, and relevant library &lt;a href=&#34;https://docs.smith.langchain.com/&#34;&gt;docs&lt;/a&gt;!&lt;/li&gt; &#xA; &lt;li&gt;Set &lt;code&gt;LANGCHAIN_API_KEY&lt;/code&gt;, &lt;code&gt;LANGCHAIN_TRACING_V2=true&lt;/code&gt; in your environment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Set up Tavily API for web search&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Tavily Search API is a search engine optimized for LLMs and RAG, aimed at efficient, quick, and persistent search results.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can sign up for an API key &lt;a href=&#34;https://tavily.com/&#34;&gt;here&lt;/a&gt;. It&#39;s easy to sign up and offers a very generous free tier. Some lessons (in Module 4) will use Tavily.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set &lt;code&gt;TAVILY_API_KEY&lt;/code&gt; in your environment.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Set up LangGraph Studio&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Currently, Studio only has macOS support and needs Docker Desktop running.&lt;/li&gt; &#xA; &lt;li&gt;Download the latest &lt;code&gt;.dmg&lt;/code&gt; file &lt;a href=&#34;https://github.com/langchain-ai/langgraph-studio?tab=readme-ov-file#download&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install Docker desktop for Mac &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running Studio&lt;/h3&gt; &#xA;&lt;p&gt;Graphs for LangGraph Studio are in the &lt;code&gt;module-x/studio/&lt;/code&gt; folders.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To use Studio, you will need to create a .env file with the relevant API keys&lt;/li&gt; &#xA; &lt;li&gt;Run this from the command line to create these files for module 1 to 4, as an example:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ for i in {1..4}; do&#xA;  cp module-$i/studio/.env.example module-$i/studio/.env&#xA;  echo &#34;OPENAI_API_KEY=\&#34;$OPENAI_API_KEY\&#34;&#34; &amp;gt; module-$i/studio/.env&#xA;done&#xA;$ echo &#34;TAVILY_API_KEY=\&#34;$TAVILY_API_KEY\&#34;&#34; &amp;gt;&amp;gt; module-4/studio/.env&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>