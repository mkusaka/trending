<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-29T01:37:06Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>NASAARSET/ARSET_ML_Fundamentals</title>
    <updated>2023-04-29T01:37:06Z</updated>
    <id>tag:github.com,2023-04-29:/NASAARSET/ARSET_ML_Fundamentals</id>
    <link href="https://github.com/NASAARSET/ARSET_ML_Fundamentals" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repository for Jupyter Notebook examples associated with the NASA ARSET Training, &#34;Fundamentals of Machine Learning for Earth Science&#34;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ARSET Fundamentals of Machine Learning (ML) for Earth Science&lt;/h1&gt; &#xA;&lt;p&gt;Materials for &lt;a href=&#34;https://appliedsciences.nasa.gov/join-mission/training/english/arset-fundamentals-machine-learning-earth-science&#34;&gt;ARSET Fundamentals of Machine Learning for Earth Science&lt;/a&gt;. This repository contains materials for Session 1, 2, and 3.&lt;/p&gt; &#xA;&lt;h2&gt;Assignments&lt;/h2&gt; &#xA;&lt;p&gt;The assignments listed for each session are practice assignments with questions that will be included in the final assignment after Session 3 conclusion. The final assignment will be through a Google Form where you will be answering a set of questions from each one of the Sessions.&lt;/p&gt; &#xA;&lt;h2&gt;Session 1 Materials:&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Lecture Topic&lt;/th&gt; &#xA;   &lt;th&gt;Interactive Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ML Algorithms Introduction&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/NASAARSET/ARSET_ML_Fundamentals/blob/main/session1/1-ML-Algorithms-Introduction-Session1.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Assignment Session 1&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/NASAARSET/ARSET_ML_Fundamentals/blob/main/session1/Assignment-Session1.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Session 2 Materials:&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Lecture Topic&lt;/th&gt; &#xA;   &lt;th&gt;Interactive Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MODIS EDA&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/NASAARSET/ARSET_ML_Fundamentals/blob/main/session2/1_MODIS_EDA_Session2.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MODIS Train &amp;amp; Eval&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/NASAARSET/ARSET_ML_Fundamentals/blob/main/session2/2_MODIS_Train_Eval_Session2.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Assignment Session 2&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/NASAARSET/ARSET_ML_Fundamentals/blob/main/session2/Assignment-Session2.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Session 3 Materials:&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Lecture Topic&lt;/th&gt; &#xA;   &lt;th&gt;Interactive Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MODIS Model Tuning&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/NASAARSET/ARSET_ML_Fundamentals/blob/main/session3/1-MODIS-Tuning-Session3.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MODIS Explainability&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/NASAARSET/ARSET_ML_Fundamentals/blob/main/session3/2-MODIS-Explainability-Session3.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MODIS AutoML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/NASAARSET/ARSET_ML_Fundamentals/blob/main/session3/3_MODIS_AutoML_Session3.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Assignment Session 3&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Day before Session 3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Additional Resources&lt;/h2&gt; &#xA;&lt;p&gt;The NASA ASTG provides additional introductory materials related to Python and data science in general. You can access some of this interactive material directly from their repository &lt;a href=&#34;https://github.com/astg606/py_materials&#34;&gt;NASA ASTG py_materials&lt;/a&gt; or under the links below.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NASAARSET/ARSET_ML_Fundamentals/main/#&#34;&gt;Installing the Anaconda Python Distribution&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;It is not required to have a Python distribution installed on your local machine. However, we believe that it is important to have one in order to write and run your own Python applications. We recommend that you install the Anaconda Python distribution by following the instructions at: &lt;a href=&#34;https://docs.continuum.io/anaconda/install/&#34;&gt;Anconda installation Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NASAARSET/ARSET_ML_Fundamentals/main/#&#34;&gt;Installing Git&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To install Git on your local machine, follow the installation instructions: &lt;a href=&#34;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&#34;&gt;Getting Started - Installing Git&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To fully follow all the topics below, you need to have a &lt;strong&gt;gmail&lt;/strong&gt; account in order to access Google Colaboratory. Each course will be taught through the Google cloud based Jupyter notebook.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span style=&#34;color: red&#34;&gt;Starting Point&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Lecture Topic&lt;/th&gt; &#xA;   &lt;th&gt;Interactive Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Introduction to Jupyter Notebook&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/astg606/py_materials/blob/master/jupyter_notebook/jupyter_notebook_introduction.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Introduction to Git&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/astg606/py_materials/blob/master/git_tutorial/basic_git_tutorial.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;&lt;span style=&#34;color: red&#34;&gt;Introduction to Python&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;p&gt;If you have never been exposed to Python, you need to take this Introduction to Python course. In case you did some Python programming in the past and you want to assess your Python knowledge, take the following test (in less that 15 minutes and without using any help):&lt;/p&gt; &#xA;&lt;center&gt; &#xA; &lt;a href=&#34;https://forms.gle/PTV6xFCA21NYkqfp9&#34;&gt;Python Assessment Test&lt;/a&gt; &#xA;&lt;/center&gt; &#xA;&lt;p&gt;If you score at least 80% then only take the &lt;strong&gt;I/O on Text Files&lt;/strong&gt; topic. Otherwise, take the entire course.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Lecture Topic&lt;/th&gt; &#xA;   &lt;th&gt;Interactive Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Running Python&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/astg606/py_materials/blob/master/welcome/running_python.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Data Types&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/astg606/py_materials/blob/master/data_types/python_data_types.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Conditional Statements&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/astg606/py_materials/blob/master/conditional_logic/introduction_conditionals.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Loops&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/astg606/py_materials/blob/master/loops/introduction_loops.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Advanced Data Types&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/astg606/py_materials/blob/master/data_types/python_data_structures.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/astg606/py_materials/blob/master/functions_modules/introduction_functions.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Modules&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/astg606/py_materials/blob/master/functions_modules/introduction_modules.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;I/O on Text Files&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/astg606/py_materials/blob/master/input_output/introduction_io_text_files.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Lecture Topic&lt;/th&gt; &#xA;   &lt;th&gt;Interactive Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Introduction to Turtle&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/JulesKouatchou/py_data_science/blob/master/introduction_turtle.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;A place to run the code&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://repl.it/&#34;&gt;https://repl.it/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;&lt;span style=&#34;color: red&#34;&gt;Data Science Tools&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Lecture Topic&lt;/th&gt; &#xA;   &lt;th&gt;Interactive Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Introduction to Numpy&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/astg606/py_materials/blob/master/numpy/introduction_numpy.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Basic Visualization with Matplotlib&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/astg606/py_materials/blob/master/visualization/introduction_matplotlib.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Introduction to Pandas&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/astg606/py_materials/blob/master/pandas/introduction_pandas.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Additional References&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ESIPFed/Awesome-Earth-Artificial-Intelligence&#34;&gt;awesome-earth-artificial-intelligence&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/softwareunderground/awesome-open-geoscience&#34;&gt;awesome-open-geoscience&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/opengeos/segment-geospatial&#34;&gt;segment-anything-geospatial&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>mme/langforge</title>
    <updated>2023-04-29T01:37:06Z</updated>
    <id>tag:github.com,2023-04-29:/mme/langforge</id>
    <link href="https://github.com/mme/langforge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Toolkit for Creating and Deploying LangChain Apps&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/mme/langforge/raw/main/docs/img/header.png&#34; alt=&#34;LangForge&#34; title=&#34;LangForge&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;LangForge is an &lt;strong&gt;open-source toolkit&lt;/strong&gt; designed to make it easy to create and deploy &lt;strong&gt;&lt;em&gt;LangChain applications&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simplified environment setup and API key management&lt;/li&gt; &#xA; &lt;li&gt;Predefined notebooks for various use cases to help you get started quickly&lt;/li&gt; &#xA; &lt;li&gt;Instantly chat with your chains using the Jupyter integration&lt;/li&gt; &#xA; &lt;li&gt;Automatic REST interface generation for your app&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install LangForge, simply run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install langforge-ai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Use the create command to generate a new LangChain app.&lt;/p&gt; &#xA;&lt;p&gt;LangForge will ask you a couple of questions, then set up a virtual environment, install required packages, and configure API keys, providing a ready-to-use foundation for your app.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;langforge create myapp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When prompted to edit your API keys, input your OpenAI API key.&lt;/p&gt; &#xA;&lt;h3&gt;Launch JupyterLab&lt;/h3&gt; &#xA;&lt;p&gt;Next, run the langforge lab command to launch Jupyter Lab.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd myapp&#xA;langforge lab&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Your project comes with ready-to-use templates for various use cases and an integration that allows you to chat with your chains directly within Jupyter.&lt;/p&gt; &#xA;&lt;p&gt;In this example, we select the &#34;Creative ChatGPT&#34; template.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/mme/langforge/raw/main/docs/img/templates.png&#34; alt=&#34;Templates&#34; title=&#34;Templates&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Develop your LangChain app&lt;/h3&gt; &#xA;&lt;p&gt;Now that we have our notebook open, let&#39;s run the code.&lt;/p&gt; &#xA;&lt;p&gt;Select &lt;code&gt;Kernel &amp;gt; Restart Kernel and Run All Cells...&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This template will make ChatGPT behave like an old school adventure game. To play with it, click the smiling robot face on the upper right to open a chat window.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/mme/langforge/raw/main/docs/img/chat.png&#34; alt=&#34;Chat&#34; title=&#34;Chat&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Great! Note that upon running the first cell, a table displaying your API keys will appear. If your OpenAI key was not set during app creation, simply click the edit button and input your key.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# make sure all packages are installed and environment variables are set&#xA;%setup langchain openai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/mme/langforge/raw/main/docs/img/api-key.png&#34; alt=&#34;API Key&#34; title=&#34;API Key&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s change the prompt to customize our adventure. You can come up with any scenario you want. In this tutorial, we will go for a space adventure.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;template = &#34;&#34;&#34;This is a conversation between a human and a system called AdventureGPT.&#xA;&#xA;AdventureGPT is designed to create immersive and engaging text-based adventure games.&#xA;&#xA;AdventureGPT is capable of understanding both simple commands, such as &#39;look,&#39; and more&#xA;complex sentences, allowing it to effectively interpret the player&#39;s intent.&#xA;&#xA;This adventure takes place in space. The player steps into the role of Captain Bravado,&#xA;a fearless and charismatic leader of the starship &#39;Infinity Chaser&#39;.&#xA;Tasked with navigating the uncharted reaches of the cosmos, Captain Bravado and their&#xA;loyal crew must overcome various challenges, solve intricate puzzles, and make critical&#xA;decisions that will shape the fate of their mission and the future of interstellar&#xA;exploration.&#xA;&#34;&#34;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now rerun the cell and find yourself in an immersive space adventure!&lt;/p&gt; &#xA;&lt;h3&gt;Serve your app&lt;/h3&gt; &#xA;&lt;p&gt;LangForge automatically generates a REST interface for your app, making it easy to deploy and share with others. When you are happy with your app, use the &lt;code&gt;serve&lt;/code&gt; command followed by the name of your notebook to start serving your app.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;langforge serve chat-creative.ipynb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can now use curl to send HTTP requests to our app:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -X POST -H &#34;Content-Type: application/json&#34; -d &#39;{&#34;input&#34;: &#34;look&#34;, &#34;memory&#34;: []}&#39; http://localhost:2204/chat/gpt_adventure&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that we include two keys in the JSON: input, which represents the user&#39;s command or message, and memory, which holds the conversation history to maintain context and continuity in the interaction.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions from the community! If you&#39;d like to contribute to LangForge, please feel free to submit pull requests or open issues on our GitHub repository.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;LangForge is released under the MIT License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>saschaschramm/chatgpt</title>
    <updated>2023-04-29T01:37:06Z</updated>
    <id>tag:github.com,2023-04-29:/saschaschramm/chatgpt</id>
    <link href="https://github.com/saschaschramm/chatgpt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Analysis of OpenAI&#39;s ChatGPT&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGPT&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chat.openai.com/&#34;&gt;ChatGPT&lt;/a&gt; is a text-based AI assistant by OpenAI. This is an analysis of ChatGPT.&lt;/p&gt; &#xA;&lt;h2&gt;Analysis&lt;/h2&gt; &#xA;&lt;h3&gt;Models available via chat.openai.com&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Title&lt;/th&gt; &#xA;   &lt;th&gt;Slug&lt;/th&gt; &#xA;   &lt;th&gt;Max tokens&lt;/th&gt; &#xA;   &lt;th&gt;Description (from OpenAI)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Plugins&lt;/td&gt; &#xA;   &lt;td&gt;text-davinci-002-plugins&lt;/td&gt; &#xA;   &lt;td&gt;8195&lt;/td&gt; &#xA;   &lt;td&gt;An experimental model that knows when and how to use plugins&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Default (GPT-3.5)&lt;/td&gt; &#xA;   &lt;td&gt;text-davinci-002-render-sha&lt;/td&gt; &#xA;   &lt;td&gt;4097&lt;/td&gt; &#xA;   &lt;td&gt;Optimized for speed, currently available to Plus users &lt;br&gt;&lt;br&gt; Note: The original description is outdated, as the model is now accessible to both Plus and non-Plus users.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Legacy (GPT-3.5)&lt;/td&gt; &#xA;   &lt;td&gt;text-davinci-002-render-paid&lt;/td&gt; &#xA;   &lt;td&gt;4097&lt;/td&gt; &#xA;   &lt;td&gt;The previous ChatGPT Plus model&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GPT-4&lt;/td&gt; &#xA;   &lt;td&gt;gpt-4&lt;/td&gt; &#xA;   &lt;td&gt;4095&lt;/td&gt; &#xA;   &lt;td&gt;Our most advanced model, available to Plus subscribers. GPT-4 excels at tasks that require advanced reasoning, complex instruction understanding, and more creativity.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Models available via platform.openai.com&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;/th&gt; &#xA;   &lt;th&gt;Max tokens&lt;/th&gt; &#xA;   &lt;th&gt;Training data (pre-training)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gpt-4-0314&lt;/td&gt; &#xA;   &lt;td&gt;8192&lt;/td&gt; &#xA;   &lt;td&gt;Up to Sep 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gpt-4-32k-0314&lt;/td&gt; &#xA;   &lt;td&gt;32768&lt;/td&gt; &#xA;   &lt;td&gt;Up to Sep 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gpt-3.5-turbo-0301&lt;/td&gt; &#xA;   &lt;td&gt;4096&lt;/td&gt; &#xA;   &lt;td&gt;Up to Sep 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Vocabulary&lt;/h3&gt; &#xA;&lt;p&gt;The ChatGPT models employ a distinct vocabulary compared to their predecessors. The models use a &lt;code&gt;cl100k_base&lt;/code&gt; vocabulary with &lt;code&gt;100,000&lt;/code&gt; tokens, where each token encodes an average of &lt;code&gt;3.7&lt;/code&gt; characters in English. For a detailed analysis, see &lt;a href=&#34;https://raw.githubusercontent.com/saschaschramm/chatgpt/main/vocab.ipynb&#34;&gt;vocab.ipynb&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, these models employ the &lt;a href=&#34;https://github.com/openai/openai-python/raw/main/chatml.md&#34;&gt;Chat Markup Language&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;gpt-3.5-turbo&lt;/h3&gt; &#xA;&lt;p&gt;If we send the message &lt;code&gt;[{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;13+37=&#34;}]&lt;/code&gt; to the model, we get the following chat completion response:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;choices&#34;: [&#xA;    {&#xA;      &#34;finish_reason&#34;: &#34;stop&#34;,&#xA;      &#34;index&#34;: 0,&#xA;      &#34;message&#34;: {&#xA;        &#34;content&#34;: &#34;50&#34;,&#xA;        &#34;role&#34;: &#34;assistant&#34;&#xA;      }&#xA;    }&#xA;  ],&#xA;  &#34;created&#34;: 123,&#xA;  &#34;id&#34;: &#34;chatcmpl-XXX&#34;,&#xA;  &#34;model&#34;: &#34;gpt-3.5-turbo-0301&#34;,&#xA;  &#34;object&#34;: &#34;chat.completion&#34;,&#xA;  &#34;usage&#34;: {&#xA;    &#34;completion_tokens&#34;: 1,&#xA;    &#34;prompt_tokens&#34;: 12,&#xA;    &#34;total_tokens&#34;: 13&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The number of prompt tokens and completion tokens are computed as follows (see &lt;a href=&#34;https://github.com/openai/openai-cookbook/raw/main/examples/How_to_count_tokens_with_tiktoken.ipynb&#34;&gt;OpenAI-Cookbook&lt;/a&gt; for details):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;prompt_tokens = [&#39;&amp;lt;|im_start|&amp;gt;&#39;, &#39;user&#39;, &#39;\n&#39;, &#39;13&#39;, &#39;+&#39;, &#39;37&#39;, &#39;=&#39;, &#39;&amp;lt;|im_end|&amp;gt;&#39;, &#39;\n&#39;, &#39;&amp;lt;|im_start|&amp;gt;&#39;, &#39;assistant&#39;,  &#39;&amp;lt;|message|&amp;gt;&#39;]&#xA;# len(tokens) is 12&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;completion_tokens = [&#39;50&#39;]&#xA;# len(tokens) is 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;gpt-4&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;gpt-4&lt;/code&gt; model returns a different number of prompt tokens compared to &lt;code&gt;gpt-3.5-turbo&lt;/code&gt;. If we send the message &lt;code&gt;[{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;13+37=&#34;}]&lt;/code&gt; to the model, it returns the following chat completion response:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;choices&#34;: [&#xA;    {&#xA;      &#34;finish_reason&#34;: &#34;stop&#34;,&#xA;      &#34;index&#34;: 0,&#xA;      &#34;message&#34;: {&#xA;        &#34;content&#34;: &#34;50&#34;,&#xA;        &#34;role&#34;: &#34;assistant&#34;&#xA;      }&#xA;    }&#xA;  ],&#xA;  &#34;created&#34;: 123,&#xA;  &#34;id&#34;: &#34;chatcmpl-XXX&#34;,&#xA;  &#34;model&#34;: &#34;gpt-4-0314&#34;,&#xA;  &#34;object&#34;: &#34;chat.completion&#34;,&#xA;  &#34;usage&#34;: {&#xA;    &#34;completion_tokens&#34;: 1,&#xA;    &#34;prompt_tokens&#34;: 11,&#xA;    &#34;total_tokens&#34;: 12&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;It&#39;s unclear why the model returns 11 prompt tokens instead of 12. Maybe there is no &lt;code&gt;\n&lt;/code&gt; after the role &lt;code&gt;user&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;We have evaluated the ChatGPT model &lt;code&gt;gpt-4-0314&lt;/code&gt; with the &lt;a href=&#34;https://github.com/openai/human-eval&#34;&gt;HumanEval&lt;/a&gt; dataset. Out of 164 programming problems, the model can solve &lt;code&gt;78.66%&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model name&lt;/th&gt; &#xA;   &lt;th&gt;Pass@1&lt;/th&gt; &#xA;   &lt;th&gt;Date&lt;/th&gt; &#xA;   &lt;th&gt;Comment&lt;/th&gt; &#xA;   &lt;th&gt;&amp;nbsp;Completions of evaluation run&lt;/th&gt; &#xA;   &lt;th&gt;Prompt&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;nbsp;gpt-4-0314&lt;/td&gt; &#xA;   &lt;td&gt;78.66%&lt;/td&gt; &#xA;   &lt;td&gt;2023-03-17&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://platform.openai.com/&#34;&gt;https://platform.openai.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/saschaschramm/chatgpt/main/2023-03-17-samples-gpt-4-0314.jsonl&#34;&gt;2023-03-17-samples-gpt-4-0314.jsonl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Complete the following code:\n{code}&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;nbsp;gpt-3.5-turbo-0301&lt;/td&gt; &#xA;   &lt;td&gt;74.39%&lt;/td&gt; &#xA;   &lt;td&gt;2023-04-24&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://platform.openai.com/&#34;&gt;https://platform.openai.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/saschaschramm/chatgpt/main/2023-04-24-samples-gpt-3.5-turbo-0301.jsonl&#34;&gt;2023-04-24-samples-gpt-3.5-turbo-0301.jsonl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Complete the following code. Use ```python to put the Python code in markdown quotes:\n{code}&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;nbsp;text-davinci-002-render-sha&lt;/td&gt; &#xA;   &lt;td&gt;70.12%&lt;/td&gt; &#xA;   &lt;td&gt;2023-02-19&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://chat.openai.com/&#34;&gt;https://chat.openai.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/saschaschramm/chatgpt/main/2023-02-19-samples-text-davinci-002-render-sha.jsonl&#34;&gt;2023-02-19-samples-text-davinci-002-render-sha.jsonl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;nbsp;text-davinci-002-render&lt;/td&gt; &#xA;   &lt;td&gt;56.10%&lt;/td&gt; &#xA;   &lt;td&gt;2022-12-03&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://chat.openai.com/&#34;&gt;https://chat.openai.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cushman-ml&lt;/td&gt; &#xA;   &lt;td&gt;56.10%&lt;/td&gt; &#xA;   &lt;td&gt;2022-10-23&lt;/td&gt; &#xA;   &lt;td&gt;Copilot&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;code-davinci-002&lt;/td&gt; &#xA;   &lt;td&gt;46.95%&lt;/td&gt; &#xA;   &lt;td&gt;2022-10-23&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://platform.openai.com/&#34;&gt;https://platform.openai.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;code-cushman-001&lt;/td&gt; &#xA;   &lt;td&gt;32.93%&lt;/td&gt; &#xA;   &lt;td&gt;2022-10-23&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://platform.openai.com/&#34;&gt;https://platform.openai.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>