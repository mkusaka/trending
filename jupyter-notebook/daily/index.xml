<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-07T01:39:52Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mshumer/gpt-prompt-engineer</title>
    <updated>2023-07-07T01:39:52Z</updated>
    <id>tag:github.com,2023-07-07:/mshumer/gpt-prompt-engineer</id>
    <link href="https://github.com/mshumer/gpt-prompt-engineer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gpt-prompt-engineer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/mattshumer_&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/mattshumer_?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://colab.research.google.com/github/mshumer/gpt-prompt-engineer/blob/main/gpt_prompt_engineer.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Prompt engineering is kind of like alchemy. There&#39;s no clear way to predict what will work best. It&#39;s all about experimenting until you find the right prompt. &lt;code&gt;gpt-prompt-engineer&lt;/code&gt; is a tool that takes this experimentation to a whole new level.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Simply input a description of your task and some test cases, and the system will generate, test, and rank a multitude of prompts to find the ones that perform the best.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Prompt Generation&lt;/strong&gt;: Using GPT-4 and GPT-3.5-Turbo, &lt;code&gt;gpt-prompt-engineer&lt;/code&gt; can generate a variety of possible prompts based on a provided use-case and test cases.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Prompt Testing&lt;/strong&gt;: The real magic happens after the generation. The system tests each prompt against all the test cases, comparing their performance and ranking them using an ELO rating system.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;1563&#34; alt=&#34;Screen Shot 2023-07-04 at 11 41 54 AM&#34; src=&#34;https://github.com/mshumer/gpt-prompt-engineer/assets/41550495/f8171cff-1703-40ca-b9fd-f0aa24d07110&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ELO Rating System&lt;/strong&gt;: Each prompt starts with an ELO rating of 1200. As they compete against each other in generating responses to the test cases, their ELO ratings change based on their performance. This way, you can easily see which prompts are the most effective.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Weights &amp;amp; Biases Logging&lt;/strong&gt;: Optional logging to &lt;a href=&#34;https://wandb.ai/site&#34;&gt;Weights &amp;amp; Biases&lt;/a&gt; of your configs such as temperature and max tokens, the system and user prompts for each part, the test cases used and the final ranked ELO rating for each candidate prompt. Set &lt;code&gt;use_wandb&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; to use.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/mshumer/gpt-prompt-engineer/blob/main/gpt_prompt_engineer.ipynb&#34;&gt;Open the notebook in Google Colab&lt;/a&gt; or in a local Jupyter notebook.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add your OpenAI API key to the line &lt;code&gt;openai.api_key = &#34;ADD YOUR KEY HERE&#34;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you have GPT-4 access, you&#39;re ready to move on. If not, change &lt;code&gt;CANDIDATE_MODEL=&#39;gpt-4&#39;&lt;/code&gt; to &lt;code&gt;CANDIDATE_MODEL=&#39;gpt-3.5-turbo&#39;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to Use&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Define your use-case and test cases. The use-case is a description of what you want the AI to do. Test cases are specific prompts that you would like the AI to respond to. For example:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;description = &#34;Given a prompt, generate a landing page headline.&#34; # this style of description tends to work well&#xA;&#xA;test_cases = [&#xA;    {&#xA;        &#39;prompt&#39;: &#39;Promoting an innovative new fitness app, Smartly&#39;,&#xA;    },&#xA;    {&#xA;        &#39;prompt&#39;: &#39;Why a vegan diet is beneficial for your health&#39;,&#xA;    },&#xA;    {&#xA;        &#39;prompt&#39;: &#39;Introducing a new online course on digital marketing&#39;,&#xA;    },&#xA;    {&#xA;        &#39;prompt&#39;: &#39;Launching a new line of eco-friendly clothing&#39;,&#xA;    },&#xA;    {&#xA;        &#39;prompt&#39;: &#39;Promoting a new travel blog focusing on budget travel&#39;,&#xA;    },&#xA;    {&#xA;        &#39;prompt&#39;: &#39;Advertising a new software for efficient project management&#39;,&#xA;    },&#xA;    {&#xA;        &#39;prompt&#39;: &#39;Introducing a new book on mastering Python programming&#39;,&#xA;    },&#xA;    {&#xA;        &#39;prompt&#39;: &#39;Promoting a new online platform for learning languages&#39;,&#xA;    },&#xA;    {&#xA;        &#39;prompt&#39;: &#39;Advertising a new service for personalized meal plans&#39;,&#xA;    },&#xA;    {&#xA;        &#39;prompt&#39;: &#39;Launching a new app for mental health and mindfulness&#39;,&#xA;    }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Choose how many prompts to generate. Keep in mind, this can get expensive if you generate many prompts. 10 is a good starting point.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Call &lt;code&gt;generate_optimal_prompt(description, test_cases, number_of_prompts)&lt;/code&gt; to generate a list of potential prompts, and test and rate their performance.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The final ELO ratings will be printed in a table, sorted in descending order. The higher the rating, the better the prompt.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;1074&#34; alt=&#34;Screen Shot 2023-07-04 at 11 48 45 AM&#34; src=&#34;https://github.com/mshumer/gpt-prompt-engineer/assets/41550495/324f90b8-c0ee-45fd-b219-6c44d9aa281b&#34;&gt; &#xA;&lt;h2&gt;Contributions are welcome! Some ideas:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;have a number of different system prompt generators that create different styles of prompts, to cover more ground (ex. examples, verbose, short, markdown, etc.)&lt;/li&gt; &#xA; &lt;li&gt;automatically generate the test cases&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is &lt;a href=&#34;https://github.com/your_username/your_repository/raw/master/LICENSE&#34;&gt;MIT&lt;/a&gt; licensed.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Matt Shumer - &lt;a href=&#34;https://twitter.com/mattshumer_&#34;&gt;@mattshumer_&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Project Link: &lt;a href=&#34;https://raw.githubusercontent.com/mshumer/gpt-prompt-engineer/main/url&#34;&gt;https://github.com/mshumer/gpt-prompt-engineer&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>samwit/llm-tutorials</title>
    <updated>2023-07-07T01:39:52Z</updated>
    <id>tag:github.com,2023-07-07:/samwit/llm-tutorials</id>
    <link href="https://github.com/samwit/llm-tutorials" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A set of LLM Tutorials from my youtube channel&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;llm-tutorials&lt;/h1&gt; &#xA;&lt;p&gt;A set of LLM Tutorials from my youtube channel &lt;a href=&#34;https://www.youtube.com/@samwitteveenai&#34;&gt;https://www.youtube.com/@samwitteveenai&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/generative-ai-docs</title>
    <updated>2023-07-07T01:39:52Z</updated>
    <id>tag:github.com,2023-07-07:/google/generative-ai-docs</id>
    <link href="https://github.com/google/generative-ai-docs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Documentation for Google&#39;s Generative AI developer site&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google Generative AI Documentation&lt;/h1&gt; &#xA;&lt;p&gt;These are the source files for the guide and tutorials on the &lt;a href=&#34;https://developers.generativeai.google/&#34;&gt;Generative AI developer site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To contribute to the site documentation, please read &lt;a href=&#34;https://raw.githubusercontent.com/google/generative-ai-docs/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To file an issue, please use the &lt;a href=&#34;https://github.com/google/generative-ai-docs/issues/new&#34;&gt;GitHub issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/generative-ai-docs/main/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>