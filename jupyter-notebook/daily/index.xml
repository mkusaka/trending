<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-09T01:32:19Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>NVlabs/sionna</title>
    <updated>2025-04-09T01:32:19Z</updated>
    <id>tag:github.com,2025-04-09:/NVlabs/sionna</id>
    <link href="https://github.com/NVlabs/sionna" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sionna: An Open-Source Library for Research on Communication Systems&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sionna: An Open-Source Library for Research on Communication Systems&lt;/h1&gt; &#xA;&lt;p&gt;Sionna™ is an open-source Python-based library for research on communication systems.&lt;/p&gt; &#xA;&lt;p&gt;The official documentation can be found &lt;a href=&#34;https://nvlabs.github.io/sionna/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is composed of the following packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://nvlabs.github.io/sionna/rt/index.html&#34;&gt;Sionna RT&lt;/a&gt; - A lightning-fast stand-alone ray tracer for radio propagation modeling&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://nvlabs.github.io/sionna/phy/index.html&#34;&gt;Sionna PHY&lt;/a&gt; - A link-level simulator for wireless and optical communication systems&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://nvlabs.github.io/sionna/sys/index.html&#34;&gt;Sionna SYS&lt;/a&gt; - A system-level simulator based on physical-layer abstraction&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Sionna PHY and Sionna SYS require &lt;a href=&#34;https://www.python.org/&#34;&gt;Python 3.8-3.12&lt;/a&gt; and &lt;a href=&#34;https://www.tensorflow.org/install&#34;&gt;TensorFlow 2.14-2.19&lt;/a&gt;. We recommend Ubuntu 24.04. Earlier versions of TensorFlow may still work but are not recommended. We refer to the &lt;a href=&#34;https://www.tensorflow.org/install/gpu&#34;&gt;TensorFlow GPU support tutorial&lt;/a&gt; for GPU support and the required driver setup.&lt;/p&gt; &#xA;&lt;p&gt;Sionna RT has the same requirements as &lt;a href=&#34;https://github.com/mitsuba-renderer/mitsuba3&#34;&gt;Mitsuba 3&lt;/a&gt; and we refer to its &lt;a href=&#34;https://mitsuba.readthedocs.io/en/stable/&#34;&gt;installation guide&lt;/a&gt; for further information. To run Sionna RT on CPU, &lt;a href=&#34;https://llvm.org&#34;&gt;LLVM&lt;/a&gt; is required by &lt;a href=&#34;https://drjit.readthedocs.io/en/stable/&#34;&gt;Dr.Jit&lt;/a&gt;. Please check the &lt;a href=&#34;https://drjit.readthedocs.io/en/latest/what.html#backends&#34;&gt;installation instructions for the LLVM backend&lt;/a&gt;. The source code of Sionna RT is located in a separate &lt;a href=&#34;https://github.com/NVlabs/sionna-rt&#34;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to run the tutorial notebooks on your machine, you also need &lt;a href=&#34;https://jupyter.org/&#34;&gt;JupyterLab&lt;/a&gt;. You can alternatively test them on &lt;a href=&#34;https://colab.research.google.com/&#34;&gt;Google Colab&lt;/a&gt;. Although not necessary, we recommend running Sionna in a &lt;a href=&#34;https://www.docker.com&#34;&gt;Docker container&lt;/a&gt; and/or &lt;a href=&#34;https://docs.python.org/3/library/venv.html&#34;&gt;Python virtual enviroment&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation via pip&lt;/h2&gt; &#xA;&lt;p&gt;The recommended way to install Sionna is via pip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install sionna&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to install only Sionna RT, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install sionna-rt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can install Sionna without the RT package via&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install sionna-no-rt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation from source&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository with all submodules: &lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/NVlabs/sionna&#xA;&lt;/code&gt;&lt;/pre&gt; If you have already cloned the repository but forgot to set the &lt;code&gt;--recursive&lt;/code&gt; flag, you can correct this via: &lt;pre&gt;&lt;code&gt;git submodule update --init --recursive --remote&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install Sionna (including Sionna RT) by running the following command from within the repository&#39;s root folder: &lt;pre&gt;&lt;code&gt;pip install ext/sionna-rt/ .&#xA;pip install .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;First, you need to install the test requirements by executing the following command from the repository&#39;s root directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install &#39;.[test]&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The unit tests can then be executed by running &lt;code&gt;pytest&lt;/code&gt; from within the &lt;code&gt;test&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;Building the Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Install the requirements for building the documentation by running the following command from the repository&#39;s root directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install &#39;.[doc]&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You might need to install &lt;a href=&#34;https://pandoc.org&#34;&gt;pandoc&lt;/a&gt; manually.&lt;/p&gt; &#xA;&lt;p&gt;You can then build the documentation by executing &lt;code&gt;make html&lt;/code&gt; from within the &lt;code&gt;doc&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;The documentation can then be served by any web server, e.g.,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -m http.server --dir build/html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;For Developers&lt;/h2&gt; &#xA;&lt;p&gt;Development requirements can be installed by executing from the repository&#39;s root directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install &#39;.[dev]&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Linting of the code can be achieved by running &lt;code&gt;pylint src/&lt;/code&gt; from the repository&#39;s root directory.&lt;/p&gt; &#xA;&lt;h2&gt;License and Citation&lt;/h2&gt; &#xA;&lt;p&gt;Sionna is Apache-2.0 licensed, as found in the &lt;a href=&#34;https://github.com/nvlabs/sionna/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;If you use this software, please cite it as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@software{sionna,&#xA; title = {Sionna},&#xA; author = {Hoydis, Jakob and Cammerer, Sebastian and {Ait Aoudia}, Fayçal and Nimier-David, Merlin and Maggi, Lorenzo and Marcus, Guillermo and Vem, Avinash and Keller, Alexander},&#xA; note = {https://nvlabs.github.io/sionna/},&#xA; year = {2022},&#xA; version = {1.0.2}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>PacktPublishing/Python-for-Algorithmic-Trading-Cookbook</title>
    <updated>2025-04-09T01:32:19Z</updated>
    <id>tag:github.com,2025-04-09:/PacktPublishing/Python-for-Algorithmic-Trading-Cookbook</id>
    <link href="https://github.com/PacktPublishing/Python-for-Algorithmic-Trading-Cookbook" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Python for Algorithmic Trading Cookbook, published by Packt&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Python for Algorithmic Trading Cookbook&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&lt;https://www.packtpub.com/en-in/product/python-for-algorithmic-trading-cookbook-9781835084700&#34;&gt;&lt;img src=&#34;https://content.packt.com/_/image/xxlarge/B21323/cover_image_large.jpg&#34; alt=&#34;Python for Algorithmic Trading Cookbook&#34; height=&#34;256px&#34; align=&#34;right&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the code repository for &lt;a href=&#34;https://amzn.to/4706Exu&#34;&gt;Python for Algorithmic Trading Cookbook&lt;/a&gt;, published by Packt.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Recipes for designing, building, and deploying algorithmic trading strategies with Python&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is this book about?&lt;/h2&gt; &#xA;&lt;p&gt;Explore Python code recipes to use market data for designing and deploying algorithmic trading strategies. By following step-by-step instructions, you’ll be proficient in trading concepts and have hands-on experience in a live trading environment.&lt;/p&gt; &#xA;&lt;p&gt;This book covers the following exciting features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Acquire and process freely available market data with the OpenBB Platform&lt;/li&gt; &#xA; &lt;li&gt;Build a research environment and populate it with financial market data&lt;/li&gt; &#xA; &lt;li&gt;Use machine learning to identify alpha factors and engineer them into signals&lt;/li&gt; &#xA; &lt;li&gt;Use VectorBT to find strategy parameters using walk-forward optimization&lt;/li&gt; &#xA; &lt;li&gt;Build production-ready backtests with Zipline Reloaded and evaluate factor performance&lt;/li&gt; &#xA; &lt;li&gt;Set up the code framework to connect and send an order to Interactive Brokers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you feel this book is for you, get your &lt;a href=&#34;https://amzn.to/4706Exu&#34;&gt;copy&lt;/a&gt; today!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.packtpub.com/?utm_source=github&amp;amp;utm_medium=banner&amp;amp;utm_campaign=GitHubBanner&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PacktPublishing/GitHub/master/GitHub.png&#34; alt=&#34;https://www.packtpub.com/&#34; border=&#34;5&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Instructions and Navigations&lt;/h2&gt; &#xA;&lt;p&gt;All of the code is organized into folders.&lt;/p&gt; &#xA;&lt;p&gt;The code will look like the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import datetime as dt&#xA;import pandas as pd&#xA;from openbb_terminal.sdk import openbb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Following is what you need for this book:&lt;/strong&gt; Python for Algorithmic Trading Cookbook equips traders, investors, and Python developers with code to design, backtest, and deploy algorithmic trading strategies. You should have experience investing in the stock market, knowledge of Python data structures, and a basic understanding of using Python libraries like pandas. This book is also ideal for individuals with Python experience who are already active in the market or are aspiring to be.&lt;/p&gt; &#xA;&lt;p&gt;With the following software and hardware list you can run all code files present in the book (Chapter 1-13).&lt;/p&gt; &#xA;&lt;h3&gt;Software and Hardware List&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Chapter&lt;/th&gt; &#xA;   &lt;th&gt;Software required&lt;/th&gt; &#xA;   &lt;th&gt;OS required&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1-13&lt;/td&gt; &#xA;   &lt;td&gt;Python version 3.10&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Mac OS X, and Linux (Any)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1-13&lt;/td&gt; &#xA;   &lt;td&gt;PostgreSQL&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Mac OS X, and Linux (Any)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1-13&lt;/td&gt; &#xA;   &lt;td&gt;OpenBB Platform version 4+&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Mac OS X, and Linux (Any)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1-13&lt;/td&gt; &#xA;   &lt;td&gt;pandas version 2+&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Mac OS X, and Linux (Any)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Errata&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Page 34 (Code block snippet under section 5): &lt;strong&gt;asset_2.volume.mean()&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;asset_2.volume[asset_2.index[5:10]].mean().astype(int)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Page 34 (second code block snippet under section 5): &lt;strong&gt;asset_2.iat[10, 5]&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;asset_2.iat[10,4]&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Page 34 (line 3 which is after second code block snippet): &lt;strong&gt;The result is a scalar value representing the mean volume between indexes 5 and 10.&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;The result is a scalar value corresponding to the mean of the &#39;volume&#39; column, assigned to the cell located at row 10 and column 4 (which corresponds to the &#39;volume&#39; column).&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get to Know the Author&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Jason Strimpel&lt;/strong&gt; is the founder of &lt;a href=&#34;https://www.pyquantnews.com/&#34;&gt;PyQuant News&lt;/a&gt; and co-founder of &lt;a href=&#34;https://www.tradeblotter.io/&#34;&gt;Trade Blotter&lt;/a&gt;, with a career spanning over 20 years in trading, risk management, and data science. He previously traded for a Chicago-based hedge fund, served as a risk manager at JPMorgan, and managed production risk technology for an energy derivatives trading firm in London. In Singapore, Jason served as the APAC CIO for an agricultural trading firm and built the data science team for a global metals trading firm. He holds degrees in finance and economics and a Master’s in quantitative finance from the Illinois Institute of Technology. His career has taken him across America, Europe, and Asia. Jason shares his expertise through the &lt;a href=&#34;https://www.pyquantnews.com/subscribe-to-the-pyquant-newsletter&#34;&gt;PyQuant Newsletter&lt;/a&gt;, social media, and teaches the course &lt;a href=&#34;https://www.pyquantnews.com/getting-started-with-python-for-quant-finance&#34;&gt;Getting Started With Python for Quant Finance&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>