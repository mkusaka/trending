<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-23T01:33:05Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>eureka-research/Eureka</title>
    <updated>2023-10-23T01:33:05Z</updated>
    <id>tag:github.com,2023-10-23:/eureka-research/Eureka</id>
    <link href="https://github.com/eureka-research/Eureka" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official Repository for &#34;Eureka: Human-Level Reward Design via Coding Large Language Models&#34;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Eureka: Human-Level Reward Design via Coding Large Language Models&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://eureka-research.github.io&#34;&gt;[Website]&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/abs/2310.12931&#34;&gt;[arXiv]&lt;/a&gt; &lt;a href=&#34;https://eureka-research.github.io/assets/eureka_paper.pdf&#34;&gt;[PDF]&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/eureka-research/Eureka&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-3.8-blue.svg?sanitize=true&#34; alt=&#34;Python Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pytorch.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Framework-PyTorch-red.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/eureka-research/Eureka/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/eureka-research/Eureka&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/eureka-research/Eureka/assets/21993118/1abb960d-321a-4de9-b311-113b5fc53d4a&#34;&gt;https://github.com/eureka-research/Eureka/assets/21993118/1abb960d-321a-4de9-b311-113b5fc53d4a&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eureka-research/Eureka/main/images/eureka.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Large Language Models (LLMs) have excelled as high-level semantic planners for sequential decision-making tasks. However, harnessing them to learn complex low-level manipulation tasks, such as dexterous pen spinning, remains an open problem. We bridge this fundamental gap and present Eureka, a &lt;strong&gt;human-level&lt;/strong&gt; reward design algorithm powered by LLMs. Eureka exploits the remarkable zero-shot generation, code-writing, and in-context improvement capabilities of state-of-the-art LLMs, such as GPT-4, to perform in-context evolutionary optimization over reward code. The resulting rewards can then be used to acquire complex skills via reinforcement learning. Eureka generates reward functions that outperform expert human-engineered rewards without any task-specific prompting or pre-defined reward templates. In a diverse suite of 29 open-source RL environments that include 10 distinct robot morphologies, Eureka outperforms human expert on &lt;strong&gt;83%&lt;/strong&gt; of the tasks leading to an average normalized improvement of &lt;strong&gt;52%&lt;/strong&gt;. The generality of Eureka also enables a new gradient-free approach to reinforcement learning from human feedback (RLHF), readily incorporating human oversight to improve the quality and the safety of the generated rewards in context. Finally, using Eureka rewards in a curriculum learning setting, we demonstrate for the first time a simulated five-finger Shadow Hand capable of performing pen spinning tricks, adeptly manipulating a pen in circles at human speed.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Eureka requires Python ≥ 3.8. We have tested on Ubuntu 20.04 and 22.04.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new conda environment with:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;conda create -n eureka python=3.8&#xA;conda activate eureka&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install IsaacGym (tested with &lt;code&gt;Preview Release 4/4&lt;/code&gt;). Follow the &lt;a href=&#34;https://developer.nvidia.com/isaac-gym&#34;&gt;instruction&lt;/a&gt; to download the package.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;tar -xvf IsaacGym_Preview_4_Package.tar.gz&#xA;cd isaacgym/python&#xA;pip install -e .&#xA;(test installation) python examples/joint_monkey.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Install Eureka&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/eureka-research/Eureka.git&#xA;cd Eureka; pip install -e .&#xA;cd isaacgymenvs; pip install -e .&#xA;cd ../rl_games; pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Eureka currently uses OpenAI API for language model queries. You need to have an OpenAI API key to use Eureka &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;here&lt;/a&gt;/. Then, set the environment variable in your terminal&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;export OPENAI_API_KEY= &#34;YOUR_API_KEY&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;Navigate to the &lt;code&gt;eureka&lt;/code&gt; directory and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python eureka.py env={environment} iteration={num_iterations} sample={num_samples}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;{environment}&lt;/code&gt; is the task to perform. Options are listed in &lt;code&gt;eureka/cfg/env&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;{num_samples}&lt;/code&gt; is the number of reward samples to generate per iteration. Default value is &lt;code&gt;16&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;{num_iterations}&lt;/code&gt; is the number of Eureka iterations to run. Default value is &lt;code&gt;5&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Below are some example commands to try out Eureka:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python eureka.py env=shadow_hand sample=4 iteration=2 model=gpt-4-0314&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;python eureka.py env=humanoid sample=16 iteration=5 model=gpt-3.5-turbo-16k-0613&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Each run will create a timestamp folder in &lt;code&gt;eureka/outputs&lt;/code&gt; that saves the Eureka log as well as all intermediate reward functions and associated policies.&lt;/p&gt; &#xA;&lt;p&gt;Other command line parameters can be found in &lt;code&gt;eureka/cfg/config.yaml&lt;/code&gt;. The list of supported environments can be found in &lt;code&gt;eureka/cfg/env&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Eureka Pen Spinning Demo&lt;/h1&gt; &#xA;&lt;p&gt;We have released Eureka pen spinning policy in &lt;code&gt;isaacgymenvs/isaacgymenvs/checkpoints&lt;/code&gt;. Try visualizing it with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd isaacgymenvs/isaacgymenvs&#xA;python train.py test=True headless=False force_render=True task=ShadowHandSpin checkpoint=checkpoints/EurekaPenSpinning.pth&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that this script use the default Isaac Gym renderer and not the Omniverse rendering in the paper videos.&lt;/p&gt; &#xA;&lt;h1&gt;Running Eureka on a New Environment&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a new IsaacGym environment; instructions can be found in &lt;a href=&#34;https://raw.githubusercontent.com/eureka-research/Eureka/main/isaacgymenvs/docs/framework.md&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Verify that standard RL works for your new environment.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd isaacgymenvs/isaacgymenvs&#xA;python train.py task=YOUR_NEW_TASK&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Create a new yaml file &lt;code&gt;your_new_task.yaml&lt;/code&gt; in &lt;code&gt;eureka/cfg/env&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;env_name: your_new_task&#xA;task: YOUR_NEW_TASK &#xA;description: ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Construct the raw environment code that will serve as context for Eureka as well as the skeleton environment code on which the Eureka reward will be appended to:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd eureka/utils&#xA;python prune_env.py your_new_task&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Try out Eureka!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;python eureka.py env=your_new_task&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Acknowledgement&lt;/h1&gt; &#xA;&lt;p&gt;We thank the following open-sourced projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Our environments are from &lt;a href=&#34;https://github.com/NVIDIA-Omniverse/IsaacGymEnvs&#34;&gt;IsaacGym&lt;/a&gt; and &lt;a href=&#34;https://github.com/PKU-MARL/DexterousHands/&#34;&gt;DexterousHands&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Our RL training code is based on &lt;a href=&#34;https://github.com/Denys88/rl_games&#34;&gt;rl_games&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This codebase is released under &lt;a href=&#34;https://raw.githubusercontent.com/eureka-research/Eureka/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Citation&lt;/h1&gt; &#xA;&lt;p&gt;If you find our work useful, please consider citing us!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{ma2023eureka,&#xA;  title   = {Eureka: Human-Level Reward Design via Coding Large Language Models},&#xA;  author  = {Yecheng Jason Ma and William Liang and Guanzhi Wang and De-An Huang and Osbert Bastani and Dinesh Jayaraman and Yuke Zhu and Linxi Fan and Anima Anandkumar},&#xA;  year    = {2023},&#xA;  journal = {arXiv preprint arXiv: Arxiv-2310.12931}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Disclaimer: This project is strictly for research purposes, and not an official product from NVIDIA.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kaal-coder/hacktoberfest2023</title>
    <updated>2023-10-23T01:33:05Z</updated>
    <id>tag:github.com,2023-10-23:/kaal-coder/hacktoberfest2023</id>
    <link href="https://github.com/kaal-coder/hacktoberfest2023" rel="alternate"></link>
    <summary type="html">&lt;p&gt;HacktobeFest 2023 is live. Make your 4 Pull Request here ! Add your own projects, UI/UX Design, Blogs or improve the projects in the repository. Make sure to add your own work.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt; Hacktober-2023 &lt;/h1&gt; 🚀 This repository is for collecting the different projects made by people who wants to contribute in open source. &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/kaal-coder/HacktoberFest-For-All&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&amp;amp;logo=github&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kaal-coder/HacktoberFest-For-All022&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Open%20Source-%F0%9F%A4%8D-Green&#34; alt=&#34;Open Source Love&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kaal-coder/HacktoberFest-For-All&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?label=Contributions&amp;amp;message=Welcome&amp;amp;color=0059b3&#34; alt=&#34;contributions welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kaal-coder/HacktoberFest-For-All&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?label=Hacktoberfest-2023&amp;amp;message=accepted&amp;amp;color=red&#34; alt=&#34;Hacktoberfest-2022&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Anyone can add any type of valid html-css web page depends on you.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can add any small projects you have made.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can add programs too, in any programming language, but your program must be something different or unique.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Do not just re-edit the file or make some small changes this kind of PRs will not be accepted.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Do not add anyone else&#39;s work in this repository. It will leads to failure of your pull request.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;code&gt;Steps To Generate PR(Pull Request)&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(Star ⭐ &amp;amp; Fork 🍽️) this repository. - Must Step&lt;/li&gt; &#xA; &lt;li&gt;Follow &lt;a href=&#34;https://www.github.com/kaal-coder&#34;&gt;kaal-coder&lt;/a&gt; get it merged fast.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Fork this repository&lt;/h1&gt; &#xA;&lt;p&gt;Fork this repository by clicking on the fork button on the top of this page. This will create a copy of this repository in your account.&lt;/p&gt; &#xA;&lt;h1&gt;Clone the repository&lt;/h1&gt; &#xA;&lt;p&gt;Now clone the forked repository to your system. Go to your GitHub account, open the forked repository, click on the code button and then clone the repository.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;if you want to use the terminal, use the following commands&lt;/em&gt; after you fork the repository , open the terminal type the given command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/{your-github-username}/Hacktober-2022.git&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Create a branch&lt;/h1&gt; &#xA;&lt;p&gt;Then create a branch on your local repository to solve a problem.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;terminal commands&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git checkout -b your_new_branch_name&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Add &amp;amp; commit&lt;/h1&gt; &#xA;&lt;p&gt;Add your changes(folder) to that branch. &lt;br&gt; Make necessary changes and commit those changes. &lt;em&gt;terminal commands&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git add .&#xA;git commit -m &#34;your-commit-message&#34;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Push changes to GitHub&lt;/h1&gt; &#xA;&lt;p&gt;Finally push your local repository to remote repository Compare &amp;amp; Submit a Pull Request&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;terminal commands&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git push origin &amp;lt;branch-name&amp;gt;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then go to your repository on GitHub, you&#39;ll see a Compare &amp;amp; pull request button. Click on that button.&lt;/p&gt; &#xA;&lt;p&gt;Now submit the pull request.&lt;/p&gt; &#xA;&lt;h3&gt;Don&#39;t forget to read the contributing rules mentioned below to be successfully merged your PR and get rewards!!!&lt;/h3&gt; &#xA;&lt;p&gt;🏹 Visit &lt;a href=&#34;https://raw.githubusercontent.com/kaal-coder/hacktoberfest2023/main/hacktoberfest.com&#34; target=&#34;_blank&#34;&gt;Hacktoberfest&lt;/a&gt; to get more information about Hacktoberfest 2022!!!&lt;/p&gt; &#xA;&lt;p&gt;✈ Visit &lt;a href=&#34;https://hacktoberfest-swag.com&#34; target=&#34;_blank&#34;&gt;Hacktoberfest-swag&lt;/a&gt; to know more about your swags and rewards!!!&lt;/p&gt; &#xA;&lt;h1&gt;🛡Rules to Contribute&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;⚓Star this repo to get latest updates. If you had fun while contributing to this project, then don&#39;t forget to give this project a star ⭐.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;⚓Give your file a proper extension according to language. Ex. .py, .java, .js. html etc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;⚓Name your file related to your topic.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;⚓Put your files in correct folder like .py in Python, .js in Javascript etc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;⚓You can follow ME😁.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;p&gt;All contributors who have followed the rules to contribute get successfully merged PR. Don&#39;t forget to follow!!!&lt;/p&gt; &#xA;&lt;p&gt;Have some patience to get successfully merged PR. Keep Patience!!!&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re happy to merge valid pull requests to this repository !&lt;/p&gt; &#xA;&lt;h2&gt;+ Follow Me : } Quick Approval of Pull Request&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;&#39;&#39;&#39;&#xA;To get approval of the pull request much quicker (`Follow Me`)🚀&#xA;&#39;&#39;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a align=&#34;center&#34; href=&#34;https://www.linkedin.com/in/kaushik-lakhani-08012001/&#34;&gt;&lt;kbd&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/85815858?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;/kbd&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kaushik Lakhani&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;For doubts contact kaushik.lakhani123@gmail.com&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Happy coding fellas!!💕✨&lt;/h3&gt;</summary>
  </entry>
  <entry>
    <title>SuriyaaVijay/HacktoberFest2023</title>
    <updated>2023-10-23T01:33:05Z</updated>
    <id>tag:github.com,2023-10-23:/SuriyaaVijay/HacktoberFest2023</id>
    <link href="https://github.com/SuriyaaVijay/HacktoberFest2023" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Make your first PR! Add your profile, a blog, or any program under any language (hello-world program to anything) or update the existing one. Just make sure to add the file under the correct directory. Happy open source contributing!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HacktoberFest2023&lt;/h1&gt; &#xA;&lt;h2&gt;Star and fork this repository to start contributing !!&lt;/h2&gt; &#xA;&lt;p&gt;Make your first PR! Add your profile, a blog, or any program under any language (hello-world program to anything) or update the existing one. Just make sure to add the file under the correct directory. Happy open source contributing!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hacktoberfest.digitalocean.com/&#34;&gt;https://hacktoberfest.digitalocean.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;Submit your pull request here for HacktoberFest2023 in any language you prefer, if language folder not present, create one as a part of it, after script add your name and GitHub profile into Contributors.md file.&lt;/p&gt; &#xA;&lt;p&gt;Hacktoberfest is a month long virtual festival event to celebrate open source contributions presented by DigitalOcean and DEV. It is the easiest way to get into open source!&lt;/p&gt; &#xA;&lt;h1&gt;Event details&lt;/h1&gt; &#xA;&lt;p&gt;Hacktoberfest® is open to everyone in our global community. Whether you’re a developer, student learning to code, event host, or company of any size, you can help drive growth of open source and make positive contributions to an ever-growing community. All backgrounds and skill levels are encouraged to complete the challenge.&lt;/p&gt; &#xA;&lt;p&gt;Hacktoberfest is open to everyone in our global community! Pull requests can be made in any GitHub-hosted repositories/projects. Sign up anytime between October 1 and October 31.&lt;/p&gt; &#xA;&lt;h1&gt;Rules&lt;/h1&gt; &#xA;&lt;p&gt;To qualify for the official limited edition Hacktoberfest shirt, you must register and make four pull requests (PRs) between October 1-31 (in any time zone). PRs can be made to any public repo on GitHub, not only the ones with issues labeled Hacktoberfest. If a maintainer reports your pull request as spam or behavior not in line with the project’s code of conduct, you will be ineligible to participate. This year, the first 70,000 participants who successfully complete the challenge will earn a T-shirt.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add your name to the CONTRIBUTORS.md file using following model&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;Name: [YOUR NAME](Github Link)&#xA;Place: city you belong to add your country flag &#xA;About: Short Intro (Optional)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Instructions:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Make sure you have a GitHub account. In case you don&#39;t have one, you can create your account by visiting &lt;a href=&#34;https://github.com/&#34;&gt;https://github.com/&lt;/a&gt; and clicking on &lt;code&gt;Sign up&lt;/code&gt; option at the top right corner.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;1. Register yourself for Hacktoberfest&lt;/h3&gt; &#xA;&lt;h6&gt;Link to register: &lt;a href=&#34;https://hacktoberfest.digitalocean.com/&#34;&gt;https://hacktoberfest.digitalocean.com/&lt;/a&gt;&lt;/h6&gt; &#xA;&lt;p&gt;Click on &#34;Start Hacking&#34; and add your GitHub account.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/bajajvinamr/HacktoberFest2020/raw/master/1.png&#34; alt=&#34;Screenshot-HFST&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2. Star and Fork this Repository&lt;/h3&gt; &#xA;&lt;h6&gt;You can star and fork this repository on GitHub by navigating at the top of this repository.&lt;/h6&gt; &#xA;&lt;p&gt;GitHub repository URLs will reference both the username associated with the owner of the repository, as well as the repository name. For example, acmbvp is the owner of the Hacktoberfest repository, so the GitHub URL for this project is:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SuriyaaVijay/HacktoberFest2023&#34;&gt;https://github.com/SuriyaaVijay/HacktoberFest2023&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;When you’re on the main page of a repository, you’ll see a button to &#34;Star&#34; and “Fork” the repository on the upper right-hand side of the page, underneath your user icon.&lt;/p&gt; &#xA;&lt;h3&gt;3. Clone the Repository&lt;/h3&gt; &#xA;&lt;p&gt;To make your own local copy of the repository you would like to contribute to, let’s first open up a terminal window.&lt;/p&gt; &#xA;&lt;p&gt;We’ll use the &lt;code&gt;git clone&lt;/code&gt; command along with the URL that points to your fork of the repository.&lt;/p&gt; &#xA;&lt;p&gt;This URL will be similar to the URL above, except now it will end with &lt;code&gt;.git.&lt;/code&gt; In the cloud_haiku example above, the URL will look like this: &lt;a href=&#34;https://github.com/your-username/HacktoberFest2023.git&#34;&gt;https://github.com/your-username/HacktoberFest2023.git&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can alternatively copy the URL by using the green “Clone or download” button from your repository page that you just forked from the original repository page. Once you click the button, you’ll be able to copy the URL by clicking the binder button next to the URL:&lt;/p&gt; &#xA;&lt;p&gt;Once we have the URL, we’re ready to clone the repository. To do this, we’ll combine the git clone command with the repository URL from the command line in a terminal window:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;git clone https://github.com/your-username/HacktoberFest2023.git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;4. Create a New Branch&lt;/h3&gt; &#xA;&lt;p&gt;To create your branch, from your terminal window, change your directory so that you are working in the directory of the repository. Be sure to use the actual name of the repository (i.e. Hacktoberfest) to switch into that directory.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;cd Hacktoberfest&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Now, we’ll create our new branch with the git branch command. Make sure you name it descriptively so that others working on the project understand what you are working on.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/bajajvinamr/HacktoberFest2020/raw/master/6.png&#34; alt=&#34;screenshot 154&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;git branch new-branch&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Now that our new branch is created, we can switch to make sure that we are working on that branch by using the git checkout command:&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;git checkout new-branch&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Once you enter the git &lt;code&gt;checkout&lt;/code&gt; command, you will receive the following output:&lt;/p&gt; &#xA;&lt;h6&gt;&lt;code&gt;Output:&lt;/code&gt;&lt;/h6&gt; &#xA;&lt;h5&gt;&lt;code&gt;Switched to branch &#39;new-branch&#39; &lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;At this point, you can now modify existing files or add new files to the project on your own branch.&lt;/p&gt; &#xA;&lt;h4&gt;Make Changes Locally&lt;/h4&gt; &#xA;&lt;p&gt;Once you have modified existing files or added new files to the project, you can add them to your local repository, which you can do with the git add command. Let’s add the -A flag to add all changes that we have made:&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;git add -A&lt;/code&gt; or &lt;code&gt;git add .&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Next, we’ll want to record the changes that we made to the repository with the git commit command.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;The commit message is an important aspect of your code contribution; it helps the other contributors fully understand the change you have made, why you made it, and how significant it is. Additionally, commit messages provide a historical record of the changes for the project at large, helping future contributors along the way.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have a very short message, you can record that with the -m flag and the message in quotes:&lt;/p&gt; &#xA;&lt;h6&gt;&lt;code&gt;Example:&lt;/code&gt;&lt;/h6&gt; &#xA;&lt;h5&gt;&lt;code&gt;git commit -m &#34;Updated Readme.md&#34;&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;h6&gt;At this point you can use the git push command to push the changes to the current branch of your forked repository:&lt;/h6&gt; &#xA;&lt;h6&gt;&lt;code&gt; Example:&lt;/code&gt;&lt;/h6&gt; &#xA;&lt;h5&gt;&lt;code&gt;git push --set-upstream origin new-branch&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;h3&gt;5. Update Local Repository&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;While working on a project alongside other contributors, it is important for you to keep your local repository up-to-date with the project as you don’t want to make a pull request for code that will cause conflicts. To keep your local copy of the code base updated, you’ll need to sync changes.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;We’ll first go over configuring a remote for the fork, then syncing the fork.&lt;/p&gt; &#xA;&lt;h3&gt;6. Configure a Remote for the Fork&lt;/h3&gt; &#xA;&lt;p&gt;Next up, you’ll have to specify a new remote upstream repository for us to sync with the fork. This will be the original repository that you forked from. you’ll have to do this with the git remote add command.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;git remote add upstream https://github.com/SuriyaaVijay/HacktoberFest2023.git&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;In this example, // upstream // is the shortname we have supplied for the remote repository since in terms of Git, “upstream” refers to the repository that you cloned from. If you want to add a remote pointer to the repository of a collaborator, you may want to provide that collaborator’s username or a shortened nickname for the shortname.&lt;/p&gt; &#xA;&lt;h3&gt;7. Sync the Fork&lt;/h3&gt; &#xA;&lt;p&gt;Once you have configured a remote that references the upstream and original repository on GitHub, you are ready to sync your fork of the repository to keep it up-to-date. To sync your fork, from the directory of your local repository in a terminal window, you’ll have to use the // git fetch // command to fetch the branches along with their respective commits from the upstream repository. Since you used the shortname “upstream” to refer to the upstream repository, you’ll have to pass that to the command:&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;git fetch upstream&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Switch to the local master branch of our repository:&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;git checkout master&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Now merge any changes that were made in the original repository’s master branch, that you will access through your local upstream/master branch, with your local master branch:&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;git merge upstream/master&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;h3&gt;8. Create Pull Request&lt;/h3&gt; &#xA;&lt;p&gt;At this point, you are ready to make a pull request to the original repository.&lt;/p&gt; &#xA;&lt;p&gt;Navigate to your forked repository, and press the “New pull request” button on your left-hand side of your Repo page.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors of &lt;code&gt;Hacktoberfest 2023&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/SuriyaaVijay/HacktoberFest2023/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=SuriyaaVijay/Hacktoberfest2023&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; # Hurray! You just got closer to completing your Hacktoberfest challenge.</summary>
  </entry>
</feed>