<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-11T01:31:09Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Emerge-Lab/gpudrive</title>
    <updated>2024-08-11T01:31:09Z</updated>
    <id>tag:github.com,2024-08-11:/Emerge-Lab/gpudrive</id>
    <link href="https://github.com/Emerge-Lab/gpudrive" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GPU-acceleration of Nocturne via Madrona&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GPUDrive&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-3.11-blue&#34; alt=&#34;Python version&#34;&gt; &lt;a href=&#34;https://python-poetry.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://python-poetry.org/badge/v0.json&#34; alt=&#34;Poetry&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/abs/2408.01584&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/arXiv-2408.01584-b31b1b.svg?sanitize=true&#34; alt=&#34;Paper&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;GPUDrive is a GPU-accelerated, multi-agent driving simulator that runs at 1 million FPS. The simulator is written in C++, built on top of the &lt;a href=&#34;https://madrona-engine.github.io&#34;&gt;Madrona Game Engine&lt;/a&gt;. We provide Python bindings and &lt;code&gt;gymnasium&lt;/code&gt; wrappers in &lt;code&gt;torch&lt;/code&gt; and &lt;code&gt;jax&lt;/code&gt;, allowing you to interface with the simulator in Python using your preferred framework.&lt;/p&gt; &#xA;&lt;p&gt;For more details, see our &lt;a href=&#34;https://arxiv.org/abs/2408.01584&#34;&gt;paper&lt;/a&gt; üìú and the üëâ &lt;a href=&#34;https://github.com/Emerge-Lab/gpudrive/tree/main/examples/tutorials&#34;&gt;introduction tutorials&lt;/a&gt;, which guide you through the basic usage.&lt;/p&gt; &#xA;&lt;figure&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Emerge-Lab/gpudrive/main/assets/GPUDrive_eval_with_humans_control_6.gif&#34; alt=&#34;...&#34;&gt; &#xA; &lt;center&gt;&#xA;  &lt;figcaption&gt;&#xA;   Agents in GPUDrive can be controlled by any user-specified actor.&#xA;  &lt;/figcaption&gt;&#xA; &lt;/center&gt; &#xA;&lt;/figure&gt; &#xA;&lt;h2&gt;Implemented algorithms üå±&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Algorithm&lt;/th&gt; &#xA;   &lt;th&gt;Reference&lt;/th&gt; &#xA;   &lt;th&gt;README&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;IPPO&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://proceedings.neurips.cc/paper_files/paper/2022/file/9c1535a02f0ce079433344e14d910597-Paper-Datasets_and_Benchmarks.pdf&#34;&gt;Paper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Emerge-Lab/gpudrive/raw/main/baselines/ippo/README.md&#34;&gt;Source&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation üõ†Ô∏è&lt;/h2&gt; &#xA;&lt;p&gt;To build GPUDrive, ensure you have all the dependencies listed &lt;a href=&#34;https://github.com/shacklettbp/madrona#dependencies&#34;&gt;here&lt;/a&gt;. Briefly, you&#39;ll need a recent version of Python and CMake (&amp;gt;= version 3.22), as well as Xcode on macOS or Visual Studio on Windows.&lt;/p&gt; &#xA;&lt;p&gt;Once you have the required dependencies, clone the repository (don&#39;t forget --recursive!):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --recursive https://github.com/Emerge-Lab/gpudrive.git&#xA;cd gpudrive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Optional: If you want to use the Madrona viewer in C++ (Not needed to render with pygame)&lt;/summary&gt; &#xA; &lt;h4&gt;Extra dependencies to use Madrona viewer&lt;/h4&gt; &#xA; &lt;p&gt;To build the simulator with visualization support on Linux (&lt;code&gt;build/viewer&lt;/code&gt;), you will need to install X11 and OpenGL development libraries. Equivalent dependencies are already installed by Xcode on macOS. For example, on Ubuntu:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  sudo apt install libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev mesa-common-dev libc++1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Then, you can &lt;em&gt;choose&lt;/em&gt; between two options for building the simulator:&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Option 1Ô∏è‚É£ : Manual install&lt;/summary&gt; &#xA; &lt;p&gt;For Linux and macOS, use the following commands:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir build&#xA;cd build&#xA;cmake .. -DCMAKE_BUILD_TYPE=Release&#xA;make -j # cores to build with, e.g. 32&#xA;cd ..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;For Windows, open the cloned repository in Visual Studio and build the project using the integrated &lt;code&gt;cmake&lt;/code&gt; functionality.&lt;/p&gt; &#xA; &lt;p&gt;Next, set up the Python components of the repository with pip:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -e . # Add -Cpackages.madrona_escape_room.ext-out-dir=PATH_TO_YOUR_BUILD_DIR on Windows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;hr&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Option 2Ô∏è‚É£ : Poetry install&lt;/summary&gt; &#xA; &lt;p&gt;First create a conda environment using &lt;code&gt;environment.yml&lt;/code&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda env create -f environment.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Activate the environment:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda activate gpudrive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Run:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Test whether the installation was successful by importing the simulator:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;import gpudrive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting started üöÄ&lt;/h2&gt; &#xA;&lt;p&gt;To get started, see our &lt;a href=&#34;https://github.com/Emerge-Lab/gpudrive/tree/main/examples/tutorials&#34;&gt;intro tutorials&lt;/a&gt;. These tutorials take approximately 30-60 minutes to complete and will guide you through the dataset, simulator, and how to populate the simulator with different types of actors.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Emerge-Lab/gpudrive/main/assets/GPUDrive_docs_flow.png&#34; width=&#34;1300&#34; title=&#34;Getting started&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Tests üìà&lt;/h2&gt; &#xA;&lt;p&gt;To further test the setup, you can run the pytests in the root directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pytest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To test if the simulator compiled correctly (and python lib did not), try running the headless program from the build directory. Remember to change the location of the data in &lt;code&gt;src/headless.cpp&lt;/code&gt; and compiling again before running it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd build&#xA;./headless CPU 1 1 # Run on CPU , 1 world, 1 step&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Dataset &lt;code&gt;{ üö¶ üöó üöô üõ£Ô∏è }&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;How to download the Waymo Open Motion Dataset&lt;/h3&gt; &#xA;&lt;p&gt;Two versions of the dataset are available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a mini-one that is about 1 GB and consists of 1000 training files and 100 validation / test files at: &lt;a href=&#34;https://www.dropbox.com/sh/8mxue9rdoizen3h/AADGRrHYBb86pZvDnHplDGvXa?dl=0&#34;&gt;Dropbox Link&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;the full dataset (150 GB) and consists of 134453 training files and 12205 validation / test files: &lt;a href=&#34;https://www.dropbox.com/sh/wv75pjd8phxizj3/AABfNPWfjQdoTWvdVxsAjUL_a?dl=0&#34;&gt;Dropbox Link&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The simulator supports initializing scenes from the &lt;code&gt;Nocturne&lt;/code&gt; dataset. The input parameter for the simulator &lt;code&gt;json_path&lt;/code&gt; takes in a path to a directory containing the files in the Nocturne format. The &lt;code&gt;SceneConfig&lt;/code&gt; dataclass in &lt;code&gt;pygpudrive/env/config.py&lt;/code&gt; dataclass is used to configure how scenes are selected from a folder with traffic scenarios.&lt;/p&gt; &#xA;&lt;h2&gt;Citations&lt;/h2&gt; &#xA;&lt;p&gt;If you use GPUDrive in your work, please cite us:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{kazemkhani2024gpudrivedatadrivenmultiagentdriving,&#xA;      title={GPUDrive: Data-driven, multi-agent driving simulation at 1 million FPS}, &#xA;      author={Saman Kazemkhani and Aarav Pandya and Daphne Cornelisse and Brennan Shacklett and Eugene Vinitsky},&#xA;      year={2024},&#xA;      eprint={2408.01584},&#xA;      archivePrefix={arXiv},&#xA;      primaryClass={cs.AI},&#xA;      url={https://arxiv.org/abs/2408.01584}, &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>