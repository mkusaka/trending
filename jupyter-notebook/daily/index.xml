<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-18T01:34:50Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>iamvaibhavmehra/LangGraph-Course-freeCodeCamp</title>
    <updated>2025-07-18T01:34:50Z</updated>
    <id>tag:github.com,2025-07-18:/iamvaibhavmehra/LangGraph-Course-freeCodeCamp</id>
    <link href="https://github.com/iamvaibhavmehra/LangGraph-Course-freeCodeCamp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repository for all of the code that was written for the FreeCodeCamp Course and the answers for all of the exercises.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LangGraph Course&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Video:&lt;/strong&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=jGg_1h0qzaM&#34;&gt;https://www.youtube.com/watch?v=jGg_1h0qzaM&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Repository for all of the code written for the FreeCodeCamp LangGraph Course, including solutions for all exercises. This repo provides practical examples of using &lt;a href=&#34;https://github.com/langchain-ai/langgraph&#34;&gt;LangGraph&lt;/a&gt; for building agent-based applications through Python scripts and interactive Jupyter notebooks.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iamvaibhavmehra/LangGraph-Course-freeCodeCamp/main/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iamvaibhavmehra/LangGraph-Course-freeCodeCamp/main/#repository-structure&#34;&gt;Repository Structure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iamvaibhavmehra/LangGraph-Course-freeCodeCamp/main/#getting-started-zshmac&#34;&gt;Getting Started (zsh/Mac)&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iamvaibhavmehra/LangGraph-Course-freeCodeCamp/main/#using-pyenv-and-uv&#34;&gt;Using pyenv and uv&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iamvaibhavmehra/LangGraph-Course-freeCodeCamp/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iamvaibhavmehra/LangGraph-Course-freeCodeCamp/main/#exercises&#34;&gt;Exercises&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iamvaibhavmehra/LangGraph-Course-freeCodeCamp/main/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;LangGraph is a Python framework for designing and managing the flow of tasks in your application using graph structures. This course demonstrates LangGraph concepts through step-by-step exercises, agent implementations, and Jupyter notebooks.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Repository Structure&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;LangGraph-Course/&#xA;├── Agents/            # Python agents for various tasks (e.g., RAG_Agent, Drafter)&#xA;├── Exercises/         # Jupyter notebooks with exercise solutions&#xA;├── Graphs/            # Jupyter notebooks illustrating LangGraph concepts&#xA;├── requirements.txt   # Python dependencies&#xA;└── README.md          # This file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notable Directories:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Agents/&lt;/strong&gt;: Python scripts for agents such as Retrieval-Augmented Generation (RAG) and document drafting.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Exercises/&lt;/strong&gt;: Jupyter notebooks for each exercise (e.g. &lt;code&gt;Exercise_Graph1.ipynb&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Graphs/&lt;/strong&gt;: Notebooks demonstrating LangGraph patterns (e.g., Hello World, Looping).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Getting Started (zsh/Mac)&lt;/h2&gt; &#xA;&lt;h3&gt;Using pyenv and uv&lt;/h3&gt; &#xA;&lt;h4&gt;1. Clone the Repository&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;git clone https://github.com/rdtiv/LangGraph-Course.git&#xA;cd LangGraph-Course&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Install pyenv (if not already installed)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;brew update&#xA;brew install pyenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add the following to your &lt;code&gt;~/.zshrc&lt;/code&gt; if it&#39;s not already there:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;export PYENV_ROOT=&#34;$HOME/.pyenv&#34;&#xA;export PATH=&#34;$PYENV_ROOT/bin:$PATH&#34;&#xA;eval &#34;$(pyenv init --path)&#34;&#xA;eval &#34;$(pyenv init -)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Restart your terminal or source your &lt;code&gt;~/.zshrc&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;source ~/.zshrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Install Python Version&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;pyenv install 3.12.6&#xA;pyenv local 3.12.6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;4. Install uv&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;pipx install uv           # Recommended, or:&#xA;pip install --user uv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t have pipx, install it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;brew install pipx&#xA;pipx ensurepath&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;5. Set Up Virtual Environment with uv&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;uv venv .venv&#xA;source .venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;6. Install Dependencies&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;uv pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;7. (Optional) Set up Environment Variables&lt;/h4&gt; &#xA;&lt;p&gt;If you need API keys (such as for OpenAI), create a &lt;code&gt;.env&lt;/code&gt; file in the root directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;echo &#34;OPENAI_API_KEY=your_openai_key&#34; &amp;gt; .env&#xA;# Add other variables as needed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;8. Start JupyterLab&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;uv pip install jupyterlab  # Only if not already installed&#xA;jupyter lab&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open and run Jupyter notebooks in &lt;code&gt;Graphs/&lt;/code&gt; and &lt;code&gt;Exercises/&lt;/code&gt; for hands-on practice and exploration.&lt;/li&gt; &#xA; &lt;li&gt;Run agent scripts in &lt;code&gt;Agents/&lt;/code&gt; for more advanced experiments.&lt;/li&gt; &#xA; &lt;li&gt;All code is designed to work in a local, isolated Python environment managed by pyenv and uv.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Exercises&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Explore the &lt;code&gt;Exercises/&lt;/code&gt; directory for self-contained solutions to LangGraph problems.&lt;/li&gt; &#xA; &lt;li&gt;Example notebooks: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;Exercise_Graph1.ipynb&lt;/code&gt;: Agent state and basic graph usage.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Exercise_Graph2.ipynb&lt;/code&gt;: User input and graph visualization.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Exercise_Graph3.ipynb&lt;/code&gt;: Personalization and skills-based responses.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Exercise_Graph4.ipynb&lt;/code&gt;, &lt;code&gt;Exercise_Graph5.ipynb&lt;/code&gt;: Advanced graph operations.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Core dependencies (see &lt;code&gt;requirements.txt&lt;/code&gt; for full list):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;langgraph&lt;/li&gt; &#xA; &lt;li&gt;langchain&lt;/li&gt; &#xA; &lt;li&gt;ipython&lt;/li&gt; &#xA; &lt;li&gt;langchain_openai&lt;/li&gt; &#xA; &lt;li&gt;langchain_community&lt;/li&gt; &#xA; &lt;li&gt;dotenv&lt;/li&gt; &#xA; &lt;li&gt;typing&lt;/li&gt; &#xA; &lt;li&gt;chromadb&lt;/li&gt; &#xA; &lt;li&gt;langchain_chroma&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Install all dependencies with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;uv pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>