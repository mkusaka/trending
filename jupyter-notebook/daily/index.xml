<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-05T01:31:06Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>QuivrHQ/MegaParse</title>
    <updated>2024-06-05T01:31:06Z</updated>
    <id>tag:github.com,2024-06-05:/QuivrHQ/MegaParse</id>
    <link href="https://github.com/QuivrHQ/MegaParse" rel="alternate"></link>
    <summary type="html">&lt;p&gt;File Parser optimised for LLM Ingestion with no loss ðŸ§  Parse PDFs, Docx, PPTx in a format that is ideal for LLMs.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MegaParse - Your Mega Parser for every type of documents&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/QuivrHQ/MegaParse/main/logo.png&#34; alt=&#34;Quivr-logo&#34; width=&#34;30%&#34; style=&#34;border-radius: 50%; padding-bottom: 20px&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;MegaParse is a powerful and versatile parser that can handle various types of documents with ease. Whether you&#39;re dealing with text, PDFs, Powerpoint presentations, Word documents MegaParse has got you covered. Focus on having no information loss during parsing.&lt;/p&gt; &#xA;&lt;h2&gt;Key Features ðŸŽ¯&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Versatile Parser&lt;/strong&gt;: MegaParse is a powerful and versatile parser that can handle various types of documents with ease.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;No Information Loss&lt;/strong&gt;: Focus on having no information loss during parsing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast and Efficient&lt;/strong&gt;: Designed with speed and efficiency at its core.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Wide File Compatibility&lt;/strong&gt;: Supports Text, PDF, Powerpoint presentations, Excel, CSV, Word documents.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open Source&lt;/strong&gt;: Freedom is beautiful, and so is MegaParse. Open source and free to use.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Files: âœ… PDF âœ… Powerpoint âœ… Word&lt;/li&gt; &#xA; &lt;li&gt;Content: âœ… Tables âœ… TOC âœ… Headers âœ… Footers âœ… Images&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/QuivrHQ/MegaParse/assets/19614572/1b4cdb73-8dc2-44ef-b8b4-a7509bc8d4f3&#34;&gt;https://github.com/QuivrHQ/MegaParse/assets/19614572/1b4cdb73-8dc2-44ef-b8b4-a7509bc8d4f3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install megaparse&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Add your OpenAI API key to the .env file&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install poppler on your computer (images and PDFs)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install tesseract on your computer (images and PDFs)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from megaparse.Converter import MegaParse&#xA;&#xA;megaparse = MegaParse(file_path=&#34;./test.pdf&#34;)&#xA;content = megaparse.convert()&#xA;print(content)&#xA;megaparse.save_md(content, &#34;./test.md&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;(Optional) Use LlamaParse for Improved Results&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create an account on &lt;a href=&#34;https://cloud.llamaindex.ai/&#34;&gt;Llama Cloud&lt;/a&gt; and get your API key.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Call Megaparse with the &lt;code&gt;llama_parse_api_key&lt;/code&gt; parameter&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from megaparse.Converter import MegaParse&#xA;&#xA;megaparse = MegaParse(file_path=&#34;./test.pdf&#34;, llama_parse_api_key=&#34;llx-your_api_key&#34;)&#xA;content = megaparse.convert()&#xA;print(content)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;BenchMark&lt;/h2&gt; &#xA;&lt;!--BENCHMARK--&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parser&lt;/th&gt; &#xA;   &lt;th&gt;Diff&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Megaparse with LLamaParse and GPTCleaner&lt;/td&gt; &#xA;   &lt;td&gt;84&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Megaparse&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;100&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Megaparse with LLamaParse&lt;/td&gt; &#xA;   &lt;td&gt;104&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LLama Parse&lt;/td&gt; &#xA;   &lt;td&gt;108&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!--END_BENCHMARK--&gt; &#xA;&lt;p&gt;&lt;em&gt;Lower is better&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Next Steps&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Improve Table Parsing&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Improve Image Parsing and description&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add TOC for Docx&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add Hyperlinks for Docx&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Order Headers for Docx to Markdown&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#QuivrHQ/MegaParse&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=QuivrHQ/MegaParse&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>