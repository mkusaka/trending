<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-15T01:30:55Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JerBouma/FinanceDatabase</title>
    <updated>2023-08-15T01:30:55Z</updated>
    <id>tag:github.com,2023-08-15:/JerBouma/FinanceDatabase</id>
    <link href="https://github.com/JerBouma/FinanceDatabase" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is a database of 300.000+ symbols containing Equities, ETFs, Funds, Indices, Currencies, Cryptocurrencies and Money Markets.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46355364/220746807-669cdbc1-ac67-404c-b0bb-4a3d67d9931f.jpg&#34; alt=&#34;Logo&#34;&gt; &#xA;&lt;a href=&#34;https://www.buymeacoffee.com/jerbouma&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Buy%20Me%20A%20Coffee-Donate-brightgreen?logo=buymeacoffee&#34; alt=&#34;Logo&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://jeroenbouma.com/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Read_More-website?logo=readme&amp;amp;label=Website&#34; alt=&#34;Logo&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://discordapp.com/users/547886981468782613&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Chat-hello?logo=discord&amp;amp;label=Discord&#34; alt=&#34;Logo&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://pypi.org/project/financedatabase/&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/FinanceDatabase&#34; alt=&#34;Logo&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://pypi.org/project/financedatabase/&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/dm/FinanceDatabase&#34; alt=&#34;Logo&#34;&gt; &lt;/a&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Call for Contributors to the FinanceDatabase&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;The &lt;strong&gt;FinanceDatabase&lt;/strong&gt; serves the role of providing anyone with any type of financial product categorisation entirely for free. To be able to achieve this, the FinanceDatabase relies on involvement from the community to add, edit and remove tickers over time. This is made easy enough that anyone, even with a lack of coding experience can contribute because of the usage of CSV files that can be manually edited with ease.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;I&#39;d like to invite you to go to the &lt;a href=&#34;https://github.com/JerBouma/FinanceDatabase/raw/main/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt; to understand how you can help. Thank you!&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;As a private investor, the sheer amount of information that can be found on the internet is rather daunting. Trying to understand what type of companies or ETFs are available is incredibly challenging with there being millions of companies and derivatives available on the market. Sure, the most traded companies and ETFs can quickly be found simply because they are known to the public (for example, Microsoft, Tesla, S&amp;amp;P500 ETF or an All-World ETF). However, what else is out there is often unknown.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This database tries to solve that&lt;/strong&gt;. It features 300.000+ symbols containing Equities, ETFs, Funds, Indices, Currencies, Cryptocurrencies and Money Markets. It therefore allows you to obtain a broad overview of sectors, industries, types of investments and much more.&lt;/p&gt; &#xA;&lt;p&gt;The aim of this database is explicitly &lt;em&gt;not&lt;/em&gt; to provide up-to-date fundamentals or stock data as those can be obtained with ease (with the help of this database) by using the &lt;a href=&#34;https://github.com/JerBouma/FinanceToolkit&#34;&gt;FinanceToolkit&lt;/a&gt;. Instead, it gives insights into the products that exist in each country, industry and sector and gives the most essential information about each product. With this information, you can analyse specific areas of the financial world and/or find a product that is hard to find. See for examples on how you can combine this database, and the earlier mentioned packages the section &lt;a href=&#34;https://raw.githubusercontent.com/JerBouma/FinanceDatabase/main/#Examples&#34;&gt;Examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Some key statistics of the database:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Product&lt;/th&gt; &#xA;   &lt;th&gt;Quantity&lt;/th&gt; &#xA;   &lt;th&gt;Sectors&lt;/th&gt; &#xA;   &lt;th&gt;Industries&lt;/th&gt; &#xA;   &lt;th&gt;Countries&lt;/th&gt; &#xA;   &lt;th&gt;Exchanges&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Equities&lt;/td&gt; &#xA;   &lt;td&gt;158.429&lt;/td&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;63&lt;/td&gt; &#xA;   &lt;td&gt;111&lt;/td&gt; &#xA;   &lt;td&gt;83&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ETFs&lt;/td&gt; &#xA;   &lt;td&gt;36.786&lt;/td&gt; &#xA;   &lt;td&gt;295&lt;/td&gt; &#xA;   &lt;td&gt;22&lt;/td&gt; &#xA;   &lt;td&gt;111&lt;/td&gt; &#xA;   &lt;td&gt;53&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Funds&lt;/td&gt; &#xA;   &lt;td&gt;57.881&lt;/td&gt; &#xA;   &lt;td&gt;1541&lt;/td&gt; &#xA;   &lt;td&gt;52&lt;/td&gt; &#xA;   &lt;td&gt;111&lt;/td&gt; &#xA;   &lt;td&gt;34&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Product&lt;/th&gt; &#xA;   &lt;th&gt;Quantity&lt;/th&gt; &#xA;   &lt;th&gt;Category&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Currencies&lt;/td&gt; &#xA;   &lt;td&gt;2.556&lt;/td&gt; &#xA;   &lt;td&gt;175 Currencies&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cryptocurrencies&lt;/td&gt; &#xA;   &lt;td&gt;3.367&lt;/td&gt; &#xA;   &lt;td&gt;352 Cryptocurrencies&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Indices&lt;/td&gt; &#xA;   &lt;td&gt;91.183&lt;/td&gt; &#xA;   &lt;td&gt;64 Exchanges&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Money Markets&lt;/td&gt; &#xA;   &lt;td&gt;1.367&lt;/td&gt; &#xA;   &lt;td&gt;3 Exchanges&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The Finance Database is used within:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://openbb.co/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46355364/229621010-bba16cc4-de85-4921-9d75-b30393aaf74b.png&#34; width=&#34;300px&#34; height=&#34;100px&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://app.noteable.io/f/242bc47d-9c85-4a30-b6e5-d7d201f6e2d6/Finance+Database.ipynb&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46355364/229618778-2c5f1369-77d5-4fa9-abd1-e79d324a861a.png&#34; width=&#34;300px&#34; height=&#34;100px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JerBouma/FinanceDatabase/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JerBouma/FinanceDatabase/main/#basic-usage&#34;&gt;Basic Usage&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JerBouma/FinanceDatabase/main/#quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JerBouma/FinanceDatabase/main/#collecting-information-from-the-database&#34;&gt;Collecting information from the database&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JerBouma/FinanceDatabase/main/#searching-the-database-extensively&#34;&gt;Searching the database extensively&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JerBouma/FinanceDatabase/main/#storing-the-database-at-a-different-location&#34;&gt;Storing the database at a different location&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JerBouma/FinanceDatabase/main/#examples&#34;&gt;Examples&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JerBouma/FinanceDatabase/main/#companies-in-the-netherlands&#34;&gt;Companies in the Netherlands&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JerBouma/FinanceDatabase/main/#technical-analysis-of-biotech-etfs&#34;&gt;Technical Analysis of Biotech ETFs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JerBouma/FinanceDatabase/main/#perform-a-dupont-analysis-on-railroad-companies&#34;&gt;Perform a Dupont Analysis on Railroad Companies&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JerBouma/FinanceDatabase/main/#questions--answers&#34;&gt;Questions &amp;amp; Answers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JerBouma/FinanceDatabase/main/#user-contributions&#34;&gt;User Contributions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JerBouma/FinanceDatabase/main/#contact&#34;&gt;Contact&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;The package &lt;code&gt;financedatabase&lt;/code&gt; allows you to select specific CSV files as well as search through collected data with a specific query.&lt;/p&gt; &#xA;&lt;p&gt;You can install the package with the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;pip install financedatabase&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;(within Python) &lt;code&gt;import financedatabase as fd&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Basic Usage&lt;/h1&gt; &#xA;&lt;p&gt;This section explains in detail how the database can be queried with the related &lt;code&gt;financedatabase&lt;/code&gt; package, also see the Jupyter Notebook in which you can run the examples also demonstrated here. You can find this document &lt;a href=&#34;https://www.jeroenbouma.com/projects/financedatabase/getting-started&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Same methods apply to all other asset classes as well. Columns may vary.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import financedatabase as fd&#xA;&#xA;# Initialize the Equities database&#xA;equities = fd.Equities()&#xA;&#xA;# Obtain all countries from the database&#xA;equities_countries = equities.options(&#39;country&#39;)&#xA;&#xA;# Obtain all sectors from the database&#xA;equities_sectors = equities.options(&#39;sector&#39;)&#xA;&#xA;# Obtain all industry groups from the database&#xA;equities_industry_groups = equities.options(&#39;industry_group&#39;)&#xA;&#xA;# Obtain all industries from a country from the database&#xA;equities_germany_industries = equities.options(&#39;industry&#39;, country=&#39;Germany&#39;)&#xA;&#xA;# Obtain a selection from the database&#xA;equities_united_states = equities.select(country=&#34;United States&#34;)&#xA;&#xA;# Obtain a detailed selection from the database&#xA;equities_usa_consumer_electronics = equities.select(country=&#34;United States&#34;, industry=&#34;Consumer Electronics&#34;)&#xA;&#xA;# Search specific fields from the database&#xA;equities_uk_biotech = equities.search(country=&#39;United Kingdom&#39;, summary=&#39;biotech&#39;, exchange=&#39;LSE&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Scroll down below for a more elaborate explanation and detailed examples.&lt;/p&gt; &#xA;&lt;h2&gt;Collecting information from the database&lt;/h2&gt; &#xA;&lt;p&gt;Please see the Jupyter Notebook for an elaborate explanation of each asset class. This includes Equities, ETFs, Funds, Indices, Currencies, Cryptocurrencies and Money Markets.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;b&gt;Find code examples of all Asset Classes in the Jupyter Notebook &lt;a href=&#34;https://www.jeroenbouma.com/projects/financedatabase/getting-started&#34;&gt;here&lt;/a&gt;.&lt;/b&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;As an example for Equities, If you wish to collect data from all equities you can use the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import financedatabase as fd&#xA;&#xA;# Initialize the Equities database&#xA;equities = fd.Equities()&#xA;&#xA;# Obtain all data available excluding international exchanges&#xA;equities.select()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which returns the following DataFrame:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;symbol&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;name&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;currency&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;sector&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;industry_group&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;industry&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;exchange&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;market&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;country&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;state&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;city&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;zipcode&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;website&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;market_cap&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;A&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Agilent Technologies, Inc.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USD&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Health Care&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Pharmaceuticals, Biotechnology &amp;amp; Life Sciences&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Biotechnology&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;NYQ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;us_market&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;United States&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Santa Clara&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;95051&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.agilent.com&#34;&gt;http://www.agilent.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Large Cap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;AA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Alcoa Corporation&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USD&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Metals &amp;amp; Mining&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;NYQ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;us_market&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;United States&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Pittsburgh&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;15212-5858&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.alcoa.com&#34;&gt;http://www.alcoa.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Mid Cap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;AAALF&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Aareal Bank AG&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USD&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Financials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Banks&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Banks&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PNK&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;us_market&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Germany&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nan&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Wiesbaden&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;65189&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.aareal-bank.com&#34;&gt;http://www.aareal-bank.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Small Cap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;AAALY&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Aareal Bank AG&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USD&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Financials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Banks&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Banks&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PNK&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;us_market&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Germany&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nan&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Wiesbaden&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;65189&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.aareal-bank.com&#34;&gt;http://www.aareal-bank.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Small Cap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;AABB&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Asia Broadband, Inc.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USD&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Metals &amp;amp; Mining&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PNK&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;us_market&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;United States&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;NV&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Las Vegas&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;89135&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.asiabroadbandinc.com&#34;&gt;http://www.asiabroadbandinc.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Micro Cap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;This returns approximately 20.000 different equities. Note that by default, only the American exchanges are selected. These are symbols like &lt;code&gt;TSLA&lt;/code&gt; (Tesla) and &lt;code&gt;MSFT&lt;/code&gt; (Microsoft) that tend to be recognized by a majority of data providers and therefore is the default. To disable this, you can set the &lt;code&gt;exclude_exchanges&lt;/code&gt; argument to &lt;code&gt;False&lt;/code&gt; which then results in approximately 155.000 different symbols.&lt;/p&gt; &#xA;&lt;p&gt;Note that the summary column is taken out on purpose to keep it organized for markdown. The summary is however very handy when it comes to querying specific words as found with the following description given for Apple. All of this information is available when you query the database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Apple Inc. designs, manufactures, and markets smartphones, personal computers, tablets, wearables, and accessories worldwide. It also sells various related services. The company offers iPhone, a line of smartphones; Mac, a line of personal computers; iPad, a line of multi-purpose tablets; and wearables, home, and accessories comprising AirPods, Apple TV, Apple Watch, Beats products, HomePod, iPod touch, and other Apple-branded and third-party accessories. It also provides AppleCare support services; cloud services store services; and operates various platforms, including the App Store, that allow customers to discover and download applications and digital content, such as books, music, video, games, and podcasts. In addition, the company offers various services, such as Apple Arcade, a game subscription service; Apple Music, which offers users a curated listening experience with on-demand radio stations; Apple News+, a subscription news and magazine service; Apple TV+, which offers exclusive original content; Apple Card, a co-branded credit card; and Apple Pay, a cashless payment service, as well as licenses its intellectual property. The company serves consumers, and small and mid-sized businesses; and the education, enterprise, and government markets. It sells and delivers third-party applications for its products through the App Store. The company also sells its products through its retail and online stores, and direct sales force; and third-party cellular network carriers, wholesalers, retailers, and resellers. Apple Inc. was founded in 1977 and is headquartered in Cupertino, California.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Find a more elaborate explanation with &lt;code&gt;help(equities.select)&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Help on method select in module financedatabase.equities:&#xA;&#xA;select(country: str = &#39;&#39;, sector: str = &#39;&#39;, industry: str = &#39;&#39;, exclude_exchanges: bool = True, capitalize: bool = True) -&amp;gt; pandas.core.frame.DataFrame method of financedatabase.equities.Equities instance&#xA;    Description&#xA;    ----&#xA;    Returns all equities when no input is given and has the option to give&#xA;    a specific set of symbols for the country, sector and/or industry provided.&#xA;    &#xA;    The data depends on the combination of inputs. For example Country + Sector&#xA;    gives all symbols for a specific sector in a specific country.&#xA;    &#xA;    Input&#xA;    ----&#xA;    country (string, default is None)&#xA;        If filled, gives all data for a specific country.&#xA;    sector (string, default is None)&#xA;        If filled, gives all data for a specific sector.&#xA;    industry (string, default is None)&#xA;        If filled, gives all data for a specific industry.&#xA;    exclude_exchanges (boolean, default is True):&#xA;        Whether you want to exclude exchanges from the search. If False,&#xA;        you will receive multiple times the product from different exchanges.&#xA;    capitalize (boolean, default is True):&#xA;        Whether country, sector and industry needs to be capitalized. By default&#xA;        the values always are capitalized as that is also how it is represented&#xA;        in the csv files.&#xA;    base_url (string, default is GitHub location)&#xA;        The possibility to enter your own location if desired.&#xA;    use_local_location (string, default False)&#xA;        The possibility to select a local location (i.e. based on Windows path)&#xA;    &#xA;    Output&#xA;    ----&#xA;    equities_df (pd.DataFrame)&#xA;        Returns a dictionary with a selection or all data based on the input.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As an example, we can use &lt;code&gt;equities.options&lt;/code&gt; to obtain specific country, sector and industry options. For we can acquire all industries within the sector &lt;code&gt;Basic Materials&lt;/code&gt; within the &lt;code&gt;United States&lt;/code&gt;. This allows us to look at a specific industry in the United States in detail.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;industry_options = equities.options(selection=&#39;industry&#39;, country=&#34;United States&#34;, sector=&#34;Materials&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So with this information in hand, I can now query the industry &lt;code&gt;Metals &amp;amp; Mining&lt;/code&gt; as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;metals_and_mining_companies_usa = equities.select(country=&#34;United States&#34;, sector=&#34;Materials&#34;, industry=&#34;Metals &amp;amp; Mining&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This gives you a DataFrame with the following information:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;symbol&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;name&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;currency&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;sector&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;industry_group&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;industry&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;exchange&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;market&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;country&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;state&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;city&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;zipcode&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;website&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;market_cap&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;AA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Alcoa Corporation&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USD&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Metals &amp;amp; Mining&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;NYQ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;us_market&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;United States&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Pittsburgh&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;15212-5858&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.alcoa.com&#34;&gt;http://www.alcoa.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Mid Cap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;AABB&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Asia Broadband, Inc.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USD&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Metals &amp;amp; Mining&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PNK&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;us_market&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;United States&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;NV&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Las Vegas&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;89135&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.asiabroadbandinc.com&#34;&gt;http://www.asiabroadbandinc.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Micro Cap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;AAGC&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;All American Gold Corp.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USD&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Metals &amp;amp; Mining&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PNK&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;us_market&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;United States&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;WY&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Cheyenne&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;82001&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.allamericangoldcorp.com&#34;&gt;http://www.allamericangoldcorp.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Nano Cap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ABML&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;American Battery Metals Corporation&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USD&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Metals &amp;amp; Mining&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PNK&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;us_market&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;United States&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;NV&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Incline Village&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;89451&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.batterymetals.com&#34;&gt;http://www.batterymetals.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Small Cap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ACNE&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Alice Consolidated Mines, Inc.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USD&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Metals &amp;amp; Mining&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PNK&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;us_market&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;United States&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ID&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Wallace&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;83873-0469&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nan&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nan&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;As you can imagine, looking at such a specific selection only yields a few results but picking the entire sector &lt;code&gt;Materials&lt;/code&gt; would have returned 403 different companies (which excludes exchanges other than the United States).&lt;/p&gt; &#xA;&lt;h2&gt;Searching the database extensively&lt;/h2&gt; &#xA;&lt;p&gt;All asset classes have the capability to search each column with &lt;code&gt;search&lt;/code&gt;, for example &lt;code&gt;equities.search()&lt;/code&gt;. Through how this functionality is developed you can define multiple columns and search throughoutly. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Collect all Equities Database&#xA;equities = fd.Equities()&#xA;&#xA;# Search Multiple Columns&#xA;equities.search(summary=&#39;automotive&#39;, currency=&#39;USD&#39;, country=&#39;Germany&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which returns a selection of the DataFrame that matches all criteria.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;symbol&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;name&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;currency&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;sector&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;industry_group&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;industry&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;exchange&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;market&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;country&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;state&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;city&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;zipcode&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;website&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;market_cap&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;AFRMF&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Alphaform AG&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USD&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Industrials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Capital Goods&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Machinery&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PNK&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;us_market&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Germany&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Feldkirchen&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;85622&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nan&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Nano Cap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;AUUMF&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Aumann AG&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USD&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Industrials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Capital Goods&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Machinery&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PNK&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;us_market&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Germany&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Beelen&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;48361&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.aumann.com&#34;&gt;http://www.aumann.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Micro Cap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;BAMXF&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Bayerische Motoren Werke Aktiengesellschaft&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USD&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Consumer Discretionary&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Automobiles &amp;amp; Components&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Automobiles&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PNK&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;us_market&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Germany&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Munich&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;80788&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.bmwgroup.com&#34;&gt;http://www.bmwgroup.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Large Cap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;BASFY&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;BASF SE&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USD&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Materials&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Chemicals&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PNK&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;us_market&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Germany&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Ludwigshafen am Rhein&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;67056&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.basf.com&#34;&gt;http://www.basf.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Large Cap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;BDRFF&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Beiersdorf Aktiengesellschaft&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USD&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Consumer Staples&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Household &amp;amp; Personal Products&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Household Products&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PNK&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;us_market&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Germany&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Hamburg&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;20245&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.beiersdorf.com&#34;&gt;http://www.beiersdorf.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Large Cap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Storing the database at a different location&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to store the database at a different location (for example your own Fork) you can do so with the variable &lt;code&gt;base_url&lt;/code&gt; which you can find in each of the asset classes. An example would be:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;fd.Equities(base_url=&amp;lt;YOUR URL&amp;gt;)&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also store the database locally and point to your local location with the variable &lt;code&gt;base_url&lt;/code&gt; and by setting &lt;code&gt;use_local_location&lt;/code&gt; to True. An example would be:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;fd.Equities(base_url=&amp;lt;YOUR PATH&amp;gt;, use_local_location=True)&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Examples&lt;/h1&gt; &#xA;&lt;p&gt;This section gives a few examples of the possibilities with this package. These are merely a few of the things you can do with the package. &lt;strong&gt;As you can obtain a wide range of symbols, pretty much any package that requires symbols should work.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Companies in the Netherlands&lt;/h2&gt; &#xA;&lt;p&gt;I want to see how many companies exist in each sector in the Netherlands. Let&#39;s count all companies with the following code, I skip a sector when it has no data and also do not include companies that are not categorized:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import financedatabase as fd&#xA;&#xA;equities = fd.Equities()&#xA;&#xA;equities_per_sector_netherlands = {}&#xA;&#xA;for sector in equities.options(selection=&#39;sector&#39;, country=&#39;Netherlands&#39;):&#xA;    try:&#xA;        equities_per_sector_netherlands[sector] = len(equities.select(country=&#39;Netherlands&#39;, sector=sector))&#xA;    except ValueError as error:&#xA;        print(error)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Lastly, I plot the data in a pie chart and add some formatting to make the pie chart look a bit nicer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import matplotlib.pyplot as plt&#xA;&#xA;legend, values = zip(*equities_per_sector_netherlands.items())&#xA;&#xA;colors = [&#39;b&#39;, &#39;g&#39;, &#39;r&#39;, &#39;c&#39;, &#39;m&#39;, &#39;y&#39;, &#39;k&#39;, &#39;tab:blue&#39;, &#39;tab:orange&#39;, &#39;tab:gray&#39;,&#xA;          &#39;lightcoral&#39;, &#39;yellow&#39;, &#39;saddlebrown&#39;, &#39;lightblue&#39;, &#39;olive&#39;]&#xA;plt.pie(values, labels=legend, colors=colors,&#xA;        wedgeprops={&#39;linewidth&#39;: 0.5, &#39;edgecolor&#39;: &#39;white&#39;})&#xA;plt.title(&#39;Companies per sector in the Netherlands&#39;)&#xA;plt.tight_layout()&#xA;&#xA;plt.show()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This results in the following graph which gives an indication which sectors are dominant within The Netherlands. Of course this is a mere example and to truly understand the importance of certain companies for the Netherlands, you would need to know market cap of each sector as well including demographics.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46355364/221589281-e233dfa0-cbfc-46d2-b4b8-e8dbd16e2652.png&#34; alt=&#34;FinanceDatabase&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Technical Analysis of Biotech ETFs&lt;/h2&gt; &#xA;&lt;p&gt;With the help of &lt;a href=&#34;https://github.com/bukosabino/ta&#34;&gt;ta&lt;/a&gt; and &lt;a href=&#34;https://github.com/ranaroussi/yfinance&#34;&gt;yfinance&lt;/a&gt; I can quickly perform a basic technical analysis on a group of ETFs categorized by the FinanceDatabase. I start by searching the database for ETFs related to Health and then make a subselection by searching, in the collected database, for biotech-related ETFs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import financedatabase as fd&#xA;&#xA;etfs = fd.ETFs()&#xA;&#xA;health_care_etfs_in_biotech = etfs.search(category=&#39;Health Care&#39;, summary=&#39;biotech&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, I collect stock data on each ticker and remove tickers that have no data in my chosen period. The period I have chosen shows the initial impact of the Coronacrisis on the financial markets.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import yfinance as yf&#xA;&#xA;tickers = list(health_care_etfs_in_biotech.index)&#xA;&#xA;stock_data_biotech = yf.download(tickers, start=&#34;2020-01-01&#34;, end=&#34;2020-06-01&#34;)[&#39;Adj Close&#39;]&#xA;stock_data_biotech = stock_data_biotech.dropna(axis=&#39;columns&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next up I initialise subplots and loop over all collected tickers. Here, I create a new temporary DataFrame that I fill with the adjusted close prices of the ticker as well as the Bollinger Bands. Then I plot the data in one of the subplots.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd&#xA;from ta.volatility import BollingerBands&#xA;import matplotlib.pyplot as plt&#xA;&#xA;figure, axis = plt.subplots(4, 3)&#xA;row = 0&#xA;column = 0&#xA;&#xA;for ticker in stock_data_biotech.columns:&#xA;    data_plot = pd.DataFrame(stock_data_biotech[ticker])&#xA;    name = health_care_etfs_in_biotech.loc[health_care_etfs_in_biotech.index == ticker, &#39;name&#39;].iloc[0]&#xA;&#xA;    indicator_bb = BollingerBands(close=stock_data_biotech[ticker], window=20, window_dev=2)&#xA;&#xA;    data_plot[&#39;bb_bbm&#39;] = indicator_bb.bollinger_mavg()&#xA;    data_plot[&#39;bb_bbh&#39;] = indicator_bb.bollinger_hband()&#xA;    data_plot[&#39;bb_bbl&#39;] = indicator_bb.bollinger_lband()&#xA;&#xA;    axis[row, column].plot(data_plot)&#xA;    axis[row, column].set_title(name, fontsize=6)&#xA;    axis[row, column].set_xticks([])&#xA;    axis[row, column].set_yticks([])&#xA;&#xA;    column += 1&#xA;    if column == 3:&#xA;        row += 1&#xA;        column = 0&#xA;        &#xA;figure.suptitle(&#39;Technical Analysis of Biotech ETFs during Coronacrisis&#39;)&#xA;figure.tight_layout()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This leads to the following graph which gives an indication whether Biotech ETFs were oversold or overbought and how this effect is neutralised (to some degree) in the months after. Read more about Bollinger Bands &lt;a href=&#34;https://www.investopedia.com/terms/b/bollingerbands.asp&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/46355364/221589951-bce2de36-9458-4a6f-b3ed-2383f01bed0b.png&#34; alt=&#34;FinanceDatabase&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Perform a Dupont Analysis on Railroad Companies&lt;/h2&gt; &#xA;&lt;p&gt;In case I want to look into the Railroad companies in the United States that are marked as &#34;Large Cap&#34;, I can use the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import financedatabase as fd&#xA;&#xA;equities = fd.Equities()&#xA;&#xA;railroad = equities.search(industry=&#39;Road &amp;amp; Rail&#39;,&#xA;                           country=&#39;United States&#39;,&#xA;                           market_cap=&#39;Large Cap&#39;,&#xA;                           exclude_exchanges=True)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Wiuth this information in hand, I can now start collecting data with the &lt;a href=&#34;https://github.com/JerBouma/FinanceToolkit&#34;&gt;FinanceToolkit&lt;/a&gt; package. This can be anything from balance sheet, cash flow and income statements to 50+ financial ratios, enterprise values and historical data. Here I initalize the FinanceToolkit with the tickers as found in the FinanceDatabase.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from financetoolkit import Toolkit&#xA;&#xA;API_KEY = &#34;YOUR_FMP_API_KEY&#34;&#xA;data_set = {}&#xA;&#xA;companies = Toolkit(list(railroad.index), API_KEY)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, as a demonstration, I can obtain all balance sheet statements for all companies that are marked as Large Cap Railroad companies in the United States.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;companies.get_balance_sheet_statement()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/JerBouma/FinanceDatabase/assets/46355364/c93a80cf-cdee-484f-839f-0a9455b6fbf8&#34; alt=&#34;FinanceDatabase - FinanceToolkit - Balance Sheet Statements&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;With the data from the FinanceToolkit, it is now possible to execute a Dupont analysis on all companies. This shows the power of being able to combine a large database with a toolkit that allows you to do proper financial research.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;companies.models.get_extended_dupont_analysis()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/JerBouma/FinanceDatabase/assets/46355364/8478c6ee-a2fe-429d-b66e-5fedbfa9aeef&#34; alt=&#34;FinanceDatabase - FinanceToolkit - Dupont Analysis&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;As you can imagine, it isn&#39;t too difficult to then plot a metric like Return on Equity (RoE) for all companies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dupont_analysis = companies.models.get_extended_dupont_analysis()&#xA;&#xA;dupont_analysis.loc[: , &#39;Return on Equity&#39;, :].T.plot(&#xA;    title=&#39;Return on Equity (RoE) for Railroad Companies in the United States&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/JerBouma/FinanceDatabase/assets/46355364/f66e0dc7-c9fc-4385-9b74-0f4bb635af48&#34; alt=&#34;FinanceDatabase - FinanceToolkit - Return on Equity&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Questions &amp;amp; Answers&lt;/h1&gt; &#xA;&lt;p&gt;In this section you can find answers to commonly asked questions. In case the answer to your question is not here, consider creating an &lt;a href=&#34;https://github.com/JerBouma/FinanceDatabase/issues&#34;&gt;Issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;How is the data obtained?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The data is an aggregation of a variety of sources. The rule that I hold with high regard is that all data needs to be entirely publicly available. Any data that requires API key access or requires a paid tier is never included in this database. Data that you are being charged for is often owned and mainted by the company you have a subscription at and therefore publicly sharing this information online is against their Terms of Service (ToS). However, data that is publicly available can freely be shared (read more about this subject &lt;a href=&#34;https://techcrunch.com/2022/04/18/web-scraping-legal-court/?guccounter=1&amp;amp;guce_referrer=aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8&amp;amp;guce_referrer_sig=AQAAAJRZe3F6wCbuO_n8PJ9JtAHpOY4dF2gA_tO0gJF2PhfWUueUcRQataJwNS9FZlp9rH8f8_aiCBfA2v7wlHyXyVLUfMrca4kq0_m6CYSvK7eMk9zuEhnXJOvE0lrHWXSPTtL-lHP8UJD4SyWTpQ2BnCNx-kv3mG7GGn_G_3SGVvhP&#34;&gt;here&lt;/a&gt;) especially since this database will never cost any money.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;What categorization method is used?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The categorization for Equities is based on a loose approximation of GICS. No actual data is collected from this source and this database merely tries to reflect the sectors and industries as best as possible. This is completely done through manual curation. The actual datasets as curated by MSCI has not been used in the development of any part of this database and remains the most up to date, paid, solution. Other categorizations are entirely developed by the author and can freely be changed.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;How can I contribute?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Please see the &lt;a href=&#34;https://github.com/JerBouma/FinanceDatabase/raw/main/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt;. Thank you!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;How can I find out which countries, sectors and/or industries exists within the database without needing to check the database manually?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For this you can use the &lt;code&gt;options&lt;/code&gt; function from the package attached to this database. Furthermore, it is also possible to use &lt;code&gt;equities = fd.Equities()&lt;/code&gt; and then use &lt;code&gt;equities.options(selection=&#39;country&#39;)&lt;/code&gt; or specific further with &lt;code&gt;equities.options(selection=&#39;sector&#39;, country=&#39;United States&#39;)&lt;/code&gt;. Please see &lt;a href=&#34;https://raw.githubusercontent.com/JerBouma/FinanceDatabase/main/#companies-in-the-netherlands&#34;&gt;this example&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;When I try collect data I notice that not all tickers return output, why is that?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Some tickers are merely holdings of companies and therefore do not really have any data attached to them. Therefore, it makes sense that not all tickers return data. If you are still in doubt, search the ticker on Google to see if there is really no data available. If you can&#39;t find anything about the ticker, consider updating the database by visiting the &lt;a href=&#34;https://github.com/JerBouma/FinanceDatabase/raw/main/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;How does the database handle changes to companies over time - like symbol/exchange migration, mergers, bankruptcies, or symbols getting reused?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For the American Exchanges, every Sunday the database automatically updates based on &lt;a href=&#34;https://github.com/rreichel3/US-Stock-Symbols&#34;&gt;this repository&lt;/a&gt;. It also automatically checks if there were any market cap changes and converts assets accordingly. On purpose, most tickers are not removed even after becoming delisted. This is because it can be still of value for research to look into companies that no longer exist. When it comes to further automisation, this is what you usually pay a hefty fee for, think of Bloomberg at over $25.000 a year. Instead of requiring you to pay, this database is meant to be a community-driven project in which you help in identifiyng these companies. As news about migrations, mergers, bankruptcies and similar occur outside of the American exchanges it is up to the community to identify these and/or users to look into writing scripts that help with this. It is important to note that the vast majority of companies do not change as rapidly that this database becomes irrelevant before it is identified, e.g. a company like Facebook changing to META has already been updated. Furthermore, even though a company goes bankrupt, the old ticker is still relevant when it comes to historic data before the bankruptcy.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;User Contributions&lt;/h1&gt; &#xA;&lt;p&gt;This section is meant to thank those that contributed to the project. Looking to contribute as well? Have a look &lt;a href=&#34;https://github.com/JerBouma/FinanceDatabase/raw/main/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;User&lt;/th&gt; &#xA;   &lt;th&gt;Contribution&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nindogo&#34;&gt;nindogo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Introduced a variety of new equities from the Nairobi Securities Exchange and introduced the country Kenya into the dataset.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/colin99d&#34;&gt;colin99d&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Helped in the conversion of the Finance Database package to Object-Orientated, making the code much more efficient.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Contact&lt;/h1&gt; &#xA;&lt;p&gt;If you have any questions about the FinanceDatabase or would like to share with me what you have been working on, feel free to reach out to me via:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;LinkedIn:&lt;/strong&gt; &lt;a href=&#34;https://www.linkedin.com/in/boumajeroen/&#34;&gt;https://www.linkedin.com/in/boumajeroen/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Email:&lt;/strong&gt; &lt;a href=&#34;mailto:jer.bouma@gmail.com&#34;&gt;jer.bouma@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;f you&#39;d like to support my efforts, either help me out via the &lt;a href=&#34;https://github.com/JerBouma/FinanceDatabase/raw/main/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt; or &lt;a href=&#34;https://www.buymeacoffee.com/jerbouma&#34;&gt;Buy me a Coffee&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#JerBouma/FinanceDatabase&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=JerBouma/FinanceDatabase&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>llSourcell/DoctorGPT</title>
    <updated>2023-08-15T01:30:55Z</updated>
    <id>tag:github.com,2023-08-15:/llSourcell/DoctorGPT</id>
    <link href="https://github.com/llSourcell/DoctorGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DoctorGPT is an LLM that can pass the US Medical Licensing Exam. It works offline, it&#39;s cross-platform, &amp; your health data stays private.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Doctor GPT&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://i.imgur.com/18jVWiV.png&#34; width=&#34;400&#34; height=&#34;400&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;DoctorGPT is a Large Language Model that can pass the US Medical Licensing Exam. This is an open-source project with a mission to provide everyone their own private doctor. DoctorGPT is a version of Meta&#39;s &lt;a href=&#34;https://ai.meta.com/llama/&#34;&gt;Llama2&lt;/a&gt; 7 billion parameter Large Language Model that was fine-tuned on a Medical Dialogue Dataset, then further improved using Reinforcement Learning &amp;amp; Constitutional AI. Since the model is only 3 Gigabytes in size, it fits on any local device, so there is no need to pay an API to use it. It&#39;s free, made for offline usage which preserves patient confidentiality, and it&#39;s available on iOS, Android, and Web. Pull requests for feature additions and improvements are encouraged.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://numpy.org/install/&#34;&gt;Numpy&lt;/a&gt; (Use matrix math operations)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pytorch.org/&#34;&gt;PyTorch&lt;/a&gt; (Build Deep Learning models)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/docs/datasets/index&#34;&gt;Datasets&lt;/a&gt; (Access datasets from huggingface hub)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/docs/huggingface_hub/v0.5.1/en/package_reference/hf_api&#34;&gt;Huggingface_hub&lt;/a&gt; (access huggingface data &amp;amp; models)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/index&#34;&gt;Transformers&lt;/a&gt; (Access models from HuggingFace hub)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/docs/trl/index&#34;&gt;Trl&lt;/a&gt; (Transformer Reinforcement Learning. And fine-tuning.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TimDettmers/bitsandbytes&#34;&gt;Bitsandbytes&lt;/a&gt; (makes models smaller, aka &#39;quantization&#39;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/sentencepiece&#34;&gt;Sentencepiece&lt;/a&gt; (Byte Pair Encoding scheme aka &#39;tokenization&#39;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openai.com&#34;&gt;OpenAI&lt;/a&gt; (Create synthetic fine-tuning and reward model data)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tvm.apache.org/&#34;&gt;TVM&lt;/a&gt; (Tensor Virtual Machine, converts onnx model to efficient cross-platform use)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/blog/peft&#34;&gt;Peft&lt;/a&gt; (Parameter Efficient Fine Tuning, use low rank adaption (LoRa) to fine-tune)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://onnx.ai/&#34;&gt;Onnx&lt;/a&gt; (Convert trained model to universal format)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install all dependencies in one line using &lt;a href=&#34;https://pip.pypa.io/en/stable/installation/&#34;&gt;pip&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install numpy torch datasets huggingface_hub transformers trl bitsandbytes sentencepiece openai tvm peft onnx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Training&lt;/h2&gt; &#xA;&lt;p&gt;In order to train the model, you can run the training.ipynb notebook locally or remotely via a cloud service like Google Colab Pro. The training process requires a GPU, and if you don&#39;t have one then the most accessible option i found was using Google Colab &lt;a href=&#34;https://colab.research.google.com/signup&#34;&gt;Pro&lt;/a&gt; which costs $10/month. The total training time for DoctorGPT including supervised fine-tuning of the initial LLama model on custom medical data, as well as further improving it via Reinforcement Learning from Constitional AI Feedback took 24 hours on a paid instance of Google Colab. If you&#39;re interested in learning more about how this process works, details are in the training.ipynb notebook.&lt;/p&gt; &#xA;&lt;h4&gt;Cloud Training&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/llSourcell/DoctorGPT/blob/main/llama2.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt; click here: &lt;a href=&#34;https://colab.research.google.com/github/llSourcell/DoctorGPT/blob/main/llama2.ipynb&#34;&gt;https://colab.research.google.com/github/llSourcell/DoctorGPT/blob/main/llama2.ipynb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Local Training&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/llSourcell/DoctorGPT.git&#xA;jupyter training.ipynb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get jupyter &lt;a href=&#34;https://jupyter.org/install&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage &lt;a href=&#34;https://huggingface.co/llSourcell/medllama2_7b&#34;&gt;https://huggingface.co/llSourcell/medllama2_7b&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;There are 2 huggingface repos, one which is quantized for mobile and one that is not.&lt;/p&gt; &#xA;&lt;h4&gt;iOS&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 1: &lt;a href=&#34;https://github.com/mlc-ai/mlc-llm/tree/main/ios&#34;&gt;Download&lt;/a&gt; the iOS Machine Learning Compilation Chat Repository&lt;/li&gt; &#xA; &lt;li&gt;Step 2: Follow the &lt;a href=&#34;https://mlc.ai/mlc-llm/docs/deploy/ios.html&#34;&gt;installation steps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Step 3: Once the app is running on your iOS device or simulator, tap &#34;add model variant&#34;&lt;/li&gt; &#xA; &lt;li&gt;Step 4: Enter the URL for the latest DoctorGPT model to download it: [https://huggingface.co/llSourcell/doctorGPT_mini] (&lt;a href=&#34;https://huggingface.co/llSourcell/doctorGPT_mini&#34;&gt;https://huggingface.co/llSourcell/doctorGPT_mini&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Step 5: Tap &#39;Add Model&#39; and start chatting locally, inference runs on device. No internet connection needed!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Android&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 1: &lt;a href=&#34;https://github.com/mlc-ai/mlc-llm/tree/main/android&#34;&gt;Download&lt;/a&gt; the Android Machine Learning Compilation Chat Repository&lt;/li&gt; &#xA; &lt;li&gt;Step 2: Follow the &lt;a href=&#34;https://raw.githubusercontent.com/llSourcell/DoctorGPT/main/%5Bhttps://mlc.ai/mlc-llm/docs/deploy/ios.html%5D(https://mlc.ai/mlc-llm/docs/deploy/android.html)&#34;&gt;installation steps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Step 3: Tap &#34;add model variant&#34;&lt;/li&gt; &#xA; &lt;li&gt;Step 4: Enter the URL for the latest DoctorGPT model to download it: &lt;a href=&#34;https://huggingface.co/llSourcell/doctorGPT_mini&#34;&gt;https://huggingface.co/llSourcell/doctorGPT_mini&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Step 5: Tap &#39;Add Model&#39; and start chatting locally! No internet needed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Web (TODO)&lt;/h4&gt; &#xA;&lt;p&gt;As an experiment in Online Learning using actual human feedback, i want to deploy the model as a Flask API with a React front-end. In this case, anyone can chat with the model at this URL. After each query, a human can rate the model&#39;s response. This rating is then used to further improve the model&#39;s performance through reinforcement learning. to run the app, download &lt;a href=&#34;https://flask.palletsprojects.com/en/2.3.x/&#34;&gt;flask&lt;/a&gt; and then you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flask run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then visit localhost:3000 to interact with it! You can also deploy to &lt;a href=&#34;https://vercel.com/templates/ai&#34;&gt;vercel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Meta, MedAlpaca, Apache, MLC Chat &amp;amp; OctoML&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>JerBouma/AlgorithmicTrading</title>
    <updated>2023-08-15T01:30:55Z</updated>
    <id>tag:github.com,2023-08-15:/JerBouma/AlgorithmicTrading</id>
    <link href="https://github.com/JerBouma/AlgorithmicTrading" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository contains three ways to obtain arbitrage which are Dual Listing, Options and Statistical Arbitrage. These are projects in collaboration with Optiver and have been peer-reviewed by staff members of Optiver.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Algorithmic Trading&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains three ways to obtain arbitrage:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dual Listing Arbitrage&lt;/li&gt; &#xA; &lt;li&gt;Options Arbitrage&lt;/li&gt; &#xA; &lt;li&gt;Statistical Arbitrage&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These are projects in collaboration with &lt;a href=&#34;https://www.optiver.com/&#34;&gt;Optiver&lt;/a&gt; and have been peer-reviewed by staff members of Optiver. Therefore, much of the analysis are correct and give an indication how these methods work.&lt;/p&gt; &#xA;&lt;p&gt;Please note that these methods can only be effective when written in C++ as speed is of utmost performance. Next to that it requires a lightning fast connection (talking in nanoseconds) which is not feasible for the retail investor. Any profits made by using these strategies is therefore by pure chance.&lt;/p&gt; &#xA;&lt;p&gt;I suggest using my &lt;a href=&#34;https://github.com/JerBouma/FinanceDatabase&#34;&gt;FinanceDatabase&lt;/a&gt; to do fundamental analysis and base your investment decisions on that since it has proven to be profitable.&lt;/p&gt;</summary>
  </entry>
</feed>