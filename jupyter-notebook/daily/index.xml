<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-30T01:43:28Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rasbt/machine-learning-book</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/rasbt/machine-learning-book</id>
    <link href="https://github.com/rasbt/machine-learning-book" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Code Repository for Machine Learning with PyTorch and Scikit-Learn&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;em&gt;Machine Learning with PyTorch and Scikit-Learn&lt;/em&gt; Book&lt;/h1&gt; &#xA;&lt;h2&gt;Code Repository&lt;/h2&gt; &#xA;&lt;p&gt;Paperback: 770 pages&lt;br&gt; Publisher: Packt Publishing&lt;br&gt; Language: English&lt;/p&gt; &#xA;&lt;p&gt;ISBN-10: 1801819319&lt;br&gt; ISBN-13: 978-1801819312&lt;br&gt; Kindle ASIN: B09NW48MR1&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.amazon.com/Machine-Learning-PyTorch-Scikit-Learn-scikit-learn-ebook-dp-B09NW48MR1/dp/B09NW48MR1/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/.other/cover_1.jpg&#34; width=&#34;248&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Machine-Learning-PyTorch-Scikit-Learn-scikit-learn-ebook-dp-B09NW48MR1/dp/B09NW48MR1/&#34;&gt;Amazon link&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.packtpub.com/product/machine-learning-with-pytorch-and-scikit-learn/9781801819312&#34;&gt;Packt link&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sebastianraschka.com/blog/2022/ml-pytorch-book.html&#34;&gt;Blog post summarizing the contents&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of Contents and Code Notebooks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Helpful installation and setup instructions can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch01/README.md&#34;&gt;README.md file of Chapter 1&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please note that these are just the code examples accompanying the book, which we uploaded for your convenience; be aware that these notebooks may not be useful without the formulae and descriptive text.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Machine Learning - Giving Computers the Ability to Learn from Data [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch01&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Training Machine Learning Algorithms for Classification [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch02&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;A Tour of Machine Learning Classifiers Using Scikit-Learn [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch03&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Building Good Training Sets – Data Pre-Processing [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch04&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Compressing Data via Dimensionality Reduction [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch05&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Learning Best Practices for Model Evaluation and Hyperparameter Optimization [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch06&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Combining Different Models for Ensemble Learning [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch07&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Applying Machine Learning to Sentiment Analysis [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch08&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Predicting Continuous Target Variables with Regression Analysis [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch09&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Working with Unlabeled Data – Clustering Analysis [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch10&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Implementing a Multi-layer Artificial Neural Network from Scratch [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch11&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Parallelizing Neural Network Training with PyTorch [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch12&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Going Deeper -- The Mechanics of PyTorch [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch13&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Classifying Images with Deep Convolutional Neural Networks [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch14&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Modeling Sequential Data Using Recurrent Neural Networks [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch15&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Transformers -- Improving Natural Language Processing with Attention Mechanisms [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch16&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Generative Adversarial Networks for Synthesizing New Data [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch17&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Graph Neural Networks for Capturing Dependencies in Graph Structured Data [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch18&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;Reinforcement Learning for Decision Making in Complex Environments [&lt;a href=&#34;https://raw.githubusercontent.com/rasbt/machine-learning-book/main/ch19&#34;&gt;open dir&lt;/a&gt;]&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Sebastian Raschka, Yuxi (Hayden) Liu, and Vahid Mirjalili. &lt;em&gt;Machine Learning with PyTorch and Scikit-Learn&lt;/em&gt;. Packt Publishing, 2022.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@book{mlbook2022,  &#xA;address = {Birmingham, UK},  &#xA;author = {Sebastian Raschka, and Yuxi (Hayden) Liu, and Vahid Mirjalili},  &#xA;isbn = {978-1801819312},   &#xA;publisher = {Packt Publishing},  &#xA;title = {{Machine Learning with PyTorch and Scikit-Learn}},  &#xA;year = {2022}  &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>CoreyMSchafer/code_snippets</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/CoreyMSchafer/code_snippets</id>
    <link href="https://github.com/CoreyMSchafer/code_snippets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;code_snippets&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>ageron/handson-ml</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/ageron/handson-ml</id>
    <link href="https://github.com/ageron/handson-ml" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A series of Jupyter notebooks that walk you through the fundamentals of Machine Learning and Deep Learning in python using Scikit-Learn and TensorFlow.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Machine Learning Notebooks&lt;/h1&gt; &#xA;&lt;p&gt;This project aims at teaching you the fundamentals of Machine Learning in python. It contains the example code and solutions to the exercises in my O&#39;Reilly book &lt;a href=&#34;https://learning.oreilly.com/library/view/hands-on-machine-learning/9781491962282/&#34;&gt;Hands-on Machine Learning with Scikit-Learn and TensorFlow&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://learning.oreilly.com/library/view/hands-on-machine-learning/9781491962282/&#34;&gt;&lt;img src=&#34;http://akamaicovers.oreilly.com/images/9781491962282/cat.gif&#34; alt=&#34;book&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: there is now a newer edition of this book, please check out &lt;a href=&#34;https://github.com/ageron/handson-ml2&#34;&gt;github.com/ageron/handson-ml2&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;Want to play with these notebooks online without having to install anything?&lt;/h3&gt; &#xA;&lt;p&gt;Use any of the following services.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: Please be aware that these services provide temporary environments: anything you do will be deleted after a while, so make sure you download any data you care about.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Recommended&lt;/strong&gt;: open this repository in &lt;a href=&#34;https://colab.research.google.com/github/ageron/handson-ml/blob/master/&#34;&gt;Colaboratory&lt;/a&gt;: &lt;a href=&#34;https://colab.research.google.com/github/ageron/handson-ml/blob/master/&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/img/colab_favicon.ico&#34; width=&#34;90&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Or open it in &lt;a href=&#34;https://mybinder.org/v2/gh/ageron/handson-ml/master&#34;&gt;Binder&lt;/a&gt;: &lt;a href=&#34;https://mybinder.org/v2/gh/ageron/handson-ml/master&#34;&gt;&lt;img src=&#34;https://matthiasbussonnier.com/posts/img/binder_logo_128x128.png&#34; width=&#34;90&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Note&lt;/em&gt;: Most of the time, Binder starts up quickly and works great, but when handson-ml is updated, Binder creates a new environment from scratch, and this can take quite some time.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Or open it in &lt;a href=&#34;https://beta.deepnote.com/launch?template=data-science&amp;amp;url=https%3A//github.com/ageron/handson-ml/blob/master/index.ipynb&#34;&gt;Deepnote&lt;/a&gt;: &lt;a href=&#34;https://beta.deepnote.com/launch?template=data-science&amp;amp;url=https%3A//github.com/ageron/handson-ml/blob/master/index.ipynb&#34;&gt;&lt;img src=&#34;https://www.deepnote.com/static/illustration.png&#34; width=&#34;150&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Just want to quickly look at some notebooks, without executing any code?&lt;/h3&gt; &#xA;&lt;p&gt;Browse this repository using &lt;a href=&#34;https://nbviewer.jupyter.org/github/ageron/handson-ml/blob/master/index.ipynb&#34;&gt;jupyter.org&#39;s notebook viewer&lt;/a&gt;: &lt;a href=&#34;https://nbviewer.jupyter.org/github/ageron/handson-ml/blob/master/index.ipynb&#34;&gt;&lt;img src=&#34;https://jupyter.org/assets/nav_logo.svg?sanitize=true&#34; width=&#34;150&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/ageron/handson-ml/master/index.ipynb&#34;&gt;github.com&#39;s notebook viewer&lt;/a&gt; also works but it is slower and the math equations are not always displayed correctly.&lt;/p&gt; &#xA;&lt;h3&gt;Want to run this project using a Docker image?&lt;/h3&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://github.com/ageron/handson-ml/tree/master/docker&#34;&gt;Docker instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Want to install this project on your own machine?&lt;/h3&gt; &#xA;&lt;p&gt;Start by installing &lt;a href=&#34;https://www.anaconda.com/distribution/&#34;&gt;Anaconda&lt;/a&gt; (or &lt;a href=&#34;https://docs.conda.io/en/latest/miniconda.html&#34;&gt;Miniconda&lt;/a&gt;), &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;git&lt;/a&gt;, and if you have a TensorFlow-compatible GPU, install the &lt;a href=&#34;https://www.nvidia.com/Download/index.aspx&#34;&gt;GPU driver&lt;/a&gt;, as well as the appropriate version of CUDA and cuDNN (see TensorFlow&#39;s documentation for more details).&lt;/p&gt; &#xA;&lt;p&gt;Next, clone this project by opening a terminal and typing the following commands (do not type the first &lt;code&gt;$&lt;/code&gt; signs on each line, they just indicate that these are terminal commands):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/ageron/handson-ml.git&#xA;$ cd handson-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ conda env create -f environment.yml&#xA;$ conda activate tf1&#xA;$ python -m ipykernel install --user --name=python3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, start Jupyter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ jupyter notebook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need further instructions, read the &lt;a href=&#34;https://raw.githubusercontent.com/ageron/handson-ml/master/INSTALL.md&#34;&gt;detailed installation instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Which Python version should I use?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;I recommend Python 3.7. If you follow the installation instructions above, that&#39;s the version you will get. Most code will work with other versions of Python 3, but some libraries do not support Python 3.8 or 3.9 yet, which is why I recommend Python 3.7.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;I&#39;m getting an error when I call &lt;code&gt;load_housing_data()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Make sure you call &lt;code&gt;fetch_housing_data()&lt;/code&gt; &lt;em&gt;before&lt;/em&gt; you call &lt;code&gt;load_housing_data()&lt;/code&gt;. If you&#39;re getting an HTTP error, make sure you&#39;re running the exact same code as in the notebook (copy/paste it if needed). If the problem persists, please check your network configuration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;I&#39;m getting an SSL error on MacOSX&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You probably need to install the SSL certificates (see this &lt;a href=&#34;https://stackoverflow.com/questions/27835619/urllib-and-ssl-certificate-verify-failed-error&#34;&gt;StackOverflow question&lt;/a&gt;). If you downloaded Python from the official website, then run &lt;code&gt;/Applications/Python\ 3.7/Install\ Certificates.command&lt;/code&gt; in a terminal (change &lt;code&gt;3.7&lt;/code&gt; to whatever version you installed). If you installed Python using MacPorts, run &lt;code&gt;sudo port install curl-ca-bundle&lt;/code&gt; in a terminal.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;I&#39;ve installed this project locally. How do I update it to the latest version?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/ageron/handson-ml/master/INSTALL.md&#34;&gt;INSTALL.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How do I update my Python libraries to the latest versions, when using Anaconda?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/ageron/handson-ml/master/INSTALL.md&#34;&gt;INSTALL.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;I would like to thank everyone &lt;a href=&#34;https://github.com/ageron/handson-ml/graphs/contributors&#34;&gt;who contributed to this project&lt;/a&gt;, either by providing useful feedback, filing issues or submitting Pull Requests. Special thanks go to Haesun Park and Ian Beauregard who reviewed every notebook and submitted many PRs, including help on some of the exercise solutions. Thanks as well to Steven Bunkley and Ziembla who created the &lt;code&gt;docker&lt;/code&gt; directory, and to github user SuperYorio who helped on some exercise solutions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kishan0725/AJAX-Movie-Recommendation-System-with-Sentiment-Analysis</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/kishan0725/AJAX-Movie-Recommendation-System-with-Sentiment-Analysis</id>
    <link href="https://github.com/kishan0725/AJAX-Movie-Recommendation-System-with-Sentiment-Analysis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Content-Based Recommender System recommends movies similar to the movie user likes and analyses the sentiments on the reviews given by the user for that movie.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Content-Based-Movie-Recommender-System-with-sentiment-analysis-using-AJAX&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-3.8-blueviolet&#34; alt=&#34;Python&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Framework-Flask-red&#34; alt=&#34;Framework&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Frontend-HTML/CSS/JS-green&#34; alt=&#34;Frontend&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/API-TMDB-fcba03&#34; alt=&#34;API&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Updated version of this application can be found at:&lt;/strong&gt; &lt;a href=&#34;https://github.com/kishan0725/The-Movie-Cinema&#34;&gt;https://github.com/kishan0725/The-Movie-Cinema&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Content Based Recommender System recommends movies similar to the movie user likes and analyses the sentiments on the reviews given by the user for that movie.&lt;/p&gt; &#xA;&lt;p&gt;The details of the movies(title, genre, runtime, rating, poster, etc) are fetched using an API by TMDB, &lt;a href=&#34;https://www.themoviedb.org/documentation/api&#34;&gt;https://www.themoviedb.org/documentation/api&lt;/a&gt;, and using the IMDB id of the movie in the API, I did web scraping to get the reviews given by the user in the IMDB site using &lt;code&gt;beautifulsoup4&lt;/code&gt; and performed sentiment analysis on those reviews.&lt;/p&gt; &#xA;&lt;p&gt;Check out the live demo: &lt;a href=&#34;https://mrswsa.herokuapp.com/&#34;&gt;https://mrswsa.herokuapp.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Link to youtube demo: &lt;a href=&#34;https://www.youtube.com/watch?v=dhVePtyECFw&#34;&gt;https://www.youtube.com/watch?v=dhVePtyECFw&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Note&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h4&gt;Use this URL - &lt;a href=&#34;https://the-movie-buff.herokuapp.com/&#34;&gt;https://the-movie-buff.herokuapp.com/&lt;/a&gt; - in case if you see application error in the above mentioned URL&lt;/h4&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;The Movie Cinema&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;ve developed a similar application called &#34;The Movie Cinema&#34; which supports all language movies. But the only thing that differs from this application is that I&#39;ve used the TMDB&#39;s recommendation engine in &#34;The Movie Cinema&#34;. The recommendation part developed by me in this application doesn&#39;t support for multi-language movies as it consumes 200% of RAM (even after deploying it to Heroku) for generating Count Vectorizer matrix for all the 700,000+ movies in the TMDB.&lt;/p&gt; &#xA;&lt;p&gt;Link to &#34;The Movie Cinema&#34; application: &lt;a href=&#34;https://the-movie-cinema.herokuapp.com/&#34;&gt;https://the-movie-cinema.herokuapp.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t worry if the movie that you are looking for is not auto-suggested. Just type the movie name and click on &#34;enter&#34;. You will be good to go eventhough if you made some typo errors.&lt;/p&gt; &#xA;&lt;p&gt;Source Code: &lt;a href=&#34;https://github.com/kishan0725/The-Movie-Cinema&#34;&gt;https://github.com/kishan0725/The-Movie-Cinema&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Featured in Krish&#39;s Live Session on YouTube&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=A_78fGgQMjM&#34;&gt;&lt;img src=&#34;https://github.com/kishan0725/AJAX-Movie-Recommendation-System-with-Sentiment-Analysis/raw/master/static/krish-naik.PNG&#34; alt=&#34;krish youtube&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to get the API key?&lt;/h2&gt; &#xA;&lt;p&gt;Create an account in &lt;a href=&#34;https://www.themoviedb.org/&#34;&gt;https://www.themoviedb.org/&lt;/a&gt;, click on the &lt;code&gt;API&lt;/code&gt; link from the left hand sidebar in your account settings and fill all the details to apply for API key. If you are asked for the website URL, just give &#34;NA&#34; if you don&#39;t have one. You will see the API key in your &lt;code&gt;API&lt;/code&gt; sidebar once your request is approved.&lt;/p&gt; &#xA;&lt;h2&gt;How to run the project?&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone or download this repository to your local machine.&lt;/li&gt; &#xA; &lt;li&gt;Install all the libraries mentioned in the &lt;a href=&#34;https://github.com/kishan0725/Movie-Recommendation-System-with-Sentiment-Analysis/raw/master/requirements.txt&#34;&gt;requirements.txt&lt;/a&gt; file with the command &lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Get your API key from &lt;a href=&#34;https://www.themoviedb.org/&#34;&gt;https://www.themoviedb.org/&lt;/a&gt;. (Refer the above section on how to get the API key)&lt;/li&gt; &#xA; &lt;li&gt;Replace YOUR_API_KEY in &lt;strong&gt;both&lt;/strong&gt; the places (line no. 15 and 29) of &lt;code&gt;static/recommend.js&lt;/code&gt; file and hit save.&lt;/li&gt; &#xA; &lt;li&gt;Open your terminal/command prompt from your project directory and run the file &lt;code&gt;main.py&lt;/code&gt; by executing the command &lt;code&gt;python main.py&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Go to your browser and type &lt;code&gt;http://127.0.0.1:5000/&lt;/code&gt; in the address bar.&lt;/li&gt; &#xA; &lt;li&gt;Hurray! That&#39;s it.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/36665975/168742738-5435cf76-1a42-4d87-94b4-999e5bfc48d3.png&#34; alt=&#34;Recommendation App&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Similarity Score :&lt;/h2&gt; &#xA;&lt;p&gt;How does it decide which item is most similar to the item user likes? Here come the similarity scores.&lt;/p&gt; &#xA;&lt;p&gt;It is a numerical value ranges between zero to one which helps to determine how much two items are similar to each other on a scale of zero to one. This similarity score is obtained measuring the similarity between the text details of both of the items. So, similarity score is the measure of similarity between given text details of two items. This can be done by cosine-similarity.&lt;/p&gt; &#xA;&lt;h2&gt;How Cosine Similarity works?&lt;/h2&gt; &#xA;&lt;p&gt;Cosine similarity is a metric used to measure how similar the documents are irrespective of their size. Mathematically, it measures the cosine of the angle between two vectors projected in a multi-dimensional space. The cosine similarity is advantageous because even if the two similar documents are far apart by the Euclidean distance (due to the size of the document), chances are they may still be oriented closer together. The smaller the angle, higher the cosine similarity.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/36665975/70401457-a7530680-1a55-11ea-9158-97d4e8515ca4.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;More about Cosine Similarity : &lt;a href=&#34;https://www.machinelearningplus.com/nlp/cosine-similarity/&#34;&gt;Understanding the Math behind Cosine Similarity&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sources of the datasets&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/carolzhangdc/imdb-5000-movie-dataset&#34;&gt;IMDB 5000 Movie Dataset&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/rounakbanik/the-movies-dataset&#34;&gt;The Movies Dataset&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_American_films_of_2018&#34;&gt;List of movies in 2018&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_American_films_of_2019&#34;&gt;List of movies in 2019&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_American_films_of_2020&#34;&gt;List of movies in 2020&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>Kulbear/deep-learning-coursera</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/Kulbear/deep-learning-coursera</id>
    <link href="https://github.com/Kulbear/deep-learning-coursera" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Deep Learning Specialization by Andrew Ng on Coursera.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Deep Learning Specialization on Coursera&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Master Deep Learning, and Break into AI&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Instructor: &lt;a href=&#34;http://www.andrewng.org/&#34;&gt;Andrew Ng&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This repo contains all my work for this specialization. All the code base, quiz questions, screenshot, and images, are taken from, unless specified, &lt;a href=&#34;https://www.coursera.org/specializations/deep-learning&#34;&gt;Deep Learning Specialization on Coursera&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What I want to say&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;VERBOSE CONTENT WARNING: YOU CAN JUMP TO THE NEXT SECTION IF YOU WANT&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;As a CS major student and a long-time self-taught learner, I have completed many CS related MOOCs on Coursera, Udacity, Udemy, and Edx. I do understand the hard time you spend on understanding new concepts and debugging your program. There are discussion forums on most MOOC platforms, however, even a question with detailed description may need some time to be answered. Here I released these solutions, which are &lt;strong&gt;only for your reference purpose&lt;/strong&gt;. It may help you to save some time. And I hope you don&#39;t copy any part of the code (the programming assignments are fairly easy if you read the instructions carefully), see the quiz solutions before you start your own adventure. This course is almost the simplest deep learning course I have ever taken, but the simplicity is based on the fabulous course content and structure. It&#39;s a treasure given by deeplearning.ai team.&lt;/p&gt; &#xA;&lt;p&gt;Currently, this repo has 3 major parts you may be interested in and I will give a list here.&lt;/p&gt; &#xA;&lt;h2&gt;Programming Assignments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Course 1: Neural Networks and Deep Learning&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Neural%20Networks%20and%20Deep%20Learning/Logistic%20Regression%20with%20a%20Neural%20Network%20mindset.ipynb&#34;&gt;Week 2 - PA 1 - Logistic Regression with a Neural Network mindset&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Neural%20Networks%20and%20Deep%20Learning/Planar%20data%20classification%20with%20one%20hidden%20layer.ipynb&#34;&gt;Week 3 - PA 2 - Planar data classification with one hidden layer&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Neural%20Networks%20and%20Deep%20Learning/Building%20your%20Deep%20Neural%20Network%20-%20Step%20by%20Step.ipynb&#34;&gt;Week 4 - PA 3 - Building your Deep Neural Network: Step by Step¶&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Neural%20Networks%20and%20Deep%20Learning/Deep%20Neural%20Network%20-%20Application.ipynb&#34;&gt;Week 4 - PA 4 - Deep Neural Network for Image Classification: Application&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Course 2: Improving Deep Neural Networks: Hyperparameter tuning, Regularization and Optimization&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Initialization.ipynb&#34;&gt;Week 1 - PA 1 - Initialization&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Regularization.ipynb&#34;&gt;Week 1 - PA 2 - Regularization&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Gradient%20Checking.ipynb&#34;&gt;Week 1 - PA 3 - Gradient Checking&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Optimization%20methods.ipynb&#34;&gt;Week 2 - PA 4 - Optimization Methods&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Tensorflow%20Tutorial.ipynb&#34;&gt;Week 3 - PA 5 - TensorFlow Tutorial&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Course 3: Structuring Machine Learning Projects&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;There is no PA for this course. But this course comes with very interesting case study quizzes.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Course 4: Convolutional Neural Networks&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Convolutional%20Neural%20Networks/Convolution%20model%20-%20Step%20by%20Step%20-%20v1.ipynb&#34;&gt;Week 1 - PA 1 - Convolutional Model: step by step&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Convolutional%20Neural%20Networks/Convolution%20model%20-%20Application%20-%20v1.ipynb&#34;&gt;Week 1 - PA 2 - Convolutional Model: application&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Convolutional%20Neural%20Networks/Keras%20-%20Tutorial%20-%20Happy%20House%20v1.ipynb&#34;&gt;Week 2 - PA 1 - Keras - Tutorial - Happy House&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Convolutional%20Neural%20Networks/Residual%20Networks%20-%20v1.ipynb&#34;&gt;Week 2 - PA 2 - Residual Networks&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Course 5: Sequence Models&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Sequence%20Models/Building%20a%20Recurrent%20Neural%20Network%20-%20Step%20by%20Step%20-%20v2.ipynb&#34;&gt;Week 1 - PA 1 - Building a Recurrent Neural Network - Step by Step&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Sequence%20Models/Dinosaurus%20Island%20--%20Character%20level%20language%20model%20final%20-%20v3.ipynb&#34;&gt;Week 1 - PA 2 - Character level language model - Dinosaurus land&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quiz Solutions&lt;/h2&gt; &#xA;&lt;p&gt;There are concerns that some people may use the content here to quickly ace the course so I&#39;ll no longer update any quiz solution.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Course 1: Neural Networks and Deep Learning&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Neural%20Networks%20and%20Deep%20Learning/Week%201%20Quiz%20-%20Introduction%20to%20deep%20learning.md&#34;&gt;Week 1 Quiz - Introduction to deep learning&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Neural%20Networks%20and%20Deep%20Learning/Week%202%20Quiz%20-%20Neural%20Network%20Basics.md&#34;&gt;Week 2 Quiz - Neural Network Basics&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Neural%20Networks%20and%20Deep%20Learning/Week%203%20Quiz%20-%20%20Shallow%20Neural%20Networks.md&#34;&gt;Week 3 Quiz - Shallow Neural Networks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Neural%20Networks%20and%20Deep%20Learning/Week%204%20Quiz%20-%20Key%20concepts%20on%20Deep%20Neural%20Networks.md&#34;&gt;Week 4 Quiz - Key concepts on Deep Neural Networks&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Course 2: Improving Deep Neural Networks: Hyperparameter tuning, Regularization and Optimization&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Week%201%20Quiz%20-%20Practical%20aspects%20of%20deep%20learning.md&#34;&gt;Week 1 Quiz - Practical aspects of deep learning&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Week%202%20Quiz%20-%20Optimization%20algorithms.md&#34;&gt;Week 2 Quiz - Optimization algorithms&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Week%203%20Quiz%20-%20Hyperparameter%20tuning%2C%20Batch%20Normalization%2C%20Programming%20Frameworks.md&#34;&gt;Week 3 Quiz - Hyperparameter tuning, Batch Normalization, Programming Frameworks&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Course 3: Structuring Machine Learning Projects&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Structuring%20Machine%20Learning%20Projects/Week%201%20Quiz%20-%20Bird%20recognition%20in%20the%20city%20of%20Peacetopia%20(case%20study).md&#34;&gt;Week 1 Quiz - Bird recognition in the city of Peacetopia (case study)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/raw/master/Structuring%20Machine%20Learning%20Projects/Week%202%20Quiz%20-%20Autonomous%20driving%20(case%20study).md&#34;&gt;Week 2 Quiz - Autonomous driving (case study)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;del&gt;- Course 4: Convolutional Neural Networks&lt;/del&gt; &lt;del&gt;- Course 5: Sequence Models&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;## Important Slide Notes&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;I screenshotted some important slide page and store them into GitHub issues. It seems not very helpful for everyone since I only keep those I think may be useful to me.&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;- &lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/issues/1&#34;&gt;Screenshots for Course 1: Neural Networks and Deep Learning&lt;/a&gt;&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;- &lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/issues/2&#34;&gt;Screenshots for Course 2: Improving Deep Neural Networks: Hyperparameter tuning, Regularization and Optimization&lt;/a&gt;&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;- &lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/issues/3&#34;&gt;Screenshots for Course 3: Structuring Machine Learning Projects&lt;/a&gt;&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;- &lt;a href=&#34;https://github.com/Kulbear/deep-learning-coursera/issues/14&#34;&gt;Screenshots for Course 4: Convolutional Neural Networks&lt;/a&gt;&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;- Screenshots for Course 5: Sequence Models&lt;/del&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Milestones&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;2017-08-17&lt;/strong&gt;: Finished the first-released 3 courses, YAY! 😈&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>amanchadha/coursera-deep-learning-specialization</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/amanchadha/coursera-deep-learning-specialization</id>
    <link href="https://github.com/amanchadha/coursera-deep-learning-specialization" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Notes, programming assignments and quizzes from all courses within the Coursera Deep Learning specialization offered by deeplearning.ai: (i) Neural Networks and Deep Learning; (ii) Improving Deep Neural Networks: Hyperparameter tuning, Regularization and Optimization; (iii) Structuring Machine Learning Projects; (iv) Convolutional Neural Network…&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Deep Learning Specialization on Coursera (offered by deeplearning.ai)&lt;/h1&gt; &#xA;&lt;p&gt;Programming assignments and quizzes from all courses in the Coursera &lt;a href=&#34;https://www.coursera.org/specializations/deep-learning&#34;&gt;Deep Learning specialization&lt;/a&gt; offered by &lt;code&gt;deeplearning.ai&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Instructor: &lt;a href=&#34;http://www.andrewng.org/&#34;&gt;Andrew Ng&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;h3&gt;For detailed interview-ready notes on all courses in the Coursera Deep Learning specialization, refer &lt;a href=&#34;https://aman.ai/&#34;&gt;www.aman.ai&lt;/a&gt;.&lt;/h3&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;Run &lt;code&gt;setup.sh&lt;/code&gt; to (i) download a pre-trained VGG-19 dataset and (ii) extract the zip&#39;d pre-trained models and datasets that are needed for all the assignments.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This repo contains my work for this specialization. The code base, quiz questions and diagrams are taken from the &lt;a href=&#34;https://www.coursera.org/specializations/deep-learning&#34;&gt;Deep Learning Specialization on Coursera&lt;/a&gt;, unless specified otherwise.&lt;/p&gt; &#xA;&lt;h2&gt;2021 Version&lt;/h2&gt; &#xA;&lt;p&gt;This specialization was updated in April 2021 to include developments in deep learning and programming frameworks, with the biggest change being shifting from TensorFlow 1 to TensorFlow 2. This repo has been updated accordingly as well.&lt;/p&gt; &#xA;&lt;h2&gt;Programming Assignments&lt;/h2&gt; &#xA;&lt;h3&gt;Course 1: Neural Networks and Deep Learning&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C1%20-%20Neural%20Networks%20and%20Deep%20Learning/Week%202/Python%20Basics%20with%20Numpy/Python_Basics_With_Numpy_v3a.ipynb&#34;&gt;Week 2 - PA 1 - Python Basics with Numpy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C1%20-%20Neural%20Networks%20and%20Deep%20Learning/Week%202/Logistic%20Regression%20as%20a%20Neural%20Network/Logistic_Regression_with_a_Neural_Network_mindset_v6a.ipynb&#34;&gt;Week 2 - PA 2 - Logistic Regression with a Neural Network mindset&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C1%20-%20Neural%20Networks%20and%20Deep%20Learning/Week%203/Planar%20data%20classification%20with%20one%20hidden%20layer/Planar_data_classification_with_onehidden_layer_v6c.ipynb&#34;&gt;Week 3 - PA 3 - Planar data classification with one hidden layer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C1%20-%20Neural%20Networks%20and%20Deep%20Learning/Week%204/Building%20your%20Deep%20Neural%20Network%20-%20Step%20by%20Step/Building_your_Deep_Neural_Network_Step_by_Step_v8a.ipynb&#34;&gt;Week 4 - PA 4 - Building your Deep Neural Network: Step by Step&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C1%20-%20Neural%20Networks%20and%20Deep%20Learning/Week%204/Deep%20Neural%20Network%20Application_%20Image%20Classification/Deep%20Neural%20Network%20-%20Application%20v8.ipynb&#34;&gt;Week 4 - PA 5 - Deep Neural Network for Image Classification: Application&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Course 2: Improving Deep Neural Networks: Hyperparameter tuning, Regularization and Optimization&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C2%20-%20Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Week%201/Initialization/Initialization.ipynb&#34;&gt;Week 1 - PA 1 - Initialization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C2%20-%20Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Week%201/Regularization/Regularization_v2a.ipynb&#34;&gt;Week 1 - PA 2 - Regularization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C2%20-%20Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Week%201/Gradient%20Checking/Gradient%20Checking%20v1.ipynb&#34;&gt;Week 1 - PA 3 - Gradient Checking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C2%20-%20Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Week%202/Optimization_methods_v1b.ipynb&#34;&gt;Week 2 - PA 4 - Optimization Methods&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C2%20-%20Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Week%203/Tensorflow_introduction.ipynb&#34;&gt;Week 3 - PA 5 - TensorFlow Tutorial&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Course 3: Structuring Machine Learning Projects&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There are no programming assignments for this course. But this course comes with very interesting case study quizzes (below).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Course 4: Convolutional Neural Networks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C4%20-%20Convolutional%20Neural%20Networks/Week%201/Convolution_model_Step_by_Step_v1.ipynb&#34;&gt;Week 1 - PA 1 - Convolutional Model: step by step&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C4%20-%20Convolutional%20Neural%20Networks/Week%201/Convolution_model_Application.ipynb&#34;&gt;Week 1 - PA 2 - Convolutional Neural Networks: Application&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C4%20-%20Convolutional%20Neural%20Networks/Week%202/KerasTutorial/Keras%20-%20Tutorial%20-%20Happy%20House%20v2.ipynb&#34;&gt;Week 2 - PA 1 - Keras - Tutorial - Happy House&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C4%20-%20Convolutional%20Neural%20Networks/Week%202/ResNets/Residual_Networks.ipynb&#34;&gt;Week 2 - PA 2 - Residual Networks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C4%20-%20Convolutional%20Neural%20Networks/Week%202/Transfer%20Learning%20with%20MobileNet/Transfer_learning_with_MobileNet_v1.ipynb&#34;&gt;Week 2 - PA 2 - Transfer Learning with MobileNet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C4%20-%20Convolutional%20Neural%20Networks/Week%203/Car%20detection%20for%20Autonomous%20Driving/Autonomous_driving_application_Car_detection.ipynb&#34;&gt;Week 3 - PA 1 - Car detection with YOLO for Autonomous Driving&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C4%20-%20Convolutional%20Neural%20Networks/Week%203/Image%20Segmentation%20Unet/Image_segmentation_Unet_v2.ipynb&#34;&gt;Week 3 - PA 2 - Image Segmentation Unet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C4%20-%20Convolutional%20Neural%20Networks/Week%204/Neural%20Style%20Transfer/Art_Generation_with_Neural_Style_Transfer.ipynb&#34;&gt;Week 4 - PA 1 - Art Generation with Neural Style Transfer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C4%20-%20Convolutional%20Neural%20Networks/Week%204/Face%20Recognition/Face_Recognition.ipynb&#34;&gt;Week 4 - PA 2 - Face Recognition&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Course 5: Sequence Models&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C5%20-%20Sequence%20Models/Week%201/Building%20a%20Recurrent%20Neural%20Network%20-%20Step%20by%20Step/Building_a_Recurrent_Neural_Network_Step_by_Step.ipynb&#34;&gt;Week 1 - PA 1 - Building a Recurrent Neural Network - Step by Step&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C5%20-%20Sequence%20Models/Week%201/Dinosaur%20Island%20--%20Character-level%20language%20model/Dinosaurus_Island_Character_level_language_model.ipynb&#34;&gt;Week 1 - PA 2 - Dinosaur Land -- Character-level Language Modeling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C5%20-%20Sequence%20Models/Week%201/Jazz%20improvisation%20with%20LSTM/Improvise_a_Jazz_Solo_with_an_LSTM_Network_v4_Solution.ipynb&#34;&gt;Week 1 - PA 3 - Jazz improvisation with LSTM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C5%20-%20Sequence%20Models/Week%202/Word%20Vector%20Representation/Operations_on_word_vectors_v2a.ipynb&#34;&gt;Week 2 - PA 1 - Word Vector Representation and Debiasing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C5%20-%20Sequence%20Models/Week%202/Emojify/Emoji_v3a.ipynb&#34;&gt;Week 2 - PA 2 - Emojify!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C5%20-%20Sequence%20Models/Week%203/Machine%20Translation/Neural_machine_translation_with_attention_v4a.ipynb&#34;&gt;Week 3 - PA 1 - Neural Machine Translation with Attention&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C5%20-%20Sequence%20Models/Week%203/Trigger%20word%20detection/Trigger_word_detection_v2a.ipynb&#34;&gt;Week 3 - PA 2 - Trigger Word Detection&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C5%20-%20Sequence%20Models/Week%204/Transformer%20Subclass/C5_W4_A1_Transformer_Subclass_v1.ipynb&#34;&gt;Week 4 - PA 1 - Transformer Network&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C5%20-%20Sequence%20Models/Week%203/Named%20Entity%20Recognition/Transformer_application_Named_Entity_Recognition.ipynb&#34;&gt;Week 3 - PA 2 - Transformer Network Application: Named-Entity Recognition&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C5%20-%20Sequence%20Models/Week%203/Question%20Answering/QA_transformer.ipynb&#34;&gt;Week 3 - PA 2 - Transformer Network Application: Question Answering&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quiz Solutions&lt;/h2&gt; &#xA;&lt;h3&gt;Course 1: Neural Networks and Deep Learning&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Week 1 Quiz - Introduction to deep learning: &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C1%20-%20Neural%20Networks%20and%20Deep%20Learning/Week%201/Week%201%20Quiz%20-%20Introduction%20to%20deep%20learning.md&#34;&gt;Text&lt;/a&gt; | &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C1%20-%20Neural%20Networks%20and%20Deep%20Learning/Week%201/Week%201%20Quiz%20-%20Introduction%20to%20deep%20learning.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Week 2 Quiz - Neural Network Basics: &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C1%20-%20Neural%20Networks%20and%20Deep%20Learning/Week%202/Week%202%20Quiz%20-%20Neural%20Network%20Basics.md&#34;&gt;Text&lt;/a&gt; | &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C1%20-%20Neural%20Networks%20and%20Deep%20Learning/Week%202/Week%202%20Quiz%20-%20Neural%20Network%20Basics.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Week 3 Quiz - Shallow Neural Networks: &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C1%20-%20Neural%20Networks%20and%20Deep%20Learning/Week%203/Week%203%20Quiz%20-%20Shallow%20Neural%20Networks.md&#34;&gt;Text&lt;/a&gt; | &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C1%20-%20Neural%20Networks%20and%20Deep%20Learning/Week%203/Week%203%20Quiz%20-%20Shallow%20Neural%20Networks.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Week 4 Quiz - Key concepts on Deep Neural Networks: &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C1%20-%20Neural%20Networks%20and%20Deep%20Learning/Week%204/Week%204%20Quiz%20-%20Key%20concepts%20on%20Deep%20Neural%20Networks.md&#34;&gt;Text&lt;/a&gt; | &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C1%20-%20Neural%20Networks%20and%20Deep%20Learning/Week%204/Week%204%20Quiz%20-%20Key%20concepts%20on%20Deep%20Neural%20Networks.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Course 2: Improving Deep Neural Networks: Hyperparameter tuning, Regularization and Optimization&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Week 1 Quiz - Practical aspects of deep learning: &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C2%20-%20Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Week%201/Week%201%20Quiz%20-%20Practical%20aspects%20of%20deep%20learning.md&#34;&gt;Text&lt;/a&gt; | &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C2%20-%20Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Week%201/Week%201%20Quiz%20-%20Practical%20aspects%20of%20deep%20learning.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Week 2 Quiz - Optimization algorithms: &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C2%20-%20Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Week%202/Week%202%20Quiz%20-%20Optimization%20algorithms.md&#34;&gt;Text&lt;/a&gt; | &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C2%20-%20Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Week%202/Week%202%20Quiz%20-%20Optimization%20algorithms.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Week 3 Quiz - Hyperparameter tuning, Batch Normalization, Programming Frameworks: &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C2%20-%20Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Week%203/Week%203%20Quiz%20-%20Hyperparameter%20tuning%2C%20Batch%20Normalization%2C%20Programming%20Frameworks.md&#34;&gt;Text&lt;/a&gt; | &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C2%20-%20Improving%20Deep%20Neural%20Networks%20Hyperparameter%20tuning%2C%20Regularization%20and%20Optimization/Week%203/Week%203%20Quiz%20-%20Hyperparameter%20tuning%2C%20Batch%20Normalization%2C%20Programming%20Frameworks.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Course 3: Structuring Machine Learning Projects&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Week 1 Quiz - Bird recognition in the city of Peacetopia (case study): &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C3%20-%20Structuring%20Machine%20Learning%20Projects/Week%201%20Quiz%20-%20Bird%20recognition%20in%20the%20city%20of%20Peacetopia%20(case%20study).md&#34;&gt;Text&lt;/a&gt; | &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C3%20-%20Structuring%20Machine%20Learning%20Projects/Week%201%20Quiz%20-%20Bird%20recognition%20in%20the%20city%20of%20Peacetopia%20(case%20study).pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Week 2 Quiz - Autonomous driving (case study): &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C3%20-%20Structuring%20Machine%20Learning%20Projects/Week%202%20Quiz%20-%20Autonomous%20driving%20(case%20study).md&#34;&gt;Text&lt;/a&gt; | &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C3%20-%20Structuring%20Machine%20Learning%20Projects/Week%202%20Quiz%20-%20Autonomous%20driving%20(case%20study).pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Course 4: Convolutional Neural Networks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Week 1 Quiz - The basics of ConvNets: &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C4%20-%20Convolutional%20Neural%20Networks/Week%201/Week%201%20Quiz%20-%20The%20basics%20of%20ConvNets.md&#34;&gt;Text&lt;/a&gt; | &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C4%20-%20Convolutional%20Neural%20Networks/Week%201/Week%201%20Quiz%20-%20The%20basics%20of%20ConvNets.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Week 2 Quiz - Deep convolutional models: &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C4%20-%20Convolutional%20Neural%20Networks/Week%202/Week%202%20Quiz%20-%20Deep%20convolutional%20models.md&#34;&gt;Text&lt;/a&gt; | &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C4%20-%20Convolutional%20Neural%20Networks/Week%202/Week%202%20Quiz%20-%20Deep%20convolutional%20models.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Week 3 Quiz - Detection algorithms: &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C4%20-%20Convolutional%20Neural%20Networks/Week%203/Week%203%20Quiz%20-%20Detection%20algorithms.md&#34;&gt;Text&lt;/a&gt; | &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C4%20-%20Convolutional%20Neural%20Networks/Week%203/Week%203%20Quiz%20-%20Detection%20algorithms.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Week 4 Quiz - Special applications: Face recognition &amp;amp; Neural style transfer: &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C4%20-%20Convolutional%20Neural%20Networks/Week%204/Week%204%20Quiz%20-%20Special%20applications%20Face%20Recognition%20and%20Neural%20Style%20Transfer.md&#34;&gt;Text&lt;/a&gt; | &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C4%20-%20Convolutional%20Neural%20Networks/Week%204/Week%204%20Quiz%20-%20Special%20applications%20Face%20Recognition%20and%20Neural%20Style%20Transfer.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Course 5: Sequence Models&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Week 1 Quiz - Recurrent Neural Networks: &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C5%20-%20Sequence%20Models/Week%201/Week%201%20Quiz%20-%20Recurrent%20Neural%20Networks.md&#34;&gt;Text&lt;/a&gt; | &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C5%20-%20Sequence%20Models/Week%201/Week%201%20Quiz%20-%20Recurrent%20Neural%20Networks.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Week 2 Quiz - Natural Language Processing &amp;amp; Word Embeddings: &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C5%20-%20Sequence%20Models/Week%202/Week%202%20Quiz%20-%20Natural%20Language%20Processing%20%26%20Word%20Embeddings.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Week 3 Quiz - Sequence models &amp;amp; Attention mechanism: &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C5%20-%20Sequence%20Models/Week%203/Week%203%20Quiz%20-%20Sequence%20models%20%26%20Attention%20mechanisms.md&#34;&gt;Text&lt;/a&gt; | &lt;a href=&#34;https://nbviewer.jupyter.org/github/amanchadha/coursera-deep-learning-specialization/blob/master/C5%20-%20Sequence%20Models/Week%203/Week%203%20Quiz%20-%20Sequence%20models%20%26%20Attention%20mechanisms.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;I recognize the time people spend on building intuition, understanding new concepts and debugging assignments. The solutions uploaded here are &lt;strong&gt;only for reference&lt;/strong&gt;. They are meant to unblock you if you get stuck somewhere. Please do not copy any part of the code as-is (the programming assignments are fairly easy if you read the instructions carefully). Similarly, try out the quizzes yourself before you refer to the quiz solutions. This course is the most straight-forward deep learning course I have ever taken, with fabulous course content and structure. It&#39;s a treasure by the deeplearning.ai team.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ageron/handson-ml2</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/ageron/handson-ml2</id>
    <link href="https://github.com/ageron/handson-ml2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A series of Jupyter notebooks that walk you through the fundamentals of Machine Learning and Deep Learning in Python using Scikit-Learn, Keras and TensorFlow 2.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Machine Learning Notebooks&lt;/h1&gt; &#xA;&lt;p&gt;This project aims at teaching you the fundamentals of Machine Learning in python. It contains the example code and solutions to the exercises in the second edition of my O&#39;Reilly book &lt;a href=&#34;https://www.oreilly.com/library/view/hands-on-machine-learning/9781492032632/&#34;&gt;Hands-on Machine Learning with Scikit-Learn, Keras and TensorFlow&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/51aqYc1QyrL._SX379_BO1,204,203,200_.jpg&#34; title=&#34;book&#34; width=&#34;150&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you are looking for the first edition notebooks, check out &lt;a href=&#34;https://github.com/ageron/handson-ml&#34;&gt;ageron/handson-ml&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;Want to play with these notebooks online without having to install anything?&lt;/h3&gt; &#xA;&lt;p&gt;Use any of the following services (I recommended Colab or Kaggle, since they offer free GPUs and TPUs).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: &lt;em&gt;Please be aware that these services provide temporary environments: anything you do will be deleted after a while, so make sure you download any data you care about.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/ageron/handson-ml2/blob/master/&#34; target=&#34;_parent&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://homl.info/kaggle/&#34;&gt;&lt;img src=&#34;https://kaggle.com/static/images/open-in-kaggle.svg?sanitize=true&#34; alt=&#34;Open in Kaggle&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mybinder.org/v2/gh/ageron/handson-ml2/HEAD?filepath=%2Findex.ipynb&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34; alt=&#34;Launch binder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://homl.info/deepnote/&#34;&gt;&lt;img src=&#34;https://deepnote.com/buttons/launch-in-deepnote-small.svg?sanitize=true&#34; alt=&#34;Launch in Deepnote&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Just want to quickly look at some notebooks, without executing any code?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/ageron/handson-ml2/blob/master/index.ipynb&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jupyter/design/master/logos/Badges/nbviewer_badge.svg?sanitize=true&#34; alt=&#34;Render nbviewer&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ageron/handson-ml2/raw/master/index.ipynb&#34;&gt;github.com&#39;s notebook viewer&lt;/a&gt; also works but it&#39;s not ideal: it&#39;s slower, the math equations are not always displayed correctly, and large notebooks often fail to open.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Want to run this project using a Docker image?&lt;/h3&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://github.com/ageron/handson-ml2/tree/master/docker&#34;&gt;Docker instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Want to install this project on your own machine?&lt;/h3&gt; &#xA;&lt;p&gt;Start by installing &lt;a href=&#34;https://www.anaconda.com/distribution/&#34;&gt;Anaconda&lt;/a&gt; (or &lt;a href=&#34;https://docs.conda.io/en/latest/miniconda.html&#34;&gt;Miniconda&lt;/a&gt;), &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;git&lt;/a&gt;, and if you have a TensorFlow-compatible GPU, install the &lt;a href=&#34;https://www.nvidia.com/Download/index.aspx&#34;&gt;GPU driver&lt;/a&gt;, as well as the appropriate version of CUDA and cuDNN (see TensorFlow&#39;s documentation for more details).&lt;/p&gt; &#xA;&lt;p&gt;Next, clone this project by opening a terminal and typing the following commands (do not type the first &lt;code&gt;$&lt;/code&gt; signs on each line, they just indicate that these are terminal commands):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/ageron/handson-ml2.git&#xA;$ cd handson-ml2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ conda env create -f environment.yml&#xA;$ conda activate tf2&#xA;$ python -m ipykernel install --user --name=python3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, start Jupyter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ jupyter notebook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need further instructions, read the &lt;a href=&#34;https://raw.githubusercontent.com/ageron/handson-ml2/master/INSTALL.md&#34;&gt;detailed installation instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Which Python version should I use?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;I recommend Python 3.8. If you follow the installation instructions above, that&#39;s the version you will get. Most code will work with other versions of Python 3, but some libraries do not support Python 3.9 or 3.10 yet, which is why I recommend Python 3.8.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;I&#39;m getting an error when I call &lt;code&gt;load_housing_data()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Make sure you call &lt;code&gt;fetch_housing_data()&lt;/code&gt; &lt;em&gt;before&lt;/em&gt; you call &lt;code&gt;load_housing_data()&lt;/code&gt;. If you&#39;re getting an HTTP error, make sure you&#39;re running the exact same code as in the notebook (copy/paste it if needed). If the problem persists, please check your network configuration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;I&#39;m getting an SSL error on MacOSX&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You probably need to install the SSL certificates (see this &lt;a href=&#34;https://stackoverflow.com/questions/27835619/urllib-and-ssl-certificate-verify-failed-error&#34;&gt;StackOverflow question&lt;/a&gt;). If you downloaded Python from the official website, then run &lt;code&gt;/Applications/Python\ 3.8/Install\ Certificates.command&lt;/code&gt; in a terminal (change &lt;code&gt;3.8&lt;/code&gt; to whatever version you installed). If you installed Python using MacPorts, run &lt;code&gt;sudo port install curl-ca-bundle&lt;/code&gt; in a terminal.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;I&#39;ve installed this project locally. How do I update it to the latest version?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/ageron/handson-ml2/master/INSTALL.md&#34;&gt;INSTALL.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How do I update my Python libraries to the latest versions, when using Anaconda?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/ageron/handson-ml2/master/INSTALL.md&#34;&gt;INSTALL.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;I would like to thank everyone &lt;a href=&#34;https://github.com/ageron/handson-ml2/graphs/contributors&#34;&gt;who contributed to this project&lt;/a&gt;, either by providing useful feedback, filing issues or submitting Pull Requests. Special thanks go to Haesun Park and Ian Beauregard who reviewed every notebook and submitted many PRs, including help on some of the exercise solutions. Thanks as well to Steven Bunkley and Ziembla who created the &lt;code&gt;docker&lt;/code&gt; directory, and to github user SuperYorio who helped on some exercise solutions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>benedekrozemberczki/tigerlily</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/benedekrozemberczki/tigerlily</id>
    <link href="https://github.com/benedekrozemberczki/tigerlily" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TigerLily: Finding drug interactions in silico with the Graph.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/tigerlily&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/tigerlily.svg?sanitize=true&#34; alt=&#34;PyPI Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tigerlily.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/tigerlily/badge/?version=latest&#34; alt=&#34;Docs Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/benedekrozemberczki/tigerlily?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/benedekrozemberczki/tigerlily/branch/main/graph/badge.svg?token=30XLVBUIEH&#34; alt=&#34;Code Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/benedekrozemberczki/tigerlily/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/benedekrozemberczki/tigerlily/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/abs/2204.08206&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/ArXiv-2204.08206-orange.svg?sanitize=true&#34; alt=&#34;Arxiv&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;100%&#34; src=&#34;https://github.com/benedekrozemberczki/tigerlily/raw/main/images/tigerlily_logo.jpg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Drug Interaction Prediction with Tigerlily&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://tigerlily.readthedocs.io&#34;&gt;Documentation&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&#34;https://github.com/benedekrozemberczki/tigerlily/raw/main/example_notebook.ipynb&#34;&gt;Example Notebook&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=fEWcor96tt8&#34;&gt;Youtube Video&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&#34;http://arxiv.org/abs/2204.08206&#34;&gt;Project Report&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tigerlily&lt;/strong&gt; is a &lt;a href=&#34;https://www.tigergraph.com/&#34;&gt;TigerGraph&lt;/a&gt; based system designed to solve the &lt;a href=&#34;https://arxiv.org/abs/2111.02916&#34;&gt;drug interaction prediction task&lt;/a&gt;. In this machine learning task, we want to predict whether two drugs have an adverse interaction. Our framework allows us to solve this &lt;strong&gt;&lt;a href=&#34;https://www.newscientist.com/article/2143486-side-effects-kill-thousands-but-our-data-on-them-is-flawed/&#34;&gt;highly relevant real-world problem&lt;/a&gt;&lt;/strong&gt; using graph mining techniques in these steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;(a)&lt;/strong&gt; Using &lt;a href=&#34;https://github.com/pyTigerGraph/pyTigerGraph&#34;&gt;PyTigergraph&lt;/a&gt; we create a heterogeneous biological graph of drugs and proteins.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;(b)&lt;/strong&gt; We calculate the &lt;a href=&#34;https://github.com/tigergraph/gsql-graph-algorithms/raw/master/algorithms/Centrality/pagerank/personalized/multi_source/tg_pagerank_pers.gsql&#34;&gt;personalized PageRank&lt;/a&gt; scores of drug nodes in the &lt;a href=&#34;https://tgcloud.io/&#34;&gt;TigerGraph Cloud&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;(c)&lt;/strong&gt; We embed the nodes using &lt;a href=&#34;https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.NMF.html&#34;&gt;sparse non-negative matrix factorization&lt;/a&gt; of the personalized PageRank matrix.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;(d)&lt;/strong&gt; Using the node embeddings we train a &lt;a href=&#34;https://lightgbm.readthedocs.io/en/latest/&#34;&gt;gradient boosting&lt;/a&gt; based drug interaction predictor.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;(A) &lt;strong&gt;Creating and populating a Graph&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;90%&#34; src=&#34;https://github.com/benedekrozemberczki/tigerlily/raw/main/images/pair_scoring_A.jpg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;As a first step, the basic &lt;strong&gt;TigerLily&lt;/strong&gt; tools are imported, and we load the example dataset that integrated DrugBankDDI and the BioSNAP datasets. We create a &lt;code&gt;PersonalizedPageRankMachine&lt;/code&gt; and connect to the host with the &lt;code&gt;Graph&lt;/code&gt;. The settings of this machine should be the appropriate user credentials and details; a secret is obtained in the &lt;strong&gt;TigerGraph Graph Studio&lt;/strong&gt;. We install the default Personalized PageRank query and upload the edges of the example dataset used in our demonstrations. This graph has &lt;strong&gt;drug&lt;/strong&gt; and &lt;strong&gt;protein&lt;/strong&gt; nodes, &lt;strong&gt;drug-protein&lt;/strong&gt; and &lt;strong&gt;protein-protein&lt;/strong&gt; interactions. Our goal is to predict the &lt;strong&gt;drug-drug&lt;/strong&gt; interactions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from tigerlily.dataset import ExampleDataset&#xA;from tigerlily.embedding import EmbeddingMachine&#xA;from tigerlily.operator import hadamard_operator&#xA;from tigerlily.pagerank import PersonalizedPageRankMachine&#xA;&#xA;dataset = ExampleDataset()&#xA;&#xA;edges = dataset.read_edges()&#xA;target = dataset.read_target()&#xA;&#xA;machine = PersonalizedPageRankMachine(host=&#34;host_name&#34;,&#xA;                                      graphname=&#34;graph_name&#34;,&#xA;                                      username=&#34;username_value&#34;,&#xA;                                      secret=&#34;secret_value&#34;,&#xA;                                      password=&#34;password_value&#34;)&#xA;                           &#xA;machine.connect()&#xA;machine.install_query()&#xA;&#xA;machine.upload_graph(new_graph=True, edges=edges)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;(B) &lt;strong&gt;Computing the Approximate Personalized PageRank vectors&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;90%&#34; src=&#34;https://github.com/benedekrozemberczki/tigerlily/raw/main/images/pair_scoring_B.jpg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;We are only interested in describing the neighbourhood of drug nodes in the biological graph. Because of this, we only retrieve the neighbourhood of the drugs - for each drug we retrieve those nodes (top-k closest neighbors) which are the closest based on the Personalized PageRank scores. We are going to learn the drug embeddings based on these scores.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;drug_node_ids = machine.connection.getVertices(&#34;drug&#34;)&#xA;&#xA;pagerank_scores = machine.get_personalized_pagerank(drug_node_ids)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;(C) Learning the Drug Embeddings and Drug Pair Feature Generation&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;90%&#34; src=&#34;https://github.com/benedekrozemberczki/tigerlily/raw/main/images/pair_scoring_C.jpg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;We create an embedding machine that creates drug node representations. The embedding machine instance has a random seed, a dimensions hyperparameter (this sets the number of factors), and a maximal iteration count for the factorization. An embedding is learned from the Personalized PageRank scores and using the drug features we create drug pair features with the operator function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;embedding_machine = EmbeddingMachine(seed=42,&#xA;                                     dimensions=32,&#xA;                                     max_iter=100)&#xA;&#xA;embedding = embedding_machine.fit(pagerank_scores)&#xA;&#xA;drug_pair_features = embedding_machine.create_features(target, hadamard_operator)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;(D) Predicting Drug Interactions and Inference&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;90%&#34; src=&#34;https://github.com/benedekrozemberczki/tigerlily/raw/main/images/pair_scoring_D.jpg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;We load a gradient boosting-based classifier, an evaluation metric for binary classification, and a function to create train-test splits. We create a train and test portion of the drug pairs using 80% of the pairs for training. A gradient boosted tree model is trained, score the model on the test set. We compute an AUROC score on the test portion of the dataset and print it out.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from lightgbm import LGBMClassifier&#xA;from sklearn.metrics import roc_auc_score&#xA;from sklearn.model_selection import train_test_split&#xA;&#xA;X_train, X_test, y_train, y_test = train_test_split(drug_pair_features,&#xA;                                                    target,&#xA;                                                    train_size=0.8,&#xA;                                                    random_state=42)&#xA;&#xA;model = LGBMClassifier(learning_rate=0.01,&#xA;                       n_estimators=100)&#xA;&#xA;model.fit(X_train,y_train[&#34;label&#34;])&#xA;&#xA;predicted_label = model.predict_proba(X_test)&#xA;&#xA;auroc_score_value = roc_auc_score(y_test[&#34;label&#34;], predicted_label[:,1])&#xA;&#xA;print(f&#39;AUROC score: {auroc_score_value :.4f}&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Head over to the &lt;a href=&#34;https://tigerlily.readthedocs.io&#34;&gt;documentation&lt;/a&gt; to find out more about installation and a full API reference. For a quick start, check out the &lt;a href=&#34;https://github.com/benedekrozemberczki/tigerlily/raw/main/example_notebook.ipynb&#34;&gt;example notebook&lt;/a&gt;. If you notice anything unexpected, please open an &lt;a href=&#34;https://raw.githubusercontent.com/benedekrozemberczki/tigerlily/main/github.com/benedekrozemberczki/tigerlily/issues&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Citing&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you find &lt;em&gt;Tigerlily&lt;/em&gt; useful in your research, please consider adding the following citation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{tigerlily2022,&#xA;  author = {Benedek Rozemberczki},&#xA;  title = {TigerLily: Finding drug interactions in silico with the Graph},&#xA;  year = {2022},&#xA;  publisher = {GitHub},&#xA;  journal = {GitHub repository},&#xA;  howpublished = {\url{https://github.com/benedekrozemberczki/tigerlily}},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;To install tigerlily, simply run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install tigerlily&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Running tests&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Running tests requires that you run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ tox -e py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;License&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/benedekrozemberczki/tigerlily/raw/main/LICENSE&#34;&gt;Apache 2.0 License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Credit&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;strong&gt;TigerLily&lt;/strong&gt; logo and the high level machine learning workflow image are based on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.fontspace.com/kubos-origami-font-f29538&#34;&gt;Kubos Origami Font&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thenounproject.com/&#34;&gt;Noun Project Icons&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Benedek Rozemberczki has a yearly subscription to the Noun Project that allows the customization and commercial use of the icons.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ine-rmotr-curriculum/FreeCodeCamp-Pandas-Real-Life-Example</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/ine-rmotr-curriculum/FreeCodeCamp-Pandas-Real-Life-Example</id>
    <link href="https://github.com/ine-rmotr-curriculum/FreeCodeCamp-Pandas-Real-Life-Example" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;rmotr.com&lt;/h3&gt; &#xA;&lt;h1&gt;Data Science with Python Course&lt;/h1&gt; &#xA;&lt;p&gt;This material is created for our &lt;a href=&#34;https://rmotr.com/data-science-python-course&#34;&gt;Data Science with Python Course&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Pierian-Data/Complete-Python-3-Bootcamp</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/Pierian-Data/Complete-Python-3-Bootcamp</id>
    <link href="https://github.com/Pierian-Data/Complete-Python-3-Bootcamp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Course Files for Complete Python 3 Bootcamp Course on Udemy&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Complete-Python-3-Bootcamp&lt;/h1&gt; &#xA;&lt;p&gt;Course Files for Complete Python 3 Bootcamp Course on Udemy&lt;/p&gt; &#xA;&lt;p&gt;Copyright(©) by Pierian Data Inc.&lt;/p&gt; &#xA;&lt;p&gt;Get it now for 95% off with the link: &lt;a href=&#34;https://www.udemy.com/complete-python-bootcamp/?couponCode=COMPLETE_GITHUB&#34;&gt;https://www.udemy.com/complete-python-bootcamp/?couponCode=COMPLETE_GITHUB&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bnsreenu/python_for_image_processing_APEER</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/bnsreenu/python_for_image_processing_APEER</id>
    <link href="https://github.com/bnsreenu/python_for_image_processing_APEER" rel="alternate"></link>
    <summary type="html">&lt;p&gt;https://www.youtube.com/playlist?list=PLHae9ggVvqPgyRQQOtENr6hK0m1UquGaG&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Introductory python tutorials for image processing&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLHae9ggVvqPgyRQQOtENr6hK0m1UquGaG&#34;&gt;https://www.youtube.com/playlist?list=PLHae9ggVvqPgyRQQOtENr6hK0m1UquGaG&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;These video tutorials are designed to train absolute beginners on Python coding with a special emphasis on image analysis.&lt;/p&gt; &#xA;&lt;p&gt;Coding enables researchers to ...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;extend the capability of scientific software packages&lt;/li&gt; &#xA; &lt;li&gt;customize applications for specific jobs to be done&lt;/li&gt; &#xA; &lt;li&gt;automate rudimentary tasks freeing up valuable research time&lt;/li&gt; &#xA; &lt;li&gt;improve reproducibility of experiments via automation&lt;/li&gt; &#xA; &lt;li&gt;add an important skill to their portfolio making them well adjusted to the digital world&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is recommended to follow the videos as a course as we&#39;ve structured them to progressively cover topics from basics of python to advanced libraries for image analysis.&lt;/p&gt; &#xA;&lt;p&gt;Relevant links: To download Anaconda: &lt;a href=&#34;https://www.anaconda.com/distribution/&#34;&gt;https://www.anaconda.com/distribution/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To download ZEN Lite: &lt;a href=&#34;https://www.zeiss.com/microscopy/us/products/microscope-software/zen-lite.html&#34;&gt;https://www.zeiss.com/microscopy/us/products/microscope-software/zen-lite.html&lt;/a&gt; (If you&#39;re from outside US, please Google search for &#39;ZEN Lite&#39; to find your local download link)&lt;/p&gt; &#xA;&lt;p&gt;To sign up for APEER account: &lt;a href=&#34;http://www.apeer.com&#34;&gt;www.apeer.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>realpython/materials</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/realpython/materials</id>
    <link href="https://github.com/realpython/materials" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bonus materials, exercises, and example projects for our Python tutorials&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Real Python Materials&lt;/h1&gt; &#xA;&lt;p&gt;Bonus materials, exercises, and example projects for Real Python&#39;s &lt;a href=&#34;https://realpython.com&#34;&gt;Python tutorials&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Build Status: &lt;a href=&#34;https://circleci.com/gh/realpython/materials&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/realpython/materials.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Got a Question?&lt;/h2&gt; &#xA;&lt;p&gt;The best way to get support for Real Python courses &amp;amp; articles and code in this repository is to join one of our &lt;a href=&#34;https://realpython.com/office-hours/&#34;&gt;weekly Office Hours calls&lt;/a&gt; or to ask your question in the &lt;a href=&#34;https://realpython.com/community/&#34;&gt;RP Community Slack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Due to time constraints we cannot provide 1:1 support via GitHub. See you on Slack or on the next Office Hours call 🙂&lt;/p&gt; &#xA;&lt;h2&gt;Adding Source Code &amp;amp; Sample Projects to This Repo (RP Contributors)&lt;/h2&gt; &#xA;&lt;h3&gt;Running Code Style Checks&lt;/h3&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;http://flake8.pycqa.org/en/latest/&#34;&gt;flake8&lt;/a&gt; and &lt;a href=&#34;https://github.com/ambv/black&#34;&gt;black&lt;/a&gt; to ensure a consistent code style for all of our sample code in this repository.&lt;/p&gt; &#xA;&lt;p&gt;Run the following commands to validate your code against the linters:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ flake8&#xA;$ black --check .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running Python Code Formatter&lt;/h3&gt; &#xA;&lt;p&gt;We&#39;re using a tool called &lt;a href=&#34;https://github.com/ambv/black&#34;&gt;black&lt;/a&gt; on this repo to ensure consistent formatting. On CI it runs in &#34;check&#34; mode to ensure any new files added to the repo are following PEP 8. If you see linter warnings that say something like &#34;would reformat some_file.py&#34; it means black disagrees with your formatting.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The easiest way to resolve these errors is to just run Black locally on the code and then committing those changes, as explained below.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;To automatically re-format your code to be consistent with our code style guidelines, run &lt;a href=&#34;https://github.com/ambv/black&#34;&gt;black&lt;/a&gt; in the repository root folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ black .&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Azure/MachineLearningNotebooks</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/Azure/MachineLearningNotebooks</id>
    <link href="https://github.com/Azure/MachineLearningNotebooks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Python notebooks with ML and deep learning examples with Azure Machine Learning Python SDK | Microsoft&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Azure Machine Learning Python SDK notebooks&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;a community-driven repository of examples using mlflow for tracking can be found at &lt;a href=&#34;https://github.com/Azure/azureml-examples&#34;&gt;https://github.com/Azure/azureml-examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Welcome to the Azure Machine Learning Python SDK notebooks repository!&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;These notebooks are recommended for use in an Azure Machine Learning &lt;a href=&#34;https://docs.microsoft.com/azure/machine-learning/concept-compute-instance&#34;&gt;Compute Instance&lt;/a&gt;, where you can run them without any additional set up.&lt;/p&gt; &#xA;&lt;p&gt;However, the notebooks can be run in any development environment with the correct &lt;code&gt;azureml&lt;/code&gt; packages installed.&lt;/p&gt; &#xA;&lt;p&gt;Install the &lt;code&gt;azureml.core&lt;/code&gt; Python package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install azureml-core&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install additional packages as needed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install azureml-mlflow&#xA;pip install azureml-dataset-runtime&#xA;pip install azureml-automl-runtime&#xA;pip install azureml-pipeline&#xA;pip install azureml-pipeline-steps&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We recommend starting with one of the &lt;a href=&#34;https://raw.githubusercontent.com/Azure/MachineLearningNotebooks/master/tutorials/compute-instance-quickstarts&#34;&gt;quickstarts&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This repository is a push-only mirror. Pull requests are ignored.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. Please see the &lt;a href=&#34;https://raw.githubusercontent.com/Azure/MachineLearningNotebooks/master/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/azure/machine-learning&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/AcademicContent</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/microsoft/AcademicContent</id>
    <link href="https://github.com/microsoft/AcademicContent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free tech resources for faculty, students, researchers, life-long learners, and academic community builders for use in tech based courses, workshops, and hackathons.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Technical Resources for Academic Communities&lt;/h1&gt; &#xA;&lt;p&gt;This repo provides technical resources to help students and faculty learn about Azure and teach others. The content covers cross-platform scenarios in artificial intelligence and machine learning, data science, web development, mobile app dev, internet of things, and DevOps. It also includes interesting tech talks and engaging, fun tech challenges.&lt;/p&gt; &#xA;&lt;h2&gt;Learn by Doing with our Curricula&lt;/h2&gt; &#xA;&lt;p&gt;Check out our project-based &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AcademicContent/main/curricula.md&#34;&gt;full semester-long curricula&lt;/a&gt; that can be used on your own or in the classroom. They also make for fun, easy-to-run workshops!&lt;/p&gt; &#xA;&lt;h2&gt;Hackathons&lt;/h2&gt; &#xA;&lt;p&gt;Attending a hackathon? Here are some helpful &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AcademicContent/main/hackathon-content.md&#34;&gt;guides and resources&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Certification&lt;/h2&gt; &#xA;&lt;p&gt;Looking to get certified? &lt;a href=&#34;https://docs.microsoft.com/learn/certifications/student-training-and-certification&#34;&gt;Take practice exams&lt;/a&gt; to get ready for the certification.&lt;/p&gt; &#xA;&lt;h2&gt;Teach with our Learn-based workshops&lt;/h2&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://aka.ms/workshopomatic&#34;&gt;Workshop Library&lt;/a&gt; for a list of workshops based primarily on Microsoft Learn modules.&lt;/p&gt; &#xA;&lt;p&gt;Other workshops can be found &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AcademicContent/main/workshops.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;More courseware can be discovered &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AcademicContent/main/courseware.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Offers and Programs&lt;/h2&gt; &#xA;&lt;p&gt;If you are looking for useful links and a deck about programs of interest to schools, faculty and students, visit our &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AcademicContent/main/offers-programs/README.md&#34;&gt;offers and programs area&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Attend our &lt;a href=&#34;https://github.com/microsoft/reactors&#34;&gt;Reactor Sessions&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;We focus on developing high-quality content for all cloud, data science, machine Learning, web development, and artificial intelligence learners. Through workshops, tech talks, and hackathons hosted around the world, come learn and apply new skills!&lt;/p&gt; &#xA;&lt;h2&gt;K-12 Content&lt;/h2&gt; &#xA;&lt;p&gt;Most of the content here is for higher education, but we do have &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AcademicContent/main/k-12-content.md&#34;&gt;links&lt;/a&gt; available for k-12 students and their teachers.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We 💖&lt;strong&gt;love&lt;/strong&gt;💖 contributions. In fact, we want students, faculty, researchers and life-long learners to contribute to this repo, either by adding links to existing content, or building content. Please read the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AcademicContent/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;p&gt;To report any issues, please log a GitHub issue. Include the content section, module number, and title, along with any error messages and screenshots.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jakevdp/PythonDataScienceHandbook</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/jakevdp/PythonDataScienceHandbook</id>
    <link href="https://github.com/jakevdp/PythonDataScienceHandbook" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Python Data Science Handbook: full text in Jupyter Notebooks&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Python Data Science Handbook&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mybinder.org/v2/gh/jakevdp/PythonDataScienceHandbook/master?filepath=notebooks%2FIndex.ipynb&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://colab.research.google.com/github/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/Index.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the entire &lt;a href=&#34;http://shop.oreilly.com/product/0636920034919.do&#34;&gt;Python Data Science Handbook&lt;/a&gt;, in the form of (free!) Jupyter notebooks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jakevdp/PythonDataScienceHandbook/master/notebooks/figures/PDSH-cover.png&#34; alt=&#34;cover image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to Use this Book&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Read the book in its entirety online at &lt;a href=&#34;https://jakevdp.github.io/PythonDataScienceHandbook/&#34;&gt;https://jakevdp.github.io/PythonDataScienceHandbook/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the code using the Jupyter notebooks available in this repository&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/jakevdp/PythonDataScienceHandbook/master/notebooks&#34;&gt;notebooks&lt;/a&gt; directory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Launch executable versions of these notebooks using &lt;a href=&#34;http://colab.research.google.com&#34;&gt;Google Colab&lt;/a&gt;: &lt;a href=&#34;https://colab.research.google.com/github/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/Index.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Launch a live notebook server with these notebooks using &lt;a href=&#34;https://beta.mybinder.org/&#34;&gt;binder&lt;/a&gt;: &lt;a href=&#34;https://mybinder.org/v2/gh/jakevdp/PythonDataScienceHandbook/master?filepath=notebooks%2FIndex.ipynb&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Buy the printed book through &lt;a href=&#34;http://shop.oreilly.com/product/0636920034919.do&#34;&gt;O&#39;Reilly Media&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;The book was written and tested with Python 3.5, though other Python versions (including Python 2.7) should work in nearly all cases.&lt;/p&gt; &#xA;&lt;p&gt;The book introduces the core libraries essential for working with data in Python: particularly &lt;a href=&#34;http://ipython.org&#34;&gt;IPython&lt;/a&gt;, &lt;a href=&#34;http://numpy.org&#34;&gt;NumPy&lt;/a&gt;, &lt;a href=&#34;http://pandas.pydata.org&#34;&gt;Pandas&lt;/a&gt;, &lt;a href=&#34;http://matplotlib.org&#34;&gt;Matplotlib&lt;/a&gt;, &lt;a href=&#34;http://scikit-learn.org&#34;&gt;Scikit-Learn&lt;/a&gt;, and related packages. Familiarity with Python as a language is assumed; if you need a quick introduction to the language itself, see the free companion project, &lt;a href=&#34;https://github.com/jakevdp/WhirlwindTourOfPython&#34;&gt;A Whirlwind Tour of Python&lt;/a&gt;: it&#39;s a fast-paced introduction to the Python language aimed at researchers and scientists.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://nbviewer.jupyter.org/github/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/Index.ipynb&#34;&gt;Index.ipynb&lt;/a&gt; for an index of the notebooks available to accompany the text.&lt;/p&gt; &#xA;&lt;h2&gt;Software&lt;/h2&gt; &#xA;&lt;p&gt;The code in the book was tested with Python 3.5, though most (but not all) will also work correctly with Python 2.7 and other older Python versions.&lt;/p&gt; &#xA;&lt;p&gt;The packages I used to run the code in the book are listed in &lt;a href=&#34;https://raw.githubusercontent.com/jakevdp/PythonDataScienceHandbook/master/requirements.txt&#34;&gt;requirements.txt&lt;/a&gt; (Note that some of these exact version numbers may not be available on your platform: you may have to tweak them for your own use). To install the requirements using &lt;a href=&#34;http://conda.pydata.org&#34;&gt;conda&lt;/a&gt;, run the following at the command-line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ conda install --file requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To create a stand-alone environment named &lt;code&gt;PDSH&lt;/code&gt; with Python 3.5 and all the required package versions, run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ conda create -n PDSH python=3.5 --file requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can read more about using conda environments in the &lt;a href=&#34;http://conda.pydata.org/docs/using/envs.html&#34;&gt;Managing Environments&lt;/a&gt; section of the conda documentation.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;h3&gt;Code&lt;/h3&gt; &#xA;&lt;p&gt;The code in this repository, including all code samples in the notebooks listed above, is released under the &lt;a href=&#34;https://raw.githubusercontent.com/jakevdp/PythonDataScienceHandbook/master/LICENSE-CODE&#34;&gt;MIT license&lt;/a&gt;. Read more at the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;Open Source Initiative&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Text&lt;/h3&gt; &#xA;&lt;p&gt;The text content of the book is released under the &lt;a href=&#34;https://raw.githubusercontent.com/jakevdp/PythonDataScienceHandbook/master/LICENSE-TEXT&#34;&gt;CC-BY-NC-ND license&lt;/a&gt;. Read more at &lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/3.0/us/legalcode&#34;&gt;Creative Commons&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mrdbourke/pytorch-apple-silicon</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/mrdbourke/pytorch-apple-silicon</id>
    <link href="https://github.com/mrdbourke/pytorch-apple-silicon" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Setup PyTorch on Mac/Apple Silicon plus a few benchmarks.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PyTorch on Apple Silicon&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;You:&lt;/strong&gt; Have an Apple Silicon Mac (M1, M1 Pro, M1 Max, M1 Ultra) and would like to set it up for data science and machine learning.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This repo:&lt;/strong&gt; Helps you install various software tools such as Homebrew and Miniforge3 to use to install various data science and machine learning tools such as PyTorch. We&#39;ll also be getting PyTorch to run on the Apple Silicon GPU for (hopefully) faster computing.&lt;/p&gt; &#xA;&lt;h2&gt;Setup a machine learning environment with PyTorch on Mac (short version)&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; As of May 21 2022, accelerated PyTorch for Mac (PyTorch using the Apple Silicon GPU) is still in beta, so expect some rough edges.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Requirements:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apple Silicon Mac (M1, M1 Pro, M1 Max, M1 Ultra, etc).&lt;/li&gt; &#xA; &lt;li&gt;macOS 12.3+ (PyTorch will work on previous versions but the GPU on your Mac won&#39;t get used, this means slower code).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Steps&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download and install Homebrew from &lt;a href=&#34;https://brew.sh&#34;&gt;https://brew.sh&lt;/a&gt;. Follow the steps it prompts you to go through after installation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-MacOSX-arm64.sh&#34;&gt;Download Miniforge3&lt;/a&gt; (Conda installer) for macOS arm64 chips (M1, M1 Pro, M1 Max, M1 Ultra).&lt;/li&gt; &#xA; &lt;li&gt;Install Miniforge3 into home directory.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-other&#34;&gt;chmod +x ~/Downloads/Miniforge3-MacOSX-arm64.sh&#xA;sh ~/Downloads/Miniforge3-MacOSX-arm64.sh&#xA;source ~/miniforge3/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Restart terminal.&lt;/li&gt; &#xA; &lt;li&gt;Create a directory to setup PyTorch environment.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-other&#34;&gt;mkdir pytorch-test&#xA;cd pytorch-test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Make and activate Conda environment.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Python 3.8 is the most stable for using the following setup.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-other&#34;&gt;conda create --prefix ./env python=3.8&#xA;conda activate ./env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Install the PyTorch nightly version for Mac with pip from the &lt;a href=&#34;https://pytorch.org/get-started/locally/&#34;&gt;PyTorch getting started page&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-other&#34;&gt;pip3 install --pre torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/nightly/cpu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will install the following:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Installing collected packages: urllib3, typing-extensions, pillow, numpy, idna, charset-normalizer, certifi, torch, requests, torchvision, torchaudio&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;8&#34;&gt; &#xA; &lt;li&gt;Install common data science packages.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-other&#34;&gt;conda install jupyter pandas numpy matplotlib scikit-learn tqdm &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;9&#34;&gt; &#xA; &lt;li&gt;Start Jupyter.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-other&#34;&gt;jupyter notebook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;10&#34;&gt; &#xA; &lt;li&gt;Create a new notebook by &#34;New&#34; -&amp;gt; &#34;Notebook: Python 3 (ipykernel)&#34; and run the following code to verfiy all the dependencies are available and check PyTorch version/GPU access.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;import numpy as np&#xA;import pandas as pd&#xA;import sklearn&#xA;import matplotlib.pyplot as plt&#xA;&#xA;print(f&#34;PyTorch version: {torch.__version__}&#34;)&#xA;&#xA;# Check PyTorch has access to MPS (Metal Performance Shader, Apple&#39;s GPU architecture)&#xA;print(f&#34;Is MPS (Metal Performance Shader) built? {torch.backends.mps.is_built()}&#34;)&#xA;print(f&#34;Is MPS available? {torch.backends.mps.is_available()}&#34;)&#xA;&#xA;# Set the device      &#xA;device = &#34;mps&#34; if torch.backends.mps.is_available() else &#34;cpu&#34;&#xA;print(f&#34;Using device: {device}&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If it all worked, you should see something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-other&#34;&gt;PyTorch version: 1.12.0.dev20220519&#xA;Is MPS (Metal Performance Shader) built? True&#xA;Is MPS available? True&#xA;Using device: mps&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; See more on running MPS as a backend in the &lt;a href=&#34;https://pytorch.org/docs/master/notes/mps.html&#34;&gt;PyTorch documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;11&#34;&gt; &#xA; &lt;li&gt;To run data/models on an Apple Silicon GPU, use the PyTorch device name &lt;code&gt;&#34;mps&#34;&lt;/code&gt; with &lt;code&gt;.to(&#34;mps&#34;)&lt;/code&gt;. MPS stands for &lt;em&gt;Metal Performance Shaders&lt;/em&gt;, &lt;a href=&#34;https://developer.apple.com/metal/&#34;&gt;Metal is Apple&#39;s GPU framework&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;&#xA;# Set the device&#xA;device = &#34;mps&#34; if torch.backends.mps.is_available() else &#34;cpu&#34;&#xA;&#xA;# Create data and send it to the device&#xA;x = torch.rand(size=(3, 4)).to(device)&#xA;x&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, you should get something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor([[2.6020e-01, 9.6467e-01, 7.5282e-01, 1.8063e-01],&#xA;        [7.0760e-02, 9.8610e-01, 6.5195e-01, 7.5700e-01],&#xA;        [3.4065e-01, 1.8971e-01, 6.0876e-01, 9.3907e-01]], device=&#39;mps:0&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Congratulations! Your Apple Silicon device is now running PyTorch + a handful of other helpful data science and machine learning libraries.&lt;/p&gt; &#xA;&lt;h2&gt;Results&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Last update:&lt;/strong&gt; 23 May 2022&lt;/p&gt; &#xA;&lt;p&gt;Benchmark results were gathered with the notebook &lt;a href=&#34;https://github.com/mrdbourke/pytorch-apple-silicon/raw/main/01_cifar10_tinyvgg.ipynb&#34;&gt;&lt;code&gt;00_cifar10_tinyvgg.ipynb&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Running TinyVGG on CIFAR10 dataset with batch size 32 and image size 32*32:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mrdbourke/pytorch-apple-silicon/main/results/TinyVGG_cifar10_benchmark_with_batch_size_32_image_size_32.png&#34; alt=&#34;results for running PyTorch on Apple M1 Pro with TinyVGG and CIFAR10 with image size 32x32&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Running TinyVGG on CIFAR10 dataset with batch size 32 and image size 224*224:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mrdbourke/pytorch-apple-silicon/main/results/TinyVGG_cifar10_benchmark_with_batch_size_32_image_size_224.png&#34; alt=&#34;results for running PyTorch on Apple M1 Pro with TinyVGG and CIFAR10 with image size 224x224&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Looks like the &lt;code&gt;&#34;mps&#34;&lt;/code&gt; device shines when the GPU is getting utilized more. However, since accelerated PyTorch for Mac is still in beta, I&#39;m sure there&#39;s room for improvement.&lt;/p&gt; &#xA;&lt;h2&gt;How to setup a PyTorch environment on Apple Silicon using Miniforge (longer version)&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re new to creating environments, using an Apple Silicon Mac (M1, M1 Pro, M1 Max, M1 Ultra) machine and would like to get started running PyTorch and other data science libraries, follow the below steps.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You&#39;re going to see the term &#34;package manager&#34; a lot below. Think of it like this: a &lt;strong&gt;package manager&lt;/strong&gt; is a piece of software that helps you install other pieces (packages) of software.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Installing package managers (Homebrew and Miniforge)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download and install Homebrew from &lt;a href=&#34;https://brew.sh&#34;&gt;https://brew.sh&lt;/a&gt;. Homebrew is a package manager that sets up a lot of useful things on your machine, including Command Line Tools for Xcode, you&#39;ll need this to run things like &lt;code&gt;git&lt;/code&gt;. The command to install Homebrew will look something like:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/bin/bash -c &#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It will explain what it&#39;s doing and what you need to do as you go.&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge#download&#34;&gt;Download the most compatible version of Miniforge&lt;/a&gt; (minimal installer for Conda specific to conda-forge, Conda is another package manager and conda-forge is a Conda channel) from GitHub.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you&#39;re using an M1 variant Mac, it&#39;s &#34;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-MacOSX-arm64.sh&#34;&gt;Miniforge3-MacOSX-arm64&lt;/a&gt;&#34; &amp;lt;- click for direct download.&lt;/p&gt; &#xA;&lt;p&gt;Clicking the link above will download a shell file called &lt;code&gt;Miniforge3-MacOSX-arm64.sh&lt;/code&gt; to your &lt;code&gt;Downloads&lt;/code&gt; folder (unless otherwise specified).&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Open Terminal.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;We&#39;ve now got a shell file capable of installing Miniforge, but to do so we&#39;ll have to modify it&#39;s permissions to &lt;a href=&#34;https://askubuntu.com/tags/chmod/info&#34;&gt;make it executable&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To do so, we&#39;ll run the command &lt;code&gt;chmod -x FILE_NAME&lt;/code&gt; which stands for &#34;change mode of FILE_NAME to -executable&#34;.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ll then execute (run) the program using &lt;code&gt;sh&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x ~/Downloads/Miniforge3-MacOSX-arm64.sh&#xA;sh ~/Downloads/Miniforge3-MacOSX-arm64.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;This should install Miniforge3 into your home directory (&lt;code&gt;~/&lt;/code&gt; stands for &#34;Home&#34; on Mac).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To check this, we can try to activate the &lt;code&gt;(base)&lt;/code&gt; environment, we can do so using the &lt;code&gt;source&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source ~/miniforge3/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If it worked, you should see something like the following in your terminal window.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;(base) daniel@Daniels-MBP ~ %&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;We&#39;ve just installed some new software and for it to fully work, we&#39;ll need to &lt;strong&gt;restart terminal&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Creating a PyTorch environment&lt;/h3&gt; &#xA;&lt;p&gt;Now we&#39;ve got the package managers we need, it&#39;s time to install PyTorch.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s setup a folder called &lt;code&gt;pytorch-test&lt;/code&gt; (you can call this anything you want) and install everything in there to make sure it&#39;s working.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; An &lt;strong&gt;environment&lt;/strong&gt; is like a virtual room on your computer. For example, you use the kitchen in your house for cooking because it&#39;s got all the tools you need. It would be strange to have an oven in your bedroom. The same thing on your computer. If you&#39;re going to be working on specific software, you&#39;ll want it all in one place and not scattered everywhere else.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Make a directory called &lt;code&gt;pytorch-test&lt;/code&gt;. This is the directory we&#39;re going to be storing our environment. And inside the environment will be the software tools we need to run PyTorch, especially PyTorch on the Apple Silicon GPU.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We can do so with the &lt;code&gt;mkdir&lt;/code&gt; command which stands for &#34;make directory&#34;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir pytorch-test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;8&#34;&gt; &#xA; &lt;li&gt;Change into &lt;code&gt;pytorch-test&lt;/code&gt;. For the rest of the commands we&#39;ll be running them inside the directory &lt;code&gt;pytorch-test&lt;/code&gt; so we need to change into it.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We can do this with the &lt;code&gt;cd&lt;/code&gt; command which stands for &#34;change directory&#34;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd pytorch-test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;9&#34;&gt; &#xA; &lt;li&gt;Now we&#39;re inside the &lt;code&gt;pyorch-test&lt;/code&gt; directory, let&#39;s create a new Conda environment using the &lt;code&gt;conda&lt;/code&gt; command (this command was installed when we installed Miniforge above).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We do so using &lt;code&gt;conda create --prefix ./env&lt;/code&gt; which stands for &#34;conda create an environment with the name &lt;code&gt;file/path/to/this/folder/env&lt;/code&gt;&#34;. The &lt;code&gt;.&lt;/code&gt; stands for &#34;everything before&#34;.&lt;/p&gt; &#xA;&lt;p&gt;For example, if I didn&#39;t use the &lt;code&gt;./env&lt;/code&gt;, my filepath looks like: &lt;code&gt;/Users/daniel/pytorch-test/env&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create --prefix ./env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;10&#34;&gt; &#xA; &lt;li&gt;Activate the environment. If &lt;code&gt;conda&lt;/code&gt; created the environment correctly, you should be able to activate it using &lt;code&gt;conda activate path/to/environment&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Short version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda activate ./env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Long version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda activate /Users/daniel/pytorch-test/env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It&#39;s important to activate your environment every time you&#39;d like to work on projects that use the software you install into that environment. For example, you might have one environment for every different project you work on. And all of the different tools for that specific project are stored in its specific environment.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If activating your environment went correctly, your terminal window prompt should look something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;(/Users/daniel/pytorch-test/env) daniel@Daniels-MBP pytorch-test %&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;11&#34;&gt; &#xA; &lt;li&gt;Now we&#39;ve got a Conda environment setup, it&#39;s time to install the software we need.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Let&#39;s start by installing the nightly version of PyTorch for Mac from the &lt;a href=&#34;https://pytorch.org/get-started/locally/&#34;&gt;PyTorch install page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; As of May 21 2022, accelerated PyTorch for Mac (PyTorch using the Apple Silicon GPU) is still in beta, so expect some rough edges.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip3 install --pre torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/nightly/cpu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above stands for &#34;hey pip install all of the PyTorch and torch dependencies from the nightly PyTorch channel&#34;.&lt;/p&gt; &#xA;&lt;p&gt;If it worked, you should see a bunch of stuff being downloaded and installed for you.&lt;/p&gt; &#xA;&lt;ol start=&#34;12&#34;&gt; &#xA; &lt;li&gt;Install common data science packages.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you&#39;d like to work on other various data science and machine learning projects, you&#39;re likely going to need Jupyter Notebooks, pandas for data manipulation, NumPy for numeric computing, matplotlib for plotting and Scikit-Learn for traditional machine learning algorithms and processing functions.&lt;/p&gt; &#xA;&lt;p&gt;To install those in the current environment run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda install jupyter pandas numpy matplotlib scikit-learn tqdm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;13&#34;&gt; &#xA; &lt;li&gt;Test it out. To see if everything worked, try starting a Jupyter Notebook and importing the installed packages.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Start a Jupyter notebook&#xA;jupyter notebook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the notebook is started, in the first cell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;import numpy as np&#xA;import pandas as pd&#xA;import sklearn&#xA;import matplotlib.pyplot as plt&#xA;&#xA;print(f&#34;PyTorch version: {torch.__version__}&#34;)&#xA;&#xA;# Check PyTorch has access to MPS (Metal Performance Shader, Apple&#39;s GPU architecture)&#xA;print(f&#34;Is MPS (Metal Performance Shader) built? {torch.backends.mps.is_built()}&#34;)&#xA;print(f&#34;Is MPS available? {torch.backends.mps.is_available()}&#34;)&#xA;&#xA;# Set the device      &#xA;device = &#34;mps&#34; if torch.backends.mps.is_available() else &#34;cpu&#34;&#xA;print(f&#34;Using device: {device}&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If it all worked, you should see something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-other&#34;&gt;PyTorch version: 1.12.0.dev20220519&#xA;Is MPS (Metal Performance Shader) built? True&#xA;Is MPS available? True&#xA;Using device: mps&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; See more on running MPS as a backend in the &lt;a href=&#34;https://pytorch.org/docs/master/notes/mps.html&#34;&gt;PyTorch documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;14&#34;&gt; &#xA; &lt;li&gt;To run data/models on an Apple Silicon GPU, use the PyTorch device name &lt;code&gt;&#34;mps&#34;&lt;/code&gt; with &lt;code&gt;.to(&#34;mps&#34;)&lt;/code&gt;. MPS stands for &lt;em&gt;Metal Performance Shaders&lt;/em&gt;, &lt;a href=&#34;https://developer.apple.com/metal/&#34;&gt;Metal is Apple&#39;s GPU framework&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;&#xA;# Set the device&#xA;device = &#34;mps&#34; if torch.backends.mps.is_available() else &#34;cpu&#34;&#xA;&#xA;# Create data and send it to the device&#xA;x = torch.rand(size=(3, 4)).to(device)&#xA;x&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, you should get something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor([[2.6020e-01, 9.6467e-01, 7.5282e-01, 1.8063e-01],&#xA;        [7.0760e-02, 9.8610e-01, 6.5195e-01, 7.5700e-01],&#xA;        [3.4065e-01, 1.8971e-01, 6.0876e-01, 9.3907e-01]], device=&#39;mps:0&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Congratulations! Your Apple Silicon device is now running PyTorch + a handful of other helpful data science and machine learning libraries.&lt;/p&gt; &#xA;&lt;ol start=&#34;15&#34;&gt; &#xA; &lt;li&gt;To see if it really worked, try running one of the notebooks above end to end!&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>probml/pyprobml</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/probml/pyprobml</id>
    <link href="https://github.com/probml/pyprobml" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Python code for &#34;Probabilistic Machine learning&#34; book by Kevin Murphy&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pyprobml&lt;/h1&gt; &#xA;&lt;img src=&#34;https://img.shields.io/github/stars/probml/pyprobml?style=social&#34;&gt; &#xA;&lt;p&gt;Python 3 code to reproduce the figures in the book series &lt;a href=&#34;https://probml.github.io/pml-book/&#34;&gt;Probabilistic Machine Learning&lt;/a&gt; by Kevin Patrick Murphy. This is work in progress, so expect rough edges.&lt;/p&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://github.com/probml/probml-utils&#34;&gt;probml-utils&lt;/a&gt; for some utility code.&lt;/p&gt; &#xA;&lt;h2&gt;Running the notebooks&lt;/h2&gt; &#xA;&lt;p&gt;The notebooks needed to make all the figures are available at the following locations.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/probml/pyprobml/tree/master/notebooks/book1&#34;&gt;Volume 1 figure notebooks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/probml/pyprobml/tree/master/notebooks/book2&#34;&gt;Volume 2 figure notebooks&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Notebooks are saved in chapter-wise folders. For example, a notebook for figure 2.3 from book 1 is saved in the folder &lt;code&gt;notebooks/book1/02/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In addition to the figure notebooks, there are a series of notebooks which provide supplementary material for the book. These are stored in the &lt;a href=&#34;https://github.com/probml/pyprobml/tree/master/notebooks/misc&#34;&gt;&lt;code&gt;notebooks/misc&lt;/code&gt; folder&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Running notebooks in colab&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/notebooks/intro.ipynb&#34;&gt;Colab&lt;/a&gt; has most of the libraries you will need (e.g., scikit-learn, JAX) pre-installed, and gives you access to a free GPU and TPU. We have a created a &lt;a href=&#34;https://colab.research.google.com/github/probml/pyprobml/blob/master/notebooks/misc/colab_intro.ipynb&#34;&gt;colab intro&lt;/a&gt; notebook with more details. To run the notebooks on colab in any browser, you can go to a particular notebook on GitHub and change the domain from &lt;code&gt;github.com&lt;/code&gt; to &lt;code&gt;githubtocolab.com&lt;/code&gt; as suggested &lt;a href=&#34;https://stackoverflow.com/a/67344477/13330701&#34;&gt;here&lt;/a&gt;. If you are using Google Chrome browser, you can use &lt;a href=&#34;https://chrome.google.com/webstore/detail/open-in-colab/iogfkhleblhcpcekbiedikdehleodpjo&#34;&gt;&#34;Open in Colab&#34; Chrome extension&lt;/a&gt; to do the same with a single click.&lt;/p&gt; &#xA;&lt;h2&gt;Running the noteboks locally&lt;/h2&gt; &#xA;&lt;p&gt;We assume you have already installed &lt;a href=&#34;https://github.com/google/jax#installation&#34;&gt;JAX&lt;/a&gt; and &lt;a href=&#34;https://www.tensorflow.org/install&#34;&gt;Tensorflow&lt;/a&gt; and &lt;a href=&#34;https://pytorch.org/&#34;&gt;Torch&lt;/a&gt;, since the details on how to do this depend on whether you have a CPU, GPU, etc.&lt;/p&gt; &#xA;&lt;p&gt;You can use any of the following options to install the other requirements.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Option 1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r https://raw.githubusercontent.com/probml/pyprobml/master/requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Option 2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Download &lt;a href=&#34;https://github.com/probml/pyprobml/raw/master/requirements.txt&#34;&gt;requirements.txt&lt;/a&gt; locally to your path and run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GCP, TPUs, and all that&lt;/h2&gt; &#xA;&lt;p&gt;When you want more power or control than colab gives you, you should get a Google Cloud Platform (GCP) account, and get access to a TPU VM. You can then use this as a virtual desktop which you can access via ssh from inside VScode. We have created &lt;a href=&#34;https://github.com/probml/pyprobml/raw/master/tutorials/colab_gcp_tpu_tutorial.md&#34;&gt;a short tutorial on Colab, GCP and TPUs&lt;/a&gt; with more information.&lt;/p&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/probml/pyprobml/raw/master/CONTRIBUTING.md&#34;&gt;this guide&lt;/a&gt; for how to contribute code. Please follow &lt;a href=&#34;https://github.com/probml/pyprobml/raw/master/notebooks/README.md&#34;&gt;these guidelines&lt;/a&gt; to contribute new notebooks to the notebooks directory.&lt;/p&gt; &#xA;&lt;h2&gt;Metrics&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/probml/pyprobml&#34;&gt;&lt;img src=&#34;https://starchart.cc/probml/pyprobml.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;GSOC&lt;/h2&gt; &#xA;&lt;p&gt;For a summary of some of the contributions to this codebase during Google Summer of Code (GSOC) 2021, see &lt;a href=&#34;https://probml.github.io/pml-book/gsoc2021.html&#34;&gt;this link&lt;/a&gt;. Stay tuned for GSOC 2022.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;acknowledgements&#34;&gt;&lt;/a&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;I would like to thank the following people for contributing to the code (list autogenerated from &lt;a href=&#34;https://raw.githubusercontent.com/probml/pyprobml/master/internal/contributors/contributors.py&#34;&gt;this script&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/Abdelrahman350.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/alenm10.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/always-newbie161.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/AnandShegde.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/andrewnc.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/animesh-007.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/AnkitaKumariJain14.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/ashishpapanai.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/Drishttii.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/Duane321.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/firatoncel.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/Garvit9000c.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/gerdm.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/jdf22.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/karalleyna.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/karm-patel.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/khanshehjad.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/kzymgch.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/mjsML.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/murphyk.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/nalzok.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/nappaillav.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/Neoanarika.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/Nirzu97.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/nitish1295.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/nouranali.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/patel-zeel.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/patrickmineault.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/raymondyeh07.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/rohit-khoiwal-30.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/shivaditya-meduri.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/shobro.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/susnato.png&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img width=&#34;50&#34; alt=&#34;image&#34; src=&#34;https://github.com/thvasilo.png&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Abdelrahman350&#34;&gt;Abdelrahman350&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alenm10&#34;&gt;alenm10&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/always-newbie161&#34;&gt;always-newbie161&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/AnandShegde&#34;&gt;AnandShegde&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/andrewnc&#34;&gt;andrewnc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/animesh-007&#34;&gt;animesh-007&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/AnkitaKumariJain14&#34;&gt;AnkitaKumariJain14&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ashishpapanai&#34;&gt;ashishpapanai&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Drishttii&#34;&gt;Drishttii&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Duane321&#34;&gt;Duane321&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/firatoncel&#34;&gt;firatoncel&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Garvit9000c&#34;&gt;Garvit9000c&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/gerdm&#34;&gt;gerdm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jdf22&#34;&gt;jdf22&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/karalleyna&#34;&gt;karalleyna&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/karm-patel&#34;&gt;karm-patel&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/khanshehjad&#34;&gt;khanshehjad&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/kzymgch&#34;&gt;kzymgch&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mjsML&#34;&gt;mjsML&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/murphyk&#34;&gt;murphyk&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/nalzok&#34;&gt;nalzok&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/nappaillav&#34;&gt;nappaillav&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Neoanarika&#34;&gt;Neoanarika&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Nirzu97&#34;&gt;Nirzu97&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/nitish1295&#34;&gt;nitish1295&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/nouranali&#34;&gt;nouranali&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/patel-zeel&#34;&gt;patel-zeel&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/patrickmineault&#34;&gt;patrickmineault&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/raymondyeh07&#34;&gt;raymondyeh07&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/rohit-khoiwal-30&#34;&gt;rohit-khoiwal-30&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/shivaditya-meduri&#34;&gt;shivaditya-meduri&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/shobro&#34;&gt;shobro&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/susnato&#34;&gt;susnato&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/thvasilo&#34;&gt;thvasilo&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>rasbt/machine-learning-notes</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/rasbt/machine-learning-notes</id>
    <link href="https://github.com/rasbt/machine-learning-notes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Collection of useful machine learning codes and snippets (originally intended for my personal use)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;machine-learning-notes&lt;/h1&gt; &#xA;&lt;p&gt;Collection of useful machine learning codes and snippets (originally intended for my personal use)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wesm/pydata-book</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/wesm/pydata-book</id>
    <link href="https://github.com/wesm/pydata-book" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Materials and IPython notebooks for &#34;Python for Data Analysis&#34; by Wes McKinney, published by O&#39;Reilly Media&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Python for Data Analysis, 2nd Edition&lt;/h1&gt; &#xA;&lt;p&gt;Materials and IPython notebooks for &#34;Python for Data Analysis&#34; by Wes McKinney, published by O&#39;Reilly Media&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://amzn.to/2vvBijB&#34;&gt;Buy the book on Amazon&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://notebooks.azure.com/import/gh/wesm/pydata-book&#34;&gt;&lt;img src=&#34;https://notebooks.azure.com/launch.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Follow Wes on Twitter: &lt;a href=&#34;https://twitter.com/wesmckinn&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/wesmckinn.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;1st Edition Readers&lt;/h1&gt; &#xA;&lt;p&gt;If you are reading the &lt;a href=&#34;http://amzn.to/2vvBijB&#34;&gt;1st Edition&lt;/a&gt; (published in 2012), please find the reorganized book materials on the &lt;a href=&#34;https://github.com/wesm/pydata-book/tree/1st-edition&#34;&gt;&lt;code&gt;1st-edition&lt;/code&gt; branch&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Translations&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BrambleXu/pydata-notebook&#34;&gt;Chinese&lt;/a&gt; by Xu Liang&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mbiesiad/pydata-book/tree/pl_PL&#34;&gt;Polish&lt;/a&gt; by Michal Biesiada&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;IPython Notebooks:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch02.ipynb&#34;&gt;Chapter 2: Python Language Basics, IPython, and Jupyter Notebooks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch03.ipynb&#34;&gt;Chapter 3: Built-in Data Structures, Functions, and Files&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch04.ipynb&#34;&gt;Chapter 4: NumPy Basics: Arrays and Vectorized Computation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch05.ipynb&#34;&gt;Chapter 5: Getting Started with pandas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch06.ipynb&#34;&gt;Chapter 6: Data Loading, Storage, and File Formats&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch07.ipynb&#34;&gt;Chapter 7: Data Cleaning and Preparation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch08.ipynb&#34;&gt;Chapter 8: Data Wrangling: Join, Combine, and Reshape&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch09.ipynb&#34;&gt;Chapter 9: Plotting and Visualization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch10.ipynb&#34;&gt;Chapter 10: Data Aggregation and Group Operations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch11.ipynb&#34;&gt;Chapter 11: Time Series&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch12.ipynb&#34;&gt;Chapter 12: Advanced pandas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch13.ipynb&#34;&gt;Chapter 13: Introduction to Modeling Libraries in Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/ch14.ipynb&#34;&gt;Chapter 14: Data Analysis Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/pydata/pydata-book/blob/2nd-edition/appa.ipynb&#34;&gt;Appendix A: Advanced NumPy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;h3&gt;Code&lt;/h3&gt; &#xA;&lt;p&gt;The code in this repository, including all code samples in the notebooks listed above, is released under the &lt;a href=&#34;https://raw.githubusercontent.com/wesm/pydata-book/2nd-edition/LICENSE-CODE&#34;&gt;MIT license&lt;/a&gt;. Read more at the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;Open Source Initiative&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gedeck/practical-statistics-for-data-scientists</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/gedeck/practical-statistics-for-data-scientists</id>
    <link href="https://github.com/gedeck/practical-statistics-for-data-scientists" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Code repository for O&#39;Reilly book&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/gedeck/dmba/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Python&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Code repository&lt;/h1&gt; &#xA;&lt;table width=&#34;100%&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gedeck/practical-statistics-for-data-scientists/master/images/OReilly-english.jpg&#34; width=&#34;300&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;Practical Statistics for Data Scientists:&lt;/b&gt; &lt;p&gt;50+ Essential Concepts Using R and Python&lt;/p&gt; &lt;p&gt;by Peter Bruce, Andrew Bruce, and &lt;a href=&#34;https://www.amazon.com/Peter-Gedeck/e/B082BJZJKX/&#34;&gt;Peter Gedeck&lt;/a&gt;&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Publisher: &lt;a href=&#34;https://oreil.ly/practicalStats_dataSci_2e&#34;&gt;O&#39;Reilly Media&lt;/a&gt;; 2 edition (June 9, 2020)&lt;/li&gt; &#xA;     &lt;li&gt;ISBN-13: 978-1492072942&lt;/li&gt; &#xA;     &lt;li&gt;Buy on &lt;a href=&#34;https://www.amazon.com/Practical-Statistics-Data-Scientists-Essential/dp/149207294X&#34;&gt;Amazon&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Errata: &lt;a href=&#34;http://oreilly.com/catalog/errata.csp?isbn=9781492072942&#34;&gt;http://oreilly.com/catalog/errata.csp?isbn=9781492072942&lt;/a&gt; &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt;   &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Online&lt;/h2&gt; &#xA;&lt;p&gt;View the notebooks online: &lt;a href=&#34;https://nbviewer.jupyter.org/github/gedeck/practical-statistics-for-data-scientists/tree/master/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jupyter/design/master/logos/Badges/nbviewer_badge.svg?sanitize=true&#34; alt=&#34;nbviewer&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Excecute the notebooks in Binder: &lt;a href=&#34;https://mybinder.org/v2/gh/gedeck/practical-statistics-for-data-scientists/HEAD&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This can take some time if the binder environment needs to be rebuilt.&lt;/p&gt; &#xA;&lt;h2&gt;Other language versions&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gedeck/practical-statistics-for-data-scientists/master/images/OReilly-english.jpg&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;b&gt;English:&lt;/b&gt;&lt;br&gt; Practical Statistics for Data Scientists: 50+ Essential Concepts Using R and Python&lt;br&gt; 2020: ISBN 149207294X&lt;br&gt; &lt;a href=&#34;https://www.google.com/books/edition/Practical_Statistics_for_Data_Scientists/F2bcDwAAQBAJ?hl=en&#34;&gt;Google books&lt;/a&gt;, &lt;a href=&#34;https://www.amazon.com/Practical-Statistics-Data-Scientists-Essential/dp/149207294X&#34;&gt;Amazon&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gedeck/practical-statistics-for-data-scientists/master/images/OReilly-japanese.jpg&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;b&gt;Japanese (2020-06-11):&lt;/b&gt;&lt;br&gt; データサイエンスのための統計学入門 第2版 ―予測、分類、統計モデリング、統計的機械学習とR/Pythonプログラミング &lt;br&gt; 2020: ISBN 978-4-873-11926-7, Shinya Ohashi (supervised), Toshiaki Kurokawa (translated), O&#39;Reilly Japan Inc.&lt;br&gt; &lt;a href=&#34;https://www.google.com/books/edition/%E3%83%87%E3%83%BC%E3%82%BF%E3%82%B5%E3%82%A4%E3%82%A8%E3%83%B3%E3%82%B9%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E7%B5%B1/d7EJzgEACAAJ?hl=en&#34;&gt;Google books&lt;/a&gt;, &lt;a href=&#34;https://www.amazon.co.jp/%E3%83%87%E3%83%BC%E3%82%BF%E3%82%B5%E3%82%A4%E3%82%A8%E3%83%B3%E3%82%B9%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E7%B5%B1%E8%A8%88%E5%AD%A6%E5%85%A5%E9%96%80-%E2%80%95%E4%BA%88%E6%B8%AC%E3%80%81%E5%88%86%E9%A1%9E%E3%80%81%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AA%E3%83%B3%E3%82%B0%E3%80%81%E7%B5%B1%E8%A8%88%E7%9A%84%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92%E3%81%A8R-Python%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0-Peter-Bruce/dp/487311926X&#34;&gt;Amazon&lt;/a&gt;, &lt;a href=&#34;https://www.oreilly.co.jp/books/9784873119267/&#34;&gt;Order here&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gedeck/practical-statistics-for-data-scientists/master/images/OReilly-german.jpg&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;b&gt;German (2021-03-29):&lt;/b&gt;&lt;br&gt; Praktische Statistik für Data Scientists: 50+ essenzielle Konzepte mit R und Python&amp;nbsp;&lt;br&gt; 2021: ISBN 978-3-960-09153-0, Marcus Fraaß&amp;nbsp;(Übersetzer), dpunkt.verlag GmbH&lt;br&gt; &lt;a href=&#34;https://www.google.com/books/edition/Praktische_Statistik_f%C3%BCr_Data_Scientist/yeMCzgEACAAJ?hl=en&#34;&gt;Google books&lt;/a&gt;, &lt;a href=&#34;https://www.amazon.de/Praktische-Statistik-f%C3%BCr-Data-Scientists/dp/3960091532&#34;&gt;Amazon&lt;/a&gt; &lt;a href=&#34;https://dpunkt.de/produkt/praktische-statistik-fuer-data-scientists/&#34;&gt;Order here&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gedeck/practical-statistics-for-data-scientists/master/images/OReilly-korean.jpg&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;b&gt;Korean (2021-05-07):&lt;/b&gt;&lt;br&gt; Practical Statistics for Data Scientists: 데이터 과학을 위한 통계(2판)&lt;br&gt; 2021: ISBN 979-1-162-24418-0, Junyong Lee (translation), Hanbit Media, Inc. &lt;br&gt; &lt;a href=&#34;https://www.google.com/books/edition/%EB%8D%B0%EC%9D%B4%ED%84%B0_%EA%B3%BC%ED%95%99%EC%9D%84_%EC%9C%84%ED%95%9C_%ED%86%B5%EA%B3%84_2%ED%8C%90/9E9qzgEACAAJ?hl=en&#34;&gt;Google books&lt;/a&gt;, &lt;a href=&#34;https://www.hanbit.co.kr/store/books/look.php?p_code=B2862122581&#34;&gt;Order here&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gedeck/practical-statistics-for-data-scientists/master/images/OReilly-polish.jpg&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;b&gt;Polish (2021-06-16):&lt;/b&gt;&lt;br&gt; Statystyka praktyczna w data science. 50 kluczowych zagadnien w jezykach R i Python&lt;br&gt; 2021: ISBN 978-8-328-37427-0, Helion &lt;br&gt; &lt;a href=&#34;https://www.google.com/books/edition/Statystyka_praktyczna_w_data_science/GyqSzgEACAAJ&#34;&gt;Google books&lt;/a&gt;, &lt;a href=&#34;https://www.amazon.com/Statystyka-praktyczna-science-kluczowych-zagadnien/dp/8328374277/&#34;&gt;Amazon&lt;/a&gt;, &lt;a href=&#34;https://helion.pl/ksiazki/statystyka-praktyczna-w-data-science-50-kluczowych-zagadnien-w-jezykach-r-i-python-wydanie-ii-peter-bruce-andrew-bruce-peter-gedeck,stpra2.htm&#34;&gt;Order here&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gedeck/practical-statistics-for-data-scientists/master/images/OReilly-russian.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;b&gt;Russian (2021-05-31):&lt;/b&gt;&lt;br&gt; Практическая статистика для специалистов Data Science, 2-е изд.&lt;br&gt; 2021: ISBN 978-5-9775-6705-3, BHV St Petersburg &lt;br&gt; &lt;a href=&#34;https://www.google.com/books/edition/%D0%9F%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F_%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%81%D1%82/l_6MDwAAQBAJ&#34;&gt;Google books&lt;/a&gt;, &lt;a href=&#34;https://bhv.ru/product/prakticheskaya-statistika-dlya-spetsialistov-data-science-2-e-izd/&#34;&gt;Order here&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gedeck/practical-statistics-for-data-scientists/master/images/OReilly-chinese-complex.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;b&gt;Chinese complex (2021-07-29):&lt;/b&gt;&lt;br&gt; Practical Statistics for Data Scientists: 資料科學家的實用統計學 第二版&lt;br&gt; 2021: ISBN 978-9-865-02841-1, Hong Weien (translation), GoTop Information Inc. &lt;br&gt; &#xA;    &lt;!-- &lt;a href=&#39;https://www.google.com/books/edition/&#39;&gt;Google books&lt;/a&gt;, --&gt; &lt;a href=&#34;http://books.gotop.com.tw/o_A643&#34;&gt;Order here&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gedeck/practical-statistics-for-data-scientists/master/images/OReilly-chinese.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;b&gt;Chinese simplified (2021-10-15):&lt;/b&gt;&lt;br&gt; Practical Statistics for Data Scientists: 数据科学中的实用统计学（第2版）&lt;br&gt; 2021: ISBN 978-7-115-56902-8, Chen Guangxin (translation), Posts &amp;amp; Telecom Press &lt;br&gt; &#xA;    &lt;!-- &lt;a href=&#39;https://www.google.com/books/edition/&#39;&gt;Google books&lt;/a&gt;, --&gt; &lt;a href=&#34;https://item.jd.com/12971155.html&#34;&gt;Order here&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gedeck/practical-statistics-for-data-scientists/master/images/SPD-english.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;b&gt;English (Indian subcontinent &amp;amp; select countries only):&lt;/b&gt;&lt;br&gt; Practical Statistics for Data Scientists: 50+ Essential Concepts Using R And Python, Second Edition&lt;br&gt; 2021: ISBN 978-8-194-43500-6, Shroff Publishers and Distributors Pvt. Ltd. &lt;br&gt; &#xA;    &lt;!-- &lt;a href=&#39;https://www.google.com/books/edition/&#39;&gt;Google books&lt;/a&gt;, --&gt; &lt;a href=&#34;https://www.shroffpublishers.com/books/9788194435006/&#34;&gt;Order here&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gedeck/practical-statistics-for-data-scientists/master/images/OReilly-spanish.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;b&gt;Spanish (2022-02-22):&lt;/b&gt;&lt;br&gt; Estadística práctica para ciencia de datos con R y Python, Second Edition&lt;br&gt; 2022: ISBN 978-8-426-73443-3, Marcombo S.A. &lt;br&gt; &lt;a href=&#34;https://books.google.com/books?id=IZxeEAAAQBAJ&#34;&gt;Google books&lt;/a&gt;, &lt;a href=&#34;https://www.amazon.com/Estad%C3%ADstica-pr%C3%A1ctica-ciencia-datos-Python/dp/842673443X/&#34;&gt;Amazon&lt;/a&gt;, &lt;a href=&#34;https://www.marcombo.com/estadistica-practica-para-ciencia-de-datos-con-r-y-python-9788426734433/&#34;&gt;Order here&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;See also&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The code repository for the first edition is at: &lt;a href=&#34;https://github.com/andrewgbruce/statistics-for-data-scientists&#34;&gt;https://github.com/andrewgbruce/statistics-for-data-scientists&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Setup R and Python environments&lt;/h1&gt; &#xA;&lt;h2&gt;R&lt;/h2&gt; &#xA;&lt;p&gt;Run the following commands in R to install all required packages&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;if (!require(vioplot)) install.packages(&#39;vioplot&#39;)&#xA;if (!require(corrplot)) install.packages(&#39;corrplot&#39;)&#xA;if (!require(gmodels)) install.packages(&#39;gmodels&#39;)&#xA;if (!require(matrixStats)) install.packages(&#39;matrixStats&#39;)&#xA;&#xA;if (!require(lmPerm)) install.packages(&#39;lmPerm&#39;)&#xA;if (!require(pwr)) install.packages(&#39;pwr&#39;)&#xA;&#xA;if (!require(FNN)) install.packages(&#39;FNN&#39;)&#xA;if (!require(klaR)) install.packages(&#39;klaR&#39;)&#xA;if (!require(DMwR)) install.packages(&#39;DMwR&#39;)&#xA;&#xA;if (!require(xgboost)) install.packages(&#39;xgboost&#39;)&#xA;&#xA;if (!require(ellipse)) install.packages(&#39;ellipse&#39;)&#xA;if (!require(mclust)) install.packages(&#39;mclust&#39;)&#xA;if (!require(ca)) install.packages(&#39;ca&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Python&lt;/h2&gt; &#xA;&lt;p&gt;We recommend to use a conda environment to run the Python code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda create -n sfds python&#xA;conda activate sfds&#xA;conda env update -n sfds -f environment.yml&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>OpenMined/PySyft</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/OpenMined/PySyft</id>
    <link href="https://github.com/OpenMined/PySyft" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A library for answering questions using data you cannot see&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/OpenMined/PySyft/dev/packages/syft/docs/img/monorepo_logo2.png&#34; alt=&#34;Syft + Grid&#34; width=&#34;400&#34;&gt; &lt;br&gt; Code for computing on data&lt;br&gt; you do not own and cannot see &lt;br&gt; &lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://pypi.org/project/syft/&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/syft&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://pypi.org/project/syft/&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/syft.svg?sanitize=true&#34;&gt;&lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://github.com/OpenMined/PySyft/actions/workflows/syft-version_tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/OpenMined/PySyft/actions/workflows/syft-version_tests.yml/badge.svg?branch=dev&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/OpenMined/PySyft/actions/workflows/nightlies-run.yml&#34;&gt;&lt;img src=&#34;https://github.com/OpenMined/PySyft/actions/workflows/nightlies-run.yml/badge.svg?branch=dev&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://openmined.slack.com/messages/support&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20slack-7A5979.svg?sanitize=true&#34;&gt;&lt;/a&gt; &#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  &lt;a href=&#34;https://raw.githubusercontent.com/OpenMined/PySyft/dev/#&#34;&gt;&lt;img src=&#34;https://stars.medv.io/openmined/pysyft.svg?sanitize=true&#34;&gt;&lt;/a&gt;&#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;Syft + Grid provides secure and private Deep Learning in Python&lt;/h1&gt; &#xA;&lt;p&gt;Syft decouples private data from model training, using &lt;a href=&#34;https://ai.googleblog.com/2017/04/federated-learning-collaborative.html&#34;&gt;Federated Learning&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Differential_privacy&#34;&gt;Differential Privacy&lt;/a&gt;, and Encrypted Computation (like &lt;a href=&#34;https://en.wikipedia.org/wiki/Secure_multi-party_computation&#34;&gt;Multi-Party Computation (MPC)&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Homomorphic_encryption&#34;&gt;Homomorphic Encryption (HE)&lt;/a&gt;) within the main Deep Learning frameworks like PyTorch and TensorFlow. Join the movement on &lt;a href=&#34;http://slack.openmined.org/&#34;&gt;Slack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Most software libraries let you compute over the information you own and see inside of machines you control. However, this means that you cannot compute on information without first obtaining (at least partial) ownership of that information. It also means that you cannot compute using machines without first obtaining control over those machines. This is very limiting to human collaboration and systematically drives the centralization of data, because you cannot work with a bunch of data without first putting it all in one (central) place.&lt;/p&gt; &#xA;&lt;p&gt;The Syft ecosystem seeks to change this system, allowing you to write software which can compute over information you do not own on machines you do not have (total) control over. This not only includes servers in the cloud, but also personal desktops, laptops, mobile phones, websites, and edge devices. Wherever your data wants to live in your ownership, the Syft ecosystem exists to help keep it there while allowing it to be used privately for computation.&lt;/p&gt; &#xA;&lt;h2&gt;Stable Release&lt;/h2&gt; &#xA;&lt;p&gt;The current stable release is &lt;code&gt;0.6.0&lt;/code&gt; which is available on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/syft/&#34;&gt;PyPI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/u/openmined&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For many use cases you can simply use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pip install syft&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are doing the &lt;a href=&#34;https://courses.openmined.org/&#34;&gt;Private AI Series&lt;/a&gt; or you are an external party developing against Syft and Grid please use the &lt;a href=&#34;https://github.com/OpenMined/pysyft/tree/0.6.0&#34;&gt;&lt;code&gt;syft_0.6.0&lt;/code&gt;&lt;/a&gt; branch.&lt;/p&gt; &#xA;&lt;h2&gt;Development Branch&lt;/h2&gt; &#xA;&lt;p&gt;This is the &lt;code&gt;dev&lt;/code&gt; branch and to accommodate our need to experiment with new ideas and implementations we will be moving a few things around during the early stages of &lt;code&gt;0.7.0 beta&lt;/code&gt;. Currently the core &lt;code&gt;syft&lt;/code&gt; library and code will remain fairly stable, while we do some much needed quality improvements and refactors to the &lt;code&gt;grid&lt;/code&gt; codebase and its tooling for deployment and orchestration of nodes. During the process of development we will be moving examples from the &lt;code&gt;/packages/syft/examples&lt;/code&gt; folder down to the &lt;code&gt;/notebooks&lt;/code&gt; folder and ensuring they are working and tested with the latest &lt;code&gt;dev&lt;/code&gt; code.&lt;/p&gt; &#xA;&lt;h2&gt;Mono Repo 🚝&lt;/h2&gt; &#xA;&lt;p&gt;This repo contains multiple sub-projects which work together.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;OpenMined/PySyft&#xA;├── README.md     &amp;lt;-- You are here 📌&#xA;├── notebooks     &amp;lt;-- Notebook Examples and Tutorials&#xA;└── packages&#xA;    ├── grid      &amp;lt;-- Grid - A network aware, persistent &amp;amp; containerized node running Syft&#xA;    └── syft      &amp;lt;-- Syft - A package for doing remote data science on private data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Syft&lt;/h2&gt; &#xA;&lt;p&gt;To read more about what Syft is please consult the current &lt;a href=&#34;https://openmined.github.io/PySyft/&#34;&gt;&lt;code&gt;0.6.0&lt;/code&gt; Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Grid&lt;/h2&gt; &#xA;&lt;p&gt;To read more about what Grid is please consult the old &lt;a href=&#34;https://github.com/OpenMined/PyGrid&#34;&gt;PyGrid README&lt;/a&gt; until we finish writing the new one.&lt;/p&gt; &#xA;&lt;h2&gt;Dev Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;docker&lt;/li&gt; &#xA; &lt;li&gt;tox&lt;/li&gt; &#xA; &lt;li&gt;python 3.8+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;You will need &lt;code&gt;docker&lt;/code&gt; and &lt;code&gt;docker-compose&lt;/code&gt; to do development on the &lt;code&gt;monorepo&lt;/code&gt; tooling.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/docker-for-mac/install/&#34;&gt;Get Docker for macOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/docker-for-windows/install/&#34;&gt;Get Docker for Windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/ubuntu/&#34;&gt;Get Docker for Ubuntu&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Dev Compose File&lt;/h3&gt; &#xA;&lt;p&gt;Run the &lt;a href=&#34;https://fastapi.tiangolo.com/&#34;&gt;FastAPI&lt;/a&gt; Dev environment using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd packages/grid&#xA;$ source .env &amp;amp;&amp;amp; docker compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Rebuilding Docker Containers&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd packages/grid&#xA;$ docker compose build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Tox&lt;/h3&gt; &#xA;&lt;p&gt;You will need &lt;code&gt;tox&lt;/code&gt; to run some of our build and test tools.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pip install tox&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;List Build Commands&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ tox -l&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;syft.jupyter&#xA;syft.lint&#xA;syft.test.fast&#xA;syft.test.libs&#xA;syft.test.security&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These commands can be run like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ tox -e syft.lint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Single VM Deployment&lt;/h2&gt; &#xA;&lt;p&gt;We are providing a simple way to deploy all of our stack inside a single VM so that no matter where you want to run everything you can do so easily by thinking in terms of a single machine either bare metal or VM and have it provisioned and auto updated.&lt;/p&gt; &#xA;&lt;p&gt;To develop against this locally you will want the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;vagrant&lt;/li&gt; &#xA; &lt;li&gt;virtualbox&lt;/li&gt; &#xA; &lt;li&gt;ansible&lt;/li&gt; &#xA; &lt;li&gt;hagrid &amp;lt;-- in packages/hagrid&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;HAGrid Install&lt;/h2&gt; &#xA;&lt;p&gt;You can install HAGrid with pip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pip install hagrid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;MacOS Instructions&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ brew install vagrant virtualbox ansible&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Hagrid the Grid deployment tool:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd packages/hagrid&#xA;$ pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Vagrant&lt;/h2&gt; &#xA;&lt;p&gt;Vagrant allows us to create and manage VMs locally for development. During the startup process of creating the VM the ansible provisioning scripts will be applied automatically to the VM. If you change the Vagrantfile which describes how the VM is defined you will need to either &lt;code&gt;vagrant reload&lt;/code&gt; or destroy and re-create it.&lt;/p&gt; &#xA;&lt;p&gt;Making changes to the VM state should be done through the &lt;code&gt;ansible&lt;/code&gt; scripts so that the state of the box is idempotent and re-running the ansible provisioning scripts should always result in the same working grid node state.&lt;/p&gt; &#xA;&lt;p&gt;To allow rapid development we mount the PySyft source repo into the VM at the path: &lt;code&gt;/home/om/PySyft&lt;/code&gt; which is where it would be if it was cloned down on a real remote VM.&lt;/p&gt; &#xA;&lt;p&gt;The configuration is done via a &lt;code&gt;Vagrantfile&lt;/code&gt; which is written in ruby.&lt;/p&gt; &#xA;&lt;h2&gt;Vagrant Networking&lt;/h2&gt; &#xA;&lt;h3&gt;Vagrant IP&lt;/h3&gt; &#xA;&lt;p&gt;The VM will be accessible on the IP &lt;code&gt;10.0.1.2&lt;/code&gt; which is defined in the &lt;code&gt;Vagrantfile&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Vagrant Landrush Plugin&lt;/h3&gt; &#xA;&lt;p&gt;The Landrush plugin for vagrant gives us an automatic dns service so we can access our local VM as though it were a real live domain on the internet.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ vagrant plugin install landrush&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With this enabled you can access the box on: &lt;code&gt;http://node.openmined.grid&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Starting VM&lt;/h2&gt; &#xA;&lt;p&gt;NOTE: You may need your sudo password to enable the landrush DNS entry on startup.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd packages/grid&#xA;$ vagrant up --provision&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Provisioning the VM&lt;/h2&gt; &#xA;&lt;p&gt;You want to do this any time you are testing out your &lt;code&gt;ansible&lt;/code&gt; changes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd packages/grid&#xA;$ vagrant provision&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to do a quick deploy where you skip the system provisioning you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ANSIBLE_ARGS=&#39;--extra-vars &#34;deploy_only=true&#34;&#39; vagrant provision&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Connecting to Vagrant VM&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd packages/grid&#xA;$ vagrant ssh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;TLS and Certificates&lt;/h2&gt; &#xA;&lt;p&gt;You can enable TLS in HAGrid by passing in the --tls param:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ hagrid launch domain to docker:8081+ --tls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will go looking for a certificate and private key here:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;packages/grid/traefik/certs/key.pem&#xA;packages/grid/traefik/certs/cert.pem&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These files and their settings are defined in:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;packages/grid/traefik/dynamic-configurations/certs.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;During development you will need to generate ones which match localhost and then enable --test mode so that these invalid self-signed certificates are accepted by various code and libraries.&lt;/p&gt; &#xA;&lt;p&gt;First, get the tool &lt;code&gt;mkcert&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;MacOS&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ brew install mkcert&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate Dev Cert&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd PySyft&#xA;export GRID=$(pwd)/packages/grid &amp;amp;&amp;amp; export CAROOT=$GRID/tls &amp;amp;&amp;amp; export CERTS=$GRID/traefik/certs&#xA;mkcert -cert-file=&#34;$CERTS/cert.pem&#34; -key-file=&#34;$CERTS/key.pem&#34; &#39;*.openmined.grid&#39; docker-host localhost 127.0.0.1 ::1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will have created the certificate and private key as well as placed the root signing certificate (think fake SSL authority who can charge for SSL certs) in the following dir:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;packages/grid/tls/rootCA-key.pem&#xA;packages/grid/tls/rootCA.pem&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To ensure that tailscale will accept these certs we mount the file into the tailscale container like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;version: &#34;3.8&#34;&#xA;services:&#xA;  tailscale:&#xA;    volumes:&#xA;      - ./tls/rootCA.pem:/usr/local/share/ca-certificates/rootCA.pem&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The startup script runs &lt;code&gt;update-ca-certificates&lt;/code&gt; so that the tailscale container is now aware of this fake authority and will accept the fake cert you have created for it.&lt;/p&gt; &#xA;&lt;h3&gt;Install Cert on Host&lt;/h3&gt; &#xA;&lt;p&gt;If you wish to visit web pages with &lt;code&gt;localhost:8081&lt;/code&gt; or &lt;code&gt;network1.openmined.grid&lt;/code&gt; and have the TLS certificate warning disappear you need to install the certificate with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mkcert -install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ignoring TLS Certs&lt;/h3&gt; &#xA;&lt;p&gt;Alternatively as we do in the integration tests you can pass it as an environment variable to programming languages like Python like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;REQUESTS_CA_BUNDLE=packages/grid/tls/rootCA.pem pytest tests/integration ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you do this, python will also accept these certificates in libraries like requests. Alternatively you can also tell requests to ignore invalid certificates with the &lt;code&gt;verify&lt;/code&gt; kwarg like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests&#xA;request.get(url, verify=False)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To make this more convenient we have added an ENV called &lt;code&gt;IGNORE_TLS_ERRORS&lt;/code&gt; which we set using the &lt;code&gt;--test&lt;/code&gt; param in &lt;code&gt;hagrid&lt;/code&gt; like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ hagrid launch test_network_1 network to docker:9081 --tail=false --tls --test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can check for this with &lt;code&gt;sy.util.verify_tls()&lt;/code&gt; like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests&#xA;import syft as sy&#xA;&#xA;request.get(url, verify=sy.util.verify_tls())&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is important not to run &lt;code&gt;IGNORE_TLS_ERRORS=true&lt;/code&gt; in production.&lt;/p&gt; &#xA;&lt;h3&gt;Ports&lt;/h3&gt; &#xA;&lt;p&gt;Normally web traffic is served over port &lt;code&gt;80&lt;/code&gt; for &lt;code&gt;http&lt;/code&gt; and port &lt;code&gt;443&lt;/code&gt; for &lt;code&gt;https&lt;/code&gt;. Naturally during development we need to use multiple ports for multiple stacks and bind them to &lt;code&gt;localhost&lt;/code&gt; and use things like &lt;code&gt;docker-host&lt;/code&gt; to resolve this global address space from within any isolated containers. Currently what we do is if the &lt;code&gt;port&lt;/code&gt; you supply to &lt;code&gt;hagrid&lt;/code&gt; is &lt;code&gt;80&lt;/code&gt; then we assume you are running in production and want port &lt;code&gt;443&lt;/code&gt; for &lt;code&gt;https&lt;/code&gt;. If you use any other port we will automatically find a port from &lt;code&gt;444&lt;/code&gt; onwards and this port will be included in the &lt;code&gt;http&lt;/code&gt; -&amp;gt; &lt;code&gt;https&lt;/code&gt; 301 redirect in traefik proxy. Because of this most browsers and network libraries will simply follow this redirect so you can continue to use the normal &lt;code&gt;http&lt;/code&gt; ports for everything.&lt;/p&gt; &#xA;&lt;h3&gt;Redirects&lt;/h3&gt; &#xA;&lt;p&gt;The Grid API inside Syft detects if a url and port combination provided gets redirected to &lt;code&gt;https&lt;/code&gt; and will change the &lt;code&gt;base_url&lt;/code&gt; which should mean that login credentials are sent over &lt;code&gt;https&lt;/code&gt; not &lt;code&gt;http&lt;/code&gt; where possible.&lt;/p&gt; &#xA;&lt;h3&gt;VPN&lt;/h3&gt; &#xA;&lt;p&gt;Due to the fact that TLS Certificates are only valid for domains and not IPs and the VPN is currently configured to use IPs only, we do not redirect or serve &lt;code&gt;https&lt;/code&gt; over the VPN. The traffic being sent by &lt;code&gt;wireguard&lt;/code&gt; over the VPN is already encrypted so there should be no need for &lt;code&gt;TLS&lt;/code&gt;. The way this works is, when Grid is using &lt;code&gt;TLS&lt;/code&gt; we forward external port &lt;code&gt;80&lt;/code&gt; traffic to port &lt;code&gt;81&lt;/code&gt; and then use this for the 301 redirect to the &lt;code&gt;TLS&lt;/code&gt; port &lt;code&gt;443+&lt;/code&gt;. If traffic arrives on port &lt;code&gt;80&lt;/code&gt; inside the cluster it does not get redirected which allows the VPN IPs to respond via &lt;code&gt;http&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Deploying Custom Certs&lt;/h3&gt; &#xA;&lt;p&gt;To install certs via &lt;code&gt;hagrid&lt;/code&gt; simply supply the two cert files as arguments:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ hagrid launch domain to azure --tls --upload_tls_key=/path/to/certs/key.pem --upload_tls_cert=/path/to/certs/cert.pem&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively if your machine is already setup without TLS you can simply reprovision with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ hagrid launch node_name domain to 123.x.x.x --tls --upload_tls_key=/path/to/certs/key.pem --upload_tls_cert=/path/to/certs/cert.pem&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deploy to Cloud&lt;/h2&gt; &#xA;&lt;h3&gt;Azure Marketplace 1-click Deploy&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://azuremarketplace.microsoft.com/en-us/marketplace/apps/madhavajay1632269232059.openmined_mj_grid_domain_ubuntu_1?tab=Overview&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/images/deploytoazure.svg?sanitize=true&#34; alt=&#34;Deploy To Azure&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We also have an example &lt;a href=&#34;https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FOpenMined%2FPySyft%2Fdev%2Fpackages%2Fgrid%2Fquickstart%2Ftemplate.json&#34;&gt;Quickstart Template&lt;/a&gt; for use in your own automation pipelines.&lt;/p&gt; &#xA;&lt;h3&gt;Deploy from CLI to Azure&lt;/h3&gt; &#xA;&lt;p&gt;HAGrid supports creating VMs and provisioning with PyGrid directly using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ hagrid launch to azure&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Follow the prompts and enter resource groups, size, location, auth credentials etc.&lt;/p&gt; &#xA;&lt;h2&gt;Deploy from CLI to Google Cloud Platform (GCP)&lt;/h2&gt; &#xA;&lt;p&gt;HAGrid supports creating VMs and provisioning with PyGrid directly using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ hagrid launch to gcp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Follow the prompts and enter project id, machine type, zone, auth credentials etc. &lt;strong&gt;Note&lt;/strong&gt; Since we use the gcloud cli tool for provisioning we rely on the gcloud cli tool generated SSH keys so if you use a custom key path other than the default (~/.ssh/google_compute_engine) please specify the correct path.&lt;/p&gt; &#xA;&lt;h3&gt;HAGrid Deployment&lt;/h3&gt; &#xA;&lt;p&gt;Create a VM on your cloud provider with Ubuntu 20.04 with at least:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2x CPU&lt;/li&gt; &#xA; &lt;li&gt;4gb RAM&lt;/li&gt; &#xA; &lt;li&gt;40gb HDD&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Generate or supply a private key and note down the username.&lt;/p&gt; &#xA;&lt;p&gt;Run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ hagrid launch node --type=domain --host=104.42.26.195 --username=ubuntu --key_path=~/.ssh/key.pem&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deploy vs Provision&lt;/h3&gt; &#xA;&lt;p&gt;If you want to later skip the setup process of installing packages and docker engine etc you can pass in --mode=deploy which will skip those steps.&lt;/p&gt; &#xA;&lt;h3&gt;Use a Custom PySyft Fork&lt;/h3&gt; &#xA;&lt;p&gt;If you wish to use a different fork of PySyft you can pass in --repo=The-PET-Lab-at-the-UN-PPTTT/PySyft --branch=ungp_pet_lab&lt;/p&gt; &#xA;&lt;h2&gt;Switching to the OpenMined user&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo su - om&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cloud Images&lt;/h2&gt; &#xA;&lt;p&gt;We are using Packer to build cloud images in a very similar fashion to the dev Vagrant box.&lt;/p&gt; &#xA;&lt;p&gt;To build images you will need the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;packer&lt;/li&gt; &#xA; &lt;li&gt;vagrant&lt;/li&gt; &#xA; &lt;li&gt;virtualbox&lt;/li&gt; &#xA; &lt;li&gt;ansible&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;MacOS Instructions&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ brew install packer vagrant virtualbox ansible&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build a Local Vagrant Box&lt;/h2&gt; &#xA;&lt;p&gt;Go to the following directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd packages/grid/packer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./build_vagrant.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;What this does is first build the base image, by downloading a Ubuntu .iso and automating an install to a virtual machine. After the base image is created, the same ansible provisioning scripts that we use in HAGrid and the Vagrant Dev environment above are run against the image and finally a few shell scripts are executed to update some Ubuntu packages and clean out a lot of unused stuff to squeeze the image size down.&lt;/p&gt; &#xA;&lt;p&gt;To verify it worked you can start the Vagrant file like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd packages/grid/packer&#xA;vagrant up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This system will start and automatically have the stack running and available on the local ip &lt;a href=&#34;http://10.0.1.3/&#34;&gt;http://10.0.1.3/&lt;/a&gt; you can also SSH into this box using the credentials in the Vagrantfile.&lt;/p&gt; &#xA;&lt;h2&gt;Azure Cloud Image&lt;/h2&gt; &#xA;&lt;p&gt;To create the azure cloud image you need to have the &lt;code&gt;az&lt;/code&gt; cli tool and make sure you are authenticated.&lt;/p&gt; &#xA;&lt;p&gt;Install the CLI tool:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pip install az&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Authenticate your CLI tool:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ az login&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will need to use a resource group and create a storage account within that resource group.&lt;/p&gt; &#xA;&lt;p&gt;Create a resource group called: &lt;code&gt;openmined-images&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ az group create -n openmined-images -l westus&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create an app to use within the packer file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ az ad sp create-for-rbac --name openmined-images &amp;gt; azure_vars.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create a file called &lt;code&gt;azure_vars.json&lt;/code&gt; which will look something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;appId&#34;: &#34;21b92977-8ad0-467c-ae3a-47c864418126&#34;,&#xA;  &#34;displayName&#34;: &#34;openmined-images&#34;,&#xA;  &#34;password&#34;: &#34;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#34;,&#xA;  &#34;tenant&#34;: &#34;e3f9defa-1378-49b3-aed7-3dcacb468c41&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You need to know your &lt;code&gt;subscription_id&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ SUBSCRIPTION_ID=$(az account show --query id | tr -d &#39;&#34;&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can now build the image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./build_azure.sh ${SUBSCRIPTION_ID}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create a Shared Image Gallery&lt;/h3&gt; &#xA;&lt;p&gt;Create a Shared image gallery within Azure.&lt;/p&gt; &#xA;&lt;h2&gt;Kubernetes&lt;/h2&gt; &#xA;&lt;p&gt;We provide an option to deploy the stack using kubernetes. To test and run this locally we use &lt;code&gt;minikube&lt;/code&gt; and &lt;code&gt;devspace&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Local Dev&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;docker&lt;/li&gt; &#xA; &lt;li&gt;hyperkit&lt;/li&gt; &#xA; &lt;li&gt;minikube&lt;/li&gt; &#xA; &lt;li&gt;devspace&lt;/li&gt; &#xA; &lt;li&gt;kubectl&lt;/li&gt; &#xA; &lt;li&gt;kubectx&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;MacOS&lt;/h2&gt; &#xA;&lt;h3&gt;Hyperkit&lt;/h3&gt; &#xA;&lt;p&gt;Ingress is not working on Mac and Docker and the issue is being tracked here: &lt;a href=&#34;https://github.com/kubernetes/minikube/issues/7332&#34;&gt;https://github.com/kubernetes/minikube/issues/7332&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Until then we will use the hyperkit backend.&lt;/p&gt; &#xA;&lt;p&gt;Install hyperkit&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ brew install hyperkit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;See above about using &lt;code&gt;hyperkit&lt;/code&gt; on mac until the ingress issue is fixed.&lt;/p&gt; &#xA;&lt;p&gt;We will be using docker however you do not need to &lt;code&gt;enable kubernetes&lt;/code&gt; in your docker desktop app. If its enabled, disable it and click &lt;code&gt;Apply &amp;amp; Restart&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Instead we will use &lt;code&gt;minikube&lt;/code&gt; which will create and manage all the k8s resources we require as a normal container in docker engine.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ brew install minikube&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Minikube&lt;/h3&gt; &#xA;&lt;p&gt;minikube is a mini master k8s node that you can run on your local machine in something like docker. To use minikube you need it to be running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ minikube config set driver hyperkit&#xA;$ minikube start --memory 16384 --cpus 16 --disk-size=200g&#xA;$ minikube addons enable ingress&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you ever need to reset minikube you can do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ minikube delete --all --purge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once minikube is running you should see the container in docker.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker ps&#xA;CONTAINER ID   IMAGE                                 COMMAND                  CREATED        STATUS              PORTS                                                                                                                                  NAMES&#xA;57f73851bf08   gcr.io/k8s-minikube/kicbase:v0.0.25   &#34;/usr/local/bin/entr…&#34;   46 hours ago   Up About a minute   127.0.0.1:57954-&amp;gt;22/tcp, 127.0.0.1:57955-&amp;gt;2376/tcp, 127.0.0.1:57957-&amp;gt;5000/tcp, 127.0.0.1:57958-&amp;gt;8443/tcp, 127.0.0.1:57956-&amp;gt;32443/tcp   minikube&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Kubectl&lt;/h3&gt; &#xA;&lt;p&gt;kubectl is the CLI tool for kubernetes. If you have ran minikube it should have configured your kubectl to point to the local minikube cluster by default.&lt;/p&gt; &#xA;&lt;p&gt;You should be able to run something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl get all&#xA;NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE&#xA;service/kubernetes   ClusterIP   10.96.0.1    &amp;lt;none&amp;gt;        443/TCP   45h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;k8s Namespaces&lt;/h3&gt; &#xA;&lt;p&gt;Think of a namespace as a grouping of resources and permissions which lets you easily create and destroy everything related to a single keyword.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl get namespaces&#xA;NAME                   STATUS   AGE&#xA;default                Active   45h&#xA;kube-node-lease        Active   45h&#xA;kube-public            Active   45h&#xA;kube-system            Active   45h&#xA;kubernetes-dashboard   Active   45h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All k8s have a default namespace and the other ones here are from kubernetes and minikube.&lt;/p&gt; &#xA;&lt;p&gt;We will use the namespace &lt;code&gt;openmined&lt;/code&gt; to make it clear what belongs to the Grid stack and what is something else.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl create namespace openmined&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl get all -n openmined&#xA;No resources found in openmined namespace.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Kubectx&lt;/h3&gt; &#xA;&lt;p&gt;kubectx is a package of other helpful utilities which can help you do things like set a default namespace.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ brew install kubectx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now we can use a tool like &lt;code&gt;kubens&lt;/code&gt; to change the default namespace to openmined.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubens openmined&#xA;Context &#34;minikube&#34; modified.&#xA;Active namespace is &#34;openmined&#34;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now when we use commands without &lt;code&gt;-n&lt;/code&gt; we get openmined by default.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl get all&#xA;No resources found in openmined namespace.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Helm Charts&lt;/h3&gt; &#xA;&lt;p&gt;The most popular way to deploy applications to k8s is with a tool called Helm. What helm aims to do is to provide another layer of abstraction over kubernetes yaml configuration with hierarchical variables, templates and a package definition which can be hosted over HTTP allowing custom applications to depend on other prefabricated helm charts or to provide consumable packages of your code as a helm chart itself.&lt;/p&gt; &#xA;&lt;h3&gt;devspace&lt;/h3&gt; &#xA;&lt;p&gt;To make development and deployment of our kubernetes code easier we use a tool called &lt;code&gt;devspace&lt;/code&gt; which aims to be like a hot reloading dev optimised version of &lt;code&gt;docker compose&lt;/code&gt; but for kubernetes. &lt;a href=&#34;https://devspace.sh/&#34;&gt;https://devspace.sh/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Additionally &lt;code&gt;devspace&lt;/code&gt; allows us to deploy using helm by auto-generating the values and charts from the devspace.yaml which means the single source of truth can be created which includes both production helm charts and kubernetes yaml configuration as well as local dev overrides.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ brew install devspace&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deploy to local dev&lt;/h3&gt; &#xA;&lt;p&gt;First check that you have the right namespace:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ devspace list namespaces&#xA;Name                   Default   Exists&#xA;default                false     true&#xA;kube-node-lease        false     true&#xA;kube-public            false     true&#xA;kube-system            false     true&#xA;kubernetes-dashboard   false     true&#xA;openmined              *true*      true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now run the &lt;code&gt;dev&lt;/code&gt; command with &lt;code&gt;devspace&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;To run a network with headscale VPN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd packages/grid&#xA;$ devspace dev -b -p network&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run a domain without the headscale VPN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd packages/grid&#xA;$ devspace dev -b -p domain&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Connect VPN in dev&lt;/h3&gt; &#xA;&lt;p&gt;You can run the connect VPN settings using all the opened ports with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd packages/grid&#xA;$ python3 vpn/connect_vpn.py http://localhost:8088 http://localhost:8087 http://headscale:8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Destroy the local deployment&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ devspace purge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Delete persistent volumes&lt;/h3&gt; &#xA;&lt;p&gt;The database and the VPN containers have persistent volumes. You can check them with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl get persistentvolumeclaim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then delete PostgreSQL with something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl delete persistentvolumeclaim app-db-data-db-0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Check which images / tags are being used&lt;/h3&gt; &#xA;&lt;p&gt;This will show all the unique images and their tags currently deployed which is useful when debugging which version is actually running in the cluster.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl get pods --all-namespaces -o jsonpath=&#34;{.items[*].spec.containers[*].image}&#34; | tr -s &#39;[[:space:]]&#39; &#39;\n&#39; | sort | uniq -c&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Restart a container / pod / deployment&lt;/h3&gt; &#xA;&lt;p&gt;Get all the deployments&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl get deployments&#xA;NAME             READY   UP-TO-DATE   AVAILABLE   AGE&#xA;backend          1/1     1            1           18m&#xA;backend-stream   1/1     1            1           18m&#xA;backend-worker   1/1     1            1           18m&#xA;frontend         1/1     1            1           18m&#xA;queue            1/1     1            1           19m&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Restart the backend-worker&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl rollout restart deployment backend-worker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deploy to Google Kubernetes Engine (GKE)&lt;/h3&gt; &#xA;&lt;p&gt;Configure kubectl context with GKE:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gcloud container clusters get-credentials --region us-central1-c staging-cluster-1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check that you have the correct context&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Configure your Google Container Registry (GCR):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gcloud auth configure-docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check your settings with print&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ devspace print -p domain --var=CONTAINER_REGISTRY=gcr.io/reflected-space-315806/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see that you are creating a domain and that the container registry variable changes the image name to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;images:&#xA;  backend:&#xA;    image: gcr.io/reflected-space-315806/openmined/grid-backend&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will tell &lt;code&gt;devspace&lt;/code&gt; to publish to the GCR for your active GCP project.&lt;/p&gt; &#xA;&lt;p&gt;Create the openmined namespace&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl create namespace openmined&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Tell devspace to use the openmined namespace&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ devspace use namespace openmined&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Deploy to GKE:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ devspace deploy -p domain --var=CONTAINER_REGISTRY=gcr.io/reflected-space-315806/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Access a container directly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ devspace enter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Attach to container stdout:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ devspace attach&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use port forwarding to access an internal service:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl port-forward deployment/tailscale :4000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Publish&lt;/h2&gt; &#xA;&lt;h3&gt;HAGrid&lt;/h3&gt; &#xA;&lt;h4&gt;PyPI&lt;/h4&gt; &#xA;&lt;p&gt;To publish hagrid to pypi create a virtualenv in the &lt;code&gt;/packages/hagrid&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd packages/hagrid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use a tool like &lt;code&gt;pipenv&lt;/code&gt; or manually create and source like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ python3 -m venv ./venv&#xA;$ source .venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install some tools:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pip install --upgrade bandit safety setuptools wheel twine tox&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Bump the version inside &lt;code&gt;/packages/hagrid/hagrid/__init__.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Build a wheel:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./build_wheel.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check with twine:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ twine check `find -L ./ -name &#34;*.whl&#34;`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Upload with twine:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ twine upload dist/hagrid-x.x.x-py3-none-any.whl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Docker&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd packages/hagrid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build and tag the images:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./build_docker.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Publish to docker hub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker push openmined/hagrid:latest&#xA;$ docker push openmined/hagrid:x.x.x&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Join Slack&lt;/h2&gt; &#xA;&lt;p&gt;Also, join the rapidly growing community of 12,000+ on &lt;a href=&#34;http://slack.openmined.org&#34;&gt;Slack&lt;/a&gt;. The Slack community is very friendly and great about quickly answering questions about the use and development of PySyft!&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This software is in beta. Use at your own risk.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;For support in using this library, please join the &lt;strong&gt;#support&lt;/strong&gt; Slack channel. &lt;a href=&#34;https://slack.openmined.org&#34;&gt;Click here to join our Slack community!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Organizational Contributions&lt;/h2&gt; &#xA;&lt;p&gt;We are very grateful for contributions to Syft and Grid from the following organizations!&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://udacity.com/&#34;&gt;&lt;img src=&#34;https://github.com/udacity/private-ai/raw/master/udacity-logo-vert-white.png?raw=true&#34; alt=&#34;Udacity&#34; width=&#34;160&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/coMindOrg/federated-averaging-tutorials&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OpenMined/PySyft/main/packages/syft/docs/img/organizations/comind.png&#34; alt=&#34;coMind&#34; width=&#34;160&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://ark.hn&#34;&gt;&lt;img src=&#34;https://i.ibb.co/vYwcG9N/arkhn-logo.png&#34; alt=&#34;Arkhn&#34; width=&#34;160&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dropoutlabs.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dropoutlabs/files/master/dropout-labs-logo-white-2500.png&#34; alt=&#34;Dropout Labs&#34; width=&#34;160&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://genbu.ai/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OpenMined/PySyft/main/packages/syft/docs/img/organizations/genbu.png&#34; alt=&#34;GENBU AI&#34; width=&#34;160&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.bitdefender.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OpenMined/PySyft/main/packages/syft/docs/img/organizations/bitdefender.png&#34; alt=&#34;Bitdefender&#34; width=&#34;160&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenMined/PySyft/raw/main/packages/syft/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/AI-For-Beginners</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/microsoft/AI-For-Beginners</id>
    <link href="https://github.com/microsoft/AI-For-Beginners" rel="alternate"></link>
    <summary type="html">&lt;p&gt;12 Weeks, 24 Lessons, AI for All!&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/AI-For-Beginners/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/microsoft/AI-For-Beginners.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/microsoft/AI-For-Beginners/graphs/contributors/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/microsoft/AI-For-Beginners.svg?sanitize=true&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/microsoft/AI-For-Beginners/issues/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/microsoft/AI-For-Beginners.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/microsoft/AI-For-Beginners/pulls/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/microsoft/AI-For-Beginners.svg?sanitize=true&#34; alt=&#34;GitHub pull-requests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://makeapullrequest.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://GitHub.com/microsoft/AI-For-Beginners/watchers/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/watchers/microsoft/AI-For-Beginners.svg?style=social&amp;amp;label=Watch&#34; alt=&#34;GitHub watchers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/microsoft/AI-For-Beginners/network/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/microsoft/AI-For-Beginners.svg?style=social&amp;amp;label=Fork&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/microsoft/AI-For-Beginners/stargazers/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/microsoft/AI-For-Beginners.svg?style=social&amp;amp;label=Star&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mybinder.org/v2/gh/microsoft/ai-for-beginners/HEAD&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/Microsoft/ai-for-beginners?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Microsoft/ai-for-beginners.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Artificial Intelligence for Beginners - A Curriculum&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/sketchnotes/ai-overview.png&#34; alt=&#34; Sketchnote by (@girlie_mac) &#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AI For Beginners - &lt;em&gt;Sketchnote by &lt;a href=&#34;https://twitter.com/girlie_mac&#34;&gt;@girlie_mac&lt;/a&gt;&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 24-lesson curriculum all about &lt;strong&gt;Artificial Intelligence&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In this curriculum, you will learn:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Different approaches to Artificial Intelligence, including the &#34;good old&#34; symbolic approach with &lt;strong&gt;Knowledge Representation&lt;/strong&gt; and reasoning (&lt;a href=&#34;https://en.wikipedia.org/wiki/Symbolic_artificial_intelligence&#34;&gt;GOFAI&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Neural Networks&lt;/strong&gt; and &lt;strong&gt;Deep Learning&lt;/strong&gt;, which are at the core of modern AI. We will illustrate the concepts behind these important topics using code in two of the most popular frameworks - &lt;a href=&#34;http://Tensorflow.org&#34;&gt;TensorFlow&lt;/a&gt; and &lt;a href=&#34;http://pytorch.org&#34;&gt;PyTorch&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Neural Architectures&lt;/strong&gt; for working with images and text. We will cover recent models but may lack a little bit on the state-of-the-art.&lt;/li&gt; &#xA; &lt;li&gt;Less popular AI approaches, such as &lt;strong&gt;Genetic Algorithms&lt;/strong&gt; and &lt;strong&gt;Multi-Agent Systems&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;What we will not cover in this curriculum:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Business cases of using &lt;strong&gt;AI in Business&lt;/strong&gt;. Consider taking &lt;a href=&#34;https://docs.microsoft.com/learn/paths/introduction-ai-for-business-users/?WT.mc_id=academic-57639-dmitryso&#34;&gt;Introduction to AI for business users&lt;/a&gt; learning path on Microsoft Learn, or &lt;a href=&#34;https://www.microsoft.com/ai/ai-business-school/?WT.mc_id=academic-57639-dmitryso&#34;&gt;AI Business School&lt;/a&gt;, developed in cooperation with &lt;a href=&#34;https://www.insead.edu/&#34;&gt;INSEAD&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Classic Machine Learning&lt;/strong&gt;, which is well described in our &lt;a href=&#34;http://github.com/Microsoft/ML-for-Beginners&#34;&gt;Machine Learning for Beginners Curriculum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Practical AI applications built using &lt;strong&gt;&lt;a href=&#34;https://azure.microsoft.com/services/cognitive-services/?WT.mc_id=academic-57639-dmitryso&#34;&gt;Cognitive Services&lt;/a&gt;&lt;/strong&gt;. For this, we recommend that you start with modules Microsoft Learn for &lt;a href=&#34;https://docs.microsoft.com/learn/paths/create-computer-vision-solutions-azure-cognitive-services/?WT.mc_id=academic-57639-dmitryso&#34;&gt;vision&lt;/a&gt;, &lt;a href=&#34;https://docs.microsoft.com/learn/paths/explore-natural-language-processing/?WT.mc_id=academic-57639-dmitryso&#34;&gt;natural language processing&lt;/a&gt; and others.&lt;/li&gt; &#xA; &lt;li&gt;Specific ML &lt;strong&gt;Cloud Frameworks&lt;/strong&gt;, such as &lt;a href=&#34;https://azure.microsoft.com/services/machine-learning/?WT.mc_id=academic-57639-dmitryso&#34;&gt;Azure Machine Learning&lt;/a&gt; or &lt;a href=&#34;https://docs.microsoft.com/learn/paths/data-engineer-azure-databricks?WT.mc_id=academic-57639-dmitryso&#34;&gt;Azure Databricks&lt;/a&gt;. Consider using &lt;a href=&#34;https://docs.microsoft.com/learn/paths/build-ai-solutions-with-azure-ml-service/?WT.mc_id=academic-57639-dmitryso&#34;&gt;Build and operate machine learning solutions with Azure Machine Learning&lt;/a&gt; and &lt;a href=&#34;https://docs.microsoft.com/learn/paths/build-operate-machine-learning-solutions-azure-databricks/?WT.mc_id=academic-57639-dmitryso&#34;&gt;Build and Operate Machine Learning Solutions with Azure Databricks&lt;/a&gt; learning paths.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Conversational AI&lt;/strong&gt; and &lt;strong&gt;Chat Bots&lt;/strong&gt;. There is a separate &lt;a href=&#34;https://docs.microsoft.com/learn/paths/create-conversational-ai-solutions/?WT.mc_id=academic-57639-dmitryso&#34;&gt;Create conversational AI solutions&lt;/a&gt; learning path, and you can also refer to &lt;a href=&#34;https://soshnikov.com/azure/hello-bot-conversational-ai-on-microsoft-platform/&#34;&gt;this blog post&lt;/a&gt; for more detail.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Deep Mathematics&lt;/strong&gt; behind deep learning. For this, we would recommend &lt;a href=&#34;https://www.amazon.com/Deep-Learning-Adaptive-Computation-Machine/dp/0262035618&#34;&gt;Deep Learning&lt;/a&gt; by Ian Goodfellow, Yoshua Bengio and Aaron Courville, which is also available online at &lt;a href=&#34;https://www.deeplearningbook.org/&#34;&gt;https://www.deeplearningbook.org/&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For a gentle introduction to &lt;em&gt;AI in the Cloud&lt;/em&gt; topics you may consider taking the &lt;a href=&#34;https://docs.microsoft.com/learn/paths/get-started-with-artificial-intelligence-on-azure/?WT.mc_id=academic-57639-dmitryso&#34;&gt;Get started with artificial intelligence on Azure&lt;/a&gt; Learning Path.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Content&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;th&gt;No&lt;/th&gt;&#xA;   &lt;th&gt;Lesson&lt;/th&gt;&#xA;   &lt;th&gt;Intro&lt;/th&gt;&#xA;   &lt;th&gt;PyTorch&lt;/th&gt;&#xA;   &lt;th&gt;Keras/TensorFlow&lt;/th&gt;&#xA;   &lt;th&gt;Lab&lt;/th&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;I&lt;/td&gt;&#xA;   &lt;td colspan=&#34;4&#34;&gt;&lt;b&gt;Introduction to AI&lt;/b&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;1&lt;/td&gt;&#xA;   &lt;td&gt;Introduction and History of AI&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/1-Intro/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;II&lt;/td&gt;&#xA;   &lt;td colspan=&#34;4&#34;&gt;&lt;b&gt;Symbolic AI&lt;/b&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;2 &lt;/td&gt;&#xA;   &lt;td&gt;Knowledge Representation and Expert Systems&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/2-Symbolic/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td colspan=&#34;2&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/2-Symbolic/Animals.ipynb&#34;&gt;Expert System&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/2-Symbolic/FamilyOntology.ipynb&#34;&gt;Ontology&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/2-Symbolic/MSConceptGraph.ipynb&#34;&gt;Concept Graph&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;III&lt;/td&gt;&#xA;   &lt;td colspan=&#34;4&#34;&gt;&lt;b&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/3-NeuralNetworks/README.md&#34;&gt;Introduction to Neural Networks&lt;/a&gt;&lt;/b&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;3&lt;/td&gt;&#xA;   &lt;td&gt;Perceptron&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/3-NeuralNetworks/03-Perceptron/README.md&#34;&gt;Text&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td colspan=&#34;2&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/3-NeuralNetworks/03-Perceptron/Perceptron.ipynb&#34;&gt;Notebook&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/3-NeuralNetworks/03-Perceptron/lab/README.md&#34;&gt;Lab&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;4 &lt;/td&gt;&#xA;   &lt;td&gt;Multi-Layered Perceptron and Creating our own Framework&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/3-NeuralNetworks/04-OwnFramework/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td colspan=&#34;2&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/3-NeuralNetworks/04-OwnFramework/OwnFramework.ipynb&#34;&gt;Notebook&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/3-NeuralNetworks/04-OwnFramework/lab/README.md&#34;&gt;Lab&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;Intro to Frameworks (PyTorch/TensorFlow)&lt;br&gt;Overfitting&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/3-NeuralNetworks/05-Frameworks/README.md&#34;&gt;Text&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/3-NeuralNetworks/05-Frameworks/Overfitting.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/3-NeuralNetworks/05-Frameworks/IntroPyTorch.ipynb&#34;&gt;PyTorch&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/3-NeuralNetworks/05-Frameworks/IntroKerasTF.md&#34;&gt;Keras/TensorFlow&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/3-NeuralNetworks/05-Frameworks/lab/README.md&#34;&gt;Lab&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;IV&lt;/td&gt;&#xA;   &lt;td&gt;&lt;b&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/README.md&#34;&gt;Computer Vision&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;3&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/learn/paths/explore-computer-vision-microsoft-azure/?WT.mc_id=academic-57639-dmitryso&#34;&gt;&lt;i&gt;AI Fundamentals: Explore Computer Vision&lt;/i&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;   &lt;td colspan=&#34;2&#34;&gt;&lt;i&gt;Microsoft Learn Module on Computer Vision&lt;/i&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.microsoft.com/learn/modules/intro-computer-vision-pytorch/?WT.mc_id=academic-57639-dmitryso&#34;&gt;&lt;i&gt;PyTorch&lt;/i&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.microsoft.com/learn/modules/intro-computer-vision-TensorFlow/?WT.mc_id=academic-57639-dmitryso&#34;&gt;&lt;i&gt;TensorFlow&lt;/i&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;6&lt;/td&gt;&#xA;   &lt;td&gt;Intro to Computer Vision. OpenCV&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/06-IntroCV/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td colspan=&#34;2&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/06-IntroCV/OpenCV.ipynb&#34;&gt;Notebook&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/06-IntroCV/lab/README.md&#34;&gt;Lab&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;7&lt;/td&gt;&#xA;   &lt;td&gt;Convolutional Neural Networks&lt;br&gt;CNN Architectures&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/07-ConvNets/README.md&#34;&gt;Text&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/07-ConvNets/CNN_Architectures.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/07-ConvNets/ConvNetsPyTorch.ipynb&#34;&gt;PyTorch&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/07-ConvNets/ConvNetsTF.ipynb&#34;&gt;TensorFlow&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/07-ConvNets/lab/README.md&#34;&gt;Lab&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;8&lt;/td&gt;&#xA;   &lt;td&gt;Pre-trained Networks and Transfer Learning&lt;br&gt;Training Tricks&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/08-TransferLearning/README.md&#34;&gt;Text&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/08-TransferLearning/TrainingTricks.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/08-TransferLearning/TransferLearningPyTorch.ipynb&#34;&gt;PyTorch&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/08-TransferLearning/TransferLearningTF.ipynb&#34;&gt;TensorFlow&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/08-TransferLearning/Dropout.ipynb&#34;&gt;Dropout sample&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/08-TransferLearning/lab/README.md&#34;&gt;Lab&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;9&lt;/td&gt;&#xA;   &lt;td&gt;Autoencoders and VAEs&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/09-Autoencoders/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/09-Autoencoders/AutoEncodersPytorch.ipynb&#34;&gt;PyTorch&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/09-Autoencoders/AutoencodersTF.ipynb&#34;&gt;TensorFlow&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;10&lt;/td&gt;&#xA;   &lt;td&gt;Generative Adversarial Networks&lt;br&gt;Artistic Style Transfer&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/10-GANs/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/10-GANs/GANPyTorch.ipynb&#34;&gt;PyTorch&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/10-GANs/GANTF.ipynb&#34;&gt;TensorFlow GAN&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/10-GANs/StyleTransfer.ipynb&#34;&gt;Style Transfer&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;11&lt;/td&gt;&#xA;   &lt;td&gt;Object Detection&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/11-ObjectDetection/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;PyTorch&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/11-ObjectDetection/ObjectDetection-TF.ipynb&#34;&gt;TensorFlow&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/11-ObjectDetection/lab/README.md&#34;&gt;Lab&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;12&lt;/td&gt;&#xA;   &lt;td&gt;Semantic Segmentation. U-Net&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/12-Segmentation/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/12-Segmentation/SemanticSegmentationPytorch.ipynb&#34;&gt;PyTorch&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/4-ComputerVision/12-Segmentation/SemanticSegmentationTF.ipynb&#34;&gt;TensorFlow&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;V&lt;/td&gt;&#xA;   &lt;td&gt;&lt;b&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/README.md&#34;&gt;Natural Language Processing&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;3&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/learn/paths/explore-natural-language-processing/?WT.mc_id=academic-57639-dmitryso&#34;&gt;&lt;i&gt;AI Fundamentals: Explore Natural Language Processing&lt;/i&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;   &lt;td colspan=&#34;2&#34;&gt;&lt;i&gt;Microsoft Learn Module on Natural Language&lt;/i&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.microsoft.com/learn/modules/intro-natural-language-processing-pytorch/?WT.mc_id=academic-57639-dmitryso&#34;&gt;&lt;i&gt;PyTorch&lt;/i&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.microsoft.com/learn/modules/intro-natural-language-processing-TensorFlow/?WT.mc_id=academic-57639-dmitryso&#34;&gt;&lt;i&gt;TensorFlow&lt;/i&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;13&lt;/td&gt;&#xA;   &lt;td&gt;Text Representation. Bow/TF-IDF&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/13-TextRep/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/13-TextRep/TextRepresentationPyTorch.ipynb&#34;&gt;PyTorch&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/13-TextRep/TextRepresentationTF.ipynb&#34;&gt;TensorFlow&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;14&lt;/td&gt;&#xA;   &lt;td&gt;Semantic word embeddings. Word2Vec and GloVe&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/14-Embeddings/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/14-Embeddings/EmbeddingsPyTorch.ipynb&#34;&gt;PyTorch&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/14-Embeddings/EmbeddingsTF.ipynb&#34;&gt;TensorFlow&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;15&lt;/td&gt;&#xA;   &lt;td&gt;Language Modeling. Training your own embeddings&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/15-LanguageModeling/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/15-LanguageModeling/CBoW-TF.ipynb&#34;&gt;TensorFlow&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/15-LanguageModeling/lab/README.md&#34;&gt;Lab&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;16&lt;/td&gt;&#xA;   &lt;td&gt;Recurrent Neural Networks&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/16-RNN/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/16-RNN/RNNPyTorch.ipynb&#34;&gt;PyTorch&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/16-RNN/RNNTF.ipynb&#34;&gt;TensorFlow&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;17&lt;/td&gt;&#xA;   &lt;td&gt;Generative Recurrent Networks&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/17-GenerativeNetworks/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/17-GenerativeNetworks/GenerativePyTorch.md&#34;&gt;PyTorch&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/17-GenerativeNetworks/GenerativeTF.md&#34;&gt;TensorFlow&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/17-GenerativeNetworks/lab/README.md&#34;&gt;Lab&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;18&lt;/td&gt;&#xA;   &lt;td&gt;Transformers. BERT.&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/18-Transformers/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/18-Transformers/TransformersPyTorch.md&#34;&gt;PyTorch&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/18-Transformers/TransformersTF.md&#34;&gt;TensorFlow&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;19&lt;/td&gt;&#xA;   &lt;td&gt;Named Entity Recognition&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/19-NER/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/19-NER/NER-TF.ipynb&#34;&gt;TensorFlow&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/19-NER/lab/README.md&#34;&gt;Lab&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;20&lt;/td&gt;&#xA;   &lt;td&gt;Large Language Models, Prompt Programming and Few-Shot Tasks&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/20-LangModels/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/5-NLP/20-LangModels/GPT-PyTorch.ipynb&#34;&gt;PyTorch&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;VI&lt;/td&gt;&#xA;   &lt;td colspan=&#34;4&#34;&gt;&lt;b&gt;Other AI Techniques&lt;/b&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;21&lt;/td&gt;&#xA;   &lt;td&gt;Genetic Algorithms&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/6-Other/21-GeneticAlgorithms/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td colspan=&#34;2&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/6-Other/21-GeneticAlgorithms/Genetic.ipynb&#34;&gt;Notebook&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;22&lt;/td&gt;&#xA;   &lt;td&gt;Deep Reinforcement Learning&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/6-Other/22-DeepRL/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/6-Other/22-DeepRL/CartPole-RL-TF.ipynb&#34;&gt;TensorFlow&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/6-Other/22-DeepRL/lab/README.md&#34;&gt;Lab&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;23&lt;/td&gt;&#xA;   &lt;td&gt;Multi-Agent Systems&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/6-Other/23-MultiagentSystems/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;VII&lt;/td&gt;&#xA;   &lt;td colspan=&#34;4&#34;&gt;&lt;b&gt;AI Ethics&lt;/b&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;24&lt;/td&gt;&#xA;   &lt;td&gt;AI Ethics and Responsible AI&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/7-Ethics/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td colspan=&#34;2&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/learn/paths/responsible-ai-business-principles/?WT.mc_id=academic-57639-dmitryso&#34;&gt;&lt;i&gt;MS Learn: Responsible AI Principles&lt;/i&gt;&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;   &lt;td colspan=&#34;4&#34;&gt;&lt;b&gt;Extras&lt;/b&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;X1&lt;/td&gt;&#xA;   &lt;td&gt;Multi-Modal Networks, CLIP and VQGAN&lt;/td&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/X-Extras/X1-MultiModal/README.md&#34;&gt;Text&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td colspan=&#34;2&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/X-Extras/X1-MultiModal/Clip.ipynb&#34;&gt;Notebook&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://soshnikov.com/courses/ai-for-beginners/mindmap.html&#34;&gt;Mindmap of the Course&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Each lesson contains some pre-reading material (linked as &lt;strong&gt;Text&lt;/strong&gt; above), and some executable Jupyter Notebooks, which are often specific to the framework (&lt;strong&gt;PyTorch&lt;/strong&gt; or &lt;strong&gt;TensorFlow&lt;/strong&gt;). The executable notebook also contains a lot of theoretical material, so to understand the topic you need to go through at least one version of the notebooks (either PyTorch or TensorFlow). There are also &lt;strong&gt;Labs&lt;/strong&gt; available for some topics, which give you an opportunity to try applying the material you have learned to a specific problem.&lt;/p&gt; &#xA;&lt;p&gt;Some sections also contain links to &lt;strong&gt;MS Learn&lt;/strong&gt; modules that cover related topics. Microsoft Learn provides a convenient GPU-enabled learning environment, although in terms of content you can expect this curriculum to go a bit deeper.&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Students&lt;/strong&gt;, there are a couple of ways to use the curriculum. First of all, you can just read the text and look through the code directly on GitHub. If you want to run the code in any of the notebooks - &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/etc/how-to-run.md&#34;&gt;read our instructions&lt;/a&gt;, and find more advice on how to do it &lt;a href=&#34;https://soshnikov.com/education/how-to-execute-notebooks-from-github/&#34;&gt;in this blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/etc/how-to-run.md&#34;&gt;Instructions on how to run the code in this curriculum&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;However, if you would like to take the course as a self-study project, we suggest that you fork the entire repo to your own GitHub account and complete the exercises on your own or with a group:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Start with a pre-lecture quiz&lt;/li&gt; &#xA; &lt;li&gt;Read the intro text for the lecture&lt;/li&gt; &#xA; &lt;li&gt;If the lecture has additional notebooks, go through them, reading and executing the code. If both TensorFlow and PyTorch notebooks are provided, you can focus on one of them - chose your favorite framework&lt;/li&gt; &#xA; &lt;li&gt;Notebooks often contain some of the challenges that require you to tweak the code a little bit to experiment&lt;/li&gt; &#xA; &lt;li&gt;Take the post-lecture quiz&lt;/li&gt; &#xA; &lt;li&gt;If there is a lab attached to the module - complete the assignment&lt;/li&gt; &#xA; &lt;li&gt;Visit the &lt;a href=&#34;https://github.com/microsoft/AI-For-Beginners/discussions&#34;&gt;Discussion board&lt;/a&gt; to &#34;learn out loud&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Chat with other learners &lt;a href=&#34;https://gitter.im/Microsoft/ai-for-beginners&#34;&gt;on Gitter&lt;/a&gt; or &lt;a href=&#34;http://t.me/ai_for_beginners&#34;&gt;in Telegram channel&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For further study, we recommend following these &lt;a href=&#34;https://docs.microsoft.com/en-us/users/dmitrysoshnikov-9132/collections/31zgizg2p418yo/?WT.mc_id=academic-57639-dmitryso&#34;&gt;Microsoft Learn&lt;/a&gt; modules and learning paths.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Teachers&lt;/strong&gt;, we have &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/etc/for-teachers.md&#34;&gt;included some suggestions&lt;/a&gt; on how to use this curriculum.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;✍️ Primary Author:&lt;/strong&gt; &lt;a href=&#34;http://soshnikov.com&#34;&gt;Dmitry Soshnikov&lt;/a&gt;, PhD &lt;br&gt; &lt;strong&gt;🔥 Editor:&lt;/strong&gt; &lt;a href=&#34;https://twitter.com/jenlooper&#34;&gt;Jen Looper&lt;/a&gt;, PhD &lt;br&gt; &lt;strong&gt;🎨 Sketchnote illustrator:&lt;/strong&gt; &lt;a href=&#34;https://twitter.com/girlie_mac&#34;&gt;Tomomi Imura&lt;/a&gt; &lt;br&gt; &lt;strong&gt;✅ Quiz Creator:&lt;/strong&gt; &lt;a href=&#34;https://github.com/CinnamonXI&#34;&gt;Lateefah Bello&lt;/a&gt;, &lt;a href=&#34;https://studentambassadors.microsoft.com/&#34;&gt;MLSA&lt;/a&gt; &lt;br&gt; &lt;strong&gt;🙏 Core Contributors:&lt;/strong&gt; &lt;a href=&#34;https://github.com/Pe4enIks&#34;&gt;Evgenii Pishchik&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Meet the Team&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/m2KrAk0cC1c&#34; title=&#34;Promo video&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/lessons/sketchnotes/ai-for-beginners.png&#34; alt=&#34;Promo video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;🎥 Click the image above for a video about the project and the folks who created it!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Pedagogy&lt;/h2&gt; &#xA;&lt;p&gt;We have chosen two pedagogical tenets while building this curriculum: ensuring that it is hands-on &lt;strong&gt;project-based&lt;/strong&gt; and that it includes &lt;strong&gt;frequent quizzes&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By ensuring that the content aligns with projects, the process is made more engaging for students and retention of concepts will be augmented. In addition, a low-stakes quiz before a class sets the intention of the student towards learning a topic, while a second quiz after class ensures further retention. This curriculum was designed to be flexible and fun and can be taken in whole or in part. The projects start small and become increasingly complex by the end of the 12 week cycle.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Find our &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/etc/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/etc/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/etc/TRANSLATIONS.md&#34;&gt;Translation&lt;/a&gt; guidelines. Find our &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/etc/SUPPORT.md&#34;&gt;Support Documentation here&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/etc/SECURITY.md&#34;&gt;security information here&lt;/a&gt;. We welcome your constructive feedback!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;A note about quizzes&lt;/strong&gt;: All quizzes are contained &lt;a href=&#34;https://black-ground-0cc93280f.1.azurestaticapps.net/&#34;&gt;in this app&lt;/a&gt;, for 50 total quizzes of three questions each. They are linked from within the lessons but the quiz app can be run locally; follow the instruction in the &lt;code&gt;etc/quiz-app&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Offline access&lt;/h2&gt; &#xA;&lt;p&gt;You can run this documentation offline by using &lt;a href=&#34;https://docsify.js.org/#/&#34;&gt;Docsify&lt;/a&gt;. Fork this repo, &lt;a href=&#34;https://docsify.js.org/#/quickstart&#34;&gt;install Docsify&lt;/a&gt; on your local machine, and then in the &lt;code&gt;etc/docsify&lt;/code&gt; folder of this repo, type &lt;code&gt;docsify serve&lt;/code&gt;. The website will be served on port 3000 on your localhost: &lt;code&gt;localhost:3000&lt;/code&gt;. A pdf of the curriculum is available &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/etc/pdf/readme.pdf&#34;&gt;at this link&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Help Wanted!&lt;/h2&gt; &#xA;&lt;p&gt;Would you like to contribute a translation? Please read our &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/AI-For-Beginners/main/etc/TRANSLATIONS.md&#34;&gt;translation guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Other Curricula&lt;/h2&gt; &#xA;&lt;p&gt;Our team produces other curricula! Check out:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/webdev-beginners&#34;&gt;Web Dev for Beginners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/iot-beginners&#34;&gt;IoT for Beginners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://aka.ms/ML-for-Beginners&#34;&gt;Machine Learning for Beginners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://aka.ms/Data-Science-for-Beginners&#34;&gt;Data Science for Beginners&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>holtzy/The-Python-Graph-Gallery</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/holtzy/The-Python-Graph-Gallery</id>
    <link href="https://github.com/holtzy/The-Python-Graph-Gallery" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A website displaying hundreds of charts made with Python&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Python Graph Gallery&lt;/h1&gt; &#xA;&lt;p&gt;This github repository is the source code of the &lt;a href=&#34;https://www.python-graph-gallery.com&#34;&gt;Python Graph Gallery&lt;/a&gt;, a website that displays hundreds of chart made with Python.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.python-graph-gallery.com&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://www.python-graph-gallery.com/about&#34;&gt;About page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/holtzy/The-Python-Graph-Gallery/master/static/overview_PGG2.png&#34;&gt;</summary>
  </entry>
  <entry>
    <title>campusx-official/movie-recommender-system-tmdb-dataset</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/campusx-official/movie-recommender-system-tmdb-dataset</id>
    <link href="https://github.com/campusx-official/movie-recommender-system-tmdb-dataset" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A content based movie recommender system using cosine similarity&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;movie-recommender-system-tmdb-dataset&lt;/h1&gt; &#xA;&lt;p&gt;A content based movie recommender system using cosine similarity&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>krishnaik06/Machine-Learning-in-90-days</title>
    <updated>2022-05-30T01:43:28Z</updated>
    <id>tag:github.com,2022-05-30:/krishnaik06/Machine-Learning-in-90-days</id>
    <link href="https://github.com/krishnaik06/Machine-Learning-in-90-days" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Machine-Learning-in-90-days&lt;/h1&gt;</summary>
  </entry>
</feed>