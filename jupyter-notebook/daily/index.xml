<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-18T01:38:17Z</updated>
  <subtitle>Daily Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>the-full-stack/ask-fsdl</title>
    <updated>2023-05-18T01:38:17Z</updated>
    <id>tag:github.com,2023-05-18:/the-full-stack/ask-fsdl</id>
    <link href="https://github.com/the-full-stack/ask-fsdl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Document Q&amp;A over The Full Stack&#39;s Corpus&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🥞🦜 askFSDL 🦜🥞&lt;/h1&gt; &#xA;&lt;p&gt;askFSDL is a demonstration of a document-backed question-answering pipeline.&lt;/p&gt; &#xA;&lt;p&gt;We use the materials from the &lt;a href=&#34;https://fullstackdeeplearning.com/course&#34;&gt;Full Stack Deep Learning course&lt;/a&gt; as our document corpus, so the resulting application is great at answering questions like&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;What are the differences between PyTorch, TensorFlow, and JAX?&lt;/li&gt; &#xA; &lt;li&gt;How do I build an ML team?&lt;/li&gt; &#xA; &lt;li&gt;Which is cheaper: running experiments on cheap, slower GPUs or fast, more expensive GPUs?&lt;/li&gt; &#xA; &lt;li&gt;What&#39;s a data flywheel?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can try it out via the Discord bot frontend in the &lt;a href=&#34;https://fsdl.me/join-discord&#34;&gt;FSDL Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Stack&lt;/h2&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://github.com/hwchase17/langchain&#34;&gt;&lt;code&gt;langchain&lt;/code&gt;&lt;/a&gt; to organize our LLM invocations and prompt magic.&lt;/p&gt; &#xA;&lt;p&gt;We stood up a MongoDB instance on &lt;a href=&#34;https://www.mongodb.com/atlas/database&#34;&gt;Atlas&lt;/a&gt; to store our cleaned and organized document corpus, as shown in the &#34;Building the FSDL Corpus&#34; notebook.&lt;/p&gt; &#xA;&lt;p&gt;For fast search of relevant documents to insert into our prompt, we use a &lt;a href=&#34;https://github.com/facebookresearch/faiss&#34;&gt;FAISS index&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We host the application backend, which communicates with &lt;a href=&#34;https://openai.com/api/&#34;&gt;OpenAI&#39;s language modeling API&lt;/a&gt; and other services, on &lt;a href=&#34;https://modal.com/&#34;&gt;Modal&lt;/a&gt;, which provides serverless execution and scaling. That&#39;s also where we execute batch jobs, like syncing the document and vector stores.&lt;/p&gt; &#xA;&lt;p&gt;We host the Discord bot, written in &lt;a href=&#34;https://docs.pycord.dev/en/stable/&#34;&gt;&lt;code&gt;py-cord&lt;/code&gt;&lt;/a&gt;, on a free-tier &lt;a href=&#34;https://aws.amazon.com/ec2/&#34;&gt;AWS EC2&lt;/a&gt; instance.&lt;/p&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://gantry.io&#34;&gt;Gantry&lt;/a&gt; to monitor model behvaior in production and collect feedback from users.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>1rgs/jsonformer</title>
    <updated>2023-05-18T01:38:17Z</updated>
    <id>tag:github.com,2023-05-18:/1rgs/jsonformer</id>
    <link href="https://github.com/1rgs/jsonformer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Bulletproof Way to Generate Structured JSON from Language Models&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jsonformer: A Bulletproof Way to Generate Structured JSON from Language Models.&lt;/h1&gt; &#xA;&lt;h3&gt;Problem: Getting models to output structured JSON is hard&lt;/h3&gt; &#xA;&lt;h3&gt;Solution: Only generate the content tokens and fill in the fixed tokens&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/1rgs/jsonformer/blob/main/Jsonformer_example.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/1rgs/jsonformer/main/img/cover4.png&#34; alt=&#34;cover&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Generating structured JSON from language models is a challenging task. The generated JSON must be syntactically correct, and it must conform to a schema that specifies the structure of the JSON.&lt;/p&gt; &#xA;&lt;p&gt;Current approaches to this problem are brittle and error-prone. They rely on prompt engineering, fine-tuning, and post-processing, but they still fail to generate syntactically correct JSON in many cases.&lt;/p&gt; &#xA;&lt;p&gt;Jsonformer is a new approach to this problem. In structured data, many tokens are fixed and predictable. Jsonformer is a wrapper around Hugging Face models that fills in the fixed tokens during the generation process, and only delegates the generation of content tokens to the language model. This makes it more efficient and bulletproof than existing approaches.&lt;/p&gt; &#xA;&lt;p&gt;This currently supports a subset of JSON Schema. Below is a list of the supported schema types:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;number&lt;/li&gt; &#xA; &lt;li&gt;boolean&lt;/li&gt; &#xA; &lt;li&gt;string&lt;/li&gt; &#xA; &lt;li&gt;array&lt;/li&gt; &#xA; &lt;li&gt;object&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from jsonformer import Jsonformer&#xA;from transformers import AutoModelForCausalLM, AutoTokenizer&#xA;&#xA;model = AutoModelForCausalLM.from_pretrained(&#34;databricks/dolly-v2-12b&#34;)&#xA;tokenizer = AutoTokenizer.from_pretrained(&#34;databricks/dolly-v2-12b&#34;)&#xA;&#xA;json_schema = {&#xA;    &#34;type&#34;: &#34;object&#34;,&#xA;    &#34;properties&#34;: {&#xA;        &#34;name&#34;: {&#34;type&#34;: &#34;string&#34;},&#xA;        &#34;age&#34;: {&#34;type&#34;: &#34;number&#34;},&#xA;        &#34;is_student&#34;: {&#34;type&#34;: &#34;boolean&#34;},&#xA;        &#34;courses&#34;: {&#xA;            &#34;type&#34;: &#34;array&#34;,&#xA;            &#34;items&#34;: {&#34;type&#34;: &#34;string&#34;}&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;prompt = &#34;Generate a person&#39;s information based on the following schema:&#34;&#xA;jsonformer = Jsonformer(model, tokenizer, json_schema, prompt)&#xA;generated_data = jsonformer()&#xA;&#xA;print(generated_data)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Jsonformer works on complex schemas, even with tiny models. Here is an example of a schema with nested objects and arrays, generated by a 3B parameter model.&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;{&#34;type&#34;: &#34;object&#34;, &#34;properties&#34;: {&#34;car&#34;: {&#34;type&#34;: &#34;object&#34;, &#34;properties&#34;: {&#34;make&#34;: {&#34;type&#34;: &#34;string&#34;}, &#34;model&#34;: {&#34;type&#34;: &#34;string&#34;}, &#34;year&#34;: {&#34;type&#34;: &#34;number&#34;}, &#34;colors&#34;: {&#34;type&#34;: &#34;array&#34;, &#34;items&#34;: {&#34;type&#34;: &#34;string&#34;}}, &#34;features&#34;: {&#34;type&#34;: &#34;object&#34;, &#34;properties&#34;: {&#34;audio&#34;: {&#34;type&#34;: &#34;object&#34;, &#34;properties&#34;: {&#34;brand&#34;: {&#34;type&#34;: &#34;string&#34;}, &#34;speakers&#34;: {&#34;type&#34;: &#34;number&#34;}, &#34;hasBluetooth&#34;: {&#34;type&#34;: &#34;boolean&#34;}}}, &#34;safety&#34;: {&#34;type&#34;: &#34;object&#34;, &#34;properties&#34;: {&#34;airbags&#34;: {&#34;type&#34;: &#34;number&#34;}, &#34;parkingSensors&#34;: {&#34;type&#34;: &#34;boolean&#34;}, &#34;laneAssist&#34;: {&#34;type&#34;: &#34;boolean&#34;}}}, &#34;performance&#34;: {&#34;type&#34;: &#34;object&#34;, &#34;properties&#34;: {&#34;engine&#34;: {&#34;type&#34;: &#34;string&#34;}, &#34;horsepower&#34;: {&#34;type&#34;: &#34;number&#34;}, &#34;topSpeed&#34;: {&#34;type&#34;: &#34;number&#34;}}}}}}}, &#34;owner&#34;: {&#34;type&#34;: &#34;object&#34;, &#34;properties&#34;: {&#34;firstName&#34;: {&#34;type&#34;: &#34;string&#34;}, &#34;lastName&#34;: {&#34;type&#34;: &#34;string&#34;}, &#34;age&#34;: {&#34;type&#34;: &#34;number&#34;}}}}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;{&#xA;  car: {&#xA;    make: &#34;audi&#34;,&#xA;    model: &#34;model A8&#34;,&#xA;    year: 2016.0,&#xA;    colors: [&#xA;      &#34;blue&#34;&#xA;    ],&#xA;    features: {&#xA;      audio: {&#xA;        brand: &#34;sony&#34;,&#xA;        speakers: 2.0,&#xA;        hasBluetooth: True&#xA;      },&#xA;      safety: {&#xA;        airbags: 2.0,&#xA;        parkingSensors: True,&#xA;        laneAssist: True&#xA;      },&#xA;      performance: {&#xA;        engine: &#34;4.0&#34;,&#xA;        horsepower: 220.0,&#xA;        topSpeed: 220.0&#xA;      }&#xA;    }&#xA;  },&#xA;  owner: {&#xA;    firstName: &#34;John&#34;,&#xA;    lastName: &#34;Doe&#34;,&#xA;    age: 40.0&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bulletproof JSON generation: Jsonformer ensures that the generated JSON is always syntactically correct and conforms to the specified schema.&lt;/li&gt; &#xA; &lt;li&gt;Efficiency: By generating only the content tokens and filling in the fixed tokens, Jsonformer is more efficient than generating a full JSON string and parsing it.&lt;/li&gt; &#xA; &lt;li&gt;Flexible and extendable: Jsonformer is built on top of the Hugging Face transformers library, making it compatible with any model that supports the Hugging Face interface.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install jsonformer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://python-poetry.org/docs/#installation&#34;&gt;Poetry&lt;/a&gt; is used for dependency management.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry run python -m jsonformer.example&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Jsonformer is released under the MIT License. You are free to use, modify, and distribute this software for any purpose, commercial or non-commercial, as long as the original copyright and license notice are included.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>UFund-Me/Qbot</title>
    <updated>2023-05-18T01:38:17Z</updated>
    <id>tag:github.com,2023-05-18:/UFund-Me/Qbot</id>
    <link href="https://github.com/UFund-Me/Qbot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;[updating ...] 自动量化交易机器人 Qbot is an AI-oriented quantitative investment platform, which aims to realize the potential, empower AI technologies in quantitative investment. https://ufund-me.github.io/Qbot&lt;/p&gt;&lt;hr&gt;&lt;h1&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/29084184/204598632-23c473db-92ee-4e9b-9b57-d6d95c861fdf.png&#34; width=&#34;42&#34;&gt; 🤖 Qbot &lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/UFund-Me/Qbot/actions/workflows/codeql-analysis.yml&#34;&gt;&lt;img src=&#34;https://github.com/UFund-Me/Qbot/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/UFund-Me/Qbot/actions/workflows/auto-trade.yml&#34;&gt;&lt;img src=&#34;https://github.com/UFund-Me/Qbot/actions/workflows/auto-trade.yml/badge.svg?sanitize=true&#34; alt=&#34;AutoTrade&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/UFund-Me/Qbot/actions/workflows/pylint.yml&#34;&gt;&lt;img src=&#34;https://github.com/UFund-Me/Qbot/actions/workflows/pylint.yml/badge.svg?sanitize=true&#34; alt=&#34;Pylint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/UFund-Me/Qbot/actions/workflows/coverage.yml&#34;&gt;&lt;img src=&#34;https://github.com/UFund-Me/Qbot/actions/workflows/coverage.yml/badge.svg?sanitize=true&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Charmve/computer-vision-in-action/tree/main/code/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-%203.8|%203.9-000000.svg?logo=Python&amp;amp;color=blue&#34; alt=&#34;Python version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ufund-me.github.io/Qbot/#/&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/pyod/badge/?version=latest&#34; alt=&#34;Documentation status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/UFund-Me/Qbot&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; alt=&#34;Qbot&#34; srcset=&#34;https://excalidraw.nyc3.cdn.digitaloceanspaces.com/github%2FExcalidraw_Github_cover_dark.png&#34;&gt; &#xA;   &lt;img alt=&#34;Qbot&#34; width=&#34;224&#34; src=&#34;https://user-images.githubusercontent.com/29084184/204598632-23c473db-92ee-4e9b-9b57-d6d95c861fdf.png&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &#xA; &lt;div&gt;&#xA;  &amp;nbsp;&#xA; &lt;/div&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;b&gt;&lt;font size=&#34;5&#34;&gt;Qbot website&lt;/font&gt;&lt;/b&gt; &#xA;  &lt;sup&gt; &lt;a href=&#34;https://ufund-me.github.io/Qbot/#/&#34;&gt; &lt;i&gt;&lt;font size=&#34;4&#34;&gt;HOT&lt;/font&gt;&lt;/i&gt; &lt;/a&gt; &lt;/sup&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &#xA;  &lt;b&gt;&lt;font size=&#34;5&#34;&gt;Qbot platform&lt;/font&gt;&lt;/b&gt; &#xA;  &lt;sup&gt; &lt;a href=&#34;https://ufund-me.github.io/Qbot/quantstats/docs/tearsheet.html&#34;&gt; &lt;i&gt;&lt;font size=&#34;4&#34;&gt;TRY IT OUT&lt;/font&gt;&lt;/i&gt; &lt;/a&gt; &lt;/sup&gt; &#xA; &lt;/div&gt; &#xA; &lt;div&gt;&#xA;  &amp;nbsp;&#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;AI驱动的自动化智能投研、智能投顾平台&lt;/p&gt; &#xA; &lt;p&gt; &lt;b&gt;Qbot&lt;/b&gt; is an AI-oriented automated quantitative investment platform, which aims to realize the potential, &lt;br&gt; empower AI technologies in quantitative investment. &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;pre&gt;&lt;code&gt;🤖 Qbot = 智能交易策略 + 回测系统 + 自动化量化交易 (+ 可视化分析工具)&#xA;            |           |            |            |&#xA;            |           |            |             \_ quantstats (dashboard\online operate)&#xA;            |           |             \______________ Qbot - vnpy, pytrader, pyfunds&#xA;            |           \____________________________ BackTest - backtrader, easyquant&#xA;            \________________________________________ quant.ai - qlib, deep learning strategies&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;***不建议 fork 项目，本项目会持续更新，只 fork 看不到更新，建议 Star ⭐️ ~***&lt;/p&gt; &#xA; &lt;p&gt;&lt;i&gt;喜欢这个项目吗？请考虑 ❤️赞助本项目 以帮助改进！&lt;/i&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/UFund-Me/Qbot.git&#xA;&#xA;cd Qbot&#xA;&#xA;pip install -r requirements.txt&#xA;&#xA;python main.py #if run on Mac, please use &#39;pythonw main.py&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p id=&#34;demo&#34;&gt; &#xA; &lt;!-- &lt;img width=&#34;&#34; alt=&#34;demo&#34; src=&#34;https://user-images.githubusercontent.com/29084184/221901048-bb1615fe-674f-40e8-b1e7-ba5db30a82a6.png&#34;&gt; --&gt; &lt;img width=&#34;&#34; alt=&#34;demo&#34; src=&#34;https://user-images.githubusercontent.com/29084184/223608757-5808e23c-86e4-4b1b-8b03-e04c8f368f5c.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;USAGE ʕ •ᴥ•ʔ&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/docs/01-%E6%96%B0%E6%89%8B%E6%8C%87%E5%BC%95/Install_guide.md&#34;&gt;Install Guide&lt;/a&gt; | &lt;a href=&#34;https://ufund-me.github.io/Qbot/#/&#34;&gt;Online documents&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; ____________________________________&#xA;&amp;lt; Run ``./env_setup.sh`` to say hello &amp;gt;&#xA; ------------------------------------&#xA;            \   ^__^&#xA;             \  (oo)\_______&#xA;                (__)\       )\/\&#xA;                    ||----w |&#xA;                    ||     ||&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get Started&lt;/h3&gt; &#xA;&lt;h4&gt;Local&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export USER_ID=&#34;admin&#34;                   # replace your info&#xA;export PASSWORD=&#34;admin1234.&#34;             # replace your info&#xA;&#xA;pip install -r requirements.txt&#xA;&#xA;cd  pytrader&#xA;python test_backtrade.py&#xA;python test_trader.py&#xA;&#xA;# visualization&#xA;python main.py&#xA;&#xA;# if run on Mac, please use &#39;pythonw main.py&#39;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Web&lt;/h4&gt; &#xA;&lt;p&gt;需要 node 开发环境: &lt;code&gt;npm&lt;/code&gt;、&lt;code&gt;node&lt;/code&gt;，点击&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pyfunds/fund-strategies/README.md&#34;&gt;查看&lt;/a&gt;详细操作文档&lt;/p&gt; &#xA;&lt;p&gt;运行命令&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd pyfunds/fund-strategies&#xA;&#xA;npm install&#xA;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;No-code operation (TODO)&lt;/h2&gt; &#xA;&lt;img width=&#34;&#34; alt=&#34;dagster&#34; src=&#34;https://user-images.githubusercontent.com/29084184/221900050-2275a6e2-5c9b-4b81-84e5-0087e8fb58ec.png&#34;&gt; &#xA;&lt;p&gt;体验下来，dagster是很适合金融数据采集、处理，还有机器学习的场景。当然这里的场景更偏向于“批处理”，“定时任务”的处理与编排。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dagster-daemon run &amp;amp;&#xA;dagit -h 0.0.0.0 -p 3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Strategies&lt;/h2&gt; &#xA;&lt;p&gt;部分未整理。。。&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;b&gt;经典策略&lt;/b&gt; &#xA;&lt;/div&gt; &#xA;&lt;table align=&#34;center&#34;&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr align=&#34;center&#34; valign=&#34;bottom&#34;&gt; &#xA;   &lt;td&gt; &lt;b&gt;股票&lt;/b&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;基金&lt;/b&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;期货&lt;/b&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr valign=&#34;top&#34;&gt; &#xA;   &lt;td&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/01-股票/布林线均值回归.md&#34;&gt;布林线均值回归 (&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/03-智能策略/&#34;&gt;移动均线+KDJ&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/01-股票/多因子选股.md&#34;&gt;多因子选股 (&#39;2023)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/01-股票/小市值.md&#34;&gt;小市值 (&#39;2021)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/01-股票/指数增强.md&#34;&gt;指数增强 (&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/01-股票/Alpha对冲.md&#34;&gt;Alpha对冲 (&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/03-期货/网络交易.md&#34;&gt;网格交易 (&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/03-智能策略/拐点交易.md&#34;&gt;拐点交易 (&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/03-智能策略/&#34;&gt;趋势交易&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/03-智能策略/&#34;&gt;海龟策略&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/03-智能策略/&#34;&gt;动态平衡策略&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/03-智能策略/&#34;&gt;阿隆指标策略&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/02-基金/4433法则.md&#34;&gt;4433法则 (&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/02-基金/&#34;&gt;对冲策略：指数型+债券型对冲&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/02-基金/&#34;&gt;组合策略：多因子组合配置&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/02-基金/&#34;&gt;组合策略：惠赢智能算法1&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/02-基金/&#34;&gt;组合策略：择时多策略&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/02-基金/&#34;&gt;组合策略：智赢多因子1&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/03-期货/双均线策略.md&#34;&gt;双均线策略 (&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/03-期货/网络交易.md&#34;&gt;网格交易 (&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;b&gt;智能策略&lt;/b&gt; &#xA;&lt;/div&gt; &#xA;&lt;table align=&#34;center&#34;&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr align=&#34;center&#34; valign=&#34;middle&#34;&gt; &#xA;   &lt;td&gt; &lt;b&gt;GBDT&lt;/b&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;RNN&lt;/b&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;Reinforcement Learning&lt;/b&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;&lt;span&gt;🔥&lt;/span&gt; Transformer&lt;/b&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr valign=&#34;top&#34;&gt; &#xA;   &lt;td&gt; &lt;li&gt;&lt;b&gt;GBDT&lt;/b&gt;&lt;/li&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/strategies/benchmarks/XGBoost&#34;&gt;XGBoost (KDD&#39;2016)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/strategies/benchmarks/LightGBM&#34;&gt;LightGBM (NIPS&#39;2017)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;Catboost (NIPS&#39;2018)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;li&gt;&lt;b&gt;BOOST&lt;/b&gt;&lt;/li&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;DoubleEnsemble (ICDM&#39;2020)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;TabNet (ECCV&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;li&gt;&lt;b&gt;LR&lt;/b&gt;&lt;/li&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/strategies/benchmarks/Linear&#34;&gt; Line Regression (&#39;2020)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;li&gt;&lt;b&gt;CNN&lt;/b&gt;&lt;/li&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/strategies/benchmarks/MLP&#34;&gt;MLP (CVPRW&#39;2020)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;GRU (ICCVW&#39;2021)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;ImVoxelNet (WACV&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;TabNet (AAAI&#39;2019)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;li&gt;&lt;b&gt;RNN&lt;/b&gt;&lt;/li&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/strategies/benchmarks/LSTM&#34;&gt;LSTM (Neural Computation&#39;2017)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;ALSTM (IJCAI&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;ADARNN (KDD&#39;2021)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;ADD (CoRL&#39;2020)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/strategies/benchmarks/TFT&#34;&gt;TFT (IJoF&#39;2019)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;&#34;&gt;GATs (NIPS&#39;2017)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;&#34;&gt;SFM (KDD&#39;2017)&lt;/a&gt;&lt;/li&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/strategies/benchmarks/Transformer&#34;&gt;Transformer (NeurIPS&#39;2017)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;&#34;&gt;TCTS (ICML&#39;2021)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;&#34;&gt;TRA (KDD&#39;2021)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;&#34;&gt;TCN (KDD&#39;2018)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;&#34;&gt;IGMTF (KDD&#39;2021)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;&#34;&gt;HIST (KDD&#39;2018)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;&#34;&gt;Localformer (&#39;2021)&lt;/a&gt;&lt;/li&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt;   &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Benchmark and Model zoo&lt;/h3&gt; &#xA;&lt;p&gt;Results and models are available in the &lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/docs/03-%E6%99%BA%E8%83%BD%E7%AD%96%E7%95%A5/model_zoo.md&#34;&gt;model zoo&lt;/a&gt;. AI strategies is shown at &lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/strategies/&#34;&gt;here&lt;/a&gt;, local run &#34;python pytrader/strategies/workflow_by_code.py&#34;, also provide &lt;a href=&#34;https://mybinder.org/v2/gh/UFund-Me/Qbot/blob/main/pytrader/strategies/workflow_by_code.ipynb/HEAD&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;em&gt;&lt;b&gt;点击展开查看具体AI模型benchmark结果&lt;/b&gt;&lt;/em&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;status&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;benchmark&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;framework&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;DGCNN&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;RegNetX&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;addition&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;arXiv&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;GBDT&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;XGBoost&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Tianqi Chen, et al. KDD 2016&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;GBDT&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;LightGBM&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Guolin Ke, et al. NIPS 2017&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;GBDT&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Catboost&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Liudmila Prokhorenkova, et al. NIPS 2018&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;MLP&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;--&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;LSTM&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Sepp Hochreiter, et al. Neural computation 1997&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;LightGBM&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;--&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;GRU&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Kyunghyun Cho, et al. 2014&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;ALSTM&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Yao Qin, et al. IJCAI 2017&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;GATs&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Petar Velickovic, et al. 2017&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;SFM&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Liheng Zhang, et al. KDD 2017&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;TFT&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;tensorflow&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Bryan Lim, et al. International Journal of Forecasting 2019&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;TabNet&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Sercan O. Arik, et al. AAAI 2019&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;DoubleEnsemble&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;LightGBM&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Chuheng Zhang, et al. ICDM 2020&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;TCTS&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Xueqing Wu, et al. ICML 2021&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Transformer&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Ashish Vaswani, et al. NeurIPS 2017&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Localformer&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Juyong Jiang, et al.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;TRA&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Hengxu, Dong, et al. KDD 2021&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;TCN&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Shaojie Bai, et al. 2018&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;ADARNN&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;YunTao Du, et al. 2021&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;ADD&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Hongshun Tang, et al.2020&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;IGMTF&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Wentao Xu, et al.2021&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;HIST&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Wentao Xu, et al.2021&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;p&gt;&lt;sup&gt;&lt;strong&gt;Note:&lt;/strong&gt; All the about &lt;strong&gt;300+ models, methods of 40+ papers&lt;/strong&gt; in quant.ai supported by &lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/docs/03-%E6%99%BA%E8%83%BD%E7%AD%96%E7%95%A5/model_zoo.md&#34;&gt;Model Zoo&lt;/a&gt; can be trained or used in this codebase.&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;策略原理及源码分析&lt;/h2&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://ufund-me.github.io/Qbot/#/&#34;&gt; &lt;i&gt;&lt;font size=&#34;4&#34;&gt;在线文档&lt;/font&gt;&lt;/i&gt; &lt;/a&gt; &lt;i&gt;&lt;font size=&#34;4&#34;&gt;jupyter notebook&lt;/font&gt;&lt;/i&gt;  &lt;/p&gt;&#xA;&lt;h2&gt;Quantstats Report&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/29084184/207054856-44d1815b-f92f-40a7-b82e-e4a6b3960f2f.png&#34; alt=&#34;Quantstats Report&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Click &lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/quantstats#visualize-stock-performance&#34;&gt;HERE&lt;/a&gt; to more detail.&lt;/p&gt; &#xA;&lt;h4&gt;Some strategy backtest results:&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;声明：别轻易用于实盘，市场有风险，投资需谨慎。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;Starting Portfolio Value: 10000.00&#xA;Startdate=datetime.datetime(2010, 1, 1),&#xA;Enddate=datetime.datetime(2020, 4, 21),&#xA;# 设置佣金为0.001, 除以100去掉%号&#xA;cerebro.broker.setcommission(commission=0.001)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A股回测MACD策略:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/doc/02.easy_macd_strategy/Figure_macd.png&#34; alt=&#34;MACD&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/UFund-Me/Qbot/assets/29084184/dfef65ba-0d32-4f5f-b413-d6ec02fc700e&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A股回测KDJ策略:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/doc/04.kdj_with_macd/Figure_kdj.png&#34; alt=&#34;KDJ&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/UFund-Me/Qbot/assets/29084184/ef8e945b-59d6-4220-87e3-08ec1196cc2c&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A股回测 KDJ+MACD 策略:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/doc/04.kdj_with_macd/Figure_kdj_with_macd.png&#34; alt=&#34;KDJ with MACD&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/UFund-Me/Qbot/assets/29084184/67338ec5-a6b1-4aa7-9792-1a2c61f353da&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 很多策略需要做回测验证；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 本项目由前后端支持，有上位机app支持，但目前框架还比较乱，需要做调整；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 各种策略需要抽象设计，支持统一调用；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 增强数据获取的实时性，每秒数据，降低延迟；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 在线文档的完善，目前主要几个部分：新手使用指引、经典策略原理和源码、智能策略原理和源码、常见问题等；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 新的feature开发，欢迎在&lt;a href=&#34;https://github.com/UFund-Me/Qbot/issues/&#34;&gt;issues&lt;/a&gt;交流；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We appreciate all contributions to improve Qbot. Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for the contributing guideline.&lt;/p&gt; &#xA;&lt;h2&gt;🍮 Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Github &lt;a href=&#34;https://github.com/UFund-Me/Qbot/discussions&#34; target=&#34;_blank&#34;&gt;discussions 💬&lt;/a&gt; or &lt;a href=&#34;https://github.com/UFund-Me/Qbot/issues&#34; target=&#34;_blank&#34;&gt;issues 💭&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;WeChat Group ID: Yida_Zhang2&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Email: yidazhang1#gmail.com&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;知乎：&lt;a href=&#34;https://www.zhihu.com/people/MaiweiE-com&#34;&gt;@Charmve&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;知识星球：AI量化投资 （加我微信，邀请）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- ## 如何选股/选基&#xA;&lt;img width=&#34;32&#34; alt=&#34;Tool&#34; src=&#34;https://user-images.githubusercontent.com/29084184/222178733-50486338-c137-4c9a-8b93-b523841066ea.png&#34;&gt; https://github.com/axiaoxin-com/investool&#xA;--&gt; &#xA;&lt;h2&gt;&lt;span&gt;⚠&lt;/span&gt; Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;交易策略和自动化工具只是提供便利，并不代表实际交易收益。该项目任何内容不构成任何投资建议。市场有风险，投资需谨慎。&lt;/p&gt; &#xA;&lt;h2&gt;Stargazers Over Time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/UFund-Me/Qbot&#34;&gt;&lt;img src=&#34;https://starchart.cc/UFund-Me/Qbot.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors &amp;amp; support&lt;/h2&gt; &#xA;&lt;p&gt;If you like the project, you can become a sponsor at &lt;a href=&#34;https://opencollective.com/qbot&#34;&gt;Open Collective&lt;/a&gt; or use &lt;a href=&#34;https://github.com/sponsors/Charmve&#34;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;Thank you for supporting Qbot!&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/qbot&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Qbot/tiers/sponsors.svg?avatarHeight=120&#34; alt=&#34;Sponsor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/qbot#category-CONTRIBUTE&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/qbot/tiers/backers.svg?avatarHeight=32&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;Last but not least, we&#39;re thankful to these open-source repo for sharing their services for free:&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;基于Backtrader、vnpy、qlib、tushare、backtest、easyquant等开源项目，感谢开发者。&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;感谢大家的支持与喜欢！&lt;/p&gt; &#xA;&lt;p&gt;Code with ❤️ &amp;amp; ☕️ @Charmve 2022-2023&lt;/p&gt;</summary>
  </entry>
</feed>