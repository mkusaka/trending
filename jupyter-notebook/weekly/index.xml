<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-19T02:12:29Z</updated>
  <subtitle>Weekly Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>esokolov/ml-course-hse</title>
    <updated>2022-06-19T02:12:29Z</updated>
    <id>tag:github.com,2022-06-19:/esokolov/ml-course-hse</id>
    <link href="https://github.com/esokolov/ml-course-hse" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Машинное обучение на ФКН ВШЭ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Курс &#34;Машинное обучение&#34; на ФКН ВШЭ&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/esokolov/ml-course-hse/master/2016-fall/lecture-notes&#34;&gt;Конспекты лекций&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/esokolov/ml-course-hse/master/2016-fall/seminars&#34;&gt;материалы семинаров&lt;/a&gt; и домашние задания (&lt;a href=&#34;https://raw.githubusercontent.com/esokolov/ml-course-hse/master/2016-fall/homeworks-theory&#34;&gt;теоретические&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/esokolov/ml-course-hse/master/2016-fall/homeworks-practice&#34;&gt;практические&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/esokolov/ml-course-hse/master/2016-fall/contests&#34;&gt;соревнования&lt;/a&gt;) по курсу &#34;Машинное обучение&#34;, проводимому на бакалаврской программе &#34;Прикладная математика и информатика&#34; Факультета компьютерных наук Высшей школы экономики.&lt;/p&gt; &#xA;&lt;p&gt;Страницы курсов:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://wiki.cs.hse.ru/%D0%9C%D0%B0%D1%88%D0%B8%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BE%D0%B1%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5_1&#34;&gt;http://wiki.cs.hse.ru/Машинное_обучение_1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://wiki.cs.hse.ru/%D0%9C%D0%B0%D1%88%D0%B8%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BE%D0%B1%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5_2&#34;&gt;http://wiki.cs.hse.ru/Машинное_обучение_2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Записи лекций и семинаров 2020/2021 года, осень:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLEwK9wdS5g0oZwFwoQT-BrjmkazJWXxfe&#34;&gt;Полный плейлист&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HytWgel76rY&#34;&gt;Вводная лекция&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=rNO34vMVS-Q&#34;&gt;Линейная регрессия&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CWFWFsie6jg&#34;&gt;Линейная регрессия и градиентное обучение&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=tIymy9jpO9s&#34;&gt;Продвинутые градиентные методы, линейная классификация&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=3Qj87xe3Djk&#34;&gt;Метрики качества классификации&lt;/a&gt; (&lt;a href=&#34;https://www.youtube.com/watch?v=xk7cU86Sh5A&#34;&gt;+небольшое продолжение&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=KeNJw_jw8NE&#34;&gt;Логистическая регрессия&lt;/a&gt; (&lt;a href=&#34;https://www.youtube.com/watch?v=ZJ_b_VLQu84&#34;&gt;+продолжение&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Ec1xYZ9zzEI&#34;&gt;Метод опорных векторов, многоклассовая классификация&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=h7FF6EcXDqA&#34;&gt;Решающие деревья&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=t0OhR13Pgwk&#34;&gt;Решающие деревья (продолжение), разложение ошибки на смещение и разброс&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=pXFZsXlVM-M&#34;&gt;Случайные леса, градиентный бустинг&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Tq-ofCmY6b4&#34;&gt;Градиентный бустинг (продолжение)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=kdxnz3cAoeI&#34;&gt;Стекинг. Обучение без учителя и кластеризация.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=axiaI8Z9lhA&#34;&gt;Визуализация, обучение представлений&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=YczTyXIuW-o&#34;&gt;Рекомендательные системы&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Записи лекций и семинаров 2020/2021 года, весна:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLEwK9wdS5g0p7A6gXsuXnLZpfrMyqrJKP&#34;&gt;Полный плейлист&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://wiki.cs.hse.ru/%D0%9C%D0%B0%D1%88%D0%B8%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BE%D0%B1%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5_2#.D0.9B.D0.B5.D0.BA.D1.86.D0.B8.D0.B8&#34;&gt;Список лекций, ссылки на записи и конспекты&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Видеозаписи некоторых лекций 2018/19 года:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=OBG6EUSRC9g&amp;amp;list=PLEqoHzpnmTfDwuwrFHWVHdr1-qJsfqCUX&#34;&gt;Линейная регрессия&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gn2dP7raceY&amp;amp;list=PLEqoHzpnmTfDwuwrFHWVHdr1-qJsfqCUX&amp;amp;index=2&#34;&gt;Линейная регрессия (продолжение) и линейная классификация&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=PrsLyrz7Zlw&amp;amp;list=PLEqoHzpnmTfDwuwrFHWVHdr1-qJsfqCUX&amp;amp;index=3&#34;&gt;Метрики качества классификации, логистическая регрессия&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=sSeQI-5WgRs&amp;amp;list=PLEqoHzpnmTfDwuwrFHWVHdr1-qJsfqCUX&amp;amp;index=4&#34;&gt;Метод опорных векторов, многоклассовая классификация&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gV2cBLxQ_EQ&amp;amp;list=PLEqoHzpnmTfDwuwrFHWVHdr1-qJsfqCUX&amp;amp;index=5&#34;&gt;Решающие деревья&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=IiYbMIWpsQQ&amp;amp;list=PLEqoHzpnmTfDwuwrFHWVHdr1-qJsfqCUX&amp;amp;index=6&#34;&gt;Разложение ошибки на смещение и разброс, бэггинг&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=y2d6iGq02as&amp;amp;list=PLEqoHzpnmTfDwuwrFHWVHdr1-qJsfqCUX&amp;amp;index=7&#34;&gt;Случайные леса, градиентный бустинг&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=mB6HsG5QFDU&amp;amp;list=PLEqoHzpnmTfDwuwrFHWVHdr1-qJsfqCUX&amp;amp;index=8&#34;&gt;Градиентный бустинг 2, кластеризация&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=1mrwebWTDtA&amp;amp;list=PLEqoHzpnmTfDwuwrFHWVHdr1-qJsfqCUX&amp;amp;index=9&#34;&gt;Визуализация, представления объектов, метод главных компонент&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=rCTBa-IaAf4&amp;amp;list=PLEqoHzpnmTfDwuwrFHWVHdr1-qJsfqCUX&amp;amp;index=10&#34;&gt;Рекомендательные системы&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Azure/azureml-examples</title>
    <updated>2022-06-19T02:12:29Z</updated>
    <id>tag:github.com,2022-06-19:/Azure/azureml-examples</id>
    <link href="https://github.com/Azure/azureml-examples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official community-driven Azure Machine Learning examples, tested with GitHub Actions.&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;p&gt;page_type: sample languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;azurecli&lt;/li&gt; &#xA; &lt;li&gt;python products:&lt;/li&gt; &#xA; &lt;li&gt;azure-machine-learning description: Top-level directory for official Azure Machine Learning sample code and examples.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Azure Machine Learning examples&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Azure/azureml-examples/actions/workflows/smoke.yml&#34;&gt;&lt;img src=&#34;https://github.com/Azure/azureml-examples/workflows/smoke/badge.svg?sanitize=true&#34; alt=&#34;smoke&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34; alt=&#34;Python code style: black&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azureml-examples/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-purple.svg?sanitize=true&#34; alt=&#34;license: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to the Azure Machine Learning examples repository!&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;directory&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azureml-examples/main/.github&#34;&gt;&lt;code&gt;.github&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub files like issue templates and actions workflows.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azureml-examples/main/cli&#34;&gt;&lt;code&gt;cli&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Azure Machine Learning CLI v2 examples.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azureml-examples/main/sdk&#34;&gt;&lt;code&gt;sdk&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Azure Machine Learning Python SDK v2 examples.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azureml-examples/main/python-sdk&#34;&gt;&lt;code&gt;python-sdk&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Azure Machine Learning Python SDK v1 examples.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azureml-examples/main/notebooks&#34;&gt;&lt;code&gt;notebooks&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Jupyter notebooks with MLflow tracking to an Azure ML workspace.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azureml-examples/main/setup-ci&#34;&gt;&lt;code&gt;setup-ci&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Setup scripts to customize and configure an Azure Machine Learning compute instance.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azureml-examples/main/setup-repo&#34;&gt;&lt;code&gt;setup-repo&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Setup scripts for Azure/azureml-examples.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions and suggestions! Please see the &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azureml-examples/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. Please see the &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azureml-examples/main/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/azure/machine-learning&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>jina-ai/dalle-flow</title>
    <updated>2022-06-19T02:12:29Z</updated>
    <id>tag:github.com,2022-06-19:/jina-ai/dalle-flow</id>
    <link href="https://github.com/jina-ai/dalle-flow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Human-in-the-Loop workflow for creating HD images from text&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/banner.svg?raw=true&#34; alt=&#34;DALL·E Flow: A Human-in-the-Loop workflow for creating HD images from text&#34; width=&#34;60%&#34;&gt; &lt;br&gt; &lt;b&gt;A Human-in-the-Loop&lt;sup&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Human-in-the-loop&#34;&gt;?&lt;/a&gt;&lt;/sup&gt; workflow for creating HD images from text&lt;/b&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://slack.jina.ai&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-3.1k-blueviolet?logo=slack&amp;amp;logoColor=white&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://colab.research.google.com/github/jina-ai/dalle-flow/blob/main/client.ipynb&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Open-in%20Colab-orange?logo=google-colab&amp;amp;style=flat-square&#34; alt=&#34;Open in Google Colab&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;DALL·E Flow is an interactive workflow for generating high-definition images from text prompt. First, it leverages &lt;a href=&#34;https://github.com/borisdayma/dalle-mini&#34;&gt;DALL·E-Mega&lt;/a&gt; to generate image candidates, and then calls &lt;a href=&#34;https://github.com/jina-ai/clip-as-service&#34;&gt;CLIP-as-service&lt;/a&gt; to rank the candidates w.r.t. the prompt. The preferred candidate is fed to &lt;a href=&#34;https://github.com/Jack000/glid-3-xl&#34;&gt;GLID-3 XL&lt;/a&gt; for diffusion, which often enriches the texture and background. Finally, the candidate is upscaled to 1024x1024 via &lt;a href=&#34;https://github.com/JingyunLiang/SwinIR&#34;&gt;SwinIR&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;DALL·E Flow is built with &lt;a href=&#34;https://github.com/jina-ai/jina&#34;&gt;Jina&lt;/a&gt; in a client-server architecture, which gives it high scalability, non-blocking streaming, and a modern Pythonic interface. Client can interact with the server via gRPC/Websocket/HTTP with TLS.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Why Human-in-the-Loop?&lt;/strong&gt; Generative art is a creative process. While recent advances of DALL·E unleash people&#39;s creativity, having a single-prompt-single-output UX/UI locks the imagination to a &lt;em&gt;single&lt;/em&gt; possibility, which is bad no matter how fine this single result is. DALL·E Flow is an alternative to the one-liner, by formalizing the generative art as an iterative procedure.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;DALL·E Flow is in client-server architecture.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jina-ai/dalle-flow/main/#Client&#34;&gt;Client usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jina-ai/dalle-flow/main/#Server&#34;&gt;Server usage, i.e. deploy your own server&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updates&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;⚠️ &lt;strong&gt;2022/5/23&lt;/strong&gt; Fix an upstream bug in CLIP-as-service. This bug makes the 2nd diffusion step irrelevant to the given texts. New Dockerfile proved to be reproducible on a AWS EC2 &lt;code&gt;p2.x8large&lt;/code&gt; instance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2022/5/13b&lt;/strong&gt; Removing TLS as Cloudflare gives 100s timeout, making DALLE Flow in usable &lt;a href=&#34;https://colab.research.google.com/github/jina-ai/dalle-flow/blob/main/client.ipynb&#34;&gt;Please &lt;em&gt;reopen&lt;/em&gt; the notebook in Google Colab!&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;🔐 &lt;strong&gt;2022/5/13&lt;/strong&gt; New Mega checkpoint! All connections are now with TLS, &lt;a href=&#34;https://colab.research.google.com/github/jina-ai/dalle-flow/blob/main/client.ipynb&#34;&gt;Please &lt;em&gt;reopen&lt;/em&gt; the notebook in Google Colab!&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;🐳 &lt;strong&gt;2022/5/10&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jina-ai/dalle-flow/main/#run-in-docker&#34;&gt;A Dockerfile is added! Now you can easily deploy your own DALL·E Flow&lt;/a&gt;. New Mega checkpoint! Smaller memory-footprint, the whole Flow can now fit into &lt;strong&gt;one GPU with 21GB memory&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;🌟 &lt;strong&gt;2022/5/7&lt;/strong&gt; New Mega checkpoint &amp;amp; multiple optimization on GLID3: less memory-footprint, use &lt;code&gt;ViT-L/14@336px&lt;/code&gt; from CLIP-as-service, &lt;code&gt;steps 100-&amp;gt;200&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;🌟 &lt;strong&gt;2022/5/6&lt;/strong&gt; DALL·E Flow just got updated! &lt;a href=&#34;https://colab.research.google.com/github/jina-ai/dalle-flow/blob/main/client.ipynb&#34;&gt;Please &lt;em&gt;reopen&lt;/em&gt; the notebook in Google Colab!&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Revised the first step: 16 candidates are generated, 8 from DALL·E Mega, 8 from GLID3-XL; then ranked by CLIP-as-service.&lt;/li&gt; &#xA;   &lt;li&gt;Improved the flow efficiency: the overall speed, including diffusion and upscaling are much faster now!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Gallery&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20realistic%20photo%20of%20a%20muddy%20dog.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a realistic photo of a muddy dog&#34; title=&#34;a realistic photo of a muddy dog&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/A%20scientist%20comparing%20apples%20and%20oranges%2C%20by%20Norman%20Rockwell.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;A scientist comparing apples and oranges, by Norman Rockwell&#34; title=&#34;A scientist comparing apples and oranges, by Norman Rockwell&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/an%20oil%20painting%20portrait%20of%20the%20regal%20Burger%20King%20posing%20with%20a%20Whopper.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;an oil painting portrait of the regal Burger King posing with a Whopper&#34; title=&#34;an oil painting portrait of the regal Burger King posing with a Whopper&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/Eternal%20clock%20powered%20by%20a%20human%20cranium%2C%20artstation.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;Eternal clock powered by a human cranium, artstation&#34; title=&#34;Eternal clock powered by a human cranium, artstation&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/another%20planet%20amazing%20landscape.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;another planet amazing landscape&#34; title=&#34;another planet amazing landscape&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/The%20Decline%20and%20Fall%20of%20the%20Roman%20Empire%20board%20game%20kickstarter.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;The Decline and Fall of the Roman Empire board game kickstarter&#34; title=&#34;The Decline and Fall of the Roman Empire board game kickstarter&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/A%20raccoon%20astronaut%20with%20the%20cosmos%20reflecting%20on%20the%20glass%20of%20his%20helmet%20dreaming%20of%20the%20stars%2C%20digital%20art.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;A raccoon astronaut with the cosmos reflecting on the glass of his helmet dreaming of the stars, digital art&#34; title=&#34;A raccoon astronaut with the cosmos reflecting on the glass of his helmet dreaming of the stars, digital art&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/A%20photograph%20of%20an%20apple%20that%20is%20a%20disco%20ball%2C%2085%20mm%20lens%2C%20studio%20lighting.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;A photograph of an apple that is a disco ball, 85 mm lens, studio lighting&#34; title=&#34;A photograph of an apple that is a disco ball, 85 mm lens, studio lighting&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20cubism%20painting%20Donald%20trump%20happy%20cyberpunk.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a cubism painting Donald trump happy cyberpunk&#34; title=&#34;a cubism painting Donald trump happy cyberpunk&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/oil%20painting%20of%20a%20hamster%20drinking%20tea%20outside.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;oil painting of a hamster drinking tea outside&#34; title=&#34;oil painting of a hamster drinking tea outside&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/Colossus%20of%20Rhodes%20by%20Max%20Ernst.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;Colossus of Rhodes by Max Ernst&#34; title=&#34;Colossus of Rhodes by Max Ernst&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/landscape%20with%20great%20castle%20in%20middle%20of%20forest.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;landscape with great castle in middle of forest&#34; title=&#34;landscape with great castle in middle of forest&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/an%20medieval%20oil%20painting%20of%20Kanye%20west%20feels%20satisfied%20while%20playing%20chess%20in%20the%20style%20of%20Expressionism.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;an medieval oil painting of Kanye west feels satisfied while playing chess in the style of Expressionism&#34; title=&#34;an medieval oil painting of Kanye west feels satisfied while playing chess in the style of Expressionism&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/An%20oil%20pastel%20painting%20of%20an%20annoyed%20cat%20in%20a%20spaceship.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;An oil pastel painting of an annoyed cat in a spaceship&#34; title=&#34;An oil pastel painting of an annoyed cat in a spaceship&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/dinosaurs%20at%20the%20brink%20of%20a%20nuclear%20disaster.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;dinosaurs at the brink of a nuclear disaster&#34; title=&#34;dinosaurs at the brink of a nuclear disaster&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/fantasy%20landscape%20with%20medieval%20city.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;fantasy landscape with medieval city&#34; title=&#34;fantasy landscape with medieval city&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/GPU%20chip%20in%20the%20form%20of%20an%20avocado%2C%20digital%20art.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;GPU chip in the form of an avocado, digital art&#34; title=&#34;GPU chip in the form of an avocado, digital art&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20giant%20rubber%20duck%20in%20the%20ocean.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a giant rubber duck in the ocean&#34; title=&#34;a giant rubber duck in the ocean&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/Paddington%20bear%20as%20austrian%20emperor%20in%20antique%20black%20%26%20white%20photography.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;Paddington bear as austrian emperor in antique black &amp;amp; white photography&#34; title=&#34;Paddington bear as austrian emperor in antique black &amp;amp; white photography&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20rainy%20night%20with%20a%20superhero%20perched%20above%20a%20city%2C%20in%20the%20style%20of%20a%20comic%20book.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a rainy night with a superhero perched above a city, in the style of a comic book&#34; title=&#34;a rainy night with a superhero perched above a city, in the style of a comic book&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/A%20synthwave%20style%20sunset%20above%20the%20reflecting%20water%20of%20the%20sea%2C%20digital%20art.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;A synthwave style sunset above the reflecting water of the sea, digital art&#34; title=&#34;A synthwave style sunset above the reflecting water of the sea, digital art&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/an%20oil%20painting%20of%20ocean%20beach%20front%20in%20the%20style%20of%20Titian.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;an oil painting of ocean beach front in the style of Titian&#34; title=&#34;an oil painting of ocean beach front in the style of Titian&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/an%20oil%20painting%20of%20Klingon%20general%20in%20the%20style%20of%20Rubens.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;an oil painting of Klingon general in the style of Rubens&#34; title=&#34;an oil painting of Klingon general in the style of Rubens&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/city%2C%20top%20view%2C%20cyberpunk%2C%20digital%20realistic%20art.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;city, top view, cyberpunk, digital realistic art&#34; title=&#34;city, top view, cyberpunk, digital realistic art&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/an%20oil%20painting%20of%20a%20medieval%20cyborg%20automaton%20made%20of%20magic%20parts%20and%20old%20steampunk%20mechanics.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;an oil painting of a medieval cyborg automaton made of magic parts and old steampunk mechanics&#34; title=&#34;an oil painting of a medieval cyborg automaton made of magic parts and old steampunk mechanics&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20watercolour%20painting%20of%20a%20top%20view%20of%20a%20pirate%20ship%20sailing%20on%20the%20clouds.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a watercolour painting of a top view of a pirate ship sailing on the clouds&#34; title=&#34;a watercolour painting of a top view of a pirate ship sailing on the clouds&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20knight%20made%20of%20beautiful%20flowers%20and%20fruits%20by%20Rachel%20ruysch%20in%20the%20style%20of%20Syd%20brak.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a knight made of beautiful flowers and fruits by Rachel ruysch in the style of Syd brak&#34; title=&#34;a knight made of beautiful flowers and fruits by Rachel ruysch in the style of Syd brak&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%203D%20render%20of%20a%20rainbow%20colored%20hot%20air%20balloon%20flying%20above%20a%20reflective%20lake.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a 3D render of a rainbow colored hot air balloon flying above a reflective lake&#34; title=&#34;a 3D render of a rainbow colored hot air balloon flying above a reflective lake&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20teddy%20bear%20on%20a%20skateboard%20in%20Times%20Square%20.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a teddy bear on a skateboard in Times Square &#34; title=&#34;a teddy bear on a skateboard in Times Square &#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/cozy%20bedroom%20at%20night.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;cozy bedroom at night&#34; title=&#34;cozy bedroom at night&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/an%20oil%20painting%20of%20monkey%20using%20computer.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;an oil painting of monkey using computer&#34; title=&#34;an oil painting of monkey using computer&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/the%20diagram%20of%20a%20search%20machine%20invented%20by%20Leonardo%20da%20Vinci.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;the diagram of a search machine invented by Leonardo da Vinci&#34; title=&#34;the diagram of a search machine invented by Leonardo da Vinci&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/A%20stained%20glass%20window%20of%20toucans%20in%20outer%20space.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;A stained glass window of toucans in outer space&#34; title=&#34;A stained glass window of toucans in outer space&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20campfire%20in%20the%20woods%20at%20night%20with%20the%20milky-way%20galaxy%20in%20the%20sky.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a campfire in the woods at night with the milky-way galaxy in the sky&#34; title=&#34;a campfire in the woods at night with the milky-way galaxy in the sky&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/Bionic%20killer%20robot%20made%20of%20AI%20scarab%20beetles.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;Bionic killer robot made of AI scarab beetles&#34; title=&#34;Bionic killer robot made of AI scarab beetles&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/The%20Hanging%20Gardens%20of%20Babylon%20in%20the%20middle%20of%20a%20city%2C%20in%20the%20style%20of%20Dal%C3%AD.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;The Hanging Gardens of Babylon in the middle of a city, in the style of Dalí&#34; title=&#34;The Hanging Gardens of Babylon in the middle of a city, in the style of Dalí&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/painting%20oil%20of%20Izhevsk.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;painting oil of Izhevsk&#34; title=&#34;painting oil of Izhevsk&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20hyper%20realistic%20photo%20of%20a%20marshmallow%20office%20chair.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a hyper realistic photo of a marshmallow office chair&#34; title=&#34;a hyper realistic photo of a marshmallow office chair&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/fantasy%20landscape%20with%20city.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;fantasy landscape with city&#34; title=&#34;fantasy landscape with city&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/ocean%20beach%20front%20view%20in%20Van%20Gogh%20style.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;ocean beach front view in Van Gogh style&#34; title=&#34;ocean beach front view in Van Gogh style&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/An%20oil%20painting%20of%20a%20family%20reunited%20inside%20of%20an%20airport%2C%20digital%20art.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;An oil painting of a family reunited inside of an airport, digital art&#34; title=&#34;An oil painting of a family reunited inside of an airport, digital art&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/antique%20photo%20of%20a%20knight%20riding%20a%20T-Rex.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;antique photo of a knight riding a T-Rex&#34; title=&#34;antique photo of a knight riding a T-Rex&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20top%20view%20of%20a%20pirate%20ship%20sailing%20on%20the%20clouds.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a top view of a pirate ship sailing on the clouds&#34; title=&#34;a top view of a pirate ship sailing on the clouds&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/an%20oil%20painting%20of%20a%20humanoid%20robot%20playing%20chess%20in%20the%20style%20of%20Matisse.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;an oil painting of a humanoid robot playing chess in the style of Matisse&#34; title=&#34;an oil painting of a humanoid robot playing chess in the style of Matisse&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20cubism%20painting%20of%20a%20cat%20dressed%20as%20French%20emperor%20Napoleon.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a cubism painting of a cat dressed as French emperor Napoleon&#34; title=&#34;a cubism painting of a cat dressed as French emperor Napoleon&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20husky%20dog%20wearing%20a%20hat%20with%20sunglasses.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a husky dog wearing a hat with sunglasses&#34; title=&#34;a husky dog wearing a hat with sunglasses&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/A%20mystical%20castle%20appears%20between%20the%20clouds%20in%20the%20style%20of%20Vincent%20di%20Fate.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;A mystical castle appears between the clouds in the style of Vincent di Fate&#34; title=&#34;A mystical castle appears between the clouds in the style of Vincent di Fate&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/golden%20gucci%20airpods%20realistic%20photo.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;golden gucci airpods realistic photo&#34; title=&#34;golden gucci airpods realistic photo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Client&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/jina-ai/dalle-flow/blob/main/client.ipynb&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Open-in%20Colab-orange?logo=google-colab&amp;amp;style=flat-square&#34; alt=&#34;Open in Google Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Using client is super easy. The following steps are best run in &lt;a href=&#34;https://raw.githubusercontent.com/jina-ai/dalle-flow/main/client.ipynb&#34;&gt;Jupyter notebook&lt;/a&gt; or &lt;a href=&#34;https://colab.research.google.com/github/jina-ai/dalle-flow/blob/main/client.ipynb&#34;&gt;Google Colab&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You will need to install &lt;a href=&#34;https://github.com/jina-ai/docarray&#34;&gt;DocArray&lt;/a&gt; and &lt;a href=&#34;https://github.com/jina-ai/jina&#34;&gt;Jina&lt;/a&gt; first:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install &#34;docarray[common]&amp;gt;=0.13.5&#34; jina&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We have provided a demo server for you to play:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠️ &lt;strong&gt;Due to the massive requests, our server may be delay in response. Yet we are &lt;em&gt;very&lt;/em&gt; confident on keeping the uptime high.&lt;/strong&gt; You can also deploy your own server by &lt;a href=&#34;https://raw.githubusercontent.com/jina-ai/dalle-flow/main/#server&#34;&gt;following the instruction here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;server_url = &#39;grpc://dalle-flow.jina.ai:51005&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 1: Generate via DALL·E Mega&lt;/h3&gt; &#xA;&lt;p&gt;Now let&#39;s define the prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;prompt = &#39;an oil painting of a humanoid robot playing chess in the style of Matisse&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Let&#39;s submit it to the server and visualize the results:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from docarray import Document&#xA;&#xA;da = Document(text=prompt).post(server_url, parameters={&#39;num_images&#39;: 8}).matches&#xA;&#xA;da.plot_image_sprites(fig_size=(10,10), show_index=True)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here we generate 16 candidates, 8 from DALLE-mega and 8 from GLID3 XL, this is as defined in &lt;code&gt;num_images&lt;/code&gt;, which takes about ~2 minutes. You can use a smaller value if it is too long for you.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/client-dalle.png?raw=true&#34; width=&#34;70%&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Step 2: Select and refinement via GLID3 XL&lt;/h3&gt; &#xA;&lt;p&gt;The 16 candidates are sorted by &lt;a href=&#34;https://github.com/jina-ai/clip-as-service&#34;&gt;CLIP-as-service&lt;/a&gt;, with index-&lt;code&gt;0&lt;/code&gt; as the best candidate judged by CLIP. Of course, you may think differently. Notice the number in the top-left corner? Select the one you like the most and get a better view:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fav_id = 3&#xA;fav = da[fav_id]&#xA;fav.display()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/client-select1.png?raw=true&#34; width=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Now let&#39;s submit the selected candidates to the server for diffusion.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;diffused = fav.post(f&#39;{server_url}&#39;, parameters={&#39;skip_rate&#39;: 0.5, &#39;num_images&#39;: 36}, target_executor=&#39;diffusion&#39;).matches&#xA;&#xA;diffused.plot_image_sprites(fig_size=(10,10), show_index=True)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will give 36 images based on the selected image. You may allow the model to improvise more by giving &lt;code&gt;skip_rate&lt;/code&gt; a near-zero value, or a near-one value to force its closeness to the given image. The whole procedure takes about ~2 minutes.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/client-glid.png?raw=true&#34; width=&#34;60%&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Step 3: Select and upscale via SwinIR&lt;/h3&gt; &#xA;&lt;p&gt;Select the image you like the most, and give it a closer look:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dfav_id = 34&#xA;fav = diffused[dfav_id]&#xA;fav.display()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/client-select2.png?raw=true&#34; width=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Finally, submit to the server for the last step: upscaling to 1024 x 1024px.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fav = fav.post(f&#39;{server_url}/upscale&#39;)&#xA;fav.display()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it! It is &lt;em&gt;the one&lt;/em&gt;. If not satisfied, please repeat the procedure.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/client-select3.png?raw=true&#34; width=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Btw, DocArray is a powerful and easy-to-use data structure for unstructured data. It is super productive for data scientists who work in cross-/multi-modal domain. To learn more about DocArray, &lt;a href=&#34;https://docs.jina.ai&#34;&gt;please check out the docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Server&lt;/h2&gt; &#xA;&lt;p&gt;You can host your own server by following the instruction below.&lt;/p&gt; &#xA;&lt;h3&gt;Hardware requirements&lt;/h3&gt; &#xA;&lt;p&gt;DALL·E Flow needs one GPU with 21GB VRAM at its peak. All services are squeezed into this one GPU, this includes (roughly)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DALLE ~9GB&lt;/li&gt; &#xA; &lt;li&gt;GLID Diffusion ~6GB&lt;/li&gt; &#xA; &lt;li&gt;SwinIR ~3GB&lt;/li&gt; &#xA; &lt;li&gt;CLIP ViT-L/14-336px ~3GB&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following reasonable tricks can be used for further reducing VRAM:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SwinIR can be moved to CPU (-3GB)&lt;/li&gt; &#xA; &lt;li&gt;CLIP can be delegated to &lt;a href=&#34;https://github.com/jina-ai/clip-as-service#text--image-embedding&#34;&gt;CLIP-as-service demo server&lt;/a&gt; (-3GB)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It requires at least 40GB free space on the hard drive, mostly for downloading pretrained models.&lt;/p&gt; &#xA;&lt;p&gt;High-speed internet is required. Slow/unstable internet may throw frustrating timeout when downloading models.&lt;/p&gt; &#xA;&lt;p&gt;CPU-only environment is not tested and likely won&#39;t work. Google Colab is likely throwing OOM hence also won&#39;t work.&lt;/p&gt; &#xA;&lt;h3&gt;Server architecture&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/flow.svg?raw=true&#34; width=&#34;70%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;If you have installed Jina, the above flowchart can be generated via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# pip install jina&#xA;jina export flowchart flow.yml flow.svg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run in Docker&lt;/h3&gt; &#xA;&lt;p&gt;We have provided &lt;a href=&#34;https://github.com/jina-ai/dalle-flow/raw/main/Dockerfile&#34;&gt;a Dockerfile&lt;/a&gt; which allows you to run a server out of the box.&lt;/p&gt; &#xA;&lt;p&gt;Our Dockerfile is using CUDA 11.6 as the base image, you may want to adjust it according to your system.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/jina-ai/dalle-flow.git&#xA;cd dalle-flow&#xA;&#xA;docker build --build-arg GROUP_ID=$(id -g ${USER}) --build-arg USER_ID=$(id -u ${USER}) -t jinaai/dalle-flow .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The building will take 10 minutes with average internet speed, which results in a 10GB Docker image.&lt;/p&gt; &#xA;&lt;p&gt;To run it, simply do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -p 51005:51005 -v $HOME/.cache:/home/dalle/.cache --gpus all jinaai/dalle-flow&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The first run will take ~10 minutes with average internet speed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-v $HOME/.cache:/root/.cache&lt;/code&gt; avoids repeated model downloading on every docker run.&lt;/li&gt; &#xA; &lt;li&gt;The first part of &lt;code&gt;-p 51005:51005&lt;/code&gt; is your host public port. Make sure people can access this port if you are serving publicly. The second par of it is &lt;a href=&#34;https://github.com/jina-ai/dalle-flow/raw/e7e313522608668daeec1b7cd84afe56e5b19f1e/flow.yml#L4&#34;&gt;the port defined in flow.yml&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You should see the screen like following once running:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/docker-run.png?raw=true&#34; width=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Note that unlike running natively, running inside Docker may give less vivid progressbar, color logs, and prints. This is due to the limitations of the terminal in a Docker container. It does not affect the actual usage.&lt;/p&gt; &#xA;&lt;h3&gt;Run natively&lt;/h3&gt; &#xA;&lt;p&gt;Running natively requires some manual steps, but it is often easier to debug.&lt;/p&gt; &#xA;&lt;h4&gt;Clone repos&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir dalle &amp;amp;&amp;amp; cd dalle&#xA;git clone https://github.com/jina-ai/dalle-flow.git&#xA;git clone https://github.com/JingyunLiang/SwinIR.git&#xA;git clone https://github.com/CompVis/latent-diffusion.git&#xA;git clone https://github.com/hanxiao/glid-3-xl.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should have the following folder structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;dalle/&#xA; |&#xA; |-- dalle-flow/&#xA; |-- SwinIR/&#xA; |-- glid-3-xl/&#xA; |-- latent-diffusion/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Install auxiliary repos&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd latent-diffusion &amp;amp;&amp;amp; pip install -e . &amp;amp;&amp;amp; cd -&#xA;cd glid-3-xl &amp;amp;&amp;amp; pip install -e . &amp;amp;&amp;amp; cd -&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are couple models we need to download for GLID-3-XL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd glid-3-xl&#xA;wget https://dall-3.com/models/glid-3-xl/bert.pt&#xA;wget https://dall-3.com/models/glid-3-xl/kl-f8.pt&#xA;wget https://dall-3.com/models/glid-3-xl/finetune.pt&#xA;cd -&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Install flow&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd dalle-flow&#xA;pip install -r requirements.txt&#xA;pip install jax==0.3.13&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start the server&lt;/h3&gt; &#xA;&lt;p&gt;Now you are under &lt;code&gt;dalle-flow/&lt;/code&gt;, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jina flow --uses flow.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see this screen immediately:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/server-onstart.png?raw=true&#34; width=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;On the first start it will take ~8 minutes for downloading the DALL·E mega model and other necessary models. The proceeding runs should only take ~1 minute to reach the success message.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/server-wait.png?raw=true&#34; width=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;When everything is ready, you will see:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/server-success.png?raw=true&#34; width=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Congrats! Now you should be able to &lt;a href=&#34;https://raw.githubusercontent.com/jina-ai/dalle-flow/main/#client&#34;&gt;run the client&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can modify and extend the server flow as you like, e.g. changing the model, adding persistence, or even auto-posting to Instagram/OpenSea. With Jina and DocArray, you can easily make DALL·E Flow &lt;a href=&#34;https://github.com/jina-ai/jina&#34;&gt;cloud-native and ready for production&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- start support-pitch --&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To extend DALL·E Flow you will need to get familiar with &lt;a href=&#34;https://github.com/jina-ai/jina&#34;&gt;Jina&lt;/a&gt; and &lt;a href=&#34;https://github.com/jina-ai/docarray&#34;&gt;DocArray&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Join our &lt;a href=&#34;https://slack.jina.ai&#34;&gt;Slack community&lt;/a&gt; and chat with other community members about ideas.&lt;/li&gt; &#xA; &lt;li&gt;Join our &lt;a href=&#34;https://youtube.com/playlist?list=PL3UBBWOUVhFYRUa_gpYYKBqEAkO4sxmne&#34;&gt;Engineering All Hands&lt;/a&gt; meet-up to discuss your use case and learn Jina&#39;s new features. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;When?&lt;/strong&gt; The second Tuesday of every month&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Where?&lt;/strong&gt; Zoom (&lt;a href=&#34;https://calendar.google.com/calendar/embed?src=c_1t5ogfp2d45v8fit981j08mcm4%40group.calendar.google.com&amp;amp;ctz=Europe%2FBerlin&#34;&gt;see our public events calendar&lt;/a&gt;/&lt;a href=&#34;https://calendar.google.com/calendar/ical/c_1t5ogfp2d45v8fit981j08mcm4%40group.calendar.google.com/public/basic.ics&#34;&gt;.ical&lt;/a&gt;) and &lt;a href=&#34;https://youtube.com/c/jina-ai&#34;&gt;live stream on YouTube&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Subscribe to the latest video tutorials on our &lt;a href=&#34;https://youtube.com/c/jina-ai&#34;&gt;YouTube channel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Join Us&lt;/h2&gt; &#xA;&lt;p&gt;DALL·E Flow is backed by &lt;a href=&#34;https://jina.ai&#34;&gt;Jina AI&lt;/a&gt; and licensed under &lt;a href=&#34;https://raw.githubusercontent.com/jina-ai/dalle-flow/main/LICENSE&#34;&gt;Apache-2.0&lt;/a&gt;. &lt;a href=&#34;https://jobs.jina.ai&#34;&gt;We are actively hiring&lt;/a&gt; AI engineers, solution engineers to build the next neural search ecosystem in open-source.&lt;/p&gt; &#xA;&lt;!-- end support-pitch --&gt;</summary>
  </entry>
</feed>