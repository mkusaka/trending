<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-13T01:53:16Z</updated>
  <subtitle>Weekly Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>snakajima/SlashGPT</title>
    <updated>2023-08-13T01:53:16Z</updated>
    <id>tag:github.com,2023-08-13:/snakajima/SlashGPT</id>
    <link href="https://github.com/snakajima/SlashGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SlashGPT&lt;/h1&gt; &#xA;&lt;p&gt;SlashGPT is a playground for develeopers to make quick prototypes of LLM agents (or apps with Natural Language UI).&lt;/p&gt; &#xA;&lt;p&gt;Here are the design goals:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Extremely easy to create a new LLM agent. You just need to add a new manifest file (in Json).&lt;/li&gt; &#xA; &lt;li&gt;Instantly switch amang agents, by just typing &#34;/{agent_name}&#34;&lt;/li&gt; &#xA; &lt;li&gt;Extensible enough so that it is possible to implement most of LLM agents without writing any code.&lt;/li&gt; &#xA; &lt;li&gt;It is possible to integrate ChatGPT plugins as agents without writing any code.&lt;/li&gt; &#xA; &lt;li&gt;It enables broker agent (or dispatcher), which routes user&#39;s messgae to an appropraite agent.&lt;/li&gt; &#xA; &lt;li&gt;It is able to run generated Python code like Code Interpreter (see &#34;jupyter&#34; agent).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Initialization&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the required packages:&lt;/p&gt; &lt;p&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create .env file, and specify your OpenAI key as follows:&lt;/p&gt; &lt;p&gt;&lt;code&gt;OPENAI_API_KEY=...&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You need to specify other variables to use following features (optional).&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;PINECONE_API_KEY, PINECONE_ENVIRONMENT: requred to use embedding vector db.&lt;/li&gt; &#xA;   &lt;li&gt;GOOGLE_PALM_KEY: required to switch to PaLM LLC using /palm command.&lt;/li&gt; &#xA;   &lt;li&gt;WOLFRAM_API_KEY: required to use &#34;walfram&#34; agent.&lt;/li&gt; &#xA;   &lt;li&gt;OPENWEATHER_API_KEY: required to use &#34;weather&#34; agent.&lt;/li&gt; &#xA;   &lt;li&gt;NOTEABLE_API_KEY: required to use &#34;noteable&#34; agent.&lt;/li&gt; &#xA;   &lt;li&gt;ALCHEMY_API_KEY: required to use &#34;web3&#34; agent.&lt;/li&gt; &#xA;   &lt;li&gt;WEBPILOT_UID: required to use &#34;webpilot&#34; agent (any unique UUID is fine)&lt;/li&gt; &#xA;   &lt;li&gt;REPLICATE_API_TOKEN: required to use &#34;llama2&#34; model.&lt;/li&gt; &#xA;   &lt;li&gt;CODEBOX_API_KEY: set this to &#34;local&#34; to use CodeBox&#39;s LocalBox instead of IPython&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Execution&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Type &lt;code&gt;./SlashGPT.py&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When you see &#34;You({agent_name}):&#34;, type a message to the agent OR type a slash command starting with &#34;/&#34;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It activate &#34;dispatcher&#34; agent first, which is able to dispatch queries to appropriate agents.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Type &#34;/help&#34; to see the list of system commands and available agents.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Outputs&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Each conversation will be store as a json file under the &#34;output/{context}&#34; folder, where the context is &#34;GTP&#34; for general chat, and the app id for a specialized chat.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Please notice that the &#34;output&#34; folder is ignored by git.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Code Interpreter agents will generate Jupyter notebook in &#34;output/notebooks&#34; folder.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Code Interpreter Agents&lt;/h2&gt; &#xA;&lt;p&gt;Some of agents are built to mimic the behaviors of ChatGPT code intepreter (or Noteable plugin) with various LLMs.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;jupyter: GPT3.5&lt;/li&gt; &#xA; &lt;li&gt;jupyterp: PaLM2 (GOOGLE_PALM_KEY key is required)&lt;/li&gt; &#xA; &lt;li&gt;juypter2: LlaMA (REPLICATE_API_TOKEN is required)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;jupyter (GPT3.5) works just like Code Interpreter. It is able to respond to the output of nenerated code appropriately.&lt;/p&gt; &#xA;&lt;p&gt;jupyterp (PaLM2) and jupyter2 (LlaMA) are not able to respond to the output of generated code (they often enter into an infinit loop). Therefore, we stop the conversation after the output, and the user needs to explicitly ask it to analize the result.&lt;/p&gt; &#xA;&lt;p&gt;For the runtime, it uses IPython by default, but it uses CodeBox if you specify CODEBOX_API_KEY key. IPython displays images as popups, but does not write them into the notebook. CodeBox is able to write them into the notebook.&lt;/p&gt; &#xA;&lt;p&gt;Sample queries.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Draw sine curve&lt;/li&gt; &#xA; &lt;li&gt;List first 50 prime numbers&lt;/li&gt; &#xA; &lt;li&gt;graph common moving average&lt;/li&gt; &#xA; &lt;li&gt;Draw histogram&lt;/li&gt; &#xA; &lt;li&gt;Graph 4 year stock price of apple and tesla using yfinance&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Manifest files&lt;/h2&gt; &#xA;&lt;p&gt;Create a new manifest file, {agent_name}.json in &#34;manifests&#34; folder with following properties:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;title&lt;/em&gt; (string, &lt;strong&gt;required&lt;/strong&gt;): Title for the user to see&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;source&lt;/em&gt; (string, optional): Source of the prompt (URL, email, github id, or twitter id)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;promt&lt;/em&gt; (array of strings, &lt;strong&gt;required&lt;/strong&gt;): The system prompts which define the agent (required)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;form&lt;/em&gt; (string): format string to extend user&#39;s query (e.g. &#34;Write python code to {question}&#34;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;result_form&lt;/em&gt; (string): format string to extend function call result.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;skip_function_result&lt;/em&gt; (boolean): skip the chat completion right after the function call.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;notepad&lt;/em&gt; (boolean): create a new notebook at the beginning of each session (for jupyter2)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;bot&lt;/em&gt; (string, optional): Agent name&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;you&lt;/em&gt; (string, optional): User name. The default is You({agent_name}).&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;sample&lt;/em&gt; (string, optional): Sample question (type &#34;/sample&#34; to send it)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;intro&lt;/em&gt; (array of strings, optional): Introduction statements (will be randomly selected)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;model&lt;/em&gt; (string, optional): LLM model (such as &#34;gpt-4-613&#34;, the default is &#34;gpt-3-turbo&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;temperature&lt;/em&gt; (string, optional): Temperature (the default is 0.7)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;data&lt;/em&gt; (array of string, optional): {random} will put one of them randamly into the prompt&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;embeddings&lt;/em&gt; (object, optional): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;name&lt;/em&gt; (string, optional): index name of the embedding vector database&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;resource&lt;/em&gt; (string, optional): location of the resource file. Use {resource} to paste it into the prompt&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;functions&lt;/em&gt; (string, optional): location of the function definitions&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;module&lt;/em&gt; (string, optional): location of the pytoh script to be loaded for function calls&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;actions&lt;/em&gt; (object, optional): Template-based function processor (see details below)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Name of that file becomes the slash command. (the slash command of &#34;foo.json&#34; is &#34;/foo&#34;)&lt;/p&gt; &#xA;&lt;h2&gt;Actions&lt;/h2&gt; &#xA;&lt;p&gt;It defines template-based function implementations (including mockups), alternative to writing Python code using the &#34;module&#34; property.&lt;/p&gt; &#xA;&lt;p&gt;It supports three different methods.&lt;/p&gt; &#xA;&lt;h3&gt;1. Formatted string.&lt;/h3&gt; &#xA;&lt;p&gt;Use this method to develop the front-end of a system before the backend become ready.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;message&lt;/em&gt; (format string, required): chat messgae to be added&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;metafile&lt;/em&gt; (format string, optional): metafile name to be loaded for chained action&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here is an example (home2).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  &#34;actions&#34;: {&#xA;    &#34;fill_bath&#34;: { &#34;message&#34;:&#34;Success. I started filling the bath tab.&#34; },&#xA;    &#34;set_temperature&#34;: { &#34;message&#34;:&#34;Success. I set the teperature to {temperature} for {location}&#34; },&#xA;    &#34;start_sprinkler&#34;: { &#34;message&#34;:&#34;Success. I started the sprinkler for {location}&#34; },&#xA;    &#34;take_picture&#34;: { &#34;message&#34;:&#34;Success. I took a picture of {location}&#34; },&#xA;    &#34;play_music&#34;: { &#34;message&#34;:&#34;Success. I started playing {music} in {location}&#34; },&#xA;    &#34;control_light&#34;: { &#34;message&#34;:&#34;Success. The light switch of {location} is now {switch}.&#34; }&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. REST calls&lt;/h3&gt; &#xA;&lt;p&gt;Use this method to call REST APIs (equivalent to ChatGPT&#39;s plugin system).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;url&lt;/em&gt; (string, required): Python-style format string, which references to function arguments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;method&lt;/em&gt; (string, optional): Specify &#34;POST&#34; if we need to use HTTP-POST. The body will contain a JSON representation of function parameters.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here is an example (currency).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  &#34;actions&#34;: {&#xA;    &#34;convert&#34;: {&#xA;      &#34;url&#34;: &#34;https://today-currency-converter.oiconma.repl.co/currency-converter?from={from}&amp;amp;to={to}&amp;amp;amount={amount}&#34;&#xA;    }&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. data URL&lt;/h3&gt; &#xA;&lt;p&gt;This mechod allows a developer to generate a text data (typically in JSON, but not limited to), and turn it into a data URL.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;template&lt;/em&gt; (string, required): The location of the template file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;mime_type&lt;/em&gt; (string, required): The mime type of the data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;message&lt;/em&gt; (string, required): Python-style format string, which references to the data-URL as {url}.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here is an example for &#34;make_event&#34; function (cal).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  &#34;actions&#34;: {&#xA;    &#34;make_event&#34;: {&#xA;      &#34;template&#34;: &#34;./resources/calendar.ics&#34;,&#xA;      &#34;mime_type&#34;: &#34;text/calendar&#34;,&#xA;      &#34;message&#34;: &#34;The event was scheduled. Here is the invitation link: &#39;{url}&#39;&#34;&#xA;    }&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The contents of calendar.ics file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;BEGIN:VCALENDAR&#xA;VERSION:2.0&#xA;PRODID:-//My Calendar//NONSGML v1.0//EN&#xA;BEGIN:VEVENT&#xA;DTSTART:{DTSTART}&#xA;DTEND:{DTEND}&#xA;SUMMARY:{SUMMARY}&#xA;DESCRIPTION:{DESCRIPTION}&#xA;LOCATION:{LOCATION}&#xA;END:VEVENT&#xA;END:VCALENDAR&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The definition of &#34;make_event&#34; function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  &#34;name&#34;: &#34;make_event&#34;,&#xA;  &#34;description&#34;: &#34;Create a calendar event in iCalendar format&#34;,&#xA;  &#34;parameters&#34;: {&#xA;    &#34;type&#34;: &#34;object&#34;,&#xA;    &#34;properties&#34;: {&#xA;      &#34;SUMMARY&#34;: {&#xA;        &#34;type&#34;: &#34;string&#34;,&#xA;        &#34;description&#34;: &#34;a short, one-line description of the event&#34;&#xA;      },&#xA;      &#34;DESCRIPTION&#34;: {&#xA;        &#34;type&#34;: &#34;string&#34;,&#xA;        &#34;description&#34;: &#34;a more complete description of the calendar&#34;,&#xA;        &#34;maxLength&#34;: 400&#xA;      },&#xA;      &#34;DTSTART&#34;: {&#xA;        &#34;type&#34;: &#34;string&#34;,&#xA;        &#34;format&#34;: &#34;date-time&#34;,&#xA;        &#34;description&#34;: &#34;the date and time in UTC that the event begins such as 19980119T020000Z&#34;&#xA;      },&#xA;      &#34;DTEND&#34;: {&#xA;        &#34;type&#34;: &#34;string&#34;,&#xA;        &#34;format&#34;: &#34;date-time&#34;,&#xA;        &#34;description&#34;: &#34;the date and time in UTC that the event ends such as 19980119T030000Z&#34;&#xA;      },&#xA;      &#34;LOCATION&#34;: {&#xA;        &#34;type&#34;: &#34;string&#34;,&#xA;        &#34;description&#34;: &#34;the intended venue with address for the event.&#34;&#xA;      }&#xA;    },&#xA;    &#34;required&#34;: [&#34;SUMMARY&#34;, &#34;DTSTART&#34;, &#34;DTEND&#34;, &#34;DESCRIPTION&#34;, &#34;LOCATION&#34;]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>UFund-Me/Qbot</title>
    <updated>2023-08-13T01:53:16Z</updated>
    <id>tag:github.com,2023-08-13:/UFund-Me/Qbot</id>
    <link href="https://github.com/UFund-Me/Qbot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;[🔥updating ...] AI 自动量化交易机器人 Qbot is an AI-oriented quantitative investment platform, which aims to realize the potential, empower AI technologies in quantitative investment. 📃 online docs: https://ufund-me.github.io/Qbot ✨ :news: qbot-mini: https://github.com/Charmve/iQuant&lt;/p&gt;&lt;hr&gt;&lt;div&gt; &#xA; &lt;div align=&#34;right&#34;&gt;&#xA;   👆 右上角点击 &#xA;  &lt;img class=&#34;ai-header-badge-img&#34; src=&#34;https://img.shields.io/github/stars/UFund-Me/Qbot.svg?style=social&amp;amp;label=Star&#34;&gt; 告诉我，你希望这个项目继续加速开发迭代 ❤️ &amp;amp; ☕️ &#xA; &lt;/div&gt; &#xA; &lt;h1&gt; 🤖 Qbot &lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- &lt;img src=&#34;https://user-images.githubusercontent.com/29084184/204598632-23c473db-92ee-4e9b-9b57-d6d95c861fdf.png&#34; width=&#34;42&#34;/&gt; --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/UFund-Me/Qbot/actions/workflows/codeql-analysis.yml&#34;&gt;&lt;img src=&#34;https://github.com/UFund-Me/Qbot/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/UFund-Me/Qbot/actions/workflows/auto-trade.yml&#34;&gt;&lt;img src=&#34;https://github.com/UFund-Me/Qbot/actions/workflows/auto-trade.yml/badge.svg?sanitize=true&#34; alt=&#34;AutoTrade&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/UFund-Me/Qbot/actions/workflows/pylint.yml&#34;&gt;&lt;img src=&#34;https://github.com/UFund-Me/Qbot/actions/workflows/pylint.yml/badge.svg?sanitize=true&#34; alt=&#34;Pylint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/UFund-Me/Qbot/actions/workflows/coverage.yml&#34;&gt;&lt;img src=&#34;https://github.com/UFund-Me/Qbot/actions/workflows/coverage.yml/badge.svg?sanitize=true&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/UFund-Me/Qbot&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-%203.8|%203.9-000000.svg?logo=Python&amp;amp;color=blue&#34; alt=&#34;Python version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ufund-me.github.io/Qbot/#/&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/pyod/badge/?version=latest&#34; alt=&#34;Documentation status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/UFund-Me/Qbot&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; alt=&#34;Qbot&#34; srcset=&#34;https://user-images.githubusercontent.com/29084184/204598632-23c473db-92ee-4e9b-9b57-d6d95c861fdf.png&#34;&gt; &#xA;   &lt;img alt=&#34;Qbot&#34; width=&#34;224&#34; src=&#34;https://user-images.githubusercontent.com/29084184/204598632-23c473db-92ee-4e9b-9b57-d6d95c861fdf.png&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &#xA; &lt;div&gt;&#xA;  &amp;nbsp;&#xA; &lt;/div&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;b&gt;&lt;font size=&#34;5&#34;&gt;Qbot website&lt;/font&gt;&lt;/b&gt; &#xA;  &lt;sup&gt; &lt;a href=&#34;https://ufund-me.github.io/Qbot/#/&#34;&gt; &lt;i&gt;&lt;font size=&#34;4&#34;&gt;HOT&lt;/font&gt;&lt;/i&gt; &lt;/a&gt; &lt;/sup&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &#xA;  &lt;b&gt;&lt;font size=&#34;5&#34;&gt;Qbot platform&lt;/font&gt;&lt;/b&gt; &#xA;  &lt;sup&gt; &lt;a href=&#34;https://ufund-me.github.io/Qbot/quantstats/docs/tearsheet.html&#34;&gt; &lt;i&gt;&lt;font size=&#34;4&#34;&gt;TRY IT OUT&lt;/font&gt;&lt;/i&gt; &lt;/a&gt; &lt;/sup&gt; &#xA; &lt;/div&gt; &#xA; &lt;div&gt;&#xA;  &amp;nbsp;&#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;AI智能量化投研平台&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;b&gt;Qbot&lt;/b&gt; is an AI-oriented automated quantitative investment platform, which aims to realize the potential, empower AI technologies in quantitative investment. Qbot supports diverse machine learning modeling paradigms. including supervised learning, market dynamics modeling, and RL.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code&gt;🤖 Qbot = 智能交易策略 + 回测系统 + 自动化量化交易 (+ 可视化分析工具)&#xA;            |           |            |            |&#xA;            |           |            |             \_ quantstats (dashboard\online operation)&#xA;            |           |             \______________ Qbot - vnpy, pytrader, pyfunds&#xA;            |           \____________________________ BackTest - backtrader, easyquant&#xA;            \________________________________________ quant.ai - qlib, deep learning strategies&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;🎺 &lt;b&gt;号外&lt;/b&gt;：Qbot微信小程序开发招募 &lt;a href=&#34;https://github.com/UFund-Me/UFund-miniprogram&#34;&gt;UFund-miniprogram&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;b&gt;不建议 fork 项目，本项目会持续更新，只 fork 看不到更新，建议 Star ⭐️ ~&lt;/b&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;i&gt;喜欢这个项目吗？请考虑&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/#sponsors--support&#34;&gt; ❤️赞助&lt;/a&gt; 本项目，以帮助改进！&lt;/i&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Qbot是一个免费的投研平台，提供从数据获取、交易策略开发、策略回测、模拟交易到最终实盘交易的全闭环流程。在实盘接入前，有股票、基金评测和策略回测，在模拟环境下做交易验证，近乎实盘的时延、滑点仿真。故，本平台提供GUI前端/客户端（部分功能也支持网页），后端做数据处理、交易调度，实现事件驱动的交易流程。对于策略研究部分，尤其强调机器学习、强化学习的AI策略，结合多因子模型提高收益比。&lt;/p&gt; &#xA;&lt;p&gt;但本项目可能需要一一点python基础知识，有一点点交易经验，会更容易体会作者的初衷，解决当下产品空缺和广大散户朋友的交易痛点，现在直接免费开源出来！&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~ # $HOME as workspace&#xA;git clone https://github.com/UFund-Me/Qbot.git&#xA;&#xA;cd Qbot&#xA;pip install -r requirements.txt&#xA;&#xA;python main.py  #if run on Mac, please use &#39;pythonw main.py&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p id=&#34;demo&#34;&gt; &#xA; &lt;!-- &lt;img width=&#34;&#34; alt=&#34;demo&#34; src=&#34;https://user-images.githubusercontent.com/29084184/221901048-bb1615fe-674f-40e8-b1e7-ba5db30a82a6.png&#34;&gt; --&gt; &lt;img width=&#34;&#34; alt=&#34;demo&#34; src=&#34;https://user-images.githubusercontent.com/29084184/223608757-5808e23c-86e4-4b1b-8b03-e04c8f368f5c.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Mac系统在安装之前需要手动安装tables库的依赖hdf5，以及pythonw https://github.com/UFund-Me/Qbot/issues/11 &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;brew install hdf5&#xA;brew install c-blosc&#xA;export HDF5_DIR=/opt/homebrew/opt/hdf5 &#xA;export BLOSC_DIR=/opt/homebrew/opt/c-blosc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/UFund-Me/Qbot&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34; alt=&#34;Open in Gitpod&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ![Gitpod-Ready](https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod) --&gt; &#xA;&lt;h2&gt;Highlight&lt;/h2&gt; &#xA;&lt;table class=&#34;table table-striped table-bordered table-vcenter&#34;&gt; &#xA; &lt;tbody class=&#34;ai-notebooks-table-content&#34;&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;3&#34; rowspan=&#34;1&#34; class=&#34;ai-notebooks-table-points ai-orange-link&#34;&gt; &#xA;    &lt;div class=&#34;features-2 mdl-grid&#34;&gt; &#xA;     &lt;h2 style=&#34;text-align:center&#34;&gt;1. 多种交易方式：在线回测 + 模拟交易 + 实盘自动化交易&lt;/h2&gt; &#xA;     &lt;p&gt;以策略研究为目标，提供多种交易方式验证策略和提高收益。&lt;/p&gt; &#xA;    &lt;/div&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &#xA;    &lt;div class=&#34;mdl-cell mdl-cell--4-col&#34;&gt; &#xA;     &lt;img class=&#34;illustration_img&#34; width=&#34;330&#34; src=&#34;https://github.com/UFund-Me/Qbot/assets/29084184/222de589-a61f-4c45-bc5f-49de3fc2a72e&#34;&gt; &#xA;    &lt;/div&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &#xA;    &lt;div class=&#34;mdl-cell mdl-cell--4-col&#34;&gt; &#xA;     &lt;img class=&#34;illustration_img&#34; width=&#34;330&#34; src=&#34;https://user-images.githubusercontent.com/29084184/221901048-bb1615fe-674f-40e8-b1e7-ba5db30a82a6.png&#34;&gt; &#xA;    &lt;/div&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &#xA;    &lt;div class=&#34;mdl-cell mdl-cell--4-col&#34;&gt; &#xA;     &lt;img class=&#34;illustration_img&#34; width=&#34;330&#34; src=&#34;https://github.com/UFund-Me/Qbot/assets/29084184/e96206ff-586a-4c6a-8f7a-cd578c8bdc43&#34;&gt; &#xA;    &lt;/div&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table class=&#34;table table-striped table-bordered table-vcenter&#34;&gt; &#xA; &lt;tbody class=&#34;ai-notebooks-table-content&#34;&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;3&#34; rowspan=&#34;1&#34; class=&#34;ai-notebooks-table-points ai-orange-link&#34;&gt; &#xA;    &lt;div class=&#34;features-2 mdl-grid&#34;&gt; &#xA;     &lt;h2 style=&#34;text-align:center&#34;&gt;2. 多种提示方式：邮件 + 飞书 + 弹窗 + 微信&lt;/h2&gt; &#xA;     &lt;p&gt;这是qbot的消息提示模块，多种方式提示交易信息：交易买卖信息、每日交易收益结果、股票每日推荐等。&lt;/p&gt; &#xA;    &lt;/div&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &#xA;    &lt;div class=&#34;mdl-cell mdl-cell--4-col&#34;&gt; &#xA;     &lt;img class=&#34;illustration_img&#34; width=&#34;330&#34; src=&#34;https://github.com/UFund-Me/Qbot/assets/29084184/aafff916-1945-4ae7-b836-60254ecacf76&#34;&gt; &#xA;    &lt;/div&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &#xA;    &lt;div class=&#34;mdl-cell mdl-cell--4-col&#34;&gt; &#xA;     &lt;img class=&#34;illustration_img&#34; width=&#34;220&#34; src=&#34;https://github.com/UFund-Me/Qbot/assets/29084184/a5cfadb5-8233-4307-ab79-6e0c0aca536d&#34;&gt; &#xA;    &lt;/div&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &#xA;    &lt;div class=&#34;mdl-cell mdl-cell--4-col&#34;&gt; &#xA;     &lt;img class=&#34;illustration_img&#34; width=&#34;330&#34; height=&#34;150%&#34; src=&#34;https://github.com/UFund-Me/Qbot/assets/29084184/beb5877b-e45e-45a8-afdb-1926ea2ea8a1&#34;&gt; &#xA;    &lt;/div&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;USAGE ʕ •ᴥ•ʔ&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/docs/01-%E6%96%B0%E6%89%8B%E6%8C%87%E5%BC%95/Install_guide.md&#34;&gt;Install Guide&lt;/a&gt; | &lt;a href=&#34;https://ufund-me.github.io/Qbot/#/&#34;&gt;Online documents&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; ____________________________________&#xA;&amp;lt; Run ``./env_setup.sh`` to say hello &amp;gt;&#xA; ------------------------------------&#xA;            \   ^__^&#xA;             \  (oo)\_______&#xA;                (__)\       )\/\&#xA;                    ||----w |&#xA;                    ||     ||&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get Started&lt;/h3&gt; &#xA;&lt;p&gt;本项目分为前端（客户端）和后端两部分，前端由wxPython编写的轻量化GUI客户端，后端分为策略开发、策略回测 &lt;code&gt;qbot/strategies&lt;/code&gt;、股票基金评测、模拟交易、在线回测几个部分，对应于客户端从左到右的三个菜单。&lt;/p&gt; &#xA;&lt;h4&gt;前端/客户端&lt;/h4&gt; &#xA;&lt;p&gt;➕ 请注意：本项目建议使用python 3.8、3.9版本，推荐使用conda搭建环境，参考 &lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/docs/01-%E6%96%B0%E6%89%8B%E6%8C%87%E5%BC%95/Install_guide.md&#34;&gt;Install Guide&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export USER_ID=&#34;admin&#34;                   # replace your info&#xA;export PASSWORD=&#34;admin1234.&#34;             # replace your info&#xA;&#xA;pip install -r requirements.txt&#xA;&#xA;# if run on Mac, please use &#39;pythonw main.py&#39;&#xA;python main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;主要包含四个窗口，如果启动界面有问题可以参考这里的启动方式。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/UFund-Me/Qbot/assets/29084184/9f1dcc07-ca76-4600-a02c-76104fb28c51&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;👉 点击&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/gui/mainframe.py&#34;&gt;这里&lt;/a&gt;查看源码&lt;/p&gt; &#xA;&lt;h4&gt;后端/服务端&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;选基、选股助手（对应客户端第二个菜单：AI选股/选基）&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;运行命令&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd investool&#xA;go build&#xA;./investool webserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;基金策略在线分析（对应客户端第四个菜单：基金投资策略分析）&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;需要 node 开发环境: &lt;code&gt;npm&lt;/code&gt;、&lt;code&gt;node&lt;/code&gt;，点击&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pyfunds/fund-strategies/README.md&#34;&gt;查看&lt;/a&gt;详细操作文档&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;版本信息（作为参考）&lt;/summary&gt; ``` ▶ go version go version go1.20.4 darwin/amd64 ~ ▶ node --version v19.7.0 ~ ▶ npm --version 9.5.0 ``` &#xA;&lt;/details&gt; &#xA;&lt;p&gt;使用docker运行项目，在项目路径下运行以下命令构建项目的docker镜像&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build -t fund_strategy .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;镜像构建完毕后运行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -dp 8000:8000 fund_strategy --name=&#34;fund_strategy_instance&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;等待项目启动过程中，可通过以下命令查看启动日志：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker log -f fund_strategy_instance&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;启动后，可通过&lt;code&gt;http://locahost:8000&lt;/code&gt;访问网页。&lt;/p&gt; &#xA;&lt;h2&gt;No-code operation (TODO)&lt;/h2&gt; &#xA;&lt;img width=&#34;&#34; alt=&#34;dagster&#34; src=&#34;https://user-images.githubusercontent.com/29084184/221900050-2275a6e2-5c9b-4b81-84e5-0087e8fb58ec.png&#34;&gt; &#xA;&lt;p&gt;体验下来，dagster是很适合金融数据采集、处理，还有机器学习的场景。当然这里的场景更偏向于“批处理”，“定时任务”的处理与编排。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dagster-daemon run &amp;amp;&#xA;dagit -h 0.0.0.0 -p 3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Strategies&lt;/h2&gt; &#xA;&lt;p&gt;部分未整理。。。&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;b&gt;经典策略&lt;/b&gt; &#xA;&lt;/div&gt; &#xA;&lt;table align=&#34;center&#34;&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr align=&#34;center&#34; valign=&#34;bottom&#34;&gt; &#xA;   &lt;td&gt; &lt;b&gt;股票&lt;/b&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;基金&lt;/b&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;期货&lt;/b&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr valign=&#34;top&#34;&gt; &#xA;   &lt;td&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/01-股票/布林线均值回归.md&#34;&gt;布林线均值回归 (&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/03-智能策略/&#34;&gt;移动均线+KDJ&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/01-股票/多因子选股.md&#34;&gt;多因子选股 (&#39;2023)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/01-股票/小市值.md&#34;&gt;小市值 (&#39;2021)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/01-股票/指数增强.md&#34;&gt;指数增强 (&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/01-股票/Alpha对冲.md&#34;&gt;Alpha对冲 (&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/03-期货/网络交易.md&#34;&gt;网格交易 (&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/03-智能策略/拐点交易.md&#34;&gt;拐点交易 (&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/03-智能策略/&#34;&gt;趋势交易&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/03-智能策略/&#34;&gt;海龟策略&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/03-智能策略/&#34;&gt;动态平衡策略&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/03-智能策略/&#34;&gt;阿隆指标策略&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/02-基金/4433法则.md&#34;&gt;4433法则 (&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/02-基金/&#34;&gt;对冲策略：指数型+债券型对冲&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/02-基金/&#34;&gt;组合策略：多因子组合配置&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/02-基金/&#34;&gt;组合策略：惠赢智能算法1&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/02-基金/&#34;&gt;组合策略：择时多策略&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/02-基金/&#34;&gt;组合策略：智赢多因子1&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/03-期货/双均线策略.md&#34;&gt;双均线策略 (&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;docs/02-经典策略/03-期货/网络交易.md&#34;&gt;网格交易 (&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;b&gt;智能策略&lt;/b&gt; &#xA;&lt;/div&gt; &#xA;&lt;table align=&#34;center&#34;&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr align=&#34;center&#34; valign=&#34;middle&#34;&gt; &#xA;   &lt;td&gt; &lt;b&gt;GBDT&lt;/b&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;RNN&lt;/b&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;Reinforcement Learning&lt;/b&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;&lt;span&gt;🔥&lt;/span&gt; Transformer&lt;/b&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr valign=&#34;top&#34;&gt; &#xA;   &lt;td&gt; &lt;li&gt;&lt;b&gt;GBDT&lt;/b&gt;&lt;/li&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/strategies/benchmarks/XGBoost&#34;&gt;XGBoost (KDD&#39;2016)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/strategies/benchmarks/LightGBM&#34;&gt;LightGBM (NIPS&#39;2017)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;Catboost (NIPS&#39;2018)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;li&gt;&lt;b&gt;BOOST&lt;/b&gt;&lt;/li&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;DoubleEnsemble (ICDM&#39;2020)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;TabNet (ECCV&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;li&gt;&lt;b&gt;LR&lt;/b&gt;&lt;/li&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/strategies/benchmarks/Linear&#34;&gt; Line Regression (&#39;2020)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;li&gt;&lt;b&gt;CNN&lt;/b&gt;&lt;/li&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/strategies/benchmarks/MLP&#34;&gt;MLP (CVPRW&#39;2020)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;GRU (ICCVW&#39;2021)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;ImVoxelNet (WACV&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;TabNet (AAAI&#39;2019)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;li&gt;&lt;b&gt;RNN&lt;/b&gt;&lt;/li&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/strategies/benchmarks/LSTM&#34;&gt;LSTM (Neural Computation&#39;2017)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;ALSTM (IJCAI&#39;2022)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;ADARNN (KDD&#39;2021)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;&#34;&gt;ADD (CoRL&#39;2020)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/strategies/benchmarks/TFT&#34;&gt;TFT (IJoF&#39;2019)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;&#34;&gt;GATs (NIPS&#39;2017)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;&#34;&gt;SFM (KDD&#39;2017)&lt;/a&gt;&lt;/li&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/strategies/benchmarks/Transformer&#34;&gt;Transformer (NeurIPS&#39;2017)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;&#34;&gt;TCTS (ICML&#39;2021)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;&#34;&gt;TRA (KDD&#39;2021)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;&#34;&gt;TCN (KDD&#39;2018)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;&#34;&gt;IGMTF (KDD&#39;2021)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;&#34;&gt;HIST (KDD&#39;2018)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;&#34;&gt;Localformer (&#39;2021)&lt;/a&gt;&lt;/li&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt;   &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Benchmark and Model zoo&lt;/h3&gt; &#xA;&lt;p&gt;Results and models are available in the &lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/docs/03-%E6%99%BA%E8%83%BD%E7%AD%96%E7%95%A5/model_zoo.md&#34;&gt;model zoo&lt;/a&gt;. AI strategies is shown at &lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/strategies/&#34;&gt;here&lt;/a&gt;, local run &lt;code&gt;python pytrader/strategies/workflow_by_code.py&lt;/code&gt;, also provide &lt;a href=&#34;https://mybinder.org/v2/gh/UFund-Me/Qbot/blob/main/pytrader/strategies/workflow_by_code.ipynb/HEAD&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;em&gt;&lt;b&gt;👉 点击展开查看具体AI模型benchmark结果&lt;/b&gt;&lt;/em&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;status&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;benchmark&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;framework&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;DGCNN&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;RegNetX&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;addition&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;arXiv&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;GBDT&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;XGBoost&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Tianqi Chen, et al. KDD 2016&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;GBDT&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;LightGBM&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Guolin Ke, et al. NIPS 2017&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;GBDT&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Catboost&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Liudmila Prokhorenkova, et al. NIPS 2018&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;MLP&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;--&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;LSTM&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Sepp Hochreiter, et al. Neural computation 1997&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;LightGBM&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;--&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;GRU&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Kyunghyun Cho, et al. 2014&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;ALSTM&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Yao Qin, et al. IJCAI 2017&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;GATs&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Petar Velickovic, et al. 2017&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;SFM&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Liheng Zhang, et al. KDD 2017&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;TFT&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;tensorflow&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Bryan Lim, et al. International Journal of Forecasting 2019&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;TabNet&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Sercan O. Arik, et al. AAAI 2019&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;DoubleEnsemble&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;LightGBM&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Chuheng Zhang, et al. ICDM 2020&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;TCTS&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Xueqing Wu, et al. ICML 2021&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Transformer&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Ashish Vaswani, et al. NeurIPS 2017&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Localformer&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Juyong Jiang, et al.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;TRA&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Hengxu, Dong, et al. KDD 2021&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;TCN&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Shaojie Bai, et al. 2018&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;ADARNN&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;YunTao Du, et al. 2021&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;ADD&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Hongshun Tang, et al.2020&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;IGMTF&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Wentao Xu, et al.2021&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;HIST&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pytorch&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Wentao Xu, et al.2021&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✗&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;p&gt;&lt;sup&gt;&lt;strong&gt;Note:&lt;/strong&gt; All the about &lt;strong&gt;300+ models, methods of 40+ papers&lt;/strong&gt; in quant.ai supported by &lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/docs/03-%E6%99%BA%E8%83%BD%E7%AD%96%E7%95%A5/model_zoo.md&#34;&gt;Model Zoo&lt;/a&gt; can be trained or used in this codebase.&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;策略原理及源码分析&lt;/h2&gt; &#xA;&lt;p&gt;本项目编写了详细的策略原理说明和平台搭建到使用的详细文档，尤其适合量化小白。欢迎加群交流！&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ufund-me.github.io/Qbot/#/&#34;&gt;在线文档&lt;/a&gt; | &lt;a href=&#34;https://ufund-me.github.io/Qbot/#/04-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/FQA&#34;&gt;❓ 常见问题&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/strategies/notebook&#34;&gt;Jupyter Notebook&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quantstats Report&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/29084184/207054856-44d1815b-f92f-40a7-b82e-e4a6b3960f2f.png&#34; alt=&#34;Quantstats Report&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Click &lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/quantstats#visualize-stock-performance&#34;&gt;HERE&lt;/a&gt; to more detail.&lt;/p&gt; &#xA;&lt;h3&gt;Some strategy backtest results:&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;声明：别轻易用于实盘，市场有风险，投资需谨慎。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;symbol：华正新材(603186)&#xA;Starting Portfolio Value: 10000.00&#xA;Startdate=datetime.datetime(2010, 1, 1),&#xA;Enddate=datetime.datetime(2020, 4, 21),&#xA;# 设置佣金为0.001, 除以100去掉%号&#xA;cerebro.broker.setcommission(commission=0.001)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A股回测MACD策略:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/doc/02.easy_macd_strategy/Figure_macd.png&#34; alt=&#34;MACD&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/UFund-Me/Qbot/assets/29084184/dfef65ba-0d32-4f5f-b413-d6ec02fc700e&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;👉 点击&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/doc/02.easy_macd_strategy/macd.py&#34;&gt;查看&lt;/a&gt;源码&lt;/p&gt; &#xA;&lt;p&gt;A股回测KDJ策略:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/doc/04.kdj_with_macd/Figure_kdj.png&#34; alt=&#34;KDJ&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/UFund-Me/Qbot/assets/29084184/ef8e945b-59d6-4220-87e3-08ec1196cc2c&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;👉 点击&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/doc/04.kdj_with_macd/kdj.py&#34;&gt;查看&lt;/a&gt;源码&lt;/p&gt; &#xA;&lt;p&gt;A股回测 KDJ+MACD 策略:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/doc/04.kdj_with_macd/Figure_kdj_with_macd.png&#34; alt=&#34;KDJ with MACD&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/UFund-Me/Qbot/assets/29084184/67338ec5-a6b1-4aa7-9792-1a2c61f353da&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;👉 点击&lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/pytrader/doc/04.kdj_with_macd/kdj_macd.py&#34;&gt;查看&lt;/a&gt;源码&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;p&gt;👆 右上角点击 &lt;img class=&#34;ai-header-badge-img&#34; src=&#34;https://img.shields.io/github/stars/UFund-Me/Qbot.svg?style=social&amp;amp;label=Star&#34;&gt; 告诉我，你希望这个项目继续加速开发迭代&lt;a href=&#34;https://github.com/sponsors/Charmve&#34;&gt; ❤️ &amp;amp; ☕️&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 把策略回测整合在一个上位机中，包括：选基、选股策略、交易策略，模拟交易，实盘交易&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 很多策略需要做回测验证；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 本项目由前后端支持，有上位机app支持，但目前框架还比较乱，需要做调整；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 各种策略需要抽象设计，支持统一调用；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 增强数据获取的实时性，每秒数据，降低延迟；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 在线文档的完善，目前主要几个部分：新手使用指引、经典策略原理和源码、智能策略原理和源码、常见问题等；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 新的feature开发，欢迎在&lt;a href=&#34;https://github.com/UFund-Me/Qbot/issues/&#34;&gt;issues&lt;/a&gt;交流；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We appreciate all contributions to improve Qbot. Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for the contributing guideline.&lt;/p&gt; &#xA;&lt;h2&gt;🍮 Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Github &lt;a href=&#34;https://github.com/UFund-Me/Qbot/discussions&#34; target=&#34;_blank&#34;&gt;discussions 💬&lt;/a&gt; or &lt;a href=&#34;https://github.com/UFund-Me/Qbot/issues&#34; target=&#34;_blank&#34;&gt;issues 💭&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;微信: Yida_Zhang2&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Email: yidazhang1#gmail.com&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;知乎：&lt;a href=&#34;https://www.zhihu.com/people/MaiweiE-com&#34;&gt;@Charmve&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;知识星球：AI量化投研实验室 （加我微信，邀请）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;table class=&#34;table table-striped table-bordered table-vcenter&#34;&gt; &#xA; &lt;tbody class=&#34;ai-notebooks-table-content&#34;&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &#xA;    &lt;div class=&#34;mdl-cell mdl-cell--4-col&#34;&gt; &#xA;     &lt;a href=&#34;https://github.com/UFund-Me/.github/assets/29084184/c8782e38-be7d-4839-bad0-6736bfb9ab9e&#34;&gt;&lt;img class=&#34;illustration_img&#34; width=&#34;320&#34; alt=&#34;添加个人微信&#34; src=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/gui/imgs/wechat.png&#34;&gt;&lt;/a&gt; &#xA;     &lt;br&gt;个人微信 &#xA;    &lt;/div&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &#xA;    &lt;div class=&#34;mdl-cell mdl-cell--4-col&#34;&gt; &#xA;     &lt;a href=&#34;https://github.com/UFund-Me/.github/assets/29084184/712a460f-a264-4f16-a7b8-c990106ec624&#34;&gt;&lt;img class=&#34;illustration_img&#34; width=&#34;318&#34; alt=&#34;加入微信交流群&#34; src=&#34;https://github.com/UFund-Me/Qbot/assets/29084184/c81a0983-b5c4-43b5-acb5-3bd98010f7e3&#34;&gt;&lt;/a&gt; &#xA;     &lt;br&gt;Qbot用户微信交流群 &#xA;    &lt;/div&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &#xA;    &lt;div class=&#34;mdl-cell mdl-cell--4-col&#34;&gt; &#xA;     &lt;a href=&#34;https://github.com/UFund-Me/.github/assets/29084184/9d3983ff-ece8-4f99-8579-94234987dcf2&#34;&gt;&lt;img class=&#34;illustration_img&#34; height=&#34;320&#34; alt=&#34;加入知识星球（付费）&#34; src=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/gui/imgs/zsxq.png&#34;&gt;&lt;/a&gt; &#xA;     &lt;br&gt; &#xA;     &lt;sup&gt;AI量化交易策略分享、实盘交易教程、实时数据接口&lt;/sup&gt; &#xA;     &lt;br&gt;知识星球（付费） &#xA;    &lt;/div&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;若二维码因 Github 网络无法打开，请点击&lt;a href=&#34;https://charmve.github.io/img/contact-card.png&#34;&gt;二维码&lt;/a&gt;直接打开图片。&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;table align=&#34;center&#34;&gt;&#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;2&#34; rowspan=&#34;1&#34;&gt; &lt;h4&gt;🎉 本项目刚上线就收到了两次GitHub官方趋势榜Top5、Top1好成绩! &lt;/h4&gt; &lt;p&gt;现对于转发本项目到朋友圈或100人以上微信群等，可获得&lt;b&gt;知识星球价值20元的 🎫优惠券 一张&lt;/b&gt;, 限时10张。&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;1&#34; rowspan=&#34;5&#34; class=&#34;ai-notebooks-table-points ai-orange-link&#34;&gt; &#xA;    &lt;div align=&#34;center&#34;&gt; &#xA;     &lt;a href=&#34;https://github.com/UFund-Me/Qbot&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-💮 %20Qbot-red.svg&#34; alt=&#34;Qbot&#34; title=&#34;Qbot&#34;&gt;&lt;/a&gt;&amp;nbsp; &#xA;     &lt;a class=&#34;https://github.com/UFund-Me/Qbot&#34;&gt; &lt;img class=&#34;ai-header-badge-img&#34; src=&#34;https://img.shields.io/github/stars/UFund-Me/Qbot.svg?style=social&amp;amp;label=Star&#34;&gt; &lt;/a&gt;&amp;nbsp; &#xA;     &lt;a href=&#34;https://raw.githubusercontent.com/UFund-Me/Qbot/main/gui/imgs/wechat.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-WeChat-lightgreen.svg?logo=WeChat&#34;&gt;&lt;/a&gt; &#xA;     &lt;p&gt;🔥Among the &lt;a href=&#34;https://github.com/topics/quant-trade&#34; target=&#34;_blank&#34;&gt;top 10&lt;/a&gt; Quant &amp;amp; Trade repos on GitHub&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;ul&gt;&#xA;      主要包含两部分：在本项目的基础下， &#xA;     &lt;li&gt;增加更多策略研究，包含回测源码（请先学会有本项目中的策略库）；&lt;/li&gt; &#xA;     &lt;li&gt;增加实盘接入方式的源代码；&lt;/li&gt; &#xA;     &lt;li&gt;策略交流，AI投研实验室MeetUp线上/线下活动（对于基础薄弱的同学，欢迎进微信群答疑）&lt;/li&gt; &#xA;     &lt;li&gt;最近较为受欢迎的一个福利点：AI选股推荐列表邮件订阅，这有个样例 https://github.com/UFund-Me/Qbot/issues/37&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img align=&#34;center&#34; src=&#34;https://github.com/UFund-Me/Qbot/assets/29084184/bb5ec619-887a-4ba7-a9d7-9e8b083bbb1a&#34; height=&#34;320&#34; alt=&#34;知识星球优惠券&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;span&gt;⚠&lt;/span&gt; Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;👨‍🏫 &lt;strong&gt;重点重点！&lt;/strong&gt; 交易策略和自动化工具只是提供便利，并不代表实际交易收益。该项目任何内容不构成任何投资建议。市场有风险，投资需谨慎。&lt;/p&gt; &#xA;&lt;h2&gt;🔥 Stargazers Over Time&lt;/h2&gt; &#xA;&lt;!-- [![Stargazers over time](https://starchart.cc/UFund-Me/Qbot.svg)](https://starchart.cc/UFund-Me/Qbot) --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#UFund-Me/Qbot&amp;amp;ailabx/ailabx&amp;amp;jadepeng/pytrader&amp;amp;Timeline&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=UFund-Me/Qbot,ailabx/ailabx,jadepeng/pytrader&amp;amp;type=Timeline&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors &amp;amp; support&lt;/h2&gt; &#xA;&lt;p&gt;If you like the project, you can become a sponsor at &lt;a href=&#34;https://opencollective.com/qbot&#34;&gt;Open Collective&lt;/a&gt; or use &lt;a href=&#34;https://github.com/sponsors/Charmve&#34;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;Thank you for supporting Qbot!&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/qbot&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/Qbot/tiers/sponsors.svg?avatarHeight=120&#34; alt=&#34;Sponsor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/qbot#category-CONTRIBUTE&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/qbot/tiers/backers.svg?avatarHeight=100&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;img align=&#34;left&#34; alt=&#34;Go for it!&#34; src=&#34;https://raw.githubusercontent.com/Charmve/computer-vision-in-action/main/res/ui/frontpage/2020-sponsors.svg?sanitize=true&#34; height=&#34;68&#34; title=&#34;Do what you like, and do it best!&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;Last but not least, we&#39;re thankful to these open-source repo for sharing their services for free:&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;基于Backtrader、vnpy、qlib、tushare、backtest、easyquant、fund-strategies、investool等开源项目，感谢开发者。&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;感谢大家的支持与喜欢！&lt;/p&gt; &#xA;&lt;p&gt;Code with ❤️ &amp;amp; ☕️ @Charmve 2022-2023&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>liguodongiot/llm-action</title>
    <updated>2023-08-13T01:53:16Z</updated>
    <id>tag:github.com,2023-08-13:/liguodongiot/llm-action</id>
    <link href="https://github.com/liguodongiot/llm-action" rel="alternate"></link>
    <summary type="html">&lt;p&gt;本项目旨在分享大模型相关技术原理以及实战经验。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;llm-action&lt;/h1&gt; &#xA;&lt;p&gt;本项目旨在分享大模型相关技术原理以及实战经验。&lt;/p&gt; &#xA;&lt;h2&gt;目录&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;🔥&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#llm%E8%AE%AD%E7%BB%83&#34;&gt;LLM训练&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;🐫&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#llm%E8%AE%AD%E7%BB%83%E5%AE%9E%E6%88%98&#34;&gt;LLM训练实战&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;🐼&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#llm%E5%BE%AE%E8%B0%83%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86&#34;&gt;LLM参数高效微调技术原理综述&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;🐰&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#llm%E5%BE%AE%E8%B0%83%E5%AE%9E%E6%88%98&#34;&gt;LLM参数高效微调技术实战&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;🐘&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#llm%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%AD%E7%BB%83%E5%B9%B6%E8%A1%8C%E6%8A%80%E6%9C%AF&#34;&gt;LLM分布式训练并行技术&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;🌋&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#%E5%88%86%E5%B8%83%E5%BC%8Fai%E6%A1%86%E6%9E%B6&#34;&gt;分布式AI框架&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;📡&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%AD%E7%BB%83%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1&#34;&gt;分布式训练网络通信&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🐎&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#llm%E6%8E%A8%E7%90%86&#34;&gt;LLM推理&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;🚀&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#%E6%A8%A1%E5%9E%8B%E6%8E%A8%E7%90%86%E5%8A%A0%E9%80%9F&#34;&gt;模型推理加速&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;✈&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#%E6%A8%A1%E5%9E%8B%E6%8E%A8%E7%90%86%E6%9C%8D%E5%8A%A1%E5%8C%96&#34;&gt;模型推理服务化&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;♻&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#llm%E5%8E%8B%E7%BC%A9&#34;&gt;LLM压缩&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;span&gt;📐&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#llm%E9%87%8F%E5%8C%96&#34;&gt;LLM量化&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;img alt=&#34;atom&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/atom.png?v8&#34;&gt;) &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95&#34;&gt;大模型结构与算法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🧩&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#llm%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91&#34;&gt;LLM应用开发&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🀄&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#llm%E5%9B%BD%E4%BA%A7%E5%8C%96%E9%80%82%E9%85%8D&#34;&gt;LLM国产化适配&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🍄&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#llm%E7%94%9F%E6%80%81%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF&#34;&gt;LLM生态相关技术&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🔨&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85&#34;&gt;服务器基础环境软件安装&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;💬&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#llm%E5%AD%A6%E4%B9%A0%E4%BA%A4%E6%B5%81%E7%BE%A4&#34;&gt;LLM学习交流群&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;👥&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7&#34;&gt;微信公众号&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;⭐&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/liguodongiot/llm-action/main/#star-history&#34;&gt;Star History&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;LLM训练&lt;/h2&gt; &#xA;&lt;h3&gt;LLM训练实战&lt;/h3&gt; &#xA;&lt;p&gt;下面汇总了我在大模型实践中训练相关的所有教程。从6B到65B，从全量微调到高效微调（LoRA，QLoRA，P-Tuning v2），再到RLHF（基于人工反馈的强化学习）。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;LLM&lt;/th&gt; &#xA;   &lt;th&gt;预训练/SFT/RLHF...&lt;/th&gt; &#xA;   &lt;th&gt;参数&lt;/th&gt; &#xA;   &lt;th&gt;教程&lt;/th&gt; &#xA;   &lt;th&gt;代码&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Alpaca&lt;/td&gt; &#xA;   &lt;td&gt;full fine-turning&lt;/td&gt; &#xA;   &lt;td&gt;7B&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/618321077&#34;&gt;从0到1复现斯坦福羊驼（Stanford Alpaca 7B）&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/liguodongiot/llm-action/tree/main/train/alpaca&#34;&gt;配套代码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Alpaca(LLaMA)&lt;/td&gt; &#xA;   &lt;td&gt;LoRA&lt;/td&gt; &#xA;   &lt;td&gt;7B~65B&lt;/td&gt; &#xA;   &lt;td&gt;1. &lt;a href=&#34;https://zhuanlan.zhihu.com/p/619426866&#34;&gt;足够惊艳，使用Alpaca-Lora基于LLaMA(7B)二十分钟完成微调，效果比肩斯坦福羊驼&lt;/a&gt;&lt;br&gt;2. &lt;a href=&#34;https://zhuanlan.zhihu.com/p/632492604&#34;&gt;使用 LoRA 技术对 LLaMA 65B 大模型进行微调及推理&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/liguodongiot/llm-action/tree/main/train/alpaca-lora&#34;&gt;配套代码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BELLE(LLaMA/Bloom)&lt;/td&gt; &#xA;   &lt;td&gt;full fine-turning&lt;/td&gt; &#xA;   &lt;td&gt;7B&lt;/td&gt; &#xA;   &lt;td&gt;1. &lt;a href=&#34;https://zhuanlan.zhihu.com/p/618876472&#34;&gt;基于LLaMA-7B/Bloomz-7B1-mt复现开源中文对话大模型BELLE及GPTQ量化&lt;/a&gt;&lt;br&gt;2. &lt;a href=&#34;https://zhuanlan.zhihu.com/p/621128368&#34;&gt;BELLE(LLaMA-7B/Bloomz-7B1-mt)大模型使用GPTQ量化后推理性能测试&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ChatGLM&lt;/td&gt; &#xA;   &lt;td&gt;LoRA&lt;/td&gt; &#xA;   &lt;td&gt;6B&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/621793987&#34;&gt;从0到1基于ChatGLM-6B使用LoRA进行参数高效微调&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/liguodongiot/llm-action/tree/main/train/chatglm-lora&#34;&gt;配套代码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ChatGLM&lt;/td&gt; &#xA;   &lt;td&gt;full fine-turning/P-Tuning v2&lt;/td&gt; &#xA;   &lt;td&gt;6B&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/622351059&#34;&gt;使用DeepSpeed/P-Tuning v2对ChatGLM-6B进行微调&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/liguodongiot/llm-action/tree/main/train/chatglm&#34;&gt;配套代码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Vicuna(LLaMA)&lt;/td&gt; &#xA;   &lt;td&gt;full fine-turning&lt;/td&gt; &#xA;   &lt;td&gt;7B&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/624012908&#34;&gt;大模型也内卷，Vicuna训练及推理指南，效果碾压斯坦福羊驼&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OPT&lt;/td&gt; &#xA;   &lt;td&gt;RLHF&lt;/td&gt; &#xA;   &lt;td&gt;0.1B~66B&lt;/td&gt; &#xA;   &lt;td&gt;1. &lt;a href=&#34;https://zhuanlan.zhihu.com/p/626159553&#34;&gt;一键式 RLHF 训练 DeepSpeed Chat（一）：理论篇&lt;/a&gt;&amp;nbsp;&lt;br&gt;2. &lt;a href=&#34;https://zhuanlan.zhihu.com/p/626214655&#34;&gt;一键式 RLHF 训练 DeepSpeed Chat（二）：实践篇&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/liguodongiot/llm-action/tree/main/train/deepspeedchat&#34;&gt;配套代码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MiniGPT-4(LLaMA)&lt;/td&gt; &#xA;   &lt;td&gt;full fine-turning&lt;/td&gt; &#xA;   &lt;td&gt;7B&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/627671257&#34;&gt;大杀器，多模态大模型MiniGPT-4入坑指南&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chinese-LLaMA-Alpaca(LLaMA)&lt;/td&gt; &#xA;   &lt;td&gt;LoRA（预训练+微调）&lt;/td&gt; &#xA;   &lt;td&gt;7B&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/631360711&#34;&gt;中文LLaMA&amp;amp;Alpaca大语言模型词表扩充+预训练+指令精调&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/liguodongiot/llm-action/tree/main/train/chinese-llama-alpaca&#34;&gt;配套代码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LLaMA&lt;/td&gt; &#xA;   &lt;td&gt;QLoRA&lt;/td&gt; &#xA;   &lt;td&gt;7B/65B&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/636644164&#34;&gt;高效微调技术QLoRA实战，基于LLaMA-65B微调仅需48G显存，真香&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/liguodongiot/llm-action/tree/main/train/qlora&#34;&gt;配套代码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;LLM微调技术原理&lt;/h3&gt; &#xA;&lt;p&gt;对于普通大众来说，进行大模型的预训练或者全量微调遥不可及。由此，催生了各种参数高效微调技术，让科研人员或者普通开发者有机会尝试微调大模型。&lt;/p&gt; &#xA;&lt;p&gt;因此，该技术值得我们进行深入分析其背后的机理，本系列大体分七篇文章进行讲解。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/635152813&#34;&gt;大模型参数高效微调技术原理综述（一）-背景、参数高效微调简介&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/635686756&#34;&gt;大模型参数高效微调技术原理综述（二）-BitFit、Prefix Tuning、Prompt Tuning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/635848732&#34;&gt;大模型参数高效微调技术原理综述（三）-P-Tuning、P-Tuning v2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/636038478&#34;&gt;大模型参数高效微调技术原理综述（四）-Adapter Tuning及其变体&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/636215898&#34;&gt;大模型参数高效微调技术原理综述（五）-LoRA、AdaLoRA、QLoRA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/636362246&#34;&gt;大模型参数高效微调技术原理综述（六）-MAM Adapter、UniPELT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/636999010&#34;&gt;大模型参数高效微调技术原理综述（七）-最佳实践、总结&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;LLM微调实战&lt;/h3&gt; &#xA;&lt;p&gt;下面给大家分享&lt;strong&gt;大模型参数高效微调技术实战&lt;/strong&gt;系列文章，该系列共6篇文章。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;教程&lt;/th&gt; &#xA;   &lt;th&gt;代码&lt;/th&gt; &#xA;   &lt;th&gt;框架&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://juejin.cn/post/7257895211710627901&#34;&gt;大模型参数高效微调技术实战（一）-PEFT概述及环境搭建&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;HuggingFace PEFT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/646748939&#34;&gt;大模型参数高效微调技术实战（二）-Prompt Tuning&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/liguodongiot/llm-action/raw/main/train/peft/clm/peft_prompt_tuning_clm.ipynb&#34;&gt;配套代码&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HuggingFace PEFT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/646876256&#34;&gt;大模型参数高效微调技术实战（三）-P-Tuning&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/liguodongiot/llm-action/raw/main/train/peft/clm/peft_p_tuning_clm.ipynb&#34;&gt;配套代码&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HuggingFace PEFT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/648156780&#34;&gt;大模型参数高效微调技术实战（四）-Prefix Tuning / P-Tuning v2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/liguodongiot/llm-action/raw/main/train/peft/clm/peft_p_tuning_v2_clm.ipynb&#34;&gt;配套代码&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HuggingFace PEFT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;&#34;&gt;大模型参数高效微调技术实战（五）-LoRA&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/liguodongiot/llm-action/raw/main/train/peft/clm/peft_lora_clm.ipynb&#34;&gt;配套代码&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HuggingFace PEFT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;&#34;&gt;大模型参数高效微调技术实战（六）-IA3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/liguodongiot/llm-action/raw/main/train/peft/clm/peft_ia3_clm.ipynb&#34;&gt;配套代码&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HuggingFace PEFT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;LLM分布式训练并行技术&lt;/h3&gt; &#xA;&lt;p&gt;近年来，随着Transformer、MOE架构的提出，使得深度学习模型轻松突破上万亿规模参数，传统的单机单卡模式已经无法满足超大模型进行训练的要求。因此，我们需要基于单机多卡、甚至是多机多卡进行分布式大模型的训练。&lt;/p&gt; &#xA;&lt;p&gt;而利用AI集群，使深度学习算法更好地从大量数据中高效地训练出性能优良的大模型是分布式机器学习的首要目标。为了实现该目标，一般需要根据硬件资源与数据/模型规模的匹配情况，考虑对计算任务、训练数据和模型进行划分，从而进行分布式训练。因此，分布式训练相关技术值得我们进行深入分析其背后的机理。&lt;/p&gt; &#xA;&lt;p&gt;下面主要对大模型进行分布式训练的并行技术进行讲解，本系列大体分八篇文章进行讲解。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/7195845066887053368&#34;&gt;大模型分布式训练并行技术（一）-概述&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/7254001262646738981&#34;&gt;大模型分布式训练并行技术（二）-数据并行&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/7262274383287484476&#34;&gt;大模型分布式训练并行技术（三）-流水线并行&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;&#34;&gt;大模型分布式训练并行技术（四）-张量并行&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;&#34;&gt;大模型分布式训练并行技术（五）-序列并行&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;&#34;&gt;大模型分布式训练并行技术（六）-多维混合并行&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;&#34;&gt;大模型分布式训练并行技术（七）-自动并行&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;&#34;&gt;大模型分布式训练并行技术（八）-MOE并行&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;分布式AI框架&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pytorch &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Pytorch 单机多卡训练&lt;/li&gt; &#xA;   &lt;li&gt;Pytorch 多机多卡训练&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Megatron-LM &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Megatron-LM 单机多卡训练&lt;/li&gt; &#xA;   &lt;li&gt;Megatron-LM 多机多卡训练&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/7259682893648724029&#34;&gt;基于Megatron-LM从0到1完成GPT2模型预训练、模型评估及推理&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;DeepSpeed &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;DeepSpeed 单机多卡训练&lt;/li&gt; &#xA;   &lt;li&gt;DeepSpeed 多机多卡训练&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;分布式训练网络通信&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;分布式训练网络通讯原语&lt;/li&gt; &#xA; &lt;li&gt;AI 集群通信软硬件&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/liguodongiot/llm-action/tree/main/inference&#34;&gt;LLM推理&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;模型推理加速&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/626008090&#34;&gt;大模型的好伙伴，浅析推理加速引擎FasterTransformer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;模型推理服务化&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/629336492&#34;&gt;模型推理服务化框架Triton保姆式教程（一）：快速入门&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/634143650&#34;&gt;模型推理服务化框架Triton保姆式教程（二）：架构解析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/634444666&#34;&gt;模型推理服务化框架Triton保姆式教程（三）：开发实践&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;LLM压缩&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/liguodongiot/llm-action/tree/main/model-compression/quantization&#34;&gt;LLM量化&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SmoothQuant&lt;/li&gt; &#xA; &lt;li&gt;ZeroQuant&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/647589650&#34;&gt;大模型训练感知量化开山之作：LLM-QAT&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;大模型结构与算法&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ChatGLM / ChatGLM2 大模型解析&lt;/li&gt; &#xA; &lt;li&gt;Bloom 大模型解析&lt;/li&gt; &#xA; &lt;li&gt;LLaMA / LLaMA2 大模型解析&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/liguodongiot/llm-action/tree/main/docs/llm_localization&#34;&gt;LLM国产化适配&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;随着 ChatGPT 的现象级走红，引领了AI大模型时代的变革，从而导致 AI 算力日益紧缺。与此同时，中美贸易战以及美国对华进行AI芯片相关的制裁导致 AI 算力的国产化适配势在必行。本系列将对一些国产化 AI 加速卡进行讲解。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/637918406&#34;&gt;大模型国产化适配1-华为昇腾AI全栈软硬件平台总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/7254446353367482423&#34;&gt;大模型国产化适配2-基于昇腾910使用ChatGLM-6B进行模型推理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/7256769427600064569&#34;&gt;大模型国产化适配3-基于昇腾910使用ChatGLM-6B进行模型训练&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;&#34;&gt;大模型国产化适配4-基于昇腾910使用LLaMA-13B进行多机多卡训练&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;LLM应用开发&lt;/h2&gt; &#xA;&lt;p&gt;大模型是基座，要想让其变成一款产品，我们还需要一些其他相关的技术，比如：向量数据库（Pinecone、Milvus、Vespa、Weaviate），LangChain等。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/7081440038772293663&#34;&gt;云原生向量数据库Milvus（一）-简述、系统架构及应用场景&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/7081672823931928606&#34;&gt;云原生向量数据库Milvus（二）-数据与索引的处理流程、索引类型及Schema&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;LLM生态相关技术&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/630696264&#34;&gt;大模型词表扩充必备工具SentencePiece&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/601594836/answer/3032763174&#34;&gt;大模型实践总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/606757218/answer/3075464500&#34;&gt;百川智能开源大模型baichuan-7B技术剖析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/611507751/answer/3114988669&#34;&gt;百川智能开源大模型baichuan-13B技术剖析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/604393963/answer/3061358152&#34;&gt;ChatGLM 和 ChatGPT 的技术区别在哪里？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/602504880/answer/3041965998&#34;&gt;现在为什么那么多人以清华大学的ChatGLM-6B为基座进行试验？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;服务器基础环境软件安装&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/liguodongiot/llm-action/raw/main/docs/llm-base/a800-env-install.md&#34;&gt;英伟达A800加速卡常见软件包安装命令&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/liguodongiot/llm-action/raw/main/docs/llm-base/h800-env-install.md&#34;&gt;英伟达H800加速卡常见软件包安装命令&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/liguodongiot/llm-action/raw/main/docs/llm_localization/ascend910-env-install.md&#34;&gt;昇腾910加速卡常见软件包安装命令&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;LLM学习交流群&lt;/h2&gt; &#xA;&lt;p&gt;我创建了大模型学习交流群，供大家一起学习交流大模型相关的最新技术，目前已有4个群，每个群都有上百人的规模，&lt;strong&gt;可加我微信进群&lt;/strong&gt;（加微信请备注来意，如：进大模型学习交流群+GitHub）。&lt;strong&gt;一定要备注哟，否则不予通过&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/liguodongiot/llm-action/raw/main/pic/%E5%BE%AE%E4%BF%A1.jpeg&#34; width=&#34;25%&#34; height=&#34;25%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;微信公众号&lt;/h2&gt; &#xA;&lt;p&gt;微信公众号：&lt;strong&gt;吃果冻不吐果冻皮&lt;/strong&gt;，该公众号主要分享AI工程化（大模型、MLOps等）相关实践经验，免费电子书籍、论文等。&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/liguodongiot/llm-action/raw/main/pic/%E5%85%AC%E4%BC%97%E5%8F%B7.jpeg&#34; width=&#34;30%&#34; height=&#34;30%&#34; div align=&#34;center&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#liguodongiot/llm-action&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=liguodongiot/llm-action&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>