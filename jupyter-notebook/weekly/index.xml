<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-26T01:53:09Z</updated>
  <subtitle>Weekly Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tubo213/kaggle-child-mind-institute-detect-sleep-states</title>
    <updated>2023-11-26T01:53:09Z</updated>
    <id>tag:github.com,2023-11-26:/tubo213/kaggle-child-mind-institute-detect-sleep-states</id>
    <link href="https://github.com/tubo213/kaggle-child-mind-institute-detect-sleep-states" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Child Mind Institute - Detect Sleep States&lt;/h1&gt; &#xA;&lt;p&gt;This repository is for &lt;a href=&#34;https://www.kaggle.com/competitions/child-mind-institute-detect-sleep-states/overview&#34;&gt;Child Mind Institute - Detect Sleep States&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build Environment&lt;/h2&gt; &#xA;&lt;h3&gt;1. install &lt;a href=&#34;https://github.com/mitsuhiko/rye&#34;&gt;rye&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rye-up.com/guide/installation/#installing-rye&#34;&gt;install documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;MacOS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;curl -sSf https://rye-up.com/get | bash&#xA;echo &#39;source &#34;$HOME/.rye/env&#34;&#39; &amp;gt;&amp;gt; ~/.zshrc&#xA;source ~/.zshrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Linux&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sSf https://rye-up.com/get | bash&#xA;echo &#39;source &#34;$HOME/.rye/env&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&#xA;source ~/.bashrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Windows&lt;br&gt; see &lt;a href=&#34;https://rye-up.com/guide/installation/&#34;&gt;install documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2. Create virtual environment&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rye sync&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Activate virtual environment&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;. .venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Set path&lt;/h3&gt; &#xA;&lt;p&gt;Rewrite run/conf/dir/local.yaml to match your environment&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;data_dir: &#xA;processed_dir: &#xA;output_dir: &#xA;model_dir: &#xA;sub_dir: ./&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Prepare Data&lt;/h2&gt; &#xA;&lt;h3&gt;1. Download data&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd data&#xA;kaggle competitions download -c child-mind-institute-detect-sleep-states&#xA;unzip child-mind-institute-detect-sleep-states.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Preprocess data&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rye run python run/prepare_data.py -m phase=train,test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Train Model&lt;/h2&gt; &#xA;&lt;p&gt;The following commands are for training the model of LB0.714&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rye run python run/train.py downsample_rate=2 duration=5760 exp_name=exp001 dataset.batch_size=32&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can easily perform experiments by changing the parameters because &lt;a href=&#34;https://hydra.cc/docs/intro/&#34;&gt;hydra&lt;/a&gt; is used. The following commands perform experiments with downsample_rate of 2, 4, 6, and 8.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rye run python run/train.py -m downsample_rate=2,4,6,8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Upload Model&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rye run python tools/upload_dataset.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Inference&lt;/h2&gt; &#xA;&lt;p&gt;The following commands are for inference of LB0.714&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rye run python run/inference.py dir=kaggle exp_name=exp001 weight.run_name=single downsample_rate=2 duration=5760 model.params.encoder_weights=null pp.score_th=0.005 pp.distance=40 phase=test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Implemented models&lt;/h2&gt; &#xA;&lt;p&gt;The model is built with two components: feature_extractor and decoder.&lt;/p&gt; &#xA;&lt;p&gt;The feature_extractor and decoder that can be specified are as follows&lt;/p&gt; &#xA;&lt;h3&gt;Feature Extractor&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/analokmaus/kaggle-g2net-public/tree/main/models1d_pytorch&#34;&gt;CNNSpectrogram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LSTMFeatureExtractor&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1912.10211&#34;&gt;PANNsFeatureExtractor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SpecFeatureExtractor&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Decoder&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MLPDecoder&lt;/li&gt; &#xA; &lt;li&gt;LSTMDecoder&lt;/li&gt; &#xA; &lt;li&gt;TransformerDecoder&lt;/li&gt; &#xA; &lt;li&gt;TransformerCNNDecoder&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bamps53/kaggle-dfl-3rd-place-solution/raw/master/models/cnn_3d.py&#34;&gt;UNet1DDecoder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MLPDecoder&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Model&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Spec2DCNN: Segmentation through UNet.&lt;/li&gt; &#xA; &lt;li&gt;Spec1D: Segmentation without UNet&lt;/li&gt; &#xA; &lt;li&gt;DETR2DCNN: Use UNet to detect sleep as in &lt;a href=&#34;https://arxiv.org/abs/2005.12872&#34;&gt;DETR&lt;/a&gt;. This model is still under development.&lt;/li&gt; &#xA; &lt;li&gt;CenterNet: Detect onset and offset, respectively, like &lt;a href=&#34;https://arxiv.org/abs/1904.07850&#34;&gt;CenterNet&lt;/a&gt; using UNet&lt;/li&gt; &#xA; &lt;li&gt;TransformerAutoModel: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Segmentation using huggingface&#39;s &lt;a href=&#34;https://huggingface.co/transformers/v3.0.2/model_doc/auto.html&#34;&gt;AutoModel&lt;/a&gt;. don&#39;t use feature_extractor and decoder.&lt;/li&gt; &#xA;   &lt;li&gt;Since the Internet is not available during inference, it is necessary to create a config dataset and specify the path in the model_name.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The correspondence table between each model and dataset is as follows.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;model&lt;/th&gt; &#xA;   &lt;th&gt;dataset&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Spec1D&lt;/td&gt; &#xA;   &lt;td&gt;seg&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Spec2DCNN&lt;/td&gt; &#xA;   &lt;td&gt;seg&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DETR2DCNN&lt;/td&gt; &#xA;   &lt;td&gt;detr&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CenterNet&lt;/td&gt; &#xA;   &lt;td&gt;centernet&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TransformerAutoModel&lt;/td&gt; &#xA;   &lt;td&gt;seg&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The command to train CenterNet with feature_extractor=CNNSpectrogram, decoder=UNet1DDecoder is as follows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rye run python run/train.py model=CenterNet dataset=centernet feature_extractor=CNNSpectrogram decoder=UNet1DDecoder&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>datawhalechina/llm-universe</title>
    <updated>2023-11-26T01:53:09Z</updated>
    <id>tag:github.com,2023-11-26:/datawhalechina/llm-universe</id>
    <link href="https://github.com/datawhalechina/llm-universe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;本项目是一个面向小白开发者的大模型应用开发教程，在线阅读地址：https://datawhalechina.github.io/llm-universe/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;动手学大模型应用开发&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/datawhalechina/llm-universe/main/figures/logo.png&#34; width=&#34;1000&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;项目简介&lt;/h2&gt; &#xA;&lt;p&gt;本项目是一个面向小白开发者的大模型应用开发教程，旨在结合个人知识库助手项目，通过一个课程完成大模型开发的重点入门，主要内容包括：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;大模型简介，何为大模型、大模型特点是什么、LangChain 是什么，针对小白开发者的简单介绍；&lt;/li&gt; &#xA; &lt;li&gt;如何调用大模型 API，本节介绍了国内外知名大模型产品 API 的多种调用方式，包括调用原生 API、封装为 LangChain LLM、封装为 Fastapi 等调用方式，同时将包括百度文心、讯飞星火、智谱AI等多种大模型 API 进行了统一形式封装；&lt;/li&gt; &#xA; &lt;li&gt;大模型开发流程及架构，大模型应用开发的基本流程、一般思想和本项目的架构分析；&lt;/li&gt; &#xA; &lt;li&gt;数据库搭建，不同类型知识库文档的加载、处理，向量数据库的搭建；&lt;/li&gt; &#xA; &lt;li&gt;Prompt 设计，如何设计 Prompt 来让大模型完成特定任务，Prompt Engineering 的原则和技巧有哪些；&lt;/li&gt; &#xA; &lt;li&gt;验证迭代，大模型开发如何实现验证迭代，一般的评估方法有什么；&lt;/li&gt; &#xA; &lt;li&gt;前后端开发，如何使用 Gradio、FastAPI 等框架快速开发大模型 Demo，展示应用能力。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;目录结构说明：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;notebook：教程源码，可运行的 Notebook，更新频率最高，更新速度最快。&#xA;docs：在线阅读版本，基于 notebook 源码订正。&#xA;figures：图片文件。&#xA;data_base：知识库文件和持久化向量数据库的地址。&#xA;project：个人知识库助手项目代码。&#xA;requirements.txt：环境依赖，请务必使用一致的版本号，避免版本更新带来的影响。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;项目意义&lt;/h2&gt; &#xA;&lt;p&gt;LLM 正逐步成为信息世界的新革命力量，其通过强大的自然语言理解、自然语言生成能力，为开发者提供了新的、更强大的应用开发选择。随着国内外井喷式的 LLM API 服务开放，如何基于 LLM API 快速、便捷地开发具备更强能力、集成 LLM 的应用，开始成为开发者的一项重要技能。&lt;/p&gt; &#xA;&lt;p&gt;目前，关于 LLM 的介绍以及零散的 LLM 开发技能课程已有不少，但质量参差不齐，且没有很好地整合，开发者需要搜索大量教程并阅读大量相关性不强、必要性较低的内容，才能初步掌握大模型开发的必备技能，学习效率低，学习门槛也较高。&lt;/p&gt; &#xA;&lt;p&gt;本项目从实践出发，结合最常见、通用的个人知识库助手项目，深入浅出逐步拆解 LLM 开发的一般流程、步骤，旨在帮助没有算法基础的小白通过一个课程完成大模型开发的基础入门。同时，我们也对项目本身做了清晰、全面的逐层规划及封装，实现了不同 LLM API 到项目的统一整合，帮助开发者能够自由、统一调用不同 LLM，充分降低学习门槛。&lt;/p&gt; &#xA;&lt;h2&gt;项目受众&lt;/h2&gt; &#xA;&lt;p&gt;所有具备基础 Python 能力，想要掌握 LLM 应用开发技能的开发者。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;本项目对学习者的人工智能基础、算法基础没有任何要求，仅需要掌握基本 Python 语法、掌握初级 Python 开发技能即可。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;本项目对本地硬件基本没有要求，不需要 GPU 环境，个人电脑及服务器均可用于学习。&lt;/p&gt; &#xA;&lt;h2&gt;项目亮点&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;充分面向实践，动手学习大模型开发。相较于其他从理论入手、与实践代差较大的类似教程，本教程基于具有通用性的个人知识库助手项目打造，将普适的大模型开发理念融合在项目实践中，帮助学习者通过动手搭建个人项目来掌握大模型开发技能。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;从零开始，全面又简短的大模型教程。本项目针对个人知识库助手项目，对相关大模型开发理论、概念和基本技能进行了项目主导的重构，删去不需要理解的底层原理和算法细节，涵盖所有大模型开发的核心技能。教程整体时长在数小时之内，但学习完本教程，可以掌握基础大模型开发的所有核心技能。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;兼具统一性与拓展性。本项目对 GPT、百度文心、讯飞星火、智谱GLM 等国内外主要 LLM API 进行了统一封装，支持一键调用不同的 LLM，帮助开发者将更多的精力放在学习应用与模型本身的优化上，而不需要花时间在繁琐的调用细节上；同时，本教程拟上线 &lt;a href=&#34;https://1aigc.cn/&#34;&gt;奇想星球 | AIGC共创社区平台&lt;/a&gt;，支持学习者自定义项目为本教程增加拓展内容，具备充分的拓展性。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;在线阅读地址&lt;/h2&gt; &#xA;&lt;p&gt;在线阅读地址：&lt;a href=&#34;https://datawhalechina.github.io/llm-universe/#/&#34;&gt;动手学大模型应用开发&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;内容大纲&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;思维导图：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/datawhalechina/llm-universe/main/figures/mind.png&#34; width=&#34;1000&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;strong&gt;目录：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;第一章 大模型简介 @徐虎&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;什么是大模型&lt;/li&gt; &#xA; &lt;li&gt;大模型的能力、特点&lt;/li&gt; &#xA; &lt;li&gt;常见大模型&lt;/li&gt; &#xA; &lt;li&gt;什么是 LangChain&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;第二章 调用大模型 API @邹雨衡&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;基本概念&lt;/li&gt; &#xA; &lt;li&gt;调用 ChatGPT&lt;/li&gt; &#xA; &lt;li&gt;调用百度文心&lt;/li&gt; &#xA; &lt;li&gt;调用讯飞星火&lt;/li&gt; &#xA; &lt;li&gt;调用智谱GLM&lt;/li&gt; &#xA; &lt;li&gt;总结&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;第三章 大模型开发流程及架构 @邹雨衡&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;大模型一般开发流程简介&lt;/li&gt; &#xA; &lt;li&gt;个人知识库助手项目流程简析&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;第四章 数据库搭建 @高立业&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;知识库文档处理&lt;/li&gt; &#xA; &lt;li&gt;向量数据库简介及使用&lt;/li&gt; &#xA; &lt;li&gt;构建项目数据库&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;第五章 Prompt 设计 @徐虎&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Prompt 设计的原则及技巧&lt;/li&gt; &#xA; &lt;li&gt;基于问答助手的 Prompt 构建&lt;/li&gt; &#xA; &lt;li&gt;添加历史对话功能&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;第六章 验证迭代 @邹雨衡&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;验证迭代的一般思路&lt;/li&gt; &#xA; &lt;li&gt;解决 Bad Case&lt;/li&gt; &#xA; &lt;li&gt;大模型评估方法&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;第七章 前后端搭建 @高立业&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Gradio 简介与页面搭建&lt;/li&gt; &#xA; &lt;li&gt;FastAPI 进行前后端分离&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;第八章 总结及拓展 @邹雨衡&lt;/p&gt; &#xA;&lt;h2&gt;致谢&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;核心贡献者&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/logan-zou&#34;&gt;邹雨衡-项目负责人&lt;/a&gt;（Datawhale成员-对外经济贸易大学研究生）&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xuhu0115&#34;&gt;徐虎-内容创作者&lt;/a&gt;（Datawhale成员）&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/0-yy-0&#34;&gt;高立业-内容创作者&lt;/a&gt;（DataWhale成员-算法工程师）&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/2951121599&#34;&gt;崔腾松-项目支持者&lt;/a&gt;（Datawhale成员-奇想星球联合发起人）&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JuneYaooo&#34;&gt;June-项目支持者&lt;/a&gt;（Datawhale成员-奇想星球联合发起人）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;其他&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;特别感谢 &lt;a href=&#34;https://github.com/Sm1les&#34;&gt;@Sm1les&lt;/a&gt;、&lt;a href=&#34;https://github.com/LSGOMYP&#34;&gt;@LSGOMYP&lt;/a&gt; 对本项目的帮助与支持；&lt;/li&gt; &#xA; &lt;li&gt;特别感谢&lt;a href=&#34;https://1aigc.cn/&#34;&gt;奇想星球 | AIGC共创社区平台&lt;/a&gt;提供的支持，欢迎大家关注；&lt;/li&gt; &#xA; &lt;li&gt;如果有任何想法可以联系我们 DataWhale 也欢迎大家多多提出 issue；&lt;/li&gt; &#xA; &lt;li&gt;特别感谢以下为教程做出贡献的同学！&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;a href=&#34;https://github.com/datawhalechina/llm-universe/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=datawhalechina/llm-universe&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Made with &lt;a href=&#34;https://contrib.rocks&#34;&gt;contrib.rocks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#datawhalechina/llm-universe&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=datawhalechina/llm-universe&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>digitalinnovationone/dio-lab-open-source</title>
    <updated>2023-11-26T01:53:09Z</updated>
    <id>tag:github.com,2023-11-26:/digitalinnovationone/dio-lab-open-source</id>
    <link href="https://github.com/digitalinnovationone/dio-lab-open-source" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⚠LEIA A ISSUE FIXADA! Repositório do lab Contribuindo em um Projeto Open Source no GitHub da Digital Innovation One.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt; &lt;a href=&#34;https://www.dio.me/&#34;&gt; &lt;img align=&#34;center&#34; width=&#34;40px&#34; src=&#34;https://hermes.digitalinnovation.one/assets/diome/logo-minimized.png&#34;&gt;&lt;/a&gt; &lt;span&gt; Contribuindo em um Projeto Open Source no GitHub&lt;/span&gt; &lt;/h1&gt; &#xA;&lt;p&gt;Repositório desenvolvido para fins didáticos, com a disponibilização de materiais de apoio para o lab &lt;strong&gt;Contribuindo em um Projeto Open Source no GitHub&lt;/strong&gt; da &lt;a href=&#34;https://www.dio.me/&#34;&gt;Digital Innovation One&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://web.dio.me/lab/desafio-de-projeto-contribuindo-em-um-projeto-open-source-no-github/learning/913f26fd-1018-4643-b59a-6356ea77dc2e&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E2%96%B6-000?style=for-the-badge&amp;amp;logo=movie&amp;amp;logoColor=E94D5F&#34; alt=&#34;Link do Lab&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://web.dio.me/lab/desafio-de-projeto-contribuindo-em-um-projeto-open-source-no-github/learning/913f26fd-1018-4643-b59a-6356ea77dc2e&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Acesse%20o%20Lab%20na%20Plataforma-E94D5F?style=for-the-badge&#34; alt=&#34;Link do Lab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Objetivo 🎯&lt;/h2&gt; &#xA;&lt;p&gt;Aprender o básico sobre contribuição no GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;Ferramentas 🛠️&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.github.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/GitHub-000?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=30A3DC&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://git-scm.com/doc&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Git-000?style=for-the-badge&amp;amp;logo=git&amp;amp;logoColor=E94D5F&#34; alt=&#34;Git&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Percurso&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr align=&#34;left&#34;&gt; &#xA;   &lt;th&gt;Nº&lt;/th&gt; &#xA;   &lt;th&gt;Etapas&lt;/th&gt; &#xA;   &lt;th&gt;Materiais de Apoio&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody align=&#34;left&#34;&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;01&lt;/td&gt; &#xA;   &lt;td&gt;Introdução ao Lab&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Material de Apoio&#34; src=&#34;https://img.shields.io/badge/Ver%20Material-30A3DC?style=for-the-badge&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;02&lt;/td&gt; &#xA;   &lt;td&gt;Formas de Contribuir num Projeto Open Source&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Material de Apoio&#34; src=&#34;https://img.shields.io/badge/Ver%20Material-E94D5F?style=for-the-badge&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;03&lt;/td&gt; &#xA;   &lt;td&gt;Desenvolvendo e Enviando uma Contribuição&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Material de Apoio&#34; src=&#34;https://img.shields.io/badge/Ver%20Material-30A3DC?style=for-the-badge&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;04&lt;/td&gt; &#xA;   &lt;td&gt;Dicas e Materiais de Apoio&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Material de Apoio&#34; src=&#34;https://img.shields.io/badge/Ver%20Material-E94D5F?style=for-the-badge&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA; &lt;tfoot&gt;&lt;/tfoot&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Desafio: Profile README&lt;/h2&gt; &#xA;&lt;p&gt;Contribua no diretório &#34;Community&#34;, criando um Profile README contendo informações sobre você que deseje compartilhar com a comunidade. Para isso, você pode inserir: badges indicando suas habilidades; cards com suas estatísticas no GitHub e projetos que criou, colaborou ou que deseje que outras pessoas colaborem. Além disso, você pode inserir também links para seus desafios de projeto e artigos na plataforma da &lt;a href=&#34;https://www.dio.me/&#34;&gt;Digital Innovation One&lt;/a&gt;. &lt;br&gt; Inspire-se consultando os exemplos na pasta &lt;a href=&#34;https://github.com/digitalinnovationone/dio-lab-open-source/tree/main/community&#34;&gt;&lt;code&gt;community&lt;/code&gt;&lt;/a&gt;, confira alguns utilitários na pasta &lt;a href=&#34;https://github.com/digitalinnovationone/dio-lab-open-source/tree/main/utils&#34;&gt;&lt;code&gt;utils&lt;/code&gt;&lt;/a&gt; e use sua criatividade para criar o seu 😊💙.&lt;/p&gt; &#xA;&lt;h3&gt;Instruções (PT/BR)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Faça um &lt;strong&gt;Fork&lt;/strong&gt; deste repositório;&lt;/li&gt; &#xA; &lt;li&gt;Clone localmente: &lt;code&gt;git clone https://github.com/SEU_USERNAME/dio-lab-open-source.git&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Adicione o remote upstream para manter seu repositório local atualizado. Por exemplo: &lt;code&gt;git remote add upstream https://github.com/digitalinnovationone/dio-lab-open-source.git&lt;/code&gt;; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Utilize o comando &lt;code&gt;git pull upstream main&lt;/code&gt; para baixar e mesclar as alterações no seu repositório local com base na branch &lt;code&gt;main&lt;/code&gt; deste repositório original de onde você fez o fork, ou &lt;code&gt;git fetch upstream main&lt;/code&gt; para baixar sem mesclar. Veja mais em: &lt;a href=&#34;https://github.com/digitalinnovationone/dio-curso-git-github/raw/main/materiais-de-apoio/03-primeiros-passos-com-git-e-github.md&#34;&gt;Primeiros Passos com Git e GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Crie/Referêncie uma nova &lt;strong&gt;branch&lt;/strong&gt; e nomeie como &lt;code&gt;feat/community/SEU_USERNAME&lt;/code&gt;: &lt;code&gt;git checkout -b feat/community/SEU_USERNAME&lt;/code&gt;; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Exemplo: &lt;code&gt;git checkout -b feat/community/elidianaandrade&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Dentro da pasta &lt;a href=&#34;https://github.com/digitalinnovationone/dio-lab-open-source/tree/main/community&#34;&gt;&lt;code&gt;community&lt;/code&gt;&lt;/a&gt;, crie um arquivo em Markdown (extensão &lt;code&gt;.md&lt;/code&gt;) e nomeie com o mesmo nome do seu usuário no GitHub; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Exemplo: &lt;code&gt;elidianaandrade.md&lt;/code&gt; &lt;br&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Desenvolva o seu perfil. Para isso, você pode ver exemplos na pasta &lt;a href=&#34;https://github.com/digitalinnovationone/dio-lab-open-source/tree/main/community&#34;&gt;&lt;code&gt;community&lt;/code&gt;&lt;/a&gt; e adicionar alguns dos utilitários presentes na pasta &lt;a href=&#34;https://github.com/digitalinnovationone/dio-lab-open-source/tree/main/utils&#34;&gt;&lt;code&gt;utils&lt;/code&gt;&lt;/a&gt;; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Observação:&lt;/strong&gt; Use os outros exemplos como inspiração e não cópia.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Adicione suas alterações a &#34;staging area&#34; com o comando &lt;code&gt;git add community/SEU_USERNAME.md&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Crie um commit e adicione a mensagem indicando a adição do seu perfil &lt;code&gt;git commit -m&#34;feat: add SEU_USERNAME profile&#34;&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Envie as alterações para o seu repositório remoto &lt;code&gt;git push origin feat/community/SEU_USERNAME&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Crie um &lt;strong&gt;Pull Request&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Instructions (EN/US)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fork&lt;/strong&gt; this repository;&lt;/li&gt; &#xA; &lt;li&gt;Clone locally: &lt;code&gt;git clone https://github.com/YOUR_USERNAME/dio-lab-open-source.git&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Add the upstream remote to keep your local repository updated. For instance: &lt;code&gt;git remote add upstream https://github.com/digitalinnovationone/dio-lab-open-source.git&lt;/code&gt;; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Use the command &lt;code&gt;git pull upstream main&lt;/code&gt; to download and merge the changes in your local repository based on the &lt;code&gt;main&lt;/code&gt; branch of this original repository from which you forked, or &lt;code&gt;git fetch upstream main&lt;/code&gt; to download without merging. Learn more at: &lt;a href=&#34;https://github.com/digitalinnovationone/dio-curso-git-github/raw/main/materiais-de-apoio/03-primeiros-passos-com-git-e-github.md&#34;&gt;Getting Started with Git and GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create/Reference a new &lt;strong&gt;branch&lt;/strong&gt; and name it &lt;code&gt;feat/community/YOUR_USERNAME&lt;/code&gt;: &lt;code&gt;git checkout -b feat/community/YOUR_USERNAME&lt;/code&gt;; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Example: &lt;code&gt;git checkout -b feat/community/elidianaandrade&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Inside the &lt;a href=&#34;https://github.com/digitalinnovationone/dio-lab-open-source/tree/main/community&#34;&gt;&lt;code&gt;community&lt;/code&gt;&lt;/a&gt; folder, create a Markdown file (extension &lt;code&gt;.md&lt;/code&gt;) and name it after your GitHub username; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Example: &lt;code&gt;elidianaandrade.md&lt;/code&gt; &lt;br&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Develop your profile: For that, you can see examples in the &lt;a href=&#34;https://github.com/digitalinnovationone/dio-lab-open-source/tree/main/community&#34;&gt;&lt;code&gt;community&lt;/code&gt;&lt;/a&gt; folder and add some of the utilities available in the &lt;a href=&#34;https://github.com/digitalinnovationone/dio-lab-open-source/tree/main/utils&#34;&gt;&lt;code&gt;utils&lt;/code&gt;&lt;/a&gt; folder; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Use the other examples as inspiration, not as a copy.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Add your changes to the &#34;staging area&#34; with the command &lt;code&gt;git add community/YOUR_USERNAME.md&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Create a commit and add a message indicating the addition of your profile &lt;code&gt;git commit -m&#34;feat: add YOUR_USERNAME profile&#34;&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Push the changes to your remote repository &lt;code&gt;git push origin feat/community/YOUR_USERNAME&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;strong&gt;Pull Request&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Instrucciones (ES/ES)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Haz un &lt;strong&gt;Fork&lt;/strong&gt; de este repositorio;&lt;/li&gt; &#xA; &lt;li&gt;Clona localmente: &lt;code&gt;git clone https://github.com/TU_USERNAME/dio-lab-open-source.git&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Añade el remote upstream para mantener tu repositorio local actualizado. Por ejemplo: &lt;code&gt;git remote add upstream https://github.com/digitalinnovationone/dio-lab-open-source.git&lt;/code&gt;; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Usa el comando &lt;code&gt;git pull upstream main&lt;/code&gt; para descargar y fusionar los cambios en tu repositorio local basado en la rama &lt;code&gt;main&lt;/code&gt; de este repositorio original del cual hiciste el fork, o &lt;code&gt;git fetch upstream main&lt;/code&gt; para descargar sin fusionar. Aprende más en: &lt;a href=&#34;https://github.com/digitalinnovationone/dio-curso-git-github/raw/main/materiais-de-apoio/03-primeiros-passos-com-git-e-github.md&#34;&gt;Primeros Pasos con Git y GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Crea/Referencia una nueva &lt;strong&gt;branch&lt;/strong&gt; y nómbrala &lt;code&gt;feat/community/TU_USERNAME&lt;/code&gt;: &lt;code&gt;git checkout -b feat/community/TU_USERNAME&lt;/code&gt;; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Ejemplo: &lt;code&gt;git checkout -b feat/community/elidianaandrade&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Dentro de la carpeta &lt;a href=&#34;https://github.com/digitalinnovationone/dio-lab-open-source/tree/main/community&#34;&gt;&lt;code&gt;community&lt;/code&gt;&lt;/a&gt;, crea un archivo en Markdown (extensión &lt;code&gt;.md&lt;/code&gt;) y nómbralo con el mismo nombre de tu usuario en GitHub; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Ejemplo: &lt;code&gt;elidianaandrade.md&lt;/code&gt; &lt;br&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Desarrolla tu perfil. Para eso, puedes ver ejemplos en la carpeta &lt;a href=&#34;https://github.com/digitalinnovationone/dio-lab-open-source/tree/main/community&#34;&gt;&lt;code&gt;community&lt;/code&gt;&lt;/a&gt; y añadir algunas de las utilidades presentes en la carpeta &lt;a href=&#34;https://github.com/digitalinnovationone/dio-lab-open-source/tree/main/utils&#34;&gt;&lt;code&gt;utils&lt;/code&gt;&lt;/a&gt;; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Nota:&lt;/strong&gt; Usa los otros ejemplos como inspiración y no como copia.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;Agrega tus cambios al &#34;área de preparación&#34; con el comando &lt;code&gt;git add community/TU_USERNAME.md&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Crea un commit y añade un mensaje indicando la adición de tu perfil &lt;code&gt;git commit -m&#34;feat: add TU_USERNAME profile&#34;&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Envía los cambios a tu repositorio remoto &lt;code&gt;git push origin feat/community/TU_USERNAME&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Crea un &lt;strong&gt;Pull Request&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Utilitários&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/digitalinnovationone/dio-lab-open-source/raw/main/utils/badges/badges.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Badges-30A3DC?style=for-the-badge&#34; alt=&#34;Badges&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/digitalinnovationone/dio-lab-open-source/raw/main/utils/cards/github-stats.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Card%20Stats-E94D5F?style=for-the-badge&#34; alt=&#34;Card Stats&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/digitalinnovationone/dio-lab-open-source/raw/main/utils/cards/github-streak-stats.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Card%20Streak%20States-30A3DC?style=for-the-badge&#34; alt=&#34;Badges&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contribua&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/digitalinnovationone/dio-lab-open-source/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/digitalinnovationone/dio-lab-open-source?style=social&#34; alt=&#34;Star&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/digitalinnovationone/dio-lab-open-source/forks&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/digitalinnovationone/dio-lab-open-source?style=social&#34; alt=&#34;Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/digitalinnovationone/dio-lab-open-source/issues/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/digitalinnovationone/dio-lab-open-source?style=social&#34; alt=&#34;GitHub Issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Este é um projeto feito para a comunidade, então sinta-se livre para contribuir. Algumas formas de contribuição além do seu exemplo de Profile README, é inserir outros utilitários na pasta &lt;a href=&#34;https://github.com/elidianaandrade/dio-lab-open-source/tree/main/utils&#34;&gt;&lt;code&gt;utils&lt;/code&gt;&lt;/a&gt;, ou melhorar a página de pesquisa dos READMEs fazendo modificações nos arquivos da pasta &lt;a href=&#34;https://github.com/elidianaandrade/dio-lab-open-source/tree/main/docs&#34;&gt;&lt;code&gt;docs&lt;/code&gt;&lt;/a&gt;. &lt;br&gt; Além disso, você também pode contribuir:&lt;/p&gt; &#xA;&lt;p&gt;⚠️ Resolvendo, respondendo ou indicando &lt;strong&gt;issues&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;⭐ Adicionando aos favoritos (&lt;strong&gt;star&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;Membros da comunidade que já contribuiram:&lt;/h3&gt; &#xA;&lt;a href=&#34;https://github.com/elidianaandrade/dio-lab-open-source/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=elidianaandrade/dio-lab-open-source&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; Feito com 💙 por &#xA; &lt;a href=&#34;https://github.com/elidianaandrade&#34;&gt;Eli&lt;/a&gt;.&#xA;&lt;/div&gt;</summary>
  </entry>
</feed>