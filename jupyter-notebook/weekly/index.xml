<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-12T01:41:02Z</updated>
  <subtitle>Weekly Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>harvardnlp/annotated-transformer</title>
    <updated>2024-05-12T01:41:02Z</updated>
    <id>tag:github.com,2024-05-12:/harvardnlp/annotated-transformer</id>
    <link href="https://github.com/harvardnlp/annotated-transformer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An annotated implementation of the Transformer paper.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Code for The Annotated Transformer blog post:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://nlp.seas.harvard.edu/annotated-transformer/&#34;&gt;http://nlp.seas.harvard.edu/annotated-transformer/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/harvardnlp/annotated-transformer/blob/master/AnnotatedTransformer.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/35882/166251887-9da909a9-660b-45a9-ae72-0aae89fb38d4.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Package Dependencies&lt;/h1&gt; &#xA;&lt;p&gt;Use &lt;code&gt;requirements.txt&lt;/code&gt; to install library dependencies with pip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Notebook Setup&lt;/h1&gt; &#xA;&lt;p&gt;The Annotated Transformer is created using &lt;a href=&#34;https://github.com/mwouts/jupytext&#34;&gt;jupytext&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Regular notebooks pose problems for source control - cell outputs end up in the repo history and diffs between commits are difficult to examine. Using jupytext, there is a python script (&lt;code&gt;.py&lt;/code&gt; file) that is automatically kept in sync with the notebook file by the jupytext plugin.&lt;/p&gt; &#xA;&lt;p&gt;The python script is committed contains all the cell content and can be used to generate the notebook file. The python script is a regular python source file, markdown sections are included using a standard comment convention, and outputs are not saved. The notebook itself is treated as a build artifact and is not commited to the git repository.&lt;/p&gt; &#xA;&lt;p&gt;Prior to using this repo, make sure jupytext is installed by following the &lt;a href=&#34;https://github.com/mwouts/jupytext/raw/main/docs/install.md&#34;&gt;installation instructions here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To produce the &lt;code&gt;.ipynb&lt;/code&gt; notebook file using the markdown source, run (under the hood, the &lt;code&gt;notebook&lt;/code&gt; build target simply runs &lt;code&gt;jupytext --to ipynb the_annotated_transformer.py&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make notebook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To produce the html version of the notebook, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;make html&lt;/code&gt; is just a shortcut for for generating the notebook with &lt;code&gt;jupytext --to ipynb the_annotated_transformer.py&lt;/code&gt; followed by using the jupyter nbconvert command to produce html using &lt;code&gt;jupyter nbconvert --to html the_annotated_transformer.ipynb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Formatting and Linting&lt;/h1&gt; &#xA;&lt;p&gt;To keep the code formatting clean, the annotated transformer git repo has a git action to check that the code conforms to &lt;a href=&#34;https://www.python.org/dev/peps/pep-0008/&#34;&gt;PEP8 coding standards&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To make this easier, there are two &lt;code&gt;Makefile&lt;/code&gt; build targets to run automatic code formatting with black and flake8.&lt;/p&gt; &#xA;&lt;p&gt;Be sure to &lt;a href=&#34;https://github.com/psf/black#installation&#34;&gt;install black&lt;/a&gt; and &lt;a href=&#34;https://flake8.pycqa.org/en/latest/&#34;&gt;flake8&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can then run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make black&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(or alternatively manually call black &lt;code&gt;black --line-length 79 the_annotated_transformer.py&lt;/code&gt;) to format code automatically using black and:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make flake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(or manually call flake8 `flake8 --show-source the_annotated_transformer.py) to check for PEP8 violations.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s recommended to run these two commands and fix any flake8 errors that arise, when submitting a PR, otherwise the github actions CI will report an error.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PatWalters/practical_cheminformatics_tutorials</title>
    <updated>2024-05-12T01:41:02Z</updated>
    <id>tag:github.com,2024-05-12:/PatWalters/practical_cheminformatics_tutorials</id>
    <link href="https://github.com/PatWalters/practical_cheminformatics_tutorials" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Practical Cheminformatics Tutorials&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;Practical Cheminformatics With Open Source Software&lt;/h3&gt; &#xA;&lt;p&gt;A set of Jupyter notebooks for learning Cheminformatics. The links below will open the tutorials on Google Colab. This way you can run the notebooks without having to install software on your computer. Of course, you can also just clone the repo and run these notebooks on your own computer.&lt;/p&gt; &#xA;&lt;h4&gt;Fundamentals&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/fundamentals/A_Whirlwind_Introduction_To_The_RDKit.ipynb&#34;&gt;A Whirlwind Introduction to the RDKit for Cheminformatics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/fundamentals/pandas_intro.ipynb&#34;&gt;A Brief Introduction to Pandas for Cheminformatics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/fundamentals/SMILES_tutorial.ipynb&#34;&gt;SMILES Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/fundamentals/SMARTS_tutorial.ipynb&#34;&gt;SMARTS Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/fundamentals/recursive_smarts.ipynb&#34;&gt;Recursive SMARTS Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/reaction/reaction_basics.ipynb&#34;&gt;Reaction Enumeration, the basics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/reaction/reaction_advanced.ipynb&#34;&gt;Reaction Enumeration, advanced&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/fundamentals/stereo_and_tautomers.ipynb&#34;&gt;Enumerating Stereoisomers and Tautomers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Using &lt;a href=&#34;https://datamol.io&#34;&gt;datamol&lt;/a&gt; and &lt;a href=&#34;https://datamol.io&#34;&gt;molfeat&lt;/a&gt; to Streamline Cheminformatics Workflows&lt;/h4&gt; &#xA;&lt;ol start=&#34;9&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/datamol/datamol_1.ipynb&#34;&gt;Data Manipulation, Descriptors and Clustering&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Clustering&lt;/h4&gt; &#xA;&lt;ol start=&#34;10&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/clustering/kmeans_clustering.ipynb&#34;&gt;K-Means Clustering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/clustering/taylor_butina_clustering.ipynb&#34;&gt;Taylor-Butina Clustering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/clustering/self_organizing_map.ipynb&#34;&gt;Self-Organizing Maps&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Misc Cheminformatics Analysis&lt;/h4&gt; &#xA;&lt;ol start=&#34;13&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/misc/ChEMBL_ring_system_analysis.ipynb&#34;&gt;ChEMBL Ring System Analysis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/misc/working_with_ChEMBL_drug_data.ipynb&#34;&gt;Working With Drug Data from the ChEMBL Database&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;SAR Analysis&lt;/h4&gt; &#xA;&lt;ol start=&#34;15&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/sar_analysis/find_scaffolds.ipynb&#34;&gt;Identifying Scaffolds&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/sar_analysis/R_group_analysis.ipynb&#34;&gt;R-group Analysis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/sar_analysis/positional_analogue_scanning.ipynb&#34;&gt;Positional Analogue Scanning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/sar_analysis/free_wilson.ipynb&#34;&gt;Free-Wilson Analysis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/sar_analysis/matched_molecular_pairs.ipynb&#34;&gt;Matched Molecular Pairs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/sar_analysis/matched_molecular_series.ipynb&#34;&gt;Matched Molecular Series&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Machine Learning Models&lt;/h4&gt; &#xA;&lt;ol start=&#34;21&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/ml_models/QSAR_in_8_lines.ipynb&#34;&gt;Build and Test a QSAR Model in 8 Lines of Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/ml_models/classification_model.ipynb&#34;&gt;Building a Classification Model&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/ml_models/comparing_classification_models.ipynb&#34;&gt;Comparing Classification Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/ml_models/regression_model.ipynb&#34;&gt;Building a Regression Model&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/ml_models/comparing_regression_models.ipynb&#34;&gt;Comparing Regression Models&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Active Learning&lt;/h3&gt; &#xA;&lt;ol start=&#34;26&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/active_learning/active_classification.ipynb&#34;&gt;Active Classification&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/active_learning/active_regression.ipynb&#34;&gt;Active Regression&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/PatWalters/practical_cheminformatics_tutorials/blob/main/active_learning/active_shape_search.ipynb&#34;&gt;Active Shape Search&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Additional topics will be added&lt;/h4&gt; &#xA;&lt;h3&gt;A Bit of History&lt;/h3&gt; &#xA;&lt;p&gt;These notebooks began as part of a two-day workshop I did at the University of Bonn in 2019. Since then, they have evolved, and additional notebooks have been added. Many of the notebooks started as posts on my blog, &lt;a href=&#34;https://practicalcheminformatics.blogspot.com/&#34;&gt;Practical Cheminformatics&lt;/a&gt;. I originally had everything running on Binder, but I found some capacity limits with larger groups and moved everything to Google Colab. I plan to continue adding to and revising these as long as people are interested.&lt;/p&gt; &#xA;&lt;h3&gt;Suggestions and Corrections Welcome&lt;/h3&gt; &#xA;&lt;p&gt;This is a work in progress. As you can see above, I&#39;m still working on a few notebooks. It&#39;s more than possible that these tutorials contain mistakes and/or typos. If you find something that should be corrected, please submit an issue or a PR. In addition, I&#39;m always looking to improve the text. Please let me know if aspects could be explained more clearly. I&#39;d also like to hear more about topics you&#39;d like to see covered. If you find these tutorials useful, please consider starring this repo.&lt;/p&gt; &#xA;&lt;h3&gt;Acknowledgements&lt;/h3&gt; &#xA;&lt;p&gt;These tutorials wouldn&#39;t be possible without the work of Greg Landrum, Brian Kelley, and the &lt;a href=&#34;https://www.rdkit.org/&#34;&gt;RDKit&lt;/a&gt; team, as well as Cédric Bouysset and his work on &lt;a href=&#34;https://github.com/cbouy/mols2grid&#34;&gt;mols2grid&lt;/a&gt;. Thanks to Noel O&#39;Boyle, Rafael Lameiro, and Jennifer HY Lin for helping to keep the notebooks up to date as the underlying software libraries evolve.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OpenGVLab/InternVL</title>
    <updated>2024-05-12T01:41:02Z</updated>
    <id>tag:github.com,2024-05-12:/OpenGVLab/InternVL</id>
    <link href="https://github.com/OpenGVLab/InternVL" rel="alternate"></link>
    <summary type="html">&lt;p&gt;[CVPR 2024 Oral] InternVL Family: A Pioneering Open-Source Alternative to GPT-4V. 接近GPT-4V表现的可商用开源模型&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img width=&#34;60&#34; alt=&#34;image&#34; src=&#34;https://github.com/OpenGVLab/InternVL/assets/8529570/5aa4cda8-b453-40a0-9336-17012b430ae8&#34;&gt; InternVL Family: Closing the Gap to Commercial Multimodal Models with Open-Source Suites —— A Pioneering Open-Source Alternative to GPT-4V&lt;/h1&gt; &#xA;&lt;p&gt;[&lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/BLOG.md&#34;&gt;Update Blog&lt;/a&gt;] [&lt;a href=&#34;https://arxiv.org/abs/2312.14238&#34;&gt;Paper&lt;/a&gt;] [&lt;a href=&#34;https://arxiv.org/abs/2404.16821&#34;&gt;InternVL 1.5 Technical Report&lt;/a&gt;] [&lt;a href=&#34;https://internvl.opengvlab.com/&#34;&gt;Chat Demo&lt;/a&gt;] &lt;a href=&#34;https://huggingface.co/spaces/OpenGVLab/InternVL&#34;&gt;[HuggingFace Demo]&lt;/a&gt; [&lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/#quick-start-with-huggingface&#34;&gt;Quick Start&lt;/a&gt;] [&lt;a href=&#34;https://zhuanlan.zhihu.com/p/675877376&#34;&gt;中文解读&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://trendshift.io/repositories/9803&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://trendshift.io/api/badge/repositories/9803&#34; alt=&#34;OpenGVLab%2FInternVL | Trendshift&#34; style=&#34;width: 250px; height: 55px;&#34; width=&#34;250&#34; height=&#34;55&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;News🚀🚀🚀&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/04/28&lt;/code&gt;: We release the INT8 version of InternVL-Chat-V1-5, see &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-5-Int8&#34;&gt;HF link&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/04/28&lt;/code&gt;: We achieve the SOTA performance (75.74) on the Infographics VQA benchmark, see &lt;a href=&#34;https://rrc.cvc.uab.es/?ch=17&amp;amp;com=evaluation&amp;amp;task=3&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/04/18&lt;/code&gt;: InternVL-Chat-V1.5 has been released at &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-5&#34;&gt;HF link&lt;/a&gt;, approaching the performance of GPT-4V and Gemini Pro on various benchmarks like MMMU, DocVQA, ChartQA, MathVista, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/02/27&lt;/code&gt;: InternVL is accepted by CVPR 2024! 🎉&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/02/24&lt;/code&gt;: InternVL-Chat models have been included in the &lt;a href=&#34;https://github.com/open-compass/VLMEvalKit&#34;&gt;VLMEvalKit&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/02/21&lt;/code&gt;: &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-2-Plus&#34;&gt;InternVL-Chat-V1.2-Plus&lt;/a&gt; achieves SOTA performance on MathVista (59.9), MMBench (83.8), and MMVP (58.7). See our &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/BLOG.md&#34;&gt;blog&lt;/a&gt; for more details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/02/12&lt;/code&gt;: InternVL-Chat-V1.2 has been released. It achieves 51.6 on MMMU val and 82.3 on MMBench test. For more details, please refer to our &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/BLOG.md&#34;&gt;blog&lt;/a&gt;, &lt;a href=&#34;https://github.com/OpenGVLab/InternVL/tree/main/internvl_chat#prepare-training-datasets&#34;&gt;SFT data&lt;/a&gt; or try our &lt;a href=&#34;https://internvl.opengvlab.com/&#34;&gt;demo&lt;/a&gt;. The model is now available on &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-2&#34;&gt;HuggingFace&lt;/a&gt;, and both training/evaluation data and scripts are open-sourced.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/02/04&lt;/code&gt;: &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-1&#34;&gt;InternVL-Chat-V1.1&lt;/a&gt; achieves 44.67% on &lt;a href=&#34;https://github.com/tsb0601/MMVP&#34;&gt;MMVP&lt;/a&gt;, higher than GPT-4V!&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/01/27&lt;/code&gt;: We release 448 resolution model, achieving 76.6 on MMBench dev, see &lt;a href=&#34;https://github.com/OpenGVLab/InternVL/tree/main/internvl_chat#-evaluation-chinese-models&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/01/24&lt;/code&gt;: InternVL-Chat-V1.1 is released, it supports Chinese and has stronger OCR capability, see &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-1&#34;&gt;here&lt;/a&gt; or try our &lt;a href=&#34;https://internvl.opengvlab.com/&#34;&gt;demo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/01/16&lt;/code&gt;: We release our &lt;a href=&#34;https://github.com/OpenGVLab/InternVL-MMDetSeg&#34;&gt;customized mmcv/mmsegmentation/mmdetection code&lt;/a&gt;, integrated with DeepSpeed, which can be used for training large-scale object detection and semantic segmentation models.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;How to install InternVL? &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/INSTALLATION.md&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;How to fine-tune InternVL? &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/internvl_chat/README.md&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;How to evaluate InternVL-Chat-V1-5? &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/document/how_to_evaluate_internvl_chat_1_5.md&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;How to evaluate InternVL-Chat-V1-5 using VLMEvalKit? (Recommend) &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/document/how_to_evaluate_internvl_chat_1_5_using_vlmevalkit.md&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;How to deploy a local demo? &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/document/how_to_deploy_a_local_demo.md&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;How to run InternVL 1.5-8bit with Nvidia V100 GPU? &lt;a href=&#34;https://github.com/OpenGVLab/InternVL/issues/144&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Inference Acceleration by LMDeploy &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/#inference-acceleration-by-lmdeploy&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compared with SOTA VLLMs&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img width=&#34;500&#34; alt=&#34;image&#34; src=&#34;https://github.com/OpenGVLab/InternVL/assets/23737120/38e8a632-229c-4b20-b7e1-77299dfc6cee&#34;&gt;&lt;/p&gt; &#xA;&lt;img width=&#34;1229&#34; alt=&#34;image&#34; src=&#34;https://github.com/OpenGVLab/InternVL/assets/23737120/e9065a58-86fa-47ef-be9a-eb734532e73f&#34;&gt; &#xA;&lt;img width=&#34;1229&#34; alt=&#34;image&#34; src=&#34;https://github.com/OpenGVLab/InternVL/assets/23737120/2b4f2978-36ea-4065-841d-3651c58955ed&#34;&gt; &#xA;&lt;h2&gt;What is InternVL?&lt;/h2&gt; &#xA;&lt;p&gt;InternVL scales up the ViT to &lt;em&gt;&lt;strong&gt;6B parameters&lt;/strong&gt;&lt;/em&gt; and aligns it with LLM.&lt;/p&gt; &#xA;&lt;h2&gt;Model Zoo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Vision Large Language Model&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;/th&gt; &#xA;   &lt;th&gt;Date&lt;/th&gt; &#xA;   &lt;th&gt;Download&lt;/th&gt; &#xA;   &lt;th&gt;Note&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL−Chat−V1.5-Int8&lt;/td&gt; &#xA;   &lt;td&gt;2024.04.28&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-5-Int8&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The INT8 version of InternVL-Chat-V1-5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL−Chat−V1.5&lt;/td&gt; &#xA;   &lt;td&gt;2024.04.18&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-5&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;support 4K image; super strong OCR; Approaching the performance of GPT-4V and Gemini Pro on various benchmarks like MMMU, DocVQA, ChartQA, MathVista, etc. (🔥new)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL−Chat−V1.2−Plus&lt;/td&gt; &#xA;   &lt;td&gt;2024.02.21&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-2-Plus&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;more SFT data and stronger&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL−Chat−V1.2&lt;/td&gt; &#xA;   &lt;td&gt;2024.02.11&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-2&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;scaling up LLM to 34B&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL−Chat−V1.1&lt;/td&gt; &#xA;   &lt;td&gt;2024.01.24&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-1&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;support Chinese and stronger OCR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL−Chat−19B−448px&lt;/td&gt; &#xA;   &lt;td&gt;2024.02.03&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-ViT-6B-Vicuna-13B-448px&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;448 resolution&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL−Chat−19B&lt;/td&gt; &#xA;   &lt;td&gt;2023.12.25&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-ViT-6B-Vicuna-13B&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;English multimodal dialogue&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL−Chat−13B&lt;/td&gt; &#xA;   &lt;td&gt;2023.12.25&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-ViT-6B-Vicuna-7B&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;English multimodal dialogue&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Vision-Language Foundation Model&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;/th&gt; &#xA;   &lt;th&gt;Date&lt;/th&gt; &#xA;   &lt;th&gt;Download&lt;/th&gt; &#xA;   &lt;th&gt;Note&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternViT−6B−448px−V1.5&lt;/td&gt; &#xA;   &lt;td&gt;2024.04.20&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternViT-6B-448px-V1-5&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;support dynamic resolution, super strong OCR (🔥new)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternViT−6B−448px−V1.2&lt;/td&gt; &#xA;   &lt;td&gt;2024.02.11&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternViT-6B-448px-V1-2&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;448 resolution&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternViT−6B−448px−V1.0&lt;/td&gt; &#xA;   &lt;td&gt;2024.01.30&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternViT-6B-448px-V1-0&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;448 resolution&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternViT−6B−224px&lt;/td&gt; &#xA;   &lt;td&gt;2023.12.22&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternViT-6B-224px&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;vision foundation model&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL−14B−224px&lt;/td&gt; &#xA;   &lt;td&gt;2023.12.22&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-14B-224px&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;vision-language foundation model&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;What can InternVL do?&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Visual Perception (click to expand)&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Linear-Probe Image Classification &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/classification#-evaluation&#34;&gt;[see details]&lt;/a&gt;&lt;/p&gt; &lt;p&gt;ViT-22B uses the private JFT-3B dataset.&lt;/p&gt; &#xA;   &lt;table&gt; &#xA;    &lt;thead&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;th&gt;method&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;#param&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-1K&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-ReaL&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-V2&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-A&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-R&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-Sketch&lt;/th&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/thead&gt; &#xA;    &lt;tbody&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;OpenCLIP-G&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;1.8B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;86.2&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;89.4&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;77.2&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;63.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;87.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;66.4&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;DINOv2-g&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;1.1B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;86.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;89.6&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;78.4&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;75.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;78.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;62.5&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;EVA-01-CLIP-g&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;1.1B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;86.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;89.3&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;77.4&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;70.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;87.7&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;63.1&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;MAWS-ViT-6.5B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;6.5B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;87.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;ViT-22B*&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;21.7B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;89.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;90.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;83.2&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;83.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;87.4&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;−&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternViT-6B (ours)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;5.9B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;88.2&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;90.4&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;79.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;77.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;89.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;69.1&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt; &#xA;   &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Semantic Segmentation &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/segmentation#-evaluation&#34;&gt;[see details]&lt;/a&gt;&lt;/p&gt; &#xA;   &lt;table&gt; &#xA;    &lt;thead&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;th&gt;method&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;decoder&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;#param (train/total)&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;crop size&lt;/th&gt; &#xA;      &lt;th&gt;mIoU&lt;/th&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/thead&gt; &#xA;    &lt;tbody&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;OpenCLIP-G (frozen)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;Linear&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;0.3M / 1.8B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;512&lt;/td&gt; &#xA;      &lt;td&gt;39.3&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;ViT-22B (frozen)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;Linear&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;0.9M / 21.7B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;504&lt;/td&gt; &#xA;      &lt;td&gt;34.6&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternViT-6B (frozen)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;Linear&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;0.5M / 5.9B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;504&lt;/td&gt; &#xA;      &lt;td&gt;47.2 (+12.6)&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;ViT-22B (frozen)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;UperNet&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;0.8B / 22.5B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;504&lt;/td&gt; &#xA;      &lt;td&gt;52.7&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternViT-6B (frozen)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;UperNet&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;0.4B / 6.3B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;504&lt;/td&gt; &#xA;      &lt;td&gt;54.9 (+2.2)&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;ViT-22B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;UperNet&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;22.5B / 22.5B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;504&lt;/td&gt; &#xA;      &lt;td&gt;55.3&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternViT-6B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;UperNet&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;6.3B / 6.3B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;504&lt;/td&gt; &#xA;      &lt;td&gt;58.9 (+3.6)&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt; &#xA;   &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Zero-Shot Image Classification &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/clip_benchmark#imagenet-variants-and-objectnet&#34;&gt;[see details]&lt;/a&gt;&lt;/p&gt; &#xA;   &lt;table&gt; &#xA;    &lt;thead&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;th&gt;method&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-1K&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-A&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-R&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-V2&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-Sketch&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;ObjectNet&lt;/th&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/thead&gt; &#xA;    &lt;tbody&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;OpenCLIP-G&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;80.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;69.3&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;92.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;73.6&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;68.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;73.0&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;EVA-02-CLIP-E+&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;82.0&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;82.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;94.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;75.7&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;71.6&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;79.6&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;ViT-22B*&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;85.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;90.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;96.0&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;80.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;−&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;87.6&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternVL-C (ours)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;83.2&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;83.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;95.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;77.3&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;73.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;80.6&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt; &#xA;   &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Multilingual Zero-Shot Image Classification &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/clip_benchmark#multilingual-imagenet-1k&#34;&gt;[see details]&lt;/a&gt;&lt;/p&gt; &lt;p&gt;EN: English, ZH: Chinese, JP: Japanese, Ar: Arabic, IT: Italian&lt;/p&gt; &#xA;   &lt;table&gt; &#xA;    &lt;thead&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;th&gt;method&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-1K (EN)&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-1K (ZH)&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-1K (JP)&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-1K (AR)&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-1K (IT)&lt;/th&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/thead&gt; &#xA;    &lt;tbody&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;Taiyi-CLIP-ViT-H&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;54.4&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;WuKong-ViT-L-G&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;57.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;CN-CLIP-ViT-H&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;59.6&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;AltCLIP-ViT-L&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;74.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;59.6&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;EVA-02-CLIP-E+&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;82.0&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;41.2&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;OpenCLIP-XLM-R-H&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;77.0&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;55.7&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;53.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;37.0&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;56.8&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternVL-C (ours)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;83.2&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;64.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;61.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;44.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;65.7&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt; &#xA;   &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Zero-Shot Video Classification [see details]&lt;/p&gt; &#xA;   &lt;table&gt; &#xA;    &lt;thead&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;th&gt;method&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;#frame&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;K400&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;K600&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;K700&lt;/th&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/thead&gt; &#xA;    &lt;tbody&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;OpenCLIP-G&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;65.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;66.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;59.2&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;EVA-02-CLIP-E+&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;69.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;69.3&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;63.4&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternVL-C (ours)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;71.0&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;71.3&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;65.7&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;ViCLIP&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;75.7&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;73.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;66.4&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternVL-C (ours)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;79.4&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;78.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;71.5&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt; &#xA;   &lt;/table&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Cross-Modal Retrieval (click to expand)&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;English Zero-Shot Image-Text Retrieval &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/clip_benchmark#flickr30k--coco&#34;&gt;[see details]&lt;/a&gt;&lt;/p&gt; &#xA;   &lt;table&gt; &#xA;    &lt;tbody&gt;&#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td rowspan=&#34;3&#34; align=&#34;left&#34;&gt;&lt;b&gt;model&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;6&#34; align=&#34;center&#34;&gt;&lt;b&gt;Flickr30K&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;6&#34; align=&#34;center&#34;&gt;&lt;b&gt;COCO&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td rowspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;avg&lt;/b&gt;&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td colspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;image-to-text&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;text-to-image&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;image-to-text&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;text-to-image&lt;/b&gt;&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;R@1&lt;/td&gt; &#xA;      &lt;td&gt;R@5&lt;/td&gt; &#xA;      &lt;td&gt;R@10&lt;/td&gt; &#xA;      &lt;td&gt;R@1&lt;/td&gt; &#xA;      &lt;td&gt;R@5&lt;/td&gt; &#xA;      &lt;td&gt;R@10&lt;/td&gt; &#xA;      &lt;td&gt;R@1&lt;/td&gt; &#xA;      &lt;td&gt;R@5&lt;/td&gt; &#xA;      &lt;td&gt;R@10&lt;/td&gt; &#xA;      &lt;td&gt;R@1&lt;/td&gt; &#xA;      &lt;td&gt;R@5&lt;/td&gt; &#xA;      &lt;td&gt;R@10&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td align=&#34;left&#34;&gt;OpenCLIP-G&lt;/td&gt; &#xA;      &lt;td&gt;92.9&lt;/td&gt; &#xA;      &lt;td&gt;99.3&lt;/td&gt; &#xA;      &lt;td&gt;99.8&lt;/td&gt; &#xA;      &lt;td&gt;79.5&lt;/td&gt; &#xA;      &lt;td&gt;95.0&lt;/td&gt; &#xA;      &lt;td&gt;97.1&lt;/td&gt; &#xA;      &lt;td&gt;67.3&lt;/td&gt; &#xA;      &lt;td&gt;86.9&lt;/td&gt; &#xA;      &lt;td&gt;92.6&lt;/td&gt; &#xA;      &lt;td&gt;51.4&lt;/td&gt; &#xA;      &lt;td&gt;74.9&lt;/td&gt; &#xA;      &lt;td&gt;83.0&lt;/td&gt; &#xA;      &lt;td&gt;85.0&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td align=&#34;left&#34;&gt;EVA-02-CLIP-E+&lt;/td&gt; &#xA;      &lt;td&gt;93.9&lt;/td&gt; &#xA;      &lt;td&gt;99.4&lt;/td&gt; &#xA;      &lt;td&gt;99.8&lt;/td&gt; &#xA;      &lt;td&gt;78.8&lt;/td&gt; &#xA;      &lt;td&gt;94.2&lt;/td&gt; &#xA;      &lt;td&gt;96.8&lt;/td&gt; &#xA;      &lt;td&gt;68.8&lt;/td&gt; &#xA;      &lt;td&gt;87.8&lt;/td&gt; &#xA;      &lt;td&gt;92.8&lt;/td&gt; &#xA;      &lt;td&gt;51.1&lt;/td&gt; &#xA;      &lt;td&gt;75.0&lt;/td&gt; &#xA;      &lt;td&gt;82.7&lt;/td&gt; &#xA;      &lt;td&gt;85.1&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td align=&#34;left&#34;&gt;EVA-CLIP-8B&lt;/td&gt; &#xA;      &lt;td&gt;95.6&lt;/td&gt; &#xA;      &lt;td&gt;99.6&lt;/td&gt; &#xA;      &lt;td&gt;99.9&lt;/td&gt; &#xA;      &lt;td&gt;80.8&lt;/td&gt; &#xA;      &lt;td&gt;95.5&lt;/td&gt; &#xA;      &lt;td&gt;97.6&lt;/td&gt; &#xA;      &lt;td&gt;70.3&lt;/td&gt; &#xA;      &lt;td&gt;89.3&lt;/td&gt; &#xA;      &lt;td&gt;93.9&lt;/td&gt; &#xA;      &lt;td&gt;53.0&lt;/td&gt; &#xA;      &lt;td&gt;76.0&lt;/td&gt; &#xA;      &lt;td&gt;83.4&lt;/td&gt; &#xA;      &lt;td&gt;86.2&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td align=&#34;left&#34;&gt;InternVL-C (ours)&lt;/td&gt; &#xA;      &lt;td&gt;94.7&lt;/td&gt; &#xA;      &lt;td&gt;99.6&lt;/td&gt; &#xA;      &lt;td&gt;99.9&lt;/td&gt; &#xA;      &lt;td&gt;81.7&lt;/td&gt; &#xA;      &lt;td&gt;96.0&lt;/td&gt; &#xA;      &lt;td&gt;98.2&lt;/td&gt; &#xA;      &lt;td&gt;70.6&lt;/td&gt; &#xA;      &lt;td&gt;89.0&lt;/td&gt; &#xA;      &lt;td&gt;93.5&lt;/td&gt; &#xA;      &lt;td&gt;54.1&lt;/td&gt; &#xA;      &lt;td&gt;77.3&lt;/td&gt; &#xA;      &lt;td&gt;84.6&lt;/td&gt; &#xA;      &lt;td&gt;86.6&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td align=&#34;left&#34;&gt;InternVL-G (ours)&lt;/td&gt; &#xA;      &lt;td&gt;95.7&lt;/td&gt; &#xA;      &lt;td&gt;99.7&lt;/td&gt; &#xA;      &lt;td&gt;99.9&lt;/td&gt; &#xA;      &lt;td&gt;85.0&lt;/td&gt; &#xA;      &lt;td&gt;97.0&lt;/td&gt; &#xA;      &lt;td&gt;98.6&lt;/td&gt; &#xA;      &lt;td&gt;74.9&lt;/td&gt; &#xA;      &lt;td&gt;91.3&lt;/td&gt; &#xA;      &lt;td&gt;95.2&lt;/td&gt; &#xA;      &lt;td&gt;58.6&lt;/td&gt; &#xA;      &lt;td&gt;81.3&lt;/td&gt; &#xA;      &lt;td&gt;88.0&lt;/td&gt; &#xA;      &lt;td&gt;88.8&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt;&#xA;   &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Chinese Zero-Shot Image-Text Retrieval &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/clip_benchmark#flickr30k-cn--coco-cn&#34;&gt;[see details]&lt;/a&gt;&lt;/p&gt; &#xA;   &lt;table&gt; &#xA;    &lt;tbody&gt;&#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td rowspan=&#34;3&#34; align=&#34;left&#34;&gt;&lt;b&gt;model&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;6&#34; align=&#34;center&#34;&gt;&lt;b&gt;Flickr30K-CN&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;6&#34; align=&#34;center&#34;&gt;&lt;b&gt;COCO-CN&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td rowspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;avg&lt;/b&gt;&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td colspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;image-to-text&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;text-to-image&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;image-to-text&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;text-to-image&lt;/b&gt;&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;R@1&lt;/td&gt; &#xA;      &lt;td&gt;R@5&lt;/td&gt; &#xA;      &lt;td&gt;R@10&lt;/td&gt; &#xA;      &lt;td&gt;R@1&lt;/td&gt; &#xA;      &lt;td&gt;R@5&lt;/td&gt; &#xA;      &lt;td&gt;R@10&lt;/td&gt; &#xA;      &lt;td&gt;R@1&lt;/td&gt; &#xA;      &lt;td&gt;R@5&lt;/td&gt; &#xA;      &lt;td&gt;R@10&lt;/td&gt; &#xA;      &lt;td&gt;R@1&lt;/td&gt; &#xA;      &lt;td&gt;R@5&lt;/td&gt; &#xA;      &lt;td&gt;R@10&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td align=&#34;left&#34;&gt;CN-CLIP-ViT-H&lt;/td&gt; &#xA;      &lt;td&gt;81.6&lt;/td&gt; &#xA;      &lt;td&gt;97.5&lt;/td&gt; &#xA;      &lt;td&gt;98.8&lt;/td&gt; &#xA;      &lt;td&gt;71.2&lt;/td&gt; &#xA;      &lt;td&gt;91.4&lt;/td&gt; &#xA;      &lt;td&gt;95.5&lt;/td&gt; &#xA;      &lt;td&gt;63.0&lt;/td&gt; &#xA;      &lt;td&gt;86.6&lt;/td&gt; &#xA;      &lt;td&gt;92.9&lt;/td&gt; &#xA;      &lt;td&gt;69.2&lt;/td&gt; &#xA;      &lt;td&gt;89.9&lt;/td&gt; &#xA;      &lt;td&gt;96.1&lt;/td&gt; &#xA;      &lt;td&gt;86.1&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td align=&#34;left&#34;&gt;OpenCLIP-XLM-R-H&lt;/td&gt; &#xA;      &lt;td&gt;86.1&lt;/td&gt; &#xA;      &lt;td&gt;97.5&lt;/td&gt; &#xA;      &lt;td&gt;99.2&lt;/td&gt; &#xA;      &lt;td&gt;71.0&lt;/td&gt; &#xA;      &lt;td&gt;90.5&lt;/td&gt; &#xA;      &lt;td&gt;94.9&lt;/td&gt; &#xA;      &lt;td&gt;70.0&lt;/td&gt; &#xA;      &lt;td&gt;91.5&lt;/td&gt; &#xA;      &lt;td&gt;97.0&lt;/td&gt; &#xA;      &lt;td&gt;66.1&lt;/td&gt; &#xA;      &lt;td&gt;90.8&lt;/td&gt; &#xA;      &lt;td&gt;96.0&lt;/td&gt; &#xA;      &lt;td&gt;87.6&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td align=&#34;left&#34;&gt;InternVL-C (ours)&lt;/td&gt; &#xA;      &lt;td&gt;90.3&lt;/td&gt; &#xA;      &lt;td&gt;98.8&lt;/td&gt; &#xA;      &lt;td&gt;99.7&lt;/td&gt; &#xA;      &lt;td&gt;75.1&lt;/td&gt; &#xA;      &lt;td&gt;92.9&lt;/td&gt; &#xA;      &lt;td&gt;96.4&lt;/td&gt; &#xA;      &lt;td&gt;68.8&lt;/td&gt; &#xA;      &lt;td&gt;92.0&lt;/td&gt; &#xA;      &lt;td&gt;96.7&lt;/td&gt; &#xA;      &lt;td&gt;68.9&lt;/td&gt; &#xA;      &lt;td&gt;91.9&lt;/td&gt; &#xA;      &lt;td&gt;96.5&lt;/td&gt; &#xA;      &lt;td&gt;89.0&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td align=&#34;left&#34;&gt;InternVL-G (ours)&lt;/td&gt; &#xA;      &lt;td&gt;92.9&lt;/td&gt; &#xA;      &lt;td&gt;99.4&lt;/td&gt; &#xA;      &lt;td&gt;99.8&lt;/td&gt; &#xA;      &lt;td&gt;77.7&lt;/td&gt; &#xA;      &lt;td&gt;94.8&lt;/td&gt; &#xA;      &lt;td&gt;97.3&lt;/td&gt; &#xA;      &lt;td&gt;71.4&lt;/td&gt; &#xA;      &lt;td&gt;93.9&lt;/td&gt; &#xA;      &lt;td&gt;97.7&lt;/td&gt; &#xA;      &lt;td&gt;73.8&lt;/td&gt; &#xA;      &lt;td&gt;94.4&lt;/td&gt; &#xA;      &lt;td&gt;98.1&lt;/td&gt; &#xA;      &lt;td&gt;90.9&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt;&#xA;   &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Multilingual Zero-Shot Image-Text Retrieval on XTD &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/clip_benchmark#xtd&#34;&gt;[see details]&lt;/a&gt;&lt;/p&gt; &#xA;   &lt;table&gt; &#xA;    &lt;thead&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;th&gt;method&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;EN&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;ES&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;FR&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;ZH&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IT&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;KO&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;RU&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;JP&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;average&lt;/th&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/thead&gt; &#xA;    &lt;tbody&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;AltCLIP&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;95.4&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;94.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;92.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;95.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;94.2&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;94.4&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;91.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;91.7&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;93.7&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;OpenCLIP-XLM-R-H&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;97.3&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;96.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;94.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;94.7&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;96.0&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;90.2&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;93.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;94.0&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;94.6&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternVL-C (ours)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;97.3&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;95.7&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;95.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;95.6&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;96.0&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;92.2&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;93.3&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;95.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;95.1&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternVL-G (ours)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;98.6&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;97.7&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;96.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;96.7&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;96.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;95.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;94.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;96.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;96.6&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt; &#xA;   &lt;/table&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Multimodal Dialogue (see &#34;Compared with SOTA VLLMs&#34;)&lt;/summary&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Quick Start with Huggingface&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;using InternViT-6B (click to expand)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from PIL import Image&#xA;from transformers import AutoModel, CLIPImageProcessor&#xA;&#xA;model = AutoModel.from_pretrained(&#xA;    &#39;OpenGVLab/InternViT-6B-224px&#39;,&#xA;    torch_dtype=torch.bfloat16,&#xA;    low_cpu_mem_usage=True,&#xA;    trust_remote_code=True).cuda().eval()&#xA;&#xA;image = Image.open(&#39;./examples/image1.jpg&#39;).convert(&#39;RGB&#39;)&#xA;&#xA;image_processor = CLIPImageProcessor.from_pretrained(&#39;OpenGVLab/InternViT-6B-224px&#39;)&#xA;&#xA;pixel_values = image_processor(images=image, return_tensors=&#39;pt&#39;).pixel_values&#xA;pixel_values = pixel_values.to(torch.bfloat16).cuda()&#xA;&#xA;outputs = model(pixel_values)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;using InternVL-C(ontrastive) and InternVL-G(enerative) (click to expand)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from PIL import Image&#xA;from transformers import AutoModel, CLIPImageProcessor&#xA;from transformers import AutoTokenizer&#xA;&#xA;&#xA;model = AutoModel.from_pretrained(&#xA;    &#39;OpenGVLab/InternVL-14B-224px&#39;,&#xA;    torch_dtype=torch.bfloat16,&#xA;    low_cpu_mem_usage=True,&#xA;    trust_remote_code=True).cuda().eval()&#xA;&#xA;image_processor = CLIPImageProcessor.from_pretrained(&#39;OpenGVLab/InternVL-14B-224px&#39;)&#xA;&#xA;tokenizer = AutoTokenizer.from_pretrained(&#xA;    &#39;OpenGVLab/InternVL-14B-224px&#39;, use_fast=False, add_eos_token=True)&#xA;tokenizer.pad_token_id = 0  # set pad_token_id to 0&#xA;&#xA;images = [&#xA;    Image.open(&#39;./examples/image1.jpg&#39;).convert(&#39;RGB&#39;),&#xA;    Image.open(&#39;./examples/image2.jpg&#39;).convert(&#39;RGB&#39;),&#xA;    Image.open(&#39;./examples/image3.jpg&#39;).convert(&#39;RGB&#39;)&#xA;]&#xA;prefix = &#39;summarize:&#39;&#xA;texts = [&#xA;    prefix + &#39;a photo of a red panda&#39;,  # English&#xA;    prefix + &#39;一张熊猫的照片&#39;,  # Chinese&#xA;    prefix + &#39;二匹の猫の写真&#39;  # Japanese&#xA;]&#xA;&#xA;pixel_values = image_processor(images=images, return_tensors=&#39;pt&#39;).pixel_values&#xA;pixel_values = pixel_values.to(torch.bfloat16).cuda()&#xA;input_ids = tokenizer(texts, return_tensors=&#39;pt&#39;, max_length=80,&#xA;                      truncation=True, padding=&#39;max_length&#39;).input_ids.cuda()&#xA;&#xA;# InternVL-C&#xA;logits_per_image, logits_per_text = model(&#xA;    image=pixel_values, text=input_ids, mode=&#39;InternVL-C&#39;)&#xA;probs = logits_per_image.softmax(dim=-1)&#xA;# tensor([[9.9609e-01, 5.2185e-03, 6.0070e-08],&#xA;#         [2.2949e-02, 9.7656e-01, 5.9903e-06],&#xA;#         [3.2932e-06, 7.4863e-05, 1.0000e+00]], device=&#39;cuda:0&#39;,&#xA;#        dtype=torch.bfloat16, grad_fn=&amp;lt;SoftmaxBackward0&amp;gt;)&#xA;&#xA;# InternVL-G&#xA;logits_per_image, logits_per_text = model(&#xA;    image=pixel_values, text=input_ids, mode=&#39;InternVL-G&#39;)&#xA;probs = logits_per_image.softmax(dim=-1)&#xA;# tensor([[9.9609e-01, 3.1738e-03, 3.6322e-08],&#xA;#         [8.6060e-03, 9.9219e-01, 2.8759e-06],&#xA;#         [1.7583e-06, 3.1233e-05, 1.0000e+00]], device=&#39;cuda:0&#39;,&#xA;#        dtype=torch.bfloat16, grad_fn=&amp;lt;SoftmaxBackward0&amp;gt;)&#xA;&#xA;# please set add_eos_token to False for generation&#xA;tokenizer.add_eos_token = False&#xA;image = Image.open(&#39;./examples/image1.jpg&#39;).convert(&#39;RGB&#39;)&#xA;pixel_values = image_processor(images=image, return_tensors=&#39;pt&#39;).pixel_values&#xA;pixel_values = pixel_values.to(torch.bfloat16).cuda()&#xA;&#xA;tokenized = tokenizer(&#34;English caption:&#34;, return_tensors=&#39;pt&#39;)&#xA;pred = model.generate(&#xA;    pixel_values=pixel_values,&#xA;    input_ids=tokenized.input_ids.cuda(),&#xA;    attention_mask=tokenized.attention_mask.cuda(),&#xA;    num_beams=5,&#xA;    min_new_tokens=8,&#xA;)&#xA;caption = tokenizer.decode(pred[0].cpu(), skip_special_tokens=True).strip()&#xA;# English caption: a red panda sitting on top of a wooden platform&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;using InternVL-Chat (click to expand)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from transformers import AutoTokenizer, AutoModel&#xA;import torch&#xA;import torchvision.transforms as T&#xA;from PIL import Image&#xA;&#xA;from torchvision.transforms.functional import InterpolationMode&#xA;&#xA;&#xA;IMAGENET_MEAN = (0.485, 0.456, 0.406)&#xA;IMAGENET_STD = (0.229, 0.224, 0.225)&#xA;&#xA;&#xA;def build_transform(input_size):&#xA;    MEAN, STD = IMAGENET_MEAN, IMAGENET_STD&#xA;    transform = T.Compose([&#xA;        T.Lambda(lambda img: img.convert(&#39;RGB&#39;) if img.mode != &#39;RGB&#39; else img),&#xA;        T.Resize((input_size, input_size), interpolation=InterpolationMode.BICUBIC),&#xA;        T.ToTensor(),&#xA;        T.Normalize(mean=MEAN, std=STD)&#xA;    ])&#xA;    return transform&#xA;&#xA;&#xA;def find_closest_aspect_ratio(aspect_ratio, target_ratios, width, height, image_size):&#xA;    best_ratio_diff = float(&#39;inf&#39;)&#xA;    best_ratio = (1, 1)&#xA;    area = width * height&#xA;    for ratio in target_ratios:&#xA;        target_aspect_ratio = ratio[0] / ratio[1]&#xA;        ratio_diff = abs(aspect_ratio - target_aspect_ratio)&#xA;        if ratio_diff &amp;lt; best_ratio_diff:&#xA;            best_ratio_diff = ratio_diff&#xA;            best_ratio = ratio&#xA;        elif ratio_diff == best_ratio_diff:&#xA;            if area &amp;gt; 0.5 * image_size * image_size * ratio[0] * ratio[1]:&#xA;                best_ratio = ratio&#xA;    return best_ratio&#xA;&#xA;&#xA;def dynamic_preprocess(image, min_num=1, max_num=6, image_size=448, use_thumbnail=False):&#xA;    orig_width, orig_height = image.size&#xA;    aspect_ratio = orig_width / orig_height&#xA;&#xA;    # calculate the existing image aspect ratio&#xA;    target_ratios = set(&#xA;        (i, j) for n in range(min_num, max_num + 1) for i in range(1, n + 1) for j in range(1, n + 1) if&#xA;        i * j &amp;lt;= max_num and i * j &amp;gt;= min_num)&#xA;    target_ratios = sorted(target_ratios, key=lambda x: x[0] * x[1])&#xA;&#xA;    # find the closest aspect ratio to the target&#xA;    target_aspect_ratio = find_closest_aspect_ratio(&#xA;        aspect_ratio, target_ratios, orig_width, orig_height, image_size)&#xA;&#xA;    # calculate the target width and height&#xA;    target_width = image_size * target_aspect_ratio[0]&#xA;    target_height = image_size * target_aspect_ratio[1]&#xA;    blocks = target_aspect_ratio[0] * target_aspect_ratio[1]&#xA;&#xA;    # resize the image&#xA;    resized_img = image.resize((target_width, target_height))&#xA;    processed_images = []&#xA;    for i in range(blocks):&#xA;        box = (&#xA;            (i % (target_width // image_size)) * image_size,&#xA;            (i // (target_width // image_size)) * image_size,&#xA;            ((i % (target_width // image_size)) + 1) * image_size,&#xA;            ((i // (target_width // image_size)) + 1) * image_size&#xA;        )&#xA;        # split the image&#xA;        split_img = resized_img.crop(box)&#xA;        processed_images.append(split_img)&#xA;    assert len(processed_images) == blocks&#xA;    if use_thumbnail and len(processed_images) != 1:&#xA;        thumbnail_img = image.resize((image_size, image_size))&#xA;        processed_images.append(thumbnail_img)&#xA;    return processed_images&#xA;&#xA;&#xA;def load_image(image_file, input_size=448, max_num=6):&#xA;    image = Image.open(image_file).convert(&#39;RGB&#39;)&#xA;    transform = build_transform(input_size=input_size)&#xA;    images = dynamic_preprocess(image, image_size=input_size, use_thumbnail=True, max_num=max_num)&#xA;    pixel_values = [transform(image) for image in images]&#xA;    pixel_values = torch.stack(pixel_values)&#xA;    return pixel_values&#xA;&#xA;&#xA;path = &#34;OpenGVLab/InternVL-Chat-V1-5&#34;&#xA;# If you have an 80G A100 GPU, you can put the entire model on a single GPU.&#xA;model = AutoModel.from_pretrained(&#xA;    path,&#xA;    torch_dtype=torch.bfloat16,&#xA;    low_cpu_mem_usage=True,&#xA;    trust_remote_code=True).eval().cuda()&#xA;# Otherwise, you need to set device_map=&#39;auto&#39; to use multiple GPUs for inference.&#xA;# model = AutoModel.from_pretrained(&#xA;#     path,&#xA;#     torch_dtype=torch.bfloat16,&#xA;#     low_cpu_mem_usage=True,&#xA;#     trust_remote_code=True,&#xA;#     device_map=&#39;auto&#39;).eval()&#xA;&#xA;tokenizer = AutoTokenizer.from_pretrained(path, trust_remote_code=True)&#xA;# set the max number of tiles in `max_num`&#xA;pixel_values = load_image(&#39;./examples/image1.jpg&#39;, max_num=6).to(torch.bfloat16).cuda()&#xA;&#xA;generation_config = dict(&#xA;    num_beams=1,&#xA;    max_new_tokens=512,&#xA;    do_sample=False,&#xA;)&#xA;&#xA;# single-round single-image conversation&#xA;question = &#34;请详细描述图片&#34; # Please describe the picture in detail&#xA;response = model.chat(tokenizer, pixel_values, question, generation_config)&#xA;print(question, response)&#xA;&#xA;# multi-round single-image conversation&#xA;question = &#34;请详细描述图片&#34; # Please describe the picture in detail&#xA;response, history = model.chat(tokenizer, pixel_values, question, generation_config, history=None, return_history=True)&#xA;print(question, response)&#xA;&#xA;question = &#34;请根据图片写一首诗&#34; # Please write a poem according to the picture&#xA;response, history = model.chat(tokenizer, pixel_values, question, generation_config, history=history, return_history=True)&#xA;print(question, response)&#xA;&#xA;# multi-round multi-image conversation&#xA;pixel_values1 = load_image(&#39;./examples/image1.jpg&#39;, max_num=6).to(torch.bfloat16).cuda()&#xA;pixel_values2 = load_image(&#39;./examples/image2.jpg&#39;, max_num=6).to(torch.bfloat16).cuda()&#xA;pixel_values = torch.cat((pixel_values1, pixel_values2), dim=0)&#xA;&#xA;question = &#34;详细描述这两张图片&#34; # Describe the two pictures in detail&#xA;response, history = model.chat(tokenizer, pixel_values, question, generation_config, history=None, return_history=True)&#xA;print(question, response)&#xA;&#xA;question = &#34;这两张图片的相同点和区别分别是什么&#34; # What are the similarities and differences between these two pictures&#xA;response, history = model.chat(tokenizer, pixel_values, question, generation_config, history=history, return_history=True)&#xA;print(question, response)&#xA;&#xA;# batch inference (single image per sample)&#xA;pixel_values1 = load_image(&#39;./examples/image1.jpg&#39;, max_num=6).to(torch.bfloat16).cuda()&#xA;pixel_values2 = load_image(&#39;./examples/image2.jpg&#39;, max_num=6).to(torch.bfloat16).cuda()&#xA;image_counts = [pixel_values1.size(0), pixel_values2.size(0)]&#xA;pixel_values = torch.cat((pixel_values1, pixel_values2), dim=0)&#xA;&#xA;questions = [&#34;Describe the image in detail.&#34;] * len(image_counts)&#xA;responses = model.batch_chat(tokenizer, pixel_values,&#xA;                             image_counts=image_counts,&#xA;                             questions=questions,&#xA;                             generation_config=generation_config)&#xA;for question, response in zip(questions, responses):&#xA;    print(question)&#xA;    print(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Inference Acceleration by LMDeploy&lt;/h2&gt; &#xA;&lt;p&gt;We recommend using &lt;a href=&#34;https://github.com/InternLM/lmdeploy&#34;&gt;LMDeploy&lt;/a&gt;, if InternVL-Chat model inference optimization is required.&lt;/p&gt; &#xA;&lt;p&gt;In the following subsections, we will introduce the usage of LMDeploy with the &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-5&#34;&gt;InternVL-Chat-V1-5&lt;/a&gt; model as an example.&lt;/p&gt; &#xA;&lt;p&gt;First of all, please setup the inference environment as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;conda create -n internvl python=3.10 -y&#xA;conda activate internvl&#xA;&#xA;pip install timm torchvision==0.17.2&#xA;pip install lmdeploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;LMDeploy pypi package depends on CUDA 12.x by default. For a CUDA 11.x environment, please refer to the &lt;a href=&#34;https://lmdeploy.readthedocs.io/en/latest/get_started.html#installation&#34;&gt;installation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Offline Inference Pipeline&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from lmdeploy import pipeline&#xA;from lmdeploy.vl import load_image&#xA;pipe = pipeline(&#39;OpenGVLab/InternVL-Chat-V1-5&#39;)&#xA;image = load_image(&#39;examples/image2.jpg&#39;)&#xA;response = pipe((&#39;describe this image&#39;, image))&#xA;print(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more on using the VLM pipeline, including multi-image inference or multi-turn chat, please overview &lt;a href=&#34;https://lmdeploy.readthedocs.io/en/latest/inference/vl_pipeline.html&#34;&gt;this&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;h3&gt;Online Inference Service&lt;/h3&gt; &#xA;&lt;p&gt;LMDeploy supports one-click packaging of the VLM model into an OpenAI service, providing seamless integration with the OpenAI API.&lt;/p&gt; &#xA;&lt;p&gt;The service can be launched by one command as below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;lmdeploy serve api_server OpenGVLab/InternVL-Chat-V1-5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The arguments of &lt;code&gt;api_server&lt;/code&gt; can be viewed through the command &lt;code&gt;lmdeploy serve api_server -h&lt;/code&gt;, for instance, &lt;code&gt;--tp&lt;/code&gt; to set tensor parallelism, &lt;code&gt;--session-len&lt;/code&gt; to specify the max length of the context window, &lt;code&gt;--cache-max-entry-count&lt;/code&gt; to adjust the GPU mem ratio for k/v cache etc.&lt;/p&gt; &#xA;&lt;p&gt;For more details, including service startup with docker, RESTful API information, and openai integration methods, please refer to &lt;a href=&#34;https://lmdeploy.readthedocs.io/en/latest/serving/api_server_vl.html&#34;&gt;this&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is released under the &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;. Parts of this project contain code and models from other sources, which are subject to their respective licenses.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find this project useful in your research, please consider cite:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-BibTeX&#34;&gt;@article{chen2023internvl,&#xA;  title={InternVL: Scaling up Vision Foundation Models and Aligning for Generic Visual-Linguistic Tasks},&#xA;  author={Chen, Zhe and Wu, Jiannan and Wang, Wenhai and Su, Weijie and Chen, Guo and Xing, Sen and Zhong, Muyan and Zhang, Qinglong and Zhu, Xizhou and Lu, Lewei and Li, Bin and Luo, Ping and Lu, Tong and Qiao, Yu and Dai, Jifeng},&#xA;  journal={arXiv preprint arXiv:2312.14238},&#xA;  year={2023}&#xA;}&#xA;&#xA;@article{chen2024far,&#xA;  title={How Far Are We to GPT-4V? Closing the Gap to Commercial Multimodal Models with Open-Source Suites},&#xA;  author={Chen, Zhe and Wang, Weiyun and Tian, Hao and Ye, Shenglong and Gao, Zhangwei and Cui, Erfei and Tong, Wenwen and Hu, Kongzhi and Luo, Jiapeng and Ma, Zheng and others},&#xA;  journal={arXiv preprint arXiv:2404.16821},&#xA;  year={2024}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;InternVL is built with reference to the code of the following projects: &lt;a href=&#34;https://github.com/openai/CLIP&#34;&gt;OpenAI CLIP&lt;/a&gt;, &lt;a href=&#34;https://github.com/mlfoundations/open_clip&#34;&gt;Open CLIP&lt;/a&gt;, &lt;a href=&#34;https://github.com/LAION-AI/CLIP_benchmark&#34;&gt;CLIP Benchmark&lt;/a&gt;, &lt;a href=&#34;https://github.com/baaivision/EVA/tree/master&#34;&gt;EVA&lt;/a&gt;, &lt;a href=&#34;https://github.com/OpenGVLab/InternImage&#34;&gt;InternImage&lt;/a&gt;, &lt;a href=&#34;https://github.com/czczup/ViT-Adapter&#34;&gt;ViT-Adapter&lt;/a&gt;, &lt;a href=&#34;https://github.com/open-mmlab/mmsegmentation&#34;&gt;MMSegmentation&lt;/a&gt;, &lt;a href=&#34;https://github.com/huggingface/transformers&#34;&gt;Transformers&lt;/a&gt;, &lt;a href=&#34;https://github.com/facebookresearch/dinov2&#34;&gt;DINOv2&lt;/a&gt;, &lt;a href=&#34;https://github.com/salesforce/LAVIS/tree/main/projects/blip2&#34;&gt;BLIP-2&lt;/a&gt;, &lt;a href=&#34;https://github.com/QwenLM/Qwen-VL/tree/master/eval_mm&#34;&gt;Qwen-VL&lt;/a&gt;, and &lt;a href=&#34;https://github.com/haotian-liu/LLaVA&#34;&gt;LLaVA-1.5&lt;/a&gt;. Thanks for their awesome work!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If you want to join our WeChat group, please scan the following QR Code to add our assistant as a Wechat friend:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img width=&#34;300&#34; alt=&#34;image&#34; src=&#34;https://github.com/OpenGVLab/DragGAN/assets/26198430/e3f0807f-956a-474e-8fd2-1f7c22d73997&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>