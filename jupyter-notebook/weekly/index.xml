<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-29T01:59:10Z</updated>
  <subtitle>Weekly Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>llSourcell/ChatGPT_Trading_Bot</title>
    <updated>2023-01-29T01:59:10Z</updated>
    <id>tag:github.com,2023-01-29:/llSourcell/ChatGPT_Trading_Bot</id>
    <link href="https://github.com/llSourcell/ChatGPT_Trading_Bot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is the code for the &#34;ChatGPT Trading Bot&#34; Video by Siraj Raval on Youtube&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGPT_Trading_Bot&lt;/h1&gt; &#xA;&lt;p&gt;This is the code for the &#34;ChatGPT Trading Bot&#34; Video by Siraj Raval on Youtube&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This is the code for this video on Youtube by Siraj Raval on building a ChatGPT trading bot. First, a disclaimer - Do NOT invest any money in any type of trading bot or algorithmic engine that you are not willing to lose. I gave this trading bot $2000 because I was willing to lose $2000 to make a great video for my AI Wizards out there. The entire codebase is contained in a single iPython notebook file, first published by the FinRL team as an example. Inside the notebook, 5 steps are performed.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Pull 30 days of trading data for (Insert your stock or crypto) with Yahoo Finance Downloader API&lt;/li&gt; &#xA; &lt;li&gt;Create a simulated trading environment using real trading data with FinRL&lt;/li&gt; &#xA; &lt;li&gt;Train an neural network to predict that Stock Price using reinforcement learning inside this simulation with FinRL&lt;/li&gt; &#xA; &lt;li&gt;Once trained, backtest the predictions on the past 30 days data to compute potential returns with FinRL&lt;/li&gt; &#xA; &lt;li&gt;If the expectd returns are above a certain threshold, buy, else hold. If they&#39;re below a certain threshold, sell. (using Alpaca API)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;In order to have this Colab run automatically once a day, we can deploy it to a hosting platform like Vercel with a seperate file that repeatedly executes it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.ibb.co/4KJx9y0/Screen-Shot-2023-01-13-at-10-04-39-AM.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python 3.7&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://alpaca.markets/&#34;&gt;Alpaca SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AI4Finance-Foundation/FinRL&#34;&gt;FinRL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vercel.com&#34;&gt;Vercel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/llSourcell/firebase_react_startup_template&#34;&gt;Firebase Template&lt;/a&gt; &lt;em&gt;optional&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup Instructions&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the iPython notebook in this repository and upload it to &lt;a href=&#34;https://raw.githubusercontent.com/llSourcell/ChatGPT_Trading_Bot/main/colab.research.google.com&#34;&gt;Colab&lt;/a&gt; to try it out.&lt;/li&gt; &#xA; &lt;li&gt;Setup a simple &lt;a href=&#34;https://flask.palletsprojects.com/en/1.1.x/quickstart/&#34;&gt;flask&lt;/a&gt; app.&lt;/li&gt; &#xA; &lt;li&gt;To set up a cron job for a Flask app deployed on Vercel that executes a Google Colab notebook at a given link every hour, you can use the built-in Vercel cron feature. Here are the steps to follow:&lt;/li&gt; &#xA; &lt;li&gt;In your Flask app, import the necessary modules to run the Colab notebook, such as gdown or pyngrok&lt;/li&gt; &#xA; &lt;li&gt;Create a new endpoint in your Flask app that triggers the execution of the Colab notebook, using the link to the notebook file.&lt;/li&gt; &#xA; &lt;li&gt;Go to the Vercel project settings for your app and navigate to the &#34;Cron&#34; tab.&lt;/li&gt; &#xA; &lt;li&gt;Create a new cron job that runs every hour by adding the endpoint you created in step 2 to the &#34;Cron Job&#34; field and select the frequency you want to run the job.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Here is a sample code snippet for step 2:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#xA;from flask import Flask, jsonify&#xA;import gdown&#xA;app = Flask(__name__)&#xA;&#xA;@app.route(&#39;/run-colab&#39;)&#xA;def run_colab():&#xA;    gdown.download(&#39;https://drive.google.com/file/d/&amp;lt;colab_notebook_id&amp;gt;&#39;, &#39;colab.ipynb&#39;, quiet=False)&#xA;    return jsonify(message=&#39;colab notebook ran successfully&#39;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credits &amp;amp; More Resources&lt;/h2&gt; &#xA;&lt;p&gt;Credits for the notebook go to the AI4FinanceFoundation, and for the API go to Alpaca.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fastai/fastai</title>
    <updated>2023-01-29T01:59:10Z</updated>
    <id>tag:github.com,2023-01-29:/fastai/fastai</id>
    <link href="https://github.com/fastai/fastai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The fastai deep learning library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to fastai&lt;/h1&gt; &#xA;&lt;!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! --&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/fastai/fastai/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt; &lt;a href=&#34;https://pypi.org/project/fastai/#description&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/fastai?color=blue&amp;amp;label=pypi%20version.png&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://anaconda.org/fastai/fastai&#34;&gt;&lt;img src=&#34;https://img.shields.io/conda/vn/fastai/fastai?color=seagreen&amp;amp;label=conda%20version.png&#34; alt=&#34;Conda (channel only)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fastai/docker-containers&#34;&gt;&lt;img src=&#34;https://github.com/fastai/docker-containers/workflows/Build%20fastai%20images/badge.svg?sanitize=true&#34; alt=&#34;Build fastai images&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/fastai/fastai/workflows/docs/badge.svg?sanitize=true&#34; alt=&#34;docs&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;You can use fastai without any installation by using &lt;a href=&#34;https://colab.research.google.com/&#34;&gt;Google Colab&lt;/a&gt;. In fact, every page of this documentation is also available as an interactive notebook - click “Open in colab” at the top of any page to open it (be sure to change the Colab runtime to “GPU” to have it run fast!) See the fast.ai documentation on &lt;a href=&#34;https://course.fast.ai/start_colab&#34;&gt;Using Colab&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;You can install fastai on your own machines with conda (highly recommended), as long as you’re running Linux or Windows (NB: Mac is not supported). For Windows, please see the “Running on Windows” for important notes.&lt;/p&gt; &#xA;&lt;p&gt;If you’re using &lt;a href=&#34;https://docs.conda.io/en/latest/miniconda.html&#34;&gt;miniconda&lt;/a&gt; (recommended) then run (note that if you replace &lt;code&gt;conda&lt;/code&gt; with &lt;a href=&#34;https://github.com/mamba-org/mamba&#34;&gt;mamba&lt;/a&gt; the install process will be much faster and more reliable):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda install -c fastchan fastai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;…or if you’re using &lt;a href=&#34;https://www.anaconda.com/products/individual&#34;&gt;Anaconda&lt;/a&gt; then run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda install -c fastchan fastai anaconda&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install with pip, use: &lt;code&gt;pip install fastai&lt;/code&gt;. If you install with pip, you should install PyTorch first by following the PyTorch &lt;a href=&#34;https://pytorch.org/get-started/locally/&#34;&gt;installation instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you plan to develop fastai yourself, or want to be on the cutting edge, you can use an editable install (if you do this, you should also use an editable install of &lt;a href=&#34;https://github.com/fastai/fastcore&#34;&gt;fastcore&lt;/a&gt; to go with it.) First install PyTorch, and then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/fastai/fastai&#xA;pip install -e &#34;fastai[dev]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Learning fastai&lt;/h2&gt; &#xA;&lt;p&gt;The best way to get started with fastai (and deep learning) is to read &lt;a href=&#34;https://www.amazon.com/Deep-Learning-Coders-fastai-PyTorch/dp/1492045527&#34;&gt;the book&lt;/a&gt;, and complete &lt;a href=&#34;https://course.fast.ai&#34;&gt;the free course&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To see what’s possible with fastai, take a look at the &lt;a href=&#34;https://docs.fast.ai/quick_start.html&#34;&gt;Quick Start&lt;/a&gt;, which shows how to use around 5 lines of code to build an image classifier, an image segmentation model, a text sentiment model, a recommendation system, and a tabular model. For each of the applications, the code is much the same.&lt;/p&gt; &#xA;&lt;p&gt;Read through the &lt;a href=&#34;https://docs.fast.ai/tutorial.html&#34;&gt;Tutorials&lt;/a&gt; to learn how to train your own models on your own datasets. Use the navigation sidebar to look through the fastai documentation. Every class, function, and method is documented here.&lt;/p&gt; &#xA;&lt;p&gt;To learn about the design and motivation of the library, read the &lt;a href=&#34;https://www.mdpi.com/2078-2489/11/2/108/htm&#34;&gt;peer reviewed paper&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;About fastai&lt;/h2&gt; &#xA;&lt;p&gt;fastai is a deep learning library which provides practitioners with high-level components that can quickly and easily provide state-of-the-art results in standard deep learning domains, and provides researchers with low-level components that can be mixed and matched to build new approaches. It aims to do both things without substantial compromises in ease of use, flexibility, or performance. This is possible thanks to a carefully layered architecture, which expresses common underlying patterns of many deep learning and data processing techniques in terms of decoupled abstractions. These abstractions can be expressed concisely and clearly by leveraging the dynamism of the underlying Python language and the flexibility of the PyTorch library. fastai includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A new type dispatch system for Python along with a semantic type hierarchy for tensors&lt;/li&gt; &#xA; &lt;li&gt;A GPU-optimized computer vision library which can be extended in pure Python&lt;/li&gt; &#xA; &lt;li&gt;An optimizer which refactors out the common functionality of modern optimizers into two basic pieces, allowing optimization algorithms to be implemented in 4–5 lines of code&lt;/li&gt; &#xA; &lt;li&gt;A novel 2-way callback system that can access any part of the data, model, or optimizer and change it at any point during training&lt;/li&gt; &#xA; &lt;li&gt;A new data block API&lt;/li&gt; &#xA; &lt;li&gt;And much more…&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;fastai is organized around two main design goals: to be approachable and rapidly productive, while also being deeply hackable and configurable. It is built on top of a hierarchy of lower-level APIs which provide composable building blocks. This way, a user wanting to rewrite part of the high-level API or add particular behavior to suit their needs does not have to learn how to use the lowest level.&lt;/p&gt; &#xA;&lt;img alt=&#34;Layered API&#34; src=&#34;https://raw.githubusercontent.com/fastai/fastai/master/images/layered.png&#34; width=&#34;345&#34;&gt; &#xA;&lt;h2&gt;Migrating from other libraries&lt;/h2&gt; &#xA;&lt;p&gt;It’s very easy to migrate from plain PyTorch, Ignite, or any other PyTorch-based library, or even to use fastai in conjunction with other libraries. Generally, you’ll be able to use all your existing data processing code, but will be able to reduce the amount of code you require for training, and more easily take advantage of modern best practices. Here are migration guides from some popular libraries to help you on your way:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.fast.ai/examples/migrating_pytorch.html&#34;&gt;Plain PyTorch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.fast.ai/examples/migrating_ignite.html&#34;&gt;Ignite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.fast.ai/examples/migrating_lightning.html&#34;&gt;Lightning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.fast.ai/examples/migrating_catalyst.html&#34;&gt;Catalyst&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Windows Support&lt;/h2&gt; &#xA;&lt;p&gt;When installing with &lt;code&gt;mamba&lt;/code&gt; or &lt;code&gt;conda&lt;/code&gt; replace &lt;code&gt;-c fastchan&lt;/code&gt; in the installation with &lt;code&gt;-c pytorch -c nvidia -c fastai&lt;/code&gt;, since fastchan is not currently supported on Windows.&lt;/p&gt; &#xA;&lt;p&gt;Due to python multiprocessing issues on Jupyter and Windows, &lt;code&gt;num_workers&lt;/code&gt; of &lt;code&gt;Dataloader&lt;/code&gt; is reset to 0 automatically to avoid Jupyter hanging. This makes tasks such as computer vision in Jupyter on Windows many times slower than on Linux. This limitation doesn’t exist if you use fastai from a script.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/fastai/fastai/raw/master/nbs/examples/dataloader_spawn.py&#34;&gt;this example&lt;/a&gt; to fully leverage the fastai API on Windows.&lt;/p&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;p&gt;To run the tests in parallel, launch:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;nbdev_test&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For all the tests to pass, you’ll need to install the dependencies specified as part of dev_requirements in settings.ini&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;pip install -e .[dev]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Tests are written using &lt;code&gt;nbdev&lt;/code&gt;, for example see the documentation for &lt;code&gt;test_eq&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;After you clone this repository, make sure you have run &lt;code&gt;nbdev_install_hooks&lt;/code&gt; in your terminal. This install Jupyter and git hooks to automatically clean, trust, and fix merge conflicts in notebooks.&lt;/p&gt; &#xA;&lt;p&gt;After making changes in the repo, you should run &lt;code&gt;nbdev_prepare&lt;/code&gt; and make additional and necessary changes in order to pass all the tests.&lt;/p&gt; &#xA;&lt;h2&gt;Docker Containers&lt;/h2&gt; &#xA;&lt;p&gt;For those interested in official docker containers for this project, they can be found &lt;a href=&#34;https://github.com/fastai/docker-containers#fastai&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AI4Finance-Foundation/FinRL</title>
    <updated>2023-01-29T01:59:10Z</updated>
    <id>tag:github.com,2023-01-29:/AI4Finance-Foundation/FinRL</id>
    <link href="https://github.com/AI4Finance-Foundation/FinRL" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FinRL: Financial Reinforcement Learning. 🔥&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FinRL: Financial Reinforcement Learning &lt;a href=&#34;https://twitter.com/intent/tweet?text=FinRL-Financial-Deep-Reinforcement-Learning%20&amp;amp;url=https://github.com/AI4Finance-Foundation/FinRL&amp;amp;hashtags=DRL&amp;amp;hashtags=AI&#34;&gt;&lt;img src=&#34;http://www.tensorlet.org/wp-content/uploads/2021/01/button_twitter_22x22.png&#34; alt=&#34;twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.facebook.com/sharer.php?u=http%3A%2F%2Fgithub.com%2FAI4Finance-Foundation%2FFinRL&#34;&gt;&lt;img src=&#34;http://www.tensorlet.org/wp-content/uploads/2021/01/facebook-button_22x22.png&#34; alt=&#34;facebook&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://plus.google.com/share?url=https://github.com/AI4Finance-Foundation/FinRL&#34;&gt;&lt;img src=&#34;http://www.tensorlet.org/wp-content/uploads/2021/01/button_google_22.xx_.png&#34; alt=&#34;google+&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.linkedin.com/sharing/share-offsite/?url=http%3A%2F%2Fgithub.com%2FAI4Finance-Foundation%2FFinRL&#34;&gt;&lt;img src=&#34;http://www.tensorlet.org/wp-content/uploads/2021/01/button_linkedin_22x22.png&#34; alt=&#34;linkedin&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/AI4Finance-Foundation/FinRL/master/figs/logo_transparent_background.png&#34; width=&#34;55%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://pepy.tech/project/finrl&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/finrl&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pepy.tech/project/finrl&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/finrl/week&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.python.org/downloads/release/python-360/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.6-blue.svg?sanitize=true&#34; alt=&#34;Python 3.6&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/finrl/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/finrl.svg?sanitize=true&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://finrl.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/finrl/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/license/AI4Finance-Foundation/finrl.svg?color=brightgreen&#34; alt=&#34;License&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Financial reinforcement learning (FinRL)&lt;/strong&gt; (&lt;a href=&#34;https://finrl.readthedocs.io/en/latest/index.html&#34;&gt;Document website&lt;/a&gt;) is &lt;strong&gt;the first open-source framework&lt;/strong&gt; for financial reinforcement learning. FinRL has evolved into an &lt;strong&gt;ecosystem&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Dev Roadmap&lt;/th&gt; &#xA;   &lt;th&gt;Stage&lt;/th&gt; &#xA;   &lt;th&gt;Users&lt;/th&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Desription&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0.0 (Preparation)&lt;/td&gt; &#xA;   &lt;td&gt;entrance&lt;/td&gt; &#xA;   &lt;td&gt;practitioners&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/AI4Finance-Foundation/FinRL-Meta&#34;&gt;FinRL-Meta&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;gym-style market environments&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.0 (Proof-of-Concept)&lt;/td&gt; &#xA;   &lt;td&gt;full-stack&lt;/td&gt; &#xA;   &lt;td&gt;developers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/AI4Finance-Foundation/FinRL&#34;&gt;this repo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;automatic pipeline&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.0 (Professional)&lt;/td&gt; &#xA;   &lt;td&gt;profession&lt;/td&gt; &#xA;   &lt;td&gt;experts&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/AI4Finance-Foundation/ElegantRL&#34;&gt;ElegantRL&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;algorithms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.0 (Production)&lt;/td&gt; &#xA;   &lt;td&gt;service&lt;/td&gt; &#xA;   &lt;td&gt;hedge funds&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/AI4Finance-Foundation/FinRL_Podracer&#34;&gt;Podracer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;cloud-native deployment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Outline&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AI4Finance-Foundation/FinRL/master/#Overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AI4Finance-Foundation/FinRL/master/#File-Structure&#34;&gt;File Structure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AI4Finance-Foundation/FinRL/master/#Supported-Data-Sources&#34;&gt;Supported Data Sources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AI4Finance-Foundation/FinRL/master/#Installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AI4Finance-Foundation/FinRL/master/#Status-Update&#34;&gt;Status Update&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AI4Finance-Foundation/FinRL/master/#Tutorials&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AI4Finance-Foundation/FinRL/master/#Publications&#34;&gt;Publications&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AI4Finance-Foundation/FinRL/master/#News&#34;&gt;News&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AI4Finance-Foundation/FinRL/master/#Citing-FinRL&#34;&gt;Citing FinRL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AI4Finance-Foundation/FinRL/master/#To-Contribute&#34;&gt;Welcome Contributions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AI4Finance-Foundation/FinRL/master/#Sponsorship&#34;&gt;Sponsorship&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AI4Finance-Foundation/FinRL/master/#LICENSE&#34;&gt;LICENSE&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;FinRL has three layers: market environments, agents, and applications. For a trading task (on the top), an agent (in the middle) interacts with a market environment (at the bottom), making sequential decisions.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/AI4Finance-Foundation/FinRL/master/figs/finrl_framework.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;A quick start: Stock_NeurIPS2018.ipynb. Videos &lt;a href=&#34;http://www.youtube.com/watch?v=ZSGJjtM-5jA&#34;&gt;FinRL&lt;/a&gt; at &lt;a href=&#34;https://www.youtube.com/channel/UCrVri6k3KPBa3NhapVV4K5g&#34;&gt;AI4Finance Youtube Channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;File Structure&lt;/h2&gt; &#xA;&lt;p&gt;The main folder &lt;strong&gt;finrl&lt;/strong&gt; has three subfolders &lt;strong&gt;applications, agents, meta&lt;/strong&gt;. We employ a &lt;strong&gt;train-test-trade&lt;/strong&gt; pipeline with three files: train.py, test.py, and trade.py.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FinRL&#xA;├── finrl (main folder)&#xA;│   ├── applications&#xA;│   &#x9;├── cryptocurrency_trading&#xA;│   &#x9;├── high_frequency_trading&#xA;│   &#x9;├── portfolio_allocation&#xA;│   &#x9;└── stock_trading&#xA;│   ├── agents&#xA;│   &#x9;├── elegantrl&#xA;│   &#x9;├── rllib&#xA;│   &#x9;└── stablebaseline3&#xA;│   ├── meta&#xA;│   &#x9;├── data_processors&#xA;│   &#x9;├── env_cryptocurrency_trading&#xA;│   &#x9;├── env_portfolio_allocation&#xA;│   &#x9;├── env_stock_trading&#xA;│   &#x9;├── preprocessor&#xA;│   &#x9;├── data_processor.py&#xA;│       ├── meta_config_tickers.py&#xA;│   &#x9;└── meta_config.py&#xA;│   ├── config.py&#xA;│   ├── config_tickers.py&#xA;│   ├── main.py&#xA;│   ├── plot.py&#xA;│   ├── train.py&#xA;│   ├── test.py&#xA;│   └── trade.py&#xA;│&#xA;├── examples&#xA;├── unit_tests (unit tests to verify codes on env &amp;amp; data)&#xA;│   ├── environments&#xA;│   &#x9;└── test_env_cashpenalty.py&#xA;│   └── downloaders&#xA;│   &#x9;├── test_yahoodownload.py&#xA;│   &#x9;└── test_alpaca_downloader.py&#xA;├── setup.py&#xA;├── requirements.txt&#xA;└── README.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported Data Sources&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Data Source&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Range and Frequency&lt;/th&gt; &#xA;   &lt;th&gt;Request Limits&lt;/th&gt; &#xA;   &lt;th&gt;Raw Data&lt;/th&gt; &#xA;   &lt;th&gt;Preprocessed Data&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://alpaca.markets/docs/introduction/&#34;&gt;Alpaca&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;US Stocks, ETFs&lt;/td&gt; &#xA;   &lt;td&gt;2015-now, 1min&lt;/td&gt; &#xA;   &lt;td&gt;Account-specific&lt;/td&gt; &#xA;   &lt;td&gt;OHLCV&lt;/td&gt; &#xA;   &lt;td&gt;Prices&amp;amp;Indicators&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://baostock.com/baostock/index.php/Python_API%E6%96%87%E6%A1%A3&#34;&gt;Baostock&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CN Securities&lt;/td&gt; &#xA;   &lt;td&gt;1990-12-19-now, 5min&lt;/td&gt; &#xA;   &lt;td&gt;Account-specific&lt;/td&gt; &#xA;   &lt;td&gt;OHLCV&lt;/td&gt; &#xA;   &lt;td&gt;Prices&amp;amp;Indicators&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://binance-docs.github.io/apidocs/spot/en/#public-api-definitions&#34;&gt;Binance&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cryptocurrency&lt;/td&gt; &#xA;   &lt;td&gt;API-specific, 1s, 1min&lt;/td&gt; &#xA;   &lt;td&gt;API-specific&lt;/td&gt; &#xA;   &lt;td&gt;Tick-level daily aggegrated trades, OHLCV&lt;/td&gt; &#xA;   &lt;td&gt;Prices&amp;amp;Indicators&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.ccxt.com/en/latest/manual.html&#34;&gt;CCXT&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cryptocurrency&lt;/td&gt; &#xA;   &lt;td&gt;API-specific, 1min&lt;/td&gt; &#xA;   &lt;td&gt;API-specific&lt;/td&gt; &#xA;   &lt;td&gt;OHLCV&lt;/td&gt; &#xA;   &lt;td&gt;Prices&amp;amp;Indicators&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://iexcloud.io/docs/api/&#34;&gt;IEXCloud&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;NMS US securities&lt;/td&gt; &#xA;   &lt;td&gt;1970-now, 1 day&lt;/td&gt; &#xA;   &lt;td&gt;100 per second per IP&lt;/td&gt; &#xA;   &lt;td&gt;OHLCV&lt;/td&gt; &#xA;   &lt;td&gt;Prices&amp;amp;Indicators&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.joinquant.com/&#34;&gt;JoinQuant&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CN Securities&lt;/td&gt; &#xA;   &lt;td&gt;2005-now, 1min&lt;/td&gt; &#xA;   &lt;td&gt;3 requests each time&lt;/td&gt; &#xA;   &lt;td&gt;OHLCV&lt;/td&gt; &#xA;   &lt;td&gt;Prices&amp;amp;Indicators&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.quantconnect.com/docs/home/home&#34;&gt;QuantConnect&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;US Securities&lt;/td&gt; &#xA;   &lt;td&gt;1998-now, 1s&lt;/td&gt; &#xA;   &lt;td&gt;NA&lt;/td&gt; &#xA;   &lt;td&gt;OHLCV&lt;/td&gt; &#xA;   &lt;td&gt;Prices&amp;amp;Indicators&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ricequant.com/doc/rqdata/python/&#34;&gt;RiceQuant&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CN Securities&lt;/td&gt; &#xA;   &lt;td&gt;2005-now, 1ms&lt;/td&gt; &#xA;   &lt;td&gt;Account-specific&lt;/td&gt; &#xA;   &lt;td&gt;OHLCV&lt;/td&gt; &#xA;   &lt;td&gt;Prices&amp;amp;Indicators&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://tushare.pro/document/1?doc_id=131&#34;&gt;Tushare&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CN Securities, A share&lt;/td&gt; &#xA;   &lt;td&gt;-now, 1 min&lt;/td&gt; &#xA;   &lt;td&gt;Account-specific&lt;/td&gt; &#xA;   &lt;td&gt;OHLCV&lt;/td&gt; &#xA;   &lt;td&gt;Prices&amp;amp;Indicators&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://wrds-www.wharton.upenn.edu/pages/about/data-vendors/nyse-trade-and-quote-taq/&#34;&gt;WRDS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;US Securities&lt;/td&gt; &#xA;   &lt;td&gt;2003-now, 1ms&lt;/td&gt; &#xA;   &lt;td&gt;5 requests each time&lt;/td&gt; &#xA;   &lt;td&gt;Intraday Trades&lt;/td&gt; &#xA;   &lt;td&gt;Prices&amp;amp;Indicators&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/yfinance/&#34;&gt;YahooFinance&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;US Securities&lt;/td&gt; &#xA;   &lt;td&gt;Frequency-specific, 1min&lt;/td&gt; &#xA;   &lt;td&gt;2,000/hour&lt;/td&gt; &#xA;   &lt;td&gt;OHLCV&lt;/td&gt; &#xA;   &lt;td&gt;Prices&amp;amp;Indicators&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- |Data Source |Type |Max Frequency |Raw Data|Preprocessed Data|&#xA;|  ----  |  ----  |  ----  |  ----  |  ----  |&#xA;|    AkShare |  CN Securities | 1 day  |  OHLCV |  Prices, indicators |&#xA;|    Alpaca |  US Stocks, ETFs |  1 min |  OHLCV |  Prices, indicators |&#xA;|    Alpha Vantage | Stock, ETF, forex, crypto, technical indicators | 1 min |  OHLCV  &amp; Prices, indicators |&#xA;|    Baostock |  CN Securities |  5 min |  OHLCV |  Prices, indicators |&#xA;|    Binance |  Cryptocurrency |  1 s |  OHLCV |  Prices, indicators |&#xA;|    CCXT |  Cryptocurrency |  1 min  |  OHLCV |  Prices, indicators |&#xA;|    currencyapi |  Exchange rate | 1 day |  Exchange rate | Exchange rate, indicators |&#xA;|    currencylayer |  Exchange rate | 1 day  |  Exchange rate | Exchange rate, indicators |&#xA;|    EOD Historical Data | US stocks, and ETFs |  1 day  |  OHLCV  | Prices, indicators |&#xA;|    Exchangerates |  Exchange rate |  1 day  |  Exchange rate | Exchange rate, indicators |&#xA;|    findatapy |  CN Securities | 1 day  |  OHLCV |  Prices, indicators |&#xA;|    Financial Modeling prep | US stocks, currencies, crypto |  1 min |  OHLCV  | Prices, indicators |&#xA;|    finnhub | US Stocks, currencies, crypto |   1 day |  OHLCV  | Prices, indicators |&#xA;|    Fixer |  Exchange rate |  1 day  |  Exchange rate | Exchange rate, indicators |&#xA;|    IEXCloud |  NMS US securities | 1 day  | OHLCV |  Prices, indicators |&#xA;|    JoinQuant |  CN Securities |  1 min  |  OHLCV |  Prices, indicators |&#xA;|    Marketstack | 50+ countries |  1 day  |  OHLCV | Prices, indicators |&#xA;|    Open Exchange Rates |  Exchange rate |  1 day  |  Exchange rate | Exchange rate, indicators |&#xA;|    pandas\_datareader |  US Securities |  1 day |  OHLCV | Prices, indicators |&#xA;|    pandas-finance |  US Securities |  1 day  |  OHLCV  &amp; Prices, indicators |&#xA;|    Polygon |  US Securities |  1 day  |  OHLCV  | Prices, indicators |&#xA;|    Quandl | 250+ sources |  1 day  |  OHLCV  | Prices, indicators |&#xA;|    QuantConnect |  US Securities |  1 s |  OHLCV |  Prices, indicators |&#xA;|    RiceQuant |  CN Securities |  1 ms  |  OHLCV |  Prices, indicators |&#xA;|    Tiingo | Stocks, crypto |  1 day  |  OHLCV  | Prices, indicators |&#xA;|    Tushare |  CN Securities | 1 min  |  OHLCV |  Prices, indicators |&#xA;|    WRDS |  US Securities |  1 ms  |  Intraday Trades | Prices, indicators |&#xA;|    XE |  Exchange rate |  1 day  |  Exchange rate | Exchange rate, indicators |&#xA;|    Xignite |  Exchange rate |  1 day  |  Exchange rate | Exchange rate, indicators |&#xA;|    YahooFinance |  US Securities | 1 min  |  OHLCV  |  Prices, indicators |&#xA;|    ystockquote |  US Securities |  1 day  |  OHLCV | Prices, indicators | --&gt; &#xA;&lt;p&gt;OHLCV: open, high, low, and close prices; volume. adjusted_close: adjusted close price&lt;/p&gt; &#xA;&lt;p&gt;Technical indicators: &#39;macd&#39;, &#39;boll_ub&#39;, &#39;boll_lb&#39;, &#39;rsi_30&#39;, &#39;dx_30&#39;, &#39;close_30_sma&#39;, &#39;close_60_sma&#39;. Users also can add new features.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AI4Finance-Foundation/FinRL/master/docs/source/start/installation.rst&#34;&gt;Install description for all operating systems (MAC OS, Ubuntu, Windows 10)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ai4finance.medium.com/finrl-for-quantitative-finance-install-and-setup-tutorial-for-beginners-1db80ad39159&#34;&gt;FinRL for Quantitative Finance: Install and Setup Tutorial for Beginners&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status Update&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;Version History&lt;/b&gt; &lt;i&gt;[click to expand]&lt;/i&gt;&lt;/summary&gt; &#xA; &lt;div&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;2022-06-25 0.3.5: Formal release of FinRL, neo_finrl is chenged to FinRL-Meta with related files in directory: &lt;em&gt;meta&lt;/em&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;2021-08-25 0.3.1: pytorch version with a three-layer architecture, apps (financial tasks), drl_agents (drl algorithms), neo_finrl (gym env)&lt;/li&gt; &#xA;   &lt;li&gt;2020-12-14 Upgraded to &lt;strong&gt;Pytorch&lt;/strong&gt; with stable-baselines3; Remove tensorflow 1.0 at this moment, under development to support tensorflow 2.0&lt;/li&gt; &#xA;   &lt;li&gt;2020-11-27 0.1: Beta version with tensorflow 1.5&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/div&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[Towardsdatascience] &lt;a href=&#34;https://towardsdatascience.com/deep-reinforcement-learning-for-automated-stock-trading-f1dad0126a02&#34;&gt;Deep Reinforcement Learning for Automated Stock Trading&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A complete list at &lt;a href=&#34;https://github.com/AI4Finance-Foundation/Blogs&#34;&gt;blogs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Publications&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Title&lt;/th&gt; &#xA;   &lt;th&gt;Conference&lt;/th&gt; &#xA;   &lt;th&gt;Link&lt;/th&gt; &#xA;   &lt;th&gt;Citations&lt;/th&gt; &#xA;   &lt;th&gt;Year&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;FinRL-Meta&lt;/strong&gt;: FinRL-Meta: Market Environments and Benchmarks for Data-Driven Financial Reinforcement Learning&lt;/td&gt; &#xA;   &lt;td&gt;NeurIPS 2022&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/2211.03107&#34;&gt;paper&lt;/a&gt; &lt;a href=&#34;https://github.com/AI4Finance-Foundation/FinRL-Meta&#34;&gt;code&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;FinRL&lt;/strong&gt;: Deep reinforcement learning framework to automate trading in quantitative finance&lt;/td&gt; &#xA;   &lt;td&gt;ACM International Conference on AI in Finance (ICAIF)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3955949&#34;&gt;paper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;19&lt;/td&gt; &#xA;   &lt;td&gt;2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;FinRL-Podracer&lt;/strong&gt;: High performance and scalable deep reinforcement learning for quantitative finance&lt;/td&gt; &#xA;   &lt;td&gt;ACM International Conference on AI in Finance (ICAIF)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/2111.05188&#34;&gt;paper&lt;/a&gt; &lt;a href=&#34;https://github.com/AI4Finance-Foundation/FinRL_Podracer&#34;&gt;code&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Explainable deep reinforcement learning for portfolio management: An empirical approach&lt;/td&gt; &#xA;   &lt;td&gt;ACM International Conference on AI in Finance (ICAIF)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/2111.03995&#34;&gt;paper&lt;/a&gt; &lt;a href=&#34;https://github.com/AI4Finance-Foundation/FinRL-Meta/raw/master/tutorials/2-Advance/FinRL_PortfolioAllocation_Explainable_DRL/FinRL_PortfolioAllocation_Explainable_DRL.py%5D(https://github.com/AI4Finance-Foundation/FinRL-Tutorials/tree/master/2-Advance)&#34;&gt;code&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;FinRL&lt;/strong&gt;: A deep reinforcement learning library for automated stock trading in quantitative finance&lt;/td&gt; &#xA;   &lt;td&gt;NeurIPS 2020 Deep RL Workshop&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/2011.09607&#34;&gt;paper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;46&lt;/td&gt; &#xA;   &lt;td&gt;2020&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Deep reinforcement learning for automated stock trading: An ensemble strategy&lt;/td&gt; &#xA;   &lt;td&gt;ACM International Conference on AI in Finance (ICAIF)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3690996&#34;&gt;paper&lt;/a&gt; &lt;a href=&#34;https://github.com/AI4Finance-Foundation/FinRL-Meta/raw/master/tutorials/2-Advance/FinRL_Ensemble_StockTrading_ICAIF_2020/FinRL_Ensemble_StockTrading_ICAIF_2020.ipynb&#34;&gt;code&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;94&lt;/td&gt; &#xA;   &lt;td&gt;2020&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Practical deep reinforcement learning approach for stock trading&lt;/td&gt; &#xA;   &lt;td&gt;NeurIPS 2018 Workshop on Challenges and Opportunities for AI in Financial Services&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/1811.07522&#34;&gt;paper&lt;/a&gt; &lt;a href=&#34;https://github.com/AI4Finance-Foundation/DQN-DDPG_Stock_Trading%5D(https://github.com/AI4Finance-Foundation/FinRL/tree/master/examples)&#34;&gt;code&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;127&lt;/td&gt; &#xA;   &lt;td&gt;2018&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[央广网] &lt;a href=&#34;http://tech.cnr.cn/techph/20211123/t20211123_525669092.shtml&#34;&gt;2021 IDEA大会于福田圆满落幕：群英荟萃论道AI 多项目发布亮点纷呈&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[央广网] &lt;a href=&#34;https://baijiahao.baidu.com/s?id=1717101783873523790&amp;amp;wfr=spider&amp;amp;for=pc&#34;&gt;2021 IDEA大会开启AI思想盛宴 沈向洋理事长发布六大前沿产品&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[IDEA新闻] &lt;a href=&#34;https://idea.edu.cn/news/20211213143128.html&#34;&gt;2021 IDEA大会发布产品FinRL-Meta——基于数据驱动的强化学习金融风险模拟系统&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[知乎] &lt;a href=&#34;https://zhuanlan.zhihu.com/p/437804814&#34;&gt;FinRL-Meta基于数据驱动的强化学习金融元宇宙&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[量化投资与机器学习] &lt;a href=&#34;https://www.mdeditor.tw/pl/p5Gg&#34;&gt;基于深度强化学习的股票交易策略框架（代码+文档)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[运筹OR帷幄] &lt;a href=&#34;https://zhuanlan.zhihu.com/p/353557417&#34;&gt;领读计划NO.10 | 基于深度增强学习的量化交易机器人：从AlphaGo到FinRL的演变过程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[深度强化实验室] &lt;a href=&#34;https://blog.csdn.net/deeprl/article/details/114828024&#34;&gt;【重磅推荐】哥大开源“FinRL”: 一个用于量化金融自动交易的深度强化学习库&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[商业新知] &lt;a href=&#34;https://www.shangyexinzhi.com/article/4170766.html&#34;&gt;金融科技讲座回顾|AI4Finance: 从AlphaGo到FinRL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Kaggle] &lt;a href=&#34;https://www.kaggle.com/c/jane-street-market-prediction/discussion/199313&#34;&gt;Jane Street Market Prediction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[矩池云Matpool] &lt;a href=&#34;http://www.python88.com/topic/111918&#34;&gt;在矩池云上如何运行FinRL股票交易策略框架&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[财智无界] &lt;a href=&#34;https://www.sohu.com/a/486837028_120929319&#34;&gt;金融学会常务理事陈学彬: 深度强化学习在金融资产管理中的应用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Neurohive] &lt;a href=&#34;https://neurohive.io/ru/gotovye-prilozhenija/finrl-glubokoe-obuchenie-s-podkrepleniem-dlya-trejdinga/&#34;&gt;FinRL: глубокое обучение с подкреплением для трейдинга&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[ICHI.PRO] &lt;a href=&#34;https://ichi.pro/ko/yangjeog-geum-yung-eul-wihan-finrl-dan-il-jusig-geolaeleul-wihan-tyutolieol-61395882412716&#34;&gt;양적 금융을위한 FinRL: 단일 주식 거래를위한 튜토리얼&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citing FinRL&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{liu2022finrl_meta,&#xA;  title={FinRL-Meta: Market Environments and Benchmarks for Data-Driven Financial Reinforcement Learning},&#xA;  author={Liu, Xiao-Yang and Xia, Ziyi and Rui, Jingyang and Gao, Jiechao and Yang, Hongyang and Zhu, Ming and Wang, Christina Dan and Wang, Zhaoran and Guo, Jian},&#xA;  journal={NeurIPS},&#xA;  year={2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{liu2021finrl,&#xA;    author  = {Liu, Xiao-Yang and Yang, Hongyang and Gao, Jiechao and Wang, Christina Dan},&#xA;    title   = {{FinRL}: Deep reinforcement learning framework to automate trading in quantitative finance},&#xA;    journal = {ACM International Conference on AI in Finance (ICAIF)},&#xA;    year    = {2021}&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{finrl2020,&#xA;    author  = {Liu, Xiao-Yang and Yang, Hongyang and Chen, Qian and Zhang, Runjia and Yang, Liuqing and Xiao, Bowen and Wang, Christina Dan},&#xA;    title   = {{FinRL}: A deep reinforcement learning library for automated stock trading in quantitative finance},&#xA;    journal = {Deep RL Workshop, NeurIPS 2020},&#xA;    year    = {2020}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{liu2018practical,&#xA;  title={Practical deep reinforcement learning approach for stock trading},&#xA;  author={Liu, Xiao-Yang and Xiong, Zhuoran and Zhong, Shan and Yang, Hongyang and Walid, Anwar},&#xA;  journal={NeurIPS Workshop on Deep Reinforcement Learning},&#xA;  year={2018}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We published &lt;a href=&#34;http://tensorlet.org/projects/ai-in-finance/&#34;&gt;FinRL papers&lt;/a&gt; that are listed at &lt;a href=&#34;https://scholar.google.com/citations?view_op=list_works&amp;amp;hl=en&amp;amp;hl=en&amp;amp;user=XsdPXocAAAAJ&#34;&gt;Google Scholar&lt;/a&gt;. Previous papers are given in the &lt;a href=&#34;https://github.com/AI4Finance-Foundation/FinRL/raw/master/tutorials/FinRL_papers.md&#34;&gt;list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Join and Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to &lt;strong&gt;AI4Finance&lt;/strong&gt; community!&lt;/p&gt; &#xA;&lt;p&gt;Discuss FinRL via &lt;a href=&#34;https://groups.google.com/u/1/g/ai4finance&#34;&gt;AI4Finance mailing list&lt;/a&gt; and AI4Finance Slack channel:&lt;/p&gt; &#xA;&lt;a href=&#34;https://join.slack.com/t/ai4financeworkspace/shared_invite/zt-v670l1jm-dzTgIT9fHZIjjrqprrY0kg&#34; target=&#34;\_blank&#34;&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/AI4Finance-Foundation/FinRL/master/figs/join_slack.png&#34; width=&#34;35%&#34;&gt; &#xA; &lt;/div&gt; &lt;/a&gt; &#xA;&lt;b&gt;Follow us on WeChat:&lt;/b&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;http://www.tensorlet.org/wp-content/uploads/2021/01/qrcode_for_gh_feece88824ab_258.jpg&#34; width=&#34;25%&#34;&gt; &#xA;&lt;/div&gt;  &#xA;&lt;p&gt;Please check &lt;a href=&#34;https://github.com/AI4Finance-Foundation/FinRL/raw/master/tutorials/Contributing.md&#34;&gt;Contributing Guidances&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;p&gt;Thank you!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/AI4Finance-LLC/FinRL-Library/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=AI4Finance-LLC/FinRL-Library&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Sponsorship&lt;/h3&gt; &#xA;&lt;p&gt;Welcome gift money to support AI4Finance, a non-profit community.&lt;/p&gt; &#xA;&lt;p&gt;Network: USDT-TRC20&lt;/p&gt; &#xA;&lt;a target=&#34;\_blank&#34;&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/AI4Finance-Foundation/FinRL/master/figs/okx.jpeg&#34; width=&#34;35%&#34;&gt; &#xA; &lt;/div&gt; &lt;/a&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;MIT License&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Disclaimer: Nothing herein is financial advice, and NOT a recommendation to trade real money. Please use common sense and always first consult a professional before trading or investing.&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
</feed>