<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Jupyter Notebook Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-28T01:54:06Z</updated>
  <subtitle>Weekly Trending of Jupyter Notebook in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>camenduru/DDColor-colab</title>
    <updated>2024-01-28T01:54:06Z</updated>
    <id>tag:github.com,2024-01-28:/camenduru/DDColor-colab</id>
    <link href="https://github.com/camenduru/DDColor-colab" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;üê£ Please follow me for new updates &lt;a href=&#34;https://twitter.com/camenduru&#34;&gt;https://twitter.com/camenduru&lt;/a&gt; &lt;br&gt; üî• Please join our discord server &lt;a href=&#34;https://discord.gg/k5BwmmvJJU&#34;&gt;https://discord.gg/k5BwmmvJJU&lt;/a&gt; &lt;br&gt; ü•≥ Please join my patreon community &lt;a href=&#34;https://patreon.com/camenduru&#34;&gt;https://patreon.com/camenduru&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ü¶í Colab&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Colab&lt;/th&gt; &#xA;   &lt;th&gt;Info&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/camenduru/DDColor-colab/blob/main/DDColor_colab.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;DDColor_colab&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/camenduru/DDColor-colab/blob/main/DDColor_gradio_colab.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;DDColor_gradio_colab&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;üß¨ Code&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/piddnad/DDColor&#34;&gt;https://github.com/piddnad/DDColor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;üìÑ Paper&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2212.11613&#34;&gt;https://arxiv.org/abs/2212.11613&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;üåê Page&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.modelscope.cn/models/damo/cv_ddcolor_image-colorization/summary&#34;&gt;https://www.modelscope.cn/models/damo/cv_ddcolor_image-colorization/summary&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;üñº Output&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/camenduru/DDColor-colab/assets/54370274/6f75b3ae-a1ed-48a8-882b-0c00ae332c3c&#34;&gt;https://github.com/camenduru/DDColor-colab/assets/54370274/6f75b3ae-a1ed-48a8-882b-0c00ae332c3c&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;üè¢ Sponsor&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://modelslab.com&#34;&gt;https://modelslab.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vanna-ai/vanna</title>
    <updated>2024-01-28T01:54:06Z</updated>
    <id>tag:github.com,2024-01-28:/vanna-ai/vanna</id>
    <link href="https://github.com/vanna-ai/vanna" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ü§ñ Chat with your SQL database üìä. Accurate Text-to-SQL Generation via LLMs using RAG üîÑ.&lt;/p&gt;&lt;hr&gt;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;GitHub&lt;/th&gt; &#xA;   &lt;th&gt;PyPI&lt;/th&gt; &#xA;   &lt;th&gt;Documentation&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vanna-ai/vanna&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/GitHub-vanna-blue?logo=github&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/vanna/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/vanna?logo=pypi&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://vanna.ai/docs/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Documentation-vanna-blue?logo=read-the-docs&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Vanna&lt;/h1&gt; &#xA;&lt;p&gt;Vanna is an MIT-licensed open-source Python RAG (Retrieval-Augmented Generation) framework for SQL generation and related functionality.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vanna-ai/vanna/assets/7146154/1901f47a-515d-4982-af50-f12761a3b2ce&#34;&gt;https://github.com/vanna-ai/vanna/assets/7146154/1901f47a-515d-4982-af50-f12761a3b2ce&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/vanna-ai/vanna/assets/7146154/1c7c88ba-c144-4ecf-a028-cf5ba7344ca2&#34; alt=&#34;vanna-quadrants&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How Vanna works&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/vanna-ai/vanna/assets/7146154/1d2718ad-12a8-4a76-afa2-c61754462f93&#34; alt=&#34;Screen Recording 2024-01-24 at 11 21 37‚ÄØAM&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Vanna works in two easy steps - train a RAG &#34;model&#34; on your data, and then ask questions which will return SQL queries that can be set up to automatically run on your database.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Train a RAG &#34;model&#34; on your data&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ask questions&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vanna-ai/vanna/main/img/vanna-readme-diagram.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t know what RAG is, don&#39;t worry -- you don&#39;t need to know how this works under the hood to use it. You just need to know that you &#34;train&#34; a model, which stores some metadata and then use it to &#34;ask&#34; questions.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/vanna-ai/vanna/main/src/vanna/base/base.py&#34;&gt;base class&lt;/a&gt; for more details on how this works under the hood.&lt;/p&gt; &#xA;&lt;h2&gt;User Interfaces&lt;/h2&gt; &#xA;&lt;p&gt;These are some of the user interfaces that we&#39;ve built using Vanna. You can use these as-is or as a starting point for your own custom interface.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vanna-ai/vanna/raw/main/notebooks/getting-started.ipynb&#34;&gt;Jupyter Notebook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vanna-ai/vanna-streamlit&#34;&gt;vanna-ai/vanna-streamlit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vanna-ai/vanna-flask&#34;&gt;vanna-ai/vanna-flask&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vanna-ai/vanna-slack&#34;&gt;vanna-ai/vanna-slack&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://vanna.ai/docs/&#34;&gt;documentation&lt;/a&gt; for specifics on your desired database, LLM, etc.&lt;/p&gt; &#xA;&lt;p&gt;If you want to get a feel for how it works after training, you can try this &lt;a href=&#34;https://colab.research.google.com/github/vanna-ai/vanna/blob/main/notebooks/getting-started.ipynb&#34;&gt;Colab notebook&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install vanna&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are a number of optional packages that can be installed so see the &lt;a href=&#34;https://vanna.ai/docs/&#34;&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h3&gt;Import&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://vanna.ai/docs/&#34;&gt;documentation&lt;/a&gt; if you&#39;re customizing the LLM or vector database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# The import statement will vary depending on your LLM and vector database. This is an example for OpenAI + ChromaDB&#xA;&#xA;from vanna.openai.openai_chat import OpenAI_Chat&#xA;from vanna.chromadb.chromadb_vector import ChromaDB_VectorStore&#xA;&#xA;class MyVanna(ChromaDB_VectorStore, OpenAI_Chat):&#xA;    def __init__(self, config=None):&#xA;        ChromaDB_VectorStore.__init__(self, config=config)&#xA;        OpenAI_Chat.__init__(self, config=config)&#xA;&#xA;vn = MyVanna(config={&#39;api_key&#39;: &#39;sk-...&#39;, &#39;model&#39;: &#39;gpt-4-...&#39;})&#xA;&#xA;# See the documentation for other options&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Training&lt;/h2&gt; &#xA;&lt;p&gt;You may or may not need to run these &lt;code&gt;vn.train&lt;/code&gt; commands depending on your use case. See the &lt;a href=&#34;https://vanna.ai/docs/&#34;&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;These statements are shown to give you a feel for how it works.&lt;/p&gt; &#xA;&lt;h3&gt;Train with DDL Statements&lt;/h3&gt; &#xA;&lt;p&gt;DDL statements contain information about the table names, columns, data types, and relationships in your database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;vn.train(ddl=&#34;&#34;&#34;&#xA;    CREATE TABLE IF NOT EXISTS my-table (&#xA;        id INT PRIMARY KEY,&#xA;        name VARCHAR(100),&#xA;        age INT&#xA;    )&#xA;&#34;&#34;&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Train with Documentation&lt;/h3&gt; &#xA;&lt;p&gt;Sometimes you may want to add documentation about your business terminology or definitions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;vn.train(documentation=&#34;Our business defines XYZ as ...&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Train with SQL&lt;/h3&gt; &#xA;&lt;p&gt;You can also add SQL queries to your training data. This is useful if you have some queries already laying around. You can just copy and paste those from your editor to begin generating new SQL.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;vn.train(sql=&#34;SELECT name, age FROM my-table WHERE name = &#39;John Doe&#39;&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Asking questions&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;vn.ask(&#34;What are the top 10 customers by sales?&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;ll get SQL&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT c.c_name as customer_name,&#xA;        sum(l.l_extendedprice * (1 - l.l_discount)) as total_sales&#xA;FROM   snowflake_sample_data.tpch_sf1.lineitem l join snowflake_sample_data.tpch_sf1.orders o&#xA;        ON l.l_orderkey = o.o_orderkey join snowflake_sample_data.tpch_sf1.customer c&#xA;        ON o.o_custkey = c.c_custkey&#xA;GROUP BY customer_name&#xA;ORDER BY total_sales desc limit 10;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;ve connected to a database, you&#39;ll get the table:&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr style=&#34;text-align: right;&#34;&gt; &#xA;    &lt;th&gt;&lt;/th&gt; &#xA;    &lt;th&gt;CUSTOMER_NAME&lt;/th&gt; &#xA;    &lt;th&gt;TOTAL_SALES&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;0&lt;/th&gt; &#xA;    &lt;td&gt;Customer#000143500&lt;/td&gt; &#xA;    &lt;td&gt;6757566.0218&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;1&lt;/th&gt; &#xA;    &lt;td&gt;Customer#000095257&lt;/td&gt; &#xA;    &lt;td&gt;6294115.3340&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;2&lt;/th&gt; &#xA;    &lt;td&gt;Customer#000087115&lt;/td&gt; &#xA;    &lt;td&gt;6184649.5176&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;3&lt;/th&gt; &#xA;    &lt;td&gt;Customer#000131113&lt;/td&gt; &#xA;    &lt;td&gt;6080943.8305&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;4&lt;/th&gt; &#xA;    &lt;td&gt;Customer#000134380&lt;/td&gt; &#xA;    &lt;td&gt;6075141.9635&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;5&lt;/th&gt; &#xA;    &lt;td&gt;Customer#000103834&lt;/td&gt; &#xA;    &lt;td&gt;6059770.3232&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;6&lt;/th&gt; &#xA;    &lt;td&gt;Customer#000069682&lt;/td&gt; &#xA;    &lt;td&gt;6057779.0348&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;7&lt;/th&gt; &#xA;    &lt;td&gt;Customer#000102022&lt;/td&gt; &#xA;    &lt;td&gt;6039653.6335&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;8&lt;/th&gt; &#xA;    &lt;td&gt;Customer#000098587&lt;/td&gt; &#xA;    &lt;td&gt;6027021.5855&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;9&lt;/th&gt; &#xA;    &lt;td&gt;Customer#000064660&lt;/td&gt; &#xA;    &lt;td&gt;5905659.6159&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;You&#39;ll also get an automated Plotly chart: &lt;img src=&#34;https://raw.githubusercontent.com/vanna-ai/vanna/main/img/top-10-customers.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;RAG vs. Fine-Tuning&lt;/h2&gt; &#xA;&lt;p&gt;RAG&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Portable across LLMs&lt;/li&gt; &#xA; &lt;li&gt;Easy to remove training data if any of it becomes obsolete&lt;/li&gt; &#xA; &lt;li&gt;Much cheaper to run than fine-tuning&lt;/li&gt; &#xA; &lt;li&gt;More future-proof -- if a better LLM comes out, you can just swap it out&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Fine-Tuning&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Good if you need to minimize tokens in the prompt&lt;/li&gt; &#xA; &lt;li&gt;Slow to get started&lt;/li&gt; &#xA; &lt;li&gt;Expensive to train and run (generally)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why Vanna?&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;High accuracy on complex datasets.&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Vanna‚Äôs capabilities are tied to the training data you give it&lt;/li&gt; &#xA;   &lt;li&gt;More training data means better accuracy for large and complex datasets&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Secure and private.&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Your database contents are never sent to the LLM or the vector database&lt;/li&gt; &#xA;   &lt;li&gt;SQL execution happens in your local environment&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Self learning.&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If using via Jupyter, you can choose to &#34;auto-train&#34; it on the queries that were successfully executed&lt;/li&gt; &#xA;   &lt;li&gt;If using via other interfaces, you can have the interface prompt the user to provide feedback on the results&lt;/li&gt; &#xA;   &lt;li&gt;Correct question to SQL pairs are stored for future reference and make the future results more accurate&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Supports any SQL database.&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The package allows you to connect to any SQL database that you can otherwise connect to with Python&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Choose your front end.&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Most people start in a Jupyter Notebook.&lt;/li&gt; &#xA;   &lt;li&gt;Expose to your end users via Slackbot, web app, Streamlit app, or a custom front end.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Extending Vanna&lt;/h2&gt; &#xA;&lt;p&gt;Vanna is designed to connect to any database, LLM, and vector database. There&#39;s a &lt;a href=&#34;https://raw.githubusercontent.com/vanna-ai/vanna/main/src/vanna/base/base.py&#34;&gt;VannaBase&lt;/a&gt; abstract base class that defines some basic functionality. The package provides implementations for use with OpenAI and ChromaDB. You can easily extend Vanna to use your own LLM or vector database. See the &lt;a href=&#34;https://vanna.ai/docs/&#34;&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Vanna in 100 Seconds&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vanna-ai/vanna/assets/7146154/eb90ee1e-aa05-4740-891a-4fc10e611cab&#34;&gt;https://github.com/vanna-ai/vanna/assets/7146154/eb90ee1e-aa05-4740-891a-4fc10e611cab&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;More resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vanna.ai/docs/&#34;&gt;Full Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vanna.ai&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/qUZYKHremx&#34;&gt;Discord group for support&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>datawhalechina/leedl-tutorial</title>
    <updated>2024-01-28T01:54:06Z</updated>
    <id>tag:github.com,2024-01-28:/datawhalechina/leedl-tutorial</id>
    <link href="https://github.com/datawhalechina/leedl-tutorial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;„ÄäÊùéÂÆèÊØÖÊ∑±Â∫¶Â≠¶‰π†ÊïôÁ®ã„ÄãÔºåPDF‰∏ãËΩΩÂú∞ÂùÄÔºöhttps://github.com/datawhalechina/leedl-tutorial/releases&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/datawhalechina/leedl-tutorial/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/datawhalechina/leedl-tutorial&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/datawhalechina/leedl-tutorial/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/datawhalechina/leedl-tutorial&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/datawhalechina/leedl-tutorial/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/datawhalechina/leedl-tutorial&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hits.seeyoufarm.com&#34;&gt;&lt;img src=&#34;https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fdatawhalechina%2Fleedl-tutorial%2F&amp;amp;count_bg=%2379C83D&amp;amp;title_bg=%23555555&amp;amp;icon=&amp;amp;icon_color=%23E7E7E7&amp;amp;title=hits&amp;amp;edge_flat=false&#34; alt=&#34;Hits&#34;&gt;&lt;/a&gt; &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;&lt;img alt=&#34;Áü•ËØÜÂÖ±‰∫´ËÆ∏ÂèØÂçèËÆÆ&#34; style=&#34;border-width:0&#34; src=&#34;https://img.shields.io/badge/license-CC%20BY--NC--SA%204.0-lightgrey&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ÊùéÂÆèÊØÖÊ∑±Â∫¶Â≠¶‰π†ÊïôÁ®ãLeeDL-Tutorial&lt;/h1&gt; &#xA;&lt;p&gt;ÊùéÂÆèÊØÖËÄÅÂ∏àÊòØÂè∞ÊπæÂ§ßÂ≠¶ÁöÑÊïôÊéàÔºåÂÖ∂&lt;a href=&#34;https://speech.ee.ntu.edu.tw/~hylee/ml/2021-spring.html&#34;&gt;„ÄäÊú∫Âô®Â≠¶‰π†„ÄãÔºà2021Âπ¥Êò•Ôºâ&lt;/a&gt;ÊòØÊ∑±Â∫¶Â≠¶‰π†È¢ÜÂüüÁªèÂÖ∏ÁöÑ‰∏≠ÊñáËßÜÈ¢ë‰πã‰∏Ä„ÄÇÊùéËÄÅÂ∏àÂπΩÈªòÈ£éË∂£ÁöÑÊéàËØæÈ£éÊ†ºÊ∑±ÂèóÂ§ßÂÆ∂ÂñúÁà±ÔºåËÆ©Êô¶Ê∂©ÈöæÊáÇÁöÑÊ∑±Â∫¶Â≠¶‰π†ÁêÜËÆ∫ÂèòÂæóËΩªÊùæÊòìÊáÇÔºå‰ªñ‰ºöÈÄöËøáÂæàÂ§öÂä®Êº´Áõ∏ÂÖ≥ÁöÑÊúâË∂£‰æãÂ≠êÊù•ËÆ≤Ëß£Ê∑±Â∫¶Â≠¶‰π†ÁêÜËÆ∫„ÄÇÊùéËÄÅÂ∏àÁöÑËØæÁ®ãÂÜÖÂÆπÂæàÂÖ®Èù¢ÔºåË¶ÜÁõñ‰∫ÜÂà∞Ê∑±Â∫¶Â≠¶‰π†ÂøÖÈ°ªÊéåÊè°ÁöÑÂ∏∏ËßÅÁêÜËÆ∫ÔºåËÉΩËÆ©Â≠¶ÁîüÂØπ‰∫éÊ∑±Â∫¶Â≠¶‰π†ÁöÑÁªùÂ§ßÂ§öÊï∞È¢ÜÂüüÈÉΩÊúâ‰∏ÄÂÆö‰∫ÜËß£Ôºå‰ªéËÄåÂèØ‰ª•Ëøõ‰∏ÄÊ≠•ÈÄâÊã©ÊÉ≥Ë¶ÅÊ∑±ÂÖ•ÁöÑÊñπÂêëËøõË°åÂ≠¶‰π†ÔºåÂØπ‰∫éÊÉ≥ÂÖ•Èó®Ê∑±Â∫¶Â≠¶‰π†ÂèàÊÉ≥Áúã‰∏≠ÊñáËÆ≤Ëß£ÁöÑÂêåÂ≠¶ÊòØÈùûÂ∏∏Êé®ËçêÁöÑ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Êú¨ÊïôÁ®ã‰∏ªË¶ÅÂÜÖÂÆπÊ∫ê‰∫é&lt;a href=&#34;https://speech.ee.ntu.edu.tw/~hylee/ml/2021-spring.html&#34;&gt;„ÄäÊú∫Âô®Â≠¶‰π†„ÄãÔºà2021Âπ¥Êò•Ôºâ&lt;/a&gt;ÔºåÂπ∂Âú®ÂÖ∂Âü∫Á°Ä‰∏äËøõË°å‰∫Ü‰∏ÄÂÆöÁöÑÂéüÂàõ„ÄÇÊØîÂ¶ÇÔºå‰∏∫‰∫ÜÂ∞ΩÂèØËÉΩÂú∞Èôç‰ΩéÈòÖËØªÈó®ÊßõÔºåÁ¨îËÄÖÂØπËøôÈó®ÂÖ¨ÂºÄËØæÁöÑÁ≤æÂçéÂÜÖÂÆπËøõË°åÈÄâÂèñÂπ∂‰ºòÂåñÔºåÂØπÊâÄÊ∂âÂèäÁöÑÂÖ¨ÂºèÈÉΩÁªôÂá∫ËØ¶ÁªÜÁöÑÊé®ÂØºËøáÁ®ãÔºåÂØπËæÉÈöæÁêÜËß£ÁöÑÁü•ËØÜÁÇπËøõË°å‰∫ÜÈáçÁÇπËÆ≤Ëß£ÂíåÂº∫ÂåñÔºå‰ª•Êñπ‰æøËØªËÄÖËæÉ‰∏∫ËΩªÊùæÂú∞ÂÖ•Èó®„ÄÇÊ≠§Â§ñÔºå‰∏∫‰∫Ü‰∏∞ÂØåÂÜÖÂÆπÔºåÁ¨îËÄÖÂú®ÊïôÁ®ã‰∏≠ÈÄâÂèñ‰∫Ü&lt;a href=&#34;https://speech.ee.ntu.edu.tw/~hylee/ml/2017-spring.php&#34;&gt;„ÄäÊú∫Âô®Â≠¶‰π†„ÄãÔºà2017Âπ¥Êò•Ôºâ&lt;/a&gt; ÁöÑÈÉ®ÂàÜÂÜÖÂÆπÔºåÂπ∂Ë°•ÂÖÖ‰∫Ü‰∏çÂ∞ëÈô§ËøôÈó®ÂÖ¨ÂºÄËØæ‰πãÂ§ñÁöÑÊ∑±Â∫¶Â≠¶‰π†Áõ∏ÂÖ≥Áü•ËØÜ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Ê≥®Ôºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Âü∫‰∫é„ÄäÊú∫Âô®Â≠¶‰π†„ÄãÔºà2017Âπ¥Êò•ÔºâÁöÑÊùéÂÆèÊØÖÊú∫Âô®Â≠¶‰π†Á¨îËÆ∞Âú®Á∫øÈòÖËØªÂú∞ÂùÄÔºö&lt;a href=&#34;https://datawhalechina.github.io/leedl-tutorial/#/&#34;&gt;https://datawhalechina.github.io/leedl-tutorial/#/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Âü∫‰∫é„ÄäÊú∫Âô®Â≠¶‰π†„ÄãÔºà2017Âπ¥Êò•ÔºâÁöÑÊùéÂÆèÊØÖÊú∫Âô®Â≠¶‰π†Á¨îËÆ∞Ê∫êÊñá‰ª∂Ôºö&lt;a href=&#34;https://github.com/datawhalechina/leedl-tutorial/tree/pre_master&#34;&gt;https://github.com/datawhalechina/leedl-tutorial/tree/pre_master&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ÊúÄÊñ∞ÁâàPDF‰∏ãËΩΩ&lt;/h2&gt; &#xA;&lt;p&gt;Âú∞ÂùÄÔºö&lt;a href=&#34;https://github.com/datawhalechina/leedl-tutorial/releases&#34;&gt;https://github.com/datawhalechina/leedl-tutorial/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ÂõΩÂÜÖÂú∞ÂùÄ(Êé®ËçêÂõΩÂÜÖËØªËÄÖ‰ΩøÁî®)ÔºöÈìæÊé•: &lt;a href=&#34;https://pan.baidu.com/s/1U3WJCKR3ofSuk68TF9zhyg&#34;&gt;https://pan.baidu.com/s/1U3WJCKR3ofSuk68TF9zhyg&lt;/a&gt; ÊèêÂèñÁ†Å: k23a&lt;/p&gt; &#xA;&lt;h2&gt;ÂÜÖÂÆπ‰ªãÁªç&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;ÂºïË®Ä&lt;/strong&gt; @ÁéãÁê¶&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ê∑±Â∫¶Â≠¶‰π†&lt;/strong&gt; @ÁéãÁê¶ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Â±ÄÈÉ®ÊúÄÂ∞èÂÄº‰∏éÈûçÁÇπ&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ËÆ≠ÁªÉÊäÄÂ∑ß&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Ëá™ÈÄÇÂ∫îÂ≠¶‰π†Áéá&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ÂàÜÁ±ªÈóÆÈ¢òÊçüÂ§±ÂáΩÊï∞&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ÂΩí‰∏ÄÂåñ&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Âç∑ÁßØÁ•ûÁªèÁΩëÁªúÂíåËá™Ê≥®ÊÑèÂäõÊú∫Âà∂&lt;/strong&gt; @ÁéãÁê¶ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Âç∑ÁßØÁ•ûÁªèÁΩëÁªú&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Ëá™Ê≥®ÊÑèÂäõÊú∫Âà∂&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Âæ™ÁéØÁ•ûÁªèÁΩëÁªú&lt;/strong&gt; @ÁéãÁê¶&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Transformer&lt;/strong&gt; @ÁéãÁê¶ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Transformer&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÁîüÊàêÊ®°Âûã&lt;/strong&gt; @Êù®ÊØÖËøú &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ÁîüÊàêÂØπÊäóÁΩëÁªúÂü∫Á°Ä&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ÁîüÊàêÂØπÊäóÁΩëÁªúÁêÜËÆ∫‰∏é Wasserstein ÁîüÊàêÂØπÊäóÁΩëÁªú&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ÁîüÊàêÂØπÊäóÁΩëÁªúÁöÑËØÑ‰º∞‰∏éÊúâÊù°‰ª∂ÁöÑÁîüÊàêÂØπÊäóÁΩëÁªú&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Âæ™ÁéØÁîüÊàêÂØπÊäóÁΩëÁªú&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ëá™ÁõëÁù£Â≠¶‰π†&lt;/strong&gt; @ÁéãÁê¶ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ËäùÈ∫ªË°óÁöÑÊ®°Âûã&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; BERT&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; GPT-3&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Ëá™Âä®ÁºñÁ†ÅÂô®Ê¶ÇÂøµÂèäÂÖ∂Â∫îÁî®&lt;/strong&gt; @Ê±üÂ≠£&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Êâ©Êï£Ê®°Âûã@ÁéãÁê¶&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÂØπÊäóÊîªÂáª&lt;/strong&gt; @Êù®ÊØÖËøú &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ÂØπÊäóÊîªÂáªÂü∫Êú¨Ê¶ÇÂøµ&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ÁôΩÁõíÊîªÂáªvsÈªëÁõíÊîªÂáª&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Ë¢´Âä®Èò≤ÂÆàvs‰∏ªÂä®Èò≤ÂÆà&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÂèØËß£Èáä‰∫∫Â∑•Êô∫ËÉΩ&lt;/strong&gt; @Êù®ÊØÖËøú &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ÂèØËß£Èáä‰∫∫Â∑•Êô∫ËÉΩÊ¶ÇÂøµ‰∏éÊ°à‰æã&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ÂèØËß£Èáä‰∫∫Â∑•Êô∫ËÉΩ‰∏≠ÁöÑÂ±ÄÈÉ®ÂèØËß£ÈáäÊÄß&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ÂèØËß£Èáä‰∫∫Â∑•Êô∫ËÉΩ‰∏≠ÁöÑÂÖ®Â±ÄÂèØËß£ÈáäÊÄß&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ËøÅÁßªÂ≠¶‰π†&lt;/strong&gt; @ÁéãÁê¶ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; È¢ÜÂüüËá™ÈÄÇÂ∫î&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; È¢ÜÂüüÂØπÊäóËÆ≠ÁªÉ&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Ê∑±Â∫¶Âº∫ÂåñÂ≠¶‰π†&lt;/strong&gt; @ÁéãÁê¶&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÁªàË∫´Â≠¶‰π†&lt;/strong&gt; @Êù®ÊØÖËøú &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ÁÅæÈöæÊÄßÈÅóÂøò&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ÁºìËß£ÁÅæÈöæÊÄßÈÅóÂøò&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÁΩëÁªúÂéãÁº©&lt;/strong&gt; @ÁéãÁê¶ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Ââ™Êûù‰∏éÂΩ©Á•®ÂÅáËÆæ&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Áü•ËØÜËí∏È¶è&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÂÖÉÂ≠¶‰π†&lt;/strong&gt; @Êù®ÊØÖËøú &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ÂÖÉÂ≠¶‰π†ÁöÑÊ¶ÇÂøµ&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ÂÖÉÂ≠¶‰π†ÁöÑÂÆû‰æãÁÆóÊ≥ï&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ÂÖÉÂ≠¶‰π†ÁöÑÂ∫îÁî®&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ChatGPT&lt;/strong&gt; @Êù®ÊØÖËøú &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ÂØπ‰∫éChatGPTÁöÑËØØËß£&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ChatGPTËÉåÂêéÁöÑÂÖ≥ÈîÆÊäÄÊúØ‚Äî‚ÄîÈ¢ÑËÆ≠ÁªÉ&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ChatGPTÂ∏¶Êù•ÁöÑÁ†îÁ©∂ÈóÆÈ¢ò&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ÈÖçÂ•ó‰ª£Á†Å&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/datawhalechina/leedl-tutorial/tree/master/Homework&#34;&gt;ÁÇπÂáª&lt;/a&gt;ÊàñËÄÖÁΩëÈ°µÁÇπÂáª&lt;code&gt;Homework&lt;/code&gt;Êñá‰ª∂Â§πËøõÂÖ•ÈÖçÂ•ó‰ª£Á†Å&lt;/p&gt; &#xA;&lt;h2&gt;Êâ©Â±ïËµÑÊ∫ê&lt;/h2&gt; &#xA;&lt;p&gt;ÂØπ&lt;strong&gt;Âº∫ÂåñÂ≠¶‰π†&lt;/strong&gt;ÊÑüÂÖ¥Ë∂£ÁöÑËØªËÄÖÔºåÂèØÈòÖËØª&lt;a href=&#34;https://github.com/datawhalechina/easy-rl&#34;&gt;ËòëËèá‰π¶EasyRL&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ë¥°ÁåÆËÄÖ&lt;/h2&gt; &#xA;&lt;table border=&#34;0&#34;&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/qiwang067&#34;&gt;&lt;img width=&#34;70&#34; height=&#34;70&#34; src=&#34;https://github.com/qiwang067.png?s=40&#34; alt=&#34;pic&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/qiwang067&#34;&gt;Qi Wang&lt;/a&gt; &lt;p&gt; ‰∏äÊµ∑‰∫§ÈÄöÂ§ßÂ≠¶ÂçöÂ£´Áîü&lt;br&gt;‰∏≠ÂõΩÁßëÂ≠¶Èô¢Â§ßÂ≠¶Á°ïÂ£´&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://yyysjz1997.github.io/&#34;&gt;&lt;img width=&#34;70&#34; height=&#34;70&#34; src=&#34;https://github.com/yyysjz1997.png?s=40&#34; alt=&#34;pic&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://yyysjz1997.github.io/&#34;&gt;Yiyuan Yang&lt;/a&gt; &lt;p&gt; ÁâõÊ¥•Â§ßÂ≠¶ÂçöÂ£´Áîü&lt;br&gt;Ê∏ÖÂçéÂ§ßÂ≠¶Á°ïÂ£´&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/JohnJim0816&#34;&gt;&lt;img width=&#34;70&#34; height=&#34;70&#34; src=&#34;https://github.com/JohnJim0816.png?s=40&#34; alt=&#34;pic&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/JohnJim0816&#34;&gt;John Jim&lt;/a&gt; &lt;p&gt;Âåó‰∫¨Â§ßÂ≠¶Á°ïÂ£´&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;ÂºïÁî®‰ø°ÊÅØ&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{wang2023leedltutorial,&#xA;title = {ÊùéÂÆèÊØÖÊ∑±Â∫¶Â≠¶‰π†ÊïôÁ®ã},&#xA;year = {2023},&#xA;author = {ÁéãÁê¶ÔºåÊù®ÊØÖËøúÔºåÊ±üÂ≠£},&#xA;url = {https://github.com/datawhalechina/leedl-tutorial}&#xA;}&#xA;&#xA;@misc{wang2023leedltutorialen,&#xA;title = {Deep Learning Tutorial by Hung-yi Lee},&#xA;year = {2023},&#xA;author = {Qi WangÔºåYiyuan YangÔºåJi Jiang},&#xA;url = {https://github.com/datawhalechina/leedl-tutorial}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Ëá¥Ë∞¢&lt;/h2&gt; &#xA;&lt;p&gt;ÁâπÂà´ÊÑüË∞¢ &lt;a href=&#34;https://github.com/Sm1les&#34;&gt;@Sm1les&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://github.com/LSGOMYP&#34;&gt;@LSGOMYP&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://github.com/FuWeiru&#34;&gt;FuWeiru&lt;/a&gt; ÂØπÊú¨È°πÁõÆÁöÑÂ∏ÆÂä©‰∏éÊîØÊåÅ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Âè¶Â§ñÔºåÂçÅÂàÜÊÑüË∞¢Â§ßÂÆ∂ÂØπ‰∫éLeeDL-tutorialÁöÑÂÖ≥Ê≥®„ÄÇ &lt;a href=&#34;https://github.com/datawhalechina/leedl-tutorial/stargazers&#34;&gt;&lt;img src=&#34;https://reporoster.com/stars/datawhalechina/leedl-tutorial&#34; alt=&#34;Stargazers repo roster for @datawhalechina/leedl-tutorial&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/datawhalechina/leedl-tutorial/network/members&#34;&gt;&lt;img src=&#34;https://reporoster.com/forks/datawhalechina/leedl-tutorial&#34; alt=&#34;Forkers repo roster for @datawhalechina/leedl-tutorial&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ÂÖ≥Ê≥®Êàë‰ª¨&lt;/h2&gt; &#xA;&lt;p&gt;Êâ´Êèè‰∏ãÊñπ‰∫åÁª¥Á†ÅÂÖ≥Ê≥®ÂÖ¨‰ºóÂè∑ÔºöDatawhaleÔºåÂõûÂ§çÂÖ≥ÈîÆËØç‚ÄúÊùéÂÆèÊØÖÊ∑±Â∫¶Â≠¶‰π†‚ÄùÔºåÂç≥ÂèØÂä†ÂÖ•‚ÄúLeeDL-TutorialËØªËÄÖ‰∫§ÊµÅÁæ§‚Äù&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/datawhalechina/easy-rl/master/docs/res/qrcode.jpeg&#34; width=&#34;250&#34; height=&#34;270&#34; alt=&#34;DatawhaleÊòØ‰∏Ä‰∏™‰∏ìÊ≥®AIÈ¢ÜÂüüÁöÑÂºÄÊ∫êÁªÑÁªáÔºå‰ª•‚Äúfor the learnerÔºåÂíåÂ≠¶‰π†ËÄÖ‰∏ÄËµ∑ÊàêÈïø‚Äù‰∏∫ÊÑøÊôØÔºåÊûÑÂª∫ÂØπÂ≠¶‰π†ËÄÖÊúÄÊúâ‰ª∑ÂÄºÁöÑÂºÄÊ∫êÂ≠¶‰π†Á§æÂå∫„ÄÇÂÖ≥Ê≥®Êàë‰ª¨Ôºå‰∏ÄËµ∑Â≠¶‰π†ÊàêÈïø„ÄÇ&#34;&gt;&#xA;&lt;/div&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;&lt;img alt=&#34;Áü•ËØÜÂÖ±‰∫´ËÆ∏ÂèØÂçèËÆÆ&#34; style=&#34;border-width:0&#34; src=&#34;https://img.shields.io/badge/license-CC%20BY--NC--SA%204.0-lightgrey&#34;&gt;&lt;/a&gt;&lt;br&gt;Êú¨‰ΩúÂìÅÈááÁî®&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;Áü•ËØÜÂÖ±‰∫´ÁΩ≤Âêç-ÈùûÂïÜ‰∏öÊÄß‰ΩøÁî®-Áõ∏ÂêåÊñπÂºèÂÖ±‰∫´ 4.0 ÂõΩÈôÖËÆ∏ÂèØÂçèËÆÆ&lt;/a&gt;ËøõË°åËÆ∏ÂèØ„ÄÇ&lt;/p&gt;</summary>
  </entry>
</feed>