<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-03T02:41:07Z</updated>
  <subtitle>Monthly Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>carp-lang/Carp</title>
    <updated>2022-06-03T02:41:07Z</updated>
    <id>tag:github.com,2022-06-03:/carp-lang/Carp</id>
    <link href="https://github.com/carp-lang/Carp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A statically typed lisp, without a GC, for real-time applications.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Carp&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/carp-lang/Carp/master/resources/logo/carp_logo_300_c.png&#34; alt=&#34;Logo&#34; align=&#34;right&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/carp-lang/Carp/actions?query=workflow%3A%22Linux+CI%22&#34;&gt;&lt;img src=&#34;https://github.com/carp-lang/Carp/workflows/Linux%20CI/badge.svg?sanitize=true&#34; alt=&#34;Linux CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/carp-lang/Carp/actions?query=workflow%3A%22MacOS+CI%22&#34;&gt;&lt;img src=&#34;https://github.com/carp-lang/Carp/workflows/MacOS%20CI/badge.svg?sanitize=true&#34; alt=&#34;MacOS CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/carp-lang/Carp/actions?query=workflow%3A%22Windows+CI%22&#34;&gt;&lt;img src=&#34;https://github.com/carp-lang/Carp/workflows/Windows%20CI/badge.svg?sanitize=true&#34; alt=&#34;Windows CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;i&gt;WARNING! This is a research project and a lot of information here might become outdated and misleading without any explanation. Don&#39;t use it for anything important just yet!&lt;/i&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;i&gt;&lt;a href=&#34;https://github.com/carp-lang/Carp/releases/&#34;&gt;Version 0.5.5 of the language is out!&lt;/a&gt;&lt;/i&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;Carp is a programming language designed to work well for interactive and performance sensitive use cases like games, sound synthesis and visualizations.&lt;/p&gt; &#xA;&lt;p&gt;The key features of Carp are the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatic and deterministic memory management (no garbage collector or VM)&lt;/li&gt; &#xA; &lt;li&gt;Inferred static types for great speed and reliability&lt;/li&gt; &#xA; &lt;li&gt;Ownership tracking enables a functional programming style while still using mutation of cache-friendly data structures under the hood&lt;/li&gt; &#xA; &lt;li&gt;No hidden performance penalties – allocation and copying are explicit&lt;/li&gt; &#xA; &lt;li&gt;Straightforward integration with existing C code&lt;/li&gt; &#xA; &lt;li&gt;Lisp macros, compile time scripting and a helpful REPL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Learn more&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/carp-lang/Carp/master/docs/Manual.md&#34;&gt;The Compiler Manual&lt;/a&gt; - how to install and use the compiler&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/carp-lang/Carp/master/docs/LanguageGuide.md&#34;&gt;Carp Language Guide&lt;/a&gt; - syntax and semantics of the language&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://carp-lang.github.io/carp-docs/core/core_index.html&#34;&gt;Core Docs&lt;/a&gt; - documentation for our standard library&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/eriksvedang/Carp?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/eriksvedang/Carp.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/eriksvedang/Carp&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;A Very Small Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-clojure&#34;&gt;(load-and-use SDL)&#xA;&#xA;(defn tick [state]&#xA;  (+ state 10))&#xA;&#xA;(defn draw [app rend state]&#xA;  (bg rend &amp;amp;(rgb (/ @state 2) (/ @state 3) (/ @state 4))))&#xA;&#xA;(defn main []&#xA;  (let [app (SDLApp.create &#34;The Minimalistic Color Generator&#34; 400 300)&#xA;        state 0]&#xA;    (SDLApp.run-with-callbacks &amp;amp;app SDLApp.quit-on-esc tick draw state)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For instructions on how to run Carp code, see &lt;a href=&#34;https://raw.githubusercontent.com/carp-lang/Carp/master/docs/HowToRunCode.md&#34;&gt;this document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more examples, check out the &lt;a href=&#34;https://raw.githubusercontent.com/carp-lang/Carp/master/examples&#34;&gt;examples&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eriksvedang&#34;&gt;Erik Svedäng&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hellerve&#34;&gt;Veit Heller&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jacereda&#34;&gt;Jorge Acereda&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/scolsen&#34;&gt;Scott Olsen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TimDeve&#34;&gt;Tim Dévé&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all the &lt;a href=&#34;https://github.com/carp-lang/Carp/graphs/contributors&#34;&gt;awesome people&lt;/a&gt; who have contributed to Carp over the years!&lt;/p&gt; &#xA;&lt;p&gt;We are always looking for more help – check out the &lt;a href=&#34;https://raw.githubusercontent.com/carp-lang/Carp/master/docs/Contributing.md&#34;&gt;contributing guide&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2016 - 2021 Erik Svedäng&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt; &#xA;&lt;p&gt;The regular expression implementation as found in src/carp_regex.h are Copyright (C) 1994-2017 Lua.org, PUC-Rio under the terms of the MIT license. Details can be found in the License file LUA_LICENSE.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ghc/ghc</title>
    <updated>2022-06-03T02:41:07Z</updated>
    <id>tag:github.com,2022-06-03:/ghc/ghc</id>
    <link href="https://github.com/ghc/ghc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mirror of the Glasgow Haskell Compiler. Please submit issues and patches to GHC&#39;s Gitlab instance (https://gitlab.haskell.org/ghc/ghc). First time contributors are encouraged to get started with the newcomers info (https://gitlab.haskell.org/ghc/ghc/wikis/contributing).&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Glasgow Haskell Compiler&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/commits/master&#34;&gt;&lt;img src=&#34;https://gitlab.haskell.org/ghc/ghc/badges/master/pipeline.svg?style=flat&#34; alt=&#34;pipeline status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the source tree for &lt;a href=&#34;http://www.haskell.org/ghc/&#34; title=&#34;www.haskell.org/ghc/&#34;&gt;GHC&lt;/a&gt;, a compiler and interactive environment for the Haskell functional programming language.&lt;/p&gt; &#xA;&lt;p&gt;For more information, visit &lt;a href=&#34;http://www.haskell.org/ghc/&#34; title=&#34;www.haskell.org/ghc/&#34;&gt;GHC&#39;s web site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Information for developers of GHC can be found on the &lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/issues&#34; title=&#34;gitlab.haskell.org/ghc/ghc/issues&#34;&gt;GHC issue tracker&lt;/a&gt;, and you can also view &lt;a href=&#34;https://github.com/ghc-proposals/ghc-proposals&#34; title=&#34;https://github.com/ghc-proposals/ghc-proposals&#34;&gt;proposals for new GHC features&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Getting the Source&lt;/h1&gt; &#xA;&lt;p&gt;There are two ways to get a source tree:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Download source tarballs&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Download the GHC source distribution:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ghc-&amp;lt;version&amp;gt;-src.tar.xz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;which contains GHC itself and the &#34;boot&#34; libraries.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Check out the source code from git&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ git clone --recurse-submodules git@gitlab.haskell.org:ghc/ghc.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: cloning GHC from Github requires a special setup. See &lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/building/getting-the-sources#cloning-from-github&#34; title=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/building/getting-the-sources#cloning-from-github&#34;&gt;Getting a GHC repository from Github&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;See the GHC team&#39;s working conventions regarding &lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/working-conventions/fixing-bugs&#34;&gt;how to contribute a patch to GHC&lt;/a&gt;.&lt;/em&gt; First time contributors are encouraged to get started by just sending a Merge Request.&lt;/p&gt; &#xA;&lt;h1&gt;Building &amp;amp; Installing&lt;/h1&gt; &#xA;&lt;p&gt;For full information on building GHC, see the &lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/building&#34; title=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/building&#34;&gt;GHC Building Guide&lt;/a&gt;. Here follows a summary - if you get into trouble, the Building Guide has all the answers.&lt;/p&gt; &#xA;&lt;p&gt;Before building GHC you may need to install some other tools and libraries. See, &lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/building/preparation&#34; title=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/building/preparation&#34;&gt;Setting up your system for building GHC&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;NB.&lt;/em&gt; In particular, you need &lt;a href=&#34;http://www.haskell.org/ghc/&#34; title=&#34;www.haskell.org/ghc/&#34;&gt;GHC&lt;/a&gt; installed in order to build GHC, because the compiler is itself written in Haskell. You also need &lt;a href=&#34;http://www.haskell.org/happy/&#34; title=&#34;www.haskell.org/happy/&#34;&gt;Happy&lt;/a&gt;, &lt;a href=&#34;http://www.haskell.org/alex/&#34; title=&#34;www.haskell.org/alex/&#34;&gt;Alex&lt;/a&gt;, and &lt;a href=&#34;http://www.haskell.org/cabal/&#34; title=&#34;http://www.haskell.org/cabal/&#34;&gt;Cabal&lt;/a&gt;. For instructions on how to port GHC to a new platform, see the &lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/building&#34; title=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/building&#34;&gt;GHC Building Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For building library documentation, you&#39;ll need &lt;a href=&#34;http://www.haskell.org/haddock/&#34; title=&#34;www.haskell.org/haddock/&#34;&gt;Haddock&lt;/a&gt;. To build the compiler documentation, you need &lt;a href=&#34;http://www.sphinx-doc.org/&#34;&gt;Sphinx&lt;/a&gt; and Xelatex (only for PDF output).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Quick start&lt;/strong&gt;: the following gives you a default build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./boot&#xA;$ ./configure&#xA;$ make         # can also say &#39;make -jX&#39; for X number of jobs&#xA;$ make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows, you need an extra repository containing some build tools. These can be downloaded for you by configure. This only needs to be done once by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./configure --enable-tarballs-autodownload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(NB: &lt;strong&gt;Do you have multiple cores? Be sure to tell that to &lt;code&gt;make&lt;/code&gt;!&lt;/strong&gt; This can save you hours of build time depending on your system configuration, and is almost always a win regardless of how many cores you have. As a simple rule, you should have about N+1 jobs, where &lt;code&gt;N&lt;/code&gt; is the amount of cores you have.)&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;./boot&lt;/code&gt; step is only necessary if this is a tree checked out from git. For source distributions downloaded from &lt;a href=&#34;http://www.haskell.org/ghc/&#34; title=&#34;www.haskell.org/ghc/&#34;&gt;GHC&#39;s web site&lt;/a&gt;, this step has already been performed.&lt;/p&gt; &#xA;&lt;p&gt;These steps give you the default build, which includes everything optimised and built in various ways (eg. profiling libs are built). It can take a long time. To customise the build, see the file &lt;code&gt;HACKING.md&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Filing bugs and feature requests&lt;/h1&gt; &#xA;&lt;p&gt;If you&#39;ve encountered what you believe is a bug in GHC, or you&#39;d like to propose a feature request, please let us know! Submit an &lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/issues&#34; title=&#34;https://gitlab.haskell.org/ghc/ghc/issues&#34;&gt;issue&lt;/a&gt; and we&#39;ll be sure to look into it. Remember: &lt;strong&gt;Filing a bug is the best way to make sure your issue isn&#39;t lost over time&lt;/strong&gt;, so please feel free.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re an active user of GHC, you may also be interested in joining the &lt;a href=&#34;http://www.haskell.org/pipermail/glasgow-haskell-users/&#34; title=&#34;http://www.haskell.org/pipermail/glasgow-haskell-users/&#34;&gt;glasgow-haskell-users&lt;/a&gt; mailing list, where developers and GHC users discuss various topics and hang out.&lt;/p&gt; &#xA;&lt;h1&gt;Hacking &amp;amp; Developing GHC&lt;/h1&gt; &#xA;&lt;p&gt;Once you&#39;ve filed a bug, maybe you&#39;d like to fix it yourself? That would be great, and we&#39;d surely love your company! If you&#39;re looking to hack on GHC, check out the guidelines in the &lt;code&gt;HACKING.md&lt;/code&gt; file in this directory - they&#39;ll get you up to speed quickly.&lt;/p&gt; &#xA;&lt;h1&gt;Contributors &amp;amp; Acknowledgements&lt;/h1&gt; &#xA;&lt;p&gt;GHC in its current form wouldn&#39;t exist without the hard work of &lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/team-ghc&#34; title=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/team-ghc&#34;&gt;its many contributors&lt;/a&gt;. Over time, it has grown to include the efforts and research of many institutions, highly talented people, and groups from around the world. We&#39;d like to thank them all, and invite you to join!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>simonmichael/hledger</title>
    <updated>2022-06-03T02:41:07Z</updated>
    <id>tag:github.com,2022-06-03:/simonmichael/hledger</id>
    <link href="https://github.com/simonmichael/hledger" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A reliable, user-friendly Plain Text Accounting tool with command line, terminal and web interfaces.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;hledger&lt;/h1&gt; &#xA;&lt;h2&gt;Robust, intuitive plain text accounting&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/licenses/gpl.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPLv3+-brightgreen.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hackage.haskell.org/package/hledger&#34;&gt;&lt;img src=&#34;https://img.shields.io/hackage/v/hledger.svg?label=hackage&amp;amp;colorB=green&#34; alt=&#34;on hackage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/metapackage/hledger&#34;&gt;&lt;img src=&#34;https://repology.org/badge/version-for-repo/stackage_nighly/hledger.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/metapackage/hledger&#34;&gt;&lt;img src=&#34;https://repology.org/badge/version-for-repo/stackage_lts/hledger.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://bugs.hledger.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/simonmichael/hledger.svg?sanitize=true&#34; alt=&#34;github issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome! This a brief intro to hledger. For a more detailed version, see the home page: &lt;strong&gt;&lt;a href=&#34;https://hledger.org&#34;&gt;https://hledger.org&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;hledger is lightweight, cross platform, multi-currency, double-entry accounting software. It lets you track money, investments, cryptocurrencies, invoices, time, inventory and more, in a safe, future-proof plain text data format with full version control and privacy.&lt;/p&gt; &#xA;&lt;p&gt;hledger aims to help both computer experts and regular folks gain clarity in their finances and time management. Though the UIs are basic, hledger can model any accounting situation and provide precise, clear reports. It is reliable, quick, and backed by the highly supportive &lt;a href=&#34;https://plaintextaccounting.org&#34;&gt;Plain Text Accounting&lt;/a&gt; ecosystem. Using it is an excellent way to learn double entry accounting.&lt;/p&gt; &#xA;&lt;p&gt;Compared to &lt;a href=&#34;https://plaintextaccounting.org/#software&#34;&gt;other PTA apps&lt;/a&gt;, hledger is actively maintained, with regular releases, and a strong focus on being easy to use and practical for everyday accounting.&lt;/p&gt; &#xA;&lt;p&gt;More features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installs easily on unix, mac or windows&lt;/li&gt; &#xA; &lt;li&gt;Complete, built-in documentation in multiple formats, beginner videos, tutorials etc.&lt;/li&gt; &#xA; &lt;li&gt;Multiple UIs: command-line, terminal, web, mobile, editors/IDEs&lt;/li&gt; &#xA; &lt;li&gt;Good at importing and exporting CSV; also outputs text/HTML/JSON/SQL&lt;/li&gt; &#xA; &lt;li&gt;A robust, general, well-specified multi-currency accounting engine&lt;/li&gt; &#xA; &lt;li&gt;Fast, analysing 25k transactions per second on a macbook air m1&lt;/li&gt; &#xA; &lt;li&gt;Accurate to 255 decimal places&lt;/li&gt; &#xA; &lt;li&gt;Supports your preferred account names, currencies, number formats&lt;/li&gt; &#xA; &lt;li&gt;Inspired by and partly compatible with Ledger CLI; interconvertible with Beancount&lt;/li&gt; &#xA; &lt;li&gt;Scriptable by CLI, HTTP or API, with plenty of examples&lt;/li&gt; &#xA; &lt;li&gt;Clean Haskell codebase, continually improved since 2007, with $100 regression bounties&lt;/li&gt; &#xA; &lt;li&gt;Free software licensed under GPLv3+.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;I use hledger to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;track income and spending, sometimes with budgets&lt;/li&gt; &#xA; &lt;li&gt;see time reports by day/week/month/project&lt;/li&gt; &#xA; &lt;li&gt;track reimbursables, invoices and payments&lt;/li&gt; &#xA; &lt;li&gt;predict cashflow and account balances&lt;/li&gt; &#xA; &lt;li&gt;get accurate numbers for tax filing&lt;/li&gt; &#xA; &lt;li&gt;research past events&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here&#39;s an example of the journal file format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-journal&#34;&gt;2022-01-01 opening balances as of this date&#xA;    assets&lt;span&gt;🏦&lt;/span&gt;checking                $1000&#xA;    assets&lt;span&gt;🏦&lt;/span&gt;savings                 $2000&#xA;    assets:cash                          $100&#xA;    liabilities:creditcard               $-50&#xA;    equity:opening/closing balances&#xA;&#xA;2022-01-15 market&#xA;    expenses:food             $50&#xA;    assets:cash              $-50&#xA;&#xA;2022-02-01 GOODWORKS CORP&#xA;    assets&lt;span&gt;🏦&lt;/span&gt;checking           $1000&#xA;    income:salary                 $-1000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and some simple reports:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cli&#34;&gt;$ hledger bs&#xA;Balance Sheet 2022-02-15&#xA;&#xA;                        || 2022-02-15 &#xA;========================++============&#xA; Assets                 ||            &#xA;------------------------++------------&#xA; assets&lt;span&gt;🏦&lt;/span&gt;checking   ||      $2000 &#xA; assets&lt;span&gt;🏦&lt;/span&gt;savings    ||      $2000 &#xA; assets:cash            ||        $50 &#xA;------------------------++------------&#xA;                        ||      $4050 &#xA;========================++============&#xA; Liabilities            ||            &#xA;------------------------++------------&#xA; liabilities:creditcard ||        $50 &#xA;------------------------++------------&#xA;                        ||        $50 &#xA;========================++============&#xA; Net:                   ||      $4000 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cli&#34;&gt;$ hledger is --monthly                                            &#xA;Income Statement 2022-01-01..2022-02-28                                               &#xA;                                                                                      &#xA;               ||  Jan    Feb                                                         &#xA;===============++=============                                                        &#xA; Revenues      ||                                                                     &#xA;---------------++-------------                                                        &#xA; income:salary ||    0  $1000                                                         &#xA;---------------++-------------                                                        &#xA;               ||    0  $1000                                                         &#xA;===============++=============                                                        &#xA; Expenses      ||                                                                     &#xA;---------------++-------------                                                        &#xA; expenses:food ||  $50      0                                                         &#xA;---------------++-------------                                                        &#xA;               ||  $50      0                                                         &#xA;===============++=============                                                        &#xA; Net:          || $-50  $1000                                                         &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More examples and screenshots: &lt;a href=&#34;https://hledger.org/#how-to-get-started&#34;&gt;https://hledger.org/#how-to-get-started&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Funding&lt;/h2&gt; &#xA;&lt;p&gt;hledger is brought to you by &lt;a href=&#34;http://joyful.com&#34;&gt;Simon Michael&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/simonmichael/hledger/master/CREDITS.html&#34;&gt;140+ contributors&lt;/a&gt;, and the generous financial sponsors below.&lt;/p&gt; &#xA;&lt;p&gt;After enjoying some personal or organisational success with hledger, you might want to become one of them, to help support this work. It&#39;s easy! Please see &lt;a href=&#34;https://hledger.org/sponsor.html&#34;&gt;https://hledger.org/sponsor.html&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;!-- keep synced with sponsor.md: --&gt; &#xA;&lt;h3&gt;Organisational sponsors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/hledger/organization/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/0/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/1/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/2/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/3/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/4/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/5/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/6/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/7/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/8/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/9/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/10/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/10/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/11/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/11/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/12/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/12/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/13/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/13/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/14/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/14/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/15/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/15/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/16/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/16/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/17/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/17/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/18/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/18/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/organization/19/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/organization/19/avatar.svg?avatarHeight=200&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Individual sponsors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/hledger/individual/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/0/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/1/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/2/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/3/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/4/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/5/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/6/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/7/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/8/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/9/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/10/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/10/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/11/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/11/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/12/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/12/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/13/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/13/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/14/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/14/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/15/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/15/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/16/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/16/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/17/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/17/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/18/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/18/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/19/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/19/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/20/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/20/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/21/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/21/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/22/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/22/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/23/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/23/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/24/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/24/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/25/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/25/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/26/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/26/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/27/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/27/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/28/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/28/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/29/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/29/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/30/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/30/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/31/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/31/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/32/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/32/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/33/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/33/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/34/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/34/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/35/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/35/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/36/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/36/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/37/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/37/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/38/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/38/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/hledger/individual/39/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/hledger/individual/39/avatar.svg?avatarHeight=100&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If your logo/avatar needs to be added, &lt;a href=&#34;mailto:webmaster@hledger.org&#34;&gt;let me know&lt;/a&gt;!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>input-output-hk/cardano-db-sync</title>
    <updated>2022-06-03T02:41:07Z</updated>
    <id>tag:github.com,2022-06-03:/input-output-hk/cardano-db-sync</id>
    <link href="https://github.com/input-output-hk/cardano-db-sync" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A component that follows the Cardano chain and stores blocks and transactions in PostgreSQL&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cardano DB Sync&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Anyone wishing to build and run anything in this repository should avoid the &lt;code&gt;master&lt;/code&gt; branch and build/run from the latest release tag.&lt;/p&gt; &#xA;&lt;h2&gt;Purpose&lt;/h2&gt; &#xA;&lt;p&gt;The purpose of Cardano DB Sync is to follow the Cardano chain and take information from the chain and an internally maintained copy of ledger state. Data is then extracted from the chain and inserted into a PostgreSQL database. SQL queries can then be written directly against the database schema or as queries embedded in any language with libraries for interacting with an SQL database.&lt;/p&gt; &#xA;&lt;p&gt;Examples of what someone would be able to do via an SQL query against a Cardano DB Sync instance fully synced to a specific network is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Look up any block, transaction, address, stake pool etc on that network, usually by the hash that identifies that item or the index into another table.&lt;/li&gt; &#xA; &lt;li&gt;Look up the balance of any stake address for any Shelley or later epoch.&lt;/li&gt; &#xA; &lt;li&gt;Look up the amount of ADA delegated to each pool for any Shelley or later epoch.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example SQL queries are available at &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/cardano-db-sync/master/doc/interesting-queries.md&#34;&gt;Example Queries&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;The cardano-db-sync component consists of a set of components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cardano-db&lt;/code&gt; which defines common data types and functions used by any application that needs to interact with the data base from Haskell. In particular, it defines the database schema.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cardano-db-tool&lt;/code&gt; a tool used to manage the databases of cardano-db-sync (create and run migrations, validate and analyse)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cardano-db-sync&lt;/code&gt; which acts as a Cardano node, following the chain and inserting data from the chain into a PostgreSQL database.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The db-sync node is written in a highly modular fashion to allow it to be as flexible as possible.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;cardano-db-sync&lt;/code&gt; node connects to a locally running &lt;code&gt;cardano-node&lt;/code&gt; (ie one connected to other nodes in the Cardano network over the internet with TCP/IP) using a Unix domain socket, retrieves blocks, updates its internal ledger state and stores parts of each block in a local PostgreSQL database. The database does not store things like cryptographic signatures but does store enough information to follow the chain of blocks and look at the transactions within blocks.&lt;/p&gt; &#xA;&lt;p&gt;The PostgreSQL database is designed to be accessed in a read-only fashion from other applications. The database schema is highly normalised which helps prevent data inconsistencies (specifically with the use of foreign keys from one table to another). More user friendly database queries can be implemented using &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-createview.html&#34;&gt;Postgres Views&lt;/a&gt; to implement joins between tables.&lt;/p&gt; &#xA;&lt;h2&gt;System Requirements&lt;/h2&gt; &#xA;&lt;p&gt;The system requirements for &lt;code&gt;cardano-db-sync&lt;/code&gt; (with both &lt;code&gt;db-sync&lt;/code&gt; and the &lt;code&gt;node&lt;/code&gt; running on the same machine are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Any of the big well known Linux distributions (eg, Debian, Ubuntu, RHEL, CentOS, Arch etc).&lt;/li&gt; &#xA; &lt;li&gt;32 Gigabytes of RAM or more.&lt;/li&gt; &#xA; &lt;li&gt;4 CPU cores or more.&lt;/li&gt; &#xA; &lt;li&gt;Ensure that the machine has sufficient IOPS (Input/Output Operations per Second). Ie it should be 60k IOPS or better. Lower IOPS ratings will result in slower sync times and/or falling behind the chain tip.&lt;/li&gt; &#xA; &lt;li&gt;160 Gigabytes or more of disk storage (preferably SSD which are 2-5 times faster than electro-mechanical disks).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The recommended configuration is to have the &lt;code&gt;db-sync&lt;/code&gt; and the PostgreSQL server on the same machine. During syncing (getting historical data from the blockchain) there is a &lt;strong&gt;HUGE&lt;/strong&gt; amount of data traffic between &lt;code&gt;db-sync&lt;/code&gt; and the database. Traffic to a local database is significantly faster than traffic to a database on the LAN or remotely to another location.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;If you have any issues with this project, consult the &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/cardano-db-sync/master/doc/troubleshooting.md&#34;&gt;Troubleshooting&lt;/a&gt; page for possible solutions.&lt;/p&gt; &#xA;&lt;h2&gt;Further Reading&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/cardano-db-sync/master/doc/building-running.md&#34;&gt;BuildingRunning&lt;/a&gt;: Building and running the db-sync node.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/cardano-db-sync/master/doc/docker.md&#34;&gt;Docker&lt;/a&gt;: Instruction for docker-compose, and building the images using nix.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/cardano-db-sync/master/doc/interesting-queries.md&#34;&gt;Example SQL queries&lt;/a&gt;: Some example SQL and Haskell/Esqueleto queries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/cardano-db-sync/master/doc/pool-offline-data.md&#34;&gt;PoolOfflineData&lt;/a&gt;: Explanation of how stake pool offline data is retried.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/cardano-db-sync/master/doc/schema.md&#34;&gt;Schema Documentation&lt;/a&gt;: The database schema documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/cardano-db-sync/master/doc/schema-management.md&#34;&gt;Schema Management&lt;/a&gt;: How the database schema is managed and modified.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/cardano-db-sync/master/doc/state-snapshot.md&#34;&gt;StateSnapshot&lt;/a&gt;: Document the creation and restoration of state snapshot files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hydra.iohk.io/job/Cardano/cardano-db-sync/native.haskellPackages.cardano-db.checks.test-db.x86_64-linux/latest/download/1&#34;&gt;SQL DB Schema&lt;/a&gt;: The current PostgreSQL DB schema, as generated by the code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/cardano-db-sync/master/doc/validation.md&#34;&gt;Validation&lt;/a&gt;: Explanation of validation done by the db-sync node and assumptions made.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>