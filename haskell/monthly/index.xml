<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-01T02:05:04Z</updated>
  <subtitle>Monthly Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sweirich/pi-forall</title>
    <updated>2023-08-01T02:05:04Z</updated>
    <id>tag:github.com,2023-08-01:/sweirich/pi-forall</id>
    <link href="https://github.com/sweirich/pi-forall" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A demo implementation of a simple dependently-typed language&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;pi-forall language&lt;/h2&gt; &#xA;&lt;p&gt;This language implementation is designed to accompany four lectures at OPLSS during Summer 2023. Notes for these lectures are included in the distribution:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sweirich/pi-forall/2023/doc/oplss.pdf&#34;&gt;oplss.pdf&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(The documentation &lt;a href=&#34;https://raw.githubusercontent.com/sweirich/pi-forall/2023/doc/README.md&#34;&gt;README.md&lt;/a&gt; includes details about how the notes are typeset.)&lt;/p&gt; &#xA;&lt;p&gt;These lecture notes correspond to an increasingly expressive demo implementation of a dependently-typed lambda calculus. Each of the following subdirectories is a self-contained implementation and all are generated from the same source, located in the &lt;a href=&#34;https://raw.githubusercontent.com/sweirich/pi-forall/2023/main/&#34;&gt;main/&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sweirich/pi-forall/2023/version1/&#34;&gt;version1/&lt;/a&gt;: Basic language implementation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sweirich/pi-forall/2023/version2/&#34;&gt;version2/&lt;/a&gt;: Basic language extended with nontrivial definitional equality&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sweirich/pi-forall/2023/version3/&#34;&gt;version3/&lt;/a&gt;: Above, extended with irrelevant arguments&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sweirich/pi-forall/2023/full/&#34;&gt;full/&lt;/a&gt;: Full language with datatypes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The implementation &lt;a href=&#34;https://raw.githubusercontent.com/sweirich/pi-forall/2023/main/README.md&#34;&gt;README.md&lt;/a&gt; includes instructions about how to compile and work with these implementations. Edits should only be for versions in the &lt;a href=&#34;https://raw.githubusercontent.com/sweirich/pi-forall/2023/main/&#34;&gt;main/&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;This is a revised version of lecture notes originally presented at OPLSS during 2022, 2014, and 2013.&lt;/p&gt; &#xA;&lt;p&gt;Videos from the &lt;a href=&#34;https://www.cs.uoregon.edu/research/summerschool/summer22/topics.php&#34;&gt;2022&lt;/a&gt; and &lt;a href=&#34;https://www.cs.uoregon.edu/research/summerschool/summer14/curriculum.html&#34;&gt;2014&lt;/a&gt; lectures are available from the OPLSS website. If you watch these videos, you should look at the corresponding branch of this repository.&lt;/p&gt; &#xA;&lt;p&gt;An abridged version of these lectures was also given at the Compose Conference, January 2015. &lt;a href=&#34;https://raw.githubusercontent.com/sweirich/pi-forall/2023/old/compose.md&#34;&gt;Notes&lt;/a&gt; from this version are also available.&lt;/p&gt; &#xA;&lt;p&gt;-- Stephanie Weirich&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ghc/ghc</title>
    <updated>2023-08-01T02:05:04Z</updated>
    <id>tag:github.com,2023-08-01:/ghc/ghc</id>
    <link href="https://github.com/ghc/ghc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mirror of the Glasgow Haskell Compiler. Please submit issues and patches to GHC&#39;s Gitlab instance (https://gitlab.haskell.org/ghc/ghc). First time contributors are encouraged to get started with the newcomers info (https://gitlab.haskell.org/ghc/ghc/wikis/contributing).&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Glasgow Haskell Compiler&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/commits/master&#34;&gt;&lt;img src=&#34;https://gitlab.haskell.org/ghc/ghc/badges/master/pipeline.svg?style=flat&#34; alt=&#34;pipeline status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the source tree for &lt;a href=&#34;http://www.haskell.org/ghc/&#34; title=&#34;www.haskell.org/ghc/&#34;&gt;GHC&lt;/a&gt;, a compiler and interactive environment for the Haskell functional programming language.&lt;/p&gt; &#xA;&lt;p&gt;For more information, visit &lt;a href=&#34;http://www.haskell.org/ghc/&#34; title=&#34;www.haskell.org/ghc/&#34;&gt;GHC&#39;s web site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Information for developers of GHC can be found on the &lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/issues&#34; title=&#34;gitlab.haskell.org/ghc/ghc/issues&#34;&gt;GHC issue tracker&lt;/a&gt;, and you can also view &lt;a href=&#34;https://github.com/ghc-proposals/ghc-proposals&#34; title=&#34;https://github.com/ghc-proposals/ghc-proposals&#34;&gt;proposals for new GHC features&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Getting the Source&lt;/h1&gt; &#xA;&lt;p&gt;There are two ways to get a source tree:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Download source tarballs&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Download the GHC source distribution:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ghc-&amp;lt;version&amp;gt;-src.tar.xz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;which contains GHC itself and the &#34;boot&#34; libraries.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Check out the source code from git&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ git clone --recurse-submodules git@gitlab.haskell.org:ghc/ghc.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: cloning GHC from Github requires a special setup. See &lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/building/getting-the-sources#cloning-from-github&#34; title=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/building/getting-the-sources#cloning-from-github&#34;&gt;Getting a GHC repository from Github&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;See the GHC team&#39;s working conventions regarding &lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/working-conventions/fixing-bugs&#34;&gt;how to contribute a patch to GHC&lt;/a&gt;.&lt;/em&gt; First time contributors are encouraged to get started by just sending a Merge Request.&lt;/p&gt; &#xA;&lt;h1&gt;Building &amp;amp; Installing&lt;/h1&gt; &#xA;&lt;p&gt;For full information on building GHC, see the &lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/building&#34; title=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/building&#34;&gt;GHC Building Guide&lt;/a&gt;. Here follows a summary - if you get into trouble, the Building Guide has all the answers.&lt;/p&gt; &#xA;&lt;p&gt;Before building GHC you may need to install some other tools and libraries. See, &lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/building/preparation&#34; title=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/building/preparation&#34;&gt;Setting up your system for building GHC&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;NB.&lt;/em&gt; In particular, you need &lt;a href=&#34;http://www.haskell.org/ghc/&#34; title=&#34;www.haskell.org/ghc/&#34;&gt;GHC&lt;/a&gt; installed in order to build GHC, because the compiler is itself written in Haskell. You also need &lt;a href=&#34;http://www.haskell.org/happy/&#34; title=&#34;www.haskell.org/happy/&#34;&gt;Happy&lt;/a&gt;, &lt;a href=&#34;http://www.haskell.org/alex/&#34; title=&#34;www.haskell.org/alex/&#34;&gt;Alex&lt;/a&gt;, and &lt;a href=&#34;http://www.haskell.org/cabal/&#34; title=&#34;http://www.haskell.org/cabal/&#34;&gt;Cabal&lt;/a&gt;. For instructions on how to port GHC to a new platform, see the &lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/building&#34; title=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/building&#34;&gt;GHC Building Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For building library documentation, you&#39;ll need &lt;a href=&#34;http://www.haskell.org/haddock/&#34; title=&#34;www.haskell.org/haddock/&#34;&gt;Haddock&lt;/a&gt;. To build the compiler documentation, you need &lt;a href=&#34;http://www.sphinx-doc.org/&#34;&gt;Sphinx&lt;/a&gt; and Xelatex (only for PDF output).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Quick start&lt;/strong&gt;: GHC is built using the &lt;a href=&#34;https://raw.githubusercontent.com/ghc/ghc/master/hadrian/README.md&#34;&gt;Hadrian build system&lt;/a&gt;. The following gives you a default build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./boot&#xA;$ ./configure&#xA;$ hadrian/build         # can also say &#39;-jX&#39; for X number of jobs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows, you need an extra repository containing some build tools. These can be downloaded for you by configure. This only needs to be done once by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./configure --enable-tarballs-autodownload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally, on Windows, to run Hadrian you should run &lt;code&gt;hadrian/build.bat&lt;/code&gt; instead of &lt;code&gt;hadrian/build&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;(NB: &lt;strong&gt;Do you have multiple cores? Be sure to tell that to &lt;code&gt;hadrian&lt;/code&gt;!&lt;/strong&gt; This can save you hours of build time depending on your system configuration, and is almost always a win regardless of how many cores you have. As a simple rule, you should have about N+1 jobs, where &lt;code&gt;N&lt;/code&gt; is the amount of cores you have.)&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;./boot&lt;/code&gt; step is only necessary if this is a tree checked out from git. For source distributions downloaded from &lt;a href=&#34;http://www.haskell.org/ghc/&#34; title=&#34;www.haskell.org/ghc/&#34;&gt;GHC&#39;s web site&lt;/a&gt;, this step has already been performed.&lt;/p&gt; &#xA;&lt;p&gt;These steps give you the default build, which includes everything optimised and built in various ways (eg. profiling libs are built). It can take a long time. To customise the build, see the file &lt;code&gt;HACKING.md&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Filing bugs and feature requests&lt;/h1&gt; &#xA;&lt;p&gt;If you&#39;ve encountered what you believe is a bug in GHC, or you&#39;d like to propose a feature request, please let us know! Submit an &lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/issues&#34; title=&#34;https://gitlab.haskell.org/ghc/ghc/issues&#34;&gt;issue&lt;/a&gt; and we&#39;ll be sure to look into it. Remember: &lt;strong&gt;Filing a bug is the best way to make sure your issue isn&#39;t lost over time&lt;/strong&gt;, so please feel free.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re an active user of GHC, you may also be interested in joining the &lt;a href=&#34;http://www.haskell.org/pipermail/glasgow-haskell-users/&#34; title=&#34;http://www.haskell.org/pipermail/glasgow-haskell-users/&#34;&gt;glasgow-haskell-users&lt;/a&gt; mailing list, where developers and GHC users discuss various topics and hang out.&lt;/p&gt; &#xA;&lt;h1&gt;Hacking &amp;amp; Developing GHC&lt;/h1&gt; &#xA;&lt;p&gt;Once you&#39;ve filed a bug, maybe you&#39;d like to fix it yourself? That would be great, and we&#39;d surely love your company! If you&#39;re looking to hack on GHC, check out the guidelines in the &lt;code&gt;HACKING.md&lt;/code&gt; file in this directory - they&#39;ll get you up to speed quickly.&lt;/p&gt; &#xA;&lt;h1&gt;Contributors &amp;amp; Acknowledgements&lt;/h1&gt; &#xA;&lt;p&gt;GHC in its current form wouldn&#39;t exist without the hard work of &lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/team-ghc&#34; title=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/team-ghc&#34;&gt;its many contributors&lt;/a&gt;. Over time, it has grown to include the efforts and research of many institutions, highly talented people, and groups from around the world. We&#39;d like to thank them all, and invite you to join!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>celeryclub/euler</title>
    <updated>2023-08-01T02:05:04Z</updated>
    <id>tag:github.com,2023-08-01:/celeryclub/euler</id>
    <link href="https://github.com/celeryclub/euler" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Solving problems from http://projecteuler.net/&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>