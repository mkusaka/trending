<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-20T01:31:50Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kadena-io/pact-5</title>
    <updated>2024-01-20T01:31:50Z</updated>
    <id>tag:github.com,2024-01-20:/kadena-io/pact-5</id>
    <link href="https://github.com/kadena-io/pact-5" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The New Pact&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://i.imgur.com/bAZFAGF.png&#34; width=&#34;450&#34; height=&#34;243&#34; alt=&#34;Kadena&#34; title=&#34;Kadena&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h1&gt;The Pact Programming Language&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://kadena.io/build&#34;&gt;Pact&lt;/a&gt; is an open-source, Turing-&lt;strong&gt;in&lt;/strong&gt;complete smart contract language that has been purpose-built with blockchains first in mind. Pact focuses on facilitating transactional logic with the optimal mix of functionality in authorization, data management, and workflow.&lt;/p&gt; &#xA;&lt;p&gt;Read the whitepaper:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://d31d887a-c1e0-47c2-aa51-c69f9f998b07.filesusr.com/ugd/86a16f_442a542b64554cb2a4c1ae7f528ce4c3.pdf&#34;&gt;The Pact Smart Contract Language&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For additional information, press, and development inquiries, please refer to the Kadena &lt;a href=&#34;https://kadena.io&#34;&gt;website&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] This repository hosts a rewrite of the Pact language and is not utilized by &lt;a href=&#34;https://github.com/kadena-io/chainweb-node&#34;&gt;chainweb-node&lt;/a&gt;, serving primarily for local development and testing purposes. We detail the planned transition from Pact to Pact Core in &lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/pact-5/master/#roadmap&#34;&gt;Section Roadmap&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you are looking for legacy Pact, see &lt;a href=&#34;https://github.com/kadena-io/pact&#34;&gt;github.com/kadena-io/pact&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/pact-5/master/#quickstart&#34;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/pact-5/master/#pact-core-vs-pact&#34;&gt;Pact Core vs Pact&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/pact-5/master/#roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/pact-5/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/pact-5/master/#installing-pact-core&#34;&gt;Installing Pact Core&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/pact-5/master/#binary-downloads&#34;&gt;Binary Downloads&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/pact-5/master/#building-from-source&#34;&gt;Building from Source&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/pact-5/master/#using-the-nix-infrastructure&#34;&gt;Using the Nix Infrastructure (recommend)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/pact-5/master/#using-cabal-and-ghc&#34;&gt;Using Cabal and GHC&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/pact-5/master/#editor-integration&#34;&gt;Editor Integration (Language Server)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/pact-5/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the latest Pact binary from &lt;a href=&#34;https://github.com/kadena-io/pact-core/releases/latest&#34;&gt;Github Releases&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Extract the &lt;code&gt;pact&lt;/code&gt; binary, make sure that you have the required permissions to execute it. &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x /path/to/pact&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;(Optional) Add the path to your &lt;code&gt;$PATH&lt;/code&gt; environment variable or adding the line to your shell profile. &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export PATH=$PATH:/path/to/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Execute &lt;code&gt;pact&lt;/code&gt; and have fun :-)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Pact Core vs Pact&lt;/h2&gt; &#xA;&lt;p&gt;Pact Core is a redevelopment of the Pact language, focusing on enhancing scalability, maintainability, and performance in response to increasingly complex demands from users and partners.&lt;/p&gt; &#xA;&lt;p&gt;Pact Core enables sustainable growth of the Pact featureset within the Kadena ecosystem by offering a more modular and maintainable internals, enabling the community to further develop and propose enhancements to the language and components that rely on it.&lt;/p&gt; &#xA;&lt;p&gt;Pact Core maintains semantic equivalence to Pact, aside from minor differences for security and performance. Existing code will behave the same as code written in (legacy) Pact. Breaking modifications will be communicated using the &lt;a href=&#34;https://github.com/kadena-io/kips&#34;&gt;Kadena Improvement Process&lt;/a&gt; (KIP) process.&lt;/p&gt; &#xA;&lt;h3&gt;Roadmap&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] The current roadmap is being sketched by the Pact Team and will be updated appropriatly.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://docs.kadena.io/pact&#34;&gt;Kadena Docs&lt;/a&gt; site serves as the primary source of information about Pact. You can find information about how to get started with the Pact language, how to execute already deployed contracts, and follow our step-by-step tutorials.&lt;/p&gt; &#xA;&lt;p&gt;We recommend that new users start with our &lt;a href=&#34;https://docs.kadena.io/pact/beginner&#34;&gt;beginner`s guide&lt;/a&gt;, which provides an understanding of the fundamental concepts and terminology of the language.&lt;/p&gt; &#xA;&lt;h2&gt;Installing Pact Core&lt;/h2&gt; &#xA;&lt;p&gt;To install Pact Core on your infrastructure, you have the option to download a pre-built binary or compile it from the source.&lt;/p&gt; &#xA;&lt;h3&gt;Binary Downloads&lt;/h3&gt; &#xA;&lt;p&gt;You can obtain the latest released version of Pact from our GitHub releases page &lt;a href=&#34;https://github.com/kadena-io/pact-core/releases&#34;&gt;here&lt;/a&gt;. Ensure to download the binary that corresponds to your specific architecture.&lt;/p&gt; &#xA;&lt;h3&gt;Building from Source&lt;/h3&gt; &#xA;&lt;p&gt;Two methods are supported for building Pact Core: using bare Cabal and GHC or employing the Nix package manager.&lt;/p&gt; &#xA;&lt;h4&gt;Using Cabal and GHC&lt;/h4&gt; &#xA;&lt;p&gt;Building is a process comprising four steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://www.haskell.org/ghcup/&#34;&gt;GHCup&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set and ensure the versions specified below are correctly set:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ghcup install ghc 9.6.3 &amp;amp;&amp;amp; ghcup install-cabal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Update Haskell packages:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cabal update&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the Pact binary:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cabal build exe:pact&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(Optional) You can either run &lt;code&gt;pact&lt;/code&gt; directly:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cabal run exe:pact&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or, if you prever to make the &lt;code&gt;pact&lt;/code&gt; executable available in your &lt;code&gt;$PATH&lt;/code&gt; environment, run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cabal install exe:pact&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Using the Nix Infrastructure&lt;/h4&gt; &#xA;&lt;p&gt;Kadena offers a binary cache for all Nix builds, allowing users to accelerate their build times by utilizing our cache infrastructure. The specifics of setting up the cache depend on various factors and are beyond the scope of this instruction. A good starting point for configuring our cache is the Nix documentation on binary caches, available at: &lt;a href=&#34;https://nixos.wiki/wiki/Binary_Cache&#34;&gt;NixOS Wiki on Binary Cache&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The binary cache is typically configured using the &lt;code&gt;nixConfig&lt;/code&gt; attribute in our flake definition as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nixConfig = {&#xA;    extra-substituters = &#34;https://nixcache.chainweb.com https://cache.iog.io&#34;;&#xA;    trusted-public-keys = &#34;nixcache.chainweb.com:FVN503ABX9F8x8K0ptnc99XEz5SaA4Sks6kNcZn2pBY= iohk.cachix.org-1:DpRUyj7h7V830dp/i6Nti+NEO2/nhblbov/8MW7Rqoo= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=&#34;;&#xA;  };&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Executing &lt;code&gt;nix build&lt;/code&gt; within the root directory of this project will create a build under the &lt;code&gt;./result&lt;/code&gt; symbolic link. This will contain the artifact within its &lt;code&gt;bin&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;Entering the developer shell using &lt;code&gt;nix develop&lt;/code&gt; will bring all required dependencies into scope, enabling the use of &lt;code&gt;cabal build&lt;/code&gt; to compile the final project.&lt;/p&gt; &#xA;&lt;h2&gt;Editor Integration&lt;/h2&gt; &#xA;&lt;p&gt;We offer built-in integration with Microsoft&#39;s &lt;a href=&#34;https://microsoft.github.io/language-server-protocol/&#34;&gt;Language Server Protocol&lt;/a&gt; (LSP). Check your editor&#39;s support for the LSP protocol and the specific setup instructions. The server itself can be initiated as follows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pact --lsp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We currently support the following featureset:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Document diagnostics&lt;/li&gt; &#xA; &lt;li&gt;Hover information (Builtins and user specified docs)&lt;/li&gt; &#xA; &lt;li&gt;Jump to definition (Toplevel)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] We continue to add specifics on major editors such as Emacs, vim, and VSCode.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This code is distributed under the terms of the BSD3 license. See &lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/pact-5/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bitemyapp/bloodhound</title>
    <updated>2024-01-20T01:31:50Z</updated>
    <id>tag:github.com,2024-01-20:/bitemyapp/bloodhound</id>
    <link href="https://github.com/bitemyapp/bloodhound" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Haskell Elasticsearch client and query DSL&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bloodhound &lt;a href=&#34;https://travis-ci.org/bitemyapp/bloodhound&#34;&gt;&lt;img src=&#34;https://travis-ci.org/bitemyapp/bloodhound.svg?sanitize=true&#34; alt=&#34;TravisCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hackage.haskell.org/package/bloodhound&#34;&gt;&lt;img src=&#34;https://img.shields.io/hackage/v/bloodhound.svg?style=flat&#34; alt=&#34;Hackage&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bitemyapp/bloodhound/master/bloodhound.jpg&#34; alt=&#34;Bloodhound (dog)&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Elasticsearch client and query DSL for Haskell&lt;/h1&gt; &#xA;&lt;h2&gt;Why?&lt;/h2&gt; &#xA;&lt;p&gt;Search doesn&#39;t have to be hard. Let the dog do it.&lt;/p&gt; &#xA;&lt;h2&gt;Endorsements&lt;/h2&gt; &#xA;&lt;p&gt;&#34;Bloodhound makes Elasticsearch almost tolerable!&#34; - Almost-gruntled user&lt;/p&gt; &#xA;&lt;p&gt;&#34;ES is a nightmare but Bloodhound at least makes it tolerable.&#34; - Same user, later opinion.&lt;/p&gt; &#xA;&lt;h2&gt;Version compatibility&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://travis-ci.org/bitemyapp/bloodhound&#34;&gt;TravisCI&lt;/a&gt; for a listing of Elasticsearch version we test against.&lt;/p&gt; &#xA;&lt;h2&gt;Stability&lt;/h2&gt; &#xA;&lt;p&gt;Bloodhound is stable for production use. I will strive to avoid breaking API compatibility from here on forward, but dramatic features like a type-safe, fully integrated mapping API may require breaking things in the future.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;The TravisCI tests are run using &lt;a href=&#34;http://docs.haskellstack.org/en/stable/README.html&#34;&gt;Stack&lt;/a&gt;. You should use Stack instead of &lt;code&gt;cabal&lt;/code&gt; to build and test Bloodhound to avoid compatibility problems. You will also need to have an Elasticsearch instance running at &lt;code&gt;localhost:9200&lt;/code&gt; in order to execute some of the tests. See the &#34;Version compatibility&#34; section above for a list of Elasticsearch versions that are officially validated against in TravisCI.&lt;/p&gt; &#xA;&lt;p&gt;Steps to run the tests locally:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Dig through the [past releases] (&lt;a href=&#34;https://www.elastic.co/downloads/past-releases&#34;&gt;https://www.elastic.co/downloads/past-releases&lt;/a&gt;) section of the Elasticsearch download page and install the desired Elasticsearch versions.&lt;/li&gt; &#xA; &lt;li&gt;Install [Stack] (&lt;a href=&#34;http://docs.haskellstack.org/en/stable/README.html#how-to-install&#34;&gt;http://docs.haskellstack.org/en/stable/README.html#how-to-install&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;In your local Bloodhound directory, run &lt;code&gt;stack setup &amp;amp;&amp;amp; stack build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Start the desired version of Elasticsearch at &lt;code&gt;localhost:9200&lt;/code&gt;, which should be the default.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;stack test&lt;/code&gt; in your local Bloodhound directory.&lt;/li&gt; &#xA; &lt;li&gt;The unit tests will pass if you re-execute &lt;code&gt;stack test&lt;/code&gt;. If you want to start with a clean slate, stop your Elasticsearch instance, delete the &lt;code&gt;data/&lt;/code&gt; folder in the Elasticsearch installation, restart Elasticsearch, and re-run &lt;code&gt;stack test&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Any contribution is welcomed, for consistency reason &lt;a href=&#34;https://github.com/tweag/ormolu&#34;&gt;&lt;code&gt;ormolu&lt;/code&gt;&lt;/a&gt; is used.&lt;/p&gt; &#xA;&lt;h1&gt;Hackage page and Haddock documentation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/package/bloodhound&#34;&gt;http://hackage.haskell.org/package/bloodhound&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Elasticsearch Tutorial&lt;/h1&gt; &#xA;&lt;p&gt;It&#39;s not using Bloodhound, but if you need an introduction to or overview of Elasticsearch and how to use it, you can use &lt;a href=&#34;https://vimeo.com/106463167&#34;&gt;this screencast&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Examples&lt;/h1&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;htts://github.com/bitemyapp/bloodhound/tree/master/examples&#34;&gt;examples&lt;/a&gt; directory for example code.&lt;/p&gt; &#xA;&lt;h2&gt;Index a document&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;indexDocument testIndex defaultIndexDocumentSettings exampleTweet (DocId &#34;1&#34;)&#xA;{-&#xA;IndexedDocument&#xA;  { idxDocIndex = &#34;twitter&#34;&#xA;  , idxDocType = &#34;_doc&#34;&#xA;  , idxDocId = &#34;1&#34;&#xA;  , idxDocVersion = 3&#xA;  , idxDocResult = &#34;updated&#34;&#xA;  , idxDocShards =&#xA;      ShardResult&#xA;        { shardTotal = 1&#xA;        , shardsSuccessful = 1&#xA;        , shardsSkipped = 0&#xA;        , shardsFailed = 0&#xA;        }&#xA;  , idxDocSeqNo = 2&#xA;  , idxDocPrimaryTerm = 1&#xA;  }&#xA;-}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Fetch documents&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;let query = TermQuery (Term &#34;user&#34; &#34;bitemyapp&#34;) boost&#xA;let search = mkSearch (Just query) boost&#xA;searchByIndex @_ @Tweet testIndex search&#xA;{-&#xA;SearchResult&#xA;    { took = 1&#xA;    , timedOut = False&#xA;    , shards =&#xA;            ShardResult&#xA;                { shardTotal = 1&#xA;                , shardsSuccessful = 1&#xA;                , shardsSkipped = 0&#xA;                , shardsFailed = 0&#xA;                }&#xA;    , searchHits =&#xA;            SearchHits&#xA;                { hitsTotal = HitsTotal { value = 2 , relation = HTR_EQ }&#xA;                , maxScore = Just 0.18232156&#xA;                , hits =&#xA;                        [ Hit&#xA;                                { hitIndex = IndexName &#34;twitter&#34;&#xA;                                , hitDocId = DocId &#34;1&#34;&#xA;                                , hitScore = Just 0.18232156&#xA;                                , hitSource =&#xA;                                        Just&#xA;                                            Tweet&#xA;                                                { user = &#34;bitemyapp&#34;&#xA;                                                , postDate = 2009-06-18 00:00:10 UTC&#xA;                                                , message = &#34;Use haskell!&#34;&#xA;                                                , age = 10000&#xA;                                                , location = LatLon { lat = 40.12 , lon = -71.3 }&#xA;                                                }&#xA;                                , hitSort = Nothing&#xA;                                , hitFields = Nothing&#xA;                                , hitHighlight = Nothing&#xA;                                , hitInnerHits = Nothing&#xA;                                }&#xA;                        , Hit&#xA;                                { hitIndex = IndexName &#34;twitter&#34;&#xA;                                , hitDocId = DocId &#34;2&#34;&#xA;                                , hitScore = Just 0.18232156&#xA;                                , hitSource =&#xA;                                        Just&#xA;                                            Tweet&#xA;                                                { user = &#34;bitemyapp&#34;&#xA;                                                , postDate = 2009-06-18 00:00:10 UTC&#xA;                                                , message = &#34;Use haskell!&#34;&#xA;                                                , age = 10000&#xA;                                                , location = LatLon { lat = 40.12 , lon = -71.3 }&#xA;                                                }&#xA;                                , hitSort = Nothing&#xA;                                , hitFields = Nothing&#xA;                                , hitHighlight = Nothing&#xA;                                , hitInnerHits = Nothing&#xA;                                }&#xA;                        ]&#xA;                }&#xA;    , aggregations = Nothing&#xA;    , scrollId = Nothing&#xA;    , suggest = Nothing&#xA;    , pitId = Nothing&#xA;    }&#xA;-}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Contributors&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitemyapp&#34;&gt;Chris Allen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/latkins&#34;&gt;Liam Atkinson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chrisguiney&#34;&gt;Christopher Guiney&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ccarter&#34;&gt;Curtis Carter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MichaelXavier&#34;&gt;Michael Xavier&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bobjflong&#34;&gt;Bob Long&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MaxGabriel&#34;&gt;Maximilian Tagher&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/annakopp&#34;&gt;Anna Kopp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/supki&#34;&gt;Matvey B. Aksenov&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MaxDaten&#34;&gt;Jan-Philip Loos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/blackheaven&#34;&gt;Gautier DI FOLCO&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Possible future functionality&lt;/h1&gt; &#xA;&lt;h2&gt;Span Queries&lt;/h2&gt; &#xA;&lt;p&gt;Beginning here: &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-span-first-query.html&#34;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-span-first-query.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Function Score Query&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-function-score-query.html&#34;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-function-score-query.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Node discovery and failover&lt;/h2&gt; &#xA;&lt;p&gt;Might require TCP support.&lt;/p&gt; &#xA;&lt;h2&gt;Support for TCP access to Elasticsearch&lt;/h2&gt; &#xA;&lt;p&gt;Pretend to be a transport client?&lt;/p&gt; &#xA;&lt;h2&gt;Bulk cluster-join merge&lt;/h2&gt; &#xA;&lt;p&gt;Might require making a lucene index on disk with the appropriate format.&lt;/p&gt; &#xA;&lt;h2&gt;GeoShapeQuery&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-geo-shape-query.html&#34;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-geo-shape-query.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;GeoShapeFilter&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-geo-shape-filter.html&#34;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-geo-shape-filter.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Geohash cell filter&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-geohash-cell-filter.html&#34;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-geohash-cell-filter.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;HasChild Filter&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-has-child-filter.html&#34;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-has-child-filter.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;HasParent Filter&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-has-parent-filter.html&#34;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-has-parent-filter.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Indices Filter&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-indices-filter.html&#34;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-indices-filter.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Query Filter&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-filter.html&#34;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-filter.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Script based sorting&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-sort.html#_script_based_sorting&#34;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-sort.html#_script_based_sorting&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Collapsing redundantly nested and/or structures&lt;/h2&gt; &#xA;&lt;p&gt;The Seminearring instance, if deeply nested can possibly produce nested structure that is redundant. Depending on how this affects ES performance, reducing this structure might be valuable.&lt;/p&gt; &#xA;&lt;h2&gt;Runtime checking for cycles in data structures&lt;/h2&gt; &#xA;&lt;p&gt;check for n &amp;gt; 1 occurrences in DFS:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/package/stable-maps-0.0.5/docs/System-Mem-StableName-Dynamic.html&#34;&gt;http://hackage.haskell.org/package/stable-maps-0.0.5/docs/System-Mem-StableName-Dynamic.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/package/stable-maps-0.0.5/docs/System-Mem-StableName-Dynamic-Map.html&#34;&gt;http://hackage.haskell.org/package/stable-maps-0.0.5/docs/System-Mem-StableName-Dynamic-Map.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Photo Origin&lt;/h1&gt; &#xA;&lt;p&gt;Photo from HA! Designs: &lt;a href=&#34;https://www.flickr.com/photos/hadesigns/&#34;&gt;https://www.flickr.com/photos/hadesigns/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Megaleo/Minehack</title>
    <updated>2024-01-20T01:31:50Z</updated>
    <id>tag:github.com,2024-01-20:/Megaleo/Minehack</id>
    <link href="https://github.com/Megaleo/Minehack" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A sandbox free-world roguelike game!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Minehack&lt;/h1&gt; &#xA;&lt;p&gt;A sandbox free-world roguelike game!&lt;/p&gt;</summary>
  </entry>
</feed>