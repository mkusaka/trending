<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-25T01:31:49Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jaspervdj/websockets</title>
    <updated>2023-12-25T01:31:49Z</updated>
    <id>tag:github.com,2023-12-25:/jaspervdj/websockets</id>
    <link href="https://github.com/jaspervdj/websockets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Haskell library for creating WebSocket-capable servers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;websockets&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/hackage/v/websockets&#34; alt=&#34;Hackage Version&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/jaspervdj/websockets/ci.yml&#34; alt=&#34;GitHub Workflow Status (with event)&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provides a sensible, clean and simple way to write WebSocket server and client in Haskell.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Provides Server/Client implementations of the websocket protocol&lt;/li&gt; &#xA; &lt;li&gt;Ping/Pong building blocks for stale connection checking&lt;/li&gt; &#xA; &lt;li&gt;TLS support via &lt;a href=&#34;https://hackage.haskell.org/package/wuss&#34;&gt;wuss&lt;/a&gt; package&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Caveats&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jaspervdj/websockets/issues/159&#34;&gt;Doesn&#39;t implement client ping/pong&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jaspervdj/websockets/issues/119&#34;&gt;Send doesn&#39;t support streaming&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jaspervdj/websockets/issues/48&#34;&gt;Requires careful handling of exceptions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jaspervdj/websockets/issues/208&#34;&gt;DeflateCompression isn&#39;t thread-safe&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/jaspervdj/websockets/master/example/server.lhs&#34;&gt;server&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/jaspervdj/websockets/master/example/client.hs&#34;&gt;client&lt;/a&gt; implementations.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Using cabal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cabal install websockets&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;An initial WebSockets library was written in 2010 by Siniša Biđin. In 2011, it was rewritten from scratch, and extended to its current state by Jasper Van der Jeugt, who is also the current maintainer.&lt;/p&gt; &#xA;&lt;p&gt;Contributors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Alex Lang&lt;/li&gt; &#xA; &lt;li&gt;Carl Chatfield&lt;/li&gt; &#xA; &lt;li&gt;Fedor Gogolev&lt;/li&gt; &#xA; &lt;li&gt;Marcin Tolysz&lt;/li&gt; &#xA; &lt;li&gt;Nathan Howell&lt;/li&gt; &#xA; &lt;li&gt;Steffen Schuldenzucker&lt;/li&gt; &#xA; &lt;li&gt;Yi Huang&lt;/li&gt; &#xA; &lt;li&gt;Domen Kožar&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are always welcome!&lt;/p&gt; &#xA;&lt;p&gt;This library is production-quality. Therefore we have very high standards in terms of code style, API quality and testing.&lt;/p&gt; &#xA;&lt;p&gt;We have three kinds of tests:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Haskell-based tests (&lt;code&gt;tests/haskell&lt;/code&gt;), which use the &lt;code&gt;test-framework&lt;/code&gt; library&lt;/li&gt; &#xA; &lt;li&gt;Integration tests, available in &lt;code&gt;tests/javascript&lt;/code&gt;. These require a browser to run.&lt;/li&gt; &#xA; &lt;li&gt;We also run the extensive &lt;a href=&#34;https://github.com/crossbario/autobahn-testsuite&#34;&gt;autobahn testsuite&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Copilot-Language/copilot-rust</title>
    <updated>2023-12-25T01:31:49Z</updated>
    <id>tag:github.com,2023-12-25:/Copilot-Language/copilot-rust</id>
    <link href="https://github.com/Copilot-Language/copilot-rust" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Rust backend for Copilot&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://app.travis-ci.com/github/Copilot-Language/copilot&#34;&gt;&lt;img src=&#34;https://travis-ci.com/Copilot-Language/copilot.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copilot is a runtime verification framework written in Haskell. It allows the user to write programs in a simple but powerful way using a stream-based approach.&lt;/p&gt; &#xA;&lt;p&gt;Programs can be interpreted for testing, or translated Rust code to be incorporated in a project, or as a standalone application. The Rust backend ensures us that the output is constant in memory and time, making it suitable for systems with hard realtime requirements.&lt;/p&gt; &#xA;&lt;p&gt;This project is currently an attempt at developing a proof-of-concept rust backend for Copilot.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This project is ongoing and community driven&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Please use the discussions on github to communicate with other community members.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Please make sure you read &lt;a href=&#34;https://github.com/Copilot-Language/copilot-rust/discussions/1&#34;&gt;the welcoming message&lt;/a&gt;, which sets the tone for how interaction should happen.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Please do not upload any packages to hackage for this backend yet. This is a proof of concept; we&#39;ll upload the package once we decide it&#39;s ready for users.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copilot is distributed under the BSD-3-Clause license, which can be found &lt;a href=&#34;https://raw.githubusercontent.com/Copilot-Language/copilot/master/copilot-rust/LICENSE&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>