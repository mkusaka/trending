<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-25T01:32:14Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jeffbr13/conway.hs</title>
    <updated>2022-12-25T01:32:14Z</updated>
    <id>tag:github.com,2022-12-25:/jeffbr13/conway.hs</id>
    <link href="https://github.com/jeffbr13/conway.hs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Conway&#39;s Game of Life, implemented in Haskell!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;conway.hs&lt;/h1&gt; &#xA;&lt;p&gt;Conway&#39;s &lt;a href=&#34;http://en.wikipedia.org/wiki/Conway%27s_Game_of_Life&#34;&gt;Game of Life&lt;/a&gt;, implemented in Haskell!&lt;/p&gt; &#xA;&lt;h2&gt;Compile &amp;amp; Run&lt;/h2&gt; &#xA;&lt;p&gt;To compile and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ghc conway.hs&#xA;$ ./conway&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Playing the Game&lt;/h2&gt; &#xA;&lt;p&gt;By default, the game begins with a lone glider, venturing out over the barren cells of infinity...&lt;/p&gt; &#xA;&lt;p&gt;If this is too sad for your pathetic human heart to bear, then edit the &lt;code&gt;main&lt;/code&gt; monad at the top of &lt;code&gt;conway.hs&lt;/code&gt;, changing &lt;code&gt;glider&lt;/code&gt; in the line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;main = playGame glider&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to any of the (currently 3) built-in initial boards, defined at the bottom of the file:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;blinker&lt;/code&gt; - a line of 3 cells, which rotates or blinks every turn&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Glider_(Conway%27s_Life)&#34;&gt;&lt;code&gt;glider&lt;/code&gt;&lt;/a&gt; - the simplest spaceship&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lwss&lt;/code&gt; - a slightly larger spaceship.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Otherwise you can define your own boards, and use them!&lt;/p&gt; &#xA;&lt;h2&gt;How it Works&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;ll ignore &lt;code&gt;Â¡EL MONSTER GRAPHICS ENGINE!&lt;/code&gt; in the source code for now, since, it&#39;s somewhat ah.. incomplete, shall we say?&lt;/p&gt; &#xA;&lt;p&gt;No, no, the magic all happens in the &lt;code&gt;iterateBoard&lt;/code&gt; function! When you feed it a non-empty board, it gleefully generates a list of all the cells in that board which could change in the next turn.&lt;/p&gt; &#xA;&lt;p&gt;For each of those cells, it counts up how many of its neighbours are alive right now, and applies Conway&#39;s rules of life, in the &lt;code&gt;iterateCell&lt;/code&gt; function:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If a living cell has less than 2 neighbours, it dies of loneliness (cue: &#39;Awwww&#39;s!)&lt;/li&gt; &#xA; &lt;li&gt;If it has more than 3 neighbours, then they step on each others toes or something - and the poor cell dies then, too!&lt;/li&gt; &#xA; &lt;li&gt;But if a living cell has just 2 or 3 neighbours, everything is fine and dandy.&lt;/li&gt; &#xA; &lt;li&gt;In fact, if an empty cell has exactly 3 neighbours, then something beautiful happens - a living cell appears between the 3 of them (because that&#39;s acceptable in some cultures, okay!?)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And after chewing through all the cells, applying these rules, &lt;code&gt;iterateBoard&lt;/code&gt; spits out a new board. Well, almost. It throws away all those pesky dead cells which were hanging around, and using up space, with the &lt;code&gt;onlyActiveCells&lt;/code&gt; function, so we can forget about them! (Although we will never forget their sacrifices, etc. etc.)&lt;/p&gt; &#xA;&lt;p&gt;Everything else is really just a (complicated, computationally inefficient...) helper function! Just follow the definitions down the page to get to the bottom of it all, so to speak...&lt;/p&gt; &#xA;&lt;!-- link refs --&gt;</summary>
  </entry>
</feed>