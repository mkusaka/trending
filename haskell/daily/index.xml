<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-13T01:35:11Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dnikolovv/practical-haskell</title>
    <updated>2022-09-13T01:35:11Z</updated>
    <id>tag:github.com,2022-09-13:/dnikolovv/practical-haskell</id>
    <link href="https://github.com/dnikolovv/practical-haskell" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of Practical Haskell bits.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;A collection of various practical Haskell bits.&lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;It happens to all of us.&lt;/p&gt; &#xA;&lt;p&gt;Once in a while you stumble upon a problem that seems way too familiar. You remember that you&#39;ve either solved it before or saw it in a blog post somewhere.&lt;/p&gt; &#xA;&lt;p&gt;You start browsing through Reddit, old projects and bookmarks, searching aggressively for that single line of code or function that you just need to copy-paste or at least take a glimpse at to remember what it was about. It&#39;s just one &#34;bit&#34; that you need.&lt;/p&gt; &#xA;&lt;p&gt;Practical Haskell Bits is an initiative to contain as many of these as possible and become the go-to place for real-world patterns, snippets and popular library examples.&lt;/p&gt; &#xA;&lt;p&gt;Bits should be aimed towards &lt;strong&gt;everyone&lt;/strong&gt; in the community, regardless of their level of experience or understanding.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;No example is too trivial!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The Haskell community is often criticized for focusing on things that are way too complicated to outsiders (and frankly, most &#34;intermediate&#34; Haskellers as well) and pushing away beginners. This is true and in order to attract more people and have them become productive, we need to address it.&lt;/p&gt; &#xA;&lt;p&gt;Not everyone can figure out how to use a library by reading the source code.&lt;/p&gt; &#xA;&lt;p&gt;Some people will struggle with &#34;basic&#34; things such as parsing JSON or setting up a web server. It&#39;s exactly these people that will not have the confidence to ask a question because seemingly everyone is busy looking at &lt;a href=&#34;https://www.reddit.com/r/haskell/comments/xah8v1/examples_of_compiler_optimizations_changing/&#34;&gt;&lt;code&gt;examples of compiler optimizations changing asymptotic complexity&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;What defines a Practical Haskell Bit?&lt;/h1&gt; &#xA;&lt;h4&gt;A Practical Haskell Bit is a &lt;strong&gt;mini-project&lt;/strong&gt; that:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Looks at a single, well-defined scenario&lt;/li&gt; &#xA; &lt;li&gt;Is of production quality&lt;/li&gt; &#xA; &lt;li&gt;Contains as little code and dependencies as possible&lt;/li&gt; &#xA; &lt;li&gt;Is self-contained and buildable on its own&lt;/li&gt; &#xA; &lt;li&gt;Reflects the current (or at least some) best practices&lt;/li&gt; &#xA; &lt;li&gt;Is suitable for copy-pasting or just refreshing your memory&lt;/li&gt; &#xA; &lt;li&gt;Has a sufficient, but not necessarily detailed explanation&lt;/li&gt; &#xA; &lt;li&gt;Aims to use terminology and examples as close to the real world as possible&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;A Practical Haskell Bit is &lt;strong&gt;not&lt;/strong&gt;:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[Necessarily] a detailed tutorial&lt;/li&gt; &#xA; &lt;li&gt;An incomplete code snippet&lt;/li&gt; &#xA; &lt;li&gt;A full blown project example (e.g. &lt;a href=&#34;https://raw.githubusercontent.com/dnikolovv/practical-haskell/main/realworld.io&#34;&gt;realworld.io&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;A blog post that you need to follow to put the code together&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Examples and non-examples:&lt;/h1&gt; &#xA;&lt;h4&gt;Good Practical Haskell Bit candidates:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Streaming &lt;code&gt;persistent&lt;/code&gt; queries using &lt;code&gt;conduit&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Integrating with an external API via &lt;code&gt;servant-client&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Making your &lt;code&gt;wai&lt;/code&gt; app AWS Lambda compatible&lt;/li&gt; &#xA; &lt;li&gt;Setting up your application monad and business logic with &lt;code&gt;mtl&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Protecting &lt;code&gt;servant&lt;/code&gt; routes with a JWT token&lt;/li&gt; &#xA; &lt;li&gt;Using smart constructors&lt;/li&gt; &#xA; &lt;li&gt;Record update scenarios via &lt;code&gt;lens&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Logging to multiple destinations (e.g. file + stdout) via &lt;code&gt;katip&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Property testing with &lt;code&gt;QuickCheck&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;One might argue that for examples using specific libraries, we should just focus on updating the documentation. I support that 100%, but there are multiple points of view.&lt;/p&gt; &#xA;&lt;p&gt;Better documentation only helps only if you&#39;re &lt;strong&gt;already aware&lt;/strong&gt; of the library in question.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s easy to underestimate how many people haven&#39;t heard about &lt;code&gt;QuickCheck&lt;/code&gt;, &lt;code&gt;katip&lt;/code&gt; or even &lt;code&gt;servant&lt;/code&gt;. Containing and organizing all examples in a single repository makes them &#34;contagious&#34;. You come for 1 thing, but find out a few others.&lt;/p&gt; &#xA;&lt;h4&gt;Bad Practical Haskell Bit candidates:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A CRUD app&lt;/li&gt; &#xA; &lt;li&gt;A console game&lt;/li&gt; &#xA; &lt;li&gt;A snippet containing some part of a solution&lt;/li&gt; &#xA; &lt;li&gt;A snippet without sufficient context&lt;/li&gt; &#xA; &lt;li&gt;etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions of any kind are welcome.&lt;/p&gt;</summary>
  </entry>
</feed>