<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-01T01:34:01Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mihaimaruseac/hindent</title>
    <updated>2023-01-01T01:34:01Z</updated>
    <id>tag:github.com,2023-01-01:/mihaimaruseac/hindent</id>
    <link href="https://github.com/mihaimaruseac/hindent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Haskell pretty printer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;hindent &lt;a href=&#34;https://hackage.haskell.org/package/hindent&#34;&gt;&lt;img src=&#34;https://img.shields.io/hackage/v/hindent.svg?style=flat&#34; alt=&#34;Hackage&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/mihaimaruseac/hindent/workflows/CI%20(Stack)/badge.svg?sanitize=true&#34; alt=&#34;CI (Stack)&#34;&gt; &lt;img src=&#34;https://github.com/mihaimaruseac/hindent/workflows/CI%20(Cabal)/badge.svg?sanitize=true&#34; alt=&#34;CI (Cabal)&#34;&gt; &lt;a href=&#34;https://api.securityscorecards.dev/projects/github.com/mihaimaruseac/hindent&#34;&gt;&lt;img src=&#34;https://api.securityscorecards.dev/projects/github.com/mihaimaruseac/hindent/badge&#34; alt=&#34;OpenSSF Scorecard&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Haskell pretty printer&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mihaimaruseac/hindent/raw/master/TESTS.md&#34;&gt;Examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ stack install hindent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ hindent --help&#xA;hindent - Reformat Haskell source code&#xA;&#xA;Usage: hindent [--version | [--line-length ARG]&#xA;                 [--indent-size ARG | --tab-size ARG] [--no-force-newline]&#xA;                 [--sort-imports | --no-sort-imports] [--style STYLE]&#xA;                 [-X GHCEXT] [--validate] [FILENAMES]]&#xA;&#xA;Available options:&#xA;  --version                Print the version&#xA;  --line-length ARG        Desired length of lines (default: 80)&#xA;  --indent-size ARG        Indentation size in spaces (default: 2)&#xA;  --tab-size ARG           Same as --indent-size, for compatibility&#xA;  --no-force-newline       Don&#39;t force a trailing newline&#xA;  --sort-imports           Sort imports in groups&#xA;  --no-sort-imports        Don&#39;t sort imports&#xA;  --style STYLE            Style to print with (historical, now ignored)&#xA;  -X GHCEXT                Language extension&#xA;  --validate               Check if files are formatted without changing them&#xA;  -h,--help                Show this help text&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;hindent is used in a pipeline style&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cat path/to/sourcefile.hs | hindent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default indentation size is &lt;code&gt;2&lt;/code&gt; spaces. Configure indentation size with &lt;code&gt;--indent-size&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ echo &#39;example = case x of Just p -&amp;gt; foo bar&#39; | hindent --indent-size 2; echo&#xA;example =&#xA;  case x of&#xA;    Just p -&amp;gt; foo bar&#xA;$ echo &#39;example = case x of Just p -&amp;gt; foo bar&#39; | hindent --indent-size 4; echo&#xA;example =&#xA;    case x of&#xA;        Just p -&amp;gt; foo bar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Customization&lt;/h2&gt; &#xA;&lt;p&gt;Create a &lt;code&gt;.hindent.yaml&lt;/code&gt; file in your project directory or in your &lt;code&gt;~/&lt;/code&gt; home directory. The following fields are accepted and are the default:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;indent-size: 2&#xA;line-length: 80&#xA;force-trailing-newline: true&#xA;line-breaks: [&#34;:&amp;gt;&#34;, &#34;:&amp;lt;|&amp;gt;&#34;]&#xA;extensions:&#xA;  - DataKinds&#xA;  - GADTs&#xA;  - TypeApplications&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, hindent preserves the newline or lack of newline in your input. With &lt;code&gt;force-trailing-newline&lt;/code&gt;, it will make sure there is always a trailing newline.&lt;/p&gt; &#xA;&lt;p&gt;hindent can be forced to insert a newline before specific operators and tokens with &lt;code&gt;line-breaks&lt;/code&gt;. This is especially useful when utilizing libraries like &lt;a href=&#34;https://docs.servant.dev/&#34;&gt;&lt;code&gt;servant&lt;/code&gt;&lt;/a&gt; which use long type aliases.&lt;/p&gt; &#xA;&lt;p&gt;Using &lt;code&gt;extensions&lt;/code&gt;, hindent can be made aware of valid syntactic compiler extensions that would normally be considered invalid syntax.&lt;/p&gt; &#xA;&lt;p&gt;It is also possible to specify which extensions HIndent runs with in your &lt;code&gt;.hindent.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;extensions:&#xA;  - MagicHash&#xA;  - RecursiveDo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Emacs&lt;/h2&gt; &#xA;&lt;p&gt;In &lt;a href=&#34;https://github.com/mihaimaruseac/hindent/raw/master/elisp/hindent.el&#34;&gt;elisp/hindent.el&lt;/a&gt; there is &lt;code&gt;hindent-mode&lt;/code&gt;, which provides keybindings to reindent parts of the buffer:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;M-q&lt;/code&gt; reformats the current declaration. When inside a comment, it fills the current paragraph instead, like the standard &lt;code&gt;M-q&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;C-M-\&lt;/code&gt; reformats the current region.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To enable it, add the following to your init file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(add-to-list &#39;load-path &#34;/path/to/hindent/elisp&#34;)&#xA;(require &#39;hindent)&#xA;(add-hook &#39;haskell-mode-hook #&#39;hindent-mode)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Vim&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;&#39;formatprg&#39;&lt;/code&gt; option lets you use an external program (like hindent) to format your text. Put the following line into ~/.vim/ftplugin/haskell.vim to set this option for Haskell files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;setlocal formatprg=hindent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can format with hindent using &lt;code&gt;gq&lt;/code&gt;. Read &lt;code&gt;:help gq&lt;/code&gt; and &lt;code&gt;help &#39;formatprg&#39;&lt;/code&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;Note that unlike in emacs you have to take care of selecting a sensible buffer region as input to hindent yourself. If that is too much trouble you can try &lt;a href=&#34;https://github.com/gilligan/vim-textobj-haskell&#34;&gt;vim-textobj-haskell&lt;/a&gt; which provides a text object for top level bindings.&lt;/p&gt; &#xA;&lt;p&gt;In order to format an entire source file execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;:%!hindent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively you could use the &lt;a href=&#34;https://github.com/alx741/vim-hindent&#34;&gt;vim-hindent&lt;/a&gt; plugin which runs hindent automatically when a Haskell file is saved.&lt;/p&gt; &#xA;&lt;h2&gt;Atom&lt;/h2&gt; &#xA;&lt;p&gt;Fortunately, you can use &lt;a href=&#34;https://atom.io/packages/ide-haskell&#34;&gt;https://atom.io/packages/ide-haskell&lt;/a&gt; with the path to hindent specified instead of that to stylish-haskell. Works like a charm that way!&lt;/p&gt; &#xA;&lt;h2&gt;IntelliJ / other JetBrains IDEs&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the &#34;HaskForce&#34; Haskell plugin (this is so we get the language type recognized in the file watcher)&lt;/li&gt; &#xA; &lt;li&gt;Install the &#34;File Watchers&#34; plugin under &#34;Browse Repositories&#34;&lt;/li&gt; &#xA; &lt;li&gt;Add a File Watcher with &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;File type: Haskell Language&lt;/li&gt; &#xA;   &lt;li&gt;Program: &lt;code&gt;/path/to/hindent&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Arguments: &lt;code&gt;$FilePath$&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Immediate file synchronization: off&lt;/li&gt; &#xA;   &lt;li&gt;Show console: Error&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img src=&#34;https://i.imgur.com/gghTjjn.png&#34; width=&#34;500&#34;&gt; &#xA;&lt;p&gt;Now whenever you save a file, &lt;code&gt;hindent&lt;/code&gt; should autoformat it.&lt;/p&gt;</summary>
  </entry>
</feed>