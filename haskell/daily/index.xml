<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-17T01:33:11Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kadena-io/chainweb-mining-client</title>
    <updated>2022-12-17T01:33:11Z</updated>
    <id>tag:github.com,2022-12-17:/kadena-io/chainweb-mining-client</id>
    <link href="https://github.com/kadena-io/chainweb-mining-client" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A mining client for Kadena&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mining Client for Kadena&lt;/h1&gt; &#xA;&lt;p&gt;A mining client for Kadena&#39;s chainweb node mining API. It supports&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;mining with ASICs through a stratum server,&lt;/li&gt; &#xA; &lt;li&gt;simulated mining for testing,&lt;/li&gt; &#xA; &lt;li&gt;multi threaded CPU mining,&lt;/li&gt; &#xA; &lt;li&gt;external mining workers (e.g. a GPU).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Competitive mining on the Kadena Mainnet requires special mining hardware (ASIC), which connects to a Stratum Server from where it obtains work.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;All other mining modes (GPU, CPU, and simulation) are intended only for testing.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-mining-client/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-mining-client/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-mining-client/master/#usage-examples&#34;&gt;Usage Examples&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-mining-client/master/#generating-a-new-key-pair&#34;&gt;Generating a New Key Pair&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-mining-client/master/#mining-on-mainnet-with-an-asic&#34;&gt;Mining on Mainnet With an ASIC&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-mining-client/master/#cpu-mining&#34;&gt;CPU Mining&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-mining-client/master/#gpu-mining&#34;&gt;GPU Mining&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-mining-client/master/#creating-a-configuration-file&#34;&gt;Creating a Configuration File&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-mining-client/master/#related-resources&#34;&gt;Related Resources&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;A docker image of the latest version is available at &lt;code&gt;ghcr.io/kadena-io/chainweb-mining-client:lastest&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Binaries can also be compiled with a recent version of GHC and cabal directly from &lt;a href=&#34;https://hackage.haskell.org/package/chainweb-mining-client&#34;&gt;Hackage&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cabal install chainweb-mining-client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or from the GitHub sources&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/kadena-io/chainweb-mining-client/&#xA;cd chainweb-mining-client&#xA;cabal build&#xA;cabal run chainweb-mining-client -- --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Calling &lt;code&gt;chainweb-mining-client --help&lt;/code&gt; provides an overview of the available usage options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Usage: chainweb-mining-client [--info] [--long-info] [-v|--version] [--license]&#xA;                              [-?|-h|--help]&#xA;                              [--print-config-as full|minimal|diff |&#xA;                                --print-config] [--config-file FILE]&#xA;                              [-r|--hash-rate ARG] [-n|--node DOMAIN:PORT]&#xA;                              [(-t|--tls) | --no-tls]&#xA;                              [(-x|--insecure) | --no-insecure]&#xA;                              [-k|--public-key ARG] [-a|--account ARG]&#xA;                              [-c|--thread-count ARG]&#xA;                              [--generate-key | --no-generate-key]&#xA;                              [-l|--log-level error|warn|info|debug]&#xA;                              [-w|--worker cpu|external|simulation|stratum|constant-delay]&#xA;                              [--external-worker-cmd ARG] [--stratum-port ARG]&#xA;                              [--stratum-interface ARG]&#xA;                              [--stratum-difficulty ARG] [-s|--stratum-rate ARG]&#xA;                              [--constant-delay-block-time ARG]&#xA;&#xA;  Kadena Chainweb Mining Client&#xA;&#xA;Available options:&#xA;  --info                   Print program info message and exit&#xA;  --long-info              Print detailed program info message and exit&#xA;  -v,--version             Print version string and exit&#xA;  --license                Print license of the program and exit&#xA;  -?,-h,--help             Show this help message&#xA;  --print-config-as full|minimal|diff&#xA;                           Print the parsed configuration to standard out and&#xA;                           exit&#xA;  --print-config           Print the parsed configuration to standard out and&#xA;                           exit. This is an alias for --print-config-as=full&#xA;  --config-file FILE       Configuration file in YAML or JSON format. If more&#xA;                           than a single config file option is present files are&#xA;                           loaded in the order in which they appear on the&#xA;                           command line.&#xA;  -r,--hash-rate ARG       hashes per second (only relevant for mining&#xA;                           simulation, ignored by the cpu worker)&#xA;  -n,--node DOMAIN:PORT    node to which to connect&#xA;  -t,--tls                 use TLS to connect to node&#xA;  --no-tls                 unset flag tls&#xA;  -x,--insecure            accept self-signed TLS certificates&#xA;  --no-insecure            unset flag insecure&#xA;  -k,--public-key ARG      public-key for the mining rewards account&#xA;  -a,--account ARG         account for the mining rewards (default: public-key&#xA;                           prefixed with &#39;k:&#39;)&#xA;  -c,--thread-count ARG    number of concurrent mining threads&#xA;  --generate-key           Generate a new key pair and exit&#xA;  --no-generate-key        unset flag generate-key&#xA;  -l,--log-level error|warn|info|debug&#xA;                           Level at which log messages are written to the&#xA;                           console&#xA;  -w,--worker cpu|external|simulation|stratum|constant-delay&#xA;                           The type of mining worker that is used&#xA;  --external-worker-cmd ARG&#xA;                           command that is used to call an external worker. When&#xA;                           the command is called the target value is added as&#xA;                           last parameter to the command line.&#xA;  --stratum-port ARG       the port on which the stratum server listens&#xA;  --stratum-interface ARG  network interface that the stratum server binds to&#xA;  --stratum-difficulty ARG How the difficulty for stratum mining shares is&#xA;                           choosen. Possible values are &#34;block&#34; for using the&#xA;                           block target of the most most recent notification of&#xA;                           new work, or number between 0 and 256 for specifiying&#xA;                           a fixed difficulty as logarithm of base 2 (number of&#xA;                           leading zeros).&#xA;  -s,--stratum-rate ARG    Rate (in milliseconds) at which a stratum worker&#xA;                           thread emits jobs.&#xA;  --constant-delay-block-time ARG&#xA;                           time at which a constant-delay worker emits blocks&#xA;&#xA;Configurations are loaded in order from the following sources:&#xA;  1. Configuration files from locations provided through --config-file options&#xA;     in the order as they appear.&#xA;  2. Command line options.&#xA;&#xA;Configuration file locations can be either local file system paths or remote&#xA;HTTP or HTTPS URLs. Remote URLs must start with either &#34;http://&#34; or &#34;https://&#34;.&#xA;&#xA;Configuration settings that are loaded later overwrite settings that were loaded&#xA;before.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Generating a New Key Pair&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;chainweb-mining-client --generate-key&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This outputs a public and a private key. The public key is given to the mining client. The private key must be kept secret.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;public:  87ef8fdb229ad10285ae191a168ea2ec0794621a127df21e372f41fd0246e4cf&#xA;private: 64ef6379db5ef6004aff98182688c6e8b4a5229e706f1ccf6a73b05b1432aedf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mining on Mainnet With an ASIC&lt;/h3&gt; &#xA;&lt;p&gt;chainweb-mining-client needs access to the mining API of a full &lt;a href=&#34;https://github.com/kadena-io/chainweb-node&#34;&gt;Chainweb node&lt;/a&gt; in the Kadena Mainnet. The node must be configured to enable the mining API with the Pact &lt;em&gt;public&lt;/em&gt; key (and, optionally, account name) of the miner. Rewards for mined blocks will be credited to that account. The default is to use the &lt;code&gt;k:&lt;/code&gt; account for the key.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;--enable-mining-coordination&lt;/code&gt;, &lt;code&gt;--mining-public-key&lt;/code&gt; can be used to configure chainweb-node for mining. The mining API is served on the service API port (default is 1848).&lt;/p&gt; &#xA;&lt;p&gt;Assuming that &lt;code&gt;example.com&lt;/code&gt; serves the chainweb-node mining API on port 1848, the following command can be used to run chainweb-mining-client with the stratum server on port 1917:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;chainweb-mining-client \&#xA;    --public-key 87ef8fdb229ad10285ae191a168ea2ec0794621a127df21e372f41fd0246e4cf \&#xA;    --node example.com:1848 \&#xA;    --stratum-port 1917&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Assuming that the host on which chainweb-mining-client runs is 192.168.1.2, the pool address that is used to configure the ASIC miner is &lt;code&gt;stratum+tcp://192.168.1.2:1917&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;One can point more than a single ASIC miner to the same chainweb-mining-client stratum server. All connected clients work together and all mining rewards are credited to the same account, that is configured in chainweb node.&lt;/p&gt; &#xA;&lt;p&gt;By default the stratum server sets the difficulty of the work that is sent to the mining clients to the actual difficulty of the block of the most recent work. This means that it can take a long time before the client solves any work. It also means that the target is reset for each new block.&lt;/p&gt; &#xA;&lt;p&gt;It is also possible to set a custom difficulty. As a consequence not all accepted solutions qualify as solved blocks, but ASIC miner may provide a more continuous feedback on its current performance. Some devices may also be more efficient in this mode an yield higher returns.&lt;/p&gt; &#xA;&lt;p&gt;The thread count determines how many independent stratum works are used to concurrently provide work to the clients. Each stratum worker receives one work header at a time from the chainweb-node mining API and emits jobs for that work to all clients at a configurable rate. The effective rate of jobs is higher than then configured rate because when upstream work gets preempted. Each client receives are all jobs from all workers.&lt;/p&gt; &#xA;&lt;p&gt;The following command runs two stratum workers that serve jobs at least every 500 milliseconds at a fixed difficulty level of 50.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;chainweb-mining-client \&#xA;    --public-key 87ef8fdb229ad10285ae191a168ea2ec0794621a127df21e372f41fd0246e4cf \&#xA;    --node example.com:1848 \&#xA;    --stratum-port 1917 \&#xA;    --stratum-difficulty=50 \&#xA;    --stratum-rate=500 \&#xA;    --thread-count=2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The solution space for each mining job is about 280 terra hashes. The &lt;code&gt;--stratum-rate&lt;/code&gt; should be chosen such that the mining devices does not perform more than that number of hashes within the provided time range. For instance, for an miner that performs 140TH/s the &lt;code&gt;--stratum-rate&lt;/code&gt; should be at least 2000 (2 seconds).&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;--stratum-difficulty&lt;/code&gt; parameter expects a integral number between 0 and 256. It denotes the difficulty as a logarithm of base 2. In practice the actual target uses a difficulty level of at least 42 and at most the difficulty of block of the current work.&lt;/p&gt; &#xA;&lt;p&gt;It may help to experiment a little with the &lt;code&gt;--stratum-difficulty&lt;/code&gt;, &lt;code&gt;--stratum-rate&lt;/code&gt;, and the &lt;code&gt;--thread-count&lt;/code&gt; parameters. We found, that small values for &lt;code&gt;--thread-count&lt;/code&gt; (one to three) and moderate values for &lt;code&gt;--stratum-difficulty&lt;/code&gt; (in the upper forties / lower fifties) yielded good results. The But that may differ between different devices and setups.&lt;/p&gt; &#xA;&lt;p&gt;If the chainweb-node mining API is served via a reverse proxy with TLS the &lt;code&gt;--tls&lt;/code&gt; flag must be used to enable HTTPS.&lt;/p&gt; &#xA;&lt;h3&gt;CPU Mining&lt;/h3&gt; &#xA;&lt;p&gt;Assuming that &lt;code&gt;example.com&lt;/code&gt; serves the chainweb-node mining API on port 1848, the following command can be used for CPU mining to the from the previous example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;chainweb-mining-client \&#xA;    --public-key 87ef8fdb229ad10285ae191a168ea2ec0794621a127df21e372f41fd0246e4cfa \&#xA;    --node example.com:1848 \&#xA;    --worker cpu \&#xA;    --thread-count 16 \&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GPU Mining&lt;/h3&gt; &#xA;&lt;p&gt;GPU mining is supported via calling an external worker that does the mining work. An example for such a GPU mining tool for Kadena is &lt;a href=&#34;https://github.com/kadena-community/bigolchungus&#34;&gt;bigolchunugus&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;chainweb-mining-client \&#xA;    --public-key 87ef8fdb229ad10285ae191a168ea2ec0794621a127df21e372f41fd0246e4cf \&#xA;    --node example.com:1848 \&#xA;    --worker external \&#xA;    --external-miner-cmd bigolchunus&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For selecting the GPU or passing additional arguments to the external tools, the extra parameters are appended to the command. E.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;chainweb-mining-client \&#xA;    --public-key 87ef8fdb229ad10285ae191a168ea2ec0794621a127df21e372f41fd0246e4cf \&#xA;    --node example.com:1848 \&#xA;    --worker external \&#xA;    --external-worker-cmd &#34;bigolchunus -d 2&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The external mining tool is called by adding the target as the last command line parameter and passing the work bytes on stdin.&lt;/p&gt; &#xA;&lt;h3&gt;Creating a Configuration File&lt;/h3&gt; &#xA;&lt;p&gt;The current configuration of chainweb-mining-client can be stored in a configuration file by adding the &lt;code&gt;--print-config&lt;/code&gt; parameter&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;chainweb-mining-client \&#xA;    --public-key 87ef8fdb229ad10285ae191a168ea2ec0794621a127df21e372f41fd0246e4cf \&#xA;    --node example.com:1848 \&#xA;    --stratum-port 1917 \&#xA;    --statum-difficulty=50&#xA;    --print-config &amp;gt; config.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This results in the following configuration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;account: null&#xA;externalWorkerCommand: echo &#39;no external worker command configured&#39; &amp;amp;&amp;amp; /bin/false&#xA;generateKey: false&#xA;hashRate: 1000000.0&#xA;insecure: true&#xA;logLevel: info&#xA;node: example.com:1848&#xA;publicKey: 87ef8fdb229ad10285ae191a168ea2ec0794621a127df21e372f41fd0246e4cf&#xA;stratumDifficulty: 50&#xA;stratumInterface: &#39;*&#39;&#xA;stratumPort: 1917&#xA;threadCount: 10&#xA;useTls: true&#xA;worker: stratum&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The configuration can then be used via&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;chainweb-mining-client --config-file config.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Related Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kadena-io/chainweb-node&#34;&gt;Chainweb Node Project Page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/mightybyte/f1567c2bec0380539c638225fb8c1cf4&#34;&gt;Kadena Stratum Protocol&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api.chainweb.com/openapi/#tag/mining&#34;&gt;mining API of chainweb-node&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kadena-io/chainweb-node/wiki/Block-Header-Binary-Encoding#work-header-binary-format&#34;&gt;work header format&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kadena-io/chainweb-node/wiki/Mining-API&#34;&gt;mining API wiki&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>idontgetoutmuch/largeword</title>
    <updated>2022-12-17T01:33:11Z</updated>
    <id>tag:github.com,2022-12-17:/idontgetoutmuch/largeword</id>
    <link href="https://github.com/idontgetoutmuch/largeword" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Provides Word128, Word192 and Word256 for and a way of producing other large words if required.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;largeword&lt;/h1&gt; &#xA;&lt;p&gt;Provides Word128, Word192 and Word256 for and a way of producing other large words if required.&lt;/p&gt;</summary>
  </entry>
</feed>