<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-21T01:29:45Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>disco-lang/disco</title>
    <updated>2023-08-21T01:29:45Z</updated>
    <id>tag:github.com,2023-08-21:/disco-lang/disco</id>
    <link href="https://github.com/disco-lang/disco" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Functional teaching language for use in a discrete mathematics course&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/disco-lang/disco&#34;&gt;&lt;img src=&#34;https://travis-ci.org/disco-lang/disco.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/disco-lang/disco/master/CODE_OF_CONDUCT.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg?sanitize=true&#34; alt=&#34;Contributor Covenant&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Disco is a programming language intended to teach basic functional programming principles in the context of a discrete mathematics course.&lt;/p&gt; &#xA;&lt;h2&gt;Using Disco on replit.com&lt;/h2&gt; &#xA;&lt;p&gt;If you just want to &lt;em&gt;use&lt;/em&gt; disco (&lt;em&gt;i.e.&lt;/em&gt; if you are a student, or just checking out the language), the recommended way is to use it via &lt;code&gt;replit.com&lt;/code&gt;. Simply &lt;a href=&#34;https://replit.com/@BrentYorgey/Disco#README.md&#34;&gt;visit this REPL&lt;/a&gt; and follow the instructions there to fork your own copy, where you will be able to evaluate Disco expressions, and edit and run your own &lt;code&gt;.disco&lt;/code&gt; files, all via your web browser, without installing anything on your computer.&lt;/p&gt; &#xA;&lt;h2&gt;Design principles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Includes those features, and &lt;em&gt;only&lt;/em&gt; those features, useful in the context of a discrete math course. This is &lt;em&gt;not&lt;/em&gt; intended to be a general-purpose language.&lt;/li&gt; &#xA; &lt;li&gt;Syntax is as close to standard &lt;em&gt;mathematical&lt;/em&gt; practice as possible, to make it easier for mathematicians to pick up, and to reduce as much as possible the incongruity between the language and the mathematics being explored and modeled.&lt;/li&gt; &#xA; &lt;li&gt;Tooling, error messages, etc. are very important---the language needs to be accessible to undergrads with no prior programming experience. (However, this principle is, as of yet, only that---there is no tooling or nice error messages to speak of.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Feel free to look around, ask questions, etc. You can also &lt;a href=&#34;https://raw.githubusercontent.com/disco-lang/disco/master/CONTRIBUTING.md&#34;&gt;contribute&lt;/a&gt;---collaborators are most welcome.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Check out the disco IRC channel, &lt;code&gt;#disco-lang&lt;/code&gt; on Libera.Chat. If you&#39;re not familiar with IRC, you can connect via &lt;a href=&#34;https://kiwiirc.com/nextclient/irc.libera.chat/?nick=Guest?#disco-lang&#34;&gt;this web client&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation is &lt;a href=&#34;http://disco-lang.readthedocs.io/en/latest/&#34;&gt;hosted on readthedocs.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute to disco development, check out &lt;a href=&#34;https://raw.githubusercontent.com/disco-lang/disco/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building with stack&lt;/h2&gt; &#xA;&lt;p&gt;First, make sure you have &lt;a href=&#34;https://docs.haskellstack.org/en/stable/README/&#34;&gt;the &lt;code&gt;stack&lt;/code&gt; tool&lt;/a&gt; (the easiest way to install it is via &lt;a href=&#34;https://www.haskell.org/ghcup/&#34;&gt;ghcup&lt;/a&gt;). Then open a command prompt, navigate to the root directory of this repository, and execute&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;stack build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After this completes, you should be able to&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;stack exec disco&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to run the Disco command-line REPL.&lt;/p&gt; &#xA;&lt;p&gt;While developing, you may want to use a command like&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;stack test --fast --file-watch --ghc-options=&#39;-Wall&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which will turn on warnings, turn off optimizations for a faster edit-compile-test cycle, and automatically recompile and run the test suite every time a source file changes.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;If for some reasons you want to actually install &lt;code&gt;disco&lt;/code&gt; on your computer, follow the below instructions. (If you want to &lt;em&gt;contribute&lt;/em&gt; to disco development, you should skip to the instructions about building with stack.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;, if you are a student, you should &lt;strong&gt;not&lt;/strong&gt; need to do this! The above instructions about using &lt;code&gt;disco&lt;/code&gt; on &lt;code&gt;replit.com&lt;/code&gt; should be all you need. The below instructions are kept here for completeness.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Follow the instructions to &lt;a href=&#34;https://www.haskell.org/ghcup/&#34;&gt;install ghcup&lt;/a&gt; by opening a terminal or command prompt and copy-pasting the given installation command. You can just accept all the defaults. If you don&#39;t have &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/&#34;&gt;Windows Subsystem for Linux&lt;/a&gt; (if you don&#39;t know what that is, then you don&#39;t have it), see the &lt;a href=&#34;https://www.haskell.org/ghcup/install/&#34;&gt;instructions here&lt;/a&gt; for a PowerShell command to run.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you use PowerShell, note that after running the magic PowerShell command to set up &lt;code&gt;ghcup&lt;/code&gt;, you need to close and reopen PowerShell in order for it to recognize the &lt;code&gt;cabal&lt;/code&gt; command.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;cabal update&lt;/code&gt;, which will download the latest information about Haskell packages.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now run &lt;code&gt;cabal install disco&lt;/code&gt; at a command prompt.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Note that this may take a very long time, on the order of an hour or so.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;The good news is that most of this work only needs to be done once, even if you later install an updated version of disco. Even if installation fails partway through, the work already completed up to that point need not be redone.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;On OSX, if building fails with an error like &lt;code&gt;ghc: could not execute: opt&lt;/code&gt;, it means you need to install LLVM. The easiest way to do this is to first &lt;a href=&#34;https://brew.sh/&#34;&gt;follow the instructions to install Homebrew&lt;/a&gt; (if you don&#39;t already have it), and then type&lt;/p&gt; &lt;pre&gt;&lt;code&gt;brew install llvm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;at a terminal prompt.&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;If this fails with an error like &lt;code&gt;Could not resolve HEAD to a revision&lt;/code&gt;, then try running these two commands at a terminal prompt:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;rm -rf $(brew --repo homebrew/core)&#xA;brew tap homebrew/core&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then re-run the &lt;code&gt;brew install llvm&lt;/code&gt; command.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;After installing &lt;code&gt;llvm&lt;/code&gt;, you may need to close and re-open the terminal before running &lt;code&gt;cabal install disco&lt;/code&gt; again.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If it works, you should be able to now type &lt;code&gt;disco&lt;/code&gt; at a command prompt, which should display a message like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Welcome to Disco!&#xA;&#xA;A language for programming discrete mathematics.&#xA;&#xA;Disco&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If installation seems like it succeeded but the &lt;code&gt;disco&lt;/code&gt; command is not recognized, it may be an issue with your path environment variable settings. Try running &lt;code&gt;disco&lt;/code&gt; using an explicit path:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;~/.cabal/bin/disco&lt;/code&gt; on Linux or OSX&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;C:\cabal\bin\disco&lt;/code&gt; on Windows&lt;/li&gt; &#xA;   &lt;li&gt;If those don&#39;t work, poke around and see if you can figure out where the &lt;code&gt;cabal/bin&lt;/code&gt; folder is on your computer, and run &lt;code&gt;disco&lt;/code&gt; from there.&lt;/li&gt; &#xA;   &lt;li&gt;If you wish, you may add the &lt;code&gt;cabal/bin&lt;/code&gt; folder (wherever it is located) to your &lt;code&gt;Path&lt;/code&gt; (Windows) or &lt;code&gt;PATH&lt;/code&gt; (Linux/OSX) environment variable, so that you can run disco simply by typing &lt;code&gt;disco&lt;/code&gt;. However, this step is optional.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On Windows, if disco crashes with an error about &lt;code&gt;foldr&lt;/code&gt; after you try to type anything (or if it simply closes the entire window when you type anything), the problem is probably that you need to &lt;a href=&#34;https://github.com/disco-lang/disco/issues/253&#34;&gt;enable UTF-8 mode&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Open a command prompt, and type&lt;/p&gt; &lt;pre&gt;&lt;code&gt;chcp 65001&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Now start &lt;code&gt;disco&lt;/code&gt; as before (by typing &lt;code&gt;disco&lt;/code&gt; or &lt;code&gt;C:\cabal\bin\disco&lt;/code&gt; or whatever worked).&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;You will have to do this every time you run disco. Alternatively, you can create a file called &lt;code&gt;disco.cmd&lt;/code&gt; containing those two commands, for example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;chcp 65001&#xA;C:\cabal\bin\disco&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now you can simply double-click on &lt;code&gt;disco.cmd&lt;/code&gt; to run disco.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you encounter any difficulties, please let me know --- either come talk to me or &lt;a href=&#34;https://github.com/disco-lang/disco/issues/new&#34;&gt;open a GitHub issue&lt;/a&gt;. These instructions will be kept up-to-date with whatever helpful tips or workarounds I learn. So even if you encounter a difficulty but figure out the solution youself, let me know --- that way I can include the problem and solution here so others can benefit!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cardano-foundation/fine-types</title>
    <updated>2023-08-21T01:29:45Z</updated>
    <id>tag:github.com,2023-08-21:/cardano-foundation/fine-types</id>
    <link href="https://github.com/cardano-foundation/fine-types" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FineTypes is an interface description language (IDL) focussing on types&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FineTypes&lt;/h1&gt; &#xA;&lt;p&gt;🚧 WORK IN PROGRESS 🚧&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;FineTypes is an interface description language (IDL) focussing on types. You can use it to specify data types that are interoperable between different programming languages.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TxOut = Addr × Value × (Datum ⊎ DataHash)? × Script?;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;FineTypes allows you to&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Define data types concisely using mathematical notation.&lt;/li&gt; &#xA; &lt;li&gt;Map between data types using algebraic transformations, such as &lt;code&gt;(A + B) × C = (A × C) + (B × C)&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Export type definitions to different programming languages, currently: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Haskell&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Export type definitions to different data schemas, currently &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;OpenAPI: Schema Objects&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;FineTypes was originally conceived to be able to specify all types in the &lt;a href=&#34;https://github.com/input-output-hk/cardano-ledger/releases/latest/&#34;&gt;Cardano ledger specification&lt;/a&gt; in a way that is both machine readable and visually matches the PDF document.&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;fine-types&lt;/code&gt; Haskell package and executable.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;cardano-ledger-types&lt;/code&gt; package containing a reference specification of the types from the &lt;a href=&#34;https://github.com/input-output-hk/cardano-ledger/releases/latest/&#34;&gt;Cardano ledger specification&lt;/a&gt; in different eras (Shelley, …, Babbage).&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>jaspervdj/blaze-html</title>
    <updated>2023-08-21T01:29:45Z</updated>
    <id>tag:github.com,2023-08-21:/jaspervdj/blaze-html</id>
    <link href="https://github.com/jaspervdj/blaze-html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A blazingly fast HTML combinator library for Haskell.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BlazeHtml&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://travis-ci.org/jaspervdj/blaze-html&#34;&gt;&lt;img src=&#34;https://secure.travis-ci.org/jaspervdj/blaze-html.png?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What&lt;/h2&gt; &#xA;&lt;p&gt;BlazeHtml is a library that aims to be the fastest way to generate HTML in Haskell. It&#39;s currently in a very experimental state, as different ideas and designs are tried. For more information, refer to &lt;a href=&#34;http://jaspervdj.be/blaze&#34;&gt;the website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How&lt;/h2&gt; &#xA;&lt;p&gt;We have a makefile to manage most tasks. First off, a part of the code is generated automatically, so you should begin by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make combinators&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the tests using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And the benchmarks using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make benchmark&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;blaze-from-html&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;blaze-from-html&lt;/code&gt; tool has moved to a separate repository: &lt;a href=&#34;https://github.com/jaspervdj/blaze-from-html&#34;&gt;https://github.com/jaspervdj/blaze-from-html&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>