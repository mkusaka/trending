<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-30T01:30:29Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>compiladores-lcc/compiladores2023</title>
    <updated>2023-08-30T01:30:29Z</updated>
    <id>tag:github.com,2023-08-30:/compiladores-lcc/compiladores2023</id>
    <link href="https://github.com/compiladores-lcc/compiladores2023" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Código inicial para la materia Compiladores 2023 de LCC - FCEIA - UNR&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Compiladores&lt;/h1&gt; &#xA;&lt;p&gt;Código para la materia Compiladores 2023 de &lt;a href=&#34;https://dcc.fceia.unr.edu.ar&#34;&gt;LCC&lt;/a&gt;, &lt;a href=&#34;https://www.fceia.unr.edu.ar&#34;&gt;FCEIA&lt;/a&gt;, &lt;a href=&#34;https://www.unr.edu.ar&#34;&gt;UNR&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Este es el código a partir del cual los estudiantes empiezan a desarrollar un compilador.&lt;/p&gt; &#xA;&lt;h2&gt;Intérprete FD4&lt;/h2&gt; &#xA;&lt;p&gt;Para correr el intérprete basta con ejecutar:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-code&#34;&gt;cabal run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Las opciones soportadas por el intérprete de FD4 pueden verse utilizando el comando &lt;code&gt;:help&lt;/code&gt; :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-code&#34;&gt;FD4&amp;gt; :help&#xA;Lista de comandos:  Cualquier comando puede ser abreviado a :c donde&#xA;c es el primer caracter del nombre completo.&#xA;&#xA;&amp;lt;expr&amp;gt;                  evaluar la expresión&#xA;let &amp;lt;var&amp;gt; = &amp;lt;expr&amp;gt;      definir una variable&#xA;:browse                 Ver los nombres en scope&#xA;:load &amp;lt;file&amp;gt;            Cargar un programa desde un archivo&#xA;:print &amp;lt;exp&amp;gt;            Imprime un término y sus ASTs sin evaluarlo&#xA;:reload                 Vuelve a cargar el último archivo cargado&#xA;:type &amp;lt;exp&amp;gt;             Chequea el tipo de una expresión&#xA;:quit, :Q               Salir del intérprete&#xA;:help, :?               Mostrar esta lista de comandos&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Entorno interactivo con GHCi&lt;/h2&gt; &#xA;&lt;p&gt;También pueden cargar un módulo específico del proyecto en el entorno interactivo GHCi:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-code&#34;&gt;cabal exec ghci -- -isrc src/Parse.hs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;La bandera &lt;code&gt;-isrc&lt;/code&gt; es necesaria para indicarle a GHCi que los archivos que importa el módulo que estamos cargando deben ser buscados dentro de la carpeta &lt;code&gt;src/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternativamente, pueden inicializar GHCi:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-code&#34;&gt;cabal exec ghci&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Y luego cargar el archivo deseado desde allí:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-code&#34;&gt;ghci&amp;gt; :cd src/&#xA;ghci&amp;gt; :load Parse.hs&#xA;[1 of 3] Compiling Common           ( Common.hs, interpreted )&#xA;[2 of 3] Compiling Lang             ( Lang.hs, interpreted )&#xA;[3 of 3] Compiling Parse            ( Parse.hs, interpreted )&#xA;Ok, three modules loaded.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notar que de esta forma también es necesario corregir el PATH de los archivos para no tener problemas con las dependencias.&lt;/p&gt;</summary>
  </entry>
</feed>