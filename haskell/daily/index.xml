<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-21T01:35:50Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Soostone/hadron</title>
    <updated>2024-01-21T01:35:50Z</updated>
    <id>tag:github.com,2024-01-21:/Soostone/hadron</id>
    <link href="https://github.com/Soostone/hadron" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Construct and run Hadoop MapReduce programs in Haskell&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hadron - Hadoop MapReduce in Haskell &lt;a href=&#34;https://travis-ci.org/Soostone/hadron&#34;&gt;&lt;img src=&#34;https://travis-ci.org/Soostone/hadron.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Hadron aims to bring Haskell&#39;s type-safety to the complex and delicate world of Hadoop Streaming MapReduce.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Ties into Hadoop via the Streaming interface&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Orchestrates multi-step Hadoop jobs so you don&#39;t have to manually call Hadoop at all.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Provides typed interactions with your input/output data on hdfs, s3 or any other system that Hadoop supports.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Every Map-Reduce step is fully typed both on input and output, making a long, sophisticated sequence of jobs much easier to design and maintain.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Built-in support for multi-way map-side joins. Disparate data sources are each mapped to a common, monoidal type which then gets &lt;code&gt;mconcat&lt;/code&gt;ed during reduce by join key. We support both required (a-la inner) and optional (a-la outer) joins. Current shortcoming here is the loss of input typing; only Tap ByteString can be used on input in order to support multiple datasets.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Various convenience combinators in the Controller module, covering common tasks.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Shortcomings and Issues&lt;/h2&gt; &#xA;&lt;p&gt;Hadoop seems to be terrible at constantly changing little details, program flags and behavior across major releases. While we try to make this package as sound as possible, you may be forced to do some debugging due to a difference in the way Hadoop works on the version you are running.&lt;/p&gt; &#xA;&lt;p&gt;This library has been most commonly tested on Amazon&#39;s EMR offering and Cloudera&#39;s local demo VM.&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;hadron is used extensively by Soostone to process datasets with rows in the billions. Improvement opportunities exist, but it is very much functional.&lt;/p&gt; &#xA;&lt;h2&gt;Modules&lt;/h2&gt; &#xA;&lt;h3&gt;Hadron.Basic&lt;/h3&gt; &#xA;&lt;p&gt;This module exposes low level functionality for constructing a single MapReduce step. Not recommended for direct use in most cases.&lt;/p&gt; &#xA;&lt;h3&gt;Hadron.Controller&lt;/h3&gt; &#xA;&lt;p&gt;High level module for automated orchestration of multi-stage MapReduce jobs.&lt;/p&gt; &#xA;&lt;p&gt;(More docs and examples to be added)&lt;/p&gt; &#xA;&lt;h3&gt;Hadron.Protocol&lt;/h3&gt; &#xA;&lt;p&gt;Defines data encode/decode strategies via the Protocol type.&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;p&gt;See TODO.org.&lt;/p&gt; &#xA;&lt;h1&gt;Contributors&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/ozataman&#34;&gt;Ozgun Ataman&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/mightybyte&#34;&gt;Doug Beardsley&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/MichaelXavier&#34;&gt;Michael Xavier&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thierry-b&#34;&gt;Thierry Bourrillon&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Release Notes&lt;/h2&gt; &#xA;&lt;h2&gt;Version 0.5&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Hadoop operations are now put behind a Hadron.Run interface.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Hadron.Run.Local now implements a basic form of Hadoop mimickery, allowing a wide variety of Controller-based MapReduce applications to be run locally on the development machine.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Several interface improvements to working with local and HDFS based files during a Controller app.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;runOnce combinator allows running an &#34;IO a&#34; action in the central node and having the same value appear on the remote (worker) nodes.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>