<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-29T01:34:28Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>haskell/alex</title>
    <updated>2022-09-29T01:34:28Z</updated>
    <id>tag:github.com,2022-09-29:/haskell/alex</id>
    <link href="https://github.com/haskell/alex" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A lexical analyser generator for Haskell&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Alex: A Lexical Analyser Generator&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/haskell/alex/actions/workflows/haskell-ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/haskell/alex/actions/workflows/haskell-ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Haskell-CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alex is a Lex-like tool for generating Haskell scanners. For complete documentation, see the doc directory.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.haskell.org/alex/&#34;&gt;https://www.haskell.org/alex/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hackage.haskell.org/package/alex&#34;&gt;https://hackage.haskell.org/package/alex&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For information on copying and distributing this program, see the file LICENSE in this directory.&lt;/p&gt; &#xA;&lt;p&gt;The sources are in the &lt;code&gt;src&lt;/code&gt; directory and the documentation in the &lt;code&gt;doc&lt;/code&gt; directory; various examples are in the &lt;code&gt;examples&lt;/code&gt; subdirectory.&lt;/p&gt; &#xA;&lt;p&gt;The source code in the &lt;code&gt;src&lt;/code&gt; and &lt;code&gt;examples&lt;/code&gt; directories is intended to work with GHC &amp;gt;= 7.0.&lt;/p&gt; &#xA;&lt;h2&gt;Build Instructions&lt;/h2&gt; &#xA;&lt;p&gt;If you just want to &lt;em&gt;use&lt;/em&gt; Alex, you can download or install (via &lt;code&gt;cabal install alex&lt;/code&gt;) an &lt;a href=&#34;https://hackage.haskell.org/package/alex&#34;&gt;Alex release from Hackage&lt;/a&gt;; also note that distributions such as the &lt;a href=&#34;https://www.haskell.org/platform/&#34;&gt;Haskell Platform&lt;/a&gt; and other package manager-based distributions provide packages for Alex. Moreover, recent versions of &lt;code&gt;cabal&lt;/code&gt; will automatically install the required version of &lt;code&gt;alex&lt;/code&gt; based on &lt;a href=&#34;http://cabal.readthedocs.io/en/latest/developing-packages.html#pkg-field-build-tool-depends&#34;&gt;&lt;code&gt;build-tools&lt;/code&gt;/&lt;code&gt;build-tool-depends&lt;/code&gt; declarations&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Read on if you want to build Alex directly from Git.&lt;/p&gt; &#xA;&lt;p&gt;Alex is built using GHC &amp;amp; Cabal; so first install &lt;a href=&#34;https://www.haskell.org/ghc&#34;&gt;GHC&lt;/a&gt; and &lt;a href=&#34;https://www.haskell.org/cabal&#34;&gt;&lt;code&gt;cabal-install-2.0&lt;/code&gt;&lt;/a&gt; (or later).&lt;/p&gt; &#xA;&lt;p&gt;Since Alex itself is implemented in terms of an Alex scanner, bootstrapping Alex is a bit tricky:&lt;/p&gt; &#xA;&lt;p&gt;You need to have the build-tools &lt;code&gt;alex&lt;/code&gt; and &lt;code&gt;happy&lt;/code&gt; manually installed; either via your system package manager distribution, the Haskell Platform, or e.g. via (run this outside the Git repository!):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cabal install alex happy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which installs them into &lt;code&gt;${HOME}/.cabal/bin&lt;/code&gt; by default (make sure they are in your &lt;code&gt;$PATH&lt;/code&gt; for the next steps!).&lt;/p&gt; &#xA;&lt;h3&gt;Variant A&lt;/h3&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;alex&lt;/code&gt; simply by invoking&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cabal install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;from inside the Git folder.&lt;/p&gt; &#xA;&lt;h3&gt;Variant B&lt;/h3&gt; &#xA;&lt;p&gt;Alternatively, you can use the &lt;code&gt;Makefile&lt;/code&gt; which automates the steps of producing a self-contained pre-bootstrapped source distribution with pre-generated lexer/scanners:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ make sdist&#xA;$ cabal install dist/alex-*.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For convenience, there is also a &lt;code&gt;make sdist-test&lt;/code&gt; target which builds the source source tarball and runs the test-suite from within the source dist.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing &amp;amp; Reporting Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please report any bugs or comments at &lt;a href=&#34;https://github.com/simonmar/alex/issues&#34;&gt;https://github.com/simonmar/alex/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Share and enjoy,&lt;/p&gt; &#xA;&lt;p&gt;Chris Dornan: &lt;a href=&#34;mailto:cdornan@arm.com&#34;&gt;cdornan@arm.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Isaac Jones: &lt;a href=&#34;mailto:ijones@syntaxpolice.org&#34;&gt;ijones@syntaxpolice.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Simon Marlow: &lt;a href=&#34;mailto:simonmar@microsoft.com&#34;&gt;simonmar@microsoft.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;and &lt;a href=&#34;https://github.com/simonmar/alex/graphs/contributors&#34;&gt;recent contributors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Current Maintainers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;John Ericson (@Ericson2314)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Simon Marlow (@simonmar)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>pdani/treeparse</title>
    <updated>2022-09-29T01:34:28Z</updated>
    <id>tag:github.com,2022-09-29:/pdani/treeparse</id>
    <link href="https://github.com/pdani/treeparse" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A little example of how can one parse some input text file into a tree representation efficiently in Haskell.&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>diku-dk/futhark</title>
    <updated>2022-09-29T01:34:28Z</updated>
    <id>tag:github.com,2022-09-29:/diku-dk/futhark</id>
    <link href="https://github.com/diku-dk/futhark" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸ’¥ðŸ’»ðŸ’¥ A data-parallel functional programming language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/diku-dk/futhark/master/assets/logo.svg?sanitize=true&#34; height=&#34;50px&#34;&gt; The Futhark Programming Language&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/futhark-lang/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/futhark-lang/Lobby.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/futhark-lang/Lobby&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/diku-dk/futhark/actions&#34;&gt;&lt;img src=&#34;https://github.com/diku-dk/futhark/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://zenodo.org/badge/latestdoi/7960131&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/7960131.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Futhark is a purely functional data-parallel programming language in the ML family. It can be compiled to typically very efficient parallel code, running on either a CPU or GPU. The language is developed at &lt;a href=&#34;http://diku.dk&#34;&gt;DIKU&lt;/a&gt; at the University of Copenhagen, originally as part of the &lt;a href=&#34;http://hiperfit.dk&#34;&gt;HIPERFIT centre&lt;/a&gt;. It is quite stable and suitable for practical programming.&lt;/p&gt; &#xA;&lt;p&gt;For more information, see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://futhark-lang.org/examples.html&#34;&gt;A collection of code examples&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://futhark.readthedocs.io/en/latest/installation.html&#34;&gt;Installation instructions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://futhark-lang.org&#34;&gt;The main website&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://futhark-book.readthedocs.io/en/latest/&#34;&gt;Parallel Programming in Futhark&lt;/a&gt;, an extensive introduction and guide&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://futhark.readthedocs.io&#34;&gt;The Futhark User&#39;s Guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://futhark-lang.org/docs/prelude&#34;&gt;Documentation for the built-in prelude&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://futhark-lang.org/pkgs/&#34;&gt;Futhark libraries&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/futhark/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/futhark.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Hacking&lt;/h1&gt; &#xA;&lt;p&gt;Issues tagged with &lt;a href=&#34;https://github.com/diku-dk/futhark/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&#34;&gt;good first issue&lt;/a&gt; do not require deep knowledge of the code base.&lt;/p&gt; &#xA;&lt;p&gt;For contributing code, see &lt;a href=&#34;https://raw.githubusercontent.com/diku-dk/futhark/master/HACKING.md&#34;&gt;the hacking instructions&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>