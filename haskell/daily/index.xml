<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-31T01:29:30Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>NorfairKing/ical</title>
    <updated>2023-10-31T01:29:30Z</updated>
    <id>tag:github.com,2023-10-31:/NorfairKing/ical</id>
    <link href="https://github.com/NorfairKing/ical" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ICal&lt;/h1&gt; &#xA;&lt;p&gt;An implementation of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc5545&#34;&gt;RCF5545: Internet Calendaring and Scheduling Core Object Specification (iCalendar)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc6868&#34;&gt;RFC6868: Parameter Value Encoding in iCalendar and vCard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc7986#section-5.10&#34;&gt;RFC7986: New Properties for iCalendar&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;This library now covers all of &lt;code&gt;RFC 5545&lt;/code&gt; and some of &lt;code&gt;RFC 7986&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s already being used in production at &lt;a href=&#34;https://smos.online&#34;&gt;https://smos.online&lt;/a&gt; and &lt;a href=&#34;https://social-dance.today&#34;&gt;https://social-dance.today&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Goals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Strict RFC Compliance&lt;/li&gt; &#xA; &lt;li&gt;Being able to deal with some of other implementors&#39; failures to comply with the spec&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Implementation checklist&lt;/h2&gt; &#xA;&lt;h3&gt;RFC 5545&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 1. Introduction&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 2. Basic Grammar and Conventions &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 2.1. Formatting Conventions&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 2.2. Related Memos&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3. iCalendar Object Specification &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.1. Content Lines &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.1.1. List and Field Separators&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.1.2. Multiple Values&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.1.3. Binary Content&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.1.4. Character Set&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2. Property Parameters &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.1. Alternate Text Representation&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.2. Common Name&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.3. Calendar User Type&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.4. Delegators&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.5. Delegatees&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.6. Directory Entry Reference&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.7. Inline Encoding&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.8. Format Type&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.9. Free/Busy Time Type&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.10. Language&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.11. Group or List Membership&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.12. Participation Status&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.13. Recurrence Identifier Range&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.14. Alarm Trigger Relationship&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.15. Relationship Type&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.16. Participation Role&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.17. RSVP Expectation&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.18. Sent By&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.19. Time Zone Identifier&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.2.20. Value Data Types&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.3. Property Value Data Types &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.3.1. Binary&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.3.2. Boolean&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.3.3. Calendar User Address&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.3.4. Date&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.3.5. Date-Time&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.3.6. Duration&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.3.7. Float&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.3.8. Integer&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.3.9. Period of Time&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.3.10. Recurrence Rule&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.3.11. Text&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.3.12. Time&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.3.13. URI&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.3.14. UTC Offset&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.4. iCalendar Object&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.5. Property&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.6. Calendar Components &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.6.1. Event Component&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.6.2. To-Do Component&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.6.3. Journal Component&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.6.4. Free/Busy Component&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.6.5. Time Zone Component&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.6.6. Alarm Component&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.7. Calendar Properties &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.7.1. Calendar Scale&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.7.2. Method&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.7.3. Product Identifier&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.7.4. Version&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8. Component Properties &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.1. Descriptive Component Properties &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.1.1. Attachment&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.1.2. Categories&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.1.3. Classification&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.1.4. Comment&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.1.5. Description&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.1.6. Geographic Position&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.1.7. Location&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.1.8. Percent Complete&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.1.9. Priority&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.1.10. Resources&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.1.11. Status&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.1.12. Summary&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.2. Date and Time Component Properties &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.2.1. Date-Time Completed&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.2.2. Date-Time End&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.2.3. Date-Time Due&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.2.4. Date-Time Start&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.2.5. Duration&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.2.6. Free/Busy Time&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.2.7. Time Transparency&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.3. Time Zone Component Properties &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.3.1. Time Zone Identifier&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.3.2. Time Zone Name&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.3.3. Time Zone Offset From&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.3.4. Time Zone Offset To&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.3.5. Time Zone URL&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.4. Relationship Component Properties &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.4.1. Attendee&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.4.2. Contact&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.4.3. Organizer&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.4.4. Recurrence ID&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.4.5. Related To&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.4.6. Uniform Resource Locator&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.4.7. Unique Identifier&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.5. Recurrence Component Properties &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.5.1. Exception Date-Times&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.5.2. Recurrence Date-Times&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.5.3. Recurrence Rule&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.6. Alarm Component Properties &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.6.1. Action&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.6.2. Repeat Count&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.6.3. Trigger&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.7. Change Management Component Properties &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.7.1. Date-Time Created&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.7.2. Date-Time Stamp&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.7.3. Last Modified&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.7.4. Sequence Number&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.8. Miscellaneous Component Properties &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.8.1. IANA Properties&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.8.2. Non-Standard Properties&lt;/li&gt; &#xA;       &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.8.8.3. Request Status&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 4. iCalendar Object Examples&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 5. Recommended Practices&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 6. Internationalization Considerations&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 7. Security Considerations&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8. IANA Considerations &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.1. iCalendar Media Type Registration&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.2. New iCalendar Elements Registration &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.2.1. iCalendar Elements Registration Procedure&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.2.2. Registration Template for Components&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.2.3. Registration Template for Properties&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.2.4. Registration Template for Parameters&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.2.5. Registration Template for Value Data Types&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.2.6. Registration Template for Values&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.3. Initial iCalendar Elements Registries &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.3.1. Components Registry&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.3.2. Properties Registry&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.3.3. Parameters Registry&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.3.4. Value Data Types Registry&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.3.5. Calendar User Types Registry&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.3.6. Free/Busy Time Types Registry&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.3.7. Participation Statuses Registry&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.3.8. Relationship Types Registry&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.3.9. Participation Roles Registry&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.3.10. Actions Registry&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.3.11. Classifications Registry&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 8.3.12. Methods Registry&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 9. Acknowledgments&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 10. References &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 10.1. Normative References&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 10.2. Informative References&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Appendix A. Differences from RFC 2445 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; A.1. New Restrictions&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; A.2. Restrictions Removed&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; A.3. Deprecated Features&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Errata&lt;/h4&gt; &#xA;&lt;p&gt;TODO&lt;/p&gt; &#xA;&lt;h3&gt;RFC 6868&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 1. Introduction&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 2. Conventions Used in This Document&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 3. Parameter Value Encoding Scheme &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3.1. iCalendar Example&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 3.2. vCard Example&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 4. Security Considerations&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 5. Acknowledgments&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 6. Normative References&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Appendix A. Choice of Quoting Mechanism&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Errata&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://www.rfc-editor.org/errata/eid4383&#34;&gt;4383&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;RFC 7986&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 1. Introduction&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 2. Conventions Used in This Document&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 3. Backwards-Compatible Extension Properties&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 4. Modifications to Calendar Components&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 5. Properties &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 5.1. NAME Property&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 5.2. DESCRIPTION Property&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 5.3. UID Property&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 5.4. LAST-MODIFIED Property&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 5.5. URL Property&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 5.6. CATEGORIES Property&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 5.7. REFRESH-INTERVAL Property&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 5.8. SOURCE Property&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 5.9. COLOR Property&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 5.10. IMAGE Property&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 5.11. CONFERENCE Property&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 6. Property Parameters &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 6.1. DISPLAY Property Parameter&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 6.2. EMAIL Property Parameter&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 6.3. FEATURE Property Parameter&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 6.4. LABEL Property Parameter&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 7. Security Considerations&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 8. Privacy Considerations&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 9. IANA Considerations &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 9.1. Property Registrations&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 9.2. Parameter Registrations&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 9.3. Property Parameter Value Registries&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 10. References &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 10.1. Normative References&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 10.2. Informative References&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Errata&lt;/h4&gt; &#xA;&lt;p&gt;TODO&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lesserfish/PeepingTom</title>
    <updated>2023-10-31T01:29:30Z</updated>
    <id>tag:github.com,2023-10-31:/lesserfish/PeepingTom</id>
    <link href="https://github.com/lesserfish/PeepingTom" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A virtual memory scanner&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PeepingTom&lt;/h1&gt; &#xA;&lt;p&gt;PeepingTom is a library and tool written in Haskell designed to scan the virtual memory of processes, and extract regions of interest. It behaves similarly to &lt;cite&gt;&lt;a href=&#34;https://github.com/scanmem/scanmem&#34;&gt;ScanMem&lt;/a&gt;&lt;/cite&gt; or &lt;cite&gt;&lt;a href=&#34;https://www.cheatengine.org/&#34;&gt;Cheat Engine&lt;/a&gt;&lt;/cite&gt;.&lt;/p&gt; &#xA;&lt;p&gt;PeepingTom initially reads and parses the virtual memory region information located in /proc/pid/maps. It filters regions of interest, and uses Haskell&#39;s FFI to call pread and pwrite on /proc/pid/mem.&lt;/p&gt; &#xA;&lt;p&gt;This allow us to directly read and write to a process&#39;s virtual memory, letting us farm that &lt;em&gt;sweet&lt;/em&gt; &lt;em&gt;sweet&lt;/em&gt; &lt;cite&gt;&lt;a href=&#34;https://bloons.fandom.com/wiki/Monkey_Money&#34;&gt;Monkey Money&lt;/a&gt;&lt;/cite&gt; in Bloons TD 6 before we eventually get banned.&lt;/p&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;p&gt;The follow is a preview, using the game &lt;cite&gt;&lt;a href=&#34;https://store.steampowered.com/app/219150/Hotline_Miami/&#34;&gt;Hotline Miami&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lesserfish/PeepingTom/assets/73536889/4aa90a6a-3cec-42c6-a623-1b162808c3d7&#34;&gt;https://github.com/lesserfish/PeepingTom/assets/73536889/4aa90a6a-3cec-42c6-a623-1b162808c3d7&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Building PeepingTom should be relatively straight-forward.&lt;/p&gt; &#xA;&lt;p&gt;The .cabal files requires cabal version 3.0, and base version &amp;gt;= 4.18.0.0, however, it is likely to compile under previous versions.&lt;/p&gt; &#xA;&lt;p&gt;If you need to compile this with other versions of cabal, just update the .cabal file.&lt;/p&gt; &#xA;&lt;p&gt;To compile, simply run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cabal build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The application will be compiled and saved to dist-newstyle/.../.../somewhere&lt;/p&gt; &#xA;&lt;p&gt;Since the application relies on having sudo permissions for reading/writing the virtual memory of other processes, you may prefer to run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir build&#xA;cabal install --installdir=./build/ --overwrite-policy=always &#xA;sudo ./build/PeepingTom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are interested in running the automatic tests, additional steps need to be taken. Please refer to the following section.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Automatic tests are provided, in order to ensure that PeepingTom matches the results of ScanMem. In order to run the automatic tests, you need to clone and build ScanMem.&lt;/p&gt; &#xA;&lt;p&gt;Start by cloning PeepingTom with the &lt;em&gt;--recurse-submodules&lt;/em&gt; flag enabled.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recurse-submodules https://github.com/lesserfish/PeepingTom.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will not only clone PeepingTom, but clone scanmem directly on test/scanmem/ directory. We then need to build scanmem.&lt;/p&gt; &#xA;&lt;p&gt;Although PeepingTom has no additional requirements, scanmem does. So, in order to support testing, you need to install the following packages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install autotools-dev libtool libreadline-dev intltool python3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The library files should be located in tests/scanmem/build/.libs. In order to ensure this, follow these steps&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd test/scanmem/&#xA;./autogen.sh&#xA;mkdir build &amp;amp;&amp;amp; cd build&#xA;../configure&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will construct the necessary lib files that PeepingTom-test requires to run. In order to run the tests, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;LD_LIBRARY_PATH=&#34;$PWD/test/scanmem/build/.libs/:$LD_LIBRARY_PATH&#34; cabal test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;LD_LIBRARY_PATH=&#34;$PWD/test/scanmem/build/.libs/:$LD_LIBRARY_PATH&#34; cabal run PeepingTom-test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Application Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Initial Scan&lt;/h3&gt; &#xA;&lt;p&gt;Once you launch PeepingTom, you will be faced with a prompt.&lt;/p&gt; &#xA;&lt;p&gt;Typing help will give you a list of available commands&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; help&#xA;&#xA;PeepingTom: A Virtual memory scanner.&#xA;&#xA;The following commands are available: &#xA;&#x9; pid:                         Sets the PID of the process to be scanned by PeepingTom. &#xA;&#x9; $ [filter] [value]:          Scans the memory or update the candidates, and extracts those that satisfy the filter. &#xA;&#x9; set [option] [args]:         Sets various options regarding the scan. Type &#39;help set&#39; to see more.&#xA;&#x9; list [object]:               Lists several objects. To see a list of available objects type &#39;help list&#39;.&#xA;&#x9; delete [object]:             Deletes an object. To see a list of objects that can be deleted type &#39;help delete&#39;.&#xA;&#x9; filter map [filter]:         Filters the list of virtual memory regions. To see a list of available filters type &#39;list rfilter&#39;.&#xA;&#x9; filter candidate [filter]:   Filters the list of candidates. To see a list of available filters type &#39;list filter&#39;.&#xA;&#x9; update:                      Update the values of the current candidates.&#xA;&#x9; save [name]:                 Save the current list of candidates.&#xA;&#x9; load [name]:                 Loads a list of candidates.&#xA;&#x9; new [name]:                  Creates a new list of candidates.&#xA;&#x9; reset:                       Resets the current list of candidates.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can set the PID of the process you want to scan by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; pid 12345678&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you set the PID, you can perform an initial scan.&lt;/p&gt; &#xA;&lt;p&gt;All scans require a filter, a list of available filters can be seen by using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; help $&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, in order to extract all memory addresses that contain the integer value 27, you would&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; $ == 27&#xA;&amp;gt; $ == &#34;Continue&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The initial scan can take some time, depending on the quantity of regions of interest.&lt;/p&gt; &#xA;&lt;p&gt;The scan will send a SIGSTOP before starting, and a SIGCONT when it ends. This can be deactivated by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; set send_stopsig false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Future scans&lt;/h3&gt; &#xA;&lt;p&gt;Future scans can be done similarly, by simply running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; $ == 23&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Future scans will usually be a lot faster, depending on how many candidates were extracted in the initial scan.&lt;/p&gt; &#xA;&lt;p&gt;To list the available candidates you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; list state&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will show you up to 5 regions and up to 5 candidates. You can specify the number of candidates / regions by adding arguments to &#39;list state&#39;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; list state 10 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will list 10 candidates and 2 regions. By passing -1 as an argument, you can print all of the candidates.&lt;/p&gt; &#xA;&lt;p&gt;You can update the value of the candidates by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will read the virtual memory, and update the values of each candidates. It will then print the results.&lt;/p&gt; &#xA;&lt;h3&gt;Setting values&lt;/h3&gt; &#xA;&lt;p&gt;Once you have filtered the virtual memory, and isolated your addresses of interest, you may want to set the addresses to a specific value.&lt;/p&gt; &#xA;&lt;p&gt;You can set the memory value to an integer value using IntSet&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; IntSet value&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternative, you can write a string by using StrSet&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; StrSet &#34;This text will go to the memory&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will iterate over all of the candidates, and set the memory value to the corresponding value, taking into consideration the length of the memory address, i.e. It will consider whether the address holds an Int8 or an Int32.&lt;/p&gt; &#xA;&lt;h3&gt;Multiple searches&lt;/h3&gt; &#xA;&lt;p&gt;You can save a scan by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; save name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You load the saved scan by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; load name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can create a new scan by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; new name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Different sessions can scan different processes. For example,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; pid 12345678&#xA;&amp;gt; $ == 42&#xA;&amp;gt; save age_of_empires&#xA;&amp;gt; new civ5&#xA;civ5 &amp;gt; pid 87654321&#xA;civ5 &amp;gt; $ == 41&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will search the two different processes. All future searches will be done using the PID used in the initial scan, so you don&#39;t have to repeatedly set pid every time you want to refine your search.&lt;/p&gt; &#xA;&lt;p&gt;You can reset the current session by running reset&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;civ5 &amp;gt; reset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following scan will then be equivalent to a initial scan. To see a list of saved scans, you can run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; show memory&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Options&lt;/h3&gt; &#xA;&lt;p&gt;You can set the type of interest by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; set type int64 int16 int 8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will affect all numeric scans, but will not affect literal scans, i.e. Scans of strings,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; $ == &#34;A sequence of bytes&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will still work regardless of what type was set with &#39;set type&#39;&lt;/p&gt; &#xA;&lt;p&gt;PeepingTom scans the regions of virtual memory by reading chunks of memory, and then filtering the addresses in each chunk before loading the next chunk. You can set the size of chunks being loaded by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; set chunk_size 1000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The initial scan will filter out any region of memory that does not satisfy the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The size greater than 0&lt;/li&gt; &#xA; &lt;li&gt;Has Read/Write Address&lt;/li&gt; &#xA; &lt;li&gt;Is not a mapping to a file, with exception of the main executable&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This is the default region filter, which matches the default filter of ScanMem. There are alternative filters. You can set it by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; set rfilter [Filter]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also print the current options by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; list options&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Library Usage&lt;/h2&gt; &#xA;&lt;p&gt;PeepingTom is initially an application, and not a library. However, the main methods used by the application have been separated in the form of a library.&lt;/p&gt; &#xA;&lt;p&gt;This is NOT a public library. I do not have any plans to provide continuous support for this library. All methods can and will change without warning.&lt;/p&gt; &#xA;&lt;p&gt;PeepingTom is JUST a cool learning project I wrote. It is released under the MIT license, so the following applies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#xA;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#xA;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#xA;AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#xA;LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&#xA;OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE&#xA;SOFTWARE.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Having said that, if you want to use the library for your own application, the following is an example of how it works.&lt;/p&gt; &#xA;&lt;h3&gt;Scanning for virtual memory regions.&lt;/h3&gt; &#xA;&lt;p&gt;In order to identify the regions of virtual memory, you can run the following functions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import qualified PeepingTom.Maps as Maps&#xA;&#xA;let pid = 12345678&#xA;map_all &amp;lt;- Maps.getMapInfo pid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will extract ALL of the regions of virtual memory. We are usually not interested in all of them. In order to filter the regions of virtual memory that are interesting, you can use the default filter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;let fltr = defaultFilter map_all&#xA;let map = filterMap fltr map_all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will extract the regions of virtual memory that&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Have length greather than 0&lt;/li&gt; &#xA; &lt;li&gt;Have read/write permissions set&lt;/li&gt; &#xA; &lt;li&gt;Are not mappings to external files, with the exception of the main executable (which is symlinked in /proc/pid/exe)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The default filter matches the default filter of scanmem.&lt;/p&gt; &#xA;&lt;h3&gt;Initial scan:&lt;/h3&gt; &#xA;&lt;p&gt;We are interested in extracting the addresses in virtual memory that satisfy a specific filter. For this, you need to create a FilterInfo&lt;/p&gt; &#xA;&lt;p&gt;These are defined as&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;type Filter = BS.ByteString -&amp;gt; [Type]&#xA;type FilterInfo = (Filter, Int)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where Type is a custom data type defined in PeepingTom.Type. It is defined as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;data Type&#xA;    = Void&#xA;    | Int8&#xA;    | Int16&#xA;    | Int32&#xA;    | Int64&#xA;    | UInt8&#xA;    | UInt16&#xA;    | UInt32&#xA;    | UInt64&#xA;    | Flt&#xA;    | Dbl&#xA;    | Bytes Int&#xA;    deriving (Show)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Int that accompanies FilterInfo is the largest size of possible accepting types. For example: If a Filter can return Int8, Int16, or Int32, then the int needs to be equal to 4 = sizeof(Int32).&lt;/p&gt; &#xA;&lt;p&gt;So far, there are only filters for Integer comparison / equality.&lt;/p&gt; &#xA;&lt;p&gt;You can construct this filter by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import qualified PeepingTom.Filters as Filters&#xA;let fltr_eq = Filters.eqInt 47 -- This will create a filter that selects all regions of memory that contain the value 47 as Int8, Int16, Int32 or Int64&#xA;let fltr_geq = Filters.compareInt (&amp;gt;= 32) -- This will create a filter that selects all reigons of memory that contain a value greather than 32 as Int8, Int16, Int32 or Int64.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Prefer &#39;Filters.eqInt x&#39; over &#39;Filters.compareInt (== x)&#39;. It is faster, since it compares ByteStrings instead of relying on a cast.&lt;/p&gt; &#xA;&lt;p&gt;These filters will try to find signed integers of any width that satisfy the condition. It will match Int8, Int16, Int32 or Int64.&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in searching for a specific data type you can use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;eqIntX :: (Bool, Bool, Bool, Bool) -&amp;gt; Integer -&amp;gt; Filter&#xA;eqIntX (search_i8, search_i16, search_i32, search_i64) value = ....&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With this filter you can specify which widths of signed integer you are interested in.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you may be interested in searching for a sequence of bytes, or a string. You can do this by creating the filters&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;eqBS :: ByteString -&amp;gt; FilterInfo&#xA;eqStr :: String -&amp;gt; FilterInfo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you have a filter, you can perform an initial scan by running scanMap&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;scanMap :: Filters.FilterInfo -&amp;gt; Maps.MapInfo -&amp;gt; IO PeepState&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use scanMap, you need to specify a filter and the map info obtained by &#39;getMapInfo&#39;.&lt;/p&gt; &#xA;&lt;p&gt;The following is an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import qualified PeepingTom.Type as T&#xA;import qualified PeepingTom.State as State&#xA;import qualified PeepingTom.Filters as Filters&#xA;import qualified PeepingTom.Maps as Maps&#xA;&#xA;let pid = 12345678&#xA;map_all &amp;lt;- Maps.getMapInfo pid&#xA;let rfltr = defaultFilter map_all&#xA;let map = filterMap rfltr map_all&#xA;&#xA;let cfltr = Filters.eqInt 42&#xA;ptstate &amp;lt;- State.scanMap cfltr map&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The result is an object PeepState, defined as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;data PeepState = PeepState&#xA;{ psPID :: PID&#xA;, psCandidates :: [Candidate]&#xA;, psRegions :: Maps.MapInfo&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Refining the search&lt;/h3&gt; &#xA;&lt;p&gt;If you are interested in refining your search, you need to&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Update the peep state&lt;/li&gt; &#xA; &lt;li&gt;Refilter the results&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can do this by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;state&#39; &amp;lt;- updateState state&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you have updated your values, you can simply re-run your filter&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;let fltr = Filters.eqInt 33&#xA;let fstate = applyFilter fltr state&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting values&lt;/h3&gt; &#xA;&lt;p&gt;Once you have refined your search enough, you may be interested in setting the memory addresses to a specific value. Since PeepState can hold addresses of various types, each with a different type length, you will need a writer. A writer is defined as&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;type Writer = Type -&amp;gt; BS.ByteString&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is an implementation for a signed integer writer in PeepingTom.Writer&lt;/p&gt; &#xA;&lt;p&gt;The following is an example of its usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import qualified PeepingTom.Writer as Writer&#xA;&#xA;let writer = Writer.writeInt 127&#xA;State.applyWriter writer fstate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will set each address in fstate to be equal to 127, taking into consideration the size of the data being stored in each address.&lt;/p&gt;</summary>
  </entry>
</feed>