<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-02T01:31:00Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>seanhess/web-view</title>
    <updated>2023-12-02T01:31:00Z</updated>
    <id>tag:github.com,2023-12-02:/seanhess/web-view</id>
    <link href="https://github.com/seanhess/web-view" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Typed HTML with simplified layout, and easy composable styles. Inspired by Tailwindcss and Elm UI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Web View&lt;/h1&gt; &#xA;&lt;p&gt;Type-safe HTML and CSS with intuitive layout and composable styles. Inspired by Tailwindcss and Elm-UI&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hackage.haskell.org/package/web-view&#34;&gt;&lt;img src=&#34;https://img.shields.io/hackage/v/web-view.svg?sanitize=true&#34; alt=&#34;Hackage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Write Haskell instead of CSS&lt;/h3&gt; &#xA;&lt;p&gt;Type-safe utility functions to generate styled HTML.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;myPage = col (gap 10) $ do&#xA;  el (bold . fontSize 32) &#34;My page&#34;&#xA;  button (border 1) &#34;Click Me&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Leverage the full power of Haskell functions for reuse, instead of relying on CSS.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;header = bold&#xA;h1 = header . fontSize 32&#xA;h2 = header . fontSize 24&#xA;page = gap 10&#xA;&#xA;myPage = col page $ do&#xA;  el h1 &#34;My Page&#34;&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This approach is inspired by Tailwindcss&#39; &lt;a href=&#34;https://tailwindcss.com/docs/utility-first&#34;&gt;Utility Classes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Intuitive Layouts&lt;/h3&gt; &#xA;&lt;p&gt;Easily create layouts with &lt;code&gt;row&lt;/code&gt;, &lt;code&gt;col&lt;/code&gt;, &lt;code&gt;grow&lt;/code&gt;, and &lt;code&gt;space&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;holygrail :: View c ()&#xA;holygrail = layout id $ do&#xA;  row section &#34;Top Bar&#34;&#xA;  row grow $ do&#xA;    col section &#34;Left Sidebar&#34;&#xA;    col (section . grow) &#34;Main Content&#34;&#xA;    col section &#34;Right Sidebar&#34;&#xA;  row section &#34;Bottom Bar&#34;&#xA;  where section = &#39;border&#39; 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Embedded CSS&lt;/h3&gt; &#xA;&lt;p&gt;Views track which styles are used in any child node, and automatically embed all CSS when rendered.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; renderText $ el bold &#34;Hello&#34;&#xA;&#xA;&amp;lt;style type=&#39;text/css&#39;&amp;gt;.bold { font-weight:bold }&amp;lt;/style&amp;gt;&#xA;&amp;lt;div class=&#39;bold&#39;&amp;gt;Hello&amp;lt;/div&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Stateful Styles&lt;/h3&gt; &#xA;&lt;p&gt;We can apply styles when certain states apply. For example, to change the background on hover:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;button (bg Primary . hover (bg PrimaryLight)) &#34;Hover Me&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Media states allow us to create responsive designs&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;el (width 100 . media (MinWidth 800) (width 400))&#xA;  &#34;Big if window &amp;gt; 800&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Learn More&lt;/h2&gt; &#xA;&lt;p&gt;View Documentation on &lt;a href=&#34;https://hackage.haskell.org/package/web-view&#34;&gt;Hackage&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackage.haskell.org/package/web-view&#34;&gt;https://hackage.haskell.org/package/web-view&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;View on Github&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/seanhess/web-view&#34;&gt;https://github.com/seanhess/web-view&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;View &lt;a href=&#34;https://github.com/seanhess/web-view/raw/main/example/Main.hs&#34;&gt;Examples&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>