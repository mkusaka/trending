<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-08T01:33:16Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>IntersectMBO/cardano-addresses</title>
    <updated>2023-10-08T01:33:16Z</updated>
    <id>tag:github.com,2023-10-08:/IntersectMBO/cardano-addresses</id>
    <link href="https://github.com/IntersectMBO/cardano-addresses" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Addresses and mnemonic manipulation &amp; derivations&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;big&gt;&lt;strong&gt;Cardano Addresses&lt;/strong&gt;&lt;/big&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/input-output-hk/cardano-addresses/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/input-output-hk/cardano-addresses?color=%239b59b6&amp;amp;label=RELEASE&amp;amp;sort=semver&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/cardano-addresses&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/cardano-addresses?color=%239b59b6&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://input-output-hk.github.io/cardano-addresses/coverage/hpc_index.html&#34;&gt;&lt;img src=&#34;https://input-output-hk.github.io/cardano-addresses/coverage/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/input-output-hk/cardano-addresses/actions/workflows/style.yml&#34;&gt;&lt;img src=&#34;https://github.com/input-output-hk/cardano-addresses/actions/workflows/style.yml/badge.svg?branch=master&#34; alt=&#34;Coding Standards&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/input-output-hk/cardano-addresses/actions/workflows/haskell.yml&#34;&gt;&lt;img src=&#34;https://github.com/input-output-hk/cardano-addresses/actions/workflows/haskell.yml/badge.svg?sanitize=true&#34; alt=&#34;Haskell CI using Cabal&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/input-output-hk/cardano-addresses/actions/workflows/main.yml&#34;&gt;&lt;img src=&#34;https://github.com/input-output-hk/cardano-addresses/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;Haskell CI using stack for Linux&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/input-output-hk/cardano-addresses/actions/workflows/typescript.yml&#34;&gt;&lt;img src=&#34;https://github.com/input-output-hk/cardano-addresses/actions/workflows/typescript.yml/badge.svg?sanitize=true&#34; alt=&#34;TypeScript NPM Package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This module provides mnemonic (backup phrase) creation, and conversion of a mnemonic to seed for wallet restoration, and address derivation functionalities.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/IntersectMBO/cardano-addresses/master/.github/example.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;API documentation is available &lt;a href=&#34;https://input-output-hk.github.io/cardano-addresses/haddock&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Command-Line&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;cardano-address&lt;/code&gt; comes with a command-line interface for Linux. See the &lt;a href=&#34;https://github.com/input-output-hk/cardano-addresses/releases&#34;&gt;release artifacts&lt;/a&gt; or &lt;a href=&#34;https://github.com/input-output-hk/cardano-addresses/actions?query=workflow%3A%22Continuous+Integration%22&#34;&gt;continuous integration artifacts&lt;/a&gt; to get a pre-compiled binary, or &lt;a href=&#34;https://raw.githubusercontent.com/IntersectMBO/cardano-addresses/master/#docker-image&#34;&gt;build a Docker image&lt;/a&gt;. The command-line is self explanatory by using &lt;code&gt;--help&lt;/code&gt; on various commands and sub-commands.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;ðŸ’¡&lt;/span&gt; Most commands read argument from the standard input. This prevent sensitive information from appearing into your shell history and, makes it easy to pipe commands!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a recovery phrase (&lt;strong&gt;phrase.prv&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address recovery-phrase generate --size 15 &amp;gt; phrase.prv&#xA;exercise club noble adult miracle awkward problem olympic puppy private goddess piano fatal fashion vacuum&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a root private key (&lt;strong&gt;root.xsk&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key from-recovery-phrase Shelley &amp;lt; phrase.prv &amp;gt; root.xsk&#xA;root_xsk1hqzfzrgskgnpwskxxrv5khs7ess82ecy8za9l5ef7e0afd2849p3zryje8chk39nxtva0sww5me3pzkej4rvd5cae3q3v8eu7556n6pdrp4fdu8nsglynpmcppxxvfdyzdz5gfq3fefjepxhvqspmuyvmvqg8983&#xA;&#xA;-- which is equivalent to empty passphrase&#xA;$ cardano-address key from-recovery-phrase Shelley --passphrase from-hex&#xA;Please enter a [9, 12, 15, 18, 21, 24] word mnemonic:&#xA;exercise club noble adult miracle awkward problem olympic puppy private goddess piano fatal fashion vacuum&#xA;Please enter hex-encoded passphrase:&#xA;&#xA;root_xsk1hqzfzrgskgnpwskxxrv5khs7ess82ecy8za9l5ef7e0afd2849p3zryje8chk39nxtva0sww5me3pzkej4rvd5cae3q3v8eu7556n6pdrp4fdu8nsglynpmcppxxvfdyzdz5gfq3fefjepxhvqspmuyvmvqg8983&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;span&gt;â„¹&lt;/span&gt; Notice the &lt;code&gt;root_xsk&lt;/code&gt; prefix to identify a root extended signing (private) key.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a root private key with passphrase (&lt;strong&gt;root.xsk&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address recovery-phrase generate --size 9 &amp;gt; sndfactor.prv&#xA;swing payment diagram happy chimney mammal flip become lyrics&#xA;&#xA;$ cardano-address key from-recovery-phrase Shelley --passphrase from-mnemonic&#xA;Please enter a [9, 12, 15, 18, 21, 24] word mnemonic:&#xA;exercise club noble adult miracle awkward problem olympic puppy private goddess piano fatal fashion vacuum&#xA;Please enter a 9â€“12 word second factor:&#xA;swing payment diagram happy chimney mammal flip become lyrics&#xA;root_xsk1jqx0xpke7de69ceyk20tdl9rq7nsava7cfnyeu42yqum8usnpppwmsxn2qsfj0nn2ur2kuq0kmrll67ryvkdhd6pgpsls6s6qx7hlyv6uqt0907t73eflkpw3xz45lcg5fsh6dunfk56j08jslh6x6rttspfny8c&#xA;&#xA; cardano-address key from-recovery-phrase Shelley --passphrase from-mnemonic --sensitive&#xA;Please enter a [9, 12, 15, 18, 21, 24] word mnemonic:&#xA;**********************************************************************************************************&#xA;Please enter a 9â€“12 word second factor:&#xA;*************************************************************&#xA;root_xsk1jqx0xpke7de69ceyk20tdl9rq7nsava7cfnyeu42yqum8usnpppwmsxn2qsfj0nn2ur2kuq0kmrll67ryvkdhd6pgpsls6s6qx7hlyv6uqt0907t73eflkpw3xz45lcg5fsh6dunfk56j08jslh6x6rttspfny8c&#xA;&#xA;$ cardano-address key from-recovery-phrase Shelley --passphrase from-mnemonic --silent&#xA;Please enter a [9, 12, 15, 18, 21, 24] word mnemonic:&#xA;&#xA;Please enter a 9â€“12 word second factor:&#xA;&#xA;root_xsk1jqx0xpke7de69ceyk20tdl9rq7nsava7cfnyeu42yqum8usnpppwmsxn2qsfj0nn2ur2kuq0kmrll67ryvkdhd6pgpsls6s6qx7hlyv6uqt0907t73eflkpw3xz45lcg5fsh6dunfk56j08jslh6x6rttspfny8c&#xA;&#xA;$ cardano-address key from-recovery-phrase Shelley --passphrase from-mnemonic --from-file &#34;./sndfactor.prv&#34; &amp;lt; phrase.prv&#xA;root_xsk1jqx0xpke7de69ceyk20tdl9rq7nsava7cfnyeu42yqum8usnpppwmsxn2qsfj0nn2ur2kuq0kmrll67ryvkdhd6pgpsls6s6qx7hlyv6uqt0907t73eflkpw3xz45lcg5fsh6dunfk56j08jslh6x6rttspfny8c&#xA;&#xA;$ cardano-address key from-recovery-phrase Shelley --passphrase from-hex&#xA;Please enter a [9, 12, 15, 18, 21, 24] word mnemonic:&#xA;exercise club noble adult miracle awkward problem olympic puppy private goddess piano fatal fashion vacuum&#xA;Please enter hex-encoded passphrase:&#xA;dc1434f3b472810d56409f85&#xA;root_xsk1jqx0xpke7de69ceyk20tdl9rq7nsava7cfnyeu42yqum8usnpppwmsxn2qsfj0nn2ur2kuq0kmrll67ryvkdhd6pgpsls6s6qx7hlyv6uqt0907t73eflkpw3xz45lcg5fsh6dunfk56j08jslh6x6rttspfny8c&#xA;&#xA;$ echo &#34;dc1434f3b472810d56409f85&#34; &amp;gt; base16.prv&#xA;$ cardano-address key from-recovery-phrase Shelley --passphrase from-hex --from-file &#34;./base16.prv&#34; &amp;lt; phrase.prv&#xA;root_xsk1jqx0xpke7de69ceyk20tdl9rq7nsava7cfnyeu42yqum8usnpppwmsxn2qsfj0nn2ur2kuq0kmrll67ryvkdhd6pgpsls6s6qx7hlyv6uqt0907t73eflkpw3xz45lcg5fsh6dunfk56j08jslh6x6rttspfny8c&#xA;&#xA;$ cardano-address key from-recovery-phrase Shelley --passphrase from-base64&#xA;Please enter a [9, 12, 15, 18, 21, 24] word mnemonic:&#xA;exercise club noble adult miracle awkward problem olympic puppy private goddess piano fatal fashion vacuum&#xA;Please enter base64-encoded passphrase:&#xA;3BQ087RygQ1WQJ+F&#xA;root_xsk1jqx0xpke7de69ceyk20tdl9rq7nsava7cfnyeu42yqum8usnpppwmsxn2qsfj0nn2ur2kuq0kmrll67ryvkdhd6pgpsls6s6qx7hlyv6uqt0907t73eflkpw3xz45lcg5fsh6dunfk56j08jslh6x6rttspfny8c&#xA;&#xA;$ echo &#34;3BQ087RygQ1WQJ+F&#34; &amp;gt; base64.prv&#xA;[pawel@arch testingCardanoAddresses]$ cardano-address key from-recovery-phrase Shelley --passphrase from-base64 --from-file &#34;./base64.prv&#34; &amp;lt; phrase.prv&#xA;root_xsk1jqx0xpke7de69ceyk20tdl9rq7nsava7cfnyeu42yqum8usnpppwmsxn2qsfj0nn2ur2kuq0kmrll67ryvkdhd6pgpsls6s6qx7hlyv6uqt0907t73eflkpw3xz45lcg5fsh6dunfk56j08jslh6x6rttspfny8c&#xA;&#xA;$ cardano-address key from-recovery-phrase Shelley --passphrase from-octets&#xA;Please enter a [9, 12, 15, 18, 21, 24] word mnemonic:&#xA;exercise club noble adult miracle awkward problem olympic puppy private goddess piano fatal fashion vacuum&#xA;Please enter passphrase in the form of octet array:&#xA;[220,20,52,243,180,114,129,13,86,64,159,133]&#xA;root_xsk1jqx0xpke7de69ceyk20tdl9rq7nsava7cfnyeu42yqum8usnpppwmsxn2qsfj0nn2ur2kuq0kmrll67ryvkdhd6pgpsls6s6qx7hlyv6uqt0907t73eflkpw3xz45lcg5fsh6dunfk56j08jslh6x6rttspfny8c&#xA;&#xA;$ echo &#34;[220,20,52,243,180,114,129,13,86,64,159,133]&#34; &amp;gt; octets.prv&#xA;$ cardano-address key from-recovery-phrase Shelley --passphrase from-octets --from-file &#34;./octets.prv&#34; &amp;lt; phrase.prv&#xA;root_xsk1jqx0xpke7de69ceyk20tdl9rq7nsava7cfnyeu42yqum8usnpppwmsxn2qsfj0nn2ur2kuq0kmrll67ryvkdhd6pgpsls6s6qx7hlyv6uqt0907t73eflkpw3xz45lcg5fsh6dunfk56j08jslh6x6rttspfny8c&#xA;&#xA;$ cardano-address key from-recovery-phrase Shelley --passphrase from-utf8&#xA;Please enter a [9, 12, 15, 18, 21, 24] word mnemonic:&#xA;exercise club noble adult miracle awkward problem olympic puppy private goddess piano fatal fashion vacuum&#xA;Please enter utf8-encoded passphrase:&#xA;my secret passphrase&#xA;root_xsk1aq5jduvnx7s6a4wl845jggvnhey5agqjv55dsexsx43np59pse0u4yfxpdfecz9h95jwecduqpt7zlk97j9mprmvjcfeyrcu9nyagpjq6k5cxpnwve5pj3cu24m9my94xtrqvzrlmu0893guffzazyk95cvprwzp&#xA;&#xA;$ cardano-address key from-recovery-phrase Shelley --passphrase &#34;&#34;&#xA;Please enter a [9, 12, 15, 18, 21, 24] word mnemonic:&#xA;exercise club noble adult miracle awkward problem olympic puppy private goddess piano fatal fashion vacuum&#xA;Please enter utf8-encoded passphrase:&#xA;my secret passphrase&#xA;root_xsk1aq5jduvnx7s6a4wl845jggvnhey5agqjv55dsexsx43np59pse0u4yfxpdfecz9h95jwecduqpt7zlk97j9mprmvjcfeyrcu9nyagpjq6k5cxpnwve5pj3cu24m9my94xtrqvzrlmu0893guffzazyk95cvprwzp&#xA;&#xA;$ echo &#34;my secret passphrase&#34; &amp;gt; utf8.prv&#xA;$ cardano-address key from-recovery-phrase Shelley --passphrase from-utf8 --from-file &#34;./utf8.prv&#34; &amp;lt; phrase.prv&#xA;root_xsk1aq5jduvnx7s6a4wl845jggvnhey5agqjv55dsexsx43np59pse0u4yfxpdfecz9h95jwecduqpt7zlk97j9mprmvjcfeyrcu9nyagpjq6k5cxpnwve5pj3cu24m9my94xtrqvzrlmu0893guffzazyk95cvprwzp&#xA;&#xA;-- NOTE:&#xA;--Î»&amp;gt; let (Right m) = mkSomeMnemonic @&#39;[ 9 ] [&#34;swing&#34;, &#34;payment&#34;, &#34;diagram&#34;, &#34;happy&#34;, &#34;chimney&#34;, &#34;mammal&#34;, &#34;flip&#34;, &#34;become&#34;, &#34;lyrics&#34;]&#xA;--Î»&amp;gt; m&#xA;--SomeMnemonic (Mnemonic {mnemonicToEntropy = Entropy {entropyRaw = &#34;\220\DC44\243\180r\129\rV@\159\133&#34;, entropyChecksum = Checksum 3}, mnemonicToSentence = MnemonicSentence {mnemonicSentenceToListN = [WordIndex {unWordIndex = Offset 1760},WordIndex {unWordIndex = Offset 1293},WordIndex {unWordIndex = Offset 487},WordIndex {unWordIndex = Offset 839},WordIndex {unWordIndex = Offset 320},WordIndex {unWordIndex = Offset 1077},WordIndex {unWordIndex = Offset 712},WordIndex {unWordIndex = Offset 159},WordIndex {unWordIndex = Offset 1067}]}})&#xA;--Î»&amp;gt; let bytes = BA.convert $ someMnemonicToBytes m :: ByteString&#xA;--Î»&amp;gt; bytes&#xA;--&#34;\220\DC44\243\180r\129\rV@\159\133&#34;&#xA;--Î»&amp;gt; encode EBase16 bytes&#xA;--&#34;dc1434f3b472810d56409f85&#34;&#xA;--Î»&amp;gt; decodeUtf8 $ convertToBase Base64 bytes&#xA;-- &#34;3BQ087RygQ1WQJ+F&#34;&#xA;--Î»&amp;gt; BS.unpack bytes&#xA;-- [220,20,52,243,180,114,129,13,86,64,159,133]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;span&gt;â„¹&lt;/span&gt; Notice the &lt;code&gt;root_xsk&lt;/code&gt; prefix to identify a root extended signing (private) key.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a wallet id based on extended root or account keys (&lt;strong&gt;phrase.prv&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cat root.xsk&#xA;root_xsk1hqzfzrgskgnpwskxxrv5khs7ess82ecy8za9l5ef7e0afd2849p3zryje8chk39nxtva0sww5me3pzkej4rvd5cae3q3v8eu7556n6pdrp4fdu8nsglynpmcppxxvfdyzdz5gfq3fefjepxhvqspmuyvmvqg8983&#xA;$ cardano-address key walletid &amp;lt; root.xsk&#xA;163ea20ad0611e4815a61c44bb32c82a81538999&#xA;&#xA;$ cardano-address key public --with-chain-code &amp;lt; root.xsk | cardano-address key walletid&#xA;163ea20ad0611e4815a61c44bb32c82a81538999&#xA;&#xA;$ cardano-address key child 1852H/1815H/0H &amp;lt; root.xsk &amp;gt; acct.xsk&#xA;$ cat acct.xsk&#xA;acct_xsk15ztha8ws7qjze5vmdkwqh0ddzvtlgstkg79swazhc5lxns2849plr3msjx082mcmd9hc24ujczk2cjnjwrcz4tjaucw9jqf8h5yc7d84rac0zdckkuhazpam0kleg4sq52ph3e0wn98a64hr8g5cpmh9zqpwtrhy&#xA;$ cardano-address key walletid &amp;lt; acct.xsk&#xA;15fd6c2130b0758ec7995bf9771d2a6602417c39&#xA;$ cardano-address key public --with-chain-code &amp;lt; acct.xsk | cardano-address key walletid&#xA;15fd6c2130b0758ec7995bf9771d2a6602417c39&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a wallet id based on account keys of shared wallet (&lt;strong&gt;phrase.prv&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key from-recovery-phrase Shared &amp;lt; phrase.prv &amp;gt; root.shared_xsk&#xA;root_shared_xsk1hqzfzrgskgnpwskxxrv5khs7ess82ecy8za9l5ef7e0afd2849p3zryje8chk39nxtva0sww5me3pzkej4rvd5cae3q3v8eu7556n6pdrp4fdu8nsglynpmcppxxvfdyzdz5gfq3fefjepxhvqspmuyvmvzteqlc&#xA;&#xA;$ cardano-address key child 1854H/1815H/0H &amp;lt; root.shared_xsk &amp;gt; acct.shared_xsk&#xA;acct_shared_xsk14zh0kh0geaz9qpxv6q0n5upq8ux4n97u2gyl69mnhan74w6849pa3hj2p40xg0nugw8tzqu5eynzjunay6tffru9wdjank0phsfuc7vngjsmtktel05g6mx555tw8nxr8rpn2gac6km5plu9mwqsz54rfyhwd7pd&#xA;&#xA;$ cardano-address key walletid &amp;lt; acct.shared_xsk&#xA;user error (shared wallet needs to have at least spending script specified)&#xA;&#xA;$ cardano-address key walletid --spending &#34;cosigner#0&#34; &amp;lt; acct.shared_xsk&#xA;185d3582fc4892c4528614210b13e9a775dd7d02&#xA;&#xA;$ cardano-address key public --with-chain-code &amp;lt; acct.shared_xsk | cardano-address key walletid --spending &#34;cosigner#0&#34;&#xA;185d3582fc4892c4528614210b13e9a775dd7d02&#xA;&#xA;$ cardano-address key walletid --spending &#34;all [cosigner#0, active_until 1000]&#34; &amp;lt; acct.shared_xsk&#xA;42ecb214586dcbcb593688fb081784fa0aebb2c0&#xA;&#xA;$ cardano-address key walletid --spending &#34;all [cosigner#0, active_until 1000]&#34; --staking &#34;cosigner#1&#34; &amp;lt; acct.shared_xsk&#xA;12dc98557a4c5aa00575c5d1f0dbfa3837261e32&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a private policy key (&lt;strong&gt;policy.xsk&lt;/strong&gt;), a public policy key (&lt;strong&gt;policy.vk&lt;/strong&gt;) and its hash (&lt;strong&gt;policy.vkh&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key child 1855H/1815H/0H &amp;lt; root.xsk &amp;gt; policy.xsk&#xA;policy_xsk1hr47zvxgzeeutgq50r965ygwxys86cwp8wdjqftlhan8mw6849pus6vc50dznjs5vkyjcz9usl6964u6nha88slrh8hyex74xnlfehcrkp80cp8wgzkqh22dzy7c48ekhhvvf2zz8hqakjwgfzgrjq5lx538et75&#xA;&#xA;$ cardano-address key child 1855H/1815H/0H &amp;lt; root.xsk | cardano-address key public --with-chain-code &amp;gt; policy.xvk&#xA;policy_xvk1e9ngmlhcwhszwyuxwc7anwk6tvzwndldz7j262rvfpd049tq74mq8vzwlszwus9vpw556yfa320nd0wccj5yy0wpmdyusjys8ypf7dgaauf0m&#xA;&#xA;$ cardano-address key child 1855H/1815H/0H &amp;lt; root.xsk | cardano-address key public --without-chain-code &amp;gt; policy.vk&#xA;policy_vk1e9ngmlhcwhszwyuxwc7anwk6tvzwndldz7j262rvfpd049tq74mq0ylkrs&#xA;&#xA;$ cardano-address key hash &amp;lt; policy.xvk&#xA;policy_vkh1qpc9xly4lc7yt98gcf59kdcqcss6dda4u9g72e775yxpxeypamc&#xA;$ cardano-address key hash &amp;lt; policy.vk&#xA;policy_vkh1qpc9xly4lc7yt98gcf59kdcqcss6dda4u9g72e775yxpxeypamc&#xA;$ cardano-address key hash --hex &amp;lt; policy.vk&#xA;0070537c95fe3c4594e8c2685b3700c421a6b7b5e151e567dea10c13&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;span&gt;â„¹&lt;/span&gt; The last segment in the path is the key index and can be incremented up to &lt;code&gt;2^31-1&lt;/code&gt; to derive more keys.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a payment verification key (&lt;strong&gt;addr.xvk&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key child 1852H/1815H/0H/0/0 &amp;lt; root.xsk | cardano-address key public --with-chain-code &amp;gt; addr.xvk&#xA;addr_xvk1grvg8qzmkmw2n0dm4pd0h3j4dv6yglyammyp733eyj629dc3z28v6wk22nfmru6xz0vl2s3y5xndyd57fu70hrt84c6zkvlwx6fdl7ct9j7yc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;span&gt;â„¹&lt;/span&gt; The last segment in the path is the key index and can be incremented up to &lt;code&gt;2^31-1&lt;/code&gt; to derive more keys.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate an extended stake verification key (&lt;strong&gt;stake.xvk&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key child 1852H/1815H/0H/2/0 &amp;lt; root.xsk | cardano-address key public --with-chain-code &amp;gt; stake.xvk&#xA;stake_xvk1658atzttunamzn80204khrg0qfdk5nvmrutlmmpg7xlsyaggwa7h9z4smmeqsvs67qhyqmc2lqa0vy36rf2la74ym8a5p93zp4qtpuq6ky3ve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;span&gt;â„¹&lt;/span&gt; The last segment in the path is the key index and can be incremented up to &lt;code&gt;2^31-1&lt;/code&gt; to derive more keys.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a non-extended stake verification key (&lt;strong&gt;stake.vk&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key child 1852H/1815H/0H/2/0 &amp;lt; root.xsk | cardano-address key public --without-chain-code &amp;gt; stake.vk&#xA;stake_vk1658atzttunamzn80204khrg0qfdk5nvmrutlmmpg7xlsyaggwa7sg87an2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;span&gt;â„¹&lt;/span&gt; The last segment in the path is the key index and can be incremented up to &lt;code&gt;2^31-1&lt;/code&gt; to derive more keys.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a hash for payment verification key (&lt;strong&gt;addr.xvk&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key child 1852H/1815H/0H/0/0 &amp;lt; root.xsk | cardano-address key public --with-chain-code &amp;gt; addr.xvk&#xA;addr_xvk1grvg8qzmkmw2n0dm4pd0h3j4dv6yglyammyp733eyj629dc3z28v6wk22nfmru6xz0vl2s3y5xndyd57fu70hrt84c6zkvlwx6fdl7ct9j7yc&#xA;$ cardano-address key hash &amp;lt; addr.xvk&#xA;addr_vkh12j28hnmtwcp3n08vy58vyf0arnnrhtavu3lrfdztw0j0jng3d6v&#xA;$ cardano-address key hash --hex &amp;lt; addr.xvk&#xA;54947bcf6b760319bcec250ec225fd1ce63baface47e34b44b73e4f9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;span&gt;â„¹&lt;/span&gt; The hashing is available for both stake and payment verification keys. Additional flag &#39;--hex&#39; can be used.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a payment address from an extended payment key (&lt;strong&gt;payment.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address address payment --network-tag testnet &amp;lt; addr.xvk &amp;gt; payment.addr&#xA;addr_test1vp2fg770ddmqxxduasjsas39l5wwvwa04nj8ud95fde7f7guscp6v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a payment address from a non-extended payment key (&lt;strong&gt;payment.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key child 1852H/1815H/0H/0/0 &amp;lt; root.xsk | cardano-address key public --without-chain-code &amp;gt; addr.vk&#xA;addr_vk1grvg8qzmkmw2n0dm4pd0h3j4dv6yglyammyp733eyj629dc3z28qwq4y73&#xA;$ cardano-address address payment --network-tag testnet &amp;lt; addr.vk &amp;gt; payment.addr&#xA;addr_test1vp2fg770ddmqxxduasjsas39l5wwvwa04nj8ud95fde7f7guscp6v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a payment address from a payment key hash (&lt;strong&gt;payment.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key hash &amp;lt; addr.xvk &amp;gt; addr.vkh&#xA;addr_vkh12j28hnmtwcp3n08vy58vyf0arnnrhtavu3lrfdztw0j0jng3d6v&#xA;$ cardano-address address payment --network-tag testnet &amp;lt; addr.vkh &amp;gt; payment.addr&#xA;addr_test1vp2fg770ddmqxxduasjsas39l5wwvwa04nj8ud95fde7f7guscp6v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a delegated payment address, i.e. base address, from an extended stake key (&lt;strong&gt;base.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address address delegation $(cat stake.xvk) &amp;lt; payment.addr &amp;gt; base.addr&#xA;addr_test1qp2fg770ddmqxxduasjsas39l5wwvwa04nj8ud95fde7f70k6tew7wrnx0s4465nx05ajz890g44z0kx6a3gsnms4c4qq8ve0n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a delegated payment address, i.e. base address, from a non-extended stake key (&lt;strong&gt;base.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key child 1852H/1815H/0H/2/0 &amp;lt; root.xsk | cardano-address key public --without-chain-code &amp;gt; stake.vk&#xA;stake_vk1658atzttunamzn80204khrg0qfdk5nvmrutlmmpg7xlsyaggwa7sg87an2&#xA;$ cardano-address address delegation $(cat stake.vk) &amp;lt; payment.addr &amp;gt; base.addr&#xA;addr_test1qp2fg770ddmqxxduasjsas39l5wwvwa04nj8ud95fde7f70k6tew7wrnx0s4465nx05ajz890g44z0kx6a3gsnms4c4qq8ve0n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a delegated payment address, i.e. base address, from a stake key hash (&lt;strong&gt;base.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key hash &amp;lt; stake.xvk &amp;gt; stake.vkh&#xA;stake_vkh17mf09mecwve7zkh2jve7nkggu4azk5f7cmtk9zz0wzhz5efq2w6&#xA;$ cardano-address address delegation $(cat stake.vkh) &amp;lt; payment.addr &amp;gt; base.addr&#xA;addr_test1qp2fg770ddmqxxduasjsas39l5wwvwa04nj8ud95fde7f70k6tew7wrnx0s4465nx05ajz890g44z0kx6a3gsnms4c4qq8ve0n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a stake address from an extended stake key (&lt;strong&gt;stake.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address address stake --network-tag testnet &amp;lt; stake.xvk &amp;gt; stake.addr&#xA;stake_test1urmd9uh08pen8c26a2fn86weprjh52638mrdwc5gfac2u2s25zpat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a stake address from a non-extended stake key (&lt;strong&gt;stake.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address address stake --network-tag testnet &amp;lt; stake.vk &amp;gt; stake.addr&#xA;stake_test1urmd9uh08pen8c26a2fn86weprjh52638mrdwc5gfac2u2s25zpat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a stake address from a stake key hash (&lt;strong&gt;stake.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key hash &amp;lt; stake.xvk &amp;gt; stake.vkh&#xA;stake_vkh17mf09mecwve7zkh2jve7nkggu4azk5f7cmtk9zz0wzhz5efq2w6&#xA;$ cardano-address address stake --network-tag testnet &amp;lt; stake.vkh &amp;gt; stake.addr&#xA;stake_test1urmd9uh08pen8c26a2fn86weprjh52638mrdwc5gfac2u2s25zpat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to inspect address&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ echo addr_test1vp2fg770ddmqxxduasjsas39l5wwvwa04nj8ud95fde7f7guscp6v | cardano-address address inspect&#xA;{&#xA;    &#34;stake_reference&#34;: &#34;none&#34;,&#xA;    &#34;spending_key_hash_bech32&#34;: &#34;addr_vkh12j28hnmtwcp3n08vy58vyf0arnnrhtavu3lrfdztw0j0jng3d6v&#34;,&#xA;    &#34;address_style&#34;: &#34;Shelley&#34;,&#xA;    &#34;spending_key_hash&#34;: &#34;54947bcf6b760319bcec250ec225fd1ce63baface47e34b44b73e4f9&#34;,&#xA;    &#34;network_tag&#34;: 0,&#xA;    &#34;address_type&#34;: 6&#xA;}&#xA;&#xA;$ echo addr_test1qp2fg770ddmqxxduasjsas39l5wwvwa04nj8ud95fde7f70k6tew7wrnx0s4465nx05ajz890g44z0kx6a3gsnms4c4qq8ve0n | cardano-address address inspect&#xA;{&#xA;    &#34;stake_reference&#34;: &#34;by value&#34;,&#xA;    &#34;stake_key_hash_bech32&#34;: &#34;stake_vkh17mf09mecwve7zkh2jve7nkggu4azk5f7cmtk9zz0wzhz5efq2w6&#34;,&#xA;    &#34;stake_key_hash&#34;: &#34;f6d2f2ef387333e15aea9333e9d908e57a2b513ec6d762884f70ae2a&#34;,&#xA;    &#34;spending_key_hash_bech32&#34;: &#34;addr_vkh12j28hnmtwcp3n08vy58vyf0arnnrhtavu3lrfdztw0j0jng3d6v&#34;,&#xA;    &#34;address_style&#34;: &#34;Shelley&#34;,&#xA;    &#34;spending_key_hash&#34;: &#34;54947bcf6b760319bcec250ec225fd1ce63baface47e34b44b73e4f9&#34;,&#xA;    &#34;network_tag&#34;: 0,&#xA;    &#34;address_type&#34;: 0&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Details about possible address types are following (refer also to &lt;a href=&#34;https://github.com/input-output-hk/cardano-ledger/raw/master/eras/alonzo/test-suite/cddl-files/alonzo.cddl&#34;&gt;cddl&lt;/a&gt; )&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;address_type&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;binary prefix&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Meaning&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;0&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;0000&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;base address: keyhash28,keyhash28&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;1&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;0001&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;base address: scripthash28,keyhash28&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;2&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;0010&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;base address: keyhash28,scripthash28&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;3&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;0011&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;base address: scripthash28,scripthash28&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;4&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;0100&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pointer address: keyhash28, 3 variable length uint&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;5&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;0101&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pointer address: scripthash28, 3 variable length uint&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;6&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;0110&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;enterprise address: keyhash28&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;7&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;0111&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;enterprise address: scripthash28&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;8&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;1000&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;byron/icarus&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;14&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;1110&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;reward account: keyhash28&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;15&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;1111&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;reward account: scripthash28&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a payment verification key for shared wallet (&lt;strong&gt;addr_shared.vk&lt;/strong&gt;, &lt;strong&gt;stake_shared.vk&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;p&gt;Let&#39;s generate extended root private key for shared style:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key from-recovery-phrase Shared &amp;lt; phrase.prv &amp;gt; root_shared.xsk&#xA;root_shared_xsk1hqzfzrgskgnpwskxxrv5khs7ess82ecy8za9l5ef7e0afd2849p3zryje8chk39nxtva0sww5me3pzkej4rvd5cae3q3v8eu7556n6pdrp4fdu8nsglynpmcppxxvfdyzdz5gfq3fefjepxhvqspmuyvmvzteqlc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Now generate payment verification key (&lt;code&gt;role=0&lt;/code&gt; is used). Please note that purpose &lt;code&gt;1854H&lt;/code&gt; is used for multisig.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key child 1854H/1815H/0H/0/0 &amp;lt; root_shared.xsk | cardano-address key public --without-chain-code &amp;gt; addr_shared.vk&#xA;addr_shared_vk1a9h46rvjnqquxz02zyesh0ct29szh7vv9x7r2h87ttmnkgrfgguqhz0mtc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Generating delegation verification key is the similar (the only difference is role=2)&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key child 1854H/1815H/0H/2/0 &amp;lt; root_shared.xsk | cardano-address key public --without-chain-code &amp;gt; stake_shared.vk&#xA;stake_shared_vk18a8z5dcrlwene88n84j6dm9yvj5rt296fjtresqnunmacetdcymquyq43z&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;span&gt;â„¹&lt;/span&gt; The last segment in the path is the key index, which can be incremented to derive more keys. Up &lt;code&gt;2^31-1&lt;/code&gt; keys are possible.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to construct a multisig script hash (&lt;strong&gt;script.hash&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;p&gt;We consider &lt;code&gt;addr_shared.1.vk&lt;/code&gt; and &lt;code&gt;addr_shared.2.vk&lt;/code&gt; obtained like &lt;code&gt;addr_shared.vk&lt;/code&gt; but by replacing the final index by &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt; respectively.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key child 1854H/1815H/0H/0/1 &amp;lt; root_shared.xsk | cardano-address key public --without-chain-code &amp;gt; addr_shared.1.vk&#xA;addr_shared_vk1wgj79fxw2vmxkp85g88nhwlflkxevd77t6wy0nsktn2f663wdcmqcd4fp3&#xA;$ cardano-address key child 1854H/1815H/0H/0/2 &amp;lt; root_shared.xsk | cardano-address key public --without-chain-code &amp;gt; addr_shared.2.vk&#xA;addr_shared_vk1jthguyss2vffmszq63xsmxlpc9elxnvdyaqk7susl4sppp2s9xqsuszh44&#xA;$ cardano-address script hash &#34;all [$(cat addr_shared.1.vk), $(cat addr_shared.2.vk)]&#34; &amp;gt; script.hash&#xA;script1gr69m385thgvkrtspk73zmkwk537wxyxuevs2u9cukglvtlkz4k&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This script requires the signature from both signing keys corresponding to &lt;code&gt;shared_addr.1.vk&lt;/code&gt; and &lt;code&gt;shared_addr.2.vk&lt;/code&gt; (i.e., shared_addr.1.sk and shared_addr.2.sk) in order to be valid. Similarly, we could require only one of the two signatures:&lt;/p&gt; &#xA; &lt;p&gt;We can also use extended verification, eiher payment or delegation, keys. They can be obtained as the non-extended ones by using &lt;code&gt;--with-chain-code&lt;/code&gt; option rather than &lt;code&gt;--without-chain-option&lt;/code&gt; as above. They will give rise to the same script hash as for verification keys chain code is stripped upon calculation.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key child 1854H/1815H/0H/0/1 &amp;lt; root_shared.xsk | cardano-address key public --with-chain-code &amp;gt; addr_shared.1.xvk&#xA;addr_shared_xvk1wgj79fxw2vmxkp85g88nhwlflkxevd77t6wy0nsktn2f663wdcmqhlfft3dn0qcn6q99dvlfl2ws5duy6w65zks5jgufe60fg839sysavl5pc&#xA;$ cardano-address key child 1854H/1815H/0H/0/2 &amp;lt; root_shared.xsk | cardano-address key public --with-chain-code &amp;gt; addr_shared.2.xvk&#xA;addr_shared_xvk1jthguyss2vffmszq63xsmxlpc9elxnvdyaqk7susl4sppp2s9xq3zegcxtslhpghmadrlvsphssfjqp3mxg9gca27e35wpu43lqjqnsmjvxuw&#xA;$ cardano-address script hash &#34;all [$(cat addr_shared.1.xvk), $(cat addr_shared.2.xvk)]&#34;&#xA;script1gr69m385thgvkrtspk73zmkwk537wxyxuevs2u9cukglvtlkz4k&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;which is equivalent (functionally, but not in terms of hash value) to :&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address script hash &#34;at_least 1 [$(cat addr_shared.1.xvk), $(cat addr_shared.2.xvk)]&#34;&#xA;script13uf3fz3ts5srpjc5zcfe977uvnyvp36wcvxuudryegz0zpjlx6a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to construct a multisig script hash with timelocks&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$  cardano-address script hash &#34;all [$(cat addr_shared.1.xvk), $(cat addr_shared.2.xvk), active_from 100, active_until 120]&#34;&#xA;script1nugjzwfs2t9htl7s3dv9ajnd5us8pctpa8aj4ank8dnd6d6unul&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to validate a script&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$  cardano-address script validate &#34;at_least 1 [$(cat addr_shared.1.xvk), $(cat addr_shared.2.xvk), $(cat addr_shared.2.xvk)]&#34;&#xA;Validated.&#xA;&#xA;$  cardano-address script validate --recommended  &#34;at_least 1 [$(cat addr_shared.1.xvk), $(cat addr_shared.2.xvk), $(cat addr_shared.2.xvk)]&#34;&#xA;Not validated: The list inside a script has duplicate keys (which is not recommended)..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to get preimage for a script&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address script preimage &#34;all [addr_shared_vkh1zxt0uvrza94h3hv4jpv0ttddgnwkvdgeyq8jf9w30mcs6y8w3nq, addr_shared_vkh1y3zl4nqgm96ankt96dsdhc86vd5geny0wr7hu8cpzdfcqskq2cp]&#34;&#xA;008201828200581c1196fe3062e96b78dd959058f5adad44dd663519200f2495d17ef10d8200581c2445facc08d975d9d965d360dbe0fa63688ccc8f70fd7e1f01135380&#xA;&#xA;$  cardano-address script preimage &#34;all [addr_shared_vkh1zxt0uvrza94h3hv4jpv0ttddgnwkvdgeyq8jf9w30mcs6y8w3nq, active_from 100, active_until 150]&#34;&#xA;008201838200581c1196fe3062e96b78dd959058f5adad44dd663519200f2495d17ef10d8204186482051896&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a payment script address from a script hash (&lt;strong&gt;script.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address address payment --network-tag testnet &amp;lt; script.hash &amp;gt; script.addr&#xA;addr_test1wpq0ghwy73wapjcdwqxm6ytwe66j8eccsmn9jptshrjerashp7y82&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a payment script address from a script (&lt;strong&gt;script.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address address payment --network-tag testnet &#34;all [$(cat addr_shared.1.xvk), $(cat addr_shared.2.xvk)]&#34;  &amp;gt; script.addr&#xA;addr_test1wpq0ghwy73wapjcdwqxm6ytwe66j8eccsmn9jptshrjerashp7y82&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a delegated payment address, i.e. base address, from a script hash (&lt;strong&gt;base.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address script hash &#34;all [$(cat addr_shared.1.xvk), $(cat addr_shared.2.xvk), active_from 100, active_until 120]&#34; &amp;gt; script.stake.hash&#xA;script1nugjzwfs2t9htl7s3dv9ajnd5us8pctpa8aj4ank8dnd6d6unul&#xA;$ cardano-address address delegation $(cat script.stake.hash) &amp;lt; script.addr &amp;gt; base.addr&#xA;addr_test1xpq0ghwy73wapjcdwqxm6ytwe66j8eccsmn9jptshrjera5lzysnjvzjed6ll5yttp0v5md8ypcwzc0flv40va3mvmwsl7grs3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a delegated payment address, i.e. base address, from a script (&lt;strong&gt;base.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address address delegation &#34;all [$(cat addr_shared.1.xvk), $(cat addr_shared.2.xvk), active_from 100, active_until 120]&#34; &amp;lt; script.addr &amp;gt; base.addr&#xA;addr_test1xpq0ghwy73wapjcdwqxm6ytwe66j8eccsmn9jptshrjera5lzysnjvzjed6ll5yttp0v5md8ypcwzc0flv40va3mvmwsl7grs3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a stake address from a script hash (&lt;strong&gt;stake.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address address stake --network-tag testnet &amp;lt; script.stake.hash &amp;gt; stake.addr&#xA;stake_test17z03zgfexpfvka0l6z94shk2dknjqu8pv85lk2hkwcakdhgx52yaj&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a stake address from a script (&lt;strong&gt;stake.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address address stake --network-tag testnet &#34;all [$(cat addr_shared.1.xvk), $(cat addr_shared.2.xvk), active_from 100, active_until 120]&#34; &amp;gt; stake.addr&#xA;stake_test17z03zgfexpfvka0l6z94shk2dknjqu8pv85lk2hkwcakdhgx52yaj&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Correspondence between keys in cardano-addresses and cardano-cli (&lt;strong&gt;key.xsk key.xvk key.vk key.hash&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;Let&#39;s assume we have mnemonic&#xA;$ cat recovery-phrase.prv&#xA;nothing heart matrix fly sleep slogan tomato pulse what roof rail since plastic false enlist&#xA;&#xA;Construct root extended private key&#xA;$ cardano-address key from-recovery-phrase Shelley &amp;lt; recovery-phrase.prv &amp;gt; root.xprv&#xA;root_xsk1apjwjs3ksgm5mnnk0cc5v5emgv0hmafmmy8tffay5s2ffk69830whwznr46672ruucdzwwtv9upv72e4ylrypyz5m6cyh0p00t7n3u3agt20lv32j4kxcqlkzu78nzjx0ysxxlc2ghfz9prxfmrds802xsuhh404~&#xA;&#xA;Construct extended private key for account ix=0H, role=0 and address ix=0&#xA;$ cardano-address key child 1852H/1815H/0H/0/0 &amp;lt; root.xprv &amp;gt; key.xsk&#xA;addr_xsk1kzl5vgev0u843tfnxqcwg0lmaf7zhdhczddaqhas6dp6m6z98302e3avp8mhu94kxkpj2gss064f74km3rrptafh4fsztekz8k5c469shcvx35wrdmus3xemp984lcwhs0jdtl4pfcsrfspe00h9pej6rg8drvcv&#xA;&#xA;Create extended signing key using cardano-cli&#xA;$ cardano-cli key convert-cardano-address-key --shelley-payment-key --signing-key-file key.xsk --out-file key.skey&#xA;{&#xA;    &#34;type&#34;: &#34;PaymentExtendedSigningKeyShelley_ed25519_bip32&#34;,&#xA;    &#34;description&#34;: &#34;&#34;,&#xA;    &#34;cborHex&#34;: &#34;5880b0bf46232c7f0f58ad333030e43ffbea7c2bb6f8135bd05fb0d343ade8453c5eacc7ac09f77e16b635832522107eaa9f56db88c615f537aa6025e6c23da98ae8fbbbf6410e24532f35e9279febb085d2cc05b3b2ada1df77ea1951eb694f3834b0be1868d1c36ef9089b3b094f5fe1d783e4d5fea14e2034c0397bee50e65a1a&#34;&#xA;}&#xA;&#xA;The cborhex here contains of 4 parts:&#xA;1. prefix 5880 - bytestring of 128 bytes&#xA;2. signing key (64 bytes) - b0bf46232c7f0f58ad333030e43ffbea7c2bb6f8135bd05fb0d343ade8453c5eacc7ac09f77e16b635832522107eaa9f56db88c615f537aa6025e6c23da98ae8&#xA;3. verification key (32 bytes) - fbbbf6410e24532f35e9279febb085d2cc05b3b2ada1df77ea1951eb694f3834&#xA;4. chain code (32 bytes) - b0be1868d1c36ef9089b3b094f5fe1d783e4d5fea14e2034c0397bee50e65a1a&#xA;&#xA;Create corresponding verification key using cardano-cli&#xA;$ cardano-cli key verification-key --signing-key-file key.skey --verification-key-file key.vkey&#xA;{&#xA;    &#34;type&#34;: &#34;PaymentExtendedVerificationKeyShelley_ed25519_bip32&#34;,&#xA;    &#34;description&#34;: &#34;&#34;,&#xA;    &#34;cborHex&#34;: &#34;5840fbbbf6410e24532f35e9279febb085d2cc05b3b2ada1df77ea1951eb694f3834b0be1868d1c36ef9089b3b094f5fe1d783e4d5fea14e2034c0397bee50e65a1a&#34;&#xA;}&#xA;The cborhex here contains of 3 parts:&#xA;1. prefix 5840 - bytestring of 64 bytes&#xA;2. verification key (32 bytes) - fbbbf6410e24532f35e9279febb085d2cc05b3b2ada1df77ea1951eb694f3834&#xA;3. chain code (32 bytes) - b0be1868d1c36ef9089b3b094f5fe1d783e4d5fea14e2034c0397bee50e65a1a&#xA;&#xA;Rule for prefixes:&#xA;  - CBOR-encoded bytestring (which is what the 58 identifies)&#xA;  - size (80 means 128 bytes, whereas 40 means 64 bytes, 20 means 32 bytes)&#xA;&#xA;Create verification key hash using cardano-cli&#xA;$ cardano-cli address key-hash --payment-verification-key-file key.vkey &amp;gt; key.hash&#xA;0185545935760c5e370d01e6f4fedbb89b7fd79e115f2837cfab9ea8&#xA;&#xA;Alternatively, we can create non-extended key&#xA;$ cardano-address key public --without-chain-code &amp;lt; key.xsk &amp;gt; key.vk&#xA;addr_vk1lwalvsgwy3fj7d0fy707hvy96txqtvaj4ksa7al2r9g7k6208q6qmrv9k3&#xA;&#xA;Also, take notice that signing key can be translated to cborhex:&#xA;$ cat key.xsk | bech32&#xA;b0bf46232c7f0f58ad333030e43ffbea7c2bb6f8135bd05fb0d343ade8453c5eacc7ac09f77e16b635832522107eaa9f56db88c615f537aa6025e6c23da98ae8b0be1868d1c36ef9089b3b094f5fe1d783e4d5fea14e2034c0397bee50e65a1a&#xA;(signing key and chain code appended)&#xA;&#xA;Moreover, basing on key.vk one can get hash&#xA;$ cardano-cli address key-hash --payment-verification-key $(cat key.vk) &amp;gt; key1.hash&#xA;0185545935760c5e370d01e6f4fedbb89b7fd79e115f2837cfab9ea8&#xA;&#xA;Within cardano-addresses one can get cborhex of verification key (with chain code)&#xA;$ cardano-address key public --with-chain-code &amp;lt; key.xsk | bech32&#xA;fbbbf6410e24532f35e9279febb085d2cc05b3b2ada1df77ea1951eb694f3834b0be1868d1c36ef9089b3b094f5fe1d783e4d5fea14e2034c0397bee50e65a1a&#xA;(verification key and chain code appended)&#xA;&#xA;Within cardano-addresses one can get cborhex of verification key (without chain code)&#xA;$ cardano-address key public --without-chain-code &amp;lt; key.xsk | bech32&#xA;fbbbf6410e24532f35e9279febb085d2cc05b3b2ada1df77ea1951eb694f3834&#xA;(verification key without chain code)&#xA;&#xA;Then, we can get compute hash (but here we need to use without chain code):&#xA;$ cardano-address key public --without-chain-code &amp;lt; key.xsk | cardano-address key hash | bech32&#xA;0185545935760c5e370d01e6f4fedbb89b7fd79e115f2837cfab9ea8&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Docker Image&lt;/h2&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker build -t cardano-address .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run&lt;/h3&gt; &#xA;&lt;p&gt;Use the auto-remove flag &lt;code&gt;--rm&lt;/code&gt; when running commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --rm cardano-address recovery-phrase generate --size 15&#xA;dismiss grit bacon glare napkin satisfy tribe proud carpet bench fantasy rich history face north&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the interactive flag &lt;code&gt;-i&lt;/code&gt; when piping stdin&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ echo &#34;addr1gqtnpvdhqrtpd4g424fcaq7k0ufuzyadt7djygf8qdyzevuph3wczvf2dwyx5u&#34; | docker run --rm -i cardano-addresses address inspect&#xA;{&#xA;    &#34;address_style&#34;: &#34;Shelley&#34;,&#xA;    &#34;stake_reference&#34;: &#34;by pointer&#34;,&#xA;    &#34;spending_key_hash&#34;: &#34;1730b1b700d616d51555538e83d67f13c113ad5f9b22212703482cb3&#34;,&#xA;    &#34;pointer&#34;: {&#xA;        &#34;slot_num&#34;: 24157,&#xA;        &#34;output_index&#34;: 42,&#xA;        &#34;transaction_index&#34;: 177&#xA;    },&#xA;    &#34;network_tag&#34;: 0&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;NPM Package&lt;/h2&gt; &#xA;&lt;p&gt;There is an experimental NPM module for JavaScript and TypeScript available, which works in both NodeJS and the browser.&lt;/p&gt; &#xA;&lt;p&gt;Here is a code sample showing how it can be used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var cardanoAddresses = require(&#39;cardano-addresses&#39;)&#xA;var addr = &#39;addr1gqtnpvdhqrtpd4g424fcaq7k0ufuzyadt7djygf8qdyzevuph3wczvf2dwyx5u&#39;&#xA;&#xA;cardanoAddresses.inspectAddress(addr)&#xA;  .then(info =&amp;gt; console.log(info)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/cardano-addresses&#34;&gt;NPM Package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://input-output-hk.github.io/cardano-addresses/typescript/&#34;&gt;API Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://input-output-hk.github.io/cardano-addresses/demo/&#34;&gt;Web Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/IntersectMBO/cardano-addresses/master/jsapi/README.md&#34;&gt;Development Info&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are welcome.&lt;/p&gt; &#xA;&lt;p&gt;When creating a pull request, please make sure that your code adheres to our &lt;a href=&#34;https://input-output-hk.github.io/adrestia/code/Coding-Standards&#34;&gt;coding standards&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/input-output-hk/cardano-addresses/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/input-output-hk/cardano-addresses.svg?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
</feed>