<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-18T01:40:58Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>krispo/awesome-haskell</title>
    <updated>2022-06-18T01:40:58Z</updated>
    <id>tag:github.com,2022-06-18:/krispo/awesome-haskell</id>
    <link href="https://github.com/krispo/awesome-haskell" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of awesome Haskell links, frameworks, libraries and software. Inspired by awesome projects line.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome Haskell &lt;a href=&#34;https://github.com/sindresorhus/awesome&#34;&gt;&lt;img src=&#34;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&#34; alt=&#34;Awesome&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;An auxiliary list of awesome Haskell links, frameworks, libraries and software. The part of the &lt;a href=&#34;https://github.com/sindresorhus/awesome&#34;&gt;awesome&lt;/a&gt; projects line.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#awesome-haskell&#34;&gt;Awesome Haskell&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#basics&#34;&gt;&lt;em&gt;Basics&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#algorithmics&#34;&gt;Algorithmics&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#audio-music--sound&#34;&gt;Audio, Music &amp;amp; Sound&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#category-theory&#34;&gt;Category Theory&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#compilers&#34;&gt;Compilers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#concurrency--parallelism&#34;&gt;Concurrency &amp;amp; Parallelism&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#cryptography--hashing&#34;&gt;Cryptography &amp;amp; Hashing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#data-access&#34;&gt;Data Access&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#data-formats&#34;&gt;Data Formats&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#data-science&#34;&gt;Data Science&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#data-structures&#34;&gt;Data Structures&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#database&#34;&gt;Database&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#development-tools&#34;&gt;Development Tools&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#distributed-computing&#34;&gt;Distributed Computing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#editors&#34;&gt;Editors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#extensions&#34;&gt;Extensions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#games&#34;&gt;Games&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#gui&#34;&gt;GUI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#graphics&#34;&gt;Graphics&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#network&#34;&gt;Network&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#number-theory&#34;&gt;Number Theory&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#web--frameworks&#34;&gt;Web / Frameworks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#text-processing&#34;&gt;Text Processing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#messaging&#34;&gt;Messaging&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#languages&#34;&gt;Languages&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#operating-systems&#34;&gt;Operating Systems&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#platforms&#34;&gt;Platforms&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#programming&#34;&gt;Programming&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#science&#34;&gt;Science&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#streaming-processing&#34;&gt;Streaming Processing&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#resources&#34;&gt;Resources&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#websites&#34;&gt;Websites&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#bloggers&#34;&gt;Bloggers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#tutorials&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#courses&#34;&gt;Courses&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#conferences&#34;&gt;Conferences&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#packages&#34;&gt;Packages&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/krispo/awesome-haskell/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;em&gt;Basics&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.haskell.org/alex/&#34;&gt;Alex&lt;/a&gt; - a lexical analyser generator for Haskell.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.haskell.org/cabal/&#34;&gt;Cabal&lt;/a&gt; - a system for building and packaging Haskell libraries and programs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.haskell.org/ghc/&#34;&gt;GHC&lt;/a&gt; - the state-of-the-art optimizing native code compiler for Haskell.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ghci.html&#34;&gt;GHCi&lt;/a&gt; - a bytecode interpreter and interactive REPL environment for Haskell.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/&#34;&gt;Hackage&lt;/a&gt; - the Haskell community&#39;s central package archive.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.haskell.org/haddock/&#34;&gt;Haddock&lt;/a&gt; - a tool for automatically generating documentation from annotated Haskell source code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.haskell.org/happy/&#34;&gt;Happy&lt;/a&gt; - The Parser Generator for Haskell.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hayoo.fh-wedel.de/&#34;&gt;Hayoo&lt;/a&gt; - will search all packages from Hackage, including all function and type definitions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.haskell.org/hoogle/&#34;&gt;Hoogle&lt;/a&gt; - a Haskell API search engine, which allows you to search many standard Haskell libraries by either function name, or by approximate type signature.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Paczesiowa/hsenv/&#34;&gt;hsenv&lt;/a&gt; - a tool to create isolated Haskell environments. This allows a project to use a GHC version different of the currently installed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/commercialhaskell/stack&#34;&gt;Stack&lt;/a&gt; - a cross-platform tool to help on building Haskell projects. It includes support to create isolated Haskell environments and to automatically manage the dependencies of a project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fpco/stackage&#34;&gt;Stackage&lt;/a&gt; - &#34;Stable Hackage,&#34; tools for creating a vetted set of packages from Hackage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.haskell.org/platform/contents.html&#34;&gt;The Haskell Platform&lt;/a&gt; - a comprehensive, robust development environment for programming in Haskell.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Algorithmics&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Theorem_provers&#34;&gt;Theorem Provers&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Algorithm&#34;&gt;Algorithm&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Algorithm%20Visualization&#34;&gt;Algorithm Visualization&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Algorithms&#34;&gt;Algorithms&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Compression&#34;&gt;Compression&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Formal%20Languages&#34;&gt;Formal Languages&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Formal%20Methods&#34;&gt;Formal Methods&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Logic&#34;&gt;Logic&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Logic%20Programming&#34;&gt;Logic Programming&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:MapReduce&#34;&gt;Map Reduce&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Graphs&#34;&gt;Graphs&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Optimization&#34;&gt;Optimization&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Simulation&#34;&gt;Simulation&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:SMT&#34;&gt;SMT&lt;/a&gt; - a collaborative Hackage list for Satisfiability Modulo Theories (SMT).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Symbolic%20Computation&#34;&gt;Symbolic Computation&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Theorem%20Provers&#34;&gt;Theorem Provers&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Audio, Music &amp;amp; Sound&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Music_and_sound&#34;&gt;Audio, music and sound&lt;/a&gt; - official Website Resources.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Audio&#34;&gt;Audio&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Codec&#34;&gt;Codec&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Graphics&#34;&gt;Graphics&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Media&#34;&gt;Media&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Music&#34;&gt;Music&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Sound&#34;&gt;Sound&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Category Theory&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Adjunctions&#34;&gt;Adjunctions&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Algebra&#34;&gt;Algebra&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Categories&#34;&gt;Categories&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Combinators&#34;&gt;Combinators&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Comonads&#34;&gt;Comonads&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Composition&#34;&gt;Composition&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Computer%20Algebra&#34;&gt;Computer Algebra&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Constraints&#34;&gt;Constraints&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Functors&#34;&gt;Functors&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Monad&#34;&gt;Monad&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Monads&#34;&gt;Monads&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Semigroups&#34;&gt;Semigroups&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compilers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Compilers_and_interpreters&#34;&gt;Compilers &amp;amp; Interpreters&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Compiler_tools&#34;&gt;Compiler construction, lexing, parsing, pretty printing&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Compiler&#34;&gt;Compiler&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Compiler%20Plugin&#34;&gt;Compiler Plugin&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Compilers/Interpreters&#34;&gt;Compilers/Interpreters&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Concurrency &amp;amp; Parallelism&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Concurrency_and_parallelism&#34;&gt;Concurrency &amp;amp; Parallelism&lt;/a&gt; - Official Website Info.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Concurrency&#34;&gt;Concurrency&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Concurrent&#34;&gt;Concurrent&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:FRP&#34;&gt;Functional Reactive Programming&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Parallelism&#34;&gt;Parallelism&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://chimera.labs.oreilly.com/books/1230000000929/index.html&#34;&gt;Concurrency &amp;amp; Parallelism&lt;/a&gt; - (Book) Parallel and Concurrent Programming in Haskell&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/package/deiko-config&#34;&gt;Deiko-config&lt;/a&gt; - small typesafe library that uses &lt;a href=&#34;https://github.com/lightbend/config#features-of-hocon&#34;&gt;HOCON&lt;/a&gt; config format&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dhall-lang/dhall-haskell&#34;&gt;Dhall&lt;/a&gt; - A configuration language guaranteed to terminate&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/package/configurator&#34;&gt;Configurator&lt;/a&gt; - A configuration management library which supports automatic, dynamic reloading in response to modifications to configuration files.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cryptography &amp;amp; Hashing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Cryptography&#34;&gt;Cryptography &amp;amp; Hashing&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Crypto&#34;&gt;Crypto&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Cryptography&#34;&gt;Cryptography&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Data Access&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facebook/Haxl&#34;&gt;Haxl&lt;/a&gt; - a library for efficient, concurrent, concise data access.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Data Formats&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:JSON&#34;&gt;JSON&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:PDF&#34;&gt;PDF&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:XML&#34;&gt;XML&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:RSS&#34;&gt;RSS&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Data Science&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Linguistics&#34;&gt;Linguistics and natural language processing&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Robotics&#34;&gt;Robotics&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:AI&#34;&gt;Artificial Intelligence&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Argumentation&#34;&gt;Argumentations&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Classification&#34;&gt;Classification&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Clustering&#34;&gt;Clustering&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Data%20Mining&#34;&gt;Data Mining&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Datamining&#34;&gt;Datamining&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Image%20Processing&#34;&gt;Image Processing&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Machine%20Learning&#34;&gt;Machine Learning&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Machine%20Vision&#34;&gt;Machine Vision&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Natural%20Language%20Processing&#34;&gt;Natural Language Processing&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Pattern%20Classification&#34;&gt;Pattern Classification&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Pattern%20Recognition&#34;&gt;Pattern Recognition&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Search&#34;&gt;Search&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Statistics&#34;&gt;Statistics&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Text%20Recognition&#34;&gt;Text Recognition&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Robotics&#34;&gt;Robotics&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Additional libraries&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BayesWitnesses/m2cgen&#34;&gt;m2cgen&lt;/a&gt; - A CLI tool to transpile trained classic ML models into a native Haskell code with zero dependencies.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Data Structures&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Data_structures&#34;&gt;Data Structures &amp;amp; IO Libraries&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Structures&#34;&gt;Advanced Structures&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Bit%20Vectors&#34;&gt;Bit Vectors&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Containers&#34;&gt;Containers&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Data%20Structures&#34;&gt;Data Structures&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Enumerator&#34;&gt;Enumerator&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Generics&#34;&gt;Generics&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:List&#34;&gt;List&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Tree&#34;&gt;Tree&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Vector&#34;&gt;Vector&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Database&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Database_interfaces&#34;&gt;Database Interfaces&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Database&#34;&gt;Database&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development Tools&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Development_Libraries_and_Tools&#34;&gt;Development Libraries and Tools&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Debug&#34;&gt;Debug&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:IDE&#34;&gt;IDE&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Test&#34;&gt;Test&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Testing&#34;&gt;Testing&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Logging&#34;&gt;Logging&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:CLI%20Tool&#34;&gt;CLI Tool&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Monitoring&#34;&gt;Monitoring&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Distributed Computing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Distributed%20Computing&#34;&gt;Distributed Computing&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://haskell-distributed.github.io/&#34;&gt;Cloud Haskell&lt;/a&gt; - concurrent and distributed programming in Haskell.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Documentation&#34;&gt;Documentation&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Editors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Editors&#34;&gt;Editors written in Haskell&lt;/a&gt; - Official Website Resources.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.haskell.org/Editors&#34;&gt;editors for Haskell&lt;/a&gt; - Official Website Resources.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Extended_Haskell&#34;&gt;Extended Haskell&lt;/a&gt; - Official Website Resources.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Games&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Games&#34;&gt;Games&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Game&#34;&gt;Game&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Game%20Engine&#34;&gt;Game Engine&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;GUI&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/GUI_libraries&#34;&gt;Graphical User Interface (GUI) Libraries&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:GUI&#34;&gt;GUI&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:User%20Interfaces&#34;&gt;User Interfaces&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Graphics&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Graphics&#34;&gt;Graphics&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Graphics&#34;&gt;Graphics&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Network&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Network&#34;&gt;Network&lt;/a&gt; - Official Website Resources&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Network&#34;&gt;Network&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Number Theory&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Number%20Theory&#34;&gt;Number Theory&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Numeric&#34;&gt;Numeric&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Numerical&#34;&gt;Numerical&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Math&#34;&gt;Math&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Web / Frameworks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Web/Servers&#34;&gt;Web Servers&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Web/Frameworks&#34;&gt;Web Frameworks&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Web/Cloud&#34;&gt;Cloud&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Web/Deploy&#34;&gt;Deploy&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Web/Libraries&#34;&gt;Libraries&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;&#34;&gt;Interfaces to Frameworks&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Web/Databases_and_Persistence&#34;&gt;Database and Persistence&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Web/Testing_and_Verification&#34;&gt;Testing and Verification&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Web/Content_Management&#34;&gt;CMS&lt;/a&gt; - Official Website Resources for Content Management Systems (CMS).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h2&gt;&lt;a href=&#34;https://ihp.digitallyinduced.com/&#34;&gt;IHP: Integrated Haskell Platform&lt;/a&gt; - The best way to get started with haskell web dev.&lt;/h2&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Web&#34;&gt;Web&lt;/a&gt; - a collaborative Hackage list of frameworks, libraries, ...&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Additional libraries&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/haskell/HTTP&#34;&gt;HTTP&lt;/a&gt; - Haskell HTTP package. Supports client-side web programming in Haskell.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/freizl/hoauth2&#34;&gt;hoauth2&lt;/a&gt; - a lightweight oauth2 haskell binding.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Text Processing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://pandoc.org/&#34;&gt;Pandoc&lt;/a&gt; - is a library for converting from one markup format to another, and a command-line tool that uses this library.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Messaging&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/simplex-chat/simplex-chat&#34;&gt;SimpleX Chat&lt;/a&gt; - the first chat platform that is 100% private by design - it has no access to your connection graph!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stomp.github.io/&#34;&gt;Stomp&lt;/a&gt; - is the Simple (or Streaming) Text Orientated Messaging Protocol. &lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Stomp&#34;&gt;Resources&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hreinhardt/amqp&#34;&gt;amqp&lt;/a&gt; - client library for AMQP servers (currently only RabbitMQ).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:IRC&#34;&gt;IRC&lt;/a&gt; - a collaborative Hackage list for Internet Relay Chat (IRC).&lt;/li&gt; &#xA; &lt;li&gt;[IRC Client](&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:IRC&#34;&gt;http://hackage.haskell.org/packages/#cat:IRC&lt;/a&gt; Client) - a collaborative Hackage list.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Languages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Interfacing_other_languages&#34;&gt;Tools for interfacing with other languages&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Code%20Generation&#34;&gt;Code Generation&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:FFI&#34;&gt;FFI&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:FFI%20Tools&#34;&gt;FFI Tools&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:HTML&#34;&gt;HTML&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Java&#34;&gt;Java&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Javascript&#34;&gt;Javascript&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:LaTeX&#34;&gt;LaTex&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:LUA&#34;&gt;Lua&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Additional languages on top of Haskell&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://fay-lang.org/&#34;&gt;Fay&lt;/a&gt; - a proper subset of Haskell that compiles to JavaScript.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/idris-lang/Idris-dev&#34;&gt;Idris&lt;/a&gt; - A Dependently Typed Functional Programming Language&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://leepike.github.io/Copilot/&#34;&gt;Copilot&lt;/a&gt; - a (Haskell DSL) stream language for generating hard real-time C code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Operating Systems&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Operating_system&#34;&gt;Operating systems and systems programming&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:BSD&#34;&gt;BSD&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Fedora&#34;&gt;Fedora&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Gentoo&#34;&gt;Gentoo&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Linux&#34;&gt;Linux&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:System&#34;&gt;System&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Platforms&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:.NET&#34;&gt;.NET&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Apple&#34;&gt;Apple&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:JVM&#34;&gt;JVM&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Mobile&#34;&gt;Mobile&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Programming&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Generic_programming&#34;&gt;Generic Programming&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Aspect%20Oriented%20Programming&#34;&gt;Aspect Oriented Programming&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Generics&#34;&gt;Generic Programming&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Logic&#34;&gt;Logic Programming&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Reactivity&#34;&gt;Reactive Programming&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Visual%20Programming&#34;&gt;Visual Programming&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Science&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Bioinformatics&#34;&gt;Bioinformatics&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries/Mathematics&#34;&gt;Mathematics &amp;amp; Physics&lt;/a&gt; - Official Website Resources.&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Chemistry&#34;&gt;Chemistry&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Bioinformatics&#34;&gt;Bioinformatics&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Finance&#34;&gt;Finance&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Physics&#34;&gt;Physics&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Science&#34;&gt;Science&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Scientific%20Simulation&#34;&gt;Scientific Simulation&lt;/a&gt; - a collaborative Hackage list.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Streaming Processing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/snoyberg/conduit&#34;&gt;Conduit&lt;/a&gt; - a streaming data library. &lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Conduit&#34;&gt;Resources&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/packages/#cat:IO-Streams&#34;&gt;IO-Streams&lt;/a&gt; - a collaborative Hackage list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Gabriel439/Haskell-Pipes-Library&#34;&gt;Pipes&lt;/a&gt; - is a clean and powerful stream processing library that lets you build and connect reusable streaming components. &lt;a href=&#34;http://hackage.haskell.org/packages/#cat:Pipes&#34;&gt;Resources&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hstreamdb/hstream&#34;&gt;HStreamDB&lt;/a&gt; - The streaming database built for IoT data storage and real-time processing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Resources&lt;/h1&gt; &#xA;&lt;h2&gt;Websites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.haskell.org/&#34;&gt;Haskell&lt;/a&gt; - Official Website.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.haskell.org/Haskell&#34;&gt;The Haskell Programming Language&lt;/a&gt; - Haskell wiki.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://tryhaskell.org/&#34;&gt;Try Haskell&lt;/a&gt; - Haskell Online.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.schoolofhaskell.com/&#34;&gt;School of Haskell&lt;/a&gt; - Learning Haskell.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Bloggers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://neilmitchell.blogspot.com/&#34;&gt;Neil Mitchell&lt;/a&gt; - Neil Mitchell&#39;s Haskell Blog.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.haskell.org/community&#34;&gt;Community&lt;/a&gt; - Official community resources.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/haskell/&#34;&gt;Reddit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/tagged?tagnames=haskell&#34;&gt;Stackoverflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://plus.google.com/communities/104818126031270146189&#34;&gt;G+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.haskell.org/Mailing_lists&#34;&gt;Mailing lists&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.haskell.org/IRC_channel&#34;&gt;IRC channels&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.haskell.org/User_groups&#34;&gt;Local user groups&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://planet.haskell.org/&#34;&gt;Planet Haskell&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.haskell.org/Haskell_Communities_and_Activities_Report&#34;&gt;Haskell Communities and Activities Report&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.haskell.org/documentation&#34;&gt;Documentation&lt;/a&gt; - Official documentation resources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Learning_Haskell&#34;&gt;Learn Haskell&lt;/a&gt; - Wiki Learning Resources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/Books&#34;&gt;Books&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://wiki.haskell.org/Tutorials&#34;&gt;Tutorials&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bitemyapp/learnhaskell&#34;&gt;learnhaskell&lt;/a&gt; - Haskell Learning (also for non-English speakers).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://dev.stephendiehl.com/hask/&#34;&gt;What I Wish I Knew When Learning Haskell&lt;/a&gt; - amazing guide for all kinds of things.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://learnyouahaskell.com/chapters&#34;&gt;LearnYouHaskell&lt;/a&gt; - Learn You a Haskell for Great Good!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://happylearnhaskelltutorial.com/&#34;&gt;Happy Learn Haskell Tutorial&lt;/a&gt; - Pain-free, Gradual Haskell Tutorial with cartoon robots!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.haskell.org/onlinereport/&#34;&gt;Revised report&lt;/a&gt; - Haskell 98 Language and Libraries. The Revised Report.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.haskell.org/H-99:_Ninety-Nine_Haskell_Problems&#34;&gt;H-99&lt;/a&gt; - Ninety-Nine Haskell Problems.&lt;/p&gt; &lt;h3&gt;Web Tutorials&lt;/h3&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.shakthimaan.com/posts/2016/01/27/haskell-web-programming/news.html&#34;&gt;Introduction to Haskell - Web Programming&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://haskell-at-work.com/episodes/2018-04-09-your-first-web-application-with-spock.html&#34;&gt;Your First Web Application with Spock&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/scotty-web/scotty/wiki/Scotty-Tutorials-&amp;amp;-Examples&#34;&gt;Scotty-Tutorials-&amp;amp;-Examples&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.spock.li/tutorials/getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.yesodweb.com/book-1.6&#34;&gt;Developing Web Applications with Yesod and Haskell&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Video Tutorials&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.youtube.com/playlist?list=PLxj9UAX4Em-Ij4TKwKvo-SLp-Zbv-hB4B&#34;&gt;Redoing Make - Haskell from Scratch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.youtube.com/playlist?list=PLxj9UAX4Em-IBXkvcC3MycLlcxyoi7v8B&#34;&gt;Haskell - Code Deconstructed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.youtube.com/playlist?list=PL_xuff3BkASMOzBr0hKVKLuSnU4UIinKx&#34;&gt;Adventures in Haskell - A Calculator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.youtube.com/playlist?list=PLUQzXLQ6jvHL_k3QOMKXehVoZdk-sKtHd&#34;&gt;Sed implementation in Haskell&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.youtube.com/user/LazyCasts&#34;&gt;LazyCasts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=Li6oaO8x2VY&#34;&gt;Haskell Development Workflow Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=NBKnY7Z_w3I&amp;amp;list=PLPqPwGvHPSZB-urE6QFjKYt6AGXcZqJUh&#34;&gt;Learn You a Haskell&lt;/a&gt; - Video lectures to accompany the book &#34;Learn You a Haskell for Great Good!&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/andys8/awesome-haskell-videos&#34;&gt;Awesome Haskell Videos&lt;/a&gt; - Curated list of Haskell talks and tutorials&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ihpcasts.com/ShowEpisode?episodeId=ab384647-3665-4a36-b5e5-e05fea6c2288&#34;&gt;IHP Casts&lt;/a&gt; Learn to build type-safe web apps with Haskell and IHP&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Courses&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.edx.org/course/introduction-functional-programming-delftx-fp101x-0&#34;&gt;Introduction to Functional Programming&lt;/a&gt; - Fall 2014 MOOC on edX by DelftX featuring Haskell as the primary language of focus.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.futurelearn.com/courses/functional-programming-haskell/&#34;&gt;Functional Programming in Haskell&lt;/a&gt; - Introductory MOOC to functional programming in Haskell by the University of Glasgow.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://haskell.mooc.fi/&#34;&gt;Haskell MOOC&lt;/a&gt; - MOOC on functional programming that uses Haskell by University of Helsinki.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Conferences&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.icfpconference.org/&#34;&gt;ICFP&lt;/a&gt; - International Conference on Functional Programming. &lt;a href=&#34;https://www.youtube.com/channel/UCwRL68qZFfub1Ep1EScfmBw&#34;&gt;Youtube channel&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.haskell.org/Conferences&#34;&gt;Conferences&lt;/a&gt; - Official list of conferences&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLnqUlCo055hV5dPC-4VWeXzhI8ooeTsVy&#34;&gt;Haskell Symposium 2015&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLnqUlCo055hVfNkQHP7z43r10yNo-mc7B&#34;&gt;Haskell Implementors&#39; Workshop 2015&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.stackage.org/&#34;&gt;Stackage&lt;/a&gt; - is a stable source of Haskell packages, &#34;Stable Hackage&#34;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/&#34;&gt;Hackage&lt;/a&gt; - is the Haskell community&#39;s central package archive.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.haskell.org/Applications_and_libraries&#34;&gt;Application &amp;amp; Libraries&lt;/a&gt; - Official collections and Guide.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.haskell.org/hoogle/&#34;&gt;Hoogle&lt;/a&gt; - is a Haskell API search engine, which allows you to search many standard Haskell libraries by either function name, or by approximate type signature.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hayoo.fh-wedel.de/&#34;&gt;Hayoo&lt;/a&gt; - will search all packages from Hackage, including all function and type definitions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Best Practices&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kowainik.github.io/posts/2019-02-06-style-guide&#34;&gt;Haskell Style Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://creativecommons.org/publicdomain/zero/1.0/&#34;&gt;&lt;img src=&#34;http://i.creativecommons.org/p/zero/1.0/88x31.png&#34; alt=&#34;CC0&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>digital-asset/contingent-claims</title>
    <updated>2022-06-18T01:40:58Z</updated>
    <id>tag:github.com,2022-06-18:/digital-asset/contingent-claims</id>
    <link href="https://github.com/digital-asset/contingent-claims" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/digital-asset/daml/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/digital-asset/contingent-claims&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/digital-asset/contingent-claims.svg?style=shield&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright © 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All Rights Reserved. SPDX-License-Identifier: Apache-2.0&lt;/p&gt; &#xA;&lt;h1&gt;Contingent Claims&lt;/h1&gt; &#xA;&lt;p&gt;This is a library for modeling contingent claims, i.e. derivatives, written in the smart contract language &lt;a href=&#34;https://www.digitalasset.com/developers&#34;&gt;Daml&lt;/a&gt;. Briefly, a derivative is represented by a tree of &lt;code&gt;Claim&lt;/code&gt;s, which describe future cashflows between two parties as well as the conditions under which these cashflows occur.&lt;/p&gt; &#xA;&lt;p&gt;The library offers life-cycling capabilities, as well as a valuation semantics that maps a claim to a mathematical expression that can be used for no-arbitrage pricing.&lt;/p&gt; &#xA;&lt;p&gt;The implementation closely follows the model outlined in the papers &lt;a href=&#34;https://raw.githubusercontent.com/digital-asset/contingent-claims/master/#1&#34;&gt;[1]&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/digital-asset/contingent-claims/master/#2&#34;&gt;[2]&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get started, we recommend reading through the &lt;a href=&#34;https://raw.githubusercontent.com/digital-asset/contingent-claims/master/QUICKSTART.md&#34;&gt;quickstart&lt;/a&gt; document.&lt;/p&gt; &#xA;&lt;p&gt;Examples of how to create and lifecycle contracts can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/digital-asset/contingent-claims/master/test/daml/Test/FinancialContract.daml&#34;&gt;test directory&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to use this library&lt;/h2&gt; &#xA;&lt;p&gt;To use the library in your Daml project, it is sufficient to download the latest &lt;code&gt;*.dar&lt;/code&gt; file from the &lt;a href=&#34;https://github.com/digital-asset/contingent-claims/releases/&#34;&gt;releases page&lt;/a&gt; and add it as a dependency to your project.&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;Releases adhere to the &#39;semantic versioning&#39; specification. Breaking changes across major versions are documented in &lt;a href=&#34;https://raw.githubusercontent.com/digital-asset/contingent-claims/master/UPGRADING.md&#34;&gt;Upgrading.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building the code&lt;/h2&gt; &#xA;&lt;p&gt;In order to build the code from source, follow these instructions.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure the &lt;a href=&#34;https://docs.daml.com/getting-started/installation.html&#34;&gt;Daml SDK&lt;/a&gt; is installed on your machine&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fetch the &lt;code&gt;*.dar&lt;/code&gt; file for the latest version of the &lt;a href=&#34;https://github.com/digital-asset/daml-ctl/releases&#34;&gt;daml-ctl&lt;/a&gt; library and copy it to the &lt;code&gt;lib/&lt;/code&gt; folder in the repository&#39;s root&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can then build a release version (no tests in the &lt;code&gt;*.dar&lt;/code&gt;) by running &lt;code&gt;daml build&lt;/code&gt; in the root directory, or a dev version that includes tests from the &lt;code&gt;test&lt;/code&gt; directory.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We also provide an unsupported &lt;code&gt;Makefile&lt;/code&gt; with targets for said tasks.&lt;/p&gt; &#xA;&lt;h3&gt;Running the tests&lt;/h3&gt; &#xA;&lt;p&gt;Navigate to the &lt;code&gt;test&lt;/code&gt; directory and run &lt;code&gt;daml test&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;API documentation&lt;/h3&gt; &#xA;&lt;p&gt;API documentation for the latest release is available online &lt;a href=&#34;https://digital-asset.github.io/contingent-claims/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also build this locally using the SDK command &lt;code&gt;daml damlc docs&lt;/code&gt; from the root directory. There is also an unsupported &lt;code&gt;make doc&lt;/code&gt; target.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution Policy&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to contribute to this project, please contact us first via Github. In future, we do plan to accept external contributions, contingent on the Digital Asset CLA.&lt;/p&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a id=&#34;1&#34;&gt;[1]&lt;/a&gt; Jones, S. Peyton, Jean-Marc Eber, and Julian Seward. &#34;Composing contracts: an adventure in financial engineering.&#34; ACM SIG-PLAN Notices 35.9 (2000): 280-292.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a id=&#34;2&#34;&gt;[2]&lt;/a&gt; Jones, SL Peyton, and J. M. Eber. &#34;How to write a financial contract&#34;, volume &#34;Fun Of Programming&#34; of &#34;Cornerstones of Computing.&#34; (2005).&lt;/p&gt; &#xA;&lt;p&gt;The papers can be downloaded from &lt;a href=&#34;https://www.microsoft.com/en-us/research/publication/composing-contracts-an-adventure-in-financial-engineering/&#34;&gt;Microsoft Research&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>input-output-hk/cardano-addresses</title>
    <updated>2022-06-18T01:40:58Z</updated>
    <id>tag:github.com,2022-06-18:/input-output-hk/cardano-addresses</id>
    <link href="https://github.com/input-output-hk/cardano-addresses" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Addresses and mnemonic manipulation &amp; derivations&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;big&gt;&lt;strong&gt;Cardano Addresses&lt;/strong&gt;&lt;/big&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/input-output-hk/cardano-addresses/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/input-output-hk/cardano-addresses?color=%239b59b6&amp;amp;label=RELEASE&amp;amp;sort=semver&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/cardano-addresses&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/cardano-addresses?color=%239b59b6&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/input-output-hk/cardano-addresses/actions?query=workflow%3A&amp;quot;Continuous Integration (Linux)&amp;quot;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/input-output-hk/cardano-addresses/Continuous%20Integration%20(Linux)?style=for-the-badge&amp;amp;label=BUILD%20(Linux)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/input-output-hk/cardano-addresses/actions?query=workflow%3A&amp;quot;Continuous Integration (Windows)&amp;quot;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/input-output-hk/cardano-addresses/Continuous%20Integration%20(Windows)?style=for-the-badge&amp;amp;label=BUILD%20(Windows)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/input-output-hk/cardano-addresses/actions?query=workflow%3A&amp;quot;TypeScript NPM Package&amp;quot;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/input-output-hk/cardano-addresses/TypeScript%20NPM%20Package?style=for-the-badge&amp;amp;label=BUILD%20(TypeScript)&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://input-output-hk.github.io/cardano-addresses/coverage/hpc_index.html&#34;&gt;&lt;img src=&#34;https://input-output-hk.github.io/cardano-addresses/coverage/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This module provides mnemonic (backup phrase) creation, and conversion of a mnemonic to seed for wallet restoration, and address derivation functionalities.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/input-output-hk/cardano-addresses/master/.github/example.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;API documentation is available &lt;a href=&#34;https://input-output-hk.github.io/cardano-addresses/haddock&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Command-Line&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;cardano-address&lt;/code&gt; comes with a command-line interface for Linux. See the &lt;a href=&#34;https://github.com/input-output-hk/cardano-addresses/releases&#34;&gt;release artifacts&lt;/a&gt; or &lt;a href=&#34;https://github.com/input-output-hk/cardano-addresses/actions?query=workflow%3A%22Continuous+Integration%22&#34;&gt;continuous integration artifacts&lt;/a&gt; to get a pre-compiled binary, or &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/cardano-addresses/master/#docker-image&#34;&gt;build a Docker image&lt;/a&gt;. The command-line is self explanatory by using &lt;code&gt;--help&lt;/code&gt; on various commands and sub-commands.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;💡&lt;/span&gt; Most commands read argument from the standard input. This prevent sensitive information from appearing into your shell history and, makes it easy to pipe commands!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a recovery phrase (&lt;strong&gt;phrase.prv&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address recovery-phrase generate --size 15 &amp;gt; phrase.prv&#xA;exercise club noble adult miracle awkward problem olympic puppy private goddess piano fatal fashion vacuum&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a root private key (&lt;strong&gt;root.xsk&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key from-recovery-phrase Shelley &amp;lt; phrase.prv &amp;gt; root.xsk&#xA;root_xsk1hqzfzrgskgnpwskxxrv5khs7ess82ecy8za9l5ef7e0afd2849p3zryje8chk39nxtva0sww5me3pzkej4rvd5cae3q3v8eu7556n6pdrp4fdu8nsglynpmcppxxvfdyzdz5gfq3fefjepxhvqspmuyvmvqg8983&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; Notice the &lt;code&gt;root_xsk&lt;/code&gt; prefix to identify a root extended signing (private) key.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a wallet id based on extended root or account keys (&lt;strong&gt;phrase.prv&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cat root.xsk&#xA;root_xsk1hqzfzrgskgnpwskxxrv5khs7ess82ecy8za9l5ef7e0afd2849p3zryje8chk39nxtva0sww5me3pzkej4rvd5cae3q3v8eu7556n6pdrp4fdu8nsglynpmcppxxvfdyzdz5gfq3fefjepxhvqspmuyvmvqg8983&#xA;$ cardano-address key walletid &amp;lt; root.xsk&#xA;163ea20ad0611e4815a61c44bb32c82a81538999&#xA;&#xA;$ cardano-address key public --with-chain-code &amp;lt; root.xsk | cardano-address key walletid&#xA;163ea20ad0611e4815a61c44bb32c82a81538999&#xA;&#xA;$ cardano-address key child 1852H/1815H/0H &amp;lt; root.xsk &amp;gt; acct.xsk&#xA;$ cat acct.xsk&#xA;acct_xsk15ztha8ws7qjze5vmdkwqh0ddzvtlgstkg79swazhc5lxns2849plr3msjx082mcmd9hc24ujczk2cjnjwrcz4tjaucw9jqf8h5yc7d84rac0zdckkuhazpam0kleg4sq52ph3e0wn98a64hr8g5cpmh9zqpwtrhy&#xA;$ cardano-address key walletid &amp;lt; acct.xsk&#xA;15fd6c2130b0758ec7995bf9771d2a6602417c39&#xA;$ cardano-address key public --with-chain-code &amp;lt; acct.xsk | cardano-address key walletid&#xA;15fd6c2130b0758ec7995bf9771d2a6602417c39&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a wallet id based on account keys of shared wallet (&lt;strong&gt;phrase.prv&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key from-recovery-phrase Shared &amp;lt; phrase.prv &amp;gt; root.shared_xsk&#xA;root_shared_xsk1hqzfzrgskgnpwskxxrv5khs7ess82ecy8za9l5ef7e0afd2849p3zryje8chk39nxtva0sww5me3pzkej4rvd5cae3q3v8eu7556n6pdrp4fdu8nsglynpmcppxxvfdyzdz5gfq3fefjepxhvqspmuyvmvzteqlc&#xA;&#xA;$ cardano-address key child 1854H/1815H/0H &amp;lt; root.shared_xsk &amp;gt; acct.shared_xsk&#xA;acct_shared_xsk14zh0kh0geaz9qpxv6q0n5upq8ux4n97u2gyl69mnhan74w6849pa3hj2p40xg0nugw8tzqu5eynzjunay6tffru9wdjank0phsfuc7vngjsmtktel05g6mx555tw8nxr8rpn2gac6km5plu9mwqsz54rfyhwd7pd&#xA;&#xA;$ cardano-address key walletid &amp;lt; acct.shared_xsk&#xA;user error (shared wallet needs to have at least spending script specified)&#xA;&#xA;$ cardano-address key walletid --spending &#34;cosigner#0&#34; &amp;lt; acct.shared_xsk&#xA;185d3582fc4892c4528614210b13e9a775dd7d02&#xA;&#xA;$ cardano-address key public --with-chain-code &amp;lt; acct.shared_xsk | cardano-address key walletid --spending &#34;cosigner#0&#34;&#xA;185d3582fc4892c4528614210b13e9a775dd7d02&#xA;&#xA;$ cardano-address key walletid --spending &#34;all [cosigner#0, active_until 1000]&#34; &amp;lt; acct.shared_xsk&#xA;42ecb214586dcbcb593688fb081784fa0aebb2c0&#xA;&#xA;$ cardano-address key walletid --spending &#34;all [cosigner#0, active_until 1000]&#34; --staking &#34;cosigner#1&#34; &amp;lt; acct.shared_xsk&#xA;12dc98557a4c5aa00575c5d1f0dbfa3837261e32&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a private policy key (&lt;strong&gt;policy.xsk&lt;/strong&gt;), a public policy key (&lt;strong&gt;policy.vk&lt;/strong&gt;) and its hash (&lt;strong&gt;policy.vkh&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key child 1855H/1815H/0H &amp;lt; root.xsk &amp;gt; policy.xsk&#xA;policy_xsk1hr47zvxgzeeutgq50r965ygwxys86cwp8wdjqftlhan8mw6849pus6vc50dznjs5vkyjcz9usl6964u6nha88slrh8hyex74xnlfehcrkp80cp8wgzkqh22dzy7c48ekhhvvf2zz8hqakjwgfzgrjq5lx538et75&#xA;&#xA;$ cardano-address key child 1855H/1815H/0H &amp;lt; root.xsk | cardano-address key public --with-chain-code &amp;gt; policy.xvk&#xA;policy_xvk1e9ngmlhcwhszwyuxwc7anwk6tvzwndldz7j262rvfpd049tq74mq8vzwlszwus9vpw556yfa320nd0wccj5yy0wpmdyusjys8ypf7dgaauf0m&#xA;&#xA;$ cardano-address key child 1855H/1815H/0H &amp;lt; root.xsk | cardano-address key public --without-chain-code &amp;gt; policy.vk&#xA;policy_vk1e9ngmlhcwhszwyuxwc7anwk6tvzwndldz7j262rvfpd049tq74mq0ylkrs&#xA;&#xA;$ cardano-address key hash &amp;lt; policy.xvk&#xA;policy_vkh1qpc9xly4lc7yt98gcf59kdcqcss6dda4u9g72e775yxpxeypamc&#xA;$ cardano-address key hash &amp;lt; policy.vk&#xA;policy_vkh1qpc9xly4lc7yt98gcf59kdcqcss6dda4u9g72e775yxpxeypamc&#xA;$ cardano-address key hash --hex &amp;lt; policy.vk&#xA;0070537c95fe3c4594e8c2685b3700c421a6b7b5e151e567dea10c13&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; The last segment in the path is the key index and can be incremented up to &lt;code&gt;2^31-1&lt;/code&gt; to derive more keys.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a payment verification key (&lt;strong&gt;addr.xvk&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key child 1852H/1815H/0H/0/0 &amp;lt; root.xsk | cardano-address key public --with-chain-code &amp;gt; addr.xvk&#xA;addr_xvk1grvg8qzmkmw2n0dm4pd0h3j4dv6yglyammyp733eyj629dc3z28v6wk22nfmru6xz0vl2s3y5xndyd57fu70hrt84c6zkvlwx6fdl7ct9j7yc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; The last segment in the path is the key index and can be incremented up to &lt;code&gt;2^31-1&lt;/code&gt; to derive more keys.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a stake verification key (&lt;strong&gt;stake.xvk&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key child 1852H/1815H/0H/2/0 &amp;lt; root.xsk | cardano-address key public --with-chain-code &amp;gt; stake.xvk&#xA;stake_xvk1658atzttunamzn80204khrg0qfdk5nvmrutlmmpg7xlsyaggwa7h9z4smmeqsvs67qhyqmc2lqa0vy36rf2la74ym8a5p93zp4qtpuq6ky3ve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; The last segment in the path is the key index and can be incremented up to &lt;code&gt;2^31-1&lt;/code&gt; to derive more keys.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a hash for payment verification key (&lt;strong&gt;addr.xvk&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key child 1852H/1815H/0H/0/0 &amp;lt; root.xsk | cardano-address key public --with-chain-code &amp;gt; addr.xvk&#xA;addr_xvk1grvg8qzmkmw2n0dm4pd0h3j4dv6yglyammyp733eyj629dc3z28v6wk22nfmru6xz0vl2s3y5xndyd57fu70hrt84c6zkvlwx6fdl7ct9j7yc&#xA;$ cardano-address key hash &amp;lt; addr.xvk&#xA;addr_vkh12j28hnmtwcp3n08vy58vyf0arnnrhtavu3lrfdztw0j0jng3d6v&#xA;$ cardano-address key hash --hex &amp;lt; addr.xvk&#xA;54947bcf6b760319bcec250ec225fd1ce63baface47e34b44b73e4f9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; The hashing is available for both stake and payment verification keys. Additional flag &#39;--hex&#39; can be used.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a payment address from a payment key (&lt;strong&gt;payment.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address address payment --network-tag testnet &amp;lt; addr.xvk &amp;gt; payment.addr&#xA;addr_test1vp2fg770ddmqxxduasjsas39l5wwvwa04nj8ud95fde7f7guscp6v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a delegated payment address from a stake key (&lt;strong&gt;payment-delegated.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address address delegation $(cat stake.xvk) &amp;lt; payment.addr &amp;gt; payment-delegated.addr&#xA;addr_test1qp2fg770ddmqxxduasjsas39l5wwvwa04nj8ud95fde7f70k6tew7wrnx0s4465nx05ajz890g44z0kx6a3gsnms4c4qq8ve0n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a stake address from a stake key (&lt;strong&gt;stake.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address address stake --network-tag testnet &amp;lt; stake.xvk &amp;gt; stake.addr&#xA;stake_test1urmd9uh08pen8c26a2fn86weprjh52638mrdwc5gfac2u2s25zpat%&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to inspect address&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ echo addr_test1vp2fg770ddmqxxduasjsas39l5wwvwa04nj8ud95fde7f7guscp6v | cardano-address address inspect&#xA;{&#xA;    &#34;stake_reference&#34;: &#34;none&#34;,&#xA;    &#34;spending_key_hash_bech32&#34;: &#34;addr_vkh12j28hnmtwcp3n08vy58vyf0arnnrhtavu3lrfdztw0j0jng3d6v&#34;,&#xA;    &#34;address_style&#34;: &#34;Shelley&#34;,&#xA;    &#34;spending_key_hash&#34;: &#34;54947bcf6b760319bcec250ec225fd1ce63baface47e34b44b73e4f9&#34;,&#xA;    &#34;network_tag&#34;: 0,&#xA;    &#34;address_type&#34;: 6&#xA;}&#xA;&#xA;$ echo addr_test1qp2fg770ddmqxxduasjsas39l5wwvwa04nj8ud95fde7f70k6tew7wrnx0s4465nx05ajz890g44z0kx6a3gsnms4c4qq8ve0n | cardano-address address inspect&#xA;{&#xA;    &#34;stake_reference&#34;: &#34;by value&#34;,&#xA;    &#34;stake_key_hash_bech32&#34;: &#34;stake_vkh17mf09mecwve7zkh2jve7nkggu4azk5f7cmtk9zz0wzhz5efq2w6&#34;,&#xA;    &#34;stake_key_hash&#34;: &#34;f6d2f2ef387333e15aea9333e9d908e57a2b513ec6d762884f70ae2a&#34;,&#xA;    &#34;spending_key_hash_bech32&#34;: &#34;addr_vkh12j28hnmtwcp3n08vy58vyf0arnnrhtavu3lrfdztw0j0jng3d6v&#34;,&#xA;    &#34;address_style&#34;: &#34;Shelley&#34;,&#xA;    &#34;spending_key_hash&#34;: &#34;54947bcf6b760319bcec250ec225fd1ce63baface47e34b44b73e4f9&#34;,&#xA;    &#34;network_tag&#34;: 0,&#xA;    &#34;address_type&#34;: 0&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Details about possible address types are following (refer also to &lt;a href=&#34;https://github.com/input-output-hk/cardano-ledger/raw/master/eras/alonzo/test-suite/cddl-files/alonzo.cddl&#34;&gt;cddl&lt;/a&gt; )&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;address_type&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;binary prefix&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Meaning&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;0&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;0000&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;base address: keyhash28,keyhash28&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;1&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;0001&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;base address: scripthash28,keyhash28&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;2&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;0010&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;base address: keyhash28,scripthash28&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;3&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;0011&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;base address: scripthash28,scripthash28&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;4&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;0100&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pointer address: keyhash28, 3 variable length uint&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;5&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;0101&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;pointer address: scripthash28, 3 variable length uint&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;6&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;0110&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;enterprise address: keyhash28&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;7&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;0111&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;enterprise address: scripthash28&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;8&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;1000&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;byron/icarus&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;14&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;1110&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;reward account: keyhash28&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;15&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;1111&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;reward account: scripthash28&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a payment verification key for shared wallet (&lt;strong&gt;addr_shared.vk&lt;/strong&gt;, &lt;strong&gt;stake_shared.vk&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;p&gt;Let&#39;s generate extended root private key for shared style:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key from-recovery-phrase Shared &amp;lt; phrase.prv &amp;gt; root_shared.xsk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Now generate payment verification key (&lt;code&gt;role=0&lt;/code&gt; is used). Please note that purpose &lt;code&gt;1854H&lt;/code&gt; is used for multisig.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key child 1854H/1815H/0H/0/0 &amp;lt; root_shared.xsk | cardano-address key public --without-chain-code &amp;gt; addr_shared.vk&#xA;addr_shared_vk1a9h46rvjnqquxz02zyesh0ct29szh7vv9x7r2h87ttmnkgrfgguqhz0mtc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Generating delegation verification key is the similar (the only difference is role=2)&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address key child 1854H/1815H/0H/2/0 &amp;lt; root_shared.xsk | cardano-address key public --without-chain-code &amp;gt; stake_shared.vk&#xA;stake_shared_vk18a8z5dcrlwene88n84j6dm9yvj5rt296fjtresqnunmacetdcymquyq43z&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; The last segment in the path is the key index, which can be incremented to derive more keys. Up &lt;code&gt;2^31-1&lt;/code&gt; keys are possible.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to construct a multisig script hash (&lt;strong&gt;script.hash&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;p&gt;We consider &lt;code&gt;addr_shared.1.vk&lt;/code&gt; and &lt;code&gt;addr_shared.2.vk&lt;/code&gt; obtained like &lt;code&gt;addr_shared.vk&lt;/code&gt; but by replacing the final index by &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt; respectively.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address script hash &#34;all [$(cat addr_shared.1.vk), $(cat addr_shared.2.vk)]&#34; &amp;gt; script.hash&#xA;script1gr69m385thgvkrtspk73zmkwk537wxyxuevs2u9cukglvtlkz4k&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This script requires the signature from both signing keys corresponding to &lt;code&gt;shared_addr.1.vk&lt;/code&gt; and &lt;code&gt;shared_addr.2.vk&lt;/code&gt; (ie., shared_addr.1.sk and shared_addr.2.sk) in order to be valid. Similarly, we could require only one of the two signatures:&lt;/p&gt; &#xA; &lt;p&gt;We can also use extended verification, eiher payment or delegation, keys. They can be obtained as the non-extended ones by using &lt;code&gt;--with-chain-code&lt;/code&gt; option rather than &lt;code&gt;--without-chain-option&lt;/code&gt; as above. They will give rise to the same script hash as for verification keys chain code is stripped upon calculation.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address script hash &#34;any [$(cat addr_shared.1.xvk), $(cat addr_shared.2.xvk)]&#34;&#xA;script1gr69m385thgvkrtspk73zmkwk537wxyxuevs2u9cukglvtlkz4k&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;which is equivalent (functionally, but not in terms of hash value) to :&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address script hash &#34;at_least 1 [$(cat addr_shared.1.xvk), $(cat addr_shared.2.xvk)]&#34;&#xA;script13uf3fz3ts5srpjc5zcfe977uvnyvp36wcvxuudryegz0zpjlx6a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to construct a multisig script hash with timelocks&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$  cardano-address script hash &#34;all [$(cat addr_shared.1.xvk), $(cat addr_shared.2.xvk), active_from 100, active_until 120]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to validate a script&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$  cardano-address script validate &#34;at_least 1 [$(cat addr_shared.1.xvk), $(cat addr_shared.2.xvk), $(cat addr_shared.2.xvk)]&#34;&#xA;Validated.&#xA;&#xA;$  cardano-address script validate --recommended  &#34;at_least 1 [$(cat addr_shared.1.xvk), $(cat addr_shared.2.xvk), $(cat addr_shared.2.xvk)]&#34;&#xA;Not validated: The list inside a script has duplicate keys (which is not recommended)..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to get preimage for a script&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address script preimage &#34;all [addr_shared_vkh1zxt0uvrza94h3hv4jpv0ttddgnwkvdgeyq8jf9w30mcs6y8w3nq, addr_shared_vkh1y3zl4nqgm96ankt96dsdhc86vd5geny0wr7hu8cpzdfcqskq2cp]&#34;&#xA;008201828200581c1196fe3062e96b78dd959058f5adad44dd663519200f2495d17ef10d8200581c2445facc08d975d9d965d360dbe0fa63688ccc8f70fd7e1f01135380&#xA;&#xA;$  cardano-address script preimage &#34;all [addr_shared_vkh1zxt0uvrza94h3hv4jpv0ttddgnwkvdgeyq8jf9w30mcs6y8w3nq, active_from 100, active_until 150]&#34;&#xA;008201838200581c1196fe3062e96b78dd959058f5adad44dd663519200f2495d17ef10d8204186482051896&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a payment script address from a script hash (&lt;strong&gt;script.addr&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cardano-address address payment --network-tag testnet &amp;lt; script.hash &amp;gt; script.addr&#xA;addr_test1wqqggtajwkxjgf58v452jz6jl87lt32w3mhez5hd7xz6hugp80tta&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Correspondence between keys in cardano-addresses and cardano-cli (&lt;strong&gt;key.xsk key.xvk key.vk key.hash&lt;/strong&gt;)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;Let&#39;s assume we have mnemonic&#xA;$ cat recovery-phrase.prv&#xA;nothing heart matrix fly sleep slogan tomato pulse what roof rail since plastic false enlist&#xA;&#xA;Construct root extended private key&#xA;$ cardano-address key from-recovery-phrase Shelley &amp;lt; recovery-phrase.prv &amp;gt; root.xprv&#xA;root_xsk1apjwjs3ksgm5mnnk0cc5v5emgv0hmafmmy8tffay5s2ffk69830whwznr46672ruucdzwwtv9upv72e4ylrypyz5m6cyh0p00t7n3u3agt20lv32j4kxcqlkzu78nzjx0ysxxlc2ghfz9prxfmrds802xsuhh404~&#xA;&#xA;Construct extended private key for account ix=0H, role=0 and address ix=0&#xA;$ cardano-address key child 1852H/1815H/0H/0/0 &amp;lt; root.xprv &amp;gt; key.xsk&#xA;addr_xsk1kzl5vgev0u843tfnxqcwg0lmaf7zhdhczddaqhas6dp6m6z98302e3avp8mhu94kxkpj2gss064f74km3rrptafh4fsztekz8k5c469shcvx35wrdmus3xemp984lcwhs0jdtl4pfcsrfspe00h9pej6rg8drvcv&#xA;&#xA;Create extended signing key using cardano-cli&#xA;$ cardano-cli key convert-cardano-address-key --shelley-payment-key --signing-key-file key.xsk --out-file key.skey&#xA;{&#xA;    &#34;type&#34;: &#34;PaymentExtendedSigningKeyShelley_ed25519_bip32&#34;,&#xA;    &#34;description&#34;: &#34;&#34;,&#xA;    &#34;cborHex&#34;: &#34;5880b0bf46232c7f0f58ad333030e43ffbea7c2bb6f8135bd05fb0d343ade8453c5eacc7ac09f77e16b635832522107eaa9f56db88c615f537aa6025e6c23da98ae8fbbbf6410e24532f35e9279febb085d2cc05b3b2ada1df77ea1951eb694f3834b0be1868d1c36ef9089b3b094f5fe1d783e4d5fea14e2034c0397bee50e65a1a&#34;&#xA;}&#xA;&#xA;The cborhex here contains of 4 parts:&#xA;1. prefix 5880 - bytestring of 128 bytes&#xA;2. signing key (64 bytes) - b0bf46232c7f0f58ad333030e43ffbea7c2bb6f8135bd05fb0d343ade8453c5eacc7ac09f77e16b635832522107eaa9f56db88c615f537aa6025e6c23da98ae8&#xA;3. verification key (32 bytes) - fbbbf6410e24532f35e9279febb085d2cc05b3b2ada1df77ea1951eb694f3834&#xA;4. chain code (32 bytes) - b0be1868d1c36ef9089b3b094f5fe1d783e4d5fea14e2034c0397bee50e65a1a&#xA;&#xA;Create corresponding verification key using cardano-cli&#xA;$ cardano-cli key verification-key --signing-key-file key.skey --verification-key-file key.vkey&#xA;{&#xA;    &#34;type&#34;: &#34;PaymentExtendedVerificationKeyShelley_ed25519_bip32&#34;,&#xA;    &#34;description&#34;: &#34;&#34;,&#xA;    &#34;cborHex&#34;: &#34;5840fbbbf6410e24532f35e9279febb085d2cc05b3b2ada1df77ea1951eb694f3834b0be1868d1c36ef9089b3b094f5fe1d783e4d5fea14e2034c0397bee50e65a1a&#34;&#xA;}&#xA;The cborhex here contains of 3 parts:&#xA;1. prefix 5840 - bytestring of 64 bytes&#xA;2. verification key (32 bytes) - fbbbf6410e24532f35e9279febb085d2cc05b3b2ada1df77ea1951eb694f3834&#xA;3. chain code (32 bytes) - b0be1868d1c36ef9089b3b094f5fe1d783e4d5fea14e2034c0397bee50e65a1a&#xA;&#xA;Rule for prefixes:&#xA;  - CBOR-encoded bytestring (which is what the 58 identifies)&#xA;  - size (80 means 128 bytes, whereas 40 means 64 bytes, 20 means 32 bytes)&#xA;&#xA;Create verification key hash using cardano-cli&#xA;$ cardano-cli address key-hash --payment-verification-key-file key.vkey &amp;gt; key.hash&#xA;0185545935760c5e370d01e6f4fedbb89b7fd79e115f2837cfab9ea8&#xA;&#xA;Alternatively, we can create non-extended key&#xA;$ cardano-address key public --without-chain-code &amp;lt; key.xsk &amp;gt; key.vk&#xA;addr_vk1lwalvsgwy3fj7d0fy707hvy96txqtvaj4ksa7al2r9g7k6208q6qmrv9k3&#xA;&#xA;Also, take notice that signing key can be translated to cborhex:&#xA;$ cat key.xsk | bech32&#xA;b0bf46232c7f0f58ad333030e43ffbea7c2bb6f8135bd05fb0d343ade8453c5eacc7ac09f77e16b635832522107eaa9f56db88c615f537aa6025e6c23da98ae8b0be1868d1c36ef9089b3b094f5fe1d783e4d5fea14e2034c0397bee50e65a1a&#xA;(signing key and chain code appended)&#xA;&#xA;Moreover, basing on key.vk one can get hash&#xA;$ cardano-cli address key-hash --payment-verification-key $(cat key.vk) &amp;gt; key1.hash&#xA;0185545935760c5e370d01e6f4fedbb89b7fd79e115f2837cfab9ea8&#xA;&#xA;Within cardano-addresses one can get cborhex of verification key (with chain code)&#xA;$ cardano-address key public --with-chain-code &amp;lt; key.xsk | bech32&#xA;fbbbf6410e24532f35e9279febb085d2cc05b3b2ada1df77ea1951eb694f3834b0be1868d1c36ef9089b3b094f5fe1d783e4d5fea14e2034c0397bee50e65a1a&#xA;(verification key and chain code appended)&#xA;&#xA;Within cardano-addresses one can get cborhex of verification key (without chain code)&#xA;$ cardano-address key public --without-chain-code &amp;lt; key.xsk | bech32&#xA;fbbbf6410e24532f35e9279febb085d2cc05b3b2ada1df77ea1951eb694f3834&#xA;(verification key without chain code)&#xA;&#xA;Then, we can get compute hash (but here we need to use without chain code):&#xA;$ cardano-address key public --without-chain-code &amp;lt; key.xsk | cardano-address key hash | bech32&#xA;0185545935760c5e370d01e6f4fedbb89b7fd79e115f2837cfab9ea8&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Docker Image&lt;/h2&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker build -t cardano-address .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run&lt;/h3&gt; &#xA;&lt;p&gt;Use the auto-remove flag &lt;code&gt;--rm&lt;/code&gt; when running commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --rm cardano-address recovery-phrase generate --size 15&#xA;dismiss grit bacon glare napkin satisfy tribe proud carpet bench fantasy rich history face north&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the interactive flag &lt;code&gt;-i&lt;/code&gt; when piping stdin&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ echo &#34;addr1gqtnpvdhqrtpd4g424fcaq7k0ufuzyadt7djygf8qdyzevuph3wczvf2dwyx5u&#34; | docker run --rm -i cardano-addresses address inspect&#xA;{&#xA;    &#34;address_style&#34;: &#34;Shelley&#34;,&#xA;    &#34;stake_reference&#34;: &#34;by pointer&#34;,&#xA;    &#34;spending_key_hash&#34;: &#34;1730b1b700d616d51555538e83d67f13c113ad5f9b22212703482cb3&#34;,&#xA;    &#34;pointer&#34;: {&#xA;        &#34;slot_num&#34;: 24157,&#xA;        &#34;output_index&#34;: 42,&#xA;        &#34;transaction_index&#34;: 177&#xA;    },&#xA;    &#34;network_tag&#34;: 0&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;NPM Package&lt;/h2&gt; &#xA;&lt;p&gt;There is an experimental NPM module for JavaScript and TypeScript available, which works in both NodeJS and the browser.&lt;/p&gt; &#xA;&lt;p&gt;Here is a code sample showing how it can be used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var cardanoAddresses = require(&#39;cardano-addresses&#39;)&#xA;var addr = &#39;addr1gqtnpvdhqrtpd4g424fcaq7k0ufuzyadt7djygf8qdyzevuph3wczvf2dwyx5u&#39;&#xA;&#xA;cardanoAddresses.inspectAddress(addr)&#xA;  .then(info =&amp;gt; console.log(info)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/cardano-addresses&#34;&gt;NPM Package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://input-output-hk.github.io/cardano-addresses/typescript/&#34;&gt;API Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://input-output-hk.github.io/cardano-addresses/demo/&#34;&gt;Web Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/cardano-addresses/master/jsapi/README.md&#34;&gt;Development Info&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are welcome.&lt;/p&gt; &#xA;&lt;p&gt;When creating a pull request, please make sure that your code adheres to our &lt;a href=&#34;https://input-output-hk.github.io/adrestia/code/Coding-Standards&#34;&gt;coding standards&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/input-output-hk/cardano-addresses/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/input-output-hk/cardano-addresses.svg?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
</feed>