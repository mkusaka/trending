<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-06T01:37:08Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bvssvni/haskell-groups</title>
    <updated>2023-04-06T01:37:08Z</updated>
    <id>tag:github.com,2023-04-06:/bvssvni/haskell-groups</id>
    <link href="https://github.com/bvssvni/haskell-groups" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Group oriented programming in Haskell.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;haskell-groups&lt;/h1&gt; &#xA;&lt;p&gt;Group oriented programming in Haskell.&lt;br&gt; BSD license.&lt;br&gt; For version log, view the individual files.&lt;/p&gt; &#xA;&lt;p&gt;To use this library, install &lt;img src=&#34;http://www.haskell.org/platform/&#34; alt=&#34;Haskell Platform&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What Is Haskell?&lt;/h2&gt; &#xA;&lt;p&gt;Haskell is a functional or &#39;expression&#39; programming language.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://www.haskell.org/haskellwiki/Haskell&#34; alt=&#34;Visit Haskell.org&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What Is Group Oriented Programming?&lt;/h2&gt; &#xA;&lt;p&gt;A group is a structure where the value does not change when any member of it swap their locations.&lt;br&gt; For example &#34;All people in this house&#34; has a consistent meaning as group,&lt;br&gt; but only if no people enter or leave the house.&lt;/p&gt; &#xA;&lt;p&gt;A group follow Boolean algebra, two groups can be combined into new ones with &#39;And&#39;, &#39;Or&#39; and &#39;Except&#39;.&lt;br&gt; There is a way of representing groups, that in many cases is faster than lists:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[0,4, 8,12]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The example above means &#34;items from index 0 to 3 and 8 to 11.&lt;br&gt; The odd indices tells when the group turns to &#34;false&#34;.&lt;br&gt; This representation allows one to have very large groups in little memory.&lt;/p&gt; &#xA;&lt;p&gt;Groups behave as a &#34;filter&#34; or &#34;multi-select&#34; of objects.&lt;br&gt; They are useful for optimizing local operations on large amount of data with low entropy.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>input-output-hk/cardano-api</title>
    <updated>2023-04-06T01:37:08Z</updated>
    <id>tag:github.com,2023-04-06:/input-output-hk/cardano-api</id>
    <link href="https://github.com/input-output-hk/cardano-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cardano API&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Overview of the &lt;code&gt;cardano-api&lt;/code&gt; repository&lt;/h2&gt; &#xA;&lt;p&gt;Integration of the &lt;a href=&#34;https://github.com/input-output-hk/cardano-ledger-specs&#34;&gt;&lt;code&gt;ledger&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/input-output-hk/ouroboros-network/tree/master/ouroboros-consensus&#34;&gt;&lt;code&gt;consensus&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/input-output-hk/ouroboros-network/tree/master/ouroboros-network&#34;&gt;networking&lt;/a&gt; and&lt;/p&gt; &#xA;&lt;h2&gt;Using the &lt;code&gt;cardano-node&lt;/code&gt; Haskell packages&lt;/h2&gt; &#xA;&lt;p&gt;If you want to use the &lt;code&gt;cardano-api&lt;/code&gt; Haskell packages from another project, you should use &lt;a href=&#34;https://github.com/input-output-hk/cardano-haskell-packages&#34;&gt;&lt;code&gt;CHaP&lt;/code&gt;&lt;/a&gt; to get the packages defined in this repository.&lt;/p&gt; &#xA;&lt;p&gt;Please note that you may need to use any &lt;code&gt;source-repository-package&lt;/code&gt; stanzas defined in &lt;code&gt;cabal.project&lt;/code&gt;, although we will endeavour to keep these to an absolute minimum.&lt;/p&gt; &#xA;&lt;h2&gt;Style guide&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/input-output-hk/cardano-api/wiki/Style-guide&#34;&gt;style guide&lt;/a&gt; for can be found on the &lt;a href=&#34;https://github.com/input-output-hk/cardano-api/wiki&#34;&gt;cardano-node repository&#39;s wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting &lt;code&gt;cardano-api&lt;/code&gt; issues&lt;/h2&gt; &#xA;&lt;p&gt;For some troubleshooting help with building or running &lt;code&gt;cardano-api&lt;/code&gt;, the wiki has a &lt;a href=&#34;https://github.com/input-output-hk/cardano-api/wiki/Troubleshooting&#34;&gt;troubleshooting page&lt;/a&gt; that documents some common gotchas.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>layer-3-communications/kafka-interchange</title>
    <updated>2023-04-06T01:37:08Z</updated>
    <id>tag:github.com,2023-04-06:/layer-3-communications/kafka-interchange</id>
    <link href="https://github.com/layer-3-communications/kafka-interchange" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Serialization and deserialization for exchanges with Apache Kafka&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;kafka-interchange&lt;/h1&gt; &#xA;&lt;p&gt;This library provides serialization and deserialization for exchanges with Kafka. This takes the form of: data types, encode functions, and decode functions. This library is not a Kafka client. A Kafka client must be a much more opinionated piece of software. The purpose of this library is for Kafka clients to be built on top of it.&lt;/p&gt; &#xA;&lt;h2&gt;Module Structure&lt;/h2&gt; &#xA;&lt;p&gt;There are two module namespaces in this library: &lt;code&gt;Kafka.Interchange&lt;/code&gt; and &lt;code&gt;Kafka.Data&lt;/code&gt;. Pseudoregex for modules in the &lt;code&gt;Kafka.Interchange&lt;/code&gt; namespace:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Kafka.Interchange.{msgtype}.(Request|Response).V[0-9]+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Kafka.Interchange.Message.Request.V2&#xA;Kafka.Interchange.Message.Response.V1&#xA;Kafka.Interchange.Produce.Request.V9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The message type &#34;Message&#34; is special. It&#39;s the wrapper that all other message types are serialized inside of. Request modules include a encode function. Response modules include a decode function.&lt;/p&gt; &#xA;&lt;p&gt;Some shared types are used by both requests and responses. For such types, we use the &lt;code&gt;Kafka.Data&lt;/code&gt; namespace. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Kafka.Data.Record&#xA;Kafka.Data.RecordBatch&#xA;Kafka.Data.Acknowledgments&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These are not versioned, and they include both encode and decode functions.&lt;/p&gt;</summary>
  </entry>
</feed>