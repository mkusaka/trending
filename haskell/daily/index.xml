<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-29T01:35:45Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>haskell/network</title>
    <updated>2025-07-29T01:35:45Z</updated>
    <id>tag:github.com,2025-07-29:/haskell/network</id>
    <link href="https://github.com/haskell/network" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Low-level networking interface&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/haskell/network/workflows/Haskell%20CI/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions status&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;http://hackage.haskell.org/package/network&#34;&gt;&lt;code&gt;network&lt;/code&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;To build this package directly from git, you must run &lt;code&gt;autoreconf -i&lt;/code&gt;. And then use &lt;code&gt;cabal configure; cabal build&lt;/code&gt; or &lt;code&gt;stack build&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support Policy&lt;/h2&gt; &#xA;&lt;h3&gt;GHC&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;network&lt;/code&gt; package support &lt;a href=&#34;https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/intro.html#ghc-version-numbering-policy&#34;&gt;3 major versions of GHC&lt;/a&gt; only. This means that the current stable version and two previous stable versions are supported.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;We use MSYS to build this package on Windows. To use the &lt;code&gt;network&lt;/code&gt; package on Cygwin, use &lt;code&gt;stack&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Coding&lt;/h2&gt; &#xA;&lt;h3&gt;.hs files&lt;/h3&gt; &#xA;&lt;p&gt;If you need C macros created by &#34;configure&#34; or &lt;code&gt;CALLCONV&lt;/code&gt;/&lt;code&gt;SAFE_ON_WIN&lt;/code&gt;, put&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;#include &#34;HsNetDef.h&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&#34;HsNet.h&#34; does now work well since Mac&#39;s cpp sucks.&lt;/p&gt; &#xA;&lt;h3&gt;.hsc files&lt;/h3&gt; &#xA;&lt;p&gt;If you need &lt;code&gt;#peek&lt;/code&gt;, &lt;code&gt;#poke&lt;/code&gt; and others, create a &lt;code&gt;.hsc&lt;/code&gt; file with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;#include &#34;HsNet.h&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;HsNet.h&lt;/code&gt; includes &lt;code&gt;HsNefDef.h&lt;/code&gt; and necessary C structures. Unfortunately, &lt;code&gt;hsc2hs&lt;/code&gt; does not convert C macros. So, if you use &lt;code&gt;CALLCONV&lt;/code&gt;/&lt;code&gt;SAFE_ON_WIN&lt;/code&gt;, the following is also necessary:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;##include &#34;HsNetDef.h&#34;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>haskell/win32</title>
    <updated>2025-07-29T01:35:45Z</updated>
    <id>tag:github.com,2025-07-29:/haskell/win32</id>
    <link href="https://github.com/haskell/win32" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Haskell support for the Win32 API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The &lt;code&gt;Win32&lt;/code&gt; Package&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hackage.haskell.org/package/Win32&#34;&gt;&lt;img src=&#34;https://img.shields.io/hackage/v/Win32.svg?sanitize=true&#34; alt=&#34;Hackage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/l/Django.svg?sanitize=true&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/Mistuke/win32-5ec4k/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/b8dfn205r791rxw5/branch/master?svg=true&#34; alt=&#34;Windows build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://hackage.haskell.org/package/Win32&#34;&gt;&lt;code&gt;Win32&lt;/code&gt; on Hackage&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Installing from Git&lt;/h2&gt; &#xA;&lt;p&gt;This package requires no special installation instructions.&lt;/p&gt; &#xA;&lt;p&gt;To install use &lt;code&gt;cabal install&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;This library is just a direct binding to Windows API calls and as such contains no documentation. The documentation for functions can be found in the equivalently named functions on MSDN &lt;a href=&#34;https://msdn.microsoft.com/library/windows/desktop/hh920508.aspx&#34;&gt;https://msdn.microsoft.com/library/windows/desktop/hh920508.aspx&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;Win32&lt;/code&gt; library is a core GHC library and as such aims to have an as little as possible footprint when it comes to dependencies.&lt;/p&gt; &#xA;&lt;p&gt;When submitting new requests think hard if any new &lt;code&gt;Haskell&lt;/code&gt; dependencies are actually needed. (note that this does not apply to &lt;code&gt;C&lt;/code&gt; dependencies.)&lt;/p&gt; &#xA;&lt;p&gt;The best way to get started is using &lt;code&gt;cabal new-build&lt;/code&gt; and &lt;code&gt;cabal sandboxes&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:haskell/win32.git&#xA;cd win32&#xA;cabal v2-repl&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>