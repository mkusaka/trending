<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-18T01:29:59Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bittide/bittide-hardware</title>
    <updated>2024-03-18T01:29:59Z</updated>
    <id>tag:github.com,2024-03-18:/bittide/bittide-hardware</id>
    <link href="https://github.com/bittide/bittide-hardware" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;bittide-hardware&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;bittide/bittide-hardware&lt;/code&gt; contains a (very much work-in-progress) hardware implementation of a Bittide system (also see &lt;a href=&#34;https://raw.githubusercontent.com/bittide/bittide-hardware/staging/#about-bittide&#34;&gt;About Bittide&lt;/a&gt;). We currently target Vivado FPGAs paired with SkyWorks clock adjustment boards.&lt;/p&gt; &#xA;&lt;h1&gt;Getting started&lt;/h1&gt; &#xA;&lt;p&gt;This project uses a bunch of different languages and tool(chain)s. Nix is used to manage this. To get a development shell &lt;a href=&#34;https://nixos.org/download.html&#34;&gt;install nix&lt;/a&gt; and run the following command in the root of this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nix-shell&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The started shell contains everything needed to develop Bittide components.&lt;/p&gt; &#xA;&lt;p&gt;TODO: Add overview of components&lt;/p&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;p&gt;We follow a standard GitHub development flow. Our development branch is called &lt;code&gt;staging&lt;/code&gt;, which periodically gets merged into &lt;code&gt;main&lt;/code&gt; (after running more expensive CI checks at night). Free free to open a PR. If you&#39;re not sure what to do, open a &lt;a href=&#34;https://github.com/bittide/bittide-hardware/discussions&#34;&gt;discussion&lt;/a&gt; thread.&lt;/p&gt; &#xA;&lt;h2&gt;Tips &amp;amp; Tricks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The full (expensive) test suite only runs nightly on &lt;code&gt;staging&lt;/code&gt;. If you want to run the full test suite on a PR, add &lt;code&gt;[force_expensive_checks]&lt;/code&gt; to your commit message.&lt;/li&gt; &#xA; &lt;li&gt;While debugging, we often only want one bittide instance to be tested with our hardware-in-the-loop infrastructure. With the increasing number of bittide instances with are synthesized and tested, these CI runs take a long time. You can add a file &lt;code&gt;.github/synthesis/debug.json&lt;/code&gt;, with only the instances you want CI to synthesize/test. The CI run will always fail on the &#39;all&#39; job when this file exists to prevent a premature merge.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;About Bittide&lt;/h1&gt; &#xA;&lt;p&gt;Bittide is a novel distributed system architecture based on the idea that synchronous, ahead-of-time scheduling using a logical global clock provides a set of properties that simplify the design and utilization of large systems.&lt;/p&gt; &#xA;&lt;p&gt;With bittide we aim to build a system with guaranteed performance and robustness and address today&#39;s distributed systems inefficiencies and unpredictable long tail latencies. This ranges from simple things like video conferencing without glitches to virtual reality sports competitions with precisely equivalent system response times for all competitors. The properties underlying bittide support the orchestration and composition of microservices into a system without queueing delays.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Bittide is part of Google Research, and is not an official Google product.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Licence&lt;/h1&gt; &#xA;&lt;p&gt;This code is shared under by Google LLC under the Apache 2.0 license. See the &lt;a href=&#34;https://raw.githubusercontent.com/bittide/bittide-hardware/staging/LICENSES/Apache-2.0.txt&#34;&gt;LICENSE&lt;/a&gt; file for terms.&lt;/p&gt; &#xA;&lt;p&gt;This project uses the &lt;a href=&#34;https://reuse.software/&#34;&gt;REUSE&lt;/a&gt; tool to check for license compliance.&lt;/p&gt;</summary>
  </entry>
</feed>