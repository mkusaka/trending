<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-02T01:35:52Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>xkikeg/PicasaDB</title>
    <updated>2023-03-02T01:35:52Z</updated>
    <id>tag:github.com,2023-03-02:/xkikeg/PicasaDB</id>
    <link href="https://github.com/xkikeg/PicasaDB" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PicasaDB&lt;/h1&gt; &#xA;&lt;p&gt;Instrument Picasa DB file and export thumbnail files.&lt;/p&gt; &#xA;&lt;h2&gt;Attention&lt;/h2&gt; &#xA;&lt;p&gt;This program is for Google Picasa (TM) database, however, Google and this program has no relationship. Do not ask anything about this program to Google. This program is distributed &lt;strong&gt;without any warranty&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;First, you should prepare environment such as Haskell, C++, and Python.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;C++ compiler with some C++11, such as g++ or clang.&lt;/li&gt; &#xA; &lt;li&gt;Glasgow Haskell Compiler and Haskell Platform and additional packages. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;datetime&lt;/li&gt; &#xA;   &lt;li&gt;dta-binary-ieee754&lt;/li&gt; &#xA;   &lt;li&gt;csv-conduit&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Python 2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you use Ubuntu 12.10, all you have to do is shown below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo aptitude install build-essential haskell-platform&#xA;sudo aptitude install libghc-datetime-{dev,doc,prof}&#xA;sudo aptitude install libghc-data-binary-ieee754-{dev,doc,prof}&#xA;sudo aptitude install libghc-csv-conduit-{dev,doc,prof}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After you have completed environment preparation, you only have to do &lt;code&gt;make&lt;/code&gt; in this directory.&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;I&#39;m very busy to write complete usage, so I show example commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;PICASADIR=/path/to/Picasa2/db3&#xA;RAWOUTPUTDIR=/path/to/output&#xA;STRUCTUREDOUTPUTDIR=/path/to/structured&#xA;./thumbIndex $PICASADIR/thumbindex.db &amp;gt; thumbindex.db.tsv&#xA;for i in thumbs thumbs2 bigthumbs previews; do&#xA;./splitThumbs $PICASADIR/${i}_index.db $PICASADIR/${i}_0.db $RAWOUTPUTDIR/$i/&#xA;./renameThumbs.py ~/thumbindex.db.tsv $RAWOUTPUTDIR/$i $STRUCTUREDOUTPUTDIR/$i&#xA;done&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This program is licensed with GPL3.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;The pmp file parsing part of this program owe to &lt;a href=&#34;http://sbktech.blogspot.jp/2011/12/picasa-pmp-format.html&#34;&gt;http://sbktech.blogspot.jp/2011/12/picasa-pmp-format.html&lt;/a&gt;. I used two binary editors: &lt;a href=&#34;http://www.vector.co.jp/soft/winnt/util/se496567.html&#34;&gt;Moontail&lt;/a&gt; and &lt;a href=&#34;http://www.vector.co.jp/soft/win95/util/se042193.html&#34;&gt;BinEdit&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>