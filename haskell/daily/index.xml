<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-19T01:38:52Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>well-typed/plutonomy</title>
    <updated>2022-08-19T01:38:52Z</updated>
    <id>tag:github.com,2022-08-19:/well-typed/plutonomy</id>
    <link href="https://github.com/well-typed/plutonomy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An optimizer for untyped plutus core&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;plutonomy&lt;/h1&gt; &#xA;&lt;p&gt;plutonomy is an optimizer for untyped plutus core.&lt;/p&gt; &#xA;&lt;p&gt;It can be plugged into any Plutus compilation pipeline, by adding an extra pass. The optimiser is configurable to an extent. At the default optimisation level, the optimiser should exactly preserve the semantics of the original code. At a particularly aggressive optimisation level, the optimiser can perform certain transformations that may not preserve the semantics.&lt;/p&gt; &#xA;&lt;p&gt;Any use of the library as well as feedback is welcome, but due to time constraints, we cannot guarantee any level of unpaid support. Please contact Well-Typed via email to &lt;a href=&#34;mailto:info@well-typed.com&#34;&gt;info@well-typed.com&lt;/a&gt; if you are interested in commercial support or funding development of the library.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The main optimiser entry point is &lt;code&gt;Plutonomy.UPLC.optimizeUPLC&lt;/code&gt; or &lt;code&gt;Plutonomy.UPLC.optimizeUPLCWith&lt;/code&gt; if you want to deviate from the default configuration options.&lt;/p&gt; &#xA;&lt;p&gt;The library additionally provides its own variants of validator scripts and minting policy scripts (via &lt;code&gt;Plutonomy.Scripts.mkValidatorScript&lt;/code&gt; and &lt;code&gt;Plutonomy.Scripts.mkMintingPolicyScript&lt;/code&gt;) that can be turned back into their Plutus counterparts via &lt;code&gt;Plutonomy.Scripts.validatorToPlutus&lt;/code&gt; and &lt;code&gt;Plutonomy.Scripts.mintingPolicyToPlutus&lt;/code&gt;. The Plutonomy representation is intended for debugging / inspection as it uses names for binders instead of de Bruijn indices.&lt;/p&gt; &#xA;&lt;h2&gt;Flags&lt;/h2&gt; &#xA;&lt;p&gt;plutonomy currently supports two plutus versions, identified via their git commit hashes. You need to toggle one of the flags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;plutus-1efbb276e&lt;/li&gt; &#xA; &lt;li&gt;plutus-4710dff2e&lt;/li&gt; &#xA; &lt;li&gt;plutus-f680ac697 (cardano-node-1.35.1)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, add to your &lt;code&gt;cabal.project&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;flags: +plutus-1efbb276e&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;None of the two flags are on by default, so you need to enable the flag corresponding to the version you want to use, but never turn off any version flags.&lt;/p&gt;</summary>
  </entry>
</feed>