<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-05T01:34:23Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>input-output-hk/hydra</title>
    <updated>2022-12-05T01:34:23Z</updated>
    <id>tag:github.com,2022-12-05:/input-output-hk/hydra</id>
    <link href="https://github.com/input-output-hk/hydra" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Proof of concept for the Hydra Head protocol üë∑&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;p align=&#34;center&#34;&gt;Hydra &lt;span&gt;üê≤&lt;/span&gt;&lt;/p&gt;&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;Reference implementation of the Hydra scalability protocols.&lt;/p&gt; &#xA; &lt;a href=&#34;https://github.com/input-output-hk/hydra/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/input-output-hk/hydra/CI?label=Tests&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/input-output-hk/hydra/pkgs/container/hydra-node&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/input-output-hk/hydra/Docker?label=Docker&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;&lt;span&gt;üåÑ&lt;/span&gt; Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Hydra is the layer-two scalability solution for Cardano, which aims to increase the speed of transactions (low latency, high throughput) and minimize transaction cost.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the proof-of-concept implementation for the Hydra &lt;a href=&#34;https://eprint.iacr.org/2020/299.pdf&#34;&gt;Head protocol&lt;/a&gt;. It is a developer preview that we&#39;ve put together, marching towards a production ready solution. It contains a &lt;code&gt;hydra-node&lt;/code&gt;, which runs a simplified (coordinated) Hydra Head protocol, connects to other hydra-nodes, interfaces the Cardano blockchain and provides an API to clients such as the included example terminal user interface &lt;code&gt;hydra-tui&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; &lt;span&gt;‚ö†&lt;/span&gt; &lt;span&gt;‚ö†&lt;/span&gt;&lt;/p&gt; &#xA; &lt;p&gt;This is still prototypical and exploratory work shared here for your interest.&lt;/p&gt; &#xA; &lt;p&gt;It is NOT ready for production (yet).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;&lt;span&gt;üöÄ&lt;/span&gt; Getting started&lt;/h2&gt; &#xA;&lt;p&gt;The quickest way to get a &lt;code&gt;hydra-node&lt;/code&gt; running is to use our &lt;a href=&#34;https://github.com/orgs/input-output-hk/packages?repo_name=hydra&#34;&gt;docker images&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker pull ghcr.io/input-output-hk/hydra-node:0.8.1&#xA;docker run --rm ghcr.io/input-output-hk/hydra-node --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More information (including a demo) available on &lt;a href=&#34;https://hydra.family/head-protocol/docs/getting-started&#34;&gt;user manual üìñ&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üåà&lt;/span&gt; Features&lt;/h2&gt; &#xA;&lt;p&gt;Proof of concept:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Coordinated Hydra Head protocol&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Single Head per hydra-node&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Network statically configured, direct TCP connections&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; WebSocket, message-based API Server&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Terminal user interface client&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Cardano-node integration via Direct connection&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Running on testnet&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Persisted Head state&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Later:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Audited and mainnet ready&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Multiple Heads per hydra-node, managed via API&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Support for external wallets (e.g. hardware wallets)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Optimistic Head closure and incremental de-/commit protocol extension&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Relay-capable, mesh network&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;ü§ù&lt;/span&gt; Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The best way to contribute right now is to provide feedback. Give the &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/hydra/master/demo&#34;&gt;demo&lt;/a&gt; a test drive and have a look at our &lt;a href=&#34;https://hydra.family/head-protocol&#34;&gt;documentation&lt;/a&gt;. Should you have any questions, ideas or issues, we would like to hear from you:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;#ask-hydra on the IOG &lt;a href=&#34;https://discord.gg/Qq5vNTg9PT&#34;&gt;Discord server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;create a Github &lt;a href=&#34;https://github.com/input-output-hk/hydra/discussions&#34;&gt;Discussion&lt;/a&gt; or &lt;a href=&#34;https://github.com/input-output-hk/hydra/issues/new&#34;&gt;Issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;or ask on Cardano &lt;a href=&#34;https://cardano.stackexchange.com/&#34;&gt;StackExchange&lt;/a&gt; using the &lt;code&gt;hydra&lt;/code&gt; tag&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When contributing to this project and interacting with others, please follow our &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/hydra/master/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/hydra/master/CODE-OF-CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Thanks for visiting and enjoy &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;! &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>effectfully-ou/sketches</title>
    <updated>2022-12-05T01:34:23Z</updated>
    <id>tag:github.com,2022-12-05:/effectfully-ou/sketches</id>
    <link href="https://github.com/effectfully-ou/sketches" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Haskell blog&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>feramhq/Perspec</title>
    <updated>2022-12-05T01:34:23Z</updated>
    <id>tag:github.com,2022-12-05:/feramhq/Perspec</id>
    <link href="https://github.com/feramhq/Perspec" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Scriptable desktop app to correct the perspective of images&lt;/p&gt;&lt;hr&gt;&lt;h1 style=&#34;&#xA;  display: inline-block !important;&#xA;  font-size: 3rem;&#xA;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/images/icon.svg?sanitize=true&#34; alt=&#34;Icon&#34; height=&#34;56px&#34; style=&#34;&#xA;      display: inline-block !important;&#xA;      height: 3.5rem;&#xA;      margin-right: 1rem;&#xA;    &#34;&gt; &lt;span style=&#34;position: relative; bottom: 0.7rem;&#34;&gt; Perspec &lt;/span&gt; &lt;/h1&gt; &#xA;&lt;p&gt;App and workflow to perspectively correct images. For example whiteboards, document scans, or facades.&lt;/p&gt; &#xA;&lt;!-- toc --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/#app-workflow&#34;&gt;App Workflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/#prebuilt&#34;&gt;Prebuilt&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/#from-source&#34;&gt;From Source&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/#usage-via-cli&#34;&gt;Usage via CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/#photo-digitization-workflow&#34;&gt;Photo Digitization Workflow&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/#additional-steps&#34;&gt;Additional Steps&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/#algorithms&#34;&gt;Algorithms&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/#perspective-transformation&#34;&gt;Perspective Transformation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/#grayscale-conversion&#34;&gt;Grayscale Conversion&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/#bw-conversion&#34;&gt;BW Conversion&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/#interpolation-of-missing-parts&#34;&gt;Interpolation of Missing Parts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/#technologies&#34;&gt;Technologies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/#related&#34;&gt;Related&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- tocstop --&gt; &#xA;&lt;h2&gt;App Workflow&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Step&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Result&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Take photos&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/images/doc.jpg&#34; alt=&#34;Original image&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;Open Perspec app&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/images/perspec_opened.png&#34; alt=&#34;Opened Perspec App&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;Drop the images onto the window&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/images/perspec_image_dropped.png&#34; alt=&#34;Dropped image&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;Mark the corners by clicking on them&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/images/perspec_marked_corners.png&#34; alt=&#34;Marked corners&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;Click one of the save buttons (or [Enter])&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/feramhq/Perspec/master/images/doc-fixed.jpg&#34; alt=&#34;Corrected image&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; Perspec currently only works on macOS and Linux. Any help to make it work on Microsoft &lt;a href=&#34;https://github.com/feramhq/Perspec/issues/21&#34;&gt;(Ticket)&lt;/a&gt; would be greatly appreciated!&lt;/p&gt; &#xA;&lt;h3&gt;Prebuilt&lt;/h3&gt; &#xA;&lt;p&gt;You can get this (and previous) versions from &lt;a href=&#34;https://github.com/feramhq/Perspec/releases&#34;&gt;the releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The current nightly version can be downloaded from &lt;a href=&#34;https://github.com/feramhq/Perspec/actions&#34;&gt;https://github.com/feramhq/Perspec/actions&lt;/a&gt;. However, it&#39;s necessary to fix the file permissions after download:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;chmod +x \&#xA;  ./Perspec.app/Contents/MacOS/Perspec \&#xA;  ./Perspec.app/Contents/Resources/{perspec,script,imagemagick/bin/convert}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On macOS you can also install it via this &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt; tap:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install --cask ad-si/tap/perspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;From Source&lt;/h3&gt; &#xA;&lt;p&gt;Build it from source with Haskell&#39;s &lt;a href=&#34;https://docs.haskellstack.org/en/stable/install_and_upgrade/&#34;&gt;stack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Platypus, with &lt;a href=&#34;https://github.com/sveinbjornt/Platypus/raw/master/Documentation/Documentation.md#show-shell-command&#34;&gt;command line tools enabled&lt;/a&gt; , is required to build from source.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/feramhq/Perspec&#xA;cd Perspec&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This copies the &lt;code&gt;Perspec.app&lt;/code&gt; to your &lt;code&gt;/Applications&lt;/code&gt; directory and makes the &lt;code&gt;perspec&lt;/code&gt; command available on your path. You can then either drop images on the app window, or use it via the CLI like &lt;code&gt;perspec fix image.jpeg&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage via CLI&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s also possible to directly invoke Perspec via the CLI like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;/Applications/Perspec.app/Contents/Resources/perspec fix path/to/image.jpeg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also pass several images and they will all be opened one after another. This is very useful for batch correcting a large set of images.&lt;/p&gt; &#xA;&lt;h2&gt;Photo Digitization Workflow&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Take photos &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Use camera app which lets you lock rotation (e.g. &lt;a href=&#34;https://play.google.com/store/apps/details?id=net.sourceforge.opencamera&#34;&gt;OpenCamera&lt;/a&gt;). Otherwise check out the guide below to fix rotation.&lt;/li&gt; &#xA;   &lt;li&gt;Use a sound activated camera to take photos simply by clicking your tongue or snipping your finger. E.g. with:&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://plutotrigger.com&#34;&gt;Pluto Trigger&lt;/a&gt; - Hardware device&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://wiki.magiclantern.fm/pl:userguide?#audio_remoteshot&#34;&gt;Magic Lantern&lt;/a&gt; - 3rd party firmware for Canon&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.cherry-software.com/isoundcam.html&#34;&gt;iSoundCam&lt;/a&gt; - Android app&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;perspec rename&lt;/code&gt; sub-command to fix order and names of scanned files.&lt;/li&gt; &#xA; &lt;li&gt;Verify that &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;All pages were captured and have the correct filename&lt;/li&gt; &#xA;   &lt;li&gt;Images are sharp enough&lt;/li&gt; &#xA;   &lt;li&gt;Images have a high contrast&lt;/li&gt; &#xA;   &lt;li&gt;Images have correct orientation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For best image quality convert images optionally to a lossless format (e.g. &lt;code&gt;png&lt;/code&gt;), apply rotations, and convert them to grayscale. Attention: Exclude the covers! &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mogrify -verbose -format png \&#xA;  -auto-orient -colorspace gray photos/*.jpeg&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Use Perspec to crop images &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;perspec fix photos/*.png&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Additional Steps&lt;/h3&gt; &#xA;&lt;p&gt;Improve colors with one of the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Normalize dynamic range:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mogrify -verbose -normalize photos/*.png&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Convert to black and white: &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#! /usr/bin/env bash&#xA;&#xA;find . -iname &#34;*.png&#34; | \&#xA;while read -r file&#xA;do&#xA;  convert \&#xA;    -verbose \&#xA;    &#34;$file&#34; \&#xA;    \( +clone -blur 0x60 -brightness-contrast 40 \) \&#xA;    -compose minus \&#xA;    -composite \&#xA;    -negate \&#xA;    -auto-threshold otsu \&#xA;    &#34;$(basename &#34;$file&#34; &#34;.png&#34;)&#34;-fixed.png&#xA;done&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;In order to rotate all photos to portrait mode you can use either&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mogrify -verbose -auto-orient -rotate &#34;90&amp;gt;&#34; photos/*.jpeg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mogrify -verbose -auto-orient -rotate &#34;-90&amp;gt;&#34; photos/*.jpeg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Rescale image on viewport change&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Handle JPEG rotation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Draw lines between corners to simplify guessing of clipped corners&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bundle Imagemagick&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Better error if wrong file format is dropped (images/error-message.jpg)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Center Perspec window on screen&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Drag&#39;n&#39;Drop for corner markers&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &#34;Submit&#34; button&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &#34;Convert to Grayscale&#34; button&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add support for custom output size (e.g. A4)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Manual rotation buttons&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Zoom view for corners&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Label corner markers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Algorithms&lt;/h2&gt; &#xA;&lt;h3&gt;Perspective Transformation&lt;/h3&gt; &#xA;&lt;p&gt;Once the corners are marked, the correction is equivalent to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;convert \&#xA;  images/example.jpg \&#xA;  -distort Perspective \&#xA;    &#39;8,35 0,0 27,73 0,66 90,72 63,66 67,10 63,0&#39; \&#xA;  -crop 63x66+0+0 \&#xA;  images/example-fixed.jpg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Grayscale Conversion&lt;/h3&gt; &#xA;&lt;p&gt;Converts image to grayscale and normalizes the range of values afterwards. (Uses Imagemagick&#39;s &lt;code&gt;-colorspace gray -normalize&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;BW Conversion&lt;/h3&gt; &#xA;&lt;p&gt;Converts image to binary format with OTSU&#39;s method. (Uses Imagemagick&#39;s &lt;code&gt;-auto-threshold OTSU -monochrome&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;Interpolation of Missing Parts&lt;/h3&gt; &#xA;&lt;p&gt;Perspec automatically interpolates missing parts by using the closest pixel. (&lt;a href=&#34;https://www.imagemagick.org/Usage/misc/#edge&#34;&gt;https://www.imagemagick.org/Usage/misc/#edge&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Technologies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Core is written in &lt;a href=&#34;https://haskell.org&#34;&gt;Haskell&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Perspective transformation are handled by &lt;a href=&#34;https://imagemagick.org&#34;&gt;ImageMagick&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;App bundle is created with &lt;a href=&#34;https://sveinbjorn.org/platypus&#34;&gt;Platypus&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Related&lt;/h2&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://github.com/ad-si/awesome-scanning&#34;&gt;ad-si/awesome-scanning&lt;/a&gt; for an extensive list of related projects.&lt;/p&gt;</summary>
  </entry>
</feed>