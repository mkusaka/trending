<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-07T01:29:47Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lierdakil/pandoc-crossref</title>
    <updated>2023-09-07T01:29:47Z</updated>
    <id>tag:github.com,2023-09-07:/lierdakil/pandoc-crossref</id>
    <link href="https://github.com/lierdakil/pandoc-crossref" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pandoc filter for cross-references&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pandoc-crossref filter &lt;img src=&#34;https://github.com/lierdakil/pandoc-crossref/workflows/Haskell%20CI/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;pandoc-crossref is a pandoc filter for numbering figures, equations, tables and cross-references to them.&lt;/p&gt; &#xA;&lt;p&gt;The input file (like &lt;a href=&#34;https://raw.githubusercontent.com/lierdakil/pandoc-crossref/master/docs/demo/demo.md&#34;&gt;demo.md&lt;/a&gt;) can be converted into &lt;a href=&#34;http://lierdakil.github.io/pandoc-crossref/demo/output.html&#34;&gt;HTML&lt;/a&gt;, &lt;a href=&#34;http://lierdakil.github.io/pandoc-crossref/demo/output.latex&#34;&gt;LaTeX&lt;/a&gt;, &lt;a href=&#34;http://lierdakil.github.io/pandoc-crossref/demo/output.pdf&#34;&gt;PDF&lt;/a&gt;, &lt;a href=&#34;http://lierdakil.github.io/pandoc-crossref/demo/output.md&#34;&gt;Markdown&lt;/a&gt; or other formats.&lt;/p&gt; &#xA;&lt;p&gt;Optionally, you can use cleveref for LaTeX/PDF output, e.g. &lt;a href=&#34;http://lierdakil.github.io/pandoc-crossref/demo/output-cref.pdf&#34;&gt;cleveref PDF&lt;/a&gt;, &lt;a href=&#34;http://lierdakil.github.io/pandoc-crossref/demo/output-cref.latex&#34;&gt;cleveref LaTeX&lt;/a&gt;, and listings package, e.g. &lt;a href=&#34;http://lierdakil.github.io/pandoc-crossref/demo/output-listings.pdf&#34;&gt;listings PDF&lt;/a&gt;, &lt;a href=&#34;http://lierdakil.github.io/pandoc-crossref/demo/output-listings.latex&#34;&gt;listings LaTeX&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also enable per-chapter numbering (as with &lt;code&gt;--chapters&lt;/code&gt; for latex output). You need to specify &lt;code&gt;-M chapters&lt;/code&gt; for non-LaTeX/PDF output however. Examples: &lt;a href=&#34;http://lierdakil.github.io/pandoc-crossref/demo/output-chapters.html&#34;&gt;HTML&lt;/a&gt;, &lt;a href=&#34;http://lierdakil.github.io/pandoc-crossref/demo/output-chapters.md&#34;&gt;Markdown&lt;/a&gt;, &lt;a href=&#34;http://lierdakil.github.io/pandoc-crossref/demo/output-chapters.latex&#34;&gt;LaTeX&lt;/a&gt;, &lt;a href=&#34;http://lierdakil.github.io/pandoc-crossref/demo/output-chapters.pdf&#34;&gt;PDF&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This work is inspired by &lt;a href=&#34;https://github.com/tomduck/pandoc-fignos&#34;&gt;pandoc-fignos&lt;/a&gt; and &lt;a href=&#34;https://github.com/tomduck/pandoc-eqnos&#34;&gt;pandoc-eqnos&lt;/a&gt; by @tomduck.&lt;/p&gt; &#xA;&lt;p&gt;This package tries to use LaTeX labels and references if output type is LaTeX. It also tries to supplement rudimentary LaTeX configuration that should mimic metadata configuration by setting &lt;code&gt;header-includes&lt;/code&gt; variable.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The easiest option to get pandoc-crossref on Windows, macOS, or Linux, is to download pre-built executables available at the &lt;a href=&#34;https://github.com/lierdakil/pandoc-crossref/releases/latest&#34;&gt;releases page&lt;/a&gt;. Bear in mind that those are a product of automated build scripts, and as such, provided as-is, with zero guarantees. Feel free to open issues if those don&#39;t work though, I&#39;ll try to do what I can.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; When using pre-built executables, &lt;strong&gt;make sure that your pandoc version matches the version pandoc-crossref was built against, otherwise weird stuff will likely happen.&lt;/strong&gt; Feel free to open issues if there&#39;s a new version of pandoc available, for which there are no pandoc-crossref builds.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Linux and Windows binaries are packed with &lt;code&gt;upx&lt;/code&gt; (not macOS though, since upx apparently has questionable interactions with Apple&#39;s x86 emulation on A1 processors). If you don&#39;t like the overhead, and don&#39;t mind 40-megabyte binaries, you can unpack those manually with &lt;code&gt;upx -d pandoc-crossref&lt;/code&gt;. Also please notice that upx-packed binaries can break in some exotic environments, like empty chroot with no access to &lt;code&gt;/proc&lt;/code&gt;, etc.&lt;/p&gt; &#xA;&lt;p&gt;Also, for those feeling adventurous, the automatic builds for the latest commits are available. Latest builds can be found on the &lt;a href=&#34;https://github.com/lierdakil/pandoc-crossref/releases/tag/nightlies&#34;&gt;nightlies tag&lt;/a&gt; (despite the name, those aren&#39;t actually built nightly, but on each push instead)&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t trust random binaries downloaded off the Internet (which is completely reasonable), you&#39;re welcome to build from source. You have two preferred options for that: building from Hackage with &lt;code&gt;cabal-install&lt;/code&gt;, or from repository with &lt;code&gt;stack&lt;/code&gt; (you&#39;ll only need &lt;code&gt;stack&lt;/code&gt; and maybe &lt;code&gt;git&lt;/code&gt;). See below for build instructions.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re completely new to Haskell, the latter, i.e. building from repo with &lt;code&gt;stack&lt;/code&gt;, is the easier option in most cases.&lt;/p&gt; &#xA;&lt;p&gt;This repository is also a nix flake. You can use &lt;code&gt;nix&lt;/code&gt; to get it installed.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can use a version provided by a third party. At the time of writing, pandoc-crossref is provided on the following platforms (that I am aware of):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Arch Linux&lt;/li&gt; &#xA; &lt;li&gt;NixOS or Nix package manager (via &lt;code&gt;nixpkgs.haskellPackages&lt;/code&gt; attribute)&lt;/li&gt; &#xA; &lt;li&gt;MacOS (via &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;FreeBSD official binary package &lt;a href=&#34;https://www.freshports.org/textproc/hs-pandoc-crossref/&#34;&gt;textproc/hs-pandoc-crossref&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Any Linux distribution (via &lt;a href=&#34;https://docs.brew.sh/Linuxbrew&#34;&gt;Linuxbrew&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Gentoo Linux (via gentoo-haskell overlay)&lt;/li&gt; &#xA; &lt;li&gt;Windows (via &lt;a href=&#34;https://scoop.sh/&#34;&gt;scoop&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building from Hackage with &lt;code&gt;cabal-install&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You&#39;ll need to get GHC and &lt;code&gt;cabal-install&lt;/code&gt; installed first. By far the easiest way to get those is via &lt;a href=&#34;https://www.haskell.org/ghcup/&#34;&gt;ghcup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Describing using &lt;code&gt;ghcup&lt;/code&gt; is out of scope for this small guide, but TL;DR is this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ghcup install ghc&#xA;ghcup install cabal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After you got &lt;code&gt;cabal-install&lt;/code&gt; and &lt;code&gt;ghc&lt;/code&gt;, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cabal v2-update&#xA;cabal v2-install --install-method=copy pandoc pandoc-crossref&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will get &lt;code&gt;pandoc-crossref&lt;/code&gt; and &lt;code&gt;pandoc&lt;/code&gt; executables copied to &lt;code&gt;$HOME/.cabal/bin&lt;/code&gt; (by default, if not, check your cabal config file &lt;code&gt;installdir&lt;/code&gt; setting -- find out where your config file is by running &lt;code&gt;cabal help user-config&lt;/code&gt;), which you can then add to &lt;code&gt;PATH&lt;/code&gt; or copy/move the symlinks where you want them.&lt;/p&gt; &#xA;&lt;p&gt;Refer to cabal documentation if you need to build a particular version (TL;DR: add &lt;code&gt;--constraint pandoc-crossref==&amp;lt;version&amp;gt;&lt;/code&gt; to the installation command)&lt;/p&gt; &#xA;&lt;h3&gt;Building from repo with &lt;code&gt;stack&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;First of all, get &lt;code&gt;stack&lt;/code&gt; if you don&#39;t have it already: see the &lt;a href=&#34;https://docs.haskellstack.org/en/stable/README/#how-to-install&#34;&gt;official stack documentation&lt;/a&gt;. Note that &lt;code&gt;stack&lt;/code&gt; can also be installed via &lt;a href=&#34;https://www.haskell.org/ghcup/&#34;&gt;ghcup&lt;/a&gt;, and on Linux it is usually available in your package manager.&lt;/p&gt; &#xA;&lt;p&gt;If you have &lt;code&gt;git&lt;/code&gt;, you can now clone the repository and build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/lierdakil/pandoc-crossref.git&#xA;cd pandoc-crossref&#xA;git checkout &amp;lt;commit/tag/branch&amp;gt;&#xA;stack install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t have &lt;code&gt;git&lt;/code&gt;, just download the sources for your preferred commit/branch/tag via the GitHub interface, and run &lt;code&gt;stack install&lt;/code&gt; in the directory that contains &lt;code&gt;stack.yaml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;This will install pandoc-crossef executable to &lt;code&gt;$HOME/.local/bin&lt;/code&gt;. You might also want to separately run &lt;code&gt;stack install pandoc&lt;/code&gt; in the same directory (i.e. the root of the repository, the one containing &lt;code&gt;stack.yaml&lt;/code&gt; file)&lt;/p&gt; &#xA;&lt;h3&gt;Installing as a nix flake&lt;/h3&gt; &#xA;&lt;p&gt;TL;DR:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nix profile install github:lierdakil/pandoc-crossref&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will install the latest commit from the &lt;code&gt;master&lt;/code&gt; branch. You can also specify a commit, branch or tag, e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nix profile install github:lierdakil/pandoc-crossref/71c8c8508c222bf4110794457fdf0391b05fb9a9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also get the corresponding &lt;code&gt;pandoc&lt;/code&gt; version installed via&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nix profile install github:lierdakil/pandoc-crossref#pandoc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Since you will generally want both, there&#39;s an option to install both at the same time, too:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nix profile install github:lierdakil/pandoc-crossref#pandoc-with-crossref&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Aside from added convenience, this guarantees pandoc and pandoc-crossref versions to be consistent across updates.&lt;/p&gt; &#xA;&lt;p&gt;Finally, you can start a nix shell with both &lt;code&gt;pandoc&lt;/code&gt; and &lt;code&gt;pandoc-crossref&lt;/code&gt; using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nix develop github:lierdakil/pandoc-crossref&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: this uses &lt;a href=&#34;https://github.com/input-output-hk/haskell.nix&#34;&gt;haskell.nix&lt;/a&gt; infrastructure for builds (because Haskell support in Nix is borked, and has been for a long time). This means that unless you use their substituters, you&#39;ll build multiple GHC versions from source. To avoid that, add &lt;code&gt;https://cache.iog.io&lt;/code&gt; to &lt;code&gt;substituters&lt;/code&gt; in &lt;code&gt;nix.conf&lt;/code&gt; and &lt;code&gt;hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=&lt;/code&gt; to &lt;code&gt;trusted-public-keys&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also use pandoc-crossref&#39;s binary cache by adding &lt;code&gt;https://pandoc-crossref.cachix.org&lt;/code&gt; and &lt;code&gt;pandoc-crossref.cachix.org-1:LI9ABFTkGpPCTkUTzoopVSSpb1a26RSTJNMsqVbDtPM=&lt;/code&gt; to &lt;code&gt;substituters&lt;/code&gt; and &lt;code&gt;trusted-public-keys&lt;/code&gt; respectively.&lt;/p&gt; &#xA;&lt;p&gt;The flake includes both by default, so if you&#39;re a nix trusted user and accept these configurations during flake evaluation those will be used automatically.&lt;/p&gt; &#xA;&lt;h3&gt;Notice Fedora users&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;cabal-install&lt;/code&gt; package is not enough to build pandoc-crossref (see &lt;a href=&#34;https://github.com/lierdakil/pandoc-crossref/issues/132&#34;&gt;#132&lt;/a&gt;). To get a sane Haskell build environment, you need to install the &lt;code&gt;haskell-platform&lt;/code&gt; package (&lt;code&gt;dnf install haskell-platform&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;While on topic, if you don&#39;t want to rebuild pandoc itself from source, make sure you have &lt;code&gt;pandoc&lt;/code&gt; and &lt;code&gt;ghc-pandoc-devel&lt;/code&gt; dnf packages before attempting to build pandoc-crossref.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Usage information is available at &lt;a href=&#34;https://lierdakil.github.io/pandoc-crossref/&#34;&gt;https://lierdakil.github.io/pandoc-crossref/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Projects&lt;/h2&gt; &#xA;&lt;p&gt;The following projects use this filter:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gabyx/TechnicalMarkdown&#34;&gt;TechnicalMarkdown&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/lierdakil/pandoc-crossref/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;© 2016 Nikolay Yakimov et al&lt;/p&gt; &#xA;&lt;p&gt;Contributors (per GPL, holders of copyright on their respective contributions):&lt;/p&gt; &#xA;&lt;!-- BEGIN CONTRIBUTORS LIST --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nikolay Yakimov&lt;/li&gt; &#xA; &lt;li&gt;gesh&lt;/li&gt; &#xA; &lt;li&gt;Raphael Das Gupta&lt;/li&gt; &#xA; &lt;li&gt;Masamichi Hosoda&lt;/li&gt; &#xA; &lt;li&gt;Felix Yan&lt;/li&gt; &#xA; &lt;li&gt;Wlad&lt;/li&gt; &#xA; &lt;li&gt;Wandmalfarbe&lt;/li&gt; &#xA; &lt;li&gt;Silas Benson&lt;/li&gt; &#xA; &lt;li&gt;shutingrz&lt;/li&gt; &#xA; &lt;li&gt;Shaun Jackman&lt;/li&gt; &#xA; &lt;li&gt;scoavoux&lt;/li&gt; &#xA; &lt;li&gt;Salim B&lt;/li&gt; &#xA; &lt;li&gt;Matthew Salganik&lt;/li&gt; &#xA; &lt;li&gt;Jan-T. Brinkmann&lt;/li&gt; &#xA; &lt;li&gt;hseg&lt;/li&gt; &#xA; &lt;li&gt;Han Joosten&lt;/li&gt; &#xA; &lt;li&gt;Hadrien Mary&lt;/li&gt; &#xA; &lt;li&gt;Gleb Popov&lt;/li&gt; &#xA; &lt;li&gt;Gabriel Nützi&lt;/li&gt; &#xA; &lt;li&gt;David Arnold&lt;/li&gt; &#xA; &lt;li&gt;Chris Black&lt;/li&gt; &#xA; &lt;li&gt;Bart Mesuere&lt;/li&gt; &#xA; &lt;li&gt;Albert&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END CONTRIBUTORS LIST --&gt; &#xA;&lt;p&gt;This repository includes code from &lt;a href=&#34;https://github.com/roelvandijk/roman-numerals&#34;&gt;https://github.com/roelvandijk/roman-numerals&lt;/a&gt;, covered by a different license. See &lt;a href=&#34;https://github.com/lierdakil/pandoc-crossref/raw/master/licenses/LICENSE.roman-numerals&#34;&gt;licenses/LICENSE.roman-numerals&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
</feed>