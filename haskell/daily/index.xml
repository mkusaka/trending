<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-17T01:36:44Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ryb/snaplet-muttonchops</title>
    <updated>2023-07-17T01:36:44Z</updated>
    <id>tag:github.com,2023-07-17:/ryb/snaplet-muttonchops</id>
    <link href="https://github.com/ryb/snaplet-muttonchops" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Add this to your application state module:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;import Control.Category ((.))&#xA;import Data.Lens.Common&#xA;import Prelude hiding ((.))&#xA;import Snap.Snaplet&#xA;import Snap.Snaplet.Muttonchops&#xA;&#xA;-- The state&#xA;data App {&#xA;    -- ...&#xA;    _muttonchops :: Snaplet Muttonchops,&#xA;    -- ...&#xA;}&#xA;&#xA;instance HasMuttonchops App where&#xA;    getMuttonchops = getL (snapletValue . muttonchops)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And this to your app initialiser:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;app :: SnapletInit App App&#xA;app = makeSnaplet &#34;name&#34; &#34;description&#34; Nothing $ do&#xA;    -- ...&#xA;    mc &amp;lt;- nestSnaplet &#34;muttonchops&#34; muttonchops $ muttonchopsInit &#34;templates&#34;&#xA;    -- ...&#xA;    return $ App mc -- and other stuff&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use at your own risk.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>paolino/chip8</title>
    <updated>2023-07-17T01:36:44Z</updated>
    <id>tag:github.com,2023-07-17:/paolino/chip8</id>
    <link href="https://github.com/paolino/chip8" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;naive chip8 interpreter&lt;/h1&gt; &#xA;&lt;h2&gt;implemented&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;IBM logo renderer&lt;/li&gt; &#xA; &lt;li&gt;IBM logo assembler&lt;/li&gt; &#xA; &lt;li&gt;DSL to compile to chip8 programs (limited opcodes)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;install cabal via ghcup&lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;cabal update&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;run&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;cabal run chip8&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;will produce a &lt;code&gt;ch8&lt;/code&gt; executable in the roms folder&lt;/li&gt; &#xA; &lt;li&gt;will load and run that executable&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>