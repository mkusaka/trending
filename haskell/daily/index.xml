<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-24T01:34:45Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jtobin/mighty-metropolis</title>
    <updated>2022-09-24T01:34:45Z</updated>
    <id>tag:github.com,2022-09-24:/jtobin/mighty-metropolis</id>
    <link href="https://github.com/jtobin/mighty-metropolis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The classic Metropolis sampling algorithm.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mighty-metropolis&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://travis-ci.org/jtobin/mighty-metropolis&#34;&gt;&lt;img src=&#34;https://secure.travis-ci.org/jtobin/mighty-metropolis.png&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://hackage.haskell.org/package/mighty-metropolis&#34;&gt;&lt;img src=&#34;https://img.shields.io/hackage/v/mighty-metropolis.svg?sanitize=true&#34; alt=&#34;Hackage Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jtobin/mighty-metropolis/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The classic Metropolis algorithm. Wander around parameter space according to a simple spherical Gaussian distribution.&lt;/p&gt; &#xA;&lt;p&gt;Exports a &lt;code&gt;mcmc&lt;/code&gt; function that prints a trace to stdout, a &lt;code&gt;chain&lt;/code&gt; function for collecting results in memory, and a &lt;code&gt;metropolis&lt;/code&gt; transition operator that can be used more generally.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;em&gt;test&lt;/em&gt; directory for example usage.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import Numeric.MCMC.Metropolis&#xA;&#xA;rosenbrock :: [Double] -&amp;gt; Double&#xA;rosenbrock [x0, x1] = negate (5  *(x1 - x0 ^ 2) ^ 2 + 0.05 * (1 - x0) ^ 2)&#xA;&#xA;main :: IO ()&#xA;main = withSystemRandom . asGenIO $ mcmc 10000 1 [0, 0] rosenbrock&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/spa/u0s6617yxinm2ca/osecfv_w.png&#34; alt=&#34;trace&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;mighty-metropolis&lt;/em&gt; is a member of the &lt;a href=&#34;https://github.com/jtobin/declarative&#34;&gt;declarative&lt;/a&gt; suite of libraries, containing a bunch of MCMC algorithms that play nicely together.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>diagrams/diagrams-core</title>
    <updated>2022-09-24T01:34:45Z</updated>
    <id>tag:github.com,2022-09-24:/diagrams/diagrams-core</id>
    <link href="https://github.com/diagrams/diagrams-core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Core types and utilities&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;http://travis-ci.org/diagrams/diagrams-core&#34;&gt;&lt;img src=&#34;https://travis-ci.org/diagrams/diagrams-core.png?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The core modules defining the basic data structures and algorithms for &lt;a href=&#34;http://projects.haskell.org/diagrams&#34;&gt;diagrams&lt;/a&gt;, a Haskell embedded domain-specific language for compositional, declarative drawing.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ivasilov/interviewStreetSolutions</title>
    <updated>2022-09-24T01:34:45Z</updated>
    <id>tag:github.com,2022-09-24:/ivasilov/interviewStreetSolutions</id>
    <link href="https://github.com/ivasilov/interviewStreetSolutions" rel="alternate"></link>
    <summary type="html">&lt;p&gt;solutions for the InterviewStreet challenges in Haskell&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;interviewStreetSolutions&lt;/h1&gt; &#xA;&lt;p&gt;solutions for the InterviewStreet challenges in Haskell&lt;/p&gt;</summary>
  </entry>
</feed>