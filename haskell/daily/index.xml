<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-06T01:34:18Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>input-output-hk/iohk-monitoring-framework</title>
    <updated>2022-09-06T01:34:18Z</updated>
    <id>tag:github.com,2022-09-06:/input-output-hk/iohk-monitoring-framework</id>
    <link href="https://github.com/input-output-hk/iohk-monitoring-framework" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This framework provides logging, benchmarking and monitoring.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;iohk-monitoring-framework&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/input-output-hk/iohk-monitoring-framework/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-pre/input-output-hk/iohk-monitoring-framework.svg?sanitize=true&#34; alt=&#34;Release version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://buildkite.com/input-output-hk/iohk-monitoring-framework&#34;&gt;&lt;img src=&#34;https://badge.buildkite.com/1cc7939a1fed4972c15b8f87d510e0404b0eb65d73cfd1e30b.svg?branch=master&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/input-output-hk/iohk-monitoring-framework?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/input-output-hk/iohk-monitoring-framework/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This framework provides logging, benchmarking and monitoring.&lt;/p&gt; &#xA;&lt;h2&gt;documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation of the &lt;a href=&#34;https://github.com/input-output-hk/iohk-monitoring-framework/wiki/IOHK-Monitoring.pdf&#34;&gt;source code and tests&lt;/a&gt; in PDF format. Please, download the PDF file and open it in an external viewer. It contains links for easier navigation in the source code. Those links are not active in the online viewer.&lt;/p&gt; &#xA;&lt;p&gt;Slides of our presentations are available in &lt;a href=&#34;https://input-output-hk.github.io/iohk-monitoring-framework/&#34;&gt;html&lt;/a&gt; format.&lt;/p&gt; &#xA;&lt;p&gt;And, introductory one-pagers on logging and benchmarking are available in &lt;a href=&#34;https://input-output-hk.github.io/iohk-monitoring-framework/&#34;&gt;pdf&lt;/a&gt; format.&lt;/p&gt; &#xA;&lt;h2&gt;module dependencies&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/input-output-hk/iohk-monitoring-framework/master/docs/OverviewModules.png&#34; alt=&#34;Overview of modules&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;building and testing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;cabal new-build all&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cabal new-test all&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;examples&lt;/h2&gt; &#xA;&lt;p&gt;Some examples are available in the directory &lt;a href=&#34;https://github.com/input-output-hk/iohk-monitoring-framework/tree/master/iohk-monitoring/examples&#34;&gt;examples&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;simple&lt;/code&gt; - run with &lt;code&gt;cabal new-run example-simple&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;complex&lt;/code&gt; - run with &lt;code&gt;cabal new-run example-complex&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These showcase the usage of this framework in an application. The &lt;em&gt;complex&lt;/em&gt; example includes &lt;code&gt;EKGView&lt;/code&gt; (&lt;a href=&#34;http://localhost:12789&#34;&gt;http://localhost:12789&lt;/a&gt;) and the configuration editor (&lt;a href=&#34;http://localhost:13789&#34;&gt;http://localhost:13789&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/input-output-hk/iohk-monitoring-framework/master/docs/ConfigEditor.png&#34; alt=&#34;Edit runtime configuration&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;development&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cabal new-build all&lt;/code&gt; and &lt;code&gt;cabal new-test all&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ghcid -c &#34;cabal new-repl&#34;&lt;/code&gt; watches for file changes and recompiles them immediately&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>