<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-05T01:45:42Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>haskell/cabal</title>
    <updated>2022-06-05T01:45:42Z</updated>
    <id>tag:github.com,2022-06-05:/haskell/cabal</id>
    <link href="https://github.com/haskell/cabal" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official upstream development repository for Cabal and cabal-install&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cabal&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hackage.haskell.org/package/Cabal&#34;&gt;&lt;img src=&#34;https://img.shields.io/hackage/v/Cabal.svg?label=Hackage&#34; alt=&#34;Hackage version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.stackage.org/package/Cabal&#34;&gt;&lt;img src=&#34;https://www.stackage.org/package/Cabal/badge/lts?label=Stackage&#34; alt=&#34;Stackage version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cabal.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;http://readthedocs.org/projects/cabal/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://web.libera.chat/#hackage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-via%20libera-brightgreen.svg?sanitize=true&#34; alt=&#34;IRC chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#hackage:libera.chat&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-via%20matrix-brightgreen.svg?sanitize=true&#34; alt=&#34;Matrix chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://www.haskell.org/cabal/images/Cabal-light.png&#34; align=&#34;right&#34;&gt; &#xA;&lt;p&gt;This Cabal Git repository contains the following packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell/cabal/master/Cabal/README.md&#34;&gt;Cabal&lt;/a&gt;: the Cabal library package (&lt;a href=&#34;https://raw.githubusercontent.com/haskell/cabal/master/Cabal/LICENSE&#34;&gt;license&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell/cabal/master/Cabal-syntax/README.md&#34;&gt;Cabal-syntax&lt;/a&gt;: the &lt;code&gt;.cabal&lt;/code&gt; file format library (&lt;a href=&#34;https://raw.githubusercontent.com/haskell/cabal/master/Cabal-syntax/LICENSE&#34;&gt;license&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell/cabal/master/cabal-install/README.md&#34;&gt;cabal-install&lt;/a&gt;: the package containing the &lt;code&gt;cabal&lt;/code&gt; tool (&lt;a href=&#34;https://raw.githubusercontent.com/haskell/cabal/master/cabal-install/LICENSE&#34;&gt;license&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The canonical upstream repository is located at &lt;a href=&#34;https://github.com/haskell/cabal&#34;&gt;https://github.com/haskell/cabal&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing cabal-install (by downloading the binary)&lt;/h2&gt; &#xA;&lt;p&gt;Prebuilt binary releases can be obtained from &lt;a href=&#34;https://www.haskell.org/cabal/download.html&#34;&gt;https://www.haskell.org/cabal/download.html&lt;/a&gt;. The &lt;code&gt;cabal-install&lt;/code&gt; binary download for your platform should contain the &lt;code&gt;cabal&lt;/code&gt; executable.&lt;/p&gt; &#xA;&lt;h2&gt;Installing cabal-install (preferred, with cabal-install)&lt;/h2&gt; &#xA;&lt;p&gt;Assuming that you have a pre-existing, recent version of &lt;code&gt;cabal-install&lt;/code&gt;, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cabal install cabal-install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To get the latest version of &lt;code&gt;cabal-install&lt;/code&gt;. (You may want to &lt;code&gt;cabal update&lt;/code&gt; first.)&lt;/p&gt; &#xA;&lt;p&gt;To install the latest version from the Git repository, clone the Git repository and then run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cabal install --project-file=cabal.project.release cabal-install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installing cabal-install without cabal-install&lt;/h2&gt; &#xA;&lt;p&gt;Assuming you don&#39;t have a pre-existing copy of &lt;code&gt;cabal-install&lt;/code&gt;, look into &lt;a href=&#34;https://raw.githubusercontent.com/haskell/cabal/master/bootstrap&#34;&gt;&lt;code&gt;bootstrap&lt;/code&gt;&lt;/a&gt; directory.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>brendanhay/amazonka</title>
    <updated>2022-06-05T01:45:42Z</updated>
    <id>tag:github.com,2022-06-05:/brendanhay/amazonka</id>
    <link href="https://github.com/brendanhay/amazonka" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A comprehensive Amazon Web Services SDK for Haskell.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://www.brendanhay.nz/amazonka&#34;&gt;Amazonka&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/MPL-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MPL%202.0-blue.svg?sanitize=true&#34; alt=&#34;MPL2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://hackage.haskell.org/package/amazonka&#34;&gt;&lt;img src=&#34;https://img.shields.io/hackage/v/amazonka.svg?sanitize=true&#34; alt=&#34;Hackage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/brendanhay/amazonka/actions&#34;&gt;&lt;img src=&#34;https://github.com/brendanhay/amazonka/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/brendanhay/amazonka/actions&#34;&gt;&lt;img src=&#34;https://github.com/brendanhay/amazonka/workflows/gen/badge.svg?sanitize=true&#34; alt=&#34;Gen&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/brendanhay/amazonka/actions&#34;&gt;&lt;img src=&#34;https://github.com/brendanhay/amazonka/workflows/docs/badge.svg?sanitize=true&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;An Amazon Web Services SDK for Haskell with support for most public services. Parts of the code contained in this repository are auto-generated and automatically kept up to date with Amazon&#39;s latest service APIs.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can find the latest Haddock documentation for each respective library on the &lt;a href=&#34;https://www.brendanhay.nz/amazonka&#34;&gt;Amazonka&lt;/a&gt; website.&lt;/li&gt; &#xA; &lt;li&gt;A release changelog can be found in &lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/lib/amazonka/CHANGELOG.md&#34;&gt;lib/amazonka/CHANGELOG.md&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For problems, comments, or feedback please create an issue &lt;a href=&#34;https://github.com/brendanhay/amazonka/issues&#34;&gt;here on GitHub&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/#directory-layout&#34;&gt;Directory Layout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/#supported-platforms-and-ghc-versions&#34;&gt;Supported Platforms and GHC Versions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/#building-the-project&#34;&gt;Building the Project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/#building-the-documentation&#34;&gt;Building the Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/#running-the-code-generator&#34;&gt;Running the Code Generator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/#code-formatting&#34;&gt;Code Formatting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/#third-party-packages&#34;&gt;Third Party Packages&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Amazonka is licensed under the &lt;a href=&#34;http://www.mozilla.org/MPL/&#34;&gt;Mozilla Public License Version 2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The AWS service descriptions are licensed under Apache 2.0. Source files derived from the service descriptions contain an additional licensing clause in their header.&lt;/p&gt; &#xA;&lt;h2&gt;Directory Layout&lt;/h2&gt; &#xA;&lt;p&gt;This repository is organised into the following directory structure:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/lib/amazonka&#34;&gt;&lt;code&gt;lib/amazonka&lt;/code&gt;&lt;/a&gt;: The main library containing setup, authentication, and send logic. This will be your primary dependency.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lib/service/amazonka-*&lt;/code&gt;: A library per supported Amazon Web Service, you&#39;ll need to add a dependency on each selected service library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/lib/amazonka-core&#34;&gt;&lt;code&gt;lib/amazonka-core&lt;/code&gt;&lt;/a&gt;: The &lt;code&gt;amazonka-core&lt;/code&gt; library upon which each of the services depends.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/lib/amazonka-test&#34;&gt;&lt;code&gt;lib/amazonka-test&lt;/code&gt;&lt;/a&gt;: Common test functionality.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/examples&#34;&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/a&gt;: Basic examples for using the service libraries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/configs&#34;&gt;&lt;code&gt;configs&lt;/code&gt;&lt;/a&gt;: Service configuration, templates, and assets used by the code generator.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/docs&#34;&gt;&lt;code&gt;docs&lt;/code&gt;&lt;/a&gt;: The website documentation and related build code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/gen&#34;&gt;&lt;code&gt;gen&lt;/code&gt;&lt;/a&gt;: The code and configuration generators.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/nix&#34;&gt;&lt;code&gt;nix&lt;/code&gt;&lt;/a&gt;: Nix configuration code for toolchain packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/scripts&#34;&gt;&lt;code&gt;scripts&lt;/code&gt;&lt;/a&gt;: Scripts to manage the project, such as the release lifecycle.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/tools&#34;&gt;&lt;code&gt;tools&lt;/code&gt;&lt;/a&gt;: Custom bazel rules.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/third_party&#34;&gt;&lt;code&gt;third_party&lt;/code&gt;&lt;/a&gt;: Third party packages and patches.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Platforms and GHC Versions&lt;/h2&gt; &#xA;&lt;p&gt;GHC versions &lt;code&gt;8.8.4&lt;/code&gt; and &lt;code&gt;8.10.7&lt;/code&gt; are officially supported and tested on NixOS, Ubuntu, and macOS. GHC &lt;code&gt;8.6.5&lt;/code&gt; may also work, but is not tested by our continuous integration pipeline.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;This repository is built using a combination of &lt;a href=&#34;https://nixos.org/nix/&#34;&gt;Nix&lt;/a&gt; and your choice of &lt;a href=&#34;https://bazel.build&#34;&gt;Bazel&lt;/a&gt; or Cabal. If you&#39;re just using Amazonka as a git dependency in your Cabal or Stack project, you can skip these steps. But if you plan on contributing to the codebase - welcome, read on!&lt;/p&gt; &#xA;&lt;h3&gt;1. Clone this repository&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:brendanhay/amazonka.git&#xA;cd amazonka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Setup Nix&lt;/h3&gt; &#xA;&lt;p&gt;Building the code in this repository requires various development dependencies (e.g. &lt;a href=&#34;https://nixos.org/nix/&#34;&gt;Nix&lt;/a&gt;, &lt;a href=&#34;https://bazel.build&#34;&gt;Bazel&lt;/a&gt;, &lt;a href=&#34;https://www.haskell.org/ghc/&#34;&gt;GHC&lt;/a&gt;.)&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://nixos.org/nix/&#34;&gt;Nix&lt;/a&gt; package manager is used to obtain and build the other dependencies in a &lt;a href=&#34;https://sre.google/sre-book/release-engineering/#hermetic-builds-nqslhnid&#34;&gt;hermetic&lt;/a&gt; environment. You can install Nix by following the &lt;a href=&#34;https://nixos.org/guides/install-nix.html&#34;&gt;official installation instructions&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh &amp;lt;(curl -L https://nixos.org/nix/install) --daemon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once Nix is setup, you can enable the &lt;a href=&#34;https://amazonka.cachix.org&#34;&gt;cache&lt;/a&gt; to avoid building dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nix-env -iA cachix -f https://cachix.org/api/v1/install&#xA;cachix use amazonka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Enter a Nix Shell&lt;/h3&gt; &#xA;&lt;p&gt;The build tools are installed and activated upon entering a &lt;a href=&#34;https://nixos.org/nix/&#34;&gt;Nix&lt;/a&gt; shell, which is achieved by running the following command in the root of the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nix-shell&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also enter a shell and explicitly specify the GHC version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nix-shell --argstr ghcVersion 884&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally, if you have &lt;a href=&#34;https://direnv.net&#34;&gt;Direnv&lt;/a&gt; and &lt;a href=&#34;https://github.com/nix-community/lorri&#34;&gt;lorri&lt;/a&gt; installed you can use the provided &lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/.envrc&#34;&gt;.envrc&lt;/a&gt; instead, which will also add the &lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/scripts&#34;&gt;scripts&lt;/a&gt; directory to your &lt;code&gt;PATH&lt;/code&gt;. You can extend this by adding your own uncommitted &lt;code&gt;.envrc.local&lt;/code&gt; file. See the &lt;a href=&#34;https://github.com/direnv/direnv/wiki&#34;&gt;Direnv Wiki&lt;/a&gt; for various recipes.&lt;/p&gt; &#xA;&lt;h2&gt;Building the Project&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The following commands assume you&#39;re already in a nix-shell outlined in the previous step.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Cabal&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re familiar with Cabal, you can build &lt;code&gt;amazonka-*&lt;/code&gt; packages via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cabal build amazonka amazonka-s3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or the entire project (which will take a very long time!):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cabal build all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Bazel&lt;/h3&gt; &#xA;&lt;p&gt;Alternatively, if you plan on contributing to the project or want to perform code generation, you will need to familiarise yourself with &lt;a href=&#34;https://bazel.build&#34;&gt;Bazel&lt;/a&gt;. You can build packages by specifying one or more targets using &lt;a href=&#34;https://docs.bazel.build/versions/4.1.0/build-ref.html#labels&#34;&gt;Bazel&#39;s label&lt;/a&gt; syntax:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bazel build //lib/amazonka //lib/services/amazonka-s3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or build all Haskell libraries in the project using the &lt;code&gt;...&lt;/code&gt; wildcard:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bazel build //lib/...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To view what targets are available in the workspace:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bazel query //...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;By default, the &lt;code&gt;bazel&lt;/code&gt; command will use the same GHC version as the Nix shell&#39;s &lt;code&gt;ghcVersion&lt;/code&gt; argument. You can choose a different GHC version using &lt;code&gt;nix-shell --argstr ghcVersion 884&lt;/code&gt; - which is just a synonym for &lt;code&gt;bazel build --//tools/ghc:version=884&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Building the Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/docs&#34;&gt;docs&lt;/a&gt; Bazel package contains the Haddock target and Hugo static site definition and markdown content. To build the site locally, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bazel build //docs:bundle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can serve the documentation site locally on &lt;code&gt;http://localhost:1313&lt;/code&gt; by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bazel run //docs:serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running the Code Generator&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/gen&#34;&gt;gen&lt;/a&gt; Bazel package contains code generators for synthesising Haskell data types, packages, and configuration from the botocore service definitions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/scripts/generate&#34;&gt;scripts/generate&lt;/a&gt; will run the code generator for all services configured in &lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/config/services&#34;&gt;config/services&lt;/a&gt;, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./scripts/generate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, you can selectively run the generator on one or more services:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./scripts/generate ec2 s3 iam&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To update the &lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/botocore&#34;&gt;botocore&lt;/a&gt; service definitions used by the generator, you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./scripts/update-botocore&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/scripts/generate-configs&#34;&gt;scripts/generate-configs&lt;/a&gt; will run the config generator to produce placeholder &lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/config/services&#34;&gt;config/serivces&lt;/a&gt; configurations for the version of botocore pinned in the &lt;a href=&#34;https://raw.githubusercontent.com/brendanhay/amazonka/main/WORKSPACE&#34;&gt;WORKSPACE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To generate any missing service configurations:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./scripts/generate-configs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Service configurations generated in this way are intended as examples only and the resulting &lt;code&gt;configs/services/&amp;lt;name&amp;gt;.json:libraryName&lt;/code&gt; (Haskell package name) and &lt;code&gt;configs/annexes/&amp;lt;name&amp;gt;.json:serviceAbbreviation&lt;/code&gt; (Haskell package namespace) should be manually verified and curated as necessary.&lt;/p&gt; &#xA;&lt;p&gt;For pull requests which affect generated output please &lt;em&gt;do not include&lt;/em&gt; the regenerated &lt;code&gt;amazonka-*&lt;/code&gt; packages, only commit updates to the build rules, documentation, generator, and related configuration. This ensures the Continuous Integration process is the single source of truth for the generated code and reduces noise in pull requests, keeping them reviewable and focused on actual generator code/logic changes.&lt;/p&gt; &#xA;&lt;h2&gt;Code Formatting&lt;/h2&gt; &#xA;&lt;p&gt;Please use &lt;code&gt;./scripts/format&lt;/code&gt; frequently - it&#39;s OK, I hate 2 spaces too, we&#39;re in this together.&lt;/p&gt; &#xA;&lt;h2&gt;Third Party Packages&lt;/h2&gt; &#xA;&lt;p&gt;When naming an additional library which provides supplemental functionality to &lt;code&gt;amazonka&lt;/code&gt;, if you want to use the &lt;code&gt;amazonka-*&lt;/code&gt; namespace, then please consider prefixing your package names with &lt;code&gt;amazonka-contrib-*&lt;/code&gt;. For example, &lt;a href=&#34;https://hackage.haskell.org/package/amazonka-contrib-rds-utils&#34;&gt;amazonka-contrib-rds-utils&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This minimises potential future collisions with auto-generated package names and new AWS service and product releases.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>input-output-hk/goblins</title>
    <updated>2022-06-05T01:45:42Z</updated>
    <id>tag:github.com,2022-06-05:/input-output-hk/goblins</id>
    <link href="https://github.com/input-output-hk/goblins" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Genetic Algorithm based randomized testing&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;(with suitable, recent version of &lt;code&gt;cabal&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cabal new-build&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>