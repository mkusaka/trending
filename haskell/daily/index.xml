<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-08T01:33:58Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>google/codeworld</title>
    <updated>2023-12-08T01:33:58Z</updated>
    <id>tag:github.com,2023-12-08:/google/codeworld</id>
    <link href="https://github.com/google/codeworld" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Educational computer programming environment using Haskell&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CodeWorld&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/google/codeworld&#34;&gt;&lt;img src=&#34;https://travis-ci.org/google/codeworld.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/google/codeworld/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/google/codeworld/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;CodeWorld is an educational environment using Haskell. It provides a simple mathematical model for geometric figures, animations, and interactive and multi-player games. The web-based programming environment supports this educational mission with a zero-setup editor and compiler, easy sharing and cloud storage of projects, and the ability to run programs right in the web browser using GHCJS.&lt;/p&gt; &#xA;&lt;p&gt;There are several variants of CodeWorld available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.world/&#34;&gt;CodeWorld&lt;/a&gt; uses an educational variant of the Haskell language and libraries, designed to support mathematics instruction.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.world/haskell&#34;&gt;CodeWorld Haskell&lt;/a&gt; is built against standard Haskell instead of the educational variant, to build programs which can either be on the web site with GHCJS, or compiled natively with the &lt;code&gt;codeworld-api&lt;/code&gt; package and &lt;code&gt;blank-canvas&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.world/blocks&#34;&gt;CodeWorld Blocks&lt;/a&gt; provides a drag-and-drop programming user interface for younger students to build programs with CodeWorld. This interface still has some bugs, and isn&#39;t recommended for use.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Status&lt;/h1&gt; &#xA;&lt;p&gt;CodeWorld is stable and has been used in schools for years! See &lt;a href=&#34;https://github.com/google/codeworld/raw/master/docs/Users.md&#34;&gt;the users page&lt;/a&gt; for a partial list. We&#39;re constantly improving the environment, though. Breaking changes, when necessary, are scheduled to occur between typical (U.S.) K-12 school semesters, to minimize disruption of existing classes.&lt;/p&gt; &#xA;&lt;p&gt;Google is distributing the code for CodeWorld, but CodeWorld is not an official Google project, and Google provides no support for it. Instead, questions about the project or code should be asked to the &lt;a href=&#34;https://groups.google.com/forum/#!members/codeworld-discuss&#34;&gt;codeworld-discuss mailing list&lt;/a&gt;. A student-friendly question and answer forum is also available at &lt;a href=&#34;http://help.code.world&#34;&gt;http://help.code.world&lt;/a&gt; for questions about programs written &lt;em&gt;using&lt;/em&gt; CodeWorld, rather than questions about building or modifying CodeWorld itself.&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;Just visit &lt;a href=&#34;https://code.world&#34;&gt;https://code.world&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;p&gt;There is no need to download or install anything to use CodeWorld. This repository will be useful if you prefer to fork and modify the CodeWorld environment, or contribute changes.&lt;/p&gt; &#xA;&lt;h1&gt;Discuss and Learn More&lt;/h1&gt; &#xA;&lt;p&gt;To discuss and hear announcements about CodeWorld, subscribe to the mailing list at &lt;a href=&#34;https://groups.google.com/forum/#!forum/codeworld-discuss&#34;&gt;https://groups.google.com/forum/#!forum/codeworld-discuss&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The mailing list should be used to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hear announcements about and discuss upcoming changes and features.&lt;/li&gt; &#xA; &lt;li&gt;Ask questions about using the system, and give feedback about your experiences.&lt;/li&gt; &#xA; &lt;li&gt;Share interesting ways of using the site, related classroom activities, and more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To report bugs or file formal feature requests, try &lt;a href=&#34;https://github.com/google/codeworld/issues&#34;&gt;https://github.com/google/codeworld/issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;There is a slight bit of paperwork involved in contributing to CodeWorld. You&#39;ll need to agree to a Contributor License Agreement. See &lt;a href=&#34;https://raw.githubusercontent.com/google/codeworld/master/CONTRIBUTING.md&#34;&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h1&gt;Build and Deployment&lt;/h1&gt; &#xA;&lt;p&gt;Building and running CodeWorld can be a lengthy process, but is automated using the installation scripts in the root directory, which work on most forms of Linux, including Debian, Ubuntu, RedHat, and CentOS. The step by step instructions are as follows:&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;Read the caveats, explained below.&lt;/li&gt; &#xA; &lt;li&gt;Change to the root directory of the project.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./install.sh&lt;/code&gt; to set up the project.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./run.sh&lt;/code&gt; to start the server.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can now access the CodeWorld system at &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you make changes to CodeWorld, you can rebuild it without rebuilding the dependencies:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Change to the root directory of the project.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./build.sh&lt;/code&gt; to recompile just CodeWorld itself, using previously installed tools and libraries.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./run.sh&lt;/code&gt; to start the server.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s also possible to build and run the server using Docker. This is not yet the recommended way to develop with CodeWorld, but it could get there soon.&lt;/p&gt; &#xA;&lt;p&gt;Commands to try for docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker build -t codeworld https://github.com/google/codeworld.git&#xA;sudo docker run -p 80:8080 -t codeworld&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For now, the docker container has no way to access a client id, mount a shared NFS drive, or other setup steps. It will work, but it won&#39;t be complete. In the future, this should become the standard way to deploy CodeWorld.&lt;/p&gt; &#xA;&lt;h3&gt;Stack&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;stack.yaml&lt;/code&gt; in the project&#39;s root is present to partially support Intero and &lt;a href=&#34;https://travis-ci.org/google/codeworld/&#34;&gt;Travis CI&lt;/a&gt;. On Travis, &lt;code&gt;codeworld-compiler&lt;/code&gt; tests do not run.&lt;/p&gt; &#xA;&lt;p&gt;Building and running CodeWorld locally with Stack is unsupported, and in fact doesn&#39;t work. Stack cannot yet substitute for the shell scripts or docker usage above.&lt;/p&gt; &#xA;&lt;h2&gt;Caveats&lt;/h2&gt; &#xA;&lt;h3&gt;Authentication&lt;/h3&gt; &#xA;&lt;p&gt;CodeWorld offers two modes of authentication or the ability to run with authentication disabled with reduced functionality. The two methods provided are as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/codeworld/master/#google-auth&#34;&gt;Google authentication&lt;/a&gt;: this method uses the Google API and Google accounts and is the mode of authentication enabled in the live CodeWorld site; this allows CodeWorld to offload account and credential management to a third party&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/codeworld/master/#local-auth&#34;&gt;Local authentication&lt;/a&gt;: this method uses a simple local database of account information and JWT-based stateless authentication in the browser; this is useful for applications where minimal external dependencies is required&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Running CodeWorld in one of these two modes allows users to save and manage their projects and folders. With no authentication enabled, users are able to write, build and run code but lose the ability to save and manage projects and folders.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a name=&#34;google-auth&#34;&gt;&lt;/a&gt; Google authentication&lt;/h4&gt; &#xA;&lt;p&gt;For Google authentication to work, you will need to obtain a Google API key and store it in &lt;code&gt;web/clientId.txt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get a Google API key for your CodeWorld installation, please consult the following resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/resource-manager/docs/creating-managing-projects&#34;&gt;Creating a project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://support.google.com/cloud/answer/6158849?hl=en&#34;&gt;Creating an OAuth client ID&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once you have a Google API key, copy and paste it into &lt;code&gt;web/clientId.txt&lt;/code&gt;. A running CodeWorld instance will immediately pick up changes to this file.&lt;/p&gt; &#xA;&lt;p&gt;In general, the Google authentication system will be the easiest system to maintain since no local password stores are required. This is the mechanism used by the official, live version of CodeWorld.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a name=&#34;local-auth&#34;&gt;&lt;/a&gt; Local authentication&lt;/h4&gt; &#xA;&lt;p&gt;For applications in which external dependencies, such as Google accounts, are not acceptable, we provide a simple local authentication system:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uses a SQLite3 database&lt;/li&gt; &#xA; &lt;li&gt;Uses good security practices by storing only BCrypt hashes of passwords&lt;/li&gt; &#xA; &lt;li&gt;Uses JWT-based stateless authentication&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This provides a local authentication system with very similar workflows to Google authentication (i.e. stateless client-side sessions). Currently, no web-based administrative interface is provided. Instead, you can use the &lt;code&gt;codeworld-auth&lt;/code&gt; CLI tool to manage accounts.&lt;/p&gt; &#xA;&lt;p&gt;The local authentication system may be useful for situations where an instructor cannot reasonably expect all students to have a valid Google account and in which the instructor is willing to deploy a local CodeWorld stack.&lt;/p&gt; &#xA;&lt;h5&gt;Create account database&lt;/h5&gt; &#xA;&lt;p&gt;Local authentication will be enabled if a &lt;code&gt;codeworld-auth.db&lt;/code&gt; file is present in the application&#39;s root directory. To create this database, run the following from the root of the Git repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;build/bin/codeworld-auth init-accounts -d codeworld-auth.db&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create an empty account database with no accounts.&lt;/p&gt; &#xA;&lt;h5&gt;Create one or more user accounts&lt;/h5&gt; &#xA;&lt;p&gt;Assuming you have already created an account database as described above, you can create a new account as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;build/bin/codeworld-auth create-account -d codeworld-auth.db johndoe Expired&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create a new account with user ID &lt;code&gt;johndoe&lt;/code&gt; with a randomly generated password. The account will be set to &#34;Expired&#34; which means the user will be prompted to enter a new password at next sign-in time.&lt;/p&gt; &#xA;&lt;p&gt;Other subcommands are provided for updating and deleting accounts etc. For help:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;build/bin/codeworld-auth --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Create a JWT secret&lt;/h5&gt; &#xA;&lt;p&gt;To use local authentication, you will also need to generate a JWT secret stored in a file named &lt;code&gt;codeworld-auth.txt&lt;/code&gt;. This is used to sign JWT tokens passed back and forth between the server and the browser. From the Git repository&#39;s root directory, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;build/bin/codeworld-auth generate-secret -s codeworld-auth.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will generate a new random JWT signing key. The server should not expose this secret to external users.&lt;/p&gt; &#xA;&lt;h3&gt;Swap Space&lt;/h3&gt; &#xA;&lt;p&gt;If you are installing CodeWorld on a virtual server, be aware that the default RAM on these servers is often not sufficient for GHC. CodeWorld needs to compile very large Haskell projects during its installation. The following should be sufficient to resolve any out-of-memory problems you encounter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo dd if=/dev/zero of=/swap bs=1024 count=2097152&#xA;$ sudo mkswap /swap&#xA;$ sudo swapon /swap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This creates a 2 GB swap file to increase available virtual memory. Installation with a swap file may be slow, but it will succeed. (Unless you intend to write very large programs in CodeWorld, it&#39;s usually safe to remove the swap file after running the server for the first time.)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>yoshio-kinoshita/haskell</title>
    <updated>2023-12-08T01:33:58Z</updated>
    <id>tag:github.com,2023-12-08:/yoshio-kinoshita/haskell</id>
    <link href="https://github.com/yoshio-kinoshita/haskell" rel="alternate"></link>
    <summary type="html">&lt;p&gt;my first haskell&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>