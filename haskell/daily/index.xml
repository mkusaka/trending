<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-18T01:41:50Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tweag/asterius</title>
    <updated>2022-08-18T01:41:50Z</updated>
    <id>tag:github.com,2022-08-18:/tweag/asterius</id>
    <link href="https://github.com/tweag/asterius" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Haskell to WebAssembly compiler&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Asterius: A Haskell to WebAssembly compiler&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/terrorjack/asterius&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/terrorjack/asterius.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/tweag/asterius/workflows/pipeline/badge.svg?branch=master&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://asterius.netlify.app&#34;&gt;&lt;img src=&#34;https://api.netlify.com/api/v1/badges/e7cfe6ef-b0e6-4a17-bd74-8bce6063f147/deploy-status&#34; alt=&#34;Netlify Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Asterius is a Haskell to WebAssembly compiler based on GHC. It compiles Haskell source files or Cabal executable targets to WebAssembly+JavaScript code which can be run in &lt;a href=&#34;https://nodejs.org&#34;&gt;Node.js&lt;/a&gt; or browsers. It features seamless JavaScript interop (lightweight Async FFI with &lt;code&gt;Promise&lt;/code&gt; support) and small output code (~600KB &lt;code&gt;hello.wasm&lt;/code&gt; for a &lt;a href=&#34;https://hackage.haskell.org/package/hello-1.0.0.2&#34;&gt;Hello World&lt;/a&gt;). A lot of common Haskell packages like &lt;code&gt;lens&lt;/code&gt; are already supported. The project is actively maintained by &lt;a href=&#34;https://tweag.io/&#34;&gt;Tweag I/O&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Demos&lt;/h2&gt; &#xA;&lt;p&gt;Demos of popular Haskell apps, running in your browser:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://asterius.netlify.app/demo/diagrams/hilbert.html&#34;&gt;&lt;code&gt;diagrams&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://asterius.netlify.app/demo/ormolu/WebOrmolu.html&#34;&gt;&lt;code&gt;ormolu&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://asterius.netlify.app/demo/pandoc/pandoc.html&#34;&gt;&lt;code&gt;pandoc&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://asterius.netlify.app/demo/todomvc/index.html&#34;&gt;&lt;code&gt;todomvc&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart using the prebuilt container image&lt;/h2&gt; &#xA;&lt;p&gt;We host a prebuilt container image on &lt;a href=&#34;https://hub.docker.com/r/terrorjack/asterius&#34;&gt;Docker Hub&lt;/a&gt;. The image also ships ~2k prebuilt &lt;a href=&#34;https://github.com/tweag/asterius/issues/354&#34;&gt;packages&lt;/a&gt; from a recent Stackage snapshot for convenience of testing simple programs without needing to set up a Cabal project.&lt;/p&gt; &#xA;&lt;p&gt;To use the image, mount the working directory containing the source code as a shared volume, then use the &lt;code&gt;ahc-link&lt;/code&gt; program:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;terrorjack@hostname:/project$ podman run -it --rm -v $(pwd):/workspace -w /workspace terrorjack/asterius&#xA;root@hostname:/workspace#&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are a lot of link-time options available to &lt;code&gt;ahc-link&lt;/code&gt;, e.g. targeting the browser platform instead of &lt;code&gt;node&lt;/code&gt;, adding extra GHC options or setting runtime parameters. Check the &lt;a href=&#34;https://asterius.netlify.app/&#34;&gt;documentation&lt;/a&gt; for further details.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s also possible to use &lt;code&gt;ahc-cabal&lt;/code&gt; as a drop-in replacement of &lt;code&gt;cabal&lt;/code&gt; to build a Cabal project. Use &lt;code&gt;ahc-dist&lt;/code&gt; with &lt;code&gt;--input-exe&lt;/code&gt; on the output &#34;executable&#34; file to generate actual WebAssembly and JavaScript artifacts. See the &lt;code&gt;diagrams&lt;/code&gt; blog &lt;a href=&#34;https://www.tweag.io/posts/2019-12-19-asterius-diagrams.html&#34;&gt;post&lt;/a&gt; for an example.&lt;/p&gt; &#xA;&lt;p&gt;Check the documentation &lt;a href=&#34;https://asterius.netlify.app/images.html&#34;&gt;section&lt;/a&gt; about the prebuilt image for more information, e.g. versioning policy, how to use with &lt;code&gt;podman&lt;/code&gt;/&lt;code&gt;docker&lt;/code&gt;, etc.&lt;/p&gt; &#xA;&lt;h2&gt;Building and using &lt;code&gt;asterius&lt;/code&gt; locally&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://asterius.netlify.app/building.html&#34;&gt;Building guide&lt;/a&gt; in the documentation for details.&lt;/p&gt; &#xA;&lt;h2&gt;Hacking on Asterius&lt;/h2&gt; &#xA;&lt;p&gt;We recommend using &lt;a href=&#34;https://code.visualstudio.com/docs/remote/containers&#34;&gt;VSCode Remote Containers&lt;/a&gt; to reproduce the very same dev environment used by our core team members. See the &lt;a href=&#34;https://asterius.netlify.app/hacking.html&#34;&gt;Hacking guide&lt;/a&gt; in the documentation for details.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;We have &lt;a href=&#34;https://asterius.netlify.app/&#34;&gt;documentation&lt;/a&gt; and blog posts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tweag.io/posts/2018-05-29-hello-asterius.html&#34;&gt;Fibonacci compiles end-to-end: Haskell to WebAssembly via GHC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tweag.io/posts/2018-09-12-asterius-ffi.html&#34;&gt;Haskell WebAssembly calling JavaScript and back again&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tweag.io/posts/2018-12-20-asterius-todomvc.html&#34;&gt;Asterius GHC WebAssembly backend reaches TodoMVC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tweag.io/posts/2019-12-19-asterius-diagrams.html&#34;&gt;Haskell art in your browser with Asterius&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tweag.io/blog/2020-10-09-asterius-cloudflare-worker/&#34;&gt;Edge computing with Servant on Cloudflare&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also checkout the &lt;a href=&#34;https://icfp18.sigplan.org/details/hiw-2018-papers/6/Lightning-talk-Asterius-Bringing-Haskell-to-WebAssembly&#34;&gt;HIW 2018 lightning talk&lt;/a&gt;, and the slides of an introductory talk in 2020 &lt;a href=&#34;https://docs.google.com/presentation/d/1AZJIf2ykheqONOM23oC6F3LJ9m5W9gbl69pDVdZszHg/edit?usp=sharing&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that they may be slightly out-of-date as the project evolves. Whenever you find something in the docs of blog posts which doesn&#39;t reflect the status quo, it&#39;s a bug and don&#39;t hesitate to open a ticket :)&lt;/p&gt; &#xA;&lt;h2&gt;Project status &amp;amp; roadmap&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://asterius.netlify.app/roadmap.html&#34;&gt;roadmap&lt;/a&gt; section in the documentation for details.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://tweag.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tweag/asterius/master/docs/tweag-logo.svg?sanitize=true&#34; height=&#34;65&#34;&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://iohk.io&#34;&gt;&lt;img src=&#34;https://i.imgur.com/tAag5MD.jpg&#34; height=&#34;65&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Asterius is maintained by &lt;a href=&#34;https://tweag.io/&#34;&gt;Tweag I/O&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Have questions? Need help? Tweet at &lt;a href=&#34;https://twitter.com/tweagio&#34;&gt;@tweagio&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>4eUeP/hs-grpc</title>
    <updated>2022-08-18T01:41:50Z</updated>
    <id>tag:github.com,2022-08-18:/4eUeP/hs-grpc</id>
    <link href="https://github.com/4eUeP/hs-grpc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;hs-grpc&lt;/h1&gt;</summary>
  </entry>
</feed>