<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-15T01:42:39Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>anoma/minijuvix</title>
    <updated>2022-07-15T01:42:39Z</updated>
    <id>tag:github.com,2022-07-15:/anoma/minijuvix</id>
    <link href="https://github.com/anoma/minijuvix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;ul&gt; &#xA; &lt;li&gt;Juvix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;#+begin_html &lt;a href=&#34;https://github.com/anoma/juvix/actions/workflows/ci.yml&#34;&gt; &lt;img alt=&#34;CI status&#34; src=&#34;https://github.com/anoma/juvix/actions/workflows/ci.yml/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; #+end_html&lt;/p&gt; &#xA;&lt;p&gt;#+begin_html &lt;a href=&#34;https://github.com/anoma/juvix/tags&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/github/v/release/anoma/juvix?include_prereleases&#34;&gt; &lt;/a&gt; #+end_html&lt;/p&gt; &#xA;&lt;p&gt;#+begin_html &lt;a href=&#34;https://github.com/anoma/juvix/raw/main/LICENSE&#34;&gt; &lt;img alt=&#34;LICENSE&#34; src=&#34;https://img.shields.io/badge/license-GPL--3.0--only-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; #+end_html&lt;/p&gt; &#xA;&lt;p&gt;#+begin_html &lt;a href=&#34;https://github.com/anoma/juvix/actions/workflows/pages/pages-build-deployment&#34;&gt;&lt;img src=&#34;https://github.com/anoma/juvix/actions/workflows/pages/pages-build-deployment/badge.svg?sanitize=true&#34; alt=&#34;pages-build-deployment&#34;&gt;&lt;/a&gt; #+end_html&lt;/p&gt; &#xA;&lt;p&gt;#+begin_html &lt;a href=&#34;https://github.com/anoma/juvix&#34;&gt; &lt;img align=&#34;right&#34; width=&#34;300&#34; height=&#34;300&#34; alt=&#34;Juvix Mascot&#34; src=&#34;https://raw.githubusercontent.com/anoma/minijuvix/main/assets/seating-mascot.051c86a.svg?sanitize=true&#34;&gt; &lt;/a&gt; #+end_html&lt;/p&gt; &#xA;&lt;p&gt;** Description&lt;/p&gt; &#xA;&lt;p&gt;Juvix is a research programming language created by [[https://heliax.dev/][Heliax]] as a first step toward creating more robust and reliable alternatives for formally verified smart contracts than existing languages. The Juvix language is constantly evolving, open-source, functional, and statically typed with special support for compiling [[https://anoma.network/blog/validity-predicates/][validity predicates]] to the =C= language, which can be deployed to various distributed ledgers including [[https://anoma.net/][Anoma]].&lt;/p&gt; &#xA;&lt;p&gt;The Juvix programming language allows developers to write programs with a high degree of assurance that they will meet specific standards. This is due to the fact that several static analyses are performed during compilation, including, for example, scope, termination, arity, and type checking. As a result, functional programs, especially validity predicates, can be written with greater confidence that they will be free of runtime errors. [[https://github.com/anoma/juvix/tree/main/examples/milestone][Here are some examples of Juvix programs]].&lt;/p&gt; &#xA;&lt;p&gt;The language features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;unicode syntax&lt;/li&gt; &#xA; &lt;li&gt;parametric polymorphism&lt;/li&gt; &#xA; &lt;li&gt;inductive and parametric data types&lt;/li&gt; &#xA; &lt;li&gt;higher-order functions&lt;/li&gt; &#xA; &lt;li&gt;implicit arguments&lt;/li&gt; &#xA; &lt;li&gt;holes in programs&lt;/li&gt; &#xA; &lt;li&gt;axioms for non-computable terms&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, the foreign and compile blocks syntax enable developers to compile a program to different backends including the =C= language. The Juvix module system further permits splitting programs into several modules to build libraries which can be later documented by generating HTML files based on the codebase, see for example, [[https://anoma.github.io/juvix-stdlib/][the Juvix standard library&#39;s website]]. For futher details, please refer to [[https://anoma.github.io/juvix/][the Juvix book]] which icludes our [[https://anoma.github.io/juvix/introduction/changelog.html][latest updates]].&lt;/p&gt; &#xA;&lt;p&gt;** Quick Start&lt;/p&gt; &#xA;&lt;p&gt;To install Juvix, you can download its sources using [[http://git-scm.com/][Git]] from the [[https://github.com/anoma/juvix.git][Github repository]]. Then, the program can be downloaded and installed with the following commands. You will need to have [[https://haskellstack.org][Stack]] installed.&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src shell git clone --recursive &lt;a href=&#34;https://github.com/anoma/juvix.git&#34;&gt;https://github.com/anoma/juvix.git&lt;/a&gt; cd juvix stack install #+end_src&lt;/p&gt; &#xA;&lt;p&gt;If the installation succeeds, you must be able to run the =juvix= command from any location. To get the complete list of commands, please run =juvix --help=.&lt;/p&gt; &#xA;&lt;p&gt;** Usage Example&lt;/p&gt; &#xA;&lt;p&gt;In the following example a Juvix file is compiled using the C backend. The result is compiled to WASM using [[https://llvm.org][Clang]] and then executed using [[https://wasmer.io][wasmer]].&lt;/p&gt; &#xA;&lt;p&gt;NB: Set the =WASI_SYSROOT_PATH= environment variable to the root of the WASI sysroot. See [[https://anoma.github.io/juvix/getting-started/dependencies.html][Installing dependencies]] for instructions on how to install the sysroot.&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src shell cd tests/positive/MiniC/HelloWorld juvix compile Input.juvix wasmer Input.wasm #+end_src&lt;/p&gt; &#xA;&lt;p&gt;You should see the output: =hello world!=&lt;/p&gt; &#xA;&lt;p&gt;** The Juvix Book&lt;/p&gt; &#xA;&lt;p&gt;The Juvix language and related tools are documented in [[https://anoma.github.io/juvix/][the Juvix book]].&lt;/p&gt; &#xA;&lt;p&gt;** Community&lt;/p&gt; &#xA;&lt;p&gt;We would love to hear what you think of Juvix! Join us on [[https://discord.gg/vEQappb7wG][Discord]]&lt;/p&gt;</summary>
  </entry>
</feed>