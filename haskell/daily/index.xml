<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-15T02:47:32Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>facebook/Haxl</title>
    <updated>2023-04-15T02:47:32Z</updated>
    <id>tag:github.com,2023-04-15:/facebook/Haxl</id>
    <link href="https://github.com/facebook/Haxl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Haskell library that simplifies access to remote data, such as databases or web-based services.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/facebook/Haxl/main/logo.png&#34; alt=&#34;Haxl Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Haxl&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.fb.com/support-ukraine&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Support-Ukraine-FFD500?style=flat&amp;amp;labelColor=005BBB&#34; alt=&#34;Support Ukraine&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/facebook/Haxl&#34;&gt;&lt;img src=&#34;https://travis-ci.org/facebook/Haxl.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Haxl is a Haskell library that simplifies access to remote data, such as databases or web-based services. Haxl can automatically&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;batch multiple requests to the same data source,&lt;/li&gt; &#xA; &lt;li&gt;request data from multiple data sources concurrently,&lt;/li&gt; &#xA; &lt;li&gt;cache previous requests,&lt;/li&gt; &#xA; &lt;li&gt;memoize computations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Having all this handled for you behind the scenes means that your data-fetching code can be much cleaner and clearer than it would otherwise be if it had to worry about optimizing data-fetching. We&#39;ll give some examples of how this works in the pages linked below.&lt;/p&gt; &#xA;&lt;p&gt;There are two Haskell packages here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;haxl&lt;/code&gt;: The core Haxl framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;haxl-facebook&lt;/code&gt; (in &lt;a href=&#34;https://raw.githubusercontent.com/facebook/Haxl/main/example/facebook&#34;&gt;https://github.com/facebook/Haxl/tree/master/example/facebook&lt;/a&gt;): An (incomplete) example data source for accessing the Facebook Graph API&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To use Haxl in your own application, you will likely need to build one or more &lt;em&gt;data sources&lt;/em&gt;: the thin layer between Haxl and the data that you want to fetch, be it a database, a web API, a cloud service, or whatever.&lt;/p&gt; &#xA;&lt;p&gt;There is a generic datasource in &#34;Haxl.DataSource.ConcurrentIO&#34; that can be used for performing arbitrary IO operations concurrently, given a bit of boilerplate to define the IO operations you want to perform.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;haxl-facebook&lt;/code&gt; package shows how we might build a Haxl data source based on the existing &lt;code&gt;fb&lt;/code&gt; package for talking to the Facebook Graph API.&lt;/p&gt; &#xA;&lt;h2&gt;Where to go next?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://code.facebook.com/posts/302060973291128/open-sourcing-haxl-a-library-for-haskell/&#34;&gt;The Story of Haxl&lt;/a&gt; explains how Haxl came about at Facebook, and discusses our particular use case.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebook/Haxl/raw/master/example/facebook/readme.md&#34;&gt;An example Facebook data source&lt;/a&gt; walks through building an example data source that queries the Facebook Graph API concurrently.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://simonmar.github.io/posts/2015-10-20-Fun-With-Haxl-1.html&#34;&gt;Fun with Haxl (part 1)&lt;/a&gt; Walks through using Haxl from scratch for a simple SQLite-backed blog engine.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebook/Haxl/raw/master/example/sql/readme.md&#34;&gt;The N+1 Selects Problem&lt;/a&gt; explains how Haxl can address a common performance problem with SQL queries by automatically batching multiple queries into a single query, without the programmer having to specify this behavior.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://hackage.haskell.org/package/haxl&#34;&gt;Haxl Documentation&lt;/a&gt; on Hackage.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://simonmar.github.io/bib/papers/haxl-icfp14.pdf&#34;&gt;There is no Fork: An Abstraction for Efficient, Concurrent, and Concise Data Access&lt;/a&gt;, our paper on Haxl, accepted for publication at ICFP&#39;14.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions! See &lt;a href=&#34;https://github.com/facebook/Haxl/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details on how to get started, and our &lt;a href=&#34;https://github.com/facebook/Haxl/raw/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Haxl uses the BSD 3-clause License, as found in the &lt;a href=&#34;https://github.com/facebook/Haxl/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SIwatsuki/practice02</title>
    <updated>2023-04-15T02:47:32Z</updated>
    <id>tag:github.com,2023-04-15:/SIwatsuki/practice02</id>
    <link href="https://github.com/SIwatsuki/practice02" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;practice02&lt;/h1&gt;</summary>
  </entry>
</feed>