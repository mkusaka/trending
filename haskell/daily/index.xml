<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-10T01:43:10Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>anoma/juvix</title>
    <updated>2022-07-10T01:43:10Z</updated>
    <id>tag:github.com,2022-07-10:/anoma/juvix</id>
    <link href="https://github.com/anoma/juvix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;ul&gt; &#xA; &lt;li&gt;Juvix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;#+begin_html &lt;a href=&#34;https://github.com/anoma/juvix/actions/workflows/ci.yml&#34;&gt; &lt;img alt=&#34;CI status&#34; src=&#34;https://github.com/anoma/juvix/actions/workflows/ci.yml/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; #+end_html&lt;/p&gt; &#xA;&lt;p&gt;#+begin_html &lt;a href=&#34;https://github.com/anoma/juvix/tags&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/github/v/release/anoma/juvix?include_prereleases&#34;&gt; &lt;/a&gt; #+end_html&lt;/p&gt; &#xA;&lt;p&gt;#+begin_html &lt;a href=&#34;https://github.com/anoma/juvix/raw/main/LICENSE&#34;&gt; &lt;img alt=&#34;LICENSE&#34; src=&#34;https://img.shields.io/badge/license-GPL--3.0--only-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; #+end_html&lt;/p&gt; &#xA;&lt;p&gt;#+begin_html &lt;a href=&#34;https://github.com/anoma/juvix/actions/workflows/pages/pages-build-deployment&#34;&gt;&lt;img src=&#34;https://github.com/anoma/juvix/actions/workflows/pages/pages-build-deployment/badge.svg?sanitize=true&#34; alt=&#34;pages-build-deployment&#34;&gt;&lt;/a&gt; #+end_html&lt;/p&gt; &#xA;&lt;p&gt;#+begin_html &lt;a href=&#34;https://github.com/anoma/juvix&#34;&gt; &lt;img align=&#34;right&#34; width=&#34;300&#34; height=&#34;300&#34; alt=&#34;Juvix Mascot&#34; src=&#34;https://raw.githubusercontent.com/anoma/juvix/main/assets/seating-mascot.051c86a.svg?sanitize=true&#34;&gt; &lt;/a&gt; #+end_html&lt;/p&gt; &#xA;&lt;p&gt;** Description&lt;/p&gt; &#xA;&lt;p&gt;Juvix is a research programming language created by [[https://heliax.dev/][Heliax]] as a first step toward creating more robust and reliable alternatives for formally verified smart contracts than existing languages. The Juvix language is constantly evolving, open-source, functional, and statically typed with special support for compiling [[https://anoma.network/blog/validity-predicates/][validity predicates]] to the =C= language, which can be deployed to various distributed ledgers including [[https://anoma.net/][Anoma]].&lt;/p&gt; &#xA;&lt;p&gt;The Juvix programming language allows developers to write programs with a high degree of assurance that they will meet specific standards. This is due to the fact that several static analyses are performed during compilation, including, for example, scope, termination, arity, and type checking. As a result, functional programs, especially validity predicates, can be written with greater confidence that they will be free of runtime errors. [[https://github.com/anoma/juvix/tree/main/examples/milestone][Here are some examples of Juvix programs]].&lt;/p&gt; &#xA;&lt;p&gt;The language features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;unicode syntax&lt;/li&gt; &#xA; &lt;li&gt;parametric polymorphism&lt;/li&gt; &#xA; &lt;li&gt;inductive and parametric data types&lt;/li&gt; &#xA; &lt;li&gt;higher-order functions&lt;/li&gt; &#xA; &lt;li&gt;implicit arguments&lt;/li&gt; &#xA; &lt;li&gt;holes in programs&lt;/li&gt; &#xA; &lt;li&gt;axioms for non-computable terms&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, the foreign and compile blocks syntax enable developers to compile a program to different backends including the =C= language. The Juvix module system further permits splitting programs into several modules to build libraries which can be later documented by generating HTML files based on the codebase, see for example, [[https://anoma.github.io/juvix-stdlib/][the Juvix standard library&#39;s website]]. For futher details, please refer to [[https://anoma.github.io/juvix/][the Juvix book]] which icludes our [[https://anoma.github.io/juvix/introduction/changelog.html][latest updates]].&lt;/p&gt; &#xA;&lt;p&gt;** Quick Start&lt;/p&gt; &#xA;&lt;p&gt;To install Juvix, you can download its sources using [[http://git-scm.com/][Git]] from the [[https://github.com/anoma/juvix.git][Github repository]]. Then, the program can be downloaded and installed with the following commands. You will need to have [[https://haskellstack.org][Stack]] installed.&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src shell git clone --recursive &lt;a href=&#34;https://github.com/anoma/juvix.git&#34;&gt;https://github.com/anoma/juvix.git&lt;/a&gt; cd juvix stack install #+end_src&lt;/p&gt; &#xA;&lt;p&gt;If the installation succeeds, you must be able to run the =juvix= command from any location. To get the complete list of commands, please run =juvix --help=.&lt;/p&gt; &#xA;&lt;p&gt;** Usage Example&lt;/p&gt; &#xA;&lt;p&gt;In the following example a Juvix file is compiled using the C backend. The result is compiled to WASM using [[https://llvm.org][Clang]] and then executed using [[https://wasmer.io][wasmer]].&lt;/p&gt; &#xA;&lt;p&gt;NB: Set the =WASI_SYSROOT_PATH= environment variable to the root of the WASI sysroot. See [[https://anoma.github.io/juvix/getting-started/dependencies.html][Installing dependencies]] for instructions on how to install the sysroot.&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src shell cd tests/positive/MiniC/HelloWorld juvix compile Input.juvix wasmer Input.wasm #+end_src&lt;/p&gt; &#xA;&lt;p&gt;You should see the output: =hello world!=&lt;/p&gt; &#xA;&lt;p&gt;** The Juvix Book&lt;/p&gt; &#xA;&lt;p&gt;The Juvix language and related tools are documented in [[https://anoma.github.io/juvix/][the Juvix book]].&lt;/p&gt; &#xA;&lt;p&gt;** Community&lt;/p&gt; &#xA;&lt;p&gt;We would love to hear what you think of Juvix! Join us on [[https://discord.gg/nsGaCZzJ][Discord]]&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>input-output-hk/hydra-poc</title>
    <updated>2022-07-10T01:43:10Z</updated>
    <id>tag:github.com,2022-07-10:/input-output-hk/hydra-poc</id>
    <link href="https://github.com/input-output-hk/hydra-poc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Proof of concept for the Hydra Head protocol 👷&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;p align=&#34;center&#34;&gt;Hydra Head - Proof of Concept (POC)&lt;/p&gt;&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;A home to our colorful experiments and prototypes.&lt;/p&gt; &#xA; &lt;a href=&#34;https://github.com/input-output-hk/hydra-poc/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/input-output-hk/hydra-poc/CI?label=Tests&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/input-output-hk/hydra-poc/pkgs/container/hydra-node&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/input-output-hk/hydra-poc/Docker?label=Docker&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;&lt;span&gt;🌄&lt;/span&gt; Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Hydra is the layer-two scalability solution for Cardano, which aims to increase the speed of transactions (low latency, high throughput) and minimize transaction cost.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the proof-of-concept implementation for the Hydra &lt;a href=&#34;https://eprint.iacr.org/2020/299.pdf&#34;&gt;Head protocol&lt;/a&gt;. It is a developer preview that we&#39;ve put together, marching towards a production ready solution. It outlines the basic architecture of a &lt;code&gt;hydra-node&lt;/code&gt;, which runs a simplified (coordinated) Hydra Head protocol, connects to other hydra-nodes, interfaces the Cardano blockchain and provides an API to clients such as the included terminal user interface &lt;code&gt;hydra-tui&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &lt;span&gt;⚠&lt;/span&gt; &lt;span&gt;⚠&lt;/span&gt;&lt;/p&gt; &#xA; &lt;p&gt;This is still prototypical and exploratory work shared here for your interest.&lt;/p&gt; &#xA; &lt;p&gt;It is NOT ready for production (yet).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;&lt;span&gt;🚀&lt;/span&gt; Getting started&lt;/h2&gt; &#xA;&lt;p&gt;The quickest way to get a &lt;code&gt;hydra-node&lt;/code&gt; running is to use our &lt;a href=&#34;https://github.com/orgs/input-output-hk/packages?repo_name=hydra-poc&#34;&gt;docker images&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker pull ghcr.io/input-output-hk/hydra-node:latest&#xA;docker run --rm ghcr.io/input-output-hk/hydra-node --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More information (including a demo) available on &lt;a href=&#34;https://hydra.family/head-protocol/docs/getting-started&#34;&gt;user manual 📖&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;🌈&lt;/span&gt; Features&lt;/h2&gt; &#xA;&lt;p&gt;Proof of concept:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Coordinated Hydra Head protocol&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Single Head per hydra-node&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Network statically configured, direct TCP connections&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; WebSocket, message-based API Server&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Terminal user interface client&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Cardano-node integration via Direct connection&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Running on testnet&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Later:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Persisted Head state&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Audited and mainnet ready&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Multiple Heads per hydra-node, managed via API&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Support for external wallets (e.g. hardware wallets)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Optimistic Head closure and incremental de-/commit protocol extension&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Relay-capable, mesh network&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;🤝&lt;/span&gt; Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The best way to contribute right now is to provide feedback. Give the &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/hydra-poc/master/demo&#34;&gt;demo&lt;/a&gt; a test drive and have a look at our &lt;a href=&#34;https://hydra.family/head-protocol&#34;&gt;documentation&lt;/a&gt;. Should you have any questions, ideas or issues, we would like to hear from you:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;#ask-hydra on the IOG &lt;a href=&#34;https://discord.gg/Qq5vNTg9PT&#34;&gt;Discord server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;create a Github &lt;a href=&#34;https://github.com/input-output-hk/hydra-poc/discussions&#34;&gt;Discussion&lt;/a&gt; or &lt;a href=&#34;https://github.com/input-output-hk/hydra-poc/issues/new&#34;&gt;Issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;or ask on Cardano &lt;a href=&#34;https://cardano.stackexchange.com/&#34;&gt;StackExchange&lt;/a&gt; using the &lt;code&gt;hydra&lt;/code&gt; tag&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When contributing to this project and interacting with others, please follow our &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/hydra-poc/master/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/hydra-poc/master/CODE-OF-CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Thanks for visiting and enjoy &lt;span&gt;❤️&lt;/span&gt;! &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>input-output-hk/Win32-network</title>
    <updated>2022-07-10T01:43:10Z</updated>
    <id>tag:github.com,2022-07-10:/input-output-hk/Win32-network</id>
    <link href="https://github.com/input-output-hk/Win32-network" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Networking library for Windows&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Asynchronous IO for Windows&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;Win32-network&lt;/code&gt; provides interface for asynchronous (overlapped) IO on Windows via implemented IO manager. It supports:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;File&lt;/code&gt; api&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NamedPipes&lt;/code&gt; api&lt;/li&gt; &#xA; &lt;li&gt;Berkeley sockets api on Windows via &lt;code&gt;winsock2&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;NamedPipes&lt;/code&gt; provide a good alternative for the lack of Unix Sockets on Windows, and there are ways of providing abstraction for both, though this is not present in this package.&lt;/p&gt; &#xA;&lt;p&gt;An application which is using this package should use &lt;code&gt;-threaded&lt;/code&gt; option, as the io manager thread runs a blocking ffi call (e.g. &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/win32/api/ioapiset/nf-ioapiset-getqueuedcompletionstatus&#34;&gt;GetQueuedCompletionStatus&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Haddocks&lt;/h2&gt; &#xA;&lt;p&gt;Haddocks are available via &lt;a href=&#34;https://input-output-hk.github.io/Win32-network&#34;&gt;github-pages&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;GHC Native IO Manager&lt;/h2&gt; &#xA;&lt;p&gt;A recent version of GHC has a native io-manager on Windows. Part of this library will become obsolete once the &lt;a href=&#34;https://hackage.haskell.org/package/network&#34;&gt;network&lt;/a&gt; will use it.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;The initial version of this library was based on &lt;a href=&#34;https://hackage.haskell.org/package/winio&#34;&gt;winio&lt;/a&gt; by Felix Martini.&lt;/p&gt;</summary>
  </entry>
</feed>