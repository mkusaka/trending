<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-15T01:34:26Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lally/xmonad-reenberg</title>
    <updated>2022-09-15T01:34:26Z</updated>
    <id>tag:github.com,2022-09-15:/lally/xmonad-reenberg</id>
    <link href="https://github.com/lally/xmonad-reenberg" rel="alternate"></link>
    <summary type="html">&lt;p&gt;XMonad fork from @reenberg and @brinchj&lt;/p&gt;&lt;hr&gt;&lt;pre&gt;&lt;code&gt;                xmonad : a tiling window manager&#xA;&#xA;                       http://xmonad.org&#xA;&#xA;xmonad is a tiling window manager for X. Windows are arranged&#xA;automatically to tile the screen without gaps or overlap, maximising&#xA;screen use. Window manager features are accessible from the&#xA;keyboard: a mouse is optional. xmonad is written, configured and&#xA;extensible in Haskell. Custom layout algorithms, key bindings and&#xA;other extensions may be written by the user in config files. Layouts&#xA;are applied dynamically, and different layouts may be used on each&#xA;workspace. Xinerama is fully supported, allowing windows to be tiled&#xA;on several physical screens.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Quick start:&lt;/p&gt; &#xA;&lt;p&gt;Obtain the dependent libraries, then build with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    runhaskell Setup.lhs configure --user --prefix=$HOME&#xA;    runhaskell Setup.lhs build&#xA;    runhaskell Setup.lhs install --user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the full story, read on.&lt;/p&gt; &#xA;&lt;p&gt;Building:&lt;/p&gt; &#xA;&lt;p&gt;Building is quite straightforward, and requires a basic Haskell toolchain. On many systems xmonad is available as a binary package in your package system (e.g. on Debian or Gentoo). If at all possible, use this in preference to a source build, as the dependency resolution will be simpler.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ll now walk through the complete list of toolchain dependencies.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;GHC: the Glasgow Haskell Compiler&lt;/p&gt; &lt;p&gt;You first need a Haskell compiler. Your distribution&#39;s package system will have binaries of GHC (the Glasgow Haskell Compiler), the compiler we use, so install that first. If your operating system&#39;s package system doesn&#39;t provide a binary version of GHC, you can find them here:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; http://haskell.org/ghc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For example, in Debian you would install GHC with:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; apt-get install ghc6&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It shouldn&#39;t be necessary to compile GHC from source -- every common system has a pre-build binary version.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;X11 libraries:&lt;/p&gt; &lt;p&gt;Since you&#39;re building an X application, you&#39;ll need the C X11 library headers. On many platforms, these come pre-installed. For others, such as Debian, you can get them from your package manager:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; apt-get install libx11-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Typically you need: libXinerama libXext libX11&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Cabal&lt;/p&gt; &lt;p&gt;xmonad requires a recent version of Cabal, &amp;gt;= 1.2.0. If you&#39;re using GHC 6.8, then it comes bundled with the right version. If you&#39;re using GHC 6.6.x, you&#39;ll need to build and install Cabal from hackage first:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;   http://hackage.haskell.org/cgi-bin/hackage-scripts/package/Cabal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can check which version you have with the command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ ghc-pkg list Cabal&#xA; Cabal-1.2.2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Haskell libraries: mtl, unix, X11&lt;/p&gt; &lt;p&gt;Finally, you need the Haskell libraries xmonad depends on. Since you&#39;ve a working GHC installation now, most of these will be provided. To check whether you&#39;ve got a package run &#39;ghc-pkg list some_package_name&#39;. You will need the following packages:&lt;/p&gt; &lt;p&gt;mtl &lt;a href=&#34;http://hackage.haskell.org/cgi-bin/hackage-scripts/package/mtl&#34;&gt;http://hackage.haskell.org/cgi-bin/hackage-scripts/package/mtl&lt;/a&gt; unix &lt;a href=&#34;http://hackage.haskell.org/cgi-bin/hackage-scripts/package/unix&#34;&gt;http://hackage.haskell.org/cgi-bin/hackage-scripts/package/unix&lt;/a&gt; X11 &lt;a href=&#34;http://hackage.haskell.org/cgi-bin/hackage-scripts/package/X11&#34;&gt;http://hackage.haskell.org/cgi-bin/hackage-scripts/package/X11&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build xmonad:&lt;/p&gt; &lt;p&gt;Once you&#39;ve got all the dependencies in place (which should be straightforward), build xmonad:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; runhaskell Setup.lhs configure --user --prefix=$HOME&#xA; runhaskell Setup.lhs build&#xA; runhaskell Setup.lhs install --user&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And you&#39;re done!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Running xmonad:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Add:&#xA;&#xA;     $HOME/bin/xmonad&#xA;&#xA;to the last line of your .xsession or .xinitrc file.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Configuring:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;See the CONFIG document&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;XMonadContrib&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;There are many extensions to xmonad available in the XMonadContrib&#xA;(xmc) library. Examples include an ion3-like tabbed layout, a&#xA;prompt/program launcher, and various other useful modules.&#xA;XMonadContrib is available at:&#xA;&#xA;    latest release: http://hackage.haskell.org/cgi-bin/hackage-scripts/package/xmonad-contrib&#xA;&#xA;    darcs version:  darcs get http://code.haskell.org/XMonadContrib&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Other useful programs:&lt;/p&gt; &#xA;&lt;p&gt;A nicer xterm replacement, that supports resizing better:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;urxvt       http://software.schmorp.de/pkg/rxvt-unicode.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For custom status bars:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dzen        http://gotmor.googlepages.com/dzen&#xA;xmobar http://hackage.haskell.org/cgi-bin/hackage-scripts/package/xmobar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a program dispatch menu:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dmenu       http://www.suckless.org/download/&#xA;gmrun       (in your package system)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Authors:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Spencer Janssen&#xA;Don Stewart&#xA;Jason Creighton&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>SPY/euler_problems</title>
    <updated>2022-09-15T01:34:26Z</updated>
    <id>tag:github.com,2022-09-15:/SPY/euler_problems</id>
    <link href="https://github.com/SPY/euler_problems" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Solving problems on projecteuler.net&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>