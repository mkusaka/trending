<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-27T01:30:49Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>eldexterr/ttyd64</title>
    <updated>2024-05-27T01:30:49Z</updated>
    <id>tag:github.com,2024-05-27:/eldexterr/ttyd64</id>
    <link href="https://github.com/eldexterr/ttyd64" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PM64 romhack that adds TTYD&#39;s gameplay into the original Paper Mario.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Paper Mario: TTYD64&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/Z3EhBnK.png&#34; alt=&#34;TTYD64&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;What&#39;s TTYD64?&lt;/strong&gt;&lt;br&gt; TTYD64 is a PM64 romhack that adds TTYD&#39;s gameplay, items, badges, and recipes into PM64, plus a bunch of new areas into the game.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Some of the new content includes:&lt;/strong&gt;&lt;br&gt; +60 New Badges&lt;br&gt; +50 New Items&lt;br&gt; +35 New Star Pieces&lt;br&gt; +30 Shine Sprites&lt;br&gt; +35 New Maps&lt;br&gt; +70 Modified Maps&lt;br&gt; And much more!&lt;/p&gt; &#xA;&lt;h1&gt;How to play&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the newest &lt;code&gt;.bps&lt;/code&gt; file&lt;/li&gt; &#xA; &lt;li&gt;Get a &lt;code&gt;Paper Mario (USA) ROM&lt;/code&gt;. A &lt;code&gt;.z64&lt;/code&gt; ROM file is required.&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://hack64.net/tools/patcher.php&#34;&gt;this link&lt;/a&gt; to patch your ROM.&lt;/li&gt; &#xA; &lt;li&gt;Get an emulator, if you have one already, then load the patched ROM file and play!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;How to compile&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a completely new dump folder and dump assets there (with &lt;strong&gt;Star Rod 0.5.X&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;In your dump folder, go to &lt;code&gt;battle/formation/raw&lt;/code&gt; and delete all files&lt;/li&gt; &#xA; &lt;li&gt;Unzip &lt;a href=&#34;https://github.com/eldexterr/ttyd64/files/13772711/dump.zip&#34;&gt;dump.zip&lt;/a&gt; in that same folder&lt;/li&gt; &#xA; &lt;li&gt;In &lt;em&gt;Star Rod&#39;s Mod Manager&lt;/em&gt; go to: &lt;em&gt;Options (Compile) &amp;gt; Options tab &amp;gt; And check &lt;code&gt;Allow Conflicting Patches&lt;/code&gt;&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;You&#39;re ready to compile!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Romhack by:&lt;/strong&gt; &lt;a href=&#34;https://www.youtube.com/channel/UCu4pDFUCpP6oeXNjerf7GfQ&#34;&gt;elDexter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;New Badges sprites:&lt;/strong&gt; &lt;a href=&#34;https://twitter.com/bossbuzz64&#34;&gt;BossBuzz&lt;/a&gt;&lt;br&gt; &lt;strong&gt;New items and recipes sprites:&lt;/strong&gt; &lt;a href=&#34;https://twitter.com/typografx&#34;&gt;Typografx&lt;/a&gt;&lt;br&gt; &lt;strong&gt;Miscellaneous new sprites:&lt;/strong&gt; &lt;a href=&#34;https://twitter.com/bossbuzz64&#34;&gt;BossBuzz&lt;/a&gt;, special thanks to Brotenko too!&lt;br&gt; &lt;strong&gt;New enemies sprites:&lt;/strong&gt; &lt;a href=&#34;https://twitter.com/ShyGuyXXL&#34;&gt;ShyGuyXXL&lt;/a&gt;, Starzee, Riviera, fraiseffddf4&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Game Artwork/BG:&lt;/strong&gt; &lt;a href=&#34;https://twitter.com/bossbuzz64&#34;&gt;BossBuzz&lt;/a&gt;&lt;br&gt; &lt;strong&gt;Game Logo:&lt;/strong&gt; &lt;a href=&#34;https://twitter.com/KevinArthurLS&#34;&gt;Kevin Arthur LS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Music:&lt;/strong&gt; StevenBlue&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;With special thanks to:&lt;/strong&gt;&lt;br&gt; PM64&#39;s decomp team, Jdaster64, JaThePlayer, ShadeBlade, Zephiles &amp;amp; ZoomZike.&lt;/p&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Project64: &#34;R4300i opcode&#34; error&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;After attempting to load the ROM, go to settings. Under Paper Mario, change 4 MB ram to 8 MB. Then, click on Recompiler by expanding the Paper Mario settings. Uncheck register caching and save your changes.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Where do I report bugs?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can report bugs in my discord server:&lt;br&gt; &lt;a href=&#34;https://discord.gg/HZ9zqPK2ax&#34;&gt;https://discord.gg/HZ9zqPK2ax&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Is this a demake of TTYD into PM64?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;No&lt;/p&gt; &#xA;&lt;h1&gt;Assets&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/zCdlAqx.png&#34; alt=&#34;Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/4hTnYgj.png&#34; alt=&#34;Artwork&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/JCzkKPo.png&#34; alt=&#34;Artwork&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jnhnum1/mvee</title>
    <updated>2024-05-27T01:30:49Z</updated>
    <id>tag:github.com,2024-05-27:/jnhnum1/mvee</id>
    <link href="https://github.com/jnhnum1/mvee" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MVEE&lt;/h1&gt; &#xA;&lt;p&gt;This is an implementation of the Khachiyan algorithm for computing Minimum Volume Enclosing Ellipsoids of a list of points. I created this because I couldn&#39;t find a suitable implementation in a language other than Matlab, so I decided to re-implement in Haskell.&lt;/p&gt; &#xA;&lt;p&gt;This implementation is primarily for my usage in a research project, so at least at first, the included functions in this module may be somewhat random-looking.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>GaloisInc/llvm-pretty</title>
    <updated>2024-05-27T01:30:49Z</updated>
    <id>tag:github.com,2024-05-27:/GaloisInc/llvm-pretty</id>
    <link href="https://github.com/GaloisInc/llvm-pretty" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An llvm pretty printer inspired by the haskell llvm binding&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;llvm-pretty&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;p&gt;A pretty printing library that was inspired by the LLVM binding by Lennart Augustsson. The library provides a monadic interface to a pretty printer, that allows functions to be defined and called, generating the corresponding LLVM assembly when run.&lt;/p&gt; &#xA;&lt;h2&gt;LLVM language feature support&lt;/h2&gt; &#xA;&lt;p&gt;Currently, &lt;code&gt;llvm-pretty&lt;/code&gt; supports LLVM versions up through 17. As a result of the broad version coverage, the &lt;code&gt;llvm-pretty&lt;/code&gt; AST is a superset of all versions of the LLVM AST. This means that the manner in which certain information is presented in the &lt;code&gt;llvm-pretty&lt;/code&gt; AST (e.g., during pretty printing) will be different depending on the LLVM version used to originate the information. Conversely, it is possible to construct an &lt;code&gt;llvm-pretty&lt;/code&gt; AST that cannot be represented in a specific (or any) LLVM version.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;llvm-pretty&lt;/code&gt; strives to support a reasonable variety of &lt;a href=&#34;https://llvm.org/docs/LangRef.html&#34;&gt;LLVM language features&lt;/a&gt;, but there are places where our coverage of the LLVM language is incomplete. If you need a LLVM feature that is not currently supported by &lt;code&gt;llvm-pretty&lt;/code&gt;, please &lt;a href=&#34;https://github.com/GaloisInc/llvm-pretty/issues/new&#34;&gt;file an issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;llvm-pretty&lt;/code&gt; versus &lt;code&gt;llvm-pretty-bc-parser&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;llvm-pretty&lt;/code&gt; supports almost everything that one would want to do with LLVM ASTs. One notable exception is parsing: &lt;code&gt;llvm-pretty&lt;/code&gt; deliberately does not support parsing an LLVM module AST from a bitcode file. This functionality is factored out into a separate &lt;a href=&#34;https://github.com/GaloisInc/llvm-pretty-bc-parser&#34;&gt;&lt;code&gt;llvm-pretty-bc-parser&lt;/code&gt;&lt;/a&gt; library. &lt;code&gt;llvm-pretty-bc-parser&lt;/code&gt; generally tries to stay in sync with all of the LLVM language features that &lt;code&gt;llvm-pretty&lt;/code&gt; supports, but it may be the case that some valid &lt;code&gt;llvm-pretty&lt;/code&gt; ASTs cannot be parsed by &lt;code&gt;llvm-pretty-bc-parser&lt;/code&gt;. If you encounter an occurrence of this issue, please &lt;a href=&#34;https://github.com/GaloisInc/llvm-pretty-bc-parser/issues/new&#34;&gt;file an issue&lt;/a&gt; at the &lt;code&gt;llvm-pretty-bc-parser&lt;/code&gt; issue tracker.&lt;/p&gt;</summary>
  </entry>
</feed>