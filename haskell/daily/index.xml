<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-26T01:32:38Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>input-output-hk/smash</title>
    <updated>2022-11-26T01:32:38Z</updated>
    <id>tag:github.com,2022-11-26:/input-output-hk/smash</id>
    <link href="https://github.com/input-output-hk/smash" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Stakepool Metadata Aggregation Server&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. raw:: html&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/input-output-hk/smash/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-pre/input-output-hk/smash.svg?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/input-output-hk/smash?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/input-output-hk/smash/badge.svg?branch=master&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Deprecated Note:&lt;/p&gt; &#xA;&lt;p&gt;⚠️ This project is deprecated, and only supports up to cardano-node 1.30.1, for newer versions of cardano-node use the SMASH server in &lt;a href=&#34;https://github.com/input-output-hk/cardano-db-sync&#34;&gt;https://github.com/input-output-hk/cardano-db-sync&lt;/a&gt;. Do not use anymore, it is here for historical purpose.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;code&gt;smash&lt;/code&gt; Overview&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;This repository contains the source code for the Cardano Stakepool Metadata Aggregation Server (SMASH). The purpose of SMASH is to aggregate common metadata about stakepools that are registered on the Cardano blockchain, including the name of the stakepool, its &#34;ticker&#34; name etc. This metadata can be curated and provided as a service to delegators, stake pool operators, exchanges etc., enabling independent validation and/or disambiguation of stakepool &#34;ticker&#34; names, for example.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>input-output-hk/cardano-explorer</title>
    <updated>2022-11-26T01:32:38Z</updated>
    <id>tag:github.com,2022-11-26:/input-output-hk/cardano-explorer</id>
    <link href="https://github.com/input-output-hk/cardano-explorer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Backend solution powering the cardano-explorer. ⚠️ See disclaimer below. ⚠️&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Disclaimer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; Since 2020-02-13, development of these components has been split and moved to different locations &lt;span&gt;⚠&lt;/span&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If you are an &lt;strong&gt;existing API user&lt;/strong&gt; using the &lt;strong&gt;current&lt;/strong&gt; Byron explorer API or transaction submission API, have a look at:&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/input-output-hk/cardano-rest&#34;&gt;https://github.com/input-output-hk/cardano-rest&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; Note however that this project will no longer undergo feature updates and will not be updated for Shelley.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you are a &lt;strong&gt;new API user&lt;/strong&gt; looking for long-term solutions which will also work with Shelley, have a look at:&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/input-output-hk/cardano-graphql&#34;&gt;https://github.com/input-output-hk/cardano-graphql&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you are a &lt;strong&gt;curious developer&lt;/strong&gt; keen on knowing the internals and understanding what happens behind the scene, you can dive into:&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/input-output-hk/cardano-db-sync&#34;&gt;https://github.com/input-output-hk/cardano-db-sync&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Cardano Explorer&lt;/h1&gt; &#xA;&lt;p&gt;The new cardano-explorer consists of a set of components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cardano-explorer-db&lt;/code&gt; which defines common data types and functions that are shared by the following two components. In particular, it defines the database schema.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cardano-explorer-node&lt;/code&gt; which acts as a Cardano node, following the chain and inserting data from the chain into a PostgreSQL database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cardano-explorer-webapi&lt;/code&gt; which serves data from the PostgreSQL database via HTTP.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cardano-tx-submit-webapi&lt;/code&gt; allows submission of pre-formed transmissions via a HTTP POST operation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;The explorer is written in a highly modular fashion to allow it to be as flexible as possible.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;cardano-explorer-node&lt;/code&gt; connects to a locally running &lt;code&gt;cardano-node&lt;/code&gt; (ie one connected to other nodes in the Cardano network over the internet with TCP/IP) using a Unix domain socket, retrieves blocks and stores parts of each block in a local PostgreSQL database. The database does not store things like cryptographic signatures but does store enough information to follow the chain of blocks and look at the transactions within blocks.&lt;/p&gt; &#xA;&lt;p&gt;The PostgreSQL database is designed to be accessed in a read-only fashion from other applications. The database schema is highly normalised which helps prevent data inconsistencies (specifically with the use of foreign keys from one table to another). More user friendly database queries can be implemented using &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-createview.html&#34;&gt;Postgres Views&lt;/a&gt; to implement joins between tables.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;cardano-explorer-webapi&lt;/code&gt; is a client than serves data from the PostgreSQL database as JSON via a HTTP REST API.&lt;/p&gt; &#xA;&lt;h2&gt;Further Reading&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/cardano-explorer/master/doc/building-running.md&#34;&gt;BuildingRunning&lt;/a&gt;: Building and running the explorer node and webapi.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/cardano-explorer/master/doc/schema-management.md&#34;&gt;SchemaManagement&lt;/a&gt;: How the database schema is managed and modified.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/cardano-explorer/master/doc/validation.md&#34;&gt;Validation&lt;/a&gt;: Explanation of validation done by the explorer and assumptions made.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>input-output-hk/cardano-report-server</title>
    <updated>2022-11-26T01:32:38Z</updated>
    <id>tag:github.com,2022-11-26:/input-output-hk/cardano-report-server</id>
    <link href="https://github.com/input-output-hk/cardano-report-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Server for accumulating CSL logs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cardano SL Report Server&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/input-output-hk/cardano-report-server&#34;&gt;&lt;img src=&#34;https://travis-ci.org/input-output-hk/cardano-report-server.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Server for collecting CSL and related logs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: cardano-report-server [-p|--port INTEGER] [--logsdir FILEPATH]&#xA;                             [--size-limit BYTES] [--store-custom]&#xA;                             [--zd-send-logs] [--zd-email STRING]&#xA;                             [--zd-token STRING] [--zd-account NAME] [--version]&#xA;  CardanoSL reporting server daemon&#xA;&#xA;Available options:&#xA;  -p,--port INTEGER        Port server is running on&#xA;  --logsdir FILEPATH       Directory server will be saving logs in&#xA;  --size-limit BYTES       Maximum body size allowed (will send 413 responses if&#xA;                           bigger)&#xA;  --store-custom           Store custom reports&#xA;  --zd-send-logs           Send logs from custom reports to Zendesk&#xA;  --zd-email STRING        Email to access zendesk&#xA;  --zd-token STRING        Zendesk api token&#xA;  --zd-account NAME        Zendesk account name (first part of account URL)&#xA;  -h,--help                Show this help text&#xA;  --version                Show version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Zendesk Custom Reports&lt;/h2&gt; &#xA;&lt;p&gt;These are bug reports sent by users directly through the Daedalus wallet frontend. This feature can be enabled using the &lt;code&gt;--zd-&lt;/code&gt; options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--zd-account&lt;/code&gt; -- The first part of &lt;code&gt;https://ACCOUNT.zendesk.com&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--zd-email&lt;/code&gt; -- E-mail of a user registered in the Zendesk account. This user must have role &#34;Agent&#34; or higher.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--zd-token&lt;/code&gt; -- API access token which can be obtained at &lt;code&gt;https://ACCOUNT.zendesk.com/agent/admin/api/settings&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--zd-send-logs&lt;/code&gt; -- Optional switch which enables uploading of logs from Daedalus.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To register a user for this purpose, the &lt;a href=&#34;https://developer.zendesk.com/rest_api/docs/core/users#create-user&#34;&gt;Zendesk API&lt;/a&gt; can be used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl https://ACCOUNT.zendesk.com/api/v2/users/create_or_update.json \&#xA;  -d &#39;{&#34;user&#34;: {&#34;name&#34;: &#34;Report Server Agent&#34;, &#34;email&#34;: &#34;report-server@iohk.io&#34;, &#34;role&#34;: &#34;agent&#34; }}&#39; \&#xA;  -H &#34;Content-Type: application/json&#34; -X POST \&#xA;  -v -u &#39;EMAIL/token:BASE64_TOKEN&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;After startup Cardano-Report-Server inititalizes the Log holder directory with given options, additionaly creates the directory if not present. Then it makes a Zendesk-Agent which contains all the necessary details about the zendesk account and then the agent authenticates with zendesk. After that it creates a &lt;code&gt;serverContext&lt;/code&gt; which contains the information about the server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;data ServerContext = ServerContext&#xA;    { scZendeskParams      :: !(Maybe ZendeskParams) -- ^ If Nothing, zd is turned off&#xA;    , scStoreCustomReports :: !Bool -- ^ If we store logs on custom&#xA;                                   -- report. This will only be used&#xA;                                   -- if zendesk integration is on,&#xA;                                   -- because we store response too.&#xA;    , scLogsHolder         :: !LogsHolder&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then it launches the server application which sends Log data to zendesk or stores locally if required. Cardano-Report-Server logs the following report:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-- | Type of report.&#xA;data ReportType&#xA;    = RCrash Int&#xA;    -- ^ This type is used only to report crash of application.&#xA;    | RError Text&#xA;    -- ^ The type of report used when a local error (most likely&#xA;    -- assertion violation or anything else that indicates a bug)&#xA;    -- happens. «Local» means that error most likely affects only one&#xA;    -- node for which this error happened.&#xA;    | RMisbehavior { rmIsCritical  :: Bool&#xA;                   -- ^ Whether misbehavior can break the system and&#xA;                   -- must be addressed ASAP.  Example of critical&#xA;                   -- misbehavior: chain quality is closed to&#xA;                   -- 50%. Example of non-critical misbehavior: fork&#xA;                   -- happened in bootstrap era. The latter should be&#xA;                   -- investigated, but doesn&#39;t mean that the system&#39;s&#xA;                   -- operability is threatened.&#xA;                   , rmDescription :: Text&#xA;                   -- ^ What exactly is suspicious\/wrong.&#xA;                    }&#xA;    -- ^ This type of report indicates global problems which most&#xA;    -- likely affect all nodes.&#xA;    | RInfo Text&#xA;    -- ^ The type of report used to send statistical or any other&#xA;    -- useful information and doesn&#39;t indicate anything&#xA;    -- bad\/strange\/suspicious.&#xA;    | RCustomReport { crEmail :: Text&#xA;                      -- ^ The user&#39;s email address&#xA;                    , crSubject :: Text&#xA;                      -- ^ The title of the report&#xA;                    , crProblem :: Text&#xA;                      -- ^ Description of the issue(s)&#xA;                    }&#xA;    -- ^ This is a custom user report coming directly from Daedalus.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally Cardano-Report-Server sends this metadata along with the report:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-- | Metadata sent with report.&#xA;data ReportInfo = ReportInfo&#xA;    { rApplication :: Text&#xA;      -- ^ Application name, e.g. &#34;cardano-explorer&#34; or &#34;deadalus&#34;.&#xA;    , rVersion     :: Version&#xA;      -- ^ Application version.&#xA;    , rBuild       :: Text&#xA;      -- ^ Build information.&#xA;    , rOS          :: Text&#xA;      -- ^ OS information.&#xA;    , rDate        :: UTCTime&#xA;      -- ^ Date report was created on.&#xA;    , rMagic       :: Int32&#xA;      -- ^ Cluster magic.&#xA;    , rReportType  :: ReportType&#xA;      -- ^ Type of report.&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>