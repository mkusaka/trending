<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-02T01:30:56Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>haskell/ThreadScope</title>
    <updated>2024-11-02T01:30:56Z</updated>
    <id>tag:github.com,2024-11-02:/haskell/ThreadScope</id>
    <link href="https://github.com/haskell/ThreadScope" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A graphical tool for profiling parallel Haskell programs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ThreadScope&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hackage.haskell.org/package/threadscope&#34;&gt;&lt;img src=&#34;https://img.shields.io/hackage/v/threadscope.svg?sanitize=true&#34; alt=&#34;Hackage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://packdeps.haskellers.com/feed?needle=threadscope&#34;&gt;&lt;img src=&#34;https://img.shields.io/hackage-deps/v/threadscope.svg?sanitize=true&#34; alt=&#34;Hackage-Deps&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/haskell/ThreadScope/workflows/CI/badge.svg?branch=master&#34; alt=&#34;CI&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using pre-built binaries&lt;/h2&gt; &#xA;&lt;p&gt;Currently &lt;a href=&#34;https://github.com/haskell/ThreadScope/releases&#34;&gt;pre-built binaries&lt;/a&gt; for the following platforms are provided:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu 18.04 (64-bit)&lt;/li&gt; &#xA; &lt;li&gt;macOS 10.15&lt;/li&gt; &#xA; &lt;li&gt;Windows Server 2019 (x64)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;GTK+2 needs to be installed for these binaries to work.&lt;/p&gt; &#xA;&lt;p&gt;On Windows, the &lt;a href=&#34;http://www.msys2.org&#34;&gt;MSYS2&lt;/a&gt; is the recommended way to install GTK+2. In MSYS2 MINGW64 shell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pacman -S $MINGW_PACKAGE_PREFIX-gtk2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then you can run the threadscope binary from the shell.&lt;/p&gt; &#xA;&lt;h2&gt;Building from source&lt;/h2&gt; &#xA;&lt;p&gt;Use &lt;code&gt;git clone&lt;/code&gt; or &lt;code&gt;cabal get threadscope&lt;/code&gt; to get the source and move into the threadscope directory.&lt;/p&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;GTK+2 is required to be installed. On Ubuntu-like systems:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt install libgtk2.0-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can build threadscope using cabal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cabal v2-build   # to only build the project, or&#xA;cabal v2-install # to build and install the binary&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using stack:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;stack build   # to only build the project, or&#xA;stack install # to build and install the binary&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;p&gt;GTK+ is required:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install gtk+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can build threadscope using cabal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cabal --project-file=cabal.project.osx v2-build   # to only build the project, or&#xA;cabal --project-file=cabal.project.osx v2-install # to build and install the binary&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using stack:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;stack --stack-yaml=stack.osx.yaml build   # to only build the project, or&#xA;stack --stack-yaml=stack.osx.yaml install # to install the binary&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chocolatey.org/&#34;&gt;Chocolatey&lt;/a&gt; can be used to install GHC and &lt;a href=&#34;https://www.msys2.org/&#34;&gt;MSYS2&lt;/a&gt; is the recommended way to install GTK+.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;choco install ghc&#xA;refreshenv&#xA;set PATH=C:\\msys64\\mingw64\\bin;C:\\msys64\\usr\\bin;%PATH%&#xA;pacman -Sy mingw-w64-x86_64-gtk2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then you can build threadscope using cabal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cabal v2-build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can use stack instead.&lt;/p&gt; &#xA;&lt;p&gt;CAVEAT: gtk2 needs to be installed twice: one for stack&#39;s MSYS2 environment and another for local MSYS2 environment.&lt;/p&gt; &#xA;&lt;p&gt;In command prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;stack setup&#xA;stack exec -- pacman --needed -Sy bash pacman pacman-mirrors msys2-runtime msys2-runtime-devel&#xA;stack exec -- pacman -Syu&#xA;stack exec -- pacman -Syuu&#xA;stack exec -- pacman -S base-devel mingw-w64-x86_64-pkg-config mingw-w64-x86_64-toolchain mingw-w64-x86_64-gtk2&#xA;stack install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then in MSYS2 MINGW64 shell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pacman -S $MINGW_PACKAGE_PREFIX-gtk2&#xA;echo &#39;export PATH=$APPDATA/local/bin:$PATH&#39; &amp;gt;&amp;gt; .profile&#xA;source .profile&#xA;threadscope&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Building using stack is not tested in CI. If you find any issues with building with stack, please update the instructions and send a PR.&lt;/p&gt;</summary>
  </entry>
</feed>