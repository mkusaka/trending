<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-14T01:31:40Z</updated>
  <subtitle>Daily Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>well-typed/cborg</title>
    <updated>2025-04-14T01:31:40Z</updated>
    <id>tag:github.com,2025-04-14:/well-typed/cborg</id>
    <link href="https://github.com/well-typed/cborg" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Binary serialisation in the CBOR format&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fast binary serialisation and CBOR implementation for Haskell&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/well-typed/cborg/actions/workflows/haskell-ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Haskell CI&#34;&gt; &lt;a href=&#34;https://hackage.haskell.org/package/cborg&#34;&gt;&lt;img src=&#34;https://img.shields.io/hackage/v/cborg.svg?label=Hackage&#34; alt=&#34;Hackage cborg version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hackage.haskell.org/package/serialise&#34;&gt;&lt;img src=&#34;https://img.shields.io/hackage/v/serialise.svg?label=Hackage&#34; alt=&#34;Hackage serialise version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/BSD_License&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-BSD-blue.svg?sanitize=true&#34; alt=&#34;BSD3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.haskell.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Haskell-yellowgreen.svg?sanitize=true&#34; alt=&#34;Haskell&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repo contains two libraries (plus associated tools):&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;serialise&lt;/code&gt; library is for serialising Haskell values and deserialising them later.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;cborg&lt;/code&gt; library provides a fast, standards-compliant implementation of the &#39;Concise Binary Object Representation&#39; (specified in &lt;code&gt;RFC 7049&lt;/code&gt;) for Haskell.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;serialise&lt;/code&gt; library uses the CBOR format, via the &lt;code&gt;cborg&lt;/code&gt; library, which gives it the following benefits:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;fast serialisation and deserialisation&lt;/li&gt; &#xA; &lt;li&gt;compact binary format&lt;/li&gt; &#xA; &lt;li&gt;stable format across platforms (32/64bit, big/little endian)&lt;/li&gt; &#xA; &lt;li&gt;support for backwards compatible deserialisation with migrations&lt;/li&gt; &#xA; &lt;li&gt;the ability to inspect binary values with generic tools, e.g. for debugging or recovery, including generic conversion into JSON text&lt;/li&gt; &#xA; &lt;li&gt;potential to read the serialised format from other languages&lt;/li&gt; &#xA; &lt;li&gt;incremental or streaming (de)serialisation&lt;/li&gt; &#xA; &lt;li&gt;internal message framing (for use in network application)&lt;/li&gt; &#xA; &lt;li&gt;suitable to use with untrusted input (resistance to asymmetric resource consumption attacks)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;They are just a &lt;code&gt;cabal install&lt;/code&gt; away on &lt;a href=&#34;https://hackage.haskell.org/package/serialise&#34;&gt;Hackage&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cabal install cborg serialise&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are also a few related packages that you may be interested in:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cborg-json&lt;/code&gt; implements the bijection between JSON and CBOR specified in the RFC.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cbor-tool&lt;/code&gt; is a handy command-line utility for working with CBOR data.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Join in&lt;/h1&gt; &#xA;&lt;p&gt;Be sure to read the &lt;a href=&#34;https://github.com/well-typed/cborg/raw/master/.github/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;. File bugs in the GitHub &lt;a href=&#34;http://github.com/well-typed/cborg/issues&#34;&gt;issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Master &lt;a href=&#34;http://github.com/well-typed/cborg&#34;&gt;git repository&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone https://github.com/well-typed/cborg.git&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The tests for the &lt;code&gt;cborg&lt;/code&gt; package are currently included in the &lt;code&gt;serialise&lt;/code&gt; package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cabal test serialise&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Authors&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.github.com/well-typed/cborg/master/AUTHORS.txt&#34;&gt;AUTHORS.txt&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;BSD3. See &lt;a href=&#34;https://raw.github.com/well-typed/cborg/master/LICENSE.txt&#34;&gt;LICENSE.txt&lt;/a&gt; for the exact terms of copyright and redistribution.&lt;/p&gt;</summary>
  </entry>
</feed>