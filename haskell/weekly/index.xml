<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-06T01:45:34Z</updated>
  <subtitle>Weekly Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>necrobious/hS3</title>
    <updated>2022-11-06T01:45:34Z</updated>
    <id>tag:github.com,2022-11-06:/necrobious/hS3</id>
    <link href="https://github.com/necrobious/hS3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Haskell S3 Client, forked from http://hackage.haskell.org/package/hS3 to support MD5 validation on upload and removed dependency on MissingH&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This is the Haskell S3 library (hS3). It provides an interface to Amazon&#39;s Simple Storage Service, allowing Haskell developers to reliably store and retrieve arbitrary amounts of data from anywhere on the Internet. To learn more about Amazon S3, and sign up for an account, visit [http://aws.amazon.com/s3].&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>qlkzy/hacksoc-fun</title>
    <updated>2022-11-06T01:45:34Z</updated>
    <id>tag:github.com,2022-11-06:/qlkzy/hacksoc-fun</id>
    <link href="https://github.com/qlkzy/hacksoc-fun" rel="alternate"></link>
    <summary type="html">&lt;p&gt;HackSoc FUN&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HackSoc Functional Programming Course&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>technogeeky/metamorphic</title>
    <updated>2022-11-06T01:45:34Z</updated>
    <id>tag:github.com,2022-11-06:/technogeeky/metamorphic</id>
    <link href="https://github.com/technogeeky/metamorphic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;metamorphisms (aka playing with: (fold, (.), unfold)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;CONTENTS&lt;/p&gt; &#xA;&lt;p&gt;Apart form this README file, the distribution contains nine Haskell files.&lt;/p&gt; &#xA;&lt;p&gt;(A) These files define the &#34;metamorphic programming&#34; extension to Haskell:&lt;/p&gt; &#xA;&lt;p&gt;ADT.hs -- Functor defs, ADT, fold &amp;amp; transform ADTlib.hs -- A library of constructors and ADTs ADTprog.hs -- Example programs&lt;/p&gt; &#xA;&lt;p&gt;(B) For some examples the following data structures are needed:&lt;/p&gt; &#xA;&lt;p&gt;Tree.hs -- Just a binary tree definition Graph.hs -- Inductive graph type (see IFL97 or ICFP97 paper) GraphData.hs -- Some example graphs Heap.hs -- Pairing heaps SimpleMap.hs -- Binary search tree implementation of maps Thread.hs -- Auxiliary module used in Graph (subject to future change)&lt;/p&gt; &#xA;&lt;p&gt;(From the Haskell library we use the module Maybe and List. Thus, you should take care that these modules can be found by hugs.)&lt;/p&gt; &#xA;&lt;p&gt;INSTALLATION&lt;/p&gt; &#xA;&lt;p&gt;Copy all files to a directory where hugs or ghc can find them. (I tested the programs with Hugs 1.4, June 1998.) Start hugs and load &#34;ADTprog.hs&#34;.&lt;/p&gt; &#xA;&lt;p&gt;CONTACT&lt;/p&gt; &#xA;&lt;p&gt;Please email comments, bugs, etc. to &lt;a href=&#34;mailto:erwig@fernuni-hagen.de&#34;&gt;erwig@fernuni-hagen.de&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;-- Martin&lt;/p&gt;</summary>
  </entry>
</feed>