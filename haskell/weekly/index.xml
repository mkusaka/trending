<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-27T01:45:13Z</updated>
  <subtitle>Weekly Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>input-output-hk/ouroboros-leios</title>
    <updated>2022-11-27T01:45:13Z</updated>
    <id>tag:github.com,2022-11-27:/input-output-hk/ouroboros-leios</id>
    <link href="https://github.com/input-output-hk/ouroboros-leios" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Documentation and tools relating to the design and prototyping of Ouroboros Leios&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This repository is for documentatin and tools related to the design and prototyping of Ouroboros Leios.&lt;/p&gt; &#xA;&lt;p&gt;Currently there is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;report&lt;/code&gt;: the LaTeX source for the design report&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CIP&lt;/code&gt;: the initial version of the Leios CIP&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;simulation&lt;/code&gt;: simulation and visualisation code for investigating Leios-like network traffic patterns.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>digital-asset/daml-finance</title>
    <updated>2022-11-27T01:45:13Z</updated>
    <id>tag:github.com,2022-11-27:/digital-asset/daml-finance</id>
    <link href="https://github.com/digital-asset/daml-finance" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/digital-asset/daml/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dl.circleci.com/status-badge/redirect/gh/digital-asset/daml-finance/tree/main&#34;&gt;&lt;img src=&#34;https://dl.circleci.com/status-badge/img/gh/digital-asset/daml-finance/tree/main.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright Â© 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All Rights Reserved. SPDX-License-Identifier: Apache-2.0&lt;/p&gt; &#xA;&lt;h1&gt;Daml Finance&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to Daml Finance, a collection of purpose-built libraries to enable rapid development of enterprise-grade tokenization solutions.&lt;/p&gt; &#xA;&lt;h2&gt;Why do I need it?&lt;/h2&gt; &#xA;&lt;p&gt;Implementing basic financial concepts like ownership or economic terms of an asset is a complex and tedious task. By providing common building blocks, Daml Finance increases delivery velocity and shortens the time-to-market when developing Daml applications.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started using the library&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://digital-asset.github.io/daml-finance/&#34;&gt;Daml Finance documentation&lt;/a&gt; provides a number of options to get started using the library.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/digital-asset/daml-finance-app/&#34;&gt;Daml Finance Reference App&lt;/a&gt; showcases how the library can be integrated into a fully-fledged Daml application.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to Daml Finance&lt;/h2&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;This repo assumes the use of &lt;a href=&#34;https://github.com/direnv/direnv&#34;&gt;direnv&lt;/a&gt; for local development, along with a working &lt;a href=&#34;https://nixos.org/download.html&#34;&gt;Nix&lt;/a&gt; installation.&lt;/p&gt; &#xA;&lt;h3&gt;Building the library from source&lt;/h3&gt; &#xA;&lt;p&gt;To build the library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-script&#34;&gt;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will produce individual DAR files for each package in the &lt;code&gt;.dars&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;To test the CI locally, run the following target:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-script&#34;&gt;make ci-local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build the documentation follows the steps &lt;a href=&#34;https://raw.githubusercontent.com/digital-asset/daml-finance/main/docs/README.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Style&lt;/h3&gt; &#xA;&lt;p&gt;When developing please adhere to the &lt;a href=&#34;https://raw.githubusercontent.com/digital-asset/daml-finance/main/STYLEGUIDE.md&#34;&gt;style guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Releases&lt;/h3&gt; &#xA;&lt;p&gt;To perform a release of this project, please follow the guide &lt;a href=&#34;https://raw.githubusercontent.com/digital-asset/daml-finance/main/RELEASE.MD&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>change-metrics/monocle</title>
    <updated>2022-11-27T01:45:13Z</updated>
    <id>tag:github.com,2022-11-27:/change-metrics/monocle</id>
    <link href="https://github.com/change-metrics/monocle" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Monocle helps teams and individual to better organize daily duties and to detect anomalies in the way changes are produced and reviewed.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Monocle&lt;/h1&gt; &#xA;&lt;p&gt;Monocle is designed for development teams to provide:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;analytics on project changes&lt;/li&gt; &#xA; &lt;li&gt;boards to display changes by criteria&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It helps teams and individual to better organize daily duties and to detect anomalies in the way changes are produced and reviewed.&lt;/p&gt; &#xA;&lt;p&gt;Monocle supports GitHub, GitLab and Gerrit.&lt;/p&gt; &#xA;&lt;p&gt;How to get started with Monocle:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Explore the website and blog: &lt;a href=&#34;https://changemetrics.io&#34;&gt;changemetrics.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Try on the demo instance: &lt;a href=&#34;https://demo.changemetrics.io&#34;&gt;demo.changemetrics.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chat with us in the project Matrix room: &lt;a href=&#34;https://matrix.to/#/#monocle:matrix.org&#34;&gt;#monocle:matrix.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run your own instance: &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#installation&#34;&gt;Read the installation guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hack on it: &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/CONTRIBUTING.md&#34;&gt;Read the contributing guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots of Monocle from the demo instance&lt;/h2&gt; &#xA;&lt;p&gt;The activity view:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/change-metrics/monocle/assets/images/monocle-1.3.0/monocle-activity.png&#34; width=&#34;70%&#34; height=&#34;70%&#34;&gt; &#xA;&lt;p&gt;The developer board:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/change-metrics/monocle/assets/images/monocle-1.3.0/monocle-board.png&#34; width=&#34;70%&#34; height=&#34;70%&#34;&gt; &#xA;&lt;p&gt;The peers strength view:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/change-metrics/monocle/assets/images/monocle-1.3.0/monocle-peers-strength.png&#34; width=&#34;70%&#34; height=&#34;70%&#34;&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The process below describes how to index changes from GitHub repositories and then how to start the web UI to browse metrics.&lt;/p&gt; &#xA;&lt;p&gt;The deployment is based on Docker via a docker-compose definition.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, the following deployment method are supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/k8s/README.md&#34;&gt;deploy on Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/CONTRIBUTING.md#deploy-from-source-code&#34;&gt;deploy from source code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Checkout the code&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;git clone https://github.com/change-metrics/monocle.git&#xA;cd monocle&#xA;# Init a .secrets file with a default API key for the crawler process&#xA;echo CRAWLERS_API_KEY=$(uuidgen) &amp;gt; .secrets&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create the config.yaml file&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;config.yaml&lt;/code&gt; file is used by the crawler and api services.&lt;/p&gt; &#xA;&lt;p&gt;To crawl GitHub public repositories, you must generate a personal access token on GitHub (w/o any specific rights) at &lt;a href=&#34;https://github.com/settings/tokens&#34;&gt;https://github.com/settings/tokens&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then create the config file &lt;code&gt;etc/config.yaml&lt;/code&gt;. Here is an example your could start with. Make sure to write &lt;code&gt;GITHUB_TOKEN=&amp;lt;github_token&amp;gt;&lt;/code&gt; in the &lt;code&gt;.secrets&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-YAML&#34;&gt;---&#xA;workspaces:&#xA;  - name: monocle&#xA;    crawlers:&#xA;      - name: github-tektoncd&#xA;        provider:&#xA;          github_organization: tektoncd&#xA;          github_repositories:&#xA;            - operator&#xA;            - pipeline&#xA;        update_since: &#39;2021-01-01&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To crawl the full tektoncd GitHub organization then remove the &lt;code&gt;github_repositories&lt;/code&gt; entry from the file. Check the section &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#workspaces&#34;&gt;Workspaces&lt;/a&gt; for a complete description of the configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Start docker-compose&lt;/h3&gt; &#xA;&lt;p&gt;The docker-compose file is set to use the container image of the latest stable release of Monocle (1.7.0). It is adviced to use the latest stable Monocle version. However, as our CI publishes the latest (devel) container image then it is possible to run the very last version. To do so set &lt;code&gt;COMPOSE_MONOCLE_VERSION&lt;/code&gt; to &lt;code&gt;latest&lt;/code&gt; in the &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#environment-variables&#34;&gt;Environment variables section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Start Monocle:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Ensure services are running and healthy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;docker-compose ps&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Inspect services logs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;docker-compose logs -f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should be able to access the web UI at &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt; section if needed.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The Monocle configuration is splitted between a configuration file and various environment variables.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#environment-variables&#34;&gt;Environment variables&lt;/a&gt; configure system settings and secrets. Any changes require a restart of the Monocle API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#configuration-file&#34;&gt;The configuration file&lt;/a&gt; contains non sensitive data and could be exposed in a Git repository. A CI/CD flow could be enabled on top of the Git repository to allow Monocle&#39; users to propose configuration changes. The Monocle API automatically reload the configuration when it changes.&lt;/p&gt; &#xA;&lt;h3&gt;Environment variables&lt;/h3&gt; &#xA;&lt;p&gt;For a local deployment, default settings are fine.&lt;/p&gt; &#xA;&lt;p&gt;The following settings are available in the &lt;code&gt;.env&lt;/code&gt; file (See &lt;code&gt;.env.sample&lt;/code&gt; for a sample file):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;COMPOSE_ES_XMS and COMPOSE_ES_XMX&lt;/code&gt; to change the ElasticSearch JVM HEAP SIZE. By default 512m.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;COMPOSE_MONOCLE_VERSION&lt;/code&gt; to use a specific version. By default it uses &lt;code&gt;latest&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;COMPOSE_MONOCLE_API_ADDR&lt;/code&gt; to set binding address where the Monocle API is exposed by the container.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;COMPOSE_MONOCLE_API_PORT&lt;/code&gt; to set binding port where the Monocle API is exposed by the container.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;COMPOSE_MONOCLE_PUBLIC_URL&lt;/code&gt; to configure the public URL to access the UI and API. The URL is required for user redirection during the authentication. By default it is &lt;code&gt;http://localhost:8080&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;COMPOSE_MONOCLE_WEBAPP_TITLE&lt;/code&gt; to change the title of the web application. By default it is &lt;code&gt;Monocle&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following settings are available in the &lt;code&gt;.secrets&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;MONOCLE_JWK_GEN_KEY&lt;/code&gt; to set the local JWT issuer key. The key size must be 64 characters minimum. By default the key is automatically generated.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MONOCLE_OIDC_&amp;lt;PROVIDER_NAME&amp;gt;_CLIENT_SECRET&lt;/code&gt; to set the secret used by Monocle to request an ID Token (Unset by default).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MONOCLE_ADMIN_TOKEN&lt;/code&gt; to set the &lt;em&gt;token&lt;/em&gt; to access admin endpoints. By default not set and endpoints deactivated.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Configuration file&lt;/h3&gt; &#xA;&lt;p&gt;The Monocle configuration file is used by the API and crawlers processes. The format of the file is YAML.&lt;/p&gt; &#xA;&lt;p&gt;The file configures the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#workspaces&#34;&gt;Monocle workspaces&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#about&#34;&gt;About&lt;/a&gt; WEB Application endpoint&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#authentication&#34;&gt;Authentication&lt;/a&gt; system&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You might want to use Dhall to manage it or to better understand the schema (&lt;a href=&#34;https://github.com/change-metrics/dhall-monocle&#34;&gt;dhall-monocle&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h4&gt;Workspaces&lt;/h4&gt; &#xA;&lt;p&gt;A workspace uses a dedicated ElasticSearch index. A workspace defines:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;crawlers - &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#crawlers&#34;&gt;details&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;projects - &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#projects-definition&#34;&gt;details&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;identities - &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#identity-management&#34;&gt;details&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;groups - &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#groups-definition&#34;&gt;details&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;search aliases - &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#search-aliases-definition&#34;&gt;details&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Crawlers&lt;/h5&gt; &#xA;&lt;p&gt;Monocle provides two kinds of crawlers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#change&#34;&gt;Change&lt;/a&gt;: A crawler to fetch Changes proposed to a repository. Monocle supports Gerrit (Reviews), GitHub (Pull-Requests), GitLab (Merge-Requests).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#taskdata&#34;&gt;TaskData&lt;/a&gt;: A crawler to fetch task data related to a repository. Monocle supports GitHub (issues), and BugZilla (Bugs).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;code&gt;.secrets&lt;/code&gt; file is used to store credentials and API keys used by crawlers to authenticate on providers.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;crawlers&lt;/code&gt; value is a list of crawler. Each crawler is composed of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;name&lt;/code&gt;: an abitrary name used to identify the crawler.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;update_since&lt;/code&gt;: the crawler will fetch changes that has been created/updated since that date.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;provider&lt;/code&gt;: provider settings&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-YAML&#34;&gt;workspaces:&#xA;  - name: demo&#xA;    crawlers:&#xA;      - name: spinnaker&#xA;        update_since: &#34;2020-01-01&#34;&#xA;        provider: {}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Change&lt;/h6&gt; &#xA;&lt;p&gt;A GitHub provider settings&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-YAML&#34;&gt;  provider:&#xA;    github_organization: spinnaker&#xA;    # Optional settings&#xA;    github_repositories:&#xA;      - pipeline&#xA;    github_url: https://github.com/api/graphql&#xA;    github_token: GITHUB_TOKEN&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;github_organization&lt;/code&gt; is the only mandatory key. If &lt;code&gt;github_repositories&lt;/code&gt; is not specified then the crawler will crawl the whole organization repositories. If specified then it will crawl only the listed repositories. To crawl repositories from a personnal GitHub account, you need to set &lt;code&gt;github_organization&lt;/code&gt; to you account name and list repositories under the &lt;code&gt;github_repositories&lt;/code&gt; key.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;github_url&lt;/code&gt; might be specified in case of an alternate url. Default is &#34;&lt;a href=&#34;https://github.com/api/graphql&#34;&gt;https://github.com/api/graphql&lt;/a&gt;&#34;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;github_token&lt;/code&gt; might be specified to use an alternate environment variable name to look for the token value. Default is &#34;GITHUB_TOKEN&#34;&lt;/p&gt; &#xA;&lt;p&gt;To crawl privates repositories, you must generate a Personal Access Token with the &#34;repo&#34; scope.&lt;/p&gt; &#xA;&lt;p&gt;A Gerrit provider settings&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-YAML&#34;&gt;  provider:&#xA;    gerrit_url: https://review.opendev.org&#xA;    gerrit_repositories:&#xA;      - openstack/nova&#xA;      - openstack/neutron&#xA;    # Optional settings&#xA;    gerrit_login: monocle&#xA;    gerrit_password: GERRIT_PASSWORD&#xA;    gerrit_prefix: opendev/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;gerrit_url&lt;/code&gt; is mandatory and must be the url of the Gerrit provider. &lt;code&gt;gerrit_repositories&lt;/code&gt; is mandatory and is the list of repositories from which the crawler will fetch Reviews from.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gerrit_login&lt;/code&gt; might be specified to authenticate on the provider API. &lt;code&gt;gerrit_password&lt;/code&gt;might be specified to use an alternate environment variable name to look for the password. Default is &#34;GERRIT_PASSWORD&#34;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gerrit_prefix&lt;/code&gt; might be set to configure the crawler to prepend the repository name with a prefix.&lt;/p&gt; &#xA;&lt;p&gt;A GitLab provider settings&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-YAML&#34;&gt;  provider:&#xA;    gitlab_organization: redhat/centos-stream/ci-cd/zuul&#xA;    # Optional settings&#xA;    gitlab_repositories:&#xA;      - jobs-config&#xA;    gitlab_url: https://gitlab.com/api/graphql&#xA;    gitlab_token: GITLAB_TOKEN&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;gitlab_organization&lt;/code&gt; is the only mandatory key. If &lt;code&gt;gitlab_repositories&lt;/code&gt; is not specified then the crawler will crawl the whole organization repositories. If specified then it will crawl only the listed repositories.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gitlab_url&lt;/code&gt; might be specified in case of an alternate url. Default is &#34;&lt;a href=&#34;https://gitlab.com/api/graphql&#34;&gt;https://gitlab.com/api/graphql&lt;/a&gt;&#34;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gitlab_token&lt;/code&gt; might be specified to use an alternate environment variable name to look for the token value. Default is &#34;GITLAB_TOKEN&#34;&lt;/p&gt; &#xA;&lt;p&gt;To crawl privates repositories, you must generate a Personal Access Token with the &#34;read_api&#34; scope.&lt;/p&gt; &#xA;&lt;h6&gt;TaskData&lt;/h6&gt; &#xA;&lt;p&gt;Monocle provides additional crawlers to attach tasks/issues/RFEs to changes based on a match on &lt;code&gt;change_url&lt;/code&gt;. Then, Changes can be enhanced with information about related tasks such as a &lt;code&gt;priority&lt;/code&gt; or a &lt;code&gt;score&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For GitHub:&lt;/p&gt; &#xA;&lt;p&gt;The GitHub TaskData crawler run automatically whenever repositories are specified into a &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#github&#34;&gt;GitHub Changes crawler&lt;/a&gt; definition.&lt;/p&gt; &#xA;&lt;p&gt;For Bugzilla:&lt;/p&gt; &#xA;&lt;p&gt;A BugZilla provider settings&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-YAML&#34;&gt;  provider:&#xA;    bugzilla_url: https://redhat.bugzilla.com&#xA;    bugzilla_products:&#xA;      - Awesome product&#xA;    # Optional settings&#xA;    bugzilla_token: BUGZILLA_TOKEN&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;bugzilla_product&lt;/code&gt; must be specified. The crawler will crawl listed products for bugs that contain an external bug references &lt;code&gt;ext_bz_bug_id&lt;/code&gt;. The crawler assumes that the external reference is used to link to a change (Pull-Request/Review).&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;bugzilla_token&lt;/code&gt; might be specified to use an alternate environment variable name to look for the token value. Default is &#34;BUGZILLA_TOKEN&#34;&lt;/p&gt; &#xA;&lt;p&gt;Note that this crawler is managed by the &lt;code&gt;crawler&lt;/code&gt; container.&lt;/p&gt; &#xA;&lt;h5&gt;Projects definition&lt;/h5&gt; &#xA;&lt;p&gt;Projects could be defined within a workspace configuration. A project is identified by a name and allows to set the following filter attributes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;repository_regex&lt;/li&gt; &#xA; &lt;li&gt;branch_regex&lt;/li&gt; &#xA; &lt;li&gt;file_regex&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here is an example of configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-YAML&#34;&gt;workspaces:&#xA;  - name: example&#xA;    crawlers:&#xA;      - name: openstack&#xA;        provider:&#xA;          gerrit_url: https://review.opendev.org&#xA;          gerrit_repositories:&#xA;            - ^openstack/.*&#xA;        update_since: &#34;2021-01-01&#34;&#xA;    projects:&#xA;      - name: compute&#xA;        repository_regex: &#34;.*nova.*&#34;&#xA;      - name: compute-tests&#xA;        file_regex: &#34;test[s]/.*&#34;&#xA;        repository_regex: &#34;.*nova.*&#34;&#xA;      - name: deployment&#xA;        repository_regex: &#34;.*tripleo.*|.*puppet.*|.*ansible.*&#34;&#xA;        branch_regex: &#34;master&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The monocle API endpoint &lt;code&gt;api/1/get_projects&lt;/code&gt; can be queried to retrieved the list defined projects for a given workspace. See the &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/doc/openapi.yaml&#34;&gt;Monocle OpenAPI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The monocle query endpoint handles the query parameter: &lt;code&gt;project&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Identity Management&lt;/h5&gt; &#xA;&lt;p&gt;Monocle is able to index changes from multiple code review systems. A contributor might get different identities across code review systems. Thus Monocle provides a configuration section to define aliases for contributors.&lt;/p&gt; &#xA;&lt;p&gt;Let say a Monocle workspace is configured to fetch changes from github.com and review.opendev.org (Gerrit) and we would like that John&#39;s metrics are merged under the &lt;code&gt;John Doe&lt;/code&gt; identity.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-YAML&#34;&gt;workspaces:&#xA;  - name: example&#xA;    idents:&#xA;      - ident: John Doe&#xA;        aliases:&#xA;          - github.com/john-doe&#xA;          - review.opendev.org/John Doe/12345&#xA;          - AuthProviderUID:jdoe&#xA;    crawlers:&#xA;      - name: github-containers&#xA;        provider:&#xA;          github_organization: containers&#xA;          github_token: &amp;lt;github_token&amp;gt;&#xA;        update_since: &#39;2000-01-01&#39;&#xA;&#xA;      - name: gerrit-opendev&#xA;        provider:&#xA;          gerrit_url: https://review.opendev.org&#xA;          gerrit_repositories:&#xA;            - ^openstack/.*&#xA;        update_since: &#39;2000-01-01&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A contributor id on github.com or a GitHub enterprise instance is formated as &lt;code&gt;&amp;lt;domain&amp;gt;/&amp;lt;login&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A contributor id on a Gerrit instance is formated as &lt;code&gt;&amp;lt;domain&amp;gt;/&amp;lt;Full Name&amp;gt;/&amp;lt;gerrit-user-id&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h6&gt;Apply idents configuration&lt;/h6&gt; &#xA;&lt;p&gt;Database objects must be updated to reflect the configuration. Once &lt;code&gt;config.yaml&lt;/code&gt; is updated, run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose run --rm --no-deps api monocle janitor update-idents --elastic elastic:9200 --config /etc/monocle/config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Groups definition&lt;/h5&gt; &#xA;&lt;p&gt;A group in Monocle permits to group authors of Changes and filter them from the web interface.&lt;/p&gt; &#xA;&lt;p&gt;Group memberships are defined through the &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#identity-management&#34;&gt;idents&lt;/a&gt; section of the configuration.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-YAML&#34;&gt;workspaces:&#xA;  - name: example&#xA;    idents:&#xA;      - ident: John Doe&#xA;        aliases:&#xA;          - github.com/john-doe&#xA;          - review.opendev.org/John Doe/12345&#xA;        groups:&#xA;          - devs&#xA;      - ident: Jane Doe&#xA;        aliases:&#xA;          - github.com/jane-doe&#xA;        groups:&#xA;          - devs&#xA;          - ptl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Search aliases definition&lt;/h5&gt; &#xA;&lt;p&gt;The Monocle configuration file provides a way to define aliases to be used in search queries. A use case could be to group &lt;code&gt;bot&lt;/code&gt; authors to provide an easy way to exclude them from search results.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-YAML&#34;&gt;workspaces:&#xA;  - name: example&#xA;    search_aliases:&#xA;      - name: bots&#xA;        alias: &#39;(author:&#34;github-actions&#34; or author:&#34;bedevere-bot&#34;)&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then the query could be: &#34;from:now-3weeks and not bot&#34;.&lt;/p&gt; &#xA;&lt;h4&gt;About&lt;/h4&gt; &#xA;&lt;p&gt;This section configures information to be displayed by the WEB Application on the &lt;code&gt;About&lt;/code&gt; modal.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-YAML&#34;&gt;about:&#xA;  links:&#xA;    - category: Community&#xA;      name: Monocle configuration&#xA;      url: https://github.com/change-metrics/demo-node-config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Authentication&lt;/h4&gt; &#xA;&lt;p&gt;Monocle supports user authentication via an OIDC (OpenID Connect) provider.&lt;/p&gt; &#xA;&lt;p&gt;Once authenticated, Monocle is able to display personalized content like resolving the &lt;em&gt;self&lt;/em&gt; query value such as in the query: &lt;em&gt;author: self&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Monocle only support one provider at a time.&lt;/p&gt; &#xA;&lt;p&gt;Note that by default and if no authentication system is configured, Monocle provides an &lt;em&gt;unauthentcated login&lt;/em&gt; mechanism which allows a user to enter its &lt;em&gt;author name&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;OIDC Provider&lt;/h5&gt; &#xA;&lt;p&gt;Here is an example of configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-YAML&#34;&gt;auth:&#xA;  auth_provider:&#xA;    oidc_client_id: my_client_id&#xA;    oidc_issuer_url: https://accounts.google.com&#xA;    oidc_provider_name: my provider&#xA;    oidc_user_claim: email&#xA;  enforce_auth: false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;oidc_client_id: is the client id that is provided by your OIDC provider.&lt;/li&gt; &#xA; &lt;li&gt;oidc_issuer_url: is the URL used to discover your OIDC&#39;s provider configuration (via the &lt;em&gt;.well-known/openid-configuration&lt;/em&gt; endpoint).&lt;/li&gt; &#xA; &lt;li&gt;oidc_provider_name: is the name displayed on the authentication modal in the WEB Application.&lt;/li&gt; &#xA; &lt;li&gt;oidc_user_claim: (optional) is the JWT claim used as/(or to discover matching) Monocle User ID. (Default: &lt;em&gt;sub&lt;/em&gt;)&lt;/li&gt; &#xA; &lt;li&gt;enfore_auth: (optional) if set to &lt;em&gt;True&lt;/em&gt; then Monocle requires a valid JWT to access any API endpoints and the WEB Application requires the user to login to navigate. (Default: &lt;em&gt;False&lt;/em&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The redirect URI to configure on the OIDC provider is: &lt;code&gt;&amp;lt;MONOCLE_PUBLIC_URL&amp;gt;/auth/cb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Furthermore, two additional settings (&lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#environment-variables&#34;&gt;environment variables&lt;/a&gt;) are required to enable the Authentication provider:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MONOCLE_PUBLIC_URL: is used to redirect the OIDC provider to the callback endpoint and the user to the Monocle WEB Application after a successful authentication.&lt;/li&gt; &#xA; &lt;li&gt;MONOCLE_OIDC_&amp;lt;PROVIDER_NAME&amp;gt;_CLIENT_SECRET: Monocle looks for this variable to discover the client secret which has been provided by your OIDC provider.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Monocle API generates the following log line when the Authentication provider has been properly set up:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;2022-10-11 10:39:11 INFO    Monocle.Main:149: AuthSystemReady {&#34;provider&#34;:&#34;my provider&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Monocle issues its own JWTs to the WEB Application users. JWTs issued by the OIDC provider are used to get the authenticated user&#39;s information such as its unique uid via the &lt;em&gt;oidc_user_claim&lt;/em&gt;. Monocle uses the UID (from the OIDC provider) to discover through the &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/#identity-management&#34;&gt;idents&lt;/a&gt; settings a matching Monocle Ident. A &lt;em&gt;matching ident&lt;/em&gt; defines an &lt;em&gt;alias&lt;/em&gt; which is &lt;em&gt;AuthProviderUID:&amp;lt;user_unique_id&amp;gt;&lt;/em&gt;. In case of no matching ident then the user claim value is used.&lt;/p&gt; &#xA;&lt;p&gt;A Monocle JWT is valid for 24 hours, once expired the user must login again to the OIDC provider.&lt;/p&gt; &#xA;&lt;h6&gt;Service tokens&lt;/h6&gt; &#xA;&lt;p&gt;Monocle can issue service tokens to be used by applications that consume the Monocle API. To request a token your need to perform the following call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;curl -XPOST -d &#39;{&#34;token&#34;: &#34;&amp;lt;admin_token&amp;gt;&#34;}&#39; -H &#34;Content-type: application/json&#34; &amp;lt;monocle_public_url&amp;gt;/auth/get&#xA;{&#34;jwt&#34;:&#34;eyJhbGciOiJIUzUxMiJ9.eyJkYXQiOnsiYURlZmF1bHRNdWlkIjoiYm90IiwiYU11aWRNYXAiOnt9fX0.bmj5vcxXxz2LmkrVKxX8jd-aYzHeTng_QBzR_9YZwCb9ToKA59TVlN1wZf6hhPlUX1VU82Y94gVCREDifintZg&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then set the &lt;em&gt;Authorization&lt;/em&gt; header to access Monocle API:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;curl -XPOST -d &#39;{&#34;void&#34;: &#34;&#34;}&#39; -H &#34;Content-type: application/json&#34; -H &#39;Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJkYXQiOnsiYURlZmF1bHRNdWlkIjoiYm90IiwiYU11aWRNYXAiOnt9fX0.bmj5vcxXxz2LmkrVKxX8jd-aYzHeTng_QBzR_9YZwCb9ToKA59TVlN1wZf6hhPlUX1VU82Y94gVCREDifintZg&#39; &amp;lt;monocle_public_url&amp;gt;/auth/whoami&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;MONOCLE_ADMIN_TOKEN&lt;/code&gt; must be set to enable this endpoint.&lt;/p&gt; &#xA;&lt;h3&gt;Full configuration file example&lt;/h3&gt; &#xA;&lt;p&gt;Here are the expected environment variables that need to be added to the &lt;code&gt;.secrets&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;CRAWLERS_API_KEY&lt;/code&gt;: an arbitrary api key used by the crawler to index data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GITHUB_TOKEN&lt;/code&gt;: an API key for GitHub crawler.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GITLAB_TOKEN&lt;/code&gt;: an API key for GitLab crawler.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Open the sample &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/test/data/config.yaml&#34;&gt;config.yaml&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Troubleshooting&lt;/h4&gt; &#xA;&lt;p&gt;ElasticSearch could need some capabilities to run in container mode. Take a look at the logs to see if it started correctly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;$ docker-compose logs elastic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, you could need to increase this system parameter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;$ sudo sysctl -w vm.max_map_count=262144&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or make the data directory writable for other:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;$ chmod o+w data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To delete a workspace (a workspace is an elasticsearch index):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;# List indexes with:&#xA;docker-compose run --rm --no-deps api curl http://elastic:9200/_aliases?pretty=true&#xA;# Delete an index with&#xA;docker-compose run --rm --no-deps api curl -XDELETE http://elastic:9200/&amp;lt;index-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ElasticSearch sets defaults settings on new indexes. The default setting for queries based on regex is set to a value that might not fit your usage especially when your project definitions uses regex above that limit. However the limit could be increased using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;docker-compose run --rm --no-deps api curl \&#xA;-XPUT http://localhost:9200/monocle.changes.1.&amp;lt;index-name&amp;gt;/_settings \&#xA;-H &#34;Content-Type: application/json&#34; -d &#39;{&#34;index&#34;: {&#34;max_regex_length&#34;: 50000}}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Crawler default ciphers can be restrictive and not able to work with some load balancer of remote server advertising an unsupported cipher. If you experience &lt;code&gt;wrong signature type&lt;/code&gt; errors in the crawler container, you should consider changing ciphers using the &lt;code&gt;TLS_CIPHER&lt;/code&gt; environment variable in your docker-compose configuration file. You can find &lt;a href=&#34;https://fedoraproject.org/wiki/Changes/StrongCryptoSettings2&#34;&gt;additional information&lt;/a&gt; on Fedora changelog.&lt;/p&gt; &#xA;&lt;p&gt;To disable TLS verification, set the &lt;code&gt;TLS_NO_VERIFY&lt;/code&gt; environment variable to &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Components&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/doc/architecture.png&#34; alt=&#34;architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Monocle is composed of the following services:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;an Elasticsearch data store.&lt;/li&gt; &#xA; &lt;li&gt;an API service to serve the Web APP and API requests.&lt;/li&gt; &#xA; &lt;li&gt;a crawler service to retrieve change from providers.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The APIs are defined using &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/schemas/monocle&#34;&gt;protobuf&lt;/a&gt; and served over HTTP through &lt;a href=&#34;https://raw.githubusercontent.com/change-metrics/monocle/master/doc/openapi.yaml&#34;&gt;Monocle OpenAPI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Monitoring&lt;/h2&gt; &#xA;&lt;p&gt;To setup the monitoring:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create the prometheus service by providing the API and CRAWLER location&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;export API_TARGET=localhost:8080&#xA;export CRAWLER_TARGET=localhost:9001&#xA;mkdir -p /srv/prometheus&#xA;podman create --network host -v /srv/prometheus:/var/lib/prometheus:Z -e API_TARGET=${API_TARGET} -e CRAWLER_TARGET=${CRAWLER_TARGET} --name monocle-prometheus quay.io/change-metrics/monocle-prometheus:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Create the grafana service (on the prometheus host)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;mkdir -p /srv/grafana&#xA;podman create --network host -v /srv/grafana:/var/lib/grafana:Z -e GRAFANA_PASS=secret --name monocle-grafana quay.io/change-metrics/monocle-grafana:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Starts the services with systemd&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;mkdir -p ~/.config/systemd/user/&#xA;for service in prometheus grafana; do podman generate systemd -n monocle-$service &amp;gt; ~/.config/systemd/user/monocle-$service.service; done&#xA;systemctl --user daemon-reload&#xA;for service in prometheus grafana; do systemctl --user start monocle-$service; done&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Check metrics with grafana dashboard at &lt;a href=&#34;http://localhost:19030/&#34;&gt;http://localhost:19030/&lt;/a&gt; (login with &#39;admin:secret&#39;)&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>