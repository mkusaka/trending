<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-08T01:56:06Z</updated>
  <subtitle>Weekly Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>input-output-hk/marlowe-cardano</title>
    <updated>2023-01-08T01:56:06Z</updated>
    <id>tag:github.com,2023-01-08:/input-output-hk/marlowe-cardano</id>
    <link href="https://github.com/input-output-hk/marlowe-cardano" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Marlowe smart contract language Cardano implementation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://github.com/input-output-hk/marlowe-cardano&#34;&gt;Marlowe on the Cardano Blockchain&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt; &#xA; &lt;div id=&#34;toctitle&#34;&gt;&#xA;  Table of Contents&#xA; &lt;/div&gt; &#xA; &lt;ul class=&#34;sectlevel1&#34;&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#_documentation&#34;&gt;Documentation&lt;/a&gt; &#xA;   &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#_user_documentation&#34;&gt;User documentation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#_working_with_the_project&#34;&gt;Working with the project&lt;/a&gt; &#xA;   &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#_how_to_submit_an_issue&#34;&gt;How to submit an issue&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#how-to-develop&#34;&gt;How to develop and contribute to the project&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#_how_to_depend_on_the_project_from_another_haskell_project&#34;&gt;How to depend on the project from another Haskell project&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#_how_to_build_the_projects_artifacts&#34;&gt;How to build the project’s artifacts&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#_deployment&#34;&gt;Deployment&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#nix-advice&#34;&gt;Nix&lt;/a&gt; &#xA;   &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#iohk-binary-cache&#34;&gt;How to set up the IOHK binary caches&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#_nix_on_macos&#34;&gt;Nix on macOS&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#nix-build-attributes&#34;&gt;Which attributes to use to build different artifacts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#_docker_compose&#34;&gt;Docker compose&lt;/a&gt; &#xA;   &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#_accessing_the_node_socket&#34;&gt;Accessing the node socket:&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#_licensing&#34;&gt;Licensing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/div&gt; &#xA;&lt;div id=&#34;preamble&#34;&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Marlowe is a platform for financial products as smart contracts. Marlowe-Cardano is an implementation of Marlowe for the Cardano blockchain, built on top of Plutus.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;This repository contains:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;The implementation of the Marlowe domain-specific language.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Tools for working with Marlowe, including static analysis.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;A selection of examples using Marlowe, including a number based on the ACTUS financial standard.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;The Marlowe Playground, a web-based playground for learning and writing Marlowe Applications.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;admonitionblock important&#34;&gt; &#xA;   &lt;table&gt; &#xA;    &lt;tbody&gt;&#xA;     &lt;tr&gt; &#xA;      &lt;td class=&#34;icon&#34;&gt; &#xA;       &lt;div class=&#34;title&#34;&gt;&#xA;        Important&#xA;       &lt;/div&gt; &lt;/td&gt; &#xA;      &lt;td class=&#34;content&#34;&gt; &#xA;       &lt;div class=&#34;paragraph&#34;&gt; &#xA;        &lt;p&gt;The rest of this README is focussed on people who want to develop or contribute to Marlowe.&lt;/p&gt; &#xA;       &lt;/div&gt; &#xA;       &lt;div class=&#34;paragraph&#34;&gt; &#xA;        &lt;p&gt;For people who want to &lt;strong&gt;use&lt;/strong&gt; Marlowe, please consult the &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#user-documentation&#34;&gt;[user-documentation]&lt;/a&gt;.&lt;/p&gt; &#xA;       &lt;/div&gt; &lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt;&#xA;   &lt;/table&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div id=&#34;cache-warning&#34; class=&#34;admonitionblock important&#34;&gt; &#xA;   &lt;table&gt; &#xA;    &lt;tbody&gt;&#xA;     &lt;tr&gt; &#xA;      &lt;td class=&#34;icon&#34;&gt; &#xA;       &lt;div class=&#34;title&#34;&gt;&#xA;        Important&#xA;       &lt;/div&gt; &lt;/td&gt; &#xA;      &lt;td class=&#34;content&#34;&gt; &#xA;       &lt;div class=&#34;paragraph&#34;&gt; &#xA;        &lt;p&gt;DO NOT IGNORE THIS&lt;/p&gt; &#xA;       &lt;/div&gt; &#xA;       &lt;div class=&#34;paragraph&#34;&gt; &#xA;        &lt;p&gt;If you want to use Nix with this project, make sure to set up the &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#iohk-binary-cache&#34;&gt;IOHK binary cache&lt;/a&gt;. If you do not do this, you will end up building GHC, which takes several hours. If you find yourself building GHC, STOP and fix the cache.&lt;/p&gt; &#xA;       &lt;/div&gt; &lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt;&#xA;   &lt;/table&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_documentation&#34;&gt;Documentation&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_user_documentation&#34;&gt;User documentation&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;The main documentation for the whole Plutus ecosystem is located &lt;a href=&#34;https://plutus.readthedocs.io/en/latest/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;An index of key documentation for Marlowe development is located at &lt;a href=&#34;https://developers.cardano.org/docs/smart-contracts/marlowe/#resources-for-developing-and-deploying-marlowe-contracts&#34; class=&#34;bare&#34;&gt;https://developers.cardano.org/docs/smart-contracts/marlowe/#resources-for-developing-and-deploying-marlowe-contracts&lt;/a&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_working_with_the_project&#34;&gt;Working with the project&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_how_to_submit_an_issue&#34;&gt;How to submit an issue&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Issues can be filed in the &lt;a href=&#34;https://github.com/input-output-hk/marlowe-cardano/issues&#34;&gt;GitHub Issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;However, note that this is pre-release software, so we will not usually be providing support.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;how-to-develop&#34;&gt;How to develop and contribute to the project&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/CONTRIBUTING.html&#34;&gt;CONTRIBUTING&lt;/a&gt;, which describes our processes in more detail including development environments; and &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/ARCHITECTURE.html&#34;&gt;ARCHITECTURE&lt;/a&gt;, which describes the structure of the repository.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_how_to_depend_on_the_project_from_another_haskell_project&#34;&gt;How to depend on the project from another Haskell project&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;None of our libraries are on Hackage, unfortunately (many of our dependencies aren’t either). So for the time being, you need to:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;olist arabic&#34;&gt; &#xA;    &lt;ol class=&#34;arabic&#34;&gt; &#xA;     &lt;li&gt; &lt;p&gt;Add &lt;code&gt;marlowe&lt;/code&gt; as a &lt;code&gt;source-repository-package&lt;/code&gt; to your &lt;code&gt;cabal.project&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Copy the &lt;code&gt;source-repository-package&lt;/code&gt; stanzas from our &lt;code&gt;cabal.project&lt;/code&gt; to yours.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Copy additional stanzas from our &lt;code&gt;cabal.project&lt;/code&gt; as you need, e.g. you may need some of the &lt;code&gt;allow-newer&lt;/code&gt; stanzas.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ol&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_how_to_build_the_projects_artifacts&#34;&gt;How to build the project’s artifacts&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;This section contains information about how to build the project’s artifacts for independent usage. For development work see &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#how-to-develop&#34;&gt;How to develop and contribute to the project&lt;/a&gt; for more information.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;The Haskell libraries in the Marlowe project are built with &lt;code&gt;cabal&lt;/code&gt; and Nix. The other artifacts (docs etc.) are also most easily built with Nix.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;sect4&#34;&gt; &#xA;     &lt;h5 id=&#34;_nix&#34;&gt;Nix&lt;/h5&gt; &#xA;     &lt;div class=&#34;paragraph&#34;&gt; &#xA;      &lt;p&gt;Install &lt;a href=&#34;https://nixos.org/nix/&#34;&gt;Nix&lt;/a&gt; (recommended). following the instructions on the &lt;a href=&#34;https://nixos.org/nix/&#34;&gt;Nix website&lt;/a&gt;.&lt;/p&gt; &#xA;     &lt;/div&gt; &#xA;     &lt;div class=&#34;paragraph&#34;&gt; &#xA;      &lt;p&gt;Make sure you have read and understood the &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#cache-warning&#34;&gt;cache warning&lt;/a&gt;. DO NOT IGNORE THIS.&lt;/p&gt; &#xA;     &lt;/div&gt; &#xA;     &lt;div class=&#34;paragraph&#34;&gt; &#xA;      &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#nix-advice&#34;&gt;Nix&lt;/a&gt; for further advice on using Nix.&lt;/p&gt; &#xA;     &lt;/div&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;sect4&#34;&gt; &#xA;     &lt;h5 id=&#34;_non_nix&#34;&gt;Non-Nix&lt;/h5&gt; &#xA;     &lt;div class=&#34;paragraph&#34;&gt; &#xA;      &lt;p&gt;You can build some of the Haskell packages without Nix, but this is not recommended and we don’t guarantee that these prerequisites are sufficient. If you use Nix, these tools are provided for you via &lt;code&gt;nix develop&lt;/code&gt;, and you do &lt;strong&gt;not&lt;/strong&gt; need to install them yourself.&lt;/p&gt; &#xA;     &lt;/div&gt; &#xA;     &lt;div class=&#34;ulist&#34;&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt; &lt;p&gt;If you want to build our Haskell packages with &lt;a href=&#34;https://www.haskell.org/cabal/&#34;&gt;&lt;code&gt;cabal&lt;/code&gt;&lt;/a&gt;, then install it.&lt;/p&gt; &lt;/li&gt; &#xA;       &lt;li&gt; &lt;p&gt;If you want to build our Haskell packages with &lt;a href=&#34;https://haskellstack.org/&#34;&gt;&lt;code&gt;stack&lt;/code&gt;&lt;/a&gt;, then install it.&lt;/p&gt; &lt;/li&gt; &#xA;       &lt;li&gt; &lt;p&gt;If you want to build our Agda code, then install &lt;a href=&#34;https://github.com/agda/agda&#34;&gt;Agda&lt;/a&gt; and the &lt;a href=&#34;https://github.com/agda/agda-stdlib&#34;&gt;standard library&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;/ul&gt; &#xA;     &lt;/div&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;building-with-nix&#34;&gt;How to build the Haskell packages and other artifacts with Nix&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;Run &lt;code&gt;nix build .#marlowe.haskell.packages.marlowe.components.library&lt;/code&gt; from the root to build the Marlowe library.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#nix-build-attributes&#34;&gt;Which attributes to use to build different artifacts&lt;/a&gt; to find out what other attributes you can build.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;_how_to_build_the_haskell_packages_with_cabal&#34;&gt;How to build the Haskell packages with &lt;code&gt;cabal&lt;/code&gt;&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;The Haskell packages can be built directly with &lt;code&gt;cabal&lt;/code&gt;. We do this during development (see &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#how-to-develop&#34;&gt;How to develop and contribute to the project&lt;/a&gt;). The best way is to do this is inside a &lt;code&gt;nix develop&lt;/code&gt;.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;admonitionblock note&#34;&gt; &#xA;     &lt;table&gt; &#xA;      &lt;tbody&gt;&#xA;       &lt;tr&gt; &#xA;        &lt;td class=&#34;icon&#34;&gt; &#xA;         &lt;div class=&#34;title&#34;&gt;&#xA;          Note&#xA;         &lt;/div&gt; &lt;/td&gt; &#xA;        &lt;td class=&#34;content&#34;&gt; &#xA;         &lt;div class=&#34;paragraph&#34;&gt; &#xA;          &lt;p&gt;For fresh development setups, you also need to run &lt;code&gt;cabal update&lt;/code&gt;.&lt;/p&gt; &#xA;         &lt;/div&gt; &lt;/td&gt; &#xA;       &lt;/tr&gt; &#xA;      &lt;/tbody&gt;&#xA;     &lt;/table&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;Run &lt;code&gt;cabal build marlowe&lt;/code&gt; from the root to build the Marlowe library.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/cabal.project&#34;&gt;cabal project file&lt;/a&gt; to see the other packages that you can build with &lt;code&gt;cabal&lt;/code&gt;.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_deployment&#34;&gt;Deployment&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Marlowe Run and the Marlowe Playground are automatically deployed upon certain pushes to GitHub&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://marlowe-playground-staging.plutus.aws.iohkdev.io/&#34;&gt;Marlowe Playground staging&lt;/a&gt; and &lt;a href=&#34;https://marlowe-run-staging.plutus.aws.iohkdev.io/&#34;&gt;Marlowe Run staging&lt;/a&gt; are deployed from every commit pushed to &lt;code&gt;main&lt;/code&gt; (these URLs subject to change)&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://play.marlowe-finance.io/&#34;&gt;Marlowe Playground production&lt;/a&gt; and &lt;a href=&#34;https://run.marlowe-finance.io/&#34;&gt;Marlowe Run production&lt;/a&gt; are deployed from every commit pushed to &lt;code&gt;production&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;For more details, including instructions for setting up ad hoc testing deployments, see &lt;a href=&#34;https://github.com/input-output-hk/plutus-ops&#34;&gt;the plutus-ops repo&lt;/a&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;nix-advice&#34;&gt;Nix&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;iohk-binary-cache&#34;&gt;How to set up the IOHK binary caches&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Adding the IOHK binary cache to your Nix configuration will speed up builds a lot, since many things will have been built already by our CI.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;If you find you are building packages that are not defined in this repository, or if the build seems to take a very long time then you may not have this set up properly.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;To set up the cache:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;olist arabic&#34;&gt; &#xA;    &lt;ol class=&#34;arabic&#34;&gt; &#xA;     &lt;li&gt; &lt;p&gt;On non-NixOS, edit &lt;code&gt;/etc/nix/nix.conf&lt;/code&gt; and add the following lines:&lt;/p&gt; &#xA;      &lt;div class=&#34;listingblock&#34;&gt; &#xA;       &lt;div class=&#34;content&#34;&gt; &#xA;        &lt;pre&gt;substituters        = https://cache.iog.io https://iohk.cachix.org https://cache.nixos.org/&#xA;trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= iohk.cachix.org-1:DpRUyj7h7V830dp/i6Nti+NEO2/nhblbov/8MW7Rqoo= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;div class=&#34;admonitionblock note&#34;&gt; &#xA;       &lt;table&gt; &#xA;        &lt;tbody&gt;&#xA;         &lt;tr&gt; &#xA;          &lt;td class=&#34;icon&#34;&gt; &#xA;           &lt;div class=&#34;title&#34;&gt;&#xA;            Note&#xA;           &lt;/div&gt; &lt;/td&gt; &#xA;          &lt;td class=&#34;content&#34;&gt; &#xA;           &lt;div class=&#34;paragraph&#34;&gt; &#xA;            &lt;p&gt;If you don’t have an &lt;code&gt;/etc/nix/nix.conf&lt;/code&gt; or don’t want to edit it, you may add the &lt;code&gt;nix.conf&lt;/code&gt; lines to &lt;code&gt;~/.config/nix/nix.conf&lt;/code&gt; instead. You must be a &lt;a href=&#34;https://nixos.org/nix/manual/#ssec-multi-user&#34;&gt;trusted user&lt;/a&gt; to do this.&lt;/p&gt; &#xA;           &lt;/div&gt; &lt;/td&gt; &#xA;         &lt;/tr&gt; &#xA;        &lt;/tbody&gt;&#xA;       &lt;/table&gt; &#xA;      &lt;/div&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;On NixOS, set the following NixOS options:&lt;/p&gt; &#xA;      &lt;div class=&#34;listingblock&#34;&gt; &#xA;       &lt;div class=&#34;content&#34;&gt; &#xA;        &lt;pre&gt;nix.settings = {&#xA;  substituters        = [ &#34;https://cache.iog.io&#34; &#34;https://iohk.cachix.org&#34; ];&#xA;  trusted-public-keys = [ &#34;hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=&#34; &#34;iohk.cachix.org-1:DpRUyj7h7V830dp/i6Nti+NEO2/nhblbov/8MW7Rqoo=&#34; ];&#xA;};&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &lt;/li&gt; &#xA;    &lt;/ol&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_nix_on_macos&#34;&gt;Nix on macOS&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Nix on macOS can be a bit tricky. In particular, sandboxing is disabled by default, which can lead to strange failures.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;These days it should be safe to turn on sandboxing on macOS with a few exceptions. Consider setting the following Nix settings, in the same way as in &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/#iohk-binary-cache&#34;&gt;previous section&lt;/a&gt;:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;sandbox = true&#xA;extra-sandbox-paths = /System/Library/Frameworks /System/Library/PrivateFrameworks /usr/lib /private/tmp /private/var/tmp /usr/bin/env&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Changes to &lt;code&gt;/etc/nix/nix.conf&lt;/code&gt; may require a restart of the nix daemon in order to take affect. Restart the nix daemon by running the following commands:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;sudo launchctl stop org.nixos.nix-daemon&#xA;sudo launchctl start org.nixos.nix-daemon&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;nix-build-attributes&#34;&gt;Which attributes to use to build different artifacts&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/packages.nix&#34;&gt;&lt;code&gt;packages.nix&lt;/code&gt;&lt;/a&gt; defines a package set with attributes for all the artifacts you can build from this repository. These can be built using &lt;code&gt;nix build&lt;/code&gt;. For example:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;nix build .#docs.site&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;div class=&#34;title&#34;&gt;&#xA;     Example attributes&#xA;    &lt;/div&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;Project packages: defined inside &lt;code&gt;marlowe.haskell.packages&lt;/code&gt;&lt;/p&gt; &#xA;      &lt;div class=&#34;ulist&#34;&gt; &#xA;       &lt;ul&gt; &#xA;        &lt;li&gt; &lt;p&gt;e.g.&amp;nbsp;&lt;code&gt;marlowe.haskell.packages.marlowe.components.library&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;       &lt;/ul&gt; &#xA;      &lt;/div&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;There are other attributes defined in &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/packages.nix&#34;&gt;&lt;code&gt;packages.nix&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_docker_compose&#34;&gt;Docker compose&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;There is a &lt;code&gt;docker compose&lt;/code&gt; setup designed to give a local developer mode of the marlowe runtime components, configured in &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/nix/dev/compose.nix&#34;&gt;&lt;code&gt;compose.nix&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Currently, this only supports Linux systems.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;On Linux, &lt;code&gt;compose.yaml&lt;/code&gt; will be automatically set up for the user when entering &lt;code&gt;nix develop&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Running &lt;code&gt;nix run .#re-up&lt;/code&gt; will refresh &lt;code&gt;compose.yaml&lt;/code&gt; if need be and then restart any services which have changed.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Services currently included:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;chainseekd&lt;/code&gt;: &lt;code&gt;chainseekd&lt;/code&gt; for the &lt;code&gt;preview&lt;/code&gt; network&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;marlowe-chain-indexer&lt;/code&gt;: &lt;code&gt;marlowe-chain-indexer&lt;/code&gt; for the &lt;code&gt;preview&lt;/code&gt; network&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;node&lt;/code&gt;: A node for the &lt;code&gt;preview&lt;/code&gt; network&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;postgres&lt;/code&gt;: A postgres instance, for chainseekd state.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;marlowe-history&lt;/code&gt;: A &lt;code&gt;marlowe-history&lt;/code&gt; instance.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;marlowe-discovery&lt;/code&gt;: A &lt;code&gt;marlowe-discovery&lt;/code&gt; instance.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;marlowe-tx&lt;/code&gt;: A &lt;code&gt;marlowe-tx&lt;/code&gt; instance.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;web&lt;/code&gt;: A &lt;code&gt;marlowe-web-server&lt;/code&gt; instance.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The following commands may be useful:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;docker compose exec postgres /exec/run-sqitch&lt;/code&gt;: Run the sqitch migrations for the chain-sync database.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;docker compose exec postgres psql -U postgres -d chain&lt;/code&gt;: Run psql in the &lt;code&gt;chain&lt;/code&gt; database.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;docker compose port&lt;/code&gt;, e.g. &lt;code&gt;docker compose port web 8080&lt;/code&gt; will show the local port that maps to port &lt;code&gt;8080&lt;/code&gt; for the &lt;code&gt;web&lt;/code&gt; service&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_accessing_the_node_socket&#34;&gt;Accessing the node socket:&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;The node socket file lives inside a Docker volume. Because it is created by the container, it is owned by root, and needs elevated permissions (via &lt;code&gt;sudo&lt;/code&gt;) to use - keep this in mind when using it locally with a tool like &lt;code&gt;cardano-cli&lt;/code&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;To list your Docker volumes, use the command &lt;code&gt;docker volume ls&lt;/code&gt;. The socket lives in the &lt;code&gt;marlowe-cardano_shared&lt;/code&gt; volume. Use &lt;code&gt;docker volume inspect marlowe-cardano_shared&lt;/code&gt; to obtain information about the volume. The &lt;code&gt;Mountpoint&lt;/code&gt; property shows the directory on the host machine that maps to the volume (one-liner: &lt;code&gt;docker volume inspect marlowe-cardano_shared | jq -r &#39;.[].Mountpoint&#39;&lt;/code&gt;)&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;To use this with &lt;code&gt;cardano-cli&lt;/code&gt;:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;export CARDANO_NODE_SOCKET_PATH=$(docker volume inspect marlowe-cardano_shared | jq -r &#39;.[].Mountpoint&#39;)&#xA;# -E passes the current environment to sudo&#xA;sudo -E cardano-cli ...&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_licensing&#34;&gt;Licensing&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;You are free to copy, modify, and distribute Marlowe under the terms of the Apache 2.0 license. See the &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/marlowe-cardano/main/NOTICE&#34;&gt;NOTICE&lt;/a&gt; files for details.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>input-output-hk/hydra</title>
    <updated>2023-01-08T01:56:06Z</updated>
    <id>tag:github.com,2023-01-08:/input-output-hk/hydra</id>
    <link href="https://github.com/input-output-hk/hydra" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implementation of the Hydra Head protocol&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;p align=&#34;center&#34;&gt;Hydra &lt;span&gt;🐲&lt;/span&gt;&lt;/p&gt;&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;Implementation of the Hydra scalability protocols.&lt;/p&gt; &#xA; &lt;a href=&#34;https://github.com/input-output-hk/hydra/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/input-output-hk/hydra/ci.yaml?branch=master&amp;amp;label=Tests&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/input-output-hk/hydra/pkgs/container/hydra-node&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/input-output-hk/hydra/docker.yaml?branch=master&amp;amp;label=Docker&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;&lt;span&gt;🌄&lt;/span&gt; Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Hydra is the layer-two scalability solution for Cardano, which aims to increase the speed of transactions (low latency, high throughput) and minimize transaction cost.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the proof-of-concept implementation for the Hydra &lt;a href=&#34;https://eprint.iacr.org/2020/299.pdf&#34;&gt;Head protocol&lt;/a&gt;. It is a developer preview that we&#39;ve put together, marching towards a production ready solution. It contains a &lt;code&gt;hydra-node&lt;/code&gt;, which runs a simplified (coordinated) Hydra Head protocol, connects to other hydra-nodes, interfaces the Cardano blockchain and provides an API to clients such as the included example terminal user interface &lt;code&gt;hydra-tui&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &lt;span&gt;⚠&lt;/span&gt; &lt;span&gt;⚠&lt;/span&gt;&lt;/p&gt; &#xA; &lt;p&gt;This is still prototypical and exploratory work shared here for your interest.&lt;/p&gt; &#xA; &lt;p&gt;It is NOT ready for production (yet).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;&lt;span&gt;🚀&lt;/span&gt; Getting started&lt;/h2&gt; &#xA;&lt;p&gt;The quickest way to get a &lt;code&gt;hydra-node&lt;/code&gt; running is to use our &lt;a href=&#34;https://github.com/orgs/input-output-hk/packages?repo_name=hydra&#34;&gt;docker images&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker pull ghcr.io/input-output-hk/hydra-node:0.8.1&#xA;docker run --rm ghcr.io/input-output-hk/hydra-node --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More information (including a demo) available on &lt;a href=&#34;https://hydra.family/head-protocol/docs/getting-started&#34;&gt;user manual 📖&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;🌈&lt;/span&gt; Features&lt;/h2&gt; &#xA;&lt;p&gt;Proof of concept:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Coordinated Hydra Head protocol&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Single Head per hydra-node&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Network statically configured, direct TCP connections&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; WebSocket, message-based API Server&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Terminal user interface client&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Cardano-node integration via Direct connection&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Running on testnet&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Persisted Head state&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Later:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Audited and mainnet ready&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Multiple Heads per hydra-node, managed via API&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Support for external wallets (e.g. hardware wallets)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Optimistic Head closure and incremental de-/commit protocol extension&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Relay-capable, mesh network&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;🤝&lt;/span&gt; Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The best way to contribute right now is to provide feedback. Give the &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/hydra/master/demo&#34;&gt;demo&lt;/a&gt; a test drive and have a look at our &lt;a href=&#34;https://hydra.family/head-protocol&#34;&gt;documentation&lt;/a&gt;. Should you have any questions, ideas or issues, we would like to hear from you:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;#ask-hydra on the IOG &lt;a href=&#34;https://discord.gg/Qq5vNTg9PT&#34;&gt;Discord server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;create a Github &lt;a href=&#34;https://github.com/input-output-hk/hydra/discussions&#34;&gt;Discussion&lt;/a&gt; or &lt;a href=&#34;https://github.com/input-output-hk/hydra/issues/new&#34;&gt;Issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;or ask on Cardano &lt;a href=&#34;https://cardano.stackexchange.com/&#34;&gt;StackExchange&lt;/a&gt; using the &lt;code&gt;hydra&lt;/code&gt; tag&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When contributing to this project and interacting with others, please follow our &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/hydra/master/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/input-output-hk/hydra/master/CODE-OF-CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Thanks for visiting and enjoy &lt;span&gt;❤️&lt;/span&gt;! &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>input-output-hk/hedgehog-extras</title>
    <updated>2023-01-08T01:56:06Z</updated>
    <id>tag:github.com,2023-01-08:/input-output-hk/hedgehog-extras</id>
    <link href="https://github.com/input-output-hk/hedgehog-extras" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>