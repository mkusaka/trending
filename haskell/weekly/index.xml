<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-18T01:53:41Z</updated>
  <subtitle>Weekly Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SimulaVR/Simula</title>
    <updated>2023-06-18T01:53:41Z</updated>
    <id>tag:github.com,2023-06-18:/SimulaVR/Simula</id>
    <link href="https://github.com/SimulaVR/Simula" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Linux VR Desktop&lt;/p&gt;&lt;hr&gt;&lt;p&gt;[[file:./doc/SimulaLogoHorizontal.png]]&lt;/p&gt; &#xA;&lt;p&gt;[[https://simulavr.com][Simula]] is a VR window manager for Linux that runs on top of [[https://godotengine.org/][Godot]]. It takes less than 1 minute to install.&lt;/p&gt; &#xA;&lt;h1&gt;[[https://d.tube/#!/v/sudoreboot/t026ny0m][file:./doc/SimulaDesktop.png]]&lt;/h1&gt; &#xA;&lt;h1&gt;[[https://i.imgur.com/zNTYTiG.png]]&lt;/h1&gt; &#xA;&lt;p&gt;[[http://www.youtube.com/watch?v=FWLuwG91HnI][http://img.youtube.com/vi/FWLuwG91HnI/0.jpg]]&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Video:&lt;/em&gt; [[http://www.youtube.com/watch?v=FWLuwG91HnI][Demonstration.]]&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Compatibility:&lt;/em&gt; Simula is officially compatible with SteamVR headsets equipped with Linux drivers (e.g. HTC Vive, HTC Vive Pro, &amp;amp; Valve Index). We have also added experimental support to OpenXR headsets that have Monado drivers (e.g. North Star, OSVR HDK, and PSVR). Some people have gotten the Oculus Rift S to run Simula via OpenHMD (see [[https://github.com/OpenHMD/OpenHMD/issues/225#issuecomment-638454156][here]]), though we have not officially tested this ourselves.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Mission:&lt;/em&gt; Facilitate a Linux future for VR &amp;amp; AR Desktop. In the short-run, this means allowing people to run 2D Linux apps with current generation headsets. In the long-run, this means allowing people to run Linux in standalone AR &amp;amp; VR HMDs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Simula One Headset:&lt;/em&gt; We are also in the process of developing a (limited number of) portable VR headsets for sale which come with SimulaVR mounted on them by default. If you are interested in purchasing one, [[https://simulavr.com][visit our website]] and join our waitlist to receive a place in line and/or periodic updates on its development.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Origins:&lt;/em&gt; Simula is a reimplementation fork of [[https://github.com/evil0sheep/motorcar][motorcar]]. To read about motorcar, see /[[https://github.com/evil0sheep/MastersThesis/blob/master/thesis.pdf?raw=true][Toward General Purpose 3D User Interfaces: Extending Windowing Systems to Three Dimensions]]/&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Text Quality&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A common objection to the viability of VR Desktop is that it exhibits poor text quality; however, with our low pass filter, Simula has taken special care to make text quality as clear as possible:&lt;/p&gt; &#xA;&lt;p&gt;[[./doc/TextQuality2.gif]]&lt;/p&gt; &#xA;&lt;p&gt;The left image is a VR terminal /without/ our filter applied; the right is the same image /with/ our filter applied. Compared to other VR Desktops, Simula allows for significantly longer sessions without uncomfortable eye strain.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To install Simula on all Linux distros, run:&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC shell&lt;/p&gt; &#xA;&lt;h1&gt;Clone&lt;/h1&gt; &#xA;&lt;p&gt;git clone --depth 1 --recursive &lt;a href=&#34;https://github.com/SimulaVR/Simula&#34;&gt;https://github.com/SimulaVR/Simula&lt;/a&gt; cd Simula&lt;/p&gt; &#xA;&lt;h1&gt;Download (or build, if downloading fails)&lt;/h1&gt; &#xA;&lt;p&gt;source ./utils/Helpers.sh &amp;amp;&amp;amp; installSimula&lt;/p&gt; &#xA;&lt;h1&gt;Launch&lt;/h1&gt; &#xA;&lt;p&gt;./result/bin/simula # Needs SteamVR to be running #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Installing Simula should take less than 1 minute:&lt;/em&gt; this script doesn&#39;t actually compile anything on your system, but instead downloads the appropriate binaries from our cache in a way that is system and driver agnostic. Under the hood, we (i) check whether you have &lt;del&gt;nix&lt;/del&gt; and &lt;del&gt;cachix&lt;/del&gt; installed (and, if not, install them); (ii) check which graphics drivers you have and (iii) download Simula via &lt;del&gt;cachix&lt;/del&gt; with the appropriate driver flags, falling back to a &lt;del&gt;nix&lt;/del&gt; build if downloading fails.&lt;/p&gt; &#xA;&lt;p&gt;On NixOS systems, you must ensure&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC nix.trustedUsers = [ &#34;root&#34; &#34;&amp;lt;your_user_name&amp;gt;&#34;]; #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;is added to your &lt;del&gt;configuration.nix&lt;/del&gt;, or the install command above will be unable to download Simula from our cache, instead falling back to a manual build (which takes 1hr+).&lt;/p&gt; &#xA;&lt;h1&gt;Simula is untested on machines with AMD drivers, though AMD cards running mesa drivers should be supported.&lt;/h1&gt; &#xA;&lt;p&gt;** OpenXR Backend (Optional)&lt;/p&gt; &#xA;&lt;p&gt;If you want to avoid using SteamVR, Simula supports an optional OpenXR backend (e.g. [[https://gitlab.freedesktop.org/monado/monado][monado]]). To use, adjust &lt;del&gt;_backend&lt;/del&gt; from &lt;del&gt;OpenVR&lt;/del&gt; to &lt;del&gt;OpenXR&lt;/del&gt; in &lt;del&gt;./config.dhall&lt;/del&gt;. You will then be required to ensure that an OpenXR runtime (e.g. &lt;del&gt;monado-service&lt;/del&gt;) is running on your system before launching Simula. In addition, you must tell Simula where your &lt;del&gt;libopenxr_monado.so&lt;/del&gt; is located:&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC monado-service &amp;amp; XR_RUNTIME_JSON=/path/to/your/openxr_monado-dev.json ./result/bin/simula #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;with &lt;del&gt;openxr-dev.json&lt;/del&gt; encoding the location of your &lt;del&gt;libopenxr_monado.so&lt;/del&gt;:&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC json { &#34;file_format_version&#34;: &#34;1.0.0&#34;, &#34;runtime&#34;: { &#34;library_path&#34;: &#34;/path/to/your/openxr/build/src/xrt/targets/openxr/libopenxr_monado.so&#34; } } #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;** Updating&lt;/p&gt; &#xA;&lt;p&gt;To update Simula to the current &lt;del&gt;master&lt;/del&gt; (without losing your configuration adjustments), simply run&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC ./source/Helpers.sh &amp;amp;&amp;amp; updateSimula #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;** COMMENT AppImage&lt;/p&gt; &#xA;&lt;p&gt;Simula requires &lt;del&gt;xpra&lt;/del&gt;, &lt;del&gt;xrdb&lt;/del&gt;, &lt;del&gt;wmctrl&lt;/del&gt;, and &lt;del&gt;terminator&lt;/del&gt;. We keep a bleeding edge &lt;del&gt;AppImage&lt;/del&gt; of Simula synced to a tarball, which can be used as follows:&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC wget -c &lt;a href=&#34;https://www.wolframcloud.com/obj/george.w.singer/SimulaAppImage.tar.gz&#34;&gt;https://www.wolframcloud.com/obj/george.w.singer/SimulaAppImage.tar.gz&lt;/a&gt; -O - | tar -xz cd ./Simula chmod +x ./bin/godot.AppImage ./bin/godot.AppImage --path $PWD # launches Simula (requires SteamVR to be running) #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;** COMMENT Bleeding Edge Binary&lt;/p&gt; &#xA;&lt;p&gt;We keep a bleeding edge version of Simula synced to the following tarball:&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC shell wget -c &lt;a href=&#34;https://www.wolframcloud.com/obj/george.w.singer/SimulaBleedingEdge.tar.gz&#34;&gt;https://www.wolframcloud.com/obj/george.w.singer/SimulaBleedingEdge.tar.gz&lt;/a&gt; -O - | tar -xz cd ./Simula ./bin/godot # launches Simula (requires SteamVR to be running) #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;For installtion troubleshooting, [[https://gitter.im/SimulaVR/Simula][just ask us directly]].&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Usage ** Simula Mouse &amp;amp; Keyboard Controls&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Windows become &#34;active&#34; once you look at them. Active windows receive typing events from the keyboard, and cursor events from mouse movement. In addition, the following window-manipulation shortcuts are provided by default into Simula (these can be adjusted by changing &lt;del&gt;./config.dhall&lt;/del&gt;):&lt;/p&gt; &#xA;&lt;p&gt;| &lt;em&gt;Key binding.&lt;/em&gt; | &lt;em&gt;Action&lt;/em&gt; | |--------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------| | &lt;del&gt;Super + Shift + Escape&lt;/del&gt; | Terminate Simula | | &lt;del&gt;Super + z&lt;/del&gt; | Toggle Simula&#39;s mouse &amp;amp; keyboard grab from your host OS (see below) | | &lt;del&gt;Super + /&lt;/del&gt; | Quick launch terminal | | &lt;del&gt;Super + Apostrophe&lt;/del&gt; | Send window cursor to gaze point (hold down to make cursor follow gaze) | | &lt;del&gt;Super + Enter&lt;/del&gt; | Left click surface cursor at gaze point | | &lt;del&gt;Super + Shift + Enter&lt;/del&gt; | Right click surface cursor at gaze point | | &lt;del&gt;Super + Alt&lt;/del&gt; | Grab surface for movement (release to let go) | | &lt;del&gt;Super + m&lt;/del&gt; | Grab all surfaces for movement (release to let go) | | &lt;del&gt;Super + Shift + m&lt;/del&gt; | Grab all surfaces /in all workspaces at once/ for movement (release to let go) | | &lt;del&gt;Super + a&lt;/del&gt; | Launch Simula&#39;s app launcher ([[https://launchpad.net/synapse-project][synapse]]) | | &lt;del&gt;Super + e&lt;/del&gt; | Cycle Simula&#39;s background environment | | &lt;del&gt;Super + f&lt;/del&gt; | Orient window towards user gaze | | &lt;del&gt;Super + 9&lt;/del&gt; | Scale window to smaller size | | &lt;del&gt;Super + 0&lt;/del&gt; | Scale window to larger size | | &lt;del&gt;Super + &amp;lt;number between 1 and 8&amp;gt;&lt;/del&gt; | Switch to workspace &#xA; &lt;num&gt;&#xA;   | | &#xA;  &lt;del&gt;Super + Shift + &amp;lt;number between 1 and 8&amp;gt;&lt;/del&gt; | Move window to workspace &#xA;  &lt;num&gt;&#xA;    | | &#xA;   &lt;del&gt;Super + Shift + 0&lt;/del&gt; | Pin window to all workspaces | | &#xA;   &lt;del&gt;Super + -&lt;/del&gt; | Increase window resolution (&#34;zoom out&#34;) | | &#xA;   &lt;del&gt;Super + =&lt;/del&gt; | Increase window resolution (&#34;zoom in&#34;) | | &#xA;   &lt;del&gt;Super + &#xA;    &lt;right&gt;&lt;/right&gt;&lt;/del&gt; | Extend window horizontally | | &#xA;   &lt;del&gt;Super + &#xA;    &lt;left&gt;&lt;/left&gt;&lt;/del&gt; | Contract window horizontally | | &#xA;   &lt;del&gt;Super + &#xA;    &lt;down&gt;&lt;/down&gt;&lt;/del&gt; | Extend window vertically | | &#xA;   &lt;del&gt;Super + &#xA;    &lt;up&gt;&lt;/up&gt;&lt;/del&gt; | Contract window vertically | | &#xA;   &lt;del&gt;Super + Alt + &#xA;    &lt;down&gt;&lt;/down&gt;&lt;/del&gt; | Decrease window transparency | | &#xA;   &lt;del&gt;Super + Alt + &#xA;    &lt;up&gt;&lt;/up&gt;&lt;/del&gt; | Increase window transparency | | &#xA;   &lt;del&gt;Super + s&lt;/del&gt; | Resize window to take its default (typically square) dimensions | | &#xA;   &lt;del&gt;Super + Comma&lt;/del&gt; | Move window towards you | | &#xA;   &lt;del&gt;Super + Period&lt;/del&gt; | Move window away from you | | &#xA;   &lt;del&gt;Super + Backspace&lt;/del&gt; | Kill surface being looked at | | &#xA;   &lt;del&gt;Super + k&lt;/del&gt; | Quick launch firefox (requires firefox to not already be launched on host) | | &#xA;   &lt;del&gt;Super + g&lt;/del&gt; | Quick launch google-chrome (requires chrome to not already be launched on host) | | &#xA;   &lt;del&gt;Super + w&lt;/del&gt; | Launch headset webcam view | | &#xA;   &lt;del&gt;PrtSc&lt;/del&gt; | Toggle &#34;screenshot&#34; mode (drag a selection on the current window to generate a &#xA;   &lt;del&gt;./media/*.png&lt;/del&gt; and copy it to the X clipboard). | | &#xA;   &lt;del&gt;Shift + PrtSc&lt;/del&gt; | Take global screenshot (saved to &#xA;   &lt;del&gt;./media/*.png&lt;/del&gt;) | | &#xA;   &lt;del&gt;Super + Shift + PrtSc&lt;/del&gt; | Toggle video recording (saved to &#xA;   &lt;del&gt;./media/*.mkv&lt;/del&gt;); useful for sending bug reports. | | &#xA;   &lt;del&gt;Super + r&lt;/del&gt; | Reload Simula&#39;s configuration (&#xA;   &lt;del&gt;./config.dhall&lt;/del&gt;) |&#xA;  &lt;/num&gt;&#xA; &lt;/num&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;NOTE:&lt;/em&gt; In order to prevent Simula&#39;s keyboard shortcuts from conflicting with your existing window manager&#39;s shortcuts, Simula &#34;grabs&#34; the system keyboard and cursor from your host OS to prevent input events from propagating past Simula. This creates a problem: it is then impossible for you to escape Simula once you launch it! In order to get around this, press &lt;del&gt;Super + z&lt;/del&gt; to ungrab Simula, which will restore mouse and keyboard control to your normal window manager.&lt;/p&gt; &#xA;&lt;p&gt;** VR Controllers&lt;/p&gt; &#xA;&lt;p&gt;[[https://www.evetech.co.za/repository/ProductImages/htc-vive-controller-730px-v1.jpg]]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Left-clicking.&lt;/em&gt; Use (7) gently (you don&#39;t have to go all the way down to click).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Right-clicking.&lt;/em&gt; Use (1).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Scrolling.&lt;/em&gt; Scroll up and down via (2).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Text dragging.&lt;/em&gt; Hold (7) down and drag.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Window manipulation.&lt;/em&gt; Point at a window and, while holding (8), move your controller around. The windows should &#34;levitate&#34; in the direction of your movement.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Window rescaling.&lt;/em&gt; Point at a window, hold (8) down, and then scroll up and down on (2).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** Mouse &amp;amp; Keyboard View&lt;/p&gt; &#xA;&lt;p&gt;[[https://www.youtube.com/watch?v=D5c3Hfp8Hcw][https://www.wolframcloud.com/obj/george.w.singer/1063512563850488463045946458923996976334308262441.png]]&lt;/p&gt; &#xA;&lt;p&gt;Simula has a headset [[https://www.youtube.com/watch?v=D5c3Hfp8Hcw][webcam view]] (binded presently to &lt;del&gt;Super + w&lt;/del&gt;) that allows you to see your mouse and keyboard from VR.&lt;/p&gt; &#xA;&lt;p&gt;** Configuration&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Many things are configurable in Simula. See &lt;del&gt;./config/config.dhall&lt;/del&gt; for a self-documenting list of things to adjust.&lt;/li&gt; &#xA; &lt;li&gt;Simula also uses &lt;del&gt;i3status&lt;/del&gt; to display system information in its HUD. The default configuration can be found in &lt;del&gt;./config/i3status.config&lt;/del&gt;, and can be adjusted [[https://i3wm.org/docs/i3status.html][per these instructions]].&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** COMMENT Recovering Simula Apps&lt;/p&gt; &#xA;&lt;p&gt;Apps launched in Simula persist across sessions via an [[https://xpra.org/][xpra]] server running on &lt;del&gt;DISPLAY=:13&lt;/del&gt;. This means that if Simula exits (perhaps by a sudden crash), all you need to do to recover your apps is to relaunch Simula.&lt;/p&gt; &#xA;&lt;p&gt;If instead you&#39;d like to access your apps from outside Simula, run&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC shell xpra attach :13 #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;and they will appear on your current &lt;del&gt;DISPLAY&lt;/del&gt;. Running &lt;del&gt;xpra stop&lt;/del&gt; (or just &lt;del&gt;pkill xpra&lt;/del&gt;) is a quick way to kill all apps associated with your Simula session(s).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simula One Headset&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We are in the process of developing a (limited number of) portable VR headsets for sale which come with SimulaVR mounted on them by default. If you are interested in purchasing one, [[https://simulavr.com][visit our website]] and join our waitlist to receive a place in line and/or periodic updates on its development.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Community&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For troubleshooting and discussion, join our community at &lt;a href=&#34;https://discordapp.com/invite/a4PnP7n&#34;&gt;https://discordapp.com/invite/a4PnP7n&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;COMMENT Installation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;[[https://gitter.im/SimulaVR/Simula][file:./doc/GitterBadge.png]]&lt;/p&gt; &#xA;&lt;p&gt;Simula is in alpha phase, and can be difficult to get working on many setups. For help with installation, please visit our [[https://gitter.im/SimulaVR/Simula][chat room]]. Note that Simula has only been tested on Ubuntu 19.04 (Disco Dingo), but the instructions below should in principle work on (i) older versions of Ubuntu and/or other distros that use &lt;del&gt;apt&lt;/del&gt; (i.e., Debian) or (ii) Arch Linux (or distros that use &lt;del&gt;pacman&lt;/del&gt;).&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;em&gt;Clone Simula and install its dependencies.&lt;/em&gt; Depending upon your distro, you&#39;ll need to run some combination of &lt;del&gt;make ubuntu&lt;/del&gt;, &lt;del&gt;make arch&lt;/del&gt;, &lt;del&gt;make nvidia&lt;/del&gt; and &lt;del&gt;make amd&lt;/del&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;#+BEGIN_SRC shell git clone --recursive &lt;a href=&#34;https://github.com/SimulaVR/Simula&#34;&gt;https://github.com/SimulaVR/Simula&lt;/a&gt; cd Simula&lt;/p&gt; &#xA;&lt;p&gt;make ubuntu # Installs needed packages via apt-get&lt;/p&gt; &#xA;&lt;h1&gt;make arch # Installs needed packages via pacman&lt;/h1&gt; &#xA;&lt;p&gt;#+END_SRC&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;em&gt;Compile Simula.&lt;/em&gt; Warning: this can take a while.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;#+BEGIN_SRC shell make all #+END_SRC&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;em&gt;Launch Simula.&lt;/em&gt; You must first launch SteamVR before you can run Simula.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;#+begin_src shell steam &amp;amp; # First launch SteamVR from steam make run # ..then launch Simula #+end_src&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;em&gt;Launch some apps.&lt;/em&gt; Once Simula starts, launch some Wayland apps to interact with (at this point Simula only supports Wayland apps). Apps must be launched with &lt;del&gt;WAYLAND_DISPLAY&lt;/del&gt; set to &lt;del&gt;simula-0&lt;/del&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;#+begin_src shell WAYLAND_DISPLAY=simula-0 sakura # Wayland-based terminal WAYLAND_DISPLAY=simula-0 epiphany # Wayland-based web browser #+end_src&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;COMMENT Troubleshooting&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Any errors can be immediately helped with in [[https://gitter.im/SimulaVR/Simula][Simula&#39;s chatroom]]. Here are some helpers though:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;em&gt;Driver errors.&lt;/em&gt; If you get driver related errors, try running &lt;del&gt;make nvidia&lt;/del&gt; or &lt;del&gt;make amd&lt;/del&gt; to try to upgrade to the latest drivers for your respective video card. These helpers only work on Ubuntu/Arch:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;#+begin_src shell make nvidia # If needed: installs nvidia-driver-418 (via apt-get) make amd # If needed: installs mesa-vulkan-drivers and other packages for SteamVR on AMD (via apt-get) #+end_src&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;em&gt;Godot errors.&lt;/em&gt; If you get godot related errors, trying rebuilding &lt;del&gt;godot&lt;/del&gt; from scratch:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;#+begin_src shell make godot #+end_src&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;em&gt;Wlroots errors.&lt;/em&gt; If you get wrloots related errors (i.e., any error that complains about missing &lt;del&gt;wlr_*&lt;/del&gt; references), try rebuilding wlroots from scratch:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;#+begin_src make wlroots # If you have trouble launching Simula, try recompiling Godot via this command. #+end_src&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;em&gt;Unable to launch a particular app.&lt;/em&gt; Many Linux apps don&#39;t work right now in Simula (technically: any app that doesn&#39;t implement the XDG Wayland protocol). We&#39;re working on fixing this ASAP so that all Linux apps are compatible with Simula. This should be done by end of month (June 2019).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;COMMENT Contributing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We&#39;re looking for open-source contributors. If you&#39;re interested in using Haskell to bring VR and Linux together, drop by our [[https://gitter.im/SimulaVR/Simula][chat room]], or email &lt;a href=&#34;mailto:georgewsinger@gmail.com&#34;&gt;georgewsinger@gmail.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;COMMENT Donations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;re interested in a future where Linux and VR co-exist, you can donate to the following addresses:&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_QUOTE &lt;em&gt;Bitcoin.&lt;/em&gt; 17YLp6kJswxa8gGKwXqLrNtnM9Fgye6dfQ&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Ethereum.&lt;/em&gt; 0x373227b43Fe1eFe8da9d30ED1Ee45E7488F6cab3&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;PayPal.&lt;/em&gt; &lt;a href=&#34;mailto:george.w.singer@gmail.com&#34;&gt;george.w.singer@gmail.com&lt;/a&gt; #+END_QUOTE&lt;/p&gt; &#xA;&lt;p&gt;** COMMENT Project Expenses&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Project Expenses.&lt;/em&gt; Donations to the project pay for the following expenses:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Part-time developers (x 1)&lt;/li&gt; &#xA; &lt;li&gt;Vive donations to contributors (x 3)&lt;/li&gt; &#xA; &lt;li&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;COMMENT Plans &amp;amp; Monthly Updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See Simula&#39;s [[https://github.com/SimulaVR/Simula/wiki][Wiki]] for our Master Plan and list of Monthly Updates.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>GaloisInc/what4</title>
    <updated>2023-06-18T01:53:41Z</updated>
    <id>tag:github.com,2023-06-18:/GaloisInc/what4</id>
    <link href="https://github.com/GaloisInc/what4" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Symbolic formula representation and solver interaction library&lt;/p&gt;&lt;hr&gt;&lt;p&gt;What4 is a library for representing symbolic terms and communicating with satisfiability and SMT solvers (e.g. Yices and Z3).&lt;/p&gt; &#xA;&lt;p&gt;It was originally a part of the &lt;a href=&#34;https://github.com/GaloisInc/crucible&#34;&gt;Crucible&lt;/a&gt; project, but has found use cases that are independent of its original purpose as the representation language for the Crucible symbolic simulator, and has thus been split out into a separate repository.&lt;/p&gt; &#xA;&lt;p&gt;For an overview of What4 and how to use it, please see the package-level &lt;a href=&#34;https://raw.githubusercontent.com/GaloisInc/what4/master/what4/README.md&#34;&gt;README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This material is based upon work supported by the Defense Advanced Research Projects Agency (DARPA) under Contract No. HR0011-19-C-0070. The views, opinions, and/or findings expressed are those of the author(s) and should not be interpreted as representing the official views or policies of the Department of Defense or the U.S. Government.&lt;/p&gt; &#xA;&lt;h1&gt;Solver Compatibility&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;ABC&lt;/th&gt; &#xA;   &lt;th&gt;Boolector&lt;/th&gt; &#xA;   &lt;th&gt;CVC4&lt;/th&gt; &#xA;   &lt;th&gt;CVC5&lt;/th&gt; &#xA;   &lt;th&gt;Dreal&lt;/th&gt; &#xA;   &lt;th&gt;STP&lt;/th&gt; &#xA;   &lt;th&gt;Yices&lt;/th&gt; &#xA;   &lt;th&gt;Z3&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Supported&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 3.2.0, ?&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 1.8, ?&lt;/td&gt; &#xA;   &lt;td&gt;1.0.2&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 2.3.3, ?&lt;/td&gt; &#xA;   &lt;td&gt;2.6.x, ?&lt;/td&gt; &#xA;   &lt;td&gt;4.8.8 -- 4.8.14&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;goal timeouts&lt;/td&gt; &#xA;   &lt;td&gt;?&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;?&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;! (4.8.11 or 4.8.12)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;strings with unicode and escape codes&lt;/td&gt; &#xA;   &lt;td&gt;?&lt;/td&gt; &#xA;   &lt;td&gt;?&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 1.8&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;?&lt;/td&gt; &#xA;   &lt;td&gt;?&lt;/td&gt; &#xA;   &lt;td&gt;?&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 4.8.11&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>