<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-23T01:43:09Z</updated>
  <subtitle>Weekly Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>GaloisInc/llvm-pretty</title>
    <updated>2024-06-23T01:43:09Z</updated>
    <id>tag:github.com,2024-06-23:/GaloisInc/llvm-pretty</id>
    <link href="https://github.com/GaloisInc/llvm-pretty" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An llvm pretty printer inspired by the haskell llvm binding&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;llvm-pretty&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;p&gt;A pretty printing library that was inspired by the LLVM binding by Lennart Augustsson. The library provides a monadic interface to a pretty printer, that allows functions to be defined and called, generating the corresponding LLVM assembly when run.&lt;/p&gt; &#xA;&lt;h2&gt;LLVM language feature support&lt;/h2&gt; &#xA;&lt;p&gt;Currently, &lt;code&gt;llvm-pretty&lt;/code&gt; supports LLVM versions up through 17. As a result of the broad version coverage, the &lt;code&gt;llvm-pretty&lt;/code&gt; AST is a superset of all versions of the LLVM AST. This means that the manner in which certain information is presented in the &lt;code&gt;llvm-pretty&lt;/code&gt; AST (e.g., during pretty printing) will be different depending on the LLVM version used to originate the information. Conversely, it is possible to construct an &lt;code&gt;llvm-pretty&lt;/code&gt; AST that cannot be represented in a specific (or any) LLVM version.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;llvm-pretty&lt;/code&gt; strives to support a reasonable variety of &lt;a href=&#34;https://llvm.org/docs/LangRef.html&#34;&gt;LLVM language features&lt;/a&gt;, but there are places where our coverage of the LLVM language is incomplete. If you need a LLVM feature that is not currently supported by &lt;code&gt;llvm-pretty&lt;/code&gt;, please &lt;a href=&#34;https://github.com/GaloisInc/llvm-pretty/issues/new&#34;&gt;file an issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;llvm-pretty&lt;/code&gt; versus &lt;code&gt;llvm-pretty-bc-parser&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;llvm-pretty&lt;/code&gt; supports almost everything that one would want to do with LLVM ASTs. One notable exception is parsing: &lt;code&gt;llvm-pretty&lt;/code&gt; deliberately does not support parsing an LLVM module AST from a bitcode file. This functionality is factored out into a separate &lt;a href=&#34;https://github.com/GaloisInc/llvm-pretty-bc-parser&#34;&gt;&lt;code&gt;llvm-pretty-bc-parser&lt;/code&gt;&lt;/a&gt; library. &lt;code&gt;llvm-pretty-bc-parser&lt;/code&gt; generally tries to stay in sync with all of the LLVM language features that &lt;code&gt;llvm-pretty&lt;/code&gt; supports, but it may be the case that some valid &lt;code&gt;llvm-pretty&lt;/code&gt; ASTs cannot be parsed by &lt;code&gt;llvm-pretty-bc-parser&lt;/code&gt;. If you encounter an occurrence of this issue, please &lt;a href=&#34;https://github.com/GaloisInc/llvm-pretty-bc-parser/issues/new&#34;&gt;file an issue&lt;/a&gt; at the &lt;code&gt;llvm-pretty-bc-parser&lt;/code&gt; issue tracker.&lt;/p&gt;</summary>
  </entry>
</feed>