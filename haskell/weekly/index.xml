<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-17T02:12:32Z</updated>
  <subtitle>Weekly Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>facebook/duckling</title>
    <updated>2022-07-17T02:12:32Z</updated>
    <id>tag:github.com,2022-07-17:/facebook/duckling</id>
    <link href="https://github.com/facebook/duckling" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Language, engine, and tooling for expressing, testing, and evaluating composable language rules on input strings.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/facebook/duckling/raw/main/logo.png&#34; alt=&#34;Duckling Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Duckling &lt;a href=&#34;https://opensource.fb.com/support-ukraine&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Support-Ukraine-FFD500?style=flat&amp;amp;labelColor=005BBB&#34; alt=&#34;Support Ukraine&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/facebook/duckling&#34;&gt;&lt;img src=&#34;https://travis-ci.org/facebook/duckling.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Duckling is a Haskell library that parses text into structured data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#34;the first Tuesday of October&#34;&#xA;=&amp;gt; {&#34;value&#34;:&#34;2017-10-03T00:00:00.000-07:00&#34;,&#34;grain&#34;:&#34;day&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;A Haskell environment is required. We recommend using &lt;a href=&#34;https://haskell-lang.org/get-started&#34;&gt;stack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On Linux and MacOS you&#39;ll need to install PCRE development headers. On Linux, use your package manager to install them. On MacOS, the easiest way to install them is with &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install pcre&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If that doesn&#39;t help, try running &lt;code&gt;brew doctor&lt;/code&gt; and fix the issues it finds.&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;To compile and run the binary:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;stack build&#xA;stack exec duckling-example-exe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The first time you run it, it will download all required packages.&lt;/p&gt; &#xA;&lt;p&gt;This runs a basic HTTP server. Example request:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -XPOST http://0.0.0.0:8000/parse --data &#39;locale=en_GB&amp;amp;text=tomorrow at eight&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the example application, all dimensions are enabled by default. Provide the parameter &lt;code&gt;dims&lt;/code&gt; to specify which ones you want. Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Identify credit card numbers only:&#xA;$ curl -XPOST http://0.0.0.0:8000/parse --data &#39;locale=en_US&amp;amp;text=&#34;4111-1111-1111-1111&#34;&amp;amp;dims=&#34;[&#34;credit-card-number&#34;]&#34;&#39;&#xA;If you want multiple dimensions, comma-separate them in the array:&#xA;$ curl -XPOST http://0.0.0.0:8000/parse --data &#39;locale=en_US&amp;amp;text=&#34;3 cups of sugar&#34;&amp;amp;dims=&#34;[&#34;quantity&#34;,&#34;numeral&#34;]&#34;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;code&gt;exe/ExampleMain.hs&lt;/code&gt; for an example on how to integrate Duckling in your project. If your backend doesn&#39;t run Haskell or if you don&#39;t want to spin your own Duckling server, you can directly use &lt;a href=&#34;https://wit.ai&#34;&gt;wit.ai&lt;/a&gt;&#39;s built-in entities.&lt;/p&gt; &#xA;&lt;h2&gt;Supported dimensions&lt;/h2&gt; &#xA;&lt;p&gt;Duckling supports many languages, but most don&#39;t support all dimensions yet (&lt;strong&gt;we need your help!&lt;/strong&gt;). Please look into &lt;a href=&#34;https://github.com/facebook/duckling/raw/master/Duckling/Dimensions&#34;&gt;this directory&lt;/a&gt; for language-specific support.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Dimension&lt;/th&gt; &#xA;   &lt;th&gt;Example input&lt;/th&gt; &#xA;   &lt;th&gt;Example value output&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;AmountOfMoney&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#34;42€&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{&#34;value&#34;:42,&#34;type&#34;:&#34;value&#34;,&#34;unit&#34;:&#34;EUR&#34;}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CreditCardNumber&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#34;4111-1111-1111-1111&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{&#34;value&#34;:&#34;4111111111111111&#34;,&#34;issuer&#34;:&#34;visa&#34;}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#34;6 miles&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{&#34;value&#34;:6,&#34;type&#34;:&#34;value&#34;,&#34;unit&#34;:&#34;mile&#34;}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#34;3 mins&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{&#34;value&#34;:3,&#34;minute&#34;:3,&#34;unit&#34;:&#34;minute&#34;,&#34;normalized&#34;:{&#34;value&#34;:180,&#34;unit&#34;:&#34;second&#34;}}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Email&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#34;&lt;a href=&#34;mailto:duckling-team@fb.com&#34;&gt;duckling-team@fb.com&lt;/a&gt;&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{&#34;value&#34;:&#34;duckling-team@fb.com&#34;}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Numeral&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#34;eighty eight&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{&#34;value&#34;:88,&#34;type&#34;:&#34;value&#34;}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Ordinal&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#34;33rd&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{&#34;value&#34;:33,&#34;type&#34;:&#34;value&#34;}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PhoneNumber&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#34;+1 (650) 123-4567&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{&#34;value&#34;:&#34;(+1) 6501234567&#34;}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Quantity&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#34;3 cups of sugar&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{&#34;value&#34;:3,&#34;type&#34;:&#34;value&#34;,&#34;product&#34;:&#34;sugar&#34;,&#34;unit&#34;:&#34;cup&#34;}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Temperature&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#34;80F&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{&#34;value&#34;:80,&#34;type&#34;:&#34;value&#34;,&#34;unit&#34;:&#34;fahrenheit&#34;}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#34;today at 9am&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{&#34;values&#34;:[{&#34;value&#34;:&#34;2016-12-14T09:00:00.000-08:00&#34;,&#34;grain&#34;:&#34;hour&#34;,&#34;type&#34;:&#34;value&#34;}],&#34;value&#34;:&#34;2016-12-14T09:00:00.000-08:00&#34;,&#34;grain&#34;:&#34;hour&#34;,&#34;type&#34;:&#34;value&#34;}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#34;&lt;a href=&#34;https://api.wit.ai/message?q=hi&#34;&gt;https://api.wit.ai/message?q=hi&lt;/a&gt;&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{&#34;value&#34;:&#34;https://api.wit.ai/message?q=hi&#34;,&#34;domain&#34;:&#34;api.wit.ai&#34;}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Volume&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#34;4 gallons&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{&#34;value&#34;:4,&#34;type&#34;:&#34;value&#34;,&#34;unit&#34;:&#34;gallon&#34;}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/facebook/duckling/raw/master/exe/CustomDimensionExample.hs&#34;&gt;Custom dimensions&lt;/a&gt; are also supported.&lt;/p&gt; &#xA;&lt;h2&gt;Extending Duckling&lt;/h2&gt; &#xA;&lt;p&gt;To regenerate the classifiers and run the test suite:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;stack build :duckling-regen-exe &amp;amp;&amp;amp; stack exec duckling-regen-exe &amp;amp;&amp;amp; stack test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s important to regenerate the classifiers after updating the code and before running the test suite.&lt;/p&gt; &#xA;&lt;p&gt;To extend Duckling&#39;s support for a dimension in a given language, typically 4 files need to be updated:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Duckling/&amp;lt;Dimension&amp;gt;/&amp;lt;Lang&amp;gt;/Rules.hs&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Duckling/&amp;lt;Dimension&amp;gt;/&amp;lt;Lang&amp;gt;/Corpus.hs&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Duckling/Dimensions/&amp;lt;Lang&amp;gt;.hs&lt;/code&gt; (if not already present in &lt;code&gt;Duckling/Dimensions/Common.hs&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Duckling/Rules/&amp;lt;Lang&amp;gt;.hs&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To add a new language:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure that the language code used follows the &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes&#34;&gt;ISO-639-1 standard&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The first dimension to implement is &lt;code&gt;Numeral&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Follow &lt;a href=&#34;https://github.com/facebook/duckling/commit/24d3f199768be970149412c95b1c1bf5d76f8240&#34;&gt;this example&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To add a new locale:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There should be a need for diverging rules between the locale and the language.&lt;/li&gt; &#xA; &lt;li&gt;Make sure that the locale code is a valid &lt;a href=&#34;https://www.iso.org/obp/ui/#search/code/&#34;&gt;ISO3166 alpha2 country code&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Follow &lt;a href=&#34;https://github.com/facebook/duckling/commit/1ab5f447d2635fe6d48887a501d333a52adff5b9&#34;&gt;this example&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Rules have a name, a pattern and a production. Patterns are used to perform character-level matching (regexes on input) and concept-level matching (predicates on tokens). Productions are arbitrary functions that take a list of tokens and return a new token.&lt;/p&gt; &#xA;&lt;p&gt;The corpus (resp. negative corpus) is a list of examples that should (resp. shouldn&#39;t) parse. The reference time for the corpus is Tuesday Feb 12, 2013 at 4:30am.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Duckling.Debug&lt;/code&gt; provides a few debugging tools:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ stack repl --no-load&#xA;&amp;gt; :l Duckling.Debug&#xA;&amp;gt; debug (makeLocale EN $ Just US) &#34;in two minutes&#34; [Seal Time]&#xA;in|within|after &amp;lt;duration&amp;gt; (in two minutes)&#xA;-- regex (in)&#xA;-- &amp;lt;integer&amp;gt; &amp;lt;unit-of-duration&amp;gt; (two minutes)&#xA;-- -- integer (0..19) (two)&#xA;-- -- -- regex (two)&#xA;-- -- minute (grain) (minutes)&#xA;-- -- -- regex (minutes)&#xA;[Entity {dim = &#34;time&#34;, body = &#34;in two minutes&#34;, value = RVal Time (TimeValue (SimpleValue (InstantValue {vValue = 2013-02-12 04:32:00 -0200, vGrain = Second})) [SimpleValue (InstantValue {vValue = 2013-02-12 04:32:00 -0200, vGrain = Second})] Nothing), start = 0, end = 14}]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Duckling is &lt;a href=&#34;https://raw.githubusercontent.com/facebook/duckling/main/LICENSE&#34;&gt;BSD-licensed&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>obsidiansystems/obelisk</title>
    <updated>2022-07-17T02:12:32Z</updated>
    <id>tag:github.com,2022-07-17:/obsidiansystems/obelisk</id>
    <link href="https://github.com/obsidiansystems/obelisk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Functional reactive web and mobile applications, with batteries included.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Obelisk&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.haskell.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/language-Haskell-blue.svg?sanitize=true&#34; alt=&#34;Haskell Programming Language&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/obsidiansystems/obelisk/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/license-BSD3-brightgreen.svg?sanitize=true&#34; alt=&#34;BSD3 License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/docs/obelisk-logo-640.png&#34; width=&#34;50%&#34; alt=&#34;Obelisk Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Functional reactive web and mobile applications, with batteries included. Obelisk&#39;s goal is to represent a cohesive, highly-curated set of choices that &lt;a href=&#34;https://obsidian.systems/&#34;&gt;Obsidian Systems&lt;/a&gt; has made for building these types of applications in a way that is extremely fast but does not compromise on production readiness.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#overview&#34;&gt;Overview&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#who-should-consider-using-it&#34;&gt;Who should consider using it?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#installing-obelisk&#34;&gt;Installing Obelisk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#developing-an-obelisk-project&#34;&gt;Developing an Obelisk project&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#local-hoogle&#34;&gt;Local Hoogle&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#adding-packages&#34;&gt;Adding Packages&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#adding-package-overrides&#34;&gt;Adding Package Overrides&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#running-tests&#34;&gt;Running tests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#running-over-https&#34;&gt;Running over HTTPS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#ide-support&#34;&gt;IDE Support&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#deploying&#34;&gt;Deploying&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#default-ec2-deployment&#34;&gt;Default EC2 Deployment&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#custom-non-ec2-deployment&#34;&gt;Custom Non-EC2 Deployment&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#virtualbox-deployment&#34;&gt;VirtualBox Deployment&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#locally&#34;&gt;Locally&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#from-macos&#34;&gt;From macOS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#deploying-an-updated-version&#34;&gt;Deploying an updated version&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#mobile&#34;&gt;Mobile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#ios&#34;&gt;iOS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#android&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#frequently-asked-questions-faq&#34;&gt;Frequently Asked Questions (FAQ)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Obelisk allows you to build high-quality web and mobile applications very quickly using &lt;a href=&#34;https://reflex-frp.org/&#34;&gt;Reflex&lt;/a&gt;. In minutes you can go from an empty directory to an interactive application that works on web, iOS, and Android, all sharing the same Haskell codebase! Obelisk&#39;s development environment also enables extremely rapid development and feedback. You can take advantage of Haskell&#39;s type system across the frontend and backend boundary. This means changes to your backend that would break your frontend are immediately detected during development and vice versa. Obelisk uses Haskell&#39;s compiler to give you a complete &#34;TODO list&#34; of what needs to be updated.&lt;/p&gt; &#xA;&lt;p&gt;Obelisk is targeted primarily at Haskell developers who want to build high-quality web and/or mobile applications in Haskell, without the distractions of manually choosing and integrating technology for every piece of the system.&lt;/p&gt; &#xA;&lt;h3&gt;Who should consider using it?&lt;/h3&gt; &#xA;&lt;p&gt;Obelisk assumes basic knowledge of &lt;a href=&#34;https://www.haskell.org/&#34;&gt;Haskell&lt;/a&gt; and &lt;a href=&#34;https://reflex-frp.org/&#34;&gt;Reflex/Reflex-DOM&lt;/a&gt;, web technologies like &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTML&#34;&gt;HTML&lt;/a&gt; and &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS&#34;&gt;CSS&lt;/a&gt;, and a terminal shell like &lt;a href=&#34;https://en.wikipedia.org/wiki/Bash_(Unix_shell)&#34;&gt;Bash&lt;/a&gt;. Knowledge of &lt;a href=&#34;https://nixos.org/&#34;&gt;Nix&lt;/a&gt; helps but is not strictly necessary.&lt;/p&gt; &#xA;&lt;h2&gt;Installing Obelisk&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nixos.org/nix/&#34;&gt;Install Nix&lt;/a&gt;. If you already have Nix installed, make sure you have version 2.0 or higher. To check your current version, run &lt;code&gt;nix-env --version&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Set up nix caches &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;If you are running NixOS, add this to &lt;code&gt;/etc/nixos/configuration.nix&lt;/code&gt;: &lt;pre&gt;&lt;code class=&#34;language-nix&#34;&gt;nix.binaryCaches = [ &#34;https://nixcache.reflex-frp.org&#34; ];&#xA;nix.binaryCachePublicKeys = [ &#34;ryantrinkle.com-1:JJiAKaRv9mWgpVAz8dwewnZe0AzzEAzPkagE9SP5NWI=&#34; ];&#xA;&lt;/code&gt;&lt;/pre&gt; and rebuild your NixOS configuration (e.g. &lt;code&gt;sudo nixos-rebuild switch&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;If you are using another operating system or Linux distribution, ensure that these lines are present in your Nix configuration file (&lt;code&gt;/etc/nix/nix.conf&lt;/code&gt; on most systems; &lt;a href=&#34;https://nixos.org/nix/manual/#sec-conf-file&#34;&gt;see full list&lt;/a&gt;): &lt;pre&gt;&lt;code class=&#34;language-nix&#34;&gt;binary-caches = https://cache.nixos.org https://nixcache.reflex-frp.org&#xA;binary-cache-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= ryantrinkle.com-1:JJiAKaRv9mWgpVAz8dwewnZe0AzzEAzPkagE9SP5NWI=&#xA;binary-caches-parallel-connections = 40&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;If you&#39;re on a Linux distribution other than NixOS, enable sandboxing (see these &lt;a href=&#34;https://github.com/obsidiansystems/obelisk/issues/172#issuecomment-411507818&#34;&gt;issue 172&lt;/a&gt; or &lt;a href=&#34;https://github.com/obsidiansystems/obelisk/issues/6&#34;&gt;issue 6&lt;/a&gt; if you run into build problems) by adding the following: &lt;pre&gt;&lt;code class=&#34;language-nix&#34;&gt;sandbox = true&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;     &lt;li&gt;If you&#39;re on MacOS, disable sandboxing (there are still some impure dependencies for now) by adding the following: &lt;pre&gt;&lt;code class=&#34;language-nix&#34;&gt;sandbox = false&#xA;&lt;/code&gt;&lt;/pre&gt; then restart the nix daemon &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo launchctl stop org.nixos.nix-daemon&#xA;sudo launchctl start org.nixos.nix-daemon&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install obelisk: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nix-env -f https://github.com/obsidiansystems/obelisk/archive/master.tar.gz -iA command&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Accessing private repositories&lt;/h3&gt; &#xA;&lt;p&gt;To allow the Nix builder to access private git repositories, you must be set up to access them via SSH. Follow these steps depending on the platform you need access to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.github.com/articles/connecting-to-github-with-ssh/&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.gitlab.com/ee/gitlab-basics/create-your-ssh-keys.html&#34;&gt;GitLab&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developing an Obelisk project&lt;/h2&gt; &#xA;&lt;p&gt;To create a new Obelisk project, go to an empty directory and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ob init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Obelisk leverages ghcid to provide a live-reloading server that handles both frontend and backend. To run your Obelisk app and monitor the source for changes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ob run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, with an appropriate browser, go to &lt;a href=&#34;http://localhost:8000&#34;&gt;http://localhost:8000&lt;/a&gt; (or the address/port specified in &lt;code&gt;config/common/route&lt;/code&gt;) to access your app. Firefox will not be able to properly run the development website due to &lt;a href=&#34;https://github.com/obsidiansystems/obelisk/issues/460&#34;&gt;issue 460&lt;/a&gt;. Fortunately, this problem does not occur on a fully built website.&lt;/p&gt; &#xA;&lt;p&gt;Every time you change the Haskell source files in frontend, common or backend, &lt;code&gt;ob run&lt;/code&gt; will automatically recompile the modified files and reload the server. Furthermore, it will display on screen compilation errors and warnings if any.&lt;/p&gt; &#xA;&lt;h3&gt;Local Hoogle&lt;/h3&gt; &#xA;&lt;p&gt;Obelisk can also provide a local &lt;a href=&#34;https://hoogle.haskell.org&#34;&gt;Hoogle&lt;/a&gt; server that lets you browse and search the types and documentation for all of the dependencies in your entire Obelisk application. To start the Hoogle server, in a spare terminal run the following command from the root of your Obelisk application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ob hoogle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then access your local Hoogle from your web browser at &lt;code&gt;http://localhost:8080&lt;/code&gt;, or by instructing an editor plugin to use that address.&lt;/p&gt; &#xA;&lt;h3&gt;Adding packages&lt;/h3&gt; &#xA;&lt;p&gt;In order to add package dependencies, declare them under the build-depends field in the appropriate cabal files (backend, common, and frontend each have their own). The corresponding Nix packages will automatically be selected when building.&lt;/p&gt; &#xA;&lt;h3&gt;Adding package overrides&lt;/h3&gt; &#xA;&lt;p&gt;To add a version override to any Haskell package, or to add a Haskell package that doesn&#39;t exist in the nixpkgs used by Obelisk, use the &lt;code&gt;overrides&lt;/code&gt; attribute in your project&#39;s &lt;code&gt;default.nix&lt;/code&gt;. For example, to use a specific version of the &lt;code&gt;aeson&lt;/code&gt; package fetched from GitHub and a specific version of the &lt;code&gt;waargonaut&lt;/code&gt; package fetched from Hackage, your &lt;code&gt;default.nix&lt;/code&gt; will look like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nix&#34;&gt;# ...&#xA;project ./. ({ pkgs, ... }: {&#xA;# ...&#xA;  overrides = self: super: let&#xA;    aesonSrc = pkgs.fetchFromGitHub {&#xA;      owner = &#34;obsidiansystems&#34;;&#xA;      repo = &#34;aeson-gadt-th&#34;;&#xA;      rev = &#34;ed573c2cccf54d72aa6279026752a3fecf9c1383&#34;;&#xA;      sha256 = &#34;08q6rnz7w9pn76jkrafig6f50yd0f77z48rk2z5iyyl2jbhcbhx3&#34;;&#xA;    };&#xA;  in&#xA;  {&#xA;    aeson = self.callCabal2nix &#34;aeson&#34; aesonSrc {};&#xA;    waargonaut = self.callHackageDirect {&#xA;      pkg = &#34;waargonaut&#34;;&#xA;      ver = &#34;0.8.0.1&#34;;&#xA;      sha256 = &#34;1zv28np3k3hg378vqm89v802xr0g8cwk7gy3mr77xrzy5jbgpa39&#34;;&#xA;    } {};&#xA;  };&#xA;# ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For further information see &lt;a href=&#34;https://nixos.org/nixpkgs/manual/#users-guide-to-the-haskell-infrastructure&#34;&gt;the Haskell section&lt;/a&gt; of nixpkgs Contributors Guide.&lt;/p&gt; &#xA;&lt;h3&gt;Adding extra local packages&lt;/h3&gt; &#xA;&lt;p&gt;If the standard packages (&lt;code&gt;frontend&lt;/code&gt;, &lt;code&gt;backend&lt;/code&gt;, and &lt;code&gt;common&lt;/code&gt;) are not enough, to add more local Haskell packages, define them with the &lt;code&gt;packages&lt;/code&gt; parameter. The sources of these packages will be automatically reloaded by &lt;code&gt;ob run&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nix&#34;&gt;# ...&#xA;project ./. ({ pkgs, ... }: {&#xA;# ...&#xA;  packages = {&#xA;    another = ./another;&#xA;  };&#xA;# ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running over HTTPS&lt;/h3&gt; &#xA;&lt;p&gt;To run your app locally over HTTPS, update the protocol in &lt;code&gt;config/common/route&lt;/code&gt; to &lt;code&gt;https&lt;/code&gt;, and then use &lt;code&gt;ob run&lt;/code&gt; as normal.&lt;/p&gt; &#xA;&lt;p&gt;Since Obelisk generates a self-signed certificate for running HTTPS, the browser will issue a warning about using an invalid certificate. On Chrome, you can go to &lt;code&gt;chrome://flags/#allow-insecure-localhost&lt;/code&gt; to enable invalid certificates for localhost.&lt;/p&gt; &#xA;&lt;h3&gt;IDE Support&lt;/h3&gt; &#xA;&lt;p&gt;Obelisk officially supports terminal-based feedback (akin to &lt;a href=&#34;https://github.com/ndmitchell/ghcid&#34;&gt;&lt;code&gt;ghcid&lt;/code&gt;&lt;/a&gt;) in &lt;code&gt;ob run&lt;/code&gt; and &lt;code&gt;ob watch&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Deploying&lt;/h2&gt; &#xA;&lt;h3&gt;Default EC2 Deployment&lt;/h3&gt; &#xA;&lt;p&gt;In this section we will demonstrate how to deploy your Obelisk app to an Amazon EC2 instance. Obelisk deployments are configured for EC2 by default (see &lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#custom-non-ec2-deployment&#34;&gt;Custom Non-EC2 Deployment&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;First create a new EC2 instance:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Launch a NixOS 19.09 EC2 instance (we recommend &lt;a href=&#34;https://console.aws.amazon.com/ec2/v2/home?region=us-east-1#LaunchInstanceWizard:ami=ami-00a8eeaf232a74f84&#34;&gt;this AMI&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;In the instance configuration wizard ensure that your instance has at least 1GB RAM and 10GB disk space.&lt;/li&gt; &#xA; &lt;li&gt;When prompted save your AWS private key (&lt;code&gt;~/myaws.pem&lt;/code&gt;) somewhere safe. We&#39;ll need it later during deployment.&lt;/li&gt; &#xA; &lt;li&gt;Go to &#34;Security Groups&#34;, select your instance&#39;s security group and under &#34;Inbound&#34; tab add a new rule for HTTP port 80 and HTTPS port 443.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;At this stage your instance should be booting and become accessible shortly. Note down the hostname of your EC2 instance.&lt;/p&gt; &#xA;&lt;p&gt;Now go to your Obelisk project directory (&lt;code&gt;~/code/myapp&lt;/code&gt;), and initialize a deployment config (&lt;code&gt;~/code/myapp-deploy&lt;/code&gt;): Your project directory must be &#34;thunkable&#34;, i.e. something on which &lt;code&gt;ob thunk pack&lt;/code&gt; can be called. Usually it will be a git repository whose current revision has been pushed upstream.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/code/myapp&#xA;SERVER=ec2-35-183-22-197.ca-central-1.compute.amazonaws.com&#xA;ROUTE=https://myapp.com   # Publicly accessible route to your app&#xA;EMAIL=myname@myapp.com&#xA;ob deploy init \&#xA;  --ssh-key ~/myaws.pem \&#xA;  --hostname $SERVER \&#xA;  --route $ROUTE \&#xA;  --admin-email $EMAIL \&#xA;  ~/code/myapp-deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;HTTPS is enabled by default; to disable HTTPS pass &lt;code&gt;--disable-https&lt;/code&gt; to the &lt;code&gt;ob deploy init&lt;/code&gt; command above.&lt;/p&gt; &#xA;&lt;p&gt;This step will also require that you manually verify the authenticity of the host &lt;code&gt;$SERVER&lt;/code&gt;. Obelisk will save the fingerprint in a deployment-specific configuration. &lt;strong&gt;Obelisk deployments do &lt;em&gt;not&lt;/em&gt; rely on the &lt;code&gt;known_hosts&lt;/code&gt; of your local machine.&lt;/strong&gt; This is because, in the event that you need to switch from one deploy machine / bastion host to another, you want to be absolutely sure that you&#39;re still connecting to the machines you think you are, even if that deploy machine / bastion host has never connected to them before. Obelisk explicitly avoids a workflow that encourages people to accept host keys without checking them, since that could result in leaking production secrets to anyone who manages to MITM you, e.g. via DNS spoofing or cache poisoning. (Note that an active attack is a circumstance where you may need to quickly switch bastion hosts, e.g. because the attacker has taken one down or you have taken it down in case it was compromised. In this circumstance you might need to deploy to production to fix an exploit or rotate keys, etc.) When you run &lt;code&gt;ob deploy&lt;/code&gt; later it will rely on the saved verification in this step.&lt;/p&gt; &#xA;&lt;p&gt;Next, go to the deployment directory that you just initialized and deploy!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/code/myapp-deploy&#xA;ob deploy push&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ob deploy push&lt;/code&gt; will locally build your app and then transfer it, along with all the Nix package dependencies, via ssh to the EC2 instance. The backend will live in &lt;code&gt;/var/lib/backend&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;At this point you are done. Your app will be accessible at &lt;code&gt;${ROUTE}&lt;/code&gt;. The currently deployed version - the git commit hash of the source repo - can be found at &lt;code&gt;${ROUTE}/version&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Custom Non-EC2 Deployment&lt;/h3&gt; &#xA;&lt;p&gt;By default Obelisk deployments are configured for NixOS machines running on AWS EC2. To provide your own configuration, you need to write a custom &lt;code&gt;module.nix&lt;/code&gt; in the deployment repository. This still requires that your server is running NixOS.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;module.nix&lt;/code&gt; must contain a Nix &lt;em&gt;function&lt;/em&gt; that produces a &lt;a href=&#34;https://nixos.org/nixos/manual/index.html#sec-writing-modules&#34;&gt;NixOS module function&lt;/a&gt;. The top-level function takes deployment configuration as arguments: &lt;code&gt;hostName&lt;/code&gt;, &lt;code&gt;adminEmail&lt;/code&gt;, &lt;code&gt;routeHost&lt;/code&gt;, &lt;code&gt;enableHttps&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;, &lt;code&gt;exe&lt;/code&gt;, &lt;code&gt;nixosPkgs&lt;/code&gt;. Most of these are the values you specified during &lt;code&gt;ob deploy init&lt;/code&gt; and are stored in the deployment repository. &lt;code&gt;version&lt;/code&gt; is a &lt;code&gt;git&lt;/code&gt; hash for the app that you&#39;re deploying. &lt;code&gt;exe&lt;/code&gt; is the Linux build of the app (as seen in &lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#locally&#34;&gt;Deploying Locally&lt;/a&gt;). &lt;code&gt;nixosPkgs&lt;/code&gt; is the package set used to construct the NixOS VM.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#virtualbox-deployment&#34;&gt;VirtualBox Deployment&lt;/a&gt; section provides an example.&lt;/p&gt; &#xA;&lt;h4&gt;VirtualBox Deployment&lt;/h4&gt; &#xA;&lt;p&gt;Here&#39;s a &lt;code&gt;module.nix&lt;/code&gt; that is configured for deployment to a VirtualBox VM (running NixOS):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nix&#34;&gt;{ nixosPkgs, ... }: {...}: {&#xA;  imports = [ (nixosPkgs.path + /nixos/modules/virtualisation/virtualbox-image.nix) ];&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;{...}:&lt;/code&gt; and following is the &lt;a href=&#34;https://nixos.org/nixos/manual/index.html#sec-writing-modules&#34;&gt;NixOS module&lt;/a&gt; definition.&lt;/p&gt; &#xA;&lt;h3&gt;Locally&lt;/h3&gt; &#xA;&lt;p&gt;If you want deploy your application locally or test a production-oriented build you can build and deploy the app as described below.&lt;/p&gt; &#xA;&lt;p&gt;Build the application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nix-build -A exe --no-out-link&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Copy the result to a new directory, add configuration, and run!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir test-app&#xA;ln -s $(nix-build -A exe --no-out-link)/* test-app/&#xA;cp -r config test-app&#xA;(cd test-app &amp;amp;&amp;amp; ./backend)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;From macOS&lt;/h3&gt; &#xA;&lt;p&gt;Deploying from macOS requires some extra setup:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LnL7/nix-darwin&#34;&gt;Install nix-darwin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/&#34;&gt;Install docker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Running &lt;code&gt;ob deploy push&lt;/code&gt; will give you additional setup instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Deploying an updated version&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;d like to deploy an updated version (with new commits) of your Obelisk app: simply go to the configuration directory, update the source thunk and push:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/code/myapp-deploy&#xA;ob deploy update&#xA;ob deploy push&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Mobile&lt;/h2&gt; &#xA;&lt;p&gt;Until Obelisk offers a &lt;code&gt;ob deploy&lt;/code&gt; equivalent for mobile apps, you are recommended to do it manually as follows.&lt;/p&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;h4&gt;First time setup&lt;/h4&gt; &#xA;&lt;p&gt;Development on iOS requires a computer running macOS and an iOS developer account. Your account must also belong to an Apple Developer Team, if you want to access developer portal links (otherwise they&#39;ll redirect to your account page).&lt;/p&gt; &#xA;&lt;h5&gt;iPhone&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Connect the iPhone on which you&#39;d like to run builds - this will open up iTunes.&lt;/li&gt; &#xA; &lt;li&gt;Click accept to authorize on both the computer and the iPhone.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h5&gt;Xcode&lt;/h5&gt; &#xA;&lt;p&gt;Install Xcode 11.2 (contains iOS SDK 13.2) and open it so that it runs its post install tool setup.&lt;/p&gt; &#xA;&lt;p&gt;These versions will work out of the box but iOS SDKs prior to 11.3 should also work. You can choose another installed version in &lt;code&gt;default.nix&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;More recent Xcodes should also work, as long as one of the SDKs mentioned above has been used. To add another SDK to your current Xcode, &lt;a href=&#34;https://developer.apple.com/download/more/&#34;&gt;download&lt;/a&gt; the corresponding Xcode, extract it and copy its SDK folder next to the installed one, e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;open -W Xcode_9.2.xip&#xA;sudo cp -R Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS11.2.sdk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can verify that you have correct versions by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xcodebuild -showsdks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Certificates&lt;/h5&gt; &#xA;&lt;p&gt;To deploy and/or package apps, you&#39;ll need to inform Apple of your development devices and permissions by adding credentials to the correct provisioning profile via the Apple Developer portal.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open up XCode and go to Preferences - Accounts. Select the organization Member role, click Manage Certificates, and add an iOS Development certificate.&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://developer.apple.com/account/ios/device/&#34;&gt;developer portal - devices&lt;/a&gt; and add your device. To find your device&#39;s UDID, select it in iTunes and click the serial number.&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://developer.apple.com/account/ios/profile/limited&#34;&gt;developer portal - development profiles&lt;/a&gt;. Create a development profile and add your certificate and device. Click &#34;Generate&#34; and then download and open the profile.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Building&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In your project&#39;s &lt;code&gt;default.nix&lt;/code&gt; set values for &lt;code&gt;ios.bundleIdentifier&lt;/code&gt; and &lt;code&gt;ios.bundleName&lt;/code&gt;. Ensure that &lt;code&gt;bundleIdentifier&lt;/code&gt; matches the App ID of the development profile, or that you are using a wildcard profile.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;nix-build -A ios.frontend -o result-ios&lt;/code&gt; to build the app. Find it at &lt;code&gt;result-ios/frontend.app&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Deploying&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Connect the registered iPhone.&lt;/li&gt; &#xA; &lt;li&gt;Find your Apple Team ID in the &lt;a href=&#34;https://developer.apple.com/account/#/membership&#34;&gt;developer portal&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run the deploy command with your Team ID:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;result-ios/bin/deploy [TEAM_ID]&#xA;# or in debug mode via lldb:&#xA;result-ios/bin/deploy [TEAM_ID] -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Packaging&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://developer.apple.com/account/ios/profile/production&#34;&gt;developer portal - distribution profiles&lt;/a&gt;. Create and download a distribution profile.&lt;/li&gt; &#xA; &lt;li&gt;Run the package script with your TEAM ID and your distribution profile to create a &lt;code&gt;.ipa&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;result-ios/bin/package [TEAM_ID] /path/to/output/.ipa /path/to/profile/file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Debugging&lt;/h4&gt; &#xA;&lt;p&gt;It&#39;s also possible to inspect iOS WkWebView apps once they are installed in the iPhone:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;On the desktop, go to Safari &amp;gt; Preferences &amp;gt; Advanced and enable Develop menu.&lt;/li&gt; &#xA; &lt;li&gt;On the iPhone go to Settings &amp;gt; Safari &amp;gt; Advanced and enable Web Inspector.&lt;/li&gt; &#xA; &lt;li&gt;Open the app on the iPhone while it is connected to the desktop.&lt;/li&gt; &#xA; &lt;li&gt;In the desktop&#39;s Safari Develop menu, you should see your iPhone. Select the screen under the name of the app.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;p&gt;NOTE: Currently Android builds are only supported on Linux.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In your project&#39;s &lt;code&gt;default.nix&lt;/code&gt; set a suitable value for &lt;code&gt;android.applicationId&lt;/code&gt; and &lt;code&gt;android.displayName&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;In your project&#39;s &lt;code&gt;default.nix&lt;/code&gt; pass &lt;code&gt;config.android_sdk.accept_license = true;&lt;/code&gt; in the arguments to the import of of &lt;code&gt;.obelisk/impl&lt;/code&gt; to indicate your acceptance of the &lt;a href=&#34;https://developer.android.com/studio/terms&#34;&gt;Android Software Development Kit License Agreement&lt;/a&gt;, which is required to build Android apps.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;nix-build -A android.frontend -o result-android&lt;/code&gt; to build the Android app.&lt;/li&gt; &#xA; &lt;li&gt;A debug version of the app should be generated at &lt;code&gt;result-android/android-app-debug.apk&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Now deploy the built apk file to your Android device:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Enable &lt;em&gt;USB debugging&lt;/em&gt; in your Android device (&lt;a href=&#34;https://developer.android.com/studio/debug/dev-options&#34;&gt;instructions here&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Connect the device using USB (be sure to confirm any security prompts on the device)&lt;/li&gt; &#xA; &lt;li&gt;Run the deploy script: &lt;code&gt;result-android/bin/deploy&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Alternatively, you can deploy from an obelisk deployment directory (a directory generated post &lt;code&gt;ob deploy init ...&lt;/code&gt; command) using the &lt;code&gt;ob deploy test android&lt;/code&gt; command. This command will accomplish the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a key store and apk signing key (&lt;code&gt;android_keystore.jks&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Build a Signed Android apk for your application&lt;/li&gt; &#xA; &lt;li&gt;Deploy the Signed apk to your connected Android device&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;In the event that you change your key or keystore password, you will have to update your credentials within the JSON object found in &lt;code&gt;android_keytool_config.json&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additional documentation on Java key stores can be found &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/technotes/tools/unix/keytool.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This should copy over and install the application on your device (if you see a &#34;&lt;em&gt;signatures do not match&lt;/em&gt;&#34; error, simply uninstall the previous app from the device before retrying the deploy). The name of the installed application will be what you have specified for &lt;code&gt;android.displayName&lt;/code&gt; in the &lt;code&gt;default.nix&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Releasing to Play Store&lt;/h4&gt; &#xA;&lt;h5&gt;Build a release version&lt;/h5&gt; &#xA;&lt;p&gt;After having configured signing for your app, you may proceed to build a release version of the app. This is no different to how you build the non-release version, so consult the section &lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/#android&#34;&gt;Android&lt;/a&gt; further above for exact instructions on building and deploying to your device.&lt;/p&gt; &#xA;&lt;h2&gt;Frequently Asked Questions (FAQ)&lt;/h2&gt; &#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/FAQ.md&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions and issue reports are encouraged and appreciated! Refer to the &lt;a href=&#34;https://raw.githubusercontent.com/obsidiansystems/obelisk/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; guide for information about getting started.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>simplex-chat/simplex-chat</title>
    <updated>2022-07-17T02:12:32Z</updated>
    <id>tag:github.com,2022-07-17:/simplex-chat/simplex-chat</id>
    <link href="https://github.com/simplex-chat/simplex-chat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SimpleX - the first messaging platform operating without user identifiers of any kind - 100% private by design! iOS and Android apps are released 📱!&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/images/simplex-chat-logo.svg?sanitize=true&#34; alt=&#34;SimpleX logo&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h1&gt;SimpleX - the first messaging platform that has no user identifiers of any kind - 100% private by design!&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/simplex-chat/simplex-chat/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/simplex-chat/simplex-chat/actions/workflows/build.yml/badge.svg?branch=stable&#34; alt=&#34;build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/simplex-chat/simplex-chat/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/simplex-chat/simplex-chat/total&#34; alt=&#34;GitHub downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/simplex-chat/simplex-chat/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/simplex-chat/simplex-chat&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/SimpleXChat&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/SimpleXChat?style=social&#34; alt=&#34;Follow on Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.reddit.com/r/SimpleXChat&#34;&gt;&lt;img src=&#34;https://img.shields.io/reddit/subreddit-subscribers/SimpleXChat?style=social&#34; alt=&#34;Join on Reddit&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://apps.apple.com/us/app/simplex-chat/id1605771084&#34;&gt;&lt;img src=&#34;https://github.com/simplex-chat/.github/raw/master/profile/images/apple_store.svg?sanitize=true&#34; alt=&#34;iOS app&#34; height=&#34;42&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://play.google.com/store/apps/details?id=chat.simplex.app&#34;&gt;&lt;img src=&#34;https://github.com/simplex-chat/.github/raw/master/profile/images/google_play.svg?sanitize=true&#34; alt=&#34;Android app&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://app.simplex.chat&#34;&gt;&lt;img src=&#34;https://github.com/simplex-chat/.github/raw/master/profile/images/f_droid.svg?sanitize=true&#34; alt=&#34;F-Droid&#34; height=&#34;41&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://testflight.apple.com/join/DWuT2LQu&#34;&gt;&lt;img src=&#34;https://github.com/simplex-chat/.github/raw/master/profile/images/testflight.png&#34; alt=&#34;iOS TestFlight&#34; height=&#34;41&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/simplex-chat/website/raw/master/simplex.apk&#34;&gt;&lt;img src=&#34;https://github.com/simplex-chat/.github/raw/master/profile/images/apk_icon.png&#34; alt=&#34;APK&#34; height=&#34;41&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🖲 Protects your messages and metadata - who you talk to and when.&lt;/li&gt; &#xA; &lt;li&gt;🔐 Double ratchet end-to-end encryption, with additional encryption layer.&lt;/li&gt; &#xA; &lt;li&gt;📱 Mobile apps for Android (&lt;a href=&#34;https://play.google.com/store/apps/details?id=chat.simplex.app&#34;&gt;Google Play&lt;/a&gt;, &lt;a href=&#34;https://github.com/simplex-chat/website/raw/master/simplex.apk&#34;&gt;APK&lt;/a&gt;) and &lt;a href=&#34;https://apps.apple.com/us/app/simplex-chat/id1605771084&#34;&gt;iOS&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;🚀 &lt;a href=&#34;https://testflight.apple.com/join/DWuT2LQu&#34;&gt;TestFlight preview for iOS&lt;/a&gt; with the new features 1-2 weeks earlier - &lt;strong&gt;limited to 10,000 users&lt;/strong&gt;!&lt;/li&gt; &#xA; &lt;li&gt;🖥 Available as a terminal (console) app / CLI on Linux, MacOS, Windows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/#why-privacy-matters&#34;&gt;Why privacy matters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/#simplex-approach-to-privacy-and-security&#34;&gt;SimpleX approach to privacy and security&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/#complete-privacy-of-your-identity-profile-contacts-and-metadata&#34;&gt;Complete privacy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/#the-best-protection-against-spam-and-abuse&#34;&gt;Protection against spam and abuse&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/#complete-ownership-control-and-security-of-your-data&#34;&gt;Ownership and security of your data&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/#users-own-simplex-network&#34;&gt;Users own SimpleX network&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/#frequently-asked-questions&#34;&gt;Frequently asked questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/#news-and-updates&#34;&gt;News and updates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/#make-a-private-connection&#34;&gt;Make a private connection&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/#zap-quick-installation-of-a-terminal-app&#34;&gt;Quick installation of a terminal app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/#simplex-platform-design&#34;&gt;SimpleX Platform design&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/#for-developers&#34;&gt;For developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/#roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/#help-us-pay-for-3rd-party-security-audit&#34;&gt;Help us pay for 3rd party security audit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/#disclaimer&#34;&gt;Disclaimer, License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why privacy matters&lt;/h2&gt; &#xA;&lt;p&gt;Everyone should care about privacy and security of their communications - innocuous conversations can put you in danger even if there is nothing to hide.&lt;/p&gt; &#xA;&lt;p&gt;One of the most shocking stories is the experience of &lt;a href=&#34;https://en.wikipedia.org/wiki/Mohamedou_Ould_Slahi&#34;&gt;Mohamedou Ould Salahi&lt;/a&gt; that he wrote about in his memoir and that is shown in The Mauritanian movie. He was put into Guantanamo camp, without trial, and was tortured there for 15 years after a phone call to his relative in Afghanistan, under suspicion of being involved in 9/11 attacks, even though he lived in Germany for the 10 years prior to the attacks.&lt;/p&gt; &#xA;&lt;p&gt;It is not enough to use an end-to-end encrypted messenger, we all should use the messengers that protect the privacy of our personal networks - who we are connected with.&lt;/p&gt; &#xA;&lt;h2&gt;SimpleX approach to privacy and security&lt;/h2&gt; &#xA;&lt;h3&gt;Complete privacy of your identity, profile, contacts and metadata&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Unlike any other existing messaging platform, SimpleX has no identifiers assigned to the users&lt;/strong&gt; - not even random numbers. This protects the privacy of who are you communicating with, hiding it from SimpleX platform servers and from any observers. &lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/docs/SIMPLEX.md#full-privacy-of-your-identity-profile-contacts-and-metadata&#34;&gt;Read more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;The best protection against spam and abuse&lt;/h3&gt; &#xA;&lt;p&gt;As you have no identifier on SimpleX platform, you cannot be contacted unless you share a one-time invitation link or an optional temporary user address. &lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/docs/SIMPLEX.md#the-best-protection-against-spam-and-abuse&#34;&gt;Read more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Complete ownership, control and security of your data&lt;/h3&gt; &#xA;&lt;p&gt;SimpleX stores all user data on client devices, the messages are only held temporarily on SimpleX relay servers until they are received. &lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/docs/SIMPLEX.md#complete-ownership-control-and-security-of-your-data&#34;&gt;Read more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Users own SimpleX network&lt;/h3&gt; &#xA;&lt;p&gt;You can use SimpleX with your own servers and still communicate with people using the servers that are pre-configured in the apps or any other SimpleX servers. &lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/docs/SIMPLEX.md#users-own-simplex-network&#34;&gt;Read more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Frequently asked questions&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;How SimpleX can deliver messages without any user identifiers?&lt;/em&gt; See &lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/blog/20220511-simplex-chat-v2-images-files.md#the-first-messaging-platform-without-user-identifiers&#34;&gt;v2 release annoucement&lt;/a&gt; explaining how SimpleX works.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Why should I not just use Signal?&lt;/em&gt; Signal is a centralised platform that uses phone numbers to identify its users and their contacts. It means that while the content of your messages on Signal is protected with robust end-to-end encryption, there is a large amount of meta-data visible to Signal - who you talk with and when.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;How is it different from Matrix, Session, Ricochet, Cwtch, etc., that also don&#39;t require user identites?&lt;/em&gt; Although these platforms do not require a &lt;em&gt;real identity&lt;/em&gt;, they do rely on anonymous user identities to deliver messages – it can be, for example, an identity key or a random number. Using a persistent user identity, even anonymous, creates a risk that user&#39;s connection graph becomes known to the observers and/or service providers, and it can lead to de-anonymizing some users. If the same user profile is used to connect to two different people via any messenger other than SimpleX, these two people can confirm if they are connected to the same person - they would use the same user identifier in the messages. With SimpleX there is no meta-data in common between your conversations with different contacts - the quality that no other messaging platform has.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;News and updates&lt;/h2&gt; &#xA;&lt;p&gt;Selected updates:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/blog/20220711-simplex-chat-v3-released-ios-notifications-audio-video-calls-database-export-import-protocol-improvements.md&#34;&gt;Jul 11, 2022. v3.0: instant push notifications for iOS, e2e encrypted WebRTC audio/video calls, chat database export/import, privacy and performance improvements&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/blog/20220511-simplex-chat-v2-images-files.md&#34;&gt;May 11, 2022. v2.0 released - sending images and files in mobile apps&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/blog/20220308-simplex-chat-mobile-apps.md&#34;&gt;Mar 08, 2022 Mobile apps for iOS and Android released&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/20220112-simplex-chat-v1-released.md&#34;&gt;Jan 12, 2022. SimpleX v1 released: the only messaging and application platform without user identities&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/blog&#34;&gt;All updates&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Make a private connection&lt;/h2&gt; &#xA;&lt;p&gt;You need to share a link or scan a QR code (in person or during a video call) to make a connection and start messaging.&lt;/p&gt; &#xA;&lt;p&gt;The channel through which you share the link does not have to be secure - it is enough that you can confirm who sent you the message and that your SimpleX connection is established.&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/simplex-chat/.github/raw/master/profile/images/conversation.png&#34; alt=&#34;Make a private connection&#34; width=&#34;594&#34; height=&#34;360&#34;&gt; &#xA;&lt;h2&gt;&lt;span&gt;⚡&lt;/span&gt; Quick installation of a terminal app&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -o- https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/install.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the chat client is installed, simply run &lt;code&gt;simplex-chat&lt;/code&gt; from your terminal.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/images/connection.gif&#34; alt=&#34;simplex-chat&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Read more about &lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/docs/CLI.md&#34;&gt;installing and using the terminal app&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;SimpleX Platform design&lt;/h2&gt; &#xA;&lt;p&gt;SimpleX is a client-server network with a unique network topology that uses redundant, disposable message relay nodes to asynchronously pass messages via unidirectional (simplex) message queues, providing recipient and sender anonymity.&lt;/p&gt; &#xA;&lt;p&gt;Unlike P2P networks, all messages are passed through one or several server nodes, that do not even need to have persistence. In fact, the current &lt;a href=&#34;https://github.com/simplex-chat/simplexmq#smp-server&#34;&gt;SMP server implementation&lt;/a&gt; uses in-memory message storage, persisting only the queue records. SimpleX provides better metadata protection than P2P designs, as no global participant identifiers are used to deliver messages, and avoids &lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/docs/SIMPLEX.md#comparison-with-p2p-messaging-protocols&#34;&gt;the problems of P2P networks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Unlike federated networks, the server nodes &lt;strong&gt;do not have records of the users&lt;/strong&gt;, &lt;strong&gt;do not communicate with each other&lt;/strong&gt; and &lt;strong&gt;do not store messages&lt;/strong&gt; after they are delivered to the recipients. There is no way to discover the full list of servers participating in SimpleX network. This design avoids the problem of metadata visibility that all federated networks have and better protects from the network-wide attacks.&lt;/p&gt; &#xA;&lt;p&gt;Only the client devices have information about users, their contacts and groups.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/simplex-chat/simplexmq/raw/master/protocol/overview-tjr.md&#34;&gt;SimpleX whitepaper&lt;/a&gt; for more information on platform objectives and technical design.&lt;/p&gt; &#xA;&lt;h2&gt;For developers&lt;/h2&gt; &#xA;&lt;p&gt;We plan that the SimpleX platform will grow into the platform supporting any distributed Internet application. This will allow you to build any service that people can access via chat, with custom web-based UI widgets that anybody with basic HTML/CSS/JavaScript knowledge can create in a few hours.&lt;/p&gt; &#xA;&lt;p&gt;You already can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;use SimpleX Chat library to integrate chat functionality into your apps.&lt;/li&gt; &#xA; &lt;li&gt;use SimpleX Chat bot templates in Haskell to build your own chat bot services (TypeScript SDK is coming soon).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you are considering developing with SimpleX platform please get in touch for any advice and support.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;✅ Easy to deploy SimpleX server with in-memory message storage, without any dependencies.&lt;/li&gt; &#xA; &lt;li&gt;✅ Terminal (console) client with groups and files support.&lt;/li&gt; &#xA; &lt;li&gt;✅ One-click SimpleX server deployment on Linode.&lt;/li&gt; &#xA; &lt;li&gt;✅ End-to-end encryption using double-ratchet protocol with additional encryption layer.&lt;/li&gt; &#xA; &lt;li&gt;✅ Mobile apps v1 for Android and iOS.&lt;/li&gt; &#xA; &lt;li&gt;✅ Private instant notifications for Android using background service.&lt;/li&gt; &#xA; &lt;li&gt;✅ Haskell chat bot templates.&lt;/li&gt; &#xA; &lt;li&gt;✅ v2.0 - supporting images and files in mobile apps.&lt;/li&gt; &#xA; &lt;li&gt;✅ Manual chat history deletion.&lt;/li&gt; &#xA; &lt;li&gt;✅ End-to-end encrypted WebRTC audio and video calls via the mobile apps.&lt;/li&gt; &#xA; &lt;li&gt;✅ Privacy preserving instant notifications for iOS using Apple Push Notification service.&lt;/li&gt; &#xA; &lt;li&gt;✅ Chat database export and import&lt;/li&gt; &#xA; &lt;li&gt;🏗 Chat server and TypeScript client SDK to develop chat interfaces, integrations and chat bots (in progress).&lt;/li&gt; &#xA; &lt;li&gt;🏗 Connecting to messaging servers via Tor (in progress).&lt;/li&gt; &#xA; &lt;li&gt;🏗 Chat groups in mobile apps (in progress).&lt;/li&gt; &#xA; &lt;li&gt;Chat database encryption.&lt;/li&gt; &#xA; &lt;li&gt;Disappearing messages, with mutual agreement.&lt;/li&gt; &#xA; &lt;li&gt;Web widgets for custom interactivity in the chats.&lt;/li&gt; &#xA; &lt;li&gt;SMP protocol improvements: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;SMP queue redundancy and rotation.&lt;/li&gt; &#xA;   &lt;li&gt;Message delivery confirmation.&lt;/li&gt; &#xA;   &lt;li&gt;Supporting the same profile on multiple devices.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Privacy-preserving identity server for optional DNS-based contact/group addresses to simplify connection and discovery, but not used to deliver messages: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;keep all your contacts and groups even if you lose the domain.&lt;/li&gt; &#xA;   &lt;li&gt;the server doesn&#39;t have information about your contacts and groups.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Media server to optimize sending large files to groups.&lt;/li&gt; &#xA; &lt;li&gt;Channels server for large groups and broadcast channels.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Help us pay for 3rd party security audit&lt;/h2&gt; &#xA;&lt;p&gt;I will get straight to the point: I ask you to support SimpleX Chat with donations.&lt;/p&gt; &#xA;&lt;p&gt;We are prioritizing users privacy and security - it would be impossible without your support we were lucky to have so far.&lt;/p&gt; &#xA;&lt;p&gt;We are planning a 3rd party security audit for the app, and it would hugely help us if some part of this $20,000+ expense could be covered with donations.&lt;/p&gt; &#xA;&lt;p&gt;Our pledge to our users is that SimpleX protocols are and will remain open, and in public domain, - so anybody can build the future implementations of the clients and the servers. We are building SimpleX platform based on the same principles as email and web, but much more private and secure.&lt;/p&gt; &#xA;&lt;p&gt;If you are already using SimpleX Chat, or plan to use it in the future when it has more features, please consider making a donation - it will help us to raise more funds. Donating any amount, even the price of the cup of coffee, would make a huge difference for us.&lt;/p&gt; &#xA;&lt;p&gt;It is possible to &lt;a href=&#34;https://github.com/sponsors/simplex-chat&#34;&gt;donate via GitHub&lt;/a&gt;, which is commission-free for us, or &lt;a href=&#34;https://opencollective.com/simplex-chat&#34;&gt;via OpenCollective&lt;/a&gt;, that also accepts donations in crypto-currencies, but charges a commission.&lt;/p&gt; &#xA;&lt;p&gt;Thank you,&lt;/p&gt; &#xA;&lt;p&gt;Evgeny&lt;/p&gt; &#xA;&lt;p&gt;SimpleX Chat founder&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/simplex-chat/simplexmq/raw/master/protocol/overview-tjr.md&#34;&gt;SimpleX protocols and security model&lt;/a&gt; was reviewed and had many improvements in v1.0.0; we are currently arranging for the independent implementation audit.&lt;/p&gt; &#xA;&lt;p&gt;You are likely to discover some bugs - we would really appreciate if you use it and let us know anything that needs to be fixed or improved.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/simplex-chat/simplex-chat/stable/LICENSE&#34;&gt;AGPL v3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://apps.apple.com/us/app/simplex-chat/id1605771084&#34;&gt;&lt;img src=&#34;https://github.com/simplex-chat/.github/raw/master/profile/images/apple_store.svg?sanitize=true&#34; alt=&#34;iOS app&#34; height=&#34;42&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://play.google.com/store/apps/details?id=chat.simplex.app&#34;&gt;&lt;img src=&#34;https://github.com/simplex-chat/.github/raw/master/profile/images/google_play.svg?sanitize=true&#34; alt=&#34;Android app&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://app.simplex.chat&#34;&gt;&lt;img src=&#34;https://github.com/simplex-chat/.github/raw/master/profile/images/f_droid.svg?sanitize=true&#34; alt=&#34;F-Droid&#34; height=&#34;41&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://testflight.apple.com/join/DWuT2LQu&#34;&gt;&lt;img src=&#34;https://github.com/simplex-chat/.github/raw/master/profile/images/testflight.png&#34; alt=&#34;iOS TestFlight&#34; height=&#34;41&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/simplex-chat/website/raw/master/simplex.apk&#34;&gt;&lt;img src=&#34;https://github.com/simplex-chat/.github/raw/master/profile/images/apk_icon.png&#34; alt=&#34;APK&#34; height=&#34;41&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>