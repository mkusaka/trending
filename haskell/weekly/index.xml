<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-19T01:52:51Z</updated>
  <subtitle>Weekly Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>haskell-game/tiny-games-hs</title>
    <updated>2023-02-19T01:52:51Z</updated>
    <id>tag:github.com,2023-02-19:/haskell-game/tiny-games-hs</id>
    <link href="https://github.com/haskell-game/tiny-games-hs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Haskell Tiny Game Jam&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Haskell Tiny Game Jam&lt;/h1&gt; &#xA;&lt;p&gt;Inspired by the ongoing &lt;a href=&#34;https://www.homeputerium.de&#34;&gt;BASIC 10Liner contest&lt;/a&gt; (see their english rules at the bottom of that page, and &lt;a href=&#34;https://bunsen.itch.io&#34;&gt;latest entries&lt;/a&gt;)..&lt;/p&gt; &#xA;&lt;p&gt;The first Haskell tiny games contest runs through February 2023! Your mission: make a playable game in 10 lines of 80 characters of Haskell. The prize.. glory! Also fun, learning, and advancing Haskell&#39;s suitability for game dev and programming in the small.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/#rules&#34;&gt;Rules&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/#games&#34;&gt;Games&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/#lets-play&#34;&gt;Let&#39;s play!&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/#development&#34;&gt;Development&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Rules&lt;/h2&gt; &#xA;&lt;p&gt;Submit your &lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/#games&#34;&gt;entries&lt;/a&gt; between now and end of February! sm and f-a will be your judges. See the #haskell-game &lt;a href=&#34;https://matrix.to/#/#haskell-game:matrix.org&#34;&gt;Matrix&lt;/a&gt; or &lt;a href=&#34;https://web.libera.chat/#haskell-game&#34;&gt;IRC&lt;/a&gt; chat or this repo&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/issues&#34;&gt;issue tracker&lt;/a&gt; for help/feedback/announcements.&lt;/p&gt; &#xA;&lt;p&gt;Here are the contest rules for this round (HTG1):&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;You can submit any number of entries to the official repo, haskell-game/tiny-games-hs. Each should be a playable game or amusement in one haskell file of up to 10 lines of up to 80 characters each, in one of the following categories:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;prelude-10-80&lt;/code&gt;, allowing no imports&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;base-10-80&lt;/code&gt;, allowing imports from the base package&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;default-10-80&lt;/code&gt;, allowing imports from GHC&#39;s default packages, plus an optional Import.hs file to gather and re-export imports (only)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;hackage-10-80&lt;/code&gt;, allowing imports from all of Hackage, and an Import.hs file.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The entry can be a script (&lt;a href=&#34;https://downloads.haskell.org/ghc/latest/docs/users_guide/runghc.html&#34;&gt;runghc&lt;/a&gt;, &lt;a href=&#34;https://docs.haskellstack.org/en/stable/script_command&#34;&gt;stack&lt;/a&gt;, &lt;a href=&#34;https://cabal.readthedocs.io/en/3.6/cabal-commands.html#cabal-v2-run&#34;&gt;cabal&lt;/a&gt;, ...) or a small program requiring compilation, but not a multi-file project. Our ideal is a self-contained executable 10 line program that just works, like BASIC programs. Here are some templates to give ideas: &lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/template1.hs&#34;&gt;prelude/template1&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/base/template1.hs&#34;&gt;base/template1&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/default/template1.hs&#34;&gt;default/template1&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/template1.hs&#34;&gt;hackage/template1&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Unlimited comments are permitted after line 11. The game&#39;s &lt;code&gt;category/gamename (author)&lt;/code&gt; info should appear here, plus any essential info like player controls, so that the game is usable to someone seeing just this file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Achieving programs that &#34;just work&#34; is a core principle and part of the challenge. The script or program must either be reliably runnable via shebang line (these use up your line count, but improve runnability; &lt;code&gt;env -S&lt;/code&gt; is allowed) or contain a reliable build/run command line with all needed options, in the comments (the &lt;code&gt;play&lt;/code&gt; script will use this). Games which aren&#39;t straightforward to run and enjoy are incomplete. See also the &lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/#runnability&#34;&gt;runnability&lt;/a&gt; tips below.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The game should be portable, running on all major platforms, ideally.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A square thumbnail (screenshot) must be provided for the repo README - either a static png (which will be hyperlinked) or an animated gif (which should not be, so as not to break Github&#39;s player overlay).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A README file is optional but makes browsing your game more pleasant for website visitors. Feel free to include animations, or discussion of the game/code/your experience.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;An unminified version of the code, easier to read and learn from, is optional but welcome.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can update your entries freely until the contest end, 2023-02-28 11:59:59 UTC, at which time they are frozen for posterity and judging (no exceptions). If you need to share post-contest improvements, you are welcome to publish as new files in the same directory.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Games&lt;/h2&gt; &#xA;&lt;p&gt;Here are the entries received so far!&lt;/p&gt; &#xA;&lt;h3&gt;prelude-10-80&lt;/h3&gt; &#xA;&lt;!-- (No imports) --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/guess1&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/guess1/guess1.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;guess1&lt;/a&gt;&lt;br&gt;(sm)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/pure-doors&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/pure-doors/pure-doors.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;pure-doors&lt;/a&gt;&lt;br&gt;(tristanC)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/fifteen&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/fifteen/fifteen.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;fifteen&lt;/a&gt;&lt;br&gt;(bradrn)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/chess/chess.gif&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/chess&#34;&gt;&lt;br&gt;chess&lt;/a&gt;&lt;br&gt;(fizruk)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/sudoku&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/sudoku/sudoku.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;sudoku&lt;/a&gt;&lt;br&gt;(elderephemera)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/matchmaking/matchmaking.gif&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/matchmaking&#34;&gt;matchmaking&lt;/a&gt;&lt;br&gt;(migmit)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/tiny-brot/tiny-brot.gif&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/tiny-brot&#34;&gt;tiny-brot&lt;/a&gt;&lt;br&gt;(tristanC)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/mini-othello/mini-othello-1.gif&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/mini-othello/mini-othello.hs&#34;&gt;mini-othello&lt;/a&gt;&lt;br&gt;(hellwolf)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/one-dot&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/one-dot/one-dot.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;one-dot&lt;/a&gt;&lt;br&gt;(OsePedro)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/expressit&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/expressit/expressit.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;expressit&lt;/a&gt;&lt;br&gt;(Greg8128)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/life&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/prelude/life/life.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;life&lt;/a&gt;&lt;br&gt;(Rens van Hienen)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;base-10-80&lt;/h3&gt; &#xA;&lt;!-- (Just the base package) --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/base/timing&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/base/timing/timing.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;timing&lt;/a&gt;&lt;br&gt;(TravisCardwell)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/base/shoot&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/base/shoot/shoot.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;shoot&lt;/a&gt;&lt;br&gt;(migmit)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/base/log2048/log2048.gif&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/base/log2048&#34;&gt;&lt;br&gt;log2048&lt;/a&gt;&lt;br&gt;(Lysxia)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/base/rhythm/rhythm.gif&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/base/rhythm&#34;&gt;&lt;br&gt;rhythm&lt;/a&gt;&lt;br&gt;(elderephemera)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/base/peyton-says&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/base/peyton-says/peyton-says.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;peyton-says&lt;/a&gt;&lt;br&gt;(gergoerdi)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/base/acey-deucey&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/base/acey-deucey/acey-deucey.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;acey-deucey&lt;/a&gt;&lt;br&gt;(trevarj)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/base/flower-seeds&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/base/flower-seeds/flower-seeds.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;flower-seeds&lt;/a&gt;&lt;br&gt;(tristanC)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;default-10-80&lt;/h3&gt; &#xA;&lt;!-- (Just the packages that come with GHC) --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/default/type-and-furious&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/default/type-and-furious/type-and-furious.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;type-and-furious&lt;/a&gt;&lt;br&gt;(lsmor)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/default/shmupemup&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/default/shmupemup/shmupemup.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;shmupemup&lt;/a&gt;&lt;br&gt;(elderephemera)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/default/tsp/tsp.gif&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/default/tsp&#34;&gt;tsp&lt;/a&gt;&lt;br&gt;(tristanC)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;hackage-10-80&lt;/h3&gt; &#xA;&lt;!-- (All of Hackage) --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/guess2&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/guess2/guess2.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;guess2&lt;/a&gt;&lt;br&gt;(sm)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/wordle&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/wordle/wordle.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;wordle&lt;/a&gt;&lt;br&gt;(halogenandtoast)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/ski&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/ski/ski.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;ski&lt;/a&gt;&lt;br&gt;(sm)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/guesscolor&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/guesscolor/guesscolor.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;guesscolor&lt;/a&gt;&lt;br&gt;(TravisCardwell)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/bulls-n-cows&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/bulls-n-cows/bulls-n-cows.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;bulls-n-cows&lt;/a&gt;&lt;br&gt;(akadude)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/hallway-to-hell/hallway-to-hell.gif&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/hallway-to-hell&#34;&gt;hallway-to-hell&lt;/a&gt;&lt;br&gt;(juliendehos)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/1234-hero&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/1234-hero/1234-hero.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;1234-hero&lt;/a&gt;&lt;br&gt;(gelisam)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/crappy-flappy&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/crappy-flappy/crappy-flappy.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;crappy-flappy&lt;/a&gt;&lt;br&gt;(gergoerdi)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/pong&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/pong/pong.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;pong&lt;/a&gt;&lt;br&gt;(gergoerdi)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/minesweeper&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/minesweeper/minesweeper.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;minesweeper&lt;/a&gt;&lt;br&gt;(Greg8128)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/pong2&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/pong2/pong2.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;pong2&lt;/a&gt;&lt;br&gt;(sm)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/brickbreaker&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/brickbreaker/brickbreaker.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;brickbreaker&lt;/a&gt;&lt;br&gt;(fgaz)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/lazy-march/lazy-march.gif&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/lazy-march&#34;&gt;lazy-march&lt;/a&gt;&lt;br&gt;(tristanc)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/balances&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/balances/balances.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;balances&lt;/a&gt;&lt;br&gt;(sm)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/vaders&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/vaders/vaders.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;vaders&lt;/a&gt;&lt;br&gt;(gergoerdi)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/tetris&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/tetris/tetris.png&#34; width=&#34;140&#34; height=&#34;140&#34;&gt;&lt;br&gt;tetris&lt;/a&gt;&lt;br&gt;(gergoerdi)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Let&#39;s play!&lt;/h2&gt; &#xA;&lt;p&gt;You will need a suitable version of GHC (9.2.5+ or 9.4.4+ recommended), and stack (or cabal). See &lt;a href=&#34;https://www.haskell.org/get-started/&#34;&gt;https://www.haskell.org/get-started/&lt;/a&gt;. Once Haskell is installed, and if you have bash, you can run &lt;code&gt;./play&lt;/code&gt; in this repo:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/play.dark.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;or:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/play-2.dark.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t have bash, cd into each &lt;code&gt;*/GAME&lt;/code&gt; directory and try running &lt;code&gt;GAME.hs&lt;/code&gt;. If that fails, look for running clues in that file, a readme, or the &lt;code&gt;play&lt;/code&gt; script. You can also run &lt;code&gt;./play GAME -h&lt;/code&gt; to view a game&#39;s source code and readme.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Runnability&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Avoid requiring problematic GHC versions. In particular GHC &amp;lt;9.2 doesn&#39;t work well on mac. If you specify a GHC version/stackage snapshot, the current release is ideal (GHC 9.2, lts-20).&lt;/li&gt; &#xA; &lt;li&gt;env -S in the shebang line doesn&#39;t work on older GNU/Linux systems, but we allow it (see &lt;a href=&#34;https://github.com/haskell-game/tiny-games-hs/issues/25&#34;&gt;https://github.com/haskell-game/tiny-games-hs/issues/25&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;stack scripts can seem to hang at first startup while downloading snapshot info. For prelude/base/default categories, using --resolver=ghc-9.2.5 avoids this (see &lt;a href=&#34;https://github.com/haskell-game/tiny-games-hs/issues/38&#34;&gt;https://github.com/haskell-game/tiny-games-hs/issues/38&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;stack scripts can use --verbosity=error to silence the &#34;Selected resolver&#34; output. (Or --verbosity=info to show dependency building progress.)&lt;/li&gt; &#xA; &lt;li&gt;If using packages which require compilation (gloss), use stack script --compile. (And be aware a newer compiled binary can cause your source to be ignored.)&lt;/li&gt; &#xA; &lt;li&gt;cabal scripts are also welcome; they don&#39;t have --compile and require more lines (unless you use env -S)&lt;/li&gt; &#xA; &lt;li&gt;On mac, Terminal and iTerm 3.4 render emojis very slowly; iTerm 3.5 beta or VS Code terminal work better.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Minifying&lt;/h3&gt; &#xA;&lt;p&gt;Here are some minifiers you can try; either or both may be able to turn your game into a brick of inscrutable code no more than 80 characters wide. Both require that you first add curled braces and semicolons throughout your code to make it white space insensitive.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/minify.hs&#34;&gt;minify.hs&lt;/a&gt; (from haskell-game/tiny-games-hs#14; contact @kindaro with issues/feedback)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/brickbreaker/minify.hs&#34;&gt;hackage/brickbreaker/minify.hs&lt;/a&gt; (from haskell-game/tiny-games-hs#63; contact @fgaz)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Animations&lt;/h3&gt; &#xA;&lt;p&gt;Here&#39;s one way to make animated GIFs or APNGs for your README (see also &lt;a href=&#34;https://raw.githubusercontent.com/haskell-game/tiny-games-hs/main/hackage/ski/Makefile&#34;&gt;ski/Makefile&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Install Noto Emoji font, required by agg to show emojis&#xA;$ asciinema rec game.cast&#xA;$ agg -v --cols 80 --rows 25 --font-family &#39;Essential PragmataPro&#39; --font-size 16 game.cast game.lg.gif&#xA;$ gifsicle -V --lossy=50 -k8 -O2 -Okeep-empty game.gif -o game.gif&#xA;$ gif2apng game.gif game.png&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;agg doesn&#39;t show colour emojis &lt;a href=&#34;https://github.com/asciinema/agg/issues/2&#34;&gt;yet&lt;/a&gt;. The Noto Emoji glyphs are monochrome and less pretty, but will give the idea. (asciicast2gif which predates agg does show colour emojis, but doesn&#39;t convert ansi-terminal-game output well.)&lt;/p&gt; &#xA;&lt;p&gt;Shrinking the gif, eg with gifsicle, is recommended for repo longevity and page load times. It helps gif2apng a lot also.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/haskell-game/tiny-games-hs/issues/70&#34;&gt;APNGs&lt;/a&gt; are preferable if you can manage it: they will not be obscured by Github&#39;s gif player button, they can be hyperlinks, and they can have smaller file size. &lt;a href=&#34;https://sourceforge.net/projects/gif2apng&#34;&gt;https://sourceforge.net/projects/gif2apng&lt;/a&gt; works well, it can be built from its source tarball.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>uriba/biolab-analysis</title>
    <updated>2023-02-19T01:52:51Z</updated>
    <id>tag:github.com,2023-02-19:/uriba/biolab-analysis</id>
    <link href="https://github.com/uriba/biolab-analysis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A library to perform various data analysis on micro-biology measurements.&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>awakesecurity/proto3-wire</title>
    <updated>2023-02-19T01:52:51Z</updated>
    <id>tag:github.com,2023-02-19:/awakesecurity/proto3-wire</id>
    <link href="https://github.com/awakesecurity/proto3-wire" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;proto3-wire&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/awakesecurity/proto3-wire/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/awakesecurity/proto3-wire/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This library provides a low-level implementation of the &lt;a href=&#34;https://developers.google.com/protocol-buffers/docs/encoding&#34;&gt;Protocol Buffers version 3 wire format&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This library takes a minimalist approach, supporting only the basic wire format. In particular, correctness is left up to the user in many places (for example, ensuring that encoders use increasing field numbers).&lt;/p&gt; &#xA;&lt;p&gt;There are approaches which can give more guarantees, such as Generics and Template Haskell, but those approaches are not implemented here and are left to higher-level libraries.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;http://docs.haskellstack.org/en/stable/README/&#34;&gt;Stack&lt;/a&gt;, clone this repository, and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;stack build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run tests or generate documentation, use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;stack build [--test] [--haddock]&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>