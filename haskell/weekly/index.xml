<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-21T01:41:07Z</updated>
  <subtitle>Weekly Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>airalab/hs-web3</title>
    <updated>2024-07-21T01:41:07Z</updated>
    <id>tag:github.com,2024-07-21:/airalab/hs-web3</id>
    <link href="https://github.com/airalab/hs-web3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Web3 API for Haskell&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Web3 API for Haskell&lt;/h1&gt; &#xA;&lt;p&gt;This library implements Haskell API client for popular Web3 platforms.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hs-web3.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/hs-web3/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/airalab/hs-web3/actions&#34;&gt;&lt;img src=&#34;https://github.com/airalab/hs-web3/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.hackage.haskell.org/package/web3&#34;&gt;&lt;img src=&#34;https://matrix.hackage.haskell.org/api/v2/packages/web3/badge&#34; alt=&#34;Hackage Matrix&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://hackage.haskell.org/package/web3&#34;&gt;&lt;img src=&#34;https://img.shields.io/hackage/v/web3.svg?sanitize=true&#34; alt=&#34;Hackage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://stackage.org/lts-14/package/web3&#34;&gt;&lt;img src=&#34;http://stackage.org/package/web3/badge/lts-14&#34; alt=&#34;LTS-14&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://stackage.org/nightly/package/web3&#34;&gt;&lt;img src=&#34;http://stackage.org/package/web3/badge/nightly&#34; alt=&#34;nightly&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codetriage.com/airalab/hs-web3&#34;&gt;&lt;img src=&#34;https://www.codetriage.com/airalab/hs-web3/badges/users.svg?sanitize=true&#34; alt=&#34;Code Triagers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;stack install web3&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;{-# LANGUAGE OverloadedStrings #-}&#xA;&#xA;module Main where&#xA;&#xA;-- Basic imports&#xA;import           Network.Ethereum&#xA;import           Network.Web3&#xA;&#xA;-- Eth API support&#xA;import qualified Network.Ethereum.Api.Eth   as Eth&#xA;import           Network.Ethereum.Api.Types&#xA;&#xA;-- ENS support&#xA;import qualified Network.Ethereum.Ens       as Ens&#xA;&#xA;-- Lens to simple param setting&#xA;import           Lens.Micro                 ((.~))&#xA;&#xA;main :: IO ()&#xA;main = do&#xA;    -- Use default provider on http://localhost:8545&#xA;    ret &amp;lt;- runWeb3 $ do&#xA;&#xA;        -- Get address of default account&#xA;        me &amp;lt;- head &amp;lt;$&amp;gt; Eth.accounts&#xA;&#xA;        -- Get balance of default account on latest block&#xA;        myBalance &amp;lt;- Eth.getBalance me Latest&#xA;&#xA;        -- Get half of balance&#xA;        let halfBalance = fromWei (myBalance / 2)&#xA;&#xA;        -- Use default account&#xA;        withAccount () $ do&#xA;            -- Get Ethereum address via ENS&#xA;            alice &amp;lt;- Ens.resolve &#34;alice.address.on.eth&#34;&#xA;            bob   &amp;lt;- Ens.resolve &#34;bob.address.on.eth&#34;&#xA;&#xA;            -- Send transaction with value&#xA;            withParam (value .~ halfBalance) $ do&#xA;&#xA;                -- Send transaction to alice account&#xA;                withParam (to .~ alice) $ send ()&#xA;&#xA;                -- Send transaction to bob account&#xA;                withParam (to .~ bob) $ send ()&#xA;&#xA;        -- Return sended value&#xA;        return halfBalance&#xA;&#xA;    -- Web3 error handling&#xA;    case ret of&#xA;        Left e  -&amp;gt; error $ show e&#xA;        Right v -&amp;gt; print (v :: Ether)  -- Print returned value in ethers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Read more in the &lt;a href=&#34;https://hs-web3.readthedocs.io&#34;&gt;documentation on ReadTheDocs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Network.Polkadot&lt;/code&gt; and &lt;code&gt;Codec.Scale&lt;/code&gt; is licensed under &lt;a href=&#34;https://github.com/airalab/hs-web3/raw/master/LICENSE-APACHE2&#34;&gt;Apache 2.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;All other source is licensed under &lt;a href=&#34;https://github.com/airalab/hs-web3/raw/master/LICENSE-BSD3&#34;&gt;BSD-3-Clause&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>