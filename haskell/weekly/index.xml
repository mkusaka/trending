<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-31T01:50:09Z</updated>
  <subtitle>Weekly Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>travitch/humidor</title>
    <updated>2024-12-31T01:50:09Z</updated>
    <id>tag:github.com,2024-12-31:/travitch/humidor</id>
    <link href="https://github.com/travitch/humidor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Qt binding generator for Haskell based on Smoke&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This project is a &lt;a href=&#34;http://qt-project.org/&#34;&gt;Qt&lt;/a&gt; binding generator for Haskell based on the &lt;a href=&#34;http://techbase.kde.org/Development/Languages/Smoke&#34;&gt;Smoke&lt;/a&gt; project from KDE. Smoke is a special Qt-oriented parser along with some extra metadata to provide some introspection information via some shared libraries accessible from C.&lt;/p&gt; &#xA;&lt;p&gt;Dynamic languages can use Smoke to generate bindings at run-time on-demand. More static languages can use tools like humidor to generate the bindings statically ahead of time. The Smoke library also provides a convenient mechanism to call any Qt method through a plain C calling convention, rather than relying on a C++ calling convention.&lt;/p&gt; &#xA;&lt;p&gt;The project isn&#39;t quite in a working state right now, but it generates a Haskell module for each Qt class, along with some typeclasses to establish the relevant subtyping relationships. The code to generate a typeclass for each method is nearly working. A few major TODO items:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Map Haskell types to C, especially Text and some container types&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Finish generating method dispatchers&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Permit subclassing (possibly via TH) from Haskell; this is critical. Lessons learned from hsqml could be useful here for registering subclasses with the Qt metaobject system. Smoke also seems to provide a little support in this area.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>