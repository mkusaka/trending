<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haskell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-18T01:45:04Z</updated>
  <subtitle>Weekly Trending of Haskell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kadena-io/chainweb-node</title>
    <updated>2022-12-18T01:45:04Z</updated>
    <id>tag:github.com,2022-12-18:/kadena-io/chainweb-node</id>
    <link href="https://github.com/kadena-io/chainweb-node" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chainweb: A Proof-of-Work Parallel-Chain Architecture for Massive Throughput&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://i.imgur.com/bAZFAGF.png&#34; width=&#34;450&#34; height=&#34;243&#34; alt=&#34;Kadena&#34; title=&#34;Kadena&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h1&gt;Kadena Public Blockchain&lt;/h1&gt; &#xA;&lt;p&gt;Kadena is a fast, secure, and scalable blockchain using the Chainweb consensus protocol. Chainweb is a braided, parallelized Proof Of Work consensus mechanism that improves throughput and scalability in executing transactions on the blockchain while maintaining the security and integrity found in Bitcoin.&lt;/p&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://www.kadena.io/whitepapers&#34;&gt;whitepapers&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://d31d887a-c1e0-47c2-aa51-c69f9f998b07.filesusr.com/ugd/86a16f_029c9991469e4565a7c334dd716345f4.pdf&#34;&gt;Chainweb: A Proof-of-Work Parallel-Chain Architecture for Massive Throughput&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://d31d887a-c1e0-47c2-aa51-c69f9f998b07.filesusr.com/ugd/86a16f_3b2d0c58179d4edd9df6df4d55d61dda.pdf&#34;&gt;Agent-based Simulations of Blockchain Protocols illustrated via Kadena&#39;s &lt;em&gt;Chainweb&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For additional information, press, and development inquires, please refer to the Kadena &lt;a href=&#34;https://kadena.io&#34;&gt;website&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-node/master/#docs&#34;&gt;Kadena Docs Site&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-node/master/#installing-chainweb&#34;&gt;Installing Chainweb&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-node/master/#bootstrap-nodes&#34;&gt;Bootstrap Nodes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-node/master/#configuring-running-and-monitoring-the-health-of-a-chainweb-node&#34;&gt;Configuring, running, and monitoring the health of a Chainweb Node&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-node/master/#mine-for-a-chainweb-network&#34;&gt;Mining for a Chainweb Network&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-node/master/#chainweb-design&#34;&gt;Chainweb Design&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-node/master/#component-structure&#34;&gt;Component Structure Details&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-node/master/#architecture-overview&#34;&gt;Architecture Overview&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Docs&lt;/h2&gt; &#xA;&lt;p&gt;The Kadena Docs site, which can be found &lt;a href=&#34;https://kadena-io.github.io/kadena-docs/&#34;&gt;here&lt;/a&gt; serves as a source of information about Kadena. You can find information about how to interact with the public chain, including how to get keys, view network activity, explore blocks, etc. &lt;a href=&#34;https://kadena-io.github.io/kadena-docs/Public-Chain-Docs&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have additions or comments, please submit a pull request or raise an issue - the GitHub project can be found &lt;a href=&#34;https://github.com/kadena-io/kadena-docs&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing Chainweb&lt;/h2&gt; &#xA;&lt;p&gt;Minimal recommended hardware requirements for nodes are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2 CPU cores&lt;/li&gt; &#xA; &lt;li&gt;4 GB of RAM&lt;/li&gt; &#xA; &lt;li&gt;250 GB SSD or fast HDD&lt;/li&gt; &#xA; &lt;li&gt;Public IP address&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the node is also used as API server for Pact or mining, rosetta, chainweb-data: 4 CPU cores and 8GB of RAM.&lt;/p&gt; &#xA;&lt;h3&gt;Docker (all batteries included)&lt;/h3&gt; &#xA;&lt;p&gt;A docker image is available from &lt;a href=&#34;https://hub.docker.com/r/kadena/chainweb-node&#34;&gt;here&lt;/a&gt; and can be used with the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Initialize the database (optional, but avoids several hours of initial db synchronization)&#xA;docker run -ti --rm -v chainweb-db:/root/.local/share/chainweb-node/mainnet01/0/ kadena/chainweb-node /chainweb/initialize-db.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Run a chainweb-node in Kadena&#39;s mainnet&#xA;docker run -d -p 443:443 -v chainweb-db:target=/root/.local/share/chainweb-node/mainnet01/0/ kadena/chainweb-node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Further details can be found in the &lt;a href=&#34;https://hub.docker.com/r/kadena/chainweb-node&#34;&gt;README of the docker repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Docker (bare metal)&lt;/h3&gt; &#xA;&lt;p&gt;A docker image with just a bare chainweb-node binary and its dependencies is available at &lt;code&gt;ghcr.io/kadena-io/chainweb-node/ubuntu:latest&lt;/code&gt;. It is up to the user to setup and manage the database and configure the node to their needs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -p 1789:1789 -p 80:80 --entrypoint=/chainweb/chainweb-node ghcr.io/kadena-io/chainweb-node/ubuntu:latest --help&#xA;docker run -p 1789:1789 -p 80:80 --entrypoint=/chainweb/chainweb-node ghcr.io/kadena-io/chainweb-node/ubuntu:latest --print-config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Examples for running docker compose setups for chainweb-node for different usage scenarios can be found in &lt;a href=&#34;https://github.com/kadena-io/docker-compose-chainweb-node&#34;&gt;this repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Ubuntu Linux&lt;/h3&gt; &#xA;&lt;p&gt;The following packages must be installed the on the host system:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;ubuntu-20.04:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt-get install ca-certificates libgmp10 libssl1.1 libsnappy1v5 libtbb2 zlib1g liblz4-1 libbz2-1.0 libgflags2.2 zstd&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ubuntu-22.04:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt-get install ca-certificates libgmp10 libssl1.1 libsnappy1v5 libtbb12 zlib1g liblz4-1 libbz2-1.0 libgflags2.2 zstd&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Chainweb-node binaries for ubuntu-20.04 and ubuntu-22.04 can be found &lt;a href=&#34;https://github.com/kadena-io/chainweb-node/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Download the archive for your system and extract the binaries and place them into a directory from where they can be executed.&lt;/p&gt; &#xA;&lt;p&gt;At this point, you are ready to &lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-node/master/#configuring-running-and-monitoring-the-health-of-a-chainweb-node&#34;&gt;run a Chainweb node&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building from Source&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;IMPORTANT NODE: We recommend the use of officially released chainweb-node binaries or docker images, which can be found in the &lt;a href=&#34;https://github.com/kadena-io/chainweb-node/releases&#34;&gt;release section of this repository&lt;/a&gt;. If you decide to build your own binaries, please make sure to only use officially released and tagged versions of the code. Those versions are extensively tested to ensure that they are compatible with all other nodes in the chainweb network. It is generally not safe to run arbitrary builds of the master branch in the Kadena mainnet.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Chainweb is a &lt;a href=&#34;https://www.haskell.org/&#34;&gt;Haskell&lt;/a&gt; project. After cloning the code with git from this GitHub repository the chainweb-node application can be built as follows.&lt;/p&gt; &#xA;&lt;h3&gt;Building with Cabal&lt;/h3&gt; &#xA;&lt;p&gt;In order to build with &lt;code&gt;cabal&lt;/code&gt; you have to install &lt;code&gt;ghc-8.10.7&lt;/code&gt; (Haskell compiler) and &lt;code&gt;cabal &amp;gt;= 3.0&lt;/code&gt; (Haskell build-tool)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.haskell.org/ghcup/&#34;&gt;Linux / Mac&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You need to install the development versions of the following libraries: &lt;code&gt;gflags&lt;/code&gt;, &lt;code&gt;snappy&lt;/code&gt;, &lt;code&gt;tbb&lt;/code&gt;, &lt;code&gt;zlib&lt;/code&gt;, &lt;code&gt;lz4&lt;/code&gt;, &lt;code&gt;bz2&lt;/code&gt;, &lt;code&gt;zstd&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On apt based distribution these can be installed as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt-get install ca-certificates libssl-dev libgmp-dev libsnappy-dev libtbb-dev zlib1g-dev liblz4-dev libbz2-dev libgflags-dev libzstd-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build a &lt;code&gt;chainweb-node&lt;/code&gt; binary:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Only necessary if you haven&#39;t done this recently.&#xA;cabal update&#xA;&#xA;# Build the project.&#xA;cabal build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install a runnable binary to &lt;code&gt;~/.cabal/bin/&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cabal install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building with Nix&lt;/h3&gt; &#xA;&lt;p&gt;Another way to build and run chainweb is to use the Nix package manager which has binary caching capabilities that allow you to download pre-built binaries for everything needed by Chainweb. For detailed instructions see &lt;a href=&#34;https://github.com/kadena-io/pact/wiki/Building-Kadena-Projects&#34;&gt;our wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When the build is finished, you can run chainweb with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./result/ghc/chainweb/bin/chainweb-node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Bootstrap Nodes&lt;/h2&gt; &#xA;&lt;p&gt;Bootstrap nodes are used by chainweb-nodes on startup in order to discover other nodes in the network. At least one of the bootstrap nodes must be trusted.&lt;/p&gt; &#xA;&lt;p&gt;Chainweb node operators can configure additional bootstrap nodes by using the &lt;code&gt;--known-peer-info&lt;/code&gt; command line option or in a configuration file. It is also possible to ignore the builtin bootstrap nodes by using the &lt;code&gt;--enable-ignore-bootstrap-nodes&lt;/code&gt; option or the respective configuration file setting.&lt;/p&gt; &#xA;&lt;p&gt;Bootstrap nodes must have public DNS names and a corresponding TLS certificate that is issued by a widely accepted CA (a minimum requirement is acceptance by the OpenSSL library).&lt;/p&gt; &#xA;&lt;p&gt;Operators of bootstrap nodes are expected to guarantee long-term availability of the nodes. The list of builtin bootstrap nodes should be kept up-to-date and concise for each chainweb-node release.&lt;/p&gt; &#xA;&lt;p&gt;If you like to have your node included as a bootstrap node please make a pull request that adds your node to &lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-node/master/src/P2P/BootstrapNodes.hs&#34;&gt;P2P.BootstrapNodes module&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Current Testnet Bootstrap Nodes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;us1.testnet.chainweb.com&lt;/li&gt; &#xA; &lt;li&gt;us2.testnet.chainweb.com&lt;/li&gt; &#xA; &lt;li&gt;eu1.testnet.chainweb.com&lt;/li&gt; &#xA; &lt;li&gt;eu2.testnet.chainweb.com&lt;/li&gt; &#xA; &lt;li&gt;ap1.testnet.chainweb.com&lt;/li&gt; &#xA; &lt;li&gt;ap2.testnet.chainweb.com&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Current Mainnet Bootstrap Nodes&lt;/h3&gt; &#xA;&lt;p&gt;All bootstrap nodes are running on port 443.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;us-e1.chainweb.com&lt;/li&gt; &#xA; &lt;li&gt;us-e2.chainweb.com&lt;/li&gt; &#xA; &lt;li&gt;us-e3.chainweb.com&lt;/li&gt; &#xA; &lt;li&gt;us-w1.chainweb.com&lt;/li&gt; &#xA; &lt;li&gt;us-w2.chainweb.com&lt;/li&gt; &#xA; &lt;li&gt;us-w3.chainweb.com&lt;/li&gt; &#xA; &lt;li&gt;jp1.chainweb.com&lt;/li&gt; &#xA; &lt;li&gt;jp2.chainweb.com&lt;/li&gt; &#xA; &lt;li&gt;jp3.chainweb.com&lt;/li&gt; &#xA; &lt;li&gt;fr1.chainweb.com&lt;/li&gt; &#xA; &lt;li&gt;fr2.chainweb.com&lt;/li&gt; &#xA; &lt;li&gt;fr3.chainweb.com&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuring, running, and monitoring the health of a Chainweb Node&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;This section assumes you&#39;ve installed the &lt;code&gt;chainweb-node&lt;/code&gt; binary&lt;/strong&gt; somewhere sensible, or otherwise have a simple way to refer to it. For running &lt;code&gt;chainweb-node&lt;/code&gt; via docker, please see the instruction above in this document or visit our &lt;a href=&#34;https://hub.docker.com/r/kadena/chainweb-node&#34;&gt;docker repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Your node needs to be reachable from the public internet. You will have to perform Port Forwarding if your machine is behind a router (by default port 1789 is used by the node).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: When you start chainweb-node for the first time it creates a new empty database and start to synchronize and catch up with other nodes in the Kadena network. This process takes a long time -- several days. It is much faster (depending on hardware one to a few hours) to just synchronize the chain database or get a snapshot of it and only rebuild the pact databases from the chain-database. Please, consult the documentation of the docker images for chainweb-node about details how to obtain an initial chain database.&lt;/p&gt; &#xA;&lt;p&gt;Run your node:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chainweb-node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The node will communicate with other nodes in a P2P network. By default it uses port 1789 for the P2P communication.&lt;/p&gt; &#xA;&lt;p&gt;Node services are exposed via the service API, by default on port 1848. The service API includes &lt;code&gt;/info&lt;/code&gt;, &lt;code&gt;/health-check&lt;/code&gt;, Pact endpoints, Rosetta endpoints, the mining API endpoints, GET endpoints for on-chain data (headers, payloads, cuts), and an HTTP event stream of block header updates. Some of these are disabled by default (e.g. mining API, Rosetta, and header updates).&lt;/p&gt; &#xA;&lt;p&gt;While the P2P endpoint must be directly available from the public internet, it is highly recommended to expose the service API only on a private network. When service API endpoints are made available publicly it is recommended to use a reverse proxy setup things like rate limiting, authentication, and CORS.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;No particular configuration is needed for running Chainweb node on the Kadena mainnet.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;chainweb-node --help&lt;/code&gt; to show a help message that includes a brief description of all available command line options.&lt;/p&gt; &#xA;&lt;p&gt;A complete configuration file with the default settings can be created with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;chainweb-node --print-config &amp;gt; config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This file can then be edited in order to change configuration values.&lt;/p&gt; &#xA;&lt;p&gt;The command &lt;code&gt;chainweb-node --help&lt;/code&gt; also provides descriptions of these configuration values.&lt;/p&gt; &#xA;&lt;p&gt;Given a configuration file or a set of command line options it is possible to print out only those configuration values that are different from their respective default:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;chainweb-node --config-file=config.yaml --some-command-line-options --print-config-as=minimal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Monitoring the health of a Chainweb Node&lt;/h3&gt; &#xA;&lt;p&gt;The following outlines how you can check that your &lt;code&gt;chainweb-node&lt;/code&gt; is healthy&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;chainweb-node&lt;/code&gt; should be running from the public IP address and a port that is open to the other Chainweb nodes.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re behind a NAT, it is &lt;strong&gt;VERY IMPORTANT&lt;/strong&gt; that your network allows external nodes to connect to the node you are running.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ chainweb-node --log-level &amp;lt;desired-log-level&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For production scenarios we recommend that you use log-level &lt;code&gt;warn&lt;/code&gt; or &lt;code&gt;error&lt;/code&gt;. For trouble shooting or improved monitoring you can also use &lt;code&gt;info&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once your node is running, go through the following checks to verify that you have a healthy node:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;run the command in your terminal: &lt;pre&gt;&lt;code&gt;$ curl -sk &#34;https://&amp;lt;public-ip&amp;gt;:&amp;lt;port&amp;gt;/chainweb/0.0/mainnet01/cut&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;navigate to this website on your browser: &lt;a href=&#34;https://yourPublicIp:port/chainweb/0.0/mainnet01/cut&#34;&gt;https://yourPublicIp:port/chainweb/0.0/mainnet01/cut&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;check logs for whether services are started&lt;/li&gt; &#xA; &lt;li&gt;check if the node is receiving cuts&lt;/li&gt; &#xA; &lt;li&gt;look for errors in the logs&lt;/li&gt; &#xA; &lt;li&gt;look for warnings in the logs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Usually, when a node is receiving and publishing cuts (i.e. block heights at every chain), it&#39;s working correctly.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;/cut&lt;/code&gt; endpoint will return the latest cut that your node has. It&#39;s possible that your node is falling behind, so make sure to compare its cut height with the cut heights of the bootstrap nodes. It&#39;s also possible that you are mining to a node that is catching up to the rest of the network. Before you start mining to a node, you SHOULD verify that this node has the most up-to-date cut.&lt;/p&gt; &#xA;&lt;p&gt;You can get the cut height of any node by running the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ curl -sk https://&amp;lt;bootstrap-node-url&amp;gt;/chainweb/0.0/mainnet01/cut | jq &#39;.height&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Mine for a Chainweb Network&lt;/h2&gt; &#xA;&lt;p&gt;Successful mining on mainnet requires specialized hardware (ASIC). The setup for solo mining involves running a chainweb-node with a configuration that enables mining and a &lt;a href=&#34;https://github.com/kadena-io/chainweb-mining-client/&#34;&gt;chainweb-mining-client&lt;/a&gt; that connects to the mining API of a chainweb-node and provides a Stratum API for the mining hardware (ASIC).&lt;/p&gt; &#xA;&lt;p&gt;Detailed instructions for setting up all the infrastructure needed to start mining using &lt;code&gt;docker compose&lt;/code&gt; can be found in the documentation of &lt;a href=&#34;https://github.com/kadena-io/docker-compose-chainweb-node/tree/main/mining-node&#34;&gt;docker-compose-chainweb-node/mining-node&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example, to set up a chainweb node for mining, see &lt;a href=&#34;https://github.com/kadena-io/docker-compose-chainweb-node/raw/main/mining-node/docker-compose.yaml#L126&#34;&gt;this&lt;/a&gt; section of the docker-compose file.&lt;/p&gt; &#xA;&lt;p&gt;Detailed mining client instructions can be found in the documentation of &lt;a href=&#34;https://github.com/kadena-io/chainweb-mining-client/&#34;&gt;chainweb-mining-client&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Chainweb Design&lt;/h2&gt; &#xA;&lt;h3&gt;Component Structure&lt;/h3&gt; &#xA;&lt;p&gt;The Chainweb package contains the following buildable components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;chainweb&lt;/code&gt; library: It provides the implementation for the different components of a chainweb-node.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;chainweb-node&lt;/code&gt;: An application that runs a Chainweb node. It maintains copies of a number of chains from a given Chainweb instance. It provides interfaces (command-line and RPC) for directly interacting with the Chainweb or for implementing applications such as miners and transaction management tools.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;chainweb-tests&lt;/code&gt;: A test suite for the Chainweb library and chainweb-node.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;cwtool&lt;/code&gt;: A collection of tools that are helpful for maintaining, testing, and debugging Chainweb.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;bench&lt;/code&gt;: a collection of benchmarks&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Architecture Overview&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kadena-io/chainweb-node/master/docs/Overview.png&#34; alt=&#34;Architecture Overview&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kadena-io/signing-api</title>
    <updated>2022-12-18T01:45:04Z</updated>
    <id>tag:github.com,2022-12-18:/kadena-io/signing-api</id>
    <link href="https://github.com/kadena-io/signing-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kadena wallet signing API definition and reference docs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kadena Wallet Signing API&lt;/h1&gt; &#xA;&lt;p&gt;This package contains the specification of the Kadena Wallet Signing API. This API facilitates communication between dapps and wallets. This frees dapp developers from the complexity of managing private keys, allowing them to focus on the functionality and business logic of the application.`&lt;/p&gt; &#xA;&lt;p&gt;Whenever the dapp needs to send a signed transaction, all you have to do is make an AJAX request to this API on localhost port 9467 and the user&#39;s wallet app will handle all the details of transaction signing for you.&lt;/p&gt; &#xA;&lt;h2&gt;Who should use this API?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Dapp authors - Anyone writing dapps on the Kadena blockchain will want to use this API to make sure their Dapp works with &lt;a href=&#34;https://github.com/kadena-io/chainweaver&#34;&gt;Chainweaver&lt;/a&gt;, the Kadena desktop wallet. The easiest way to do that is to use &lt;a href=&#34;https://github.com/kadena-io/pact-lang-api&#34;&gt;pact-lang-api&lt;/a&gt;, a JavaScript library that handles all the details of the signing API for you.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Wallet authors - Anyone writing a wallet for the Kadena blockchain will want to make their wallet expose this API so they can work seamlessly with the Kadena dapp ecosystem.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/kadena-io/signing-api/master/swagger.json&#34;&gt;swagger.json&lt;/a&gt; file contains the generated swagger representation of the API. You can use tools like &lt;a href=&#34;https://github.com/swagger-api/swagger-codegen&#34;&gt;swagger-codegen&lt;/a&gt; to generate client or server code in a large number of different languages.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to get familiar with the API, you can browse the online docs here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kadena-io.github.io/signing-api/&#34;&gt;https://kadena-io.github.io/signing-api/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>