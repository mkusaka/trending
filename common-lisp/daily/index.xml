<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Common Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-30T01:32:15Z</updated>
  <subtitle>Daily Trending of Common Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Aadv1k/beaver</title>
    <updated>2023-05-30T01:32:15Z</updated>
    <id>tag:github.com,2023-05-30:/Aadv1k/beaver</id>
    <link href="https://github.com/Aadv1k/beaver" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a common lisp library for data analysis and manipulation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;beaver ðŸ¦«&lt;/h1&gt; &#xA;&lt;p&gt;A common lisp library for data analysis and manipulation. Modelled after the &lt;a href=&#34;https://pandas.pydata.org/&#34;&gt;pandas&lt;/a&gt; library&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aadv1k/beaver/main/#walkthrough&#34;&gt;Walkthrough&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aadv1k/beaver/main/#reference&#34;&gt;Reference&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aadv1k/beaver/main/#io&#34;&gt;IO&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aadv1k/beaver/main/#transformations&#34;&gt;Transformations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aadv1k/beaver/main/#columns&#34;&gt;Columns&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aadv1k/beaver/main/#sorting&#34;&gt;Sorting&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Walkthrough&lt;/h2&gt; &#xA;&lt;p&gt;Let&#39;s analyze some &lt;a href=&#34;https://raw.githubusercontent.com/Aadv1k/beaver/main/data/btc.csv&#34;&gt;bitcoin data&lt;/a&gt;, start by modifying &lt;code&gt;main.lisp&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(load &#34;./src/beaver.lisp&#34;)&#xA;&#xA;(defvar data (beaver:read-csv &#34;./data/btc.csv&#34;))&#xA;&#xA;(print data) ;; Let&#39;s go!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Well, let&#39;s first remove some columns to simplify our data&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;&#xA;(load &#34;./src/beaver.lisp&#34;)&#xA;&#xA;(defvar data (beaver:read-csv &#34;./data/btc.csv&#34;))&#xA;&#xA;(print (beaver:drop-column data &#39;(&#34;Symbol&#34; &#34;Data&#34; &#34;Open&#34; &#34;Close&#34; &#34;Volume&#34; &#34;Name&#34; &#34;SNo&#34;)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;((&#34;Date&#34; &#34;High&#34; &#34;Low&#34; &#34;Marketcap&#34;)&#xA; (&#34;2013-04-29 23:59:59&#34; &#34;147.48800659179688&#34; &#34;134.0&#34; &#34;1603768864.5&#34;)&#xA; (&#34;2013-04-30 23:59:59&#34; &#34;146.92999267578125&#34; &#34;134.0500030517578&#34;&#xA;  &#34;1542813125.0&#34;)...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, let&#39;s sort the data by the maximum marketcap&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(load &#34;./src/beaver.lisp&#34;)&#xA;&#xA;(defvar data (beaver:read-csv &#34;./data/btc.csv&#34;))&#xA;&#xA;(print (beaver:sort-by data &#34;Marketcap&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;((&#34;SNo&#34; &#34;Name&#34; &#34;Symbol&#34; &#34;Date&#34; &#34;High&#34; &#34;Low&#34; &#34;Open&#34; &#34;Close&#34; &#34;Volume&#34;&#xA;  &#34;Marketcap&#34;)&#xA; (&#34;68&#34; &#34;Bitcoin&#34; &#34;BTC&#34; &#34;2013-07-05 23:59:59&#34; &#34;80.0&#34; &#34;65.5260009765625&#34;&#xA;  &#34;79.98999786376953&#34; &#34;68.43099975585938&#34; &#34;0.0&#34; &#34;778411178.875&#34;)&#xA; (&#34;69&#34; &#34;Bitcoin&#34; &#34;BTC&#34; &#34;2013-07-06 23:59:59&#34; &#34;75.0&#34; &#34;66.81999969482422&#34;&#xA;  &#34;68.50499725341797&#34; &#34;70.27729797363281&#34; &#34;0.0&#34; &#34;799741618.54&#34;)...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next let&#39;s check the mean of the &lt;code&gt;High&lt;/code&gt; cap&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(load &#34;./src/beaver.lisp&#34;)&#xA;&#xA;(defvar data (beaver:read-csv &#34;./data/btc.csv&#34;))&#xA;&#xA;(print (float&#xA;        (beaver:get-mean&#xA;         (beaver:get-column data &#34;High&#34;))&#xA;        ))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;6893.326 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;h3&gt;IO&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(read-csv &#34;./data/btc.csv&#34; &#34;,&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read a CSV into a 2d matrix, accepts an optional delimiter&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(write-csv matrix &#34;./output.csv&#34; &#34;,&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Write a 2d matrix into a CSV accepts an optional delimiter&lt;/p&gt; &#xA;&lt;h3&gt;Transformations&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(beaver:transpose matrix)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Transforms the top most row into a column&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(beaver:melt matrix &#39;(&#34;Col1&#34; &#34;Col2&#34; &#34;Col3&#34;) &#39;(&#34;Cols&#34; &#34;Types&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&#34;Melts&#34; or reduce N amount of columns into two columns&lt;/p&gt; &#xA;&lt;h3&gt;Columns&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(beaver:get-column matrix &#34;Col1&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Returns the specified columns, if &lt;code&gt;Col1&lt;/code&gt; is not provided it will the top-most row&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(beaver:drop-column &#39;(&#34;Col1&#34; &#34;Col2&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Returns a new matrix with the removed columns&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(beaver:set-column matrix &#34;Col1&#34; &#39;(&#34;Foo&#34; &#34;Bar&#34; &#34;Baz&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Returns the updated matrix with &lt;code&gt;Col1&lt;/code&gt; replaced with &lt;code&gt;Col2&lt;/code&gt; and it&#39;s data&lt;/p&gt; &#xA;&lt;h3&gt;Sorting&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;(beaver:sort-by matrix &#34;Col1&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Performs a simple numerical sorts and returns the a new, updated matrix&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/datasets/sudalairajkumar/cryptocurrencypricehistory&#34;&gt;BTC pricing data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kshashank03/Survey-Monkey-Tutorial&#34;&gt;Surveymonkey data&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>helmutkian/hkr-utils</title>
    <updated>2023-05-30T01:32:15Z</updated>
    <id>tag:github.com,2023-05-30:/helmutkian/hkr-utils</id>
    <link href="https://github.com/helmutkian/hkr-utils" rel="alternate"></link>
    <summary type="html">&lt;p&gt;My personal Common Lisp utilities and extensions&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>