<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Common Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-11T01:26:17Z</updated>
  <subtitle>Daily Trending of Common Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>phithon/dotfiles</title>
    <updated>2024-04-11T01:26:17Z</updated>
    <id>tag:github.com,2024-04-11:/phithon/dotfiles</id>
    <link href="https://github.com/phithon/dotfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;my setting files&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dotfiles&lt;/h1&gt; &#xA;&lt;p&gt;my setting files&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mcna/cl-fad</title>
    <updated>2024-04-11T01:26:17Z</updated>
    <id>tag:github.com,2024-04-11:/mcna/cl-fad</id>
    <link href="https://github.com/mcna/cl-fad" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Complete documentation for CL-FAD can be found in the &#39;doc&#39; directory.&lt;/p&gt; &#xA;&lt;p&gt;CL-FAD also supports Nikodemus Siivola&#39;s HYPERDOC, see &lt;a href=&#34;http://common-lisp.net/project/hyperdoc/&#34;&gt;http://common-lisp.net/project/hyperdoc/&lt;/a&gt; and &lt;a href=&#34;http://www.cliki.net/hyperdoc&#34;&gt;http://www.cliki.net/hyperdoc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Installation&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;1.1. Probably the easiest way is&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;   (load &#34;/path/to/cl-fad/load.lisp&#34;)&#xA;&#xA; This should compile and load CL-FAD on most Common Lisp&#xA; implementations.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;1.2. With MK:DEFSYSTEM you can make a symbolic link from &#39;cl-fad.system&#39; and &#39;cl-fad-test.system&#39; to your central registry (which by default is in &#39;/usr/local/lisp/Registry/&#39;) and then issue the command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;   (mk:compile-system &#34;cl-fad&#34;)&#xA;&#xA; Note that this relies on TRUENAME returning the original file a&#xA; symbolic link is pointing to. This will only work with AllegroCL&#xA; 6.2 if you&#39;ve applied all patches with (SYS:UPDATE-ALLEGRO).&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;1.3. You can also use ASDF instead of MK:DEFSYSTEM in a similar way (use the .asd files instead of the .system files).&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Test&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;CL-FAD comes with a small test suite. To start it just load the file &#34;test.lisp&#34; and evaluate (CL-FAD-TEST:TEST).&lt;/p&gt;</summary>
  </entry>
</feed>