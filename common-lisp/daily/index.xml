<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Common Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-06T01:41:08Z</updated>
  <subtitle>Daily Trending of Common Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>stumpwm/stumpwm</title>
    <updated>2022-06-06T01:41:08Z</updated>
    <id>tag:github.com,2022-06-06:/stumpwm/stumpwm</id>
    <link href="https://github.com/stumpwm/stumpwm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Stump Window Manager&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://stumpwm.github.io/images/stumpwm-logo-stripe.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;The Stump Window Manager&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://travis-ci.org/stumpwm/stumpwm.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://gitter.im/stumpwm/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/stumpwm/community.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;StumpWM is a window manager written entirely in Common Lisp. It attempts to be highly customizable while relying entirely on the keyboard for input. You will not find buttons, icons, title bars, tool bars, or any of the other conventional GUI widgets.&lt;/p&gt; &#xA;&lt;p&gt;These design decisions reflect the growing popularity of productive, customizable lisp based systems.&lt;/p&gt; &#xA;&lt;h2&gt;Philosophy&lt;/h2&gt; &#xA;&lt;p&gt;StumpWM is a &#34;everything-and-the-kitchen-sink WM&#34; or &#34;the Emacs of WMs.&#34;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;StumpWM:Windows::Emacs:Text&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;StumpWM is &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Hackable&lt;/li&gt; &#xA;   &lt;li&gt;Written in Common Lisp&lt;/li&gt; &#xA;   &lt;li&gt;A multi paradigm window manager&lt;/li&gt; &#xA;   &lt;li&gt;A Superior window managing experience&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;StumpWM is &lt;em&gt;not&lt;/em&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Minimalist&lt;/li&gt; &#xA;   &lt;li&gt;Narrow scope&lt;/li&gt; &#xA;   &lt;li&gt;Configured by editing the source directly&lt;/li&gt; &#xA;   &lt;li&gt;A full blown desktop environment&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want a minimalist tiling window manager, then StumpWM is &lt;em&gt;not&lt;/em&gt; what you&#39;re looking for. The code base is ~15k lines, the binaries produced are ~60mb.&lt;/p&gt; &#xA;&lt;p&gt;StumpWM manages windows the way emacs manages buffers, or the way screen manages terminals. If you want a flexible, customizable, hackable desktop experience, look no further.&lt;/p&gt; &#xA;&lt;h1&gt;Build &amp;amp; Start Stumpwm&lt;/h1&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://sbcl.org&#34;&gt;SBCL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;quicklisp (for obtaining the following dependencies; not needed if you use your distribution&#39;s package manager.)&lt;/li&gt; &#xA; &lt;li&gt;clx&lt;/li&gt; &#xA; &lt;li&gt;cl-ppcre&lt;/li&gt; &#xA; &lt;li&gt;alexandria&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The recommended way to install the dependencies is using Quicklisp. Follow the instructions at &lt;a href=&#34;http://www.quicklisp.org/&#34;&gt;http://www.quicklisp.org/&lt;/a&gt; to install it. In short:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ curl -O https://beta.quicklisp.org/quicklisp.lisp&#xA;$ sbcl --load quicklisp.lisp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then at the REPL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(quicklisp-quickstart:install)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure you have added it to your lisp init file using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt; (ql:add-to-init-file)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, in a repl:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt; (ql:quickload &#34;clx&#34;)&#xA; (ql:quickload &#34;cl-ppcre&#34;)&#xA; (ql:quickload &#34;alexandria&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: The recommended way to install SBCL is by downloading one of their pre-built binaries available in their &lt;a href=&#34;http://sbcl.org/platform-table.html&#34;&gt;web page&lt;/a&gt; or build it from source. Please do &lt;em&gt;not&lt;/em&gt; install SBCL using your distributions package manager, especially Ubuntu. If you do so it is likely that you&#39;ll run into problems when building StumpWM due to using obsolete versions of the dependencies.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Building stumpwm from git requires that you build the configure script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; ./autogen.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; ./configure&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now build it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If all goes well, you should have a stumpwm binary now. You can run the binary from where it is (starting it with X) or install it, along with the .info documentation, with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now that you have a binary, call it from your ~/.xinitrc file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; # The default path is /usr/local/bin/stumpwm&#xA; echo /path/to/stumpwm &amp;gt;&amp;gt; ~/.xinitrc&#xA; startx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Hopefully that will put you in X running stumpwm! See &lt;a href=&#34;https://github.com/sabetts/stumpwm/wiki/StartUp&#34;&gt;StartUp on the wiki&lt;/a&gt; for more examples.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Pull requests are always welcome! Here are some guidelines to ensure that your contribution gets merged in a timely manner:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Do&#39;s &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add your name to the list of AUTHORS with your pull request.&lt;/li&gt; &#xA;   &lt;li&gt;Preserve comments or docstrings explaining what code does, and update them if your patch changes them in a significant way&lt;/li&gt; &#xA;   &lt;li&gt;Try to follow an &#34;80 column rule.&#34; The current code base does not follow this all the time, so don&#39;t use it as an example&lt;/li&gt; &#xA;   &lt;li&gt;If you export a symbol, you &lt;em&gt;must&lt;/em&gt; add it to the manual.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stumpwm/stumpwm/master/(http://web.archive.org/web/20160101153032/http://people.ace.ed.ac.uk/staff/medward2/class/moz/cm/doc/contrib/lispstyle.html)&#34;&gt;Use lisp idioms&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;If you are working on a major change to the internals, keep us informed on stumpwm-devel! Also, it will probably help if the changes are made and then incrementally applied to the codebase in order to avoid introducing show-stopping bugs.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Do not&#39;s &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Include Emacs local variables&lt;/li&gt; &#xA;   &lt;li&gt;Change whitespace&lt;/li&gt; &#xA;   &lt;li&gt;Write lots of code without supporting comments/documentation&lt;/li&gt; &#xA;   &lt;li&gt;Delete comments or docstrings (yes this is a duplicate of above!)&lt;/li&gt; &#xA;   &lt;li&gt;Export symbols from packages that aren&#39;t widely useful (many times a little more thought will reveal how to implement your internal change without having to export/break encapsulation)&lt;/li&gt; &#xA;   &lt;li&gt;Make stylistic changes that suit your coding style/way of thinking&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you aren&#39;t a lisp hacker, you can contribute in the form of documenting and organizing the wiki. There&#39;s a lot of information floating around; if you find it where you didn&#39;t expect it, move or link to it in a more logical place.&lt;/p&gt; &#xA;&lt;h1&gt;Wishlist&lt;/h1&gt; &#xA;&lt;p&gt;Fancy yourself a lisp hacker? Here&#39;s a wishlist of features for the StumpWM universe (in no particular order):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;float-splits (ie allow floating windows over tiled ones)&lt;/li&gt; &#xA; &lt;li&gt;Float windows within parent applications (specifically dialogs in gimp or firefox).&lt;/li&gt; &#xA; &lt;li&gt;tab-list showing the contents of the current frame at the side, top, or bottom of the frame&lt;/li&gt; &#xA; &lt;li&gt;Emacs&#39; iswitchb function implemented in emacs &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Re-arranging windows between groups&lt;/li&gt; &#xA;   &lt;li&gt;Killing windows&lt;/li&gt; &#xA;   &lt;li&gt;Marking windows for batch operations&lt;/li&gt; &#xA;   &lt;li&gt;Deleting/adding groups&lt;/li&gt; &#xA;   &lt;li&gt;Import data from stumpwm to emacs, use an emacs minor mode to implement the above features, then export the data back to stumpwm and let stumpwm perform the appropriate actions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Emacs&#39; completing-read-multiple function&lt;/li&gt; &#xA; &lt;li&gt;Dynamic tiling&lt;/li&gt; &#xA; &lt;li&gt;Lock Screen (with support for leaving notes, bonus points if emacs is involved)&lt;/li&gt; &#xA; &lt;li&gt;Wallpapers! (support pulling from remote sources, changing based on timers, and other hacky features)&lt;/li&gt; &#xA; &lt;li&gt;Shutdown, restart, suspend, and hibernate functions that don&#39;t require root access&lt;/li&gt; &#xA; &lt;li&gt;Revamped, mouse-friendly mode-line. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Support fixed number of chars for window titles&lt;/li&gt; &#xA;   &lt;li&gt;Dynamically trim window titles to fit them all on the mode-line&lt;/li&gt; &#xA;   &lt;li&gt;Split the mode-line into multiple cells for containing different information&lt;/li&gt; &#xA;   &lt;li&gt;Implement widget icons to indicate system status (new mail, low battery, network etc)&lt;/li&gt; &#xA;   &lt;li&gt;Support raising windows when left-clicked, closing/killing when right-clicked&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Help&lt;/h1&gt; &#xA;&lt;p&gt;There&#39;s a texinfo manual, stumpwm.texi. The build scripts generate an info file you can read in emacs or with the `info&#39; program. The manual for the latest git version (may be slightly out of date) is available to read online at: &lt;a href=&#34;https://stumpwm.github.io/&#34;&gt;The Manual&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;And, as in Emacs, you can always get documentation with:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Key&lt;/th&gt; &#xA;   &lt;th&gt;Help&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-t h v&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Variables&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-t h f&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-t h k&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Key sequences&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-t h c&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Commands&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C-t h w&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Find key sequences for a command&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For other stuff (tips tricks and examples) visit the &lt;a href=&#34;https://github.com/stumpwm/stumpwm/wiki&#34;&gt;stumpwm wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s a &lt;strong&gt;#stumpwm&lt;/strong&gt; channel on &lt;a href=&#34;https://libera.chat&#34;&gt;irc.libera.chat&lt;/a&gt;, too.&lt;/p&gt; &#xA;&lt;p&gt;Finally, there&#39;s our mailing list (click to sign up) &lt;a href=&#34;https://lists.nongnu.org/mailman/listinfo/stumpwm-devel&#34;&gt;stumpwm-devel@nongnu.org&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>clasp-developers/clasp</title>
    <updated>2022-06-06T01:41:08Z</updated>
    <id>tag:github.com,2022-06-06:/clasp-developers/clasp</id>
    <link href="https://github.com/clasp-developers/clasp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;clasp Common Lisp environment&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Clasp — Bringing Common Lisp and C++ Together&lt;/h1&gt; &#xA;&lt;p&gt;Clasp is a new &lt;a href=&#34;https://common-lisp.net/&#34;&gt;Common Lisp&lt;/a&gt; implementation that seamlessly interoperates with C++ libraries and programs using &lt;a href=&#34;http://llvm.org/&#34;&gt;LLVM&lt;/a&gt; for compilation to native code. This allows Clasp to take advantage of a vast array of preexisting libraries and programs, such as out of the scientific computing ecosystem. Embedding them in a Common Lisp environment allows you to make use of rapid prototyping, incremental development, and other capabilities that make it a powerful language.&lt;/p&gt; &#xA;&lt;p&gt;For more information on using Clasp, see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/clasp-developers/clasp/wiki/Manual&#34;&gt;Clasp Manual&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://clasp-developers.github.io/clbind-doc.html&#34;&gt;clbind Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/clasp-developers/clasp/releases&#34;&gt;Releases&lt;/a&gt; for current releases of Clasp. For more information please see the &lt;a href=&#34;https://github.com/clasp-developers/clasp/raw/main/RELEASE_NOTES.md&#34;&gt;Release Notes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Building Clasp&lt;/h3&gt; &#xA;&lt;p&gt;At the moment, Clasp is supported on Linux, Mac OS X and FreeBSD. On these systems, you should be able to build it from source and you may be able to install using a package manager. See the &lt;a href=&#34;https://github.com/clasp-developers/clasp/wiki/&#34;&gt;Wiki&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;In case things go wrong, the quickest way to get help is to either &lt;a href=&#34;https://raw.githubusercontent.com/clasp-developers/clasp/main/#reporting-problems&#34;&gt;file an issue&lt;/a&gt;, or to &lt;a href=&#34;https://raw.githubusercontent.com/clasp-developers/clasp/main/#irc&#34;&gt;chat with us directly&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Building takes a lot of resources. In parallel mode (&lt;code&gt;:parallel-build t&lt;/code&gt; in config.sexp) you need more than 8 GB of RAM and it will be 1-2 hours build time. If you have 8 GB of RAM you can turn off the parallel build which will then run for a day or so. Make sure to have some paging space (&#34;swapfile&#34;) configured.&lt;/p&gt; &#xA;&lt;p&gt;There is a docker image for a superset of Clasp called Cando at &lt;a href=&#34;https://hub.docker.com/r/thirdlaw/cando&#34;&gt;Cando Docker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Currently there are no binary releases available, however you can extract a working /opt/clasp tree for Debian 10 out of the docker image.&lt;/p&gt; &#xA;&lt;h3&gt;Common Lisp Ecosystem Support&lt;/h3&gt; &#xA;&lt;p&gt;Clasp supports the following major components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://common-lisp.net/project/slime/&#34;&gt;SLIME&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://common-lisp.net/project/asdf/&#34;&gt;ASDF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.quicklisp.org/beta/&#34;&gt;Quicklisp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://common-lisp.net/project/cffi/&#34;&gt;CFFI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/clasp-developers/clasp/issues/163&#34;&gt;Bordeaux-Threads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/clasp-developers/clasp/issues/164&#34;&gt;Unicode&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Post on the issues or &lt;a href=&#34;https://raw.githubusercontent.com/clasp-developers/clasp/main/#irc&#34;&gt;contact us&lt;/a&gt; if you&#39;re interested in changing that.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to Clasp&lt;/h2&gt; &#xA;&lt;p&gt;We very much welcome any kind of contribution to Clasp, even if it is just bug finding and testing. A lot can be done all around the project, if you want to dive into something large. See the &lt;a href=&#34;https://github.com/clasp-developers/clasp/raw/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; file for the few guidelines we&#39;ve set up around contributions.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting Problems&lt;/h2&gt; &#xA;&lt;p&gt;Generally you can report problems in two fashions, either by opening a &lt;a href=&#34;https://github.com/clasp-developers/clasp/issues/new&#34;&gt;New Issue&lt;/a&gt; or by &lt;a href=&#34;https://raw.githubusercontent.com/clasp-developers/clasp/main/#irc&#34;&gt;chatting with us directly&lt;/a&gt;. In both cases, though, you should have the following pieces handy in order for us to be able to help you out as quickly and painlessly as possible:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Your operating system name and version.&lt;/li&gt; &#xA; &lt;li&gt;The branch that you&#39;re using of Clasp.&lt;/li&gt; &#xA; &lt;li&gt;A paste of the build log or failure point that you reached.&lt;/li&gt; &#xA; &lt;li&gt;Patience.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;IRC&lt;/h2&gt; &#xA;&lt;p&gt;Clasp has an IRC channel on &lt;a href=&#34;https://libera.chat&#34;&gt;Libera&lt;/a&gt; called &lt;a href=&#34;irc://irc.libera.chat/#clasp&#34;&gt;#clasp&lt;/a&gt;. If you have questions, problems, suggestions, or generally would like to just hang out with us devs, come and stop by!&lt;/p&gt; &#xA;&lt;h2&gt;More on Clasp&lt;/h2&gt; &#xA;&lt;p&gt;For more information on Clasp and the discussion around it, see the following sites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://drmeister.wordpress.com&#34;&gt;Christian Schafmeister&#39;s blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hn.algolia.com/?query=clasp&amp;amp;sort=byPopularity&amp;amp;prefix&amp;amp;page=0&amp;amp;dateRange=all&amp;amp;type=story&#34;&gt;Hackernews&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/lisp/search?q=clasp&amp;amp;restrict_sr=on&#34;&gt;Reddit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=8X69_42Mj-g&#34;&gt;Google Tech Talks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5bQhGS8V6dQ&#34;&gt;ELS2016&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=mbdXeRBbgDM&#34;&gt;Lessons Learned Implementing Common Lisp with LLVM&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;Clasp was supported by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Defense Threat Reduction Agency (DOD-DTRA) (HDTRA1-09-1-0009)&lt;/li&gt; &#xA; &lt;li&gt;The National Institutes of Health (NIH/NIGMS Grant number: 2R01GM067866-07A2)&lt;/li&gt; &#xA; &lt;li&gt;The National Science Foundation (Grant number: 1300231)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>nobody-famous/alive-lsp</title>
    <updated>2022-06-06T01:41:08Z</updated>
    <id>tag:github.com,2022-06-06:/nobody-famous/alive-lsp</id>
    <link href="https://github.com/nobody-famous/alive-lsp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Language Server Protocol implementation for use with the Alive extension&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>