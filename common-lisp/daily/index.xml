<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Common Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-08T01:32:43Z</updated>
  <subtitle>Daily Trending of Common Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Ferada/cl-tex</title>
    <updated>2023-02-08T01:32:43Z</updated>
    <id>tag:github.com,2023-02-08:/Ferada/cl-tex</id>
    <link href="https://github.com/Ferada/cl-tex" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A package to run TeX and its derivatives&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This is a package to run TeX and its derivatives while also collecting additional information about the generated files and so forth.&lt;/p&gt; &#xA;&lt;p&gt;While we provide manual methods by which the renderer can be run, it is far more worthwile to use some sort of file monitor facility like CL-INOTIFY, which allows us to monitor the run, looking for interesting files.&lt;/p&gt; &#xA;&lt;p&gt;Currently runs only SBCL, although there are not many reasons for this restriction.&lt;/p&gt; &#xA;&lt;p&gt;Requires cl-inotify and osicat in particular. A replacement for &lt;code&gt;SB-EXT:RUN-PROGRAM&lt;/code&gt; would be nice, although it would require integration with an event handler library, e.g. iolib.&lt;/p&gt; &#xA;&lt;h1&gt;USAGE&lt;/h1&gt; &#xA;&lt;p&gt;Provide the filename and the defaults should be sensible (i.e. &lt;code&gt;pdflatex&lt;/code&gt; with PDF output). Otherwise there are many things to configure; you may even supply additional parameters to the underlying &lt;code&gt;RUN-PROGRAM&lt;/code&gt;, or a similar facility to execute other programs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; (tex &#34;filename&#34;)&#xA;=&amp;gt; &#34;/home/username/&#34;&#xA;   #&amp;lt;SB-IMPL::PROCESS :EXITED 0&amp;gt;&#xA;   (#P&#34;filename.log&#34; #P&#34;filename.pdf&#34; #P&#34;filename.aux&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Errors are raised if the corresponding parameter &lt;code&gt;:TEX-ERROR&lt;/code&gt; is set (&lt;code&gt;:ERROR&lt;/code&gt; is already used by the underlying &lt;code&gt;RUN-PROGRAM&lt;/code&gt;). Currently the condition &lt;code&gt;TEX-RUNTIME-ERROR&lt;/code&gt; for problems concerning the process structure exists. The slots &lt;code&gt;PROCESS&lt;/code&gt; contains the &lt;code&gt;SB-IMPL::PROCESS&lt;/code&gt; structure and &lt;code&gt;WRITTEN-FILES&lt;/code&gt; contains a &lt;code&gt;LIST&lt;/code&gt; of written files, if those were collected via the &lt;code&gt;:COLLECT-WRITTEN-FILES&lt;/code&gt; parameter (&lt;code&gt;T&lt;/code&gt; by default).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; (tex &#34;no-such-filename&#34;)&#xA;=&amp;gt; TeX quit with non-zero exit status.&#xA;      [Condition of type TEX-RUNTIME-ERROR]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using &lt;code&gt;:INPUT-FORMAT&lt;/code&gt; and &lt;code&gt;:OUTPUT-FORMAT&lt;/code&gt; the best path through all renderers and postprocessing tools may be automatically derived.&lt;/p&gt; &#xA;&lt;p&gt;The input format is determined by looking at the first 4k byte of the file and looking for patterns (currently only &lt;code&gt;&#34;documentclass&#34;&lt;/code&gt; to check for LaTeX, everything else is regarded as TeX files).&lt;/p&gt; &#xA;&lt;p&gt;E.g. given a regular LaTeX file the following interaction allows a succinct way to describe the desired output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; (tex &#34;data/test-2.tex&#34; :output-format :ps)&#xA;=&amp;gt; #P&#34;test-2.ps&#34;&#xA;   #P&#34;/home/user/src/&#34;&#xA;   #&amp;lt;SB-IMPL::PROCESS :EXITED 0&amp;gt;&#xA;   (#P&#34;test-2.aux&#34; #P&#34;test-2.pdf&#34; #P&#34;test-2.log&#34; #P&#34;test-2.ps&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Behind the scenes the best path was derived as &lt;code&gt;:LUALATEX :PDF :PDFTOPS&lt;/code&gt;, which means running LuaLaTeX producing a PDF file (which is also the default for that renderer) and then postprocessing the output with &lt;code&gt;&#34;pdftops&#34;&lt;/code&gt; (or &lt;code&gt;&#34;pdf2ps&#34;&lt;/code&gt;, if that program wasn&#39;t available on the machine).&lt;/p&gt; &#xA;&lt;p&gt;This facility is quite flexible and may even be efficient if some more work is put into caching the results of the program lookup in the environment &lt;code&gt;PATH&lt;/code&gt; variable. The current render route only allows for one conversion at all, so it would need to be fixed for machines without the necessary direct converters.&lt;/p&gt;</summary>
  </entry>
</feed>