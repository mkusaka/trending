<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Common Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-08T01:32:03Z</updated>
  <subtitle>Daily Trending of Common Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>atlas-engineer/nsymbols</title>
    <updated>2022-11-08T01:32:03Z</updated>
    <id>tag:github.com,2022-11-08:/atlas-engineer/nsymbols</id>
    <link href="https://github.com/atlas-engineer/nsymbols" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A set of convenience functions to list class, variable, function, and other symbols from an arbitrary set of packages.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#+TITLE:nsymbols&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Nsymbols is a set of functions to search, filter, and group symbols in a chosen set of packages based on arbitrary conditions.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Nsymbols extends the regular package API of ANSI CL with more operations, allowing one to list:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;package-symbols&lt;/del&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;package-variables&lt;/del&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;package-functions&lt;/del&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;del&gt;package-generic-functions&lt;/del&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;del&gt;package-macros&lt;/del&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;package-classes&lt;/del&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;package-structures&lt;/del&gt;.&lt;/li&gt; &#xA; &lt;li&gt;And other symbol types, given &lt;del&gt;define-symbol-type&lt;/del&gt; for those. Nsymbols can also find symbols by their name/matching symbol with &lt;del&gt;resolve-symbol&lt;/del&gt;. All these operations are aware of symbol visibility in the given packages, due to a new &lt;del&gt;symbol-visibility&lt;/del&gt; function.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;COMMENT Getting started Clone the Git repository: #+begin_src sh git clone --recursive &lt;a href=&#34;https://github.com/atlas-engineer/nsymbols&#34;&gt;https://github.com/atlas-engineer/nsymbols&lt;/a&gt; ~/common-lisp/ #+end_src&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And then load Nsymbols in the REPL: #+begin_src lisp (asdf:load-system :nsymbols) ;; or, if you use Quicklisp (ql:quickload :nsymbols) #+end_src And you can list your package symbols and resolve them right away: #+begin_src lisp (nsymbols:macro-symbol-p &#39;defclass) ;; =&amp;gt; true (nsymbols:package-classes :cl) ;; =&amp;gt; (METHOD-COMBINATION CLASS BUILT-IN-CLASS STRUCTURE-CLASS ;; STANDARD-METHOD STANDARD-CLASS STANDARD-OBJECT METHOD) (nsymbols:package-functions :nsymbols :internal) ;; =&amp;gt; (NSYMBOLS::LIST-ALL-MAYBE-SUBPACKAGES) (nsymbols:resolve-symbol &#34;SUBPACKAGES&#34; &#39;function :nsymbols) ;; =&amp;gt; NSYMBOLS:SUBPACKAGES ;; =&amp;gt; (NSYMBOLS:SUBPACKAGES) #+end_src&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;How it works&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Nsymbols uses the auto-generated predicates to check whether the given symbol belongs to a certain group of symbols. For example: #+begin_src lisp (define-symbol-type function () (fboundp %symbol%)) #+end_src creates a symbol type &lt;del&gt;:FUNCTION&lt;/del&gt; that will only list &lt;del&gt;fboundp&lt;/del&gt; symbols. Underneath this short definition, a set of helpers is generated:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;function-symbol-p&lt;/del&gt; predicate to check whether a symbol belongs to this group. That&#39;s where the body of &lt;del&gt;define-symbol-type&lt;/del&gt; goes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;function-symbol&lt;/del&gt; type to type-check the symbol you use.&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;package-functions&lt;/del&gt; function to list function symbols in the package based on their visibility.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Roadmap&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Maybe use Closer MOP to get (more reliable?) list of classes, structures, and slots (current implementation makes slot listing impossible).&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Introduce &lt;del&gt;package-functions*&lt;/del&gt;-like starred helpers returning function/class/method/slot objects instead of symbols designating them?&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>