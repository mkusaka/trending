<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Common Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-26T01:26:46Z</updated>
  <subtitle>Daily Trending of Common Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jetmonk/cl-pigpio</title>
    <updated>2023-12-26T01:26:46Z</updated>
    <id>tag:github.com,2023-12-26:/jetmonk/cl-pigpio</id>
    <link href="https://github.com/jetmonk/cl-pigpio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Common Lisp interface to the pigpio Raspberry Pi hardware library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CL-PIGPIO&lt;/h1&gt; &#xA;&lt;p&gt;A Common Lisp interface to the Rapsberry Pi &lt;a href=&#34;https://abyz.me.uk/rpi/pigpio/&#34;&gt;pigpio&lt;/a&gt; library (&lt;a href=&#34;https://github.com/joan2937/pigpio&#34;&gt;pigpio on github&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://abyz.me.uk/rpi/pigpio/&#34;&gt;&lt;em&gt;pigpio&lt;/em&gt;&lt;/a&gt; is a library to provide a simplified interface to the Raspberry Pi&#39;s hardware devices, like SPI, I2C, Serial, and GPIO.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;pigpio&lt;/em&gt; has 1) a direct hardware version (linking with &lt;em&gt;libpigpio.so&lt;/em&gt;) that requires the program using it to run as root; and 2) a &lt;em&gt;pigpiod&lt;/em&gt; daemon (linked with &lt;em&gt;libpigpiod_if2.so&lt;/em&gt;) that allows user-land programs to accesss hardware via network calls to the daemon.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;CL-PIGPIO&lt;/em&gt; links with both libraries, and allows the user to select whether the hardware or the daemon form is called. If the hardware version is activated but the user&#39;s program is not running with root privileges, an error is generated.&lt;/p&gt; &#xA;&lt;p&gt;Only one of the two (hardware or daemon) can be run on the same RPi, but the daemon on other RPis can be accessed remotely.&lt;/p&gt; &#xA;&lt;h3&gt;Installing&lt;/h3&gt; &#xA;&lt;p&gt;Install in your usual Lisp package tree and run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(asdf:load-system &#34;cl-pigpio&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or, for just the low level FFI, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(asdf:load-system &#34;pigpio-ffi-universal&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Low level FFI interface&lt;/h2&gt; &#xA;&lt;p&gt;The unified &lt;em&gt;pigpio/pigpiod&lt;/em&gt; interface is in the &lt;em&gt;pigpio-ffi-universal&lt;/em&gt; package.&lt;/p&gt; &#xA;&lt;p&gt;Here, the routines are generally the same as &lt;a href=&#34;https://abyz.me.uk/rpi/pigpio/cif.html&#34;&gt;documented in the C pigpio interface&lt;/a&gt; but with an additional keyword device specifier.&lt;/p&gt; &#xA;&lt;p&gt;For example, if the C library has&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  int i2cOpen(unsigned i2cBus, unsigned i2cAddr, unsigned i2cFlags);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then the Lisp version has&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  (pigpio-ffi-universal:pigpio-i2copen&#xA;         i2cbus i2caddr i2cflags&#xA;         &amp;amp;key (pidev pigpio-ffi-unversal:*default-pidev*))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;em&gt;pidev&lt;/em&gt; keyword argument can be set as&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  ;; daemon form, setting *default-pidev* to this device&#xA;  (pigpio-ffi-universal:open-pidev/daemon :host &#34;localhost&#34; :port &#34;8888&#34;&#xA;                                          :set-default t)&#xA;  ;; OR open hardware device, this time not setting the default variable&#xA;  (defparameter *my-pidev*&#xA;     (pigpio-ffi-universal:open-pidev/hardware :set-default nil))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is necessary to open a device before making any pigpio/pigpiod calls.&lt;/p&gt; &#xA;&lt;h2&gt;Higher level interface&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;em&gt;cl-pigpio&lt;/em&gt; package contains a higher level interface to SPI, I2C, and GPIO.&lt;/p&gt; &#xA;&lt;p&gt;This interface is not documented in detail, but the exported functions are visible in &lt;em&gt;cl-pigpio-package.lisp&lt;/em&gt;, and the functions generally have good documentation strings. I2C, SPI, and GPIO have separate source files.&lt;/p&gt; &#xA;&lt;p&gt;The purpose of the higher level interface is to translate opaque data like I2C flags into more easily understable Lisp keywords, and to perform FFI calls using Lisp buffers rather than using CFFI foreign pointers.&lt;/p&gt; &#xA;&lt;p&gt;The high level routines also throw a descriptive Lisp error if the pigpio library returns an error.&lt;/p&gt; &#xA;&lt;h2&gt;Glitches and gotchas&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;pigpio does not work for RPi5 (yet?) because hardware interface is not documented&lt;/li&gt; &#xA; &lt;li&gt;signals are turned off in the hardware version using &lt;code&gt;gpioCfgGetInternals()&lt;/code&gt; to prevent clashes with any Lisp use of signals.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;Tested with 64 bit SBCL, on Bookworm.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cffi/cffi&#34;&gt;&lt;em&gt;cffi&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joan2937/pigpio&#34;&gt;&lt;em&gt;pigpio&lt;/em&gt;&lt;/a&gt;, which can be installed as a standard RPi Linux package.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>