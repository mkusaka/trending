<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Common Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-14T01:31:41Z</updated>
  <subtitle>Daily Trending of Common Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>McCLIM/McCLIM</title>
    <updated>2022-11-14T01:31:41Z</updated>
    <id>tag:github.com,2022-11-14:/McCLIM/McCLIM</id>
    <link href="https://github.com/McCLIM/McCLIM" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An implementation of the Common Lisp Interface Manager, version II&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://common-lisp.net/project/mcclim/img/mcclim.png&#34; alt=&#34;logo&#34;&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://common-lisp.net/project/mcclim/&#34;&gt;McCLIM&lt;/a&gt; Version 0.9.8-dev post-&#34;Imbolc&#34; &lt;img src=&#34;https://github.com/McCLIM/McCLIM/workflows/CI/badge.svg?branch=master&#34; alt=&#34;CI&#34;&gt;&lt;/h2&gt; &#xA;&lt;p&gt;McCLIM, an implementation of the &#34;&lt;a href=&#34;http://bauhh.dyndns.org:8000/clim-spec/index.html&#34;&gt;Common Lisp Interface Manager CLIM II Specification&lt;/a&gt;&#34;, is a portable and high-level user interface management system toolkit for Common Lisp. It has a powerful presentation model which allows us to directly link the visual representation of an object to its semantics. It has several high-level programming capabilities that enable us to develop a user interface conveniently; including formatted output, graphics, windowing and commands that are invoked by typing text, keyboard shortcuts or clicking a mouse button.&lt;/p&gt; &#xA;&lt;p&gt;McCLIM works with Allegro CL, Clozure CL, CLISP, CMUCL, Embeddable CL, the Scieneer CL Common-lisp, SBCL and the LispWorks implementations. Right now the only backend supported by McCLIM is CLX, which ties it to the Xserver on the host system. Any platform capable of running Xserver may run McCLIM applications.&lt;/p&gt; &#xA;&lt;h3&gt;Installing McCLIM&lt;/h3&gt; &#xA;&lt;p&gt;McCLIM is available on &lt;a href=&#34;https://www.quicklisp.org/beta/&#34;&gt;&lt;code&gt;Quicklisp&lt;/code&gt;&lt;/a&gt;. Make sure you have installed a supported Common Lisp implementation and &lt;code&gt;Quicklisp&lt;/code&gt; is configured correctly. Then, McCLIM can be installed by entering the following in your REPL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(ql:quickload &#34;mcclim&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To see if McCLIM works on your host you may load the system with examples and run the example browser application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(ql:quickload &#34;clim-examples&#34;)   ; Load the system with examples.&#xA;(clim-demo:demodemo)             ; Run the example browser application.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;An Example&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Quickload McCLIM by running &lt;code&gt;(ql:quickload &#34;mcclim&#34;)&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Put the following code in a file &lt;code&gt;example.lisp&lt;/code&gt;. &lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(in-package :common-lisp-user)&#xA;&#xA;(defpackage &#34;APP&#34;&#xA;  (:use :clim :clim-lisp)&#xA;  (:export &#34;APP-MAIN&#34;))&#xA;&#xA;(in-package :app)&#xA;&#xA;;;; Define a application-frame (a.k.a. application window in traditional GUI&#39;s).&#xA;&#xA;(define-application-frame superapp ()&#xA;  ()&#xA;  ;; :panes section describes different parts of the&#xA;  ;; application-frame. This application has only one pane.&#xA;  (:panes&#xA;   (int :interactor :height 400 :width 600))&#xA;&#xA;  ;; :layouts section describes how the panes are layed out.&#xA;  ;; This application has one layout named &#34;default&#34; which has a single pane.&#xA;  (:layouts&#xA;   (default int)))&#xA;&#xA;;;; Following function launches an instance of &#34;superapp&#34; application-frame.&#xA;(defun app-main ()&#xA;  (run-frame-top-level (make-application-frame &#39;superapp)))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Load the file and run: &lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(app:app-main)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;img src=&#34;https://common-lisp.net/project/mcclim/static/media/cap-superapp.png&#34; alt=&#34;example.lisp&#34;&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;You can access the McCLIM manual draft in &lt;a href=&#34;https://common-lisp.net/project/mcclim/static/manual/mcclim.html&#34;&gt;HTML&lt;/a&gt; and &lt;a href=&#34;https://common-lisp.net/project/mcclim/static/documents/mcclim.pdf&#34;&gt;PDF&lt;/a&gt; formats if you want, but it&#39;s still a work in progress. Several other CLIM 2 resources are listed on &lt;a href=&#34;http://www.cliki.net/CLIM&#34;&gt;CLiki&lt;/a&gt; and McCLIM &lt;a href=&#34;https://common-lisp.net/project/mcclim/&#34;&gt;homepage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Subdirectory Overview&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Apps&lt;/code&gt; - sample applications. This includes: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;Apps/Debugger&lt;/code&gt; - Peter Mechleborg&#39;s debugger (similar to Slime&#39;s).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Apps/Functional-Geometry&lt;/code&gt; - Frank Buss and Rainer Joswig&#39;s functional geometry package for drawing &#34;Escher&#34; tiles.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Apps/Clouseau&lt;/code&gt; - A powerful inspector for Lisp objects.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Apps/Listener&lt;/code&gt; - Andy Hefner&#39;s Lisp Listener.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Apps/Scigraph&lt;/code&gt; - BBN&#39;s graphing package.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Documentation&lt;/code&gt; - Contains available documentation such as Documentation for Libraries &lt;code&gt;Drei&lt;/code&gt; and &lt;code&gt;ESA&lt;/code&gt;, A Guided Tour of CLIM, Specification in LATEX source and Manual in LATEX and texinfo sources (For the time being, texinfo manual contains some additional Documentation not found in LATEX version).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Examples&lt;/code&gt; - Sources for the examples in &lt;code&gt;clim-demo&lt;/code&gt; and some additional examples. These are of varying quality and style; many of them date from when McCLIM was quite incomplete.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Extensions&lt;/code&gt; - Contains several extensions to CLIM 2 spec, such as fonts, additional layouts, bezier, images etc. Most of them are loaded automatically with McCLIM.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Libraries&lt;/code&gt; - Contains &lt;code&gt;Drei&lt;/code&gt; and &lt;code&gt;ESA&lt;/code&gt; Libraries. See Documentation for details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Important Links&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://common-lisp.net/project/mcclim/&#34;&gt;Homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mailman.common-lisp.net/listinfo/mcclim-devel&#34;&gt;Mailing List&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://libera.chat&#34;&gt;#clim @ irc.libera.chat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/McCLIM/McCLIM/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>