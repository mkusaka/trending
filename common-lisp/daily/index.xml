<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Common Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-19T01:26:41Z</updated>
  <subtitle>Daily Trending of Common Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kjcjohnson/ks2-mono</title>
    <updated>2023-09-19T01:26:41Z</updated>
    <id>tag:github.com,2023-09-19:/kjcjohnson/ks2-mono</id>
    <link href="https://github.com/kjcjohnson/ks2-mono" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mono repository aggregating all of ks2 and dependencies&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The ks2 synthesizer suite&lt;/h1&gt; &#xA;&lt;p&gt;Mono repository aggregating all of ks2 and dependencies&lt;/p&gt; &#xA;&lt;h2&gt;Installation Instructions&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the package for your operating system from &lt;a href=&#34;https://github.com/kjcjohnson/ks2-mono/releases/latest&#34;&gt;the latest release&lt;/a&gt;. Currently, ks2 depends on &lt;a href=&#34;https://github.com/cvc5/cvc5&#34;&gt;cvc5&lt;/a&gt; (optional: required for problems that need an SMT solver) and the &lt;a href=&#34;https://github.com/SemGuS-git/Semgus-Parser&#34;&gt;SemGuS Parser&lt;/a&gt; (optional: required to accept the native SemGuS benchmark format). Choose &lt;code&gt;bin+parser&lt;/code&gt; for a package with ks2 and the SemGuS Parser, &lt;code&gt;bin+all&lt;/code&gt; for ks, cvc5 (non-GPL), and the SemGuS Parser, or just the &lt;code&gt;bin&lt;/code&gt; package if you already have the SemGuS Parser and cvc5 installed and in your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Unzip the archive&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Note that the Linux release requires a recent version of &lt;code&gt;glibc&lt;/code&gt;: it will probably run on Ubuntu 22.04 LTS, but not on Ubuntu 20.04 LTS.&lt;/p&gt; &#xA;&lt;h2&gt;Running the ks2 synthesizer suite&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kjcjohnson/ks2-mono/main/ks2.md&#34;&gt;Full command documentation is available here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;NAME:&#xA;  ks2 - the ks2 synthesizer suite&#xA;&#xA;USAGE:&#xA;  ks2 [global-options] [&amp;lt;command&amp;gt;] [command-options] [arguments ...]&#xA;&#xA;OPTIONS:&#xA;      --debug    enables extra debugging information [env: $KS2_DEBUG]&#xA;      --help     display usage information and exit&#xA;      --version  display version and exit&#xA;&#xA;COMMANDS:&#xA;  solve      solves an individual synthesis problem&#xA;  benchmark  benchmarks solvers against problem suites&#xA;  report     generate reports from benchmark data files&#xA;&#xA;LICENSE:&#xA;  MIT&#xA;&#xA;Available solvers: bottom-up-enum (alias: enum), top-down-enum (alias: tde), random&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To solve a problem file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;NAME:&#xA;  ks2 solve - solves an individual synthesis problem&#xA;&#xA;USAGE:&#xA;  ks2 solve [options] [benchmark]&#xA;&#xA;OPTIONS:&#xA;      --help                display usage information and exit&#xA;      --version             display version and exit&#xA;      -c, --core &amp;lt;VALUE&amp;gt;    core to use [env: $KS2_CORE]&#xA;      -s, --solver &amp;lt;VALUE&amp;gt;  solver to use [env: $KS2_SOLVER]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Normally, just call with a solver and a benchmark file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./ks2 solve -s tde path/to/benchmark.sem&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ks2 synthesize suite natively accepts SemGuS benchmarks in the declarative S-expression intermediate format (not SMT-LIB2 encoded), but it will automatically invoke the SemGuS Parser on benchmarks with &lt;code&gt;.sem&lt;/code&gt;, &lt;code&gt;.sl&lt;/code&gt;, and &lt;code&gt;.smt&lt;/code&gt; extensions.&lt;/p&gt; &#xA;&lt;h2&gt;Output Format&lt;/h2&gt; &#xA;&lt;p&gt;A successful benchmark run will output a result block like the following, unless quiet mode is enabled:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;; RESULT: $pair($leaf($name5),$leaf($name6))&#xA;;   TIME: 1.00s&#xA;;   MAX MEM OFFSET: 0.017MiB&#xA;;   PPS: 185.81prog/s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note the following points:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The maximum memory offset is the peak memory usage above the baseline usage before solving a problem&lt;/li&gt; &#xA; &lt;li&gt;The programs per second (PPS) measures how many candidate programs were executed per second on average during solving&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Solving benchmarks can either fail with an internal solver error or a core crash. Core crashes are common and expected, and they generally indicate that the solver process ran out of memory.&lt;/p&gt; &#xA;&lt;p&gt;In addition, a result in SMT-LIB format will be output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(&#xA;  (define-fun fun () T ($pair ($leaf $name5) ($leaf $name6)))&#xA;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Other options might be the symbols &lt;code&gt;unrealizable&lt;/code&gt;, &lt;code&gt;timeout&lt;/code&gt;, or &lt;code&gt;error&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Caveats&lt;/h2&gt; &#xA;&lt;p&gt;This tool is currently an experimental preview and may be unstable. All parts are subject to change in the future. Do not attempt to script this tool; command line arguments and output formats will change in the future.&lt;/p&gt; &#xA;&lt;p&gt;Note that there is currently a hard-coded timeout of two minutes.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to submit issues and enhancements &lt;a href=&#34;https://github.com/kjcjohnson/ks2-mono/issues&#34;&gt;on this repository&lt;/a&gt;, and they will be triaged to the appropriate projects. For reporting issues, please provide:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Solver output, run with the &lt;code&gt;--debug&lt;/code&gt; flag&lt;/li&gt; &#xA; &lt;li&gt;Benchmark file&lt;/li&gt; &#xA; &lt;li&gt;Operating system and version&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other Information&lt;/h2&gt; &#xA;&lt;p&gt;This project optionally bundles &lt;a href=&#34;https://github.com/cvc5/cvc5&#34;&gt;cvc5&lt;/a&gt;. See &lt;code&gt;cvc5.COPYING&lt;/code&gt; in this repository for license and legal information.&lt;/p&gt;</summary>
  </entry>
</feed>