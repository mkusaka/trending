<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Common Lisp Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-19T01:32:22Z</updated>
  <subtitle>Daily Trending of Common Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>inconvergent/auxin</title>
    <updated>2023-04-19T01:32:22Z</updated>
    <id>tag:github.com,2023-04-19:/inconvergent/auxin</id>
    <link href="https://github.com/inconvergent/auxin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Auxiliary Utilities for Generative Art&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AUXIN-Auxiliary Utilities for Generative Art&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE: This code is likely to change with little or no warning. You should not use this for anything remotely important. Make sure to clone the repo if you need it to remain stable.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;This system is auxilary utilities i have found useful for working with generative algorithms it is primarily intended for use with my grph library (&lt;a href=&#34;https://github.com/inconvergent/cl-grph&#34;&gt;https://github.com/inconvergent/cl-grph&lt;/a&gt;) and my vector mathematics library (&lt;a href=&#34;https://github.com/inconvergent/cl-veq&#34;&gt;https://github.com/inconvergent/cl-veq&lt;/a&gt;). Auxin is a stripped down fork of weird (&lt;a href=&#34;https://github.com/inconvergent/weird&#34;&gt;https://github.com/inconvergent/weird&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/inconvergent/auxin/main/img/web.png&#34; alt=&#34;Elastic Web&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Components&lt;/h2&gt; &#xA;&lt;p&gt;Here are the main components: TODO&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Random numbers, some examples:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(in-package :rnd)&#xA;(rnd a) ; in range [0.0, a), defaults to a=1.0.&#xA;(rnd* a) ; in range [-a, a), defaults to a=1.0.&#xA;(rndrng a b) ; in range [a, b)&#xA;(rndi 10) ; random fixnum&#xA;(rndspace n a b) ; n numbers in [a, b)&#xA;(norm :mu 0.0 :sigma 1.0) ; normal distribution&#xA;(2in-circ a) ; in circle of radius a&#xA;(2in-rect w h) ; in a rectangle&#xA;(2nin-rect n w h) ; n in rectangle.&#xA;(2on-line ax ay bx by) ; point between points a and b&#xA;&#xA;; do something with probability 0.1, second form is optional&#xA;(prob 0.1 (print &#34;10% hi&#34;) (print &#34;90% oh no&#34;))&#xA;&#xA;; perform either form 1 or (optionally) 2&#xA;(either (print &#34;form 1&#34;) (print &#34;form 2&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/inconvergent/auxin/main/src/rnd/rnd.lisp&#34;&gt;rnd.lisp&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/inconvergent/auxin/main/src/rnd/2rnd.lisp&#34;&gt;2rnd.lisp&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/inconvergent/auxin/main/src/rnd/3rnd.lisp&#34;&gt;3rnd.lisp&lt;/a&gt;, for all available functions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A tool for drawing &lt;code&gt;svg&lt;/code&gt; files: &lt;code&gt;wsvg&lt;/code&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/inconvergent/auxin/main/examples/draw.lisp&#34;&gt;draw.lisp&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;TODO add more description&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;In addition the library contains a number of useful tools for dealing with (predominantly) vector graphics.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/inconvergent/auxin/main/img/sun.png&#34; alt=&#34;Sun&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/inconvergent/auxin/main/img/symbols.png&#34; alt=&#34;Symbols&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/inconvergent/auxin/main/img/boxes.png&#34; alt=&#34;Boxes&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;On Use and Contributions&lt;/h2&gt; &#xA;&lt;p&gt;This code is written for my personal use, and parts of it is rather experimental. Also, it is likely to change at my whim. For this reason I don&#39;t recommend depending on this library for anything.&lt;/p&gt; &#xA;&lt;p&gt;I release it publicly in case people find it useful or interesting. It is not, however, intended as a collaboration/Open Source project. As such I am unlikely to accept PRs, reply to issues, or take requests.&lt;/p&gt; &#xA;&lt;h2&gt;Installation and Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;auxin&lt;/code&gt; depends on &lt;a href=&#34;https://github.com/inconvergent/cl-veq&#34;&gt;cl-veq&lt;/a&gt;, and it requires Quicklisp to install dependencies (which are listed in &lt;code&gt;auxin.asd&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;To install and load &lt;code&gt;auxin&lt;/code&gt;, do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(ql:quickload :auxin)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If this does not work, &lt;code&gt;auxin&lt;/code&gt; may not be in a place Quicklisp or ASDF can see them. To fix this, either:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(load &#34;auxin.asd&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a long term solution, add the following to &lt;code&gt;.sbclrc&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;#+quicklisp&#xA;(push &#34;/path/to/dir/containing/auxin&#34; ql:*local-project-directories*)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will have to make sure &lt;code&gt;cl-veq&lt;/code&gt; is also available in the same fashion for any of this to work.&lt;/p&gt; &#xA;&lt;h3&gt;Tests&lt;/h3&gt; &#xA;&lt;p&gt;Tests can be executed using: &lt;code&gt;(asdf:test-system :auxin)&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>