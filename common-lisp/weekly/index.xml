<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Common Lisp Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-02T01:53:12Z</updated>
  <subtitle>Weekly Trending of Common Lisp in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>reddit-archive/reddit1.0</title>
    <updated>2023-07-02T01:53:12Z</updated>
    <id>tag:github.com,2023-07-02:/reddit-archive/reddit1.0</id>
    <link href="https://github.com/reddit-archive/reddit1.0" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>nightfly19/cl-arrows</title>
    <updated>2023-07-02T01:53:12Z</updated>
    <id>tag:github.com,2023-07-02:/nightfly19/cl-arrows</id>
    <link href="https://github.com/nightfly19/cl-arrows" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Common Lisp implementation of Clojure&#39;s threading macros&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CL-Arrows&lt;/h1&gt; &#xA;&lt;p&gt;Implements the &lt;code&gt;-&amp;gt;&lt;/code&gt; and &lt;code&gt;-&amp;gt;&amp;gt;&lt;/code&gt; threading macros in Clojure, as well as &lt;code&gt;-&amp;lt;&amp;gt;&lt;/code&gt; and &lt;code&gt;-&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; from the &lt;a href=&#34;https://github.com/rplevy/swiss-arrows&#34;&gt;swiss-arrows&lt;/a&gt; library.&lt;/p&gt; &#xA;&lt;p&gt;This is an ASDF system providing the package &lt;code&gt;cl-arrows&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;[macro]&lt;br&gt; &lt;code&gt;-&amp;gt;&lt;/code&gt; initial-form &lt;em&gt;&amp;amp;rest&lt;/em&gt; forms =&amp;gt; results&lt;/p&gt; &#xA;&lt;p&gt;Inserts INITIAL-FORM as first argument into the first of FORMS, the result into the next, etc., before evaluation. FORMS are treated as list designators.&lt;/p&gt; &#xA;&lt;p&gt;[macro]&lt;br&gt; &lt;code&gt;-&amp;gt;&amp;gt;&lt;/code&gt; initial-form &lt;em&gt;&amp;amp;rest&lt;/em&gt; forms =&amp;gt; results&lt;/p&gt; &#xA;&lt;p&gt;Like &lt;code&gt;-&amp;gt;&lt;/code&gt;, but the forms are inserted as last argument instead of first.&lt;/p&gt; &#xA;&lt;p&gt;[macro]&lt;br&gt; &lt;code&gt;-&amp;lt;&amp;gt;&lt;/code&gt; initial-form &lt;em&gt;&amp;amp;rest&lt;/em&gt; forms =&amp;gt; results&lt;/p&gt; &#xA;&lt;p&gt;Like &lt;code&gt;-&amp;gt;&lt;/code&gt;, but if a form in FORMS has one or more symbols named &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; as top-level element, each such symbol is substituted by the primary result of the form accumulated so far, instead of it being inserted as first argument. Also known as diamond wand.&lt;/p&gt; &#xA;&lt;p&gt;[macro]&lt;br&gt; &lt;code&gt;-&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; initial-form &lt;em&gt;&amp;amp;rest&lt;/em&gt; forms =&amp;gt; results&lt;/p&gt; &#xA;&lt;p&gt;Like &lt;code&gt;-&amp;lt;&amp;gt;&lt;/code&gt;, but if a form in FORMS has no symbols named &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; as top-level element, insertion is done like in &lt;code&gt;-&amp;gt;&amp;gt;&lt;/code&gt;. Also known as diamond spear.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;(-&amp;gt; 3&#xA;    /)  ; insert into designated list (/)&#xA;=&amp;gt; 1/3&#xA;&#xA;(-&amp;gt; 3&#xA;    (expt 2))  ; insert as first argument&#xA;=&amp;gt; 9&#xA;&#xA;(-&amp;gt;&amp;gt; 3&#xA;     (expt 2))  ; insert as last argument&#xA;=&amp;gt; 8&#xA;&#xA;(-&amp;lt;&amp;gt;&amp;gt; (list 1 2 3)&#xA;      (remove-if #&#39;oddp &amp;lt;&amp;gt; :count 1 :from-end t) ; substitute &amp;lt;&amp;gt;&#xA;      (reduce #&#39;+)                               ; insert last&#xA;      /)                                         ; list designator&#xA;=&amp;gt; 1/3&#xA;&#xA;(let ((x 3))&#xA;  (-&amp;lt;&amp;gt; (incf x)     ; (let ((r (incf x)))&#xA;       (+ &amp;lt;&amp;gt; &amp;lt;&amp;gt;)))  ;   (+ r r))&#xA;=&amp;gt; 8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Todo&lt;/h2&gt; &#xA;&lt;p&gt;Future versions &lt;em&gt;might&lt;/em&gt; include further ideas from rplevy&#39;s &lt;a href=&#34;https://github.com/rplevy/swiss-arrows&#34;&gt;swiss-arrows&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>