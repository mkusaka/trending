<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-31T01:34:48Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Azure/Azure-Sentinel</title>
    <updated>2025-01-31T01:34:48Z</updated>
    <id>tag:github.com,2025-01-31:/Azure/Azure-Sentinel</id>
    <link href="https://github.com/Azure/Azure-Sentinel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cloud-native SIEM for intelligent security analytics for your entire enterprise.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft Sentinel and Microsoft 365 Defender&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to the unified Microsoft Sentinel and Microsoft 365 Defender repository! This repository contains out of the box detections, exploration queries, hunting queries, workbooks, playbooks and much more to help you get ramped up with Microsoft Sentinel and provide you security content to secure your environment and hunt for threats. The hunting queries also include Microsoft 365 Defender hunting queries for advanced hunting scenarios in both Microsoft 365 Defender and Microsoft Sentinel. You can also submit to &lt;a href=&#34;https://github.com/Azure/Azure-Sentinel/issues&#34;&gt;issues&lt;/a&gt; for any samples or resources you would like to see here as you onboard to Microsoft Sentinel. This repository welcomes contributions and refer to this repository&#39;s &lt;a href=&#34;https://aka.ms/threathunters&#34;&gt;wiki&lt;/a&gt; to get started. For questions and feedback, please contact &lt;a href=&#34;https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/AzureSentinel@microsoft.com&#34;&gt;AzureSentinel@microsoft.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Resources&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://go.microsoft.com/fwlink/?linkid=2073774&amp;amp;clcid=0x409&#34;&gt;Microsoft Sentinel documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/microsoft-365/security/defender/microsoft-365-defender?view=o365-worldwide&#34;&gt;Microsoft 365 Defender documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/securitywebinars&#34;&gt;Security Community Webinars&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.github.com/en#dotcom&#34;&gt;Getting started with GitHub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We value your feedback. Here are some channels to help surface your questions or feedback:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;General product specific Q&amp;amp;A for SIEM and SOAR - Join in the &lt;a href=&#34;https://techcommunity.microsoft.com/t5/microsoft-sentinel/bd-p/MicrosoftSentinel&#34;&gt;Microsoft Sentinel Tech Community conversations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;General product specific Q&amp;amp;A for XDR - Join in the &lt;a href=&#34;https://techcommunity.microsoft.com/t5/microsoft-365-defender/bd-p/MicrosoftThreatProtection&#34;&gt;Microsoft 365 Defender Tech Community conversations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Product specific feature requests - Upvote or post new on &lt;a href=&#34;https://feedback.azure.com/d365community/forum/37638d17-0625-ec11-b6e6-000d3a4f07b8&#34;&gt;Microsoft Sentinel feedback forums&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Report product or contribution bugs - File a GitHub Issue using &lt;a href=&#34;https://github.com/Azure/Azure-Sentinel/issues/new?assignees=&amp;amp;labels=&amp;amp;template=bug_report.md&amp;amp;title=&#34;&gt;Bug template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;General feedback on community and contribution process - File a GitHub Issue using &lt;a href=&#34;https://github.com/Azure/Azure-Sentinel/issues/new?assignees=&amp;amp;labels=&amp;amp;template=feature_request.md&amp;amp;title=&#34;&gt;Feature Request template&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Contribution guidelines&lt;/h1&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.microsoft.com&#34;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Add in your new or updated contributions to GitHub&lt;/h2&gt; &#xA;&lt;p&gt;Note: If you are a first time contributor to this repository, &lt;a href=&#34;https://docs.github.com/github/getting-started-with-github/fork-a-repo&#34;&gt;General GitHub Fork the repo guidance&lt;/a&gt; before cloning or &lt;a href=&#34;https://github.com/Azure/Azure-Sentinel/raw/master/GettingStarted.md&#34;&gt;Specific steps for the Sentinel repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;General Steps&lt;/h2&gt; &#xA;&lt;p&gt;Brand new or update to a contribution via these methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Submit for review directly on GitHub website &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Browse to the folder you want to upload your file to&lt;/li&gt; &#xA;   &lt;li&gt;Choose Upload Files and browse to your file.&lt;/li&gt; &#xA;   &lt;li&gt;You will be required to create your own branch and then submit the Pull Request for review.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://docs.github.com/en/desktop/overview/getting-started-with-github-desktop&#34;&gt;GitHub Desktop&lt;/a&gt; or &lt;a href=&#34;https://visualstudio.microsoft.com/vs/&#34;&gt;Visual Studio&lt;/a&gt; or &lt;a href=&#34;https://code.visualstudio.com/?wt.mc_id=DX_841432&#34;&gt;VSCode&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.github.com/github/getting-started-with-github/fork-a-repo&#34;&gt;Fork the repo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://help.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository&#34;&gt;Clone the repo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://help.github.com/en/desktop/contributing-to-projects/creating-a-branch-for-your-work&#34;&gt;Create your own branch&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Do your additions/updates in GitHub Desktop&lt;/li&gt; &#xA;   &lt;li&gt;Be sure to merge master back to your branch before you push.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://help.github.com/en/github/using-git/pushing-commits-to-a-remote-repository&#34;&gt;Push your changes to GitHub&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Pull Request&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;After you push your changes, you will need to submit the &lt;a href=&#34;https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests&#34;&gt;Pull Request (PR)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Details about the Proposed Changes are required, be sure to include a minimal level of detail so a review can clearly understand the reason for the change and what he change is related to in the code.&lt;/li&gt; &#xA; &lt;li&gt;After submission, check the &lt;a href=&#34;https://github.com/Azure/Azure-Sentinel/pulls&#34;&gt;Pull Request&lt;/a&gt; for comments&lt;/li&gt; &#xA; &lt;li&gt;Make changes as suggested and update your branch or explain why no change is needed. Resolve the comment when done.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Pull Request Detection Template Structure Validation Check&lt;/h3&gt; &#xA;&lt;p&gt;As part of the PR checks we run a structure validation to make sure all required parts of the YAML structure are included. For Detections, there is a new section that must be included. See the &lt;a href=&#34;https://github.com/Azure/Azure-Sentinel/wiki/Contribute-to-Sentinel-GitHub-Community-of-Queries#now-onto-the-how&#34;&gt;contribution guidelines&lt;/a&gt; for more information. If this section or any other required section is not included, then a validation error will occur similar to the below. The example is specifically if the YAML is missing the entityMappings section:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;A total of 1 test files matched the specified pattern.&#xA;[xUnit.net 00:00:00.95]     Kqlvalidations.Tests.DetectionTemplateStructureValidationTests.Validate_DetectionTemplates_HaveValidTemplateStructure(detectionsYamlFileName: &#34;ExcessiveBlockedTrafficGeneratedbyUser.yaml&#34;) [FAIL]&#xA;  X Kqlvalidations.Tests.DetectionTemplateStructureValidationTests.Validate_DetectionTemplates_HaveValidTemplateStructure(detectionsYamlFileName: &#34;ExcessiveBlockedTrafficGeneratedbyUser.yaml&#34;) [104ms]&#xA;  Error Message:&#xA;   Expected object to be &amp;lt;null&amp;gt;, but found System.ComponentModel.DataAnnotations.ValidationException with message &#34;An old mapping for entity &#39;AccountCustomEntity&#39; does not have a matching new mapping entry.&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pull Request KQL Validation Check&lt;/h3&gt; &#xA;&lt;p&gt;As part of the PR checks we run a syntax validation of the KQL queries defined in the template. If this check fails go to Azure Pipeline (by pressing on the errors link on the checks tab in your PR) &lt;img src=&#34;https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/.github/Media/Azurepipeline.png&#34; alt=&#34;Azurepipeline&#34;&gt; In the pipeline you can see which test failed and what is the cause: &lt;img src=&#34;https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/.github/Media/PipelineTestsTab.png&#34; alt=&#34;Pipeline Tests Tab&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Example error message:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;A total of 1 test files matched the specified pattern.&#xA;[xUnit.net 00:00:01.81]     Kqlvalidations.Tests.KqlValidationTests.Validate_DetectionQueries_HaveValidKql(detectionsYamlFileName: &#34;ExcessiveBlockedTrafficGeneratedbyUser.yaml&#34;) [FAIL]&#xA;  X Kqlvalidations.Tests.KqlValidationTests.Validate_DetectionQueries_HaveValidKql(detectionsYamlFileName: &#34;ExcessiveBlockedTrafficGeneratedbyUser.yaml&#34;) [21ms]&#xA;  Error Message:&#xA;   Template Id:fa0ab69c-7124-4f62-acdd-61017cf6ce89 is not valid Errors:The name &#39;SymantecEndpointProtection&#39; does not refer to any known table, tabular variable or function., Code: &#39;KS204&#39;, Severity: &#39;Error&#39;, Location: &#39;67..93&#39;,The name &#39;SymantecEndpointProtection&#39; does not refer to any known table, tabular variable or function., Code: &#39;KS204&#39;, Severity: &#39;Error&#39;, Location: &#39;289..315&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using custom logs table (a table which is not defined on all workspaces by default) you should verify your table schema is defined in json file in the folder &lt;em&gt;Azure-Sentinel\.script\tests\KqlvalidationsTests\CustomTables&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example for table tablexyz.json&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;Name&#34;: &#34;tablexyz&#34;,&#xA;  &#34;Properties&#34;: [&#xA;    {&#xA;      &#34;Name&#34;: &#34;SomeDateTimeColumn&#34;,&#xA;      &#34;Type&#34;: &#34;DateTime&#34;&#xA;    },&#xA;    {&#xA;      &#34;Name&#34;: &#34;SomeStringColumn&#34;,&#xA;      &#34;Type&#34;: &#34;String&#34;&#xA;    },&#xA;    {&#xA;      &#34;Name&#34;: &#34;SomeDynamicColumn&#34;,&#xA;      &#34;Type&#34;: &#34;Dynamic&#34;&#xA;    }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run KQL Validation Locally&lt;/h3&gt; &#xA;&lt;p&gt;In order to run the KQL validation before submitting Pull Request in you local machine:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need to have &lt;strong&gt;.Net Core 3.1 SDK&lt;/strong&gt; installed &lt;a href=&#34;https://dotnet.microsoft.com/download&#34;&gt;How to download .Net&lt;/a&gt; (Supports all platforms)&lt;/li&gt; &#xA; &lt;li&gt;Open Shell and navigate to &lt;code&gt;Azure-Sentinel\\.script\tests\KqlvalidationsTests\&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Execute &lt;code&gt;dotnet test&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example of output (in Ubuntu):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Welcome to .NET Core 3.1!&#xA;---------------------&#xA;SDK Version: 3.1.403&#xA;&#xA;Telemetry&#xA;---------&#xA;The .NET Core tools collect usage data in order to help us improve your experience. The data is anonymous. It is collected by Microsoft and shared with the community. You can opt-out of telemetry by setting the DOTNET_CLI_TELEMETRY_OPTOUT environment variable to &#39;1&#39; or &#39;true&#39; using your favorite shell.&#xA;&#xA;Read more about .NET Core CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry&#xA;&#xA;----------------&#xA;Explore documentation: https://aka.ms/dotnet-docs&#xA;Report issues and find source on GitHub: https://github.com/dotnet/core&#xA;Find out what&#39;s new: https://aka.ms/dotnet-whats-new&#xA;Learn about the installed HTTPS developer cert: https://aka.ms/aspnet-core-https&#xA;Use &#39;dotnet --help&#39; to see available commands or visit: https://aka.ms/dotnet-cli-docs&#xA;Write your first app: https://aka.ms/first-net-core-app&#xA;--------------------------------------------------------------------------------------&#xA;Test run for /mnt/c/git/Azure-Sentinel/.script/tests/KqlvalidationsTests/bin/Debug/netcoreapp3.1/Kqlvalidations.Tests.dll(.NETCoreApp,Version=v3.1)&#xA;Microsoft (R) Test Execution Command Line Tool Version 16.7.0&#xA;Copyright (c) Microsoft Corporation.  All rights reserved.&#xA;&#xA;Starting test execution, please wait...&#xA;&#xA;A total of 1 test files matched the specified pattern.&#xA;&#xA;Test Run Successful.&#xA;Total tests: 171&#xA;     Passed: 171&#xA; Total time: 25.7973 Seconds&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Detection schema validation tests&lt;/h3&gt; &#xA;&lt;p&gt;Similarly to KQL Validation, there is an automatic validation of the schema of a detection. The schema validation includes the detection&#39;s frequency and period, the detection&#39;s trigger type and threshold, validity of connectors Ids (&lt;a href=&#34;https://github.com/Azure/Azure-Sentinel/raw/master/.script/tests/detectionTemplateSchemaValidation/ValidConnectorIds.json&#34;&gt;valid connectors Ids list&lt;/a&gt;), etc. A wrong format or missing attributes will result with an informative check failure, which should guide you through the resolution of the issue, but make sure to look into the format of already approved detection.&lt;/p&gt; &#xA;&lt;h3&gt;Run Detection Schema Validation Locally&lt;/h3&gt; &#xA;&lt;p&gt;In order to run the KQL validation before submitting Pull Request in you local machine:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need to have &lt;strong&gt;.Net Core 3.1 SDK&lt;/strong&gt; installed &lt;a href=&#34;https://dotnet.microsoft.com/download&#34;&gt;How to download .Net&lt;/a&gt; (Supports all platforms)&lt;/li&gt; &#xA; &lt;li&gt;Open Shell and navigate to &lt;code&gt;Azure-Sentinel\\.script\tests\DetectionTemplateSchemaValidation\&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Execute &lt;code&gt;dotnet test&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;p&gt;For information on what you can contribute and further details, refer to the &lt;a href=&#34;https://github.com/Azure/Azure-Sentinel/wiki#get-started&#34;&gt;&#34;get started&#34;&lt;/a&gt; section on the project&#39;s &lt;a href=&#34;https://aka.ms/threathunters&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aws-samples/bedrock-access-gateway</title>
    <updated>2025-01-31T01:34:48Z</updated>
    <id>tag:github.com,2025-01-31:/aws-samples/bedrock-access-gateway</id>
    <link href="https://github.com/aws-samples/bedrock-access-gateway" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenAI-Compatible RESTful APIs for Amazon Bedrock&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/bedrock-access-gateway/main/README_CN.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Bedrock Access Gateway&lt;/h1&gt; &#xA;&lt;p&gt;OpenAI-compatible RESTful APIs for Amazon Bedrock&lt;/p&gt; &#xA;&lt;h2&gt;Breaking Changes&lt;/h2&gt; &#xA;&lt;p&gt;This solution can now &lt;strong&gt;automatically detect&lt;/strong&gt; new models supported in Amazon Bedrock. So whenever new models are added to Amazon Bedrock, you can immediately try them without the need to wait for code changes to this repo.&lt;/p&gt; &#xA;&lt;p&gt;This is to use the &lt;code&gt;ListFoundationModels&lt;/code&gt; api and the &lt;code&gt;ListInferenceProfiles&lt;/code&gt; api by Amazon Bedrock, due to this change, additional IAM permissions are required to your Lambda/Fargate role.&lt;/p&gt; &#xA;&lt;p&gt;If you are facing error: &#39;Unsupported model xxx, please use models API to get a list of supported models&#39; even the model ID is correct, please either update your existing stack (&lt;strong&gt;Recommended&lt;/strong&gt;) with the new template in the deployment folder or manually add below permissions to the related Lambda/Fargate role.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;   &#34;Action&#34;: [&#xA;       &#34;bedrock:ListFoundationModels&#34;,&#xA;       &#34;bedrock:ListInferenceProfiles&#34;&#xA;   ],&#xA;   &#34;Resource&#34;: &#34;*&#34;,&#xA;   &#34;Effect&#34;: &#34;Allow&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please raise an GitHub issue if you still have problems.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Amazon Bedrock offers a wide range of foundation models (such as Claude 3 Opus/Sonnet/Haiku, Llama 2/3, Mistral/Mixtral, etc.) and a broad set of capabilities for you to build generative AI applications. Check the &lt;a href=&#34;https://aws.amazon.com/bedrock&#34;&gt;Amazon Bedrock&lt;/a&gt; landing page for additional information.&lt;/p&gt; &#xA;&lt;p&gt;Sometimes, you might have applications developed using OpenAI APIs or SDKs, and you want to experiment with Amazon Bedrock without modifying your codebase. Or you may simply wish to evaluate the capabilities of these foundation models in tools like AutoGen etc. Well, this repository allows you to access Amazon Bedrock models seamlessly through OpenAI APIs and SDKs, enabling you to test these models without code changes.&lt;/p&gt; &#xA;&lt;p&gt;If you find this GitHub repository useful, please consider giving it a free star ⭐ to show your appreciation and support for the project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support streaming response via server-sent events (SSE)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support Model APIs&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support Chat Completion APIs&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support Tool Call (&lt;strong&gt;new&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support Embedding API (&lt;strong&gt;new&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support Multimodal API (&lt;strong&gt;new&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support Cross-Region Inference (&lt;strong&gt;new&lt;/strong&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please check &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/bedrock-access-gateway/main/docs/Usage.md&#34;&gt;Usage Guide&lt;/a&gt; for more details about how to use the new APIs.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The default model is set to &lt;code&gt;anthropic.claude-3-sonnet-20240229-v1:0&lt;/code&gt; which can be changed via Lambda environment variables (&lt;code&gt;DEFAULT_MODEL&lt;/code&gt;). You can call the &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/bedrock-access-gateway/main/docs/Usage.md#models-api&#34;&gt;Models API&lt;/a&gt; to get the full list of model IDs supported.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Please make sure you have met below prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Access to Amazon Bedrock foundation models.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For more information on how to request model access, please refer to the &lt;a href=&#34;https://docs.aws.amazon.com/bedrock/latest/userguide/model-access.html&#34;&gt;Amazon Bedrock User Guide&lt;/a&gt; (Set Up &amp;gt; Model access)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Architecture&lt;/h3&gt; &#xA;&lt;p&gt;The following diagram illustrates the reference architecture. Note that it also includes a new &lt;strong&gt;VPC&lt;/strong&gt; with two public subnets only for the Application Load Balancer (ALB).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/bedrock-access-gateway/main/assets/arch.svg?sanitize=true&#34; alt=&#34;Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also choose to use &lt;a href=&#34;https://aws.amazon.com/fargate/&#34;&gt;AWS Fargate&lt;/a&gt; behind the ALB instead of &lt;a href=&#34;https://aws.amazon.com/lambda/&#34;&gt;AWS Lambda&lt;/a&gt;, the main difference is the latency of the first byte for streaming response (Fargate is lower).&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can use Lambda Function URL to replace ALB, see &lt;a href=&#34;https://github.com/awslabs/aws-lambda-web-adapter/tree/main/examples/fastapi-response-streaming&#34;&gt;example&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Deployment&lt;/h3&gt; &#xA;&lt;p&gt;Please follow the steps below to deploy the Bedrock Proxy APIs into your AWS account. Only supports regions where Amazon Bedrock is available (such as &lt;code&gt;us-west-2&lt;/code&gt;). The deployment will take approximately &lt;strong&gt;3-5 minutes&lt;/strong&gt; 🕒.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 1: Create your own custom API key (Optional)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Store API Key in ParameterStore&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This step is to use any string (without spaces) you like to create a custom API Key (credential) that will be used to access the proxy API later. This key does not have to match your actual OpenAI key, and you don&#39;t need to have an OpenAI API key. It is recommended that you take this step and ensure that you keep the key safe and private.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the AWS Management Console and navigate to the Systems Manager service.&lt;/li&gt; &#xA; &lt;li&gt;In the left-hand navigation pane, click on &#34;Parameter Store&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Click on the &#34;Create parameter&#34; button.&lt;/li&gt; &#xA; &lt;li&gt;In the &#34;Create parameter&#34; window, select the following options: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Name: Enter a descriptive name for your parameter (e.g., &#34;BedrockProxyAPIKey&#34;).&lt;/li&gt; &#xA;   &lt;li&gt;Description: Optionally, provide a description for the parameter.&lt;/li&gt; &#xA;   &lt;li&gt;Tier: Select &lt;strong&gt;Standard&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Type: Select &lt;strong&gt;SecureString&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Value: Any string (without spaces).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Create parameter&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Make a note of the parameter name you used (e.g., &#34;BedrockProxyAPIKey&#34;). You&#39;ll need this in the next step.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Store API Key in ENV variable&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Provide an ENV variable to the container named: &lt;code&gt;API_KEY&lt;/code&gt; with the API key value.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 2: Deploy the CloudFormation stack&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Sign in to AWS Management Console, switch to the region to deploy the CloudFormation Stack to.&lt;/li&gt; &#xA; &lt;li&gt;Click the following button to launch the CloudFormation Stack in that region. Choose one of the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;ALB + Lambda&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://console.aws.amazon.com/cloudformation/home#/stacks/create/template?stackName=BedrockProxyAPI&amp;amp;templateURL=https://aws-gcr-solutions.s3.amazonaws.com/bedrock-access-gateway/latest/BedrockProxy.template&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/bedrock-access-gateway/main/assets/launch-stack.png&#34; alt=&#34;Launch Stack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;ALB + Fargate&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://console.aws.amazon.com/cloudformation/home#/stacks/create/template?stackName=BedrockProxyAPI&amp;amp;templateURL=https://aws-gcr-solutions.s3.amazonaws.com/bedrock-access-gateway/latest/BedrockProxyFargate.template&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/bedrock-access-gateway/main/assets/launch-stack.png&#34; alt=&#34;Launch Stack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Next&#34;.&lt;/li&gt; &#xA; &lt;li&gt;On the &#34;Specify stack details&#34; page, provide the following information: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Stack name: Change the stack name if needed.&lt;/li&gt; &#xA;   &lt;li&gt;ApiKeyParam (if you set up an API key in Step 1): Enter the parameter name you used for storing the API key (e.g., &lt;code&gt;BedrockProxyAPIKey&lt;/code&gt;). If you did not set up an API key, leave this field blank. Click &#34;Next&#34;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;On the &#34;Configure stack options&#34; page, you can leave the default settings or customize them according to your needs.&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Next&#34;.&lt;/li&gt; &#xA; &lt;li&gt;On the &#34;Review&#34; page, review the details of the stack you&#39;re about to create. Check the &#34;I acknowledge that AWS CloudFormation might create IAM resources&#34; checkbox at the bottom.&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Create stack&#34;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;That is it! 🎉 Once deployed, click the CloudFormation stack and go to &lt;strong&gt;Outputs&lt;/strong&gt; tab, you can find the API Base URL from &lt;code&gt;APIBaseUrl&lt;/code&gt;, the value should look like &lt;code&gt;http://xxxx.xxx.elb.amazonaws.com/api/v1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;SDK/API Usage&lt;/h3&gt; &#xA;&lt;p&gt;All you need is the API Key and the API Base URL. If you didn&#39;t set up your own key, then the default API Key (&lt;code&gt;bedrock&lt;/code&gt;) will be used.&lt;/p&gt; &#xA;&lt;p&gt;Now, you can try out the proxy APIs. Let&#39;s say you want to test Claude 3 Sonnet model (model ID: &lt;code&gt;anthropic.claude-3-sonnet-20240229-v1:0&lt;/code&gt;)...&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example API Usage&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export OPENAI_API_KEY=&amp;lt;API key&amp;gt;&#xA;export OPENAI_BASE_URL=&amp;lt;API base url&amp;gt;&#xA;# For older versions&#xA;# https://github.com/openai/openai-python/issues/624&#xA;export OPENAI_API_BASE=&amp;lt;API base url&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl $OPENAI_BASE_URL/chat/completions \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -H &#34;Authorization: Bearer $OPENAI_API_KEY&#34; \&#xA;  -d &#39;{&#xA;    &#34;model&#34;: &#34;anthropic.claude-3-sonnet-20240229-v1:0&#34;,&#xA;    &#34;messages&#34;: [&#xA;      {&#xA;        &#34;role&#34;: &#34;user&#34;,&#xA;        &#34;content&#34;: &#34;Hello!&#34;&#xA;      }&#xA;    ]&#xA;  }&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example SDK Usage&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from openai import OpenAI&#xA;&#xA;client = OpenAI()&#xA;completion = client.chat.completions.create(&#xA;    model=&#34;anthropic.claude-3-sonnet-20240229-v1:0&#34;,&#xA;    messages=[{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Hello!&#34;}],&#xA;)&#xA;&#xA;print(completion.choices[0].message.content)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please check &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/bedrock-access-gateway/main/docs/Usage.md&#34;&gt;Usage Guide&lt;/a&gt; for more details about how to use embedding API, multimodal API and tool call.&lt;/p&gt; &#xA;&lt;h2&gt;Other Examples&lt;/h2&gt; &#xA;&lt;h3&gt;LangChain&lt;/h3&gt; &#xA;&lt;p&gt;Make sure you use &lt;code&gt;ChatOpenAI(...)&lt;/code&gt; instead of &lt;code&gt;OpenAI(...)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# pip install langchain-openai&#xA;import os&#xA;&#xA;from langchain.chains import LLMChain&#xA;from langchain.prompts import PromptTemplate&#xA;from langchain_openai import ChatOpenAI&#xA;&#xA;chat = ChatOpenAI(&#xA;    model=&#34;anthropic.claude-3-sonnet-20240229-v1:0&#34;,&#xA;    temperature=0,&#xA;    openai_api_key=os.environ[&#39;OPENAI_API_KEY&#39;],&#xA;    openai_api_base=os.environ[&#39;OPENAI_BASE_URL&#39;],&#xA;)&#xA;&#xA;template = &#34;&#34;&#34;Question: {question}&#xA;&#xA;Answer: Let&#39;s think step by step.&#34;&#34;&#34;&#xA;&#xA;prompt = PromptTemplate.from_template(template)&#xA;llm_chain = LLMChain(prompt=prompt, llm=chat)&#xA;&#xA;question = &#34;What NFL team won the Super Bowl in the year Justin Beiber was born?&#34;&#xA;response = llm_chain.invoke(question)&#xA;print(response)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FAQs&lt;/h2&gt; &#xA;&lt;h3&gt;About Privacy&lt;/h3&gt; &#xA;&lt;p&gt;This application does not collect any of your data. Furthermore, it does not log any requests or responses by default.&lt;/p&gt; &#xA;&lt;h3&gt;Why not used API Gateway instead of Application Load Balancer?&lt;/h3&gt; &#xA;&lt;p&gt;Short answer is that API Gateway does not support server-sent events (SSE) for streaming response.&lt;/p&gt; &#xA;&lt;h3&gt;Which regions are supported?&lt;/h3&gt; &#xA;&lt;p&gt;Generally speaking, all regions that Amazon Bedrock supports will also be supported, if not, please raise an issue in Github.&lt;/p&gt; &#xA;&lt;p&gt;Note that not all models are available in those regions.&lt;/p&gt; &#xA;&lt;h3&gt;Which models are supported?&lt;/h3&gt; &#xA;&lt;p&gt;You can use the &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/bedrock-access-gateway/main/docs/Usage.md#models-api&#34;&gt;Models API&lt;/a&gt; to get/refresh a list of supported models in the current region.&lt;/p&gt; &#xA;&lt;h3&gt;Can I build and use my own ECR image&lt;/h3&gt; &#xA;&lt;p&gt;Yes, you can clone the repo and build the container image by yourself (&lt;code&gt;src/Dockerfile&lt;/code&gt;) and then push to your ECR repo. You can use &lt;code&gt;scripts/push-to-ecr.sh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Replace the repo url in the CloudFormation template before you deploy.&lt;/p&gt; &#xA;&lt;h3&gt;Can I run this locally&lt;/h3&gt; &#xA;&lt;p&gt;Yes, you can run this locally, e.g. run below command under &lt;code&gt;src&lt;/code&gt; folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;uvicorn api.app:app --host 0.0.0.0 --port 8000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The API base url should look like &lt;code&gt;http://localhost:8000/api/v1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Any performance sacrifice or latency increase by using the proxy APIs&lt;/h3&gt; &#xA;&lt;p&gt;Comparing with the AWS SDK call, the referenced architecture will bring additional latency on response, you can try and test that on you own.&lt;/p&gt; &#xA;&lt;p&gt;Also, you can use Lambda Web Adapter + Function URL (see &lt;a href=&#34;https://github.com/awslabs/aws-lambda-web-adapter/tree/main/examples/fastapi-response-streaming&#34;&gt;example&lt;/a&gt;) to replace ALB or AWS Fargate to replace Lambda to get better performance on streaming response.&lt;/p&gt; &#xA;&lt;h3&gt;Any plan to support SageMaker models?&lt;/h3&gt; &#xA;&lt;p&gt;Currently, there is no plan to support SageMaker models. This may change provided there&#39;s a demand from customers.&lt;/p&gt; &#xA;&lt;h3&gt;Any plan to support Bedrock custom models?&lt;/h3&gt; &#xA;&lt;p&gt;Fine-tuned models and models with Provisioned Throughput are currently not supported. You can clone the repo and make the customization if needed.&lt;/p&gt; &#xA;&lt;h3&gt;How to upgrade?&lt;/h3&gt; &#xA;&lt;p&gt;To use the latest features, you don&#39;t need to redeploy the CloudFormation stack. You simply need to pull the latest image.&lt;/p&gt; &#xA;&lt;p&gt;To do so, depends on which version you deployed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lambda version&lt;/strong&gt;: Go to AWS Lambda console, find the Lambda function, then find and click the &lt;code&gt;Deploy new image&lt;/code&gt; button and click save.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fargate version&lt;/strong&gt;: Go to ECS console, click the ECS cluster, go the &lt;code&gt;Tasks&lt;/code&gt; tab, select the only task that is running and simply click &lt;code&gt;Stop selected&lt;/code&gt; menu. A new task with latest image will start automatically.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/bedrock-access-gateway/main/CONTRIBUTING.md#security-issue-notifications&#34;&gt;CONTRIBUTING&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This library is licensed under the MIT-0 License. See the LICENSE file.&lt;/p&gt;</summary>
  </entry>
</feed>