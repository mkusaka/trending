<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-13T01:37:59Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kholia/OSX-KVM</title>
    <updated>2022-09-13T01:37:59Z</updated>
    <id>tag:github.com,2022-09-13:/kholia/OSX-KVM</id>
    <link href="https://github.com/kholia/OSX-KVM" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run macOS on QEMU/KVM. With OpenCore + Big Sur + Monterey support now! Only commercial (paid) support is available now to avoid spammy issues. No Mac system is required.&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;Note&lt;/h3&gt; &#xA;&lt;p&gt;This &lt;code&gt;README.md&lt;/code&gt; documents the process of creating a &lt;code&gt;Virtual Hackintosh&lt;/code&gt; system.&lt;/p&gt; &#xA;&lt;p&gt;Note: All blobs and resources included in this repository are re-derivable (all instructions are included!).&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;💚&lt;/span&gt; Looking for &lt;strong&gt;commercial&lt;/strong&gt; support with this stuff? I am &lt;a href=&#34;mailto:dhiru.kholia@gmail.com?subject=%5BGitHub%5D%20OSX-KVM%20Commercial%20Support%20Request&amp;amp;body=Hi%20-%20We%20are%20interested%20in%20purchasing%20commercial%20support%20options%20for%20your%20project.&#34;&gt;available over email&lt;/a&gt; for a chat for &lt;strong&gt;commercial support options only&lt;/strong&gt;. Note: Project sponsors get access to the &lt;code&gt;Private OSX-KVM&lt;/code&gt; repository, and direct support.&lt;/p&gt; &#xA;&lt;p&gt;Working with &lt;code&gt;Proxmox&lt;/code&gt; and macOS? See &lt;a href=&#34;https://www.nicksherlock.com/&#34;&gt;Nick&#39;s blog for sure&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Yes, we support offline macOS installations now 🎉&lt;/p&gt; &#xA;&lt;h3&gt;Contributing Back&lt;/h3&gt; &#xA;&lt;p&gt;This project can always use your help, time and attention. I am looking for help (pull-requests!) with the following work items:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Documentation around running macOS on popular cloud providers (Hetzner, GCP, AWS). See the &lt;code&gt;Is This Legal?&lt;/code&gt; section and associated references.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Document (share) how you use this project to build + test open-source projects / get your stuff done.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Document how to use this project for XNU kernel debugging and development.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Document the process to launch a bunch of headless macOS VMs (build farm).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Document usage of &lt;a href=&#34;https://github.com/munki/munki&#34;&gt;munki&lt;/a&gt; to deploy software to such a &lt;code&gt;build farm&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable VNC + SSH support out of the box or more easily.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Robustness improvements are always welcome!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(Not so) crazy idea - automate the macOS installation via OpenCV.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;A modern Linux distribution. E.g. Ubuntu 20.04 LTS 64-bit or later.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;QEMU &amp;gt;= 4.2.0&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A CPU with Intel VT-x / AMD SVM support is required (&lt;code&gt;grep -e vmx -e svm /proc/cpuinfo&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A CPU with SSE4.1 support is required for &amp;gt;= macOS Sierra&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A CPU with AVX2 support is required for &amp;gt;= macOS Mojave&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note: Older AMD CPU(s) are known to be problematic. AMD FX-8350 works but Phenom II X3 720 does not. Ryzen processors work just fine.&lt;/p&gt; &#xA;&lt;h3&gt;Installation Preparation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;KVM may need the following tweak on the host machine to work.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;echo 1 | sudo tee /sys/module/kvm/parameters/ignore_msrs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;To make this change permanent, you may use the following command.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo cp kvm.conf /etc/modprobe.d/kvm.conf  # for intel boxes only, after cloning the repo below&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install QEMU and other packages.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo apt-get install qemu uml-utilities virt-manager git \&#xA;    wget libguestfs-tools p7zip-full make dmg2img -y&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This step may need to be adapted for your Linux distribution.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add user to the &lt;code&gt;kvm&lt;/code&gt; and &lt;code&gt;libvirt&lt;/code&gt; groups (might be needed).&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo usermod -aG kvm $(whoami)&#xA;sudo usermod -aG libvirt $(whoami)&#xA;sudo usermod -aG input $(whoami)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: Re-login after executing this command.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repository on your QEMU system. Files from this repository are used in the following steps.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cd ~&#xA;&#xA;git clone --depth 1 --recursive https://github.com/kholia/OSX-KVM.git&#xA;&#xA;cd OSX-KVM&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Repository updates can be pulled via the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git pull --rebase&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This repository uses rebase based workflows heavily.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fetch macOS installer.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./fetch-macOS-v2.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can choose your desired macOS version here. After executing this step, you should have the &lt;code&gt;BaseSystem.dmg&lt;/code&gt; file in the current folder.&lt;/p&gt; &lt;p&gt;ATTENTION: Let &lt;code&gt;&amp;gt;= Big Sur&lt;/code&gt; setup sit at the &lt;code&gt;Country Selection&lt;/code&gt; screen, and other similar places for a while if things are being slow. The initial macOS setup wizard will eventually succeed.&lt;/p&gt; &lt;p&gt;Sample run:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ ./fetch-macOS-v2.py&#xA;1. High Sierra (10.13)&#xA;2. Mojave (10.14)&#xA;3. Catalina (10.15)&#xA;4. Big Sur (11.6) - RECOMMENDED&#xA;5. Monterey (latest)&#xA;&#xA;Choose a product to download (1-5): 4&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: Modern NVIDIA GPUs are supported on HighSierra but not on later versions of macOS.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Convert the downloaded &lt;code&gt;BaseSystem.dmg&lt;/code&gt; file into the &lt;code&gt;BaseSystem.img&lt;/code&gt; file.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;dmg2img -i BaseSystem.dmg BaseSystem.img&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;OR&lt;/p&gt; &lt;pre&gt;&lt;code&gt;qemu-img convert BaseSystem.dmg -O raw BaseSystem.img  # can be problematic on newer systems&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a virtual HDD image where macOS will be installed. If you change the name of the disk image from &lt;code&gt;mac_hdd_ng.img&lt;/code&gt; to something else, the boot scripts will need to be updated to point to the new image name.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;qemu-img create -f qcow2 mac_hdd_ng.img 128G&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;NOTE: Create this HDD image file on a fast SSD/NVMe disk for best results.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now you are ready to install macOS 🚀&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;CLI method (primary). Just run the &lt;code&gt;OpenCore-Boot.sh&lt;/code&gt; script to start the installation process.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./OpenCore-Boot.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: This same script works for Big Sur, Catalina, Mojave, and High Sierra.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the &lt;code&gt;Disk Utility&lt;/code&gt; tool within the macOS installer to partition, and format the virtual disk attached to the macOS VM.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Go ahead, and install macOS 🙌&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;TIP: Using a non-APFS filesystem is recommended.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(OPTIONAL) Use this macOS VM disk with libvirt (virt-manager / virsh stuff).&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Edit &lt;code&gt;macOS-libvirt-Catalina.xml&lt;/code&gt; file and change the various file paths (search for &lt;code&gt;CHANGEME&lt;/code&gt; strings in that file). The following command should do the trick usually.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sed &#34;s/CHANGEME/$USER/g&#34; macOS-libvirt-Catalina.xml &amp;gt; macOS.xml&#xA;&#xA;virt-xml-validate macOS.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Create a VM by running the following command.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;virsh --connect qemu:///system define macOS.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;If needed, grant necessary permissions to libvirt-qemu user,&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo setfacl -m u:libvirt-qemu:rx /home/$USER&#xA;sudo setfacl -R -m u:libvirt-qemu:rx /home/$USER/OSX-KVM&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Launch &lt;code&gt;virt-manager&lt;/code&gt; and start the &lt;code&gt;macOS&lt;/code&gt; virtual machine.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Setting Expectations Right&lt;/h3&gt; &#xA;&lt;p&gt;Nice job on setting up a &lt;code&gt;Virtual Hackintosh&lt;/code&gt; system! Such a system can be used for a variety of purposes (e.g. software builds, testing, reversing work), and it may be all you need, along with some tweaks documented in this repository.&lt;/p&gt; &#xA;&lt;p&gt;However, such a system lacks graphical acceleration, a reliable sound sub-system, USB 3 functionality and other similar things. To enable these things, take a look at our &lt;a href=&#34;https://raw.githubusercontent.com/kholia/OSX-KVM/master/notes.md&#34;&gt;notes&lt;/a&gt;. We would like to resume our testing and documentation work around this area. Please &lt;a href=&#34;mailto:dhiru.kholia@gmail.com?subject=%5BGitHub%5D%20OSX-KVM%20Funding%20Support&#34;&gt;reach out to us&lt;/a&gt; if you are able to fund this area of work.&lt;/p&gt; &#xA;&lt;p&gt;It is possible to have &#39;beyond-native-apple-hw&#39; performance but it does require work, patience, and a bit of luck (perhaps?).&lt;/p&gt; &#xA;&lt;h3&gt;Post-Installation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/kholia/OSX-KVM/master/networking-qemu-kvm-howto.txt&#34;&gt;networking notes&lt;/a&gt; to setup guest networking.&lt;/p&gt; &lt;p&gt;I have the following commands present in &lt;code&gt;/etc/rc.local&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;#!/usr/bin/env bash&#xA;&#xA;sudo ip tuntap add dev tap0 mode tap&#xA;sudo ip link set tap0 up promisc on&#xA;sudo ip link set dev virbr0 up&#xA;sudo ip link set dev tap0 master virbr0&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This has been enough for me so far.&lt;/p&gt; &lt;p&gt;Note: You may need to enable the &lt;code&gt;rc.local&lt;/code&gt; functionality manually on modern Ubuntu versions. Check out the &lt;a href=&#34;https://raw.githubusercontent.com/kholia/OSX-KVM/master/notes.md&#34;&gt;notes&lt;/a&gt; included in this repository for details.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To passthrough GPUs and other devices, see &lt;a href=&#34;https://raw.githubusercontent.com/kholia/OSX-KVM/master/notes.md#gpu-passthrough-notes&#34;&gt;these notes&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Need a different resolution? Check out the &lt;a href=&#34;https://raw.githubusercontent.com/kholia/OSX-KVM/master/notes.md#change-resolution-in-opencore&#34;&gt;notes&lt;/a&gt; included in this repository.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Trouble with iMessage? Check out the &lt;a href=&#34;https://raw.githubusercontent.com/kholia/OSX-KVM/master/notes.md#trouble-with-imessage&#34;&gt;notes&lt;/a&gt; included in this repository.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Highly recommended macOS tweaks - &lt;a href=&#34;https://github.com/sickcodes/osx-optimizer&#34;&gt;https://github.com/sickcodes/osx-optimizer&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Is This Legal?&lt;/h3&gt; &#xA;&lt;p&gt;The &#34;secret&#34; Apple OSK string is widely available on the Internet. It is also included in a public court document &lt;a href=&#34;http://www.rcfp.org/sites/default/files/docs/20120105_202426_apple_sealing.pdf&#34;&gt;available here&lt;/a&gt;. I am not a lawyer but it seems that Apple&#39;s attempt(s) to get the OSK string treated as a trade secret did not work out. Due to these reasons, the OSK string is freely included in this repository.&lt;/p&gt; &#xA;&lt;p&gt;Please review the &lt;a href=&#34;https://dortania.github.io/OpenCore-Install-Guide/why-oc.html#legality-of-hackintoshing&#34;&gt;&#39;Legality of Hackintoshing&#39; documentation bits from Dortania&#39;s OpenCore Install Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Gabriel Somlo also has &lt;a href=&#34;http://www.contrib.andrew.cmu.edu/~somlo/OSXKVM/&#34;&gt;some thoughts&lt;/a&gt; on the legal aspects involved in running macOS under QEMU/KVM.&lt;/p&gt; &#xA;&lt;p&gt;You may also find &lt;a href=&#34;https://aws.amazon.com/about-aws/whats-new/2020/11/announcing-amazon-ec2-mac-instances-for-macos/&#34;&gt;this &#39;Announcing Amazon EC2 Mac instances for macOS&#39; article&lt;/a&gt; interesting.&lt;/p&gt; &#xA;&lt;p&gt;Note: It is your responsibility to understand, and accept (or not accept) the Apple EULA.&lt;/p&gt; &#xA;&lt;p&gt;Note: This is not legal advice, so please make the proper assessments yourself and discuss with your lawyers if you have any concerns (Text credit: Dortania)&lt;/p&gt; &#xA;&lt;h3&gt;Motivation&lt;/h3&gt; &#xA;&lt;p&gt;My aim is to enable macOS based educational tasks, builds + testing, kernel debugging, reversing, and macOS security research in an easy, reproducible manner without getting &#39;invested&#39; in Apple&#39;s closed ecosystem (too heavily).&lt;/p&gt; &#xA;&lt;p&gt;These &lt;code&gt;Virtual Hackintosh&lt;/code&gt; systems are not intended to replace the genuine physical macOS systems.&lt;/p&gt; &#xA;&lt;p&gt;Personally speaking, this repository has been a way for me to &#39;exit&#39; the Apple ecosystem. It has helped me to test and compare the interoperability of &lt;code&gt;Canon CanoScan LiDE 120&lt;/code&gt; scanner, and &lt;code&gt;Brother HL-2250DN&lt;/code&gt; laser printer. And these devices now work decently enough on modern versions of Ubuntu (Yay for free software). Also, a long time back, I had to completely wipe my (then) brand new &lt;code&gt;MacBook Pro (Retina, 15-inch, Late 2013)&lt;/code&gt; and install Xubuntu on it - as the &lt;code&gt;OS X&lt;/code&gt; kernel kept crashing on it!&lt;/p&gt; &#xA;&lt;p&gt;Backstory: I was a (poor) student in Canada in a previous life and Apple made &lt;a href=&#34;https://github.com/openwall/john/raw/bleeding-jumbo/src/keychain_fmt_plug.c&#34;&gt;my work on cracking Apple Keychains&lt;/a&gt; a lot harder than it needed to be. This is how I got interested in Hackintosh systems.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>saturn-opposition/wechat_analysis</title>
    <updated>2022-09-13T01:37:59Z</updated>
    <id>tag:github.com,2022-09-13:/saturn-opposition/wechat_analysis</id>
    <link href="https://github.com/saturn-opposition/wechat_analysis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;微信聊天记录文本分析&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;用python对微信聊天记录进行文本分析&lt;/h1&gt; &#xA;&lt;h2&gt;项目结构、所需数据&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;--data  存放分析所需的数据&#xA;    --EnMicroMsg.db     从微信中导出的聊天记录数据库&#xA;    --chat_data.csv     将数据库中的聊天记录存储到csv文件，之后分析都从csv读取数据&#xA;    --大连理工大学中文情感词汇本体.xlsx   情感词典&#xA;    --CNstopwords.txt   中文停用词&#xA;    --simhei.ttf        绘制词云指定的字体&#xA;&#xA;--result 存放分析结果、生成的图片&#xA;&#xA;--gernerate_word_cloud.py   生成词云&#xA;&#xA;--sentiment_snownlp.py      调用snownlp生成情感得分，计算情感均值、作折线图&#xA;&#xA;--sentiment_dict.py         使用大连理工情感词典计算情绪分类，作热力图&#xA;&#xA;--others.py                 其他统计&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;具体步骤&lt;/h2&gt; &#xA;&lt;h3&gt;1. 导出聊天记录&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;参考以下两个博客：&#xA;① https://blog.csdn.net/weixin_41746317/article/details/104110161?spm=1001.2101.3001.6650.5&amp;amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EOPENSEARCH%7ERate-5-104110161-blog-126700288.pc_relevant_multi_platform_whitelistv3&amp;amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EOPENSEARCH%7ERate-5-104110161-blog-126700288.pc_relevant_multi_platform_whitelistv3&amp;amp;utm_relevant_index=6&#xA;① https://blog.csdn.net/m0_59452630/article/details/124222235&#xA;破译密码如果①的方法没成功可以试试②的&#xA;&#xA;content列：聊天内容&#xA;type列：信息类型（1代表文本消息，需要用excel筛选一下之后只分析type=1的数据）&#xA;isSend列：0代表对方发送的信息，1代表自己发送的信息&#xA;createTime：时间（暂时不知道怎么恢复成年月日），但是降序排序以后的顺序是聊天记录由近到远的顺序&#xA;自己加了一列newTime，记录聊天记录所在月份，是根据createTime降序排序后，手机上看每月最后几句信息，在excel中搜索，来进行月份划分的&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/saturn-opposition/wechat_analysis/main/result/%E6%95%B0%E6%8D%AE%E7%A4%BA%E4%BE%8B.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2. 生成词云&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;调用generate_word_cloud.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/saturn-opposition/wechat_analysis/main/result/%E8%AF%8D%E4%BA%91-%E4%BB%96%E5%8F%91%E7%9A%84.png&#34; alt=&#34;image&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/saturn-opposition/wechat_analysis/main/result/%E8%AF%8D%E4%BA%91-%E6%88%91%E5%8F%91%E7%9A%84.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3. 计算情感得分均值，作折线图（使用snownlp）&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;① 调用get_sentiment_score()函数，将情感得分保存到csv的sentiment_score列中&#xA;② 调用draw()函数，将情感得分随时间变化值保存到result文件夹中&#xA;&#xA;snownlp得到的分值不一定准确，所以send和receive的得分值都差不多，但也有可能日常的交流就是比较中性的，没有什么大起大落的情感&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/saturn-opposition/wechat_analysis/main/result/%E6%83%85%E6%84%9F%E5%BE%97%E5%88%86%E9%9A%8F%E6%97%B6%E9%97%B4%E5%8F%98%E5%8C%96.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;4. 计算情绪分类，作热力图（使用大连理工情感词典）&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;调用sentiment_dict.py&#xA;注意第115行，如果没有匹配到任何情感词，就记为None，绘制热力图的时候会筛掉None的记录&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/saturn-opposition/wechat_analysis/main/result/%E6%83%85%E6%84%9F%E7%83%AD%E5%8A%9B%E5%9B%BE.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;5. 其他统计绘图&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;others.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/saturn-opposition/wechat_analysis/main/result/%E5%8F%A5%E5%AD%90%E9%95%BF%E5%BA%A6%E5%9D%87%E5%80%BC%E9%9A%8F%E6%97%B6%E9%97%B4%E5%8F%98%E5%8C%96.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dgtlmoon/changedetection.io</title>
    <updated>2022-09-13T01:37:59Z</updated>
    <id>tag:github.com,2022-09-13:/dgtlmoon/changedetection.io</id>
    <link href="https://github.com/dgtlmoon/changedetection.io" rel="alternate"></link>
    <summary type="html">&lt;p&gt;changedetection.io - The best and simplest self-hosted free open source website change detection tracking, monitoring and notification service. An alternative to Visualping, Watchtower etc. Designed for simplicity - the main goal is to simply monitor which websites had a text change for free. Free Open source web page change detection&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Web Site Change Detection, Monitoring and Notification.&lt;/h2&gt; &#xA;&lt;p&gt;Live your data-life pro-actively, track website content changes and receive notifications via Discord, Email, Slack, Telegram and 70+ more&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lemonade.changedetection.io/start?src=github&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot.png&#34; style=&#34;max-width:100%;&#34; alt=&#34;Self-hosted web page change monitoring&#34; title=&#34;Self-hosted web page change monitoring&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dgtlmoon.com/changedetection.io/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io:/github/v/release/dgtlmoon/changedetection.io?style=for-the-badge&#34; alt=&#34;Release Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/dgtlmoon/changedetection.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/dgtlmoon/changedetection.io?style=for-the-badge&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/dgtlmoon/changedetection.io.svg?style=for-the-badge&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/dgtlmoon/changedetection.io/actions/workflows/test-only.yml/badge.svg?branch=master&#34; alt=&#34;changedetection.io&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Know when important content changes, we support notifications via Discord, Telegram, Home-Assistant, Slack, Email and 70+ more&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lemonade.changedetection.io/start&#34;&gt;&lt;strong&gt;Don&#39;t have time? Let us host it for you! try our $6.99/month subscription - use our proxies and support!&lt;/strong&gt;&lt;/a&gt; , &lt;em&gt;half the price of other website change monitoring services and comes with unlimited watches &amp;amp; checks!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatic Updates, Automatic Backups, No Heroku &#34;paused application&#34;, don&#39;t miss a change!&lt;/li&gt; &#xA; &lt;li&gt;Javascript browser included&lt;/li&gt; &#xA; &lt;li&gt;Unlimited checks and watches!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Example use cases&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Products and services have a change in pricing&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Out of stock notification&lt;/em&gt; and &lt;em&gt;Back In stock notification&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Governmental department updates (changes are often only on their websites)&lt;/li&gt; &#xA; &lt;li&gt;New software releases, security advisories when you&#39;re not on their mailing list.&lt;/li&gt; &#xA; &lt;li&gt;Festivals with changes&lt;/li&gt; &#xA; &lt;li&gt;Realestate listing changes&lt;/li&gt; &#xA; &lt;li&gt;Know when your favourite whiskey is on sale, or other special deals are announced before anyone else&lt;/li&gt; &#xA; &lt;li&gt;COVID related news from government websites&lt;/li&gt; &#xA; &lt;li&gt;University/organisation news from their website&lt;/li&gt; &#xA; &lt;li&gt;Detect and monitor changes in JSON API responses&lt;/li&gt; &#xA; &lt;li&gt;JSON API monitoring and alerting&lt;/li&gt; &#xA; &lt;li&gt;Changes in legal and other documents&lt;/li&gt; &#xA; &lt;li&gt;Trigger API calls via notifications when text appears on a website&lt;/li&gt; &#xA; &lt;li&gt;Glue together APIs using the JSON filter and JSON notifications&lt;/li&gt; &#xA; &lt;li&gt;Create RSS feeds based on changes in web content&lt;/li&gt; &#xA; &lt;li&gt;Monitor HTML source code for unexpected changes, strengthen your PCI compliance&lt;/li&gt; &#xA; &lt;li&gt;You have a very sensitive list of URLs to watch and you do &lt;em&gt;not&lt;/em&gt; want to use the paid alternatives. (Remember, &lt;em&gt;you&lt;/em&gt; are the product)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Need an actual Chrome runner with Javascript support? We support fetching via WebDriver and Playwright!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Key Features&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lots of trigger filters, such as &#34;Trigger on text&#34;, &#34;Remove text by selector&#34;, &#34;Ignore text&#34;, &#34;Extract text&#34;, also using regular-expressions!&lt;/li&gt; &#xA; &lt;li&gt;Target elements with xPath and CSS Selectors, Easily monitor complex JSON with JsonPath rules&lt;/li&gt; &#xA; &lt;li&gt;Switch between fast non-JS and Chrome JS based &#34;fetchers&#34;&lt;/li&gt; &#xA; &lt;li&gt;Easily specify how often a site should be checked&lt;/li&gt; &#xA; &lt;li&gt;Execute JS before extracting text (Good for logging in, see examples in the UI!)&lt;/li&gt; &#xA; &lt;li&gt;Override Request Headers, Specify &lt;code&gt;POST&lt;/code&gt; or &lt;code&gt;GET&lt;/code&gt; and other methods&lt;/li&gt; &#xA; &lt;li&gt;Use the &#34;Visual Selector&#34; to help target specific elements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;h3&gt;Examine differences in content.&lt;/h3&gt; &#xA;&lt;p&gt;Easily see what changed, examine by word, line, or individual character.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot-diff.png&#34; style=&#34;max-width:100%;&#34; alt=&#34;Self-hosted web page change monitoring context difference &#34; title=&#34;Self-hosted web page change monitoring context difference &#34;&gt; &#xA;&lt;p&gt;Please &lt;span&gt;⭐&lt;/span&gt; star &lt;span&gt;⭐&lt;/span&gt; this project and help it grow! &lt;a href=&#34;https://github.com/dgtlmoon/changedetection.io/&#34;&gt;https://github.com/dgtlmoon/changedetection.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Filter by elements using the Visual Selector tool.&lt;/h3&gt; &#xA;&lt;p&gt;Available when connected to a &lt;a href=&#34;https://github.com/dgtlmoon/changedetection.io/wiki/Playwright-content-fetcher&#34;&gt;playwright content fetcher&lt;/a&gt; (included as part of our subscription service)&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/visualselector-anim.gif&#34; style=&#34;max-width:100%;&#34; alt=&#34;Self-hosted web page change monitoring context difference &#34; title=&#34;Self-hosted web page change monitoring context difference &#34;&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;With Docker composer, just clone this repository and..&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Docker standalone&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d --restart always -p &#34;127.0.0.1:5000:5000&#34; -v datastore-volume:/datastore --name changedetection.io dgtlmoon/changedetection.io&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;:latest&lt;/code&gt; tag is our latest stable release, &lt;code&gt;:dev&lt;/code&gt; tag is our bleeding edge &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;See the install instructions at the wiki &lt;a href=&#34;https://github.com/dgtlmoon/changedetection.io/wiki/Microsoft-Windows&#34;&gt;https://github.com/dgtlmoon/changedetection.io/wiki/Microsoft-Windows&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Python Pip&lt;/h3&gt; &#xA;&lt;p&gt;Check out our pypi page &lt;a href=&#34;https://pypi.org/project/changedetection.io/&#34;&gt;https://pypi.org/project/changedetection.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pip3 install changedetection.io&#xA;$ changedetection.io -d /path/to/empty/data/dir -p 5000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then visit &lt;a href=&#34;http://127.0.0.1:5000&#34;&gt;http://127.0.0.1:5000&lt;/a&gt; , You should now be able to access the UI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Now with per-site configurable support for using a fast built in HTTP fetcher or use a Chrome based fetcher for monitoring of JavaScript websites!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Updating changedetection.io&lt;/h2&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull dgtlmoon/changedetection.io&#xA;docker kill $(docker ps -a|grep changedetection.io|awk &#39;{print $1}&#39;)&#xA;docker rm $(docker ps -a|grep changedetection.io|awk &#39;{print $1}&#39;)&#xA;docker run -d --restart always -p &#34;127.0.0.1:5000:5000&#34; -v datastore-volume:/datastore --name changedetection.io dgtlmoon/changedetection.io&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;docker-compose&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose pull &amp;amp;&amp;amp; docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the wiki for more information &lt;a href=&#34;https://github.com/dgtlmoon/changedetection.io/wiki&#34;&gt;https://github.com/dgtlmoon/changedetection.io/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Filters&lt;/h2&gt; &#xA;&lt;p&gt;XPath, JSONPath and CSS support comes baked in! You can be as specific as you need, use XPath exported from various XPath element query creation tools.&lt;/p&gt; &#xA;&lt;p&gt;(We support LXML &lt;code&gt;re:test&lt;/code&gt;, &lt;code&gt;re:math&lt;/code&gt; and &lt;code&gt;re:replace&lt;/code&gt;.)&lt;/p&gt; &#xA;&lt;h2&gt;Notifications&lt;/h2&gt; &#xA;&lt;p&gt;ChangeDetection.io supports a massive amount of notifications (including email, office365, custom APIs, etc) when a web-page has a change detected thanks to the &lt;a href=&#34;https://github.com/caronc/apprise&#34;&gt;apprise&lt;/a&gt; library. Simply set one or more notification URL&#39;s in the &lt;em&gt;[edit]&lt;/em&gt; tab of that watch.&lt;/p&gt; &#xA;&lt;p&gt;Just some examples&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;discord://webhook_id/webhook_token&#xA;flock://app_token/g:channel_id&#xA;gitter://token/room&#xA;gchat://workspace/key/token&#xA;msteams://TokenA/TokenB/TokenC/&#xA;o365://TenantID:AccountEmail/ClientID/ClientSecret/TargetEmail&#xA;rocket://user:password@hostname/#Channel&#xA;mailto://user:pass@example.com?to=receivingAddress@example.com&#xA;json://someserver.com/custom-api&#xA;syslog://&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/caronc/apprise#popular-notification-services&#34;&gt;And everything else in this list!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot-notifications.png&#34; style=&#34;max-width:100%;&#34; alt=&#34;Self-hosted web page change monitoring notifications&#34; title=&#34;Self-hosted web page change monitoring notifications&#34;&gt; &#xA;&lt;p&gt;Now you can also customise your notification content!&lt;/p&gt; &#xA;&lt;h2&gt;JSON API Monitoring&lt;/h2&gt; &#xA;&lt;p&gt;Detect changes and monitor data in JSON API&#39;s by using the built-in JSONPath selectors as a filter / selector.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/json-filter-field-example.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This will re-parse the JSON and apply formatting to the text, making it super easy to monitor and detect changes in JSON API results&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/json-diff-example.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Parse JSON embedded in HTML!&lt;/h3&gt; &#xA;&lt;p&gt;When you enable a &lt;code&gt;json:&lt;/code&gt; filter, you can even automatically extract and parse embedded JSON inside a HTML page! Amazingly handy for sites that build content based on JSON, such as many e-commerce websites.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;&#xA;...&#xA;&amp;lt;script type=&#34;application/ld+json&#34;&amp;gt;&#xA;  {&#34;@context&#34;:&#34;http://schema.org&#34;,&#34;@type&#34;:&#34;Product&#34;,&#34;name&#34;:&#34;Nan Optipro Stage 1 Baby Formula  800g&#34;,&#34;price&#34;: 23.50 }&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;json:$.price&lt;/code&gt; would give &lt;code&gt;23.50&lt;/code&gt;, or you can extract the whole structure&lt;/p&gt; &#xA;&lt;h2&gt;Proxy configuration&lt;/h2&gt; &#xA;&lt;p&gt;See the wiki &lt;a href=&#34;https://github.com/dgtlmoon/changedetection.io/wiki/Proxy-configuration&#34;&gt;https://github.com/dgtlmoon/changedetection.io/wiki/Proxy-configuration&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Raspberry Pi support?&lt;/h2&gt; &#xA;&lt;p&gt;Raspberry Pi and linux/arm/v6 linux/arm/v7 arm64 devices are supported! See the wiki for &lt;a href=&#34;https://github.com/dgtlmoon/changedetection.io/wiki/Fetching-pages-with-WebDriver&#34;&gt;details&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support us&lt;/h2&gt; &#xA;&lt;p&gt;Do you use changedetection.io to make money? does it save you time or money? Does it make your life easier? less stressful? Remember, we write this software when we should be doing actual paid work, we have to buy food and pay rent just like you.&lt;/p&gt; &#xA;&lt;p&gt;Firstly, consider taking out a &lt;a href=&#34;https://lemonade.changedetection.io/start&#34;&gt;change detection monthly subscription - unlimited checks and watches&lt;/a&gt; , even if you don&#39;t use it, you still get the warm fuzzy feeling of helping out the project. (And who knows, you might just use it!)&lt;/p&gt; &#xA;&lt;p&gt;Or directly donate an amount PayPal &lt;a href=&#34;https://www.paypal.com/donate/?hosted_button_id=7CP6HR9ZCNDYJ&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or BTC &lt;code&gt;1PLFN327GyUarpJd7nVe7Reqg9qHx5frNn&lt;/code&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/btc-support.png&#34; style=&#34;max-width:50%;&#34; alt=&#34;Support us!&#34;&gt; &#xA;&lt;h2&gt;Commercial Support&lt;/h2&gt; &#xA;&lt;p&gt;I offer commercial support, this software is depended on by network security, aerospace , data-science and data-journalist professionals just to name a few, please reach out at &lt;a href=&#34;mailto:dgtlmoon@gmail.com&#34;&gt;dgtlmoon@gmail.com&lt;/a&gt; for any enquiries, I am more than glad to work with your organisation to further the possibilities of what can be done with changedetection.io&lt;/p&gt;</summary>
  </entry>
</feed>