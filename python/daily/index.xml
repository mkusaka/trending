<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-14T01:36:07Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JoshuaC215/agent-service-toolkit</title>
    <updated>2025-01-14T01:36:07Z</updated>
    <id>tag:github.com,2025-01-14:/JoshuaC215/agent-service-toolkit</id>
    <link href="https://github.com/JoshuaC215/agent-service-toolkit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Full toolkit for running an AI agent service built with LangGraph, FastAPI and Streamlit&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🧰 AI Agent Service Toolkit&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/JoshuaC215/agent-service-toolkit/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/JoshuaC215/agent-service-toolkit/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/JoshuaC215/agent-service-toolkit&#34;&gt;&lt;img src=&#34;https://codecov.io/github/JoshuaC215/agent-service-toolkit/graph/badge.svg?token=5MTJSYWD05&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JoshuaC215/agent-service-toolkit/raw/main/pyproject.toml&#34;&gt;&lt;img src=&#34;https://img.shields.io/python/required-version-toml?tomlFilePath=https%3A%2F%2Fraw.githubusercontent.com%2FJoshuaC215%2Fagent-service-toolkit%2Frefs%2Fheads%2Fmain%2Fpyproject.toml&#34; alt=&#34;Python Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JoshuaC215/agent-service-toolkit/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/JoshuaC215/agent-service-toolkit&#34; alt=&#34;GitHub License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://agent-service-toolkit.streamlit.app/&#34;&gt;&lt;img src=&#34;https://static.streamlit.io/badges/streamlit_badge_black_red.svg?sanitize=true&#34; alt=&#34;Streamlit App&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A full toolkit for running an AI agent service built with LangGraph, FastAPI and Streamlit.&lt;/p&gt; &#xA;&lt;p&gt;It includes a &lt;a href=&#34;https://langchain-ai.github.io/langgraph/&#34;&gt;LangGraph&lt;/a&gt; agent, a &lt;a href=&#34;https://fastapi.tiangolo.com/&#34;&gt;FastAPI&lt;/a&gt; service to serve it, a client to interact with the service, and a &lt;a href=&#34;https://streamlit.io/&#34;&gt;Streamlit&lt;/a&gt; app that uses the client to provide a chat interface. Data structures and settings are built with &lt;a href=&#34;https://github.com/pydantic/pydantic&#34;&gt;Pydantic&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project offers a template for you to easily build and run your own agents using the LangGraph framework. It demonstrates a complete setup from agent definition to user interface, making it easier to get started with LangGraph-based projects by providing a full, robust toolkit.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=VqQti9nGoe4&#34;&gt;🎥 Watch a video walkthrough of the repo and app&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://agent-service-toolkit.streamlit.app/&#34;&gt;Try the app!&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://agent-service-toolkit.streamlit.app/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JoshuaC215/agent-service-toolkit/main/media/app_screenshot.png&#34; width=&#34;600&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Quickstart&lt;/h3&gt; &#xA;&lt;p&gt;Run directly in python&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# At least one LLM API key is required&#xA;echo &#39;OPENAI_API_KEY=your_openai_api_key&#39; &amp;gt;&amp;gt; .env&#xA;&#xA;# uv is recommended but &#34;pip install .&#34; also works&#xA;pip install uv&#xA;uv sync --frozen&#xA;# &#34;uv sync&#34; creates .venv automatically&#xA;source .venv/bin/activate&#xA;python src/run_service.py&#xA;&#xA;# In another shell&#xA;source .venv/bin/activate&#xA;streamlit run src/streamlit_app.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run with docker&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;echo &#39;OPENAI_API_KEY=your_openai_api_key&#39; &amp;gt;&amp;gt; .env&#xA;docker compose watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Architecture Diagram&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/JoshuaC215/agent-service-toolkit/main/media/agent_architecture.png&#34; width=&#34;600&#34;&gt; &#xA;&lt;h3&gt;Key Features&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;LangGraph Agent&lt;/strong&gt;: A customizable agent built using the LangGraph framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;FastAPI Service&lt;/strong&gt;: Serves the agent with both streaming and non-streaming endpoints.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Advanced Streaming&lt;/strong&gt;: A novel approach to support both token-based and message-based streaming.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Content Moderation&lt;/strong&gt;: Implements LlamaGuard for content moderation (requires Groq API key).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Streamlit Interface&lt;/strong&gt;: Provides a user-friendly chat interface for interacting with the agent.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multiple Agent Support&lt;/strong&gt;: Run multiple agents in the service and call by URL path&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Asynchronous Design&lt;/strong&gt;: Utilizes async/await for efficient handling of concurrent requests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Feedback Mechanism&lt;/strong&gt;: Includes a star-based feedback system integrated with LangSmith.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dynamic Metadata&lt;/strong&gt;: &lt;code&gt;/info&lt;/code&gt; endpoint provides dynamically configured metadata about the service and available agents and models.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Docker Support&lt;/strong&gt;: Includes Dockerfiles and a docker compose file for easy development and deployment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Testing&lt;/strong&gt;: Includes robust unit and integration tests for the full repo.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Key Files&lt;/h3&gt; &#xA;&lt;p&gt;The repository is structured as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;src/agents/&lt;/code&gt;: Defines several agents with different capabilities&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;src/schema/&lt;/code&gt;: Defines the protocol schema&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;src/core/&lt;/code&gt;: Core modules including LLM definition and settings&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;src/service/service.py&lt;/code&gt;: FastAPI service to serve the agents&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;src/client/client.py&lt;/code&gt;: Client to interact with the agent service&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;src/streamlit_app.py&lt;/code&gt;: Streamlit app providing a chat interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tests/&lt;/code&gt;: Unit and integration tests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why LangGraph?&lt;/h2&gt; &#xA;&lt;p&gt;AI agents are increasingly being built with more explicitly structured and tightly controlled &lt;a href=&#34;https://bair.berkeley.edu/blog/2024/02/18/compound-ai-systems/&#34;&gt;Compound AI Systems&lt;/a&gt;, with careful attention to the &lt;a href=&#34;https://blog.langchain.dev/what-is-a-cognitive-architecture/&#34;&gt;cognitive architecture&lt;/a&gt;. At the time of this repo&#39;s creation, LangGraph seems like the most advanced open source framework for building such systems, with a high degree of control as well as support for features like concurrent execution, cycles in the graph, streaming results, built-in observability, and the rich ecosystem around LangChain.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;ve spent a decent amount of time building with LangChain over the past year and experienced some of the commonly cited pain points. In building this out with LangGraph I found a few similar issues, but overall I like the direction and I&#39;m happy with my choice to use it.&lt;/p&gt; &#xA;&lt;p&gt;With that said, there are several other interesting projects in this space that are worth calling out, and I hope to spend more time building with them soon:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.llamaindex.ai/blog/introducing-workflows-beta-a-new-way-to-create-complex-ai-applications-with-llamaindex&#34;&gt;LlamaIndex Workflows&lt;/a&gt; and &lt;a href=&#34;https://github.com/run-llama/llama-agents&#34;&gt;llama-agents&lt;/a&gt;: LlamaIndex Workflows launched the day I started working on this. I&#39;ve generally really liked the experience building with LlamaIndex and this looks very promising.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stanfordnlp/dspy&#34;&gt;DSPy&lt;/a&gt;: The DSPy optimizer and approach also seems super interesting and promising. But the creator &lt;a href=&#34;https://github.com/stanfordnlp/dspy/issues/703#issuecomment-2016598529&#34;&gt;has stated&lt;/a&gt; they aren&#39;t focusing on agents yet. I will probably experiment with building some of the specific nodes in more complex agents using DSPy in the future.&lt;/li&gt; &#xA; &lt;li&gt;I know there are more springing up regularly, such as I recently came across &lt;a href=&#34;https://github.com/PrefectHQ/ControlFlow&#34;&gt;Prefect ControlFlow&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup and Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/JoshuaC215/agent-service-toolkit.git&#xA;cd agent-service-toolkit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set up environment variables: Create a &lt;code&gt;.env&lt;/code&gt; file in the root directory. At least one LLM API key or configuration is required. See the &lt;a href=&#34;https://raw.githubusercontent.com/JoshuaC215/agent-service-toolkit/main/.env.example&#34;&gt;&lt;code&gt;.env.example&lt;/code&gt; file&lt;/a&gt; for a full list of available environment variables, including a variety of model provider API keys, header-based authentication, LangSmith tracing, testing and development modes, and OpenWeatherMap API key.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can now run the agent service and the Streamlit app locally, either with Docker or just using Python. The Docker setup is recommended for simpler environment setup and immediate reloading of the services when you make changes to your code.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Docker Setup&lt;/h3&gt; &#xA;&lt;p&gt;This project includes a Docker setup for easy development and deployment. The &lt;code&gt;compose.yaml&lt;/code&gt; file defines two services: &lt;code&gt;agent_service&lt;/code&gt; and &lt;code&gt;streamlit_app&lt;/code&gt;. The &lt;code&gt;Dockerfile&lt;/code&gt; for each is in their respective directories.&lt;/p&gt; &#xA;&lt;p&gt;For local development, we recommend using &lt;a href=&#34;https://docs.docker.com/compose/file-watch/&#34;&gt;docker compose watch&lt;/a&gt;. This feature allows for a smoother development experience by automatically updating your containers when changes are detected in your source code.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure you have Docker and Docker Compose (&amp;gt;=&lt;a href=&#34;https://docs.docker.com/compose/release-notes/#2230&#34;&gt;2.23.0&lt;/a&gt;) installed on your system.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build and launch the services in watch mode:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker compose watch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The services will now automatically update when you make changes to your code:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Changes in the relevant python files and directories will trigger updates for the relevantservices.&lt;/li&gt; &#xA;   &lt;li&gt;NOTE: If you make changes to the &lt;code&gt;pyproject.toml&lt;/code&gt; or &lt;code&gt;uv.lock&lt;/code&gt; files, you will need to rebuild the services by running &lt;code&gt;docker compose up --build&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Access the Streamlit app by navigating to &lt;code&gt;http://localhost:8501&lt;/code&gt; in your web browser.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The agent service API will be available at &lt;code&gt;http://localhost:80&lt;/code&gt;. You can also use the OpenAPI docs at &lt;code&gt;http://localhost:80/redoc&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use &lt;code&gt;docker compose down&lt;/code&gt; to stop the services.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This setup allows you to develop and test your changes in real-time without manually restarting the services.&lt;/p&gt; &#xA;&lt;h3&gt;Local development without Docker&lt;/h3&gt; &#xA;&lt;p&gt;You can also run the agent service and the Streamlit app locally without Docker, just using a Python virtual environment.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a virtual environment and install dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install uv&#xA;uv sync --frozen&#xA;source .venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the FastAPI server:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python src/run_service.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In a separate terminal, run the Streamlit app:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;streamlit run src/streamlit_app.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open your browser and navigate to the URL provided by Streamlit (usually &lt;code&gt;http://localhost:8501&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Development with LangGraph Studio&lt;/h3&gt; &#xA;&lt;p&gt;The agent supports &lt;a href=&#34;https://github.com/langchain-ai/langgraph-studio&#34;&gt;LangGraph Studio&lt;/a&gt;, a new IDE for developing agents in LangGraph.&lt;/p&gt; &#xA;&lt;p&gt;You can simply install LangGraph Studio, add your &lt;code&gt;.env&lt;/code&gt; file to the root directory as described above, and then launch LangGraph studio pointed at the root directory. Customize &lt;code&gt;langgraph.json&lt;/code&gt; as needed.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Currently the tests need to be run using the local development without Docker setup. To run the tests for the agent service:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure you&#39;re in the project root directory and have activated your virtual environment.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the development dependencies and pre-commit hooks:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install uv&#xA;uv sync --frozen&#xA;pre-commit install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the tests using pytest:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pytest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Customization&lt;/h2&gt; &#xA;&lt;p&gt;To customize the agent for your own use case:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add your new agent to the &lt;code&gt;src/agents&lt;/code&gt; directory. You can copy &lt;code&gt;research_assistant.py&lt;/code&gt; or &lt;code&gt;chatbot.py&lt;/code&gt; and modify it to change the agent&#39;s behavior and tools.&lt;/li&gt; &#xA; &lt;li&gt;Import and add your new agent to the &lt;code&gt;agents&lt;/code&gt; dictionary in &lt;code&gt;src/agents/agents.py&lt;/code&gt;. Your agent can be called by &lt;code&gt;/&amp;lt;your_agent_name&amp;gt;/invoke&lt;/code&gt; or &lt;code&gt;/&amp;lt;your_agent_name&amp;gt;/stream&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Adjust the Streamlit interface in &lt;code&gt;src/streamlit_app.py&lt;/code&gt; to match your agent&#39;s capabilities.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Building other apps on the AgentClient&lt;/h2&gt; &#xA;&lt;p&gt;The repo includes a generic &lt;code&gt;src/client/client.AgentClient&lt;/code&gt; that can be used to interact with the agent service. This client is designed to be flexible and can be used to build other apps on top of the agent. It supports both synchronous and asynchronous invocations, and streaming and non-streaming requests.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;code&gt;src/run_client.py&lt;/code&gt; file for full examples of how to use the &lt;code&gt;AgentClient&lt;/code&gt;. A quick example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from client import AgentClient&#xA;client = AgentClient()&#xA;&#xA;response = client.invoke(&#34;Tell me a brief joke?&#34;)&#xA;response.pretty_print()&#xA;# ================================== Ai Message ==================================&#xA;#&#xA;# A man walked into a library and asked the librarian, &#34;Do you have any books on Pavlov&#39;s dogs and Schrödinger&#39;s cat?&#34;&#xA;# The librarian replied, &#34;It rings a bell, but I&#39;m not sure if it&#39;s here or not.&#34;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Please feel free to submit a Pull Request.&lt;/p&gt; &#xA;&lt;h3&gt;Roadmap&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Get LlamaGuard working for content moderation (anyone know a reliable and fast hosted version?)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add more sophisticated tools for the research assistant&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Increase test coverage and add CI pipeline&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add support for multiple agents running on the same service, including non-chat agent&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Service metadata endpoint &lt;code&gt;/info&lt;/code&gt; and dynamic app configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; More ideas? File an issue or create a discussion!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License - see the LICENSE file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nautechsystems/nautilus_trader</title>
    <updated>2025-01-14T01:36:07Z</updated>
    <id>tag:github.com,2025-01-14:/nautechsystems/nautilus_trader</id>
    <link href="https://github.com/nautechsystems/nautilus_trader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A high-performance algorithmic trading platform and event-driven backtester&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://github.com/nautechsystems/nautilus_trader/raw/develop/docs/_images/nautilus-trader-logo.png&#34; width=&#34;500&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codecov.io/gh/nautechsystems/nautilus_trader&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/nautechsystems/nautilus_trader/branch/master/graph/badge.svg?token=DXO9QQI40H&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codspeed.io/nautechsystems/nautilus_trader&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://codspeed.io/badge.json&#34; alt=&#34;codspeed&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/pypi/pyversions/nautilus_trader&#34; alt=&#34;pythons&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/nautilus_trader&#34; alt=&#34;pypi-version&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/format/nautilus_trader?color=blue&#34; alt=&#34;pypi-format&#34;&gt; &lt;a href=&#34;https://pepy.tech/project/nautilus-trader&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/nautilus-trader&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Branch&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Version&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;master&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fnautechsystems%2Fnautilus_trader%2Fmaster%2Fversion.json&#34; alt=&#34;version&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/nautechsystems/nautilus_trader/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/nautechsystems/nautilus_trader/actions/workflows/build.yml/badge.svg?branch=master&#34; alt=&#34;build&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;nightly&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fnautechsystems%2Fnautilus_trader%2Fnightly%2Fversion.json&#34; alt=&#34;version&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/nautechsystems/nautilus_trader/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/nautechsystems/nautilus_trader/actions/workflows/build.yml/badge.svg?branch=nightly&#34; alt=&#34;build&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;develop&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fnautechsystems%2Fnautilus_trader%2Fdevelop%2Fversion.json&#34; alt=&#34;version&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/nautechsystems/nautilus_trader/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/nautechsystems/nautilus_trader/actions/workflows/build.yml/badge.svg?branch=develop&#34; alt=&#34;build&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Platform&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Rust&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Python&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Linux (x86_64)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1.84.0+&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;3.11, 3.12&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;macOS (arm64)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1.84.0+&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;3.11, 3.12&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Windows (x86_64)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1.84.0+&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;3.11, 3.12&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/AUWVs3XaCS&#34;&gt;&lt;img src=&#34;https://dcbadge.limes.pink/api/server/AUWVs3XaCS&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Docs&lt;/strong&gt;: &lt;a href=&#34;https://nautilustrader.io/docs/&#34;&gt;https://nautilustrader.io/docs/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Website&lt;/strong&gt;: &lt;a href=&#34;https://nautilustrader.io&#34;&gt;https://nautilustrader.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Support&lt;/strong&gt;: &lt;a href=&#34;mailto:support@nautilustrader.io&#34;&gt;support@nautilustrader.io&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;NautilusTrader is an open-source, high-performance, production-grade algorithmic trading platform, providing quantitative traders with the ability to backtest portfolios of automated trading strategies on historical data with an event-driven engine, and also deploy those same strategies live, with no code changes.&lt;/p&gt; &#xA;&lt;p&gt;The platform is &lt;em&gt;AI-first&lt;/em&gt;, designed to develop and deploy algorithmic trading strategies within a highly performant and robust Python-native environment. This helps to address the parity challenge of keeping the Python research/backtest environment consistent with the production live trading environment.&lt;/p&gt; &#xA;&lt;p&gt;NautilusTrader&#39;s design, architecture, and implementation philosophy holds software correctness and safety at the highest level, with the aim of supporting Python-native, mission-critical, trading system backtesting and live deployment workloads.&lt;/p&gt; &#xA;&lt;p&gt;The platform is also universal and asset-class-agnostic — with any REST, WebSocket or FIX API able to be integrated via modular adapters. It supports high-frequency trading across a wide range of asset classes and instrument types including FX, Equities, Futures, Options, Crypto and Betting, enabling seamless operations across multiple venues simultaneously.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt;: Core is written in Rust with asynchronous networking using &lt;a href=&#34;https://crates.io/crates/tokio&#34;&gt;tokio&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reliable&lt;/strong&gt;: Type safety and thread safety through Rust. Redis-backed performant state persistence (optional).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Portable&lt;/strong&gt;: OS independent, runs on Linux, macOS, and Windows. Deploy using Docker.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Flexible&lt;/strong&gt;: Modular adapters mean any REST, WebSocket, or FIX API can be integrated.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Advanced&lt;/strong&gt;: Time in force &lt;code&gt;IOC&lt;/code&gt;, &lt;code&gt;FOK&lt;/code&gt;, &lt;code&gt;GTD&lt;/code&gt;, &lt;code&gt;AT_THE_OPEN&lt;/code&gt;, &lt;code&gt;AT_THE_CLOSE&lt;/code&gt;, advanced order types and conditional triggers. Execution instructions &lt;code&gt;post-only&lt;/code&gt;, &lt;code&gt;reduce-only&lt;/code&gt;, and icebergs. Contingency order lists including &lt;code&gt;OCO&lt;/code&gt;, &lt;code&gt;OTO&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customizable&lt;/strong&gt;: Add user-defined custom components, or assemble entire systems from scratch leveraging the cache and message bus.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Backtesting&lt;/strong&gt;: Run with multiple venues, instruments and strategies simultaneously using historical quote tick, trade tick, bar, order book and custom data with nanosecond resolution.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Live&lt;/strong&gt;: Use identical strategy implementations between backtesting and live deployments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-venue&lt;/strong&gt;: Multiple venue capabilities facilitate market-making and statistical arbitrage strategies.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AI Training&lt;/strong&gt;: Backtest engine fast enough to be used to train AI trading agents (RL/ES).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/nautechsystems/nautilus_trader/raw/develop/docs/_images/nautilus-art.png?raw=true&#34; alt=&#34;Alt text&#34; title=&#34;nautilus&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;nautilus - from ancient Greek &#39;sailor&#39; and naus &#39;ship&#39;.&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;em&gt;The nautilus shell consists of modular chambers with a growth factor which approximates a logarithmic spiral. The idea is that this can be translated to the aesthetics of design and architecture.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Why NautilusTrader?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Highly performant event-driven Python&lt;/strong&gt;: Native binary core components.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Parity between backtesting and live trading&lt;/strong&gt;: Identical strategy code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reduced operational risk&lt;/strong&gt;: Enhanced risk management functionality, logical accuracy, and type safety.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Highly extendable&lt;/strong&gt;: Message bus, custom components and actors, custom data, custom adapters.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Traditionally, trading strategy research and backtesting might be conducted in Python using vectorized methods, with the strategy then needing to be reimplemented in a more event-driven way using C++, C#, Java or other statically typed language(s). The reasoning here is that vectorized backtesting code cannot express the granular time and event dependent complexity of real-time trading, where compiled languages have proven to be more suitable due to their inherently higher performance, and type safety.&lt;/p&gt; &#xA;&lt;p&gt;One of the key advantages of NautilusTrader here, is that this reimplementation step is now circumvented - as the critical core components of the platform have all been written entirely in &lt;a href=&#34;https://www.rust-lang.org/&#34;&gt;Rust&lt;/a&gt; or &lt;a href=&#34;https://cython.org/&#34;&gt;Cython&lt;/a&gt;. This means we&#39;re using the right tools for the job, where systems programming languages compile performant binaries, with CPython C extension modules then able to offer a Python-native environment, suitable for professional quantitative traders and trading firms.&lt;/p&gt; &#xA;&lt;h2&gt;Why Python?&lt;/h2&gt; &#xA;&lt;p&gt;Python was originally created decades ago as a simple scripting language with a clean straight forward syntax. It has since evolved into a fully fledged general purpose object-oriented programming language. Based on the TIOBE index, Python is currently the most popular programming language in the world. Not only that, Python has become the &lt;em&gt;de facto lingua franca&lt;/em&gt; of data science, machine learning, and artificial intelligence.&lt;/p&gt; &#xA;&lt;p&gt;The language out of the box is not without its drawbacks however, especially in the context of implementing large performance-critical systems. Cython has addressed a lot of these issues, offering all the advantages of a statically typed language, embedded into Pythons rich ecosystem of software libraries and developer/user communities.&lt;/p&gt; &#xA;&lt;h2&gt;What is Rust?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.rust-lang.org/&#34;&gt;Rust&lt;/a&gt; is a multi-paradigm programming language designed for performance and safety, especially safe concurrency. Rust is blazingly fast and memory-efficient (comparable to C and C++) with no garbage collector. It can power mission-critical systems, run on embedded devices, and easily integrates with other languages.&lt;/p&gt; &#xA;&lt;p&gt;Rust’s rich type system and ownership model guarantees memory-safety and thread-safety deterministically — eliminating many classes of bugs at compile-time.&lt;/p&gt; &#xA;&lt;p&gt;The project increasingly utilizes Rust for core performance-critical components. Python language binding is handled through Cython and &lt;a href=&#34;https://pyo3.rs/latest&#34;&gt;PyO3&lt;/a&gt;, with static libraries linked at compile-time before the wheel binaries are packaged, so a user does not need to have Rust installed to run NautilusTrader.&lt;/p&gt; &#xA;&lt;p&gt;This project makes the &lt;a href=&#34;https://raphlinus.github.io/rust/2020/01/18/soundness-pledge.html&#34;&gt;Soundness Pledge&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;“The intent of this project is to be free of soundness bugs. The developers will do their best to avoid them, and welcome help in analyzing and fixing them.”&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;MSRV:&lt;/strong&gt; NautilusTrader relies heavily on improvements in the Rust language and compiler. As a result, the Minimum Supported Rust Version (MSRV) is generally equal to the latest stable release of Rust.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Architecture (data flow)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/nautechsystems/nautilus_trader/raw/develop/docs/_images/architecture-overview.png?raw=true&#34; alt=&#34;Architecture&#34; title=&#34;architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Integrations&lt;/h2&gt; &#xA;&lt;p&gt;NautilusTrader is modularly designed to work with &lt;em&gt;adapters&lt;/em&gt;, enabling connectivity to trading venues and data providers by converting their raw APIs into a unified interface.&lt;/p&gt; &#xA;&lt;p&gt;The following integrations are currently supported:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Name&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;ID&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Status&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Docs&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://betfair.com&#34;&gt;Betfair&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;BETFAIR&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sports Betting Exchange&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stable-green&#34; alt=&#34;status&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://nautilustrader.io/docs/latest/integrations/betfair.html&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://binance.com&#34;&gt;Binance&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;BINANCE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Crypto Exchange (CEX)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stable-green&#34; alt=&#34;status&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://nautilustrader.io/docs/latest/integrations/binance.html&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://binance.us&#34;&gt;Binance US&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;BINANCE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Crypto Exchange (CEX)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stable-green&#34; alt=&#34;status&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://nautilustrader.io/docs/latest/integrations/binance.html&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.binance.com/en/futures&#34;&gt;Binance Futures&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;BINANCE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Crypto Exchange (CEX)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stable-green&#34; alt=&#34;status&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://nautilustrader.io/docs/latest/integrations/binance.html&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.bybit.com&#34;&gt;Bybit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;BYBIT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Crypto Exchange (CEX)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stable-green&#34; alt=&#34;status&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://nautilustrader.io/docs/latest/integrations/bybit.html&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://databento.com&#34;&gt;Databento&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DATABENTO&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Data Provider&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stable-green&#34; alt=&#34;status&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://nautilustrader.io/docs/latest/integrations/databento.html&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://dydx.exchange/&#34;&gt;dYdX&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DYDX&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Crypto Exchange (DEX)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stable-green&#34; alt=&#34;status&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://nautilustrader.io/docs/latest/integrations/dydx.html&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.interactivebrokers.com&#34;&gt;Interactive Brokers&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;INTERACTIVE_BROKERS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Brokerage (multi-venue)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stable-green&#34; alt=&#34;status&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://nautilustrader.io/docs/latest/integrations/ib.html&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://okx.com&#34;&gt;OKX&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;OKX&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Crypto Exchange (CEX)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/building-orange&#34; alt=&#34;status&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://nautilustrader.io/docs/latest/integrations/okx.html&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://polymarket.com&#34;&gt;Polymarket&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;POLYMARKET&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Prediction Market (DEX)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stable-green&#34; alt=&#34;status&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://nautilustrader.io/docs/latest/integrations/polymarket.html&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://tardis.dev&#34;&gt;Tardis&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;TARDIS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Data Provider&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stable-green&#34; alt=&#34;status&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://nautilustrader.io/docs/latest/integrations/tardis.html&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ID&lt;/strong&gt;: The default client ID for the integrations adapter clients.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Type&lt;/strong&gt;: The type of integration (often the venue type).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Status&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;building&lt;/code&gt;: Under construction and likely not in a usable state.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;beta&lt;/code&gt;: Completed to a minimally working state and in a beta testing phase.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stable&lt;/code&gt;: Stabilized feature set and API, the integration has been tested by both developers and users to a reasonable level (some bugs may still remain).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://nautilustrader.io/docs/latest/integrations/index.html&#34;&gt;Integrations&lt;/a&gt; documentation for further details.&lt;/p&gt; &#xA;&lt;h3&gt;Branches&lt;/h3&gt; &#xA;&lt;p&gt;We aim to maintain a stable, passing build across all branches.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;master&lt;/code&gt;: Reflects the source code for the latest released version.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nightly&lt;/code&gt;: Includes experimental and in-progress features, merged from the &lt;code&gt;develop&lt;/code&gt; branch daily at &lt;strong&gt;14:00 UTC&lt;/strong&gt; and also when required.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;develop&lt;/code&gt;: The most active branch, frequently updated with new commits, including experimental and in-progress features.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;Our &lt;a href=&#34;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/ROADMAP.md&#34;&gt;roadmap&lt;/a&gt; aims to achieve a &lt;strong&gt;stable API for version 2.x&lt;/strong&gt; (likely after the Rust port). Once this milestone is reached, we plan to implement a formal deprecation process for any API changes. This approach allows us to maintain a rapid development pace for now.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Versioning and releases&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;NautilusTrader is still under active development&lt;/strong&gt;. Some features may be incomplete, and while the API is becoming more stable, breaking changes can occur between releases. We strive to document these changes in the release notes on a &lt;strong&gt;best-effort basis&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We aim to follow a &lt;strong&gt;weekly release schedule&lt;/strong&gt;, though experimental or larger features may cause delays.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;From PyPI&lt;/h3&gt; &#xA;&lt;p&gt;We recommend using the latest supported version of Python and setting up &lt;a href=&#34;https://pypi.org/project/nautilus_trader/&#34;&gt;nautilus_trader&lt;/a&gt; in a virtual environment to isolate dependencies&lt;/p&gt; &#xA;&lt;p&gt;To install the latest binary wheel (or sdist package) from PyPI using Pythons pip package manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -U nautilus_trader&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;From the Nautech Systems package index&lt;/h3&gt; &#xA;&lt;p&gt;The Nautech Systems package index (&lt;code&gt;packages.nautechsystems.io&lt;/code&gt;) is &lt;a href=&#34;https://peps.python.org/pep-0503/&#34;&gt;PEP-503&lt;/a&gt; compliant and hosts both stable and development binary wheels for &lt;code&gt;nautilus_trader&lt;/code&gt;. This enables users to install either the latest stable release or pre-release versions for testing.&lt;/p&gt; &#xA;&lt;h4&gt;Stable wheels&lt;/h4&gt; &#xA;&lt;p&gt;Stable wheels correspond to official releases of &lt;code&gt;nautilus_trader&lt;/code&gt; on PyPI, and use standard versioning.&lt;/p&gt; &#xA;&lt;p&gt;To install the latest stable release:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -U nautilus_trader --index-url=https://packages.nautechsystems.io/simple&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Development wheels&lt;/h4&gt; &#xA;&lt;p&gt;Development wheels are published from both the &lt;code&gt;develop&lt;/code&gt; and &lt;code&gt;nightly&lt;/code&gt; branches for Linux and macOS, allowing users to test features and fixes ahead of stable releases.&lt;/p&gt; &#xA;&lt;p&gt;This process also helps preserve compute resources and ensures easy access to the exact binaries tested in CI pipelines, while adhering to &lt;a href=&#34;https://peps.python.org/pep-0440/&#34;&gt;PEP-440&lt;/a&gt; versioning standards:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;develop&lt;/code&gt; wheels use the version format &lt;code&gt;dev{date}+{build_number}&lt;/code&gt; (e.g., &lt;code&gt;1.208.0.dev20241212+7001&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nightly&lt;/code&gt; wheels use the version format &lt;code&gt;a{date}&lt;/code&gt; (alpha) (e.g., &lt;code&gt;1.208.0a20241212&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;/p&gt; &#xA; &lt;p&gt;We don&#39;t recommend using development wheels in production environments, such as live trading controlling real capital.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Installation commands&lt;/h4&gt; &#xA;&lt;p&gt;By default, pip installs the latest stable release. Adding the &lt;code&gt;--pre&lt;/code&gt; flag ensures that pre-release versions, including development wheels, are considered.&lt;/p&gt; &#xA;&lt;p&gt;To install the latest available pre-release (including development wheels):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -U nautilus_trader --pre --index-url=https://packages.nautechsystems.io/simple&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install a specific development wheel (e.g., &lt;code&gt;1.208.0a20241212&lt;/code&gt; for December 12, 2024):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install nautilus_trader==1.208.0a20241212 --index-url=https://packages.nautechsystems.io/simple&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Available versions&lt;/h4&gt; &#xA;&lt;p&gt;You can view all available versions of &lt;code&gt;nautilus_trader&lt;/code&gt; on the &lt;a href=&#34;https://packages.nautechsystems.io/simple/nautilus-trader/index.html&#34;&gt;package index&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To programmatically fetch and list available versions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -s https://packages.nautechsystems.io/simple/nautilus-trader/index.html | grep -oP &#39;(?&amp;lt;=&amp;lt;a href=&#34;)[^&#34;]+(?=&#34;)&#39; | awk -F&#39;#&#39; &#39;{print $1}&#39; | sort&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Branch updates&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;develop&lt;/code&gt; branch wheels (&lt;code&gt;.dev&lt;/code&gt;): Are built and published continuously with every merged commit.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nightly&lt;/code&gt; branch wheels (&lt;code&gt;a&lt;/code&gt;): Are built and published daily when &lt;code&gt;develop&lt;/code&gt; branch is automatically merged at &lt;strong&gt;14:00 UTC&lt;/strong&gt; (if there are changes).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Retention policies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;develop&lt;/code&gt; branch wheels (&lt;code&gt;.dev&lt;/code&gt;): Only the most recent wheel build is retained.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nightly&lt;/code&gt; branch wheels (&lt;code&gt;a&lt;/code&gt;): Only the 3 most recent wheel builds are retained.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;From Source&lt;/h3&gt; &#xA;&lt;p&gt;Installation from source requires the &lt;code&gt;Python.h&lt;/code&gt; header file, which is included in development releases such as &lt;code&gt;python-dev&lt;/code&gt;. You&#39;ll also need the latest stable &lt;code&gt;rustc&lt;/code&gt; and &lt;code&gt;cargo&lt;/code&gt; to compile the Rust libraries.&lt;/p&gt; &#xA;&lt;p&gt;For MacBook Pro M1/M2, make sure your Python installed using pyenv is configured with &lt;code&gt;--enable-shared&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PYTHON_CONFIGURE_OPTS=&#34;--enable-shared&#34; pyenv install &amp;lt;python_version&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://pyo3.rs/latest/getting-started#virtualenvs&#34;&gt;PyO3 user guide&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s possible to install from source using pip if you first install the build dependencies as specified in the &lt;code&gt;pyproject.toml&lt;/code&gt;. We highly recommend installing using &lt;a href=&#34;https://python-poetry.org/&#34;&gt;poetry&lt;/a&gt; as below.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://rustup.rs/&#34;&gt;rustup&lt;/a&gt; (the Rust toolchain installer):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Linux and macOS: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl https://sh.rustup.rs -sSf | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Windows: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Download and install &lt;a href=&#34;https://win.rustup.rs/x86_64&#34;&gt;&lt;code&gt;rustup-init.exe&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Install &#34;Desktop development with C++&#34; with &lt;a href=&#34;https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=BuildTools&amp;amp;rel=16&#34;&gt;Build Tools for Visual Studio 2019&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Verify (any system): from a terminal session run: &lt;code&gt;rustc --version&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable &lt;code&gt;cargo&lt;/code&gt; in the current shell:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Linux and macOS: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source $HOME/.cargo/env&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Windows: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Start a new PowerShell&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://clang.llvm.org/&#34;&gt;clang&lt;/a&gt; (a C language frontend for LLVM):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Linux: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install clang&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Windows: &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;Add Clang to your &lt;a href=&#34;https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=BuildTools&amp;amp;rel=16&#34;&gt;Build Tools for Visual Studio 2019&lt;/a&gt;: &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Start | Visual Studio Installer | Modify | C++ Clang tools for Windows (12.0.0 - x64…) = checked | Modify&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;Enable &lt;code&gt;clang&lt;/code&gt; in the current shell: &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;[System.Environment]::SetEnvironmentVariable(&#39;path&#39;, &#34;C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Tools\Llvm\x64\bin\;&#34; + $env:Path,&#34;User&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Verify (any system): from a terminal session run: &lt;code&gt;clang --version&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install poetry (or follow the installation guide on their site):&lt;/p&gt; &lt;pre&gt;&lt;code&gt;curl -sSL https://install.python-poetry.org | python3 -&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the source with &lt;code&gt;git&lt;/code&gt;, and install from the projects root directory:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone --branch develop --depth 1 https://github.com/nautechsystems/nautilus_trader&#xA;cd nautilus_trader&#xA;poetry install --only main --all-extras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;The &lt;code&gt;--depth 1&lt;/code&gt; flag fetches just the latest commit for a faster, lightweight clone.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://nautilustrader.io/docs/latest/getting_started/installation&#34;&gt;Installation Guide&lt;/a&gt; for other options and further details.&lt;/p&gt; &#xA;&lt;h2&gt;Redis&lt;/h2&gt; &#xA;&lt;p&gt;Using Redis with NautilusTrader is &lt;strong&gt;optional&lt;/strong&gt; and only required if configured as the backend for a cache database or &lt;a href=&#34;https://nautilustrader.io/docs/latest/concepts/message_bus&#34;&gt;message bus&lt;/a&gt;. See the Redis section of the &lt;a href=&#34;https://nautilustrader.io/docs/latest/getting_started/installation#redis&#34;&gt;Installation Guide&lt;/a&gt; for further details.&lt;/p&gt; &#xA;&lt;h2&gt;Makefile&lt;/h2&gt; &#xA;&lt;p&gt;A &lt;code&gt;Makefile&lt;/code&gt; is provided to automate most installation and build tasks for development. It provides the following targets:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;make install&lt;/code&gt;: Installs in &lt;code&gt;release&lt;/code&gt; build mode with &lt;code&gt;main&lt;/code&gt;, &lt;code&gt;dev&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; dependencies then installs the package using poetry (default).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make install-debug&lt;/code&gt;: Same as &lt;code&gt;make install&lt;/code&gt; but with &lt;code&gt;debug&lt;/code&gt; build mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make install-just-deps&lt;/code&gt;: Installs just the &lt;code&gt;main&lt;/code&gt;, &lt;code&gt;dev&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; dependencies (does not install package).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make build&lt;/code&gt;: Runs the build script in &lt;code&gt;release&lt;/code&gt; build mode (default).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make build-debug&lt;/code&gt;: Runs the build script in &lt;code&gt;debug&lt;/code&gt; build mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make build-wheel&lt;/code&gt;: Runs the Poetry build with a wheel format in &lt;code&gt;release&lt;/code&gt; mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make build-wheel-debug&lt;/code&gt;: Runs the Poetry build with a wheel format in &lt;code&gt;debug&lt;/code&gt; mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make clean&lt;/code&gt;: &lt;strong&gt;CAUTION&lt;/strong&gt; removes all non-source artifacts from the repository.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make docs&lt;/code&gt;: Builds the documentation HTML using Sphinx.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make pre-commit&lt;/code&gt;: Runs the pre-commit checks over all files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make ruff&lt;/code&gt;: Runs ruff over all files using the &lt;code&gt;pyproject.toml&lt;/code&gt; config (with autofix).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make pytest&lt;/code&gt;: Runs all tests with &lt;code&gt;pytest&lt;/code&gt; (except performance tests).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make pytest-coverage&lt;/code&gt;: Same as &lt;code&gt;make pytest&lt;/code&gt; and additionally runs with test coverage and produces a report.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;Run &lt;code&gt;make build-debug&lt;/code&gt; to compile after changes to Rust or Cython code for the most efficient development workflow.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Indicators and strategies can be developed in both Python and Cython. For performance and latency-sensitive applications, we recommend using Cython. Below are some examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/nautilus_trader/examples/indicators/ema_python.py&#34;&gt;indicator&lt;/a&gt; example written in Python.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/nautilus_trader/indicators/&#34;&gt;indicator&lt;/a&gt; examples written in Cython.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/nautilus_trader/examples/strategies/&#34;&gt;strategy&lt;/a&gt; examples written in both Python and Cython.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/examples/backtest/&#34;&gt;backtest&lt;/a&gt; examples using a &lt;code&gt;BacktestEngine&lt;/code&gt; directly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;Docker containers are built using the base image &lt;code&gt;python:3.12-slim&lt;/code&gt; with the following variant tags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;nautilus_trader:latest&lt;/code&gt; has the latest release version installed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nautilus_trader:nightly&lt;/code&gt; has the head of the &lt;code&gt;nightly&lt;/code&gt; branch installed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jupyterlab:latest&lt;/code&gt; has the latest release version installed along with &lt;code&gt;jupyterlab&lt;/code&gt; and an example backtest notebook with accompanying data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jupyterlab:nightly&lt;/code&gt; has the head of the &lt;code&gt;nightly&lt;/code&gt; branch installed along with &lt;code&gt;jupyterlab&lt;/code&gt; and an example backtest notebook with accompanying data.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The container images can be pulled as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull ghcr.io/nautechsystems/&amp;lt;image_variant_tag&amp;gt; --platform linux/amd64&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can launch the backtest example container by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull ghcr.io/nautechsystems/jupyterlab:nightly --platform linux/amd64&#xA;docker run -p 8888:8888 ghcr.io/nautechsystems/jupyterlab:nightly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then open your browser at the following address:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://127.0.0.1:8888/lab&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;/p&gt; &#xA; &lt;p&gt;NautilusTrader currently exceeds the rate limit for Jupyter notebook logging (stdout output). As a result, the &lt;code&gt;log_level&lt;/code&gt; in the examples is set to &lt;code&gt;ERROR&lt;/code&gt;. Lowering this level to see more logging will cause the notebook to hang during cell execution. We are investigating a fix, which may involve either raising the configured rate limits for Jupyter or throttling the log flushing from Nautilus.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/jupyterlab/jupyterlab/issues/12845&#34;&gt;https://github.com/jupyterlab/jupyterlab/issues/12845&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/deshaw/jupyterlab-limit-output&#34;&gt;https://github.com/deshaw/jupyterlab-limit-output&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;We aim to provide the most pleasant developer experience possible for this hybrid codebase of Python, Cython and Rust. See the &lt;a href=&#34;https://nautilustrader.io/docs/latest/developer_guide/index.html&#34;&gt;Developer Guide&lt;/a&gt; for helpful information.&lt;/p&gt; &#xA;&lt;h3&gt;Testing with Rust&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nexte.st&#34;&gt;cargo-nextest&lt;/a&gt; is the standard Rust test runner for NautilusTrader. You can install it by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cargo install cargo-nextest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;Run Rust tests with &lt;code&gt;make cargo-test&lt;/code&gt;, as they only pass via &lt;strong&gt;cargo-nextest&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for considering contributing to NautilusTrader! We welcome any and all help to improve the project. If you have an idea for an enhancement or a bug fix, the first step is to open an &lt;a href=&#34;https://github.com/nautechsystems/nautilus_trader/issues&#34;&gt;issue&lt;/a&gt; on GitHub to discuss it with the team. This helps to ensure that your contribution will be well-aligned with the goals of the project and avoids duplication of effort.&lt;/p&gt; &#xA;&lt;p&gt;Once you&#39;re ready to start working on your contribution, make sure to follow the guidelines outlined in the &lt;a href=&#34;https://github.com/nautechsystems/nautilus_trader/raw/develop/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; file. This includes signing a Contributor License Agreement (CLA) to ensure that your contributions can be included in the project.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;Pull requests should target the &lt;code&gt;develop&lt;/code&gt; branch (the default branch). This is where new features and improvements are integrated before release.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Thank you again for your interest in NautilusTrader! We look forward to reviewing your contributions and working with you to improve the project.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Join our community of users and contributors on &lt;a href=&#34;https://discord.gg/AUWVs3XaCS&#34;&gt;Discord&lt;/a&gt; to chat and stay up-to-date with the latest announcements and features of NautilusTrader. Whether you&#39;re a developer looking to contribute or just want to learn more about the platform, all are welcome on our server.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The source code for NautilusTrader is available on GitHub under the &lt;a href=&#34;https://www.gnu.org/licenses/lgpl-3.0.en.html&#34;&gt;GNU Lesser General Public License v3.0&lt;/a&gt;. Contributions to the project are welcome and require the completion of a standard Contributor License Agreement (CLA).&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;NautilusTrader is developed and maintained by Nautech Systems, a technology company specializing in the development of high-performance trading systems. Although the project utilizes the Rust programming language and benefits from its ecosystem, Nautech Systems is not affiliated with the Rust Foundation, and this project is not an official work of the Rust Foundation. For more information, visit &lt;a href=&#34;https://nautilustrader.io&#34;&gt;https://nautilustrader.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Copyright (C) 2015-2025 Nautech Systems Pty Ltd. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/nautechsystems/nautilus_trader/raw/develop/docs/_images/ns-logo.png?raw=true&#34; alt=&#34;nautechsystems&#34; title=&#34;nautechsystems&#34;&gt; &lt;img src=&#34;https://github.com/nautechsystems/nautilus_trader/raw/develop/docs/_images/ferris.png&#34; width=&#34;128&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ltdrdata/ComfyUI-Manager</title>
    <updated>2025-01-14T01:36:07Z</updated>
    <id>tag:github.com,2025-01-14:/ltdrdata/ComfyUI-Manager</id>
    <link href="https://github.com/ltdrdata/ComfyUI-Manager" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ComfyUI-Manager is an extension designed to enhance the usability of ComfyUI. It offers management functions to install, remove, disable, and enable various custom nodes of ComfyUI. Furthermore, this extension provides a hub feature and convenience functions to access a wide range of information within ComfyUI.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ComfyUI Manager&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;ComfyUI-Manager&lt;/strong&gt; is an extension designed to enhance the usability of &lt;a href=&#34;https://github.com/comfyanonymous/ComfyUI&#34;&gt;ComfyUI&lt;/a&gt;. It offers management functions to &lt;strong&gt;install, remove, disable, and enable&lt;/strong&gt; various custom nodes of ComfyUI. Furthermore, this extension provides a hub feature and convenience functions to access a wide range of information within ComfyUI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ltdrdata/ComfyUI-extension-tutorials/Main/ComfyUI-Manager/images/dialog.jpg&#34; alt=&#34;menu&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;NOTICE&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;V3.3.2: Overhauled. Officially supports &lt;a href=&#34;https://comfyregistry.org/&#34;&gt;https://comfyregistry.org/&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You can see whole nodes info on &lt;a href=&#34;https://ltdrdata.github.io/&#34;&gt;ComfyUI Nodes Info&lt;/a&gt; page.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Installation[method1] (General installation method: ComfyUI-Manager only)&lt;/h3&gt; &#xA;&lt;p&gt;To install ComfyUI-Manager in addition to an existing installation of ComfyUI, you can follow the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;goto &lt;code&gt;ComfyUI/custom_nodes&lt;/code&gt; dir in terminal(cmd)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone https://github.com/ltdrdata/ComfyUI-Manager comfyui-manager&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Restart ComfyUI&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Installation[method2] (Installation for portable ComfyUI version: ComfyUI-Manager only)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;install git&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;https://git-scm.com/download/win&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;standalone version&lt;/li&gt; &#xA; &lt;li&gt;select option: use windows default console window&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://github.com/ltdrdata/ComfyUI-Manager/raw/main/scripts/install-manager-for-portable-version.bat&#34;&gt;scripts/install-manager-for-portable-version.bat&lt;/a&gt; into installed &lt;code&gt;&#34;ComfyUI_windows_portable&#34;&lt;/code&gt; directory&lt;/li&gt; &#xA; &lt;li&gt;double click &lt;code&gt;install-manager-for-portable-version.bat&lt;/code&gt; batch file&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ltdrdata/ComfyUI-extension-tutorials/Main/ComfyUI-Manager/images/portable-install.jpg&#34; alt=&#34;portable-install&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installation[method3] (Installation through comfy-cli: install ComfyUI and ComfyUI-Manager at once.)&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;RECOMMENDED: comfy-cli provides various features to manage ComfyUI from the CLI.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;prerequisite: python 3, git&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Windows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-commandline&#34;&gt;python -m venv venv&#xA;venv\Scripts\activate&#xA;pip install comfy-cli&#xA;comfy install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Linux/OSX:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-commandline&#34;&gt;python -m venv venv&#xA;. venv/bin/activate&#xA;pip install comfy-cli&#xA;comfy install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Installation[method4] (Installation for linux+venv: ComfyUI + ComfyUI-Manager)&lt;/h3&gt; &#xA;&lt;p&gt;To install ComfyUI with ComfyUI-Manager on Linux using a venv environment, you can follow these steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;prerequisite: python-is-python3, python3-venv, git&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://github.com/ltdrdata/ComfyUI-Manager/raw/main/scripts/install-comfyui-venv-linux.sh&#34;&gt;scripts/install-comfyui-venv-linux.sh&lt;/a&gt; into empty install directory&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ComfyUI will be installed in the subdirectory of the specified directory, and the directory will contain the generated executable script.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;code&gt;chmod +x install-comfyui-venv-linux.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./install-comfyui-venv-linux.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Installation Precautions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;DO&lt;/strong&gt;: &lt;code&gt;ComfyUI-Manager&lt;/code&gt; files must be accurately located in the path &lt;code&gt;ComfyUI/custom_nodes/comfyui-manager&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Installing in a compressed file format is not recommended.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DON&#39;T&lt;/strong&gt;: Decompress directly into the &lt;code&gt;ComfyUI/custom_nodes&lt;/code&gt; location, resulting in the Manager contents like &lt;code&gt;__init__.py&lt;/code&gt; being placed directly in that directory. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You have to remove all ComfyUI-Manager files from &lt;code&gt;ComfyUI/custom_nodes&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DON&#39;T&lt;/strong&gt;: In a form where decompression occurs in a path such as &lt;code&gt;ComfyUI/custom_nodes/ComfyUI-Manager/ComfyUI-Manager&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DON&#39;T&lt;/strong&gt;: In a form where decompression occurs in a path such as &lt;code&gt;ComfyUI/custom_nodes/ComfyUI-Manager-main&lt;/code&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In such cases, &lt;code&gt;ComfyUI-Manager&lt;/code&gt; may operate, but it won&#39;t be recognized within &lt;code&gt;ComfyUI-Manager&lt;/code&gt;, and updates cannot be performed. It also poses the risk of duplicate installations. Remove it and install properly via &lt;code&gt;git clone&lt;/code&gt; method.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can execute ComfyUI by running either &lt;code&gt;./run_gpu.sh&lt;/code&gt; or &lt;code&gt;./run_cpu.sh&lt;/code&gt; depending on your system configuration.&lt;/p&gt; &#xA;&lt;h2&gt;Colab Notebook&lt;/h2&gt; &#xA;&lt;p&gt;This repository provides Colab notebooks that allow you to install and use ComfyUI, including ComfyUI-Manager. To use ComfyUI, &lt;a href=&#34;https://colab.research.google.com/github/ltdrdata/ComfyUI-Manager/blob/main/notebooks/comfyui_colab_with_manager.ipynb&#34;&gt;click on this link&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support for installing ComfyUI&lt;/li&gt; &#xA; &lt;li&gt;Support for basic installation of ComfyUI-Manager&lt;/li&gt; &#xA; &lt;li&gt;Support for automatically installing dependencies of custom nodes upon restarting Colab notebooks.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How To Use&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Click &#34;Manager&#34; button on main menu&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ltdrdata/ComfyUI-extension-tutorials/Main/ComfyUI-Manager/images/topbar.jpg&#34; alt=&#34;mainmenu&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you click on &#39;Install Custom Nodes&#39; or &#39;Install Models&#39;, an installer dialog will open.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ltdrdata/ComfyUI-extension-tutorials/Main/ComfyUI-Manager/images/dialog.jpg&#34; alt=&#34;menu&#34;&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;There are three DB modes: &lt;code&gt;DB: Channel (1day cache)&lt;/code&gt;, &lt;code&gt;DB: Local&lt;/code&gt;, and &lt;code&gt;DB: Channel (remote)&lt;/code&gt;.&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;Channel (1day cache)&lt;/code&gt; utilizes Channel cache information with a validity period of one day to quickly display the list. &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;This information will be updated when there is no cache, when the cache expires, or when external information is retrieved through the Channel (remote).&lt;/li&gt; &#xA;       &lt;li&gt;Whenever you start ComfyUI anew, this mode is always set as the &lt;strong&gt;default&lt;/strong&gt; mode.&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;Local&lt;/code&gt; uses information stored locally in ComfyUI-Manager. &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;This information will be updated only when you update ComfyUI-Manager.&lt;/li&gt; &#xA;       &lt;li&gt;For custom node developers, they should use this mode when registering their nodes in &lt;code&gt;custom-node-list.json&lt;/code&gt; and testing them.&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;Channel (remote)&lt;/code&gt; retrieves information from the remote channel, always displaying the latest list.&lt;/li&gt; &#xA;     &lt;li&gt;In cases where retrieval is not possible due to network errors, it will forcibly use local information.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;The &lt;code&gt;Fetch Updates&lt;/code&gt; menu retrieves update data for custom nodes locally. Actual updates are applied by clicking the &lt;code&gt;Update&lt;/code&gt; button in the &lt;code&gt;Install Custom Nodes&lt;/code&gt; menu.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click &#39;Install&#39; or &#39;Try Install&#39; button.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ltdrdata/ComfyUI-extension-tutorials/Main/ComfyUI-Manager/images/custom-nodes.jpg&#34; alt=&#34;node-install-dialog&#34;&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ltdrdata/ComfyUI-extension-tutorials/Main/ComfyUI-Manager/images/models.jpg&#34; alt=&#34;model-install-dialog&#34;&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Installed: This item is already installed.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Install: Clicking this button will install the item.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Try Install: This is a custom node of which installation information cannot be confirmed. Click the button to try installing it.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;If a red background &lt;code&gt;Channel&lt;/code&gt; indicator appears at the top, it means it is not the default channel. Since the amount of information held is different from the default channel, many custom nodes may not appear in this channel state.&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Channel settings have a broad impact, affecting not only the node list but also all functions like &#34;Update all.&#34;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Conflicted Nodes with a yellow background show a list of nodes conflicting with other extensions in the respective extension. This issue needs to be addressed by the developer, and users should be aware that due to these conflicts, some nodes may not function correctly and may need to be installed accordingly.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Share &lt;img src=&#34;https://raw.githubusercontent.com/ltdrdata/ComfyUI-extension-tutorials/Main/ComfyUI-Manager/images/topbar.jpg&#34; alt=&#34;menu&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ltdrdata/ComfyUI-extension-tutorials/Main/ComfyUI-Manager/images/share.jpg&#34; alt=&#34;share&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can share the workflow by clicking the Share button at the bottom of the main menu or selecting Share Output from the Context Menu of the Image node.&lt;/li&gt; &#xA; &lt;li&gt;Currently, it supports sharing via &lt;a href=&#34;https://comfyworkflows.com/&#34;&gt;https://comfyworkflows.com/&lt;/a&gt;, &lt;a href=&#34;https://openart.ai/workflows/dev&#34;&gt;https://openart.ai&lt;/a&gt;, &lt;a href=&#34;https://youml.com&#34;&gt;https://youml.com&lt;/a&gt; as well as through the Matrix channel.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ltdrdata/ComfyUI-extension-tutorials/Main/ComfyUI-Manager/images/share-setting.jpg&#34; alt=&#34;menu&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Through the Share settings in the Manager menu, you can configure the behavior of the Share button in the Main menu or Share Output button on Context Menu. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;None&lt;/code&gt;: hide from Main menu&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;All&lt;/code&gt;: Show a dialog where the user can select a title for sharing.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Paths&lt;/h2&gt; &#xA;&lt;p&gt;In &lt;code&gt;ComfyUI-Manager&lt;/code&gt; V3.0 and later, configuration files and dynamically generated files are located under &lt;code&gt;&amp;lt;USER_DIRECTORY&amp;gt;/default/ComfyUI-Manager/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&amp;lt;USER_DIRECTORY&amp;gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If executed without any options, the path defaults to ComfyUI/user.&lt;/li&gt; &#xA;   &lt;li&gt;It can be set using --user-directory &amp;lt;USER_DIRECTORY&amp;gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Basic config files: &lt;code&gt;&amp;lt;USER_DIRECTORY&amp;gt;/default/ComfyUI-Manager/config.ini&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configurable channel lists: &lt;code&gt;&amp;lt;USER_DIRECTORY&amp;gt;/default/ComfyUI-Manager/channels.ini&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configurable pip overrides: &lt;code&gt;&amp;lt;USER_DIRECTORY&amp;gt;/default/ComfyUI-Manager/pip_overrides.json&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Saved snapshot files: &lt;code&gt;&amp;lt;USER_DIRECTORY&amp;gt;/default/ComfyUI-Manager/snapshots&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Startup script files: &lt;code&gt;&amp;lt;USER_DIRECTORY&amp;gt;/default/ComfyUI-Manager/startup-scripts&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Component files: &lt;code&gt;&amp;lt;USER_DIRECTORY&amp;gt;/default/ComfyUI-Manager/components&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Snapshot-Manager&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When you press &lt;code&gt;Save snapshot&lt;/code&gt; or use &lt;code&gt;Update All&lt;/code&gt; on &lt;code&gt;Manager Menu&lt;/code&gt;, the current installation status snapshot is saved. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Snapshot file dir: &lt;code&gt;&amp;lt;USER_DIRECTORY&amp;gt;/default/ComfyUI-Manager/snapshots&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;You can rename snapshot file.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Press the &#34;Restore&#34; button to revert to the installation status of the respective snapshot. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;However, for custom nodes not managed by Git, snapshot support is incomplete.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;When you press &lt;code&gt;Restore&lt;/code&gt;, it will take effect on the next ComfyUI startup. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The selected snapshot file is saved in &lt;code&gt;&amp;lt;USER_DIRECTORY&amp;gt;/default/ComfyUI-Manager/startup-scripts/restore-snapshot.json&lt;/code&gt;, and upon restarting ComfyUI, the snapshot is applied and then deleted.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ltdrdata/ComfyUI-extension-tutorials/Main/ComfyUI-Manager/images/snapshot.jpg&#34; alt=&#34;model-install-dialog&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;cm-cli: command line tools for power user&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A tool is provided that allows you to use the features of ComfyUI-Manager without running ComfyUI.&lt;/li&gt; &#xA; &lt;li&gt;For more details, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/ltdrdata/ComfyUI-Manager/main/docs/en/cm-cli.md&#34;&gt;cm-cli documentation&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to register your custom node into ComfyUI-Manager&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add an entry to &lt;code&gt;custom-node-list.json&lt;/code&gt; located in the root of ComfyUI-Manager and submit a Pull Request.&lt;/li&gt; &#xA; &lt;li&gt;NOTE: Before submitting the PR after making changes, please check &lt;code&gt;Use local DB&lt;/code&gt; and ensure that the extension list loads without any issues in the &lt;code&gt;Install custom nodes&lt;/code&gt; dialog. Occasionally, missing or extra commas can lead to JSON syntax errors.&lt;/li&gt; &#xA; &lt;li&gt;The remaining JSON will be updated through scripts in the future, so you don&#39;t need to worry about it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Custom node support guide&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.comfy.org/registry/overview&#34;&gt;https://docs.comfy.org/registry/overview&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Special purpose files&lt;/strong&gt; (optional)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;node_list.json&lt;/code&gt; - When your custom nodes pattern of NODE_CLASS_MAPPINGS is not conventional, it is used to manually provide a list of nodes for reference. (&lt;a href=&#34;https://github.com/melMass/comfy_mtb/raw/main/node_list.json&#34;&gt;example&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;requirements.txt&lt;/code&gt; - When installing, this pip requirements will be installed automatically&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;install.py&lt;/code&gt; - When installing, it is automatically called&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;uninstall.py&lt;/code&gt; - When uninstalling, it is automatically called&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;disable.py&lt;/code&gt; - When disabled, it is automatically called &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;When installing a custom node setup &lt;code&gt;.js&lt;/code&gt; file, it is recommended to write this script for disabling.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;enable.py&lt;/code&gt; - When enabled, it is automatically called&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;All scripts are executed from the root path of the corresponding custom node.&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Component Sharing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Copy &amp;amp; Paste&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ltdrdata.github.io/component-demo/&#34;&gt;Demo Page&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;When pasting a component from the clipboard, it supports text in the following JSON format. (text/plain) &lt;pre&gt;&lt;code&gt;{&#xA;  &#34;kind&#34;: &#34;ComfyUI Components&#34;,&#xA;  &#34;timestamp&#34;: &amp;lt;current timestamp&amp;gt;,&#xA;  &#34;components&#34;: &#xA;    {&#xA;      &amp;lt;component name&amp;gt;: &amp;lt;component nodedata&amp;gt;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;&amp;lt;current timestamp&amp;gt;&lt;/code&gt; Ensure that the timestamp is always unique. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&#34;components&#34; should have the same structure as the content of the file stored in &lt;code&gt;&amp;lt;USER_DIRECTORY&amp;gt;/default/ComfyUI-Manager/components&lt;/code&gt;. &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;code&gt;&amp;lt;component name&amp;gt;&lt;/code&gt;: The name should be in the format &lt;code&gt;&amp;lt;prefix&amp;gt;::&amp;lt;node name&amp;gt;&lt;/code&gt;. &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;&lt;code&gt;&amp;lt;compnent nodeata&amp;gt;&lt;/code&gt;: In the nodedata of the group node. &#xA;          &lt;ul&gt; &#xA;           &lt;li&gt;&lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt;: Only two formats are allowed: &lt;code&gt;major.minor.patch&lt;/code&gt; or &lt;code&gt;major.minor&lt;/code&gt;. (e.g. &lt;code&gt;1.0&lt;/code&gt;, &lt;code&gt;2.2.1&lt;/code&gt;)&lt;/li&gt; &#xA;           &lt;li&gt;&lt;code&gt;&amp;lt;datetime&amp;gt;&lt;/code&gt;: Saved time&lt;/li&gt; &#xA;           &lt;li&gt;&lt;code&gt;&amp;lt;packname&amp;gt;&lt;/code&gt;: If the packname is not empty, the category becomes packname/workflow, and it is saved in the &#xA;            &lt;packname&gt;&#xA;             .pack file in &#xA;             &lt;code&gt;&amp;lt;USER_DIRECTORY&amp;gt;/default/ComfyUI-Manager/components&lt;/code&gt;.&#xA;            &lt;/packname&gt;&lt;/li&gt; &#xA;           &lt;li&gt;&lt;code&gt;&amp;lt;category&amp;gt;&lt;/code&gt;: If there is neither a category nor a packname, it is saved in the components category.&lt;/li&gt; &#xA;          &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;    &#34;version&#34;:&#34;1.0&#34;,&#xA;    &#34;datetime&#34;: 1705390656516,&#xA;    &#34;packname&#34;: &#34;mypack&#34;,&#xA;    &#34;category&#34;: &#34;util/pipe&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Drag &amp;amp; Drop&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Dragging and dropping a &lt;code&gt;.pack&lt;/code&gt; or &lt;code&gt;.json&lt;/code&gt; file will add the corresponding components.&lt;/li&gt; &#xA;   &lt;li&gt;Example pack: &lt;a href=&#34;https://raw.githubusercontent.com/ltdrdata/ComfyUI-Manager/main/misc/Impact.pack&#34;&gt;Impact.pack&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Dragging and dropping or pasting a single component will add a node. However, when adding multiple components, nodes will not be added.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support of missing nodes installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ltdrdata/ComfyUI-extension-tutorials/Main/ComfyUI-Manager/images/missing-menu.jpg&#34; alt=&#34;missing-menu&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When you click on the &lt;code&gt;Install Missing Custom Nodes&lt;/code&gt; button in the menu, it displays a list of extension nodes that contain nodes not currently present in the workflow.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ltdrdata/ComfyUI-extension-tutorials/Main/ComfyUI-Manager/images/missing-list.jpg&#34; alt=&#34;missing-list&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Additional Feature&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Logging to file feature&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This feature is enabled by default and can be disabled by setting &lt;code&gt;file_logging = False&lt;/code&gt; in the &lt;code&gt;config.ini&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fix node(recreate): When right-clicking on a node and selecting &lt;code&gt;Fix node (recreate)&lt;/code&gt;, you can recreate the node. The widget&#39;s values are reset, while the connections maintain those with the same names.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It is used to correct errors in nodes of old workflows created before, which are incompatible with the version changes of custom nodes.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Double-Click Node Title: You can set the double click behavior of nodes in the ComfyUI-Manager menu.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;Copy All Connections&lt;/code&gt;, &lt;code&gt;Copy Input Connections&lt;/code&gt;: Double-clicking a node copies the connections of the nearest node.&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;This action targets the nearest node within a straight-line distance of 1000 pixels from the center of the node.&lt;/li&gt; &#xA;     &lt;li&gt;In the case of &lt;code&gt;Copy All Connections&lt;/code&gt;, it duplicates existing outputs, but since it does not allow duplicate connections, the existing output connections of the original node are disconnected.&lt;/li&gt; &#xA;     &lt;li&gt;This feature copies only the input and output that match the names.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;Possible Input Connections&lt;/code&gt;: It connects all outputs that match the closest type within the specified range.&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;This connection links to the closest outputs among the nodes located on the left side of the target node.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;Possible(left) + Copy(right)&lt;/code&gt;: When you Double-Click on the left half of the title, it operates as &lt;code&gt;Possible Input Connections&lt;/code&gt;, and when you Double-Click on the right half, it operates as &lt;code&gt;Copy All Connections&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Prevent downgrade of specific packages&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;List the package names in the &lt;code&gt;downgrade_blacklist&lt;/code&gt; section of the &lt;code&gt;config.ini&lt;/code&gt; file, separating them with commas. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;e.g&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;  downgrade_blacklist = diffusers, kornia&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Custom pip mapping&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;When you create the &lt;code&gt;pip_overrides.json&lt;/code&gt; file, it changes the installation of specific pip packages to installations defined by the user. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Please refer to the &lt;code&gt;pip_overrides.json.template&lt;/code&gt; file.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use &lt;code&gt;aria2&lt;/code&gt; as downloader&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ltdrdata/ComfyUI-Manager/main/docs/en/use_aria2.md&#34;&gt;howto&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you add the item &lt;code&gt;skip_migration_check = True&lt;/code&gt; to &lt;code&gt;config.ini&lt;/code&gt;, it will not check whether there are nodes that can be migrated at startup.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This option can be used if performance issues occur in a Colab+GDrive environment.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Scanner&lt;/h2&gt; &#xA;&lt;p&gt;When you run the &lt;code&gt;scan.sh&lt;/code&gt; script:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;It updates the &lt;code&gt;extension-node-map.json&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To do this, it pulls or clones the custom nodes listed in &lt;code&gt;custom-node-list.json&lt;/code&gt; into &lt;code&gt;~/.tmp/default&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;To skip this step, add the &lt;code&gt;--skip-update&lt;/code&gt; option.&lt;/li&gt; &#xA;   &lt;li&gt;If you want to specify a different path instead of &lt;code&gt;~/.tmp/default&lt;/code&gt;, run &lt;code&gt;python scanner.py [path]&lt;/code&gt; directly instead of &lt;code&gt;scan.sh&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It updates the &lt;code&gt;github-stats.json&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This uses the GitHub API, so set your token with &lt;code&gt;export GITHUB_TOKEN=your_token_here&lt;/code&gt; to avoid quickly reaching the rate limit and malfunctioning.&lt;/li&gt; &#xA;   &lt;li&gt;To skip this step, add the &lt;code&gt;--skip-update-stat&lt;/code&gt; option.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;--skip-all&lt;/code&gt; option applies both &lt;code&gt;--skip-update&lt;/code&gt; and &lt;code&gt;--skip-stat-update&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If your &lt;code&gt;git.exe&lt;/code&gt; is installed in a specific location other than system git, please install ComfyUI-Manager and run ComfyUI. Then, specify the path including the file name in &lt;code&gt;git_exe = &lt;/code&gt; in the &lt;code&gt;&amp;lt;USER_DIRECTORY&amp;gt;/default/ComfyUI-Manager/config.ini&lt;/code&gt; file that is generated.&lt;/li&gt; &#xA; &lt;li&gt;If updating ComfyUI-Manager itself fails, please go to the &lt;strong&gt;ComfyUI-Manager&lt;/strong&gt; directory and execute the command &lt;code&gt;git update-ref refs/remotes/origin/main a361cc1 &amp;amp;&amp;amp; git fetch --all &amp;amp;&amp;amp; git pull&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you encounter the error message &lt;code&gt;Overlapped Object has pending operation at deallocation on Comfyui Manager load&lt;/code&gt; under Windows &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Edit &lt;code&gt;config.ini&lt;/code&gt; file: add &lt;code&gt;windows_selector_event_loop_policy = True&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;if &lt;code&gt;SSL: CERTIFICATE_VERIFY_FAILED&lt;/code&gt; error is occured. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Edit &lt;code&gt;config.ini&lt;/code&gt; file: add &lt;code&gt;bypass_ssl = True&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security policy&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Edit &lt;code&gt;config.ini&lt;/code&gt; file: add &lt;code&gt;security_level = &amp;lt;LEVEL&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;strong&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;doesn&#39;t allow &lt;code&gt;high&lt;/code&gt; and &lt;code&gt;middle&lt;/code&gt; level risky feature&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;normal&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;doesn&#39;t allow &lt;code&gt;high&lt;/code&gt; level risky feature&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;middle&lt;/code&gt; level risky feature is available&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;normal-&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;doesn&#39;t allow &lt;code&gt;high&lt;/code&gt; level risky feature if &lt;code&gt;--listen&lt;/code&gt; is specified and not starts with &lt;code&gt;127.&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;middle&lt;/code&gt; level risky feature is available&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;weak&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;all feature is available&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;high&lt;/code&gt; level risky features&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;Install via git url&lt;/code&gt;, &lt;code&gt;pip install&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Installation of custom nodes registered not in the &lt;code&gt;default channel&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Fix custom nodes&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;middle&lt;/code&gt; level risky features&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Uninstall/Update&lt;/li&gt; &#xA;   &lt;li&gt;Installation of custom nodes registered in the &lt;code&gt;default channel&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Restore/Remove Snapshot&lt;/li&gt; &#xA;   &lt;li&gt;Restart&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;low&lt;/code&gt; level risky features&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Update ComfyUI&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Disclaimer&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This extension simply provides the convenience of installing custom nodes and does not guarantee their proper functioning.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;p&gt;ComfyUI/&lt;a href=&#34;https://github.com/comfyanonymous/ComfyUI&#34;&gt;ComfyUI&lt;/a&gt; - A powerful and modular stable diffusion GUI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;And, for all ComfyUI custom node developers&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
</feed>