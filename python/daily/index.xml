<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-04T01:42:03Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>0xpayne/gpt-migrate</title>
    <updated>2023-07-04T01:42:03Z</updated>
    <id>tag:github.com,2023-07-04:/0xpayne/gpt-migrate</id>
    <link href="https://github.com/0xpayne/gpt-migrate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easily migrate your codebase from one framework or language to another.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;‚óê &amp;nbsp; GPT-Migrate &amp;nbsp; ‚óë&lt;/h1&gt; &#xA; &lt;p&gt;&lt;strong&gt;Easily migrate your codebase from one framework or language to another.&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt; &lt;img alt=&#34;GitHub Last Commit&#34; src=&#34;https://img.shields.io/github/last-commit/0xpayne/gpt-migrate&#34;&gt; &lt;img alt=&#34;GitHub Issues&#34; src=&#34;https://img.shields.io/github/issues/0xpayne/gpt-migrate&#34;&gt; &lt;img alt=&#34;GitHub Pull Requests&#34; src=&#34;https://img.shields.io/github/issues-pr/0xpayne/gpt-migrate&#34;&gt; &lt;img alt=&#34;Github License&#34; src=&#34;https://img.shields.io/badge/License-MIT-green.svg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;If you&#39;ve ever faced the pain of migrating a codebase to a new framework or language, this project is for you.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/25165841/250232917-bcc99ce8-99b7-4e3d-a653-f89e163ed825.mp4&#34;&gt;https://user-images.githubusercontent.com/25165841/250232917-bcc99ce8-99b7-4e3d-a653-f89e163ed825.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Migration is a costly, tedious, and non-trivial problem. Do not trust the current version blindly and please use responsibly. Please also be aware that costs can add up quickly as GPT-Migrate is designed to write (and potentially re-write) the entirety of a codebase.&lt;/p&gt; &#xA;&lt;p&gt;However, with the collective brilliance of the OSS community and the current state of LLMs, it is also a very tractable problem.&lt;/p&gt; &#xA;&lt;h2&gt;‚ö°Ô∏è Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Docker and ensure that it&#39;s running. It&#39;s also recommended that you use at least GPT-4, preferably GPT-4-32k.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set your &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;OpenAI API key&lt;/a&gt; and install the python requirements:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;export OPENAI_API_KEY=&amp;lt;your key&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Run the main script with the target language you want to migrate to:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;python main.py --targetlang nodejs&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;(Optional) If you&#39;d like GPT-Migrate to validate the unit tests it creates against your app before it tests the migrated app with them, please have your existing app exposed and use the &lt;code&gt;--sourceport&lt;/code&gt; flag. For executing this against the benchmark, open a separate terminal, navigate to the &lt;code&gt;benchmarks/language-pair/source&lt;/code&gt; directory, and run &lt;code&gt;python app.py&lt;/code&gt;. It will expose on port 5000. Use this with the &lt;code&gt;--sourceport&lt;/code&gt; flag.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;By default, this script will execute the flask-nodejs benchmark. You can specify the language, source directory, and many other things using the options guide below.&lt;/p&gt; &#xA;&lt;h2&gt;üí° Options&lt;/h2&gt; &#xA;&lt;p&gt;You can customize the behavior of GPT-Migrate by passing the following options to the &lt;code&gt;main.py&lt;/code&gt; script:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--model&lt;/code&gt;: The Large Language Model to be used. Default is &lt;code&gt;&#34;gpt-4-32k&#34;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--temperature&lt;/code&gt;: Temperature setting for the AI model. Default is &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--sourcedir&lt;/code&gt;: Source directory containing the code to be migrated. Default is &lt;code&gt;&#34;../benchmarks/flask-nodejs/source&#34;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--sourcelang&lt;/code&gt;: Source language or framework of the code to be migrated. No default value.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--sourceentry&lt;/code&gt;: Entrypoint filename relative to the source directory. For instance, this could be an &lt;code&gt;app.py&lt;/code&gt; or &lt;code&gt;main.py&lt;/code&gt; file for Python. Default is &lt;code&gt;&#34;app.py&#34;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--targetdir&lt;/code&gt;: Directory where the migrated code will live. Default is &lt;code&gt;&#34;../benchmarks/flask-nodejs/target&#34;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--targetlang&lt;/code&gt;: Target language or framework for migration. Default is &lt;code&gt;&#34;nodejs&#34;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--operating_system&lt;/code&gt;: Operating system for the Dockerfile. Common options are &lt;code&gt;&#39;linux&#39;&lt;/code&gt; or &lt;code&gt;&#39;windows&#39;&lt;/code&gt;. Default is &lt;code&gt;&#39;linux&#39;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--testfiles&lt;/code&gt;: Comma-separated list of files that have functions to be tested. For instance, this could be an &lt;code&gt;app.py&lt;/code&gt; or &lt;code&gt;main.py&lt;/code&gt; file for a Python app where your REST endpoints are. Include the full relative path. Default is &lt;code&gt;&#34;app.py&#34;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--sourceport&lt;/code&gt;: (Optional) Port for testing the unit tests file against the original app. No default value. If not included, GPT-Migrate will not attempt to test the unit tests against your original app.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--targetport&lt;/code&gt;: Port for testing the unit tests file against the migrated app. Default is &lt;code&gt;8080&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--guidelines&lt;/code&gt;: Stylistic or small functional guidelines that you&#39;d like to be followed during the migration. For instance, &#34;Use tabs, not spaces&#34;. Default is an empty string.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--step&lt;/code&gt;: Step to run. Options are &lt;code&gt;&#39;setup&#39;&lt;/code&gt;, &lt;code&gt;&#39;migrate&#39;&lt;/code&gt;, &lt;code&gt;&#39;test&#39;&lt;/code&gt;, &lt;code&gt;&#39;all&#39;&lt;/code&gt;. Default is &lt;code&gt;&#39;all&#39;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, to migrate a Python codebase to Node.js, you might run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python main.py --sourcedir /path/to/my-python-app --sourceentry app.py --targetdir /path/to/my-nodejs-app --targetlang nodejs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will take the Python code in &lt;code&gt;./my-python-app&lt;/code&gt;, migrate it to Node.js, and write the resulting code to &lt;code&gt;./my-nodejs-app&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;GPT-assisted debugging&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/25165841/250233075-eff1a535-f40e-42e4-914c-042c69ba9195.mp4&#34;&gt;https://user-images.githubusercontent.com/25165841/250233075-eff1a535-f40e-42e4-914c-042c69ba9195.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ü§ñ How it Works&lt;/h2&gt; &#xA;&lt;p&gt;For migrating a repo from &lt;code&gt;--sourcelang&lt;/code&gt; to &lt;code&gt;--targetlang&lt;/code&gt;...&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;GPT-Migrate first creates a Docker environment for &lt;code&gt;--targetlang&lt;/code&gt;, which is either passed in or assessed automatically by GPT-Migrate.&lt;/li&gt; &#xA; &lt;li&gt;It evaluates your existing code recursively to identify 3rd-party &lt;code&gt;--sourcelang&lt;/code&gt; dependencies and selects corresponding &lt;code&gt;--targetlang&lt;/code&gt; dependencies.&lt;/li&gt; &#xA; &lt;li&gt;It recursively rebuilds new &lt;code&gt;--targetlang&lt;/code&gt; code from your existing code starting from your designated &lt;code&gt;--sourceentry&lt;/code&gt; file. This step can be started from with the &lt;code&gt;--step migrate&lt;/code&gt; option.&lt;/li&gt; &#xA; &lt;li&gt;It spins up the Docker environment with the new codebase, exposing it on &lt;code&gt;--targetport&lt;/code&gt; and iteratively debugging as needed.&lt;/li&gt; &#xA; &lt;li&gt;It develops unit tests using Python&#39;s unittest framework, and optionally tests these against your existing app if it&#39;s running and exposed on &lt;code&gt;--sourceport&lt;/code&gt;, iteratively debugging as needed. This step can be started from with the &lt;code&gt;--step test&lt;/code&gt; option.&lt;/li&gt; &#xA; &lt;li&gt;It tests the new code on &lt;code&gt;--targetport&lt;/code&gt; against these unit tests.&lt;/li&gt; &#xA; &lt;li&gt;It iteratively debugs the code for for you with context from logs, error messages, relevant files, and directory structure. It does so by choosing one or more actions (move, create, or edit files) then executing them. If it wants to execute any sort of shell script (moving files around), it will first ask for clearance. Finally, if at any point it gets stuck or the user ends the debugging loop, it will output directions for the user to follow to move to the next step of the migration.&lt;/li&gt; &#xA; &lt;li&gt;The new codebase is completed and exists in &lt;code&gt;--targetdir&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;üìù Prompt Design&lt;/h3&gt; &#xA;&lt;p&gt;Subprompts are organized in the following fashion:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;HIERARCHY&lt;/code&gt;: this defines the notion of preferences. There are 4 levels of preference, and each level prioritized more highly than the previous one.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;p1&lt;/code&gt;: Preference Level 1. These are the most general prompts, and consist of broad guidelines.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;p2&lt;/code&gt;: Preference Level 2. These are more specific prompts, and consist of guidelines for certain types of actions (e.g., best practices and philosophies for writing code).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;p3&lt;/code&gt;: Preference Level 3. These are even more specific prompts, and consist of directions for specific actions (e.g., creating a certain file, debugging, writing tests).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;p4&lt;/code&gt;: Preference Level 4. These are the most specific prompts, and consist of formatting for output.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Prompts are a combination of subprompts. This concept of tagging and composability can be extended to other properties as well to make prompts even more robust. This is an area we&#39;re highly interested in actively exploring.&lt;/p&gt; &#xA;&lt;p&gt;In this repo, the &lt;code&gt;prompt_constructor()&lt;/code&gt; function takes in one or more subprompts and yields a string which may be formatted with variables, for example with &lt;code&gt;GUIDELINES&lt;/code&gt; being a &lt;code&gt;p1&lt;/code&gt;, &lt;code&gt;WRITE_CODE&lt;/code&gt; being a &lt;code&gt;p2&lt;/code&gt; etc:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;prompt = prompt_constructor(HIERARCHY, GUIDELINES, WRITE_CODE, DEBUG_TESTFILE, SINGLEFILE).format(targetlang=targetlang,buggyfile=buggyfile)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üìà Performance&lt;/h2&gt; &#xA;&lt;p&gt;GPT-Migrate is currently in development alpha and is not yet ready for production use. For instance, on the relatively simple benchmarks, it gets through &#34;easy&#34; languages like python or javascript without a hitch ~50% of the time, and cannot get through more complex languages like C++ or Rust without some human assistance.&lt;/p&gt; &#xA;&lt;h2&gt;‚úÖ Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re actively looking to build up a robust benchmark repository. If you have a codebase that you&#39;d like to contribute, please open a PR! The current benchmarks were built from scratch: REST API apps which have a few endpoints and dependency files.&lt;/p&gt; &#xA;&lt;h2&gt;üì£ Call to Action&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re looking for talented contributors. Whether you have a particular passion about a specific language or framework, want to help in creating a more robust test suite, or generally have interesting ideas on how to make this better, we&#39;d love to have you!&lt;/p&gt; &#xA;&lt;h2&gt;Join the conversation on &lt;a href=&#34;https://twitter.com/joshpxyne/status/1675254164165910528&#34;&gt;Twitter&lt;/a&gt;!&lt;/h2&gt;</summary>
  </entry>
  <entry>
    <title>ArchiveBox/ArchiveBox</title>
    <updated>2023-07-04T01:42:03Z</updated>
    <id>tag:github.com,2023-07-04:/ArchiveBox/ArchiveBox</id>
    <link href="https://github.com/ArchiveBox/ArchiveBox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üóÉ Open source self-hosted web archiving. Takes URLs/browser history/bookmarks/Pocket/Pinboard/etc., saves HTML, JS, PDFs, media, and more...&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;em&gt;&lt;img src=&#34;https://i.imgur.com/5B48E3N.png&#34; height=&#34;90px&#34;&gt;&lt;/em&gt; &#xA; &lt;h1&gt;ArchiveBox&lt;br&gt;&lt;sub&gt;Open-source self-hosted web archiving.&lt;/sub&gt;&lt;/h1&gt; &#xA; &lt;p&gt;‚ñ∂Ô∏è &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Quickstart&#34;&gt;Quickstart&lt;/a&gt; | &lt;a href=&#34;https://demo.archivebox.io&#34;&gt;Demo&lt;/a&gt; | &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox&#34;&gt;GitHub&lt;/a&gt; | &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#background--motivation&#34;&gt;Info &amp;amp; Motivation&lt;/a&gt; | &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Web-Archiving-Community&#34;&gt;Community&lt;/a&gt; | &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre lang=&#34;bash&#34;&gt;&lt;code style=&#34;white-space: pre-line&#34;&gt;&#34;Your own personal internet archive&#34; (ÁΩëÁ´ôÂ≠òÊ°£ / Áà¨Ëô´)&#xA;curl -sSL &#39;https://get.archivebox.io&#39; | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;!--&lt;a href=&#34;http://webchat.freenode.net?channels=ArchiveBox&amp;uio=d4&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Community_chat-IRC-%2328A745.svg&#34;/&gt;&lt;/a&gt;--&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Open_source-MIT-green.svg?logo=git&amp;amp;logoColor=green&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/ArchiveBox/ArchiveBox.svg?logo=github&amp;amp;label=Stars&amp;amp;logoColor=blue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/commits/dev&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/ArchiveBox/ArchiveBox.svg?logo=Sublime+Text&amp;amp;logoColor=green&amp;amp;label=active&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://pypi.org/project/archivebox/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-yellow.svg?logo=python&amp;amp;logoColor=yellow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Install#dependencies&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Chromium-orange.svg?logo=Google+Chrome&amp;amp;logoColor=orange&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/archivebox/archivebox&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Docker-lightblue.svg?logo=docker&amp;amp;logoColor=lightblue&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;strong&gt;ArchiveBox is a powerful, self-hosted internet archiving solution to collect, save, and view sites you want to preserve offline.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can set it up as a &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#quickstart&#34;&gt;command-line tool&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#quickstart&#34;&gt;web app&lt;/a&gt;, and &lt;a href=&#34;https://github.com/ArchiveBox/electron-archivebox&#34;&gt;desktop app&lt;/a&gt; (alpha), on Linux, macOS, and Windows.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;You can feed it URLs one at a time, or schedule regular imports&lt;/strong&gt; from browser bookmarks or history, feeds like RSS, bookmark services like Pocket/Pinboard, and more. See &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#input-formats&#34;&gt;input formats&lt;/a&gt; for a full list.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;It saves snapshots of the URLs you feed it in several formats:&lt;/strong&gt; HTML, PDF, PNG screenshots, WARC, and more out-of-the-box, with a wide variety of content extracted and preserved automatically (article text, audio/video, git repos, etc.). See &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#output-formats&#34;&gt;output formats&lt;/a&gt; for a full list.&lt;/p&gt; &#xA;&lt;p&gt;The goal is to sleep soundly knowing the part of the internet you care about will be automatically preserved in durable, easily accessible formats &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#background--motivation&#34;&gt;for decades&lt;/a&gt; after it goes down.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA; &lt;img src=&#34;https://i.imgur.com/PAzXZE8.png&#34; height=&#34;70px&#34; alt=&#34;bookshelf graphic&#34;&gt; &amp;nbsp; &#xA; &lt;img src=&#34;https://i.imgur.com/asPNk8n.png&#34; height=&#34;75px&#34; alt=&#34;logo&#34; align=&#34;top&#34;&gt; &amp;nbsp; &#xA; &lt;img src=&#34;https://i.imgur.com/PAzXZE8.png&#34; height=&#34;70px&#34; alt=&#34;bookshelf graphic&#34;&gt; &#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA; &lt;small&gt;&lt;a href=&#34;https://demo.archivebox.io&#34;&gt;Demo&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#screenshots&#34;&gt;Screenshots&lt;/a&gt; | &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Usage&#34;&gt;Usage&lt;/a&gt;&lt;/small&gt; &#xA; &lt;br&gt; &#xA; &lt;sub&gt;. . . . . . . . . . . . . . . . . . . . . . . . . . . .&lt;/sub&gt; &#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;üì¶&amp;nbsp; Get ArchiveBox with &lt;code&gt;docker&lt;/code&gt; / &lt;code&gt;apt&lt;/code&gt; / &lt;code&gt;brew&lt;/code&gt; / &lt;code&gt;pip3&lt;/code&gt; / &lt;code&gt;nix&lt;/code&gt; / etc. (&lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#quickstart&#34;&gt;see Quickstart below&lt;/a&gt;).&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Get ArchiveBox with Docker or Docker Compose (recommended)&#xA;docker run -v $PWD/data:/data -it archivebox/archivebox:dev init --setup&#xA;&#xA;# Or install with your preferred package manager (see Quickstart below for apt, brew, and more)&#xA;pip3 install archivebox&#xA;&#xA;# Or use the optional auto setup script to install it&#xA;curl -sSL &#39;https://get.archivebox.io&#39; | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;üî¢ Example usage: adding links to archive.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;archivebox add &#39;https://example.com&#39;                                   # add URLs one at a time&#xA;archivebox add &amp;lt; ~/Downloads/bookmarks.json                            # or pipe in URLs in any text-based format&#xA;archivebox schedule --every=day --depth=1 https://example.com/rss.xml  # or auto-import URLs regularly on a schedule&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;üî¢ Example usage: viewing the archived content.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;archivebox server 0.0.0.0:8000            # use the interactive web UI&#xA;archivebox list &#39;https://example.com&#39;     # use the CLI commands (--help for more)&#xA;ls ./archive/*/index.json                 # or browse directly via the filesystem&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA; &lt;img src=&#34;https://i.imgur.com/njxgSbl.png&#34; width=&#34;22%&#34; alt=&#34;cli init screenshot&#34; align=&#34;top&#34;&gt; &#xA; &lt;img src=&#34;https://i.imgur.com/lUuicew.png&#34; width=&#34;22%&#34; alt=&#34;cli init screenshot&#34; align=&#34;top&#34;&gt; &#xA; &lt;img src=&#34;https://i.imgur.com/p6wK6KM.png&#34; width=&#34;22%&#34; alt=&#34;server snapshot admin screenshot&#34; align=&#34;top&#34;&gt; &#xA; &lt;img src=&#34;https://i.imgur.com/xHvQfon.png&#34; width=&#34;28.6%&#34; alt=&#34;server snapshot details page screenshot&#34; align=&#34;top&#34;&gt; &#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/raw/master/LICENSE&#34;&gt;&lt;strong&gt;Free &amp;amp; open source&lt;/strong&gt;&lt;/a&gt;, doesn&#39;t require signing up online, stores all data locally&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Usage#CLI-Usage&#34;&gt;&lt;strong&gt;Powerful, intuitive command line interface&lt;/strong&gt;&lt;/a&gt; with &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#dependencies&#34;&gt;modular optional dependencies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki&#34;&gt;&lt;strong&gt;Comprehensive documentation&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Roadmap&#34;&gt;active development&lt;/a&gt;, and &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Web-Archiving-Community&#34;&gt;rich community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/issues/51&#34;&gt;&lt;strong&gt;Extracts a wide variety of content out-of-the-box&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#output-formats&#34;&gt;media (youtube-dl or yt-dlp), articles (readability), code (git), etc.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Scheduled-Archiving&#34;&gt;&lt;strong&gt;Supports scheduled/realtime importing&lt;/strong&gt;&lt;/a&gt; from &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#input-formats&#34;&gt;many types of sources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#saves-lots-of-useful-stuff-for-each-imported-link&#34;&gt;&lt;strong&gt;Uses standard, durable, long-term formats&lt;/strong&gt;&lt;/a&gt; like HTML, JSON, PDF, PNG, and WARC&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Usage#CLI-Usage&#34;&gt;&lt;strong&gt;Usable as a oneshot CLI&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Usage#UI-Usage&#34;&gt;&lt;strong&gt;self-hosted web UI&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://docs.archivebox.io/en/latest/modules.html&#34;&gt;Python API&lt;/a&gt; (BETA), &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/issues/496&#34;&gt;REST API&lt;/a&gt; (ALPHA), or &lt;a href=&#34;https://github.com/ArchiveBox/electron-archivebox&#34;&gt;desktop app&lt;/a&gt; (ALPHA)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Configuration#save_archive_dot_org&#34;&gt;&lt;strong&gt;Saves all pages to archive.org as well&lt;/strong&gt;&lt;/a&gt; by default for redundancy (can be &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Security-Overview#stealth-mode&#34;&gt;disabled&lt;/a&gt; for local-only mode)&lt;/li&gt; &#xA; &lt;li&gt;Advanced users: support for archiving &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Configuration#chrome_user_data_dir&#34;&gt;content requiring login/paywall/cookies&lt;/a&gt; (see wiki security caveats!)&lt;/li&gt; &#xA; &lt;li&gt;Planned: support for running &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/issues/51&#34;&gt;JS during archiving&lt;/a&gt; to adblock, &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/issues/80&#34;&gt;autoscroll&lt;/a&gt;, &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/issues/175&#34;&gt;modal-hide&lt;/a&gt;, &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/issues/345&#34;&gt;thread-expand&lt;/a&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;img src=&#34;https://i.imgur.com/T2UAGUD.png&#34; width=&#34;49%&#34; alt=&#34;grass&#34;&gt;&#xA; &lt;img src=&#34;https://i.imgur.com/T2UAGUD.png&#34; width=&#34;49%&#34; alt=&#34;grass&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;Quickstart&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;üñ•&amp;nbsp; Supported OSs:&lt;/strong&gt; Linux/BSD, macOS, Windows (Docker/WSL) &amp;nbsp; &lt;strong&gt;üëæ&amp;nbsp; CPUs:&lt;/strong&gt; amd64, x86, arm8, arm7 &lt;sup&gt;(raspi&amp;gt;=3)&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;‚ú≥Ô∏è&amp;nbsp; Easy Setup&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/511499/117447182-29758200-af0b-11eb-97bd-58723fee62ab.png&#34; alt=&#34;Docker&#34; height=&#34;28px&#34; align=&#34;top&#34;&gt; &lt;code&gt;docker-compose&lt;/code&gt;&lt;/b&gt; (macOS/Linux/Windows) &amp;nbsp; &lt;b&gt;üëà&amp;nbsp; recommended&lt;/b&gt; &amp;nbsp; &lt;i&gt;(click to expand)&lt;/i&gt;&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;i&gt;üëç Docker Compose is recommended for the easiest install/update UX + best security + all the &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#dependencies&#34;&gt;extras&lt;/a&gt; working out-of-the-box.&lt;/i&gt; &#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Install &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker&lt;/a&gt; and &lt;a href=&#34;https://docs.docker.com/compose/install/#install-using-pip&#34;&gt;Docker Compose&lt;/a&gt; on your system (if not already installed).&lt;/li&gt; &#xA;  &lt;li&gt;Download the &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/master/docker-compose.yml&#34; download&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/a&gt; file into a new empty directory (can be anywhere). &lt;pre lang=&#34;bash&#34;&gt;&lt;code style=&#34;white-space: pre-line&#34;&gt;mkdir ~/archivebox &amp;amp;&amp;amp; cd ~/archivebox&#xA;curl -O &#39;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/master/docker-compose.yml&#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Run the initial setup and create an admin user. &lt;pre lang=&#34;bash&#34;&gt;&lt;code style=&#34;white-space: pre-line&#34;&gt;docker compose run archivebox init --setup&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Optional: Start the server then login to the Web UI &lt;a href=&#34;http://127.0.0.1:8000&#34;&gt;http://127.0.0.1:8000&lt;/a&gt; ‚á¢ Admin. &lt;pre lang=&#34;bash&#34;&gt;&lt;code style=&#34;white-space: pre-line&#34;&gt;docker compose up&#xA;# completely optional, CLI can always be used without running a server&#xA;# docker compose run [-T] archivebox [subcommand] [--args]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#%EF%B8%8F-cli-usage&#34;&gt;below&lt;/a&gt; for more usage examples using the CLI, Web UI, or filesystem/SQL/Python to manage your archive. &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/511499/117447182-29758200-af0b-11eb-97bd-58723fee62ab.png&#34; alt=&#34;Docker&#34; height=&#34;28px&#34; align=&#34;top&#34;&gt; &lt;code&gt;docker&lt;/code&gt;&lt;/b&gt; (macOS/Linux/Windows)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Install &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker&lt;/a&gt; on your system (if not already installed).&lt;/li&gt; &#xA;  &lt;li&gt;Create a new empty directory and initialize your collection (can be anywhere). &lt;pre lang=&#34;bash&#34;&gt;&lt;code style=&#34;white-space: pre-line&#34;&gt;mkdir ~/archivebox &amp;amp;&amp;amp; cd ~/archivebox&#xA;docker run -v $PWD:/data -it archivebox/archivebox init --setup&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Optional: Start the server then login to the Web UI &lt;a href=&#34;http://127.0.0.1:8000&#34;&gt;http://127.0.0.1:8000&lt;/a&gt; ‚á¢ Admin. &lt;pre lang=&#34;bash&#34;&gt;&lt;code style=&#34;white-space: pre-line&#34;&gt;docker run -v $PWD:/data -p 8000:8000 archivebox/archivebox&#xA;# completely optional, CLI can always be used without running a server&#xA;# docker run -v $PWD:/data -it [subcommand] [--args]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#%EF%B8%8F-cli-usage&#34;&gt;below&lt;/a&gt; for more usage examples using the CLI, Web UI, or filesystem/SQL/Python to manage your archive. &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/511499/117456282-08665e80-af16-11eb-91a1-8102eff54091.png&#34; alt=&#34;curl sh automatic setup script&#34; height=&#34;28px&#34; align=&#34;top&#34;&gt; &lt;code&gt;bash&lt;/code&gt; auto-setup script&lt;/b&gt; (macOS/Linux)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Install &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker&lt;/a&gt; on your system (optional, highly recommended but not required).&lt;/li&gt; &#xA;  &lt;li&gt;Run the automatic setup script. &lt;pre lang=&#34;bash&#34;&gt;&lt;code style=&#34;white-space: pre-line&#34;&gt;curl -sSL &#39;https://get.archivebox.io&#39; | sh&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#%EF%B8%8F-cli-usage&#34;&gt;below&lt;/a&gt; for more usage examples using the CLI, Web UI, or filesystem/SQL/Python to manage your archive.&lt;br&gt; See &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/raw/dev/bin/setup.sh&#34;&gt;&lt;code&gt;setup.sh&lt;/code&gt;&lt;/a&gt; for the source code of the auto-install script.&lt;br&gt; See &lt;a href=&#34;https://docs.sweeting.me/s/against-curl-sh&#34;&gt;&#34;Against curl | sh as an install method&#34;&lt;/a&gt; blog post for my thoughts on the shortcomings of this install method. &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;üõ†&amp;nbsp; Package Manager Setup&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a name=&#34;Manual-Setup&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/511499/117448075-49597580-af0c-11eb-91ba-f34fff10096b.png&#34; alt=&#34;aptitude&#34; height=&#34;28px&#34; align=&#34;top&#34;&gt; &lt;code&gt;apt&lt;/code&gt;&lt;/b&gt; (Ubuntu/Debian)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Add the ArchiveBox repository to your sources.&lt;br&gt; &lt;pre lang=&#34;bash&#34;&gt;&lt;code style=&#34;white-space: pre-line&#34;&gt;# On Ubuntu == 20.04, add the sources automatically:&#xA;sudo apt install software-properties-common&#xA;sudo add-apt-repository -u ppa:archivebox/archivebox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre lang=&#34;bash&#34;&gt;&lt;code style=&#34;white-space: pre-line&#34;&gt;# On Ubuntu &amp;gt;= 20.10 or &amp;lt;= 19.10, or other Debian-style systems, add the sources manually:&#xA;echo &#34;deb http://ppa.launchpad.net/archivebox/archivebox/ubuntu focal main&#34; | sudo tee /etc/apt/sources.list.d/archivebox.list&#xA;sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C258F79DCC02E369&#xA;sudo apt update&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Install the ArchiveBox package using &lt;code&gt;apt&lt;/code&gt;. &lt;pre lang=&#34;bash&#34;&gt;&lt;code style=&#34;white-space: pre-line&#34;&gt;sudo apt install archivebox&#xA;sudo python3 -m pip install --upgrade --ignore-installed archivebox   # pip needed because apt only provides a broken older version of Django&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Create a new empty directory and initialize your collection (can be anywhere). &lt;pre lang=&#34;bash&#34;&gt;&lt;code style=&#34;white-space: pre-line&#34;&gt;mkdir ~/archivebox &amp;amp;&amp;amp; cd ~/archivebox&#xA;archivebox init --setup           # if any problems, install with pip instead&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;i&gt;Note: If you encounter issues with NPM/NodeJS, &lt;a href=&#34;https://github.com/nodesource/distributions#debinstall&#34;&gt;install a more recent version&lt;/a&gt;.&lt;/i&gt;&lt;br&gt;&lt;br&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Optional: Start the server then login to the Web UI &lt;a href=&#34;http://127.0.0.1:8000&#34;&gt;http://127.0.0.1:8000&lt;/a&gt; ‚á¢ Admin. &lt;pre lang=&#34;bash&#34;&gt;&lt;code style=&#34;white-space: pre-line&#34;&gt;archivebox server 0.0.0.0:8000&#xA;# completely optional, CLI can always be used without running a server&#xA;# archivebox [subcommand] [--args]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#%EF%B8%8F-cli-usage&#34;&gt;below&lt;/a&gt; for more usage examples using the CLI, Web UI, or filesystem/SQL/Python to manage your archive.&lt;br&gt; See the &lt;a href=&#34;https://github.com/ArchiveBox/debian-archivebox&#34;&gt;&lt;code&gt;debian-archivebox&lt;/code&gt;&lt;/a&gt; repo for more details about this distribution. &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/511499/117447803-f2ec3700-af0b-11eb-87d3-671d114f011d.png&#34; alt=&#34;homebrew&#34; height=&#34;28px&#34; align=&#34;top&#34;&gt; &lt;code&gt;brew&lt;/code&gt;&lt;/b&gt; (macOS)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Install &lt;a href=&#34;https://brew.sh/#install&#34;&gt;Homebrew&lt;/a&gt; on your system (if not already installed).&lt;/li&gt; &#xA;  &lt;li&gt;Install the ArchiveBox package using &lt;code&gt;brew&lt;/code&gt;. &lt;pre lang=&#34;bash&#34;&gt;&lt;code style=&#34;white-space: pre-line&#34;&gt;brew tap archivebox/archivebox&#xA;brew install archivebox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Create a new empty directory and initialize your collection (can be anywhere). &lt;pre lang=&#34;bash&#34;&gt;&lt;code style=&#34;white-space: pre-line&#34;&gt;mkdir ~/archivebox &amp;amp;&amp;amp; cd ~/archivebox&#xA;archivebox init --setup         # if any problems, install with pip instead&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Optional: Start the server then login to the Web UI &lt;a href=&#34;http://127.0.0.1:8000&#34;&gt;http://127.0.0.1:8000&lt;/a&gt; ‚á¢ Admin. &lt;pre lang=&#34;bash&#34;&gt;&lt;code style=&#34;white-space: pre-line&#34;&gt;archivebox server 0.0.0.0:8000&#xA;# completely optional, CLI can always be used without running a server&#xA;# archivebox [subcommand] [--args]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#%EF%B8%8F-cli-usage&#34;&gt;below&lt;/a&gt; for more usage examples using the CLI, Web UI, or filesystem/SQL/Python to manage your archive.&lt;br&gt; See the &lt;a href=&#34;https://github.com/ArchiveBox/homebrew-archivebox&#34;&gt;&lt;code&gt;homebrew-archivebox&lt;/code&gt;&lt;/a&gt; repo for more details about this distribution. &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/511499/117447613-ba4c5d80-af0b-11eb-8f89-1d98e31b6a79.png&#34; alt=&#34;Pip&#34; height=&#34;28px&#34; align=&#34;top&#34;&gt; &lt;code&gt;pip&lt;/code&gt;&lt;/b&gt; (macOS/Linux/Windows)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Install &lt;a href=&#34;https://realpython.com/installing-python/&#34;&gt;Python &amp;gt;= v3.7&lt;/a&gt; and &lt;a href=&#34;https://nodejs.org/en/download/package-manager/&#34;&gt;Node &amp;gt;= v14&lt;/a&gt; on your system (if not already installed).&lt;/li&gt; &#xA;  &lt;li&gt;Install the ArchiveBox package using &lt;code&gt;pip3&lt;/code&gt;. &lt;pre lang=&#34;bash&#34;&gt;&lt;code style=&#34;white-space: pre-line&#34;&gt;pip3 install archivebox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Create a new empty directory and initialize your collection (can be anywhere). &lt;pre lang=&#34;bash&#34;&gt;&lt;code style=&#34;white-space: pre-line&#34;&gt;mkdir ~/archivebox &amp;amp;&amp;amp; cd ~/archivebox&#xA;archivebox init --setup&#xA;# install any missing extras like wget/git/ripgrep/etc. manually as needed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Optional: Start the server then login to the Web UI &lt;a href=&#34;http://127.0.0.1:8000&#34;&gt;http://127.0.0.1:8000&lt;/a&gt; ‚á¢ Admin. &lt;pre lang=&#34;bash&#34;&gt;&lt;code style=&#34;white-space: pre-line&#34;&gt;archivebox server 0.0.0.0:8000&#xA;# completely optional, CLI can always be used without running a server&#xA;# archivebox [subcommand] [--args]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#%EF%B8%8F-cli-usage&#34;&gt;below&lt;/a&gt; for more usage examples using the CLI, Web UI, or filesystem/SQL/Python to manage your archive.&lt;br&gt; See the &lt;a href=&#34;https://github.com/ArchiveBox/pip-archivebox&#34;&gt;&lt;code&gt;pip-archivebox&lt;/code&gt;&lt;/a&gt; repo for more details about this distribution. &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/511499/118077361-f0616580-b381-11eb-973c-ee894a3349fb.png&#34; alt=&#34;Arch&#34; height=&#34;28px&#34; align=&#34;top&#34;&gt; &lt;code&gt;pacman&lt;/code&gt; / &lt;img src=&#34;https://user-images.githubusercontent.com/511499/118077946-29e6a080-b383-11eb-94f0-d4871da08c3f.png&#34; alt=&#34;FreeBSD&#34; height=&#34;28px&#34; align=&#34;top&#34;&gt; &lt;code&gt;pkg&lt;/code&gt; / &lt;img src=&#34;https://user-images.githubusercontent.com/511499/118077861-002d7980-b383-11eb-86a7-5936fad9190f.png&#34; alt=&#34;Nix&#34; height=&#34;28px&#34; align=&#34;top&#34;&gt; &lt;code&gt;nix&lt;/code&gt; (Arch/FreeBSD/NixOS/more)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Arch: &lt;a href=&#34;https://aur.archlinux.org/packages/archivebox/&#34;&gt;&lt;code&gt;yay -S archivebox&lt;/code&gt;&lt;/a&gt; (contributed by &lt;a href=&#34;https://github.com/imlonghao&#34;&gt;&lt;code&gt;@imlonghao&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;FreeBSD: &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox#%EF%B8%8F-easy-setup&#34;&gt;&lt;code&gt;curl -sSL &#39;https://get.archivebox.io&#39; | sh&lt;/code&gt;&lt;/a&gt; (uses &lt;code&gt;pkg&lt;/code&gt; + &lt;code&gt;pip3&lt;/code&gt; under-the-hood)&lt;/li&gt; &#xA;  &lt;li&gt;Nix: &lt;a href=&#34;https://github.com/NixOS/nixpkgs/raw/master/pkgs/applications/misc/archivebox/default.nix&#34;&gt;&lt;code&gt;nix-env --install archivebox&lt;/code&gt;&lt;/a&gt; (contributed by &lt;a href=&#34;https://github.com/siraben&#34;&gt;&lt;code&gt;@siraben&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;More: &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/issues/new&#34;&gt;&lt;i&gt;contribute another distribution...!&lt;/i&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; See &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#%EF%B8%8F-cli-usage&#34;&gt;below&lt;/a&gt; for usage examples using the CLI, Web UI, or filesystem/SQL/Python to manage your archive. &#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;üéó&amp;nbsp; Other Options&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/511499/117447182-29758200-af0b-11eb-97bd-58723fee62ab.png&#34; alt=&#34;Docker&#34; height=&#34;28px&#34; align=&#34;top&#34;&gt; &lt;code&gt;docker&lt;/code&gt; + &lt;img src=&#34;https://user-images.githubusercontent.com/511499/117447263-4316c980-af0b-11eb-928d-eaf1292ac646.png&#34; alt=&#34;Electron&#34; height=&#34;28px&#34; align=&#34;top&#34;&gt; &lt;code&gt;electron&lt;/code&gt; Desktop App&lt;/b&gt; (macOS/Linux/Windows)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Install &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker&lt;/a&gt; on your system (if not already installed).&lt;/li&gt; &#xA;  &lt;li&gt;Download a binary release for your OS or build the native app from source&lt;br&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;macOS: &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/releases/download/v0.6.2/Electron-ArchiveBox-macOS-x64-0.6.2.app.zip&#34; download&gt;&lt;code&gt;ArchiveBox.app.zip&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;Linux: &lt;code&gt;ArchiveBox.deb&lt;/code&gt; (alpha: &lt;a href=&#34;https://github.com/ArchiveBox/electron-archivebox#quickstart&#34;&gt;build manually&lt;/a&gt;)&lt;/li&gt; &#xA;    &lt;li&gt;Windows: &lt;code&gt;ArchiveBox.exe&lt;/code&gt; (beta: &lt;a href=&#34;https://github.com/ArchiveBox/electron-archivebox#quickstart&#34;&gt;build manually&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;img src=&#34;https://i.imgur.com/QPHUS5C.png&#34; width=&#34;320px&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;i&gt;‚ú® Alpha (contributors wanted!)&lt;/i&gt;: for more info, see the: &#xA; &lt;a href=&#34;https://github.com/ArchiveBox/electron-archivebox&#34;&gt;Electron ArchiveBox&lt;/a&gt; repo. &#xA; &lt;br&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/511499/117448723-1663b180-af0d-11eb-837f-d43959227810.png&#34; alt=&#34;paid&#34; height=&#34;27px&#34; align=&#34;top&#34;&gt; Paid hosting solutions (cloud VPS)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://monadical.com&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Custom_Managed_Solution-Monadical.com-%231a1a1a.svg?style=flat&#34; height=&#34;22px&#34;&gt; &lt;/a&gt; (&lt;a href=&#34;https://monadical.com/contact-us.html&#34;&gt;for larger setups, get a quote&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;br&gt; None of these hosting providers are officially endorsed:&#xA;  &lt;br&gt; &#xA;  &lt;sub&gt;&lt;i&gt;(most still require manual setup or manual periodic updating using the methods above)&lt;/i&gt;&lt;/sub&gt; &#xA;  &lt;br&gt;&#xA;  &lt;br&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://www.stellarhosted.com/archivebox/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Semi_Managed_Hosting-StellarHosted.com-%23193f7e.svg?style=flat&#34; height=&#34;22px&#34;&gt;&lt;/a&gt; (USD $29-250/mo, &lt;a href=&#34;https://www.stellarhosted.com/archivebox/#pricing&#34;&gt;pricing&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://www.pikapods.com/pods?run=archivebox&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Semi_Managed_Hosting-PikaPods.com-%2343a047.svg?style=flat&#34; height=&#34;22px&#34;&gt;&lt;/a&gt; (from USD $2.6/mo)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://m.do.co/c/cbc4c0c17840&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Unmanaged_VPS-DigitalOcean.com-%232f7cf7.svg?style=flat&#34; height=&#34;22px&#34;&gt; &lt;/a&gt; (USD $5-50+/mo, &lt;a href=&#34;https://m.do.co/c/cbc4c0c17840&#34;&gt;üéó&amp;nbsp; referral link&lt;/a&gt;, &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-compose-on-ubuntu-20-04&#34;&gt;instructions&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://www.vultr.com/?ref=7130289&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Unmanaged_VPS-Vultr.com-%232337a8.svg?style=flat&#34; height=&#34;22px&#34;&gt; &lt;/a&gt; (USD $2.5-50+/mo, &lt;a href=&#34;https://www.vultr.com/?ref=7130289&#34;&gt;üéó&amp;nbsp; referral link&lt;/a&gt;, &lt;a href=&#34;https://www.vultr.com/docs/install-docker-compose-on-ubuntu-20-04&#34;&gt;instructions&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://fly.io/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Unmanaged_App-Fly.io-%239a2de6.svg?style=flat&#34; height=&#34;22px&#34;&gt; &lt;/a&gt; (USD $10-50+/mo, &lt;a href=&#34;https://fly.io/docs/hands-on/start/&#34;&gt;instructions&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/marketplace/pp/Linnovate-Open-Source-Innovation-Support-For-Archi/B08RVW6MJ2&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Unmanaged_VPS-AWS-%23ee8135.svg?style=flat&#34; height=&#34;22px&#34;&gt;&lt;/a&gt; (USD $60-200+/mo)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://azuremarketplace.microsoft.com/en-us/marketplace/apps/meanio.archivebox?ocid=gtmrewards_whatsnewblog_archivebox_vol118&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Unmanaged_VPS-Azure-%237cb300.svg?style=flat&#34; height=&#34;22px&#34;&gt;&lt;/a&gt; (USD $60-200+/mo)&lt;/li&gt; &#xA;  &lt;br&gt; &#xA;  &lt;sub&gt;&lt;i&gt;Referral links marked üéó provide $5-10 of free credit for new users and help pay for our &lt;a href=&#34;https://demo.archivebox.io&#34;&gt;demo server&lt;/a&gt; hosting costs.&lt;/i&gt;&lt;/sub&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;For more discussion on managed and paid hosting options see here: &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/issues/531&#34;&gt;Issue #531&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;‚û°Ô∏è&amp;nbsp; Next Steps&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Import URLs from some of the supported &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#input-formats&#34;&gt;Input Formats&lt;/a&gt; or view the supported &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#output-formats&#34;&gt;Output Formats&lt;/a&gt;...&lt;/li&gt; &#xA; &lt;li&gt;Tweak your UI or archiving behavior &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#configuration&#34;&gt;Configuration&lt;/a&gt; or read about some of the &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#caveats&#34;&gt;Caveats&lt;/a&gt; and troubleshooting steps...&lt;/li&gt; &#xA; &lt;li&gt;Read about the &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#dependencies&#34;&gt;Dependencies&lt;/a&gt; used for archiving, the &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Upgrading-or-Merging-Archives&#34;&gt;Upgrading Process&lt;/a&gt;, or the &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#archive-layout&#34;&gt;Archive Layout&lt;/a&gt; on disk...&lt;/li&gt; &#xA; &lt;li&gt;Or check out our full &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#documentation&#34;&gt;Documentation&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#internet-archiving-ecosystem&#34;&gt;Community Wiki&lt;/a&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;h4&gt;‚ö°Ô∏è&amp;nbsp; CLI Usage&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# archivebox [subcommand] [--args]&#xA;# docker-compose run archivebox [subcommand] [--args]&#xA;# docker run -v $PWD:/data -it [subcommand] [--args]&#xA;&#xA;archivebox init --setup      # safe to run init multiple times (also how you update versions)&#xA;archivebox --version&#xA;archivebox help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;archivebox setup/init/config/status/manage&lt;/code&gt; to administer your collection&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;archivebox add/schedule/remove/update/list/shell/oneshot&lt;/code&gt; to manage Snapshots in the archive&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;archivebox schedule&lt;/code&gt; to pull in fresh URLs regularly from &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#input-formats&#34;&gt;bookmarks/history/Pocket/Pinboard/RSS/etc.&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;üñ•&amp;nbsp; Web UI Usage&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;archivebox manage createsuperuser  # set an admin password&#xA;archivebox server 0.0.0.0:8000     # open http://127.0.0.1:8000 to view it&#xA;&#xA;# you can also configure whether or not login is required for most features&#xA;archivebox config --set PUBLIC_INDEX=False&#xA;archivebox config --set PUBLIC_SNAPSHOTS=False&#xA;archivebox config --set PUBLIC_ADD_VIEW=False&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;üóÑ&amp;nbsp; SQL/Python/Filesystem Usage&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sqlite3 ./index.sqlite3    # run SQL queries on your index&#xA;archivebox shell           # explore the Python API in a REPL&#xA;ls ./archive/*/index.html  # or inspect snapshots on the filesystem&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://i.imgur.com/6AmOGJT.png&#34; width=&#34;49%&#34; alt=&#34;grass&#34;&gt;&#xA; &lt;img src=&#34;https://i.imgur.com/6AmOGJT.png&#34; width=&#34;49%&#34; alt=&#34;grass&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;sub&gt;. . . . . . . . . . . . . . . . . . . . . . . . . . . .&lt;/sub&gt; &#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://demo.archivebox.io&#34;&gt;DEMO: &lt;code&gt;https://demo.archivebox.io&lt;/code&gt;&lt;/a&gt;&#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Usage&#34;&gt;Usage&lt;/a&gt; | &#xA; &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Configuration&#34;&gt;Configuration&lt;/a&gt; | &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/dev/#Caveats&#34;&gt;Caveats&lt;/a&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://i.imgur.com/OUmgdlH.png&#34; width=&#34;96%&#34; alt=&#34;lego&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;h2&gt;Input Formats&lt;/h2&gt; &#xA;&lt;p&gt;ArchiveBox supports many input formats for URLs, including Pocket &amp;amp; Pinboard exports, Browser bookmarks, Browser history, plain text, HTML, markdown, and more!&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Click these links for instructions on how to prepare your links from these sources:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://nicksweeting.com/images/rss.svg?sanitize=true&#34; height=&#34;22px&#34;&gt; TXT, RSS, XML, JSON, CSV, SQL, HTML, Markdown, or &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Usage#Import-a-list-of-URLs-from-a-text-file&#34;&gt;any other text-based format...&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://nicksweeting.com/images/bookmarks.png&#34; height=&#34;22px&#34;&gt; &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Quickstart#2-get-your-list-of-urls-to-archive&#34;&gt;Browser history&lt;/a&gt; or &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Quickstart#2-get-your-list-of-urls-to-archive&#34;&gt;browser bookmarks&lt;/a&gt; (see instructions for: &lt;a href=&#34;https://support.google.com/chrome/answer/96816?hl=en&#34;&gt;Chrome&lt;/a&gt;, &lt;a href=&#34;https://support.mozilla.org/en-US/kb/export-firefox-bookmarks-to-backup-or-transfer&#34;&gt;Firefox&lt;/a&gt;, &lt;a href=&#34;http://i.imgur.com/AtcvUZA.png&#34;&gt;Safari&lt;/a&gt;, &lt;a href=&#34;https://support.microsoft.com/en-us/help/211089/how-to-import-and-export-the-internet-explorer-favorites-folder-to-a-32-bit-version-of-windows&#34;&gt;IE&lt;/a&gt;, &lt;a href=&#34;http://help.opera.com/Windows/12.10/en/importexport.html&#34;&gt;Opera&lt;/a&gt;, &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Quickstart#2-get-your-list-of-urls-to-archive&#34;&gt;and more...&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://i.imgur.com/AQyHbu8.png&#34; height=&#34;22px&#34;&gt; Browser extension &lt;a href=&#34;https://github.com/tjhorner/archivebox-exporter&#34;&gt;&lt;code&gt;archivebox-exporter&lt;/code&gt;&lt;/a&gt; (realtime archiving from Chrome/Chromium/Firefox)&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://getpocket.com/favicon.ico&#34; height=&#34;22px&#34;&gt; &lt;a href=&#34;https://getpocket.com/export&#34;&gt;Pocket&lt;/a&gt;, &lt;a href=&#34;https://pinboard.in/export/&#34;&gt;Pinboard&lt;/a&gt;, &lt;a href=&#34;https://www.instapaper.com/user/export&#34;&gt;Instapaper&lt;/a&gt;, &lt;a href=&#34;https://shaarli.readthedocs.io/en/master/Usage/#importexport&#34;&gt;Shaarli&lt;/a&gt;, &lt;a href=&#34;https://www.groovypost.com/howto/howto/export-delicious-bookmarks-xml/&#34;&gt;Delicious&lt;/a&gt;, &lt;a href=&#34;https://github.com/csu/export-saved-reddit&#34;&gt;Reddit Saved&lt;/a&gt;, &lt;a href=&#34;https://doc.wallabag.org/en/user/import/wallabagv2.html&#34;&gt;Wallabag&lt;/a&gt;, &lt;a href=&#34;http://help.unmark.it/import-export&#34;&gt;Unmark.it&lt;/a&gt;, &lt;a href=&#34;https://www.addictivetips.com/web/onetab-save-close-all-chrome-tabs-to-restore-export-or-import/&#34;&gt;OneTab&lt;/a&gt;, &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Quickstart#2-get-your-list-of-urls-to-archive&#34;&gt;and more...&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://i.imgur.com/zM4z1aU.png&#34; width=&#34;330px&#34; align=&#34;right&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# archivebox add --help&#xA;archivebox add &#39;https://example.com/some/page&#39;&#xA;archivebox add &amp;lt; ~/Downloads/firefox_bookmarks_export.html&#xA;archivebox add --depth=1 &#39;https://news.ycombinator.com#2020-12-12&#39;&#xA;echo &#39;http://example.com&#39; | archivebox add&#xA;echo &#39;any_text_with [urls](https://example.com) in it&#39; | archivebox add&#xA;&#xA;# if using Docker, add -i when piping stdin:&#xA;# echo &#39;https://example.com&#39; | docker run -v $PWD:/data -i archivebox/archivebox add&#xA;# if using Docker Compose, add -T when piping stdin / stdout:&#xA;# echo &#39;https://example.com&#39; | docker compose run -T archivebox add&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Usage#CLI-Usage&#34;&gt;Usage: CLI&lt;/a&gt; page for documentation and examples.&lt;/p&gt; &#xA;&lt;p&gt;It also includes a built-in scheduled import feature with &lt;code&gt;archivebox schedule&lt;/code&gt; and browser bookmarklet, so you can pull in URLs from RSS feeds, websites, or the filesystem regularly/on-demand.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Output Formats&lt;/h2&gt; &#xA;&lt;p&gt;Inside each Snapshot folder, ArchiveBox saves these different types of extractor outputs as plain files:&lt;/p&gt; &#xA;&lt;img src=&#34;https://i.imgur.com/xHvQfon.png&#34; width=&#34;330px&#34; align=&#34;right&#34;&gt; &#xA;&lt;p&gt;&lt;code&gt;./archive/&amp;lt;timestamp&amp;gt;/*&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Index:&lt;/strong&gt; &lt;code&gt;index.html&lt;/code&gt; &amp;amp; &lt;code&gt;index.json&lt;/code&gt; HTML and JSON index files containing metadata and details&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Title&lt;/strong&gt;, &lt;strong&gt;Favicon&lt;/strong&gt;, &lt;strong&gt;Headers&lt;/strong&gt; Response headers, site favicon, and parsed site title&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SingleFile:&lt;/strong&gt; &lt;code&gt;singlefile.html&lt;/code&gt; HTML snapshot rendered with headless Chrome using SingleFile&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Wget Clone:&lt;/strong&gt; &lt;code&gt;example.com/page-name.html&lt;/code&gt; wget clone of the site with &lt;code&gt;warc/&amp;lt;timestamp&amp;gt;.gz&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chrome Headless &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;PDF:&lt;/strong&gt; &lt;code&gt;output.pdf&lt;/code&gt; Printed PDF of site using headless chrome&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Screenshot:&lt;/strong&gt; &lt;code&gt;screenshot.png&lt;/code&gt; 1440x900 screenshot of site using headless chrome&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;DOM Dump:&lt;/strong&gt; &lt;code&gt;output.html&lt;/code&gt; DOM Dump of the HTML after rendering using headless chrome&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Article Text:&lt;/strong&gt; &lt;code&gt;article.html/json&lt;/code&gt; Article text extraction using Readability &amp;amp; Mercury&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Archive.org Permalink:&lt;/strong&gt; &lt;code&gt;archive.org.txt&lt;/code&gt; A link to the saved site on archive.org&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Audio &amp;amp; Video:&lt;/strong&gt; &lt;code&gt;media/&lt;/code&gt; all audio/video files + playlists, including subtitles &amp;amp; metadata with youtube-dl (or yt-dlp)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Source Code:&lt;/strong&gt; &lt;code&gt;git/&lt;/code&gt; clone of any repository found on GitHub, Bitbucket, or GitLab links&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;More coming soon! See the &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Roadmap&#34;&gt;Roadmap&lt;/a&gt;...&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It does everything out-of-the-box by default, but you can disable or tweak &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Configuration&#34;&gt;individual archive methods&lt;/a&gt; via environment variables / config.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;img src=&#34;https://i.imgur.com/H08eaia.png&#34; width=&#34;330px&#34; align=&#34;right&#34;&gt; &#xA;&lt;p&gt;ArchiveBox can be configured via environment variables, by using the &lt;code&gt;archivebox config&lt;/code&gt; CLI, or by editing the &lt;code&gt;ArchiveBox.conf&lt;/code&gt; config file directly.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;archivebox config                               # view the entire config&#xA;archivebox config --get CHROME_BINARY           # view a specific value&#xA;&#xA;archivebox config --set CHROME_BINARY=chromium  # persist a config using CLI&#xA;# OR&#xA;echo CHROME_BINARY=chromium &amp;gt;&amp;gt; ArchiveBox.conf  # persist a config using file&#xA;# OR&#xA;env CHROME_BINARY=chromium archivebox ...       # run with a one-off config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sup&gt;These methods also work the same way when run inside Docker, see the &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Docker#configuration&#34;&gt;Docker Configuration&lt;/a&gt; wiki page for details.&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The config loading logic with all the options defined is here: &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/raw/master/archivebox/config.py&#34;&gt;&lt;code&gt;archivebox/config.py&lt;/code&gt;&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Most options are also documented on the &lt;strong&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Configuration&#34;&gt;Configuration Wiki page&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Most Common Options to Tweak&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# e.g. archivebox config --set TIMEOUT=120&#xA;&#xA;TIMEOUT=120                # default: 60    add more seconds on slower networks&#xA;CHECK_SSL_VALIDITY=True    # default: False True = allow saving URLs w/ bad SSL&#xA;SAVE_ARCHIVE_DOT_ORG=False # default: True  False = disable Archive.org saving&#xA;MAX_MEDIA_SIZE=1500m       # default: 750m  raise/lower youtubedl output size&#xA;&#xA;PUBLIC_INDEX=True          # default: True  whether anon users can view index&#xA;PUBLIC_SNAPSHOTS=True      # default: True  whether anon users can view pages&#xA;PUBLIC_ADD_VIEW=False      # default: False whether anon users can add new URLs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;For better security, easier updating, and to avoid polluting your host system with extra dependencies, &lt;strong&gt;it is strongly recommended to use the official &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Docker&#34;&gt;Docker image&lt;/a&gt;&lt;/strong&gt; with everything pre-installed for the best experience.&lt;/p&gt; &#xA;&lt;p&gt;To achieve high-fidelity archives in as many situations as possible, ArchiveBox depends on a variety of 3rd-party tools and libraries that specialize in extracting different types of content. These optional dependencies used for archiving sites include:&lt;/p&gt; &#xA;&lt;img src=&#34;https://i.imgur.com/5vSBO2R.png&#34; width=&#34;330px&#34; align=&#34;right&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;chromium&lt;/code&gt; / &lt;code&gt;chrome&lt;/code&gt; (for screenshots, PDF, DOM HTML, and headless JS scripts)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;node&lt;/code&gt; &amp;amp; &lt;code&gt;npm&lt;/code&gt; (for readability, mercury, and singlefile)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;wget&lt;/code&gt; (for plain HTML, static files, and WARC saving)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;curl&lt;/code&gt; (for fetching headers, favicon, and posting to Archive.org)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;youtube-dl&lt;/code&gt; or &lt;code&gt;yt-dlp&lt;/code&gt; (for audio, video, and subtitles)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;git&lt;/code&gt; (for cloning git repos)&lt;/li&gt; &#xA; &lt;li&gt;and more as we grow...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You don&#39;t need to install every dependency to use ArchiveBox. ArchiveBox will automatically disable extractors that rely on dependencies that aren&#39;t installed, based on what is configured and available in your &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If not using Docker, make sure to keep the dependencies up-to-date yourself and check that ArchiveBox isn&#39;t reporting any incompatibility with the versions you install.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# install python3 and archivebox with your system package manager&#xA;# apt/brew/pip/etc install ... (see Quickstart instructions above)&#xA;&#xA;archivebox setup       # auto install all the extractors and extras&#xA;archivebox --version   # see info and check validity of installed dependencies&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Installing directly on &lt;strong&gt;Windows without Docker or WSL/WSL2/Cygwin is not officially supported&lt;/strong&gt; (I cannot respond to Windows support tickets), but some advanced users have reported getting it working.&lt;/p&gt; &#xA;&lt;p&gt;For detailed information about upgrading ArchiveBox and its dependencies, see: &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Upgrading-or-Merging-Archives&#34;&gt;https://github.com/ArchiveBox/ArchiveBox/wiki/Upgrading-or-Merging-Archives&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Archive Layout&lt;/h2&gt; &#xA;&lt;p&gt;All of ArchiveBox&#39;s state (including the index, snapshot data, and config file) is stored in a single folder called the &#34;ArchiveBox data folder&#34;. All &lt;code&gt;archivebox&lt;/code&gt; CLI commands must be run from inside this folder, and you first create it by running &lt;code&gt;archivebox init&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The on-disk layout is optimized to be easy to browse by hand and durable long-term. The main index is a standard &lt;code&gt;index.sqlite3&lt;/code&gt; database in the root of the data folder (it can also be exported as static JSON/HTML), and the archive snapshots are organized by date-added timestamp in the &lt;code&gt;./archive/&lt;/code&gt; subfolder.&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/511499/117453293-c7b91600-af12-11eb-8a3f-aa48b0f9da3c.png&#34; width=&#34;400px&#34; align=&#34;right&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./&#xA;    index.sqlite3&#xA;    ArchiveBox.conf&#xA;    archive/&#xA;        ...&#xA;        1617687755/&#xA;            index.html&#xA;            index.json&#xA;            screenshot.png&#xA;            media/some_video.mp4&#xA;            warc/1617687755.warc.gz&#xA;            git/somerepo.git&#xA;            ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Each snapshot subfolder &lt;code&gt;./archive/&amp;lt;timestamp&amp;gt;/&lt;/code&gt; includes a static &lt;code&gt;index.json&lt;/code&gt; and &lt;code&gt;index.html&lt;/code&gt; describing its contents, and the snapshot extractor outputs are plain files within the folder.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Static Archive Exporting&lt;/h2&gt; &#xA;&lt;p&gt;You can export the main index to browse it statically without needing to run a server.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note about large exports: These exports are not paginated, exporting many URLs or the entire archive at once may be slow. Use the filtering CLI flags on the &lt;code&gt;archivebox list&lt;/code&gt; command to export specific Snapshots or ranges.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# archivebox list --help&#xA;archivebox list --html --with-headers &amp;gt; index.html     # export to static html table&#xA;archivebox list --json --with-headers &amp;gt; index.json     # export to json blob&#xA;archivebox list --csv=timestamp,url,title &amp;gt; index.csv  # export to csv spreadsheet&#xA;&#xA;# (if using Docker Compose, add the -T flag when piping)&#xA;# docker compose run -T archivebox list --html --filter-type=search snozzberries &amp;gt; index.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The paths in the static exports are relative, make sure to keep them next to your &lt;code&gt;./archive&lt;/code&gt; folder when backing them up or viewing them.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://docs.monadical.com/uploads/upload_b6900afc422ae699bfefa2dcda3306f3.png&#34; width=&#34;100%&#34; alt=&#34;security graphic&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Caveats&lt;/h2&gt; &#xA;&lt;h3&gt;Archiving Private Content&lt;/h3&gt; &#xA;&lt;a id=&#34;archiving-private-urls&#34;&gt;&lt;/a&gt; &#xA;&lt;p&gt;If you&#39;re importing pages with private content or URLs containing secret tokens you don&#39;t want public (e.g Google Docs, paywalled content, unlisted videos, etc.), &lt;strong&gt;you may want to disable some of the extractor methods to avoid leaking that content to 3rd party APIs or the public&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# don&#39;t save private content to ArchiveBox, e.g.:&#xA;archivebox add &#39;https://docs.google.com/document/d/12345somePrivateDocument&#39;&#xA;archivebox add &#39;https://vimeo.com/somePrivateVideo&#39;&#xA;&#xA;# without first disabling saving to Archive.org:&#xA;archivebox config --set SAVE_ARCHIVE_DOT_ORG=False  # disable saving all URLs in Archive.org&#xA;&#xA;# restrict the main index, Snapshot content, and Add Page to authenticated users as-needed:&#xA;archivebox config --set PUBLIC_INDEX=False&#xA;archivebox config --set PUBLIC_SNAPSHOTS=False&#xA;archivebox config --set PUBLIC_ADD_VIEW=False &#xA;&#xA;# if extra paranoid or anti-Google:&#xA;archivebox config --set SAVE_FAVICON=False          # disable favicon fetching (it calls a Google API passing the URL&#39;s domain part only)&#xA;archivebox config --set CHROME_BINARY=chromium      # ensure it&#39;s using Chromium instead of Chrome&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Security Risks of Viewing Archived JS&lt;/h3&gt; &#xA;&lt;p&gt;Be aware that malicious archived JS can access the contents of other pages in your archive when viewed. Because the Web UI serves all viewed snapshots from a single domain, they share a request context and &lt;strong&gt;typical CSRF/CORS/XSS/CSP protections do not work to prevent cross-site request attacks&lt;/strong&gt;. See the &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Security-Overview#stealth-mode&#34;&gt;Security Overview&lt;/a&gt; page and &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/issues/239&#34;&gt;Issue #239&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# visiting an archived page with malicious JS:&#xA;https://127.0.0.1:8000/archive/1602401954/example.com/index.html&#xA;&#xA;# example.com/index.js can now make a request to read everything from:&#xA;https://127.0.0.1:8000/index.html&#xA;https://127.0.0.1:8000/archive/*&#xA;# then example.com/index.js can send it off to some evil server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The admin UI is also served from the same origin as replayed JS, so malicious pages could also potentially use your ArchiveBox login cookies to perform admin actions (e.g. adding/removing links, running extractors, etc.). We are planning to fix this security shortcoming in a future version by using separate ports/origins to serve the Admin UI and archived content (see &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/issues/239&#34;&gt;Issue #239&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Only the &lt;code&gt;wget&lt;/code&gt; extractor method executes archived JS when viewing snapshots, all other archive methods produce static output that does not execute JS on viewing. If you are worried about these issues ^ you should disable the wget extractor method using &lt;code&gt;archivebox config --set SAVE_WGET=False&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Saving Multiple Snapshots of a Single URL&lt;/h3&gt; &#xA;&lt;p&gt;First-class support for saving multiple snapshots of each site over time will be &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/issues/179&#34;&gt;added eventually&lt;/a&gt; (along with the ability to view diffs of the changes between runs). For now &lt;strong&gt;ArchiveBox is designed to only archive each unique URL with each extractor type once&lt;/strong&gt;. The workaround to take multiple snapshots of the same URL is to make them slightly different by adding a hash:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;archivebox add &#39;https://example.com#2020-10-24&#39;&#xA;...&#xA;archivebox add &#39;https://example.com#2020-10-25&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;img src=&#34;https://user-images.githubusercontent.com/511499/115942091-73c02300-a476-11eb-958e-5c1fc04da488.png&#34; alt=&#34;Re-Snapshot Button&#34; height=&#34;24px&#34;&gt; button in the Admin UI is a shortcut for this hash-date workaround.&lt;/p&gt; &#xA;&lt;h3&gt;Storage Requirements&lt;/h3&gt; &#xA;&lt;p&gt;Because ArchiveBox is designed to ingest a firehose of browser history and bookmark feeds to a local disk, it can be much more disk-space intensive than a centralized service like the Internet Archive or Archive.today. &lt;strong&gt;ArchiveBox can use anywhere from ~1gb per 1000 articles, to ~50gb per 1000 articles&lt;/strong&gt;, mostly dependent on whether you&#39;re saving audio &amp;amp; video using &lt;code&gt;SAVE_MEDIA=True&lt;/code&gt; and whether you lower &lt;code&gt;MEDIA_MAX_SIZE=750mb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Disk usage can be reduced by using a compressed/deduplicated filesystem like ZFS/BTRFS, or by turning off extractors methods you don&#39;t need. &lt;strong&gt;Don&#39;t store large collections on older filesystems like EXT3/FAT&lt;/strong&gt; as they may not be able to handle more than 50k directory entries in the &lt;code&gt;archive/&lt;/code&gt; folder. &lt;strong&gt;Try to keep the &lt;code&gt;index.sqlite3&lt;/code&gt; file on local drive (not a network mount)&lt;/strong&gt; or SSD for maximum performance, however the &lt;code&gt;archive/&lt;/code&gt; folder can be on a network mount or spinning HDD.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34; width=&#34;80%&#34;&gt; &#xA; &lt;img src=&#34;https://i.imgur.com/PVO88AZ.png&#34; width=&#34;80%&#34;&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt; &lt;img src=&#34;https://i.imgur.com/npareKG.png&#34; alt=&#34;brew install archivebox&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://i.imgur.com/5vSBO2R.png&#34; alt=&#34;archivebox version&#34;&gt; &lt;/td&gt; &#xA;    &lt;td&gt; &lt;img src=&#34;https://i.imgur.com/JXXxFzB.png&#34; alt=&#34;archivebox init&#34;&gt;&lt;br&gt; &lt;/td&gt; &#xA;    &lt;td&gt; &lt;img src=&#34;https://i.imgur.com/wNYtV3v.jpg&#34; alt=&#34;archivebox add&#34;&gt; &lt;/td&gt; &#xA;    &lt;td&gt; &lt;img src=&#34;https://i.imgur.com/uZcIOn9.png&#34; alt=&#34;archivebox data dir&#34;&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt; &lt;img src=&#34;https://i.imgur.com/H08eaia.png&#34; alt=&#34;archivebox server&#34;&gt; &lt;/td&gt; &#xA;    &lt;td&gt; &lt;img src=&#34;https://i.imgur.com/zM4z1aU.png&#34; alt=&#34;archivebox server add&#34;&gt; &lt;/td&gt; &#xA;    &lt;td&gt; &lt;img src=&#34;https://i.imgur.com/p6wK6KM.png&#34; alt=&#34;archivebox server list&#34;&gt; &lt;/td&gt; &#xA;    &lt;td&gt; &lt;img src=&#34;https://i.imgur.com/xHvQfon.png&#34; alt=&#34;archivebox server detail&#34;&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://i.imgur.com/ZSUm9mr.png&#34; width=&#34;100%&#34; alt=&#34;paisley graphic&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;Background &amp;amp; Motivation&lt;/h1&gt; &#xA;&lt;p&gt;ArchiveBox aims to enable more of the internet to be saved from deterioration by empowering people to self-host their own archives. The intent is for all the web content you care about to be viewable with common software in 50 - 100 years without needing to run ArchiveBox or other specialized software to replay it.&lt;/p&gt; &#xA;&lt;p&gt;Vast treasure troves of knowledge are lost every day on the internet to link rot. As a society, we have an imperative to preserve some important parts of that treasure, just like we preserve our books, paintings, and music in physical libraries long after the originals go out of print or fade into obscurity.&lt;/p&gt; &#xA;&lt;p&gt;Whether it&#39;s to resist censorship by saving articles before they get taken down or edited, or just to save a collection of early 2010&#39;s flash games you love to play, having the tools to archive internet content enables to you save the stuff you care most about before it disappears.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://i.imgur.com/bC6eZcV.png&#34; width=&#34;40%&#34;&gt;&#xA; &lt;br&gt; &#xA; &lt;sup&gt;&lt;i&gt;Image from &lt;a href=&#34;https://digiday.com/media/wtf-link-rot/&#34;&gt;WTF is Link Rot?&lt;/a&gt;...&lt;/i&gt;&lt;br&gt;&lt;/sup&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;The balance between the permanence and ephemeral nature of content on the internet is part of what makes it beautiful. I don&#39;t think everything should be preserved in an automated fashion--making all content permanent and never removable, but I do think people should be able to decide for themselves and effectively archive specific content that they care about.&lt;/p&gt; &#xA;&lt;p&gt;Because modern websites are complicated and often rely on dynamic content, ArchiveBox archives the sites in &lt;strong&gt;several different formats&lt;/strong&gt; beyond what public archiving services like Archive.org/Archive.is save. Using multiple methods and the market-dominant browser to execute JS ensures we can save even the most complex, finicky websites in at least a few high-quality, long-term data formats.&lt;/p&gt; &#xA;&lt;h2&gt;Comparison to Other Projects&lt;/h2&gt; &#xA;&lt;img src=&#34;https://i.imgur.com/4nkFjdv.png&#34; width=&#34;5%&#34; align=&#34;right&#34; alt=&#34;comparison&#34;&gt; &#xA;&lt;p&gt;‚ñ∂ &lt;strong&gt;Check out our &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Web-Archiving-Community&#34;&gt;community page&lt;/a&gt; for an index of web archiving initiatives and projects.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;A variety of open and closed-source archiving projects exist, but few provide a nice UI and CLI to manage a large, high-fidelity archive collection over time.&lt;/p&gt; &#xA;&lt;p&gt;ArchiveBox tries to be a robust, set-and-forget archiving solution suitable for archiving RSS feeds, bookmarks, or your entire browsing history (beware, it may be too big to store), &lt;del&gt;including private/authenticated content that you wouldn&#39;t otherwise share with a centralized service&lt;/del&gt; (this is not recommended due to JS replay security concerns).&lt;/p&gt; &#xA;&lt;h3&gt;Comparison With Centralized Public Archives&lt;/h3&gt; &#xA;&lt;p&gt;Not all content is suitable to be archived in a centralized collection, whether because it&#39;s private, copyrighted, too large, or too complex. ArchiveBox hopes to fill that gap.&lt;/p&gt; &#xA;&lt;p&gt;By having each user store their own content locally, we can save much larger portions of everyone&#39;s browsing history than a shared centralized service would be able to handle. The eventual goal is to work towards federated archiving where users can share portions of their collections with each other.&lt;/p&gt; &#xA;&lt;h3&gt;Comparison With Other Self-Hosted Archiving Options&lt;/h3&gt; &#xA;&lt;p&gt;ArchiveBox differentiates itself from &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Web-Archiving-Community#Web-Archiving-Projects&#34;&gt;similar self-hosted projects&lt;/a&gt; by providing both a comprehensive CLI interface for managing your archive, a Web UI that can be used either independently or together with the CLI, and a simple on-disk data format that can be used without either.&lt;/p&gt; &#xA;&lt;p&gt;ArchiveBox is neither the highest fidelity nor the simplest tool available for self-hosted archiving, rather it&#39;s a jack-of-all-trades that tries to do most things well by default. It can be as simple or advanced as you want, and is designed to do everything out-of-the-box but be tuned to suit your needs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;If you want better fidelity for very complex interactive pages with heavy JS/streams/API requests, check out &lt;a href=&#34;https://archiveweb.page&#34;&gt;ArchiveWeb.page&lt;/a&gt; and &lt;a href=&#34;https://replayweb.page&#34;&gt;ReplayWeb.page&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;If you want more bookmark categorization and note-taking features, check out &lt;a href=&#34;https://archivy.github.io/&#34;&gt;Archivy&lt;/a&gt;, &lt;a href=&#34;https://github.com/WorldBrain/Memex&#34;&gt;Memex&lt;/a&gt;, &lt;a href=&#34;https://getpolarized.io/&#34;&gt;Polar&lt;/a&gt;, or &lt;a href=&#34;https://www.linkace.org/&#34;&gt;LinkAce&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;If you need more advanced recursive spider/crawling ability beyond &lt;code&gt;--depth=1&lt;/code&gt;, check out &lt;a href=&#34;https://github.com/webrecorder/browsertrix-crawler&#34;&gt;Browsertrix&lt;/a&gt;, &lt;a href=&#34;https://github.com/s0md3v/Photon&#34;&gt;Photon&lt;/a&gt;, or &lt;a href=&#34;https://scrapy.org/&#34;&gt;Scrapy&lt;/a&gt; and pipe the outputted URLs into ArchiveBox.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more alternatives, see our &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Web-Archiving-Community#Web-Archiving-Projects&#34;&gt;list here&lt;/a&gt;...&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;img src=&#34;https://i.imgur.com/q0Oe36M.png&#34; width=&#34;100%&#34; alt=&#34;dependencies graphic&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Internet Archiving Ecosystem&lt;/h2&gt; &#xA;&lt;p&gt;Whether you want to learn which organizations are the big players in the web archiving space, want to find a specific open-source tool for your web archiving need, or just want to see where archivists hang out online, our Community Wiki page serves as an index of the broader web archiving community. Check it out to learn about some of the coolest web archiving projects and communities on the web!&lt;/p&gt; &#xA;&lt;img src=&#34;https://i.imgur.com/0ZOmOvN.png&#34; width=&#34;14%&#34; align=&#34;right&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Web-Archiving-Community&#34;&gt;Community Wiki&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Web-Archiving-Community#the-master-lists&#34;&gt;The Master Lists&lt;/a&gt;&lt;br&gt; &lt;em&gt;Community-maintained indexes of archiving tools and institutions.&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Web-Archiving-Community#web-archiving-projects&#34;&gt;Web Archiving Software&lt;/a&gt;&lt;br&gt; &lt;em&gt;Open source tools and projects in the internet archiving space.&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Web-Archiving-Community#reading-list&#34;&gt;Reading List&lt;/a&gt;&lt;br&gt; &lt;em&gt;Articles, posts, and blogs relevant to ArchiveBox and web archiving in general.&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Web-Archiving-Community#communities&#34;&gt;Communities&lt;/a&gt;&lt;br&gt; &lt;em&gt;A collection of the most active internet archiving communities and initiatives.&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Check out the ArchiveBox &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Roadmap&#34;&gt;Roadmap&lt;/a&gt; and &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Changelog&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Learn why archiving the internet is important by reading the &#34;&lt;a href=&#34;https://parameters.ssrc.org/2018/09/on-the-importance-of-web-archiving/&#34;&gt;On the Importance of Web Archiving&lt;/a&gt;&#34; blog post.&lt;/li&gt; &#xA; &lt;li&gt;Reach out to me for questions and comments via &lt;a href=&#34;https://twitter.com/ArchiveBoxApp&#34;&gt;@ArchiveBoxApp&lt;/a&gt; or &lt;a href=&#34;https://twitter.com/thesquashSH&#34;&gt;@theSquashSH&lt;/a&gt; on Twitter&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;Need help building a custom archiving solution?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;‚ú® &lt;strong&gt;&lt;a href=&#34;https://monadical.com&#34;&gt;Hire the team that helps build Archivebox&lt;/a&gt; to work on your project.&lt;/strong&gt; (&lt;a href=&#34;https://twitter.com/MonadicalSAS&#34;&gt;@MonadicalSAS&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;sup&gt;(They also do general software consulting across many industries)&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://i.imgur.com/SMkGW0L.png&#34; width=&#34;100%&#34; alt=&#34;documentation graphic&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;img src=&#34;https://read-the-docs-guidelines.readthedocs-hosted.com/_images/logo-dark.png&#34; width=&#34;13%&#34; align=&#34;right&#34;&gt; &#xA;&lt;p&gt;We use the &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki&#34;&gt;GitHub wiki system&lt;/a&gt; and &lt;a href=&#34;https://archivebox.readthedocs.io/en/latest/&#34;&gt;Read the Docs&lt;/a&gt; (WIP) for documentation.&lt;/p&gt; &#xA;&lt;p&gt;You can also access the docs locally by looking in the &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Home&#34;&gt;&lt;code&gt;ArchiveBox/docs/&lt;/code&gt;&lt;/a&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Quickstart&#34;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Docker&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Quickstart#2-get-your-list-of-urls-to-archive&#34;&gt;Supported Sources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki#can-save-these-things-for-each-site&#34;&gt;Supported Outputs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Scheduled-Archiving&#34;&gt;Scheduled Archiving&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Publishing-Your-Archive&#34;&gt;Publishing Your Archive&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Chromium-Install&#34;&gt;Chromium Install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Security-Overview&#34;&gt;Security Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Upgrading-or-Merging-Archives&#34;&gt;Upgrading or Merging Archives&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.archivebox.io/en/latest/modules.html&#34;&gt;Python API&lt;/a&gt; (alpha)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/issues/496&#34;&gt;REST API&lt;/a&gt; (alpha)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;More Info&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/issues&#34;&gt;Tickets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Changelog&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Donations&#34;&gt;Donations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox#background--motivation&#34;&gt;Background &amp;amp; Motivation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Web-Archiving-Community&#34;&gt;Web Archiving Community&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://i.imgur.com/EGWjbD4.png&#34; width=&#34;100%&#34; alt=&#34;development&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;ArchiveBox Development&lt;/h1&gt; &#xA;&lt;p&gt;All contributions to ArchiveBox are welcomed! Check our &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/issues&#34;&gt;issues&lt;/a&gt; and &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Roadmap&#34;&gt;Roadmap&lt;/a&gt; for things to work on, and please open an issue to discuss your proposed implementation before working on things! Otherwise we may have to close your PR if it doesn&#39;t align with our roadmap.&lt;/p&gt; &#xA;&lt;p&gt;For low hanging fruit / easy first tickets, see: &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3A%22help+wanted%22&#34;&gt;ArchiveBox/Issues &lt;code&gt;#good first ticket&lt;/code&gt; &lt;code&gt;#help wanted&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Python API Documentation:&lt;/strong&gt; &lt;a href=&#34;https://docs.archivebox.io/en/master/archivebox.html#module-archivebox.main&#34;&gt;https://docs.archivebox.io/en/master/archivebox.html#module-archivebox.main&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Setup the dev environment&lt;/h3&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand...&lt;/i&gt;&lt;/summary&gt; &#xA; &lt;h4&gt;1. Clone the main code repo (making sure to pull the submodules as well)&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --recurse-submodules https://github.com/ArchiveBox/ArchiveBox&#xA;cd ArchiveBox&#xA;git checkout dev  # or the branch you want to test&#xA;git submodule update --init --recursive&#xA;git pull --recurse-submodules&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;2. Option A: Install the Python, JS, and system dependencies directly on your machine&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install ArchiveBox + python dependencies&#xA;python3 -m venv .venv &amp;amp;&amp;amp; source .venv/bin/activate &amp;amp;&amp;amp; pip install -e &#39;.[dev]&#39;&#xA;# or: pipenv install --dev &amp;amp;&amp;amp; pipenv shell&#xA;&#xA;# Install node dependencies&#xA;npm install&#xA;# or&#xA;archivebox setup&#xA;&#xA;# Check to see if anything is missing&#xA;archivebox --version&#xA;# install any missing dependencies manually, or use the helper script:&#xA;./bin/setup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;2. Option B: Build the docker container and use that for development instead&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Optional: develop via docker by mounting the code dir into the container&#xA;# if you edit e.g. ./archivebox/core/models.py on the docker host, runserver&#xA;# inside the container will reload and pick up your changes&#xA;docker build . -t archivebox&#xA;docker run -it \&#xA;    -v $PWD/data:/data \&#xA;    archivebox init --setup&#xA;docker run -it -p 8000:8000 \&#xA;    -v $PWD/data:/data \&#xA;    -v $PWD/archivebox:/app/archivebox \&#xA;    archivebox server 0.0.0.0:8000 --debug --reload&#xA;&#xA;# (remove the --reload flag and add the --nothreading flag when profiling with the django debug toolbar)&#xA;# When using --reload, make sure any files you create can be read by the user in the Docker container, eg with &#39;chmod a+rX&#39;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Common development tasks&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;code&gt;./bin/&lt;/code&gt; folder and read the source of the bash scripts within. You can also run all these in Docker. For more examples see the GitHub Actions CI/CD tests that are run: &lt;code&gt;.github/workflows/*.yaml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Run in DEBUG mode&lt;/h4&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand...&lt;/i&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;archivebox config --set DEBUG=True&#xA;# or&#xA;archivebox server --debug ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/1074212/how-can-i-see-the-raw-sql-queries-django-is-running&#34;&gt;https://stackoverflow.com/questions/1074212/how-can-i-see-the-raw-sql-queries-django-is-running&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Install and run a specific GitHub branch&lt;/h4&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand...&lt;/i&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# docker:&#xA;docker build -t archivebox:dev https://github.com/ArchiveBox/ArchiveBox.git#dev&#xA;docker run -it -v $PWD:/data archivebox:dev init --setup&#xA;&#xA;# bare metal:&#xA;pip install &#39;git+https://github.com/pirate/ArchiveBox@dev&#39;&#xA;npm install &#39;git+https://github.com/ArchiveBox/ArchiveBox.git#dev&#39;&#xA;archivebox init --setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Run the linters&lt;/h4&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand...&lt;/i&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./bin/lint.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;(uses &lt;code&gt;flake8&lt;/code&gt; and &lt;code&gt;mypy&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Run the integration tests&lt;/h4&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand...&lt;/i&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./bin/test.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;(uses &lt;code&gt;pytest -s&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Make migrations or enter a django shell&lt;/h4&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand...&lt;/i&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Make sure to run this whenever you change things in &lt;code&gt;models.py&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd archivebox/&#xA;./manage.py makemigrations&#xA;&#xA;cd path/to/test/data/&#xA;archivebox shell&#xA;archivebox manage dbshell&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;(uses &lt;code&gt;pytest -s&lt;/code&gt;)&lt;br&gt; &lt;a href=&#34;https://stackoverflow.com/questions/1074212/how-can-i-see-the-raw-sql-queries-django-is-running&#34;&gt;https://stackoverflow.com/questions/1074212/how-can-i-see-the-raw-sql-queries-django-is-running&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Contributing a new extractor&lt;/h4&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand...&lt;/i&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;ArchiveBox &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/raw/dev/archivebox/extractors/media.py&#34;&gt;&lt;code&gt;extractors&lt;/code&gt;&lt;/a&gt; are external binaries or Python/Node scripts that ArchiveBox runs to archive content on a page.&lt;/p&gt; &#xA; &lt;p&gt;Extractors take the URL of a page to archive, write their output to the filesystem &lt;code&gt;archive/&amp;lt;timestamp&amp;gt;/&amp;lt;extractorname&amp;gt;/...&lt;/code&gt;, and return an &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/raw/dev/archivebox/core/models.py#:~:text=return%20qs-,class%20ArchiveResult,-(models.Model)%3A&#34;&gt;&lt;code&gt;ArchiveResult&lt;/code&gt;&lt;/a&gt; entry which is saved to the database (visible on the &lt;code&gt;Log&lt;/code&gt; page in the UI).&lt;/p&gt; &#xA; &lt;p&gt;&lt;em&gt;Check out how we added &lt;strong&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/raw/dev/archivebox/extractors/singlefile.py&#34;&gt;&lt;code&gt;archivebox/extractors/singlefile.py&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; as an example of the process: &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/issues/399&#34;&gt;Issue #399&lt;/a&gt; + &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/pull/403&#34;&gt;PR #403&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;strong&gt;The process to contribute a new extractor is like this:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/issues/new?assignees=&amp;amp;labels=changes%3A+behavior%2Cstatus%3A+idea+phase&amp;amp;template=feature_request.md&amp;amp;title=Feature+Request%3A+...&#34;&gt;Open an issue&lt;/a&gt; with your propsoed implementation (please link to the pages of any new external dependencies you plan on using)&lt;/li&gt; &#xA;  &lt;li&gt;Ensure any dependencies needed are easily installable via a package managers like &lt;code&gt;apt&lt;/code&gt;, &lt;code&gt;brew&lt;/code&gt;, &lt;code&gt;pip3&lt;/code&gt;, &lt;code&gt;npm&lt;/code&gt; (Ideally, prefer to use external programs available via &lt;code&gt;pip3&lt;/code&gt; or &lt;code&gt;npm&lt;/code&gt;, however we do support using any binary installable via package manager that exposes a CLI/Python API and writes output to stdout or the filesystem.)&lt;/li&gt; &#xA;  &lt;li&gt;Create a new file in &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/raw/dev/archivebox/extractors&#34;&gt;&lt;code&gt;archivebox/extractors/&amp;lt;extractorname&amp;gt;.py&lt;/code&gt;&lt;/a&gt; (copy an existing extractor like &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/raw/dev/archivebox/extractors/singlefile.py&#34;&gt;&lt;code&gt;singlefile.py&lt;/code&gt;&lt;/a&gt; as a template)&lt;/li&gt; &#xA;  &lt;li&gt;Add config settings to enable/disable any new dependencies and the extractor as a whole, e.g. &lt;code&gt;USE_DEPENDENCYNAME&lt;/code&gt;, &lt;code&gt;SAVE_EXTRACTORNAME&lt;/code&gt;, &lt;code&gt;EXTRACTORNAME_SOMEOTHEROPTION&lt;/code&gt; in &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/raw/dev/archivebox/config.py&#34;&gt;&lt;code&gt;archivebox/config.py&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Add a preview section to &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/raw/dev/archivebox/templates/core/snapshot.html&#34;&gt;&lt;code&gt;archivebox/templates/core/snapshot.html&lt;/code&gt;&lt;/a&gt; to view the output, and a column to &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/raw/dev/archivebox/templates/core/index_row.html&#34;&gt;&lt;code&gt;archivebox/templates/core/index_row.html&lt;/code&gt;&lt;/a&gt; with an icon for your extractor&lt;/li&gt; &#xA;  &lt;li&gt;Add an integration test for your extractor in &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/raw/dev/tests/test_extractors.py&#34;&gt;&lt;code&gt;tests/test_extractors.py&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/raw/dev/.github/CONTRIBUTING.md&#34;&gt;Submit your PR for review!&lt;/a&gt; üéâ&lt;/li&gt; &#xA;  &lt;li&gt;Once merged, please document it in these places and anywhere else you see info about other extractors:&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox#output-formats&#34;&gt;https://github.com/ArchiveBox/ArchiveBox#output-formats&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Configuration#archive-method-toggles&#34;&gt;https://github.com/ArchiveBox/ArchiveBox/wiki/Configuration#archive-method-toggles&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Install#dependencies&#34;&gt;https://github.com/ArchiveBox/ArchiveBox/wiki/Install#dependencies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Build the docs, pip package, and docker image&lt;/h4&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand...&lt;/i&gt;&lt;/summary&gt; &#xA; &lt;p&gt;(Normally CI takes care of this, but these scripts can be run to do it manually)&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./bin/build.sh&#xA;&#xA;# or individually:&#xA;./bin/build_docs.sh&#xA;./bin/build_pip.sh&#xA;./bin/build_deb.sh&#xA;./bin/build_brew.sh&#xA;./bin/build_docker.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Roll a release&lt;/h4&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand...&lt;/i&gt;&lt;/summary&gt; &#xA; &lt;p&gt;(Normally CI takes care of this, but these scripts can be run to do it manually)&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./bin/release.sh&#xA;&#xA;# or individually:&#xA;./bin/release_docs.sh&#xA;./bin/release_pip.sh&#xA;./bin/release_deb.sh&#xA;./bin/release_brew.sh&#xA;./bin/release_docker.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Further Reading&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Home: &lt;a href=&#34;https://archivebox.io&#34;&gt;ArchiveBox.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Demo: &lt;a href=&#34;https://demo.archivebox.io&#34;&gt;Demo.ArchiveBox.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Docs: &lt;a href=&#34;https://docs.archivebox.io&#34;&gt;Docs.ArchiveBox.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Releases: &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/releases&#34;&gt;Github.com/ArchiveBox/ArchiveBox/releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wiki: &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki&#34;&gt;Github.com/ArchiveBox/ArchiveBox/wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Issues: &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/issues&#34;&gt;Github.com/ArchiveBox/ArchiveBox/issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Discussions: &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/discussions&#34;&gt;Github.com/ArchiveBox/ArchiveBox/discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Community Chat: &lt;a href=&#34;https://zulip.archivebox.io&#34;&gt;Zulip Chat (preferred)&lt;/a&gt; or &lt;a href=&#34;https://app.element.io/#/room/#archivebox:matrix.org&#34;&gt;Matrix Chat (old)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Social Media: &lt;a href=&#34;https://twitter.com/ArchiveBoxApp&#34;&gt;Twitter&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/company/archivebox/&#34;&gt;LinkedIn&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/@ArchiveBoxApp&#34;&gt;YouTube&lt;/a&gt;, &lt;a href=&#34;https://alternativeto.net/software/archivebox/about/&#34;&gt;Alternative.to&lt;/a&gt;, &lt;a href=&#34;https://www.reddit.com/r/ArchiveBox/&#34;&gt;Reddit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Donations: &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/wiki/Donations&#34;&gt;Github.com/ArchiveBox/ArchiveBox/wiki/Donations&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Monadical-SAS/redux-time/HEAD/examples/static/jeremy.jpg&#34; height=&#34;40px&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;i&gt;&lt;sub&gt; This project is maintained mostly in &lt;a href=&#34;https://nicksweeting.com/blog#About&#34;&gt;my spare time&lt;/a&gt; with the help from generous &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox/graphs/contributors&#34;&gt;contributors&lt;/a&gt; and &lt;a href=&#34;https://monadical.com&#34;&gt;Monadical&lt;/a&gt; (‚ú® &lt;a href=&#34;https://monadical.com&#34;&gt;hire them&lt;/a&gt; for dev work!). &lt;/sub&gt; &lt;/i&gt; &#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://github.com/sponsors/pirate&#34;&gt;Sponsor this project on GitHub&lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://www.patreon.com/theSquashSH&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate_to_support_development-via_Patreon-%23DD5D76.svg?style=flat&#34;&gt;&lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://twitter.com/ArchiveBoxApp&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Tweet-%40ArchiveBoxApp-blue.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/ArchiveBox/ArchiveBox.svg?style=flat&amp;amp;label=Star+on+Github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;i&gt;‚ú® Have spare CPU/disk/bandwidth and want to help the world?&lt;br&gt;Check out our &lt;a href=&#34;https://github.com/ArchiveBox/good-karma-kit&#34;&gt;Good Karma Kit&lt;/a&gt;...&lt;/i&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>paul-gauthier/aider</title>
    <updated>2023-07-04T01:42:03Z</updated>
    <id>tag:github.com,2023-07-04:/paul-gauthier/aider</id>
    <link href="https://github.com/paul-gauthier/aider" rel="alternate"></link>
    <summary type="html">&lt;p&gt;aider is GPT powered coding in your terminal&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;aider is GPT powered coding in your terminal&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;aider&lt;/code&gt; is a command-line chat tool that allows you to write and edit code with OpenAI&#39;s GPT models. You can ask GPT to help you start a new project, or modify code in your existing git repo. Aider makes it easy to git commit, diff &amp;amp; undo changes proposed by GPT without copy/pasting. It also has features that &lt;a href=&#34;https://aider.chat/docs/ctags.html&#34;&gt;help GPT-4 understand and modify larger codebases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/paul-gauthier/aider/main/assets/screencast.svg?sanitize=true&#34; alt=&#34;aider screencast&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paul-gauthier/aider/main/#getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paul-gauthier/aider/main/#example-chat-transcripts&#34;&gt;Example chat transcripts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paul-gauthier/aider/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paul-gauthier/aider/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paul-gauthier/aider/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paul-gauthier/aider/main/#in-chat-commands&#34;&gt;In-chat commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paul-gauthier/aider/main/#tips&#34;&gt;Tips&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paul-gauthier/aider/main/#gpt-4-vs-gpt-35&#34;&gt;GPT-4 vs GPT-3.5&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pip install aider-chat&#xA;$ export OPENAI_API_KEY=your-key-goes-here&#xA;$ aider myapp.py&#xA;&#xA;Using git repo: .git&#xA;Added myapp.py to the chat.&#xA;&#xA;myapp.py&amp;gt; change the fibonacci function from recursion to iteration&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example chat transcripts&lt;/h2&gt; &#xA;&lt;p&gt;Here are some example transcripts that show how you can chat with &lt;code&gt;aider&lt;/code&gt; to write and edit code with GPT-4.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://aider.chat/examples/hello-world-flask.html&#34;&gt;&lt;strong&gt;Hello World Flask App&lt;/strong&gt;&lt;/a&gt;: Start from scratch and have GPT create a simple Flask app with various endpoints, such as adding two numbers and calculating the Fibonacci sequence.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://aider.chat/examples/2048-game.html&#34;&gt;&lt;strong&gt;Javascript Game Modification&lt;/strong&gt;&lt;/a&gt;: Dive into an existing open-source repo, and get GPT&#39;s help to understand it and make modifications.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://aider.chat/examples/complex-change.html&#34;&gt;&lt;strong&gt;Complex Multi-file Change with Debugging&lt;/strong&gt;&lt;/a&gt;: GPT makes a complex code change that is coordinated across multiple source files, and resolves bugs by reviewing error output and doc snippets.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://aider.chat/examples/add-test.html&#34;&gt;&lt;strong&gt;Create a Black Box Test Case&lt;/strong&gt;&lt;/a&gt;: GPT creates a &#34;black box&#34; test case without access to the source of the method being tested, using only a &lt;a href=&#34;https://aider.chat/docs/ctags.html&#34;&gt;high level map of the repository based on ctags&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can find more chat transcripts on the &lt;a href=&#34;https://aider.chat/examples/&#34;&gt;examples page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chat with GPT about your code by launching &lt;code&gt;aider&lt;/code&gt; from the command line with set of source files to discuss and edit together. Aider lets GPT see and edit the content of those files.&lt;/li&gt; &#xA; &lt;li&gt;Request new features, changes, improvements, or bug fixes to your code. Ask for new test cases, updated documentation or code refactors.&lt;/li&gt; &#xA; &lt;li&gt;Aider will apply the edits suggested by GPT directly to your source files.&lt;/li&gt; &#xA; &lt;li&gt;Aider will automatically commit each changeset to your local git repo with a descriptive commit message. These frequent, automatic commits provide a safety net. It&#39;s easy to undo changes or use standard git workflows to manage longer sequences of changes.&lt;/li&gt; &#xA; &lt;li&gt;You can use aider with multiple source files at once, so GPT can make coordinated code changes across all of them in a single changeset/commit.&lt;/li&gt; &#xA; &lt;li&gt;Aider can &lt;a href=&#34;https://aider.chat/docs/ctags.html&#34;&gt;give &lt;em&gt;GPT-4&lt;/em&gt; a map of your entire git repo&lt;/a&gt;, which helps it understand and modify large codebases.&lt;/li&gt; &#xA; &lt;li&gt;You can also edit files by hand using your editor while chatting with aider. Aider will notice these out-of-band edits and ask if you&#39;d like to commit them. This lets you bounce back and forth between the aider chat and your editor, to collaboratively code with GPT.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the package:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PyPI: &lt;code&gt;pip install aider-chat&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;GitHub: &lt;code&gt;pip install git+https://github.com/paul-gauthier/aider.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Local clone: &lt;code&gt;pip install -e .&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Set up your OpenAI API key:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;As an environment variable: &lt;code&gt;export OPENAI_API_KEY=sk-...&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Or, by including &lt;code&gt;openai-api-key: sk-...&lt;/code&gt; in an &lt;code&gt;.aider.config.yml&lt;/code&gt; file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Optionally, install &lt;a href=&#34;https://github.com/universal-ctags/ctags&#34;&gt;universal ctags&lt;/a&gt;. This is helpful if you plan to use aider and GPT-4 with repositories that have more than a handful of files. This allows aider to build a &lt;a href=&#34;https://aider.chat/docs/ctags.html&#34;&gt;map of your entire git repo&lt;/a&gt; and share it with GPT to help it better understand and modify large codebases.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;ctags&lt;/code&gt; command needs to be on your shell path so that it will run by default when aider invokes &lt;code&gt;ctags ...&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You need a build which includes the json feature. You can check by running &lt;code&gt;ctags --version&lt;/code&gt; and looking for &lt;code&gt;+json&lt;/code&gt; in the &lt;code&gt;Optional compiled features&lt;/code&gt; list.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Run the &lt;code&gt;aider&lt;/code&gt; tool by executing the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;aider &amp;lt;file1&amp;gt; &amp;lt;file2&amp;gt; ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;&amp;lt;file1&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;file2&amp;gt;&lt;/code&gt;, etc., with the paths to the source code files you want to work on. These files will be &#34;added to the chat session&#34;, so that GPT can see their contents and edit them according to your instructions.&lt;/p&gt; &#xA;&lt;p&gt;You can also just launch &lt;code&gt;aider&lt;/code&gt; anywhere in a git repo without naming files on the command line. It will discover all the files in the repo. You can then add and remove individual files in the chat session with the &lt;code&gt;/add&lt;/code&gt; and &lt;code&gt;/drop&lt;/code&gt; chat commands described below. If you or GPT mention one of the repo&#39;s filenames in the conversation, aider will ask if you&#39;d like to add it to the chat.&lt;/p&gt; &#xA;&lt;p&gt;Aider will work best if you think about which files need to be edited to make your change and add them to the chat. Aider has some ability to help GPT figure out which files to edit all by itself, but the most effective approach is to explicitly add the needed files to the chat yourself.&lt;/p&gt; &#xA;&lt;p&gt;Aider also has many additional command-line options, environment variables or configuration file to set many options. See &lt;code&gt;aider --help&lt;/code&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;In-chat commands&lt;/h2&gt; &#xA;&lt;p&gt;Aider supports commands from within the chat, which all start with &lt;code&gt;/&lt;/code&gt;. Here are some of the most useful in-chat commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;/add &amp;lt;file&amp;gt;&lt;/code&gt;: Add matching files to the chat session.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/drop &amp;lt;file&amp;gt;&lt;/code&gt;: Remove matching files from the chat session.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/undo&lt;/code&gt;: Undo the last git commit if it was done by aider.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/diff&lt;/code&gt;: Display the diff of the last aider commit.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/run &amp;lt;command&amp;gt;&lt;/code&gt;: Run a shell command and optionally add the output to the chat.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/help&lt;/code&gt;: Show help about all commands.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tips&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Think about which files need to be edited to make your change and add them to the chat. Aider has some ability to help GPT figure out which files to edit all by itself, but the most effective approach is to explicitly add the needed files to the chat yourself.&lt;/li&gt; &#xA; &lt;li&gt;Large changes are best performed as a sequence of thoughtful bite sized steps, where you plan out the approach and overall design. Walk GPT through changes like you might with a junior dev. Ask for a refactor to prepare, then ask for the actual change. Spend the time to ask for code quality/structure improvements.&lt;/li&gt; &#xA; &lt;li&gt;Use Control-C to safely interrupt GPT if it isn&#39;t providing a useful response. The partial response remains in the conversation, so you can refer to it when you reply to GPT with more information or direction.&lt;/li&gt; &#xA; &lt;li&gt;Use the &lt;code&gt;/run&lt;/code&gt; command to run tests, linters, etc and show the output to GPT so it can fix any issues.&lt;/li&gt; &#xA; &lt;li&gt;Enter a multiline chat message by entering &lt;code&gt;{&lt;/code&gt; alone on the first line. End the multiline message with &lt;code&gt;}&lt;/code&gt; alone on the last line.&lt;/li&gt; &#xA; &lt;li&gt;If your code is throwing an error, share the error output with GPT using &lt;code&gt;/run&lt;/code&gt; or by pasting it into the chat. Let GPT figure out and fix the bug.&lt;/li&gt; &#xA; &lt;li&gt;GPT knows about a lot of standard tools and libraries, but may get some of the fine details wrong about APIs and function arguments. You can paste doc snippets into the chat to resolve these issues.&lt;/li&gt; &#xA; &lt;li&gt;Aider will notice if you launch it on a git repo with uncommitted changes and offer to commit them before proceeding.&lt;/li&gt; &#xA; &lt;li&gt;GPT can only see the content of the files you specifically &#34;add to the chat&#34;. Aider also sends GPT-4 a &lt;a href=&#34;https://aider.chat/docs/ctags.html&#34;&gt;map of your entire git repo&lt;/a&gt;. So GPT may ask to see additional files if it feels that&#39;s needed for your requests.&lt;/li&gt; &#xA; &lt;li&gt;I also shared some general &lt;a href=&#34;https://news.ycombinator.com/item?id=36211879&#34;&gt;GPT coding tips on Hacker News&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;GPT-4 vs GPT-3.5&lt;/h2&gt; &#xA;&lt;p&gt;Aider supports all of OpenAI&#39;s chat models, including the the brand new &lt;code&gt;gpt-3.5-turbo-16k&lt;/code&gt; model.&lt;/p&gt; &#xA;&lt;p&gt;You will probably get the best results with one of the GPT-4 models, because of their large context windows, adherance to system prompt instructions and greater competance at coding tasks. The GPT-4 models are able to structure code edits as simple &#34;diffs&#34; and use a &lt;a href=&#34;https://aider.chat/docs/ctags.html&#34;&gt;repository map&lt;/a&gt; to improve their ability to make changes in larger codebases.&lt;/p&gt; &#xA;&lt;p&gt;The GPT-3.5 models are supported more experimentally and are limited to editing somewhat smaller codebases. They are less able to follow instructions and aren&#39;t able to return code edits in a compact &#34;diff&#34; format. So aider has to ask GPT-3.5 to return a new copy of the &#34;whole file&#34; with edits included. This rapidly uses up tokens and can hit the limits of the context window.&lt;/p&gt; &#xA;&lt;p&gt;Aider disables the &lt;a href=&#34;https://aider.chat/docs/ctags.html&#34;&gt;repository map feature&lt;/a&gt; when used with GPT-3.5 models. The &lt;code&gt;gpt-3.5-turbo&lt;/code&gt; context window is too small to include a repo map. Evaluation is still needed to determine if &lt;code&gt;gpt-3.5-turbo-16k&lt;/code&gt; can make use of a repo map.&lt;/p&gt; &#xA;&lt;p&gt;In practice, this means you can use aider to edit a set of source files that total up to the sizes below. You can (and should) add just the specific set of files to the chat that are relevant to the change you are requesting. This minimizes your use of the context window, as well as costs.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;/th&gt; &#xA;   &lt;th&gt;Context&lt;br&gt;Size&lt;/th&gt; &#xA;   &lt;th&gt;Edit&lt;br&gt;Format&lt;/th&gt; &#xA;   &lt;th&gt;Max&lt;br&gt;File Size&lt;/th&gt; &#xA;   &lt;th&gt;Max&lt;br&gt;File Size&lt;/th&gt; &#xA;   &lt;th&gt;Repo&lt;br&gt;Map?&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gpt-3.5-turbo&lt;/td&gt; &#xA;   &lt;td&gt;4k tokens&lt;/td&gt; &#xA;   &lt;td&gt;whole file&lt;/td&gt; &#xA;   &lt;td&gt;2k tokens&lt;/td&gt; &#xA;   &lt;td&gt;~8k bytes&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gpt-3.5-turbo-16k&lt;/td&gt; &#xA;   &lt;td&gt;16k tokens&lt;/td&gt; &#xA;   &lt;td&gt;whole file&lt;/td&gt; &#xA;   &lt;td&gt;8k tokens&lt;/td&gt; &#xA;   &lt;td&gt;~32k bytes&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gpt-4&lt;/td&gt; &#xA;   &lt;td&gt;8k tokens&lt;/td&gt; &#xA;   &lt;td&gt;diffs&lt;/td&gt; &#xA;   &lt;td&gt;8k tokens&lt;/td&gt; &#xA;   &lt;td&gt;~32k bytes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gpt-4-32k&lt;/td&gt; &#xA;   &lt;td&gt;32k tokens&lt;/td&gt; &#xA;   &lt;td&gt;diffs&lt;/td&gt; &#xA;   &lt;td&gt;32k tokens&lt;/td&gt; &#xA;   &lt;td&gt;~128k bytes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Kind words from users&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The best AI coding assistant so far.&#34; -- &lt;a href=&#34;https://www.youtube.com/watch?v=df8afeb1FY8&#34;&gt;Matthew Berman&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&#34;Aider ... has easily quadrupled my coding productivity.&#34; -- &lt;a href=&#34;https://news.ycombinator.com/item?id=36212100&#34;&gt;SOLAR_FIELDS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&#34;What an amazing tool. It&#39;s incredible.&#34; -- &lt;a href=&#34;https://github.com/paul-gauthier/aider/issues/6#issue-1722897858&#34;&gt;valyagolev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&#34;It was WAY faster than I would be getting off the ground and making the first few working versions.&#34; -- &lt;a href=&#34;https://twitter.com/d_feldman/status/1662295077387923456&#34;&gt;Daniel Feldman&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>