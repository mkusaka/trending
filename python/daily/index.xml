<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-02T01:34:10Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>facebookresearch/Kats</title>
    <updated>2025-01-02T01:34:10Z</updated>
    <id>tag:github.com,2025-01-02:/facebookresearch/Kats</id>
    <link href="https://github.com/facebookresearch/Kats" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kats, a kit to analyze time series data, a lightweight, easy-to-use, generalizable, and extendable framework to perform time series analysis, from understanding the key statistics and characteristics, detecting change points and anomalies, to forecasting future trends.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/facebookresearch/Kats/main/kats_logo.svg?sanitize=true&#34; width=&#34;40%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/facebookresearch/Kats/actions&#34;&gt; &lt;img alt=&#34;Github Actions&#34; src=&#34;https://github.com/facebookresearch/Kats/actions/workflows/build_and_test.yml/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://pypi.python.org/pypi/kats&#34;&gt; &lt;img alt=&#34;PyPI Version&#34; src=&#34;https://img.shields.io/pypi/v/kats.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/facebookresearch/Kats/raw/master/CONTRIBUTING.md&#34;&gt; &lt;img alt=&#34;PRs Welcome&#34; src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;Kats is a toolkit to analyze time series data, a lightweight, easy-to-use, and generalizable framework to perform time series analysis. Time series analysis is an essential component of Data Science and Engineering work at industry, from understanding the key statistics and characteristics, detecting regressions and anomalies, to forecasting future trends. Kats aims to provide the one-stop shop for time series analysis, including detection, forecasting, feature extraction/embedding, multivariate analysis, etc.&lt;/p&gt; &#xA;&lt;p&gt;Kats is released by Facebook&#39;s &lt;em&gt;Infrastructure Data Science&lt;/em&gt; team. It is available for download on &lt;a href=&#34;https://pypi.python.org/pypi/kats/&#34;&gt;PyPI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Important links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Homepage: &lt;a href=&#34;https://facebookresearch.github.io/Kats/&#34;&gt;https://facebookresearch.github.io/Kats/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kats Python package: &lt;a href=&#34;https://pypi.org/project/kats/&#34;&gt;https://pypi.org/project/kats/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Facebook Engineering Blog Post: &lt;a href=&#34;https://engineering.fb.com/2021/06/21/open-source/kats/&#34;&gt;https://engineering.fb.com/2021/06/21/open-source/kats/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Source code repository: &lt;a href=&#34;https://github.com/facebookresearch/kats&#34;&gt;https://github.com/facebookresearch/kats&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Contributing: &lt;a href=&#34;https://github.com/facebookresearch/Kats/raw/master/CONTRIBUTING.md&#34;&gt;https://github.com/facebookresearch/Kats/blob/master/CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorials: &lt;a href=&#34;https://github.com/facebookresearch/Kats/tree/master/tutorials&#34;&gt;https://github.com/facebookresearch/Kats/tree/master/tutorials&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation in Python&lt;/h2&gt; &#xA;&lt;p&gt;Kats is on PyPI, so you can use &lt;code&gt;pip&lt;/code&gt; to install it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install --upgrade pip&#xA;pip install kats&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need only a small subset of Kats, you can install a minimal version of Kats with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;MINIMAL_KATS=1 pip install kats&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which omits many dependencies (everything in &lt;code&gt;test_requirements.txt&lt;/code&gt;). However, this will disable many functionalities and cause &lt;code&gt;import kats&lt;/code&gt; to log warnings. See &lt;code&gt;setup.py&lt;/code&gt; for full details and options.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Here are a few sample snippets from a subset of Kats offerings:&lt;/p&gt; &#xA;&lt;h3&gt;Forecasting&lt;/h3&gt; &#xA;&lt;p&gt;Using &lt;code&gt;Prophet&lt;/code&gt; model to forecast the &lt;code&gt;air_passengers&lt;/code&gt; data set.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd&#xA;&#xA;from kats.consts import TimeSeriesData&#xA;from kats.models.prophet import ProphetModel, ProphetParams&#xA;&#xA;# take `air_passengers` data as an example&#xA;air_passengers_df = pd.read_csv(&#xA;    &#34;../kats/data/air_passengers.csv&#34;,&#xA;    header=0,&#xA;    names=[&#34;time&#34;, &#34;passengers&#34;],&#xA;)&#xA;&#xA;# convert to TimeSeriesData object&#xA;air_passengers_ts = TimeSeriesData(air_passengers_df)&#xA;&#xA;# create a model param instance&#xA;params = ProphetParams(seasonality_mode=&#39;multiplicative&#39;) # additive mode gives worse results&#xA;&#xA;# create a prophet model instance&#xA;m = ProphetModel(air_passengers_ts, params)&#xA;&#xA;# fit model simply by calling m.fit()&#xA;m.fit()&#xA;&#xA;# make prediction for next 30 month&#xA;fcst = m.predict(steps=30, freq=&#34;MS&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Detection&lt;/h3&gt; &#xA;&lt;p&gt;Using &lt;code&gt;CUSUM&lt;/code&gt; detection algorithm on simulated data set.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# import packages&#xA;import numpy as np&#xA;import pandas as pd&#xA;&#xA;from kats.consts import TimeSeriesData&#xA;from kats.detectors.cusum_detection import CUSUMDetector&#xA;&#xA;# simulate time series with increase&#xA;np.random.seed(10)&#xA;df_increase = pd.DataFrame(&#xA;    {&#xA;        &#39;time&#39;: pd.date_range(&#39;2019-01-01&#39;, &#39;2019-03-01&#39;),&#xA;        &#39;increase&#39;:np.concatenate([np.random.normal(1,0.2,30), np.random.normal(2,0.2,30)]),&#xA;    }&#xA;)&#xA;&#xA;# convert to TimeSeriesData object&#xA;timeseries = TimeSeriesData(df_increase)&#xA;&#xA;# run detector and find change points&#xA;change_points = CUSUMDetector(timeseries).detector()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;TSFeatures&lt;/h3&gt; &#xA;&lt;p&gt;We can extract meaningful features from the given time series data&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Initiate feature extraction class&#xA;import pandas as pd&#xA;from kats.consts import TimeSeriesData&#xA;from kats.tsfeatures.tsfeatures import TsFeatures&#xA;&#xA;# take `air_passengers` data as an example&#xA;air_passengers_df = pd.read_csv(&#xA;    &#34;../kats/data/air_passengers.csv&#34;,&#xA;    header=0,&#xA;    names=[&#34;time&#34;, &#34;passengers&#34;],&#xA;)&#xA;&#xA;# convert to TimeSeriesData object&#xA;air_passengers_ts = TimeSeriesData(air_passengers_df)&#xA;&#xA;# calculate the TsFeatures&#xA;features = TsFeatures().transform(air_passengers_ts)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Citing Kats&lt;/h2&gt; &#xA;&lt;p&gt;If you use Kats in your work or research, please use the following BibTeX entry.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@software{Jiang_KATS_2022,&#xA;author = {Jiang, Xiaodong and Srivastava, Sudeep and Chatterjee, Sourav and Yu, Yang and Handler, Jeffrey and Zhang, Peiyi and Bopardikar, Rohan and Li, Dawei and Lin, Yanjun and Thakore, Uttam and Brundage, Michael and Holt, Ginger and Komurlu, Caner and Nagalla, Rakshita and Wang, Zhichao and Sun, Hechao and Gao, Peng and Cheung, Wei and Gao, Jun and Wang, Qi and Guerard, Marius and Kazemi, Morteza and Chen, Yulin and Zhou, Chong and Lee, Sean and Laptev, Nikolay and Levendovszky, Tiham√©r and Taylor, Jake and Qian, Huijun and Zhang, Jian and Shoydokova, Aida and Singh, Trisha and Zhu, Chengjun and Baz, Zeynep and Bergmeir, Christoph and Yu, Di and Koylan, Ahmet and Jiang, Kun and Temiyasathit, Ploy and Yurtbay, Emre},&#xA;license = {MIT License},&#xA;month = {3},&#xA;title = {{Kats}},&#xA;url = {https://github.com/facebookresearch/Kats},&#xA;version = {0.2.0},&#xA;year = {2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;h3&gt;Version 0.2.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Forecasting &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Added global model, a neural network forecasting model&lt;/li&gt; &#xA;   &lt;li&gt;Added &lt;a href=&#34;https://github.com/facebookresearch/Kats/raw/main/tutorials/kats_205_globalmodel.ipynb&#34;&gt;global model tutorial&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Consolidated backtesting APIs and some minor bug fixes&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Detection &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Added model optimizer for anomaly/ changepoint detection&lt;/li&gt; &#xA;   &lt;li&gt;Added evaluators for anomaly/changepoint detection&lt;/li&gt; &#xA;   &lt;li&gt;Improved simulators, to build synthetic data and inject anomalies&lt;/li&gt; &#xA;   &lt;li&gt;Added new detectors: ProphetTrendDetector, Dynamic Time Warping based detectors&lt;/li&gt; &#xA;   &lt;li&gt;Support for meta-learning, to recommend anomaly detection algorithms and parameters for your dataset&lt;/li&gt; &#xA;   &lt;li&gt;Standardized API for some of our legacy detectors: OutlierDetector, MKDetector&lt;/li&gt; &#xA;   &lt;li&gt;Support for Seasonality Removal in StatSigDetector&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;TsFeatures &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Added time-based features&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Others &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Bug fixes, code coverage improvement, etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 0.1.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Initial release&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Kats is currentely maintaned by community with the main contributions and leading from &lt;a href=&#34;https://www.linkedin.com/in/nickknyazev/&#34;&gt;Nickolai Kniazev&lt;/a&gt; and Peter Shaffery&lt;/p&gt; &#xA;&lt;p&gt;Kats is a project with several skillful researchers and engineers contributing to it. Kats was started and built by &lt;a href=&#34;https://www.linkedin.com/in/xdjiang/&#34;&gt;Xiaodong Jiang&lt;/a&gt; with major contributions coming from many talented individuals in various forms and means. A non-exhaustive but growing list needs to mention: &lt;a href=&#34;https://www.linkedin.com/in/sudeep-srivastava-2129484/&#34;&gt;Sudeep Srivastava&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/souravc83/&#34;&gt;Sourav Chatterjee&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/jeffhandl/&#34;&gt;Jeff Handler&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/rohan-bopardikar-30a99638&#34;&gt;Rohan Bopardikar&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/lidawei/&#34;&gt;Dawei Li&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/yanjun-lin/&#34;&gt;Yanjun Lin&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/yangyu2720/&#34;&gt;Yang Yu&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/michaelb&#34;&gt;Michael Brundage&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/ckomurlu/&#34;&gt;Caner Komurlu&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/rakshita-nagalla/&#34;&gt;Rakshita Nagalla&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/zhichaowang/&#34;&gt;Zhichao Wang&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/hechao-sun-83b9ba4b/&#34;&gt;Hechao Sun&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/peng-gao-9137a24b/&#34;&gt;Peng Gao&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/weizhicheung/&#34;&gt;Wei Cheung&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/jun-gao-71352b64/&#34;&gt;Jun Gao&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/qi-wang-9231a783/&#34;&gt;Qi Wang&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/morteza-kazemi-pmp-csm/&#34;&gt;Morteza Kazemi&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/tiham%C3%A9r-levendovszky-29639b5/&#34;&gt;Tiham√©r Levendovszky&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/jian-zhang-73718917/&#34;&gt;Jian Zhang&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/ahmetburhan/&#34;&gt;Ahmet Koylan&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/kunqiang-jiang-ph-d-0988aa1b/&#34;&gt;Kun Jiang&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/ashoydok/&#34;&gt;Aida Shoydokova&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/nutcha-temiyasathit/&#34;&gt;Ploy Temiyasathit&lt;/a&gt;, Sean Lee, &lt;a href=&#34;http://www.nikolaylaptev.com/&#34;&gt;Nikolay Pavlovich Laptev&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/pyzhang/&#34;&gt;Peiyi Zhang&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/emre-yurtbay-27516313a/&#34;&gt;Emre Yurtbay&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/daniel-dequech/&#34;&gt;Daniel Dequech&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/rui-yan/&#34;&gt;Rui Yan&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/wqcluo/&#34;&gt;William Luo&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/mariusguerard/&#34;&gt;Marius Guerard&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/pietaripulkkinen/&#34;&gt;Pietari Pulkkinen&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/uttam-thakore/&#34;&gt;Uttam Thakore&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/trishasingh2696/&#34;&gt;Trisha Singh&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/huijun-qian-0845a958/&#34;&gt;Huijun Qian&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/chengjunzhu/&#34;&gt;Chengjun Zhu&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/diyu05/&#34;&gt;Di Yu&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/zeynep-erkin-baz-51198a21&#34;&gt;Zeynep Erkin Baz&lt;/a&gt;, and &lt;a href=&#34;https://au.linkedin.com/in/christoph-bergmeir-00711a14/&#34;&gt;Christoph Bergmeir&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Kats is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/facebookresearch/Kats/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>