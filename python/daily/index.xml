<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-26T01:34:32Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mikel-brostrom/boxmot</title>
    <updated>2025-03-26T01:34:32Z</updated>
    <id>tag:github.com,2025-03-26:/mikel-brostrom/boxmot</id>
    <link href="https://github.com/mikel-brostrom/boxmot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;BoxMOT: pluggable SOTA tracking modules for segmentation, object detection and pose estimation models&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BoxMOT: pluggable SOTA tracking modules for segmentation, object detection and pose estimation models&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mikel-brostrom/boxmot/master/assets/images/output_640.gif&#34; width=&#34;400&#34;&gt; &lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;div&gt; &#xA;  &lt;a href=&#34;https://github.com/mikel-brostrom/yolov8_tracking/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/mikel-brostrom/yolov8_tracking/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI CPU testing&#34;&gt;&lt;/a&gt; &#xA;  &lt;a href=&#34;https://pepy.tech/project/boxmot&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/badge/boxmot&#34;&gt;&lt;/a&gt; &#xA;  &lt;br&gt; &#xA;  &lt;a href=&#34;https://colab.research.google.com/drive/18nIqkBr68TkK8dHdarxTco6svHUJGggY?usp=sharing&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt; &#xA;  &lt;a href=&#34;https://doi.org/10.5281/zenodo.8132989&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/DOI/10.5281/zenodo.8132989.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt; &#xA;  &lt;a href=&#34;https://hub.docker.com/r/boxmot/boxmot&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/boxmot/boxmot?logo=docker&#34; alt=&#34;Ultralytics Docker Pulls&#34;&gt;&lt;/a&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains a collection of pluggable, state-of-the-art multi-object trackers designed to seamlessly integrate with segmentation, object detection, and pose estimation models. For methods leveraging appearance-based tracking, we offer both heavyweight (&lt;a href=&#34;https://arxiv.org/pdf/2211.13977.pdf&#34;&gt;CLIPReID&lt;/a&gt;) and lightweight (&lt;a href=&#34;https://arxiv.org/pdf/2101.10774.pdf&#34;&gt;LightMBN&lt;/a&gt;, &lt;a href=&#34;https://arxiv.org/pdf/1905.00953.pdf&#34;&gt;OSNet&lt;/a&gt;) state-of-the-art ReID models, available via automatic download. Additionally, clear and practical examples demonstrate how to effectively integrate these trackers with various popular models, enabling versatility across diverse vision tasks.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;!-- START TRACKER TABLE --&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Tracker&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Status&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;HOTA↑&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;MOTA↑&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;IDF1↑&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;FPS&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2408.13003&#34;&gt;boosttrack&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;68.649&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;76.042&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;81.923&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;25&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2206.14651&#34;&gt;botsort&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;68.251&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;78.328&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;80.622&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;46&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2110.06864&#34;&gt;bytetrack&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;67.619&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;78.081&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;79.188&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;1265&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2202.13514&#34;&gt;strongsort&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;67.394&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;76.413&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;79.017&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2302.11813&#34;&gt;deepocsort&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;67.348&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;75.832&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;79.584&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;12&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2203.14360&#34;&gt;ocsort&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;66.441&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;74.546&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;77.892&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;1483&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://openaccess.thecvf.com/content/CVPR2023W/E2EAD/papers/Stadler_An_Improved_Association_Pipeline_for_Multi-Person_Tracking_CVPRW_2023_paper.pdf&#34;&gt;imprassoc&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;63.699&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;76.407&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;70.837&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;26&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;!-- END TRACKER TABLE --&gt; &#xA; &lt;p&gt;&lt;sub&gt; NOTES: Evaluation was conducted on the second half of the MOT17 training set, as the validation set is not publicly available and the ablation detector was trained on the first half. We employed &lt;a href=&#34;https://github.com/mikel-brostrom/boxmot/releases/download/v11.0.9/runs2.zip&#34;&gt;pre-generated detections and embeddings&lt;/a&gt;. Each tracker was configured using the default parameters from their official repositories. &lt;/sub&gt;&lt;/p&gt; &#xA;&lt;/div&gt;  &#xA;&lt;h2&gt;Why BOXMOT?&lt;/h2&gt; &#xA;&lt;p&gt;Multi-object tracking solutions today depend heavily on the computational capabilities of the underlying hardware. BoxMOT offers a wide range of tracking methods designed to accommodate various hardware constraints—from CPU-only setups to high-end GPUs. Additionally, we provide scripts for rapid experimentation that allow you to save detections and embeddings once, and then load them into any tracking algorithm, eliminating the need to repeatedly generate this data.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Start with &lt;a href=&#34;https://www.python.org/&#34;&gt;&lt;strong&gt;Python&amp;gt;=3.9&lt;/strong&gt;&lt;/a&gt; environment.&lt;/p&gt; &#xA;&lt;p&gt;If you want to run the YOLOX, YOLOv10 or YOLOv11 examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/mikel-brostrom/boxmot.git&#xA;cd boxmot&#xA;pip install poetry&#xA;poetry install --with yolo  # installed boxmot + yolo dependencies&#xA;poetry shell  # activates the newly created environment with the installed dependencies&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;but if you only want to import the tracking modules you can simply:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install boxmot&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;YOLOv8 | YOLOv9 | YOLOv10 examples&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tracking&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ python tracking/track.py --yolo-model yolov10n      # bboxes only&#xA;  python tracking/track.py --yolo-model yolov9s       # bboxes only&#xA;  python tracking/track.py --yolo-model yolov8n       # bboxes only&#xA;                                        yolov8n-seg   # bboxes + segmentation masks&#xA;                                        yolov8n-pose  # bboxes + pose estimation&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tracking methods&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ python tracking/track.py --tracking-method deepocsort&#xA;                                             strongsort&#xA;                                             ocsort&#xA;                                             bytetrack&#xA;                                             botsort&#xA;                                             imprassoc&#xA;                                             boosttrack&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tracking sources&lt;/summary&gt; &#xA; &lt;p&gt;Tracking can be run on most video formats&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ python tracking/track.py --source 0                               # webcam&#xA;                                    img.jpg                         # image&#xA;                                    vid.mp4                         # video&#xA;                                    path/                           # directory&#xA;                                    path/*.jpg                      # glob&#xA;                                    &#39;https://youtu.be/Zgi9g1ksQHc&#39;  # YouTube&#xA;                                    &#39;rtsp://example.com/media.mp4&#39;  # RTSP, RTMP, HTTP stream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Select ReID model&lt;/summary&gt; &#xA; &lt;p&gt;Some tracking methods combine appearance description and motion in the process of tracking. For those which use appearance, you can choose a ReID model based on your needs from this &lt;a href=&#34;https://kaiyangzhou.github.io/deep-person-reid/MODEL_ZOO&#34;&gt;ReID model zoo&lt;/a&gt;. These model can be further optimized for you needs by the &lt;a href=&#34;https://github.com/mikel-brostrom/yolo_tracking/raw/master/boxmot/appearance/reid_export.py&#34;&gt;reid_export.py&lt;/a&gt; script&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ python tracking/track.py --source 0 --reid-model lmbn_n_cuhk03_d.pt               # lightweight&#xA;                                                   osnet_x0_25_market1501.pt&#xA;                                                   mobilenetv2_x1_4_msmt17.engine&#xA;                                                   resnet50_msmt17.onnx&#xA;                                                   osnet_x1_0_msmt17.pt&#xA;                                                   clip_market1501.pt               # heavy&#xA;                                                   clip_vehicleid.pt&#xA;                                                   ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Filter tracked classes&lt;/summary&gt; &#xA; &lt;p&gt;By default the tracker tracks all MS COCO classes.&lt;/p&gt; &#xA; &lt;p&gt;If you want to track a subset of the classes that you model predicts, add their corresponding index after the classes flag,&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python tracking/track.py --source 0 --yolo-model yolov8s.pt --classes 16 17  # COCO yolov8 model. Track cats and dogs, only&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://tech.amikelive.com/node-718/what-object-categories-labels-are-in-coco-dataset/&#34;&gt;Here&lt;/a&gt; is a list of all the possible objects that a Yolov8 model trained on MS COCO can detect. Notice that the indexing for the classes in this repo starts at zero&lt;/p&gt; &#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Evaluation&lt;/summary&gt; &#xA; &lt;p&gt;Evaluate a combination of detector, tracking method and ReID model on standard MOT dataset or you custom one by&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ python3 tracking/val.py --yolo-model yolov8n.pt --reid-model osnet_x0_25_msmt17.pt --tracking-method deepocsort --verbose --source ./assets/MOT17-mini/train&#xA;$ python3 tracking/val.py --yolo-model yolov8n.pt --reid-model osnet_x0_25_msmt17.pt --tracking-method ocsort     --verbose --source ./tracking/val_utils/MOT17/train&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Detections and embeddings are stored for the selected YOLO and ReID model respectively, which then be loaded into any tracking algorithm. Avoiding the overhead of repeatedly generating this data.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Evolution&lt;/summary&gt; &#xA; &lt;p&gt;We use a fast and elitist multiobjective genetic algorithm for tracker hyperparameter tuning. By default the objectives are: HOTA, MOTA, IDF1. Run it by&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# saves dets and embs under ./runs/dets_n_embs separately for each selected yolo and reid model&#xA;$ python tracking/generate_dets_n_embs.py --source ./assets/MOT17-mini/train --yolo-model yolov8n.pt yolov8s.pt --reid-model weights/osnet_x0_25_msmt17.pt&#xA;# evolve parameters for specified tracking method using the selected detections and embeddings generated in the previous step&#xA;$ python tracking/evolve.py --dets yolov8n --embs osnet_x0_25_msmt17 --n-trials 9 --tracking-method botsort --source ./assets/MOT17-mini/train&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;The set of hyperparameters leading to the best HOTA result are written to the tracker&#39;s config file.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Export&lt;/summary&gt; &#xA; &lt;p&gt;We support ReID model export to ONNX, OpenVINO, TorchScript and TensorRT&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# export to ONNX&#xA;$ python3 boxmot/appearance/reid_export.py --include onnx --device cpu&#xA;# export to OpenVINO&#xA;$ python3 boxmot/appearance/reid_export.py --include openvino --device cpu&#xA;# export to TensorRT with dynamic input&#xA;$ python3 boxmot/appearance/reid_export.py --include engine --device 0 --dynamic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Custom tracking examples&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Example Description&lt;/th&gt; &#xA;    &lt;th&gt;Notebook&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Torchvision bounding box tracking with BoxMOT&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mikel-brostrom/boxmot/master/examples/det/torchvision_boxmot.ipynb&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Notebook-torchvision_det_boxmot.ipynb-blue&#34; alt=&#34;Notebook&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Torchvision pose tracking with BoxMOT&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mikel-brostrom/boxmot/master/examples/pose/torchvision_boxmot.ipynb&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Notebook-torchvision_pose_boxmot.ipynb-blue&#34; alt=&#34;Notebook&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Torchvision segmentation tracking with BoxMOT&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mikel-brostrom/boxmot/master/examples/seg/torchvision_boxmot.ipynb&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Notebook-torchvision_seg_boxmot.ipynb-blue&#34; alt=&#34;Notebook&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/mikel-brostrom/yolo_tracking/graphs/contributors%20&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=mikel-brostrom/yolo_tracking&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;For BoxMOT bugs and feature requests please visit &lt;a href=&#34;https://github.com/mikel-brostrom/boxmot/issues&#34;&gt;GitHub Issues&lt;/a&gt;. For business inquiries or professional support requests please send an email to: &lt;a href=&#34;mailto:box-mot@outlook.com&#34;&gt;box-mot@outlook.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>