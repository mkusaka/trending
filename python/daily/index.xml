<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-21T01:41:04Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>brycedrennan/imaginAIry</title>
    <updated>2022-09-21T01:41:04Z</updated>
    <id>tag:github.com,2022-09-21:/brycedrennan/imaginAIry</id>
    <link href="https://github.com/brycedrennan/imaginAIry" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AI imagined images. Pythonic generation of stable diffusion images.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ImaginAIry ü§ñüß†&lt;/h1&gt; &#xA;&lt;p&gt;AI imagined images. Pythonic generation of stable diffusion images.&lt;/p&gt; &#xA;&lt;p&gt;&#34;just works&#34; on Linux and macOS(M1) (and maybe windows?).&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# on macOS, make sure rust is installed first&#xA;&amp;gt;&amp;gt; pip install imaginairy&#xA;&amp;gt;&amp;gt; imagine &#34;a scenic landscape&#34; &#34;a photo of a dog&#34; &#34;photo of a fruit bowl&#34; &#34;portrait photo of a freckled woman&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details closed&gt; &#xA; &lt;summary&gt;Console Output&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ü§ñüß† received 4 prompt(s) and will repeat them 1 times to create 4 images.&#xA;Loading model onto mps backend...&#xA;Generating üñº  : &#34;a scenic landscape&#34; 512x512px seed:557988237 prompt-strength:7.5 steps:40 sampler-type:PLMS&#xA;    PLMS Sampler: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 40/40 [00:29&amp;lt;00:00,  1.36it/s]&#xA;    üñº  saved to: ./outputs/000001_557988237_PLMS40_PS7.5_a_scenic_landscape.jpg&#xA;Generating üñº  : &#34;a photo of a dog&#34; 512x512px seed:277230171 prompt-strength:7.5 steps:40 sampler-type:PLMS&#xA;    PLMS Sampler: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 40/40 [00:28&amp;lt;00:00,  1.41it/s]&#xA;    üñº  saved to: ./outputs/000002_277230171_PLMS40_PS7.5_a_photo_of_a_dog.jpg&#xA;Generating üñº  : &#34;photo of a fruit bowl&#34; 512x512px seed:639753980 prompt-strength:7.5 steps:40 sampler-type:PLMS&#xA;    PLMS Sampler: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 40/40 [00:28&amp;lt;00:00,  1.40it/s]&#xA;    üñº  saved to: ./outputs/000003_639753980_PLMS40_PS7.5_photo_of_a_fruit_bowl.jpg&#xA;Generating üñº  : &#34;portrait photo of a freckled woman&#34; 512x512px seed:500686645 prompt-strength:7.5 steps:40 sampler-type:PLMS&#xA;    PLMS Sampler: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 40/40 [00:29&amp;lt;00:00,  1.37it/s]&#xA;    üñº  saved to: ./outputs/000004_500686645_PLMS40_PS7.5_portrait_photo_of_a_freckled_woman.jpg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/000019_786355545_PLMS50_PS7.5_a_scenic_landscape.jpg&#34; height=&#34;256&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/000032_337692011_PLMS40_PS7.5_a_photo_of_a_dog.jpg&#34; height=&#34;256&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/000056_293284644_PLMS40_PS7.5_photo_of_a_bowl_of_fruit.jpg&#34; height=&#34;256&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/000078_260972468_PLMS40_PS7.5_portrait_photo_of_a_freckled_woman.jpg&#34; height=&#34;256&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Automated Replacement (txt2mask) &lt;a href=&#34;https://github.com/timojl/clipseg&#34;&gt;by clipseg&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt;&amp;gt; imagine --init-image pearl_earring.jpg --mask-prompt face --mask-mode keep --init-image-strength .4 &#34;a female doctor&#34; &#34;an elegant woman&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/mask_examples/pearl000.jpg&#34; height=&#34;200&#34;&gt;‚û°Ô∏è &lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/mask_examples/pearl002.jpg&#34; height=&#34;200&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/mask_examples/pearl004.jpg&#34; height=&#34;200&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/mask_examples/pearl001.jpg&#34; height=&#34;200&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/mask_examples/pearl003.jpg&#34; height=&#34;200&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt;&amp;gt; imagine --init-image fruit-bowl.jpg --mask-prompt fruit --mask-mode replace --init-image-strength .1 &#34;a bowl of pears&#34; &#34;a bowl of gold&#34; &#34;a bowl of popcorn&#34; &#34;a bowl of spaghetti&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/000056_293284644_PLMS40_PS7.5_photo_of_a_bowl_of_fruit.jpg&#34; height=&#34;200&#34;&gt;‚û°Ô∏è &lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/mask_examples/bowl004.jpg&#34; height=&#34;200&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/mask_examples/bowl001.jpg&#34; height=&#34;200&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/mask_examples/bowl002.jpg&#34; height=&#34;200&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/mask_examples/bowl003.jpg&#34; height=&#34;200&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Face Enhancement &lt;a href=&#34;https://github.com/sczhou/CodeFormer&#34;&gt;by CodeFormer&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt;&amp;gt; imagine &#34;a couple smiling&#34; --steps 40 --seed 1 --fix-faces&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/brycedrennan/imaginAIry/raw/master/assets/000178_1_PLMS40_PS7.5_a_couple_smiling_nofix.png&#34; height=&#34;256&#34;&gt; ‚û°Ô∏è &lt;img src=&#34;https://github.com/brycedrennan/imaginAIry/raw/master/assets/000178_1_PLMS40_PS7.5_a_couple_smiling_fixed.png&#34; height=&#34;256&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Upscaling &lt;a href=&#34;https://github.com/xinntao/Real-ESRGAN&#34;&gt;by RealESRGAN&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt;&amp;gt; imagine &#34;colorful smoke&#34; --steps 40 --upscale&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/brycedrennan/imaginAIry/raw/master/assets/000206_856637805_PLMS40_PS7.5_colorful_smoke.jpg&#34; height=&#34;128&#34;&gt; ‚û°Ô∏è &lt;img src=&#34;https://github.com/brycedrennan/imaginAIry/raw/master/assets/000206_856637805_PLMS40_PS7.5_colorful_smoke_upscaled.jpg&#34; height=&#34;256&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tiled Images&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt;&amp;gt; imagine  &#34;gold coins&#34; &#34;a lush forest&#34; &#34;piles of old books&#34; leaves --tile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/000066_801493266_PLMS40_PS7.5_gold_coins.jpg&#34; height=&#34;128&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/000066_801493266_PLMS40_PS7.5_gold_coins.jpg&#34; height=&#34;128&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/000066_801493266_PLMS40_PS7.5_gold_coins.jpg&#34; height=&#34;128&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/000118_597948545_PLMS40_PS7.5_a_lush_forest.jpg&#34; height=&#34;128&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/000118_597948545_PLMS40_PS7.5_a_lush_forest.jpg&#34; height=&#34;128&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/000118_597948545_PLMS40_PS7.5_a_lush_forest.jpg&#34; height=&#34;128&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/000075_961095192_PLMS40_PS7.5_piles_of_old_books.jpg&#34; height=&#34;128&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/000075_961095192_PLMS40_PS7.5_piles_of_old_books.jpg&#34; height=&#34;128&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/000075_961095192_PLMS40_PS7.5_piles_of_old_books.jpg&#34; height=&#34;128&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/000040_527733581_PLMS40_PS7.5_leaves.jpg&#34; height=&#34;128&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/000040_527733581_PLMS40_PS7.5_leaves.jpg&#34; height=&#34;128&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/000040_527733581_PLMS40_PS7.5_leaves.jpg&#34; height=&#34;128&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Image-to-Image&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt;&amp;gt; imagine &#34;portrait of a smiling lady. oil painting&#34; --init-image girl_with_a_pearl_earring.jpg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/tests/data/girl_with_a_pearl_earring.jpg&#34; height=&#34;256&#34;&gt; ‚û°Ô∏è &lt;img src=&#34;https://raw.githubusercontent.com/brycedrennan/imaginAIry/master/assets/000105_33084057_DDIM40_PS7.5_portrait_of_a_smiling_lady._oil_painting._.jpg&#34; height=&#34;256&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Generate image captions&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt;&amp;gt; aimg describe assets/mask_examples/bowl001.jpg&#xA;a bowl full of gold bars sitting on a table&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It makes images from text descriptions! üéâ&lt;/li&gt; &#xA; &lt;li&gt;Generate images either in code or from command line.&lt;/li&gt; &#xA; &lt;li&gt;It just works. Proper requirements are installed. model weights are automatically downloaded. No huggingface account needed. (if you have the right hardware... and aren&#39;t on windows)&lt;/li&gt; &#xA; &lt;li&gt;No more distorted faces!&lt;/li&gt; &#xA; &lt;li&gt;Noisy logs are gone (which was surprisingly hard to accomplish)&lt;/li&gt; &#xA; &lt;li&gt;WeightedPrompts let you smash together separate prompts (cat-dog)&lt;/li&gt; &#xA; &lt;li&gt;Tile Mode creates tileable images&lt;/li&gt; &#xA; &lt;li&gt;Prompt metadata saved into image file metadata&lt;/li&gt; &#xA; &lt;li&gt;Edit images by describing the part you want edited (see example above)&lt;/li&gt; &#xA; &lt;li&gt;Have AI generate captions for images &lt;code&gt;aimg describe &amp;lt;filename-or-url&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How To&lt;/h2&gt; &#xA;&lt;p&gt;For full command line instructions run &lt;code&gt;aimg --help&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from imaginairy import imagine, imagine_image_files, ImaginePrompt, WeightedPrompt, LazyLoadingImage&#xA;&#xA;url = &#34;https://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/Thomas_Cole_-_Architect%E2%80%99s_Dream_-_Google_Art_Project.jpg/540px-Thomas_Cole_-_Architect%E2%80%99s_Dream_-_Google_Art_Project.jpg&#34;&#xA;prompts = [&#xA;    ImaginePrompt(&#34;a scenic landscape&#34;, seed=1),&#xA;    ImaginePrompt(&#34;a bowl of fruit&#34;),&#xA;    ImaginePrompt([&#xA;        WeightedPrompt(&#34;cat&#34;, weight=1),&#xA;        WeightedPrompt(&#34;dog&#34;, weight=1),&#xA;    ]),&#xA;    ImaginePrompt(&#xA;        &#34;a spacious building&#34;, &#xA;        init_image=LazyLoadingImage(url=url)&#xA;    ),&#xA;    ImaginePrompt(&#xA;        &#34;a bowl of strawberries&#34;, &#xA;        init_image=LazyLoadingImage(filepath=&#34;mypath/to/bowl_of_fruit.jpg&#34;),&#xA;        mask_prompt=&#34;fruit|stems&#34;,&#xA;        mask_mode=&#34;replace&#34;,&#xA;        mask_expansion=3&#xA;    )&#xA;]&#xA;for result in imagine(prompts):&#xA;    # do something&#xA;    result.save(&#34;my_image.jpg&#34;)&#xA;&#xA;# or&#xA;&#xA;imagine_image_files(prompts, outdir=&#34;./my-art&#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;~10 gb space for models to download&lt;/li&gt; &#xA; &lt;li&gt;A decent computer with either a CUDA supported graphics card or M1 processor.&lt;/li&gt; &#xA; &lt;li&gt;Python installed. Preferably Python 3.10.&lt;/li&gt; &#xA; &lt;li&gt;For macOS &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;rust must be installed&lt;/a&gt; to compile the &lt;code&gt;tokenizer&lt;/code&gt; library. be installed via: &lt;code&gt;curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running in Docker&lt;/h2&gt; &#xA;&lt;p&gt;See example Dockerfile (works on machine where you can pass the gpu into the container)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build . -t imaginairy&#xA;# you really want to map the cache or you end up wasting a lot of time and space redownloading the model weights&#xA;docker run -it --gpus all -v $HOME/.cache/huggingface:/root/.cache/huggingface -v $HOME/.cache/torch:/root/.cache/torch -v `pwd`/outputs:/outputs imaginairy /bin/bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ChangeLog&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;1.5.2&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;fix: missing config file for describe feature&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;1.5.1&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;img2img now supported with PLMS (instead of just DDIM)&lt;/li&gt; &#xA; &lt;li&gt;added image captioning feature &lt;code&gt;aimg describe dog.jpg&lt;/code&gt; =&amp;gt; &lt;code&gt;a brown dog sitting on grass&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;added new commandline tool &lt;code&gt;aimg&lt;/code&gt; for additional image manipulation functionality&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;1.4.0&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;support multiple additive targets for masking with &lt;code&gt;|&lt;/code&gt; symbol. Example: &#34;fruit|stem|fruit stem&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;1.3.0&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;added prompt based image editing. Example: &#34;fruit =&amp;gt; gold coins&#34;&lt;/li&gt; &#xA; &lt;li&gt;test coverage improved&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;1.2.0&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;allow urls as init-images&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** previous **&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;img2img actually does # of steps you specify&lt;/li&gt; &#xA; &lt;li&gt;performance optimizations&lt;/li&gt; &#xA; &lt;li&gt;numerous other changes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Models Used&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CLIP - &lt;a href=&#34;https://openai.com/blog/clip/&#34;&gt;https://openai.com/blog/clip/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LDM - Latent Diffusion&lt;/li&gt; &#xA; &lt;li&gt;Stable Diffusion &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/CompVis/stable-diffusion&#34;&gt;https://github.com/CompVis/stable-diffusion&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://huggingface.co/CompVis/stable-diffusion-v1-4&#34;&gt;https://huggingface.co/CompVis/stable-diffusion-v1-4&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://laion.ai/blog/laion-5b/&#34;&gt;https://laion.ai/blog/laion-5b/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Not Supported&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a web interface. this is a python library&lt;/li&gt; &#xA; &lt;li&gt;training&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Todo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;performance optimizations &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;‚úÖ &lt;a href=&#34;https://github.com/huggingface/diffusers/raw/main/docs/source/optimization/fp16.mdx&#34;&gt;https://github.com/huggingface/diffusers/blob/main/docs/source/optimization/fp16.mdx&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;‚úÖ &lt;a href=&#34;https://github.com/CompVis/stable-diffusion/compare/main...Doggettx:stable-diffusion:autocast-improvements#&#34;&gt;https://github.com/CompVis/stable-diffusion/compare/main...Doggettx:stable-diffusion:autocast-improvements#&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;‚úÖ &lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/xalaws/test_update_for_less_memory_usage_and_higher/&#34;&gt;https://www.reddit.com/r/StableDiffusion/comments/xalaws/test_update_for_less_memory_usage_and_higher/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/neonsecret/stable-diffusion&#34;&gt;https://github.com/neonsecret/stable-diffusion&lt;/a&gt; &lt;a href=&#34;https://github.com/CompVis/stable-diffusion/pull/177&#34;&gt;https://github.com/CompVis/stable-diffusion/pull/177&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/huggingface/diffusers/pull/532/files&#34;&gt;https://github.com/huggingface/diffusers/pull/532/files&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;‚úÖ deploy to pypi&lt;/li&gt; &#xA; &lt;li&gt;find similar images &lt;a href=&#34;https://knn5.laion.ai/?back=https%3A%2F%2Fknn5.laion.ai%2F&amp;amp;index=laion5B&amp;amp;useMclip=false&#34;&gt;https://knn5.laion.ai/?back=https%3A%2F%2Fknn5.laion.ai%2F&amp;amp;index=laion5B&amp;amp;useMclip=false&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Development Environment &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;‚úÖ add tests&lt;/li&gt; &#xA;   &lt;li&gt;set up ci (test/lint/format)&lt;/li&gt; &#xA;   &lt;li&gt;add docs&lt;/li&gt; &#xA;   &lt;li&gt;remove yaml config&lt;/li&gt; &#xA;   &lt;li&gt;delete more unused code&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Interface improvements &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;‚úÖ init-image at command line&lt;/li&gt; &#xA;   &lt;li&gt;prompt expansion&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Image Generation Features &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;‚úÖ add k-diffusion sampling methods&lt;/li&gt; &#xA;   &lt;li&gt;why is k-diffusion so slow compared to plms? 2 it/s vs 8 it/s&lt;/li&gt; &#xA;   &lt;li&gt;negative prompting &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;some syntax to allow it in a text string&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;upscaling &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;‚úÖ realesrgan&lt;/li&gt; &#xA;     &lt;li&gt;ldm&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/lowfuel/progrock-stable&#34;&gt;https://github.com/lowfuel/progrock-stable&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;stable super-res? &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;todo: try with 1-0-0-0 mask at full image resolution (rencoding entire image+predicted image at every step)&lt;/li&gt; &#xA;       &lt;li&gt;todo: use a gaussian pyramid and only include the &#34;high-detail&#34; level of the pyramid into the next step&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;‚úÖ face enhancers &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;‚úÖ gfpgan - &lt;a href=&#34;https://github.com/TencentARC/GFPGAN&#34;&gt;https://github.com/TencentARC/GFPGAN&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;‚úÖ codeformer - &lt;a href=&#34;https://github.com/sczhou/CodeFormer&#34;&gt;https://github.com/sczhou/CodeFormer&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;‚úÖ image describe feature - &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/salesforce/BLIP&#34;&gt;https://github.com/salesforce/BLIP&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/rmokady/CLIP_prefix_caption&#34;&gt;https://github.com/rmokady/CLIP_prefix_caption&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/pharmapsychotic/clip-interrogator&#34;&gt;https://github.com/pharmapsychotic/clip-interrogator&lt;/a&gt; (blip + clip)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/KaiyangZhou/CoOp&#34;&gt;https://github.com/KaiyangZhou/CoOp&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;outpainting&lt;/li&gt; &#xA;   &lt;li&gt;‚úÖ inpainting &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/andreas128/RePaint&#34;&gt;https://github.com/andreas128/RePaint&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;img2img but keeps img stable&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/xboy90/a_better_way_of_doing_img2img_by_finding_the/&#34;&gt;https://www.reddit.com/r/StableDiffusion/comments/xboy90/a_better_way_of_doing_img2img_by_finding_the/&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://gist.github.com/trygvebw/c71334dd127d537a15e9d59790f7f5e1&#34;&gt;https://gist.github.com/trygvebw/c71334dd127d537a15e9d59790f7f5e1&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/pesser/stable-diffusion/commit/bbb52981460707963e2a62160890d7ecbce00e79&#34;&gt;https://github.com/pesser/stable-diffusion/commit/bbb52981460707963e2a62160890d7ecbce00e79&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;CPU support&lt;/li&gt; &#xA;   &lt;li&gt;‚úÖ img2img for plms&lt;/li&gt; &#xA;   &lt;li&gt;img2img for kdiff functions&lt;/li&gt; &#xA;   &lt;li&gt;images as actual prompts instead of just init images &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;requires model fine-tuning since SD1.4 expects 77x768 text encoding input&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://twitter.com/Buntworthy/status/1566744186153484288&#34;&gt;https://twitter.com/Buntworthy/status/1566744186153484288&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/justinpinkney/stable-diffusion&#34;&gt;https://github.com/justinpinkney/stable-diffusion&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/LambdaLabsML/lambda-diffusers&#34;&gt;https://github.com/LambdaLabsML/lambda-diffusers&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/MachineLearning/comments/x6k5bm/n_stable_diffusion_image_variations_released/&#34;&gt;https://www.reddit.com/r/MachineLearning/comments/x6k5bm/n_stable_diffusion_image_variations_released/&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;cross-attention control: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/bloc97/CrossAttentionControl/raw/main/CrossAttention_Release_NoImages.ipynb&#34;&gt;https://github.com/bloc97/CrossAttentionControl/blob/main/CrossAttention_Release_NoImages.ipynb&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;guided generation &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/drive/1dlgggNa5Mz8sEAGU0wFCHhGLFooW_pf1#scrollTo=UDeXQKbPTdZI&#34;&gt;https://colab.research.google.com/drive/1dlgggNa5Mz8sEAGU0wFCHhGLFooW_pf1#scrollTo=UDeXQKbPTdZI&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/aicrumb/doohickey/blob/main/Doohickey_Diffusion.ipynb#scrollTo=PytCwKXCmPid&#34;&gt;https://colab.research.google.com/github/aicrumb/doohickey/blob/main/Doohickey_Diffusion.ipynb#scrollTo=PytCwKXCmPid&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/mlfoundations/open_clip&#34;&gt;https://github.com/mlfoundations/open_clip&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;‚úÖ tiling&lt;/li&gt; &#xA;   &lt;li&gt;output show-work videos&lt;/li&gt; &#xA;   &lt;li&gt;image variations &lt;a href=&#34;https://github.com/lstein/stable-diffusion/raw/main/VARIATIONS.md&#34;&gt;https://github.com/lstein/stable-diffusion/blob/main/VARIATIONS.md&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;textual inversion &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/xbwb5y/how_to_run_textual_inversion_locally_train_your/&#34;&gt;https://www.reddit.com/r/StableDiffusion/comments/xbwb5y/how_to_run_textual_inversion_locally_train_your/&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/huggingface/notebooks/blob/main/diffusers/sd_textual_inversion_training.ipynb#scrollTo=50JuJUM8EG1h&#34;&gt;https://colab.research.google.com/github/huggingface/notebooks/blob/main/diffusers/sd_textual_inversion_training.ipynb#scrollTo=50JuJUM8EG1h&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/huggingface/notebooks/blob/main/diffusers/stable_diffusion_textual_inversion_library_navigator.ipynb&#34;&gt;https://colab.research.google.com/github/huggingface/notebooks/blob/main/diffusers/stable_diffusion_textual_inversion_library_navigator.ipynb&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;fix saturation at high CFG &lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/xalo78/fixing_excessive_contrastsaturation_resulting/&#34;&gt;https://www.reddit.com/r/StableDiffusion/comments/xalo78/fixing_excessive_contrastsaturation_resulting/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/xbrrgt/a_rundown_of_twenty_new_methodsoptions_added_to/&#34;&gt;https://www.reddit.com/r/StableDiffusion/comments/xbrrgt/a_rundown_of_twenty_new_methodsoptions_added_to/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Noteable Stable Diffusion Implementations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/huggingface/diffusers/tree/main/src/diffusers/pipelines/stable_diffusion&#34;&gt;https://github.com/huggingface/diffusers/tree/main/src/diffusers/pipelines/stable_diffusion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lstein/stable-diffusion&#34;&gt;https://github.com/lstein/stable-diffusion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui&#34;&gt;https://github.com/AUTOMATIC1111/stable-diffusion-webui&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Further Reading&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Differences between samplers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/xbeyw3/can_anyone_offer_a_little_guidance_on_the/&#34;&gt;https://www.reddit.com/r/StableDiffusion/comments/xbeyw3/can_anyone_offer_a_little_guidance_on_the/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/bigsleep/comments/xb5cat/wiskkeys_lists_of_texttoimage_systems_and_related/&#34;&gt;https://www.reddit.com/r/bigsleep/comments/xb5cat/wiskkeys_lists_of_texttoimage_systems_and_related/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/blog/annotated-diffusion&#34;&gt;https://huggingface.co/blog/annotated-diffusion&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>D3Ext/AORT</title>
    <updated>2022-09-21T01:41:04Z</updated>
    <id>tag:github.com,2022-09-21:/D3Ext/AORT</id>
    <link href="https://github.com/D3Ext/AORT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;All in One Recon Tool for Bug Bounty&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;All in One Recon Tool&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;An easy-to-use python tool to perform dns recon, subdomain enumeration and much more&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The purpouse of this tool is helping bug hunters and pentesters during reconnaissance&lt;/p&gt; &#xA;&lt;p&gt;If you want to know more about the tool you can read my own &lt;a href=&#34;https://d3ext.github.io/aort&#34;&gt;post&lt;/a&gt; in my blog (written in spanish)&lt;/p&gt; &#xA;&lt;h2&gt;Installation:&lt;/h2&gt; &#xA;&lt;p&gt;It can be used in any system with python3&lt;/p&gt; &#xA;&lt;p&gt;You can easily install AORT using pip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip3 install aort&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to install it from source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/D3Ext/AORT&#xA;cd AORT&#xA;pip3 install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;One-liner&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/D3Ext/AORT &amp;amp;&amp;amp; cd AORT &amp;amp;&amp;amp; pip3 install -r requirements.txt &amp;amp;&amp;amp; python3 AORT.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Common usages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If installed with pip3:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;aort&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;To see the help panel and other parameters&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python3 AORT.py -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Main usage of the tool to dump the valid domains&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python3 AORT.py -d example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Perform all the recon&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python3 AORT.py -d domain.com --all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;span&gt;‚òë&lt;/span&gt; Enumerate subdomains using passive techniques (like &lt;strong&gt;subfinder&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚òë&lt;/span&gt; A lot of extra queries to enumerate the DNS&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚òë&lt;/span&gt; Domain Zone transfer attack&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚òë&lt;/span&gt; WAF type detection&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚òë&lt;/span&gt; Common enumeration (CMSs, reverse proxies, jquery...)&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚òë&lt;/span&gt; Whois target domain&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚òë&lt;/span&gt; Subdomain Takeover checker&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚òë&lt;/span&gt; Scan common ports&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚òë&lt;/span&gt; Check active subdomains (like &lt;strong&gt;httprobe&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚òë&lt;/span&gt; Wayback machine support to enumerate endpoints (like &lt;strong&gt;waybackurls&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚òë&lt;/span&gt; Email harvesting&lt;/p&gt; &#xA;&lt;h2&gt;Todo:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compare results with other tools such as &lt;strong&gt;subfinder&lt;/strong&gt;, &lt;strong&gt;gau&lt;/strong&gt;, &lt;strong&gt;httprobe&lt;/strong&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo:&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Simple query to find valid subdomains&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/D3Ext/AORT/main/demo.png&#34;&gt; &#xA;&lt;h2&gt;Third part&lt;/h2&gt; &#xA;&lt;p&gt;The tool uses different services to get subdomains in different ways&lt;/p&gt; &#xA;&lt;p&gt;The WAF detector was modified and addapted from &lt;a href=&#34;https://github.com/Nefcore/CRLFsuite&#34;&gt;CRLFSuite&lt;/a&gt; concept&lt;/p&gt; &#xA;&lt;p&gt;All DNS queries are scripted in python at 100%&lt;/p&gt; &#xA;&lt;p&gt;Email harvesting using Hunter.io API with personal token (free signup)&lt;/p&gt; &#xA;&lt;h2&gt;Extra&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you consider this project has been useful, I would really appreciate supporting me by giving this repo a star or buying me a coffee.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/d3ext&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;&amp;quot;Buy Me A Coffee&amp;quot;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright ¬© 2022, &lt;em&gt;D3Ext&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sissbruecker/linkding</title>
    <updated>2022-09-21T01:41:04Z</updated>
    <id>tag:github.com,2022-09-21:/sissbruecker/linkding</id>
    <link href="https://github.com/sissbruecker/linkding" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Self-hosted bookmark service&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://github.com/sissbruecker/linkding&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/sissbruecker/linkding/master/docs/header.svg?sanitize=true&#34; height=&#34;50&#34;&gt; &lt;/a&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sissbruecker/linkding/master/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sissbruecker/linkding/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sissbruecker/linkding/master/#using-docker&#34;&gt;Using Docker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sissbruecker/linkding/master/#using-docker-compose&#34;&gt;Using Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sissbruecker/linkding/master/#user-setup&#34;&gt;User Setup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sissbruecker/linkding/master/#managed-hosting-options&#34;&gt;Managed Hosting Options&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sissbruecker/linkding/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sissbruecker/linkding/master/#browser-extension&#34;&gt;Browser Extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sissbruecker/linkding/master/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sissbruecker/linkding/master/#development&#34;&gt;Development&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;linkding is a simple bookmark service that you can host yourself. It&#39;s designed be to be minimal, fast, and easy to set up using Docker.&lt;/p&gt; &#xA;&lt;p&gt;The name comes from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;link&lt;/em&gt; which is often used as a synonym for URLs and bookmarks in common language&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Ding&lt;/em&gt; which is German for thing&lt;/li&gt; &#xA; &lt;li&gt;...so basically something for managing your links&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Feature Overview:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Organize bookmarks with tags&lt;/li&gt; &#xA; &lt;li&gt;Read it later functionality&lt;/li&gt; &#xA; &lt;li&gt;Share bookmarks with other users&lt;/li&gt; &#xA; &lt;li&gt;Bulk editing&lt;/li&gt; &#xA; &lt;li&gt;Bookmark archive&lt;/li&gt; &#xA; &lt;li&gt;Automatically provides titles and descriptions of bookmarked websites&lt;/li&gt; &#xA; &lt;li&gt;Automatically creates snapshots of bookmarked websites on &lt;a href=&#34;https://archive.org/web/&#34;&gt;the Internet Archive Wayback Machine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Import and export bookmarks in Netscape HTML format&lt;/li&gt; &#xA; &lt;li&gt;Extensions for &lt;a href=&#34;https://addons.mozilla.org/de/firefox/addon/linkding-extension/&#34;&gt;Firefox&lt;/a&gt; and &lt;a href=&#34;https://chrome.google.com/webstore/detail/linkding-extension/beakmhbijpdhipnjhnclmhgjlddhidpe&#34;&gt;Chrome&lt;/a&gt;, as well as a bookmarklet&lt;/li&gt; &#xA; &lt;li&gt;Light and dark themes&lt;/li&gt; &#xA; &lt;li&gt;REST API for developing 3rd party apps&lt;/li&gt; &#xA; &lt;li&gt;Admin panel for user self-service and raw data access&lt;/li&gt; &#xA; &lt;li&gt;Easy setup using Docker, uses SQLite as database&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Demo:&lt;/strong&gt; &lt;a href=&#34;https://demo.linkding.link/&#34;&gt;https://demo.linkding.link/&lt;/a&gt; (configured with open registration)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Screenshot:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sissbruecker/linkding/master/docs/linkding-screenshot.png?raw=true&#34; alt=&#34;Screenshot&#34; title=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;linkding is designed to be run with container solutions like &lt;a href=&#34;https://docs.docker.com/get-started/&#34;&gt;Docker&lt;/a&gt;. The Docker image is compatible with ARM platforms, so it can be run on a Raspberry Pi.&lt;/p&gt; &#xA;&lt;h3&gt;Using Docker&lt;/h3&gt; &#xA;&lt;p&gt;To install linkding using Docker you can just run the &lt;a href=&#34;https://hub.docker.com/repository/docker/sissbruecker/linkding&#34;&gt;latest image&lt;/a&gt; from Docker Hub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --name linkding -p 9090:9090 -d sissbruecker/linkding:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, the application runs on port &lt;code&gt;9090&lt;/code&gt;, you can map it to a different host port by modifying the port mapping in the command above. If everything completed successfully, the application should now be running and can be accessed at &lt;a href=&#34;http://localhost:9090&#34;&gt;http://localhost:9090&lt;/a&gt;, provided you did not change the port mapping.&lt;/p&gt; &#xA;&lt;p&gt;Note that the command above will store the linkding SQLite database in the container, which means that deleting the container, for example when upgrading the installation, will also remove the database. For hosting an actual installation you usually want to store the database on the host system, rather than in the container. To do so, run the following command, and replace the &lt;code&gt;{host-data-folder}&lt;/code&gt; placeholder with an absolute path to a folder on your host system where you want to store the linkding database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --name linkding -p 9090:9090 -v {host-data-folder}:/etc/linkding/data -d sissbruecker/linkding:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To upgrade the installation to a new version, remove the existing container, pull the latest version of the linkding Docker image, and then start a new container using the same command that you used above. There is a &lt;a href=&#34;https://github.com/sissbruecker/linkding/raw/master/install-linkding.sh&#34;&gt;shell script&lt;/a&gt; available to automate these steps. The script can be configured using environment variables, or you can just modify it.&lt;/p&gt; &#xA;&lt;p&gt;To complete the setup, you still have to &lt;a href=&#34;https://raw.githubusercontent.com/sissbruecker/linkding/master/#user-setup&#34;&gt;create an initial user&lt;/a&gt;, so that you can access your installation.&lt;/p&gt; &#xA;&lt;h3&gt;Using Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;To install linkding using &lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Docker Compose&lt;/a&gt;, you can use the &lt;a href=&#34;https://github.com/sissbruecker/linkding/raw/master/docker-compose.yml&#34;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/a&gt; file. Copy the &lt;a href=&#34;https://github.com/sissbruecker/linkding/raw/master/.env.sample&#34;&gt;&lt;code&gt;.env.sample&lt;/code&gt;&lt;/a&gt; file to &lt;code&gt;.env&lt;/code&gt;, configure the parameters, and then run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To complete the setup, you still have to &lt;a href=&#34;https://raw.githubusercontent.com/sissbruecker/linkding/master/#user-setup&#34;&gt;create an initial user&lt;/a&gt;, so that you can access your installation.&lt;/p&gt; &#xA;&lt;h3&gt;User setup&lt;/h3&gt; &#xA;&lt;p&gt;For security reasons, the linkding Docker image does not provide an initial user, so you have to create one after setting up an installation. To do so, replace the credentials in the following command and run it:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker exec -it linkding python manage.py createsuperuser --username=joe --email=joe@example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Docker Compose&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker-compose exec linkding python manage.py createsuperuser --username=joe --email=joe@example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The command will prompt you for a secure password. After the command has completed you can start using the application by logging into the UI with your credentials.&lt;/p&gt; &#xA;&lt;h3&gt;Managed Hosting Options&lt;/h3&gt; &#xA;&lt;p&gt;Self-hosting web applications on your own hardware (unfortunately) still requires a lot of technical know-how, and commitment to maintenance, with regard to keeping everything up-to-date and secure. This can be a huge entry barrier for people who are interested in self-hosting linkding, but lack the technical knowledge to do so. This section is intended to provide alternatives in form of managed hosting solutions. Note that these options are usually commercial offerings, that require paying a (usually monthly) fee for the convenience of being managed by another party. The technical knowledge required to make use of individual options is going to vary, and no guarantees can be made that every option is accessible for everyone. That being said, I hope this section helps in making the application accessible to a wider audience.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fspoettel/linkding-on-fly&#34;&gt;linkding on fly.io&lt;/a&gt; - Guide for hosting a linkding installation on &lt;a href=&#34;https://fly.io&#34;&gt;fly.io&lt;/a&gt;. By &lt;a href=&#34;https://github.com/fspoettel&#34;&gt;fspoettel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pikapods.com/&#34;&gt;PikaPods.com&lt;/a&gt; - Managed hosting for linkding, EU and US regions available. &lt;a href=&#34;https://www.pikapods.com/pods?run=linkding&#34;&gt;1-click setup link&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Document&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sissbruecker/linkding/raw/master/docs/Options.md&#34;&gt;Options&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Lists available options, and describes how to apply them&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sissbruecker/linkding/raw/master/docs/backup.md&#34;&gt;Backups&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;How to backup the linkding database&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sissbruecker/linkding/raw/master/docs/troubleshooting.md&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Advice for troubleshooting common problems&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sissbruecker/linkding/raw/master/docs/how-to.md&#34;&gt;How To&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tips and tricks around using linking&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sissbruecker/linkding/raw/master/docs/Admin.md&#34;&gt;Admin documentation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;User documentation for the Admin UI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sissbruecker/linkding/raw/master/docs/API.md&#34;&gt;API documentation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Documentation for the REST API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Browser Extension&lt;/h2&gt; &#xA;&lt;p&gt;linkding comes with an official browser extension that allows to quickly add bookmarks, and search bookmarks through the browser&#39;s address bar. You can get the extension here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://addons.mozilla.org/de/firefox/addon/linkding-extension/&#34;&gt;Mozilla Addon Store&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/linkding-extension/beakmhbijpdhipnjhnclmhgjlddhidpe&#34;&gt;Chrome Web Store&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The extension is open-source as well, and can be found &lt;a href=&#34;https://github.com/sissbruecker/linkding-extension&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;This section lists community projects around using linkding, in alphabetical order. If you have a project that you want to share with the linkding community, feel free to submit a PR to add your project to this section.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://charts.pascaliske.dev/charts/linkding/&#34;&gt;Helm Chart&lt;/a&gt; Helm Chart for deploying linkding inside a Kubernetes cluster. By &lt;a href=&#34;https://github.com/pascaliske&#34;&gt;pascaliske&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cmsax/linka&#34;&gt;Linka!&lt;/a&gt; Web app (also a PWA) for quickly searching &amp;amp; opening bookmarks in linkding, support multi keywords, exclude mode and other advance options. By &lt;a href=&#34;https://github.com/cmsax&#34;&gt;cmsax&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jeroenpardon/linkding-extension&#34;&gt;linkding-extension&lt;/a&gt; Chromium compatible extension that wraps the linkding bookmarklet. Tested with Chrome, Edge, Brave. By &lt;a href=&#34;https://github.com/jeroenpardon&#34;&gt;jeroenpardon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Fivefold/linkding-injector&#34;&gt;linkding-injector&lt;/a&gt; Injects search results from linkding into the sidebar of search pages like google and duckduckgo. Tested with Firefox and Chrome. By &lt;a href=&#34;https://github.com/Fivefold&#34;&gt;Fivefold&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bachya/aiolinkding&#34;&gt;aiolinkding&lt;/a&gt; A Python3, async library to interact with the linkding REST API. By &lt;a href=&#34;https://github.com/bachya&#34;&gt;bachya&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bachya/linkding-cli&#34;&gt;linkding-cli&lt;/a&gt; A command-line interface (CLI) to interact with the linkding REST API. Powered by &lt;a href=&#34;https://github.com/bachya/aiolinkding&#34;&gt;aiolinkding&lt;/a&gt;. By &lt;a href=&#34;https://github.com/bachya&#34;&gt;bachya&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/ukcuddlyguy/336dd7339e6d35fc64a75ccfc9323c66&#34;&gt;Open all links bookmarklet&lt;/a&gt; A browser bookmarklet to open all links on the current Linkding page in new tabs. By &lt;a href=&#34;https://github.com/ukcuddlyguy&#34;&gt;ukcuddlyguy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;JetBrains provides an open-source license of &lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;IntelliJ IDEA&lt;/a&gt; for the development of linkding.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;The application is open source, so you are free to modify or contribute. The application is built using the Django web framework. You can get started by checking out the excellent &lt;a href=&#34;https://docs.djangoproject.com/en/4.1/&#34;&gt;Django docs&lt;/a&gt;. The &lt;code&gt;bookmarks&lt;/code&gt; folder contains the actual bookmark application, &lt;code&gt;siteroot&lt;/code&gt; is the Django root application. Other than that the code should be self-explanatory / standard Django stuff üôÇ.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.10&lt;/li&gt; &#xA; &lt;li&gt;Node.js&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;p&gt;Create a virtual environment for the application (&lt;a href=&#34;https://docs.python.org/3/tutorial/venv.html&#34;&gt;https://docs.python.org/3/tutorial/venv.html&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 -m venv ~/environments/linkding&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Activate the environment for your shell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;source ~/environments/linkding/bin/activate[.csh|.fish]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Within the active environment install the application dependencies from the application folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip3 install -Ur requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install frontend dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Initialize database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir -p data&#xA;python3 manage.py migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a user for the frontend:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 manage.py createsuperuser --username=joe --email=joe@example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the Node.js development server (used for compiling JavaScript components like tag auto-completion) with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the Django development server with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 manage.py runserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The frontend is now available under &lt;a href=&#34;http://localhost:8000&#34;&gt;http://localhost:8000&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>