<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-29T01:30:28Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dcharatan/flowmap</title>
    <updated>2024-04-29T01:30:28Z</updated>
    <id>tag:github.com,2024-04-29:/dcharatan/flowmap</id>
    <link href="https://github.com/dcharatan/flowmap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Code for &#34;FlowMap: High-Quality Camera Poses, Intrinsics, and Depth via Gradient Descent&#34; by Cameron Smith*, David Charatan*, Ayush Tewari, and Vincent Sitzmann&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FlowMap&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dcharatan/flowmap/assets/13124225/9dc9cc9a-083e-4fd1-b833-09365385cf59&#34;&gt;https://github.com/dcharatan/flowmap/assets/13124225/9dc9cc9a-083e-4fd1-b833-09365385cf59&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the official implementation for &lt;strong&gt;FlowMap: High-Quality Camera Poses, Intrinsics, and Depth via Gradient Descent&lt;/strong&gt; by Cameron Smith*, David Charatan*, Ayush Tewari, and Vincent Sitzmann.&lt;/p&gt; &#xA;&lt;p&gt;Check out the project website &lt;a href=&#34;https://cameronosmith.github.io/flowmap/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To get started on Linux, create a Python virtual environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3.11 -m venv venv&#xA;source venv/bin/activate&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For pretraining, make sure GMFlow is installed as a submodule:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the above requirements don&#39;t work, you can try &lt;code&gt;requirements_exact.txt&lt;/code&gt; instead.&lt;/p&gt; &#xA;&lt;h2&gt;Running the Code&lt;/h2&gt; &#xA;&lt;p&gt;The main entry point is &lt;code&gt;flowmap/overfit.py&lt;/code&gt;. Call it via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m flowmap.overfit dataset=images dataset.images.root=path/to/folder/with/images&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure the virtual environment has been activated via &lt;code&gt;source venv/bin/activate&lt;/code&gt; first.&lt;/p&gt; &#xA;&lt;h2&gt;Pre-trained Initialization&lt;/h2&gt; &#xA;&lt;p&gt;The checkpoint we used to initialize FlowMap can be found &lt;a href=&#34;https://drive.google.com/drive/folders/1PqByQSfzyLjfdZZDwn6RXIECso7WB9IY?usp=drive_link&#34;&gt;here&lt;/a&gt;. To train your own, download the &lt;a href=&#34;https://google.github.io/realestate10k/&#34;&gt;Real Estate 10k&lt;/a&gt; and &lt;a href=&#34;https://github.com/facebookresearch/co3d&#34;&gt;CO3Dv2&lt;/a&gt; datasets and run the following script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m flowmap.pretrain&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some of the videos in the Real Estate 10k dataset are no longer publicly available. Reach out to us via email if you want our downloaded version of the dataset.&lt;/p&gt; &#xA;&lt;h2&gt;Evaluation Datasets&lt;/h2&gt; &#xA;&lt;p&gt;We evaluated FlowMap using video subsets of the &lt;a href=&#34;https://drive.google.com/drive/folders/1M-_Fdn4ajDa0CS8-iqejv0fQQeuonpKF?usp=drive_link&#34;&gt;Local Light Field Fusion (LLFF)&lt;/a&gt;, &lt;a href=&#34;https://jonbarron.info/mipnerf360/&#34;&gt;Mip-NeRF 360&lt;/a&gt;, and &lt;a href=&#34;https://www.tanksandtemples.org/download/&#34;&gt;Tanks &amp;amp; Temples&lt;/a&gt; datasets. We&#39;ve uploaded a compilation of these datasets &lt;a href=&#34;https://drive.google.com/drive/folders/1PqByQSfzyLjfdZZDwn6RXIECso7WB9IY?usp=drive_link&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Dataset Details&lt;/summary&gt; &#xA; &lt;h3&gt;NeRF Local Light Field Fusion (LLFF) Scenes&lt;/h3&gt; &#xA; &lt;p&gt;These are the LLFF scenes from the &lt;a href=&#34;https://www.matthewtancik.com/nerf&#34;&gt;NeRF&lt;/a&gt; paper, which were originally uploaded &lt;a href=&#34;https://drive.google.com/drive/folders/14boI-o5hGO9srnWaaogTU5_ji7wkX2S7?usp=drive_link&#34;&gt;here&lt;/a&gt;. We used all 8 scenes (&lt;code&gt;fern&lt;/code&gt;, &lt;code&gt;flower&lt;/code&gt;, &lt;code&gt;fortress&lt;/code&gt;, &lt;code&gt;horns&lt;/code&gt;, &lt;code&gt;leaves&lt;/code&gt;, &lt;code&gt;orchids&lt;/code&gt;, &lt;code&gt;room&lt;/code&gt;, and &lt;code&gt;trex&lt;/code&gt;).&lt;/p&gt; &#xA; &lt;h3&gt;Mip-NeRF 360 Scenes&lt;/h3&gt; &#xA; &lt;p&gt;These are scenes from the &lt;a href=&#34;https://jonbarron.info/mipnerf360/&#34;&gt;Mip-NeRF 360&lt;/a&gt; paper, which were originally uploaded &lt;a href=&#34;http://storage.googleapis.com/gresearch/refraw360/360_v2.zip&#34;&gt;here&lt;/a&gt;. We used the &lt;code&gt;bonsai&lt;/code&gt;, &lt;code&gt;counter&lt;/code&gt;, and &lt;code&gt;kitchen&lt;/code&gt; scenes. The original &lt;code&gt;kitchen&lt;/code&gt; scene consists of several concatenated video sequences; for FlowMap, we use the first one (65 frames). We also included the &lt;code&gt;garden&lt;/code&gt; scene, which is somewhat video-like, but contain large jumps that make optical flow estimation struggle.&lt;/p&gt; &#xA; &lt;h3&gt;Tanks &amp;amp; Temples Scenes&lt;/h3&gt; &#xA; &lt;p&gt;We used all scenes from the &lt;a href=&#34;https://tanksandtemples.org/download/&#34;&gt;Tanks &amp;amp; Temples&lt;/a&gt; dataset: &lt;code&gt;auditorium&lt;/code&gt;, &lt;code&gt;ballroom&lt;/code&gt;, &lt;code&gt;barn&lt;/code&gt;, &lt;code&gt;caterpillar&lt;/code&gt;, &lt;code&gt;church&lt;/code&gt;, &lt;code&gt;courthouse&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt;, &lt;code&gt;francis&lt;/code&gt;, &lt;code&gt;horse&lt;/code&gt;, &lt;code&gt;ignatius&lt;/code&gt;, &lt;code&gt;lighthouse&lt;/code&gt;, &lt;code&gt;m60&lt;/code&gt;, &lt;code&gt;meetingroom&lt;/code&gt;, &lt;code&gt;museum&lt;/code&gt;, &lt;code&gt;palace&lt;/code&gt;, &lt;code&gt;panther&lt;/code&gt;, &lt;code&gt;playground&lt;/code&gt;, &lt;code&gt;temple&lt;/code&gt;, &lt;code&gt;train&lt;/code&gt;, and &lt;code&gt;truck&lt;/code&gt;. We preprocessed the raw videos from the dataset using the script at &lt;code&gt;flowmap/subsample.py&lt;/code&gt;. This script samples 150 frames from the first minute of video evenly based on mean optical flow.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Running Ablations&lt;/h2&gt; &#xA;&lt;p&gt;Each ablation shown in the paper has a &lt;a href=&#34;https://hydra.cc/docs/intro/&#34;&gt;Hydra&lt;/a&gt; configuration at &lt;code&gt;config/experiment&lt;/code&gt;. For example, to run the ablation where point tracking is disabled, add &lt;code&gt;+experiment=ablation_no_tracks&lt;/code&gt; to the overfitting command. Note that you can stack most of the ablations, e.g., &lt;code&gt;+experiment=[ablation_no_tracks,ablation_random_initialization]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Figure and Table Generation&lt;/h2&gt; &#xA;&lt;p&gt;Some of the code used to generate the tables and figures in the paper can be found in the &lt;code&gt;assets&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;BibTeX&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{smith24flowmap,&#xA;      title={FlowMap: High-Quality Camera Poses, Intrinsics, and Depth via Gradient Descent},&#xA;      author={Cameron Smith and David Charatan and Ayush Tewari and Vincent Sitzmann},&#xA;      year={2024},&#xA;      booktitle={arXiv},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;This work was supported by the National Science Foundation under Grant No. 2211259, by the Singapore DSTA under DST00OECI20300823 (New Representations for Vision), by the Intelligence Advanced Research Projects Activity (IARPA) via Department of Interior/ Interior Business Center (DOI/IBC) under 140D0423C0075, by the Amazon Science Hub, and by IBM. The Toyota Research Institute also partially supported this work. The views and conclusions contained herein reflect the opinions and conclusions of its authors and no other entity.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sarperavci/GoogleRecaptchaBypass</title>
    <updated>2024-04-29T01:30:28Z</updated>
    <id>tag:github.com,2024-04-29:/sarperavci/GoogleRecaptchaBypass</id>
    <link href="https://github.com/sarperavci/GoogleRecaptchaBypass" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Solve Google reCAPTCHA in less than 5 seconds! üöÄ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google Recaptcha Solver&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;We love bots ‚ù§Ô∏è, but Google doesn&#39;t.&lt;/strong&gt; So, here is the solution to bypass Google reCAPTCHA.&lt;/p&gt; &#xA;&lt;p&gt;Solve Google reCAPTCHA less than 5 seconds! üöÄ&lt;/p&gt; &#xA;&lt;p&gt;This is a Python script to solve Google reCAPTCHA using the DrissionPage library. &lt;em&gt;Selenium implementation will be added soon.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Sponsor&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.capsolver.com/?utm_source=github&amp;amp;utm_medium=banner_github&amp;amp;utm_campaign=GoogleRecaptchaBypass&#34;&gt;Capsolver&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.capsolver.com/?utm_source=github&amp;amp;utm_medium=banner_github&amp;amp;utm_campaign=GoogleRecaptchaBypass&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sarperavci/GoogleRecaptchaBypass/main/docs/capsolver.jpg&#34; alt=&#34;Capsolver&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.capsolver.com/?utm_source=github&amp;amp;utm_medium=banner_github&amp;amp;utm_campaign=GoogleRecaptchaBypass&#34;&gt;Capsolver.com&lt;/a&gt; is an AI-powered service that specializes in solving various types of captchas automatically. It supports captchas such as &lt;a href=&#34;https://docs.capsolver.com/guide/captcha/ReCaptchaV2.html?utm_source=github&amp;amp;utm_medium=banner_github&amp;amp;utm_campaign=GoogleRecaptchaBypass&#34;&gt;reCAPTCHA V2&lt;/a&gt;, &lt;a href=&#34;https://docs.capsolver.com/guide/captcha/ReCaptchaV3.html?utm_source=github&amp;amp;utm_medium=banner_github&amp;amp;utm_campaign=GoogleRecaptchaBypass&#34;&gt;reCAPTCHA V3&lt;/a&gt;, &lt;a href=&#34;https://docs.capsolver.com/guide/captcha/HCaptcha.html?utm_source=github&amp;amp;utm_medium=banner_github&amp;amp;utm_campaign=GoogleRecaptchaBypass&#34;&gt;hCaptcha&lt;/a&gt;, &lt;a href=&#34;https://docs.capsolver.com/guide/captcha/FunCaptcha.html?utm_source=github&amp;amp;utm_medium=banner_github&amp;amp;utm_campaign=GoogleRecaptchaBypass&#34;&gt;FunCaptcha&lt;/a&gt;, &lt;a href=&#34;https://docs.capsolver.com/guide/captcha/DataDome.html?utm_source=github&amp;amp;utm_medium=banner_github&amp;amp;utm_campaign=GoogleRecaptchaBypass&#34;&gt;DataDome&lt;/a&gt;, &lt;a href=&#34;https://docs.capsolver.com/guide/captcha/awsWaf.html?utm_source=github&amp;amp;utm_medium=banner_github&amp;amp;utm_campaign=GoogleRecaptchaBypass&#34;&gt;AWS Captcha&lt;/a&gt;, &lt;a href=&#34;https://docs.capsolver.com/guide/captcha/Geetest.html?utm_source=github&amp;amp;utm_medium=banner_github&amp;amp;utm_campaign=GoogleRecaptchaBypass&#34;&gt;Geetest&lt;/a&gt;, and Cloudflare &lt;a href=&#34;https://docs.capsolver.com/guide/antibots/cloudflare_turnstile.html?utm_source=github&amp;amp;utm_medium=banner_github&amp;amp;utm_campaign=GoogleRecaptchaBypass&#34;&gt;Captcha&lt;/a&gt; / &lt;a href=&#34;https://docs.capsolver.com/guide/antibots/cloudflare_challenge.html?utm_source=github&amp;amp;utm_medium=banner_github&amp;amp;utm_campaign=GoogleRecaptchaBypass&#34;&gt;Challenge 5s&lt;/a&gt;, &lt;a href=&#34;https://docs.capsolver.com/guide/antibots/imperva.html?utm_source=github&amp;amp;utm_medium=banner_github&amp;amp;utm_campaign=GoogleRecaptchaBypass&#34;&gt;Imperva / Incapsula&lt;/a&gt;, among others.&lt;/p&gt; &#xA;&lt;p&gt;For developers, Capsolver offers API integration options detailed in their &lt;a href=&#34;https://docs.capsolver.com/?utm_source=github&amp;amp;utm_medium=banner_github&amp;amp;utm_campaign=GoogleRecaptchaBypass&#34;&gt;documentation&lt;/a&gt;, facilitating the integration of captcha solving into applications. They also provide browser extensions for &lt;a href=&#34;https://chromewebstore.google.com/detail/captcha-solver-auto-captc/pgojnojmmhpofjgdmaebadhbocahppod&#34;&gt;Chrome&lt;/a&gt; and &lt;a href=&#34;https://addons.mozilla.org/es/firefox/addon/capsolver-captcha-solver/&#34;&gt;Firefox&lt;/a&gt;, making it easy to use their service directly within a browser. Different pricing packages are available to accommodate varying needs, ensuring flexibility for users.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Three dependencies are required to run this script. You can install them using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also, you need to install ffmpeg. You can download it from &lt;a href=&#34;https://ffmpeg.org/download.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install ffmpeg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To implement this script in your project, you can follow a similar approach as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from DrissionPage import ChromiumPage &#xA;from RecaptchaSolver import RecaptchaSolver&#xA;driver = ChromiumPage()&#xA;recaptchaSolver = RecaptchaSolver(driver)&#xA;driver.get(&#34;https://www.google.com/recaptcha/api2/demo&#34;)&#xA;recaptchaSolver.solveCaptcha()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;I have created &lt;code&gt;test.py&lt;/code&gt; to demonstrate the usage of this script. You can run the &lt;code&gt;test.py&lt;/code&gt; file to see the script in action.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sarperavci/GoogleRecaptchaBypass/main/docs/demo.gif&#34; alt=&#34;Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How does it work?&lt;/h2&gt; &#xA;&lt;p&gt;We automate the browser to solve the reCAPTCHA. Instead of image captcha, we are solving the audio captcha. The audio captcha is easier to solve programmatically.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;One warning:&lt;/strong&gt; Google may block your IP if you solve too many captchas in a short period of time. So, use this script wisely or change your IP frequently.&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s next?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Selenium implementation.&lt;/li&gt; &#xA; &lt;li&gt;Better exception handling.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;a href=&#34;https://star-history.com/#sarperavci/GoogleRecaptchaBypass&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=sarperavci/GoogleRecaptchaBypass&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=sarperavci/GoogleRecaptchaBypass&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=sarperavci/GoogleRecaptchaBypass&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>plaintextpackets/netprobe_lite</title>
    <updated>2024-04-29T01:30:28Z</updated>
    <id>tag:github.com,2024-04-29:/plaintextpackets/netprobe_lite</id>
    <link href="https://github.com/plaintextpackets/netprobe_lite" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple internet performance tester written in Python&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Netprobe Lite&lt;/h1&gt; &#xA;&lt;p&gt;Simple and effective tool for measuring ISP performance at home. The tool measures several performance metrics including packet loss, latency, jitter, and DNS performance. It also aggregates these metrics into a common score, which you can use to monitor overall health of your internet connection.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements and Setup&lt;/h2&gt; &#xA;&lt;p&gt;To run Netprobe Lite, you&#39;ll need a PC running Docker connected directly to your ISP router. Specifically:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Netprobe Lite requires the latest version of Docker. For instructions on installing Docker, see YouTube, it&#39;s super easy.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Netprobe Lite should be installed on a machine (the &#39;probe&#39;) which has a wired Ethernet connection to your primary ISP router. This ensures the tests are accurately measuring your ISP performance and excluding and interference from your home network. An old PC with Linux installed is a great option for this.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repo locally to the probe machine:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/plaintextpackets/netprobe_lite.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;From the cloned folder, use docker compose to launch the app:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;To shut down the app, use docker compose again:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Navigate to: &lt;a href=&#34;http://x.x.x.x:3001/d/app/netprobe&#34;&gt;http://x.x.x.x:3001/d/app/netprobe&lt;/a&gt; where x.x.x.x = IP of the probe machine running Docker.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Default user / pass is &#39;admin/admin&#39;. Login to Grafana and set a custom password.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Change Netprobe port&lt;/h3&gt; &#xA;&lt;p&gt;To change the port that Netprobe is running on, edit the &#39;compose.yml&#39; file, under the &#39;grafana&#39; section:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ports:&#xA;    - &#39;3001:3000&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change the port on the left to the port you want to access Netprobe on&lt;/p&gt; &#xA;&lt;h3&gt;Customize DNS test&lt;/h3&gt; &#xA;&lt;p&gt;If the DNS server your network uses is not already monitored, you can add your DNS server IP for testing.&lt;/p&gt; &#xA;&lt;p&gt;To do so, modify this line in .env:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;DNS_NAMESERVER_4_IP=&#34;8.8.8.8&#34; # Replace this IP with the DNS server you use at home&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change 8.8.8.8 to the IP of the DNS server you use, then restart the application (docker compose down / docker compose up)&lt;/p&gt; &#xA;&lt;h3&gt;Data storage&lt;/h3&gt; &#xA;&lt;p&gt;By default, Docker will store the data collected in a volume, which will persist between restarts.&lt;/p&gt; &#xA;&lt;p&gt;To clear out old data, you need to first delete the Prometheus container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker rm netprobe-prometheus&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then prune the docker volumes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker volume prune&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When started again the old data should be wiped out.&lt;/p&gt; &#xA;&lt;h3&gt;Run on startup&lt;/h3&gt; &#xA;&lt;p&gt;To configure the tool to work as a daemon (run on startup, keep running), edit &#39;compose.yml&#39; and add the following to each service:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;restart: always&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More information can be found in the Docker documentation.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is released under a custom license that restricts commercial use. You are free to use, modify, and distribute the software for non-commercial purposes. Commercial use of this software is strictly prohibited without prior permission. If you have any questions or wish to use this software commercially, please contact [&lt;a href=&#34;mailto:plaintextpackets@gmail.com&#34;&gt;plaintextpackets@gmail.com&lt;/a&gt;].&lt;/p&gt;</summary>
  </entry>
</feed>