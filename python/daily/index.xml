<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-23T01:42:49Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>NotJoeMartinez/yt-fts</title>
    <updated>2023-05-23T01:42:49Z</updated>
    <id>tag:github.com,2023-05-23:/NotJoeMartinez/yt-fts</id>
    <link href="https://github.com/NotJoeMartinez/yt-fts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Youtube Full Text Search - Search all of a YouTube channel&#39;s subtitles from the command line&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;yt-fts&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;yt-fts&lt;/code&gt; is a simple python script that uses yt-dlp to scrape all of a youtube channels subtitles and load them into an sqlite database that is searchable from the command line. It allows you to query a channel for specific key word or phrase and will generate time stamped youtube urls to the video containing the keyword.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://notjoemartinez.com/blog/youtube_full_text_search/&#34;&gt;Blog Post&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/NotJoeMartinez/yt-fts&#xA;cd yt-fts&#xA;python3 -m venv .env&#xA;source .env/bin/activate&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This project requires &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp&#34;&gt;yt-dlp&lt;/a&gt; installed globally. Platform specific installation instructions are available on the &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/wiki/Installation&#34;&gt;yt-dlp wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;pip&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m pip install -U yt-dlp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;MacOS/Homebrew&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install yt-dlp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows/winget&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;winget install yt-dlp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: yt_fts.py [OPTIONS] COMMAND [ARGS]...&#xA;&#xA;Options:&#xA;  --help  Show this message and exit.&#xA;&#xA;Commands:&#xA;  delete    delete [channel id]&#xA;  download  download [channel url]&#xA;  export    export [channel id] [search text]&#xA;  list      Lists channels&#xA;  search    search [channel id] [search text]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;download&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Will download all of a channels vtt files into your database&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python yt_fts.py download &#34;https://www.youtube.com/@TimDillonShow/videos&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If this fails you can manually input the channel id with the &lt;code&gt;--channel-id&lt;/code&gt; flag&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python yt_fts.py download &#34;https://www.youtube.com/@TimDillonShow/videos&#34; --channel-id &#34;UC4woSp8ITBoYDmjkukhEhxg&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can specify expected subtitles language&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python yt_fts.py download &#34;https://www.youtube.com/@TimDillonShow/videos&#34; --language de&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;list&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Will list all of your downloaded channels&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python yt_fts.py list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Listing channels&#xA;channel_id                channel_name         channel_url&#xA;------------------------  -------------------  ---------------------------------------------------------------&#xA;UC4woSp8ITBoYDmjkukhEhxg  The Tim Dillon Show  https://www.youtube.com/channel/UC4woSp8ITBoYDmjkukhEhxg/videos&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;search&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Will search a channel for text based off the channel id you give it and will print a url to that point in the video&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python yt_fts.py search [channel_id] &#34;text you want to find&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;EX:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python yt_fts.py search UC4woSp8ITBoYDmjkukhEhxg &#34;life in the big city&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Video title&#34;(&#34;#208 - Let&#39;s Have A Party | The Tim Dillon Show - YouTube&#34;,)&#34;&#xA;&#xA;    Quote: &#34;life in the big city Dan is wearing the&#34;&#xA;    Time Stamp: 01:50:07.790&#xA;    Link: https://youtu.be/CJ_KAsz8rjQ?t=6604&#xA;&#xA;Video title&#34;(&#39;#176 - The Florida Project | The Tim Dillon Show - YouTube&#39;,)&#34;&#xA;&#xA;    Quote: &#34;the show life in the big city love these&#34;&#xA;    Time Stamp: 00:31:05.669&#xA;    Link: https://youtu.be/nKcqbHQndFQ?t=1862&#xA;&#xA;Video title&#34;(&#39;164 - Life In The Big City - YouTube&#39;,)&#34;&#xA;&#xA;    Quote: &#34;life in the big city it was one of my&#34;&#xA;    Time Stamp: 00:27:17.549&#xA;    Link: https://youtu.be/dqGyCTbzYmc?t=1634&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;Export&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Similar to &lt;code&gt;search&lt;/code&gt; except it will export all of the search results to a csv with the format: &lt;code&gt;Video Title,Quote,Time Stamp,Link&lt;/code&gt; as it&#39;s headers&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;Delete&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Will delete a channel from your database&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python yt_fts.py delete [channel_id]&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>JiauZhang/DragGAN</title>
    <updated>2023-05-23T01:42:49Z</updated>
    <id>tag:github.com,2023-05-23:/JiauZhang/DragGAN</id>
    <link href="https://github.com/JiauZhang/DragGAN" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implementation of DragGAN: Interactive Point-based Manipulation on the Generative Image Manifold&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JiauZhang/DragGAN/main/draggan.png&#34; width=&#34;750&#34; alt=&#34;Architecture of DragGAN&#34;&gt; &#xA;&lt;h1&gt;DragGAN&lt;/h1&gt; &#xA;&lt;p&gt;Implementation of &lt;a href=&#34;https://arxiv.org/abs/2305.10973&#34;&gt;DragGAN: Interactive Point-based Manipulation on the Generative Image Manifold&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# gui&#xA;pip install dearpygui&#xA;# run demo&#xA;python gui.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/JiauZhang/DragGAN/main/UI.png&#34; width=&#34;600&#34; alt=&#34;Demo UI&#34;&gt; &#xA;&lt;h1&gt;StyleGAN2 Pre-Trained Model&lt;/h1&gt; &#xA;&lt;p&gt;Rosinality&#39;s pre-trained model(256px) on FFHQ 550k iterations [&lt;a href=&#34;https://drive.google.com/open?id=1PQutd-JboOCOZqmd95XWxWrO8gGEvRcO&#34;&gt;Link&lt;/a&gt;].&lt;/p&gt; &#xA;&lt;h1&gt;References&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rosinality/stylegan2-pytorch&#34;&gt;https://github.com/rosinality/stylegan2-pytorch&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>zaivanza/all-in-one-v2</title>
    <updated>2023-05-23T01:42:49Z</updated>
    <id>tag:github.com,2023-05-23:/zaivanza/all-in-one-v2</id>
    <link href="https://github.com/zaivanza/all-in-one-v2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://git.io/typing-svg&#34;&gt;&lt;img src=&#34;https://readme-typing-svg.herokuapp.com?color=%2336BCF7&amp;amp;lines=All-in-one+V2&#34; alt=&#34;Typing SVG&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Идеальный скрипт-V2 для ведения фермы. Освоив его, ты сможешь (идет перечисление модулей) :&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;web3_checker : очень быстро (асинка) смотрит баланс монеты в любой evm сети.&lt;/li&gt; &#xA; &lt;li&gt;debank_checker : около_быстро (асинка) смотрит все токены, нфт и протоколы во всех evm сетях (которые доступны на самом &lt;a href=&#34;https://debank.com/&#34;&gt;debank&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;exchange_withdraw : вывод монет с бирж : binance, mexc, kucoin, bybit, huobi.&lt;/li&gt; &#xA; &lt;li&gt;okx_withdraw : вывод с биржи okx + в подарок вывод с субов. отдельным модулем из-за функции вывода с суб-аккаунтов.&lt;/li&gt; &#xA; &lt;li&gt;transfer : вывод монет с кошельков в evm сетях (метамаск).&lt;/li&gt; &#xA; &lt;li&gt;1inch : свапы на 1inch во всех сетях, включая zksync era.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.orbiter.finance/&#34;&gt;orbiter&lt;/a&gt; : бридж eth во всех сетях, включая zksync era и starknet. чтобы бриджит на starknet, нужно добавить адреса кошельков старкнета в файл &lt;code&gt;starknet_address.txt&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fi.woo.org/&#34;&gt;woofi&lt;/a&gt; : бриджи и свапы. бридж проходит через stargate (layerzero). универсален, доступны все монеты и сети, которые там есть.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Дополнительная информация :&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Вместо принтов сделал logger.&lt;/li&gt; &#xA; &lt;li&gt;Добавил tg_sender. Все результаты прописываются не только в терминал, но и в тг-бота.&lt;/li&gt; &#xA; &lt;li&gt;Для чекеров сделал csv файлы.&lt;/li&gt; &#xA; &lt;li&gt;Сделал нормальные try exceptы.&lt;/li&gt; &#xA; &lt;li&gt;Сделал проверку транзакций на фейл (check_status_tx).&lt;/li&gt; &#xA; &lt;li&gt;Сделал универсальный апрув и предварительную проверку на кол-во апрувнутых монет (check_allowance). то есть лишних апрувов делать не будет.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Настройка.&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Вся настройка модулей и апи ключей делается в файле &lt;code&gt;setting.py&lt;/code&gt;, их настройка описана в этом же файле.&lt;/li&gt; &#xA; &lt;li&gt;В папке data есть 3 файла : &lt;code&gt;wallets.txt&lt;/code&gt;, &lt;code&gt;recipients.txt&lt;/code&gt;, &lt;code&gt;proxies.txt&lt;/code&gt;, &lt;code&gt;starknet_address.txt&lt;/code&gt;, &lt;code&gt;rpc.py&lt;/code&gt; :&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;wallets.txt&lt;/code&gt; - сюда записываем кошельки (приватники / адреса).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;recipients.txt&lt;/code&gt; - сюда записываем адреса для трансфера, используется только в модуле transfer когда выводим с кошелька на адрес. 1 кошелек = 1 адрес.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxies.txt&lt;/code&gt; - сюда записываем прокси, они используются только в debank чекере, без них он работать не будет. Чем больше, тем лучше. Формат : &lt;a href=&#34;http://login:password@ip:port&#34;&gt;http://login:password@ip:port&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;starknet_address.txt&lt;/code&gt; - сюда записываем адреса кошельков старкнета. если не будете бриджить с орбитера на старкнет, можно не вставлять.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rpc.py&lt;/code&gt; - здесь по желанию (необязательно, сейчас стоят паблик ankr rpc) нужно менять rpc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Настраивать модули нужно в функциях value в файле &lt;code&gt;setting.py&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Не забудь настроить тг-бота. Для этого в файле &lt;code&gt;setting.py&lt;/code&gt; в переменную &lt;code&gt;TG_TOKEN&lt;/code&gt; нужно вставить токен от тг бота. В переменную &lt;code&gt;TG_ID&lt;/code&gt; нужно вставить свой id токен, узнать его можно здесь : &lt;a href=&#34;https://t.me/getmyid_bot&#34;&gt;https://t.me/getmyid_bot&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Запускать нужно файл &lt;code&gt;MAIN.py&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Устанавливаем библиотеки : &lt;code&gt;pip3 install -r requirements.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Огромная просьба сначала все прочитать на 10 раз, все протестировать, погуглить и только потом задавать вопросы в наш код чат. В личку админам с вопросами по коду просьба не писать, они не ответят.&lt;/p&gt; &#xA;&lt;p&gt;Donate (evm) : &lt;code&gt;0xb7415DB78c886c67DBfB25D3Eb7fcd496dAf9021&lt;/code&gt; or &lt;code&gt;donates-for-hodlmod.eth&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Паблик : &lt;a href=&#34;https://t.me/hodlmodeth&#34;&gt;https://t.me/hodlmodeth&lt;/a&gt;. [ code ] чат : &lt;a href=&#34;https://t.me/code_hodlmodeth&#34;&gt;https://t.me/code_hodlmodeth&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>