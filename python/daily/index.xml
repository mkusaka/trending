<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-14T01:33:52Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>opendatalab/MinerU</title>
    <updated>2024-07-14T01:33:52Z</updated>
    <id>tag:github.com,2024-07-14:/opendatalab/MinerU</id>
    <link href="https://github.com/opendatalab/MinerU" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MinerU is a one-stop, open-source, high-quality data extraction tool, supports PDF/webpage/e-book extraction.一站式开源高质量数据提取工具，支持PDF/网页/多格式电子书提取。&lt;/p&gt;&lt;hr&gt;&lt;div id=&#34;top&#34;&gt;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/opendatalab/MinerU&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/opendatalab/MinerU.svg?sanitize=true&#34; alt=&#34;stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/opendatalab/MinerU&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/opendatalab/MinerU.svg?sanitize=true&#34; alt=&#34;forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/opendatalab/MinerU/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/opendatalab/MinerU&#34; alt=&#34;open issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/opendatalab/MinerU/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed-raw/opendatalab/MinerU&#34; alt=&#34;issue resolution&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/py/magic-pdf&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/magic-pdf.svg?sanitize=true&#34; alt=&#34;PyPI version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pepy.tech/project/magic-pdf&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/badge/magic-pdf&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pepy.tech/project/magic-pdf&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/badge/magic-pdf/month&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/opendatalab/MinerU/master/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/opendatalab/MinerU/master/README_zh-CN.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;MinerU&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;MinerU is a one-stop, open-source, high-quality data extraction tool, includes the following primary features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/opendatalab/MinerU/master/#Magic-PDF&#34;&gt;Magic-PDF&lt;/a&gt; PDF Document Extraction&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/opendatalab/MinerU/master/#Magic-Doc&#34;&gt;Magic-Doc&lt;/a&gt; Webpage &amp;amp; E-book Extraction&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Magic-PDF&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Magic-PDF is a tool designed to convert PDF documents into Markdown format, capable of processing files stored locally or on object storage supporting S3 protocol.&lt;/p&gt; &#xA;&lt;p&gt;Key features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support for multiple front-end model inputs&lt;/li&gt; &#xA; &lt;li&gt;Removal of headers, footers, footnotes, and page numbers&lt;/li&gt; &#xA; &lt;li&gt;Human-readable layout formatting&lt;/li&gt; &#xA; &lt;li&gt;Retains the original document&#39;s structure and formatting, including headings, paragraphs, lists, and more&lt;/li&gt; &#xA; &lt;li&gt;Extraction and display of images and tables within markdown&lt;/li&gt; &#xA; &lt;li&gt;Conversion of equations into LaTeX format&lt;/li&gt; &#xA; &lt;li&gt;Automatic detection and conversion of garbled PDFs&lt;/li&gt; &#xA; &lt;li&gt;Compatibility with CPU and GPU environments&lt;/li&gt; &#xA; &lt;li&gt;Available for Windows, Linux, and macOS platforms&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/opendatalab/MinerU/assets/11393164/618937cb-dc6a-4646-b433-e3131a5f4070&#34;&gt;https://github.com/opendatalab/MinerU/assets/11393164/618937cb-dc6a-4646-b433-e3131a5f4070&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Project Panorama&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/opendatalab/MinerU/master/docs/images/project_panorama_en.png&#34; alt=&#34;Project Panorama&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Flowchart&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/opendatalab/MinerU/master/docs/images/flowchart_en.png&#34; alt=&#34;Flowchart&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Submodule Repositories&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/opendatalab/PDF-Extract-Kit&#34;&gt;PDF-Extract-Kit&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A Comprehensive Toolkit for High-Quality PDF Content Extraction&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python &amp;gt;= 3.9&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Using a virtual environment is recommended to avoid potential dependency conflicts; both venv and conda are suitable. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create -n MinerU python=3.10&#xA;conda activate MinerU&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage Instructions&lt;/h3&gt; &#xA;&lt;h4&gt;1. Install Magic-PDF&lt;/h4&gt; &#xA;&lt;p&gt;Install using pip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install magic-pdf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, for built-in high-precision model parsing capabilities, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install magic-pdf[full-cpu]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The high-precision models depend on detectron2, which requires a compiled installation.&lt;br&gt; If you need to compile it yourself, refer to &lt;a href=&#34;https://github.com/facebookresearch/detectron2/issues/5114&#34;&gt;https://github.com/facebookresearch/detectron2/issues/5114&lt;/a&gt;&lt;br&gt; Or directly use our pre-compiled wheel packages (limited to python 3.10):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install detectron2 --extra-index-url https://myhloli.github.io/wheels/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Downloading model weights files&lt;/h4&gt; &#xA;&lt;p&gt;For detailed references, please see below &lt;a href=&#34;https://raw.githubusercontent.com/opendatalab/MinerU/master/docs/how_to_download_models_en.md&#34;&gt;how_to_download_models&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;After downloading the model weights, move the &#39;models&#39; directory to a directory on a larger disk space, preferably an SSD.&lt;/p&gt; &#xA;&lt;h4&gt;3. Copy the Configuration File and Make Configurations&lt;/h4&gt; &#xA;&lt;p&gt;You can get the &lt;a href=&#34;https://raw.githubusercontent.com/opendatalab/MinerU/master/magic-pdf.template.json&#34;&gt;magic-pdf.template.json&lt;/a&gt; file in the repository root directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp magic-pdf.template.json ~/magic-pdf.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In magic-pdf.json, configure &#34;models-dir&#34; to point to the directory where the model weights files are located.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;models-dir&#34;: &#34;/tmp/models&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;4. Usage via Command Line&lt;/h4&gt; &#xA;&lt;h6&gt;simple&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;magic-pdf pdf-command --pdf &#34;pdf_path&#34; --inside_model true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the program has finished, you can find the generated markdown files under the directory &#34;/tmp/magic-pdf&#34;.&lt;br&gt; You can find the corresponding xxx_model.json file in the markdown directory.&lt;br&gt; If you intend to do secondary development on the post-processing pipeline, you can use the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;magic-pdf pdf-command --pdf &#34;pdf_path&#34; --model &#34;model_json_path&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this way, you won&#39;t need to re-run the model data, making debugging more convenient.&lt;/p&gt; &#xA;&lt;h6&gt;more&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;magic-pdf --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;5. Acceleration Using CUDA or MPS&lt;/h4&gt; &#xA;&lt;h5&gt;CUDA&lt;/h5&gt; &#xA;&lt;p&gt;You need to install the corresponding PyTorch version according to your CUDA version.&lt;br&gt; This example installs the CUDA 11.8 version.More information &lt;a href=&#34;https://pytorch.org/get-started/locally/&#34;&gt;https://pytorch.org/get-started/locally/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install --force-reinstall torch==2.3.1 torchvision==0.18.1 --index-url https://download.pytorch.org/whl/cu118&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also, you need to modify the value of &#34;device-mode&#34; in the configuration file magic-pdf.json.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;device-mode&#34;:&#34;cuda&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;MPS&lt;/h5&gt; &#xA;&lt;p&gt;For macOS users with M-series chip devices, you can use MPS for inference acceleration.&lt;br&gt; You also need to modify the value of &#34;device-mode&#34; in the configuration file magic-pdf.json.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;device-mode&#34;:&#34;mps&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;6. Usage via Api&lt;/h4&gt; &#xA;&lt;h6&gt;Local&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;image_writer = DiskReaderWriter(local_image_dir)&#xA;image_dir = str(os.path.basename(local_image_dir))&#xA;jso_useful_key = {&#34;_pdf_type&#34;: &#34;&#34;, &#34;model_list&#34;: model_json}&#xA;pipe = UNIPipe(pdf_bytes, jso_useful_key, image_writer)&#xA;pipe.pipe_classify()&#xA;pipe.pipe_parse()&#xA;md_content = pipe.pipe_mk_markdown(image_dir, drop_mode=&#34;none&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Object Storage&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;s3pdf_cli = S3ReaderWriter(pdf_ak, pdf_sk, pdf_endpoint)&#xA;image_dir = &#34;s3://img_bucket/&#34;&#xA;s3image_cli = S3ReaderWriter(img_ak, img_sk, img_endpoint, parent_path=image_dir)&#xA;pdf_bytes = s3pdf_cli.read(s3_pdf_path, mode=s3pdf_cli.MODE_BIN)&#xA;jso_useful_key = {&#34;_pdf_type&#34;: &#34;&#34;, &#34;model_list&#34;: model_json}&#xA;pipe = UNIPipe(pdf_bytes, jso_useful_key, s3image_cli)&#xA;pipe.pipe_classify()&#xA;pipe.pipe_parse()&#xA;md_content = pipe.pipe_mk_markdown(image_dir, drop_mode=&#34;none&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Demo can be referred to &lt;a href=&#34;https://raw.githubusercontent.com/opendatalab/MinerU/master/demo/demo.py&#34;&gt;demo.py&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Magic-Doc&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Magic-Doc is a tool designed to convert web pages or multi-format e-books into markdown format.&lt;/p&gt; &#xA;&lt;p&gt;Key Features Include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Web Page Extraction&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Cross-modal precise parsing of text, images, tables, and formula information.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;E-Book Document Extraction&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Supports various document formats including epub, mobi, with full adaptation for text and images.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Language Type Identification&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Accurate recognition of 176 languages.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/opendatalab/MinerU/assets/11393164/a5a650e9-f4c0-463e-acc3-960967f1a1ca&#34;&gt;https://github.com/opendatalab/MinerU/assets/11393164/a5a650e9-f4c0-463e-acc3-960967f1a1ca&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/opendatalab/MinerU/assets/11393164/0f4a6fe9-6cca-4113-9fdc-a537749d764d&#34;&gt;https://github.com/opendatalab/MinerU/assets/11393164/0f4a6fe9-6cca-4113-9fdc-a537749d764d&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/opendatalab/MinerU/assets/11393164/20438a02-ce6c-4af8-9dde-d722a4e825b2&#34;&gt;https://github.com/opendatalab/MinerU/assets/11393164/20438a02-ce6c-4af8-9dde-d722a4e825b2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Project Repository&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/InternLM/magic-doc&#34;&gt;Magic-Doc&lt;/a&gt; Outstanding Webpage and E-book Extraction Tool&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;All Thanks To Our Contributors&lt;/h1&gt; &#xA;&lt;a href=&#34;https://github.com/magicpdf/Magic-PDF/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=opendatalab/MinerU&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;License Information&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/opendatalab/MinerU/master/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The project currently leverages PyMuPDF to deliver advanced functionalities; however, its adherence to the AGPL license may impose limitations on certain use cases. In upcoming iterations, we intend to explore and transition to a more permissively licensed PDF processing library to enhance user-friendliness and flexibility.&lt;/p&gt; &#xA;&lt;h1&gt;Acknowledgments&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR&#34;&gt;PaddleOCR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pymupdf/PyMuPDF&#34;&gt;PyMuPDF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LlmKira/fast-langdetect&#34;&gt;fast-langdetect&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pdfminer/pdfminer.six&#34;&gt;pdfminer.six&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Citation&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{2024mineru,&#xA;    title={MinerU: A One-stop, Open-source, High-quality Data Extraction Tool},&#xA;    author={MinerU Contributors},&#xA;    howpublished = {\url{https://github.com/opendatalab/MinerU}},&#xA;    year={2024}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Star History&lt;/h1&gt; &#xA;&lt;a&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=opendatalab/MinerU&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=opendatalab/MinerU&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=opendatalab/MinerU&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>drivendataorg/cookiecutter-data-science</title>
    <updated>2024-07-14T01:33:52Z</updated>
    <id>tag:github.com,2024-07-14:/drivendataorg/cookiecutter-data-science</id>
    <link href="https://github.com/drivendataorg/cookiecutter-data-science" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A logical, reasonably standardized, but flexible project structure for doing and sharing data science work.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cookiecutter Data Science&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;A logical, reasonably standardized but flexible project structure for doing and sharing data science work.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Cookiecutter Data Science (CCDS)&lt;/strong&gt; is a tool for setting up a data science project template that incorporates best practices. To learn more about CCDS&#39;s philosophy, visit the &lt;a href=&#34;https://cookiecutter-data-science.drivendata.org/&#34;&gt;project homepage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ℹ️ Cookiecutter Data Science v2 has changed from v1. It now requires installing the new cookiecutter-data-science Python package, which extends the functionality of the &lt;a href=&#34;https://cookiecutter.readthedocs.io/en/stable/README.html&#34;&gt;cookiecutter&lt;/a&gt; templating utility. Use the provided &lt;code&gt;ccds&lt;/code&gt; command-line program instead of &lt;code&gt;cookiecutter&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Cookiecutter Data Science v2 requires Python 3.8+. Since this is a cross-project utility application, we recommend installing it with &lt;a href=&#34;https://pypa.github.io/pipx/&#34;&gt;pipx&lt;/a&gt;. Installation command options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# With pipx from PyPI (recommended)&#xA;pipx install cookiecutter-data-science&#xA;&#xA;# With pip from PyPI&#xA;pip install cookiecutter-data-science&#xA;&#xA;# With conda from conda-forge (coming soon)&#xA;# conda install cookiecutter-data-science -c conda-forge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Starting a new project&lt;/h2&gt; &#xA;&lt;p&gt;To start a new project, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ccds&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;The resulting directory structure&lt;/h3&gt; &#xA;&lt;p&gt;The directory structure of your new project will look something like this (depending on the settings that you choose):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;├── LICENSE            &amp;lt;- Open-source license if one is chosen&#xA;├── Makefile           &amp;lt;- Makefile with convenience commands like `make data` or `make train`&#xA;├── README.md          &amp;lt;- The top-level README for developers using this project.&#xA;├── data&#xA;│   ├── external       &amp;lt;- Data from third party sources.&#xA;│   ├── interim        &amp;lt;- Intermediate data that has been transformed.&#xA;│   ├── processed      &amp;lt;- The final, canonical data sets for modeling.&#xA;│   └── raw            &amp;lt;- The original, immutable data dump.&#xA;│&#xA;├── docs               &amp;lt;- A default mkdocs project; see www.mkdocs.org for details&#xA;│&#xA;├── models             &amp;lt;- Trained and serialized models, model predictions, or model summaries&#xA;│&#xA;├── notebooks          &amp;lt;- Jupyter notebooks. Naming convention is a number (for ordering),&#xA;│                         the creator&#39;s initials, and a short `-` delimited description, e.g.&#xA;│                         `1.0-jqp-initial-data-exploration`.&#xA;│&#xA;├── pyproject.toml     &amp;lt;- Project configuration file with package metadata for &#xA;│                         {{ cookiecutter.module_name }} and configuration for tools like black&#xA;│&#xA;├── references         &amp;lt;- Data dictionaries, manuals, and all other explanatory materials.&#xA;│&#xA;├── reports            &amp;lt;- Generated analysis as HTML, PDF, LaTeX, etc.&#xA;│   └── figures        &amp;lt;- Generated graphics and figures to be used in reporting&#xA;│&#xA;├── requirements.txt   &amp;lt;- The requirements file for reproducing the analysis environment, e.g.&#xA;│                         generated with `pip freeze &amp;gt; requirements.txt`&#xA;│&#xA;├── setup.cfg          &amp;lt;- Configuration file for flake8&#xA;│&#xA;└── {{ cookiecutter.module_name }}   &amp;lt;- Source code for use in this project.&#xA;    │&#xA;    ├── __init__.py             &amp;lt;- Makes {{ cookiecutter.module_name }} a Python module&#xA;    │&#xA;    ├── config.py               &amp;lt;- Store useful variables and configuration&#xA;    │&#xA;    ├── dataset.py              &amp;lt;- Scripts to download or generate data&#xA;    │&#xA;    ├── features.py             &amp;lt;- Code to create features for modeling&#xA;    │&#xA;    ├── modeling                &#xA;    │   ├── __init__.py &#xA;    │   ├── predict.py          &amp;lt;- Code to run model inference with trained models          &#xA;    │   └── train.py            &amp;lt;- Code to train models&#xA;    │&#xA;    └── plots.py                &amp;lt;- Code to create visualizations   &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using v1&lt;/h2&gt; &#xA;&lt;p&gt;If you want to use the old v1 project template, you need to have either the cookiecutter-data-science package or cookiecutter package installed. Then, use either command-line program with the &lt;code&gt;-c v1&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ccds https://github.com/drivendataorg/cookiecutter-data-science -c v1&#xA;# or equivalently&#xA;cookiecutter https://github.com/drivendataorg/cookiecutter-data-science -c v1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions! &lt;a href=&#34;https://cookiecutter-data-science.drivendata.org/contributing/&#34;&gt;See the docs for guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Installing development requirements&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r dev-requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running the tests&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pytest tests&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>