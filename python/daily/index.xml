<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-03T01:36:44Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>apirrone/Open_Duck_Mini</title>
    <updated>2025-04-03T01:36:44Z</updated>
    <id>tag:github.com,2025-04-03:/apirrone/Open_Duck_Mini</id>
    <link href="https://github.com/apirrone/Open_Duck_Mini" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Making a mini version of the BDX droid. https://discord.gg/UtJZsgfQGe&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open Duck Mini v2&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/2a407765-70ad-48dd-8a5d-488f82503716&#34; alt=&#34;1&#34; width=&#34;300px&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/3b8fe350-73a9-4c9f-ad29-efc781be7aee&#34; alt=&#34;2&#34; width=&#34;300px&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/fd7e5949-1492-4d31-851f-feaa9b695557&#34; alt=&#34;3&#34; width=&#34;300px&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;We are making a miniature version of the BDX Droid by Disney. It is about 42 centimeters tall with its legs extended. The full BOM cost should be under $400 !&lt;/p&gt; &#xA;&lt;p&gt;This repo is kind of a hub where we centralize all resources related to this project. This is a working repo, so there are a lot of undocumented scripts :) We&#39;ll try to clean things up at some point.&lt;/p&gt; &#xA;&lt;h1&gt;State of sim2real&lt;/h1&gt; &#xA;&lt;p&gt;The gait is getting better !&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/4129974a-9d97-4651-9474-c078043bb182&#34;&gt;https://github.com/user-attachments/assets/4129974a-9d97-4651-9474-c078043bb182&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/a0afcd38-15d8-40c6-8171-a619107406b8&#34;&gt;https://github.com/user-attachments/assets/a0afcd38-15d8-40c6-8171-a619107406b8&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Updates&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Update 02/04/2024: You can try two policies we trained : &lt;a href=&#34;https://raw.githubusercontent.com/apirrone/Open_Duck_Mini/v2/BEST_WALK_ONNX.onnx&#34;&gt;this one&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/apirrone/Open_Duck_Mini/v2/BEST_WALK_ONNX_2.onnx&#34;&gt;this one&lt;/a&gt; I run with the following arguments : python v2_rl_walk_mujoco.py --onnx_model_path ~/BEST_WALK_ONNX_2.onnx -p 32 --commands --cutoff_frequency 40&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Update 15/03/2025: join our discord server to get help or show us your duck :) &lt;a href=&#34;https://discord.gg/UtJZsgfQGe&#34;&gt;https://discord.gg/UtJZsgfQGe&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Update 07/02/2025: Big progress on sim2real, see videos above :)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Update 24/02/2025: Working hard on sim2real !&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Update 07/02/2025 : We are writing documentation on the go, but the design and BOM should not change drastically. Still missing the &#34;expression&#34; features, but they can be added after building the robot!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Update 22/01/2025 : The mechanical design is pretty much finalized (fixing some mistakes here and there). The current version does not include all the &#34;expression&#34; features we want to include in the final robot (LEDs for the eyes, a camera, a speaker and a microphone). We are now working on making it walk with reinforcement learning !&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;CAD&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cad.onshape.com/documents/64074dfcfa379b37d8a47762/w/3650ab4221e215a4f65eb7fe/e/0505c262d882183a25049d05&#34;&gt;https://cad.onshape.com/documents/64074dfcfa379b37d8a47762/w/3650ab4221e215a4f65eb7fe/e/0505c262d882183a25049d05&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/apirrone/Open_Duck_Mini/v2/docs/prepare_robot.md&#34;&gt;this document&lt;/a&gt; for getting from a onshape design to a simulated robot in MuJoCo&lt;/p&gt; &#xA;&lt;h1&gt;RL stuff&lt;/h1&gt; &#xA;&lt;p&gt;We are switching to Mujoco Playground, see this &lt;a href=&#34;https://github.com/apirrone/Open_Duck_Playground&#34;&gt;repo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/293ed5f2-bd24-472e-b44d-c2e4153b8cba&#34;&gt;https://github.com/user-attachments/assets/293ed5f2-bd24-472e-b44d-c2e4153b8cba&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We are still working with &lt;a href=&#34;https://github.com/rimim/AWD&#34;&gt;AWD&lt;/a&gt; too&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/07059dbe-2ebb-4718-afe7-16ce80691073&#34;&gt;https://github.com/user-attachments/assets/07059dbe-2ebb-4718-afe7-16ce80691073&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reference motion generation for imitation learning&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/4cb52e17-99a5-47a8-b841-4141596b7afb&#34;&gt;https://github.com/user-attachments/assets/4cb52e17-99a5-47a8-b841-4141596b7afb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/apirrone/Open_Duck_reference_motion_generator&#34;&gt;this repo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Actuator identification&lt;/h2&gt; &#xA;&lt;p&gt;We used Rhoban&#39;s &lt;a href=&#34;https://github.com/Rhoban/bam&#34;&gt;BAM&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;BOM&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1gq4iWWHEJVgAA_eemkTEsshXqrYlFxXAPwO515KpCJc/edit?usp=sharing&#34;&gt;https://docs.google.com/spreadsheets/d/1gq4iWWHEJVgAA_eemkTEsshXqrYlFxXAPwO515KpCJc/edit?usp=sharing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Build Guide&lt;/h1&gt; &#xA;&lt;h2&gt;Print Guide&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/apirrone/Open_Duck_Mini/v2/docs/print_guide.md&#34;&gt;print_guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Assembly Guide&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/apirrone/Open_Duck_Mini/v2/docs/assembly_guide.md&#34;&gt;assembly guide (incomplete)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Embedded runtime&lt;/h1&gt; &#xA;&lt;p&gt;This repo contains the code to run the policies on the onboard computer (Raspberry pi zero 2w) &lt;a href=&#34;https://github.com/apirrone/Open_Duck_Mini_Runtime&#34;&gt;https://github.com/apirrone/Open_Duck_Mini_Runtime&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Training your own policies&lt;/h1&gt; &#xA;&lt;p&gt;When we get a very nice stable and robust walk that transfers to the real robot, we&#39;ll provide it here (you can ask for a checkpoint on the discord too if you want to try).&lt;/p&gt; &#xA;&lt;p&gt;If you want to train your own policies, and contribute to making the ducks walk nicely, see &lt;a href=&#34;https://raw.githubusercontent.com/apirrone/Open_Duck_Mini/v2/docs/sim2real.md&#34;&gt;this document&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Global project TODO&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Centralize the URDF/MJCF. Separate repo ? Menagerie ?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Thanks a lot to HuggingFace and Pollen Robotics for sponsoring this project !&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>dreammis/social-auto-upload</title>
    <updated>2025-04-03T01:36:44Z</updated>
    <id>tag:github.com,2025-04-03:/dreammis/social-auto-upload</id>
    <link href="https://github.com/dreammis/social-auto-upload" rel="alternate"></link>
    <summary type="html">&lt;p&gt;自动化上传视频到社交媒体：抖音、小红书、视频号、tiktok、youtube、bilibili&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;social-auto-upload&lt;/h1&gt; &#xA;&lt;p&gt;social-auto-upload 该项目旨在自动化发布视频到各个社交媒体平台&lt;/p&gt; &#xA;&lt;p&gt;social-auto-upload This project aims to automate the posting of videos to various social media platforms.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/dreammis/social-auto-upload/main/media/show/tkupload.gif&#34; alt=&#34;tiktok show&#34; width=&#34;800&#34;&gt; &#xA;&lt;h2&gt;💡Feature&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;中国主流社交媒体平台：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 抖音&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 视频号&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; bilibili&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 小红书&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 快手&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 百家号&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;部分国外社交媒体：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; tiktok&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; youtube&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 易用版本(支持非开发人员使用)：Gui or Cli&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; API 封装 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Docker 部署&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 自动化上传(schedule)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 定时上传(cron)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; cookie 管理&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 国外平台proxy 设置&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 多线程上传&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; slack 推送&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;💾Installation&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt&#xA;playwright install chromium firefox&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;非程序员，&lt;a href=&#34;https://juejin.cn/post/7372114027840208911&#34;&gt;新手级教程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;🐇 About&lt;/h1&gt; &#xA;&lt;p&gt;The project for my own project extracted, my release strategy is timed release (released a day in advance), so the release part of the event are used for the next day time!&lt;/p&gt; &#xA;&lt;p&gt;If you need to release it immediately, you can study the source code or ask me questions.&lt;/p&gt; &#xA;&lt;p&gt;该项目为我自用项目抽离出来，我的发布策略是定时发布（提前一天发布），故发布部分采用的事件均为第二天的时间&lt;/p&gt; &#xA;&lt;p&gt;如果你有需求立即发布，可自行研究源码或者向我提问&lt;/p&gt; &#xA;&lt;h1&gt;核心模块解释&lt;/h1&gt; &#xA;&lt;h3&gt;1. 视频文件准备(video prepare)&lt;/h3&gt; &#xA;&lt;p&gt;filepath 本地视频目录，目录包含(filepath Local video directory containing)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;视频文件(video files)&lt;/li&gt; &#xA; &lt;li&gt;视频meta信息txt文件(video meta information txt file)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;举例(for example)：&lt;/p&gt; &#xA;&lt;p&gt;file：2023-08-24_16-29-52 - 这位勇敢的男子为了心爱之人每天坚守 .mp4&lt;/p&gt; &#xA;&lt;p&gt;meta_file:2023-08-24_16-29-52 - 这位勇敢的男子为了心爱之人每天坚守 .txt&lt;/p&gt; &#xA;&lt;p&gt;meta_file 内容(content)：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-angular2html&#34;&gt;这位勇敢的男子为了心爱之人每天坚守 🥺❤️‍🩹&#xA;#坚持不懈 #爱情执着 #奋斗使者 #短视频&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;设置conf 文件中的 &lt;code&gt;LOCAL_CHROME_PATH&lt;/code&gt;(在douyin、视频号 tiktok可能出现chromium 不兼容的各种问题，建议设置本地的chrome)&lt;/li&gt; &#xA; &lt;li&gt;这里分割出来3条路 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;可自行研究源码，免费、任意 穿插在自己的项目中&lt;/li&gt; &#xA;   &lt;li&gt;可参考下面的各个平台的使用指南，&lt;code&gt;examples&lt;/code&gt;文件夹中有各种示例代码&lt;/li&gt; &#xA;   &lt;li&gt;使用cli 简易使用(支持tiktok douyin 视频号)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;cli 用法&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python cli_main.py &amp;lt;platform&amp;gt; &amp;lt;account_name&amp;gt; &amp;lt;action: upload, login&amp;gt; [options]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;查看详细的参数说明使用：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python cli_main.py -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;usage: cli_main.py [-h] platform account_name action ...&#xA;&#xA;Upload video to multiple social-media.&#xA;&#xA;positional arguments:&#xA;  platform      Choose social-media platform: douyin tencent tiktok kuaishou&#xA;  account_name  Account name for the platform: xiaoA&#xA;  action        Choose action&#xA;    upload      upload operation&#xA;    login       login operation&#xA;    watch       watch operation&#xA;&#xA;options:&#xA;  -h, --help    show this help message and exit&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;示例&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python cli_main.py douyin test login&#xA;douyin平台，账号名为test，动作为login&#xA;&#xA;python cli_main.py douyin test upload &#34;C:\Users\duperdog\Videos\2023-11-07_05-27-44 - 这位少女如梦中仙... .mp4&#34; -pt 0&#xA;douyin平台, 账号名为test, 动作为upload, 视频文件（需对应的meta文件，详见上）, 发布方式（pt）：0 立即发布&#xA;&#xA;python cli_main.py douyin test upload &#34;C:\Users\superdog\Videos\2023-11-07_05-27-44 - 这位少女如梦中仙... .mp4&#34; -pt 1 -t &#34;2024-6-14 12:00&#34;&#xA;douyin平台, 账号名为test, 动作为upload, 视频文件, 发布方式（pt）：1 定时发布, 发布时间(t)： 2024-6-14 12:00&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;各平台详细说明&lt;/h2&gt; &#xA;&lt;h3&gt;1. 抖音&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/dreammis/social-auto-upload/main/media/show/pdf3.gif&#34; alt=&#34;douyin show&#34; width=&#34;500&#34;&gt; &#xA;&lt;p&gt;使用playwright模拟浏览器行为&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;抖音前端实现，诸多css class id 均为随机数，故项目中locator多采用相对定位，而非固定定位&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;准备视频目录结构&lt;/li&gt; &#xA; &lt;li&gt;cookie获取：get_douyin_cookie.py 扫码登录&lt;/li&gt; &#xA; &lt;li&gt;上传视频：upload_video_to_douyin.py&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;其他部分解释：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;douyin_setup handle 参数为True，为手动获取cookie False 则是校验cookie有效性&#xA;&#xA;generate_schedule_time_next_day 默认从第二天开始（此举为避免选择时间的意外错误）&#xA;参数解释：&#xA;- total_videos 本次上传视频个数&#xA;- videos_per_day 每日上传视频数量&#xA;- daily_times 视频发布时间 默认6、11、14、16、22点&#xA;- start_days 从第N天开始&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;2023年12月15日补充：使用chromium可能会出现无法识别视频封面图片的情况 解决方案：&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;下载chrome&lt;/li&gt; &#xA;  &lt;li&gt;找到chrome的安装目录&lt;/li&gt; &#xA;  &lt;li&gt;将本地chrome 路径conf文件中 LOCAL_CHROME_PATH = &#34;xxx/xxx/chrome.exe&#34;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;参考项目：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wanghaisheng/tiktoka-studio-uploader&#34;&gt;https://github.com/wanghaisheng/tiktoka-studio-uploader&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Superheroff/douyin_uplod&#34;&gt;https://github.com/Superheroff/douyin_uplod&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lishang520/DouYin-Auto-Upload.git&#34;&gt;https://github.com/lishang520/DouYin-Auto-Upload.git&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;2. 视频号&lt;/h3&gt; &#xA;&lt;p&gt;使用playwright模拟浏览器行为&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;准备视频目录结构&lt;/li&gt; &#xA; &lt;li&gt;cookie获取：get_tencent_cookie.py 扫码登录&lt;/li&gt; &#xA; &lt;li&gt;上传视频：upload_video_to_tencent.py&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;其他部分解释：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;参考上面douyin_setup 配置&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;视频号使用chromium会出现不支持上传视频，需要自行指定本地浏览器 解决方案：&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;下载chrome&lt;/li&gt; &#xA;  &lt;li&gt;找到chrome的安装目录&lt;/li&gt; &#xA;  &lt;li&gt;将本地chrome 路径conf文件中 LOCAL_CHROME_PATH = &#34;xxx/xxx/chrome.exe&#34;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;3. 小红书&lt;/h3&gt; &#xA;&lt;p&gt;该实现，借助ReaJason的&lt;a href=&#34;https://github.com/ReaJason/xhs&#34;&gt;xhs&lt;/a&gt;，再次感谢。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;目录结构同上&lt;/li&gt; &#xA; &lt;li&gt;cookie获取，可使用chrome插件：EditThisCookie&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;设置导出格式 &lt;img src=&#34;https://raw.githubusercontent.com/dreammis/social-auto-upload/main/media/20231009111131.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;导出 &lt;img src=&#34;https://raw.githubusercontent.com/dreammis/social-auto-upload/main/media/20231009111214.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;黏贴至 uploader/xhs_uploader/accounts.ini文件中&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;解释与注意事项：&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;xhs签名方式分为两种：&#xA;- 本地签名 sign_locl （默认）&#xA;- 自建签名服务 sign&#xA;&#xA;测试下来发现本地签名，在实际多账号情况下会存在问题&#xA;故如果你有多账号分发，建议采用自建签名服务（todo 上传docker配置）&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;疑难杂症&lt;/h5&gt; &#xA;&lt;p&gt;遇到签名问题，可尝试更新 &#34;utils/stealth.min.js&#34;文件 &lt;a href=&#34;https://github.com/requireCool/stealth.min.js&#34;&gt;https://github.com/requireCool/stealth.min.js&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;24.4.10 大多数人小红书失败的原因在于你的cookie有问题，请参照你cookie是不是如我这样 &lt;img src=&#34;https://raw.githubusercontent.com/dreammis/social-auto-upload/main/media/xhs_error_cookie.png&#34; alt=&#34;正确的cookie&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;关于xhs部分可参考作者： &lt;a href=&#34;https://reajason.github.io/xhs/basic&#34;&gt;https://reajason.github.io/xhs/basic&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h5&gt;todo&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;扫码登录方式（实验下来发现与浏览器获取的存在区别，会有问题，未来再研究）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;参考项目：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ReaJason/xhs&#34;&gt;https://github.com/ReaJason/xhs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;4. bilibili&lt;/h3&gt; &#xA;&lt;p&gt;该实现，借助biliup的&lt;a href=&#34;https://github.com/biliup/biliup-rs&#34;&gt;biliup-rs&lt;/a&gt;，再次感谢。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;准备视频目录结构&lt;/li&gt; &#xA; &lt;li&gt;cookie获取：&lt;code&gt;biliup.exe -u account.json login&lt;/code&gt; 选项你喜欢的登录方式 &lt;img src=&#34;https://raw.githubusercontent.com/dreammis/social-auto-upload/main/media/get_bili_cookie.png&#34; alt=&#34;登录方式&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;上传视频：upload_video_to_bilibili.py&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;解释与注意事项：&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;bilibili cookie 长期有效（至少我运行2年以来是这样的）&#xA;其他平台 诸如linux mac 服务器运行 请自行研究&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;参考项目：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/biliup/biliup-rs&#34;&gt;https://github.com/biliup/biliup-rs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;5. tiktok&lt;/h3&gt; &#xA;&lt;p&gt;使用playwright模拟浏览器行为(Simulating Browser Behavior with playwright)&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;准备视频目录结构(Prepare the video directory structure)&lt;/li&gt; &#xA; &lt;li&gt;将本地chrome路径配置到conf文件中 LOCAL_CHROME_PATH = &#34;xxx/xxx/chrome.exe&#34;(Configure the local chrome path to the conf file)&lt;/li&gt; &#xA; &lt;li&gt;cookie获取(generate your cookie)：get_tk_cookie.py &lt;img src=&#34;https://raw.githubusercontent.com/dreammis/social-auto-upload/main/media/tk_login.png&#34; alt=&#34;get tiktok cookie&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;上传视频(upload video)：upload_video_to_tiktok.py&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;24.7.3 update local chrome support:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;you can upload your custom thumbnail(place &lt;code&gt;png&lt;/code&gt; file at the path of &lt;code&gt;videos&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;if not, the system will take the first frame of the video as the thumbnail.&lt;/li&gt; &#xA; &lt;li&gt;chrome drive can&#39;t login by gmail oauth. the google don&#39;t support it. (if you want login by google oauth you can use the &lt;code&gt;tk_uploader/main.py&lt;/code&gt; old firefox.)&lt;/li&gt; &#xA; &lt;li&gt;before the upload process change the language to eng.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;其他部分解释：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;参考上面douyin_setup 配置&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;other part explain(for eng friends)：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tiktok_setup handle parameter is True to get cookie manually False to check cookie validity&#xA;&#xA;generate_schedule_time_next_day defaults to start on the next day (this is to avoid accidental time selection errors)&#xA;Parameter explanation:&#xA;- total_videos Number of videos uploaded this time&#xA;- videos_per_day Number of videos uploaded per day&#xA;- daily_times The video posting times are 6, 11, 14, 16, 22 by default.&#xA;- start_days Starts on the nth day.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;参考项目：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wkaisertexas/tiktok-uploader&#34;&gt;https://github.com/wkaisertexas/tiktok-uploader&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;其余部分(todo)&lt;/h3&gt; &#xA;&lt;p&gt;整理后上传&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;其他优秀项目&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KLordy/auto_publish_videos&#34;&gt;https://github.com/KLordy/auto_publish_videos&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;db支持&lt;/li&gt; &#xA;   &lt;li&gt;定期自动发布&lt;/li&gt; &#xA;   &lt;li&gt;cookie db管理&lt;/li&gt; &#xA;   &lt;li&gt;视频去重&lt;/li&gt; &#xA;   &lt;li&gt;消息推送&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🐾Communicate&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/hysn2001m&#34;&gt;Donate as u like&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果你也是&lt;code&gt;一个人&lt;/code&gt;，喜欢&lt;code&gt;折腾&lt;/code&gt;， 想要在如此恶劣的大环境寻找突破&lt;/p&gt; &#xA;&lt;p&gt;希望探索 #技术变现 #AI创业 #跨境航海 #自动化上传 #自动化视频 #技术探讨&lt;/p&gt; &#xA;&lt;p&gt;可以来群里和大家交流&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dreammis/social-auto-upload/main/media/mp.jpg&#34; alt=&#34;Nas&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dreammis/social-auto-upload/main/media/QR.png&#34; alt=&#34;赞赏&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;后台回复 &lt;code&gt;上传&lt;/code&gt; 加群交流&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;如果你觉得有用&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果这个项目对你有帮助，⭐以表示支持&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#dreammis/social-auto-upload&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=dreammis/social-auto-upload&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>