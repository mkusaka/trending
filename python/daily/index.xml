<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-11T01:37:31Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nateraw/stable-diffusion-videos</title>
    <updated>2022-09-11T01:37:31Z</updated>
    <id>tag:github.com,2022-09-11:/nateraw/stable-diffusion-videos</id>
    <link href="https://github.com/nateraw/stable-diffusion-videos" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create ðŸ”¥ videos with Stable Diffusion by exploring the latent space and morphing between text prompts&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;stable-diffusion-videos&lt;/h1&gt; &#xA;&lt;p&gt;Try it yourself in Colab: &lt;a href=&#34;https://colab.research.google.com/github/nateraw/stable-diffusion-videos/blob/main/stable_diffusion_videos.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt; - morphing between &#34;blueberry spaghetti&#34; and &#34;strawberry spaghetti&#34;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/32437151/188721341-6f28abf9-699b-46b0-a72e-fa2a624ba0bb.mp4&#34;&gt;https://user-images.githubusercontent.com/32437151/188721341-6f28abf9-699b-46b0-a72e-fa2a624ba0bb.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How it Works&lt;/h2&gt; &#xA;&lt;h3&gt;The Notebook/App&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://colab.research.google.com/github/nateraw/stable-diffusion-videos/blob/main/stable_diffusion_videos.ipynb&#34;&gt;in-browser Colab demo&lt;/a&gt; allows you to generate videos by interpolating the latent space of &lt;a href=&#34;https://github.com/CompVis/stable-diffusion&#34;&gt;Stable Diffusion&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can either dream up different versions of the same prompt, or morph between different text prompts (with seeds set for each for reproducibility).&lt;/p&gt; &#xA;&lt;p&gt;The app is built with &lt;a href=&#34;https://gradio.app/&#34;&gt;Gradio&lt;/a&gt;, which allows you to interact with the model in a web app. Here&#39;s how I suggest you use it:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the &#34;Images&#34; tab to generate images you like.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Find two images you want to morph between&lt;/li&gt; &#xA;   &lt;li&gt;These images should use the same settings (guidance scale, scheduler, height, width)&lt;/li&gt; &#xA;   &lt;li&gt;Keep track of the seeds/settings you used so you can reproduce them&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate videos using the &#34;Videos&#34; tab&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Using the images you found from the step above, provide the prompts/seeds you recorded&lt;/li&gt; &#xA;   &lt;li&gt;Set the &lt;code&gt;num_walk_steps&lt;/code&gt; - for testing you can use a small number like 3 or 5, but to get great results you&#39;ll want to use something larger (60-200 steps).&lt;/li&gt; &#xA;   &lt;li&gt;You can set the &lt;code&gt;output_dir&lt;/code&gt; to the directory you wish to save to&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Python Package&lt;/h3&gt; &#xA;&lt;h4&gt;Setup&lt;/h4&gt; &#xA;&lt;p&gt;Install the package&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install stable_diffusion_videos&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Authenticate with Hugging Face&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;huggingface-cli login&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Programatic Usage&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from stable_diffusion_videos import walk&#xA;&#xA;walk(&#xA;    prompts=[&#39;a cat&#39;, &#39;a dog&#39;],&#xA;    seeds=[42, 1337],&#xA;    output_dir=&#39;dreams&#39;,     # Where images/videos will be saved&#xA;    name=&#39;animals_test&#39;,     # Subdirectory of output_dir where images/videos will be saved&#xA;    guidance_scale=8.5,      # Higher adheres to prompt more, lower lets model take the wheel&#xA;    num_steps=5,             # Change to 60-200 for better results...3-5 for testing&#xA;    num_inference_steps=50, &#xA;    scheduler=&#39;klms&#39;,        # One of: &#34;klms&#34;, &#34;default&#34;, &#34;ddim&#34;&#xA;    disable_tqdm=False,      # Set to True to disable tqdm progress bar&#xA;    make_video=True,         # If false, just save images&#xA;    use_lerp_for_text=True,  # Use lerp for text embeddings instead of slerp&#xA;    do_loop=False,           # Change to True if you want last prompt to loop back to first prompt&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Run the App Locally&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from stable_diffusion_videos import interface&#xA;&#xA;interface.launch()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This work built off of &lt;a href=&#34;https://gist.github.com/karpathy/00103b0037c5aaea32fe1da1af553355&#34;&gt;a script&lt;/a&gt; shared by &lt;a href=&#34;https://github.com/karpathy&#34;&gt;@karpathy&lt;/a&gt;. The script was modified to &lt;a href=&#34;https://gist.github.com/nateraw/c989468b74c616ebbc6474aa8cdd9e53&#34;&gt;this gist&lt;/a&gt;, which was then updated/modified to this repo.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;You can file any issues/feature requests &lt;a href=&#34;https://github.com/nateraw/stable-diffusion-videos/issues&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Enjoy ðŸ¤—&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>karpathy/makemore</title>
    <updated>2022-09-11T01:37:31Z</updated>
    <id>tag:github.com,2022-09-11:/karpathy/makemore</id>
    <link href="https://github.com/karpathy/makemore" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An autoregressive character-level language model for making more things&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;makemore&lt;/h1&gt; &#xA;&lt;p&gt;makemore takes one text file as input, where each line is assumed to be one training thing, and generates more things like it. Under the hood, it is an autoregressive character-level language model, with a wide choice of models from bigrams all the way to a Transformer (exactly as seen in GPT). For example, we can feed it a database of names, and makemore will generate cool baby name ideas that all sound name-like, but are not already existing names. Or if we feed it a database of company names then we can generate new ideas for a name of a company. Or we can just feed it valid scrabble words and generate english-like babble.&lt;/p&gt; &#xA;&lt;p&gt;This is not meant to be too heavyweight library with a billion switches and knobs. It is one hackable file, and is mostly intended for educational purposes. &lt;a href=&#34;https://pytorch.org&#34;&gt;PyTorch&lt;/a&gt; is the only requirement.&lt;/p&gt; &#xA;&lt;p&gt;Current language model neural nets implemented:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bigram (one character simply predicts a next one with a lookup table of counts)&lt;/li&gt; &#xA; &lt;li&gt;Bag of Words&lt;/li&gt; &#xA; &lt;li&gt;MLP, along the lines of &lt;a href=&#34;https://www.jmlr.org/papers/volume3/bengio03a/bengio03a.pdf&#34;&gt;Bengio et al. 2003&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;RNN, along the lines of &lt;a href=&#34;https://icml.cc/2011/papers/524_icmlpaper.pdf&#34;&gt;Sutskever et al. 2011&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GRU, following &lt;a href=&#34;https://arxiv.org/abs/1409.1259&#34;&gt;Kyunghyun Cho et al. 2014&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Transformer, following &lt;a href=&#34;https://arxiv.org/abs/1706.03762&#34;&gt;Vaswani et al. 2017&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;The included &lt;code&gt;names.txt&lt;/code&gt; dataset, as an example, has the most common 32K names takes from &lt;a href=&#34;https://www.ssa.gov/oact/babynames/&#34;&gt;ssa.gov&lt;/a&gt; for the year 2018. It looks like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;emma&#xA;olivia&#xA;ava&#xA;isabella&#xA;sophia&#xA;charlotte&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Let&#39;s point the script at it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ python makemore.py -i names.txt -o names&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Training progress and logs and model will all be saved to the working directory &lt;code&gt;names&lt;/code&gt;. The default model is a super tiny 200K param transformer; Many more training configurations are available - see the argparse and read the code. Training does not require any special hardware, it runs on my Macbook Air and will run on anything else, but if you have a GPU then training will fly faster. As training progresses the script will print some samples throughout. However, if you&#39;d like to sample manually, you can use the &lt;code&gt;--sample-only&lt;/code&gt; flag, e.g. in a separate terminal do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ python makemore.py -i names.txt -o names --sample-only&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will load the best model so far and print more samples on demand. Here are some unique baby names that get eventually generated from current default settings (test logprob of ~1.92, though much lower logprobs are achievable with some hyperparameter tuning):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dontell&#xA;khylum&#xA;camatena&#xA;aeriline&#xA;najlah&#xA;sherrith&#xA;ryel&#xA;irmi&#xA;taislee&#xA;mortaz&#xA;akarli&#xA;maxfelynn&#xA;biolett&#xA;zendy&#xA;laisa&#xA;halliliana&#xA;goralynn&#xA;brodynn&#xA;romima&#xA;chiyomin&#xA;loghlyn&#xA;melichae&#xA;mahmed&#xA;irot&#xA;helicha&#xA;besdy&#xA;ebokun&#xA;lucianno&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Have fun!&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>numpy/numpy</title>
    <updated>2022-09-11T01:37:31Z</updated>
    <id>tag:github.com,2022-09-11:/numpy/numpy</id>
    <link href="https://github.com/numpy/numpy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The fundamental package for scientific computing with Python.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/numpy/numpy/main/branding/logo/primary/numpylogo.svg?sanitize=true&#34; width=&#34;300&#34;&gt; &lt;/h1&gt;&#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://numfocus.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&amp;amp;colorA=E1523D&amp;amp;colorB=007D8A&#34; alt=&#34;Powered by NumFOCUS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/numpy/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/numpy.svg?label=PyPI%20downloads&#34; alt=&#34;PyPI Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://anaconda.org/conda-forge/numpy&#34;&gt;&lt;img src=&#34;https://img.shields.io/conda/dn/conda-forge/numpy.svg?label=Conda%20downloads&#34; alt=&#34;Conda Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stackoverflow.com/questions/tagged/numpy&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stackoverflow-Ask%20questions-blue.svg?sanitize=true&#34; alt=&#34;Stack Overflow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doi.org/10.1038/s41586-020-2649-2&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/DOI-10.1038%2Fs41592--019--0686--2-blue&#34; alt=&#34;Nature Paper&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;NumPy is the fundamental package for scientific computing with Python.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Website:&lt;/strong&gt; &lt;a href=&#34;https://www.numpy.org&#34;&gt;https://www.numpy.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; &lt;a href=&#34;https://numpy.org/doc&#34;&gt;https://numpy.org/doc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mailing list:&lt;/strong&gt; &lt;a href=&#34;https://mail.python.org/mailman/listinfo/numpy-discussion&#34;&gt;https://mail.python.org/mailman/listinfo/numpy-discussion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Source code:&lt;/strong&gt; &lt;a href=&#34;https://github.com/numpy/numpy&#34;&gt;https://github.com/numpy/numpy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Contributing:&lt;/strong&gt; &lt;a href=&#34;https://www.numpy.org/devdocs/dev/index.html&#34;&gt;https://www.numpy.org/devdocs/dev/index.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bug reports:&lt;/strong&gt; &lt;a href=&#34;https://github.com/numpy/numpy/issues&#34;&gt;https://github.com/numpy/numpy/issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Report a security vulnerability:&lt;/strong&gt; &lt;a href=&#34;https://tidelift.com/docs/security&#34;&gt;https://tidelift.com/docs/security&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It provides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a powerful N-dimensional array object&lt;/li&gt; &#xA; &lt;li&gt;sophisticated (broadcasting) functions&lt;/li&gt; &#xA; &lt;li&gt;tools for integrating C/C++ and Fortran code&lt;/li&gt; &#xA; &lt;li&gt;useful linear algebra, Fourier transform, and random number capabilities&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Testing:&lt;/p&gt; &#xA;&lt;p&gt;NumPy requires &lt;code&gt;pytest&lt;/code&gt; and &lt;code&gt;hypothesis&lt;/code&gt;. Tests can then be run after installation with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -c &#39;import numpy; numpy.test()&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;NumPy is a community-driven open source project developed by a diverse group of &lt;a href=&#34;https://numpy.org/teams/&#34;&gt;contributors&lt;/a&gt;. The NumPy leadership has made a strong commitment to creating an open, inclusive, and positive community. Please read the &lt;a href=&#34;https://numpy.org/code-of-conduct/&#34;&gt;NumPy Code of Conduct&lt;/a&gt; for guidance on how to interact with others in a way that makes our community thrive.&lt;/p&gt; &#xA;&lt;h2&gt;Call for Contributions&lt;/h2&gt; &#xA;&lt;p&gt;The NumPy project welcomes your expertise and enthusiasm!&lt;/p&gt; &#xA;&lt;p&gt;Small improvements or fixes are always appreciated. If you are considering larger contributions to the source code, please contact us through the &lt;a href=&#34;https://mail.python.org/mailman/listinfo/numpy-discussion&#34;&gt;mailing list&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;p&gt;Writing code isnâ€™t the only way to contribute to NumPy. You can also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;review pull requests&lt;/li&gt; &#xA; &lt;li&gt;help us stay on top of new and old issues&lt;/li&gt; &#xA; &lt;li&gt;develop tutorials, presentations, and other educational materials&lt;/li&gt; &#xA; &lt;li&gt;maintain and improve &lt;a href=&#34;https://github.com/numpy/numpy.org&#34;&gt;our website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;develop graphic design for our brand assets and promotional materials&lt;/li&gt; &#xA; &lt;li&gt;translate website content&lt;/li&gt; &#xA; &lt;li&gt;help with outreach and onboard new contributors&lt;/li&gt; &#xA; &lt;li&gt;write grant proposals and help with other fundraising efforts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more information about the ways you can contribute to NumPy, visit &lt;a href=&#34;https://numpy.org/contribute/&#34;&gt;our website&lt;/a&gt;. If youâ€™re unsure where to start or how your skills fit in, reach out! You can ask on the mailing list or here, on GitHub, by opening a new issue or leaving a comment on a relevant issue that is already open.&lt;/p&gt; &#xA;&lt;p&gt;Our preferred channels of communication are all public, but if youâ€™d like to speak to us in private first, contact our community coordinators at &lt;a href=&#34;mailto:numpy-team@googlegroups.com&#34;&gt;numpy-team@googlegroups.com&lt;/a&gt; or on Slack (write &lt;a href=&#34;mailto:numpy-team@googlegroups.com&#34;&gt;numpy-team@googlegroups.com&lt;/a&gt; for an invitation).&lt;/p&gt; &#xA;&lt;p&gt;We also have a biweekly community call, details of which are announced on the mailing list. You are very welcome to join.&lt;/p&gt; &#xA;&lt;p&gt;If you are new to contributing to open source, &lt;a href=&#34;https://opensource.guide/how-to-contribute/&#34;&gt;this guide&lt;/a&gt; helps explain why, what, and how to successfully get involved.&lt;/p&gt;</summary>
  </entry>
</feed>