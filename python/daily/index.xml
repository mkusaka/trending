<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-08T01:40:52Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gaogaotiantian/pitch-visualizer</title>
    <updated>2023-12-08T01:40:52Z</updated>
    <id>tag:github.com,2023-12-08:/gaogaotiantian/pitch-visualizer</id>
    <link href="https://github.com/gaogaotiantian/pitch-visualizer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Visualize pitch for a video&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pitch Visualizer&lt;/h1&gt; &#xA;&lt;p&gt;这是一个小小的Python脚本，可以把一段纯人声音频进行音高的可视化，然后和音频的原视频进行合并， 最终生成一段带有动态音高标注的视频。&lt;/p&gt; &#xA;&lt;h2&gt;开始之前&lt;/h2&gt; &#xA;&lt;h3&gt;FFmpeg&lt;/h3&gt; &#xA;&lt;p&gt;你需要&lt;a href=&#34;https://ffmpeg.org/&#34;&gt;ffmpeg&lt;/a&gt;。请确保在命令行输入&lt;code&gt;ffmpeg&lt;/code&gt;可以正常调用ffmpeg， 或者你知道明确的ffmpeg的位置。&lt;/p&gt; &#xA;&lt;h3&gt;Python requirements&lt;/h3&gt; &#xA;&lt;p&gt;建议大家在&lt;a href=&#34;https://docs.python.org/zh-cn/3/library/venv.html&#34;&gt;虚拟环境&lt;/a&gt;中工作&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -m venv venv&#xA;source venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;最简单的方式：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;人声分离&lt;/h3&gt; &#xA;&lt;p&gt;这个脚本并不能帮你做人声分离，你需要用其他的软件或者库来完成这件事。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ultimatevocalremover.com/&#34;&gt;Ultimate Vocal Remover&lt;/a&gt; 是目前我用过效果最好的软件，免费&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/deezer/spleeter&#34;&gt;spleeter&lt;/a&gt; 是一个开源的人声分离库&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用&lt;/h2&gt; &#xA;&lt;p&gt;你需要准备两个文件&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;原始视频文件（.mp4）&lt;/li&gt; &#xA; &lt;li&gt;从原始视频中分离的干声文件（.mp3）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;为了画出准确的对比音高，你需要知道这首歌曲的调性（C或者F#之类）。在这个软件中，我们没有特意区别小调， 调性只是为了标注音阶。如果歌曲是小调，请使用其音阶对应的大调的调性。比如A小调对应的是C。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python gen_pitch.py --audio &amp;lt;voice.mp3&amp;gt; -t &amp;lt;tone&amp;gt; &amp;lt;video.mp3&amp;gt; -o &amp;lt;output.mp4&amp;gt;&#xA;&#xA;# 举个例子&#xA;python gen_pitch.py --audio wjk_raw.mp3 -t E wjk.mp4 -o wjk_with_pitch.mp4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;其中&lt;code&gt;-o&lt;/code&gt;可以省略，默认是在输入视频的文件夹下建立另一个视频。&lt;/p&gt; &#xA;&lt;h3&gt;其他的选项&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--ffmpeg&lt;/code&gt; 可以指定你想用的ffmpeg，在你PATH中不存在ffmpeg的时候需要使用&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--pitch_width&lt;/code&gt; 设置音高图的宽度，默认是原始视频的一半&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--pitch_position&lt;/code&gt; 设置音高图的位置，默认是&lt;code&gt;top_right&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--min_pitch&lt;/code&gt; 设置识别的最低的音，默认是&lt;code&gt;D2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--max_pitch&lt;/code&gt; 设置识别的最高的音，默认是&lt;code&gt;G5&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;如果你对歌曲的音域比较了解，通过设置&lt;code&gt;--min_pitch&lt;/code&gt;和&lt;code&gt;--max_pitch&lt;/code&gt;可以有效增加音高识别的准确率， 同时还可以加快渲染速度。&lt;/p&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2023 Tian Gao.&lt;/p&gt; &#xA;&lt;p&gt;Distrubuted under the terms of the &lt;a href=&#34;https://github.com/gaogaotiantian/pitch-visualizer/raw/master/LICENSE&#34;&gt;Apache 2.0 license&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SuperDuperDB/superduperdb</title>
    <updated>2023-12-08T01:40:52Z</updated>
    <id>tag:github.com,2023-12-08:/SuperDuperDB/superduperdb</id>
    <link href="https://github.com/SuperDuperDB/superduperdb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔮 SuperDuperDB: Bring AI to your database: Integrate, train and manage any AI models and APIs directly with your database and your data.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.superduperdb.com&#34;&gt; &lt;img width=&#34;90%&#34; src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/img/SuperDuperDB_logo_color.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Bring AI to your favorite database!&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h2&gt;&lt;a href=&#34;https://superduperdb.github.io/superduperdb/&#34;&gt;&lt;strong&gt;Docs&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://docs.superduperdb.com/blog&#34;&gt;&lt;strong&gt;Blog&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://docs.superduperdb.com/docs/category/use-cases&#34;&gt;&lt;strong&gt;Use-Cases&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://demo.superduperdb.com&#34;&gt;&lt;strong&gt; Live Notebooks&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://github.com/SuperDuperDB/superduper-community-apps&#34;&gt;&lt;strong&gt;Community Apps&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://join.slack.com/t/superduperdb/shared_invite/zt-1zuojj0k0-RjAYBs1TDsvEa7yaFGa6QA&#34;&gt;&lt;strong&gt; Slack &lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://www.youtube.com/channel/UC-clq9x8EGtQc6MHW0GF73g&#34;&gt;&lt;strong&gt; Youtube &lt;/strong&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://pypi.org/project/superduperdb&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/superduperdb?color=%23007ec6&amp;amp;label=pypi%20package&#34; alt=&#34;Package version&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://pepy.tech/project/superduperdb&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/superduperdb&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://pypi.org/project/superduperdb&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/superduperdb.svg?sanitize=true&#34; alt=&#34;Supported Python versions&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/SuperDuperDB/superduperdb/actions/workflows/ci_code.yml&#34;&gt;&lt;img src=&#34;https://github.com/SuperDuperDB/superduperdb/actions/workflows/ci_code.yml/badge.svg?branch=main&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://codecov.io/gh/superduperdb/superduperdb/branch/main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/superduperdb/superduperdb/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/superduperdb/blob/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache_2.0-green&#34; alt=&#34;License - Apache 2.0&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://twitter.com/superduperdb&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/nestframework.svg?style=social&amp;amp;label=Follow @SuperDuperDB&#34;&gt;&lt;/a&gt; &#xA; &lt;p&gt;&lt;b&gt;English&lt;/b&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/README_zh.md&#34;&gt;&lt;strong&gt;中文&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;What is SuperDuperDB? 🔮&lt;/h2&gt; &#xA;&lt;p&gt;SuperDuperDB is an open-source framework for integrating AI directly with your existing databases, including streaming inference, scalable model training, and vector search.&lt;/p&gt; &#xA;&lt;p&gt;SuperDuperDB is not a database. It transforms your favorite database into an AI development and deployment environment; think &lt;code&gt;db = superduper(db)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;SuperDuperDB eliminates complex MLOps pipelines, specialized vector databases - and the need to migrate and duplicate data by integrating AI at the data&#39;s source, directly on top of your existing data infrastructure. This massively simplifies building and managing AI applications:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generative AI &amp;amp; LLM-Chat&lt;/li&gt; &#xA; &lt;li&gt;Vector Search&lt;/li&gt; &#xA; &lt;li&gt;Standard Machine Learning Use-Cases (Classification, Segmentation, Recommendation etc.)&lt;/li&gt; &#xA; &lt;li&gt;Highly custom AI use-cases involving ultra specialized models&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;To get started:&lt;/strong&gt; Check the uses cases that we have already implemented &lt;a href=&#34;https://docs.superduperdb.com/docs/category/use-cases&#34;&gt;here in the docs&lt;/a&gt; as well as apps built by the community in the dedicated &lt;a href=&#34;https://github.com/SuperDuperDB/superduper-community-apps&#34;&gt;superduper-community-apps repo&lt;/a&gt; and try all of them with &lt;a href=&#34;https://demo.superduperdb.com/&#34;&gt;Jupyter right in your browser&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SuperDuperDB is open-source: Please leave a star to support the project! ⭐&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more information about SuperDuperDB and why we believe it is much needed, &lt;a href=&#34;https://docs.superduperdb.com/blog/superduperdb-the-open-source-framework-for-bringing-ai-to-your-datastore/&#34;&gt;read this blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=FxJs7pbHj3Q&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/FxJs7pbHj3Q/0.jpg&#34; alt=&#34;SuperDuperDB in a Nutshell&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Key Features:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.superduperdb.com/docs/docs/walkthrough/apply_models&#34;&gt;Integration of AI with your existing data infrastructure&lt;/a&gt;:&lt;/strong&gt; Integrate any AI models and APIs with your databases in a single scalable deployment, without the need for additional pre-processing steps, ETL or boilerplate code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.superduperdb.com/docs/docs/walkthrough/daemonizing_models_with_listeners&#34;&gt;Streaming Inference&lt;/a&gt;:&lt;/strong&gt; Have your models compute outputs automatically and immediately as new data arrives, keeping your deployment always up-to-date.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.superduperdb.com/docs/docs/walkthrough/training_models&#34;&gt;Scalable Model Training&lt;/a&gt;:&lt;/strong&gt; Train AI models on large, diverse datasets simply by querying your training data. Ensured optimal performance via in-build computational optimizations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.superduperdb.com/docs/docs/walkthrough/linking_interdependent_models/&#34;&gt;Model Chaining&lt;/a&gt;&lt;/strong&gt;: Easily setup complex workflows by connecting models and APIs to work together in an interdependent and sequential manner.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.superduperdb.com/docs/docs/fundamentals/procedural_vs_declarative_api&#34;&gt;Simple, but Extendable Interface&lt;/a&gt;&lt;/strong&gt;: Add and leverage any function, program, script or algorithm from the Python ecosystem to enhance your workflows and applications. Drill down to any layer of implementation, including to the inner workings of your models while operating SuperDuperDB with simple Python commands.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.superduperdb.com/docs/docs/walkthrough/encoding_special_data_types/&#34;&gt;Difficult Data-Types&lt;/a&gt;&lt;/strong&gt;: Work directly with images, video, audio in your database, and any type which can be encoded as &lt;code&gt;bytes&lt;/code&gt; in Python.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.superduperdb.com/docs/docs/walkthrough/encoding_special_data_types&#34;&gt;Feature Storing&lt;/a&gt;:&lt;/strong&gt; Turn your database into a centralized repository for storing and managing inputs and outputs of AI models of arbitrary data-types, making them available in a structured format and known environment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.superduperdb.com/docs/docs/walkthrough/vector_search&#34;&gt;Vector Search&lt;/a&gt;:&lt;/strong&gt; No need to duplicate and migrate your data to additional specialized vector databases - turn your existing battle-tested database into a fully-fledged multi-modal vector-search database, including easy generation of vector embeddings and vector indexes of your data with preferred models and APIs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Why opt for SuperDuperDB?&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;With SuperDuperDB&lt;/th&gt; &#xA;   &lt;th&gt;Without&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data Management &amp;amp; Security&lt;/td&gt; &#xA;   &lt;td&gt;Data stays in the database, with AI outputs stored alongside inputs available to downstream applications. Data access and security to be externally controlled via database access management.&lt;/td&gt; &#xA;   &lt;td&gt;Data duplication and migration to different environments, and specialized vector databases, imposing data management overhead.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Infrastructure&lt;/td&gt; &#xA;   &lt;td&gt;A single environment to build, ship, and manage your AI applications, facilitating scalability and optimal compute efficiency.&lt;/td&gt; &#xA;   &lt;td&gt;Complex fragmented infrastructure, with multiple pipelines, coming with high adoption and maintenance costs and increasing security risks.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Code&lt;/td&gt; &#xA;   &lt;td&gt;Minimal learning curve due to a simple and declarative API, requiring simple Python commands.&lt;/td&gt; &#xA;   &lt;td&gt;Hundreds of lines of codes and settings in different environemts and tools.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Supported Datastores (&lt;em&gt;more coming soon&lt;/em&gt;):&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Xmongodb.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Xmongodb-atlas.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Xaws-s3.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Xpostgresql.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Xmysql.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Xsqlite.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Xduckdb.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Xsnowflake.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Xbigquery.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Xclickhouse.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Xdatafusion.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Xdruid.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Ximpala.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Xmssql.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Xoracle.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Xpandas.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Xpolars.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Xpyspark.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/databases/2Xtrino.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Transform your existing database into a Python-only AI development and deployment stack with one command:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;db = superduper(&#39;mongodb|postgres|sqlite|duckdb|snowflake://&amp;lt;your-db-uri&amp;gt;&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported AI Frameworks and Models (&lt;em&gt;more coming soon&lt;/em&gt;):&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/frameworks/2Xpytorch.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/frameworks/2Xscikit-learn.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/frameworks/2Xhuggingface-transformers.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Integrate, train and manage any AI model (whether from open-source, commercial models or self-developed) directly with your datastore to automatically compute outputs with a single Python command:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install and deploy model:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;m = db.add(&#xA;    &amp;lt;sklearn_model&amp;gt;|&amp;lt;torch_module&amp;gt;|&amp;lt;transformers_pipeline&amp;gt;|&amp;lt;arbitrary_callable&amp;gt;,&#xA;    preprocess=&amp;lt;your_preprocess_callable&amp;gt;,&#xA;    postprocess=&amp;lt;your_postprocess_callable&amp;gt;,&#xA;    encoder=&amp;lt;your_datatype&amp;gt;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Predict:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;m.predict(X=&#39;&amp;lt;input_column&amp;gt;&#39;, db=db, select=&amp;lt;mongodb_query&amp;gt;, listen=False|True, create_vector_index=False|True)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Train model:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;m.fit(X=&#39;&amp;lt;input_column_or_key&amp;gt;&#39;, y=&#39;&amp;lt;target_column_or_key&amp;gt;&#39;, db=db, select=&amp;lt;mongodb_query&amp;gt;|&amp;lt;ibis_query&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Pre-Integrated AI APIs (&lt;em&gt;more coming soon&lt;/em&gt;):&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/apis/2Xopenai.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/apis/2Xcohere.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;140&#34; height=&#34;112.43&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/apis/2Xanthropic.png&#34; width=&#34;139px&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Integrate externally hosted models accessible via API to work together with your other models with a simple Python command:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;m = db.add(&#xA;    OpenAI&amp;lt;Task&amp;gt;|Cohere&amp;lt;Task&amp;gt;|Anthropic&amp;lt;Task&amp;gt;(*args, **kwargs),   # &amp;lt;Task&amp;gt; - Embedding,ChatCompletion,...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Infrastructure Diagram&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;100%&#34; src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/img/superduperdb.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Featured Examples&lt;/h2&gt; &#xA;&lt;p&gt;Try our ready-to-use notebooks &lt;a href=&#34;https://demo.superduperdb.com&#34;&gt;live on your browser&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also find use-cases and apps built by the community in the &lt;a href=&#34;https://github.com/SuperDuperDB/superduper-community-apps&#34;&gt;superduper-community-apps repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;30%&#34;&gt; &lt;a href=&#34;https://demo.superduperdb.com/user-redirect/lab/tree/multimodal_image_search_clip.ipynb&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/featured-examples/image-search.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td width=&#34;30%&#34;&gt; &lt;a href=&#34;https://demo.superduperdb.com/user-redirect/lab/tree/video_search.ipynb&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/featured-examples/video-search.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td width=&#34;30%&#34;&gt; &lt;a href=&#34;https://demo.superduperdb.com/user-redirect/lab/tree/question_the_docs.ipynb&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/featured-examples/semantic-search.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt; &lt;a href=&#34;https://demo.superduperdb.com/user-redirect/lab/tree/multimodal_image_search_clip.ipynb&#34;&gt;Text-To-Image Search&lt;/a&gt; &lt;/th&gt; &#xA;   &lt;th&gt; &lt;a href=&#34;https://demo.superduperdb.com/user-redirect/lab/tree/video_search.ipynb&#34;&gt;Text-To-Video Search&lt;/a&gt; &lt;/th&gt; &#xA;   &lt;th&gt; &lt;a href=&#34;https://demo.superduperdb.com/user-redirect/lab/tree/question_the_docs.ipynb&#34;&gt;Question the Docs&lt;/a&gt; &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;30%&#34;&gt; &lt;a href=&#34;https://demo.superduperdb.com/user-redirect/lab/tree/vector_search.ipynb&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/featured-examples/document-search.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td width=&#34;30%&#34;&gt; &lt;a href=&#34;https://demo.superduperdb.com/user-redirect/lab/tree/mnist_torch.ipynb&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/featured-examples/machine-learning.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td width=&#34;30%&#34;&gt; &lt;a href=&#34;https://demo.superduperdb.com/user-redirect/lab/tree/transfer_learning.ipynb&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/docs/hr/static/icons/featured-examples/transfer-learning.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt; &lt;a href=&#34;https://demo.superduperdb.com/user-redirect/lab/tree/vector_search.ipynb&#34;&gt;Semantic Search Engine&lt;/a&gt; &lt;/th&gt; &#xA;   &lt;th&gt; &lt;a href=&#34;https://demo.superduperdb.com/user-redirect/lab/tree/mnist_torch.ipynb&#34;&gt;Classical Machine Learning&lt;/a&gt; &lt;/th&gt; &#xA;   &lt;th&gt; &lt;a href=&#34;https://demo.superduperdb.com/user-redirect/lab/tree/transfer_learning.ipynb&#34;&gt;Cross-Framework Transfer Learning&lt;/a&gt; &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h4&gt;1. Install SuperDuperDB via &lt;code&gt;pip&lt;/code&gt; &lt;em&gt;(~1 minute)&lt;/em&gt;:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install superduperdb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Try SuperDuperDB via Docker &lt;em&gt;(~2 minutes)&lt;/em&gt;:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need to install Docker? See the docs &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 8888:8888 superduperdb/demo:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;p&gt;Here are snippets which give you a sense of how &lt;code&gt;superduperdb&lt;/code&gt; works and how simple it is to use. You can visit the &lt;a href=&#34;https://docs.superduperdb.com&#34;&gt;docs&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;h4&gt;- Deploy ML/AI models to your database:&lt;/h4&gt; &#xA;&lt;p&gt;Automatically compute outputs (inference) with your database in a single environment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pymongo&#xA;from sklearn.svm import SVC&#xA;&#xA;from superduperdb import superduper&#xA;&#xA;# Make your db superduper!&#xA;db = superduper(pymongo.MongoClient().my_db)&#xA;&#xA;# Models client can be converted to SuperDuperDB objects with a simple wrapper.&#xA;model = superduper(SVC())&#xA;&#xA;# Add the model into the database&#xA;db.add(model)&#xA;&#xA;# Predict on the selected data.&#xA;model.predict(X=&#39;input_col&#39;, db=db, select=Collection(name=&#39;test_documents&#39;).find({&#39;_fold&#39;: &#39;valid&#39;}))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;- Train models directly from your database.&lt;/h4&gt; &#xA;&lt;p&gt;Simply by querying your database, without additional ingestion and pre-processing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pymongo&#xA;from sklearn.svm import SVC&#xA;&#xA;from superduperdb import superduper&#xA;&#xA;# Make your db superduper!&#xA;db = superduper(pymongo.MongoClient().my_db)&#xA;&#xA;# Models client can be converted to SuperDuperDB objects with a simple wrapper.&#xA;model = superduper(SVC())&#xA;&#xA;# Predict on the selected data.&#xA;model.train(X=&#39;input_col&#39;, y=&#39;target_col&#39;, db=db, select=Collection(name=&#39;test_documents&#39;).find({&#39;_fold&#39;: &#39;valid&#39;}))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;- Vector-Search your data:&lt;/h4&gt; &#xA;&lt;p&gt;Use your existing favorite database as a vector search database, including model management and serving.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# First a &#34;Listener&#34; makes sure vectors stay up-to-date&#xA;indexing_listener = Listener(model=OpenAIEmbedding(), key=&#39;text&#39;, select=collection.find())&#xA;&#xA;# This &#34;Listener&#34; is linked with a &#34;VectorIndex&#34;&#xA;db.add(VectorIndex(&#39;my-index&#39;, indexing_listener=indexing_listener))&#xA;&#xA;# The &#34;VectorIndex&#34; may be used to search data. Items to be searched against are passed&#xA;# to the registered model and vectorized. No additional app layer is required.&#xA;db.execute(collection.like({&#39;text&#39;: &#39;clothing item&#39;}, &#39;my-index&#39;).find({&#39;brand&#39;: &#39;Nike&#39;}))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;- Integrate AI APIs to work together with other models.&lt;/h4&gt; &#xA;&lt;p&gt;Use OpenAI, PyTorch or Hugging face model as an embedding model for vector search.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create a ``VectorIndex`` instance with indexing listener as OpenAIEmbedding and add it to the database.&#xA;db.add(&#xA;    VectorIndex(&#xA;        identifier=&#39;my-index&#39;,&#xA;        indexing_listener=Listener(&#xA;            model=OpenAIEmbedding(identifier=&#39;text-embedding-ada-002&#39;),&#xA;            key=&#39;abstract&#39;,&#xA;            select=Collection(name=&#39;wikipedia&#39;).find(),&#xA;        ),&#xA;    )&#xA;)&#xA;# The above also executes the embedding model (openai) with the select query on the key.&#xA;&#xA;# Now we can use the vector-index to search via meaning through the wikipedia abstracts&#xA;cur = db.execute(&#xA;    Collection(name=&#39;wikipedia&#39;)&#xA;        .like({&#39;abstract&#39;: &#39;philosophers&#39;}, n=10, vector_index=&#39;my-index&#39;)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;- Add a Llama 2 model to SuperDuperDB!:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;model_id = &#34;meta-llama/Llama-2-7b-chat-hf&#34;&#xA;tokenizer = AutoTokenizer.from_pretrained(model_id)&#xA;pipeline = transformers.pipeline(&#xA;    &#34;text-generation&#34;,&#xA;    model=model_id,&#xA;    torch_dtype=torch.float16,&#xA;    device_map=&#34;auto&#34;,&#xA;)&#xA;&#xA;model = Pipeline(&#xA;    identifier=&#39;my-sentiment-analysis&#39;,&#xA;    task=&#39;text-generation&#39;,&#xA;    preprocess=tokenizer,&#xA;    object=pipeline,&#xA;    torch_dtype=torch.float16,&#xA;    device_map=&#34;auto&#34;,&#xA;)&#xA;&#xA;# You can easily predict on your collection documents.&#xA;model.predict(&#xA;    X=Collection(name=&#39;test_documents&#39;).find(),&#xA;    db=db,&#xA;    do_sample=True,&#xA;    top_k=10,&#xA;    num_return_sequences=1,&#xA;    eos_token_id=tokenizer.eos_token_id,&#xA;    max_length=200&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;- Use models outputs as inputs to downstream models:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;model.predict(&#xA;    X=&#39;input_col&#39;,&#xA;    db=db,&#xA;    select=coll.find().featurize({&#39;X&#39;: &#39;&amp;lt;upstream-model-id&amp;gt;&#39;}),  # already registered upstream model-id&#xA;    listen=True,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Community &amp;amp; Getting Help&lt;/h2&gt; &#xA;&lt;h4&gt;If you have any problems, questions, comments, or ideas:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join &lt;a href=&#34;https://join.slack.com/t/superduperdb/shared_invite/zt-1zuojj0k0-RjAYBs1TDsvEa7yaFGa6QA&#34;&gt;our Slack&lt;/a&gt; (we look forward to seeing you there).&lt;/li&gt; &#xA; &lt;li&gt;Search through &lt;a href=&#34;https://github.com/SuperDuperDB/superduperdb/discussions&#34;&gt;our GitHub Discussions&lt;/a&gt;, or &lt;a href=&#34;https://github.com/SuperDuperDB/superduperdb/discussions/new/choose&#34;&gt;add a new question&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Comment &lt;a href=&#34;https://github.com/SuperDuperDB/superduperdb/issues/&#34;&gt;an existing issue&lt;/a&gt; or create &lt;a href=&#34;https://github.com/SuperDuperDB/superduperdb/issues/new/choose&#34;&gt;a new one&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Help us to improve SuperDuperDB by providing your valuable feedback &lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLScKNyLCjSEWAwc-THjC7NJVDNRxQmVR5ey30VVayPhWOIhy1Q/viewform&#34;&gt;here&lt;/a&gt;!&lt;/li&gt; &#xA; &lt;li&gt;Email us at &lt;code&gt;gethelp@superduperdb.com&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Feel free to contact a maintainer or community volunteer directly!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;h4&gt;There are many ways to contribute, and they are not limited to writing code. We welcome all contributions such as:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SuperDuperDB/superduperdb/issues/new/choose&#34;&gt;Bug reports&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SuperDuperDB/superduperdb/issues/new/choose&#34;&gt;Documentation improvements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SuperDuperDB/superduperdb/issues/new/choose&#34;&gt;Enhancement suggestions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SuperDuperDB/superduperdb/issues/new/choose&#34;&gt;Feature requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SuperDuperDB/superduperdb/issues/new/choose&#34;&gt;Expanding the tutorials and use case examples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://raw.githubusercontent.com/SuperDuperDB/superduperdb/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;h4&gt;Thanks goes to these wonderful people:&lt;/h4&gt; &#xA;&lt;a href=&#34;https://github.com/SuperDuperDB/superduperdb/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=SuperDuperDB/superduperdb&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;SuperDuperDB is open-source and intended to be a community effort, and it wouldn&#39;t be possible without your support and enthusiasm. It is distributed under the terms of the Apache 2.0 license. Any contribution made to this project will be subject to the same provisions.&lt;/p&gt; &#xA;&lt;h2&gt;Join Us&lt;/h2&gt; &#xA;&lt;p&gt;We are looking for nice people who are invested in the problem we are trying to solve to join us full-time. Find roles that we are trying to fill &lt;a href=&#34;https://join.com/companies/superduperdb&#34;&gt;here&lt;/a&gt;!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ise-uiuc/magicoder</title>
    <updated>2023-12-08T01:40:52Z</updated>
    <id>tag:github.com,2023-12-08:/ise-uiuc/magicoder</id>
    <link href="https://github.com/ise-uiuc/magicoder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Magicoder: Source Code Is All You Need&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🎩 Magicoder: Source Code Is All You Need&lt;/h1&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;a href=&#34;https://arxiv.org/abs/2312.02120&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/arXiv-2312.02120-b31b1b.svg?style=for-the-badge&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://opensource.org/license/mit/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?style=for-the-badge&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://huggingface.co/ise-uiuc/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/🤗%20Hugging%20Face-ise--uiuc-%23ff8811.svg?style=for-the-badge&#34;&gt; &lt;/a&gt;&lt;/p&gt;&#xA;&lt;a href=&#34;https://huggingface.co/ise-uiuc/&#34;&gt; &lt;/a&gt;&#xA;&lt;p align=&#34;left&#34;&gt;&lt;a href=&#34;https://huggingface.co/ise-uiuc/&#34;&gt; 🎩&amp;nbsp;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ise-uiuc/magicoder/main/#-models&#34;&gt;Models&lt;/a&gt; | 📚&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/ise-uiuc/magicoder/main/#-dataset&#34;&gt;Dataset&lt;/a&gt; | 🚀&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/ise-uiuc/magicoder/main/#-quick-start&#34;&gt;Quick Start&lt;/a&gt; | 👀&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/ise-uiuc/magicoder/main/#-demo&#34;&gt;Demo&lt;/a&gt; | 📝&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/ise-uiuc/magicoder/main/#-citation&#34;&gt;Citation&lt;/a&gt; | 🙏&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/ise-uiuc/magicoder/main/#-acknowledgements&#34;&gt;Acknowledgements&lt;/a&gt; &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] We are keeping improving the documents and adding more implementation details. Please stay tuned!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🎩&lt;strong&gt;Magicoder&lt;/strong&gt; is a model family empowered by 🪄&lt;strong&gt;OSS-Instruct&lt;/strong&gt;, a novel approach to enlightening LLMs with open-source code snippets for generating &lt;em&gt;low-bias&lt;/em&gt; and &lt;em&gt;high-quality&lt;/em&gt; instruction data for code.&lt;/li&gt; &#xA; &lt;li&gt;🪄&lt;strong&gt;OSS-Instruct&lt;/strong&gt; mitigates the &lt;em&gt;inherent bias&lt;/em&gt; of the LLM-synthesized instruction data by empowering them with &lt;em&gt;a wealth of open-source references&lt;/em&gt; to produce more diverse, realistic, and controllable data.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://huggingface.co/ise-uiuc/Magicoder-S-DS-6.7B&#34;&gt;Magicoder-&lt;em&gt;S&lt;/em&gt;-DS-6.7B&lt;/a&gt; outperforms &lt;code&gt;gpt-3.5-turbo-1106&lt;/code&gt; and &lt;a href=&#34;https://deepmind.google/technologies/gemini/&#34;&gt;Gemini Ultra&lt;/a&gt; on HumanEval (&lt;strong&gt;76.8&lt;/strong&gt; vs. [72.6 and 74.4])!&lt;/li&gt; &#xA;  &lt;li&gt;Find more detailed comparisons with other SOTA models on the &lt;strong&gt;&lt;a href=&#34;https://evalplus.github.io/leaderboard.html&#34;&gt;🏆 EvalPlus Leaderboard 🏆&lt;/a&gt;&lt;/strong&gt;!&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ise-uiuc/magicoder/main/assets/overview.svg?sanitize=true&#34; alt=&#34;Overview of OSS-Instruct&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ise-uiuc/magicoder/main/assets/result.png&#34; alt=&#34;Overview of Result&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🎩 Models&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;/th&gt; &#xA;   &lt;th&gt;Checkpoint&lt;/th&gt; &#xA;   &lt;th&gt;Size&lt;/th&gt; &#xA;   &lt;th&gt;HumanEval (+)&lt;/th&gt; &#xA;   &lt;th&gt;MBPP (+)&lt;/th&gt; &#xA;   &lt;th&gt;License&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Magicoder-CL-7B&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/ise-uiuc/Magicoder-CL-7B&#34;&gt;HF Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;7B&lt;/td&gt; &#xA;   &lt;td&gt;60.4 (55.5)&lt;/td&gt; &#xA;   &lt;td&gt;64.2 (52.6)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ai.meta.com/llama/license/&#34;&gt;Llama2&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Magicoder-&lt;em&gt;S&lt;/em&gt;-CL-7B&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/ise-uiuc/Magicoder-S-CL-7B&#34;&gt;HF Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;7B&lt;/td&gt; &#xA;   &lt;td&gt;70.7 (66.5)&lt;/td&gt; &#xA;   &lt;td&gt;68.4 (56.6)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ai.meta.com/llama/license/&#34;&gt;Llama2&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Magicoder-DS-6.7B&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/ise-uiuc/Magicoder-DS-6.7B&#34;&gt;HF Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;6.7B&lt;/td&gt; &#xA;   &lt;td&gt;66.5 (60.4)&lt;/td&gt; &#xA;   &lt;td&gt;75.4 (61.9)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/deepseek-ai/DeepSeek-Coder/raw/main/LICENSE-MODEL&#34;&gt;DeepSeek&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Magicoder-&lt;em&gt;S&lt;/em&gt;-DS-6.7B&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/ise-uiuc/Magicoder-S-DS-6.7B&#34;&gt;HF Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;6.7B&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;76.8&lt;/strong&gt; (&lt;strong&gt;70.7&lt;/strong&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;75.7&lt;/strong&gt; (&lt;strong&gt;64.4&lt;/strong&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/deepseek-ai/DeepSeek-Coder/raw/main/LICENSE-MODEL&#34;&gt;DeepSeek&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;👀 Demo&lt;/h2&gt; &#xA;&lt;h3&gt;Online Gradio Demo&lt;/h3&gt; &#xA;&lt;p&gt;Quickly try out our &lt;a href=&#34;https://huggingface.co/spaces/ise-uiuc/Magicoder-S-DS-6.7B&#34;&gt;Magicoder Playground&lt;/a&gt; powered by &lt;a href=&#34;https://www.gradio.app&#34;&gt;gradio&lt;/a&gt;! Huge thanks to &lt;a href=&#34;https://twitter.com/_akhaliq?lang=en&#34;&gt;AK(@_akhaliq)&lt;/a&gt; and the Hugging&amp;nbsp;Face team for their support!&lt;/p&gt; &#xA;&lt;h3&gt;Local Gradio Demo&lt;/h3&gt; &#xA;&lt;p&gt;We follow &lt;a href=&#34;https://github.com/nlpxucan/WizardLM/raw/main/demo/wizardLM_demo.py&#34;&gt;WizardCoder&lt;/a&gt; and provide the &lt;a href=&#34;https://raw.githubusercontent.com/ise-uiuc/magicoder/main/demo/magicoder_demo.py&#34;&gt;script&lt;/a&gt; to build a local demo server. You can launch your local gradio demo as following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd demo&#xA;CUDA_VISIBLE_DEVICES=0 python magicoder_demo.py \&#xA;   --base_model &#34;ise-uiuc/Magicoder-S-DS-6.7B&#34; \&#xA;   --device &#34;cuda:0&#34; \&#xA;   --port 8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;📚 Dataset&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/datasets/ise-uiuc/Magicoder_oss_instruct_75k&#34;&gt;Magicoder-OSS-Instruct-75K&lt;/a&gt;: generated through &lt;strong&gt;OSS-Instruct&lt;/strong&gt; using &lt;code&gt;gpt-3.5-turbo-1106&lt;/code&gt; and used to train both Magicoder and Magicoder-S series.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/datasets/ise-uiuc/Magicoder_evol_instruct_110k&#34;&gt;Magicoder-Evol-Instruct-110K&lt;/a&gt;: decontaminated and redistributed from &lt;a href=&#34;https://huggingface.co/datasets/theblackcat102/evol-codealpaca-v1&#34;&gt;theblackcat102/evol-codealpaca-v1&lt;/a&gt;, used to further finetune Magicoder series and obtain Magicoder-S models.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from transformers import pipeline&#xA;import torch&#xA;&#xA;MAGICODER_PROMPT = &#34;&#34;&#34;You are an exceptionally intelligent coding assistant that consistently delivers accurate and reliable responses to user instructions.&#xA;&#xA;@@ Instruction&#xA;{instruction}&#xA;&#xA;@@ Response&#xA;&#34;&#34;&#34;&#xA;&#xA;instruction = &#34;Implement a high-level API for a TODO list application. The API takes as input an operation request and updates the TODO list in place. If the request is invalid, raise an exception.&#34;&#xA;&#xA;prompt = MAGICODER_PROMPT.format(instruction=instruction)&#xA;generator = pipeline(&#xA;    model=&#34;ise-uiuc/Magicoder-S-DS-6.7B&#34;,&#xA;    task=&#34;text-generation&#34;,&#xA;    torch_dtype=torch.bfloat16,&#xA;    device_map=&#34;auto&#34;,&#xA;)&#xA;result = generator(prompt, max_length=2048, num_return_sequences=1, temperature=0.0)&#xA;print(result[0][&#34;generated_text&#34;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This code snippet will generate the following output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Here is a simple Python implementation of a TODO list API:&#xA;&#xA;```python&#xA;class TodoList:&#xA;    def __init__(self):&#xA;        self.todo_list = []&#xA;&#xA;    def add_task(self, task):&#xA;        if not isinstance(task, str):&#xA;            raise ValueError(&#34;Task must be a string&#34;)&#xA;        self.todo_list.append(task)&#xA;&#xA;    def remove_task(self, task):&#xA;        if task not in self.todo_list:&#xA;            raise ValueError(&#34;Task not found in the list&#34;)&#xA;        self.todo_list.remove(task)&#xA;&#xA;    def get_tasks(self):&#xA;        return self.todo_list&#xA;&#xA;    def update_task(self, old_task, new_task):&#xA;        if old_task not in self.todo_list:&#xA;            raise ValueError(&#34;Old task not found in the list&#34;)&#xA;        if not isinstance(new_task, str):&#xA;            raise ValueError(&#34;New task must be a string&#34;)&#xA;        index = self.todo_list.index(old_task)&#xA;        self.todo_list[index] = new_task&#xA;&#xA;    def clear_list(self):&#xA;        self.todo_list = []&#xA;```&#xA;&#xA;This API allows you to add tasks, remove tasks, get all tasks, update tasks, and clear the list. It also raises exceptions for invalid operations.&#xA;&#xA;You can use this API like this:&#xA;&#xA;```python&#xA;todo = TodoList()&#xA;todo.add_task(&#34;Buy groceries&#34;)&#xA;todo.add_task(&#34;Finish project&#34;)&#xA;print(todo.get_tasks())  # Output: [&#39;Buy groceries&#39;, &#39;Finish project&#39;]&#xA;todo.update_task(&#34;Buy groceries&#34;, &#34;Buy fruits&#34;)&#xA;print(todo.get_tasks())  # Output: [&#39;Buy fruits&#39;, &#39;Finish project&#39;]&#xA;todo.remove_task(&#34;Finish project&#34;)&#xA;print(todo.get_tasks())  # Output: [&#39;Buy fruits&#39;]&#xA;todo.clear_list()&#xA;print(todo.get_tasks())  # Output: []&#xA;```&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;📝 Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{magicoder,&#xA;    title={Magicoder: Source Code Is All You Need}, &#xA;    author={Yuxiang Wei and Zhe Wang and Jiawei Liu and Yifeng Ding and Lingming Zhang},&#xA;    year={2023},&#xA;    eprint={2312.02120},&#xA;    archivePrefix={arXiv},&#xA;    primaryClass={cs.CL}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🙏 Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;We thank &lt;a href=&#34;https://twitter.com/_akhaliq?lang=en&#34;&gt;AK(@_akhaliq)&lt;/a&gt; and the Hugging&amp;nbsp;Face team for their support in the &lt;a href=&#34;https://huggingface.co/spaces/ise-uiuc/Magicoder-S-DS-6.7B&#34;&gt;Magicoder Playground&lt;/a&gt;! We also thank the following amazing projects that truly inspired us:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nlpxucan/WizardLM/tree/main/WizardCoder&#34;&gt;WizardCoder&lt;/a&gt;: Evol-Instruct&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/deepseek-ai/DeepSeek-Coder&#34;&gt;DeepSeek-Coder&lt;/a&gt;: Base model for Magicoder-DS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ai.meta.com/research/publications/code-llama-open-foundation-models-for-code/&#34;&gt;CodeLlama&lt;/a&gt;: Base model for Magicoder-CL&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2305.06161&#34;&gt;StarCoder&lt;/a&gt;: Data decontamination&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⚠️ Important Note&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Bias, Risks, and Limitations:&lt;/strong&gt; Magicoders may sometimes make errors, produce misleading contents, or struggle to manage tasks that are not related to coding.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt; Magicoder models are trained on the synthetic data generated by OpenAI models. Please pay attention to OpenAI&#39;s &lt;a href=&#34;https://openai.com/policies/terms-of-use&#34;&gt;terms of use&lt;/a&gt; when using the models and the datasets. Magicoders will not compete with any OpenAI&#39;s commercial product.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⭐️ Star History&lt;/h2&gt; &#xA;&lt;a href=&#34;https://star-history.com/#ise-uiuc/magicoder&amp;amp;Timeline&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=ise-uiuc/magicoder&amp;amp;type=Timeline&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=ise-uiuc/magicoder&amp;amp;type=Timeline&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=ise-uiuc/magicoder&amp;amp;type=Timeline&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt;</summary>
  </entry>
</feed>