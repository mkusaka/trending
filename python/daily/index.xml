<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-23T01:35:12Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sooperset/mcp-atlassian</title>
    <updated>2025-07-23T01:35:12Z</updated>
    <id>tag:github.com,2025-07-23:/sooperset/mcp-atlassian</id>
    <link href="https://github.com/sooperset/mcp-atlassian" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MCP server for Atlassian tools (Confluence, Jira)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MCP Atlassian&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/mcp-atlassian&#34; alt=&#34;PyPI Version&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/dm/mcp-atlassian&#34; alt=&#34;PyPI - Downloads&#34;&gt; &lt;img src=&#34;https://static.pepy.tech/personalized-badge/mcp-atlassian?period=total&amp;amp;units=international_system&amp;amp;left_color=grey&amp;amp;right_color=blue&amp;amp;left_text=Total%20Downloads&#34; alt=&#34;PePy - Total Downloads&#34;&gt; &lt;a href=&#34;https://github.com/sooperset/mcp-atlassian/actions/workflows/tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/sooperset/mcp-atlassian/actions/workflows/tests.yml/badge.svg?sanitize=true&#34; alt=&#34;Run Tests&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/license/sooperset/mcp-atlassian&#34; alt=&#34;License&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Model Context Protocol (MCP) server for Atlassian products (Confluence and Jira). This integration supports both Confluence &amp;amp; Jira Cloud and Server/Data Center deployments.&lt;/p&gt; &#xA;&lt;h2&gt;Example Usage&lt;/h2&gt; &#xA;&lt;p&gt;Ask your AI assistant to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;üìù Automatic Jira Updates&lt;/strong&gt; - &#34;Update Jira from our meeting notes&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üîç AI-Powered Confluence Search&lt;/strong&gt; - &#34;Find our OKR guide in Confluence and summarize it&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üêõ Smart Jira Issue Filtering&lt;/strong&gt; - &#34;Show me urgent bugs in PROJ project from last week&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üìÑ Content Creation &amp;amp; Management&lt;/strong&gt; - &#34;Create a tech design doc for XYZ feature&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Feature Demo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/35303504-14c6-4ae4-913b-7c25ea511c3e&#34;&gt;https://github.com/user-attachments/assets/35303504-14c6-4ae4-913b-7c25ea511c3e&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Confluence Demo&lt;/summary&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/7fe9c488-ad0c-4876-9b54-120b666bb785&#34;&gt;https://github.com/user-attachments/assets/7fe9c488-ad0c-4876-9b54-120b666bb785&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Compatibility&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Product&lt;/th&gt; &#xA;   &lt;th&gt;Deployment Type&lt;/th&gt; &#xA;   &lt;th&gt;Support Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Confluence&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cloud&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Fully supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Confluence&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Server/Data Center&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Supported (version 6.0+)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Jira&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cloud&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Fully supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Jira&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Server/Data Center&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Supported (version 8.14+)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Quick Start Guide&lt;/h2&gt; &#xA;&lt;h3&gt;üîê 1. Authentication Setup&lt;/h3&gt; &#xA;&lt;p&gt;MCP Atlassian supports three authentication methods:&lt;/p&gt; &#xA;&lt;h4&gt;A. API Token Authentication (Cloud) - &lt;strong&gt;Recommended&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://id.atlassian.com/manage-profile/security/api-tokens&#34;&gt;https://id.atlassian.com/manage-profile/security/api-tokens&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Create API token&lt;/strong&gt;, name it&lt;/li&gt; &#xA; &lt;li&gt;Copy the token immediately&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;B. Personal Access Token (Server/Data Center)&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to your profile (avatar) ‚Üí &lt;strong&gt;Profile&lt;/strong&gt; ‚Üí &lt;strong&gt;Personal Access Tokens&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Create token&lt;/strong&gt;, name it, set expiry&lt;/li&gt; &#xA; &lt;li&gt;Copy the token immediately&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;C. OAuth 2.0 Authentication (Cloud) - &lt;strong&gt;Advanced&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] OAuth 2.0 is more complex to set up but provides enhanced security features. For most users, API Token authentication (Method A) is simpler and sufficient.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://developer.atlassian.com/console/myapps/&#34;&gt;Atlassian Developer Console&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create an &#34;OAuth 2.0 (3LO) integration&#34; app&lt;/li&gt; &#xA; &lt;li&gt;Configure &lt;strong&gt;Permissions&lt;/strong&gt; (scopes) for Jira/Confluence&lt;/li&gt; &#xA; &lt;li&gt;Set &lt;strong&gt;Callback URL&lt;/strong&gt; (e.g., &lt;code&gt;http://localhost:8080/callback&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Run setup wizard: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -i \&#xA;  -p 8080:8080 \&#xA;  -v &#34;${HOME}/.mcp-atlassian:/home/app/.mcp-atlassian&#34; \&#xA;  ghcr.io/sooperset/mcp-atlassian:latest --oauth-setup -v&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Follow prompts for &lt;code&gt;Client ID&lt;/code&gt;, &lt;code&gt;Secret&lt;/code&gt;, &lt;code&gt;URI&lt;/code&gt;, and &lt;code&gt;Scope&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Complete browser authorization&lt;/li&gt; &#xA; &lt;li&gt;Add obtained credentials to &lt;code&gt;.env&lt;/code&gt; or IDE config: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;ATLASSIAN_OAUTH_CLOUD_ID&lt;/code&gt; (from wizard)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ATLASSIAN_OAUTH_CLIENT_ID&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ATLASSIAN_OAUTH_CLIENT_SECRET&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ATLASSIAN_OAUTH_REDIRECT_URI&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ATLASSIAN_OAUTH_SCOPE&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] For the standard OAuth flow described above, include &lt;code&gt;offline_access&lt;/code&gt; in your scope (e.g., &lt;code&gt;read:jira-work write:jira-work offline_access&lt;/code&gt;). This allows the server to refresh the access token automatically.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Alternative: Using a Pre-existing OAuth Access Token (BYOT)&lt;/summary&gt; &#xA; &lt;p&gt;If you are running mcp-atlassian part of a larger system that manages Atlassian OAuth 2.0 access tokens externally (e.g., through a central identity provider or another application), you can provide an access token directly to this MCP server. This method bypasses the interactive setup wizard and the server&#39;s internal token management (including refresh capabilities).&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Requirements:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;A valid Atlassian OAuth 2.0 Access Token with the necessary scopes for the intended operations.&lt;/li&gt; &#xA;  &lt;li&gt;The corresponding &lt;code&gt;ATLASSIAN_OAUTH_CLOUD_ID&lt;/code&gt; for your Atlassian instance.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;Configuration:&lt;/strong&gt; To use this method, set the following environment variables (or use the corresponding command-line flags when starting the server):&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;ATLASSIAN_OAUTH_CLOUD_ID&lt;/code&gt;: Your Atlassian Cloud ID. (CLI: &lt;code&gt;--oauth-cloud-id&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;ATLASSIAN_OAUTH_ACCESS_TOKEN&lt;/code&gt;: Your pre-existing OAuth 2.0 access token. (CLI: &lt;code&gt;--oauth-access-token&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;Important Considerations for BYOT:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Token Lifecycle Management:&lt;/strong&gt; When using BYOT, the MCP server &lt;strong&gt;does not&lt;/strong&gt; handle token refresh. The responsibility for obtaining, refreshing (before expiry), and revoking the access token lies entirely with you or the external system providing the token.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Unused Variables:&lt;/strong&gt; The standard OAuth client variables (&lt;code&gt;ATLASSIAN_OAUTH_CLIENT_ID&lt;/code&gt;, &lt;code&gt;ATLASSIAN_OAUTH_CLIENT_SECRET&lt;/code&gt;, &lt;code&gt;ATLASSIAN_OAUTH_REDIRECT_URI&lt;/code&gt;, &lt;code&gt;ATLASSIAN_OAUTH_SCOPE&lt;/code&gt;) are &lt;strong&gt;not&lt;/strong&gt; used and can be omitted when configuring for BYOT.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;No Setup Wizard:&lt;/strong&gt; The &lt;code&gt;--oauth-setup&lt;/code&gt; wizard is not applicable and should not be used for this approach.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;No Token Cache Volume:&lt;/strong&gt; The Docker volume mount for token storage (e.g., &lt;code&gt;-v &#34;${HOME}/.mcp-atlassian:/home/app/.mcp-atlassian&#34;&lt;/code&gt;) is also not necessary if you are exclusively using the BYOT method, as no tokens are stored or managed by this server.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Scope:&lt;/strong&gt; The provided access token must already have the necessary permissions (scopes) for the Jira/Confluence operations you intend to perform.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;This option is useful in scenarios where OAuth credential management is centralized or handled by other infrastructure components.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] &lt;strong&gt;Multi-Cloud OAuth Support&lt;/strong&gt;: If you&#39;re building a multi-tenant application where users provide their own OAuth tokens, see the &lt;a href=&#34;https://raw.githubusercontent.com/sooperset/mcp-atlassian/main/#multi-cloud-oauth-support&#34;&gt;Multi-Cloud OAuth Support&lt;/a&gt; section for minimal configuration setup.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;üì¶ 2. Installation&lt;/h3&gt; &#xA;&lt;p&gt;MCP Atlassian is distributed as a Docker image. This is the recommended way to run the server, especially for IDE integration. Ensure you have Docker installed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Pull Pre-built Image&#xA;docker pull ghcr.io/sooperset/mcp-atlassian:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üõ†Ô∏è IDE Integration&lt;/h2&gt; &#xA;&lt;p&gt;MCP Atlassian is designed to be used with AI assistants through IDE integration.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] &lt;strong&gt;For Claude Desktop&lt;/strong&gt;: Locate and edit the configuration file directly:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;%APPDATA%\Claude\claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;~/.config/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;For Cursor&lt;/strong&gt;: Open Settings ‚Üí MCP ‚Üí + Add new global MCP server&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;‚öôÔ∏è Configuration Methods&lt;/h3&gt; &#xA;&lt;p&gt;There are two main approaches to configure the Docker container:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Passing Variables Directly&lt;/strong&gt; (shown in examples below)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Using an Environment File&lt;/strong&gt; with &lt;code&gt;--env-file&lt;/code&gt; flag (shown in collapsible sections)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Common environment variables include:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;CONFLUENCE_SPACES_FILTER&lt;/code&gt;: Filter by space keys (e.g., &#34;DEV,TEAM,DOC&#34;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;JIRA_PROJECTS_FILTER&lt;/code&gt;: Filter by project keys (e.g., &#34;PROJ,DEV,SUPPORT&#34;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;READ_ONLY_MODE&lt;/code&gt;: Set to &#34;true&#34; to disable write operations&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;MCP_VERBOSE&lt;/code&gt;: Set to &#34;true&#34; for more detailed logging&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;MCP_LOGGING_STDOUT&lt;/code&gt;: Set to &#34;true&#34; to log to stdout instead of stderr&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;ENABLED_TOOLS&lt;/code&gt;: Comma-separated list of tool names to enable (e.g., &#34;confluence_search,jira_get_issue&#34;)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;See the &lt;a href=&#34;https://github.com/sooperset/mcp-atlassian/raw/main/.env.example&#34;&gt;.env.example&lt;/a&gt; file for all available options.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;üìù Configuration Examples&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Method 1 (Passing Variables Directly):&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;mcp-atlassian&#34;: {&#xA;      &#34;command&#34;: &#34;docker&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;-i&#34;,&#xA;        &#34;--rm&#34;,&#xA;        &#34;-e&#34;, &#34;CONFLUENCE_URL&#34;,&#xA;        &#34;-e&#34;, &#34;CONFLUENCE_USERNAME&#34;,&#xA;        &#34;-e&#34;, &#34;CONFLUENCE_API_TOKEN&#34;,&#xA;        &#34;-e&#34;, &#34;JIRA_URL&#34;,&#xA;        &#34;-e&#34;, &#34;JIRA_USERNAME&#34;,&#xA;        &#34;-e&#34;, &#34;JIRA_API_TOKEN&#34;,&#xA;        &#34;ghcr.io/sooperset/mcp-atlassian:latest&#34;&#xA;      ],&#xA;      &#34;env&#34;: {&#xA;        &#34;CONFLUENCE_URL&#34;: &#34;https://your-company.atlassian.net/wiki&#34;,&#xA;        &#34;CONFLUENCE_USERNAME&#34;: &#34;your.email@company.com&#34;,&#xA;        &#34;CONFLUENCE_API_TOKEN&#34;: &#34;your_confluence_api_token&#34;,&#xA;        &#34;JIRA_URL&#34;: &#34;https://your-company.atlassian.net&#34;,&#xA;        &#34;JIRA_USERNAME&#34;: &#34;your.email@company.com&#34;,&#xA;        &#34;JIRA_API_TOKEN&#34;: &#34;your_jira_api_token&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Alternative: Using Environment File&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;mcp-atlassian&#34;: {&#xA;      &#34;command&#34;: &#34;docker&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;--rm&#34;,&#xA;        &#34;-i&#34;,&#xA;        &#34;--env-file&#34;,&#xA;        &#34;/path/to/your/mcp-atlassian.env&#34;,&#xA;        &#34;ghcr.io/sooperset/mcp-atlassian:latest&#34;&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Server/Data Center Configuration&lt;/summary&gt; &#xA; &lt;p&gt;For Server/Data Center deployments, use direct variable passing:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;mcp-atlassian&#34;: {&#xA;      &#34;command&#34;: &#34;docker&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;--rm&#34;,&#xA;        &#34;-i&#34;,&#xA;        &#34;-e&#34;, &#34;CONFLUENCE_URL&#34;,&#xA;        &#34;-e&#34;, &#34;CONFLUENCE_PERSONAL_TOKEN&#34;,&#xA;        &#34;-e&#34;, &#34;CONFLUENCE_SSL_VERIFY&#34;,&#xA;        &#34;-e&#34;, &#34;JIRA_URL&#34;,&#xA;        &#34;-e&#34;, &#34;JIRA_PERSONAL_TOKEN&#34;,&#xA;        &#34;-e&#34;, &#34;JIRA_SSL_VERIFY&#34;,&#xA;        &#34;ghcr.io/sooperset/mcp-atlassian:latest&#34;&#xA;      ],&#xA;      &#34;env&#34;: {&#xA;        &#34;CONFLUENCE_URL&#34;: &#34;https://confluence.your-company.com&#34;,&#xA;        &#34;CONFLUENCE_PERSONAL_TOKEN&#34;: &#34;your_confluence_pat&#34;,&#xA;        &#34;CONFLUENCE_SSL_VERIFY&#34;: &#34;false&#34;,&#xA;        &#34;JIRA_URL&#34;: &#34;https://jira.your-company.com&#34;,&#xA;        &#34;JIRA_PERSONAL_TOKEN&#34;: &#34;your_jira_pat&#34;,&#xA;        &#34;JIRA_SSL_VERIFY&#34;: &#34;false&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;[!NOTE] Set &lt;code&gt;CONFLUENCE_SSL_VERIFY&lt;/code&gt; and &lt;code&gt;JIRA_SSL_VERIFY&lt;/code&gt; to &#34;false&#34; only if you have self-signed certificates.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;OAuth 2.0 Configuration (Cloud Only)&lt;/summary&gt; &#xA; &lt;a name=&#34;oauth-20-configuration-example-cloud-only&#34;&gt;&lt;/a&gt; &#xA; &lt;p&gt;These examples show how to configure &lt;code&gt;mcp-atlassian&lt;/code&gt; in your IDE (like Cursor or Claude Desktop) when using OAuth 2.0 for Atlassian Cloud.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Example for Standard OAuth 2.0 Flow (using Setup Wizard):&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;This configuration is for when you use the server&#39;s built-in OAuth client and have completed the &lt;a href=&#34;https://raw.githubusercontent.com/sooperset/mcp-atlassian/main/#c-oauth-20-authentication-cloud---advanced&#34;&gt;OAuth setup wizard&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;mcp-atlassian&#34;: {&#xA;      &#34;command&#34;: &#34;docker&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;--rm&#34;,&#xA;        &#34;-i&#34;,&#xA;        &#34;-v&#34;, &#34;&amp;lt;path_to_your_home&amp;gt;/.mcp-atlassian:/home/app/.mcp-atlassian&#34;,&#xA;        &#34;-e&#34;, &#34;JIRA_URL&#34;,&#xA;        &#34;-e&#34;, &#34;CONFLUENCE_URL&#34;,&#xA;        &#34;-e&#34;, &#34;ATLASSIAN_OAUTH_CLIENT_ID&#34;,&#xA;        &#34;-e&#34;, &#34;ATLASSIAN_OAUTH_CLIENT_SECRET&#34;,&#xA;        &#34;-e&#34;, &#34;ATLASSIAN_OAUTH_REDIRECT_URI&#34;,&#xA;        &#34;-e&#34;, &#34;ATLASSIAN_OAUTH_SCOPE&#34;,&#xA;        &#34;-e&#34;, &#34;ATLASSIAN_OAUTH_CLOUD_ID&#34;,&#xA;        &#34;ghcr.io/sooperset/mcp-atlassian:latest&#34;&#xA;      ],&#xA;      &#34;env&#34;: {&#xA;        &#34;JIRA_URL&#34;: &#34;https://your-company.atlassian.net&#34;,&#xA;        &#34;CONFLUENCE_URL&#34;: &#34;https://your-company.atlassian.net/wiki&#34;,&#xA;        &#34;ATLASSIAN_OAUTH_CLIENT_ID&#34;: &#34;YOUR_OAUTH_APP_CLIENT_ID&#34;,&#xA;        &#34;ATLASSIAN_OAUTH_CLIENT_SECRET&#34;: &#34;YOUR_OAUTH_APP_CLIENT_SECRET&#34;,&#xA;        &#34;ATLASSIAN_OAUTH_REDIRECT_URI&#34;: &#34;http://localhost:8080/callback&#34;,&#xA;        &#34;ATLASSIAN_OAUTH_SCOPE&#34;: &#34;read:jira-work write:jira-work read:confluence-content.all write:confluence-content offline_access&#34;,&#xA;        &#34;ATLASSIAN_OAUTH_CLOUD_ID&#34;: &#34;YOUR_CLOUD_ID_FROM_SETUP_WIZARD&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For the Standard Flow: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;ATLASSIAN_OAUTH_CLOUD_ID&lt;/code&gt; is obtained from the &lt;code&gt;--oauth-setup&lt;/code&gt; wizard output or is known for your instance.&lt;/li&gt; &#xA;     &lt;li&gt;Other &lt;code&gt;ATLASSIAN_OAUTH_*&lt;/code&gt; client variables are from your OAuth app in the Atlassian Developer Console.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;JIRA_URL&lt;/code&gt; and &lt;code&gt;CONFLUENCE_URL&lt;/code&gt; for your Cloud instances are always required.&lt;/li&gt; &#xA;     &lt;li&gt;The volume mount (&lt;code&gt;-v .../.mcp-atlassian:/home/app/.mcp-atlassian&lt;/code&gt;) is crucial for persisting the OAuth tokens obtained by the wizard, enabling automatic refresh.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Example for Pre-existing Access Token (BYOT - Bring Your Own Token):&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;This configuration is for when you are providing your own externally managed OAuth 2.0 access token.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;mcp-atlassian&#34;: {&#xA;      &#34;command&#34;: &#34;docker&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;--rm&#34;,&#xA;        &#34;-i&#34;,&#xA;        &#34;-e&#34;, &#34;JIRA_URL&#34;,&#xA;        &#34;-e&#34;, &#34;CONFLUENCE_URL&#34;,&#xA;        &#34;-e&#34;, &#34;ATLASSIAN_OAUTH_CLOUD_ID&#34;,&#xA;        &#34;-e&#34;, &#34;ATLASSIAN_OAUTH_ACCESS_TOKEN&#34;,&#xA;        &#34;ghcr.io/sooperset/mcp-atlassian:latest&#34;&#xA;      ],&#xA;      &#34;env&#34;: {&#xA;        &#34;JIRA_URL&#34;: &#34;https://your-company.atlassian.net&#34;,&#xA;        &#34;CONFLUENCE_URL&#34;: &#34;https://your-company.atlassian.net/wiki&#34;,&#xA;        &#34;ATLASSIAN_OAUTH_CLOUD_ID&#34;: &#34;YOUR_KNOWN_CLOUD_ID&#34;,&#xA;        &#34;ATLASSIAN_OAUTH_ACCESS_TOKEN&#34;: &#34;YOUR_PRE_EXISTING_OAUTH_ACCESS_TOKEN&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For the BYOT Method: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;You primarily need &lt;code&gt;JIRA_URL&lt;/code&gt;, &lt;code&gt;CONFLUENCE_URL&lt;/code&gt;, &lt;code&gt;ATLASSIAN_OAUTH_CLOUD_ID&lt;/code&gt;, and &lt;code&gt;ATLASSIAN_OAUTH_ACCESS_TOKEN&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;Standard OAuth client variables (&lt;code&gt;ATLASSIAN_OAUTH_CLIENT_ID&lt;/code&gt;, &lt;code&gt;CLIENT_SECRET&lt;/code&gt;, &lt;code&gt;REDIRECT_URI&lt;/code&gt;, &lt;code&gt;SCOPE&lt;/code&gt;) are &lt;strong&gt;not&lt;/strong&gt; used.&lt;/li&gt; &#xA;     &lt;li&gt;Token lifecycle (e.g., refreshing the token before it expires and restarting mcp-atlassian) is your responsibility, as the server will not refresh BYOT tokens.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Proxy Configuration&lt;/summary&gt; &#xA; &lt;p&gt;MCP Atlassian supports routing API requests through standard HTTP/HTTPS/SOCKS proxies. Configure using environment variables:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Supports standard &lt;code&gt;HTTP_PROXY&lt;/code&gt;, &lt;code&gt;HTTPS_PROXY&lt;/code&gt;, &lt;code&gt;NO_PROXY&lt;/code&gt;, &lt;code&gt;SOCKS_PROXY&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Service-specific overrides are available (e.g., &lt;code&gt;JIRA_HTTPS_PROXY&lt;/code&gt;, &lt;code&gt;CONFLUENCE_NO_PROXY&lt;/code&gt;).&lt;/li&gt; &#xA;  &lt;li&gt;Service-specific variables override global ones for that service.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;Add the relevant proxy variables to the &lt;code&gt;args&lt;/code&gt; (using &lt;code&gt;-e&lt;/code&gt;) and &lt;code&gt;env&lt;/code&gt; sections of your MCP configuration:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;mcp-atlassian&#34;: {&#xA;      &#34;command&#34;: &#34;docker&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;-i&#34;,&#xA;        &#34;--rm&#34;,&#xA;        &#34;-e&#34;, &#34;... existing Confluence/Jira vars&#34;,&#xA;        &#34;-e&#34;, &#34;HTTP_PROXY&#34;,&#xA;        &#34;-e&#34;, &#34;HTTPS_PROXY&#34;,&#xA;        &#34;-e&#34;, &#34;NO_PROXY&#34;,&#xA;        &#34;ghcr.io/sooperset/mcp-atlassian:latest&#34;&#xA;      ],&#xA;      &#34;env&#34;: {&#xA;        &#34;... existing Confluence/Jira vars&#34;: &#34;...&#34;,&#xA;        &#34;HTTP_PROXY&#34;: &#34;http://proxy.internal:8080&#34;,&#xA;        &#34;HTTPS_PROXY&#34;: &#34;http://proxy.internal:8080&#34;,&#xA;        &#34;NO_PROXY&#34;: &#34;localhost,.your-company.com&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Credentials in proxy URLs are masked in logs. If you set &lt;code&gt;NO_PROXY&lt;/code&gt;, it will be respected for requests to matching hosts.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Custom HTTP Headers Configuration&lt;/summary&gt; &#xA; &lt;p&gt;MCP Atlassian supports adding custom HTTP headers to all API requests. This feature is particularly useful in corporate environments where additional headers are required for security, authentication, or routing purposes.&lt;/p&gt; &#xA; &lt;p&gt;Custom headers are configured using environment variables with comma-separated key=value pairs:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;mcp-atlassian&#34;: {&#xA;      &#34;command&#34;: &#34;docker&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;-i&#34;,&#xA;        &#34;--rm&#34;,&#xA;        &#34;-e&#34;, &#34;CONFLUENCE_URL&#34;,&#xA;        &#34;-e&#34;, &#34;CONFLUENCE_USERNAME&#34;,&#xA;        &#34;-e&#34;, &#34;CONFLUENCE_API_TOKEN&#34;,&#xA;        &#34;-e&#34;, &#34;CONFLUENCE_CUSTOM_HEADERS&#34;,&#xA;        &#34;-e&#34;, &#34;JIRA_URL&#34;,&#xA;        &#34;-e&#34;, &#34;JIRA_USERNAME&#34;,&#xA;        &#34;-e&#34;, &#34;JIRA_API_TOKEN&#34;,&#xA;        &#34;-e&#34;, &#34;JIRA_CUSTOM_HEADERS&#34;,&#xA;        &#34;ghcr.io/sooperset/mcp-atlassian:latest&#34;&#xA;      ],&#xA;      &#34;env&#34;: {&#xA;        &#34;CONFLUENCE_URL&#34;: &#34;https://your-company.atlassian.net/wiki&#34;,&#xA;        &#34;CONFLUENCE_USERNAME&#34;: &#34;your.email@company.com&#34;,&#xA;        &#34;CONFLUENCE_API_TOKEN&#34;: &#34;your_confluence_api_token&#34;,&#xA;        &#34;CONFLUENCE_CUSTOM_HEADERS&#34;: &#34;X-Confluence-Service=mcp-integration,X-Custom-Auth=confluence-token,X-ALB-Token=secret-token&#34;,&#xA;        &#34;JIRA_URL&#34;: &#34;https://your-company.atlassian.net&#34;,&#xA;        &#34;JIRA_USERNAME&#34;: &#34;your.email@company.com&#34;,&#xA;        &#34;JIRA_API_TOKEN&#34;: &#34;your_jira_api_token&#34;,&#xA;        &#34;JIRA_CUSTOM_HEADERS&#34;: &#34;X-Forwarded-User=service-account,X-Company-Service=mcp-atlassian,X-Jira-Client=mcp-integration&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;Security Considerations:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Custom header values are masked in debug logs to protect sensitive information&lt;/li&gt; &#xA;  &lt;li&gt;Ensure custom headers don&#39;t conflict with standard HTTP or Atlassian API headers&lt;/li&gt; &#xA;  &lt;li&gt;Avoid including sensitive authentication tokens in custom headers if already using basic auth or OAuth&lt;/li&gt; &#xA;  &lt;li&gt;Headers are sent with every API request - verify they don&#39;t interfere with API functionality&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Multi-Cloud OAuth Support&lt;/summary&gt; &#xA; &lt;p&gt;MCP Atlassian supports multi-cloud OAuth scenarios where each user connects to their own Atlassian cloud instance. This is useful for multi-tenant applications, chatbots, or services where users provide their own OAuth tokens.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Minimal OAuth Configuration:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;Enable minimal OAuth mode (no client credentials required):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -e ATLASSIAN_OAUTH_ENABLE=true -p 9000:9000 \&#xA;  ghcr.io/sooperset/mcp-atlassian:latest \&#xA;  --transport streamable-http --port 9000&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Users provide authentication via HTTP headers:&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;code&gt;Authorization: Bearer &amp;lt;user_oauth_token&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;X-Atlassian-Cloud-Id: &amp;lt;user_cloud_id&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;&lt;strong&gt;Example Integration (Python):&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import asyncio&#xA;from mcp.client.streamable_http import streamablehttp_client&#xA;from mcp import ClientSession&#xA;&#xA;user_token = &#34;user-specific-oauth-token&#34;&#xA;user_cloud_id = &#34;user-specific-cloud-id&#34;&#xA;&#xA;async def main():&#xA;    # Connect to streamable HTTP server with custom headers&#xA;    async with streamablehttp_client(&#xA;        &#34;http://localhost:9000/mcp&#34;,&#xA;        headers={&#xA;            &#34;Authorization&#34;: f&#34;Bearer {user_token}&#34;,&#xA;            &#34;X-Atlassian-Cloud-Id&#34;: user_cloud_id&#xA;        }&#xA;    ) as (read_stream, write_stream, _):&#xA;        # Create a session using the client streams&#xA;        async with ClientSession(read_stream, write_stream) as session:&#xA;            # Initialize the connection&#xA;            await session.initialize()&#xA;&#xA;            # Example: Get a Jira issue&#xA;            result = await session.call_tool(&#xA;                &#34;jira_get_issue&#34;,&#xA;                {&#34;issue_key&#34;: &#34;PROJ-123&#34;}&#xA;            )&#xA;            print(result)&#xA;&#xA;asyncio.run(main())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;Configuration Notes:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Each request can use a different cloud instance via the &lt;code&gt;X-Atlassian-Cloud-Id&lt;/code&gt; header&lt;/li&gt; &#xA;  &lt;li&gt;User tokens are isolated per request - no cross-tenant data leakage&lt;/li&gt; &#xA;  &lt;li&gt;Falls back to global &lt;code&gt;ATLASSIAN_OAUTH_CLOUD_ID&lt;/code&gt; if header not provided&lt;/li&gt; &#xA;  &lt;li&gt;Compatible with standard OAuth 2.0 bearer token authentication&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Single Service Configurations&lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;For Confluence Cloud only:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;mcp-atlassian&#34;: {&#xA;      &#34;command&#34;: &#34;docker&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;--rm&#34;,&#xA;        &#34;-i&#34;,&#xA;        &#34;-e&#34;, &#34;CONFLUENCE_URL&#34;,&#xA;        &#34;-e&#34;, &#34;CONFLUENCE_USERNAME&#34;,&#xA;        &#34;-e&#34;, &#34;CONFLUENCE_API_TOKEN&#34;,&#xA;        &#34;ghcr.io/sooperset/mcp-atlassian:latest&#34;&#xA;      ],&#xA;      &#34;env&#34;: {&#xA;        &#34;CONFLUENCE_URL&#34;: &#34;https://your-company.atlassian.net/wiki&#34;,&#xA;        &#34;CONFLUENCE_USERNAME&#34;: &#34;your.email@company.com&#34;,&#xA;        &#34;CONFLUENCE_API_TOKEN&#34;: &#34;your_api_token&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;For Confluence Server/DC, use:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;mcp-atlassian&#34;: {&#xA;      &#34;command&#34;: &#34;docker&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;--rm&#34;,&#xA;        &#34;-i&#34;,&#xA;        &#34;-e&#34;, &#34;CONFLUENCE_URL&#34;,&#xA;        &#34;-e&#34;, &#34;CONFLUENCE_PERSONAL_TOKEN&#34;,&#xA;        &#34;ghcr.io/sooperset/mcp-atlassian:latest&#34;&#xA;      ],&#xA;      &#34;env&#34;: {&#xA;        &#34;CONFLUENCE_URL&#34;: &#34;https://confluence.your-company.com&#34;,&#xA;        &#34;CONFLUENCE_PERSONAL_TOKEN&#34;: &#34;your_personal_token&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;For Jira Cloud only:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;mcp-atlassian&#34;: {&#xA;      &#34;command&#34;: &#34;docker&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;--rm&#34;,&#xA;        &#34;-i&#34;,&#xA;        &#34;-e&#34;, &#34;JIRA_URL&#34;,&#xA;        &#34;-e&#34;, &#34;JIRA_USERNAME&#34;,&#xA;        &#34;-e&#34;, &#34;JIRA_API_TOKEN&#34;,&#xA;        &#34;ghcr.io/sooperset/mcp-atlassian:latest&#34;&#xA;      ],&#xA;      &#34;env&#34;: {&#xA;        &#34;JIRA_URL&#34;: &#34;https://your-company.atlassian.net&#34;,&#xA;        &#34;JIRA_USERNAME&#34;: &#34;your.email@company.com&#34;,&#xA;        &#34;JIRA_API_TOKEN&#34;: &#34;your_api_token&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;For Jira Server/DC, use:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;mcp-atlassian&#34;: {&#xA;      &#34;command&#34;: &#34;docker&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;run&#34;,&#xA;        &#34;--rm&#34;,&#xA;        &#34;-i&#34;,&#xA;        &#34;-e&#34;, &#34;JIRA_URL&#34;,&#xA;        &#34;-e&#34;, &#34;JIRA_PERSONAL_TOKEN&#34;,&#xA;        &#34;ghcr.io/sooperset/mcp-atlassian:latest&#34;&#xA;      ],&#xA;      &#34;env&#34;: {&#xA;        &#34;JIRA_URL&#34;: &#34;https://jira.your-company.com&#34;,&#xA;        &#34;JIRA_PERSONAL_TOKEN&#34;: &#34;your_personal_token&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;üë• HTTP Transport Configuration&lt;/h3&gt; &#xA;&lt;p&gt;Instead of using &lt;code&gt;stdio&lt;/code&gt;, you can run the server as a persistent HTTP service using either:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sse&lt;/code&gt; (Server-Sent Events) transport at &lt;code&gt;/sse&lt;/code&gt; endpoint&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;streamable-http&lt;/code&gt; transport at &lt;code&gt;/mcp&lt;/code&gt; endpoint&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Both transport types support single-user and multi-user authentication:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Authentication Options:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Single-User&lt;/strong&gt;: Use server-level authentication configured via environment variables&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-User&lt;/strong&gt;: Each user provides their own authentication: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Cloud: OAuth 2.0 Bearer tokens&lt;/li&gt; &#xA;   &lt;li&gt;Server/Data Center: Personal Access Tokens (PATs)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Basic HTTP Transport Setup&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;Start the server with your chosen transport:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# For SSE transport&#xA;docker run --rm -p 9000:9000 \&#xA;  --env-file /path/to/your/.env \&#xA;  ghcr.io/sooperset/mcp-atlassian:latest \&#xA;  --transport sse --port 9000 -vv&#xA;&#xA;# OR for streamable-http transport&#xA;docker run --rm -p 9000:9000 \&#xA;  --env-file /path/to/your/.env \&#xA;  ghcr.io/sooperset/mcp-atlassian:latest \&#xA;  --transport streamable-http --port 9000 -vv&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Configure your IDE (single-user example):&lt;/p&gt; &lt;p&gt;&lt;strong&gt;SSE Transport Example:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;mcp-atlassian-http&#34;: {&#xA;      &#34;url&#34;: &#34;http://localhost:9000/sse&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Streamable-HTTP Transport Example:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;mcp-atlassian-service&#34;: {&#xA;      &#34;url&#34;: &#34;http://localhost:9000/mcp&#34;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Multi-User Authentication Setup&lt;/summary&gt; &#xA; &lt;p&gt;Here&#39;s a complete example of setting up multi-user authentication with streamable-HTTP transport:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;First, run the OAuth setup wizard to configure the server&#39;s OAuth credentials:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -i \&#xA;  -p 8080:8080 \&#xA;  -v &#34;${HOME}/.mcp-atlassian:/home/app/.mcp-atlassian&#34; \&#xA;  ghcr.io/sooperset/mcp-atlassian:latest --oauth-setup -v&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Start the server with streamable-HTTP transport:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -p 9000:9000 \&#xA;  --env-file /path/to/your/.env \&#xA;  ghcr.io/sooperset/mcp-atlassian:latest \&#xA;  --transport streamable-http --port 9000 -vv&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Configure your IDE&#39;s MCP settings:&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;&lt;strong&gt;Choose the appropriate Authorization method for your Atlassian deployment:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Cloud (OAuth 2.0):&lt;/strong&gt; Use this if your organization is on Atlassian Cloud and you have an OAuth access token for each user.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Server/Data Center (PAT):&lt;/strong&gt; Use this if you are on Atlassian Server or Data Center and each user has a Personal Access Token (PAT).&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;Cloud (OAuth 2.0) Example:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;mcp-atlassian-service&#34;: {&#xA;      &#34;url&#34;: &#34;http://localhost:9000/mcp&#34;,&#xA;      &#34;headers&#34;: {&#xA;        &#34;Authorization&#34;: &#34;Bearer &amp;lt;USER_OAUTH_ACCESS_TOKEN&amp;gt;&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;Server/Data Center (PAT) Example:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;mcp-atlassian-service&#34;: {&#xA;      &#34;url&#34;: &#34;http://localhost:9000/mcp&#34;,&#xA;      &#34;headers&#34;: {&#xA;        &#34;Authorization&#34;: &#34;Token &amp;lt;USER_PERSONAL_ACCESS_TOKEN&amp;gt;&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ol start=&#34;4&#34;&gt; &#xA;  &lt;li&gt;Required environment variables in &lt;code&gt;.env&lt;/code&gt;: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;JIRA_URL=https://your-company.atlassian.net&#xA;CONFLUENCE_URL=https://your-company.atlassian.net/wiki&#xA;ATLASSIAN_OAUTH_CLIENT_ID=your_oauth_app_client_id&#xA;ATLASSIAN_OAUTH_CLIENT_SECRET=your_oauth_app_client_secret&#xA;ATLASSIAN_OAUTH_REDIRECT_URI=http://localhost:8080/callback&#xA;ATLASSIAN_OAUTH_SCOPE=read:jira-work write:jira-work read:confluence-content.all write:confluence-content offline_access&#xA;ATLASSIAN_OAUTH_CLOUD_ID=your_cloud_id_from_setup_wizard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The server should have its own fallback authentication configured (e.g., via environment variables for API token, PAT, or its own OAuth setup using --oauth-setup). This is used if a request doesn&#39;t include user-specific authentication.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;OAuth&lt;/strong&gt;: Each user needs their own OAuth access token from your Atlassian OAuth app.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;PAT&lt;/strong&gt;: Each user provides their own Personal Access Token.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Multi-Cloud&lt;/strong&gt;: For OAuth users, optionally include &lt;code&gt;X-Atlassian-Cloud-Id&lt;/code&gt; header to specify which Atlassian cloud instance to use&lt;/li&gt; &#xA;   &lt;li&gt;The server will use the user&#39;s token for API calls when provided, falling back to server auth if not&lt;/li&gt; &#xA;   &lt;li&gt;User tokens should have appropriate scopes for their needed operations&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Tools&lt;/h2&gt; &#xA;&lt;h3&gt;Key Tools&lt;/h3&gt; &#xA;&lt;h4&gt;Jira Tools&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;jira_get_issue&lt;/code&gt;: Get details of a specific issue&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jira_search&lt;/code&gt;: Search issues using JQL&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jira_create_issue&lt;/code&gt;: Create a new issue&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jira_update_issue&lt;/code&gt;: Update an existing issue&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jira_transition_issue&lt;/code&gt;: Transition an issue to a new status&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jira_add_comment&lt;/code&gt;: Add a comment to an issue&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Confluence Tools&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;confluence_search&lt;/code&gt;: Search Confluence content using CQL&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;confluence_get_page&lt;/code&gt;: Get content of a specific page&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;confluence_create_page&lt;/code&gt;: Create a new page&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;confluence_update_page&lt;/code&gt;: Update an existing page&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;View All Tools&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Operation&lt;/th&gt; &#xA;    &lt;th&gt;Jira Tools&lt;/th&gt; &#xA;    &lt;th&gt;Confluence Tools&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Read&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_search&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;confluence_search&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_get_issue&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;confluence_get_page&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_get_all_projects&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;confluence_get_page_children&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_get_project_issues&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;confluence_get_comments&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_get_worklog&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;confluence_get_labels&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_get_transitions&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;confluence_search_user&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_search_fields&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_get_agile_boards&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_get_board_issues&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_get_sprints_from_board&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_get_sprint_issues&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_get_issue_link_types&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_batch_get_changelogs&lt;/code&gt;*&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_get_user_profile&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_download_attachments&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_get_project_versions&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Write&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_create_issue&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;confluence_create_page&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_update_issue&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;confluence_update_page&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_delete_issue&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;confluence_delete_page&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_batch_create_issues&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;confluence_add_label&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_add_comment&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;confluence_add_comment&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_transition_issue&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_add_worklog&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_link_to_epic&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_create_sprint&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_update_sprint&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_create_issue_link&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_remove_issue_link&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_create_version&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;jira_batch_create_versions&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;*Tool only available on Jira Cloud&lt;/p&gt;  &#xA;&lt;h3&gt;Tool Filtering and Access Control&lt;/h3&gt; &#xA;&lt;p&gt;The server provides two ways to control tool access:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tool Filtering&lt;/strong&gt;: Use &lt;code&gt;--enabled-tools&lt;/code&gt; flag or &lt;code&gt;ENABLED_TOOLS&lt;/code&gt; environment variable to specify which tools should be available:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Via environment variable&#xA;ENABLED_TOOLS=&#34;confluence_search,jira_get_issue,jira_search&#34;&#xA;&#xA;# Or via command line flag&#xA;docker run ... --enabled-tools &#34;confluence_search,jira_get_issue,jira_search&#34; ...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Read/Write Control&lt;/strong&gt;: Tools are categorized as read or write operations. When &lt;code&gt;READ_ONLY_MODE&lt;/code&gt; is enabled, only read operations are available regardless of &lt;code&gt;ENABLED_TOOLS&lt;/code&gt; setting.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Troubleshooting &amp;amp; Debugging&lt;/h2&gt; &#xA;&lt;h3&gt;Common Issues&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Authentication Failures&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For Cloud: Check your API tokens (not your account password)&lt;/li&gt; &#xA;   &lt;li&gt;For Server/Data Center: Verify your personal access token is valid and not expired&lt;/li&gt; &#xA;   &lt;li&gt;For older Confluence servers: Some older versions require basic authentication with &lt;code&gt;CONFLUENCE_USERNAME&lt;/code&gt; and &lt;code&gt;CONFLUENCE_API_TOKEN&lt;/code&gt; (where token is your password)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SSL Certificate Issues&lt;/strong&gt;: If using Server/Data Center and encounter SSL errors, set &lt;code&gt;CONFLUENCE_SSL_VERIFY=false&lt;/code&gt; or &lt;code&gt;JIRA_SSL_VERIFY=false&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Permission Errors&lt;/strong&gt;: Ensure your Atlassian account has sufficient permissions to access the spaces/projects&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Custom Headers Issues&lt;/strong&gt;: See the &lt;a href=&#34;https://raw.githubusercontent.com/sooperset/mcp-atlassian/main/#debugging-custom-headers&#34;&gt;&#34;Debugging Custom Headers&#34;&lt;/a&gt; section below to analyze and resolve issues with custom headers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Debugging Custom Headers&lt;/h3&gt; &#xA;&lt;p&gt;To verify custom headers are being applied correctly:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enable Debug Logging&lt;/strong&gt;: Set &lt;code&gt;MCP_VERY_VERBOSE=true&lt;/code&gt; to see detailed request logs&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# In your .env file or environment&#xA;MCP_VERY_VERBOSE=true&#xA;MCP_LOGGING_STDOUT=true&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Check Header Parsing&lt;/strong&gt;: Custom headers appear in logs with masked values for security:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;DEBUG Custom headers applied: {&#39;X-Forwarded-User&#39;: &#39;***&#39;, &#39;X-ALB-Token&#39;: &#39;***&#39;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Verify Service-Specific Headers&lt;/strong&gt;: Check logs to confirm the right headers are being used:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;DEBUG Jira request headers: service-specific headers applied&#xA;DEBUG Confluence request headers: service-specific headers applied&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Test Header Format&lt;/strong&gt;: Ensure your header string format is correct:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Correct format&#xA;JIRA_CUSTOM_HEADERS=X-Custom=value1,X-Other=value2&#xA;CONFLUENCE_CUSTOM_HEADERS=X-Custom=value1,X-Other=value2&#xA;&#xA;# Incorrect formats (will be ignored)&#xA;JIRA_CUSTOM_HEADERS=&#34;X-Custom=value1,X-Other=value2&#34;  # Extra quotes&#xA;JIRA_CUSTOM_HEADERS=X-Custom: value1,X-Other: value2  # Colon instead of equals&#xA;JIRA_CUSTOM_HEADERS=X-Custom = value1               # Spaces around equals&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Security Note&lt;/strong&gt;: Header values containing sensitive information (tokens, passwords) are automatically masked in logs to prevent accidental exposure.&lt;/p&gt; &#xA;&lt;h3&gt;Debugging Tools&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Using MCP Inspector for testing&#xA;npx @modelcontextprotocol/inspector uvx mcp-atlassian ...&#xA;&#xA;# For local development version&#xA;npx @modelcontextprotocol/inspector uv --directory /path/to/your/mcp-atlassian run mcp-atlassian ...&#xA;&#xA;# View logs&#xA;# macOS&#xA;tail -n 20 -f ~/Library/Logs/Claude/mcp*.log&#xA;# Windows&#xA;type %APPDATA%\Claude\logs\mcp*.log | more&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Never share API tokens&lt;/li&gt; &#xA; &lt;li&gt;Keep .env files secure and private&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/sooperset/mcp-atlassian/main/SECURITY.md&#34;&gt;SECURITY.md&lt;/a&gt; for best practices&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to MCP Atlassian! If you&#39;d like to contribute:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Check out our &lt;a href=&#34;https://raw.githubusercontent.com/sooperset/mcp-atlassian/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; guide for detailed development setup instructions.&lt;/li&gt; &#xA; &lt;li&gt;Make changes and submit a pull request.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We use pre-commit hooks for code quality and follow semantic versioning for releases.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under MIT - see &lt;a href=&#34;https://raw.githubusercontent.com/sooperset/mcp-atlassian/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file. This is not an official Atlassian product.&lt;/p&gt;</summary>
  </entry>
</feed>