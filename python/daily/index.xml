<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-01T01:36:28Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>OSU-NLP-Group/HippoRAG</title>
    <updated>2025-08-01T01:36:28Z</updated>
    <id>tag:github.com,2025-08-01:/OSU-NLP-Group/HippoRAG</id>
    <link href="https://github.com/OSU-NLP-Group/HippoRAG" rel="alternate"></link>
    <summary type="html">&lt;p&gt;[NeurIPS&#39;24] HippoRAG is a novel RAG framework inspired by human long-term memory that enables LLMs to continuously integrate knowledge across external documents. RAG + Knowledge Graphs + Personalized PageRank.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;HippoRAG 2: From RAG to Memory&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/OSU-NLP-Group/HippoRAG/raw/main/images/hippo_brain.png&#34; width=&#34;55%&#34; style=&#34;max-width: 300px;&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/drive/1nuelysWsXL8F5xH6q4JYJI8mvtlmeM9O#scrollTo=TjHdNe2KC81K&#34;&gt;&lt;img align=&#34;center&#34; src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2502.14802&#34;&gt;&lt;img align=&#34;center&#34; src=&#34;https://img.shields.io/badge/arXiv-2502.14802%20HippoRAG%202-b31b1b&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/datasets/osunlp/HippoRAG_2/tree/main&#34;&gt;&lt;img align=&#34;center&#34; src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Dataset-HippoRAG%202-yellow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/abs/2405.14831&#34;&gt;&lt;img align=&#34;center&#34; src=&#34;https://img.shields.io/badge/arXiv-2405.14831%20HippoRAG%201-b31b1b&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/OSU-NLP-Group/HippoRAG/tree/legacy&#34;&gt;&lt;img align=&#34;center&#34; src=&#34;https://img.shields.io/badge/GitHub-HippoRAG%201-blue&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;HippoRAG 2 is a powerful memory framework for LLMs that enhances their ability to recognize and utilize connections in new knowledge—mirroring a key function of human long-term memory.&lt;/h3&gt; &#xA;&lt;p&gt;Our experiments show that HippoRAG 2 improves associativity (multi-hop retrieval) and sense-making (the process of integrating large and complex contexts) in even the most advanced RAG systems, without sacrificing their performance on simpler tasks.&lt;/p&gt; &#xA;&lt;p&gt;Like its predecessor, HippoRAG 2 remains cost and latency efficient in online processes, while using significantly fewer resources for offline indexing compared to other graph-based solutions such as GraphRAG, RAPTOR, and LightRAG.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://github.com/OSU-NLP-Group/HippoRAG/raw/main/images/intro.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Figure 1:&lt;/b&gt; Evaluation of continual learning capabilities across three key dimensions: factual memory (NaturalQuestions, PopQA), sense-making (NarrativeQA), and associativity (MuSiQue, 2Wiki, HotpotQA, and LV-Eval). HippoRAG 2 surpasses other methods across all categories, bringing it one step closer to true long-term memory. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://github.com/OSU-NLP-Group/HippoRAG/raw/main/images/methodology.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Figure 2:&lt;/b&gt; HippoRAG 2 methodology. &lt;/p&gt; &#xA;&lt;h4&gt;Check out our papers to learn more:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2405.14831&#34;&gt;&lt;strong&gt;HippoRAG: Neurobiologically Inspired Long-Term Memory for Large Language Models&lt;/strong&gt;&lt;/a&gt; [NeurIPS &#39;24].&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2502.14802&#34;&gt;&lt;strong&gt;From RAG to Memory: Non-Parametric Continual Learning for Large Language Models&lt;/strong&gt;&lt;/a&gt; [ICML &#39;25].&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;conda create -n hipporag python=3.10&#xA;conda activate hipporag&#xA;pip install hipporag&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Initialize the environmental variables and activate the environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export CUDA_VISIBLE_DEVICES=0,1,2,3&#xA;export HF_HOME=&amp;lt;path to Huggingface home directory&amp;gt;&#xA;export OPENAI_API_KEY=&amp;lt;your openai api key&amp;gt;   # if you want to use OpenAI model&#xA;&#xA;conda activate hipporag&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;OpenAI Models&lt;/h3&gt; &#xA;&lt;p&gt;This simple example will illustrate how to use &lt;code&gt;hipporag&lt;/code&gt; with any OpenAI model:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from hipporag import HippoRAG&#xA;&#xA;# Prepare datasets and evaluation&#xA;docs = [&#xA;    &#34;Oliver Badman is a politician.&#34;,&#xA;    &#34;George Rankin is a politician.&#34;,&#xA;    &#34;Thomas Marwick is a politician.&#34;,&#xA;    &#34;Cinderella attended the royal ball.&#34;,&#xA;    &#34;The prince used the lost glass slipper to search the kingdom.&#34;,&#xA;    &#34;When the slipper fit perfectly, Cinderella was reunited with the prince.&#34;,&#xA;    &#34;Erik Hort&#39;s birthplace is Montebello.&#34;,&#xA;    &#34;Marina is bom in Minsk.&#34;,&#xA;    &#34;Montebello is a part of Rockland County.&#34;&#xA;]&#xA;&#xA;save_dir = &#39;outputs&#39;# Define save directory for HippoRAG objects (each LLM/Embedding model combination will create a new subdirectory)&#xA;llm_model_name = &#39;gpt-4o-mini&#39; # Any OpenAI model name&#xA;embedding_model_name = &#39;nvidia/NV-Embed-v2&#39;# Embedding model name (NV-Embed, GritLM or Contriever for now)&#xA;&#xA;#Startup a HippoRAG instance&#xA;hipporag = HippoRAG(save_dir=save_dir, &#xA;                    llm_model_name=llm_model_name,&#xA;                    embedding_model_name=embedding_model_name) &#xA;&#xA;#Run indexing&#xA;hipporag.index(docs=docs)&#xA;&#xA;#Separate Retrieval &amp;amp; QA&#xA;queries = [&#xA;    &#34;What is George Rankin&#39;s occupation?&#34;,&#xA;    &#34;How did Cinderella reach her happy ending?&#34;,&#xA;    &#34;What county is Erik Hort&#39;s birthplace a part of?&#34;&#xA;]&#xA;&#xA;retrieval_results = hipporag.retrieve(queries=queries, num_to_retrieve=2)&#xA;qa_results = hipporag.rag_qa(retrieval_results)&#xA;&#xA;#Combined Retrieval &amp;amp; QA&#xA;rag_results = hipporag.rag_qa(queries=queries)&#xA;&#xA;#For Evaluation&#xA;answers = [&#xA;    [&#34;Politician&#34;],&#xA;    [&#34;By going to the ball.&#34;],&#xA;    [&#34;Rockland County&#34;]&#xA;]&#xA;&#xA;gold_docs = [&#xA;    [&#34;George Rankin is a politician.&#34;],&#xA;    [&#34;Cinderella attended the royal ball.&#34;,&#xA;    &#34;The prince used the lost glass slipper to search the kingdom.&#34;,&#xA;    &#34;When the slipper fit perfectly, Cinderella was reunited with the prince.&#34;],&#xA;    [&#34;Erik Hort&#39;s birthplace is Montebello.&#34;,&#xA;    &#34;Montebello is a part of Rockland County.&#34;]&#xA;]&#xA;&#xA;rag_results = hipporag.rag_qa(queries=queries, &#xA;                              gold_docs=gold_docs,&#xA;                              gold_answers=answers)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Example (OpenAI Compatible Embeddings)&lt;/h4&gt; &#xA;&lt;p&gt;If you want to use LLMs and Embeddings Compatible to OpenAI, please use the following methods.&lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;hipporag = HippoRAG(save_dir=save_dir, &#xA;    llm_model_name=&#39;Your LLM Model name&#39;,&#xA;    llm_base_url=&#39;Your LLM Model url&#39;,&#xA;    embedding_model_name=&#39;Your Embedding model name&#39;,  &#xA;    embedding_base_url=&#39;Your Embedding model url&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Local Deployment (vLLM)&lt;/h3&gt; &#xA;&lt;p&gt;This simple example will illustrate how to use &lt;code&gt;hipporag&lt;/code&gt; with any vLLM-compatible locally deployed LLM.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run a local &lt;a href=&#34;https://docs.vllm.ai/en/latest/getting_started/quickstart.html#quickstart-online&#34;&gt;OpenAI-compatible vLLM server&lt;/a&gt; with specified GPUs (make sure you leave enough memory for your embedding model).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export CUDA_VISIBLE_DEVICES=0,1&#xA;export VLLM_WORKER_MULTIPROC_METHOD=spawn&#xA;export HF_HOME=&amp;lt;path to Huggingface home directory&amp;gt;&#xA;&#xA;conda activate hipporag  # vllm should be in this environment&#xA;&#xA;# Tune gpu-memory-utilization or max_model_len to fit your GPU memory, if OOM occurs&#xA;vllm serve meta-llama/Llama-3.3-70B-Instruct --tensor-parallel-size 2 --max_model_len 4096 --gpu-memory-utilization 0.95 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Now you can use very similar code to the one above to use &lt;code&gt;hipporag&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;save_dir = &#39;outputs&#39;# Define save directory for HippoRAG objects (each LLM/Embedding model combination will create a new subdirectory)&#xA;llm_model_name = # Any OpenAI model name&#xA;embedding_model_name = # Embedding model name (NV-Embed, GritLM or Contriever for now)&#xA;llm_base_url= # Base url for your deployed LLM (i.e. http://localhost:8000/v1)&#xA;&#xA;hipporag = HippoRAG(save_dir=save_dir,&#xA;                    llm_model_name=llm_model,&#xA;                    embedding_model_name=embedding_model_name,&#xA;                    llm_base_url=llm_base_url)&#xA;&#xA;# Same Indexing, Retrieval and QA as running OpenAI models above&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;When making a contribution to HippoRAG, please run the scripts below to ensure that your changes do not result in unexpected behavior from our core modules.&lt;/p&gt; &#xA;&lt;p&gt;These scripts test for indexing, graph loading, document deletion and incremental updates to a HippoRAG object.&lt;/p&gt; &#xA;&lt;h3&gt;OpenAI Test&lt;/h3&gt; &#xA;&lt;p&gt;To test HippoRAG with an OpenAI LLM and embedding model, simply run the following. The cost of this test will be negligible.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export OPENAI_API_KEY=&amp;lt;your openai api key&amp;gt; &#xA;&#xA;conda activate hipporag&#xA;&#xA;python tests_openai.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Local Test&lt;/h3&gt; &#xA;&lt;p&gt;To test locally, you must deploy a vLLM instance. We choose to deploy a smaller 8B model &lt;code&gt;Llama-3.1-8B-Instruct&lt;/code&gt; for cheaper testing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export CUDA_VISIBLE_DEVICES=0&#xA;export VLLM_WORKER_MULTIPROC_METHOD=spawn&#xA;export HF_HOME=&amp;lt;path to Huggingface home directory&amp;gt;&#xA;&#xA;conda activate hipporag  # vllm should be in this environment&#xA;&#xA;# Tune gpu-memory-utilization or max_model_len to fit your GPU memory, if OOM occurs&#xA;vllm serve meta-llama/Llama-3.1-8B-Instruct --tensor-parallel-size 2 --max_model_len 4096 --gpu-memory-utilization 0.95 --port 6578&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, we run the following test script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;CUDA_VISIBLE=1 python tests_local.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Reproducing our Experiments&lt;/h2&gt; &#xA;&lt;p&gt;To use our code to run experiments we recommend you clone this repository and follow the structure of the &lt;code&gt;main.py&lt;/code&gt; script.&lt;/p&gt; &#xA;&lt;h3&gt;Data for Reproducibility&lt;/h3&gt; &#xA;&lt;p&gt;We evaluated several sampled datasets in our paper, some of which are already included in the &lt;code&gt;reproduce/dataset&lt;/code&gt; directory of this repo. For the complete set of datasets, please visit our &lt;a href=&#34;https://huggingface.co/datasets/osunlp/HippoRAG_v2&#34;&gt;HuggingFace dataset&lt;/a&gt; and place them under &lt;code&gt;reproduce/dataset&lt;/code&gt;. We also provide the OpenIE results for both &lt;code&gt;gpt-4o-mini&lt;/code&gt; and &lt;code&gt;Llama-3.3-70B-Instruct&lt;/code&gt; for our &lt;code&gt;musique&lt;/code&gt; sample under &lt;code&gt;outputs/musique&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To test your environment is properly set up, you can use the small dataset &lt;code&gt;reproduce/dataset/sample.json&lt;/code&gt; for debugging as shown below.&lt;/p&gt; &#xA;&lt;h3&gt;Running Indexing &amp;amp; QA&lt;/h3&gt; &#xA;&lt;p&gt;Initialize the environmental variables and activate the environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export CUDA_VISIBLE_DEVICES=0,1,2,3&#xA;export HF_HOME=&amp;lt;path to Huggingface home directory&amp;gt;&#xA;export OPENAI_API_KEY=&amp;lt;your openai api key&amp;gt;   # if you want to use OpenAI model&#xA;&#xA;conda activate hipporag&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run with OpenAI Model&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dataset=sample  # or any other dataset under `reproduce/dataset`&#xA;&#xA;# Run OpenAI model&#xA;python main.py --dataset $dataset --llm_base_url https://api.openai.com/v1 --llm_name gpt-4o-mini --embedding_name nvidia/NV-Embed-v2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run with vLLM (Llama)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;As above, run a local &lt;a href=&#34;https://docs.vllm.ai/en/latest/getting_started/quickstart.html#quickstart-online&#34;&gt;OpenAI-compatible vLLM server&lt;/a&gt; with specified GPU.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export CUDA_VISIBLE_DEVICES=0,1&#xA;export VLLM_WORKER_MULTIPROC_METHOD=spawn&#xA;export HF_HOME=&amp;lt;path to Huggingface home directory&amp;gt;&#xA;&#xA;conda activate hipporag  # vllm should be in this environment&#xA;&#xA;# Tune gpu-memory-utilization or max_model_len to fit your GPU memory, if OOM occurs&#xA;vllm serve meta-llama/Llama-3.3-70B-Instruct --tensor-parallel-size 2 --max_model_len 4096 --gpu-memory-utilization 0.95 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Use another GPUs to run the main program in another terminal.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export CUDA_VISIBLE_DEVICES=2,3  # set another GPUs while vLLM server is running&#xA;export HF_HOME=&amp;lt;path to Huggingface home directory&amp;gt;&#xA;dataset=sample&#xA;&#xA;python main.py --dataset $dataset --llm_base_url http://localhost:8000/v1 --llm_name meta-llama/Llama-3.3-70B-Instruct --embedding_name nvidia/NV-Embed-v2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Advanced: Run with vLLM offline batch&lt;/h4&gt; &#xA;&lt;p&gt;vLLM offers an &lt;a href=&#34;https://docs.vllm.ai/en/latest/getting_started/quickstart.html#offline-batched-inference&#34;&gt;offline batch mode&lt;/a&gt; for faster inference, which could bring us more than 3x faster indexing compared to vLLM online server.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use the following command to run the main program with vLLM offline batch mode.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export CUDA_VISIBLE_DEVICES=0,1,2,3 # use all GPUs for faster offline indexing&#xA;export VLLM_WORKER_MULTIPROC_METHOD=spawn&#xA;export HF_HOME=&amp;lt;path to Huggingface home directory&amp;gt;&#xA;export OPENAI_API_KEY=&#39;&#39;&#xA;dataset=sample&#xA;&#xA;python main.py --dataset $dataset --llm_name meta-llama/Llama-3.3-70B-Instruct --openie_mode offline --skip_graph&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;After the first step, OpenIE result is saved to file. Go back to run vLLM online server and main program as described in the &lt;code&gt;Run with vLLM (Llama)&lt;/code&gt; main section.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Debugging Note&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;/reproduce/dataset/sample.json&lt;/code&gt; is a small dataset specifically for debugging.&lt;/li&gt; &#xA; &lt;li&gt;When debugging vLLM offline mode, set &lt;code&gt;tensor_parallel_size&lt;/code&gt; as &lt;code&gt;1&lt;/code&gt; in &lt;code&gt;hipporag/llm/vllm_offline.py&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you want to rerun a particular experiment, remember to clear the saved files, including OpenIE results and knowledge graph, e.g.,&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rm reproduce/dataset/openie_results/openie_sample_results_ner_meta-llama_Llama-3.3-70B-Instruct_3.json&#xA;rm -rf outputs/sample/sample_meta-llama_Llama-3.3-70B-Instruct_nvidia_NV-Embed-v2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom Datasets&lt;/h3&gt; &#xA;&lt;p&gt;To setup your own custom dataset for evaluation, follow the format and naming convention shown in &lt;code&gt;reproduce/dataset/sample_corpus.json&lt;/code&gt; (your dataset&#39;s name should be followed by &lt;code&gt;_corpus.json&lt;/code&gt;). If running an experiment with pre-defined questions, organize your query corpus according to the query file &lt;code&gt;reproduce/dataset/sample.json&lt;/code&gt;, be sure to also follow our naming convention.&lt;/p&gt; &#xA;&lt;p&gt;The corpus and optional query JSON files should have the following format:&lt;/p&gt; &#xA;&lt;h4&gt;Retrieval Corpus JSON&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[&#xA;  {&#xA;    &#34;title&#34;: &#34;FIRST PASSAGE TITLE&#34;,&#xA;    &#34;text&#34;: &#34;FIRST PASSAGE TEXT&#34;,&#xA;    &#34;idx&#34;: 0&#xA;  },&#xA;  {&#xA;    &#34;title&#34;: &#34;SECOND PASSAGE TITLE&#34;,&#xA;    &#34;text&#34;: &#34;SECOND PASSAGE TEXT&#34;,&#xA;    &#34;idx&#34;: 1&#xA;  }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;(Optional) Query JSON&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#xA;[&#xA;  {&#xA;    &#34;id&#34;: &#34;sample/question_1.json&#34;,&#xA;    &#34;question&#34;: &#34;QUESTION&#34;,&#xA;    &#34;answer&#34;: [&#xA;      &#34;ANSWER&#34;&#xA;    ],&#xA;    &#34;answerable&#34;: true,&#xA;    &#34;paragraphs&#34;: [&#xA;      {&#xA;        &#34;title&#34;: &#34;{FIRST SUPPORTING PASSAGE TITLE}&#34;,&#xA;        &#34;text&#34;: &#34;{FIRST SUPPORTING PASSAGE TEXT}&#34;,&#xA;        &#34;is_supporting&#34;: true,&#xA;        &#34;idx&#34;: 0&#xA;      },&#xA;      {&#xA;        &#34;title&#34;: &#34;{SECOND SUPPORTING PASSAGE TITLE}&#34;,&#xA;        &#34;text&#34;: &#34;{SECOND SUPPORTING PASSAGE TEXT}&#34;,&#xA;        &#34;is_supporting&#34;: true,&#xA;        &#34;idx&#34;: 1&#xA;      }&#xA;    ]&#xA;  }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;(Optional) Chunking Corpus&lt;/h4&gt; &#xA;&lt;p&gt;When preparing your data, you may need to chunk each passage, as longer passage may be too complex for the OpenIE process.&lt;/p&gt; &#xA;&lt;h2&gt;Code Structure&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;📦 .&#xA;│-- 📂 src/hipporag&#xA;│   ├── 📂 embedding_model          # Implementation of all embedding models&#xA;│   │   ├── __init__.py             # Getter function for get specific embedding model classes&#xA;|   |   ├── base.py                 # Base embedding model class `BaseEmbeddingModel` to inherit and `EmbeddingConfig`&#xA;|   |   ├── NVEmbedV2.py            # Implementation of NV-Embed-v2 model&#xA;|   |   ├── ...&#xA;│   ├── 📂 evaluation               # Implementation of all evaluation metrics&#xA;│   │   ├── __init__.py&#xA;|   |   ├── base.py                 # Base evaluation metric class `BaseMetric` to inherit&#xA;│   │   ├── qa_eval.py              # Eval metrics for QA&#xA;│   │   ├── retrieval_eval.py       # Eval metrics for retrieval&#xA;│   ├── 📂 information_extraction  # Implementation of all information extraction models&#xA;│   │   ├── __init__.py&#xA;|   |   ├── openie_openai_gpt.py    # Model for OpenIE with OpenAI GPT&#xA;|   |   ├── openie_vllm_offline.py  # Model for OpenIE with LLMs deployed offline with vLLM&#xA;│   ├── 📂 llm                      # Classes for inference with large language models&#xA;│   │   ├── __init__.py             # Getter function&#xA;|   |   ├── base.py                 # Config class for LLM inference and base LLM inference class to inherit&#xA;|   |   ├── openai_gpt.py           # Class for inference with OpenAI GPT&#xA;|   |   ├── vllm_llama.py           # Class for inference using a local vLLM server&#xA;|   |   ├── vllm_offline.py         # Class for inference using the vLLM API directly&#xA;│   ├── 📂 prompts                  # Prompt templates and prompt template manager class&#xA;|   │   ├── 📂 dspy_prompts         # Prompts for filtering&#xA;|   │   │   ├── ...&#xA;|   │   ├── 📂 templates            # All prompt templates for template manager to load&#xA;|   │   │   ├── README.md           # Documentations of usage of prompte template manager and prompt template files&#xA;|   │   │   ├── __init__.py&#xA;|   │   │   ├── triple_extraction.py&#xA;|   │   │   ├── ...&#xA;│   │   ├── __init__.py&#xA;|   |   ├── linking.py              # Instruction for linking&#xA;|   |   ├── prompt_template_manager.py  # Implementation of prompt template manager&#xA;│   ├── 📂 utils                    # All utility functions used across this repo (the file name indicates its relevant usage)&#xA;│   │   ├── config_utils.py         # We use only one config across all modules and its setup is specified here&#xA;|   |   ├── ...&#xA;│   ├── __init__.py&#xA;│   ├── HippoRAG.py          # Highest level class for initiating retrieval, question answering, and evaluations&#xA;│   ├── embedding_store.py   # Storage database to load, manage and save embeddings for passages, entities and facts.&#xA;│   ├── rerank.py            # Reranking and filtering methods&#xA;│-- 📂 examples&#xA;│   ├── ...&#xA;│   ├── ...&#xA;│-- 📜 README.md&#xA;│-- 📜 requirements.txt   # Dependencies list&#xA;│-- 📜 .gitignore         # Files to exclude from Git&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Questions or issues? File an issue or contact &lt;a href=&#34;mailto:jimenezgutierrez.1@osu.edu&#34;&gt;Bernal Jiménez Gutiérrez&lt;/a&gt;, &lt;a href=&#34;mailto:shu.251@osu.edu&#34;&gt;Yiheng Shu&lt;/a&gt;, &lt;a href=&#34;mailto:su.809@osu.edu&#34;&gt;Yu Su&lt;/a&gt;, The Ohio State University&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find this work useful, please consider citing our papers:&lt;/p&gt; &#xA;&lt;h3&gt;HippoRAG 2&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{gutiérrez2025ragmemorynonparametriccontinual,&#xA;      title={From RAG to Memory: Non-Parametric Continual Learning for Large Language Models}, &#xA;      author={Bernal Jiménez Gutiérrez and Yiheng Shu and Weijian Qi and Sizhe Zhou and Yu Su},&#xA;      year={2025},&#xA;      eprint={2502.14802},&#xA;      archivePrefix={arXiv},&#xA;      primaryClass={cs.CL},&#xA;      url={https://arxiv.org/abs/2502.14802}, &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;HippoRAG&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;@inproceedings{gutiérrez2024hipporag,&#xA;      title={HippoRAG: Neurobiologically Inspired Long-Term Memory for Large Language Models}, &#xA;      author={Bernal Jiménez Gutiérrez and Yiheng Shu and Yu Gu and Michihiro Yasunaga and Yu Su},&#xA;      booktitle={The Thirty-eighth Annual Conference on Neural Information Processing Systems},&#xA;      year={2024},&#xA;      url={https://openreview.net/forum?id=hkujvAPVsg}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;TODO:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add support for more embedding models&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add support for embedding endpoints&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add support for vector database integration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please feel free to open an issue or PR if you have any questions or suggestions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/mcp-for-beginners</title>
    <updated>2025-08-01T01:36:28Z</updated>
    <id>tag:github.com,2025-08-01:/microsoft/mcp-for-beginners</id>
    <link href="https://github.com/microsoft/mcp-for-beginners" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This open-source curriculum introduces the fundamentals of Model Context Protocol (MCP) through real-world, cross-language examples in .NET, Java, TypeScript, JavaScript, and Python. Designed for developers, it focuses on practical techniques for building modular, scalable, and secure AI workflows from session setup to service orchestration.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/images/mcp-beginners.png&#34; alt=&#34;MCP-for-beginners&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://GitHub.com/microsoft/mcp-for-beginners/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/microsoft/mcp-for-beginners.svg?sanitize=true&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/microsoft/mcp-for-beginners/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/microsoft/mcp-for-beginners.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/microsoft/mcp-for-beginners/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/microsoft/mcp-for-beginners.svg?sanitize=true&#34; alt=&#34;GitHub pull-requests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://makeapullrequest.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://GitHub.com/microsoft/mcp-for-beginners/watchers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/watchers/microsoft/mcp-for-beginners.svg?style=social&amp;amp;label=Watch&#34; alt=&#34;GitHub watchers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/microsoft/mcp-for-beginners/fork&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/microsoft/mcp-for-beginners.svg?style=social&amp;amp;label=Fork&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/microsoft/mcp-for-beginners/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/microsoft/mcp-for-beginners?style=social&amp;amp;label=Star&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.com/invite/ByRwuEEgH4&#34;&gt;&lt;img src=&#34;https://dcbadge.limes.pink/api/server/ByRwuEEgH4&#34; alt=&#34;Microsoft Azure AI Foundry Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Follow these steps to get started using these resources:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fork the Repository&lt;/strong&gt;: Click &lt;a href=&#34;https://GitHub.com/microsoft/mcp-for-beginners/fork&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/microsoft/mcp-for-beginners.svg?style=social&amp;amp;label=Fork&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clone the Repository&lt;/strong&gt;: &lt;code&gt;git clone https://github.com/microsoft/mcp-for-beginners.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.com/invite/ByRwuEEgH4&#34;&gt;&lt;strong&gt;Join The Azure AI Foundry Discord and meet experts and fellow developers&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;🌐 Multi-Language Support&lt;/h3&gt; &#xA;&lt;h4&gt;Supported via GitHub Action (Automated &amp;amp; Always Up-to-Date)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/fr/README.md&#34;&gt;French&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/es/README.md&#34;&gt;Spanish&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/de/README.md&#34;&gt;German&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/ru/README.md&#34;&gt;Russian&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/ar/README.md&#34;&gt;Arabic&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/fa/README.md&#34;&gt;Persian (Farsi)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/ur/README.md&#34;&gt;Urdu&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/zh/README.md&#34;&gt;Chinese (Simplified)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/mo/README.md&#34;&gt;Chinese (Traditional, Macau)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/hk/README.md&#34;&gt;Chinese (Traditional, Hong Kong)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/tw/README.md&#34;&gt;Chinese (Traditional, Taiwan)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/ja/README.md&#34;&gt;Japanese&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/ko/README.md&#34;&gt;Korean&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/hi/README.md&#34;&gt;Hindi&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/bn/README.md&#34;&gt;Bengali&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/mr/README.md&#34;&gt;Marathi&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/ne/README.md&#34;&gt;Nepali&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/pa/README.md&#34;&gt;Punjabi (Gurmukhi)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/pt/README.md&#34;&gt;Portuguese (Portugal)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/br/README.md&#34;&gt;Portuguese (Brazil)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/it/README.md&#34;&gt;Italian&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/pl/README.md&#34;&gt;Polish&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/tr/README.md&#34;&gt;Turkish&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/el/README.md&#34;&gt;Greek&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/th/README.md&#34;&gt;Thai&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/sv/README.md&#34;&gt;Swedish&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/da/README.md&#34;&gt;Danish&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/no/README.md&#34;&gt;Norwegian&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/fi/README.md&#34;&gt;Finnish&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/nl/README.md&#34;&gt;Dutch&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/he/README.md&#34;&gt;Hebrew&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/vi/README.md&#34;&gt;Vietnamese&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/id/README.md&#34;&gt;Indonesian&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/ms/README.md&#34;&gt;Malay&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/tl/README.md&#34;&gt;Tagalog (Filipino)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/sw/README.md&#34;&gt;Swahili&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/hu/README.md&#34;&gt;Hungarian&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/cs/README.md&#34;&gt;Czech&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/sk/README.md&#34;&gt;Slovak&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/ro/README.md&#34;&gt;Romanian&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/bg/README.md&#34;&gt;Bulgarian&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/sr/README.md&#34;&gt;Serbian (Cyrillic)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/hr/README.md&#34;&gt;Croatian&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/sl/README.md&#34;&gt;Slovenian&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/uk/README.md&#34;&gt;Ukrainian&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/translations/my/README.md&#34;&gt;Burmese (Myanmar)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;🚀 Model Context Protocol (MCP) Curriculum for Beginners&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Learn MCP with Hands-on Code Examples in C#, Java, JavaScript, Python, and TypeScript&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;🧠 Overview of the Model Context Protocol Curriculum&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;strong&gt;Model Context Protocol (MCP)&lt;/strong&gt; is a cutting-edge framework designed to standardize interactions between AI models and client applications. This open-source curriculum offers a structured learning path, complete with practical coding examples and real-world use cases, across popular programming languages including C#, Java, JavaScript, TypeScript, and Python.&lt;/p&gt; &#xA;&lt;p&gt;Whether you&#39;re an AI developer, system architect, or software engineer, this guide is your comprehensive resource for mastering MCP fundamentals and implementation strategies.&lt;/p&gt; &#xA;&lt;h2&gt;🔗 Official MCP Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;📘 &lt;a href=&#34;https://modelcontextprotocol.io/&#34;&gt;MCP Documentation&lt;/a&gt; – Detailed tutorials and user guides&lt;/li&gt; &#xA; &lt;li&gt;📜 &lt;a href=&#34;https://modelcontextprotocol.io/docs/&#34;&gt;MCP Specification&lt;/a&gt; – Protocol architecture and technical references&lt;/li&gt; &#xA; &lt;li&gt;📜 &lt;a href=&#34;https://spec.modelcontextprotocol.io/&#34;&gt;Original MCP Specification&lt;/a&gt; – Legacy technical references (may contain additional details)&lt;/li&gt; &#xA; &lt;li&gt;🧑‍💻 &lt;a href=&#34;https://github.com/modelcontextprotocol&#34;&gt;MCP GitHub Repository&lt;/a&gt; – Open-source SDKs, tools, and code samples&lt;/li&gt; &#xA; &lt;li&gt;🌐 &lt;a href=&#34;https://github.com/orgs/modelcontextprotocol/discussions&#34;&gt;MCP Community&lt;/a&gt; – Join discussions and contribute to the community&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Join us for MCP Dev Days 29-30th July 2025&lt;/h2&gt; &#xA;&lt;p&gt;Get ready for two days of deep technical insight, community connection, and hands-on learning at MCP Dev Days, a virtual event dedicated to the Model Context Protocol (MCP) — the emerging standard that bridges AI models and the tools they rely on.&lt;/p&gt; &#xA;&lt;p&gt;➡️ &lt;a href=&#34;https://developer.microsoft.com/en-us/reactor/series/S-1563/&#34;&gt;Register for MCP Dev Days&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can watch MCP Dev Days by registering on our event page: &lt;a href=&#34;https://aka.ms/mcpdevdays&#34;&gt;https://aka.ms/mcpdevdays&lt;/a&gt;. From there, you’ll be able to join a live stream on YouTube or Twitch. All of the content is recorded and will be available afterwards on the Microsoft Developer YouTube channel. Source code for the demos will be available on GitHub too.&lt;/p&gt; &#xA;&lt;h3&gt;Event Details&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dates: July 29 (Day 1) &amp;amp; July 30 (Day 2)&lt;/li&gt; &#xA; &lt;li&gt;Time: 9:00 AM PST daily&lt;/li&gt; &#xA; &lt;li&gt;Where: Online – join from anywhere!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Day 1: MCP Productivity, DevTools, &amp;amp; Community:&lt;/h4&gt; &#xA;&lt;p&gt;Is all about empowering developers to use MCP in their developer workflow and celebrating the amazing MCP community. We’ll be joined with community members and partners such as Arcade, Block, Okta, and Neon to see how they are collaborating with Microsoft to shape an open, extensible MCP ecosystem. Real-world demos across VS Code, Visual Studio, GitHub Copilot, and popular community tools Practical, context-driven dev workflows Community-led sessions and insights Whether you’re just getting started with MCP or already building with it, Day 1 will set the stage with inspiration and actionable takeaways.&lt;/p&gt; &#xA;&lt;h4&gt;Day 2: Build MCP Servers with Confidence&lt;/h4&gt; &#xA;&lt;p&gt;Is for MCP builders. We’ll go deep into implementation strategies and best practices for creating MCP servers and integrating MCP into your AI workflows.&lt;/p&gt; &#xA;&lt;h3&gt;Topics include:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Building MCP Servers and integrating them into agent experiences&lt;/li&gt; &#xA; &lt;li&gt;Prompt-driven development&lt;/li&gt; &#xA; &lt;li&gt;Security best practices&lt;/li&gt; &#xA; &lt;li&gt;Using building blocks like Functions, ACA, and API Management&lt;/li&gt; &#xA; &lt;li&gt;Registry alignment and tooling (1P + 3P)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you’re a developer, tool builder, or AI product strategist, this day is packed with the insights you need to build scalable, secure, and future-ready MCP solutions.&lt;/p&gt; &#xA;&lt;h2&gt;🧭 MCP Curriculum Overview&lt;/h2&gt; &#xA;&lt;h3&gt;📚 Complete Curriculum Structure&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Module&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Module 1-3: Fundamentals&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;00&lt;/td&gt; &#xA;   &lt;td&gt;Introduction to MCP&lt;/td&gt; &#xA;   &lt;td&gt;Overview of the Model Context Protocol and its significance in AI pipelines&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/00-Introduction/README.md&#34;&gt;Read more&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;01&lt;/td&gt; &#xA;   &lt;td&gt;Core Concepts Explained&lt;/td&gt; &#xA;   &lt;td&gt;In-depth exploration of core MCP concepts&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/01-CoreConcepts/README.md&#34;&gt;Read more&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;02&lt;/td&gt; &#xA;   &lt;td&gt;Security in MCP&lt;/td&gt; &#xA;   &lt;td&gt;Security threats and best practices&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/02-Security/README.md&#34;&gt;Read more&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;03&lt;/td&gt; &#xA;   &lt;td&gt;Getting Started with MCP&lt;/td&gt; &#xA;   &lt;td&gt;Environment setup, basic servers/clients, integration&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/03-GettingStarted/README.md&#34;&gt;Read more&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Module 3: Building Your First Server &amp;amp; Client&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.1&lt;/td&gt; &#xA;   &lt;td&gt;First Server&lt;/td&gt; &#xA;   &lt;td&gt;Create your first MCP server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/03-GettingStarted/01-first-server/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.2&lt;/td&gt; &#xA;   &lt;td&gt;First Client&lt;/td&gt; &#xA;   &lt;td&gt;Develop a basic MCP client&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/03-GettingStarted/02-client/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.3&lt;/td&gt; &#xA;   &lt;td&gt;Client with LLM&lt;/td&gt; &#xA;   &lt;td&gt;Integrate large language models&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/03-GettingStarted/03-llm-client/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.4&lt;/td&gt; &#xA;   &lt;td&gt;VS Code Integration&lt;/td&gt; &#xA;   &lt;td&gt;Consume MCP servers in VS Code&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/03-GettingStarted/04-vscode/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.5&lt;/td&gt; &#xA;   &lt;td&gt;SSE Server&lt;/td&gt; &#xA;   &lt;td&gt;Create servers using Server-Sent Events&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/03-GettingStarted/05-sse-server/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.6&lt;/td&gt; &#xA;   &lt;td&gt;HTTP Streaming&lt;/td&gt; &#xA;   &lt;td&gt;Implement HTTP streaming in MCP&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/03-GettingStarted/06-http-streaming/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.7&lt;/td&gt; &#xA;   &lt;td&gt;AI Toolkit&lt;/td&gt; &#xA;   &lt;td&gt;Use AI Toolkit with MCP&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/03-GettingStarted/07-aitk/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.8&lt;/td&gt; &#xA;   &lt;td&gt;Testing&lt;/td&gt; &#xA;   &lt;td&gt;Test your MCP server implementation&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/03-GettingStarted/08-testing/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.9&lt;/td&gt; &#xA;   &lt;td&gt;Deployment&lt;/td&gt; &#xA;   &lt;td&gt;Deploy MCP servers to production&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/03-GettingStarted/09-deployment/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Module 4-5: Practical &amp;amp; Advanced&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;04&lt;/td&gt; &#xA;   &lt;td&gt;Practical Implementation&lt;/td&gt; &#xA;   &lt;td&gt;SDKs, debugging, testing, reusable prompt templates&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/04-PracticalImplementation/README.md&#34;&gt;Read more&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;05&lt;/td&gt; &#xA;   &lt;td&gt;Advanced Topics in MCP&lt;/td&gt; &#xA;   &lt;td&gt;Multi-modal AI, scaling, enterprise use&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/05-AdvancedTopics/README.md&#34;&gt;Read more&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.1&lt;/td&gt; &#xA;   &lt;td&gt;Azure Integration&lt;/td&gt; &#xA;   &lt;td&gt;MCP Integration with Azure&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/05-AdvancedTopics/mcp-integration/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.2&lt;/td&gt; &#xA;   &lt;td&gt;Multi-modality&lt;/td&gt; &#xA;   &lt;td&gt;Working with multiple modalities&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/05-AdvancedTopics/mcp-multi-modality/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.3&lt;/td&gt; &#xA;   &lt;td&gt;OAuth2 Demo&lt;/td&gt; &#xA;   &lt;td&gt;Implement OAuth2 authentication&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/05-AdvancedTopics/mcp-oauth2-demo/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.4&lt;/td&gt; &#xA;   &lt;td&gt;Root Contexts&lt;/td&gt; &#xA;   &lt;td&gt;Understand and implement root contexts&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/05-AdvancedTopics/mcp-root-contexts/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.5&lt;/td&gt; &#xA;   &lt;td&gt;Routing&lt;/td&gt; &#xA;   &lt;td&gt;MCP routing strategies&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/05-AdvancedTopics/mcp-routing/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.6&lt;/td&gt; &#xA;   &lt;td&gt;Sampling&lt;/td&gt; &#xA;   &lt;td&gt;Sampling techniques in MCP&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/05-AdvancedTopics/mcp-sampling/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.7&lt;/td&gt; &#xA;   &lt;td&gt;Scaling&lt;/td&gt; &#xA;   &lt;td&gt;Scale MCP implementations&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/05-AdvancedTopics/mcp-scaling/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.8&lt;/td&gt; &#xA;   &lt;td&gt;Security&lt;/td&gt; &#xA;   &lt;td&gt;Advanced security considerations&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/05-AdvancedTopics/mcp-security/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.9&lt;/td&gt; &#xA;   &lt;td&gt;Web Search&lt;/td&gt; &#xA;   &lt;td&gt;Implement web search capabilities&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/05-AdvancedTopics/web-search-mcp/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.10&lt;/td&gt; &#xA;   &lt;td&gt;Realtime Streaming&lt;/td&gt; &#xA;   &lt;td&gt;Build realtime streaming functionality&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/05-AdvancedTopics/mcp-realtimestreaming/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.11&lt;/td&gt; &#xA;   &lt;td&gt;Realtime Search&lt;/td&gt; &#xA;   &lt;td&gt;Implement realtime search&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/05-AdvancedTopics/mcp-realtimesearch/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.12&lt;/td&gt; &#xA;   &lt;td&gt;Entra ID Auth&lt;/td&gt; &#xA;   &lt;td&gt;Authentication with Microsoft Entra ID&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/05-AdvancedTopics/mcp-security-entra/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.13&lt;/td&gt; &#xA;   &lt;td&gt;Foundry Integration&lt;/td&gt; &#xA;   &lt;td&gt;Integrate with Azure AI Foundry&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/05-AdvancedTopics/mcp-foundry-agent-integration/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.14&lt;/td&gt; &#xA;   &lt;td&gt;Context Engineering&lt;/td&gt; &#xA;   &lt;td&gt;Techniques for effective context engineering&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/05-AdvancedTopics/mcp-contextengineering/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Module 6-10: Community &amp;amp; Best Practices&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;06&lt;/td&gt; &#xA;   &lt;td&gt;Community Contributions&lt;/td&gt; &#xA;   &lt;td&gt;How to contribute to the MCP ecosystem&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/06-CommunityContributions/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;07&lt;/td&gt; &#xA;   &lt;td&gt;Insights from Early Adoption&lt;/td&gt; &#xA;   &lt;td&gt;Real-world implementation stories&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/07-LessonsFromEarlyAdoption/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;08&lt;/td&gt; &#xA;   &lt;td&gt;Best Practices for MCP&lt;/td&gt; &#xA;   &lt;td&gt;Performance, fault-tolerance, resilience&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/08-BestPractices/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;09&lt;/td&gt; &#xA;   &lt;td&gt;MCP Case Studies&lt;/td&gt; &#xA;   &lt;td&gt;Practical implementation examples&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/09-CaseStudy/README.md&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;Hands-on Workshop&lt;/td&gt; &#xA;   &lt;td&gt;Building an MCP Server with AI Toolkit&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/10-StreamliningAIWorkflowsBuildingAnMCPServerWithAIToolkit/README.md&#34;&gt;Lab&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;💻 Sample Code Projects&lt;/h3&gt; &#xA;&lt;h4&gt;Basic MCP Calculator Samples&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C#&lt;/td&gt; &#xA;   &lt;td&gt;MCP Server Example&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/03-GettingStarted/samples/csharp/README.md&#34;&gt;View Code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Java&lt;/td&gt; &#xA;   &lt;td&gt;MCP Calculator&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/03-GettingStarted/samples/java/calculator/README.md&#34;&gt;View Code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JavaScript&lt;/td&gt; &#xA;   &lt;td&gt;MCP Demo&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/03-GettingStarted/samples/javascript/README.md&#34;&gt;View Code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;MCP Server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/03-GettingStarted/samples/python/mcp_calculator_server.py&#34;&gt;View Code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TypeScript&lt;/td&gt; &#xA;   &lt;td&gt;MCP Example&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/03-GettingStarted/samples/typescript/README.md&#34;&gt;View Code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Advanced MCP Implementations&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C#&lt;/td&gt; &#xA;   &lt;td&gt;Advanced Sample&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/04-PracticalImplementation/samples/csharp/README.md&#34;&gt;View Code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Java&lt;/td&gt; &#xA;   &lt;td&gt;Container App Example&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/04-PracticalImplementation/samples/java/containerapp/README.md&#34;&gt;View Code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JavaScript&lt;/td&gt; &#xA;   &lt;td&gt;Advanced Sample&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/04-PracticalImplementation/samples/javascript/README.md&#34;&gt;View Code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;Complex Implementation&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/04-PracticalImplementation/samples/python/mcp_sample.py&#34;&gt;View Code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TypeScript&lt;/td&gt; &#xA;   &lt;td&gt;Container Sample&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/04-PracticalImplementation/samples/typescript/README.md&#34;&gt;View Code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🎯 Prerequisites for Learning MCP&lt;/h2&gt; &#xA;&lt;p&gt;To get the most out of this curriculum, you should have:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Basic knowledge of programming in at least one of the following languages: C#, Java, JavaScript, Python, or TypeScript&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Understanding of client-server model and APIs&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Familiarity with REST and HTTP concepts&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(Optional) Background in AI/ML concepts&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Joining our community discussions for support&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📚 Study Guide &amp;amp; Resources&lt;/h2&gt; &#xA;&lt;p&gt;This repository includes several resources to help you navigate and learn effectively:&lt;/p&gt; &#xA;&lt;h3&gt;Study Guide&lt;/h3&gt; &#xA;&lt;p&gt;A comprehensive &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/study_guide.md&#34;&gt;Study Guide&lt;/a&gt; is available to help you navigate this repository effectively. The guide includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A visual curriculum map showing all topics covered&lt;/li&gt; &#xA; &lt;li&gt;Detailed breakdown of each repository section&lt;/li&gt; &#xA; &lt;li&gt;Guidance on how to use sample projects&lt;/li&gt; &#xA; &lt;li&gt;Recommended learning paths for different skill levels&lt;/li&gt; &#xA; &lt;li&gt;Additional resources to complement your learning journey&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Changelog&lt;/h3&gt; &#xA;&lt;p&gt;We maintain a detailed &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/changelog.md&#34;&gt;Changelog&lt;/a&gt; that tracks all significant updates to the curriculum materials, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New content additions&lt;/li&gt; &#xA; &lt;li&gt;Structural changes&lt;/li&gt; &#xA; &lt;li&gt;Feature improvements&lt;/li&gt; &#xA; &lt;li&gt;Documentation updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🛠️ How to Use This Curriculum Effectively&lt;/h2&gt; &#xA;&lt;p&gt;Each lesson in this guide includes:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clear explanations of MCP concepts&lt;/li&gt; &#xA; &lt;li&gt;Live code examples in multiple languages&lt;/li&gt; &#xA; &lt;li&gt;Exercises to build real MCP applications&lt;/li&gt; &#xA; &lt;li&gt;Extra resources for advanced learners&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;🌟 Community Thanks&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to Microsoft Valued Professional &lt;a href=&#34;https://www.linkedin.com/in/shivam2003/&#34;&gt;Shivam Goyal&lt;/a&gt; for contributing important code samples.&lt;/p&gt; &#xA;&lt;h2&gt;📜 License Information&lt;/h2&gt; &#xA;&lt;p&gt;This content is licensed under the &lt;strong&gt;MIT License&lt;/strong&gt;. For terms and conditions, see the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/mcp-for-beginners/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🤝 Contribution Guidelines&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;📂 Repository Structure&lt;/h2&gt; &#xA;&lt;p&gt;The repository is organized as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Core Curriculum (00-10)&lt;/strong&gt;: The main content organized in ten sequential modules&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;images/&lt;/strong&gt;: Diagrams and illustrations used throughout the curriculum&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;translations/&lt;/strong&gt;: Multi-language support with automated translations&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;translated_images/&lt;/strong&gt;: Localized versions of diagrams and illustrations&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;study_guide.md&lt;/strong&gt;: Comprehensive guide to navigating the repository&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;changelog.md&lt;/strong&gt;: Record of all significant changes to the curriculum materials&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;mcp.json&lt;/strong&gt;: Configuration file for MCP specification&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CODE_OF_CONDUCT.md, LICENSE, SECURITY.md, SUPPORT.md&lt;/strong&gt;: Project governance documents&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🎒 Other Courses&lt;/h2&gt; &#xA;&lt;p&gt;Our team produces other courses! Check out:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/ai-agents-for-beginners?WT.mc_id=academic-105485-koreyst&#34;&gt;AI Agents For Beginners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/Generative-AI-for-beginners-dotnet?WT.mc_id=academic-105485-koreyst&#34;&gt;Generative AI for Beginners using .NET&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/generative-ai-with-javascript?WT.mc_id=academic-105485-koreyst&#34;&gt;Generative AI for Beginners using JavaScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/generative-ai-for-beginners?WT.mc_id=academic-105485-koreyst&#34;&gt;Generative AI for Beginners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/ml-beginners?WT.mc_id=academic-105485-koreyst&#34;&gt;ML for Beginners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/datascience-beginners?WT.mc_id=academic-105485-koreyst&#34;&gt;Data Science for Beginners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/ai-beginners?WT.mc_id=academic-105485-koreyst&#34;&gt;AI for Beginners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/Security-101??WT.mc_id=academic-96948-sayoung&#34;&gt;Cybersecurity for Beginners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/webdev-beginners?WT.mc_id=academic-105485-koreyst&#34;&gt;Web Dev for Beginners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/iot-beginners?WT.mc_id=academic-105485-koreyst&#34;&gt;IoT for Beginners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/xr-development-for-beginners?WT.mc_id=academic-105485-koreyst&#34;&gt;XR Development for Beginners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/GitHubCopilotAI?WT.mc_id=academic-105485-koreyst&#34;&gt;Mastering GitHub Copilot for AI Paired Programming&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/mastering-github-copilot-for-dotnet-csharp-developers?WT.mc_id=academic-105485-koreyst&#34;&gt;Mastering GitHub Copilot for C#/.NET Developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/CopilotAdventures?WT.mc_id=academic-105485-koreyst&#34;&gt;Choose Your Own Copilot Adventure&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;™️ Trademark Notice&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos is subject to those third-parties&#39; policies.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nikmcfly/ANUS</title>
    <updated>2025-08-01T01:36:28Z</updated>
    <id>tag:github.com,2025-08-01:/nikmcfly/ANUS</id>
    <link href="https://github.com/nikmcfly/ANUS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🍑 Anus: Autonomous Networked Utility System&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/nikmcfly/ANUS/main/assets/anus_logo.png&#34; alt=&#34;Anus AI Logo&#34; width=&#34;200&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/nikmcfly/ANUS/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.11+-blue.svg?sanitize=true&#34; alt=&#34;Python version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34; alt=&#34;Code style: black&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nikmcfly/ANUS/raw/main/CONTRIBUTING.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;Contributions welcome&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/nikmcfly/ANUS/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/nikmcfly/ANUS.svg?style=social&amp;amp;label=Star&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nikmcfly/ANUS/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/nikmcfly/ANUS.svg?style=social&amp;amp;label=Fork&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nikmcfly/ANUS/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/nikmcfly/ANUS.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://makeapullrequest.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://anus-ai.github.io/docs&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-latest-brightgreen.svg?sanitize=true&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/goanus&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Telegram-blue?logo=telegram&amp;amp;logoColor=white&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikmcfly/ANUS/main/#-introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikmcfly/ANUS/main/#-why-anus&#34;&gt;Why Anus?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikmcfly/ANUS/main/#-features--capabilities&#34;&gt;Features &amp;amp; Capabilities&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikmcfly/ANUS/main/#-installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikmcfly/ANUS/main/#-quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikmcfly/ANUS/main/#-usage-examples&#34;&gt;Usage Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikmcfly/ANUS/main/#-documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikmcfly/ANUS/main/#-contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikmcfly/ANUS/main/#-community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nikmcfly/ANUS/main/#-license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🌟 Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Anus&lt;/strong&gt; (Autonomous Networked Utility System) is a powerful, flexible, and accessible open-source AI agent framework designed to revolutionize task automation. Built with modern AI technologies and best practices, Anus represents the next generation of AI agent frameworks, offering unparalleled capabilities and ease of use.&lt;/p&gt; &#xA;&lt;p&gt;Anus empowers users to create AI agents that can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Execute complex tasks through natural language instructions&lt;/li&gt; &#xA; &lt;li&gt;Collaborate in multi-agent environments to solve problems&lt;/li&gt; &#xA; &lt;li&gt;Interact with web services, documents, and code&lt;/li&gt; &#xA; &lt;li&gt;Process multimodal inputs including text, images, and audio&lt;/li&gt; &#xA; &lt;li&gt;Adapt to different domains and use cases&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Whether you&#39;re a developer looking to build AI-powered applications, a researcher exploring agent-based systems, or an enthusiast interested in the latest AI technologies, Anus provides the tools and flexibility you need to succeed.&lt;/p&gt; &#xA;&lt;h2&gt;💡 Why Anus?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Truly Open Source&lt;/strong&gt;: No barriers, no invite codes, just pure open-source goodness&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hybrid Architecture&lt;/strong&gt;: Combines single-agent simplicity with multi-agent power&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Flexible Model Support&lt;/strong&gt;: Works with OpenAI models, open-source models, or your own&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Comprehensive Tool Ecosystem&lt;/strong&gt;: Web automation, document processing, code execution, and more&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Community-First Design&lt;/strong&gt;: Built for contributions and extensions&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Transparent Operation&lt;/strong&gt;: Clear explanations of all agent actions and decisions&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cross-Platform&lt;/strong&gt;: Works across different operating systems and environments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;✨ Features &amp;amp; Capabilities&lt;/h2&gt; &#xA;&lt;h3&gt;🧠 Advanced AI Agent Architecture&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hybrid Agent System&lt;/strong&gt;: Seamlessly switch between single-agent and multi-agent modes based on task complexity&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dynamic Task Planning&lt;/strong&gt;: Sophisticated planning system that breaks down complex tasks into manageable steps&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Adaptive Resource Allocation&lt;/strong&gt;: Intelligently allocates computational resources based on task requirements&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Memory Management&lt;/strong&gt;: Short-term and long-term memory systems for context retention across conversations&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Explainable Actions&lt;/strong&gt;: Transparent reasoning and decision-making processes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🤝 Multi-Agent Collaboration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Specialized Agent Roles&lt;/strong&gt;: Pre-defined roles like Researcher, Coder, Planner, and more&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Custom Role Creation&lt;/strong&gt;: Define your own agent roles with specific capabilities and knowledge&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Inter-Agent Communication&lt;/strong&gt;: Structured protocols for efficient agent-to-agent communication&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Consensus Mechanisms&lt;/strong&gt;: Collaborative decision-making through agent voting and consensus&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Conflict Resolution&lt;/strong&gt;: Sophisticated protocols for resolving disagreements between agents&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🛠️ Comprehensive Tool Ecosystem&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Web Interaction&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Full browser automation via Playwright&lt;/li&gt; &#xA;   &lt;li&gt;Web scraping and data extraction&lt;/li&gt; &#xA;   &lt;li&gt;Form filling and submission&lt;/li&gt; &#xA;   &lt;li&gt;Authentication handling&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Information Retrieval&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Search engine integration&lt;/li&gt; &#xA;   &lt;li&gt;Wikipedia access&lt;/li&gt; &#xA;   &lt;li&gt;News and current events sources&lt;/li&gt; &#xA;   &lt;li&gt;Specialized knowledge bases&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Document Processing&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;PDF parsing and analysis&lt;/li&gt; &#xA;   &lt;li&gt;Office document handling (Word, Excel, PowerPoint)&lt;/li&gt; &#xA;   &lt;li&gt;Image recognition and OCR&lt;/li&gt; &#xA;   &lt;li&gt;Data extraction and transformation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Code Execution&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Secure Python execution sandbox&lt;/li&gt; &#xA;   &lt;li&gt;Multiple language support&lt;/li&gt; &#xA;   &lt;li&gt;Package management&lt;/li&gt; &#xA;   &lt;li&gt;Output capture and analysis&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multimodal Processing&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Image analysis and generation&lt;/li&gt; &#xA;   &lt;li&gt;Audio processing and transcription&lt;/li&gt; &#xA;   &lt;li&gt;Video analysis and summarization&lt;/li&gt; &#xA;   &lt;li&gt;Chart and graph interpretation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🔄 Flexible Model Integration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;OpenAI API Support&lt;/strong&gt;: Seamless integration with GPT-4 and newer models&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open-Source Models&lt;/strong&gt;: Support for Llama, Mistral, and other open-source models&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Local Deployment&lt;/strong&gt;: Run models locally for privacy and reduced costs&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Model Switching&lt;/strong&gt;: Automatically select the appropriate model based on task requirements&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fallback Mechanisms&lt;/strong&gt;: Gracefully handle API issues by switching to alternative models&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;👥 User-Friendly Interfaces&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Command-Line Interface&lt;/strong&gt;: Simple and intuitive commands for terminal users&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Web Interface&lt;/strong&gt;: Optional browser-based dashboard for visual interaction&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;API Integration&lt;/strong&gt;: RESTful API for embedding Anus in other applications&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Conversation History&lt;/strong&gt;: Review and continue previous conversations&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Task Monitoring&lt;/strong&gt;: Track progress of long-running tasks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🔒 Privacy and Security&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Local Execution&lt;/strong&gt;: Process sensitive data locally without sending to external APIs&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;API Key Management&lt;/strong&gt;: Secure handling of API keys and credentials&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Permission System&lt;/strong&gt;: Fine-grained control over agent capabilities&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Audit Logging&lt;/strong&gt;: Comprehensive logging of all agent actions&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sandboxed Execution&lt;/strong&gt;: Secure environment for running untrusted code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🧩 Extensibility&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Plugin System&lt;/strong&gt;: Easily extend functionality with custom plugins&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Custom Tools&lt;/strong&gt;: Create your own tools to expand agent capabilities&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Model Adapters&lt;/strong&gt;: Add support for new AI models&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Middleware&lt;/strong&gt;: Insert custom processing steps in the agent workflow&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Event Hooks&lt;/strong&gt;: React to specific events in the agent lifecycle&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔧 Installation&lt;/h2&gt; &#xA;&lt;p&gt;Anus AI supports multiple installation methods to accommodate different user preferences and environments.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.11 or higher&lt;/li&gt; &#xA; &lt;li&gt;pip (Python package installer)&lt;/li&gt; &#xA; &lt;li&gt;Git&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Method 1: Pip Installation (Recommended for Users)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install from PyPI&#xA;pip install anus-ai&#xA;&#xA;# Verify installation&#xA;anus --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Method 2: From Source (Recommended for Developers)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Clone the repository&#xA;git clone https://github.com/nikmcfly/ANUS.git&#xA;cd ANUS&#xA;&#xA;# Create and activate a virtual environment&#xA;python -m venv venv&#xA;source venv/bin/activate  # On Windows: venv\Scripts\activate&#xA;&#xA;# Install in development mode&#xA;pip install -e .&#xA;&#xA;# Verify installation&#xA;anus --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Method 3: Using Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Pull the Docker image&#xA;docker pull anusai/anus:latest&#xA;&#xA;# Run Anus in a container&#xA;docker run -it anusai/anus:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Method 4: Using Conda&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create a new conda environment&#xA;conda create -n anus python=3.11&#xA;conda activate anus&#xA;&#xA;# Install Anus&#xA;pip install anus-ai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Platform-Specific Instructions&lt;/h3&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install required system dependencies&#xA;pip install windows-curses&#xA;&#xA;# If using browser automation&#xA;playwright install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;macOS&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install required system dependencies&#xA;brew install python@3.11&#xA;&#xA;# If using browser automation&#xA;playwright install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install required system dependencies&#xA;sudo apt-get update&#xA;sudo apt-get install -y python3.11 python3.11-venv&#xA;&#xA;# If using browser automation&#xA;playwright install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Optional Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Anus has several optional features that require additional dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# For document processing&#xA;pip install anus-ai[documents]&#xA;&#xA;# For browser automation&#xA;pip install anus-ai[browser]&#xA;&#xA;# For code execution&#xA;pip install anus-ai[code]&#xA;&#xA;# For all optional features&#xA;pip install anus-ai[all]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;After installation, you&#39;ll need to configure Anus with your API keys:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a configuration file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;anus init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Edit the generated &lt;code&gt;.anus/config.yaml&lt;/code&gt; file with your API keys:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;llm:&#xA;  provider: openai&#xA;  api_key: your_openai_api_key&#xA;  model: gpt-4o&#xA;&#xA;# Optional: Configure other providers&#xA;anthropic:&#xA;  api_key: your_anthropic_api_key&#xA;&#xA;# Optional: Configure tool-specific settings&#xA;browser:&#xA;  headless: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Once installed, you can start using Anus right away:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Run Anus with a simple task&#xA;anus run &#34;Find the latest news about artificial intelligence&#34;&#xA;&#xA;# Run in interactive mode&#xA;anus interactive&#xA;&#xA;# Run with a specific configuration file&#xA;anus run --config custom_config.yaml &#34;Summarize this article: https://example.com/article&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;📋 Usage Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Basic Examples&lt;/h3&gt; &#xA;&lt;h4&gt;Simple Question Answering&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from anus import Agent&#xA;&#xA;# Create a single agent&#xA;agent = Agent()&#xA;&#xA;# Ask a simple question&#xA;response = agent.run(&#34;What is the capital of France?&#34;)&#xA;print(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Web Search&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from anus import Agent&#xA;from anus.tools import SearchTool&#xA;&#xA;# Create an agent with search capabilities&#xA;agent = Agent(tools=[SearchTool()])&#xA;&#xA;# Search for information&#xA;response = agent.run(&#34;Find the latest research on quantum computing&#34;)&#xA;print(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Document Analysis&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from anus import Agent&#xA;from anus.tools import DocumentTool&#xA;&#xA;# Create an agent with document processing capabilities&#xA;agent = Agent(tools=[DocumentTool()])&#xA;&#xA;# Analyze a PDF document&#xA;response = agent.run(&#34;Summarize this PDF: /path/to/document.pdf&#34;)&#xA;print(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Advanced Examples&lt;/h3&gt; &#xA;&lt;h4&gt;Multi-Agent Collaboration&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from anus import Society, Agent&#xA;&#xA;# Create specialized agents&#xA;researcher = Agent(role=&#34;researcher&#34;)&#xA;analyst = Agent(role=&#34;analyst&#34;)&#xA;writer = Agent(role=&#34;writer&#34;)&#xA;&#xA;# Create a society of agents&#xA;society = Society(agents=[researcher, analyst, writer])&#xA;&#xA;# Execute a complex task with collaboration&#xA;response = society.run(&#xA;    &#34;Research the impact of artificial intelligence on healthcare, &#34; &#xA;    &#34;analyze the findings, and write a comprehensive report&#34;&#xA;)&#xA;print(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Browser Automation&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from anus import Agent&#xA;from anus.tools import BrowserTool&#xA;&#xA;# Create an agent with browser capabilities&#xA;agent = Agent(tools=[BrowserTool()])&#xA;&#xA;# Perform a web task&#xA;response = agent.run(&#xA;    &#34;Go to weather.com, check the weather forecast for New York City for the next 5 days, &#34;&#xA;    &#34;and create a summary table&#34;&#xA;)&#xA;print(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Code Generation and Execution&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from anus import Agent&#xA;from anus.tools import CodeTool&#xA;&#xA;# Create an agent with code execution capabilities&#xA;agent = Agent(tools=[CodeTool()])&#xA;&#xA;# Generate and execute code&#xA;response = agent.run(&#xA;    &#34;Create a Python script that generates a fractal tree visualization using matplotlib&#34;&#xA;)&#xA;print(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Command-Line Interface Examples&lt;/h3&gt; &#xA;&lt;h4&gt;Running Tasks&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Simple information retrieval&#xA;anus run &#34;What is the population of Tokyo?&#34;&#xA;&#xA;# Web search with specific parameters&#xA;anus run --search-depth=3 &#34;Find recent breakthroughs in fusion energy research&#34;&#xA;&#xA;# Document processing&#xA;anus run --file=/path/to/report.pdf &#34;Extract all financial data from this report&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Interactive Mode&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Start interactive session&#xA;anus interactive&#xA;&#xA;# In interactive mode, you can have a conversation:&#xA;# &amp;gt; Tell me about the history of artificial intelligence&#xA;# &amp;gt; Now create a timeline of major AI milestones&#xA;# &amp;gt; Generate a visualization of this timeline&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Multi-Agent Mode&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Run a complex task with multiple agents&#xA;anus run --mode=multi &#34;Research, analyze, and summarize the current state of renewable energy technologies&#34;&#xA;&#xA;# Specify particular agent roles&#xA;anus run --mode=multi --roles=researcher,analyst,writer &#34;Create a comprehensive market analysis for electric vehicles&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;API Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from anus.api import AnusAPI&#xA;&#xA;# Initialize the API client&#xA;api = AnusAPI(api_key=&#34;your_api_key&#34;)&#xA;&#xA;# Send a request&#xA;response = api.process_task(&#xA;    task=&#34;Generate a business plan for a sustainable fashion startup&#34;,&#xA;    mode=&#34;multi&#34;,&#xA;    output_format=&#34;markdown&#34;&#xA;)&#xA;&#xA;# Print or save the response&#xA;print(response.result)&#xA;with open(&#34;business_plan.md&#34;, &#34;w&#34;) as f:&#xA;    f.write(response.result)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Advanced Configuration&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from anus import Agent, Config&#xA;&#xA;# Create a custom configuration&#xA;config = Config(&#xA;    llm={&#xA;        &#34;provider&#34;: &#34;anthropic&#34;,&#xA;        &#34;model&#34;: &#34;claude-3-opus&#34;,&#xA;        &#34;temperature&#34;: 0.7,&#xA;    },&#xA;    memory={&#xA;        &#34;type&#34;: &#34;persistent&#34;,&#xA;        &#34;path&#34;: &#34;./agent_memory&#34;,&#xA;    },&#xA;    tools={&#xA;        &#34;browser&#34;: {&#34;headless&#34;: False},&#xA;        &#34;code&#34;: {&#34;sandbox&#34;: True},&#xA;    }&#xA;)&#xA;&#xA;# Create an agent with custom configuration&#xA;agent = Agent(config=config)&#xA;&#xA;# Run a task&#xA;response = agent.run(&#34;Create an interactive data visualization for climate change data&#34;)&#xA;print(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;📚 Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For detailed documentation, visit our &lt;a href=&#34;https://anus-ai.github.io/docs&#34;&gt;Documentation Site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://anus-ai.github.io/docs/installation&#34;&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://anus-ai.github.io/docs/getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://anus-ai.github.io/docs/architecture&#34;&gt;Architecture Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://anus-ai.github.io/docs/api&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://anus-ai.github.io/docs/examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://anus-ai.github.io/docs/contributing&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;👥 Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions from the community! Anus is designed to be community-driven, and your input helps make it better for everyone.&lt;/p&gt; &#xA;&lt;h3&gt;Ways to Contribute&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Code Contributions&lt;/strong&gt;: Implement new features, fix bugs, or improve performance&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: Improve or expand documentation, add examples, fix typos&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bug Reports&lt;/strong&gt;: Report bugs or suggest improvements&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Feature Requests&lt;/strong&gt;: Suggest new features or enhancements&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Community Support&lt;/strong&gt;: Help answer questions and support other users&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Getting Started with Contributing&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fork the Repository&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Fork the repository on GitHub, then clone your fork&#xA;git clone https://github.com/your-username/anus.git&#xA;cd anus&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Set Up Development Environment&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create and activate a virtual environment&#xA;python -m venv venv&#xA;source venv/bin/activate  # On Windows: venv\Scripts\activate&#xA;&#xA;# Install development dependencies&#xA;pip install -e &#34;.[dev]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Create a Branch&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create a branch for your contribution&#xA;git checkout -b feature/your-feature-name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Make Your Changes&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow the code style guidelines&lt;/li&gt; &#xA; &lt;li&gt;Add tests for new functionality&lt;/li&gt; &#xA; &lt;li&gt;Update documentation as needed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run Tests&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Run the test suite&#xA;pytest&#xA;&#xA;# Run linting&#xA;flake8&#xA;mypy anus&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Submit a Pull Request&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Push your changes to your fork&lt;/li&gt; &#xA; &lt;li&gt;Submit a pull request from your branch to our main branch&lt;/li&gt; &#xA; &lt;li&gt;Provide a clear description of the changes and any related issues&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Code Style Guidelines&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow &lt;a href=&#34;https://pep8.org/&#34;&gt;PEP 8&lt;/a&gt; for Python code style&lt;/li&gt; &#xA; &lt;li&gt;Use type hints for all function parameters and return values&lt;/li&gt; &#xA; &lt;li&gt;Write docstrings for all functions, classes, and modules&lt;/li&gt; &#xA; &lt;li&gt;Keep functions focused and small (under 50 lines when possible)&lt;/li&gt; &#xA; &lt;li&gt;Use meaningful variable and function names&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Commit Message Guidelines&lt;/h3&gt; &#xA;&lt;p&gt;We follow the &lt;a href=&#34;https://www.conventionalcommits.org/&#34;&gt;Conventional Commits&lt;/a&gt; specification:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;type&amp;gt;(&amp;lt;scope&amp;gt;): &amp;lt;description&amp;gt;&#xA;&#xA;[optional body]&#xA;&#xA;[optional footer(s)]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Types include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;feat&lt;/code&gt;: A new feature&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fix&lt;/code&gt;: A bug fix&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docs&lt;/code&gt;: Documentation changes&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;style&lt;/code&gt;: Code style changes (formatting, etc.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;refactor&lt;/code&gt;: Code changes that neither fix bugs nor add features&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;test&lt;/code&gt;: Adding or modifying tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;chore&lt;/code&gt;: Changes to the build process or auxiliary tools&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Pull Request Process&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Update the README.md or documentation with details of changes if appropriate&lt;/li&gt; &#xA; &lt;li&gt;Update the CHANGELOG.md with details of changes&lt;/li&gt; &#xA; &lt;li&gt;The PR should work for Python 3.11 and above&lt;/li&gt; &#xA; &lt;li&gt;PRs require approval from at least one maintainer&lt;/li&gt; &#xA; &lt;li&gt;Once approved, a maintainer will merge your PR&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Code of Conduct&lt;/h3&gt; &#xA;&lt;p&gt;Please note that this project is released with a &lt;a href=&#34;https://raw.githubusercontent.com/nikmcfly/ANUS/main/CODE_OF_CONDUCT.md&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project you agree to abide by its terms.&lt;/p&gt; &#xA;&lt;h2&gt;🌐 Community&lt;/h2&gt; &#xA;&lt;p&gt;Join our community to get help, share ideas, and contribute to the project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/goanus&#34;&gt;Telegram Channel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📝 License&lt;/h2&gt; &#xA;&lt;p&gt;Anus is released under the &lt;a href=&#34;https://raw.githubusercontent.com/nikmcfly/ANUS/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;MIT License&#xA;&#xA;Copyright (c) 2025 Anus AI Team&#xA;&#xA;Permission is hereby granted, free of charge, to any person obtaining a copy&#xA;of this software and associated documentation files (the &#34;Software&#34;), to deal&#xA;in the Software without restriction, including without limitation the rights&#xA;to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&#xA;copies of the Software, and to permit persons to whom the Software is&#xA;furnished to do so, subject to the following conditions:&#xA;&#xA;The above copyright notice and this permission notice shall be included in all&#xA;copies or substantial portions of the Software.&#xA;&#xA;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#xA;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#xA;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#xA;AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#xA;LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&#xA;OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE&#xA;SOFTWARE.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>