<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-13T01:35:14Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>quantumlib/Cirq</title>
    <updated>2024-12-13T01:35:14Z</updated>
    <id>tag:github.com,2024-12-13:/quantumlib/Cirq</id>
    <link href="https://github.com/quantumlib/Cirq" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Python framework for creating, editing, and invoking Noisy Intermediate Scale Quantum (NISQ) circuits.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. image:: &lt;a href=&#34;https://raw.githubusercontent.com/quantumlib/Cirq/main/docs/images/Cirq_logo_color.png&#34;&gt;https://raw.githubusercontent.com/quantumlib/Cirq/main/docs/images/Cirq_logo_color.png&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/quantumlib/cirq&#34;&gt;https://github.com/quantumlib/cirq&lt;/a&gt; :alt: Cirq :width: 500px&lt;/p&gt; &#xA;&lt;p&gt;Cirq is a Python library for writing, manipulating, and optimizing quantum circuits and running them against quantum computers and simulators.&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://github.com/quantumlib/Cirq/actions/workflows/ci.yml/badge.svg?event=schedule&#34;&gt;https://github.com/quantumlib/Cirq/actions/workflows/ci.yml/badge.svg?event=schedule&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/quantumlib/Cirq&#34;&gt;https://github.com/quantumlib/Cirq&lt;/a&gt; :alt: Build Status&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://codecov.io/gh/quantumlib/Cirq/branch/main/graph/badge.svg&#34;&gt;https://codecov.io/gh/quantumlib/Cirq/branch/main/graph/badge.svg&lt;/a&gt; :target: &lt;a href=&#34;https://codecov.io/gh/quantumlib/Cirq&#34;&gt;https://codecov.io/gh/quantumlib/Cirq&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://badge.fury.io/py/cirq.svg&#34;&gt;https://badge.fury.io/py/cirq.svg&lt;/a&gt; :target: &lt;a href=&#34;https://badge.fury.io/py/cirq&#34;&gt;https://badge.fury.io/py/cirq&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation and Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Cirq documentation is available at &lt;code&gt;quantumai.google/cirq &amp;lt;https://quantumai.google/cirq&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;Documentation for the latest &lt;strong&gt;pre-release&lt;/strong&gt; version of cirq (tracks the repository&#39;s main branch; what you get if you &lt;code&gt;pip install cirq~=1.0.dev&lt;/code&gt;), is available &lt;code&gt;here &amp;lt;https://quantumai.google/reference/python/cirq/all_symbols?version=nightly&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;Documentation for the latest &lt;strong&gt;stable&lt;/strong&gt; version of cirq (what you get if you &lt;code&gt;pip install cirq&lt;/code&gt;) is available &lt;code&gt;here &amp;lt;https://quantumai.google/reference/python/cirq/all_symbols&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Installation &amp;lt;https://quantumai.google/cirq/start/install&amp;gt;&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Documentation &amp;lt;https://quantumai.google/cirq&amp;gt;&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Tutorials &amp;lt;https://quantumai.google/cirq/build&amp;gt;&lt;/code&gt;_&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For a comprehensive list all of the interactive Jupyter Notebooks in our repo (including the ones not yet published to the site) open our repo in &lt;code&gt;Colab &amp;lt;https://colab.research.google.com/github/quantumlib/Cirq&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;For the latest news regarding Cirq, sign up to the &lt;code&gt;Cirq-announce email list &amp;lt;https://groups.google.com/forum/#!forum/cirq-announce&amp;gt;&lt;/code&gt;__!&lt;/p&gt; &#xA;&lt;h2&gt;Hello Qubit&lt;/h2&gt; &#xA;&lt;p&gt;A simple example to get you up and running:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: python&lt;/p&gt; &#xA;&lt;p&gt;import cirq&lt;/p&gt; &#xA;&lt;h1&gt;Pick a qubit.&lt;/h1&gt; &#xA;&lt;p&gt;qubit = cirq.GridQubit(0, 0)&lt;/p&gt; &#xA;&lt;h1&gt;Create a circuit&lt;/h1&gt; &#xA;&lt;p&gt;circuit = cirq.Circuit( cirq.X(qubit)**0.5, # Square root of NOT. cirq.measure(qubit, key=&#39;m&#39;) # Measurement. ) print(&#34;Circuit:&#34;) print(circuit)&lt;/p&gt; &#xA;&lt;h1&gt;Simulate the circuit several times.&lt;/h1&gt; &#xA;&lt;p&gt;simulator = cirq.Simulator() result = simulator.run(circuit, repetitions=20) print(&#34;Results:&#34;) print(result)&lt;/p&gt; &#xA;&lt;p&gt;Example output:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block::&lt;/p&gt; &#xA;&lt;p&gt;Circuit: (0, 0): ───X^0.5───M(&#39;m&#39;)─── Results: m=11000111111011001000&lt;/p&gt; &#xA;&lt;h2&gt;Feature requests / Bugs / Questions&lt;/h2&gt; &#xA;&lt;p&gt;If you have feature requests or you found a bug, please &lt;code&gt;file them on GitHub &amp;lt;https://github.com/quantumlib/Cirq/issues/new/choose&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;For questions about how to use Cirq post to &lt;code&gt;Quantum Computing Stack Exchange &amp;lt;https://quantumcomputing.stackexchange.com/&amp;gt;&lt;/code&gt;__ with the &lt;code&gt;cirq &amp;lt;https://quantumcomputing.stackexchange.com/questions/tagged/cirq&amp;gt;&lt;/code&gt;__ tag.&lt;/p&gt; &#xA;&lt;h2&gt;How to cite Cirq&lt;/h2&gt; &#xA;&lt;p&gt;Cirq is uploaded to Zenodo automatically. Click on the badge below to see all the citation formats for all versions.&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://zenodo.org/badge/DOI/10.5281/zenodo.4062499.svg&#34;&gt;https://zenodo.org/badge/DOI/10.5281/zenodo.4062499.svg&lt;/a&gt; :target: &lt;a href=&#34;https://doi.org/10.5281/zenodo.4062499&#34;&gt;https://doi.org/10.5281/zenodo.4062499&lt;/a&gt; :alt: DOI&lt;/p&gt; &#xA;&lt;h2&gt;Cirq Contributors Community&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions! Before opening your first PR, a good place to start is to read our &lt;code&gt;guidelines &amp;lt;https://github.com/quantumlib/cirq/blob/main/CONTRIBUTING.md&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;We are dedicated to cultivating an open and inclusive community to build software for near term quantum computers. Please read our &lt;code&gt;code of conduct &amp;lt;https://github.com/quantumlib/cirq/blob/main/CODE_OF_CONDUCT.md&amp;gt;&lt;/code&gt;__ for the rules of engagement within our community.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Cirq Cynque&lt;/strong&gt; is our weekly meeting for contributors to discuss upcoming features, designs, issues, community and status of different efforts. To get an invitation please join the &lt;code&gt;cirq-dev email list &amp;lt;https://groups.google.com/forum/#!forum/cirq-dev&amp;gt;&lt;/code&gt;__ which also serves as yet another platform to discuss contributions and design ideas.&lt;/p&gt; &#xA;&lt;h2&gt;See Also&lt;/h2&gt; &#xA;&lt;p&gt;For those interested in using quantum computers to solve problems in chemistry and materials science, we encourage exploring &lt;code&gt;OpenFermion &amp;lt;https://github.com/quantumlib/openfermion&amp;gt;&lt;/code&gt;__ and its sister library for compiling quantum simulation algorithms in Cirq, &lt;code&gt;OpenFermion-Cirq &amp;lt;https://github.com/quantumlib/openfermion-cirq&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;For machine learning enthusiasts, &lt;code&gt;Tensorflow Quantum &amp;lt;https://github.com/tensorflow/quantum&amp;gt;&lt;/code&gt;__ is a great project to check out!&lt;/p&gt; &#xA;&lt;p&gt;For a powerful quantum circuit simulator that integrates well with Cirq, we recommend looking at &lt;code&gt;qsim &amp;lt;https://github.com/quantumlib/qsim&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;Finally, &lt;code&gt;ReCirq &amp;lt;https://github.com/quantumlib/ReCirq&amp;gt;&lt;/code&gt;__ contains real world experiments using Cirq.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;For any questions or concerns not addressed here, please feel free to reach out to &lt;a href=&#34;mailto:quantumai-oss-maintainers@googlegroups.com&#34;&gt;quantumai-oss-maintainers@googlegroups.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Cirq is not an official Google product. Copyright 2019 The Cirq Developers&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pylint-dev/pylint</title>
    <updated>2024-12-13T01:35:14Z</updated>
    <id>tag:github.com,2024-12-13:/pylint-dev/pylint</id>
    <link href="https://github.com/pylint-dev/pylint" rel="alternate"></link>
    <summary type="html">&lt;p&gt;It&#39;s not just a linter that annoys you!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;Pylint&lt;/code&gt;_&lt;/h1&gt; &#xA;&lt;p&gt;.. _&lt;code&gt;Pylint&lt;/code&gt;: &lt;a href=&#34;https://pylint.readthedocs.io/&#34;&gt;https://pylint.readthedocs.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. This is used inside the doc to recover the start of the introduction&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://github.com/pylint-dev/pylint/actions/workflows/tests.yaml/badge.svg?branch=main&#34;&gt;https://github.com/pylint-dev/pylint/actions/workflows/tests.yaml/badge.svg?branch=main&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/pylint-dev/pylint/actions&#34;&gt;https://github.com/pylint-dev/pylint/actions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://codecov.io/gh/pylint-dev/pylint/branch/main/graph/badge.svg?token=ZETEzayrfk&#34;&gt;https://codecov.io/gh/pylint-dev/pylint/branch/main/graph/badge.svg?token=ZETEzayrfk&lt;/a&gt; :target: &lt;a href=&#34;https://codecov.io/gh/pylint-dev/pylint&#34;&gt;https://codecov.io/gh/pylint-dev/pylint&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/pypi/v/pylint.svg&#34;&gt;https://img.shields.io/pypi/v/pylint.svg&lt;/a&gt; :alt: PyPI Package version :target: &lt;a href=&#34;https://pypi.python.org/pypi/pylint&#34;&gt;https://pypi.python.org/pypi/pylint&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://readthedocs.org/projects/pylint/badge/?version=latest&#34;&gt;https://readthedocs.org/projects/pylint/badge/?version=latest&lt;/a&gt; :target: &lt;a href=&#34;https://pylint.readthedocs.io/en/latest/?badge=latest&#34;&gt;https://pylint.readthedocs.io/en/latest/?badge=latest&lt;/a&gt; :alt: Documentation Status&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/badge/code%20style-black-000000.svg&#34;&gt;https://img.shields.io/badge/code%20style-black-000000.svg&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/ambv/black&#34;&gt;https://github.com/ambv/black&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/badge/linting-pylint-yellowgreen&#34;&gt;https://img.shields.io/badge/linting-pylint-yellowgreen&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/pylint-dev/pylint&#34;&gt;https://github.com/pylint-dev/pylint&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://results.pre-commit.ci/badge/github/pylint-dev/pylint/main.svg&#34;&gt;https://results.pre-commit.ci/badge/github/pylint-dev/pylint/main.svg&lt;/a&gt; :target: &lt;a href=&#34;https://results.pre-commit.ci/latest/github/pylint-dev/pylint/main&#34;&gt;https://results.pre-commit.ci/latest/github/pylint-dev/pylint/main&lt;/a&gt; :alt: pre-commit.ci status&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/6328/badge&#34;&gt;https://bestpractices.coreinfrastructure.org/projects/6328/badge&lt;/a&gt; :target: &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/6328&#34;&gt;https://bestpractices.coreinfrastructure.org/projects/6328&lt;/a&gt; :alt: CII Best Practices&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/ossf-scorecard/github.com/PyCQA/pylint?label=openssf%20scorecard&amp;amp;style=flat&#34;&gt;https://img.shields.io/ossf-scorecard/github.com/PyCQA/pylint?label=openssf%20scorecard&amp;amp;style=flat&lt;/a&gt; :target: &lt;a href=&#34;https://api.securityscorecards.dev/projects/github.com/PyCQA/pylint&#34;&gt;https://api.securityscorecards.dev/projects/github.com/PyCQA/pylint&lt;/a&gt; :alt: OpenSSF Scorecard&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/discord/825463413634891776.svg&#34;&gt;https://img.shields.io/discord/825463413634891776.svg&lt;/a&gt; :target: &lt;a href=&#34;https://discord.gg/qYxpadCgkx&#34;&gt;https://discord.gg/qYxpadCgkx&lt;/a&gt; :alt: Discord&lt;/p&gt; &#xA;&lt;h2&gt;What is Pylint?&lt;/h2&gt; &#xA;&lt;p&gt;Pylint is a &lt;code&gt;static code analyser&lt;/code&gt;_ for Python 2 or 3. The latest version supports Python 3.9.0 and above.&lt;/p&gt; &#xA;&lt;p&gt;.. _&lt;code&gt;static code analyser&lt;/code&gt;: &lt;a href=&#34;https://en.wikipedia.org/wiki/Static_code_analysis&#34;&gt;https://en.wikipedia.org/wiki/Static_code_analysis&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pylint analyses your code without actually running it. It checks for errors, enforces a coding standard, looks for &lt;code&gt;code smells&lt;/code&gt;_, and can make suggestions about how the code could be refactored.&lt;/p&gt; &#xA;&lt;p&gt;.. _&lt;code&gt;code smells&lt;/code&gt;: &lt;a href=&#34;https://martinfowler.com/bliki/CodeSmell.html&#34;&gt;https://martinfowler.com/bliki/CodeSmell.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;.. This is used inside the doc to recover the start of the short text for installation&lt;/p&gt; &#xA;&lt;p&gt;For command line use, pylint is installed with::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install pylint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or if you want to also check spelling with &lt;code&gt;enchant&lt;/code&gt; (you might need to &lt;code&gt;install the enchant C library &amp;lt;https://pyenchant.github.io/pyenchant/install.html#installing-the-enchant-c-library&amp;gt;&lt;/code&gt;_):&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: sh&lt;/p&gt; &#xA;&lt;p&gt;pip install pylint[spelling]&lt;/p&gt; &#xA;&lt;p&gt;It can also be integrated in most editors or IDEs. More information can be found &lt;code&gt;in the documentation&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;.. _in the documentation: &lt;a href=&#34;https://pylint.readthedocs.io/en/latest/user_guide/installation/index.html&#34;&gt;https://pylint.readthedocs.io/en/latest/user_guide/installation/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. This is used inside the doc to recover the end of the short text for installation&lt;/p&gt; &#xA;&lt;h2&gt;What differentiates Pylint?&lt;/h2&gt; &#xA;&lt;p&gt;Pylint is not trusting your typing and is inferring the actual values of nodes (for a start because there was no typing when pylint started off) using its internal code representation (astroid). If your code is &lt;code&gt;import logging as argparse&lt;/code&gt;, Pylint can check and know that &lt;code&gt;argparse.error(...)&lt;/code&gt; is in fact a logging call and not an argparse call. This makes pylint slower, but it also lets pylint find more issues if your code is not fully typed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[inference] is the killer feature that keeps us using [pylint] in our project despite how painfully slow it is.&#xA;- `Realist pylint user`_, 2022&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;.. _&lt;code&gt;Realist pylint user&lt;/code&gt;: &lt;a href=&#34;https://github.com/charliermarsh/ruff/issues/970#issuecomment-1381067064&#34;&gt;https://github.com/charliermarsh/ruff/issues/970#issuecomment-1381067064&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;pylint, not afraid of being a little slower than it already is, is also a lot more thorough than other linters. There are more checks, including some opinionated ones that are deactivated by default but can be enabled using configuration.&lt;/p&gt; &#xA;&lt;h2&gt;How to use pylint&lt;/h2&gt; &#xA;&lt;p&gt;Pylint isn&#39;t smarter than you: it may warn you about things that you have conscientiously done or check for some things that you don&#39;t care about. During adoption, especially in a legacy project where pylint was never enforced, it&#39;s best to start with the &lt;code&gt;--errors-only&lt;/code&gt; flag, then disable convention and refactor messages with &lt;code&gt;--disable=C,R&lt;/code&gt; and progressively re-evaluate and re-enable messages as your priorities evolve.&lt;/p&gt; &#xA;&lt;p&gt;Pylint is highly configurable and permits to write plugins in order to add your own checks (for example, for internal libraries or an internal rule). Pylint also has an ecosystem of existing plugins for popular frameworks and third-party libraries.&lt;/p&gt; &#xA;&lt;p&gt;.. note::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Pylint supports the Python standard library out of the box. Third-party&#xA;libraries are not always supported, so a plugin might be needed. A good place&#xA;to start is ``PyPI`` which often returns a plugin by searching for&#xA;``pylint &amp;lt;library&amp;gt;``. `pylint-pydantic`_, `pylint-django`_ and&#xA;`pylint-sonarjson`_ are examples of such plugins. More information about plugins&#xA;and how to load them can be found at `plugins`_.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;.. _&lt;code&gt;plugins&lt;/code&gt;: &lt;a href=&#34;https://pylint.readthedocs.io/en/latest/development_guide/how_tos/plugins.html#plugins&#34;&gt;https://pylint.readthedocs.io/en/latest/development_guide/how_tos/plugins.html#plugins&lt;/a&gt; .. _&lt;code&gt;pylint-pydantic&lt;/code&gt;: &lt;a href=&#34;https://pypi.org/project/pylint-pydantic&#34;&gt;https://pypi.org/project/pylint-pydantic&lt;/a&gt; .. _&lt;code&gt;pylint-django&lt;/code&gt;: &lt;a href=&#34;https://github.com/pylint-dev/pylint-django&#34;&gt;https://github.com/pylint-dev/pylint-django&lt;/a&gt; .. _&lt;code&gt;pylint-sonarjson&lt;/code&gt;: &lt;a href=&#34;https://github.com/cnescatlab/pylint-sonarjson-catlab&#34;&gt;https://github.com/cnescatlab/pylint-sonarjson-catlab&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Advised linters alongside pylint&lt;/h2&gt; &#xA;&lt;p&gt;Projects that you might want to use alongside pylint include ruff_ (&lt;strong&gt;really&lt;/strong&gt; fast, with builtin auto-fix and a large number of checks taken from popular linters, but implemented in &lt;code&gt;rust&lt;/code&gt;) or flake8_ (a framework to implement your own checks in python using &lt;code&gt;ast&lt;/code&gt; directly), mypy_, pyright_ / pylance or pyre_ (typing checks), bandit_ (security oriented checks), black_ and isort_ (auto-formatting), autoflake_ (automated removal of unused imports or variables), pyupgrade_ (automated upgrade to newer python syntax) and pydocstringformatter_ (automated pep257).&lt;/p&gt; &#xA;&lt;p&gt;.. _ruff: &lt;a href=&#34;https://github.com/astral-sh/ruff&#34;&gt;https://github.com/astral-sh/ruff&lt;/a&gt; .. _flake8: &lt;a href=&#34;https://github.com/PyCQA/flake8&#34;&gt;https://github.com/PyCQA/flake8&lt;/a&gt; .. _bandit: &lt;a href=&#34;https://github.com/PyCQA/bandit&#34;&gt;https://github.com/PyCQA/bandit&lt;/a&gt; .. _mypy: &lt;a href=&#34;https://github.com/python/mypy&#34;&gt;https://github.com/python/mypy&lt;/a&gt; .. _pyright: &lt;a href=&#34;https://github.com/microsoft/pyright&#34;&gt;https://github.com/microsoft/pyright&lt;/a&gt; .. _pyre: &lt;a href=&#34;https://github.com/facebook/pyre-check&#34;&gt;https://github.com/facebook/pyre-check&lt;/a&gt; .. _black: &lt;a href=&#34;https://github.com/psf/black&#34;&gt;https://github.com/psf/black&lt;/a&gt; .. _autoflake: &lt;a href=&#34;https://github.com/myint/autoflake&#34;&gt;https://github.com/myint/autoflake&lt;/a&gt; .. _pyupgrade: &lt;a href=&#34;https://github.com/asottile/pyupgrade&#34;&gt;https://github.com/asottile/pyupgrade&lt;/a&gt; .. _pydocstringformatter: &lt;a href=&#34;https://github.com/DanielNoord/pydocstringformatter&#34;&gt;https://github.com/DanielNoord/pydocstringformatter&lt;/a&gt; .. _isort: &lt;a href=&#34;https://pycqa.github.io/isort/&#34;&gt;https://pycqa.github.io/isort/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Additional tools included in pylint&lt;/h2&gt; &#xA;&lt;p&gt;Pylint ships with two additional tools:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;pyreverse_ (standalone tool that generates package and class diagrams.)&lt;/li&gt; &#xA; &lt;li&gt;symilar_ (duplicate code finder that is also integrated in pylint)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;.. _pyreverse: &lt;a href=&#34;https://pylint.readthedocs.io/en/latest/additional_tools/pyreverse/index.html&#34;&gt;https://pylint.readthedocs.io/en/latest/additional_tools/pyreverse/index.html&lt;/a&gt; .. _symilar: &lt;a href=&#34;https://pylint.readthedocs.io/en/latest/additional_tools/symilar/index.html&#34;&gt;https://pylint.readthedocs.io/en/latest/additional_tools/symilar/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. This is used inside the doc to recover the end of the introduction&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;.. This is used inside the doc to recover the start of the short text for contribution&lt;/p&gt; &#xA;&lt;p&gt;We welcome all forms of contributions such as updates for documentation, new code, checking issues for duplicates or telling us that we can close them, confirming that issues still exist, &lt;code&gt;creating issues because you found a bug or want a feature&lt;/code&gt;_, etc. Everything is much appreciated!&lt;/p&gt; &#xA;&lt;p&gt;Please follow the &lt;code&gt;code of conduct&lt;/code&gt;_ and check &lt;code&gt;the Contributor Guides&lt;/code&gt;_ if you want to make a code contribution.&lt;/p&gt; &#xA;&lt;p&gt;.. _creating issues because you found a bug or want a feature: &lt;a href=&#34;https://pylint.readthedocs.io/en/latest/contact.html#bug-reports-feedback&#34;&gt;https://pylint.readthedocs.io/en/latest/contact.html#bug-reports-feedback&lt;/a&gt; .. _code of conduct: &lt;a href=&#34;https://github.com/pylint-dev/pylint/raw/main/CODE_OF_CONDUCT.md&#34;&gt;https://github.com/pylint-dev/pylint/blob/main/CODE_OF_CONDUCT.md&lt;/a&gt; .. _the Contributor Guides: &lt;a href=&#34;https://pylint.readthedocs.io/en/latest/development_guide/contribute.html&#34;&gt;https://pylint.readthedocs.io/en/latest/development_guide/contribute.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. This is used inside the doc to recover the end of the short text for contribution&lt;/p&gt; &#xA;&lt;h2&gt;Show your usage&lt;/h2&gt; &#xA;&lt;p&gt;You can place this badge in your README to let others know your project uses pylint.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.. image:: https://img.shields.io/badge/linting-pylint-yellowgreen&#xA;    :target: https://github.com/pylint-dev/pylint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Learn how to add a badge to your documentation in &lt;code&gt;the badge documentation&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;.. _the badge documentation: &lt;a href=&#34;https://pylint.readthedocs.io/en/latest/user_guide/installation/badge.html&#34;&gt;https://pylint.readthedocs.io/en/latest/user_guide/installation/badge.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;pylint is, with a few exceptions listed below, &lt;code&gt;GPLv2 &amp;lt;https://github.com/pylint-dev/pylint/blob/main/LICENSE&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;The icon files are licensed under the &lt;code&gt;CC BY-SA 4.0 &amp;lt;https://creativecommons.org/licenses/by-sa/4.0/&amp;gt;&lt;/code&gt;_ license:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;doc/logo.png &amp;lt;https://raw.githubusercontent.com/pylint-dev/pylint/main/doc/logo.png&amp;gt;&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;doc/logo.svg &amp;lt;https://raw.githubusercontent.com/pylint-dev/pylint/main/doc/logo.svg&amp;gt;&lt;/code&gt;_&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Please check &lt;code&gt;the contact information&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;.. _&lt;code&gt;the contact information&lt;/code&gt;: &lt;a href=&#34;https://pylint.readthedocs.io/en/latest/contact.html&#34;&gt;https://pylint.readthedocs.io/en/latest/contact.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |tideliftlogo| image:: &lt;a href=&#34;https://raw.githubusercontent.com/pylint-dev/pylint/main/doc/media/Tidelift_Logos_RGB_Tidelift_Shorthand_On-White.png&#34;&gt;https://raw.githubusercontent.com/pylint-dev/pylint/main/doc/media/Tidelift_Logos_RGB_Tidelift_Shorthand_On-White.png&lt;/a&gt; :width: 200 :alt: Tidelift&lt;/p&gt; &#xA;&lt;p&gt;.. list-table:: :widths: 10 100&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;|tideliftlogo|&lt;/li&gt; &#xA;   &lt;li&gt;Professional support for pylint is available as part of the &lt;code&gt;Tidelift Subscription&lt;/code&gt;_. Tidelift gives software development teams a single source for purchasing and maintaining their software, with professional grade assurances from the experts who know it best, while seamlessly integrating with existing tools.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;.. _Tidelift Subscription: &lt;a href=&#34;https://tidelift.com/subscription/pkg/pypi-pylint?utm_source=pypi-pylint&amp;amp;utm_medium=referral&amp;amp;utm_campaign=readme&#34;&gt;https://tidelift.com/subscription/pkg/pypi-pylint?utm_source=pypi-pylint&amp;amp;utm_medium=referral&amp;amp;utm_campaign=readme&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>DeMoYao100/byrFileShare</title>
    <updated>2024-12-13T01:35:14Z</updated>
    <id>tag:github.com,2024-12-13:/DeMoYao100/byrFileShare</id>
    <link href="https://github.com/DeMoYao100/byrFileShare" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SeCloud - 安全与便捷的网盘应用&lt;/h1&gt; &#xA;&lt;h2&gt;项目简介&lt;/h2&gt; &#xA;&lt;p&gt;SeCloud 是一款集 &lt;strong&gt;安全认证&lt;/strong&gt;、&lt;strong&gt;加密传输&lt;/strong&gt; 和 &lt;strong&gt;加密存储&lt;/strong&gt; 于一体的高级网盘应用。通过创新的密码学设计和自主开发的通信协议，SeCloud 致力于保护用户隐私，确保服务器无法窃取任何用户数据。SeCloud 提供了与传统网盘类似的便捷使用体验，同时构建了顶级的安全保障体系。&lt;/p&gt; &#xA;&lt;h2&gt;主要功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;文件管理&lt;/strong&gt;：支持文件上传、下载、删除、文件夹创建等基本操作。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;高级加密&lt;/strong&gt;：基于 U 盾硬件，采用层级密钥管理，实现“一次一密”策略。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;端到端安全传输&lt;/strong&gt;：采用 DH 密钥交换协议和数字证书，确保通信数据全程加密。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;共享网盘&lt;/strong&gt;：安全设计的文件共享功能，保证密钥安全传输与存储。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;多重认证&lt;/strong&gt;：结合口令和硬件（U 盾）双重保护。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;技术亮点&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;用户中心的加密架构&lt;/strong&gt;：服务器无法解密用户数据。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;一次一密加密策略&lt;/strong&gt;：文件加密密钥独立，泄露风险最小化。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;跨平台支持&lt;/strong&gt;：基于 Electron 打造，兼容 Windows、macOS 和 Linux。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;易扩展性&lt;/strong&gt;：系统设计模块化，支持后续功能扩展。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;安装与运行&lt;/h2&gt; &#xA;&lt;p&gt;SeCloud 由三部分组成：&lt;strong&gt;服务器 (server)&lt;/strong&gt;、&lt;strong&gt;客户端后端 (client)&lt;/strong&gt; 和 &lt;strong&gt;客户端前端 (frontend)&lt;/strong&gt;。每个部分均需独立配置运行环境。&lt;/p&gt; &#xA;&lt;h3&gt;运行准备&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;确保已安装以下工具：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Python 3.9 及以上&lt;/li&gt; &#xA;   &lt;li&gt;Node.js 和 npm (前端运行需要)&lt;/li&gt; &#xA;   &lt;li&gt;U 盾设备（推荐使用安全机构颁发的硬件）&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;克隆项目代码：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/DeMoYao100/byrFileShare.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;部署步骤&lt;/h3&gt; &#xA;&lt;h4&gt;服务端 (Server)&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;进入&lt;/p&gt; &lt;pre&gt;&lt;code&gt;server&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;目录：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd server&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装依赖：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;初始化数据库及目录：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python db.py&#xA;mkdir storage tmp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启动服务：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python server.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;客户端后端 (Client)&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;进入&lt;/p&gt; &lt;pre&gt;&lt;code&gt;client&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;目录：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd client&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装依赖：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修改 &lt;code&gt;ip.txt&lt;/code&gt;，填入服务器 IP 地址。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启动客户端后端：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python client.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;客户端前端 (Frontend)&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;进入&lt;/p&gt; &lt;pre&gt;&lt;code&gt;frontend&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;目录：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd frontend&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装依赖：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启动前端：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run serve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;系统说明文档&lt;/h2&gt; &#xA;&lt;p&gt;项目中的 &lt;strong&gt;系统说明文档&lt;/strong&gt; 包含以下内容，用于详细说明系统的设计和实现：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;作品技术原理介绍&lt;/strong&gt;：介绍系统的核心技术原理和关键实现。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;概要设计报告&lt;/strong&gt;：系统的高层次设计和架构概述。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;详细设计报告&lt;/strong&gt;：深入描述系统模块的实现细节。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;测试分析报告&lt;/strong&gt;：测试案例及系统性能分析结果。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;程序编译和安装使用文档&lt;/strong&gt;：运行环境准备、程序编译及启动指导。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;接口规范文档&lt;/strong&gt;：系统模块和外部交互的 API 规范。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;您可以在系统说明文档目录下找到上述文件，获取更详细的技术细节。&lt;/p&gt; &#xA;&lt;h2&gt;联系我们&lt;/h2&gt; &#xA;&lt;p&gt;如有任何疑问或建议，请通过 &lt;a href=&#34;mailto:huangkaibo@bupt.edu.cn&#34;&gt;huangkaibo@bupt.edu.cn&lt;/a&gt; 联系我们。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;感谢支持 SeCloud！&lt;/strong&gt; 如果您喜欢该项目，请为我们点亮一颗 &lt;strong&gt;Star&lt;/strong&gt; ⭐。&lt;/p&gt;</summary>
  </entry>
</feed>