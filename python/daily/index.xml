<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-07T01:44:32Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>piglei/ai-vocabulary-builder</title>
    <updated>2023-03-07T01:44:32Z</updated>
    <id>tag:github.com,2023-03-07:/piglei/ai-vocabulary-builder</id>
    <link href="https://github.com/piglei/ai-vocabulary-builder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个使用了 AI 技术的智能生词本制作工具。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AI 生词本&lt;/h1&gt; &#xA;&lt;p&gt;AI 生词本（“AI Vocabulary Builder” 简称 aivoc）是一个利用了 AI 技术的智能生词本工具，可以帮你快速构建起自己的生词库，学习起来事半功倍。&lt;/p&gt; &#xA;&lt;p&gt;学习一门语言，生词本是一个非常重要的工具。一个内容优秀的生词本，至少需要包含：&lt;strong&gt;生词、释义、例句、例句释义&lt;/strong&gt;这些内容。但是，手动维护这些内容非常麻烦，因此大部分人都没有自己的生词本。阅读时碰见生词，常常查过词典，转头就忘。&lt;/p&gt; &#xA;&lt;p&gt;aivoc 尝试着使用 ChatGPT 的能力，将生词本的维护成本降到最低，让每人都可以拥有自己的生词本。&lt;/p&gt; &#xA;&lt;p&gt;使用 aivoc，每当你读到一句包含了生词的句子时，只要将其原样输入到 aivoc 工具中，便可以获得：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;整句话的全文翻译&lt;/li&gt; &#xA; &lt;li&gt;由 AI 提取出的生词及释义&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;一个免维护的全自动生词本表格&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;1033&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/731266/223053513-4cc3896e-00d2-41b7-b40a-7074a9d2db2c.png&#34;&gt; &#xA;&lt;p&gt;↑ 交互式使用界面&lt;/p&gt; &#xA;&lt;img width=&#34;931&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/731266/222906216-3ae12bfd-8404-4cc4-b50c-1ff47d8d1e61.png&#34;&gt; &#xA;&lt;p&gt;↑ 使用 numbers 打开生词库表格（使用 CSV 纯文本格式，方便二次处理）&lt;/p&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;p&gt;使用 pip 来安装本工具：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# 需要 Python 版本 3.7 及以上&#xA;$ pip install ai-vocabulary-builder&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;完成后，在环境变量设置好你的 &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;OpenAI API key&lt;/a&gt;：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# 使用你在 OpenAI 官网上申请到的 key 替换该内容&#xA;$ export OPENAI_API_KEY=&#39;your_api_key&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;一切就绪，之后执行 &lt;code&gt;aivoc&lt;/code&gt; 启动工具，进入交互翻译模式。&lt;/p&gt; &#xA;&lt;p&gt;执行 &lt;code&gt;aivoc --help&lt;/code&gt; 查看更多帮助。&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持 &lt;a href=&#34;https://github.com/yetone/bob-plugin-openai-translator&#34;&gt;bob-plugin-openai-translator&lt;/a&gt; 插件，实现划词自动扩充生词本。&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>hackingthemarkets/chatgpt-api-whisper-api-voice-assistant</title>
    <updated>2023-03-07T01:44:32Z</updated>
    <id>tag:github.com,2023-03-07:/hackingthemarkets/chatgpt-api-whisper-api-voice-assistant</id>
    <link href="https://github.com/hackingthemarkets/chatgpt-api-whisper-api-voice-assistant" rel="alternate"></link>
    <summary type="html">&lt;p&gt;chatgpt api and whisper api tutorial - voice conversation with therapist&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;chatgpt-api-whisper-api-voice-assistant&lt;/h1&gt; &#xA;&lt;p&gt;chatgpt api and whisper api tutorial - voice conversation with therapist&lt;/p&gt; &#xA;&lt;p&gt;Video Demo / Tutorial:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Si0vFx_dJ5Y&#34;&gt;https://www.youtube.com/watch?v=Si0vFx_dJ5Y&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;Install &lt;code&gt;ffmpeg&lt;/code&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install ffmpeg&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>GaiZhenbiao/ChuanhuChatGPT</title>
    <updated>2023-03-07T01:44:32Z</updated>
    <id>tag:github.com,2023-03-07:/GaiZhenbiao/ChuanhuChatGPT</id>
    <link href="https://github.com/GaiZhenbiao/ChuanhuChatGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GUI for ChatGPT API&lt;/p&gt;&lt;hr&gt;&lt;img height=&#34;128&#34; align=&#34;left&#34; src=&#34;https://user-images.githubusercontent.com/51039745/222689546-7612df0e-e28b-4693-9f5f-4ef2be3daf48.png&#34; alt=&#34;Logo&#34;&gt; &#xA;&lt;h1&gt;川虎 ChatGPT / Chuanhu ChatGPT&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/GaiZhenbiao/ChuanhuChatGPT/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/GaiZhenbiao/ChuanhuChatGPT&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gradio.app/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Base-Gradio-fb7d1a?style=flat&#34; alt=&#34;Base&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV1mo4y1r7eE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Bilibili-%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B-ff69b4?style=flat&amp;amp;logo=bilibili&#34; alt=&#34;Bilibili&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;为ChatGPT API提供了一个Web图形界面。在Bilibili上&lt;a href=&#34;https://www.bilibili.com/video/BV1mo4y1r7eE/&#34;&gt;观看视频教程&lt;/a&gt;。也可以在Hugging Face上&lt;a href=&#34;https://huggingface.co/spaces/JohnSmith9982/ChuanhuChatGPT&#34;&gt;在线体验&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/51039745/223148794-f4fd2fcb-3e48-4cdf-a759-7aa463d3f14c.gif&#34; alt=&#34;Animation Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🎉🎉🎉 重大更新&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;精简了UI&lt;/li&gt; &#xA; &lt;li&gt;像官方ChatGPT那样实时回复&lt;/li&gt; &#xA; &lt;li&gt;改进的保存/加载功能&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 像官方客户端那样支持实时显示回答！&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 重试对话，让ChatGPT再回答一次。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 优化Tokens，减少Tokens占用，以支持更长的对话。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 设置System Prompt，有效地设定前置条件&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 保存/加载对话历史记录&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 在图形界面中添加API key&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; System Prompt模板功能，从预置的Prompt库中选择&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 实时显示Tokens用量&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用技巧&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用System Prompt可以很有效地设定前提条件&lt;/li&gt; &#xA; &lt;li&gt;对于长对话，可以使用“优化Tokens”按钮减少Tokens占用。&lt;/li&gt; &#xA; &lt;li&gt;如果部署到服务器，将程序最后一句改成&lt;code&gt;demo.launch(server_name=&#34;0.0.0.0&#34;, server_port=99999)&lt;/code&gt;。其中&lt;code&gt;99999&lt;/code&gt;是端口号，应该是1000-65535任意可用端口，请自行更改为实际端口号。&lt;/li&gt; &#xA; &lt;li&gt;如果需要获取公共链接，将程序最后一句改成&lt;code&gt;demo.launch(share=True)&lt;/code&gt;。注意程序必须在运行，才能通过公共链接访问&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;安装方式&lt;/h2&gt; &#xA;&lt;h3&gt;填写API密钥&lt;/h3&gt; &#xA;&lt;h4&gt;在图形界面中填写你的API密钥&lt;/h4&gt; &#xA;&lt;p&gt;这样设置的密钥会在页面刷新后被清除&lt;/p&gt; &#xA;&lt;img width=&#34;760&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/51039745/222873756-3858bb82-30b9-49bc-9019-36e378ee624d.png&#34;&gt; &#xA;&lt;h4&gt;……或者在代码中填入你的 OpenAI API 密钥&lt;/h4&gt; &#xA;&lt;p&gt;这样设置的密钥会成为默认密钥&lt;/p&gt; &#xA;&lt;img width=&#34;552&#34; alt=&#34;SCR-20230302-sula&#34; src=&#34;https://user-images.githubusercontent.com/51039745/222445258-248f2789-81d2-4f0a-8697-c720f588d8de.png&#34;&gt; &#xA;&lt;h3&gt;安装依赖&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果报错，试试&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip3 install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果还是不行，请先&lt;a href=&#34;https://www.runoob.com/python/python-install.html&#34;&gt;安装Python&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;如果下载慢，建议&lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/help/pypi/&#34;&gt;配置清华源&lt;/a&gt;，或者科学上网。&lt;/p&gt; &#xA;&lt;h3&gt;启动&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;python ChuanhuChatbot.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果报错，试试&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 ChuanhuChatbot.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果还是不行，请先&lt;a href=&#34;https://www.runoob.com/python/python-install.html&#34;&gt;安装Python&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;或者，使用Docker 安装与运行&lt;/h2&gt; &#xA;&lt;h3&gt;从本项目的Packages页面拉取&lt;/h3&gt; &#xA;&lt;p&gt;从本项目的&lt;a href=&#34;https://github.com/GaiZhenbiao/ChuanhuChatGPT/pkgs/container/chuanhuchatgpt&#34;&gt;Packages&lt;/a&gt;页面拉取Docker镜像，使用Github Actions自动创建。也可以去本项目的&lt;a href=&#34;https://hub.docker.com/r/tuchuanhuhuhu/chuanhuchatgpt&#34;&gt;Dockerhub页面&lt;/a&gt;拉取。&lt;/p&gt; &#xA;&lt;h3&gt;手动构建镜像&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build -t chuanhuchatgpt:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;运行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d --name chatgpt -e my_api_key=&#34;替换成API&#34;  --network host chuanhuchatgpt:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;查看本地访问地址&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker logs chatgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;部署相关&lt;/h2&gt; &#xA;&lt;h3&gt;部署到公网服务器&lt;/h3&gt; &#xA;&lt;p&gt;将最后一句修改为&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;demo.queue().launch(server_name=&#34;0.0.0.0&#34;, server_port=7860, share=False) # 可自定义端口&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;用账号密码保护页面&lt;/h3&gt; &#xA;&lt;p&gt;将最后一句修改为&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;demo.queue().launch(server_name=&#34;0.0.0.0&#34;, server_port=7860,auth=(&#34;在这里填写用户名&#34;, &#34;在这里填写密码&#34;)) # 可设置用户名与密码&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;疑难杂症解决&lt;/h2&gt; &#xA;&lt;h3&gt;No module named &#39;_bz2&#39;&lt;/h3&gt; &#xA;&lt;p&gt;太空急先锋：部署在CentOS7.6,Python3.11.0上,最后报错ModuleNotFoundError: No module named &#39;_bz2&#39;&lt;/p&gt; &#xA;&lt;p&gt;解决方案：安装python前得下个bzip编译环境&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo yum install bzip2-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;openai.error.APIConnectionError&lt;/h3&gt; &#xA;&lt;p&gt;我是一只孤猫 &lt;a href=&#34;https://github.com/GaiZhenbiao/ChuanhuChatGPT/issues/5&#34;&gt;#5&lt;/a&gt;：&lt;/p&gt; &#xA;&lt;p&gt;如果有人也出现了&lt;code&gt;openai.error.APIConnectionError&lt;/code&gt;提示的报错，那可能是&lt;code&gt;urllib3&lt;/code&gt;的版本导致的。&lt;code&gt;urllib3&lt;/code&gt;版本大于&lt;code&gt;1.25.11&lt;/code&gt;，就会出现这个问题。&lt;/p&gt; &#xA;&lt;p&gt;解决方案是卸载&lt;code&gt;urllib3&lt;/code&gt;然后重装至&lt;code&gt;1.25.11&lt;/code&gt;版本再重新运行一遍就可以&lt;/p&gt; &#xA;&lt;p&gt;在终端或命令提示符中卸载&lt;code&gt;urllib3&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip uninstall urllib3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后，您可以通过使用指定版本号的&lt;code&gt;pip install&lt;/code&gt;命令来安装所需的版本：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install urllib3==1.25.11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;参考自： &lt;a href=&#34;https://zhuanlan.zhihu.com/p/611080662&#34;&gt;解决OpenAI API 挂了代理还是连接不上的问题&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;API 被墙了怎么办&lt;/h3&gt; &#xA;&lt;p&gt;建议把&lt;code&gt;openai.com&lt;/code&gt;加入Clash等软件的分流规则中。&lt;/p&gt; &#xA;&lt;p&gt;跑起来之后，输入问题好像就没反应了，也没报错 &lt;a href=&#34;https://github.com/GaiZhenbiao/ChuanhuChatGPT/issues/25&#34;&gt;#25&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;在 Python 文件里 设定 API Key 之后验证失败&lt;/h3&gt; &#xA;&lt;p&gt;在ChuanhuChatbot.py中设置APIkey后验证出错，提示“发生了未知错误Orz” &lt;a href=&#34;https://github.com/GaiZhenbiao/ChuanhuChatGPT/issues/26&#34;&gt;#26&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;重装 gradio&lt;/h3&gt; &#xA;&lt;p&gt;很多时候，这样就可以解决问题。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install gradio --upgrade --force_reinstall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;网页提示错误&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Something went wrong&#xA;Expecting value: 1ine 1 column 1 (char o)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;出现这个错误的原因是&lt;code&gt;127.0.0.1&lt;/code&gt;被代理了，导致网页无法和后端通信。请设置代理软件，将&lt;code&gt;127.0.0.1&lt;/code&gt;加入直连。&lt;/p&gt; &#xA;&lt;h3&gt;No matching distribution found for openai&amp;gt;=0.27.0&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;openai&lt;/code&gt;这个依赖已经被移除了。请尝试下载最新版脚本。&lt;/p&gt;</summary>
  </entry>
</feed>