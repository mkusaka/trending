<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-17T01:33:03Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Zipstack/unstract</title>
    <updated>2024-08-17T01:33:03Z</updated>
    <id>tag:github.com,2024-08-17:/Zipstack/unstract</id>
    <link href="https://github.com/Zipstack/unstract" rel="alternate"></link>
    <summary type="html">&lt;p&gt;No-code LLM Platform to launch APIs and ETL Pipelines to structure unstructured documents&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/unstract_u_logo.png&#34; style=&#34;height: 120px&#34;&gt; &#xA; &lt;h1&gt;Unstract&lt;/h1&gt; &#xA; &lt;h2&gt;No-code LLM Platform to launch APIs and ETL Pipelines to structure unstructured documents&lt;/h2&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://pdm-project.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/pdm-managed-blueviolet&#34; alt=&#34;pdm-managed&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cla-assistant.io/Zipstack/unstract&#34;&gt;&lt;img src=&#34;https://cla-assistant.io/readme/badge/Zipstack/unstract&#34; alt=&#34;CLA assistant&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://results.pre-commit.ci/latest/github/Zipstack/unstract/main&#34;&gt;&lt;img src=&#34;https://results.pre-commit.ci/badge/github/Zipstack/unstract/main.svg?sanitize=true&#34; alt=&#34;pre-commit.ci status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/summary/new_code?id=Zipstack_unstract&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=Zipstack_unstract&amp;amp;metric=alert_status&#34; alt=&#34;Quality Gate Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/summary/new_code?id=Zipstack_unstract&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=Zipstack_unstract&amp;amp;metric=bugs&#34; alt=&#34;Bugs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/summary/new_code?id=Zipstack_unstract&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=Zipstack_unstract&amp;amp;metric=code_smells&#34; alt=&#34;Code Smells&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/summary/new_code?id=Zipstack_unstract&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=Zipstack_unstract&amp;amp;metric=coverage&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/summary/new_code?id=Zipstack_unstract&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=Zipstack_unstract&amp;amp;metric=duplicated_lines_density&#34; alt=&#34;Duplicated Lines (%)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🤖 Go beyond co-pilots&lt;/h2&gt; &#xA;&lt;p&gt;While co-pilots enable machine-to-human automation, with Unstract, you can go beyond co-pilots by enabling machine-to-machine automation. You can launch APIs that take in complex documents and return structured JSON all with a simple no-code approach. You can also launch unstructured data ETL Pipelines that can read complex documents from a variety of cloud file / object storage systems and write structured data into popular data warehouses and databases.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/prompt_studio.png&#34; alt=&#34;img Prompt Studio&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🧘‍♀️ Three step nirvana&lt;/h2&gt; &#xA;&lt;p&gt;Automate critical business processes that involve complex documents with a human in the loop. Go beyond RPA with the power of Large Language Models.&lt;/p&gt; &#xA;&lt;p&gt;🌟 &lt;strong&gt;Step 1&lt;/strong&gt;: Add documents to no-code Prompt Studio and do prompt engineering to extract required fields &lt;br&gt; 🌟 &lt;strong&gt;Step 2&lt;/strong&gt;: Configure Prompt Studio project as API deployment or configure input source and output destination for ETL Pipeline&lt;br&gt; 🌟 &lt;strong&gt;Step 3&lt;/strong&gt;: Deploy Workflows as unstructured data APIs or unstructured data ETL Pipelines!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/Using_Unstract.png&#34; alt=&#34;img Using Unstract&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🚀 Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;System Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;8GB RAM (recommended)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux or MacOS (Intel or M-series)&lt;/li&gt; &#xA; &lt;li&gt;Docker&lt;/li&gt; &#xA; &lt;li&gt;Docker Compose (if you need to install it separately)&lt;/li&gt; &#xA; &lt;li&gt;Git&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Next, either download a release or clone this repo and do the following:&lt;/p&gt; &#xA;&lt;p&gt;✅ &lt;code&gt;./run-platform.sh&lt;/code&gt;&lt;br&gt; ✅ Now visit &lt;a href=&#34;http://frontend.unstract.localhost&#34;&gt;http://frontend.unstract.localhost&lt;/a&gt; in your browser &lt;br&gt; ✅ Use user name and password &lt;code&gt;unstract&lt;/code&gt; to login&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s all there is to it!&lt;/p&gt; &#xA;&lt;p&gt;Another really quick way to experience Unstract is by signing up for our &lt;a href=&#34;https://us-central.unstract.com/&#34;&gt;hosted version&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;⏩ Quick Start Guide&lt;/h2&gt; &#xA;&lt;p&gt;Unstract comes well documented. You can get introduced to the &lt;a href=&#34;https://docs.unstract.com/&#34;&gt;basics of Unstract&lt;/a&gt;, and &lt;a href=&#34;https://docs.unstract.com/unstract_platform/setup_accounts/whats_needed&#34;&gt;learn how to connect&lt;/a&gt; various systems like LLMs, Vector Databases, Embedding Models and Text Extractors to it. The easiest way to wet your feet is to go through our &lt;a href=&#34;https://docs.unstract.com/unstract_platform/quick_start&#34;&gt;Quick Start Guide&lt;/a&gt; where you actually get to do some prompt engineering in Prompt Studio and launch an API to structure varied credit card statements!&lt;/p&gt; &#xA;&lt;h2&gt;🤝 Ecosystem support&lt;/h2&gt; &#xA;&lt;h3&gt;LLM Providers&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Provider&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/openai.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OpenAI&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/vertex_ai.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Google VertexAI, Gemini Pro&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/azure_openai.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Azure OpenAI&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/palm.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Google PaLM&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/anyscale.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Anyscale&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/mistral_ai.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mistral AI&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/anthropic.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Anthropic&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/ollama.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Ollama&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/replicate.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Replicate&lt;/td&gt; &#xA;   &lt;td&gt;🗓️ Coming soon!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Vector Databases&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Provider&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/qdrant.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Qdrant&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/weaviate.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Weaviate&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/pinecone.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Pinecone&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/postgres.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PostgreSQL&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/milvus.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Milvus&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Embeddings&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Provider&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/openai.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OpenAI&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/azure_openai.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Azure OpenAI&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/palm.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Google PaLM&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Text Extractors&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Provider&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/unstract_u_logo.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unstract LLMWhisperer&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/unstructured_io.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unstructured.io Community&lt;/td&gt; &#xA;   &lt;td&gt;🗓️ Coming soon!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/unstructured_io.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unstructured.io Enterprise&lt;/td&gt; &#xA;   &lt;td&gt;🗓️ Coming soon!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/llamaindex.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;LlamaIndex Parse&lt;/td&gt; &#xA;   &lt;td&gt;🗓️ Coming soon!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;ETL Sources&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Provider&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/s3.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;AWS S3&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/minio.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Minio&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/dropbox.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Dropbox&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/google_drive.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Google Drive&lt;/td&gt; &#xA;   &lt;td&gt;🗓️ Coming soon!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/box.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Box&lt;/td&gt; &#xA;   &lt;td&gt;🗓️ Coming soon!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/gcp.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Google Cloud Storage&lt;/td&gt; &#xA;   &lt;td&gt;🗓️ Coming soon!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/azure_openai.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Azure Cloud Storage&lt;/td&gt; &#xA;   &lt;td&gt;🗓️ Coming soon!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/http.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HTTP/HTTPS&lt;/td&gt; &#xA;   &lt;td&gt;🗓️ Coming soon!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;ETL Destinations&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Provider&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/snowflake.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Snowflake&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/amazon_redshift.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Amazon Redshift&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/google_bigquery.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Google Bigquery&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/postgres.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PostgreSQL&lt;/td&gt; &#xA;   &lt;td&gt;✅ Working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/mysql.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MySQL&lt;/td&gt; &#xA;   &lt;td&gt;🗓️ Coming soon!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/mariadb.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MariaDB&lt;/td&gt; &#xA;   &lt;td&gt;🗓️ Coming soon!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/docs/assets/3rd_party/ms_sql.png&#34; width=&#34;32&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Microsoft SQL Server&lt;/td&gt; &#xA;   &lt;td&gt;🗓️ Coming soon!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🙌 Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Please read &lt;a href=&#34;https://raw.githubusercontent.com/Zipstack/unstract/main/CONTRIBUTE.md&#34;&gt;CONTRIBUTE.md&lt;/a&gt; for further details on setting up the development environment, etc. It also points you to other detailed documents as needed.&lt;/p&gt; &#xA;&lt;h2&gt;👋 Join the LLM-powered automation community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On Slack, &lt;a href=&#34;https://join-slack.unstract.com&#34;&gt;join great conversations&lt;/a&gt; around LLMs, their ecosystem and leveraging them to automate the previously unautomatable!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/GetUnstract&#34;&gt;Follow us on X/Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/showcase/unstract/&#34;&gt;Follow us on LinkedIn&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📊 A note on analytics&lt;/h2&gt; &#xA;&lt;p&gt;In full disclosure, Unstract integrates Posthog to track usage analytics. As you can inspect the relevant code here, we collect the minimum possible metrics. Posthog can be disabled if desired by setting &lt;code&gt;REACT_APP_ENABLE_POSTHOG&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in the frontend&#39;s .env file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MetaCubeX/mihomo</title>
    <updated>2024-08-17T01:33:03Z</updated>
    <id>tag:github.com,2024-08-17:/MetaCubeX/mihomo</id>
    <link href="https://github.com/MetaCubeX/mihomo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple Python Pydantic model for Honkai: Star Rail parsed data from the Mihomo API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mihomo&lt;/h1&gt; &#xA;&lt;p&gt;A simple python pydantic model (type hint and autocompletion support) for Honkai: Star Rail parsed data from the Mihomo API.&lt;/p&gt; &#xA;&lt;p&gt;API url: &lt;a href=&#34;https://api.mihomo.me/sr_info_parsed/%7BUID%7D?lang=%7BLANG%7D&#34;&gt;https://api.mihomo.me/sr_info_parsed/{UID}?lang={LANG}&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -U git+https://github.com/KT-Yeh/mihomo.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Basic&lt;/h3&gt; &#xA;&lt;p&gt;There are two parsed data formats:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;V1: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;URL: &lt;a href=&#34;https://api.mihomo.me/sr_info_parsed/800333171?lang=en&amp;amp;version=v1&#34;&gt;https://api.mihomo.me/sr_info_parsed/800333171?lang=en&amp;amp;version=v1&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Fetching: use &lt;code&gt;client.fetch_user_v1(800333171)&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Data model: &lt;code&gt;mihomo.models.v1.StarrailInfoParsedV1&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;All models defined in &lt;code&gt;mihomo/models/v1&lt;/code&gt; directory.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;V2: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;URL: &lt;a href=&#34;https://api.mihomo.me/sr_info_parsed/800333171?lang=en&#34;&gt;https://api.mihomo.me/sr_info_parsed/800333171?lang=en&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Fetching: use &lt;code&gt;client.fetch_user(800333171)&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Data model: &lt;code&gt;mihomo.models.StarrailInfoParsed&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;All models defined in &lt;code&gt;mihomo/models&lt;/code&gt; directory.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you don&#39;t want to use &lt;code&gt;client.get_icon_url&lt;/code&gt; to get the image url everytime, you can use &lt;code&gt;client.fetch_user(800333171, replace_icon_name_with_url=True)&lt;/code&gt; to get the parsed data with asset urls.&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;import asyncio&#xA;&#xA;from mihomo import Language, MihomoAPI&#xA;from mihomo.models import StarrailInfoParsed&#xA;from mihomo.models.v1 import StarrailInfoParsedV1&#xA;&#xA;client = MihomoAPI(language=Language.EN)&#xA;&#xA;&#xA;async def v1():&#xA;    data: StarrailInfoParsedV1 = await client.fetch_user_v1(800333171)&#xA;&#xA;    print(f&#34;Name: {data.player.name}&#34;)&#xA;    print(f&#34;Level: {data.player.level}&#34;)&#xA;    print(f&#34;Signature: {data.player.signature}&#34;)&#xA;    print(f&#34;Achievements: {data.player_details.achievements}&#34;)&#xA;    print(f&#34;Characters count: {data.player_details.characters}&#34;)&#xA;    print(f&#34;Profile picture url: {client.get_icon_url(data.player.icon)}&#34;)&#xA;    for character in data.characters:&#xA;        print(&#34;-----------&#34;)&#xA;        print(f&#34;Name: {character.name}&#34;)&#xA;        print(f&#34;Rarity: {character.rarity}&#34;)&#xA;        print(f&#34;Level: {character.level}&#34;)&#xA;        print(f&#34;Avatar url: {client.get_icon_url(character.icon)}&#34;)&#xA;        print(f&#34;Preview url: {client.get_icon_url(character.preview)}&#34;)&#xA;        print(f&#34;Portrait url: {client.get_icon_url(character.portrait)}&#34;)&#xA;&#xA;&#xA;async def v2():&#xA;    data: StarrailInfoParsed = await client.fetch_user(800333171, replace_icon_name_with_url=True)&#xA;&#xA;    print(f&#34;Name: {data.player.name}&#34;)&#xA;    print(f&#34;Level: {data.player.level}&#34;)&#xA;    print(f&#34;Signature: {data.player.signature}&#34;)&#xA;    print(f&#34;Profile picture url: {data.player.avatar.icon}&#34;)&#xA;    for character in data.characters:&#xA;        print(&#34;-----------&#34;)&#xA;        print(f&#34;Name: {character.name}&#34;)&#xA;        print(f&#34;Rarity: {character.rarity}&#34;)&#xA;        print(f&#34;Portrait url: {character.portrait}&#34;)&#xA;&#xA;asyncio.run(v1())&#xA;asyncio.run(v2())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Tools&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;from mihomo import tools&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Remove Duplicate Character&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;    data = await client.fetch_user(800333171)&#xA;    data = tools.remove_duplicate_character(data)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Merge Character Data&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;    old_data = await client.fetch_user(800333171)&#xA;&#xA;    # Change characters in game and wait for the API to refresh&#xA;    # ...&#xA;&#xA;    new_data = await client.fetch_user(800333171)&#xA;    data = tools.merge_character_data(new_data, old_data)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Data Persistence&lt;/h3&gt; &#xA;&lt;p&gt;Take pickle and json as an example&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;import pickle&#xA;import zlib&#xA;from mihomo import MihomoAPI, Language, StarrailInfoParsed&#xA;&#xA;client = MihomoAPI(language=Language.EN)&#xA;data = await client.fetch_user(800333171)&#xA;&#xA;# Save&#xA;pickle_data = zlib.compress(pickle.dumps(data))&#xA;print(len(pickle_data))&#xA;json_data = data.json(by_alias=True, ensure_ascii=False)&#xA;print(len(json_data))&#xA;&#xA;# Load&#xA;data_from_pickle = pickle.loads(zlib.decompress(pickle_data))&#xA;data_from_json = StarrailInfoParsed.parse_raw(json_data)&#xA;print(type(data_from_pickle))&#xA;print(type(data_from_json))&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>intelowlproject/IntelOwl</title>
    <updated>2024-08-17T01:33:03Z</updated>
    <id>tag:github.com,2024-08-17:/intelowlproject/IntelOwl</id>
    <link href="https://github.com/intelowlproject/IntelOwl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;IntelOwl: manage your Threat Intelligence at scale&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/intelowlproject/IntelOwl/master/docs/static/intel_owl_positive.png&#34; width=&#34;547&#34; height=&#34;150&#34; alt=&#34;Intel Owl&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/intelowlproject/IntelOwl/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/intelowlproject/IntelOwl&#34; alt=&#34;GitHub release (latest by date)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/intelowlproject/IntelOwl/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/intelowlproject/IntelOwl?style=social&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/repository/docker/intelowlproject/intelowl&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/intelowlproject/intelowl&#34; alt=&#34;Docker&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intel_owl&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/intel_owl?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.linkedin.com/company/intelowl/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/LinkedIn-0077B5?style=flat&amp;amp;logo=linkedin&amp;amp;logoColor=white&#34; alt=&#34;Linkedin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://intelowlproject.github.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/official-site-blue&#34; alt=&#34;Official Site&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://intelowl.honeynet.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/live-demo-blue&#34; alt=&#34;Live Instance&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.codefactor.io/repository/github/intelowlproject/intelowl&#34;&gt;&lt;img src=&#34;https://www.codefactor.io/repository/github/intelowlproject/intelowl/badge&#34; alt=&#34;CodeFactor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34; alt=&#34;Code style: black&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pycqa.github.io/isort/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&amp;amp;labelColor=ef8336&#34; alt=&#34;Imports: isort&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/intelowlproject/IntelOwl/actions/workflows/codeql-analysis.yml&#34;&gt;&lt;img src=&#34;https://github.com/intelowlproject/IntelOwl/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/intelowlproject/IntelOwl/actions/workflows/dependency_review.yml&#34;&gt;&lt;img src=&#34;https://github.com/intelowlproject/IntelOwl/actions/workflows/dependency_review.yml/badge.svg?sanitize=true&#34; alt=&#34;Dependency Review&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/intelowlproject/IntelOwl/actions&#34;&gt;&lt;img src=&#34;https://github.com/intelowlproject/IntelOwl/workflows/Build%20&amp;amp;%20Tests/badge.svg?sanitize=true&#34; alt=&#34;Build &amp;amp; Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.deepsource.com/gh/intelowlproject/IntelOwl/?ref=repository-badge&#34;&gt;&lt;img src=&#34;https://app.deepsource.com/gh/intelowlproject/IntelOwl.svg/?label=resolved+issues&amp;amp;token=BSvKHrnk875Y0Bykb79GNo8w&#34; alt=&#34;DeepSource&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://api.securityscorecards.dev/projects/github.com/intelowlproject/IntelOwl&#34;&gt;&lt;img src=&#34;https://api.securityscorecards.dev/projects/github.com/intelowlproject/IntelOwl/badge&#34; alt=&#34;OpenSSF Scorecard&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/7120&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/7120/badge&#34; alt=&#34;OpenSSF Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Intel Owl&lt;/h1&gt; &#xA;&lt;p&gt;Do you want to get &lt;strong&gt;threat intelligence data&lt;/strong&gt; about a malware, an IP address or a domain? Do you want to get this kind of data from multiple sources at the same time using &lt;strong&gt;a single API request&lt;/strong&gt;?&lt;/p&gt; &#xA;&lt;p&gt;You are in the right place!&lt;/p&gt; &#xA;&lt;p&gt;IntelOwl is an Open Source solution for management of Threat Intelligence at scale. It integrates a number of analyzers available online and a lot of cutting-edge malware analysis tools.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;p&gt;This application is built to &lt;strong&gt;scale out&lt;/strong&gt; and to &lt;strong&gt;speed up the retrieval of threat info&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It provides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enrichment of Threat Intel&lt;/strong&gt; for files as well as observables (IP, Domain, URL, hash, etc).&lt;/li&gt; &#xA; &lt;li&gt;A Fully-fledged REST APIs written in Django and Python.&lt;/li&gt; &#xA; &lt;li&gt;An easy way to be integrated in your stack of security tools to automate common jobs usually performed, for instance, by SOC analysts manually. (Thanks to the official libraries &lt;a href=&#34;https://github.com/intelowlproject/pyintelowl&#34;&gt;pyintelowl&lt;/a&gt; and &lt;a href=&#34;https://github.com/intelowlproject/go-intelowl&#34;&gt;go-intelowl&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;A &lt;strong&gt;built-in GUI&lt;/strong&gt;: provides features such as dashboard, visualizations of analysis data, easy to use forms for requesting new analysis, etc.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;strong&gt;framework&lt;/strong&gt; composed of modular components called &lt;strong&gt;Plugins&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;analyzers&lt;/em&gt; that can be run to either retrieve data from external sources (like VirusTotal or AbuseIPDB) or to generate intel from internally available tools (like Yara or Oletools)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;connectors&lt;/em&gt; that can be run to export data to external platforms (like MISP or OpenCTI)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;pivots&lt;/em&gt; that are designed to trigger the execution of a chain of analysis and connect them to each other&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;visualizers&lt;/em&gt; that are designed to create custom visualizations of analyzers results&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;ingestors&lt;/em&gt; that allows to automatically ingest stream of observables or files to IntelOwl itself&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;playbooks&lt;/em&gt; that are meant to make analysis easily repeatable&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Documentation &lt;a href=&#34;https://intelowl.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/intelowl/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;We try hard to keep our documentation well written, easy to understand and always updated. All info about installation, usage, configuration and contribution can be found &lt;a href=&#34;https://intelowl.readthedocs.io/&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Publications and Media&lt;/h3&gt; &#xA;&lt;p&gt;To know more about the project and its growth over time, you may be interested in reading &lt;a href=&#34;https://intelowl.readthedocs.io/en/latest/Introduction.html#publications-and-media&#34;&gt;the official blog posts and/or videos about the project by clicking on this link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Available services or analyzers&lt;/h3&gt; &#xA;&lt;p&gt;You can see the full list of all available analyzers in the &lt;a href=&#34;https://intelowl.readthedocs.io/en/latest/Usage.html#available-analyzers&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Analyzers Available&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Inbuilt modules&lt;/td&gt; &#xA;   &lt;td&gt;- Static Office Document, RTF, PDF, PE File Analysis and metadata extraction&lt;br&gt; - Strings Deobfuscation and analysis (&lt;a href=&#34;https://github.com/mandiant/flare-floss&#34;&gt;FLOSS&lt;/a&gt;, &lt;a href=&#34;https://github.com/mandiant/stringsifter&#34;&gt;Stringsifter&lt;/a&gt;, ...)&lt;br&gt; - PE Emulation with &lt;a href=&#34;https://github.com/qilingframework/qiling&#34;&gt;Qiling&lt;/a&gt; and &lt;a href=&#34;https://github.com/mandiant/speakeasy&#34;&gt;Speakeasy&lt;/a&gt;&lt;br&gt; - PE Signature verification&lt;br&gt; - PE Capabilities Extraction (&lt;a href=&#34;https://github.com/mandiant/capa&#34;&gt;CAPA&lt;/a&gt;)&lt;br&gt; - Javascript Emulation (&lt;a href=&#34;https://github.com/CapacitorSet/box-js&#34;&gt;Box-js&lt;/a&gt;)&lt;br&gt; - Android Malware Analysis (&lt;a href=&#34;https://github.com/quark-engine/quark-engine&#34;&gt;Quark-Engine&lt;/a&gt;, ...)&lt;br&gt; - SPF and DMARC Validator&lt;br&gt; - Yara (a lot of public rules are available. You can also add your own rules)&lt;br&gt; - more...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;External services&lt;/td&gt; &#xA;   &lt;td&gt;- Abuse.ch &lt;a href=&#34;https://bazaar.abuse.ch/about/&#34; target=&#34;_blank&#34;&gt;MalwareBazaar&lt;/a&gt;/&lt;a href=&#34;https://urlhaus.abuse.ch/&#34; target=&#34;_blank&#34;&gt;URLhaus&lt;/a&gt;/&lt;a href=&#34;https://threatfox.abuse.ch/about/&#34; target=&#34;_blank&#34;&gt;Threatfox&lt;/a&gt;/&lt;a href=&#34;https://yaraify.abuse.ch/about/&#34; target=&#34;_blank&#34;&gt;YARAify&lt;/a&gt;&lt;br&gt; - &lt;a href=&#34;https://docs.greynoise.io/docs/3rd-party-integrations&#34; target=&#34;_blank&#34;&gt; GreyNoise v2&lt;/a&gt;&lt;br&gt; - &lt;a href=&#34;https://analyze.intezer.com/?utm_source=IntelOwl&#34; target=&#34;_blank&#34;&gt; Intezer&lt;/a&gt;&lt;br&gt; - VirusTotal v3&lt;br&gt; - &lt;a href=&#34;https://doc.crowdsec.net/docs/next/cti_api/integration_intelowl/?utm_source=IntelOwl&#34; target=&#34;_blank&#34;&gt; Crowdsec&lt;/a&gt;&lt;br&gt; - &lt;a href=&#34;https://urlscan.io/docs/integrations/&#34; target=&#34;_blank&#34;&gt;URLscan&lt;/a&gt;&lt;br&gt; - Shodan&lt;br&gt; - AlienVault OTX&lt;br&gt; - &lt;a href=&#34;https://intelx.io/integrations&#34; target=&#34;_blank&#34;&gt;Intelligence_X&lt;/a&gt;&lt;br&gt; - &lt;a href=&#34;https://www.misp-project.org/&#34; target=&#34;_blank&#34;&gt;MISP&lt;/a&gt;&lt;br&gt; - many more..&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Partnerships and sponsors&lt;/h2&gt; &#xA;&lt;p&gt;As open source project maintainers, we strongly rely on external support to get the resources and time to work on keeping the project alive, with a constant release of new features, bug fixes and general improvements.&lt;/p&gt; &#xA;&lt;p&gt;Because of this, we joined &lt;a href=&#34;https://opencollective.com/intelowl-project&#34;&gt;Open Collective&lt;/a&gt; to obtain non-profit equal level status which allows the organization to receive and manage donations transparently. Please support IntelOwl and all the community by choosing a plan (BRONZE, SILVER, etc).&lt;/p&gt; &#xA;&lt;a href=&#34;https://opencollective.com/intelowl-project/donate&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://opencollective.com/intelowl-project/donate/button@2x.png?color=blue&#34; width=&#34;200&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;🥇 GOLD&lt;/h3&gt; &#xA;&lt;h4&gt;Certego&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://certego.net/?utm_source=intelowl&#34;&gt; &lt;img style=&#34;margin-right: 2px&#34; width=&#34;250&#34; height=&#34;71&#34; src=&#34;https://raw.githubusercontent.com/intelowlproject/IntelOwl/master/docs/static/Certego.png&#34; alt=&#34;Certego Logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://certego.net/?utm_source=intelowl&#34;&gt;Certego&lt;/a&gt; is a MDR (Managed Detection and Response) and Threat Intelligence Provider based in Italy.&lt;/p&gt; &#xA;&lt;p&gt;IntelOwl was born out of Certego&#39;s Threat intelligence R&amp;amp;D division and is constantly maintained and updated thanks to them.&lt;/p&gt; &#xA;&lt;h4&gt;The Honeynet Project&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.honeynet.org&#34;&gt; &lt;img style=&#34;border: 0.2px solid black&#34; width=&#34;125&#34; height=&#34;125&#34; src=&#34;https://raw.githubusercontent.com/intelowlproject/IntelOwl/master/docs/static/honeynet_logo.png&#34; alt=&#34;Honeynet.org logo&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.honeynet.org&#34;&gt;The Honeynet Project&lt;/a&gt; is a non-profit organization working on creating open source cyber security tools and sharing knowledge about cyber threats.&lt;/p&gt; &#xA;&lt;p&gt;Thanks to Honeynet, we are hosting a public demo of the application &lt;a href=&#34;https://intelowl.honeynet.org&#34;&gt;here&lt;/a&gt;. If you are interested, please contact a member of Honeynet to get access to the public service.&lt;/p&gt; &#xA;&lt;h4&gt;Google Summer of Code&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://summerofcode.withgoogle.com/&#34;&gt; &lt;img style=&#34;border: 0.2px solid black&#34; width=&#34;150&#34; height=&#34;89&#34; src=&#34;https://raw.githubusercontent.com/intelowlproject/IntelOwl/master/docs/static/gsoc_logo.png&#34; alt=&#34;GSoC logo&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Since its birth this project has been participating in the &lt;a href=&#34;https://summerofcode.withgoogle.com/&#34;&gt;Google Summer of Code&lt;/a&gt; (GSoC)!&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in participating in the next Google Summer of Code, check all the info available in the &lt;a href=&#34;https://github.com/intelowlproject/gsoc&#34;&gt;dedicated repository&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h3&gt;🥈 SILVER&lt;/h3&gt; &#xA;&lt;h4&gt;ThreatHunter.ai&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://threathunter.ai?utm_source=intelowl&#34;&gt; &lt;img style=&#34;border: 0.2px solid black&#34; width=&#34;194&#34; height=&#34;80&#34; src=&#34;https://raw.githubusercontent.com/intelowlproject/IntelOwl/master/docs/static/threathunter_logo.png&#34; alt=&#34;ThreatHunter.ai logo&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://threathunter.ai?utm_source=intelowl&#34;&gt;ThreatHunter.ai®&lt;/a&gt;, is a 100% Service-Disabled Veteran-Owned Small Business started in 2007 under the name Milton Security Group. ThreatHunter.ai is the global leader in Dynamic Threat Hunting. Operating a true 24x7x365 Security Operation Center with AI/ML-enhanced human Threat Hunters, ThreatHunter.ai has changed the industry in how threats are found, and mitigated in real time. For over 15 years, our teams of Threat Hunters have stopped hundreds of thousands of threats and assisted organizations in defending against threat actors around the clock.&lt;/p&gt; &#xA;&lt;h3&gt;🥉 BRONZE&lt;/h3&gt; &#xA;&lt;h4&gt;Docker&lt;/h4&gt; &#xA;&lt;p&gt;In 2021 IntelOwl joined the official &lt;a href=&#34;https://www.docker.com/blog/expanded-support-for-open-source-software-projects/&#34;&gt;Docker Open Source Program&lt;/a&gt;. This allows IntelOwl developers to easily manage Docker images and focus on writing the code. You may find the official IntelOwl Docker images &lt;a href=&#34;https://hub.docker.com/search?q=intelowlproject&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;DigitalOcean&lt;/h4&gt; &#xA;&lt;p&gt;In 2022 IntelOwl joined the official &lt;a href=&#34;https://www.digitalocean.com/open-source?utm_medium=opensource&amp;amp;utm_source=IntelOwl&#34;&gt;DigitalOcean Open Source Program&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Other collaborations&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://limacharlie.io/blog/limacharlie-sponsors-intel-owl/?utm_source=intelowl&amp;amp;utm_medium=banner&#34;&gt;LimaCharlie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tines.com/blog/announcing-our-sponsorship-of-intel-owl?utm_source=oss&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=intelowl&#34;&gt;Tines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About the author and maintainers&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to contact the main developers at any time on Twitter:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/matte_lodi&#34;&gt;Matteo Lodi&lt;/a&gt;: Author and principal maintainer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/0ssig3no&#34;&gt;Simone Berni&lt;/a&gt;: Backend Maintainer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/drosetti&#34;&gt;Daniele Rosetti&lt;/a&gt;: Frontend Maintainer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/eshaan7_&#34;&gt;Eshaan Bansal&lt;/a&gt;: Key Contributor&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>