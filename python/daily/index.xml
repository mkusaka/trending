<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-18T01:37:47Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>r0oth3x49/ghauri</title>
    <updated>2022-10-18T01:37:47Z</updated>
    <id>tag:github.com,2022-10-18:/r0oth3x49/ghauri</id>
    <link href="https://github.com/r0oth3x49/ghauri" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An advanced cross-platform tool that automates the process of detecting and exploiting SQL injection security flaws&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/r0oth3x49/Ghauri/releases/tag/v1.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/release-v1.0--stable-brightgreen?style=flat-square&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/r0oth3x49/ghauri/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/r0oth3x49/ghauri?style=flat-square&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/r0oth3x49/ghauri/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/r0oth3x49/ghauri?style=flat-square&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/r0oth3x49/ghauri/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/r0oth3x49/ghauri?style=flat-square&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/r0oth3x49/ghauri/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/r0oth3x49/ghauri?style=flat-square&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Ghauri&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;An advanced cross-platform tool that automates the process of detecting and exploiting SQL injection security flaws&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/11024397/193408429-418a75e0-a070-4491-9f92-5799b2509cdf.PNG&#34; alt=&#34;ghauri-banner&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3&lt;/li&gt; &#xA; &lt;li&gt;Python &lt;code&gt;pip3&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;cd to &lt;strong&gt;ghauri&lt;/strong&gt; directory.&lt;/li&gt; &#xA; &lt;li&gt;install requirements: &lt;code&gt;python3 -m pip install --upgrade -r requirements.txt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;run: &lt;code&gt;python3 setup.py install&lt;/code&gt; or &lt;code&gt;python3 -m pip install -e .&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;you will be able to access and run the ghauri with simple &lt;code&gt;ghauri --help&lt;/code&gt; command.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;strong&gt;Download Ghauri&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;You can download the latest version of Ghauri by cloning the GitHub repository.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/r0oth3x49/ghauri.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;em&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports following types of injection payloads: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Boolean based.&lt;/li&gt; &#xA;   &lt;li&gt;Error Based&lt;/li&gt; &#xA;   &lt;li&gt;Time Based&lt;/li&gt; &#xA;   &lt;li&gt;Stacked Queries&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Support SQL injection for following DBMS. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;MySQL&lt;/li&gt; &#xA;   &lt;li&gt;Microsoft SQL Server&lt;/li&gt; &#xA;   &lt;li&gt;Postgre&lt;/li&gt; &#xA;   &lt;li&gt;Oracle&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Supports following injection types. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;GET/POST Based injections&lt;/li&gt; &#xA;   &lt;li&gt;Headers Based injections&lt;/li&gt; &#xA;   &lt;li&gt;Cookies Based injections&lt;/li&gt; &#xA;   &lt;li&gt;Mulitipart Form data injections&lt;/li&gt; &#xA;   &lt;li&gt;JSON based injections&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;support proxy option &lt;code&gt;--proxy&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;supports parsing request from txt file: switch for that &lt;code&gt;-r file.txt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;supports limiting data extraction for dbs/tables/columns/dump: swicth &lt;code&gt;--start 1 --stop 2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;added support for resuming of all phases.&lt;/li&gt; &#xA; &lt;li&gt;added support for skip urlencoding switch: &lt;code&gt;--skip-urlencode&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;added support to verify extracted characters in case of boolean/time based injections.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Advanced Usage&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;Author: Nasir khan (&lt;a href=&#34;http://r0oth3x49.herokuapp.com/&#34;&gt;r0ot h3x49&lt;/a&gt;)&#xA;&#xA;usage: ghauri -u URL [OPTIONS]&#xA;&#xA;A cross-platform python based advanced sql injections detection &amp;amp; exploitation tool.&#xA;&#xA;General:&#xA;  -h, --help          Shows the help.&#xA;  --version           Shows the version.&#xA;  -v VERBOSE          Verbosity level: 1-5 (default 1).&#xA;  --batch             Never ask for user input, use the default behavior&#xA;  --flush-session     Flush session files for current target&#xA;&#xA;Target:&#xA;  At least one of these options has to be provided to define the&#xA;  target(s)&#xA;&#xA;  -u URL, --url URL   Target URL (e.g. &#39;http://www.site.com/vuln.php?id=1).&#xA;  -r REQUESTFILE      Load HTTP request from a file&#xA;&#xA;Request:&#xA;  These options can be used to specify how to connect to the target URL&#xA;&#xA;  -A , --user-agent   HTTP User-Agent header value&#xA;  -H , --header       Extra header (e.g. &#34;X-Forwarded-For: 127.0.0.1&#34;)&#xA;  --host              HTTP Host header value&#xA;  --data              Data string to be sent through POST (e.g. &#34;id=1&#34;)&#xA;  --cookie            HTTP Cookie header value (e.g. &#34;PHPSESSID=a8d127e..&#34;)&#xA;  --referer           HTTP Referer header value&#xA;  --headers           Extra headers (e.g. &#34;Accept-Language: fr\nETag: 123&#34;)&#xA;  --proxy             Use a proxy to connect to the target URL&#xA;  --delay             Delay in seconds between each HTTP request&#xA;  --timeout           Seconds to wait before timeout connection (default 30)&#xA;  --retries           Retries when the connection related error occurs (default 3)&#xA;  --skip-urlencode    Skip URL encoding of payload data&#xA;  --force-ssl         Force usage of SSL/HTTPS&#xA;&#xA;Injection:&#xA;  These options can be used to specify which parameters to test for,&#xA;  provide custom injection payloads and optional tampering scripts&#xA;&#xA;  -p TESTPARAMETER    Testable parameter(s)&#xA;  --dbms DBMS         Force back-end DBMS to provided value&#xA;  --prefix            Injection payload prefix string&#xA;  --suffix            Injection payload suffix string&#xA;&#xA;Detection:&#xA;  These options can be used to customize the detection phase&#xA;&#xA;  --level LEVEL       Level of tests to perform (1-3, default 1)&#xA;  --code CODE         HTTP code to match when query is evaluated to True&#xA;  --string            String to match when query is evaluated to True&#xA;  --not-string        String to match when query is evaluated to False&#xA;  --text-only         Compare pages based only on the textual content&#xA;&#xA;Techniques:&#xA;  These options can be used to tweak testing of specific SQL injection&#xA;  techniques&#xA;&#xA;  --technique TECH    SQL injection techniques to use (default &#34;BEST&#34;)&#xA;  --time-sec TIMESEC  Seconds to delay the DBMS response (default 5)&#xA;&#xA;Enumeration:&#xA;  These options can be used to enumerate the back-end database&#xA;  managment system information, structure and data contained in the&#xA;  tables.&#xA;&#xA;  -b, --banner        Retrieve DBMS banner&#xA;  --current-user      Retrieve DBMS current user&#xA;  --current-db        Retrieve DBMS current database&#xA;  --hostname          Retrieve DBMS server hostname&#xA;  --dbs               Enumerate DBMS databases&#xA;  --tables            Enumerate DBMS database tables&#xA;  --columns           Enumerate DBMS database table columns&#xA;  --dump              Dump DBMS database table entries&#xA;  -D DB               DBMS database to enumerate&#xA;  -T TBL              DBMS database tables(s) to enumerate&#xA;  -C COLS             DBMS database table column(s) to enumerate&#xA;  --start             Retrive entries from offset for dbs/tables/columns/dump&#xA;  --stop              Retrive entries till offset for dbs/tables/columns/dump&#xA;&#xA;Example:&#xA;  ghauri http://www.site.com/vuln.php?id=1 --dbs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Legal disclaimer&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage of Ghauri for attacking targets without prior mutual consent is illegal.&#xA;It is the end user&#39;s responsibility to obey all applicable local,state and federal laws. &#xA;Developer assume no liability and is not responsible for any misuse or damage caused by this program.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;strong&gt;TODO&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add support for inline queries.&lt;/li&gt; &#xA; &lt;li&gt;Add support for Union based queries&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>donnemartin/interactive-coding-challenges</title>
    <updated>2022-10-18T01:37:47Z</updated>
    <id>tag:github.com,2022-10-18:/donnemartin/interactive-coding-challenges</id>
    <link href="https://github.com/donnemartin/interactive-coding-challenges" rel="alternate"></link>
    <summary type="html">&lt;p&gt;120+ interactive Python coding interview challenges (algorithms and data structures). Includes Anki flashcards.&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/images/cover_challenge.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;interactive-coding-challenges&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mybinder.org/v2/gh/donnemartin/interactive-coding-challenges/master&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;120+ continually updated, interactive, and test-driven coding challenges&lt;/strong&gt;, with &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#anki-flashcards-coding-and-design&#34;&gt;Anki flashcards&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Challenges focus on &lt;strong&gt;algorithms&lt;/strong&gt; and &lt;strong&gt;data structures&lt;/strong&gt; found in &lt;strong&gt;coding interviews&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Each challenge has one or more reference solutions that are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fully functional&lt;/li&gt; &#xA; &lt;li&gt;Unit tested&lt;/li&gt; &#xA; &lt;li&gt;Easy-to-understand&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Challenges will soon provide on-demand &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/issues/22&#34;&gt;incremental hints&lt;/a&gt; to help you arrive at the optimal solution.&lt;/p&gt; &#xA;&lt;p&gt;Notebooks also detail:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Constraints&lt;/li&gt; &#xA; &lt;li&gt;Test cases&lt;/li&gt; &#xA; &lt;li&gt;Algorithms&lt;/li&gt; &#xA; &lt;li&gt;Big-O time and space complexities&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also included are &lt;strong&gt;unit tested reference implementations&lt;/strong&gt; of various &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#reference-implementations-data-structures&#34;&gt;data structures&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#reference-implementations-algorithms&#34;&gt;algorithms&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Challenge Solutions&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/images/cover_solution.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Anki Flashcards: Coding and Design&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;http://i.imgur.com/b4YtAEN.png&#34;&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;The provided &lt;a href=&#34;https://apps.ankiweb.net/&#34;&gt;Anki flashcard deck&lt;/a&gt; uses spaced repetition to help you retain key concepts.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/anki_cards/Coding.apkg&#34;&gt;Coding deck&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Great for use while on-the-go.&lt;/p&gt; &#xA;&lt;h3&gt;Design Resource: The System Design Primer&lt;/h3&gt; &#xA;&lt;p&gt;Looking for resources to help you prep for the &lt;strong&gt;System Design&lt;/strong&gt; and &lt;strong&gt;Object-Oriented Design interviews&lt;/strong&gt;?&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;http://i.imgur.com/zdCAkB3.png&#34;&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;Check out the sister repo &lt;a href=&#34;https://github.com/donnemartin/system-design-primer&#34;&gt;The System Design Primer&lt;/a&gt;, which contains additional Anki decks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/system-design-primer/raw/master/resources/flash_cards/System%20Design.apkg&#34;&gt;System design deck&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/system-design-primer/raw/master/resources/flash_cards/System%20Design%20Exercises.apkg&#34;&gt;System design exercises deck&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/system-design-primer/raw/master/resources/flash_cards/OO%20Design.apkg&#34;&gt;Object oriented design exercises deck&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/e45e39c36eebcc4c66e1aecd4e4145112d8e88e3/687474703a2f2f692e696d6775722e636f6d2f6a6a3341354e382e706e67&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Notebook Structure&lt;/h2&gt; &#xA;&lt;p&gt;Each challenge has two notebooks, a &lt;strong&gt;challenge notebook&lt;/strong&gt; with unit tests for you to solve and a &lt;strong&gt;solution notebook&lt;/strong&gt; for reference.&lt;/p&gt; &#xA;&lt;h3&gt;Problem Statement&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;States the problem to solve.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Constraints&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Describes any constraints or assumptions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Test Cases&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Describes the general and edge test cases that will be evaluated in the unit test.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Algorithm&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[Challenge Notebook] Empty, refer to the solution notebook algorithm section if you need a hint.&lt;/li&gt; &#xA; &lt;li&gt;[Solution Notebook] One or more algorithm solution discussions, with Big-O time and space complexities.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Hints&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[Challenge Notebook] Provides on-demand &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/issues/22&#34;&gt;incremental hints&lt;/a&gt; to help you arrive at the optimal solution. Coming soon!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Code (Challenge: Implement Me!)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[Challenge Notebook] Skeleton code for you to implement.&lt;/li&gt; &#xA; &lt;li&gt;[Solution Notebook] One or more reference solutions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Unit Test&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[Challenge Notebook] Unit test for your code. Expected to fail until you solve the challenge.&lt;/li&gt; &#xA; &lt;li&gt;[Solution Notebook] Unit test for the reference solution(s).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Index&lt;/h2&gt; &#xA;&lt;h3&gt;Challenges Categories&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Format&lt;/strong&gt;: Challenge Category - Number of Challenges&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#arrays-and-strings&#34;&gt;Arrays and Strings&lt;/a&gt; - 10&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#linked-lists&#34;&gt;Linked Lists&lt;/a&gt; - 8&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#stacks-and-queues&#34;&gt;Stacks and Queues&lt;/a&gt; - 8&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#graphs-and-trees&#34;&gt;Graphs and Trees&lt;/a&gt; - 21&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#sorting&#34;&gt;Sorting&lt;/a&gt; - 10&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#recursion-and-dynamic-programming&#34;&gt;Recursion and Dynamic Programming&lt;/a&gt; - 17&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#mathematics-and-probability&#34;&gt;Mathematics and Probability&lt;/a&gt; - 6&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#bit-manipulation&#34;&gt;Bit Manipulation&lt;/a&gt; - 8&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#online-judges&#34;&gt;Online Judges&lt;/a&gt; - 16&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/system-design-primer#system-design-interview-questions-with-solutions&#34;&gt;System Design&lt;/a&gt; - 8&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/system-design-primer#object-oriented-design-interview-questions-with-solutions&#34;&gt;Object Oriented Design&lt;/a&gt; - 8&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Total number of challenges: 120&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Reference Implementations: Data Structures&lt;/h3&gt; &#xA;&lt;p&gt;Unit tested, fully functional implementations of the following data structures:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/linked_lists/linked_list/linked_list_solution.ipynb&#34;&gt;Linked List&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/stacks_queues/stack/stack_solution.ipynb&#34;&gt;Stack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/stacks_queues/queue_list/queue_list_solution.ipynb&#34;&gt;Queue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/bst/bst_solution.ipynb&#34;&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph/graph_solution.ipynb&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/min_heap/min_heap_solution.ipynb&#34;&gt;Min Heap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/trie/trie_solution.ipynb&#34;&gt;Trie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/priority_queue/priority_queue_solution.ipynb&#34;&gt;Priority Queue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/hash_map/hash_map_solution.ipynb&#34;&gt;Hash Map&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Reference Implementations: Algorithms&lt;/h3&gt; &#xA;&lt;p&gt;Unit tested, fully functional implementations of the following algorithms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/selection_sort/selection_sort_solution.ipynb&#34;&gt;Selection Sort&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/insertion_sort/insertion_sort_solution.ipynb&#34;&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/quick_sort/quick_sort_solution.ipynb&#34;&gt;Quick Sort&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/merge_sort/merge_sort_solution.ipynb&#34;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/radix_sort/radix_sort_solution.ipynb&#34;&gt;Radix Sort&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph_build_order/build_order_solution.ipynb&#34;&gt;Topological Sort&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/tree_dfs/dfs_solution.ipynb&#34;&gt;Tree Depth-First Search (Pre-, In-, Post-Order)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/tree_bfs/bfs_solution.ipynb&#34;&gt;Tree Breadth-First Search&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph_dfs/dfs_solution.ipynb&#34;&gt;Graph Depth-First Search&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph_bfs/bfs_solution.ipynb&#34;&gt;Graph Breadth-First Search&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph_shortest_path/graph_shortest_path_solution.ipynb&#34;&gt;Dijkstra&#39;s Shortest Path&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph_shortest_path_unweighted/shortest_path_solution.ipynb&#34;&gt;Unweighted Graph Shortest Path&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/knapsack_01/knapsack_solution.ipynb&#34;&gt;Knapsack 0/1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/knapsack_unbounded/knapsack_unbounded_solution.ipynb&#34;&gt;Knapsack Unbounded&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/math_probability/generate_primes/check_prime_solution.ipynb&#34;&gt;Sieve of Eratosthenes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Reference Implementations: TODO&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;A*&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Bellman-Ford&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Bloom Filter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Convex Hull&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Fisher-Yates Shuffle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Kruskal&#39;s&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Max Flow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Prim&#39;s&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Rabin-Karp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Traveling Salesman&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Union Find&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing and Running Challenges&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#repo-structure&#34;&gt;Repo Structure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#notebook-installation&#34;&gt;Notebook Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#running-challenges&#34;&gt;Running Challenges&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Misc&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#contact-info&#34;&gt;Contact Info&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Challenges&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#credits&#34;&gt;Image Credits&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/images/arrays_nltk.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Arrays and Strings&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mybinder.org/v2/gh/donnemartin/interactive-coding-challenges/master&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Challenge&lt;/th&gt; &#xA;   &lt;th&gt;Static Notebook&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Determine if a string contains unique characters&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/unique_chars/unique_chars_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/unique_chars/unique_chars_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Determine if a string is a permutation of another&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/permutation/permutation_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/permutation/permutation_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Determine if a string is a rotation of another&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/rotation/rotation_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/rotation/rotation_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Compress a string&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/compress/compress_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/compress/compress_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reverse characters in a string&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/reverse_string/reverse_string_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/reverse_string/reverse_string_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Given two strings, find the single different char&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/str_diff/str_diff_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/str_diff/str_diff_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find two indices that sum to a specific value&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/two_sum/two_sum_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/two_sum/two_sum_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement a hash table&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/hash_map/hash_map_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/hash_map/hash_map_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement fizz buzz&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/fizz_buzz/fizz_buzz_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/fizz_buzz/fizz_buzz_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the first non-repeated character in a string&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Remove specified characters in a string&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reverse words in a string&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Convert a string to an integer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Convert an integer to a string&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add a challenge&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/images/linked_lists_wikipedia.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Linked Lists&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mybinder.org/v2/gh/donnemartin/interactive-coding-challenges/master&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Challenge&lt;/th&gt; &#xA;   &lt;th&gt;Static Notebook&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Remove duplicates from a linked list&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/linked_lists/remove_duplicates/remove_duplicates_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/linked_lists/remove_duplicates/remove_duplicates_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the kth to last element of a linked list&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/linked_lists/kth_to_last_elem/kth_to_last_elem_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/linked_lists/kth_to_last_elem/kth_to_last_elem_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Delete a node in the middle of a linked list&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/linked_lists/delete_mid/delete_mid_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/linked_lists/delete_mid/delete_mid_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Partition a linked list around a given value&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/linked_lists/partition/partition_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/linked_lists/partition/partition_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add two numbers whose digits are stored in a linked list&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/linked_lists/add_reverse/add_reverse_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/linked_lists/add_reverse/add_reverse_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the start of a linked list loop&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.jupyter.org/github/donnemartin/interactive-coding-challenges/blob/master/linked_lists/find_loop_start/find_loop_start_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/linked_lists/find_loop_start/find_loop_start_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Determine if a linked list is a palindrome&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/linked_lists/palindrome/palindrome_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/linked_lists/palindrome/palindrome_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement a linked list&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/linked_lists/linked_list/linked_list_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/linked_lists/linked_list/linked_list_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Determine if a list is cyclic or acyclic&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add a challenge&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/images/stack_queue_wikipedia.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Stacks and Queues&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mybinder.org/v2/gh/donnemartin/interactive-coding-challenges/master&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Challenge&lt;/th&gt; &#xA;   &lt;th&gt;Static Notebook&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement n stacks using a single array&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/stacks_queues/n_stacks/n_stacks_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/stacks_queues/n_stacks/n_stacks_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement a stack that keeps track of its minimum element&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/stacks_queues/stack_min/stack_min_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/stacks_queues/stack_min/stack_min_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement a set of stacks class that wraps a list of capacity-bounded stacks&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.jupyter.org/github/donnemartin/interactive-coding-challenges/blob/master/stacks_queues/set_of_stacks/set_of_stacks_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/stacks_queues/set_of_stacks/set_of_stacks_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement a queue using two stacks&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/stacks_queues/queue_from_stacks/queue_from_stacks_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/stacks_queues/queue_from_stacks/queue_from_stacks_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sort a stack using another stack as a buffer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/stacks_queues/sort_stack/sort_stack_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/stacks_queues/sort_stack/sort_stack_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement a stack&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/stacks_queues/stack/stack_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/stacks_queues/stack/stack_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement a queue&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/stacks_queues/queue_list/queue_list_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/stacks_queues/queue_list/queue_list_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement a priority queue backed by an array&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/priority_queue/priority_queue_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/priority_queue/priority_queue_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add a challenge&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/images/binary_tree_wikipedia.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Graphs and Trees&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mybinder.org/v2/gh/donnemartin/interactive-coding-challenges/master&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Challenge&lt;/th&gt; &#xA;   &lt;th&gt;Static Notebooks&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement depth-first search (pre-, in-, post-order) on a tree&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/tree_dfs/dfs_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/tree_dfs/dfs_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement breadth-first search on a tree&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/tree_bfs/bfs_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/tree_bfs/bfs_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Determine the height of a tree&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/tree_height/height_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/tree_height/height_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Create a binary search tree with minimal height from a sorted array&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/bst_min/bst_min_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/bst_min/bst_min_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Create a linked list for each level of a binary tree&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/tree_level_lists/tree_level_lists_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/tree_level_lists/tree_level_lists_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Check if a binary tree is balanced&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/check_balance/check_balance_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/check_balance/check_balance_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Determine if a tree is a valid binary search tree&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/bst_validate/bst_validate_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/bst_validate/bst_validate_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the in-order successor of a given node in a binary search tree&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/bst_successor/bst_successor_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/bst_successor/bst_successor_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the second largest node in a binary search tree&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/bst_second_largest/bst_second_largest_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/bst_second_largest/bst_second_largest_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the lowest common ancestor&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/tree_lca/tree_lca_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/tree_lca/tree_lca_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Invert a binary tree&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/invert_tree/invert_tree_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/invert_tree/invert_tree_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement a binary search tree&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/bst/bst_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/bst/bst_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement a min heap&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/min_heap/min_heap_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/min_heap/min_heap_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement a trie&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/trie/trie_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/trie/trie_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement depth-first search on a graph&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph_dfs/dfs_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph_dfs/dfs_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement breadth-first search on a graph&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph_bfs/bfs_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph_bfs/bfs_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Determine if there is a path between two nodes in a graph&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph_path_exists/path_exists_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph_path_exists/path_exists_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement a graph&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph/graph_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph/graph_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find a build order given a list of projects and dependencies.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph_build_order/build_order_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph_build_order/build_order_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the shortest path in a weighted graph.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph_shortest_path/graph_shortest_path_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph_shortest_path/graph_shortest_path_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the shortest path in an unweighted graph.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph_shortest_path_unweighted/shortest_path_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/graphs_trees/graph_shortest_path_unweighted/shortest_path_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add a challenge&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/6/6a/Sorting_quicksort_anim.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Sorting&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mybinder.org/v2/gh/donnemartin/interactive-coding-challenges/master&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Challenge&lt;/th&gt; &#xA;   &lt;th&gt;Static Notebooks&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement selection sort&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/selection_sort/selection_sort_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/selection_sort/selection_sort_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement insertion sort&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/insertion_sort/insertion_sort_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/insertion_sort/insertion_sort_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement quick sort&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/quick_sort/quick_sort_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/quick_sort/quick_sort_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement merge sort&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/merge_sort/merge_sort_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/merge_sort/merge_sort_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement radix sort&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/radix_sort/radix_sort_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/radix_sort/radix_sort_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sort an array of strings so all anagrams are next to each other&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/anagrams/anagrams_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/anagrams/anagrams_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find an item in a sorted, rotated array&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/rotated_array_search/rotated_array_search_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/rotated_array_search/rotated_array_search_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Search a sorted matrix for an item&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/search_sorted_matrix/search_sorted_matrix_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/search_sorted_matrix/search_sorted_matrix_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find an int not in an input of n integers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/new_int/new_int_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/new_int/new_int_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Given sorted arrays A, B, merge B into A in sorted order&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/merge_into/merge_into_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/sorting_searching/merge_into/merge_into_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement a stable selection sort&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Make an unstable sort stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement an efficient, in-place version of quicksort&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Given two sorted arrays, merge one into the other in sorted order&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find an element in a rotated and sorted array of integers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add a challenge&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/images/fibonacci_wikipedia.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Recursion and Dynamic Programming&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mybinder.org/v2/gh/donnemartin/interactive-coding-challenges/master&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Challenge&lt;/th&gt; &#xA;   &lt;th&gt;Static Notebooks&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement fibonacci recursively, dynamically, and iteratively&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/fibonacci/fibonacci_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/fibonacci/fibonacci_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Maximize items placed in a knapsack&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/knapsack_01/knapsack_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/knapsack_01/knapsack_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Maximize unbounded items placed in a knapsack&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/knapsack_unbounded/knapsack_unbounded_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/knapsack_unbounded/knapsack_unbounded_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the longest common subsequence&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/longest_common_subsequence/longest_common_subseq_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/longest_common_subsequence/longest_common_subseq_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the longest increasing subsequence&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/longest_inc_subseq/longest_inc_subseq_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/longest_inc_subseq/longest_inc_subseq_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Minimize the cost of matrix multiplication&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/matrix_mult/find_min_cost_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/matrix_mult/find_min_cost_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Maximize stock prices given k transactions&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/max_profit_k/max_profit_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/max_profit_k/max_profit_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the minimum number of ways to represent n cents given an array of coins&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/coin_change_min/coin_change_min_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/coin_change_min/coin_change_min_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the unique number of ways to represent n cents given an array of coins&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/coin_change/coin_change_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/coin_change/coin_change_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Print all valid combinations of n-pairs of parentheses&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/n_pairs_parentheses/n_pairs_parentheses_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/n_pairs_parentheses/n_pairs_parentheses_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Navigate a maze&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/grid_path/grid_path_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/grid_path/grid_path_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Print all subsets of a set&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/power_set/power_set_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/power_set/power_set_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Print all permutations of a string&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/permutations/permutations_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/permutations/permutations_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the magic index in an array&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/magic_index/magic_index_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/magic_index/magic_index_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the number of ways to run up n steps&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/steps/steps_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/steps/steps_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement the Towers of Hanoi with 3 towers and N disks&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/hanoi/hanoi_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/recursion_dynamic/hanoi/hanoi_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement factorial recursively, dynamically, and iteratively&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Perform a binary search on a sorted array of integers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Print all combinations of a string&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement a paint fill function&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find all permutations to represent n cents, given 1, 5, 10, 25 cent coins&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add a challenge&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/images/probability_distribution_wikipedia.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Mathematics and Probability&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mybinder.org/v2/gh/donnemartin/interactive-coding-challenges/master&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Challenge&lt;/th&gt; &#xA;   &lt;th&gt;Static Notebooks&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Generate a list of primes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/math_probability/generate_primes/check_prime_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/math_probability/generate_primes/check_prime_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the digital root&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/math_probability/add_digits/add_digits_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/math_probability/add_digits/add_digits_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Create a class supporting insert, max, min, mean, mode in O(1)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/math_probability/math_ops/math_ops_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/math_probability/math_ops/math_ops_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Determine if a number is a power of two&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/math_probability/power_two/power_two_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/math_probability/power_two/power_two_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add two numbers without the + or - sign&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/math_probability/sum_two/sum_two_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/math_probability/sum_two/sum_two_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Subtract two numbers without the + or - sign&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/math_probability/sub_two/sub_two_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/math_probability/sub_two/sub_two_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Check if a number is prime&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Determine if two lines on a Cartesian plane intersect&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Using only add, implement multiply, subtract, and divide for ints&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the kth number such that the only prime factors are 3, 5, and 7&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add a challenge&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/images/bit_manipulation_wikipedia.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Bit Manipulation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mybinder.org/v2/gh/donnemartin/interactive-coding-challenges/master&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Challenge&lt;/th&gt; &#xA;   &lt;th&gt;Static Notebooks&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Implement common bit manipulation operations&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/bit_manipulation/bit/bit_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/bit_manipulation/bit/bit_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Determine number of bits to flip to convert a into b&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/bit_manipulation/bits_to_flip/bits_to_flip_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/bit_manipulation/bits_to_flip/bits_to_flip_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Draw a line on a screen&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/bit_manipulation/draw_line/draw_line_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/bit_manipulation/draw_line/draw_line_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Flip a bit to maximize the longest sequence of 1s&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/bit_manipulation/flip_bit/flip_bit_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/bit_manipulation/flip_bit/flip_bit_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Get the next largest and next smallest numbers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/bit_manipulation/get_next/get_next_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/bit_manipulation/get_next/get_next_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Merge two binary numbers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/bit_manipulation/insert_m_into_n/insert_m_into_n_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/bit_manipulation/insert_m_into_n/insert_m_into_n_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Swap odd and even bits in an integer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/bit_manipulation/pairwise_swap/pairwise_swap_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/bit_manipulation/pairwise_swap/pairwise_swap_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Print the binary representation of a number between 0 and 1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/bit_manipulation/print_binary/print_binary_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/bit_manipulation/print_binary/print_binary_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Determine the number of 1s in the binary representation of a given integer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add a challenge&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/images/logo_topcoder.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Online Judges&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mybinder.org/v2/gh/donnemartin/interactive-coding-challenges/master&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Challenge&lt;/th&gt; &#xA;   &lt;th&gt;Static Notebooks&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the longest substring with at most k distinct chars&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/longest_substr_k_distinct/longest_substr_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/longest_substr_k_distinct/longest_substr_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the highest product of three numbers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/prod_three/prod_three_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/prod_three/prod_three_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Maximize stocks profit from 1 buy and 1 sell&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/max_profit/max_profit_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/max_profit/max_profit_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Move all zeroes in a list to the end&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/move_zeroes/move_zeroes_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/move_zeroes/move_zeroes_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the products of every other int&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/mult_other_numbers/mult_other_numbers_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/mult_other_numbers/mult_other_numbers_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Given a list of entries and exits, find the busiest period&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/busiest_period/busiest_period_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/busiest_period/busiest_period_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Determine an island&#39;s perimeter&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/island_perimeter/island_perimeter_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/island_perimeter/island_perimeter_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Format license keys&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/license_key/format_license_key_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/license_key/format_license_key_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the longest absolute file path&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/longest_abs_file_path/longest_path_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/longest_abs_file_path/longest_path_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Merge tuple ranges&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/merge_ranges/merge_ranges_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/merge_ranges/merge_ranges_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Assign cookies&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/assign_cookies/assign_cookies_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/assign_cookies/assign_cookies_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Determine if you can win in Nim&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/nim/nim_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/nim/nim_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Check if a magazine could have been used to create a ransom note&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/ransom_note/ransom_note_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/ransom_note/ransom_note_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Find the number of times a sentence can fit on a screen&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/sentence_screen_fit/sentence_screen_fit_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/sentence_screen_fit/sentence_screen_fit_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Utopian tree&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/utopian_tree/utopian_tree_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/utopian_tree/utopian_tree_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Maximizing xor&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/maximizing_xor/maximizing_xor_challenge.ipynb&#34;&gt;Challenge&lt;/a&gt; │ &lt;a href=&#34;http://nbviewer.ipython.org/github/donnemartin/interactive-coding-challenges/blob/master/online_judges/maximizing_xor/maximizing_xor_solution.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add a challenge&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; │ &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Repo Structure&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;interactive-coding-challenges        # Repo&#xA;├─ arrays_strings                    # Category of challenges&#xA;│  ├─ rotation                       # Challenge folder&#xA;│  │  ├─ rotation_challenge.ipynb    # Challenge notebook&#xA;│  │  ├─ rotation_solution.ipynb     # Solution notebook&#xA;│  │  ├─ test_rotation.py            # Unit test*&#xA;│  ├─ compress&#xA;│  │  ├─ compress_challenge.ipynb&#xA;│  │  ├─ compress_solution.ipynb&#xA;│  │  ├─ test_compress.py&#xA;│  ├─ ...&#xA;├─ linked_lists&#xA;│  ├─ palindrome&#xA;│  │  └─ ...&#xA;│  ├─ ...&#xA;├─ ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;i&gt;*The notebooks (.ipynb) read/write the associated unit test (.py) file.&lt;/i&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Notebook Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Zero Install&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mybinder.org/v2/gh/donnemartin/interactive-coding-challenges/master&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This README contains links to &lt;a href=&#34;https://mybinder.org/v2/gh/donnemartin/interactive-coding-challenges/master&#34;&gt;Binder&lt;/a&gt; , which hosts &lt;strong&gt;dynamic notebooks&lt;/strong&gt; of the repo&#39;s contents online with no installation needed.&lt;/p&gt; &#xA;&lt;h3&gt;Jupyter Notebook&lt;/h3&gt; &#xA;&lt;p&gt;Run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install jupyter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For detailed instructions, scripts, and tools to more optimally set up your development environment, check out the &lt;a href=&#34;https://github.com/donnemartin/dev-setup&#34;&gt;dev-setup&lt;/a&gt; repo.&lt;/p&gt; &#xA;&lt;p&gt;For more details on notebook installation, follow the directions &lt;a href=&#34;http://ipython.org/install.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;More information on IPython/Jupyter Notebooks can be found &lt;a href=&#34;http://ipython.org/notebook.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Running Challenges&lt;/h2&gt; &#xA;&lt;h3&gt;Notebooks&lt;/h3&gt; &#xA;&lt;p&gt;Challenges are provided in the form of &lt;strong&gt;IPython/Jupyter Notebooks&lt;/strong&gt; and have been &lt;strong&gt;tested with Python 2.7 and Python 3.x&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;If you need to install IPython/Jupyter Notebook, see the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/#notebook-installation&#34;&gt;Notebook Installation&lt;/a&gt; section.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This README contains links to &lt;a href=&#34;http://nbviewer.ipython.org&#34;&gt;nbviewer&lt;/a&gt;, which hosts &lt;strong&gt;static notebooks&lt;/strong&gt; of the repo&#39;s contents&lt;/li&gt; &#xA; &lt;li&gt;To interact with or to modify elements within the &lt;strong&gt;dynamic notebooks&lt;/strong&gt;, refer to the instructions below&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Run the notebook of challenges:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/donnemartin/interactive-coding-challenges.git&#xA;$ cd interactive-coding-challenges&#xA;$ jupyter notebook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will launch your web browser with the list of challenge categories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Navigate to the &lt;strong&gt;Challenge Notebook&lt;/strong&gt; you wish to solve&lt;/li&gt; &#xA; &lt;li&gt;Run the cells within the challenge notebook (Cell-&amp;gt;Run All) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This will result in an expected unit test error&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Solve the challenge and verify it passes the unit test&lt;/li&gt; &#xA; &lt;li&gt;Check out the accompanying &lt;strong&gt;Solution Notebook&lt;/strong&gt; for further discussion&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To &lt;strong&gt;debug&lt;/strong&gt; your solution with pdb, refer to the following &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/issues/11&#34;&gt;ticket&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note: If your solution is different from those listed in the Solution Notebook, consider submitting a pull request so others can benefit from your work. Review the &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Future Development&lt;/h2&gt; &#xA;&lt;p&gt;Challenges, solutions, and unit tests are presented in the form of &lt;strong&gt;IPython/Jupyter Notebooks&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Notebooks currently contain mostly Python solutions (tested on both Python 2.7 and Python 3.x), but can be extended to include &lt;a href=&#34;https://github.com/ipython/ipython/wiki/IPython-kernels-for-other-languages&#34;&gt;40+ supported languages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Repo will be &lt;strong&gt;continually updated&lt;/strong&gt; with new solutions and challenges&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contributions&lt;/a&gt; are welcome!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome!&lt;/p&gt; &#xA;&lt;p&gt;Review the &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/raw/master/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt; for details on how to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Submit issues&lt;/li&gt; &#xA; &lt;li&gt;Add solutions to existing challenges&lt;/li&gt; &#xA; &lt;li&gt;Add new challenges&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;h3&gt;Resources&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.amazon.com/Cracking-Coding-Interview-Programming-Questions/dp/098478280X&#34;&gt;Cracking the Coding Interview&lt;/a&gt; | &lt;a href=&#34;https://github.com/gaylemcd/ctci&#34;&gt;GitHub Solutions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.amazon.com/gp/product/1118261364/&#34;&gt;Programming Interviews Exposed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.amazon.com/Algorithm-Design-Manual-Steve-Skiena/dp/0387948600&#34;&gt;The Algorithm Design Manual&lt;/a&gt; | &lt;a href=&#34;http://www.algorithm.cs.sunysb.edu/algowiki/index.php/The_Algorithms_Design_Manual_(Second_Edition)&#34;&gt;Solutions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.careercup.com/&#34;&gt;CareerCup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.quora.com/&#34;&gt;Quora&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.hackerrank.com&#34;&gt;HackerRank&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leetcode.com/&#34;&gt;LeetCode&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Images&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.nltk.org/images/string-slicing.png&#34;&gt;Arrays and Strings: nltk.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/6/6d/Singly-linked-list.svg&#34;&gt;Linked Lists: wikipedia.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/2/29/Data_stack.svg&#34;&gt;Stacks: wikipedia.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/5/52/Data_Queue.svg&#34;&gt;Queues: wikipedia.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/6/6a/Sorting_quicksort_anim.gif&#34;&gt;Sorting: wikipedia.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/b/bf/PascalTriangleFibanacci.svg&#34;&gt;Recursion and Dynamic Programming: wikipedia.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/f/f7/Binary_tree.svg&#34;&gt;Graphs and Trees: wikipedia.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/d/d2/Gaussian_distribution_2.jpg&#34;&gt;Mathematics and Probability: wikipedia.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/5/5c/Rotate_left_logically.svg&#34;&gt;Bit Manipulation: wikipedia.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.topcoder.com/wp-content/uploads/2014/05/topcoder_logo_home_sm.png&#34;&gt;Online Judges: topcoder.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact Info&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to contact me to discuss any issues, questions, or comments.&lt;/p&gt; &#xA;&lt;p&gt;My contact info can be found on my &lt;a href=&#34;https://github.com/donnemartin&#34;&gt;GitHub page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;I am providing code and resources in this repository to you under an open source license. Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2015 Donne Martin&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>WAMAWAMA/wama_medic</title>
    <updated>2022-10-18T01:37:47Z</updated>
    <id>tag:github.com,2022-10-18:/WAMAWAMA/wama_medic</id>
    <link href="https://github.com/WAMAWAMA/wama_medic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple-to-use yet function-rich medical image processing toolbox&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ωαмα m💊dic&lt;/h1&gt; &#xA;&lt;p&gt;A simple-to-use yet function-rich medical image processing toolbox&lt;/p&gt; &#xA;&lt;p&gt;Highlights&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2D and 3D visualization directly in the python environment, which is convenient for debugging code;&lt;/li&gt; &#xA; &lt;li&gt;provides functions such as resampleing, dividing patches, restoring patches, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Environmental Preparation&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;simpleITK&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MIC-DKFZ/batchgenerators&#34;&gt;&lt;code&gt;batchgenerator&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mayavi&lt;/code&gt;（optional，cannot be installed directly on Windows, please search for the installation method by yourself, or directly copy the &lt;code&gt;conda env&lt;/code&gt; of the installed mayavi in the following download link to the envs path of the local conda.）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;mayavi conda env: &lt;a href=&#34;https://pan.baidu.com/s/1DsddpkbWJ9vexi94xv2dXA&#34;&gt;[baidu disk with pw:tqu4]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;demo data: &lt;a href=&#34;https://drive.google.com/drive/folders/17Gq9TaU057ptgc5PIFrOy5jmnxRRktCW?usp=sharing&#34;&gt;[Google drive]&lt;/a&gt;（Includes CT and MRI from TotalSegmentator and MICCAI 2015 OAR datasets, respectively）&lt;/p&gt; &#xA;&lt;h1&gt;Main function&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Load medical images in nii or nii.gz format (one patient can load multiple modalities)&lt;/li&gt; &#xA; &lt;li&gt;Voxel resampling&lt;/li&gt; &#xA; &lt;li&gt;2D, 3D, nD image scaling&lt;/li&gt; &#xA; &lt;li&gt;Get the bounding box of the mask&lt;/li&gt; &#xA; &lt;li&gt;Window width and window level adjustment&lt;/li&gt; &#xA; &lt;li&gt;Arbitrary dimension split or &lt;strong&gt;reorganize&lt;/strong&gt; patches&lt;/li&gt; &#xA; &lt;li&gt;3D volume visualization of original image, mask, bbox (interactive)&lt;/li&gt; &#xA; &lt;li&gt;3D layer visualization of original image, mask, bbox (interactive)&lt;/li&gt; &#xA; &lt;li&gt;Generate bbox (ie ROI) according to the mask, and crop the image in the ROI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;can be used to&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Data preprocessing such as resampling&lt;/li&gt; &#xA; &lt;li&gt;extract patches from scan&lt;/li&gt; &#xA; &lt;li&gt;reorganize scan from patches&lt;/li&gt; &#xA; &lt;li&gt;Observe the overall effect after 3D amplification (such as 3D warping and patch recombination)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;todo&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Visual transparency control&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Multi-class segmentation label visualization&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Registration algorithm between cases and modes&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Optimize processing speed&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Derivative images such as edge enhancement, wavelet decomposition&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo1: Load original image and mask, voxel resampling, adjust window width and window level, 3D visualization&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#xA;from wama.utils import *&#xA;&#xA;img_path = r&#34;D:\git\testnini\s1_v1.nii&#34;&#xA;mask_path = r&#34;D:\git\testnini\s1_v1_m1_w.nii&#34;&#xA;&#xA;subject1 = wama()  # build instance&#xA;subject1.appendImageFromNifti(&#39;CT&#39;, img_path)  # Load image, custom modal name, such as &#39;CT&#39;&#xA;subject1.appendSementicMaskFromNifti(&#39;CT&#39;, mask_path)  # Load the mask, pay attention to the corresponding modal name&#xA;# also can use appendImageAndSementicMaskFromNifti to load both image and mask at the same time&#xA;&#xA;subject1.resample(&#39;CT&#39;, aim_spacing=[1, 1, 1])  # Resample to 1x1x1 mm (note the unit is mm)&#xA;subject1.adjst_Window(&#39;CT&#39;, WW = 321, WL = 123) # Adjust window width and window level&#xA;&#xA;# 3D visualization&#xA;subject1.show_scan(&#39;CT&#39;, show_type=&#39;slice&#39;)  # Display original image in slice mode&#xA;subject1.show_scan(&#39;CT&#39;, show_type=&#39;volume&#39;)  # Display original image in volume mode&#xA;subject1.show_MaskAndScan(&#39;CT&#39;, show_type=&#39;volume&#39;) # Display original image and mask at the same time&#xA;subject1.show_bbox(&#39;CT&#39;, 2)  # Display the bbox shape. Note that when there is no bbox, the minimum external matrix is automatically generated from the mask as bbox&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;!-- Line 1: Original Input --&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/WAMAWAMA/wama_medic/raw/master/pic/1_show_scan_slicemode.gif&#34; height=&#34;283&#34; width=&#34;324&#34; alt=&#34;input images&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/WAMAWAMA/wama_medic/raw/master/pic/1_show_scan_volumemode.gif&#34; height=&#34;283&#34; width=&#34;324&#34; alt=&#34;input heatmaps&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Display original image in slice mode&lt;/th&gt; &#xA;   &lt;th&gt;Display original image in volume mode&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;!-- Line 1: Original Input --&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/WAMAWAMA/wama_medic/raw/master/pic/1_show_scanandmask_volumemode.gif&#34; height=&#34;283&#34; width=&#34;324&#34; alt=&#34;input images&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/WAMAWAMA/wama_medic/raw/master/pic/1_show_bbox_volumemode.gif&#34; height=&#34;283&#34; width=&#34;324&#34; alt=&#34;input heatmaps&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Display original image and mask at the same time&lt;/th&gt; &#xA;   &lt;th&gt;show bbox shape&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Demo 2.Split or reorganize patches in any dimension&lt;/h2&gt; &#xA;&lt;p&gt;To be precise, it is to restore the patch to the corresponding position in the original space. If a patch passes through the segmentation network and outputs the segmentation result of the patch, one can be restored to the original position for visualization.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from wama.utils import *&#xA;&#xA;img_path = r&#34;D:\git\testnini\s1_v1.nii&#34;&#xA;mask_path = r&#34;D:\git\testnini\s1_v1_m1_w.nii&#34;&#xA;&#xA;subject1 = wama()  # build instance&#xA;subject1.appendImageFromNifti(&#39;CT&#39;, img_path)  # Load image, custom modal name, such as &#39;CT&#39;&#xA;subject1.appendSementicMaskFromNifti(&#39;CT&#39;, mask_path)  # Load the mask, pay attention to the corresponding modal name&#xA;# also can use appendImageAndSementicMaskFromNifti to load both image and mask at the same time&#xA;&#xA;subject1.resample(&#39;CT&#39;, aim_spacing=[1, 1, 1])  # Resample to 1x1x1 mm (note the unit is mm)&#xA;subject1.adjst_Window(&#39;CT&#39;, WW=321, WL=123)  # Adjust window width and window level&#xA;&#xA;# smooth denoising&#xA;qwe = subject1.slice_neibor_add(&#39;CT&#39;, axis=[&#39;z&#39;], add_num=[7], add_weights=&#39;Gaussian&#39;)  # Use a Gaussian kernel, smooth on the z-axis&#xA;&#xA;# Extract the image in the bbox (bbox is the minimum external matrix of the segmentation mask)&#xA;bbox_image = subject1.getImagefromBbox(&#39;CT&#39;, ex_mode=&#39;square&#39;, ex_mms=24, aim_shape=[256, 256, 256])&#xA;&#xA;&#34;&#34;&#34;&#xA;The logic of splitting patch:&#xA;     1) First frame the ROI to obtain the bbox, and then operate within the ROI&#xA;     2) External expansion roi&#xA;     3) Take out the image in the roi and scale it to aim_shape&#xA;     4) split patch&#xA;&#34;&#34;&#34;&#xA;&#xA;# Split patch(setting 1): divide the patch along the Z axis, the patch is 2D, and take one layer every 10 layers&#xA;subject1.makePatch(mode=&#39;slideWinND&#39;,  # default is ok&#xA;&#x9;&#x9;&#x9;&#x9;   img_type=&#39;CT&#39;,  # modality keyword&#xA;&#x9;&#x9;&#x9;&#x9;   aim_shape=[256, 256, 256],  # scale to this size&#xA;&#x9;&#x9;&#x9;&#x9;   slices=[256 // 2, 256 // 2, 1],  # The length of each patch in each dimension (note that the Z axis is 1, that is, 2D patches are divided along the Z axis)&#xA;&#x9;&#x9;&#x9;&#x9;   stride=[256 // 2, 256 // 2, 10],  # The sliding window size of the patch in each axis (note that the z axis here is 10)&#xA;&#x9;&#x9;&#x9;&#x9;   expand_r=[1, 1, 1],  # Similar to the expansion coefficient of dilated convolution (hole convolution), 1 means no expansion&#xA;&#x9;&#x9;&#x9;&#x9;   ex_mode=&#39;square&#39;,  # After taking the bbox, turn the bbox into a cube&#xA;&#x9;&#x9;&#x9;&#x9;   ex_mms=24,  # How many mm does the bbox expand (or after it becomes a cube)&#xA;&#x9;&#x9;&#x9;&#x9;   )&#xA;reconstuct_img = slide_window_n_axis_reconstruct(subject1.patches[&#39;CT&#39;])  # Put all the patches back into the original space&#xA;reconstuct_img_half = slide_window_n_axis_reconstruct(&#xA;&#x9;subject1.patches[&#39;CT&#39;][:len(subject1.patches[&#39;CT&#39;]) // 2])  # Put half of the patches back into the original space&#xA;&#xA;patch = subject1.patches[&#39;CT&#39;]  # get patches&#xA;show3D(np.concatenate([bbox_image, reconstuct_img], axis=1))&#xA;show3D(np.concatenate([bbox_image, reconstuct_img_half], axis=1))&#xA;&#xA;&#xA;&#xA;# Split patch(setting 2)：Block (similar to Rubik&#39;s Cube)&#xA;subject1.makePatch(mode=&#39;slideWinND&#39;,  # default is ok&#xA;&#x9;&#x9;&#x9;&#x9;   img_type=&#39;CT&#39;,  # modality keyword&#xA;&#x9;&#x9;&#x9;&#x9;   aim_shape=[256, 256, 256],  # scale to this size&#xA;&#x9;&#x9;&#x9;&#x9;   slices=[256 // 8, 256 // 8,  256 // 8],&#xA;&#x9;&#x9;&#x9;&#x9;   stride=[( 256 // 8)+3, ( 256 // 8)+3, ( 256 // 8)+3],&#xA;&#x9;&#x9;&#x9;&#x9;   expand_r=[1, 1, 1], &#xA;&#x9;&#x9;&#x9;&#x9;   ex_mode=&#39;square&#39;, &#xA;&#x9;&#x9;&#x9;&#x9;   ex_mms=24,&#xA;&#x9;&#x9;&#x9;&#x9;   )&#xA;reconstuct_img = slide_window_n_axis_reconstruct(subject1.patches[&#39;CT&#39;])&#xA;reconstuct_img_half = slide_window_n_axis_reconstruct(&#xA;&#x9;subject1.patches[&#39;CT&#39;][:len(subject1.patches[&#39;CT&#39;]) // 2])&#xA;&#xA;patch = subject1.patches[&#39;CT&#39;]  # 获取patch&#xA;show3D(np.concatenate([bbox_image, reconstuct_img], axis=1))&#xA;show3D(np.concatenate([bbox_image, reconstuct_img_half], axis=1))&#xA;&#xA;&#xA;&#xA;# Split patch(setting 3)：Observe the influence of the expansion coefficient (in fact, it is basically useless)&#xA;subject1.makePatch(mode=&#39;slideWinND&#39;,&#xA;&#x9;&#x9;&#x9;&#x9;   img_type=&#39;CT&#39;, &#xA;&#x9;&#x9;&#x9;&#x9;   aim_shape=[256, 256, 256], &#xA;&#x9;&#x9;&#x9;&#x9;   slices=[30, 30, 30], &#xA;&#x9;&#x9;&#x9;&#x9;   stride=[1, 1, 1], &#xA;&#x9;&#x9;&#x9;&#x9;   expand_r=[5, 5, 5],  # Similar to the expansion coefficient of dilated convolution (hole convolution), 1 means no expansion&#xA;&#x9;&#x9;&#x9;&#x9;   ex_mode=&#39;square&#39;, &#xA;&#x9;&#x9;&#x9;&#x9;   ex_mms=24,  &#xA;&#x9;&#x9;&#x9;&#x9;   )&#xA;&#xA;reconstuct_img_onlyone = slide_window_n_axis_reconstruct([subject1.patches[&#39;CT&#39;][0]])  # Put only one patch back into the original space (observe the effect of the expansion coefficient)&#xA;&#xA;patch = subject1.patches[&#39;CT&#39;] # get patches&#xA;show3D(np.concatenate([bbox_image, reconstuct_img_onlyone], axis=1))&#xA;&#xA;&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;!-- Line 1: Original Input --&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/WAMAWAMA/wama_medic/raw/master/pic/2_show_patches_all_z.gif&#34; height=&#34;283&#34; width=&#34;324&#34; alt=&#34;input images&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/WAMAWAMA/wama_medic/raw/master/pic/2_show_patches_half_z.gif&#34; height=&#34;283&#34; width=&#34;324&#34; alt=&#34;input heatmaps&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Setting 1: Split the patch along the Z axis and put back allpatch&lt;/th&gt; &#xA;   &lt;th&gt;Setting 1: Split the patch along the Z axis and put back half of the patch&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;!-- Line 1: Original Input --&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/WAMAWAMA/wama_medic/raw/master/pic/2_show_patches_squared.gif&#34; height=&#34;283&#34; width=&#34;324&#34; alt=&#34;input images&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/WAMAWAMA/wama_medic/raw/master/pic/3_show_patches_expand.gif&#34; height=&#34;283&#34; width=&#34;324&#34; alt=&#34;input images&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Setting 2: Block (similar to Rubik&#39;s Cube)&lt;/th&gt; &#xA;   &lt;th&gt;Setting 3: Observe the effect of the expansion coefficient&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Demo 3.Image enhancement or augmentation (3D)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#xA;from wama.utils import *&#xA;from wama.data_augmentation import aug3D&#xA;&#xA;img_path = r&#39;D:\git\testnini\s22_v1.nii.gz&#39;&#xA;mask_path = r&#39;D:\git\testnini\s22_v1_m1.nii.gz&#39;&#xA;&#xA;subject1 = wama()&#xA;subject1.appendImageAndSementicMaskFromNifti(&#39;CT&#39;, img_path, mask_path)&#xA;subject1.adjst_Window(&#39;CT&#39;, 321, 123)&#xA;bbox_image = subject1.getImagefromBbox(&#39;CT&#39;,ex_mode=&#39;square&#39;, aim_shape=[128,128,128])&#xA;&#xA;&#xA;bbox_image_batch = np.expand_dims(np.stack([bbox_image,bbox_image,bbox_image,bbox_image,bbox_image]),axis=1)# build batch&#xA;bbox_mask_batch = np.zeros(bbox_image_batch.shape)&#xA;bbox_mask_batch[:,:,20:100,20:100,20:100] = 1&#xA;&#xA;auger = aug3D(size=[128,128,128], deformation_scale = 0.25) # The size can be the original image size (or batch size)&#xA;aug_result = auger.aug(dict(data=bbox_image_batch, seg = bbox_mask_batch))  # Note that it needs to be passed in as a dictionary&#xA;&#xA;# visualization&#xA;index = 1&#xA;show3D(np.concatenate([np.squeeze(aug_result[&#39;seg&#39;][index],axis=0),np.squeeze(bbox_mask_batch[index],axis=0)],axis=1))&#xA;aug_img = np.squeeze(aug_result[&#39;data&#39;][index],axis=0)&#xA;show3D(np.concatenate([aug_img,bbox_image],axis=1)*100)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;!-- Line 1: Original Input --&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/WAMAWAMA/wama_medic/raw/master/pic/4_scan_aug.gif&#34; height=&#34;283&#34; width=&#34;324&#34; alt=&#34;input images&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/WAMAWAMA/wama_medic/raw/master/pic/4_mask_aug.gif&#34; height=&#34;283&#34; width=&#34;324&#34; alt=&#34;input heatmaps&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Original image, before and after amplification&lt;/th&gt; &#xA;   &lt;th&gt;mask, before and after amplification&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Demo 4.image cropping&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from wama.utils import *&#xA;&#xA;img_path = r&#34;D:\git\testnini\s1_v1.nii&#34;&#xA;mask_path = r&#34;D:\git\testnini\s1_v1_m1_w.nii&#34;&#xA;&#xA;subject1 = wama() # build instance&#xA;subject1.appendImageFromNifti(&#39;CT&#39;, img_path)  # Load image, custom modal name, such as &#39;CT&#39;&#xA;subject1.appendSementicMaskFromNifti(&#39;CT&#39;, mask_path)  # Load the mask, pay attention to the corresponding modal name&#xA;# It is also possible to use appendImageAndSementicMaskFromNifti to load both image and mask at the same time&#xA;&#xA;print(subject1.scan[&#39;CT&#39;].shape)&#xA;&#xA;&#xA;# crop&#xA;subject1.scan[&#39;CT&#39;] = subject1.scan[&#39;CT&#39;][:,:,:100]&#xA;subject1.sementic_mask[&#39;CT&#39;] = subject1.sementic_mask[&#39;CT&#39;][:,:,:100]&#xA;&#xA;print(subject1.scan[&#39;CT&#39;].shape)&#xA;&#xA;&#xA;writeIMG(r&#34;D:\git\testnini\s1_v1_cut.nii&#34;,&#xA;&#x9;&#x9; subject1.scan[&#39;CT&#39;],&#xA;&#x9;&#x9; subject1.spacing[&#39;CT&#39;],&#xA;&#x9;&#x9; subject1.origin[&#39;CT&#39;],&#xA;&#x9;&#x9; subject1.transfmat[&#39;CT&#39;])&#xA;writeIMG(r&#34;D:\git\testnini\s1_v1_m1_w_cut.nii&#34;,&#xA;&#x9;&#x9; subject1.sementic_mask[&#39;CT&#39;],&#xA;&#x9;&#x9; subject1.spacing[&#39;CT&#39;],&#xA;&#x9;&#x9; subject1.origin[&#39;CT&#39;],&#xA;&#x9;&#x9; subject1.transfmat[&#39;CT&#39;])&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>