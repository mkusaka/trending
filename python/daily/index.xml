<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-18T01:38:01Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>unitreerobotics/unitree_rl_gym</title>
    <updated>2024-12-18T01:38:01Z</updated>
    <id>tag:github.com,2024-12-18:/unitreerobotics/unitree_rl_gym</id>
    <link href="https://github.com/unitreerobotics/unitree_rl_gym" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Unitree RL GYM&lt;/h1&gt; &#xA;&lt;p&gt;This is a simple example of using Unitree Robots for reinforcement learning, including Unitree Go2, H1, H1_2, G1&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Isaac Gym&lt;/th&gt; &#xA;   &lt;th&gt;Mujoco&lt;/th&gt; &#xA;   &lt;th&gt;Physical&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://oss-global-cdn.unitree.com/static/5bbc5ab1d551407080ca9d58d7bec1c8.mp4&#34;&gt;&lt;img src=&#34;https://oss-global-cdn.unitree.com/static/32f06dc9dfe4452dac300dda45e86b34.GIF&#34; width=&#34;240px&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://oss-global-cdn.unitree.com/static/5aa48535ffd641e2932c0ba45c8e7854.mp4&#34;&gt;&lt;img src=&#34;https://oss-global-cdn.unitree.com/static/244cd5c4f823495fbfb67ef08f56aa33.GIF&#34; width=&#34;240px&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://oss-global-cdn.unitree.com/static/0818dcf7a6874b92997354d628adcacd.mp4&#34;&gt;&lt;img src=&#34;https://oss-global-cdn.unitree.com/static/78c61459d3ab41448cfdb31f6a537e8b.GIF&#34; width=&#34;240px&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;1. Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new python virtual env with python 3.8&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install pytorch 2.3.1 with cuda-12.1:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install torch==2.3.1 torchvision==0.18.1 torchaudio==2.3.1 --index-url https://download.pytorch.org/whl/cu121&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Isaac Gym&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Download and install Isaac Gym Preview 4 from &lt;a href=&#34;https://developer.nvidia.com/isaac-gym&#34;&gt;https://developer.nvidia.com/isaac-gym&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;cd isaacgym/python &amp;amp;&amp;amp; pip install -e .&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Try running an example &lt;code&gt;cd examples &amp;amp;&amp;amp; python 1080_balls_of_solitude.py&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;For troubleshooting check docs isaacgym/docs/index.html&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install rsl_rl (PPO implementation)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Clone &lt;a href=&#34;https://github.com/leggedrobotics/rsl_rl&#34;&gt;https://github.com/leggedrobotics/rsl_rl&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;cd rsl_rl &amp;amp;&amp;amp; git checkout v1.0.2 &amp;amp;&amp;amp; pip install -e .&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install unitree_rl_gym&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Navigate to the folder &lt;code&gt;unitree_rl_gym&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;pip install -e .&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install unitree_sdk2py (Optional for depoly on real robot)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Clone &lt;a href=&#34;https://github.com/unitreerobotics/unitree_sdk2_python&#34;&gt;https://github.com/unitreerobotics/unitree_sdk2_python&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;cd unitree_sdk2_python &amp;amp; pip install -e .&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;2. Train in Isaac Gym&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Train: &lt;code&gt;python legged_gym/scripts/train.py --task=go2&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To run on CPU add following arguments: &lt;code&gt;--sim_device=cpu&lt;/code&gt;, &lt;code&gt;--rl_device=cpu&lt;/code&gt; (sim on CPU and rl on GPU is possible).&lt;/li&gt; &#xA;   &lt;li&gt;To run headless (no rendering) add &lt;code&gt;--headless&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Important&lt;/strong&gt; : To improve performance, once the training starts press &lt;code&gt;v&lt;/code&gt; to stop the rendering. You can then enable it later to check the progress.&lt;/li&gt; &#xA;   &lt;li&gt;The trained policy is saved in &lt;code&gt;logs/&amp;lt;experiment_name&amp;gt;/&amp;lt;date_time&amp;gt;_&amp;lt;run_name&amp;gt;/model_&amp;lt;iteration&amp;gt;.pt&lt;/code&gt;. Where &lt;code&gt;&amp;lt;experiment_name&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;run_name&amp;gt;&lt;/code&gt; are defined in the train config.&lt;/li&gt; &#xA;   &lt;li&gt;The following command line arguments override the values set in the config files:&lt;/li&gt; &#xA;   &lt;li&gt;--task TASK: Task name.&lt;/li&gt; &#xA;   &lt;li&gt;--resume: Resume training from a checkpoint&lt;/li&gt; &#xA;   &lt;li&gt;--experiment_name EXPERIMENT_NAME: Name of the experiment to run or load.&lt;/li&gt; &#xA;   &lt;li&gt;--run_name RUN_NAME: Name of the run.&lt;/li&gt; &#xA;   &lt;li&gt;--load_run LOAD_RUN: Name of the run to load when resume=True. If -1: will load the last run.&lt;/li&gt; &#xA;   &lt;li&gt;--checkpoint CHECKPOINT: Saved model checkpoint number. If -1: will load the last checkpoint.&lt;/li&gt; &#xA;   &lt;li&gt;--num_envs NUM_ENVS: Number of environments to create.&lt;/li&gt; &#xA;   &lt;li&gt;--seed SEED: Random seed.&lt;/li&gt; &#xA;   &lt;li&gt;--max_iterations MAX_ITERATIONS: Maximum number of training iterations.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Play:&lt;code&gt;python legged_gym/scripts/play.py --task=go2&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;By default, the loaded policy is the last model of the last run of the experiment folder.&lt;/li&gt; &#xA;   &lt;li&gt;Other runs/model iteration can be selected by setting &lt;code&gt;load_run&lt;/code&gt; and &lt;code&gt;checkpoint&lt;/code&gt; in the train config.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;2.1 Play Demo&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Go2&lt;/th&gt; &#xA;   &lt;th&gt;G1&lt;/th&gt; &#xA;   &lt;th&gt;H1&lt;/th&gt; &#xA;   &lt;th&gt;H1_2&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://oss-global-cdn.unitree.com/static/d2e8da875473457c8d5d69c3de58b24d.mp4&#34;&gt;&lt;img src=&#34;https://oss-global-cdn.unitree.com/static/ba006789e0af4fe3867255f507032cd7.GIF&#34; alt=&#34;go2&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://oss-global-cdn.unitree.com/static/5bbc5ab1d551407080ca9d58d7bec1c8.mp4&#34;&gt;&lt;img src=&#34;https://oss-global-cdn.unitree.com/static/32f06dc9dfe4452dac300dda45e86b34.GIF&#34; alt=&#34;g1&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://oss-global-cdn.unitree.com/static/522128f4640c4f348296d2761a33bf98.mp4&#34;&gt;&lt;img src=&#34;https://oss-global-cdn.unitree.com/static/fa04e73966934efa9838e9c389f48fa2.GIF&#34; alt=&#34;h1&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://oss-global-cdn.unitree.com/static/15fa46984f2343cb83342fd39f5ab7b2.mp4&#34;&gt;&lt;img src=&#34;https://oss-global-cdn.unitree.com/static/83ed59ca0dab4a51906aff1f93428650.GIF&#34; alt=&#34;h1_2&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;3. Sim in Mujoco&lt;/h2&gt; &#xA;&lt;h3&gt;3.1 Mujoco Usage&lt;/h3&gt; &#xA;&lt;p&gt;To execute sim2sim in mujoco, execute the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python deploy/deploy_mujoco/deploy_mujoco.py {config_name}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;config_name&lt;/code&gt;: The file name of the configuration file. The configuration file will be found under &lt;code&gt;deploy/deploy_mujoco/configs/&lt;/code&gt;, for example &lt;code&gt;g1.yaml&lt;/code&gt;, &lt;code&gt;h1.yaml&lt;/code&gt;, &lt;code&gt;h1_2.yaml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;example&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python deploy/deploy_mujoco/deploy_mujoco.py g1.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3.2 Mujoco Demo&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;G1&lt;/th&gt; &#xA;   &lt;th&gt;H1&lt;/th&gt; &#xA;   &lt;th&gt;H1_2&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://oss-global-cdn.unitree.com/static/5aa48535ffd641e2932c0ba45c8e7854.mp4&#34;&gt;&lt;img src=&#34;https://oss-global-cdn.unitree.com/static/244cd5c4f823495fbfb67ef08f56aa33.GIF&#34; alt=&#34;mujoco_g1&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://oss-global-cdn.unitree.com/static/8934052becd84d08bc8c18c95849cf32.mp4&#34;&gt;&lt;img src=&#34;https://oss-global-cdn.unitree.com/static/7ab4e8392e794e01b975efa205ef491e.GIF&#34; alt=&#34;mujoco_h1&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://oss-global-cdn.unitree.com/static/ee7ee85bd6d249989a905c55c7a9d305.mp4&#34;&gt;&lt;img src=&#34;https://oss-global-cdn.unitree.com/static/2905e2fe9b3340159d749d5e0bc95cc4.GIF&#34; alt=&#34;mujoco_h1_2&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;4. Depoly on Physical Robot&lt;/h2&gt; &#xA;&lt;p&gt;reference to &lt;a href=&#34;https://raw.githubusercontent.com/unitreerobotics/unitree_rl_gym/main/deploy/deploy_real/README.md&#34;&gt;Deploy on Physical Robot(English)&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/unitreerobotics/unitree_rl_gym/main/deploy/deploy_real/README.zh.md&#34;&gt;实物部署（简体中文）&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>linyqh/NarratoAI</title>
    <updated>2024-12-18T01:38:01Z</updated>
    <id>tag:github.com,2024-12-18:/linyqh/NarratoAI</id>
    <link href="https://github.com/linyqh/NarratoAI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;利用AI大模型，一键解说并剪辑视频； Using AI models to automatically provide commentary and edit videos with a single click.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1 align=&#34;center&#34; style=&#34;font-size: 2cm;&#34;&gt; NarratoAI 😎📽️ &lt;/h1&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt;一站式 AI 影视解说+自动化剪辑工具🎬🎞️ &lt;/h3&gt; &#xA; &lt;h3&gt;📖 &lt;a href=&#34;https://raw.githubusercontent.com/linyqh/NarratoAI/main/README-cn.md&#34;&gt;English&lt;/a&gt; | 简体中文 | &lt;a href=&#34;https://raw.githubusercontent.com/linyqh/NarratoAI/main/README-ja.md&#34;&gt;日本語&lt;/a&gt; &lt;/h3&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;br&gt; NarratoAI 是一个自动化影视解说工具，基于LLM实现文案撰写、自动化视频剪辑、配音和字幕生成的一站式流程，助力高效内容创作。 &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/linyqh/NarratoAI&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/made_with-%E2%9D%A4-red?style=for-the-badge&amp;amp;labelColor=orange&#34; alt=&#34;madewithlove&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linyqh/NarratoAI/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/linyqh/NarratoAI?style=for-the-badge&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linyqh/NarratoAI/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/linyqh/NarratoAI?style=for-the-badge&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linyqh/NarratoAI/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/linyqh/NarratoAI?style=for-the-badge&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://discord.gg/uVAJftcm&#34; target=&#34;_blank&#34;&gt;💬 加入 discord 开源社区，获取项目动态和最新资讯。&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h2&gt;&lt;a href=&#34;https://p9mf6rjv3c.feishu.cn/wiki/SP8swLLZki5WRWkhuFvc2CyInDg?from=from_copylink&#34; target=&#34;_blank&#34;&gt;🎉🎉🎉 官方文档 🎉🎉🎉&lt;/a&gt; &lt;/h2&gt; &#xA; &lt;h3&gt;首页&lt;/h3&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linyqh/NarratoAI/main/docs/index-zh.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA; &lt;h3&gt;视频审查界面&lt;/h3&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linyqh/NarratoAI/main/docs/check-zh.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;最新资讯&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2024.12.16 发布新版本 0.3.9， 支持阿里 Qwen2-VL 模型理解视频；支持短剧混剪&lt;/li&gt; &#xA; &lt;li&gt;2024.11.24 开通 discord 社群：&lt;a href=&#34;https://discord.gg/uVAJftcm&#34;&gt;https://discord.gg/uVAJftcm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;2024.11.11 迁移开源社群，欢迎加入！ &lt;a href=&#34;https://github.com/linyqh/NarratoAI/wiki&#34;&gt;加入官方社群&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;2024.11.10 发布官方文档，详情参见 &lt;a href=&#34;https://p9mf6rjv3c.feishu.cn/wiki/SP8swLLZki5WRWkhuFvc2CyInDg&#34;&gt;官方文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;2024.11.10 发布新版本 v0.3.5；优化视频剪辑流程，&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;未来计划 🥳&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; windows 整合包发布&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 优化剧情生成流程，提升生成效果&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 发布 0.3.5 整合包&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持阿里 Qwen2-VL 大模型理解视频&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持短剧混剪 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 一键合并素材&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 一键转录&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 一键清理缓存&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 支持导出剪映草稿&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 支持短剧解说&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; ...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;配置要求 📦&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;建议最低 CPU 4核或以上，内存 8G 或以上，显卡非必须&lt;/li&gt; &#xA; &lt;li&gt;Windows 10 或 MacOS 11.0 以上系统&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;反馈建议 📢&lt;/h2&gt; &#xA;&lt;p&gt;👏 1. 可以提交 &lt;a href=&#34;https://github.com/linyqh/NarratoAI/issues&#34;&gt;issue&lt;/a&gt;或者 &lt;a href=&#34;https://github.com/linyqh/NarratoAI/pulls&#34;&gt;pull request&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;💬 2. &lt;a href=&#34;https://github.com/linyqh/NarratoAI/wiki&#34;&gt;加入开源社区交流群&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;📷 3. 关注公众号【NarratoAI助手】，掌握最新资讯&lt;/p&gt; &#xA;&lt;h2&gt;参考项目 📚&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FujiwaraChoki/MoneyPrinter&#34;&gt;https://github.com/FujiwaraChoki/MoneyPrinter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/harry0703/MoneyPrinterTurbo&#34;&gt;https://github.com/harry0703/MoneyPrinterTurbo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;该项目基于以上项目重构而来，增加了影视解说功能，感谢大佬的开源精神 🥳🥳🥳&lt;/p&gt; &#xA;&lt;h2&gt;请作者喝一杯咖啡 ☕️&lt;/h2&gt; &#xA;&lt;div style=&#34;display: flex; justify-content: space-between;&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/5038ccfb-addf-4db1-9966-99415989fd0c&#34; alt=&#34;Image 1&#34; style=&#34;width: 350px; height: 350px; margin: auto;&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/07d4fd58-02f0-425c-8b59-2ab94b4f09f8&#34; alt=&#34;Image 2&#34; style=&#34;width: 350px; height: 350px; margin: auto;&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;许可证 📝&lt;/h2&gt; &#xA;&lt;p&gt;点击查看 &lt;a href=&#34;https://raw.githubusercontent.com/linyqh/NarratoAI/main/LICENSE&#34;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; 文件&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#linyqh/NarratoAI&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=linyqh/NarratoAI&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>