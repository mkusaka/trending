<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-21T01:37:43Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fastapi/fastapi</title>
    <updated>2025-02-21T01:37:43Z</updated>
    <id>tag:github.com,2025-02-21:/fastapi/fastapi</id>
    <link href="https://github.com/fastapi/fastapi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FastAPI framework, high performance, easy to learn, fast to code, ready for production&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://fastapi.tiangolo.com&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png&#34; alt=&#34;FastAPI&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;em&gt;FastAPI framework, high performance, easy to learn, fast to code, ready for production&lt;/em&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/fastapi/fastapi/actions?query=workflow%3ATest+event%3Apush+branch%3Amaster&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/fastapi/fastapi/actions/workflows/test.yml/badge.svg?event=push&amp;amp;branch=master&#34; alt=&#34;Test&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://coverage-badge.samuelcolvin.workers.dev/redirect/fastapi/fastapi&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://coverage-badge.samuelcolvin.workers.dev/fastapi/fastapi.svg?sanitize=true&#34; alt=&#34;Coverage&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/fastapi&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/fastapi?color=%2334D058&amp;amp;label=pypi%20package&#34; alt=&#34;Package version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/fastapi&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/pyversions/fastapi.svg?color=%2334D058&#34; alt=&#34;Supported Python versions&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: &lt;a href=&#34;https://fastapi.tiangolo.com&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://fastapi.tiangolo.com&#34;&gt;https://fastapi.tiangolo.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Source Code&lt;/strong&gt;: &lt;a href=&#34;https://github.com/fastapi/fastapi&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/fastapi/fastapi&#34;&gt;https://github.com/fastapi/fastapi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;FastAPI is a modern, fast (high-performance), web framework for building APIs with Python based on standard Python type hints.&lt;/p&gt; &#xA;&lt;p&gt;The key features are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt;: Very high performance, on par with &lt;strong&gt;NodeJS&lt;/strong&gt; and &lt;strong&gt;Go&lt;/strong&gt; (thanks to Starlette and Pydantic). &lt;a href=&#34;https://raw.githubusercontent.com/fastapi/fastapi/master/#performance&#34;&gt;One of the fastest Python frameworks available&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast to code&lt;/strong&gt;: Increase the speed to develop features by about 200% to 300%. *&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fewer bugs&lt;/strong&gt;: Reduce about 40% of human (developer) induced errors. *&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Intuitive&lt;/strong&gt;: Great editor support. &lt;abbr title=&#34;also known as auto-complete, autocompletion, IntelliSense&#34;&gt;Completion&lt;/abbr&gt; everywhere. Less time debugging.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy&lt;/strong&gt;: Designed to be easy to use and learn. Less time reading docs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Short&lt;/strong&gt;: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Robust&lt;/strong&gt;: Get production-ready code. With automatic interactive documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Standards-based&lt;/strong&gt;: Based on (and fully compatible with) the open standards for APIs: &lt;a href=&#34;https://github.com/OAI/OpenAPI-Specification&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;OpenAPI&lt;/a&gt; (previously known as Swagger) and &lt;a href=&#34;https://json-schema.org/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;JSON Schema&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;small&gt;* estimation based on tests on an internal development team, building production applications.&lt;/small&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;!-- sponsors --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blockbee.io?ref=fastapi&#34; target=&#34;_blank&#34; title=&#34;BlockBee Cryptocurrency Payment Gateway&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/blockbee.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://platform.sh/try-it-now/?utm_source=fastapi-signup&amp;amp;utm_medium=banner&amp;amp;utm_campaign=FastAPI-signup-June-2023&#34; target=&#34;_blank&#34; title=&#34;Build, run and scale your apps on a modern, reliable, and secure PaaS.&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/platform-sh.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.porter.run&#34; target=&#34;_blank&#34; title=&#34;Deploy FastAPI on AWS with a few clicks&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/porter.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bump.sh/fastapi?utm_source=fastapi&amp;amp;utm_medium=referral&amp;amp;utm_campaign=sponsor&#34; target=&#34;_blank&#34; title=&#34;Automate FastAPI documentation generation with Bump.sh&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/bump-sh.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/scalar/scalar/?utm_source=fastapi&amp;amp;utm_medium=website&amp;amp;utm_campaign=main-badge&#34; target=&#34;_blank&#34; title=&#34;Scalar: Beautiful Open-Source API References from Swagger/OpenAPI files&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/scalar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.propelauth.com/?utm_source=fastapi&amp;amp;utm_campaign=1223&amp;amp;utm_medium=mainbadge&#34; target=&#34;_blank&#34; title=&#34;Auth, user management and more for your B2B product&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/propelauth.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.withcoherence.com/?utm_medium=advertising&amp;amp;utm_source=fastapi&amp;amp;utm_campaign=website&#34; target=&#34;_blank&#34; title=&#34;Coherence&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/coherence.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.mongodb.com/developer/languages/python/python-quickstart-fastapi/?utm_campaign=fastapi_framework&amp;amp;utm_source=fastapi_sponsorship&amp;amp;utm_medium=web_referral&#34; target=&#34;_blank&#34; title=&#34;Simplify Full Stack Development with FastAPI &amp;amp; MongoDB&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/mongodb.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://zuplo.link/fastapi-gh&#34; target=&#34;_blank&#34; title=&#34;Zuplo: Scale, Protect, Document, and Monetize your FastAPI&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/zuplo.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://liblab.com?utm_source=fastapi&#34; target=&#34;_blank&#34; title=&#34;liblab - Generate SDKs from FastAPI&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/liblab.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.render.com/deploy-fastapi?utm_source=deploydoc&amp;amp;utm_medium=referral&amp;amp;utm_campaign=fastapi&#34; target=&#34;_blank&#34; title=&#34;Deploy &amp;amp; scale any full-stack web app on Render. Focus on building apps, not infra.&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/render.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.coderabbit.ai/?utm_source=fastapi&amp;amp;utm_medium=badge&amp;amp;utm_campaign=fastapi&#34; target=&#34;_blank&#34; title=&#34;Cut Code Review Time &amp;amp; Bugs in Half with CodeRabbit&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/coderabbit.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/deepset-ai/haystack/&#34; target=&#34;_blank&#34; title=&#34;Build powerful search from composable, open source building blocks&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/haystack-fastapi.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://databento.com/&#34; target=&#34;_blank&#34; title=&#34;Pay as you go for market data&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/databento.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://speakeasy.com?utm_source=fastapi+repo&amp;amp;utm_medium=github+sponsorship&#34; target=&#34;_blank&#34; title=&#34;SDKs for your API | Speakeasy&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/speakeasy.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.svix.com/&#34; target=&#34;_blank&#34; title=&#34;Svix - Webhooks as a service&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/svix.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.stainlessapi.com/?utm_source=fastapi&amp;amp;utm_medium=referral&#34; target=&#34;_blank&#34; title=&#34;Stainless | Generate best-in-class SDKs&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/stainless.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.permit.io/blog/implement-authorization-in-fastapi?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=fastapi&#34; target=&#34;_blank&#34; title=&#34;Fine-Grained Authorization for FastAPI&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/sponsors/permit.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- /sponsors --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://fastapi.tiangolo.com/fastapi-people/#sponsors&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;Other sponsors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Opinions&lt;/h2&gt; &#xA;&lt;p&gt;&#34;&lt;em&gt;[...] I&#39;m using &lt;strong&gt;FastAPI&lt;/strong&gt; a ton these days. [...] I&#39;m actually planning to use it for all of my team&#39;s &lt;strong&gt;ML services at Microsoft&lt;/strong&gt;. Some of them are getting integrated into the core &lt;strong&gt;Windows&lt;/strong&gt; product and some &lt;strong&gt;Office&lt;/strong&gt; products.&lt;/em&gt;&#34;&lt;/p&gt; &#xA;&lt;div style=&#34;text-align: right; margin-right: 10%;&#34;&gt;&#xA; Kabir Khan - &#xA; &lt;strong&gt;Microsoft&lt;/strong&gt; &#xA; &lt;a href=&#34;https://github.com/fastapi/fastapi/pull/26&#34; target=&#34;_blank&#34;&gt;&lt;small&gt;(ref)&lt;/small&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&#34;&lt;em&gt;We adopted the &lt;strong&gt;FastAPI&lt;/strong&gt; library to spawn a &lt;strong&gt;REST&lt;/strong&gt; server that can be queried to obtain &lt;strong&gt;predictions&lt;/strong&gt;. [for Ludwig]&lt;/em&gt;&#34;&lt;/p&gt; &#xA;&lt;div style=&#34;text-align: right; margin-right: 10%;&#34;&gt;&#xA; Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala - &#xA; &lt;strong&gt;Uber&lt;/strong&gt; &#xA; &lt;a href=&#34;https://eng.uber.com/ludwig-v0-2/&#34; target=&#34;_blank&#34;&gt;&lt;small&gt;(ref)&lt;/small&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&#34;&lt;em&gt;&lt;strong&gt;Netflix&lt;/strong&gt; is pleased to announce the open-source release of our &lt;strong&gt;crisis management&lt;/strong&gt; orchestration framework: &lt;strong&gt;Dispatch&lt;/strong&gt;! [built with &lt;strong&gt;FastAPI&lt;/strong&gt;]&lt;/em&gt;&#34;&lt;/p&gt; &#xA;&lt;div style=&#34;text-align: right; margin-right: 10%;&#34;&gt;&#xA; Kevin Glisson, Marc Vilanova, Forest Monsen - &#xA; &lt;strong&gt;Netflix&lt;/strong&gt; &#xA; &lt;a href=&#34;https://netflixtechblog.com/introducing-dispatch-da4b8a2a8072&#34; target=&#34;_blank&#34;&gt;&lt;small&gt;(ref)&lt;/small&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&#34;&lt;em&gt;I’m over the moon excited about &lt;strong&gt;FastAPI&lt;/strong&gt;. It’s so fun!&lt;/em&gt;&#34;&lt;/p&gt; &#xA;&lt;div style=&#34;text-align: right; margin-right: 10%;&#34;&gt;&#xA; Brian Okken - &#xA; &lt;strong&gt;&lt;a href=&#34;https://pythonbytes.fm/episodes/show/123/time-to-right-the-py-wrongs?time_in_sec=855&#34; target=&#34;_blank&#34;&gt;Python Bytes&lt;/a&gt; podcast host&lt;/strong&gt; &#xA; &lt;a href=&#34;https://twitter.com/brianokken/status/1112220079972728832&#34; target=&#34;_blank&#34;&gt;&lt;small&gt;(ref)&lt;/small&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&#34;&lt;em&gt;Honestly, what you&#39;ve built looks super solid and polished. In many ways, it&#39;s what I wanted &lt;strong&gt;Hug&lt;/strong&gt; to be - it&#39;s really inspiring to see someone build that.&lt;/em&gt;&#34;&lt;/p&gt; &#xA;&lt;div style=&#34;text-align: right; margin-right: 10%;&#34;&gt;&#xA; Timothy Crosley - &#xA; &lt;strong&gt;&lt;a href=&#34;https://github.com/hugapi/hug&#34; target=&#34;_blank&#34;&gt;Hug&lt;/a&gt; creator&lt;/strong&gt; &#xA; &lt;a href=&#34;https://news.ycombinator.com/item?id=19455465&#34; target=&#34;_blank&#34;&gt;&lt;small&gt;(ref)&lt;/small&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&#34;&lt;em&gt;If you&#39;re looking to learn one &lt;strong&gt;modern framework&lt;/strong&gt; for building REST APIs, check out &lt;strong&gt;FastAPI&lt;/strong&gt; [...] It&#39;s fast, easy to use and easy to learn [...]&lt;/em&gt;&#34;&lt;/p&gt; &#xA;&lt;p&gt;&#34;&lt;em&gt;We&#39;ve switched over to &lt;strong&gt;FastAPI&lt;/strong&gt; for our &lt;strong&gt;APIs&lt;/strong&gt; [...] I think you&#39;ll like it [...]&lt;/em&gt;&#34;&lt;/p&gt; &#xA;&lt;div style=&#34;text-align: right; margin-right: 10%;&#34;&gt;&#xA; Ines Montani - Matthew Honnibal - &#xA; &lt;strong&gt;&lt;a href=&#34;https://explosion.ai&#34; target=&#34;_blank&#34;&gt;Explosion AI&lt;/a&gt; founders - &lt;a href=&#34;https://spacy.io&#34; target=&#34;_blank&#34;&gt;spaCy&lt;/a&gt; creators&lt;/strong&gt; &#xA; &lt;a href=&#34;https://twitter.com/_inesmontani/status/1144173225322143744&#34; target=&#34;_blank&#34;&gt;&lt;small&gt;(ref)&lt;/small&gt;&lt;/a&gt; - &#xA; &lt;a href=&#34;https://twitter.com/honnibal/status/1144031421859655680&#34; target=&#34;_blank&#34;&gt;&lt;small&gt;(ref)&lt;/small&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&#34;&lt;em&gt;If anyone is looking to build a production Python API, I would highly recommend &lt;strong&gt;FastAPI&lt;/strong&gt;. It is &lt;strong&gt;beautifully designed&lt;/strong&gt;, &lt;strong&gt;simple to use&lt;/strong&gt; and &lt;strong&gt;highly scalable&lt;/strong&gt;, it has become a &lt;strong&gt;key component&lt;/strong&gt; in our API first development strategy and is driving many automations and services such as our Virtual TAC Engineer.&lt;/em&gt;&#34;&lt;/p&gt; &#xA;&lt;div style=&#34;text-align: right; margin-right: 10%;&#34;&gt;&#xA; Deon Pillsbury - &#xA; &lt;strong&gt;Cisco&lt;/strong&gt; &#xA; &lt;a href=&#34;https://www.linkedin.com/posts/deonpillsbury_cisco-cx-python-activity-6963242628536487936-trAp/&#34; target=&#34;_blank&#34;&gt;&lt;small&gt;(ref)&lt;/small&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Typer&lt;/strong&gt;, the FastAPI of CLIs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://typer.tiangolo.com&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://typer.tiangolo.com/img/logo-margin/logo-margin-vector.svg?sanitize=true&#34; style=&#34;width: 20%;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are building a &lt;abbr title=&#34;Command Line Interface&#34;&gt;CLI&lt;/abbr&gt; app to be used in the terminal instead of a web API, check out &lt;a href=&#34;https://typer.tiangolo.com/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Typer&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Typer&lt;/strong&gt; is FastAPI&#39;s little sibling. And it&#39;s intended to be the &lt;strong&gt;FastAPI of CLIs&lt;/strong&gt;. ⌨️ 🚀&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;FastAPI stands on the shoulders of giants:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.starlette.io/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;Starlette&lt;/a&gt; for the web parts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.pydantic.dev/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;Pydantic&lt;/a&gt; for the data parts.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Create and activate a &lt;a href=&#34;https://fastapi.tiangolo.com/virtual-environments/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;virtual environment&lt;/a&gt; and then install FastAPI:&lt;/p&gt; &#xA;&lt;div class=&#34;termy&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ pip install &#34;fastapi[standard]&#34;&#xA;&#xA;---&amp;gt; 100%&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Make sure you put &lt;code&gt;&#34;fastapi[standard]&#34;&lt;/code&gt; in quotes to ensure it works in all terminals.&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;h3&gt;Create it&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a file &lt;code&gt;main.py&lt;/code&gt; with:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;from typing import Union&#xA;&#xA;from fastapi import FastAPI&#xA;&#xA;app = FastAPI()&#xA;&#xA;&#xA;@app.get(&#34;/&#34;)&#xA;def read_root():&#xA;    return {&#34;Hello&#34;: &#34;World&#34;}&#xA;&#xA;&#xA;@app.get(&#34;/items/{item_id}&#34;)&#xA;def read_item(item_id: int, q: Union[str, None] = None):&#xA;    return {&#34;item_id&#34;: item_id, &#34;q&#34;: q}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details markdown=&#34;1&#34;&gt; &#xA; &lt;summary&gt;Or use &lt;code&gt;async def&lt;/code&gt;...&lt;/summary&gt; &#xA; &lt;p&gt;If your code uses &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt;, use &lt;code&gt;async def&lt;/code&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;from typing import Union&#xA;&#xA;from fastapi import FastAPI&#xA;&#xA;app = FastAPI()&#xA;&#xA;&#xA;@app.get(&#34;/&#34;)&#xA;async def read_root():&#xA;    return {&#34;Hello&#34;: &#34;World&#34;}&#xA;&#xA;&#xA;@app.get(&#34;/items/{item_id}&#34;)&#xA;async def read_item(item_id: int, q: Union[str, None] = None):&#xA;    return {&#34;item_id&#34;: item_id, &#34;q&#34;: q}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;p&gt;If you don&#39;t know, check the &lt;em&gt;&#34;In a hurry?&#34;&lt;/em&gt; section about &lt;a href=&#34;https://fastapi.tiangolo.com/async/#in-a-hurry&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;async&lt;/code&gt; and &lt;code&gt;await&lt;/code&gt; in the docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Run it&lt;/h3&gt; &#xA;&lt;p&gt;Run the server with:&lt;/p&gt; &#xA;&lt;div class=&#34;termy&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ fastapi dev main.py&#xA;&#xA; ╭────────── FastAPI CLI - Development mode ───────────╮&#xA; │                                                     │&#xA; │  Serving at: http://127.0.0.1:8000                  │&#xA; │                                                     │&#xA; │  API docs: http://127.0.0.1:8000/docs               │&#xA; │                                                     │&#xA; │  Running in development mode, for production use:   │&#xA; │                                                     │&#xA; │  fastapi run                                        │&#xA; │                                                     │&#xA; ╰─────────────────────────────────────────────────────╯&#xA;&#xA;INFO:     Will watch for changes in these directories: [&#39;/home/user/code/awesomeapp&#39;]&#xA;INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)&#xA;INFO:     Started reloader process [2248755] using WatchFiles&#xA;INFO:     Started server process [2248757]&#xA;INFO:     Waiting for application startup.&#xA;INFO:     Application startup complete.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;details markdown=&#34;1&#34;&gt; &#xA; &lt;summary&gt;About the command &lt;code&gt;fastapi dev main.py&lt;/code&gt;...&lt;/summary&gt; &#xA; &lt;p&gt;The command &lt;code&gt;fastapi dev&lt;/code&gt; reads your &lt;code&gt;main.py&lt;/code&gt; file, detects the &lt;strong&gt;FastAPI&lt;/strong&gt; app in it, and starts a server using &lt;a href=&#34;https://www.uvicorn.org&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;Uvicorn&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;By default, &lt;code&gt;fastapi dev&lt;/code&gt; will start with auto-reload enabled for local development.&lt;/p&gt; &#xA; &lt;p&gt;You can read more about it in the &lt;a href=&#34;https://fastapi.tiangolo.com/fastapi-cli/&#34; target=&#34;_blank&#34;&gt;FastAPI CLI docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Check it&lt;/h3&gt; &#xA;&lt;p&gt;Open your browser at &lt;a href=&#34;http://127.0.0.1:8000/items/5?q=somequery&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://127.0.0.1:8000/items/5?q=somequery&#34;&gt;http://127.0.0.1:8000/items/5?q=somequery&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You will see the JSON response as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-JSON&#34;&gt;{&#34;item_id&#34;: 5, &#34;q&#34;: &#34;somequery&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You already created an API that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Receives HTTP requests in the &lt;em&gt;paths&lt;/em&gt; &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;/items/{item_id}&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Both &lt;em&gt;paths&lt;/em&gt; take &lt;code&gt;GET&lt;/code&gt; &lt;em&gt;operations&lt;/em&gt; (also known as HTTP &lt;em&gt;methods&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;The &lt;em&gt;path&lt;/em&gt; &lt;code&gt;/items/{item_id}&lt;/code&gt; has a &lt;em&gt;path parameter&lt;/em&gt; &lt;code&gt;item_id&lt;/code&gt; that should be an &lt;code&gt;int&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;em&gt;path&lt;/em&gt; &lt;code&gt;/items/{item_id}&lt;/code&gt; has an optional &lt;code&gt;str&lt;/code&gt; &lt;em&gt;query parameter&lt;/em&gt; &lt;code&gt;q&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Interactive API docs&lt;/h3&gt; &#xA;&lt;p&gt;Now go to &lt;a href=&#34;http://127.0.0.1:8000/docs&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://127.0.0.1:8000/docs&#34;&gt;http://127.0.0.1:8000/docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You will see the automatic interactive API documentation (provided by &lt;a href=&#34;https://github.com/swagger-api/swagger-ui&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;Swagger UI&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/index/index-01-swagger-ui-simple.png&#34; alt=&#34;Swagger UI&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Alternative API docs&lt;/h3&gt; &#xA;&lt;p&gt;And now, go to &lt;a href=&#34;http://127.0.0.1:8000/redoc&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://127.0.0.1:8000/redoc&#34;&gt;http://127.0.0.1:8000/redoc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You will see the alternative automatic documentation (provided by &lt;a href=&#34;https://github.com/Rebilly/ReDoc&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;ReDoc&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/index/index-02-redoc-simple.png&#34; alt=&#34;ReDoc&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example upgrade&lt;/h2&gt; &#xA;&lt;p&gt;Now modify the file &lt;code&gt;main.py&lt;/code&gt; to receive a body from a &lt;code&gt;PUT&lt;/code&gt; request.&lt;/p&gt; &#xA;&lt;p&gt;Declare the body using standard Python types, thanks to Pydantic.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;from typing import Union&#xA;&#xA;from fastapi import FastAPI&#xA;from pydantic import BaseModel&#xA;&#xA;app = FastAPI()&#xA;&#xA;&#xA;class Item(BaseModel):&#xA;    name: str&#xA;    price: float&#xA;    is_offer: Union[bool, None] = None&#xA;&#xA;&#xA;@app.get(&#34;/&#34;)&#xA;def read_root():&#xA;    return {&#34;Hello&#34;: &#34;World&#34;}&#xA;&#xA;&#xA;@app.get(&#34;/items/{item_id}&#34;)&#xA;def read_item(item_id: int, q: Union[str, None] = None):&#xA;    return {&#34;item_id&#34;: item_id, &#34;q&#34;: q}&#xA;&#xA;&#xA;@app.put(&#34;/items/{item_id}&#34;)&#xA;def update_item(item_id: int, item: Item):&#xA;    return {&#34;item_name&#34;: item.name, &#34;item_id&#34;: item_id}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;fastapi dev&lt;/code&gt; server should reload automatically.&lt;/p&gt; &#xA;&lt;h3&gt;Interactive API docs upgrade&lt;/h3&gt; &#xA;&lt;p&gt;Now go to &lt;a href=&#34;http://127.0.0.1:8000/docs&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://127.0.0.1:8000/docs&#34;&gt;http://127.0.0.1:8000/docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The interactive API documentation will be automatically updated, including the new body:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/index/index-03-swagger-02.png&#34; alt=&#34;Swagger UI&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Click on the button &#34;Try it out&#34;, it allows you to fill the parameters and directly interact with the API:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/index/index-04-swagger-03.png&#34; alt=&#34;Swagger UI interaction&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Then click on the &#34;Execute&#34; button, the user interface will communicate with your API, send the parameters, get the results and show them on the screen:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/index/index-05-swagger-04.png&#34; alt=&#34;Swagger UI interaction&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Alternative API docs upgrade&lt;/h3&gt; &#xA;&lt;p&gt;And now, go to &lt;a href=&#34;http://127.0.0.1:8000/redoc&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://127.0.0.1:8000/redoc&#34;&gt;http://127.0.0.1:8000/redoc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The alternative documentation will also reflect the new query parameter and body:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/index/index-06-redoc-02.png&#34; alt=&#34;ReDoc&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Recap&lt;/h3&gt; &#xA;&lt;p&gt;In summary, you declare &lt;strong&gt;once&lt;/strong&gt; the types of parameters, body, etc. as function parameters.&lt;/p&gt; &#xA;&lt;p&gt;You do that with standard modern Python types.&lt;/p&gt; &#xA;&lt;p&gt;You don&#39;t have to learn a new syntax, the methods or classes of a specific library, etc.&lt;/p&gt; &#xA;&lt;p&gt;Just standard &lt;strong&gt;Python&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example, for an &lt;code&gt;int&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;item_id: int&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or for a more complex &lt;code&gt;Item&lt;/code&gt; model:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;item: Item&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...and with that single declaration you get:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Editor support, including: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Completion.&lt;/li&gt; &#xA;   &lt;li&gt;Type checks.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Validation of data: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Automatic and clear errors when the data is invalid.&lt;/li&gt; &#xA;   &lt;li&gt;Validation even for deeply nested JSON objects.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;abbr title=&#34;also known as: serialization, parsing, marshalling&#34;&gt;Conversion&lt;/abbr&gt; of input data: coming from the network to Python data and types. Reading from: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;JSON.&lt;/li&gt; &#xA;   &lt;li&gt;Path parameters.&lt;/li&gt; &#xA;   &lt;li&gt;Query parameters.&lt;/li&gt; &#xA;   &lt;li&gt;Cookies.&lt;/li&gt; &#xA;   &lt;li&gt;Headers.&lt;/li&gt; &#xA;   &lt;li&gt;Forms.&lt;/li&gt; &#xA;   &lt;li&gt;Files.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;abbr title=&#34;also known as: serialization, parsing, marshalling&#34;&gt;Conversion&lt;/abbr&gt; of output data: converting from Python data and types to network data (as JSON): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Convert Python types (&lt;code&gt;str&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, etc).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;datetime&lt;/code&gt; objects.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;UUID&lt;/code&gt; objects.&lt;/li&gt; &#xA;   &lt;li&gt;Database models.&lt;/li&gt; &#xA;   &lt;li&gt;...and many more.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Automatic interactive API documentation, including 2 alternative user interfaces: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Swagger UI.&lt;/li&gt; &#xA;   &lt;li&gt;ReDoc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Coming back to the previous code example, &lt;strong&gt;FastAPI&lt;/strong&gt; will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Validate that there is an &lt;code&gt;item_id&lt;/code&gt; in the path for &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;PUT&lt;/code&gt; requests.&lt;/li&gt; &#xA; &lt;li&gt;Validate that the &lt;code&gt;item_id&lt;/code&gt; is of type &lt;code&gt;int&lt;/code&gt; for &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;PUT&lt;/code&gt; requests. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If it is not, the client will see a useful, clear error.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Check if there is an optional query parameter named &lt;code&gt;q&lt;/code&gt; (as in &lt;code&gt;http://127.0.0.1:8000/items/foo?q=somequery&lt;/code&gt;) for &lt;code&gt;GET&lt;/code&gt; requests. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;As the &lt;code&gt;q&lt;/code&gt; parameter is declared with &lt;code&gt;= None&lt;/code&gt;, it is optional.&lt;/li&gt; &#xA;   &lt;li&gt;Without the &lt;code&gt;None&lt;/code&gt; it would be required (as is the body in the case with &lt;code&gt;PUT&lt;/code&gt;).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For &lt;code&gt;PUT&lt;/code&gt; requests to &lt;code&gt;/items/{item_id}&lt;/code&gt;, read the body as JSON: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Check that it has a required attribute &lt;code&gt;name&lt;/code&gt; that should be a &lt;code&gt;str&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Check that it has a required attribute &lt;code&gt;price&lt;/code&gt; that has to be a &lt;code&gt;float&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Check that it has an optional attribute &lt;code&gt;is_offer&lt;/code&gt;, that should be a &lt;code&gt;bool&lt;/code&gt;, if present.&lt;/li&gt; &#xA;   &lt;li&gt;All this would also work for deeply nested JSON objects.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Convert from and to JSON automatically.&lt;/li&gt; &#xA; &lt;li&gt;Document everything with OpenAPI, that can be used by: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Interactive documentation systems.&lt;/li&gt; &#xA;   &lt;li&gt;Automatic client code generation systems, for many languages.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Provide 2 interactive documentation web interfaces directly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;We just scratched the surface, but you already get the idea of how it all works.&lt;/p&gt; &#xA;&lt;p&gt;Try changing the line with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;    return {&#34;item_name&#34;: item.name, &#34;item_id&#34;: item_id}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...from:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;        ... &#34;item_name&#34;: item.name ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;        ... &#34;item_price&#34;: item.price ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...and see how your editor will auto-complete the attributes and know their types:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/vscode-completion.png&#34; alt=&#34;editor support&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For a more complete example including more features, see the &lt;a href=&#34;https://fastapi.tiangolo.com/tutorial/&#34;&gt;Tutorial - User Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Spoiler alert&lt;/strong&gt;: the tutorial - user guide includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Declaration of &lt;strong&gt;parameters&lt;/strong&gt; from other different places as: &lt;strong&gt;headers&lt;/strong&gt;, &lt;strong&gt;cookies&lt;/strong&gt;, &lt;strong&gt;form fields&lt;/strong&gt; and &lt;strong&gt;files&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;How to set &lt;strong&gt;validation constraints&lt;/strong&gt; as &lt;code&gt;maximum_length&lt;/code&gt; or &lt;code&gt;regex&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;A very powerful and easy to use &lt;strong&gt;&lt;abbr title=&#34;also known as components, resources, providers, services, injectables&#34;&gt;Dependency Injection&lt;/abbr&gt;&lt;/strong&gt; system.&lt;/li&gt; &#xA; &lt;li&gt;Security and authentication, including support for &lt;strong&gt;OAuth2&lt;/strong&gt; with &lt;strong&gt;JWT tokens&lt;/strong&gt; and &lt;strong&gt;HTTP Basic&lt;/strong&gt; auth.&lt;/li&gt; &#xA; &lt;li&gt;More advanced (but equally easy) techniques for declaring &lt;strong&gt;deeply nested JSON models&lt;/strong&gt; (thanks to Pydantic).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GraphQL&lt;/strong&gt; integration with &lt;a href=&#34;https://strawberry.rocks&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;Strawberry&lt;/a&gt; and other libraries.&lt;/li&gt; &#xA; &lt;li&gt;Many extra features (thanks to Starlette) as: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;WebSockets&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;extremely easy tests based on HTTPX and &lt;code&gt;pytest&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;CORS&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Cookie Sessions&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;...and more.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;Independent TechEmpower benchmarks show &lt;strong&gt;FastAPI&lt;/strong&gt; applications running under Uvicorn as &lt;a href=&#34;https://www.techempower.com/benchmarks/#section=test&amp;amp;runid=7464e520-0dc2-473d-bd34-dbdfd7e85911&amp;amp;hw=ph&amp;amp;test=query&amp;amp;l=zijzen-7&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;one of the fastest Python frameworks available&lt;/a&gt;, only below Starlette and Uvicorn themselves (used internally by FastAPI). (*)&lt;/p&gt; &#xA;&lt;p&gt;To understand more about it, see the section &lt;a href=&#34;https://fastapi.tiangolo.com/benchmarks/&#34; class=&#34;internal-link&#34; target=&#34;_blank&#34;&gt;Benchmarks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;FastAPI depends on Pydantic and Starlette.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;standard&lt;/code&gt; Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;When you install FastAPI with &lt;code&gt;pip install &#34;fastapi[standard]&#34;&lt;/code&gt; it comes with the &lt;code&gt;standard&lt;/code&gt; group of optional dependencies:&lt;/p&gt; &#xA;&lt;p&gt;Used by Pydantic:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JoshData/python-email-validator&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;email-validator&lt;/code&gt;&lt;/a&gt; - for email validation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Used by Starlette:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python-httpx.org&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;httpx&lt;/code&gt;&lt;/a&gt; - Required if you want to use the &lt;code&gt;TestClient&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jinja.palletsprojects.com&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;jinja2&lt;/code&gt;&lt;/a&gt; - Required if you want to use the default template configuration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Kludex/python-multipart&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;python-multipart&lt;/code&gt;&lt;/a&gt; - Required if you want to support form &lt;abbr title=&#34;converting the string that comes from an HTTP request into Python data&#34;&gt;&#34;parsing&#34;&lt;/abbr&gt;, with &lt;code&gt;request.form()&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Used by FastAPI / Starlette:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.uvicorn.org&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;uvicorn&lt;/code&gt;&lt;/a&gt; - for the server that loads and serves your application. This includes &lt;code&gt;uvicorn[standard]&lt;/code&gt;, which includes some dependencies (e.g. &lt;code&gt;uvloop&lt;/code&gt;) needed for high performance serving.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fastapi-cli&lt;/code&gt; - to provide the &lt;code&gt;fastapi&lt;/code&gt; command.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Without &lt;code&gt;standard&lt;/code&gt; Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;If you don&#39;t want to include the &lt;code&gt;standard&lt;/code&gt; optional dependencies, you can install with &lt;code&gt;pip install fastapi&lt;/code&gt; instead of &lt;code&gt;pip install &#34;fastapi[standard]&#34;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Additional Optional Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;There are some additional dependencies you might want to install.&lt;/p&gt; &#xA;&lt;p&gt;Additional optional Pydantic dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.pydantic.dev/latest/usage/pydantic_settings/&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;pydantic-settings&lt;/code&gt;&lt;/a&gt; - for settings management.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.pydantic.dev/latest/usage/types/extra_types/extra_types/&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;pydantic-extra-types&lt;/code&gt;&lt;/a&gt; - for extra types to be used with Pydantic.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additional optional FastAPI dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ijl/orjson&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;orjson&lt;/code&gt;&lt;/a&gt; - Required if you want to use &lt;code&gt;ORJSONResponse&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/esnme/ultrajson&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;ujson&lt;/code&gt;&lt;/a&gt; - Required if you want to use &lt;code&gt;UJSONResponse&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the terms of the MIT license.&lt;/p&gt;</summary>
  </entry>
</feed>