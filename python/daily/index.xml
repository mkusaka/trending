<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-16T01:36:22Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ddgth/cf2dns</title>
    <updated>2024-06-16T01:36:22Z</updated>
    <id>tag:github.com,2024-06-16:/ddgth/cf2dns</id>
    <link href="https://github.com/ddgth/cf2dns" rel="alternate"></link>
    <summary type="html">&lt;p&gt;筛选出优质的Cloudflare IP，并使用域名服务商提供的API解析到不同线路以达到网站加速的效果,新增假墙防御方式&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;增加dddb/cf2dns docker镜像 --update 2024.6.4&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;使用方法&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;拉取cf2dns docker镜像 &lt;code&gt;docker pull dddb/cf2dns&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;新建cf2dns_docker工作路径 &lt;code&gt;cd ~ &amp;amp;&amp;amp; mkdir -p cf2dns_docker/logs &amp;amp;&amp;amp; cd cf2dns_docker&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;下载所需配置文件 &lt;code&gt;wget --no-check-certificate -qO ./config.ini https://raw.githubusercontent.com/ddgth/cf2dns/master/docker/src/config.ini&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;根据注释修改&lt;code&gt;config.ini&lt;/code&gt;配置文件&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;运行docker镜像 &lt;code&gt;docker run -d -v ~/cf2dns_docker/config.ini:/cf2dns/src/config.ini -v ~/cf2dns_docker/logs:/cf2dns/logs dddb/cf2dns&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;查看运行日志 &lt;code&gt;tail -100f ~/cf2dns_docker/logs/cf2dns.log&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;修复腾讯云 DNS 无法调用 --update 2023.1.3&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cloud.tencent.com/document/product/1278/82311&#34;&gt;API 2.0下线通知&lt;/a&gt; By github@z0z0r4&lt;/p&gt; &#xA;&lt;h3&gt;新增支持Actions自选更新V4或V6 ——update 2022.12.19&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;使用方法&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;修改 &lt;strong&gt;&lt;code&gt;.github/workflows/run.yml&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;新增secret &lt;strong&gt;&lt;code&gt;DOMAINSV6&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;h3&gt;新增支持华为云DNS ——update 2022.10.25&lt;/h3&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;使用方法&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装依赖 &lt;strong&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修改配置文件 &lt;strong&gt;&lt;code&gt;DNS_SERVER&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;SECRETID&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;SECRETKEY&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;REGION_HW&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;新增优选IPv6功能 ——update 2022.07.06&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;使用方法&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;​ 更新代码，修改脚本中的 &lt;code&gt;TYPE&lt;/code&gt; 参数即可&lt;/p&gt; &#xA;&lt;h3&gt;新增默认线路记录 ——update 2021.12.15&lt;/h3&gt; &#xA;&lt;p&gt;如果需要使用默认线路，请将默认线路的cname记录移除或改为其他线路&lt;/p&gt; &#xA;&lt;p&gt;默认：DEF&lt;/p&gt; &#xA;&lt;p&gt;境外：AB&lt;/p&gt; &#xA;&lt;h3&gt;Faker GFW ——update 2021.08.08&lt;/h3&gt; &#xA;&lt;p&gt;最近有很多小伙伴正遭受假墙并伴随着被勒索的困扰，现在增加了预防假墙攻击的功能&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;实现方式&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;​ 之前不管您使用免费的key还是付费的key所筛选出来的Cloudflare IP都是多人共享的，如果其中有人的网站刚好被假墙，而您自选出来的IP刚好和他的相同，那么您的网站也有被假墙的风险，当然我也使用了各种手动去解决这个方法，比如增加接口返回IP数、随机获取优选IP等，但最总还是不能完全杜绝这情况的发现，所以现增加了一个优选IP池，只需在您的key后面加上 &lt;strong&gt;&lt;code&gt;fgfw&lt;/code&gt;&lt;/strong&gt; ,您就会每次执行脚本都能获取到&lt;strong&gt;最新的独享优选IP&lt;/strong&gt;，由于这需要消耗更多的服务器硬件和带宽资源，那么每次调用获取最新的独享优选IP时，您只能获取到每个运营商的&lt;strong&gt;2条&lt;/strong&gt;优选记录，并且每次调用您将消耗更多的key调用次数，执行频率建议与您DNS服务商的最小TTL保持一直（记得把脚本中的TTL参数也修改了）。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;使用方法：&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;新用户：在您购买的KEY后面加上 &lt;strong&gt;&lt;code&gt;fgfw&lt;/code&gt;&lt;/strong&gt; ，并按照下面教程使用即可&lt;/li&gt; &#xA; &lt;li&gt;新用户：每个运营商的&lt;strong&gt;2条&lt;/strong&gt;优选记录，所以您需要删除目前已经存在的之前优选的A记录然后在您购买的KEY后面加上 &lt;strong&gt;&lt;code&gt;fgfw&lt;/code&gt;&lt;/strong&gt; 即可。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;功能介绍&lt;/h3&gt; &#xA;&lt;p&gt;筛选出优质的Cloudflare IP（目前在暂不开源，以接口方式提供15分钟更新一次），并使用域名服务商提供的API解析到不同线路以达到网站加速的效果（目前只完成DNSPod和阿里云DNS，后续如果有需求将会加入其他运营商的）。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;详细的使用场景请移步我的&lt;a href=&#34;https://blog.hostmonit.com/cloudflare-select-ip-plus/&#34;&gt;小站&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;适用人群&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;小站长，网站经常被打或网站放置在国外需要稳定且速度相对快的CDN&lt;/li&gt; &#xA; &lt;li&gt;服务器在国外但是想建站的小伙伴&lt;/li&gt; &#xA; &lt;li&gt;科学上网加速，拯救移动线路（未测试）&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;使用方法&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;必要条件:&lt;/p&gt; &#xA; &lt;p&gt;★ Cloudflare自选IP并已接入到DNSPod或阿里云DNS，不知道怎么自选IP可以查看这个&lt;a href=&#34;https://blog.hostmonit.com/manually-select-ip/&#34;&gt;教程&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;★ Python3、pip环境&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;方法一：在自己的VPS或电脑中运行（推荐）&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;安装运行脚本所需依赖&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;登录&lt;a href=&#34;https://console.cloud.tencent.com/cam/capi&#34;&gt;腾讯云后台&lt;/a&gt;或者&lt;a href=&#34;https://help.aliyun.com/document_detail/53045.html?spm=a2c4g.11186623.2.11.2c6a2fbdh13O53&#34;&gt;阿里云后台&lt;/a&gt;,获取 SecretId、SecretKey，如果使用阿里云DNS，注意需要添加DNS控制权限&lt;strong&gt;AliyunDNSFullAccess&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;将脚本下载到本地修改cf2dns.py中的SecretId、SecretKey&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修改脚本中域名配置信息，可配置多个域名和多个子域名，注意选择DNS服务商&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(可选)从&lt;a href=&#34;https://shop.hostmonit.com&#34;&gt;商店&lt;/a&gt;购买KEY，当然也可以用脚本中自带的，区别是脚本中自带的KEY是历史优选的Cloudflare IP(也可以从这个&lt;a href=&#34;https://stock.hostmonit.com/CloudFlareYes&#34;&gt;网站&lt;/a&gt;查到IP的信息)，而购买的KEY是15分钟内获取到的最新的Cloudflare IP。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;运行程序，如果能够正常运行可以选择cron定时执行(建议15分钟执行一次)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python cf2dns.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;方法二：GitHub Actions 运行&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;登录&lt;a href=&#34;https://console.cloud.tencent.com/cam/capi&#34;&gt;腾讯云后台&lt;/a&gt;或者&lt;a href=&#34;https://help.aliyun.com/document_detail/53045.html?spm=a2c4g.11186623.2.11.2c6a2fbdh13O53&#34;&gt;阿里云后台&lt;/a&gt;,获取 SecretId、SecretKey，如果使用阿里云DNS，注意需要添加DNS控制权限&lt;strong&gt;AliyunDNSFullAccess&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fork本项目到自己的仓库&lt;img src=&#34;https://img.hostmonit.com/images/2020/11/05/fork.png&#34; alt=&#34;fork.png&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;进入第二步中Fork的项目，点击Settings-&amp;gt;Secrets and variables-&amp;gt; Actions -&amp;gt; New repository secret，分别是DOMAINS，KEY，SECRETID，SECRETKEY。&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;DOMAINS 需改域名信息，填写时注意不要有换行 例如：&lt;code&gt;{&#34;hostmonit.com&#34;: {&#34;@&#34;: [&#34;CM&#34;,&#34;CU&#34;,&#34;CT&#34;], &#34;shop&#34;: [&#34;CM&#34;, &#34;CU&#34;, &#34;CT&#34;], &#34;stock&#34;: [&#34;CM&#34;,&#34;CU&#34;,&#34;CT&#34;]},&#34;4096.me&#34;: {&#34;@&#34;: [&#34;CM&#34;,&#34;CU&#34;,&#34;CT&#34;], &#34;vv&#34;:[&#34;CM&#34;,&#34;CU&#34;,&#34;CT&#34;]}}&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;DOMAINSV6 如果需要更新AAA解析请增加此secrets，格式同DOMAINS。&lt;/li&gt; &#xA;    &lt;li&gt;KEY API密钥，从&lt;a href=&#34;https://shop.hostmonit.com&#34;&gt;商店&lt;/a&gt;购买KEY，也可以使用这个KEY &lt;code&gt;o1zrmHAF&lt;/code&gt; ，区别是 &lt;code&gt;o1zrmHAF&lt;/code&gt; 是历史优选的Cloudflare IP(也可以从这个&lt;a href=&#34;https://stock.hostmonit.com/CloudFlareYes&#34;&gt;网站&lt;/a&gt;查到IP的信息)，而购买的KEY是15分钟内获取到的对各运营商速度最优的的Cloudflare IP&lt;/li&gt; &#xA;    &lt;li&gt;SECRETID 第一部中从&lt;a href=&#34;https://console.cloud.tencent.com/cam/capi&#34;&gt;腾讯云后台&lt;/a&gt;或者&lt;a href=&#34;https://help.aliyun.com/document_detail/53045.html?spm=a2c4g.11186623.2.11.2c6a2fbdh13O53&#34;&gt;阿里云后台&lt;/a&gt;,获取到的 &lt;code&gt;SECRETID &lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;SECRETKEY 第一部中从&lt;a href=&#34;https://console.cloud.tencent.com/cam/capi&#34;&gt;腾讯云后台&lt;/a&gt;或者&lt;a href=&#34;https://help.aliyun.com/document_detail/53045.html?spm=a2c4g.11186623.2.11.2c6a2fbdh13O53&#34;&gt;阿里云后台&lt;/a&gt;,获取到的 &lt;code&gt;SECRETKEY&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;&lt;img src=&#34;https://img.hostmonit.com/images/2023/03/04/actions.png&#34; alt=&#34;secret.png&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修改您项目中的 &lt;code&gt;cf2dns_actions.py&lt;/code&gt;文件中的&lt;code&gt;AFFECT_NUM&lt;/code&gt;和&lt;code&gt;DNS_SERVER&lt;/code&gt;参数，继续修改&lt;code&gt;.github/workflows/run.yml&lt;/code&gt; 文件，定时执行的时长(建议15分钟执行一次)，最后点击 &lt;code&gt;start commit&lt;/code&gt; 提交即可在Actions中的build查看到执行情况，如果看到 &lt;code&gt;cf2dns&lt;/code&gt; 执行日志中有 &lt;code&gt;CHANGE DNS SUCCESS&lt;/code&gt; 详情输出，即表示运行成功。&lt;strong&gt;需要注意观察下次定时是否能正确运行，有时候GitHub Actions 挺抽风的&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://img.hostmonit.com/images/2020/11/05/modify.png&#34; alt=&#34;modify.png&#34;&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://img.hostmonit.com/images/2020/11/05/commit.png&#34; alt=&#34;commit.png&#34;&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://img.hostmonit.com/images/2020/11/05/build.png&#34; alt=&#34;build.png&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;免责声明&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;1.网络环境错综复杂，适合我的不一定适合你，所以尽量先尝试免费的KEY或者购买试用版的KEY&lt;/p&gt; &#xA; &lt;p&gt;2.有什么问题和建议请提issue或者Email我，不接受谩骂、扯皮、吐槽&lt;/p&gt; &#xA; &lt;p&gt;3.为什么收费？ 这个标价我也根本不指望赚钱，甚至不够我国内一台VDS的钱。&lt;/p&gt; &#xA; &lt;p&gt;★ 如果当前DNSPod有移动、联通、电信线路的解析将会覆盖掉&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>reorx/httpstat</title>
    <updated>2024-06-16T01:36:22Z</updated>
    <id>tag:github.com,2024-06-16:/reorx/httpstat</id>
    <link href="https://github.com/reorx/httpstat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;curl statistics made simple&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;httpstat&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/reorx/httpstat/master/screenshot.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;httpstat visualizes &lt;code&gt;curl(1)&lt;/code&gt; statistics in a way of beauty and clarity.&lt;/p&gt; &#xA;&lt;p&gt;It is a &lt;strong&gt;single file🌟&lt;/strong&gt; Python script that has &lt;strong&gt;no dependency👏&lt;/strong&gt; and is compatible with &lt;strong&gt;Python 3🍻&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;There are three ways to get &lt;code&gt;httpstat&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the script directly: &lt;code&gt;wget https://raw.githubusercontent.com/reorx/httpstat/master/httpstat.py&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Through pip: &lt;code&gt;pip install httpstat&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Through homebrew (macOS only): &lt;code&gt;brew install httpstat&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For Windows users, @davecheney&#39;s &lt;a href=&#34;https://github.com/davecheney/httpstat&#34;&gt;Go version&lt;/a&gt; is suggested. → &lt;a href=&#34;https://github.com/davecheney/httpstat/releases&#34;&gt;download link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Simply:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python httpstat.py httpbin.org/get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If installed through pip or brew, you can use &lt;code&gt;httpstat&lt;/code&gt; as a command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;httpstat httpbin.org/get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;cURL Options&lt;/h3&gt; &#xA;&lt;p&gt;Because &lt;code&gt;httpstat&lt;/code&gt; is a wrapper of cURL, you can pass any cURL supported option after the url (except for &lt;code&gt;-w&lt;/code&gt;, &lt;code&gt;-D&lt;/code&gt;, &lt;code&gt;-o&lt;/code&gt;, &lt;code&gt;-s&lt;/code&gt;, &lt;code&gt;-S&lt;/code&gt; which are already used by &lt;code&gt;httpstat&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;httpstat httpbin.org/post -X POST --data-urlencode &#34;a=b&#34; -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Environment Variables&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;httpstat&lt;/code&gt; has a bunch of environment variables to control its behavior. Here are some usage demos, you can also run &lt;code&gt;httpstat --help&lt;/code&gt; to see full explanation.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;HTTPSTAT_SHOW_BODY&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Set to &lt;code&gt;true&lt;/code&gt; to show response body in the output, note that body length is limited to 1023 bytes, will be truncated if exceeds. Default is &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;HTTPSTAT_SHOW_IP&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;By default httpstat shows remote and local IP/port address. Set to &lt;code&gt;false&lt;/code&gt; to disable this feature. Default is &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;HTTPSTAT_SHOW_SPEED&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Set to &lt;code&gt;true&lt;/code&gt; to show download and upload speed. Default is &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;HTTPSTAT_SHOW_SPEED=true httpstat http://cachefly.cachefly.net/10mb.test&#xA;&#xA;...&#xA;speed_download: 3193.3 KiB/s, speed_upload: 0.0 KiB/s&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;HTTPSTAT_SAVE_BODY&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;By default httpstat stores body in a tmp file, set to &lt;code&gt;false&lt;/code&gt; to disable this feature. Default is &lt;code&gt;true&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;HTTPSTAT_CURL_BIN&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Indicate the cURL bin path to use. Default is &lt;code&gt;curl&lt;/code&gt; from current shell $PATH.&lt;/p&gt; &lt;p&gt;This exampe uses brew installed cURL to make HTTP2 request:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;HTTPSTAT_CURL_BIN=/usr/local/Cellar/curl/7.50.3/bin/curl httpstat https://http2.akamai.com/ --http2&#xA;&#xA;HTTP/2 200&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;cURL must be compiled with nghttp2 to enable http2 feature (&lt;a href=&#34;https://github.com/reorx/httpstat/issues/12&#34;&gt;#12&lt;/a&gt;).&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;HTTPSTAT_METRICS_ONLY&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;If set to &lt;code&gt;true&lt;/code&gt;, httpstat will only output metrics in json format, this is useful if you want to parse the data instead of reading it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;HTTPSTAT_DEBUG&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Set to &lt;code&gt;true&lt;/code&gt; to see debugging logs. Default is &lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For convenience, you can export these environments in your &lt;code&gt;.zshrc&lt;/code&gt; or &lt;code&gt;.bashrc&lt;/code&gt;, example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export HTTPSTAT_SHOW_IP=false&#xA;export HTTPSTAT_SHOW_SPEED=true&#xA;export HTTPSTAT_SAVE_BODY=false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Related Projects&lt;/h2&gt; &#xA;&lt;p&gt;Here are some implementations in various languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Go: &lt;a href=&#34;https://github.com/davecheney/httpstat&#34;&gt;davecheney/httpstat&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This is the Go alternative of httpstat, it&#39;s written in pure Go and relies no external programs. Choose it if you like solid binary executions (actually I do).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Go (library): &lt;a href=&#34;https://github.com/tcnksm/go-httpstat&#34;&gt;tcnksm/go-httpstat&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Other than being a cli tool, this project is used as library to help debugging latency of HTTP requests in Go code, very thoughtful and useful, see more in this &lt;a href=&#34;https://medium.com/@deeeet/trancing-http-request-latency-in-golang-65b2463f548c#.mm1u8kfnu&#34;&gt;article&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Bash: &lt;a href=&#34;https://github.com/b4b4r07/httpstat&#34;&gt;b4b4r07/httpstat&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This is what exactly I want to do at the very beginning, but gave up due to not confident in my bash skill, good job!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Node: &lt;a href=&#34;https://github.com/yosuke-furukawa/httpstat&#34;&gt;yosuke-furukawa/httpstat&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://twitter.com/b4b4r07&#34;&gt;b4b4r07&lt;/a&gt; mentioned this in his &lt;a href=&#34;https://tellme.tokyo/post/2016/09/25/213810&#34;&gt;article&lt;/a&gt;, could be used as a HTTP client also.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;PHP: &lt;a href=&#34;https://github.com/talhasch/php-httpstat&#34;&gt;talhasch/php-httpstat&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The PHP implementation by @talhasch&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some code blocks in &lt;code&gt;httpstat&lt;/code&gt; are copied from other projects of mine, have a look:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/reorx/python-terminal-color&#34;&gt;reorx/python-terminal-color&lt;/a&gt; Drop-in single file library for printing terminal color.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/reorx/getenv&#34;&gt;reorx/getenv&lt;/a&gt; Environment variable definition with type.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>autogluon/autogluon</title>
    <updated>2024-06-16T01:36:22Z</updated>
    <id>tag:github.com,2024-06-16:/autogluon/autogluon</id>
    <link href="https://github.com/autogluon/autogluon" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast and Accurate ML in 3 Lines of Code&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/16392542/77208906-224aa500-6aba-11ea-96bd-e81806074030.png&#34; width=&#34;350&#34;&gt; &#xA; &lt;h2&gt;Fast and Accurate ML in 3 Lines of Code&lt;/h2&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/autogluon/autogluon/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/autogluon/autogluon&#34; alt=&#34;Latest Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://anaconda.org/conda-forge/autogluon&#34;&gt;&lt;img src=&#34;https://img.shields.io/conda/vn/conda-forge/autogluon.svg?sanitize=true&#34; alt=&#34;Conda Forge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/autogluon/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.8%20%7C%203.9%20%7C%203.10%20%7C%203.11-blue&#34; alt=&#34;Python Versions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pepy.tech/project/autogluon&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/autogluon/month&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/autogluon/autogluon/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/wjUmjqAc2N&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1043248669505368144?logo=discord&amp;amp;style=flat&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/autogluon&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/autogluon?style=social&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/autogluon/autogluon/actions/workflows/continuous_integration.yml&#34;&gt;&lt;img src=&#34;https://github.com/autogluon/autogluon/actions/workflows/continuous_integration.yml/badge.svg?sanitize=true&#34; alt=&#34;Continuous Integration&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/autogluon/autogluon/actions/workflows/platform_tests-command.yml&#34;&gt;&lt;img src=&#34;https://github.com/autogluon/autogluon/actions/workflows/platform_tests-command.yml/badge.svg?event=schedule&#34; alt=&#34;Platform Tests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://auto.gluon.ai/stable/install.html&#34;&gt;Installation&lt;/a&gt; | &lt;a href=&#34;https://auto.gluon.ai/stable/index.html&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://auto.gluon.ai/stable/whats_new/index.html&#34;&gt;Release Notes&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;AutoGluon automates machine learning tasks enabling you to easily achieve strong predictive performance in your applications. With just a few lines of code, you can train and deploy high-accuracy machine learning and deep learning models on image, text, time series, and tabular data.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;💾 Installation&lt;/h2&gt; &#xA;&lt;p&gt;AutoGluon is supported on Python 3.8 - 3.11 and is available on Linux, MacOS, and Windows.&lt;/p&gt; &#xA;&lt;p&gt;You can install AutoGluon with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pip install autogluon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Visit our &lt;a href=&#34;https://auto.gluon.ai/stable/install.html&#34;&gt;Installation Guide&lt;/a&gt; for detailed instructions, including GPU support, Conda installs, and optional dependencies.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;⚡&lt;/span&gt; Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;Build accurate end-to-end ML models in just 3 lines of code!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from autogluon.tabular import TabularPredictor&#xA;predictor = TabularPredictor(label=&#34;class&#34;).fit(&#34;train.csv&#34;)&#xA;predictions = predictor.predict(&#34;test.csv&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;AutoGluon Task&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Quickstart&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;API&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;TabularPredictor&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://auto.gluon.ai/stable/tutorials/tabular/tabular-quick-start.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=&amp;amp;message=tutorial&amp;amp;color=grey&#34; alt=&#34;Quick Start&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://auto.gluon.ai/stable/api/autogluon.tabular.TabularPredictor.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/api-reference-blue.svg?sanitize=true&#34; alt=&#34;API&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MultiModalPredictor&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://auto.gluon.ai/stable/tutorials/multimodal/multimodal_prediction/multimodal-quick-start.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=&amp;amp;message=tutorial&amp;amp;color=grey&#34; alt=&#34;Quick Start&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://auto.gluon.ai/stable/api/autogluon.multimodal.MultiModalPredictor.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/api-reference-blue.svg?sanitize=true&#34; alt=&#34;API&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;TimeSeriesPredictor&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://auto.gluon.ai/stable/tutorials/timeseries/forecasting-quick-start.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=&amp;amp;message=tutorial&amp;amp;color=grey&#34; alt=&#34;Quick Start&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://auto.gluon.ai/stable/api/autogluon.timeseries.TimeSeriesPredictor.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/api-reference-blue.svg?sanitize=true&#34; alt=&#34;API&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;&lt;span&gt;🔍&lt;/span&gt; Resources&lt;/h2&gt; &#xA;&lt;h3&gt;Hands-on Tutorials / Talks&lt;/h3&gt; &#xA;&lt;p&gt;Below is a curated list of recent tutorials and talks on AutoGluon. A comprehensive list is available &lt;a href=&#34;https://raw.githubusercontent.com/autogluon/autogluon/master/AWESOME.md#videos--tutorials&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Title&lt;/th&gt; &#xA;   &lt;th&gt;Format&lt;/th&gt; &#xA;   &lt;th&gt;Location&lt;/th&gt; &#xA;   &lt;th&gt;Date&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;📺&lt;/span&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=5tvp_Ihgnuk&#34;&gt;AutoGluon 1.0: Shattering the AutoML Ceiling with Zero Lines of Code&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tutorial&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://2023.automl.cc/&#34;&gt;AutoML Conf 2023&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2023/09/12&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;🔉&lt;/span&gt; &lt;a href=&#34;https://automlpodcast.com/episode/autogluon-the-story&#34;&gt;AutoGluon: The Story&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Podcast&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://automlpodcast.com/&#34;&gt;The AutoML Podcast&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2023/09/05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;📺&lt;/span&gt; &lt;a href=&#34;https://youtu.be/Lwu15m5mmbs?si=jSaFJDqkTU27C0fa&#34;&gt;AutoGluon: AutoML for Tabular, Multimodal, and Time Series Data&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tutorial&lt;/td&gt; &#xA;   &lt;td&gt;PyData Berlin&lt;/td&gt; &#xA;   &lt;td&gt;2023/06/20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;📺&lt;/span&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=J1UQUCPB88I&#34;&gt;Solving Complex ML Problems in a few Lines of Code with AutoGluon&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tutorial&lt;/td&gt; &#xA;   &lt;td&gt;PyData Seattle&lt;/td&gt; &#xA;   &lt;td&gt;2023/06/20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;📺&lt;/span&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=VAAITEds-28&#34;&gt;The AutoML Revolution&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tutorial&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://sites.google.com/view/automl-fall-school-2022&#34;&gt;Fall AutoML School 2022&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2022/10/18&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Scientific Publications&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/pdf/2003.06505.pdf&#34;&gt;AutoGluon-Tabular: Robust and Accurate AutoML for Structured Data&lt;/a&gt; (&lt;em&gt;Arxiv&lt;/em&gt;, 2020) (&lt;a href=&#34;https://raw.githubusercontent.com/autogluon/autogluon/master/CITING.md#general-usage--autogluontabular&#34;&gt;BibTeX&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://proceedings.neurips.cc/paper/2020/hash/62d75fb2e3075506e8837d8f55021ab1-Abstract.html&#34;&gt;Fast, Accurate, and Simple Models for Tabular Data via Augmented Distillation&lt;/a&gt; (&lt;em&gt;NeurIPS&lt;/em&gt;, 2020) (&lt;a href=&#34;https://raw.githubusercontent.com/autogluon/autogluon/master/CITING.md#tabular-distillation&#34;&gt;BibTeX&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://datasets-benchmarks-proceedings.neurips.cc/paper/2021/file/9bf31c7ff062936a96d3c8bd1f8f2ff3-Paper-round2.pdf&#34;&gt;Benchmarking Multimodal AutoML for Tabular Data with Text Fields&lt;/a&gt; (&lt;em&gt;NeurIPS&lt;/em&gt;, 2021) (&lt;a href=&#34;https://raw.githubusercontent.com/autogluon/autogluon/master/CITING.md#autogluonmultimodal&#34;&gt;BibTeX&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://proceedings.mlr.press/v202/zhu23k/zhu23k.pdf&#34;&gt;XTab: Cross-table Pretraining for Tabular Transformers&lt;/a&gt; (&lt;em&gt;ICML&lt;/em&gt;, 2023)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2308.05566&#34;&gt;AutoGluon-TimeSeries: AutoML for Probabilistic Time Series Forecasting&lt;/a&gt; (&lt;em&gt;AutoML Conf&lt;/em&gt;, 2023) (&lt;a href=&#34;https://raw.githubusercontent.com/autogluon/autogluon/master/CITING.md#autogluontimeseries&#34;&gt;BibTeX&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/pdf/2311.02971.pdf&#34;&gt;TabRepo: A Large Scale Repository of Tabular Model Evaluations and its AutoML Applications&lt;/a&gt; (&lt;em&gt;Under Review&lt;/em&gt;, 2024)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Articles&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://towardsdatascience.com/autogluon-timeseries-every-time-series-forecasting-model-in-one-library-29a3bf6879db&#34;&gt;AutoGluon-TimeSeries: Every Time Series Forecasting Model In One Library&lt;/a&gt; (&lt;em&gt;Towards Data Science&lt;/em&gt;, Jan 2024)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/blogs/opensource/machine-learning-with-autogluon-an-open-source-automl-library/&#34;&gt;AutoGluon for tabular data: 3 lines of code to achieve top 1% in Kaggle competitions&lt;/a&gt; (&lt;em&gt;AWS Open Source Blog&lt;/em&gt;, Mar 2020)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://towardsdatascience.com/autogluon-deep-learning-automl-5cdb4e2388ec?source=friends_link&amp;amp;sk=e3d17d06880ac714e47f07f39178fdf2&#34;&gt;AutoGluon overview &amp;amp; example applications&lt;/a&gt; (&lt;em&gt;Towards Data Science&lt;/em&gt;, Dec 2019)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Train/Deploy AutoGluon in the Cloud&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://auto.gluon.ai/cloud/stable/index.html&#34;&gt;AutoGluon Cloud&lt;/a&gt; (Recommended)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://auto.gluon.ai/stable/tutorials/cloud_fit_deploy/autopilot-autogluon.html&#34;&gt;AutoGluon on SageMaker AutoPilot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://auto.gluon.ai/stable/tutorials/cloud_fit_deploy/cloud-aws-sagemaker-train-deploy.html&#34;&gt;AutoGluon on Amazon SageMaker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aws/deep-learning-containers/raw/master/available_images.md#autogluon-training-containers&#34;&gt;AutoGluon Deep Learning Containers&lt;/a&gt; (Security certified &amp;amp; maintained by the AutoGluon developers)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/autogluon/autogluon&#34;&gt;AutoGluon Official Docker Container&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/marketplace/pp/prodview-n4zf5pmjt7ism&#34;&gt;AutoGluon-Tabular on AWS Marketplace&lt;/a&gt; (Not maintained by us)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;📝&lt;/span&gt; Citing AutoGluon&lt;/h2&gt; &#xA;&lt;p&gt;If you use AutoGluon in a scientific publication, please refer to our &lt;a href=&#34;https://raw.githubusercontent.com/autogluon/autogluon/master/CITING.md&#34;&gt;citation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;👋&lt;/span&gt; How to get involved&lt;/h2&gt; &#xA;&lt;p&gt;We are actively accepting code contributions to the AutoGluon project. If you are interested in contributing to AutoGluon, please read the &lt;a href=&#34;https://github.com/autogluon/autogluon/raw/master/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;🏛&lt;/span&gt; License&lt;/h2&gt; &#xA;&lt;p&gt;This library is licensed under the Apache 2.0 License.&lt;/p&gt;</summary>
  </entry>
</feed>