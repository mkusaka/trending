<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-16T01:34:12Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>facebookresearch/fairchem</title>
    <updated>2025-05-16T01:34:12Z</updated>
    <id>tag:github.com,2025-05-16:/facebookresearch/fairchem</id>
    <link href="https://github.com/facebookresearch/fairchem" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FAIR Chemistry&#39;s library of machine learning methods for chemistry&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;code&gt;fairchem&lt;/code&gt; by FAIR Chemistry &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;559&#34; height=&#34;200&#34; src=&#34;https://github.com/FAIR-Chem/fairchem/assets/45150244/5872c21c-8f39-41af-b703-af9817f0affe&#34; ? &lt; p&gt; &lt;/p&gt;&#xA;&lt;h4 align=&#34;center&#34;&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/FAIR-Chem/fairchem/actions/workflows/test.yml/badge.svg?branch=main&#34; alt=&#34;tests&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/fairchem-core&#34; alt=&#34;PyPI - Version&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/python-3.10%2B-blue&#34; alt=&#34;Static Badge&#34;&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/codespaces/new/FAIR-Chem/fairchem?quickstart=1&#34;&gt;&lt;img src=&#34;https://github.com/codespaces/badge.svg?sanitize=true&#34; alt=&#34;Open in GitHub Codespaces&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;fairchem&lt;/code&gt; is the &lt;a href=&#34;https://ai.meta.com/research/&#34;&gt;FAIR&lt;/a&gt; Chemistry&#39;s centralized repository of all its data, models, demos, and application efforts for materials science and quantum chemistry.&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &lt;strong&gt;FAIRChem version 2 is a breaking change from version 1 and is not compatible with our previous pretrained models and code.&lt;/strong&gt; If you want to use an older model or code from version 1 you will need to install &lt;a href=&#34;https://pypi.org/project/fairchem-core/1.10.0/&#34;&gt;version 1&lt;/a&gt;, as detailed &lt;a href=&#34;https://raw.githubusercontent.com/facebookresearch/fairchem/main/#looking-for-fairchem-v1-models-and-code&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &lt;/h4&gt;&#xA;&lt;h3&gt;Read our latest release post!&lt;/h3&gt; &#xA;&lt;p&gt;Read about the &lt;a href=&#34;https://ai.meta.com/blog/meta-fair-science-new-open-source-releases/&#34;&gt;UMA model and dataset&lt;/a&gt; release.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ai.meta.com/blog/meta-fair-science-new-open-source-releases/?ref=shareable&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/acddd09b-ed6f-4d05-9a4b-9ba5e2301150&#34; alt=&#34;Meta FAIR Science Release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Try the demo!&lt;/h3&gt; &#xA;&lt;p&gt;If you want to explore model capabilities check out our &lt;a href=&#34;https://facebook-fairchem-uma-demo.hf.space/&#34;&gt;educational demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://facebook-fairchem-uma-demo.hf.space/&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/7005d1bb-4459-403d-b299-d41fdd8c48ec&#34; alt=&#34;Educational Demo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Install fairchem-core using pip,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install git+https://github.com/facebookresearch/fairchem.git@fairchem_core-2.0.0#subdirectory=packages/fairchem-core&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;The PyPI install (pip install fairchem-core) is not available right now as we are waiting for a few dependencies to release their PyPI packages, will update this soon when it&#39;s available!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Quick Start&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to use pretrained models is via the &lt;a href=&#34;https://wiki.fysik.dtu.dk/ase/&#34;&gt;ASE&lt;/a&gt; &lt;code&gt;FAIRChemCalculator&lt;/code&gt;. A single uma model can be used for a wide range of applications in chemistry and materials science by picking the appropriate task name for domain specific prediction.&lt;/p&gt; &#xA;&lt;h4&gt;Instantiate a calculator from a pretrained model&lt;/h4&gt; &#xA;&lt;p&gt;Make sure you have a Hugging Face account, have already applied for model access to the &lt;a href=&#34;https://huggingface.co/facebook/UMA&#34;&gt;UMA model repository&lt;/a&gt;, and have logged in to Hugging Face using an access token.&lt;/p&gt; &#xA;&lt;h4&gt;Set the task for your application and calculate&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;oc20:&lt;/strong&gt; use this for catalysis&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;omat:&lt;/strong&gt; use this for inorganic materials&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;omol:&lt;/strong&gt; use this for molecules&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;odac:&lt;/strong&gt; use this for MOFs&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;omc:&lt;/strong&gt; use this for molecular crystals&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Relax adsorbate on a catalytic surface,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from ase.build import fcc100, add_adsorbate, molecule&#xA;from ase.optimize import LBFGS&#xA;from fairchem.core import FAIRChemCalculator&#xA;&#xA;calc = FAIRChemCalculator(hf_hub_filename=&#34;uma_sm.pt&#34;, device=&#34;cuda&#34;, task_name=&#34;oc20&#34;)&#xA;&#xA;# Set up your system as an ASE atoms object&#xA;slab = fcc100(&#34;Cu&#34;, (3, 3, 3), vacuum=8, periodic=True)&#xA;adsorbate = molecule(&#34;CO&#34;)&#xA;add_adsorbate(slab, adsorbate, 2.0, &#34;bridge&#34;)&#xA;&#xA;slab.calc = calc&#xA;&#xA;# Set up LBFGS dynamics object&#xA;opt = LBFGS(slab)&#xA;opt.run(0.05, 100)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or relax an inorganic crystal,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from ase.build import bulk&#xA;from ase.optimize import FIRE&#xA;from ase.filters import FrechetCellFilter&#xA;from fairchem.core import FAIRChemCalculator&#xA;&#xA;calc = FAIRChemCalculator(hf_hub_filename=&#34;uma_sm.pt&#34;, device=&#34;cuda&#34;, task_name=&#34;omat&#34;)&#xA;&#xA;atoms = bulk(&#34;Fe&#34;)&#xA;atoms.calc = calc&#xA;&#xA;opt = LBFGS(FrechetCellFilter(atoms))&#xA;opt.run(0.05, 100)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run molecular MD,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from ase import units&#xA;from ase.io import Trajectory&#xA;from ase.md.langevin import Langevin&#xA;from ase.build import molecule&#xA;from fairchem.core import FAIRChemCalculator&#xA;&#xA;calc = FAIRChemCalculator(hf_hub_filename=&#34;uma_sm.pt&#34;, device=&#34;cuda&#34;, task_name=&#34;omol&#34;)&#xA;&#xA;atoms = molecule(&#34;H2O&#34;)&#xA;atoms.calc = calc&#xA;&#xA;dyn = Langevin(&#xA;    atoms,&#xA;    timestep=0.1 * units.fs,&#xA;    temperature_K=400,&#xA;    friction=0.001 / units.fs,&#xA;)&#xA;trajectory = Trajectory(&#34;my_md.traj&#34;, &#34;w&#34;, atoms)&#xA;dyn.attach(trajectory.write, interval=1)&#xA;dyn.run(steps=1000)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Looking for Fairchem V1, models and code?&lt;/h3&gt; &#xA;&lt;p&gt;Fairchem V2 is a major upgrade and we completely rewrote the trainer, fine-tuning, models and calculators.&lt;/p&gt; &#xA;&lt;p&gt;We plan to bring back the following models compatible with Fairchem V2 soon:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gemnet-OC&lt;/li&gt; &#xA; &lt;li&gt;EquiformersV2&lt;/li&gt; &#xA; &lt;li&gt;ESEN&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We will also be releasing more detailed documentation on how to use Fairchem V2, stay tuned!&lt;/p&gt; &#xA;&lt;p&gt;The old OCPCalculator, trainer code will NOT be revived. We apologize for the inconvenience and please raise Issues if you need help! In the meantime, you can still use models from fairchem version 1, by installing version 1,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install fairchem-core==1.10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And using the &lt;code&gt;OCPCalculator&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from fairchem.core import OCPCalculator&#xA;&#xA;calc = OCPCalculator(&#xA;    model_name=&#34;EquiformerV2-31M-S2EF-OC20-All+MD&#34;,&#xA;    local_cache=&#34;pretrained_models&#34;,&#xA;    cpu=False,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;LICENSE&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;fairchem&lt;/code&gt; is available under a &lt;a href=&#34;https://raw.githubusercontent.com/facebookresearch/fairchem/main/LICENSE.md&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mikumifa/cppTickerBuy</title>
    <updated>2025-05-16T01:34:12Z</updated>
    <id>tag:github.com,2025-05-16:/mikumifa/cppTickerBuy</id>
    <link href="https://github.com/mikumifa/cppTickerBuy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;cpp cp30 漫展 活动 抢票 无差别 同人展&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/mikumifa/cppTickerBuy&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;160&#34; src=&#34;https://raw.githubusercontent.com/mikumifa/cppTickerBuy/main/icon.ico&#34; alt=&#34;logo&#34;&gt; &lt;/a&gt; &#xA; &lt;h1 id=&#34;koishi&#34;&gt;cppTickerBuy&lt;/h1&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/mikumifa/cppTickerBuy/total&#34; alt=&#34;GitHub all releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/mikumifa/cppTickerBuy&#34; alt=&#34;GitHub release (with filter)&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/mikumifa/cppTickerBuy&#34; alt=&#34;GitHub issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/mikumifa/cppTickerBuy&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;开源免费，简单易用，图形界面, 速度极快的CPP抢票辅助工具&lt;/p&gt; &#xA;&lt;h2&gt;快速安装&lt;/h2&gt; &#xA;&lt;p&gt;Windows 下载最新的release文件 (cppTickerBuy.zip) &lt;a href=&#34;https://github.com/mikumifa/cppTickerBuy/releases&#34;&gt;下载链接&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;如果你对Github一点也不了解, 不知道在哪下载&lt;/p&gt; &#xA; &lt;p&gt;这里有一份小白指南 &lt;a href=&#34;https://github.com/mikumifa/biliTickerBuy/wiki/%E5%B0%8F%E7%99%BD%E4%B8%8B%E8%BD%BD%E6%8C%87%E5%8D%97&#34;&gt;点我前往小白指南&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;使用说明书&lt;/h2&gt; &#xA;&lt;p&gt;重构了UI，启动终端第一行会显示&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Running on local URL:  http://127.0.0.1:xxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;访问对应的网址即可&lt;/p&gt; &#xA;&lt;p&gt;使用源码手动启动 &lt;code&gt;main.py&lt;/code&gt; 时可带有如下参数：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--share&lt;/code&gt; 选择是否创建sharelink，需传入布尔值 &lt;code&gt;True/False&lt;/code&gt; ，默认为 &lt;code&gt;False&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;说明书暂时没时间写，用以前的项目代替一下 &lt;a href=&#34;https://github.com/mikumifa/biliTickerBuy/wiki/%E6%8A%A2%E7%A5%A8%E8%AF%B4%E6%98%8E&#34;&gt;点我前往更加详细的使用说明书&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;项目问题&lt;/h2&gt; &#xA;&lt;p&gt;程序使用问题： &lt;a href=&#34;https://github.com/mikumifa/cppTickerBuy/discussions&#34;&gt;点此链接前往discussions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;反馈程序BUG或者提新功能建议： &lt;a href=&#34;https://github.com/mikumifa/cppTickerBuy/issues/new/choose&#34;&gt;点此链接向项目提出反馈BUG&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;其他可用脚本&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;链接&lt;/th&gt; &#xA;   &lt;th&gt;主要特色&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Koileo/ticket_for_allcpp&#34;&gt;https://github.com/Koileo/ticket_for_allcpp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;能同时开多张票&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;项目贡献者&lt;/h2&gt; &#xA;&lt;!-- readme: collaborators,contributors -start --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/mikumifa&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/99951454?v=4&#34; width=&#34;100;&#34; alt=&#34;mikumifa&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;mikumifa&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/WittF&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/108567138?v=4&#34; width=&#34;100;&#34; alt=&#34;WittF&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;W1ttF&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA; &lt;tbody&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- readme: collaborators,contributors -end --&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#mikumifa/cppTickerBuy&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=mikumifa/cppTickerBuy&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;免责声明&lt;/h2&gt; &#xA;&lt;p&gt;详见&lt;a href=&#34;https://raw.githubusercontent.com/mikumifa/cppTickerBuy/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;，切勿进行盈利，所造成的后果与本人无关。&lt;/p&gt; &#xA;&lt;h2&gt;捐赠&lt;/h2&gt; &#xA;&lt;p&gt;如果你想支持这个项目的话 &lt;a href=&#34;https://afdian.com/a/mikumifa&#34;&gt;爱发电&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>happycola233/tchMaterial-parser</title>
    <updated>2025-05-16T01:34:12Z</updated>
    <id>tag:github.com,2025-05-16:/happycola233/tchMaterial-parser</id>
    <link href="https://github.com/happycola233/tchMaterial-parser" rel="alternate"></link>
    <summary type="html">&lt;p&gt;国家中小学智慧教育平台 电子课本下载工具，帮助您从智慧教育平台中获取电子课本的 PDF 文件网址并进行下载，让您更方便地获取课本内容。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://basic.smartedu.cn/tchMaterial/&#34;&gt;国家中小学智慧教育平台&lt;/a&gt; 电子课本下载工具&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-3.x-blue.svg?sanitize=true&#34; alt=&#34;Python Version&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-MIT-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Made_With-%E2%9D%A4-red.svg?sanitize=true&#34; alt=&#34;Made With Love❤️&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] 🚀最新版本 v3.0 现已发布，欢迎体验！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;本工具可以帮助您从&lt;a href=&#34;https://basic.smartedu.cn/tchMaterial/&#34;&gt;&lt;strong&gt;国家中小学智慧教育平台&lt;/strong&gt;&lt;/a&gt;获取电子课本的 PDF 文件网址并进行下载，让您更方便地获取课本内容。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;自&lt;strong&gt;2025 年 2 月&lt;/strong&gt;起，国家中小学智慧教育平台&lt;strong&gt;需要登录&lt;/strong&gt;才能访问电子课本资源，用户需提供 &lt;strong&gt;Access Token&lt;/strong&gt;（即登录凭据）才可正常使用本工具的下载功能。&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;👉请先按照&lt;a href=&#34;https://raw.githubusercontent.com/happycola233/tchMaterial-parser/main/#2-%E8%AE%BE%E7%BD%AE-access-token&#34;&gt;下方指南&lt;/a&gt;设置 Access Token，否则程序将无法解析资源！&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;✨工具特点&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持 Access Token 登录&lt;/strong&gt;🔑：支持用户手动输入 Access Token，在 Windows 操作系统下会存入注册表，下次启动可自动加载。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持批量下载&lt;/strong&gt;📚：一次输入多个电子课本预览页面网址，即可批量下载 PDF 课本文件。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;自动文件命名&lt;/strong&gt;📂：程序会自动使用教材名称作为文件名，方便管理下载的课本文件。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;高 DPI 适配&lt;/strong&gt;🖥️：优化 UI 以适配高分辨率屏幕，避免界面模糊问题。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;下载进度可视化&lt;/strong&gt;📊：实时显示下载进度，支持暂停/恢复操作。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;跨平台支持&lt;/strong&gt;💻：支持 Windows、Linux、macOS 等操作系统（需要图形界面）。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/happycola233/tchMaterial-parser/main/res/PixPin_2025-03-14_23-44-26.png&#34; alt=&#34;程序截图&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;⬇️下载与安装方法&lt;/h2&gt; &#xA;&lt;h3&gt;GitHub Releases 页面&lt;/h3&gt; &#xA;&lt;p&gt;由于我们的精力有限，本项目的 &lt;a href=&#34;https://github.com/happycola233/tchMaterial-parser/releases&#34;&gt;GitHub Releases 页面&lt;/a&gt;&lt;strong&gt;仅会发布适用于 Windows 与 Linux 操作系统的 x64 架构&lt;/strong&gt;的程序。&lt;/p&gt; &#xA;&lt;p&gt;在下载完成之后，即可运行本程序，不需要额外的安装步骤。&lt;/p&gt; &#xA;&lt;h3&gt;Arch 用户软件仓库（AUR）&lt;/h3&gt; &#xA;&lt;p&gt;对于 &lt;strong&gt;Arch Linux&lt;/strong&gt; 操作系统，本程序已发布至&lt;a href=&#34;https://aur.archlinux.org/packages/tchmaterial-parser&#34;&gt;Arch 用户软件仓库&lt;/a&gt;，因此您还可以通过在终端中输入以下命令安装：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yay -S tchmaterial-parser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;感谢 &lt;a href=&#34;https://github.com/iamzhz&#34;&gt;@iamzhz&lt;/a&gt; 制作了本工具的发行包（&lt;a href=&#34;https://raw.githubusercontent.com/happycola233/issues/26&#34;&gt;#26&lt;/a&gt;）！&lt;/p&gt; &#xA;&lt;h2&gt;🛠️使用方法&lt;/h2&gt; &#xA;&lt;h3&gt;1. 输入教材链接📥&lt;/h3&gt; &#xA;&lt;p&gt;将电子课本的&lt;strong&gt;预览页面网址&lt;/strong&gt;粘贴到程序文本框中，支持多个 URL（每行一个）。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;示例网址&lt;/strong&gt;：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;https://basic.smartedu.cn/tchMaterial/detail?contentType=assets_document&amp;amp;contentId=XXXXXX&amp;amp;catalogType=tchMaterial&amp;amp;subCatalog=tchMaterial&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. 设置 Access Token🔑&lt;/h3&gt; &#xA;&lt;p&gt;若您第一次使用本程序，需点击 “&lt;strong&gt;设置 Token&lt;/strong&gt;” 按钮，粘贴 Access Token 并保存。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;打开浏览器&lt;/strong&gt;，访问&lt;a href=&#34;https://auth.smartedu.cn/uias/login&#34;&gt;国家中小学智慧教育平台&lt;/a&gt;并&lt;strong&gt;登录账号&lt;/strong&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;按下 &lt;strong&gt;F12&lt;/strong&gt; 或 &lt;strong&gt;Ctrl+Shift+I&lt;/strong&gt;，或右键——检查（审查元素）打开&lt;strong&gt;开发者工具&lt;/strong&gt;，选择&lt;strong&gt;控制台（Console）&lt;/strong&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在控制台粘贴以下代码后回车（Enter）：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;(function() {&#xA;  const authKey = Object.keys(localStorage).find(key =&amp;gt; key.startsWith(&#34;ND_UC_AUTH&#34;));&#xA;  if (!authKey) {&#xA;    console.error(&#34;未找到 Access Token，请确保已登录！&#34;);&#xA;    return;&#xA;  }&#xA;  const tokenData = JSON.parse(localStorage.getItem(authKey));&#xA;  const accessToken = JSON.parse(tokenData.value).access_token;&#xA;  console.log(&#34;%cAccess Token: &#34;, &#34;color: green; font-weight: bold&#34;, accessToken);&#xA;})();&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;复制控制台输出的 &lt;strong&gt;Access Token&lt;/strong&gt;，然后在本程序中点击 “&lt;strong&gt;设置 Token&lt;/strong&gt;” 按钮，粘贴并保存 Token。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Access Token 可能会过期，若下载失败提示 &lt;strong&gt;401 Unauthorized&lt;/strong&gt;，请重新获取并设置新的 Token。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;3. 开始下载🚀&lt;/h3&gt; &#xA;&lt;p&gt;点击 “&lt;strong&gt;下载&lt;/strong&gt;” 按钮，程序将自动解析并下载 PDF 课本。&lt;/p&gt; &#xA;&lt;p&gt;本工具支持&lt;strong&gt;批量下载&lt;/strong&gt;，所有 PDF 文件会自动按课本名称命名并保存在选定目录中。&lt;/p&gt; &#xA;&lt;h2&gt;❓常见问题&lt;/h2&gt; &#xA;&lt;h3&gt;1. 为什么下载失败？⚠️&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;检查是否已&lt;a href=&#34;https://raw.githubusercontent.com/happycola233/tchMaterial-parser/main/#2-%E8%AE%BE%E7%BD%AE-access-token&#34;&gt;&lt;strong&gt;正确设置 Access Token&lt;/strong&gt;&lt;/a&gt;🔑，且没有过期。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;确认网络连接是否正常&lt;/strong&gt;🌐，有时网络不稳定可能导致下载失败。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;确保输入的网址有效&lt;/strong&gt;🔗，部分旧资源可能已被移除。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. Access Token 保存在哪里？💾&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows 操作系统&lt;/strong&gt;：Token 会存储在&lt;strong&gt;注册表&lt;/strong&gt; &lt;code&gt;HKEY_CURRENT_USER\Software\tchMaterial-parser&lt;/code&gt; 项中的 &lt;code&gt;AccessToken&lt;/code&gt; 值。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux 操作系统&lt;/strong&gt;: Token 会存储在 &lt;code&gt;~/.config/tchMaterial-parser/data.json&lt;/code&gt; 的文件中。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;macOS 等操作系统&lt;/strong&gt;：Token 仅在运行时临时存储于内存，不会自动保存，程序重启后需重新输入，目前我们正在努力改进该功能。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3. Token 会不会泄露？🔐&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本程序&lt;strong&gt;不会上传&lt;/strong&gt; Token，也不会存储在云端，仅用于本地请求授权。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;请勿在公开场合分享 Token&lt;/strong&gt;，以免您的账号被他人使用，造成严重后果。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⭐Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#happycola233/tchMaterial-parser&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=happycola233/tchMaterial-parser&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🤝贡献指南&lt;/h2&gt; &#xA;&lt;p&gt;如果您发现 Bug 或有改进建议，欢迎提交 &lt;strong&gt;Issue&lt;/strong&gt; 或 &lt;strong&gt;Pull Request&lt;/strong&gt;，让我们一起完善本工具！&lt;/p&gt; &#xA;&lt;h2&gt;📜许可证&lt;/h2&gt; &#xA;&lt;p&gt;本项目基于 &lt;a href=&#34;https://raw.githubusercontent.com/happycola233/tchMaterial-parser/main/LICENSE&#34;&gt;MIT 许可证&lt;/a&gt;，欢迎自由使用和二次开发。&lt;/p&gt; &#xA;&lt;h2&gt;💌友情链接&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;📚您也可以在 &lt;a href=&#34;https://github.com/TapXWorld/ChinaTextbook&#34;&gt;ChinaTextbook&lt;/a&gt; 项目中下载归档的教材 PDF。&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>