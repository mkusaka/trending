<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-02T01:34:47Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TideDra/zotero-arxiv-daily</title>
    <updated>2025-08-02T01:34:47Z</updated>
    <id>tag:github.com,2025-08-02:/TideDra/zotero-arxiv-daily</id>
    <link href="https://github.com/TideDra/zotero-arxiv-daily" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Recommend new arxiv papers of your interest daily according to your Zotero libarary.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;&#34; rel=&#34;noopener&#34;&gt; &lt;img width=&#34;200px&#34; height=&#34;200px&#34; src=&#34;https://raw.githubusercontent.com/TideDra/zotero-arxiv-daily/main/assets/logo.svg?sanitize=true&#34; alt=&#34;logo&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Zotero-arXiv-Daily&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/status-active-success.svg?sanitize=true&#34; alt=&#34;Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/TideDra/zotero-arxiv-daily?style=flat&#34; alt=&#34;Stars&#34;&gt; &lt;a href=&#34;https://github.com/TideDra/zotero-arxiv-daily/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/TideDra/zotero-arxiv-daily&#34; alt=&#34;GitHub Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/TideDra/zotero-arxiv-daily/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/TideDra/zotero-arxiv-daily&#34; alt=&#34;GitHub Pull Requests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/TideDra/zotero-arxiv-daily/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/TideDra/zotero-arxiv-daily&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://api.gitsponsors.com/api/badge/link?p=PKMtRut1dWWuC1oFdJweyDSvJg454/GkdIx4IinvBblaX2AY4rQ7FYKAK1ZjApoiNhYEeduIEhfeZVIwoIVlvcwdJXVFD2nV2EE5j6lYXaT/RHrcsQbFl3aKe1F3hliP26OMayXOoZVDidl05wj+yg==&#34;&gt;&lt;img src=&#34;https://api.gitsponsors.com/api/badge/img?id=893025857&#34; height=&#34;20&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Recommend new arxiv papers of your interest daily according to your Zotero library. &lt;br&gt; &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] Please keep an eye on this repo, and merge your forked repo in time when there is any update of this upstream, in order to enjoy new features and fix found bugs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;üßê About &lt;a name=&#34;about&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Track new scientific researches of your interest by just forking (and staring) this repo!üòä&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;em&gt;Zotero-arXiv-Daily&lt;/em&gt; finds arxiv papers that may attract you based on the context of your Zotero library, and then sends the result to your mailboxüìÆ. It can be deployed as Github Action Workflow with &lt;strong&gt;zero cost&lt;/strong&gt;, &lt;strong&gt;no installation&lt;/strong&gt;, and &lt;strong&gt;few configuration&lt;/strong&gt; of Github Action environment variables for daily &lt;strong&gt;automatic&lt;/strong&gt; delivery.&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Totally free! All the calculation can be done in the Github Action runner locally within its quota (for public repo).&lt;/li&gt; &#xA; &lt;li&gt;AI-generated TL;DR for you to quickly pick up target papers.&lt;/li&gt; &#xA; &lt;li&gt;Affiliations of the paper are resolved and presented.&lt;/li&gt; &#xA; &lt;li&gt;Links of PDF and code implementation (if any) presented in the e-mail.&lt;/li&gt; &#xA; &lt;li&gt;List of papers sorted by relevance with your recent research interest.&lt;/li&gt; &#xA; &lt;li&gt;Fast deployment via fork this repo and set environment variables in the Github Action Page.&lt;/li&gt; &#xA; &lt;li&gt;Support LLM API for generating TL;DR of papers.&lt;/li&gt; &#xA; &lt;li&gt;Ignore unwanted Zotero papers using gitignore-style pattern.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì∑ Screenshot&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TideDra/zotero-arxiv-daily/main/assets/screenshot.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üöÄ Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Quick Start&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Fork (and starüòò) this repo. &lt;img src=&#34;https://raw.githubusercontent.com/TideDra/zotero-arxiv-daily/main/assets/fork.png&#34; alt=&#34;fork&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set Github Action environment variables. &lt;img src=&#34;https://raw.githubusercontent.com/TideDra/zotero-arxiv-daily/main/assets/secrets.png&#34; alt=&#34;secrets&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Below are all the secrets you need to set. They are invisible to anyone including you once they are set, for security.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Key&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Required&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ZOTERO_ID&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;str&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;User ID of your Zotero account. &lt;strong&gt;User ID is not your username, but a sequence of numbers&lt;/strong&gt;Get your ID from &lt;a href=&#34;https://www.zotero.org/settings/security&#34;&gt;here&lt;/a&gt;. You can find it at the position shown in this &lt;a href=&#34;https://github.com/TideDra/zotero-arxiv-daily/raw/main/assets/userid.png&#34;&gt;screenshot&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;12345678&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ZOTERO_KEY&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;str&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;An Zotero API key with read access. Get a key from &lt;a href=&#34;https://www.zotero.org/settings/security&#34;&gt;here&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;AB5tZ877P2j7Sm2Mragq041H&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ARXIV_QUERY&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;str&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The categories of target arxiv papers. Use &lt;code&gt;+&lt;/code&gt; to concatenate multiple categories. The example retrieves papers about AI, CV, NLP, ML. Find the abbr of your research area from &lt;a href=&#34;https://arxiv.org/category_taxonomy&#34;&gt;here&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;cs.AI+cs.CV+cs.LG+cs.CL&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;SMTP_SERVER&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;str&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The SMTP server that sends the email. I recommend to utilize a seldom-used email for this. Ask your email provider (Gmail, QQ, Outlook, ...) for its SMTP server&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smtp.qq.com&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;SMTP_PORT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The port of SMTP server.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;465&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;SENDER&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;str&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The email account of the SMTP server that sends you email.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;mailto:abc@qq.com&#34;&gt;abc@qq.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;SENDER_PASSWORD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;str&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The password of the sender account. Note that it&#39;s not necessarily the password for logging in the e-mail client, but the authentication code for SMTP service. Ask your email provider for this.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;abcdefghijklmn&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;RECEIVER&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;str&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The e-mail address that receives the paper list.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;mailto:abc@outlook.com&#34;&gt;abc@outlook.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MAX_PAPER_NUM&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;int&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The maximum number of the papers presented in the email. This value directly affects the execution time of this workflow, because it takes about 70s to generate TL;DR for one paper. &lt;code&gt;-1&lt;/code&gt; means to present all the papers retrieved.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;50&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;SEND_EMPTY&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bool&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Whether to send an empty email even if no new papers today.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USE_LLM_API&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bool&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Whether to use the LLM API in the cloud or to use local LLM. If set to &lt;code&gt;1&lt;/code&gt;, the API is used. Else if set to &lt;code&gt;0&lt;/code&gt;, the workflow will download and deploy an open-source LLM. Default to &lt;code&gt;0&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OPENAI_API_KEY&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;str&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;API Key when using the API to access LLMs. You can get FREE API for using advanced open source LLMs in &lt;a href=&#34;https://cloud.siliconflow.cn/i/b3XhBRAm&#34;&gt;SiliconFlow&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;sk-xxx&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OPENAI_API_BASE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;str&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;API URL when using the API to access LLMs. If not filled in, the default is the OpenAI URL.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://api.siliconflow.cn/v1&#34;&gt;https://api.siliconflow.cn/v1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MODEL_NAME&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;str&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Model name when using the API to access LLMs. If not filled in, the default is gpt-4o. Qwen/Qwen2.5-7B-Instruct is recommended when using &lt;a href=&#34;https://cloud.siliconflow.cn/i/b3XhBRAm&#34;&gt;SiliconFlow&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Qwen/Qwen2.5-7B-Instruct&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;There are also some public variables (Repository Variables) you can set, which are easy to edit. &lt;img src=&#34;https://raw.githubusercontent.com/TideDra/zotero-arxiv-daily/main/assets/repo_var.png&#34; alt=&#34;vars&#34;&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Key&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Required&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ZOTERO_IGNORE&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;str&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Gitignore-style patterns marking the Zotero collections that should be ignored. One rule one line. Learn more about &lt;a href=&#34;https://git-scm.com/docs/gitignore&#34;&gt;gitignore&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;AI Agent/&lt;br&gt;**/survey&lt;br&gt;!LLM/survey&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;REPOSITORY&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;str&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The repository that provides the workflow. If set, the value can only be &lt;code&gt;TideDra/zotero-arxiv-daily&lt;/code&gt;, in which case, the workflow always pulls the latest code from this upstream repo, so that you don&#39;t need to sync your forked repo upon each update, unless the workflow file is changed.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;TideDra/zotero-arxiv-daily&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;REF&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;str&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The specified ref of the workflow to run. Only valid when REPOSITORY is set to &lt;code&gt;TideDra/zotero-arxiv-daily&lt;/code&gt;. Currently supported values include &lt;code&gt;main&lt;/code&gt; for stable version, &lt;code&gt;dev&lt;/code&gt; for development version which has new features and potential bugs.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;main&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;LANGUAGE&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;str&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The language of TLDR; Its value is directly embeded in the prompt passed to LLM&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Chinese&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;That&#39;s all! Now you can test the workflow by manually triggering it: &lt;img src=&#34;https://raw.githubusercontent.com/TideDra/zotero-arxiv-daily/main/assets/test.png&#34; alt=&#34;test&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] The Test-Workflow Action is the debug version of the main workflow (Send-emails-daily), which always retrieve 5 arxiv papers regardless of the date. While the main workflow will be automatically triggered everyday and retrieve new papers released yesterday. There is no new arxiv paper at weekends and holiday, in which case you may see &#34;No new papers found&#34; in the log of main workflow.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Then check the log and the receiver email after it finishes.&lt;/p&gt; &#xA;&lt;p&gt;By default, the main workflow runs on 22:00 UTC everyday. You can change this time by editting the workflow config &lt;code&gt;.github/workflows/main.yml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Local Running&lt;/h3&gt; &#xA;&lt;p&gt;Supported by &lt;a href=&#34;https://github.com/astral-sh/uv&#34;&gt;uv&lt;/a&gt;, this workflow can easily run on your local device if uv is installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# set all the environment variables&#xA;# export ZOTERO_ID=xxxx&#xA;# ...&#xA;cd zotero-arxiv-daily&#xA;uv run main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] The workflow will download and run an LLM (Qwen2.5-3B, the file size of which is about 3G). Make sure your network and hardware can handle it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Other package managers like pip or conda are not tested. You can still use them to install this workflow because there is a &lt;code&gt;pyproject.toml&lt;/code&gt;, while potential problems exist.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;üöÄ Sync with the latest version&lt;/h2&gt; &#xA;&lt;p&gt;This project is in active development. You can subscribe this repo via &lt;code&gt;Watch&lt;/code&gt; so that you can be notified once we publish new release.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TideDra/zotero-arxiv-daily/main/assets/subscribe_release.png&#34; alt=&#34;Watch&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üìñ How it works&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Zotero-arXiv-Daily&lt;/em&gt; firstly retrieves all the papers in your Zotero library and all the papers released in the previous day, via corresponding API. Then it calculates the embedding of each paper&#39;s abstract via an embedding model. The score of a paper is its weighted average similarity over all your Zotero papers (newer paper added to the library has higher weight).&lt;/p&gt; &#xA;&lt;p&gt;The TLDR of each paper is generated by a lightweight LLM (Qwen2.5-3b-instruct-q4_k_m), given its title, abstract, introduction, and conclusion (if any). The introduction and conclusion are extracted from the source latex file of the paper.&lt;/p&gt; &#xA;&lt;h2&gt;üìå Limitations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The recommendation algorithm is very simple, it may not accurately reflect your interest. Welcome better ideas for improving the algorithm!&lt;/li&gt; &#xA; &lt;li&gt;This workflow deploys an LLM on the cpu of Github Action runner, and it takes about 70s to generate a TLDR for one paper. High &lt;code&gt;MAX_PAPER_NUM&lt;/code&gt; can lead the execution time exceed the limitation of Github Action runner (6h per execution for public repo, and 2000 mins per month for private repo). Commonly, the quota given to public repo is definitely enough for individual use. If you have special requirements, you can deploy the workflow in your own server, or use a self-hosted Github Action runner, or pay for the exceeded execution time.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üëØ‚Äç‚ôÇÔ∏è Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Any issue and PR are welcomed! But remember that &lt;strong&gt;each PR should merge to the &lt;code&gt;dev&lt;/code&gt; branch&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üìÉ License&lt;/h2&gt; &#xA;&lt;p&gt;Distributed under the AGPLv3 License. See &lt;code&gt;LICENSE&lt;/code&gt; for detail.&lt;/p&gt; &#xA;&lt;h2&gt;‚ù§Ô∏è Acknowledgement&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/urschrei/pyzotero&#34;&gt;pyzotero&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lukasschwab/arxiv.py&#34;&gt;arxiv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/UKPLab/sentence-transformers&#34;&gt;sentence_transformers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abetlen/llama-cpp-python&#34;&gt;llama-cpp-python&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚òï Buy Me A Coffee&lt;/h2&gt; &#xA;&lt;p&gt;If you find this project helpful, welcome to sponsor me via WeChat or via &lt;a href=&#34;https://ko-fi.com/tidedra&#34;&gt;ko-fi&lt;/a&gt;. &lt;img src=&#34;https://raw.githubusercontent.com/TideDra/zotero-arxiv-daily/main/assets/wechat_sponsor.JPG&#34; alt=&#34;wechat_qr&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üåü Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#TideDra/zotero-arxiv-daily&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=TideDra/zotero-arxiv-daily&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>chu23465/VT-PR</title>
    <updated>2025-08-02T01:34:47Z</updated>
    <id>tag:github.com,2025-08-02:/chu23465/VT-PR</id>
    <link href="https://github.com/chu23465/VT-PR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;VineTrimmer with PlayReady and WideVine support, WIP. A DRM Removal Framework for Streaming Services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VineTrimmer PlayReady&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.python.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Made%20with-python-blue?style=for-the-badge&amp;amp;logo=python&#34; alt=&#34;Made Python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/chu23465/VT-PR/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/chu23465/VT-PR.svg?style=for-the-badge&amp;amp;color=maroon&#34; alt=&#34;Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/chu23465/VT-PR/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/chu23465/VT-PR.svg?style=for-the-badge&amp;amp;color=teal&#34; alt=&#34;Stargazers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/chu23465/VT-PR/raw/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/chu23465/VT-PR.svg?style=for-the-badge&amp;amp;color=indigo&#34; alt=&#34;project_license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/chu23465/VT-PR/issues?q=is%3Aissue%20state%3Aclosed&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed/chu23465/VT-PR.svg?style=for-the-badge&amp;amp;color=green&#34; alt=&#34;issue_close&#34;&gt;&lt;/a&gt; &lt;img height=&#34;30&#34; src=&#34;https://raw.githubusercontent.com/chu23465/VT-PR/refs/heads/dev/assets/icon_transparent.png&#34;&gt;&lt;/p&gt; &#xA;&lt;!--&#xA;&#xA;[![actions_build][actions-shield]][actions-url]&#xA;&#xA;[actions-shield]: https://img.shields.io/github/actions/workflow/status/chu23465/VT-PR/build.svg?style=for-the-badge&#xA;[actions-url]: https://github.com/chu23465/VT-PR/actions&#xA;&#xA;--&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/chu23465/VT-PR/refs/heads/dev/assets/screenshot.png&#34;&gt; &#xA;&lt;p&gt;A tool to download and remove DRM from streaming services. Modified to remove Playready DRM in addition to Widevine DRM.&lt;/p&gt; &#xA;&lt;p&gt;The name &lt;code&gt;VineTrimmer&lt;/code&gt; comes from &lt;code&gt;Vine&lt;/code&gt; as in &lt;code&gt;WideVine&lt;/code&gt; and &lt;code&gt;Trimmer&lt;/code&gt; as in remove.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] Read the README thoroughly atleast twice. I cannot stress how important this is. There is a reason why this README is so verbose.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] DO NOT USE WITH AMAZON. Amazon is currently banning accounts.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://github.com/chu23465/VT-PR/issues/87&#34;&gt;#87&lt;/a&gt;. I recommend temporarily using &lt;a href=&#34;https://github.com/DevLARLEY/PlayreadyProxy2&#34;&gt;this&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;This project is under active development. Expect bugs and errors.&lt;/h2&gt; &#xA;&lt;h2&gt;Disclaimer!!!&lt;/h2&gt; &#xA;&lt;p&gt;This project is ONLY for educational/archival/personal purposes. I do not condone piracy in any form.&lt;/p&gt; &#xA;&lt;p&gt;By using this project you agree that: &lt;code&gt;The developer shall not be held responsible for any account suspensions, terminations, penalties or legal action taken/imposed by third-party platforms. The User acknowledges and agrees that they are solely responsible for complying with all terms, policies, copyright and guidelines of any such platforms.&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;I AM NOT taking credit for the entirety of this project. This project is based on a version of an old fork of &lt;a href=&#34;https://github.com/devine-dl/devine&#34;&gt;devine&lt;/a&gt; that was found floating around online. I AM taking credit for about 20% of the additional stuff that I personally worked on.&lt;/p&gt; &#xA;&lt;p&gt;Support for Sport replays (VOD) or live streams is not planned. It&#39;s a whole thing with OTT panels and restreaming and whatnot. It&#39;s a can of worms that I don&#39;t plan on opening.&lt;/p&gt; &#xA;&lt;h2&gt;Supporters&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/m41c0n&#34;&gt;@m41c0n&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Microsoft Visual C++ Redistributable - &lt;a href=&#34;https://aka.ms/vs/17/release/vc_redist.x64.exe&#34;&gt;link&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure Python is installed in your system (cannot be from the the Microsoft Store). Refer to &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;link&lt;/a&gt;. I recommend python 3.10.11 (or higher). Python 3.13 does not work.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure git is installed in your system by running &lt;code&gt;git --version&lt;/code&gt;. If not refer to &lt;a href=&#34;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&#34;&gt;link&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use below command to download. (Recommended instead of downloading zip)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/chu23465/VT-PR&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Navigate and find &lt;code&gt;install.bat&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;install.bat&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Activate venv using &lt;code&gt;venv.cmd&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For cookies, always extract from homepage of (streaming) service using &lt;a href=&#34;https://chrome.google.com/webstore/detail/get-cookiestxt-locally/cclelndahbckbenkjhflpdbgdldlbecc&#34;&gt;Get cookies.txt LOCALLY&lt;/a&gt;. The old &lt;code&gt;open-cookies.txt&lt;/code&gt;extension is not ManifestV3 compliant and the source code has been removed from github and the extension javascript obfuscated. Remove it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Save cookies to desired folder. Folder name should be &lt;code&gt;Cookies/{full_service_name}&lt;/code&gt;. As in &lt;code&gt;Cookies/ParamountPlus&lt;/code&gt; instead of &lt;code&gt;Cookies/PMTP&lt;/code&gt;. Pay attention to the path if you are on Linux. Path is case sensitive.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run desired command using poetry.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;Make sure you have python3 installed. If you have &lt;code&gt;apt&lt;/code&gt; avaialable -&amp;gt; &lt;code&gt;sudo apt install python3&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget https://github.com/chu23465/VT-PR/raw/refs/heads/dev/install.sh &amp;amp;&amp;amp; chmod +x install.sh &amp;amp;&amp;amp; bash install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;I have tested it on only Ubuntu so far. If you have any problems, please open an issue.&lt;/p&gt; &#xA;&lt;h2&gt;Updating&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Backup your &lt;code&gt;vinetrimmer/Cookies/&lt;/code&gt;, &lt;code&gt;vinetrimmer/Cache/&lt;/code&gt;, &lt;code&gt;Downloads&lt;/code&gt; directories just in case.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open a command prompt and navigate into &lt;code&gt;VT-PR&lt;/code&gt; directory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use below command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git pull origin&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Make sure &lt;code&gt;git pull&lt;/code&gt; is successful. If not do &lt;code&gt;git stash&lt;/code&gt; and try again.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Config&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;vinetrimmer.yml&lt;/code&gt; located within the &lt;code&gt;/vinetrimmer/&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;decryptor:&lt;/code&gt; either &lt;code&gt;mp4decrypt&lt;/code&gt; or &lt;code&gt;packager&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;(shaka-packager fails to decrypt files downloaded from ISM/Microsoft Smooth Streaming manifests)&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;tag:&lt;/code&gt; tag for your release group&lt;/p&gt; &#xA;&lt;p&gt;CDM can be configured per service or per profile.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cdm:&#xA;    default: {text}&#xA;    Amazon: {text}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Credentials can be added depending on which service it is. You need to use full service name ie. &lt;code&gt;iTunes&lt;/code&gt; instead of &lt;code&gt;iT&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;credentials:&#xA;  iTunes: &#39;username:password&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All other option can be left to defaults, unless you know what you are doing.&lt;/p&gt; &#xA;&lt;h2&gt;General Options&lt;/h2&gt; &#xA;&lt;p&gt;Usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;poetry run vt dl [OPTIONS] COMMAND [ARGS] [TITLE]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Options:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command line argument&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-d, --debug&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable debug logging&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-p, --profile&lt;/td&gt; &#xA;   &lt;td&gt;Profile to use when multiple profiles are defined for a service.&lt;/td&gt; &#xA;   &lt;td&gt;&#34;default&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-q, --quality&lt;/td&gt; &#xA;   &lt;td&gt;Download Resolution ie Height of Video Track wanted&lt;/td&gt; &#xA;   &lt;td&gt;1080&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-cr, --closest-resolution&lt;/td&gt; &#xA;   &lt;td&gt;If resolution specified is not found, defaults to closest resolution available&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-v, --vcodec&lt;/td&gt; &#xA;   &lt;td&gt;Video Codec&lt;/td&gt; &#xA;   &lt;td&gt;H264&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-a, --acodec&lt;/td&gt; &#xA;   &lt;td&gt;Audio Codec&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-vb, --vbitrate&lt;/td&gt; &#xA;   &lt;td&gt;Video Bitrate, &lt;code&gt;Min&lt;/code&gt; or a number based on output of --list&lt;/td&gt; &#xA;   &lt;td&gt;Max&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-ab, --abitrate&lt;/td&gt; &#xA;   &lt;td&gt;Audio Bitrate&lt;/td&gt; &#xA;   &lt;td&gt;Max&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-ac, --audio-channels&lt;/td&gt; &#xA;   &lt;td&gt;Select Audio by Channels Configuration, e.g &lt;code&gt;2.0&lt;/code&gt;, &lt;code&gt;5.1&lt;/code&gt;, &lt;code&gt;2.0,5.1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-mac, --max-audio-compatability&lt;/td&gt; &#xA;   &lt;td&gt;Select multiple audios for maximum compatibility with all devices&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-aa, --atmos&lt;/td&gt; &#xA;   &lt;td&gt;Prefer Atmos Audio&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-r, --range&lt;/td&gt; &#xA;   &lt;td&gt;Video Color Range &lt;code&gt;HDR&lt;/code&gt;, &lt;code&gt;HDR10&lt;/code&gt;, &lt;code&gt;DV&lt;/code&gt;, &lt;code&gt;SDR&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SDR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-w, --wanted&lt;/td&gt; &#xA;   &lt;td&gt;Wanted episodes, e.g. &lt;code&gt;S01-S05,S07&lt;/code&gt;, &lt;code&gt;S01E01-S02E03&lt;/code&gt;, &lt;code&gt;S02-S02E03&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Default to all&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-le, --latest-episode&lt;/td&gt; &#xA;   &lt;td&gt;Download only the latest episode on episodes list&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-al, --alang&lt;/td&gt; &#xA;   &lt;td&gt;Language wanted for audio.&lt;/td&gt; &#xA;   &lt;td&gt;Defaults to original language&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-sl, --slang&lt;/td&gt; &#xA;   &lt;td&gt;Language wanted for subtitles.&lt;/td&gt; &#xA;   &lt;td&gt;Defaults to original language&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--proxy&lt;/td&gt; &#xA;   &lt;td&gt;Proxy URI to use. If a 2-letter country is provided, it will try get a proxy from the config.&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-A, --audio-only&lt;/td&gt; &#xA;   &lt;td&gt;Only download audio tracks.&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-S, --subs-only&lt;/td&gt; &#xA;   &lt;td&gt;Only download subtitle tracks.&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-C, --chapters-only&lt;/td&gt; &#xA;   &lt;td&gt;Only download chapters.&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-ns, --no-subs&lt;/td&gt; &#xA;   &lt;td&gt;Do not download subtitle tracks.&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-na, --no-audio&lt;/td&gt; &#xA;   &lt;td&gt;Do not download audio tracks.&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-nv, --no-video&lt;/td&gt; &#xA;   &lt;td&gt;Do not download video tracks.&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-nc, --no-chapters&lt;/td&gt; &#xA;   &lt;td&gt;Do not download chapters tracks.&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-ad, --audio-description&lt;/td&gt; &#xA;   &lt;td&gt;Download audio description tracks.&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--list&lt;/td&gt; &#xA;   &lt;td&gt;Skip downloading and list available tracks and what tracks would have been downloaded.&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--selected&lt;/td&gt; &#xA;   &lt;td&gt;List selected tracks and what tracks are downloaded.&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--cdm&lt;/td&gt; &#xA;   &lt;td&gt;Override the CDM that will be used for decryption.&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--keys&lt;/td&gt; &#xA;   &lt;td&gt;Skip downloading, retrieve the decryption keys (via CDM or Key Vaults) and print them.&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--cache&lt;/td&gt; &#xA;   &lt;td&gt;Disable the use of the CDM and only retrieve decryption keys from Key Vaults. If a needed key is unable to be retrieved from any Key Vaults, the title is skipped.&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--no-cache&lt;/td&gt; &#xA;   &lt;td&gt;Disable the use of Key Vaults and only retrieve decryption keys from the CDM.&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--no-proxy&lt;/td&gt; &#xA;   &lt;td&gt;Force disable all proxy use.&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-nm, --no-mux&lt;/td&gt; &#xA;   &lt;td&gt;Do not mux the downloaded and decrypted tracks.&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--mux&lt;/td&gt; &#xA;   &lt;td&gt;Force muxing when using --audio-only/--subs-only/--chapters-only.&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-ss, --strip-sdh&lt;/td&gt; &#xA;   &lt;td&gt;Stip SDH subtitles and convert them to CC. Plus fix common errors.&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-mf, --match-forced&lt;/td&gt; &#xA;   &lt;td&gt;Only select forced subtitles matching with specified audio language&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-?, -h, --help&lt;/td&gt; &#xA;   &lt;td&gt;Show this message and exit.&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Currently supported platforms:&lt;/p&gt; &#xA;&lt;p&gt;COMMANDS :-&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Alaias&lt;/th&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Service Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AMZN&lt;/td&gt; &#xA;   &lt;td&gt;Amazon&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://amazon.com&#34;&gt;https://amazon.com&lt;/a&gt;, &lt;a href=&#34;https://primevideo.com&#34;&gt;https://primevideo.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ATVP&lt;/td&gt; &#xA;   &lt;td&gt;AppleTVPlus&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://tv.apple.com&#34;&gt;https://tv.apple.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DSNP&lt;/td&gt; &#xA;   &lt;td&gt;DisneyPlus&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://disneyplus.com/&#34;&gt;https://disneyplus.com/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F1TV&lt;/td&gt; &#xA;   &lt;td&gt;F1tv&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://f1tv.formula1.com/&#34;&gt;https://f1tv.formula1.com/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GLB&lt;/td&gt; &#xA;   &lt;td&gt;Globoplay&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://globoplay.globo.com/&#34;&gt;https://globoplay.globo.com/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HS&lt;/td&gt; &#xA;   &lt;td&gt;Hotstar&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.hotstar.com/&#34;&gt;https://www.hotstar.com/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HULU&lt;/td&gt; &#xA;   &lt;td&gt;Hulu&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hulu.com&#34;&gt;https://hulu.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iT&lt;/td&gt; &#xA;   &lt;td&gt;iTunes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://itunes.apple.com&#34;&gt;https://itunes.apple.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MA&lt;/td&gt; &#xA;   &lt;td&gt;MoviesAnywhere&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://moviesanywhere.com&#34;&gt;https://moviesanywhere.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MAX&lt;/td&gt; &#xA;   &lt;td&gt;Max&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://max.com&#34;&gt;https://max.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PCOK&lt;/td&gt; &#xA;   &lt;td&gt;Peacock&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://peacocktv.com/&#34;&gt;https://peacocktv.com/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PMTP&lt;/td&gt; &#xA;   &lt;td&gt;ParamountPlus&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://paramountplus.com&#34;&gt;https://paramountplus.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Untested or not fully implemeted services:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Alaias&lt;/th&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Service Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iP&lt;/td&gt; &#xA;   &lt;td&gt;BBCiPlayer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bbc.co.uk/iplayer&#34;&gt;https://bbc.co.uk/iplayer&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CR&lt;/td&gt; &#xA;   &lt;td&gt;Crunchyroll&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://crunchyroll.com&#34;&gt;https://crunchyroll.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PLAY&lt;/td&gt; &#xA;   &lt;td&gt;GooglePlay&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://play.google.com&#34;&gt;https://play.google.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MUBI&lt;/td&gt; &#xA;   &lt;td&gt;Mubi&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mubi.com/&#34;&gt;https://mubi.com/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NF&lt;/td&gt; &#xA;   &lt;td&gt;Netflix&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://netflix.com&#34;&gt;https://netflix.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RKTN&lt;/td&gt; &#xA;   &lt;td&gt;RakutenTV&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rakuten.tv&#34;&gt;https://rakuten.tv&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SL&lt;/td&gt; &#xA;   &lt;td&gt;SonyLiv&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://sonyliv.com&#34;&gt;https://sonyliv.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SNXT&lt;/td&gt; &#xA;   &lt;td&gt;Sunnxt&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.sunnxt.com&#34;&gt;https://www.sunnxt.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VIU&lt;/td&gt; &#xA;   &lt;td&gt;Viu&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.viu.com/&#34;&gt;https://www.viu.com/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Amazon Specific Options&lt;/h3&gt; &#xA;&lt;p&gt;Usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;poetry run vt dl [OPTIONS] AMZN [ARGS] [TITLE]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Below flags to be passed after the &lt;code&gt;AMZN&lt;/code&gt; or &lt;code&gt;Amazon&lt;/code&gt; keyword in command.&lt;/p&gt; &#xA;&lt;p&gt;ARGS:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command Line Switch&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-b, --bitrate&lt;/td&gt; &#xA;   &lt;td&gt;Video Bitrate Mode to download in. CVBR=Constrained Variable Bitrate, CBR=Constant Bitrate. (CVBR or CBR or CVBR+CBR)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-c, --cdn&lt;/td&gt; &#xA;   &lt;td&gt;CDN to download from, defaults to the CDN with the highest weight set by Amazon.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-vq, --vquality&lt;/td&gt; &#xA;   &lt;td&gt;Manifest quality to request. (SD or HD or UHD)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-s, --single&lt;/td&gt; &#xA;   &lt;td&gt;Force single episode/season instead of getting series ASIN.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-am, --amanifest&lt;/td&gt; &#xA;   &lt;td&gt;Manifest to use for audio. Defaults to H265 if the video manifest is missing 640k audio. (CVBR or CBR or H265)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-aq, --aquality&lt;/td&gt; &#xA;   &lt;td&gt;Manifest quality to request for audio. Defaults to the same as --quality. (SD or HD or UHD)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-ism, --ism&lt;/td&gt; &#xA;   &lt;td&gt;Set manifest override to SmoothStreaming. Defaults to DASH w/o this flag.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-?, -h, --help&lt;/td&gt; &#xA;   &lt;td&gt;Show this message and exit.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Remember that not all titles have 4K/Atmos/HDR/DV.&lt;/p&gt; &#xA;&lt;p&gt;To get Atmos/UHD/4k with Amazon, navigate to -&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://www.primevideo.com/mytv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Login and get to the code pair page. Extract cookies from that page.&lt;/p&gt; &#xA;&lt;p&gt;Save it to the path &lt;code&gt;vinetrimmer/Cookies/Amazon/default.txt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When caching cookies, use a profile without PIN. Otherwise it may cause errors.&lt;/p&gt; &#xA;&lt;p&gt;If you are facing 403 or 400 errors even after saving fresh cookies and clearing &lt;code&gt;Cache&lt;/code&gt; folder, try logging out of your Amazon account in the browser and logging back in. Then save cookies.&lt;/p&gt; &#xA;&lt;p&gt;Some titles say &lt;code&gt;UHD/2160p&lt;/code&gt; is available and if VT is saying &lt;code&gt;no 2160p track available&lt;/code&gt;, then &lt;code&gt;UHD/2160p&lt;/code&gt; is only available via renting. As in some titles advertise UHD but UHD will not be available to PrimeVideo customers. You will have to rent the title using the Rent button on the title page in UHD quality.&lt;/p&gt; &#xA;&lt;p&gt;If you are getting an &lt;code&gt;AssertionError&lt;/code&gt; with Amazon, then try reprovisioning the device. I have included a batch script in the &lt;code&gt;vinetrimmer/devices/&lt;/code&gt; directory to do this. Simply execute the script and try again.&lt;/p&gt; &#xA;&lt;p&gt;If you are getting &lt;code&gt;TooManyDevices&lt;/code&gt; error or Amazon is giving you trouble with some weird error, then logout in the browser, log back in, extract and use fresh cookies. Try also deleting &lt;code&gt;vinetrimmer/Cache/AMZN/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to try a different CDM, you will need the corresponding DeviceTypeID (DTID) put into &lt;code&gt;amazon.yml&lt;/code&gt;. As far as I know, you would need to sniff the traffic from the device (with the CDM) to get the DTID.&lt;/p&gt; &#xA;&lt;p&gt;If you are getting &lt;code&gt;PRS.NoRights&lt;/code&gt; error, then there are 3 possible explantations for it. One, CDM simply needs to be reprovisioned. Two, you are using the incorrect DTID for the given CDM. Three, the Amazon has revoked or downgraded the CDM to only HD/SD quality.&lt;/p&gt; &#xA;&lt;p&gt;If your region has ad-free subscription tier, you will need the ad-free subscription tier for 4K/HDR/DV.&lt;/p&gt; &#xA;&lt;h3&gt;Peacock&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Has removed Playready support entirely for UHD, now needs Widevine L1.&lt;/li&gt; &#xA; &lt;li&gt;Authorization - cookies saved to &lt;code&gt;vinetrimmer/Cookies/Peacock/default.txt&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Hotstar&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To use, login to Hotstar and navigate to &lt;a href=&#34;https://www.hotstar.com/%7Bregion%7D/home&#34;&gt;https://www.hotstar.com/{region}/home&lt;/a&gt;. Extract cookies from that page and save to path &lt;code&gt;vinetrimmer\Cookies\Hotstar\default.txt&lt;/code&gt; (Case sensitive).&lt;/li&gt; &#xA; &lt;li&gt;Otherwise add credentials to &lt;code&gt;vinetrimmer.yml&lt;/code&gt;. An example is given.&lt;/li&gt; &#xA; &lt;li&gt;A free account has access to lots of content.&lt;/li&gt; &#xA; &lt;li&gt;Hotstar requires an Indian (+91) phone number to signup to Indian region, even for free account.&lt;/li&gt; &#xA; &lt;li&gt;Hates VPN&#39;s, try using a residential proxy if you have one.&lt;/li&gt; &#xA; &lt;li&gt;All content is licensed via Widevine L3 or has no DRM.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;DisneyPlus&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Needs only credentials added to &lt;code&gt;vinetrimmer.yml&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Requires you to use &lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;--movie&lt;/code&gt; flag if you are downloading a movie. Append flag to end of your command.&lt;/li&gt; &#xA; &lt;li&gt;From my testing, when using with VPN, it causes lots of issues, mainly needing to clear &lt;code&gt;Cache&lt;/code&gt; folder and login repeatedly. Use residential proxies if available. Don&#39;t hammer service. Try waiting a minute or two before logging in again.&lt;/li&gt; &#xA; &lt;li&gt;If you are getting &lt;code&gt;No 2160p track found&lt;/code&gt; error for a title you know has 4k, then try passing &lt;code&gt;-r DV&lt;/code&gt; or &lt;code&gt;-r HDR&lt;/code&gt;. Make sure your account can access highest qualities.&lt;/li&gt; &#xA; &lt;li&gt;Should be more stable now when using proxy. But do be careful. We don&#39;t use proxy for downloading segments, which means your IP could get temporarily banned from DSNP servers (i.e persistent 403 errors). If you download the same title multiple times or many titles/episodes at once/too quickly your IP address could get banned. Happened to me while testing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Hulu&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Authorization: cookies saved to &lt;code&gt;vinetrimmer/Cookies/Hulu/default.txt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windscribe VPN sometimes fails. Simply try again.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;AppleTVPlus&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For &lt;code&gt;--keys&lt;/code&gt; to work with ATVP you need to pass the &lt;code&gt;--no-subs&lt;/code&gt; flag.&lt;/li&gt; &#xA; &lt;li&gt;You only need proxy/VPN to login once, extract cookies and do a first run.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;iTunes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iTunes via rential channel on AppleTVPlus.&lt;/li&gt; &#xA; &lt;li&gt;Login to iTunes in a browser. Try playing a movie. It&#39;ll redirect you to &lt;code&gt;tv.apple.com&lt;/code&gt;. Cache cookies from that page to &lt;code&gt;vinetrimmer/Cookies/iTunes/default.txt&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Requires you to use &lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;--movie&lt;/code&gt; flag if you are downloading a movie. Append flag to end of your command.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;MoviesAnywhere&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Cookies saved from home page of website to &lt;code&gt;vinetrimmer\Cookies\MoviesAnywhere\default.txt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;This service currently gets 720p keys. For 1080p and 2160p you will need a whitelisted L1 or whitelisted SL3000. I have tried many devices and could not find one that got HD and UHD keys. If you find one please let me know. I cannot do anything more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Example Commands&lt;/h3&gt; &#xA;&lt;p&gt;Amazon Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry run vt dl -al en -sl all --selected -q 2160 -r HDR -w S01E18-S01E25 AMZN -b CBR --ism 0IQZZIJ6W6TT2CXPT6ZOZYX396&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Above command:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gets english audio,&lt;/li&gt; &#xA; &lt;li&gt;gets all available subtitles,&lt;/li&gt; &#xA; &lt;li&gt;selects the HDR + 4K track,&lt;/li&gt; &#xA; &lt;li&gt;gets episodes from S01E18 to S01E25 from Amazon&lt;/li&gt; &#xA; &lt;li&gt;with CBR bitrate,&lt;/li&gt; &#xA; &lt;li&gt;tries to force ISM&lt;/li&gt; &#xA; &lt;li&gt;and the title-ID is 0IQZZIJ6W6TT2CXPT6ZOZYX396&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;AppleTV Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry run vt dl -al en,it -sl en,es -q 720 --proxy http://192.168.0.99:9766 -w S01E01 ATVP umc.cmc.1nfdfd5zlk05fo1bwwetzldy3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Above command:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gets english, italian audio&lt;/li&gt; &#xA; &lt;li&gt;gets english, spanish subtitles,&lt;/li&gt; &#xA; &lt;li&gt;lists all possible qualities,&lt;/li&gt; &#xA; &lt;li&gt;selects 720p video track,&lt;/li&gt; &#xA; &lt;li&gt;uses the proxy for licensing,&lt;/li&gt; &#xA; &lt;li&gt;gets the first episode of first season (i.e S01E01)&lt;/li&gt; &#xA; &lt;li&gt;of the title-ID umc.cmc.1nfdfd5zlk05fo1bwwetzldy3&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Max Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry run vt dl -al en -sl en --keys --proxy http://192.168.0.99:9766 MAX https://play.max.com/show/5756c2bf-36f8-4890-b1f9-ef168f1d8e9c&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Above command:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gets english subtitles + audio,&lt;/li&gt; &#xA; &lt;li&gt;skips download and only gets the content keys,&lt;/li&gt; &#xA; &lt;li&gt;from MAX&lt;/li&gt; &#xA; &lt;li&gt;uses specified proxy&lt;/li&gt; &#xA; &lt;li&gt;defaulting to HD for video&lt;/li&gt; &#xA; &lt;li&gt;title-ID is 5756c2bf-36f8-4890-b1f9-ef168f1d8e9c&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Hotstar Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry run vt dl -al en -sl en -q 2160 -v H265 HS https://www.hotstar.com/in/movies/hridayam/1260083403&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Above command:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gets english subtitles + audio,&lt;/li&gt; &#xA; &lt;li&gt;sets video codec to H265 codec,&lt;/li&gt; &#xA; &lt;li&gt;sets video quality (ie. resolution) to 2160p,&lt;/li&gt; &#xA; &lt;li&gt;Gets highest quality video/audio available.&lt;/li&gt; &#xA; &lt;li&gt;title-ID is 1271342309&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Max Audio Compatability (MAC)&lt;/h2&gt; &#xA;&lt;p&gt;I have added a special flag called &lt;code&gt;--max-audio-compatability&lt;/code&gt; or &lt;code&gt;-mac&lt;/code&gt; for maximum compatibility with all devices. If passed with &lt;code&gt;--acodec aac,ec3 -ac 2.0,5.1&lt;/code&gt; will select 3 audios like below&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;2025-04-24 16:54:23 [I] Tracks : ‚îú‚îÄ AUD | [E-AC3] | [ec-3] | 5.1 | 640 kb/s | en-US | [Original]&#xA;2025-04-24 16:54:23 [I] Tracks : ‚îú‚îÄ AUD | [E-AC3] | [ec-3] | 2.0 | 224 kb/s | en-US | [Original]&#xA;2025-04-24 16:54:23 [I] Tracks : ‚îú‚îÄ AUD | [AAC] | [mp4a] | 2.0 | 128 kb/s | en-US | [Original]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If &lt;code&gt;-mac&lt;/code&gt; not passed but only &lt;code&gt;--acodec aac,ec3 -ac 2.0,5.1&lt;/code&gt; passed, will select 2 audios.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;2025-04-24 17:10:04 [I] Tracks : ‚îú‚îÄ AUD | [E-AC3] | [ec-3] | 5.1 | 640 kb/s | en-US | [Original]&#xA;2025-04-24 17:10:04 [I] Tracks : ‚îú‚îÄ AUD | [AAC] | [mp4a] | 2.0 | 128 kb/s | en-US | [Original]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Proxy&lt;/h2&gt; &#xA;&lt;p&gt;I recommend &lt;a href=&#34;https://windscribe.com/&#34;&gt;Windscribe&lt;/a&gt;. You can sign up, getting 10 GB of traffic credit every month for free. We use the VPN for everything except downloading video/audio. Tested so far on Amazon, AppleTVPlus, Max, and DisneyPlus and Hulu.&lt;/p&gt; &#xA;&lt;h3&gt;Steps:&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download Windscribe app and install it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to &lt;code&gt;Options&lt;/code&gt; -&amp;gt; &lt;code&gt;Connection&lt;/code&gt; -&amp;gt; &lt;code&gt;Split Tunneling&lt;/code&gt;. Enable it.&lt;/p&gt; &lt;p&gt;Set &lt;code&gt;Mode&lt;/code&gt; as &lt;code&gt;Inclusive&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to &lt;code&gt;Options&lt;/code&gt; -&amp;gt; &lt;code&gt;Connection&lt;/code&gt; -&amp;gt; &lt;code&gt;Proxy Gateway&lt;/code&gt;. Enable it. Select &lt;code&gt;Proxy Type&lt;/code&gt; as &lt;code&gt;HTTP&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Copy the &lt;code&gt;IP&lt;/code&gt; field (will look something like &lt;code&gt;192.168.0.141:9766&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;Pass above copied to Vinetrimmer with the proxy flag. If you are using other VPNs, extract the proxy (use the browser extension to do this). It will look something like &lt;code&gt;http(s)://username:pass@host/IP:PORT&lt;/code&gt;. Ex -&amp;gt; &lt;code&gt;http://user:pass@domain.com:443&lt;/code&gt;. Pass it like below:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry run vt dl -q 1080 --proxy http://user:pass@domain.com:443 AMZN [TITLE]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Skip this step if you are not integrating a new service yourself. In the service, within get_tracks() function we do this below. Set needs_proxy to True if your service needs proxy to get manifest (Ex - Netflix, Hotstar).&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for track in tracks:&#xA;    track.needs_proxy = False&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This flag signals that this track does not need a proxy and a proxy will not be passed to downloader even if proxy given in CLI options.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Other&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Errors arise when running VT in non python3 environments. Make sure to use proper python3.&lt;/li&gt; &#xA; &lt;li&gt;To use programs in &lt;code&gt;scripts&lt;/code&gt; folder, first activate venv then, then - &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry run python scripts/ParseKeybox.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;There is another way of running this instead of using &lt;code&gt;poetry&lt;/code&gt;. In root folder of VT-PR there is a &lt;code&gt;vt.py&lt;/code&gt; (which is essentially the same as &lt;code&gt;vinetrimmer/vinetrimmer.py&lt;/code&gt;). Activate venv, then: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python vt.py dl ......(rest of the command as before).......&#xA;&lt;/code&gt;&lt;/pre&gt; This is useful for debugging/stepping through in IDE&#39;s without having to deal with poetry.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Nuitka Compile&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Activate venv&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;python -m pip install nuitka&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Verify using command &lt;code&gt;nuitka --version&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Then:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nuitka --standalone --output-dir=dist --windows-console-mode=force vt.py --include-data-dir=./vinetrimmer/=vinetrimmer/ --include-data-dir=./binaries/=binaries&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--standalone&lt;/code&gt; will give a folder of compiled pythonic objects. Zip it to distribute. This is recommended.&lt;/li&gt; &#xA; &lt;li&gt;If you don&#39;t want to carry around/deal with a zip, instead use &lt;code&gt;--onefile&lt;/code&gt;. This has the drawback of setting the default folders to the temp folder in whatever OS you are using. This could be fixed with some extra code but that is currently not implemented.&lt;/li&gt; &#xA; &lt;li&gt;Refer to &lt;a href=&#34;https://nuitka.net/user-documentation/user-manual.html&#34;&gt;link&lt;/a&gt; if anything errors out.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Additional Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Progress Bars for decryption (&lt;a href=&#34;https://github.com/chu23465/bentoOldFork&#34;&gt;mp4decrypt&lt;/a&gt;, Shaka)&lt;/li&gt; &#xA; &lt;li&gt;ISM manifest support (Microsoft Smooth Streaming) (Experimental)&lt;/li&gt; &#xA; &lt;li&gt;N_m3u8DL-RE downloader support (Experimental)&lt;/li&gt; &#xA; &lt;li&gt;Resume failed download has been implemented. If a track has been successfully downloaded previously and exists in &lt;code&gt;Temp&lt;/code&gt; directory (encrypted or decrypted), VT will not download said track again.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Broken / To-Do (Descending order of priority)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add a version.py&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; First stable release&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Shaka with progress bar repository&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add download speed limit to avoid IP bans.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Single script that installs, and if already installed checks for and applies updates&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Replace poetry with uv&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Ruff liniting and formatting&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Atmos audio with ISM manifest (Amazon)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add &lt;a href=&#34;https://github.com/Eyevinn/mp4ff&#34;&gt;m4ffdecrypt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Hybrid creation with &lt;a href=&#34;https://github.com/quietvoid/dovi_tool/&#34;&gt;dovi_tool&lt;/a&gt;. This feature is in Beta. Only tested so far on DisneyPlus. Needs more work. Ex: filenaming needs correction, temp directory is a mess after hybrid creation, use another tool insteal of &lt;code&gt;dovi_tool&lt;/code&gt; to get Profile 8.1 DV-HDR10+ instead of DV Profile 5 HDR10 compatible.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Downloader field in config, per service.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Make a script to download latest binaries for vt automatically at startup.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Detect if running as Nuikta compiled binary, then in vt.py set directories relative to binary path&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Find a way to estimate final file size for a track. Check if enough space is left on disc for double the amount of selected tracks - since mp4decrypt and Nm3u8 both make copies of the files&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Merge DB script&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Modify aria2c to include a progress bar ?&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Github Actions Python script that builds and publishes release for every commit to not readme.md&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; MAX - Fix HDR10/DV --list&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Fix original language (Was removed as workaround for a bug)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Make a windscribe.py for proxies modelled after nordvpn.py. Refer to the chrome extension for the code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Move to requests, curl or otherwise to download subtitles&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Replace track.dv, track.hdr10 with track.PQ. Value will be an enum. This will require a major-ish rewrite.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Netflix service is currently broken (will probably be fixed Soon‚Ñ¢)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Integrate &lt;a href=&#34;https://github.com/vevv/subby&#34;&gt;subby&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Licensing before download (?)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Guide for writing a service + debugging&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Implement a scan/hammer/cache keys for each service - pass string of zeros as title id. Then copy and rework dl.py to iterate over returned list of titles from scan function&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Amazon Specific&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Refresh Token for Amazon service&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Pythonic implementation of init.mp4 builder for ism manifest for avc, hvcc, dv, ac3, eac3, eac3-joc codecs&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Make a pure python requests based downloader for ISM/MSS manifest. Write init.mp4 then download each segment to memory, decrypt in memory and write it to a binary merged file. Download segments in batches. Batch size based on thread count passed to program. Download has to be sequentially written.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;code&gt;--bitrate CVBR+CBR&lt;/code&gt; is currently broken&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Get highest quality CBR and CVBR MPD+ISM by default to AMZN&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Specify devices in config for MPD or ISM then load one based on command&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; For videos, download init.mp4 using N_m3u8, mediainfo it to get FPS, HDR info&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Manifest url caching system for every key/Track object.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If anyone has any idea how to fix above issues, feel free to open a pull request.&lt;/p&gt; &#xA;&lt;h2&gt;Donating&lt;/h2&gt; &#xA;&lt;p&gt;I am an independent developer right now. I work on this project in my free time. If you could support me that would be immensely helpful. All supporters will get a special mention in the README. Thank you in advance.&lt;/p&gt; &#xA;&lt;p&gt;My BuyMeACoffee account was suspended so contact me on discord to donate.&lt;/p&gt; &#xA;&lt;p&gt;My Discord is &lt;code&gt;@crapola&lt;/code&gt; or &lt;code&gt;@chupola&lt;/code&gt;. You will need to join a server I&#39;m in to message me. Join one of the servers mentioned below.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rlaphoenix&#34;&gt;@rlaphoenix&lt;/a&gt; for &lt;a href=&#34;https://github.com/devine-dl/pywidevine&#34;&gt;pywidevine&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rlaphoenix&#34;&gt;@rlaphoenix&lt;/a&gt; again as he was the original developer behind the &lt;code&gt;VineTrimmer&lt;/code&gt; base &lt;code&gt;Widevine&lt;/code&gt; version (later renamed to &lt;code&gt;devine&lt;/code&gt;) .&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/DevLARLEY&#34;&gt;@DevLARLEY&lt;/a&gt; for &lt;a href=&#34;https://git.gay/ready-dl/pyplayready&#34;&gt;pyplayready&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/FieryFly&#34;&gt;@FieryFly&lt;/a&gt; for an additional MAX fix.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vevv&#34;&gt;@vevv&lt;/a&gt; for &lt;a href=&#34;https://github.com/vevv/subby&#34;&gt;subby&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/globocom/&#34;&gt;@globocom&lt;/a&gt; for &lt;a href=&#34;https://github.com/globocom/m3u8&#34;&gt;m3u8&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;@Wiesiek&lt;/code&gt; on Discord for a few ideas&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/xHjetwZP&#34;&gt;DRM-Lab-Project&lt;/a&gt; for numerous bug fixes and support.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/aNNKxurrU6&#34;&gt;Playready-Discord&lt;/a&gt; for numerous bug fixes and support.&lt;/p&gt; &#xA;&lt;p&gt;Various members of the above mentioned Discord servers for testing, bug reporting, fixes etc. Thank You :)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.cdrm-project.com/&#34;&gt;CDRM-Project&lt;/a&gt; and &lt;code&gt;@TPD94&lt;/code&gt;, &lt;code&gt;@radizu&lt;/code&gt; for getting me started on this journey, being a source of inspiration and for keeping a community well and alive.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/m0ck69&#34;&gt;@m0ck69&lt;/a&gt; for sharing a DisneyPlus account for testing purposes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/methflix&#34;&gt;@methflix&lt;/a&gt; for sharing a Hulu account for testing purposes.&lt;/p&gt; &#xA;&lt;p&gt;The services included here were not written by me. They were either found in the mentioned Discord servers or shared by an individual. If anyone feels like they deserve a credit in the README, open an issue and I&#39;ll add you.&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;a href=&#34;https://www.star-history.com/#chu23465/VT-PR&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=chu23465/VT-PR&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=chu23465/VT-PR&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=chu23465/VT-PR&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt;</summary>
  </entry>
</feed>