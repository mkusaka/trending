<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-10T01:40:14Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>python/mypy</title>
    <updated>2022-09-10T01:40:14Z</updated>
    <id>tag:github.com,2022-09-10:/python/mypy</id>
    <link href="https://github.com/python/mypy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Optional static typing for Python&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/python/mypy/master/docs/source/mypy_light.svg?sanitize=true&#34; alt=&#34;mypy logo&#34; width=&#34;300px&#34;&gt; &#xA;&lt;h1&gt;Mypy: Static Typing for Python&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mypy/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/mypy?color=blue&#34; alt=&#34;Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypistats.org/packages/mypy&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/mypy&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/python/mypy/actions&#34;&gt;&lt;img src=&#34;https://github.com/python/mypy/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mypy.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/mypy/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/python/typing?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/python/typing.svg?sanitize=true&#34; alt=&#34;Chat at https://gitter.im/python/typing&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://mypy-lang.org/&#34;&gt;&lt;img src=&#34;http://www.mypy-lang.org/static/mypy_badge.svg?sanitize=true&#34; alt=&#34;Checked with mypy&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34; alt=&#34;Code style: black&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pycqa.github.io/isort/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&amp;amp;labelColor=ef8336&#34; alt=&#34;Imports: isort&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Got a question?&lt;/h2&gt; &#xA;&lt;p&gt;We are always happy to answer questions! Here are some good places to ask them:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;for anything you&#39;re curious about, try &lt;a href=&#34;https://gitter.im/python/typing&#34;&gt;gitter chat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;for general questions about Python typing, try &lt;a href=&#34;https://github.com/python/typing/discussions&#34;&gt;typing discussions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;re just getting started, &lt;a href=&#34;https://mypy.readthedocs.io/en/stable/index.html&#34;&gt;the documentation&lt;/a&gt; and &lt;a href=&#34;https://mypy.readthedocs.io/en/stable/cheat_sheet_py3.html&#34;&gt;type hints cheat sheet&lt;/a&gt; can also help answer questions.&lt;/p&gt; &#xA;&lt;p&gt;If you think you&#39;ve found a bug:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;check our &lt;a href=&#34;https://mypy.readthedocs.io/en/stable/common_issues.html&#34;&gt;common issues page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;search our &lt;a href=&#34;https://github.com/python/mypy/issues&#34;&gt;issue tracker&lt;/a&gt; to see if it&#39;s already been reported&lt;/li&gt; &#xA; &lt;li&gt;consider asking on &lt;a href=&#34;https://gitter.im/python/typing&#34;&gt;gitter chat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To report a bug or request an enhancement:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;report at &lt;a href=&#34;https://github.com/python/mypy/issues&#34;&gt;our issue tracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;if the issue is with a specific library or function, consider reporting it at &lt;a href=&#34;https://github.com/python/typeshed/issues&#34;&gt;typeshed tracker&lt;/a&gt; or the issue tracker for that library&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To discuss a new type system feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;discuss at &lt;a href=&#34;https://mail.python.org/archives/list/typing-sig@python.org/&#34;&gt;typing-sig mailing list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;there is also some historical discussion &lt;a href=&#34;https://github.com/python/typing/issues&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is mypy?&lt;/h2&gt; &#xA;&lt;p&gt;Mypy is a static type checker for Python.&lt;/p&gt; &#xA;&lt;p&gt;Type checkers help ensure that you&#39;re using variables and functions in your code correctly. With mypy, add type hints (&lt;a href=&#34;https://www.python.org/dev/peps/pep-0484/&#34;&gt;PEP 484&lt;/a&gt;) to your Python programs, and mypy will warn you when you use those types incorrectly.&lt;/p&gt; &#xA;&lt;p&gt;Python is a dynamic language, so usually you&#39;ll only see errors in your code when you attempt to run it. Mypy is a &lt;em&gt;static&lt;/em&gt; checker, so it finds bugs in your programs without even running them!&lt;/p&gt; &#xA;&lt;p&gt;Mypy is designed with gradual typing in mind. This means you can add type hints to your code base slowly and that you can always fall back to dynamic typing when static typing is not convenient.&lt;/p&gt; &#xA;&lt;p&gt;Here is a small example to whet your appetite:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;number = input(&#34;What is your favourite number?&#34;)&#xA;print(&#34;It is&#34;, number + 1)  # error: Unsupported operand types for + (&#34;str&#34; and &#34;int&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://mypy.readthedocs.io/en/stable/index.html&#34;&gt;the documentation&lt;/a&gt; for more examples.&lt;/p&gt; &#xA;&lt;p&gt;In particular, see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mypy.readthedocs.io/en/stable/cheat_sheet_py3.html&#34;&gt;type hints cheat sheet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mypy.readthedocs.io/en/stable/getting_started.html&#34;&gt;getting started&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;Mypy can be installed using pip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 -m pip install -U mypy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to run the latest version of the code, you can install from the repo directly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 -m pip install -U git+https://github.com/python/mypy.git&#xA;# or if you don&#39;t have &#39;git&#39; installed&#xA;python3 -m pip install -U https://github.com/python/mypy/zipball/master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can type-check the &lt;a href=&#34;https://mypy.readthedocs.io/en/latest/getting_started.html#function-signatures-and-dynamic-vs-static-typing&#34;&gt;statically typed parts&lt;/a&gt; of a program like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mypy PROGRAM&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can always use the Python interpreter to run your statically typed programs, even if mypy reports type errors:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 PROGRAM&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also try mypy in an &lt;a href=&#34;https://mypy-play.net/&#34;&gt;online playground&lt;/a&gt; (developed by Yusuke Miyazaki).&lt;/p&gt; &#xA;&lt;h2&gt;Integrations&lt;/h2&gt; &#xA;&lt;p&gt;Mypy can be integrated into popular IDEs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vim: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Using &lt;a href=&#34;https://github.com/vim-syntastic/syntastic&#34;&gt;Syntastic&lt;/a&gt;: in &lt;code&gt;~/.vimrc&lt;/code&gt; add &lt;code&gt;let g:syntastic_python_checkers=[&#39;mypy&#39;]&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Using &lt;a href=&#34;https://github.com/dense-analysis/ale&#34;&gt;ALE&lt;/a&gt;: should be enabled by default when &lt;code&gt;mypy&lt;/code&gt; is installed, or can be explicitly enabled by adding &lt;code&gt;let b:ale_linters = [&#39;mypy&#39;]&lt;/code&gt; in &lt;code&gt;~/vim/ftplugin/python.vim&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Emacs: using &lt;a href=&#34;https://github.com/flycheck/&#34;&gt;Flycheck&lt;/a&gt; and &lt;a href=&#34;https://github.com/lbolla/emacs-flycheck-mypy&#34;&gt;Flycheck-mypy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sublime Text: &lt;a href=&#34;https://github.com/fredcallaway/SublimeLinter-contrib-mypy&#34;&gt;SublimeLinter-contrib-mypy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Atom: &lt;a href=&#34;https://atom.io/packages/linter-mypy&#34;&gt;linter-mypy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PyCharm: &lt;a href=&#34;https://github.com/dropbox/mypy-PyCharm-plugin&#34;&gt;mypy plugin&lt;/a&gt; (PyCharm integrates &lt;a href=&#34;https://www.jetbrains.com/help/pycharm/type-hinting-in-product.html&#34;&gt;its own implementation&lt;/a&gt; of &lt;a href=&#34;https://peps.python.org/pep-0484/&#34;&gt;PEP 484&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;VS Code: provides &lt;a href=&#34;https://code.visualstudio.com/docs/python/linting#_mypy&#34;&gt;basic integration&lt;/a&gt; with mypy.&lt;/li&gt; &#xA; &lt;li&gt;pre-commit: use &lt;a href=&#34;https://github.com/pre-commit/mirrors-mypy&#34;&gt;pre-commit mirrors-mypy&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Web site and documentation&lt;/h2&gt; &#xA;&lt;p&gt;Additional information is available at the web site:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.mypy-lang.org/&#34;&gt;http://www.mypy-lang.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Jump straight to the documentation:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mypy.readthedocs.io/&#34;&gt;https://mypy.readthedocs.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Follow along our changelog at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mypy-lang.blogspot.com/&#34;&gt;https://mypy-lang.blogspot.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Help in testing, development, documentation and other tasks is highly appreciated and useful to the project. There are tasks for contributors of all experience levels.&lt;/p&gt; &#xA;&lt;p&gt;To get started with developing mypy, see &lt;a href=&#34;https://raw.githubusercontent.com/python/mypy/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you need help getting started, don&#39;t hesitate to ask on &lt;a href=&#34;https://gitter.im/python/typing&#34;&gt;gitter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development status&lt;/h2&gt; &#xA;&lt;p&gt;Mypy is beta software, but it has already been used in production for several years at Dropbox and in many other organizations, and it has an extensive test suite.&lt;/p&gt; &#xA;&lt;h2&gt;mypyc and compiled version of mypy&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mypyc/mypyc&#34;&gt;Mypyc&lt;/a&gt; uses Python type hints to compile Python modules to faster C extensions. Mypy is itself compiled using mypyc: this makes mypy approximately 4 times faster than if interpreted!&lt;/p&gt; &#xA;&lt;p&gt;To install an interpreted mypy instead, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 -m pip install --no-binary mypy -U mypy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use a compiled version of a development version of mypy, directly install a binary from &lt;a href=&#34;https://github.com/mypyc/mypy_mypyc-wheels/releases/latest&#34;&gt;https://github.com/mypyc/mypy_mypyc-wheels/releases/latest&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To contribute to the mypyc project, check out &lt;a href=&#34;https://github.com/mypyc/mypyc&#34;&gt;https://github.com/mypyc/mypyc&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Azure/azure-sdk-for-python</title>
    <updated>2022-09-10T01:40:14Z</updated>
    <id>tag:github.com,2022-09-10:/Azure/azure-sdk-for-python</id>
    <link href="https://github.com/Azure/azure-sdk-for-python" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository is for active development of the Azure SDK for Python. For consumers of the SDK we recommend visiting our public developer docs at https://docs.microsoft.com/python/azure/ or our versioned developer docs at https://azure.github.io/azure-sdk-for-python.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Azure SDK for Python&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://azure.github.io/azure-sdk/releases/latest/python.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/packages-latest-blue.svg?sanitize=true&#34; alt=&#34;Packages&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://azuresdkartifacts.blob.core.windows.net/azure-sdk-for-python/dependencies/dependencies.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dependency-report-blue.svg?sanitize=true&#34; alt=&#34;Dependencies&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://azuresdkartifacts.blob.core.windows.net/azure-sdk-for-python/dependencies/dependencyGraph/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dependency-graph-blue.svg?sanitize=true&#34; alt=&#34;DepGraph&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/azure/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/azure-core.svg?maxAge=2592000&#34; alt=&#34;Python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/azure-sdk/public/_build/latest?definitionId=458&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/azure-sdk/public/_apis/build/status/python/python%20-%20core%20-%20ci?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository is for active development of the Azure SDK for Python. For consumers of the SDK we recommend visiting our &lt;a href=&#34;https://docs.microsoft.com/python/azure/&#34;&gt;public developer docs&lt;/a&gt; or our versioned &lt;a href=&#34;https://azure.github.io/azure-sdk-for-python&#34;&gt;developer docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;em&gt;Disclaimer&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Azure SDK Python packages support for Python 2.7 has ended 01 January 2022. For more information and questions, please refer to &lt;a href=&#34;https://github.com/Azure/azure-sdk-for-python/issues/20691&#34;&gt;https://github.com/Azure/azure-sdk-for-python/issues/20691&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;For your convenience, each service has a separate set of libraries that you can choose to use instead of one, large Azure package. To get started with a specific library, see the &lt;code&gt;README.md&lt;/code&gt; (or &lt;code&gt;README.rst&lt;/code&gt;) file located in the library&#39;s project folder.&lt;/p&gt; &#xA;&lt;p&gt;You can find service libraries in the &lt;code&gt;/sdk&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;The client libraries are supported on Python 3.7 or later. For more details, please read our page on &lt;a href=&#34;https://github.com/Azure/azure-sdk-for-python/wiki/Azure-SDKs-Python-version-support-policy&#34;&gt;Azure SDK for Python version support policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Packages available&lt;/h2&gt; &#xA;&lt;p&gt;Each service might have a number of libraries available from each of the following categories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-sdk-for-python/main/#client-new-releases&#34;&gt;Client - New Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-sdk-for-python/main/#client-previous-versions&#34;&gt;Client - Previous Versions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-sdk-for-python/main/#management-new-releases&#34;&gt;Management - New Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-sdk-for-python/main/#management-previous-versions&#34;&gt;Management - Previous Versions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Client: New Releases&lt;/h3&gt; &#xA;&lt;p&gt;New wave of packages that we are announcing as &lt;strong&gt;GA&lt;/strong&gt; and several that are currently releasing in &lt;strong&gt;preview&lt;/strong&gt;. These libraries allow you to use and consume existing resources and interact with them, for example: upload a blob. These libraries share a number of core functionalities such as: retries, logging, transport protocols, authentication protocols, etc. that can be found in the &lt;a href=&#34;https://github.com/Azure/azure-sdk-for-python/raw/main/sdk/core/azure-core&#34;&gt;azure-core&lt;/a&gt; library. You can learn more about these libraries by reading guidelines that they follow &lt;a href=&#34;https://azure.github.io/azure-sdk/python/guidelines/index.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can find the &lt;a href=&#34;https://azure.github.io/azure-sdk/releases/latest/index.html#python&#34;&gt;most up to date list of all of the new packages on our page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: If you need to ensure your code is ready for production use one of the stable, non-preview libraries.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Client: Previous Versions&lt;/h3&gt; &#xA;&lt;p&gt;Last stable versions of packages that have been provided for usage with Azure and are production-ready. These libraries provide you with similar functionalities to the Preview ones as they allow you to use and consume existing resources and interact with them, for example: upload a blob. They might not implement the &lt;a href=&#34;https://azure.github.io/azure-sdk/python/guidelines/index.html&#34;&gt;guidelines&lt;/a&gt; or have the same feature set as the November releases. They do however offer wider coverage of services.&lt;/p&gt; &#xA;&lt;h3&gt;Management: New Releases&lt;/h3&gt; &#xA;&lt;p&gt;A new set of management libraries that follow the &lt;a href=&#34;https://azure.github.io/azure-sdk/python/guidelines/&#34;&gt;Azure SDK Design Guidelines for Python&lt;/a&gt; are now available. These new libraries provide a number of core capabilities that are shared amongst all Azure SDKs, including the intuitive Azure Identity library, an HTTP Pipeline with custom policies, error-handling, distributed tracing, and much more. Documentation and code samples for these new libraries can be found &lt;a href=&#34;https://aka.ms/azsdk/python/mgmt&#34;&gt;here&lt;/a&gt;. In addition, a migration guide that shows how to transition from older versions of libraries is located &lt;a href=&#34;https://github.com/Azure/azure-sdk-for-python/raw/main/doc/sphinx/mgmt_quickstart.rst#migration-guide&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can find the &lt;a href=&#34;https://azure.github.io/azure-sdk/releases/latest/mgmt/python.html&#34;&gt;most up to date list of all of the new packages on our page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: If you need to ensure your code is ready for production use one of the stable, non-preview libraries. Also, if you are experiencing authentication issues with the management libraries after upgrading certain packages, it&#39;s possible that you upgraded to the new versions of SDK without changing the authentication code, please refer to the migration guide mentioned above for proper instructions.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Management: Previous Versions&lt;/h3&gt; &#xA;&lt;p&gt;For a complete list of management libraries which enable you to provision and manage Azure resources, please &lt;a href=&#34;https://azure.github.io/azure-sdk/releases/latest/all/python.html&#34;&gt;check here&lt;/a&gt;. They might not have the same feature set as the new releases but they do offer wider coverage of services. Management libraries can be identified by namespaces that start with &lt;code&gt;azure-mgmt-&lt;/code&gt;, e.g. &lt;code&gt;azure-mgmt-compute&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Need help?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For detailed documentation visit our &lt;a href=&#34;https://aka.ms/python-docs&#34;&gt;Azure SDK for Python documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;File an issue via &lt;a href=&#34;https://github.com/Azure/azure-sdk-for-python/issues&#34;&gt;Github Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check &lt;a href=&#34;https://stackoverflow.com/questions/tagged/azure+python&#34;&gt;previous questions&lt;/a&gt; or ask new ones on StackOverflow using &lt;code&gt;azure&lt;/code&gt; and &lt;code&gt;python&lt;/code&gt; tags.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chat with other community members &lt;a href=&#34;https://gitter.im/azure/azure-sdk-for-python?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/azure/azure-sdk-for-python&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Reporting security issues and security bugs&lt;/h3&gt; &#xA;&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&#34;mailto:secure@microsoft.com&#34;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&#34;https://www.microsoft.com/msrc/faqs-report-an-issue&#34;&gt;Security TechCenter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;For details on contributing to this repository, see the &lt;a href=&#34;https://github.com/Azure/azure-sdk-for-python/raw/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.microsoft.com&#34;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repositories using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python%2FREADME.png&#34; alt=&#34;Impressions&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hiroi-sora/Umi-OCR</title>
    <updated>2022-09-10T01:40:14Z</updated>
    <id>tag:github.com,2022-09-10:/hiroi-sora/Umi-OCR</id>
    <link href="https://github.com/hiroi-sora/Umi-OCR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OCR批量图片转文字识别软件，带界面，离线运行。可排除图片中水印区域的干扰，提取干净的文本。基于 PaddleOCR 。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Umi-OCR 批量图片转文字工具&lt;/h1&gt; &#xA;&lt;p&gt;适用于 Win10 x64 平台的离线OCR软件。批量导入本地图片 / 读取剪贴板，识别图片中的文本，输出到软件面板或本地 .txt / .md 文件。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;免费&lt;/strong&gt;：本项目所有代码开源，完全免费。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;方便&lt;/strong&gt;：解压即用，无需安装。不需要网络。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;高效&lt;/strong&gt;：OCR识别引擎是C++编译的 &lt;a href=&#34;https://github.com/hiroi-sora/PaddleOCR-json&#34;&gt;PaddleOCR-json&lt;/a&gt; （PP-OCRv2.6 cpu_avx_mkl），比前代提速20%。只要电脑性能足够且支持mkldnn，通常能比在线OCR服务更快。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;精准&lt;/strong&gt;：默认使用PPOCR-v3模型库。除了能准确辨认常规文字，对非常规字形（手写、艺术字、小字、方向不正、杂乱背景等）也有不错的识别率。可设置&lt;strong&gt;忽略区域&lt;/strong&gt;进一步提高精准性。支持载入自己训练的模型以适应任务需求。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://tupian.li/images/2022/05/31/1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://tupian.li/images/2022/03/30/win-2-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;兼容性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;系统支持 Win10 x64 。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;不建议使用 Win7 ，识别引擎很可能无法运行。如果想尝试，win7 x64 sp1 打满系统升级补丁+安装vc运行库后有&lt;strong&gt;小概率&lt;/strong&gt;能跑起来。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;CPU必须具有AVX指令集。常见的家用CPU一般都满足该条件。&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;AVX&lt;/th&gt; &#xA;     &lt;th&gt;支持的产品系列&lt;/th&gt; &#xA;     &lt;th&gt;不支持&lt;/th&gt; &#xA;     &lt;th&gt;存疑&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Intel&lt;/td&gt; &#xA;     &lt;td&gt;酷睿Core，至强Xeon&lt;/td&gt; &#xA;     &lt;td&gt;凌动Atom，安腾Itanium&lt;/td&gt; &#xA;     &lt;td&gt;赛扬Celeron，奔腾Pentium&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;AMD&lt;/td&gt; &#xA;     &lt;td&gt;推土机架构及之后的产品，如锐龙Ryzen、速龙Athlon、FX 等&lt;/td&gt; &#xA;     &lt;td&gt;K10架构及之前的产品&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;下载&lt;/h2&gt; &#xA;&lt;p&gt;注意，Umi-OCR 软件本体只含简体中文&amp;amp;英文识别库。下面链接中的 &lt;strong&gt;多国语言识别扩展包&lt;/strong&gt; 可导入 &lt;code&gt;繁中,日,韩,德,法&lt;/code&gt; 语言，请按需下载。&lt;/p&gt; &#xA;&lt;p&gt;Github下载：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/releases/tag/v1.2.6&#34;&gt;Umi-OCR 批量图片转文字 v1.2.6&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;蓝奏云下载：（请留意发布日期和版本号）&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wwn.lanzoul.com/b036wwa4d&#34;&gt;https://wwn.lanzoul.com/b036wwa4d&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;密码:&lt;code&gt;1111&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Umi-系列图片处理软件&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Umi-OCR 批量图片转文字软件 ◁&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hiroi-sora/Umi-CUT&#34;&gt;Umi-CUT 批量图片去黑边/裁剪/压缩软件&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;前言&lt;/h2&gt; &#xA;&lt;p&gt;关于&lt;strong&gt;忽略指定区域&lt;/strong&gt;的特殊功能：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;类似含水印的视频截图、含有UI/按钮的游戏截图等，往往只需要提取字幕区域的文本，而避免提取到水印和UI文本。本软件可设置忽略某些区域内的文字，来实现这一目的。&lt;/p&gt; &#xA; &lt;p&gt;当有大量的影视和游戏截图需要整理归档，或者想翻找包含某一段台词/字幕的截图；将这些图片提取出文字、然后Ctrl+F是一个很有效的方法。这是开发本软件的初衷。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;关于OCR引擎 &lt;a href=&#34;https://github.com/hiroi-sora/PaddleOCR-json&#34;&gt;PaddleOCR-json&lt;/a&gt; ：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;对 &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR/tree/release/2.6&#34;&gt;PaddleOCR 2.6 cpu_avx_mkl C++&lt;/a&gt; 的封装。效率高于Python版本PPOCR及部分Python编写的OCR引擎，通常比在线OCR服务更快(省去网络传输的时间)。支持更换Paddle官方模型（兼容v2和v3版本）或自己训练的模型，支持修改PPOCR各项参数。通过添加不同的语言模型，软件可识别多国语言。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;简单上手&lt;/h2&gt; &#xA;&lt;h4&gt;准备&lt;/h4&gt; &#xA;&lt;p&gt;下载压缩包并解压全部文件即可。&lt;/p&gt; &#xA;&lt;h4&gt;批量识别本地图片文件&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://tupian.li/images/2022/03/29/rm-2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;打开主程序，将任意 &lt;strong&gt;图片/文件夹&lt;/strong&gt; 拖入窗口中的白色背景表格区域，或点击左上方的 &lt;strong&gt;浏览&lt;/strong&gt; 选择图片。&lt;/li&gt; &#xA; &lt;li&gt;点击右上方 &lt;strong&gt;开始任务&lt;/strong&gt; ，等待进度条走完。&lt;/li&gt; &#xA; &lt;li&gt;点击 &lt;strong&gt;识别内容&lt;/strong&gt; 选项卡查看输出文字，或者前往 &lt;strong&gt;第一张图片的目录&lt;/strong&gt; 查看识别结果txt文件。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;快速识别剪贴板截图&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;按 [Win+Shift+S] 截取一张系统截图，或者在网页等地方复制一张图片。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;切换到 &lt;strong&gt;识别内容&lt;/strong&gt; 选项卡，点击 &lt;strong&gt;剪贴板读取&lt;/strong&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;可以在 &lt;strong&gt;设置&lt;/strong&gt; 选项卡中录制并启用 &lt;strong&gt;全局快捷键&lt;/strong&gt;，快速唤起程序识别。若此时程序窗口处在被覆盖的后方或者被最小化，则会自动挪到最前的位置。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;设置说明&lt;/h2&gt; &#xA;&lt;p&gt;点击 &lt;strong&gt;设置&lt;/strong&gt; 选项卡，配置参数。大部分设置项修改后会自动保存。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://tupian.li/images/2022/07/22/setting-1.2.5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;计划任务：&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;识图任务完成后，额外执行的任务。可执行打开生成文件/目录，自动关机/待机等。&lt;/li&gt; &#xA; &lt;li&gt;即使识图任务正在进行中，也可以随意修改这些选项。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;自定义计划任务&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;您可创建自己的计划任务，本质是调用一段cmd命令。&lt;/li&gt; &#xA;  &lt;li&gt;点击 &lt;strong&gt;打开设置文件&lt;/strong&gt; ，在&lt;code&gt;okMission&lt;/code&gt;中添加一项元素。&lt;/li&gt; &#xA;  &lt;li&gt;键为任务名称，值为字典，其中&lt;code&gt;code&lt;/code&gt;为cmd命令。多条命令可用&lt;code&gt;&amp;amp;&lt;/code&gt;分隔。例：&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code&gt;&#34;我的任务&#34;: {&#34;code&#34;: &#34;cmd命令1 &amp;amp; 命令2&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;忽略图片中某些区域内的文字：&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;点击 &lt;strong&gt;添加区域&lt;/strong&gt; 展开配置忽略区的新窗口。具体配置方式&lt;a href=&#34;https://raw.githubusercontent.com/hiroi-sora/Umi-OCR/main/#%E5%BF%BD%E7%95%A5%E5%8C%BA%E5%9F%9F%E5%8A%9F%E8%83%BD&#34;&gt;见后&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;点击 &lt;strong&gt;清空区域&lt;/strong&gt; 清空已配置的所有忽略区域参数。&lt;/li&gt; &#xA; &lt;li&gt;已添加区域后，上方标题文字提示当前忽略区域的 &lt;strong&gt;生效分辨率&lt;/strong&gt; 。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;从剪贴板读取图片：&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;点击 &lt;strong&gt;录制按键&lt;/strong&gt; 后按下想要的快捷键，如 &lt;code&gt;ctrl+shift+s&lt;/code&gt; 。然后勾选 &lt;strong&gt;启用全局快捷键&lt;/strong&gt; 。&lt;/li&gt; &#xA; &lt;li&gt;按下快捷键后，程序检查当前剪贴板的第一位是否为图片，是则程序跳到顶层并展示识别文字。&lt;/li&gt; &#xA; &lt;li&gt;请检查并避免全局快捷键与其它程序冲突。&lt;/li&gt; &#xA; &lt;li&gt;可设置识图后 &lt;strong&gt;自动复制识别内容&lt;/strong&gt;（不含任务时间等信息的纯内容文本）。此设置只对剪贴板识图生效，批量任务时无效。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;重要提示&lt;/strong&gt;：&lt;code&gt;v1.2.6&lt;/code&gt;版本提高了批量处理的平均速度，但代价是需要花费更长时间进行初始化。这可能影响剪贴板识图的速度（每次剪贴板任务都要重新初始化）。若频繁使用此功能，建议先使用旧版 &lt;code&gt;v1.2.5&lt;/code&gt; 。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;输入设置：&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;递归读取子文件夹中所有图片&lt;/strong&gt; 若勾选，拖入文件夹到处理列表时，会导入所有子文件夹中的图片。否则只会导入一层文件夹下的图片。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;图片后缀正常情况无需改动。&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;图片后缀&lt;/strong&gt; 配置软件允许载入的图片后缀，不同后缀以空格分隔，必须全为小写。 &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;如果你有必要添加新的图片后缀，要保证该图片同时满足c++模块的&lt;code&gt;PaddleOCR&lt;/code&gt;和python的&lt;code&gt;PIL&lt;/code&gt;均可识别。比如 &lt;strong&gt;.gif&lt;/strong&gt; 图片，虽然&lt;code&gt;PIL&lt;/code&gt;可以识别，但&lt;code&gt;PaddleOCR&lt;/code&gt;无法识别，载入gif文件会导致软件任务失败，因此不允许载入 &lt;strong&gt;.gif&lt;/strong&gt; 。&lt;/li&gt; &#xA;    &lt;li&gt;不在许可后缀范围内的文件，拖入软件也不会被载入。目前默认的图片后缀为：&lt;code&gt;.jpg .jpe .jpeg .jfif .png .webp .bmp .tif .tiff&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;输出设置：&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;将 &lt;strong&gt;识别内容写入本地文件&lt;/strong&gt; 取消勾选后，不会再生成本地文件，只能在 &lt;strong&gt;识别内容&lt;/strong&gt; 选项卡中查看输出信息。若设置了本次任务完成后自动关机，请务必勾选此项，以免至今为止的努力全部木大。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;其他项正常情况无需改动。&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;输出调试信息&lt;/strong&gt; 若勾选，则会额外输出程序工作状态的内容。&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;忽略无文字的图片&lt;/strong&gt; 若勾选，则不含文字（或文字全被忽略区域屏蔽掉）的图片名称不会出现在输出信息中。 &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;若想生成一份用于浏览的markdown文件，则&lt;strong&gt;建议取消勾选&lt;/strong&gt;。&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;生成文件可选择两种风格：&lt;strong&gt;纯文本.txt文件&lt;/strong&gt; 和 &lt;strong&gt;Markdown风格.md文件&lt;/strong&gt; 。前者可用于查找等一般用途。后者在编辑器或浏览器中渲染为图文并茂的页面，可用于浏览和欣赏图集。&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;输出目录&lt;/strong&gt; 和 &lt;strong&gt;输出文件名&lt;/strong&gt; 设置生成的文件的位置和名称。 &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;当拖入第一张图片且这两项设置为空时，自动设置输出路径为第一张图片的父目录，输出文件名为 &lt;code&gt;[转文字]_{父目录}.txt&lt;/code&gt;。除非要自定目录和名称，否则&lt;strong&gt;这两项默认留空即可&lt;/strong&gt;。&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;处理列表标签页的 &lt;strong&gt;清空表格&lt;/strong&gt; 按钮，除了会清空已导入的图片列表，还会清空 &lt;strong&gt;输出目录&lt;/strong&gt; 和 &lt;strong&gt;输出文件名&lt;/strong&gt; 设置。这样下次拖入新图片时，就能在新的位置存放输出文件。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;识别器设置：&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;识别语言&lt;/strong&gt; 选择当前识别语言（即OCR参数文件）。英文无需切换，所有语言均支持英文字母识别。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;启动参数&lt;/strong&gt; 可输入字符串配置参数，调整识别过程，适应任务需求。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;如何添加多国语言？&lt;/summary&gt; &#xA; &lt;h5&gt;方法一：下载 [Umi-OCR 多国语言识别扩展包] ，拷贝到软件目录即可。&lt;/h5&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hiroi-sora/Umi-OCR/main/#%E4%B8%8B%E8%BD%BD&#34;&gt;点此跳转下载位置&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;扩展包内置语言：&lt;code&gt;繁中,日,韩,德,法&lt;/code&gt;&lt;/p&gt; &#xA; &lt;h5&gt;方法二：手动下载添加 PP-OCR 模型库&lt;/h5&gt; &#xA; &lt;ol start=&#34;0&#34;&gt; &#xA;  &lt;li&gt;模型分为三种：det检测，cls方向分类，rec识别。其中det和cls是多语言通用的，只需下载新语言的rec识别模型即可。&lt;/li&gt; &#xA;  &lt;li&gt;前往 PP-OCR系列 &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR/raw/release/2.6/doc/doc_ch/models_list.md#23-%E5%A4%9A%E8%AF%AD%E8%A8%80%E8%AF%86%E5%88%AB%E6%A8%A1%E5%9E%8B%E6%9B%B4%E5%A4%9A%E8%AF%AD%E8%A8%80%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD&#34;&gt;V3多语言识别模型列表&lt;/a&gt; ，下载一组&lt;strong&gt;rec识别&lt;/strong&gt;模型。 &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;若V3模型列表里没有找到目标语言，可以去&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR/raw/release/2.6/doc/doc_ch/multi_languages.md#5-%E6%94%AF%E6%8C%81%E8%AF%AD%E7%A7%8D%E5%8F%8A%E7%BC%A9%E5%86%99&#34;&gt;支持语言列表&lt;/a&gt;查看PPOCR有没有提供这种语言。若有，则可能它暂未推出V3模型，可以先使用旧版V2模型。（V3模型网址中的2.x一路换成更小的数字可以查看旧版页面）&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;前往 PP-OCR系列 &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR/tree/release/2.6/ppocr/utils/dict&#34;&gt;字典列表&lt;/a&gt; ，下载对应语言的字典文件。&lt;/li&gt; &#xA;  &lt;li&gt;将下载好的文件解压放进软件目录的 &lt;code&gt;PaddleOCR-json&lt;/code&gt; 文件夹中。&lt;/li&gt; &#xA;  &lt;li&gt;复制一份 &lt;code&gt;PaddleOCR_json_config_[模板].txt&lt;/code&gt; ，改一下名。&lt;/li&gt; &#xA;  &lt;li&gt;打开复制好的 &lt;code&gt;PaddleOCR_json_config_目标语言.txt&lt;/code&gt; ，将 rec路径 &lt;code&gt;rec_model_dir&lt;/code&gt; 和 字典路径 &lt;code&gt;rec_char_dict_path&lt;/code&gt; 改成目标语言的文件(夹)的名称。若模型库是v2版本，还必须加上一行 &lt;code&gt;rec_img_h 32&lt;/code&gt; 。&lt;/li&gt; &#xA;  &lt;li&gt;回到上一层目录 &lt;code&gt;Umi-OCR&lt;/code&gt; ，打开 &lt;code&gt;Umi-OCR_config.json&lt;/code&gt; ，在 &lt;code&gt;&#34;ocrConfig&#34;&lt;/code&gt; 中添加新语言的信息。键为语言名称，值的 &lt;code&gt;path&lt;/code&gt; 为config txt文件的名称。保持json格式，注意逗号。&lt;/li&gt; &#xA;  &lt;li&gt;打开软件，检查设置页是否已经能选择该识别语言。&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;识别不准怎么办？ 高端CPU如何进一步提高速度？&lt;/summary&gt; &#xA; &lt;h5&gt;启动参数说明&lt;/h5&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;若图片中的文字方向不是正朝上，启动参数添加：&lt;code&gt;--cls=1 --use_angle_cls=1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;为了提高速度，PaddleOCR预先将长度超标的图片进行压缩，再执行文字识别。这可能导致超大分辨率（4k以上）图片的识别准确度下降。若有识别不出文字或漏掉小字的现象发生，启动参数添加：&lt;code&gt;--limit_side_len=压缩阈值&lt;/code&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;压缩阈值建议填图片的最大边长的一半，4000x3000的图片填2000。值越大，识别小字的准确率可能提高，但速度会大幅降低，请谨慎使用。&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;若电脑的CPU大于8核16线程，启动参数添加：&lt;code&gt;--cpu_threads=线程&lt;/code&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;线程建议填CPU线程数，如16。值越大，识别速度可能提高。不应超过CPU线程数。&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;若软件初始化识别引擎时频繁报错或崩溃，且电脑CPU是早期AMD型号，启动参数尝试添加：&lt;code&gt;--enable_mkldnn=0&lt;/code&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;禁用mkldnn加速可能提高对早期AMD的兼容性，但识别速度会大幅降低。Intel和AMD锐龙系列一般不存在这个问题。&lt;/li&gt; &#xA;    &lt;li&gt;若确实无法使用mkldnn，建议使用&lt;code&gt;1.2.5&lt;/code&gt;旧版本Umi-OCR，它在禁用加速时的效率高于&lt;code&gt;1.2.6&lt;/code&gt;。&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;启动参数可以叠加，用空格隔开，如： &lt;code&gt;--cls=1 --use_angle_cls=1 --use_angle_cls=1 --limit_side_len=1920 --cpu_threads=20&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;更多启动参数详见 &lt;a href=&#34;https://github.com/hiroi-sora/PaddleOCR-json#5-%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF%E8%AF%B4%E6%98%8E&#34;&gt;PaddleOCR-json 配置信息说明&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;忽略区域功能&lt;/h2&gt; &#xA;&lt;p&gt;忽略区域是本软件特色功能，可用于排除图片中水印的干扰，让识别结果只留下所需的文本。&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;展开详情&lt;/summary&gt; &#xA; &lt;p&gt;“忽略区域”是指图片上指定位置与大小的矩形区域，完全处于这些区域内的文字块，将被排除。&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;点击 &lt;strong&gt;设置&lt;/strong&gt; 选项卡中的 &lt;strong&gt;添加忽略区域&lt;/strong&gt; ，进入忽略区域选择窗口。&lt;/li&gt; &#xA;  &lt;li&gt;将任意图片 &lt;strong&gt;拖入&lt;/strong&gt; 该窗口，可预览该图片。将新图片拖入窗口可切换预览，但已绘制的忽略区域不会消失；可切换不同图片来仔细调整忽略区域。&lt;/li&gt; &#xA;  &lt;li&gt;绘制 &lt;strong&gt;忽略区域&lt;/strong&gt; ：拖入图片后，点击选中左起第一按钮 &lt;strong&gt;+忽略区域 A&lt;/strong&gt; ，然后在图片上按住左键拖拽，绘制矩形区域。可 &lt;strong&gt;撤销&lt;/strong&gt; 步骤。&lt;/li&gt; &#xA;  &lt;li&gt;绘制完后，点击 &lt;strong&gt;完成&lt;/strong&gt; 返回软件主窗口。若不想应用此次绘制，则右上角X，取消。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;简单案例见下。&lt;/p&gt; &#xA; &lt;h4&gt;简单排除视频截图中的水印：&lt;/h4&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;打开忽略区域设置窗口，拖入任一张截图。 稍等约1秒，面板上会显示出图片，识别到的文字区域会被虚线框起来。发现右上角的水印也被识别到了。 &lt;img src=&#34;https://tupian.li/images/2022/03/30/image04bea2a47232088b.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;点击选择 &lt;strong&gt;+忽略区域 A&lt;/strong&gt; 。在画面上按住左键拖拽，绘制方框完全包裹住水印区域，范围可以大一些。可绘制多个方框。 &lt;img src=&#34;https://tupian.li/images/2022/03/30/image4a49b65bbd22c4a6.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;点击 &lt;strong&gt;完成&lt;/strong&gt; 。返回主窗口， &lt;strong&gt;开始任务&lt;/strong&gt; 。&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;h4&gt;排除游戏截图中的两种UI：&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;假设有一组游戏截图，主要分为两类图片，这两类图片的文字位置和UI位置不太相同： &lt;img src=&#34;https://tupian.li/images/2022/03/30/image1.png&#34; alt=&#34;&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;甲类（上图左）为对话模式，字数少，要保留的台词文本在画面下方，要排除的UI分布于底端。&lt;/li&gt; &#xA;    &lt;li&gt;乙类（上图右）为历史文本模式，字数多，从上到下都有要保留的文本（与甲类UI位置有重合），要排除的UI分布在两侧。&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;拖入一张甲类图片。选择 &lt;strong&gt;+忽略区域 A&lt;/strong&gt; ，绘制方框包裹住要排除的 &lt;strong&gt;底端UI&lt;/strong&gt; 。可绘制多个方框。 &lt;img src=&#34;https://tupian.li/images/2022/03/30/image2ad97ff898e39d82f.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;拖入一张乙类图片。选择 &lt;strong&gt;+识别区域&lt;/strong&gt; ，绘制方框包裹住 &lt;strong&gt;小部分要保留的文本&lt;/strong&gt; 。注意只要该区域内含有任意保留文本即可，不需要画得很大，不需要包裹住所有保留文本；不能与甲类图中 &lt;strong&gt;可能存在的任何文本&lt;/strong&gt; 重合。 &lt;img src=&#34;https://tupian.li/images/2022/03/30/image3.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;然后选择 &lt;strong&gt;+忽略区域 B&lt;/strong&gt; ，绘制方框包裹住乙类图要排除的 &lt;strong&gt;两侧UI&lt;/strong&gt; 。可绘制多个方框。 &lt;img src=&#34;https://tupian.li/images/2022/03/30/image4.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;点击 &lt;strong&gt;完成&lt;/strong&gt; 。返回主窗口， &lt;strong&gt;开始任务&lt;/strong&gt; 。&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;h4&gt;忽略区域处理逻辑：&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;忽略区域A&lt;/strong&gt; ：正常情况下，处于 &lt;strong&gt;忽略区域A&lt;/strong&gt; 内的文字 &lt;strong&gt;不会&lt;/strong&gt; 输出。&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;识别区域&lt;/strong&gt; ：当识别区域内存在文本时，&lt;strong&gt;忽略区域A失效&lt;/strong&gt; ；即处于忽略区域A内的文字也 &lt;strong&gt;会&lt;/strong&gt; 被输出。&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;忽略区域B&lt;/strong&gt; ：当 &lt;strong&gt;忽略区域A失效&lt;/strong&gt; 时，忽略区域B才生效；即处于区域1内的文字 &lt;strong&gt;会&lt;/strong&gt; 输出、区域2内的文字 &lt;strong&gt;不会&lt;/strong&gt; 输出。&lt;/p&gt; &#xA;   &lt;table&gt; &#xA;    &lt;thead&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;th&gt;识别区域&lt;/th&gt; &#xA;      &lt;th&gt;忽略区域A&lt;/th&gt; &#xA;      &lt;th&gt;忽略区域B&lt;/th&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/thead&gt; &#xA;    &lt;tbody&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;× 不存在文字&lt;/td&gt; &#xA;      &lt;td&gt;√ 生效&lt;/td&gt; &#xA;      &lt;td&gt;× 失效&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;√ 存在文字&lt;/td&gt; &#xA;      &lt;td&gt;× 失效&lt;/td&gt; &#xA;      &lt;td&gt;√ 生效&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt; &#xA;   &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;“忽略区域配置”只针对一种分辨率生效。假如配置的分辨率是1920x1080，那么批量识别图片时，只有符合1920x1080的图片才会排除干扰文本；1920x1079的图片中的文字会全部输出。&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;拖入预览的图片必须分辨率相同。假如先拖入1920x1080的图片，再拖入其它分辨率的图片；软件会弹窗警告。只有点击 &lt;strong&gt;清空&lt;/strong&gt; 删除当前已配置的忽略区域，才能拖入其他分辨率图片，并应用此分辨率。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;效率测试 &amp;amp; 开发说明&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;展开详情&lt;/summary&gt; &#xA; &lt;h3&gt;效率测试&lt;/h3&gt; &#xA; &lt;p&gt;测试机器：&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;CPU&lt;/th&gt; &#xA;    &lt;th&gt;TDP&lt;/th&gt; &#xA;    &lt;th&gt;RAM&lt;/th&gt; &#xA;    &lt;th&gt;是否兼容mkldnn&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;r5 4600u&lt;/td&gt; &#xA;    &lt;td&gt;15w&lt;/td&gt; &#xA;    &lt;td&gt;16g&lt;/td&gt; &#xA;    &lt;td&gt;无报错&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;p&gt;测试集：&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;图片张数&lt;/th&gt; &#xA;    &lt;th&gt;测试条件&lt;/th&gt; &#xA;    &lt;th&gt;分辨率&lt;/th&gt; &#xA;    &lt;th&gt;平均字块数量&lt;/th&gt; &#xA;    &lt;th&gt;平均字符数量&lt;/th&gt; &#xA;    &lt;th&gt;文字语言&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;100&lt;/td&gt; &#xA;    &lt;td&gt;环境相同，多次测量取平均值&lt;/td&gt; &#xA;    &lt;td&gt;1920x1080&lt;/td&gt; &#xA;    &lt;td&gt;15&lt;/td&gt; &#xA;    &lt;td&gt;250&lt;/td&gt; &#xA;    &lt;td&gt;简体中文&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;p&gt;测试结果：&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Umi-OCR版本&lt;/th&gt; &#xA;    &lt;th&gt;1.2.5&lt;/th&gt; &#xA;    &lt;th&gt;1.2.5&lt;/th&gt; &#xA;    &lt;th&gt;1.2.6&lt;/th&gt; &#xA;    &lt;th&gt;1.2.6&lt;/th&gt; &#xA;    &lt;th&gt;1.2.6&lt;/th&gt; &#xA;    &lt;th&gt;1.2.6&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;PaddleOCR-json版本&lt;/td&gt; &#xA;    &lt;td&gt;1.1.1&lt;/td&gt; &#xA;    &lt;td&gt;1.1.1&lt;/td&gt; &#xA;    &lt;td&gt;1.2.0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;1.2.0&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;1.2.0&lt;/td&gt; &#xA;    &lt;td&gt;1.2.0&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;PP-OCR C++版本&lt;/td&gt; &#xA;    &lt;td&gt;2.1&lt;/td&gt; &#xA;    &lt;td&gt;2.1&lt;/td&gt; &#xA;    &lt;td&gt;2.6&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;2.6&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;2.6&lt;/td&gt; &#xA;    &lt;td&gt;2.6&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;是否开启mkldnn&lt;/td&gt; &#xA;    &lt;td&gt;✅&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;✅&lt;/td&gt; &#xA;    &lt;td&gt;✅&lt;/td&gt; &#xA;    &lt;td&gt;✅&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;PP-OCR模型库版本&lt;/td&gt; &#xA;    &lt;td&gt;v2&lt;/td&gt; &#xA;    &lt;td&gt;v2&lt;/td&gt; &#xA;    &lt;td&gt;v2&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;v3&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;v3 slim&lt;/td&gt; &#xA;    &lt;td&gt;v3&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;总耗时（秒）&lt;/td&gt; &#xA;    &lt;td&gt;90&lt;/td&gt; &#xA;    &lt;td&gt;120&lt;/td&gt; &#xA;    &lt;td&gt;65&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;63&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;170&lt;/td&gt; &#xA;    &lt;td&gt;400&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;平均单张耗时（秒）&lt;/td&gt; &#xA;    &lt;td&gt;0.9&lt;/td&gt; &#xA;    &lt;td&gt;1.2&lt;/td&gt; &#xA;    &lt;td&gt;0.65&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;0.63&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;1.7&lt;/td&gt; &#xA;    &lt;td&gt;4.0&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;内存占用（MB）&lt;/td&gt; &#xA;    &lt;td&gt;1000&lt;/td&gt; &#xA;    &lt;td&gt;350&lt;/td&gt; &#xA;    &lt;td&gt;1200&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;1700&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;5800&lt;/td&gt; &#xA;    &lt;td&gt;500&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;p&gt;结论：&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;在启用mkldnn情况下，新版本比前代的效率具有显著优势。新版调教倾向于榨干硬件的性能，内存占用高于旧版。&lt;/li&gt; &#xA;  &lt;li&gt;不启用mkldnn时，新版本效率不如前代。故您的CPU若不支持mkldnn（如早期AMD型号），建议使用旧版本Umi-OCR。&lt;/li&gt; &#xA;  &lt;li&gt;虽然Paddle官方文档中说经过压缩剪枝蒸馏量化的slim版模型的性能指标会超过传统算法，但实测 v3 slim 模型的性能远不如原始版本，还可能伴随着内存泄漏的问题。也许是 PP-OCR C++ 引擎不适配。在该问题解决之前，Umi-OCR发行版提供原始版本模型。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;开发说明&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;如果想用接口调用OCR，可试试 &lt;a href=&#34;https://github.com/hiroi-sora/PaddleOCR-json#paddleocr-json-%E5%9B%BE%E7%89%87%E8%BD%AC%E6%96%87%E5%AD%97%E7%A8%8B%E5%BA%8F&#34;&gt;PaddleOCR-json 图片转文字程序&lt;/a&gt; 。&lt;/li&gt; &#xA;  &lt;li&gt;由于PaddleOCR-json只接受硬盘文件，所以读取剪贴板图片时，会先将内存中的图片保存到同目录下的&lt;code&gt;Umi-OCR_temp&lt;/code&gt;。每次任务时清空前一次的缓存。&lt;/li&gt; &#xA;  &lt;li&gt;PPOCR v2.6 (PaddleOCR-json v1.2.0) 版本提高了批量处理的平均速度，但代价是需要花费更长时间进行初始化。提高了启用mkldnn加速时的识别速度，但代价时不开启加速时效率更低。（CPU只要不是特别早期的AMD，一般都能使用mkldnn，但加速幅度可能不如同档次的Intel。）&lt;/li&gt; &#xA;  &lt;li&gt;未来将增加 openblas 版识别引擎，进一步优化AMD的效率。&lt;/li&gt; &#xA;  &lt;li&gt;代码很丑，有空重构 &lt;del&gt;下次一定&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;li&gt;使用&lt;code&gt;pyinstaller&lt;/code&gt;打包，参数为 &lt;code&gt;pyinstaller -F -w -i icon/icon.ico -n &#34;Umi-OCR 批量图片转文字&#34; main.py&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 输出内容可选为markdown风格并嵌入图片路径。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 设置项能保存。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 自动打开输出文件or文件夹。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 识别剪贴板中的图片。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 任务进行时，禁用部分设置项。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 计划任务：完成后自动关机/休眠等。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 递归导入文件夹。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 优化适配PaddleOCR v3模型。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 自动检测CPU指令集是否兼容。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 排版优化：模糊匹配同行文段，自定义文段方向。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;低（有）优（生）先（之）级（年）：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 对图片重命名。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 提高初始化速度。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 忽略区域能保存预设。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 缩减离线OCR模块的体积。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 离线OCR模块增加 &lt;code&gt;no_avx&lt;/code&gt; 和 &lt;code&gt;openblas&lt;/code&gt; 版本。&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 文本纠错。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;更新日志&lt;/h2&gt; &#xA;&lt;h5&gt;v1.2.6 &lt;code&gt;2022.9.1&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;!-- Umi酱生日快乐~ --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;更新PaddleOCR-json模块至&lt;code&gt;v1.2.0&lt;/code&gt;，提高识别速度、准确度。&lt;/li&gt; &#xA; &lt;li&gt;调整UI：更方便地用下拉框切换识别语言。&lt;/li&gt; &#xA; &lt;li&gt;调整UI：可以从主窗口任意位置/任意选项卡拖入图片。&lt;/li&gt; &#xA; &lt;li&gt;修正了漏洞：提高程序健壮性，增加启动子进程时的更多异常处理情况。&lt;/li&gt; &#xA; &lt;li&gt;修正了漏洞：彻底解决了对边缘过窄的图片，识别结果不准确的问题 &lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/issues/7&#34;&gt;issue #7&lt;/a&gt; 。&lt;/li&gt; &#xA; &lt;li&gt;优化适配PP-OCRv3模型，彻底解决了v3版模型比v2慢、不准的问题 &lt;a href=&#34;https://github.com/hiroi-sora/Umi-OCR/issues/4#issuecomment-1141735773&#34;&gt;issue #4&lt;/a&gt; 。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v1.2.5 &lt;code&gt;2022.7.22&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加新功能：计划任务。识图完成后执行自动关机等任务。&lt;/li&gt; &#xA; &lt;li&gt;添加新功能：可选拖入文件夹时递归导入子文件夹中所有图片。&lt;/li&gt; &#xA; &lt;li&gt;调整UI：添加一些配置文件的快捷入口。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v1.2.4 &lt;code&gt;2022.6.4&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加新功能：可选识别剪贴板图片后自动复制识别的文本。&lt;/li&gt; &#xA; &lt;li&gt;补充功能：快捷键调用剪贴板识图时，若程序窗口被最小化，则恢复前台状态并挪到最前位置。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v1.2.3 &lt;code&gt;2022.5.31&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加新功能：读取剪贴板图片。配置全局快捷键调用该功能。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v1.2.2 &lt;code&gt;2022.4.30&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加新功能：可选任务完成后自动打开输出文件或目录。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v1.2.1 &lt;code&gt;2022.4.16&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;更新PaddleOCR-json模块至&lt;code&gt;v1.1.1&lt;/code&gt;，修正了可能得到错误包围盒的漏洞。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v1.2.0 &lt;code&gt;2022.4.8&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可选生成Markdown风格的图文并茂的.md文件，作为索引使用有更佳的观感。当然也可以继续选择生成纯文本.txt文件。&lt;/li&gt; &#xA; &lt;li&gt;修改设置面板的样式，改为滚动面板以容纳更多设置选项。&lt;/li&gt; &#xA; &lt;li&gt;用户修改配置项后可自动保存。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v1.1.1 &lt;code&gt;2022.3.30&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;修正了漏洞：退出 [忽略区域窗口] 时，OCR子进程未关闭。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v1.1.0 &lt;code&gt;2022.3.30&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加新功能：[忽略区域窗口] 以虚线框 展示识别出的文字块。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v1.0.0 &lt;code&gt;2022.3.28&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;“梦开始的地方”&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>