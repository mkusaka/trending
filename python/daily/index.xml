<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-09T01:34:51Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tubearchivist/tubearchivist</title>
    <updated>2025-07-09T01:34:51Z</updated>
    <id>tag:github.com,2025-07-09:/tubearchivist/tubearchivist</id>
    <link href="https://github.com/tubearchivist/tubearchivist" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Your self hosted YouTube media server&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tubearchivist/tubearchivist/master/assets/tube-archivist-front.jpg?raw=true&#34; alt=&#34;Tube Archivist&#34; title=&#34;Tube Archivist Banner&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/tubearchivist/tubearchivist/master/SHOWCASE.MD&#34;&gt;&lt;em&gt;more screenshots and video&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://hub.docker.com/r/bbilly1/tubearchivist&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://tiles.tilefy.me/t/tubearchivist-docker.png&#34; alt=&#34;tubearchivist-docker&#34; title=&#34;Tube Archivist Docker Pulls&#34; height=&#34;50&#34; width=&#34;190&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/tubearchivist/tubearchivist/stargazers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://tiles.tilefy.me/t/tubearchivist-github-star.png&#34; alt=&#34;tubearchivist-github-star&#34; title=&#34;Tube Archivist GitHub Stars&#34; height=&#34;50&#34; width=&#34;190&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/tubearchivist/tubearchivist/forks&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://tiles.tilefy.me/t/tubearchivist-github-forks.png&#34; alt=&#34;tubearchivist-github-forks&#34; title=&#34;Tube Archivist GitHub Forks&#34; height=&#34;50&#34; width=&#34;190&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://www.tubearchivist.com/discord&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://tiles.tilefy.me/t/tubearchivist-discord.png&#34; alt=&#34;tubearchivist-discord&#34; title=&#34;TA Discord Server Members&#34; height=&#34;50&#34; width=&#34;190&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Table of contents:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.tubearchivist.com/&#34;&gt;Docs&lt;/a&gt; with &lt;a href=&#34;https://docs.tubearchivist.com/faq/&#34;&gt;FAQ&lt;/a&gt;, and API documentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tubearchivist/tubearchivist/master/#core-functionality&#34;&gt;Core functionality&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tubearchivist/tubearchivist/master/#resources&#34;&gt;Resources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tubearchivist/tubearchivist/master/#installing&#34;&gt;Installing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tubearchivist/tubearchivist/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tubearchivist/tubearchivist/master/#known-limitations&#34;&gt;Known limitations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tubearchivist/tubearchivist/master/#port-collisions&#34;&gt;Port Collisions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tubearchivist/tubearchivist/master/#common-errors&#34;&gt;Common Errors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tubearchivist/tubearchivist/master/#roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tubearchivist/tubearchivist/master/#donate&#34;&gt;Donate&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Core functionality&lt;/h2&gt; &#xA;&lt;p&gt;Once your YouTube video collection grows, it becomes hard to search and find a specific video. That&#39;s where Tube Archivist comes in: By indexing your video collection with metadata from YouTube, you can organize, search and enjoy your archived YouTube videos without hassle offline through a convenient web interface. This includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Subscribe to your favorite YouTube channels&lt;/li&gt; &#xA; &lt;li&gt;Download Videos using &lt;strong&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp&#34;&gt;yt-dlp&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Index and make videos searchable&lt;/li&gt; &#xA; &lt;li&gt;Play videos&lt;/li&gt; &#xA; &lt;li&gt;Keep track of viewed and unviewed videos&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tubearchivist.com/discord&#34;&gt;Discord&lt;/a&gt;: Connect with us on our Discord server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/TubeArchivist/&#34;&gt;r/TubeArchivist&lt;/a&gt;: Join our Subreddit.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tubearchivist/browser-extension&#34;&gt;Browser Extension&lt;/a&gt; Tube Archivist Companion, for &lt;a href=&#34;https://addons.mozilla.org/addon/tubearchivist-companion/&#34;&gt;Firefox&lt;/a&gt; and &lt;a href=&#34;https://chrome.google.com/webstore/detail/tubearchivist-companion/jjnkmicfnfojkkgobdfeieblocadmcie&#34;&gt;Chrome&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tubearchivist/tubearchivist-jf-plugin&#34;&gt;Jellyfin Plugin&lt;/a&gt;: Add your videos to Jellyfin&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tubearchivist/tubearchivist-plex&#34;&gt;Plex Plugin&lt;/a&gt;: Add your videos to Plex&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;For minimal system requirements, the Tube Archivist stack needs around 2GB of available memory for a small testing setup and around 4GB of available memory for a mid to large sized installation. Minimal with dual core with 4 threads, better quad core plus. This project requires docker. Ensure it is installed and running on your system.&lt;/p&gt; &#xA;&lt;p&gt;The documentation has additional user provided instructions for &lt;a href=&#34;https://docs.tubearchivist.com/installation/unraid/&#34;&gt;Unraid&lt;/a&gt;, &lt;a href=&#34;https://docs.tubearchivist.com/installation/synology/&#34;&gt;Synology&lt;/a&gt; and &lt;a href=&#34;https://docs.tubearchivist.com/installation/podman/&#34;&gt;Podman&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The instructions here should get you up and running quickly, for Docker beginners and full explanation about each environment variable, see the &lt;a href=&#34;https://docs.tubearchivist.com/installation/docker-compose/&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Take a look at the example &lt;a href=&#34;https://github.com/tubearchivist/tubearchivist/raw/master/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt; and configure the required environment variables.&lt;/p&gt; &#xA;&lt;p&gt;All environment variables are explained in detail in the docs &lt;a href=&#34;https://docs.tubearchivist.com/installation/env-vars/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;TubeArchivist&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment Var&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TA_HOST&lt;/td&gt; &#xA;   &lt;td&gt;Server IP or hostname &lt;code&gt;http://tubearchivist.local:8000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Required&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TA_USERNAME&lt;/td&gt; &#xA;   &lt;td&gt;Initial username when logging into TA&lt;/td&gt; &#xA;   &lt;td&gt;Required&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TA_PASSWORD&lt;/td&gt; &#xA;   &lt;td&gt;Initial password when logging into TA&lt;/td&gt; &#xA;   &lt;td&gt;Required&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ELASTIC_PASSWORD&lt;/td&gt; &#xA;   &lt;td&gt;Password for ElasticSearch&lt;/td&gt; &#xA;   &lt;td&gt;Required&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;REDIS_CON&lt;/td&gt; &#xA;   &lt;td&gt;Connection string to Redis&lt;/td&gt; &#xA;   &lt;td&gt;Required&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TZ&lt;/td&gt; &#xA;   &lt;td&gt;Set your timezone for the scheduler&lt;/td&gt; &#xA;   &lt;td&gt;Required&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TA_PORT&lt;/td&gt; &#xA;   &lt;td&gt;Overwrite Nginx port&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TA_BACKEND_PORT&lt;/td&gt; &#xA;   &lt;td&gt;Overwrite container internal backend server port&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TA_ENABLE_AUTH_PROXY&lt;/td&gt; &#xA;   &lt;td&gt;Enables support for forwarding auth in reverse proxies&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.tubearchivist.com/configuration/forward-auth/&#34;&gt;Read more&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TA_AUTH_PROXY_USERNAME_HEADER&lt;/td&gt; &#xA;   &lt;td&gt;Header containing username to log in&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TA_AUTH_PROXY_LOGOUT_URL&lt;/td&gt; &#xA;   &lt;td&gt;Logout URL for forwarded auth&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ES_URL&lt;/td&gt; &#xA;   &lt;td&gt;URL That ElasticSearch runs on&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ES_DISABLE_VERIFY_SSL&lt;/td&gt; &#xA;   &lt;td&gt;Disable ElasticSearch SSL certificate verification&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ES_SNAPSHOT_DIR&lt;/td&gt; &#xA;   &lt;td&gt;Custom path where elastic search stores snapshots for master/data nodes&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HOST_GID&lt;/td&gt; &#xA;   &lt;td&gt;Allow TA to own the video files instead of container user&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HOST_UID&lt;/td&gt; &#xA;   &lt;td&gt;Allow TA to own the video files instead of container user&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ELASTIC_USER&lt;/td&gt; &#xA;   &lt;td&gt;Change the default ElasticSearch user&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TA_LDAP&lt;/td&gt; &#xA;   &lt;td&gt;Configure TA to use LDAP Authentication&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.tubearchivist.com/configuration/ldap/&#34;&gt;Read more&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DISABLE_STATIC_AUTH&lt;/td&gt; &#xA;   &lt;td&gt;Remove authentication from media files, (Google Cast...)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.tubearchivist.com/installation/env-vars/#disable_static_auth&#34;&gt;Read more&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TA_AUTO_UPDATE_YTDLP&lt;/td&gt; &#xA;   &lt;td&gt;Configure TA to automatically install the latest yt-dlp on container start&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DJANGO_DEBUG&lt;/td&gt; &#xA;   &lt;td&gt;Return additional error messages, for debug only&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TA_LOGIN_AUTH_MODE&lt;/td&gt; &#xA;   &lt;td&gt;Configure the order of login authentication backends (Default: single)&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;TA_LOGIN_AUTH_MODE value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;single&lt;/td&gt; &#xA;   &lt;td&gt;Only use a single backend (default, or LDAP, or Forward auth, selected by TA_LDAP or TA_ENABLE_AUTH_PROXY)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;local&lt;/td&gt; &#xA;   &lt;td&gt;Use local password database only&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ldap&lt;/td&gt; &#xA;   &lt;td&gt;Use LDAP backend only&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forwardauth&lt;/td&gt; &#xA;   &lt;td&gt;Use reverse proxy headers only&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ldap_local&lt;/td&gt; &#xA;   &lt;td&gt;Use LDAP backend in addition to the local password database&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;ElasticSearch&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment Var&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;   &lt;th&gt;State&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ELASTIC_PASSWORD&lt;/td&gt; &#xA;   &lt;td&gt;Matching password &lt;code&gt;ELASTIC_PASSWORD&lt;/code&gt; from TubeArchivist&lt;/td&gt; &#xA;   &lt;td&gt;Required&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;http.port&lt;/td&gt; &#xA;   &lt;td&gt;Change the port ElasticSearch runs on&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Update&lt;/h2&gt; &#xA;&lt;p&gt;Always use the &lt;em&gt;latest&lt;/em&gt; (the default) or a named semantic version tag for the docker images. The &lt;em&gt;unstable&lt;/em&gt; tags are only for your testing environment, there might not be an update path for these testing builds.&lt;/p&gt; &#xA;&lt;p&gt;You will see the current version number of &lt;strong&gt;Tube Archivist&lt;/strong&gt; in the footer of the interface. There is a daily version check task querying tubearchivist.com, notifying you of any new releases in the footer. To update, you need to update the docker images, the method for which will depend on your platform. For example, if you&#39;re using &lt;code&gt;docker-compose&lt;/code&gt;, run &lt;code&gt;docker-compose pull&lt;/code&gt; and then restart with &lt;code&gt;docker-compose up -d&lt;/code&gt;. After updating, check the footer to verify you are running the expected version.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This project is tested for updates between one or two releases maximum. Further updates back may or may not be supported and you might have to reset your index and configurations to update. Ideally apply new updates at least once per month.&lt;/li&gt; &#xA; &lt;li&gt;There can be breaking changes between updates, particularly as the application grows, new environment variables or settings might be required for you to set in the your docker-compose file. &lt;em&gt;Always&lt;/em&gt; check the &lt;strong&gt;release notes&lt;/strong&gt;: Any breaking changes will be marked there.&lt;/li&gt; &#xA; &lt;li&gt;All testing and development is done with the Elasticsearch version number as mentioned in the provided &lt;em&gt;docker-compose.yml&lt;/em&gt; file. This will be updated when a new release of Elasticsearch is available. Running an older version of Elasticsearch is most likely not going to result in any issues, but it&#39;s still recommended to run the same version as mentioned. Use &lt;code&gt;bbilly1/tubearchivist-es&lt;/code&gt; to automatically get the recommended version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go through the &lt;strong&gt;settings&lt;/strong&gt; page and look at the available options. Particularly set &lt;em&gt;Download Format&lt;/em&gt; to your desired video quality before downloading. &lt;strong&gt;Tube Archivist&lt;/strong&gt; downloads the best available quality by default. To support iOS or MacOS and some other browsers a compatible format must be specified. For example:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;bestvideo[vcodec*=avc1]+bestaudio[acodec*=mp4a]/mp4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Subscribe to some of your favorite YouTube channels on the &lt;strong&gt;channels&lt;/strong&gt; page.&lt;/li&gt; &#xA; &lt;li&gt;On the &lt;strong&gt;downloads&lt;/strong&gt; page, click on &lt;em&gt;Rescan subscriptions&lt;/em&gt; to add videos from the subscribed channels to your Download queue or click on &lt;em&gt;Add to download queue&lt;/em&gt; to manually add Video IDs, links, channels or playlists.&lt;/li&gt; &#xA; &lt;li&gt;Click on &lt;em&gt;Start download&lt;/em&gt; and let &lt;strong&gt;Tube Archivist&lt;/strong&gt; to it&#39;s thing.&lt;/li&gt; &#xA; &lt;li&gt;Enjoy your archived collection!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Port Collisions&lt;/h3&gt; &#xA;&lt;p&gt;If you have a collision on port &lt;code&gt;8000&lt;/code&gt;, best solution is to use dockers &lt;em&gt;HOST_PORT&lt;/em&gt; and &lt;em&gt;CONTAINER_PORT&lt;/em&gt; distinction: To for example change the interface to port 9000 use &lt;code&gt;9000:8000&lt;/code&gt; in your docker-compose file.&lt;/p&gt; &#xA;&lt;p&gt;For more information on port collisions, check the docs.&lt;/p&gt; &#xA;&lt;h2&gt;Common Errors&lt;/h2&gt; &#xA;&lt;p&gt;Here is a list of common errors and their solutions.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;vm.max_map_count&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Elastic Search&lt;/strong&gt; in Docker requires the kernel setting of the host machine &lt;code&gt;vm.max_map_count&lt;/code&gt; to be set to at least 262144.&lt;/p&gt; &#xA;&lt;p&gt;To temporary set the value run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo sysctl -w vm.max_map_count=262144&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To apply the change permanently depends on your host operating system:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For example on Ubuntu Server add &lt;code&gt;vm.max_map_count = 262144&lt;/code&gt; to the file &lt;code&gt;/etc/sysctl.conf&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;On Arch based systems create a file &lt;code&gt;/etc/sysctl.d/max_map_count.conf&lt;/code&gt; with the content &lt;code&gt;vm.max_map_count = 262144&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;On any other platform look up in the documentation on how to pass kernel parameters.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Permissions for elasticsearch&lt;/h3&gt; &#xA;&lt;p&gt;If you see a message similar to &lt;code&gt;Unable to access &#39;path.repo&#39; (/usr/share/elasticsearch/data/snapshot)&lt;/code&gt; or &lt;code&gt;failed to obtain node locks, tried [/usr/share/elasticsearch/data]&lt;/code&gt; and &lt;code&gt;maybe these locations are not writable&lt;/code&gt; when initially starting elasticsearch, that probably means the container is not allowed to write files to the volume. To fix that issue, shutdown the container and on your host machine run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;chown 1000:0 -R /path/to/mount/point&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will match the permissions with the &lt;strong&gt;UID&lt;/strong&gt; and &lt;strong&gt;GID&lt;/strong&gt; of elasticsearch process within the container and should fix the issue.&lt;/p&gt; &#xA;&lt;h3&gt;Disk usage&lt;/h3&gt; &#xA;&lt;p&gt;The Elasticsearch index will turn to &lt;em&gt;&lt;strong&gt;read only&lt;/strong&gt;&lt;/em&gt; if the disk usage of the container goes above 95% until the usage drops below 90% again, you will see error messages like &lt;code&gt;disk usage exceeded flood-stage watermark&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Similar to that, TubeArchivist will become all sorts of messed up when running out of disk space. There are some error messages in the logs when that happens, but it&#39;s best to make sure to have enough disk space before starting to download.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;error setting rlimit&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you are seeing errors like &lt;code&gt;failed to create shim: OCI runtime create failed&lt;/code&gt; and &lt;code&gt;error during container init: error setting rlimits&lt;/code&gt;, this means docker can&#39;t set these limits, usually because they are set at another place or are incompatible because of other reasons. Solution is to remove the &lt;code&gt;ulimits&lt;/code&gt; key from the ES container in your docker compose and start again.&lt;/p&gt; &#xA;&lt;p&gt;This can happen if you have nested virtualizations, e.g. LXC running Docker in Proxmox.&lt;/p&gt; &#xA;&lt;h2&gt;Known limitations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Video files created by Tube Archivist need to be playable in your browser of choice. Not every codec is compatible with every browser and might require some testing with format selection.&lt;/li&gt; &#xA; &lt;li&gt;Every limitation of &lt;strong&gt;yt-dlp&lt;/strong&gt; will also be present in Tube Archivist. If &lt;strong&gt;yt-dlp&lt;/strong&gt; can&#39;t download or extract a video for any reason, Tube Archivist won&#39;t be able to either.&lt;/li&gt; &#xA; &lt;li&gt;There is no flexibility in naming of the media files.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;We have come far, nonetheless we are not short of ideas on how to improve and extend this project. Issues waiting for you to be tackled in no particular order:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Audio download&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Podcast mode to serve channel as mp3&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Random and repeat controls (&lt;a href=&#34;https://github.com/tubearchivist/tubearchivist/issues/108&#34;&gt;#108&lt;/a&gt;, &lt;a href=&#34;https://github.com/tubearchivist/tubearchivist/issues/220&#34;&gt;#220&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Auto play or play next link (&lt;a href=&#34;https://github.com/tubearchivist/tubearchivist/issues/226&#34;&gt;#226&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Multi language support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Show total video downloaded vs total videos available in channel&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Download or Ignore videos by keyword (&lt;a href=&#34;https://github.com/tubearchivist/tubearchivist/issues/163&#34;&gt;#163&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Custom searchable notes to videos, channels, playlists (&lt;a href=&#34;https://github.com/tubearchivist/tubearchivist/issues/144&#34;&gt;#144&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Search comments&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Search download queue&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Per user videos/channel/playlists&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Implemented:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Configure shorts, streams and video sizes per channel [2024-07-15]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; User created playlists [2024-04-10]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; User roles, aka read only user [2023-11-10]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add statistics of index [2023-09-03]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Implement &lt;a href=&#34;https://github.com/caronc/apprise&#34;&gt;Apprise&lt;/a&gt; for notifications [2023-08-05]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Download video comments [2022-11-30]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Show similar videos on video page [2022-11-30]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Implement complete offline media file import from json file [2022-08-20]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Filter and query in search form, search by url query [2022-07-23]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Make items in grid row configurable to use more of the screen [2022-06-04]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add passing browser cookies to yt-dlp [2022-05-08]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add &lt;a href=&#34;https://sponsor.ajay.app/&#34;&gt;SponsorBlock&lt;/a&gt; integration [2022-04-16]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Implement per channel settings [2022-03-26]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Subtitle download &amp;amp; indexing [2022-02-13]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Fancy advanced unified search interface [2022-01-08]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Auto rescan and auto download on a schedule [2021-12-17]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Optional automatic deletion of watched items after a specified time [2021-12-17]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Create playlists [2021-11-27]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Access control [2021-11-01]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Delete videos and channel [2021-10-16]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add thumbnail embed option [2021-10-16]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Create a github wiki for user documentation [2021-10-03]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Grid and list view for both channel and video list pages [2021-10-03]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Un-ignore videos [2021-10-03]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dynamic download queue [2021-09-26]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Backup and restore [2021-09-22]&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Scan your file system to index already downloaded videos [2021-09-14]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;User Scripts&lt;/h2&gt; &#xA;&lt;p&gt;This is a list of useful user scripts, generously created from folks like you to extend this project and its functionality. Make sure to check the respective repository links for detailed license information.&lt;/p&gt; &#xA;&lt;p&gt;This is your time to shine, &lt;a href=&#34;https://github.com/tubearchivist/tubearchivist/raw/master/CONTRIBUTING.md#user-scripts&#34;&gt;read this&lt;/a&gt; then open a PR to add your script here.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/danieljue/ta_dl_page_script&#34;&gt;danieljue/ta_dl_page_script&lt;/a&gt;: Helper browser script to prioritize a channels&#39; videos in download queue.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dot-mike/ta-scripts&#34;&gt;dot-mike/ta-scripts&lt;/a&gt;: A collection of personal scripts for managing TubeArchivist.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/DarkFighterLuke/4561b6bfbf83720493dc59171c58ac36&#34;&gt;DarkFighterLuke/ta_base_url_nginx&lt;/a&gt;: Set base URL with Nginx when you can&#39;t use subdomains.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lamusmaser/ta_migration_helper&#34;&gt;lamusmaser/ta_migration_helper&lt;/a&gt;: Advanced helper script for migration issues to TubeArchivist v0.4.4 or later.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/lamusmaser/837fb58f73ea0cad784a33497932e0dd&#34;&gt;lamusmaser/create_info_json&lt;/a&gt;: Script to generate &lt;code&gt;.info.json&lt;/code&gt; files using &lt;code&gt;ffmpeg&lt;/code&gt; collecting information from downloaded videos.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lamusmaser/ta_fix_for_video_redirection&#34;&gt;lamusmaser/ta_fix_for_video_redirection&lt;/a&gt;: Script to fix videos that were incorrectly indexed by YouTube&#39;s &#34;Video is Unavailable&#34; response.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RoninTech/ta-helper&#34;&gt;RoninTech/ta-helper&lt;/a&gt;: Helper script to provide a symlink association to reference TubeArchivist videos with their original titles.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tangyjoust/Tautulli-Notify-TubeArchivist-of-Plex-Watched-State&#34;&gt;tangyjoust/Tautulli-Notify-TubeArchivist-of-Plex-Watched-State&lt;/a&gt; Mark videos watched in Plex (through streaming not manually) through Tautulli back to TubeArchivist&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Dhs92/delete_shorts&#34;&gt;Dhs92/delete_shorts&lt;/a&gt;: A script to delete ALL YouTube Shorts from TubeArchivist&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;The best donation to &lt;strong&gt;Tube Archivist&lt;/strong&gt; is your time, take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/tubearchivist/tubearchivist/master/CONTRIBUTING.md&#34;&gt;contribution page&lt;/a&gt; to get started. Second best way to support the development is to provide for caffeinated beverages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sponsors/bbilly1&#34;&gt;GitHub Sponsor&lt;/a&gt; become a sponsor here on GitHub&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://paypal.me/bbilly1&#34;&gt;Paypal.me&lt;/a&gt; for a one time coffee&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.paypal.com/webapps/billing/plans/subscribe?plan_id=P-03770005GR991451KMFGVPMQ&#34;&gt;Paypal Subscription&lt;/a&gt; for a monthly coffee&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ko-fi.com/bbilly1&#34;&gt;ko-fi.com&lt;/a&gt; for an alternative platform&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notable mentions&lt;/h2&gt; &#xA;&lt;p&gt;This is a selection of places where this project has been featured on reddit, in the news, blogs or any other online media, newest on top.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;xda-developers.com&lt;/strong&gt;: 5 obscure self-hosted services worth checking out - Tube Archivist - To save your essential YouTube videos, [2024-10-13][&lt;a href=&#34;https://www.xda-developers.com/obscure-self-hosted-services/&#34;&gt;link&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;selfhosted.show&lt;/strong&gt;: why we&#39;re trying Tube Archivist, [2024-06-14][&lt;a href=&#34;https://selfhosted.show/125&#34;&gt;link&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ycombinator&lt;/strong&gt;: Tube Archivist on Hackernews front page, [2023-07-16][&lt;a href=&#34;https://news.ycombinator.com/item?id=36744395&#34;&gt;link&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;linux-community.de&lt;/strong&gt;: Tube Archivist bringt Ordnung in die Youtube-Sammlung, [German][2023-05-01][&lt;a href=&#34;https://www.linux-community.de/ausgaben/linuxuser/2023/05/tube-archivist-bringt-ordnung-in-die-youtube-sammlung/&#34;&gt;link&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;noted.lol&lt;/strong&gt;: Dev Debrief, An Interview With the Developer of Tube Archivist, [2023-03-30] [&lt;a href=&#34;https://noted.lol/dev-debrief-tube-archivist/&#34;&gt;link&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;console.substack.com&lt;/strong&gt;: Interview With Simon of Tube Archivist, [2023-01-29] [&lt;a href=&#34;https://console.substack.com/p/console-142#%C2%A7interview-with-simon-of-tube-archivist&#34;&gt;link&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;reddit.com&lt;/strong&gt;: Tube Archivist v0.3.0 - Now Archiving Comments, [2022-12-02] [&lt;a href=&#34;https://www.reddit.com/r/selfhosted/comments/zaonzp/tube_archivist_v030_now_archiving_comments/&#34;&gt;link&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;reddit.com&lt;/strong&gt;: Tube Archivist v0.2 - Now with Full Text Search, [2022-07-24] [&lt;a href=&#34;https://www.reddit.com/r/selfhosted/comments/w6jfa1/tube_archivist_v02_now_with_full_text_search/&#34;&gt;link&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;noted.lol&lt;/strong&gt;: How I Control What Media My Kids Watch Using Tube Archivist, [2022-03-27] [&lt;a href=&#34;https://noted.lol/how-i-control-what-media-my-kids-watch-using-tube-archivist/&#34;&gt;link&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;thehomelab.wiki&lt;/strong&gt;: Tube Archivist - A Youtube-DL Alternative on Steroids, [2022-01-27] [&lt;a href=&#34;https://thehomelab.wiki/books/news/page/tube-archivist-a-youtube-dl-alternative-on-steroids&#34;&gt;link&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;reddit.com&lt;/strong&gt;: Celebrating TubeArchivist v0.1, [2022-01-09] [&lt;a href=&#34;https://www.reddit.com/r/selfhosted/comments/rzh084/celebrating_tubearchivist_v01/&#34;&gt;link&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;linuxunplugged.com&lt;/strong&gt;: Pick: tubearchivist — Your self-hosted YouTube media server, [2021-09-11] [&lt;a href=&#34;https://linuxunplugged.com/425&#34;&gt;link&lt;/a&gt;] and [2021-10-05] [&lt;a href=&#34;https://linuxunplugged.com/426&#34;&gt;link&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;reddit.com&lt;/strong&gt;: Introducing Tube Archivist, your self hosted Youtube media server, [2021-09-12] [&lt;a href=&#34;https://www.reddit.com/r/selfhosted/comments/pmj07b/introducing_tube_archivist_your_self_hosted/&#34;&gt;link&lt;/a&gt;]&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>SlimeBoyOwO/LingChat</title>
    <updated>2025-07-09T01:34:51Z</updated>
    <id>tag:github.com,2025-07-09:/SlimeBoyOwO/LingChat</id>
    <link href="https://github.com/SlimeBoyOwO/LingChat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GPT chat with emotional expressions.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🐈✨ LingChat - 灵动の人工智能聊天陪伴助手&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/ffccbe79-87ed-4dbc-8e60-f400efbbab26&#34; alt=&#34;official&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🖥️ 支持操作系统：&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows、Linux均可运行。Linux用户请查看额外的使用说明。&lt;/li&gt; &#xA; &lt;li&gt;社区安装互助群：1055935861【纯安装问题请加入此群，不要去开发者群.jpg】&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🛠 功能列表&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 选择你喜欢的人物，陪伴你聊天度过寂寞的夜晚&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 内嵌永久记忆功能，优化和高自定义的RAG系统记录你们的一点一滴&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 使用自训练的AI情绪识别模型，自动判定AI的每次对话情绪&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 表情，动作，气泡随着AI的情绪改变，提供灵活的AI聊天体验&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 非RAG下有存档功能，用不同的方式攻略Galgame人物吧&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 搭配Vits语音服务或对话音效，用真实的耳语调动你的真心&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持自定义角色，可以用自己的oc或者游戏人物与自己对话&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 清爽的设置菜单，高度自定义的设置选项，可搭配不同背景和音乐聊天&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⭐ 快速上手&lt;/h2&gt; &#xA;&lt;h3&gt;Step 0: 开始之前的准备&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在DeepSeek或者其他大模型网站中，申请自己的API密钥，并且保证有余额供使用 -&amp;gt; &lt;a href=&#34;https://platform.deepseek.com/&#34;&gt;DeepSeek的官方API获取网站&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step 1: 下载软件&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在&lt;a href=&#34;https://github.com/SlimeBoyOwO/LingChat/releases&#34;&gt;release&lt;/a&gt;中，找到最新的版本，下载如 &lt;code&gt;LingChat.x.x.x.7z&lt;/code&gt; 的文件，下载完成后解压它。&lt;/li&gt; &#xA; &lt;li&gt;点击根目录下的 &lt;code&gt;LingChat.exe&lt;/code&gt; 启动程序&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;温馨提示：&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;解压完成后可能会发生 &lt;code&gt;LingChat.exe&lt;/code&gt; 不见了的情况，这多半是由于 Windows Defender 把它当病毒干掉了。需要手动打开&lt;strong&gt;Windows安全中心&lt;/strong&gt;，选择&lt;strong&gt;病毒和威胁防护&lt;/strong&gt;一栏，允许该威胁。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Step 2: 首次启动配置&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;启动程序后，点开右上角的菜单，点击【文字】部分的【进入设置页面】按钮，输入自己选用的大模型类型和API，模型信息等（&lt;strong&gt;这些是必填信息&lt;/strong&gt;）&lt;/li&gt; &#xA; &lt;li&gt;设置完毕后，滑动到最下方，点击保存配置。关闭黑不溜秋的窗口和LingChat程序，重新点击 &lt;code&gt;LingChat.exe&lt;/code&gt; 启动程序，就可以使用啦！&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;strong&gt;有些用户的电脑启动&lt;code&gt;LingChat.exe&lt;/code&gt;之后会无限卡在加载页，请在现代浏览器如谷歌中输入&lt;code&gt;localhost:8765&lt;/code&gt;进入程序&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;当你关闭程序准备重启初始化时候，务必保证前端和后端都关闭（exe或者浏览器的网页，还有cmd窗口），否则可能出现进去人物消失的情况&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Step 3：基础语音功能使用（从这里开始的以下步骤属于扩展功能，按需进行）&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;若要使用 &lt;code&gt;Vits&lt;/code&gt; 语音功能，请下载链接程序&lt;a href=&#34;https://github.com/Artrajz/vits-simple-api&#34;&gt;simple-vits-api&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;该项目实现了基于 &lt;code&gt;Vits&lt;/code&gt; 的简单语音合成 API。如果你是核显只能下载CPU版本。如果有独显建议下载 GPU 版本，速度快。&lt;/li&gt; &#xA; &lt;li&gt;程序默认监听 23456 语音端口，程序默认导入的模型是 &lt;a href=&#34;https://github.com/Zao-chen/ZcChat&#34;&gt;ZcChat 地址&lt;/a&gt; -&amp;gt; 讨论区 -&amp;gt; 角色示范（丛雨）-&amp;gt; &lt;a href=&#34;https://github.com/Zao-chen/zao-chen.github.io/releases/download/%E8%B5%84%E6%BA%90%E4%B8%8B%E8%BD%BD/YuzuSoft_Vits.zip&#34;&gt;YuzuSoft_Vits.zip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;模型下载好之后将压缩包 &lt;code&gt;YuzuSoft_Vits.zip&lt;/code&gt; 解压到 simple-vits-api 的/data/models 目录下，再双击根目录下的 &lt;code&gt;start.bat&lt;/code&gt; 启动就 ok 了&lt;/li&gt; &#xA; &lt;li&gt;如果需要使用其他角色声线，请在 &lt;code&gt;game_data/characters/角色名/settings.txt&lt;/code&gt; 中修改 &lt;code&gt;speaker_id&lt;/code&gt; 这个属性（0~6可选）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;视频演示中的灵灵，语音使用的是Style-Bert-Vits2，丛雨的vits模型还需要打磨暂未发布，可以先用Simple-Vits-API，效果差不多&lt;/li&gt; &#xA;  &lt;li&gt;视频中的音理，请在Discussions区下载人物包，语音请使用Style-Bert-Vits2&lt;/li&gt; &#xA;  &lt;li&gt;建议先使用Simple-Vits-API玩玩，国人开发下载方便，需要扩展再用Style-Bert-Vits2&lt;/li&gt; &#xA;  &lt;li&gt;经过反映，如果你的电脑是核显或者太久以前的电脑，单个语音可能要一分钟才能生成，而GPU可以1秒内生成，而且会有大量报错可能，核显用户大可能只能放弃语音功能了（哭哭）&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Step 4：视觉模型功能使用&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;从通义千问或者其他拥有视觉感知的大模型网站中，获取API -&amp;gt; &lt;a href=&#34;https://bailian.console.aliyun.com/?tab=api#/api&#34;&gt;阿里云的相关视觉模型API获取网站&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;在设置或者根目录的 &lt;code&gt;.env&lt;/code&gt; 文件中修改 &lt;code&gt;VD_API_KEY&lt;/code&gt;（图像识别模型的 API Key） 、&lt;code&gt;VD_BASE_URL&lt;/code&gt;（视觉模型的 API 访问地址）和 &lt;code&gt;VD_MODEL&lt;/code&gt;（视觉模型的模型类型）参数，例如： &lt;strong&gt;假设你要使用 &lt;a href=&#34;https://bailian.console.aliyun.com/?tab=model&amp;amp;accounttraceid=bef5c4d0bc384ad294f43f844ed11cd9thwc#/model-market/detail/qwen2.5-vl-7b-instruct&#34;&gt;qwen2.5-vl-7b-instruct&lt;/a&gt; 模型：&lt;/strong&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;VD_API_KEY&lt;/code&gt; 参数填写你自己的阿里云 API Key&lt;/li&gt; &#xA;   &lt;li&gt;查看 &lt;code&gt;VD_BASE_URL&lt;/code&gt; 需要点击&lt;a href=&#34;https://bailian.console.aliyun.com/?tab=model&amp;amp;accounttraceid=bef5c4d0bc384ad294f43f844ed11cd9thwc#/model-market/detail/qwen2.5-vl-7b-instruct&#34;&gt;页面&lt;/a&gt;右上角的 &lt;code&gt;查看API参考&lt;/code&gt;，之后你会在页面右侧看到以下代码，其中的 &lt;code&gt;base_url&lt;/code&gt; 变量值就是 &lt;code&gt;VD_BASE_URL&lt;/code&gt; 的值： &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import os&#xA;from openai import OpenAI&#xA;&#xA;client = OpenAI(&#xA;    # 若没有配置环境变量，请用百炼API Key将下行替换为：api_key=&#34;sk-xxx&#34;,&#xA;    api_key=os.getenv(&#34;DASHSCOPE_API_KEY&#34;),&#xA;    base_url=&#34;https://dashscope.aliyuncs.com/compatible-mode/v1&#34;, # VD_BASE_URL的值&#xA;)&#xA;completion = client.chat.completions.create(&#xA;    model=&#34;qwen-vl-plus&#34;,  # 此处以qwen-vl-plus为例，可按需更换模型名称。模型列表：https://help.aliyun.com/zh/model-studio/getting-started/models&#xA;    messages=[{&#34;role&#34;: &#34;user&#34;,&#34;content&#34;: [&#xA;            {&#34;type&#34;: &#34;image_url&#34;,&#xA;            &#34;image_url&#34;: {&#34;url&#34;: &#34;https://dashscope.oss-cn-beijing.aliyuncs.com/images/dog_and_girl.jpeg&#34;}},&#xA;            {&#34;type&#34;: &#34;text&#34;, &#34;text&#34;: &#34;这是什么&#34;},&#xA;            ]}]&#xA;    )&#xA;print(completion.model_dump_json())&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;VD_MODEL&lt;/code&gt; 参数是模型的名称，点击&lt;a href=&#34;https://bailian.console.aliyun.com/?tab=model&amp;amp;accounttraceid=bef5c4d0bc384ad294f43f844ed11cd9thwc#/model-market/detail/qwen2.5-vl-7b-instruct&#34;&gt;页面&lt;/a&gt;上方模型名称右侧的复制图标即可获取模型名称&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;阿里云 API 默认赠送额度，不需要充值， &lt;em&gt;而且对于这个项目肯定够用一辈子了&lt;/em&gt; 。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;温馨提示：&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;设定完毕后，可以通过在与AI对话的对话中，包含 &lt;code&gt;“看桌面”&lt;/code&gt; 或者 &lt;code&gt;“看看我的桌面”&lt;/code&gt; 来触发视觉感知，允许AI观察你的屏幕并做出回应&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Step 5: 扩展语音功能使用（Style-Bert-Vits2模型使用，更好的音色，可自定义训练）&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;从下方相关链接中，下载Style-Bert-Vits2的 &lt;a href=&#34;https://github.com/litagin02/Style-Bert-VITS2/releases&#34;&gt;Release&lt;/a&gt; 的 &lt;strong&gt;最新版本&lt;/strong&gt; ，解压&lt;/li&gt; &#xA; &lt;li&gt;先决定这个软件（安装后12GB）的安装位置，然后启动里面的&lt;code&gt;Install-Style-Bert-VITS2.bat&lt;/code&gt;文件（如果之后更改这个软件的位置会有Bug）&lt;/li&gt; &#xA; &lt;li&gt;耐心等待很长时间后，这个软件会安装好。由于这个项目庞大，所以等待时间非常长&lt;/li&gt; &#xA; &lt;li&gt;下载完毕后，在 &lt;code&gt;model_assests&lt;/code&gt; 目录中，把下载好的Bert-Vits模型解压进去&lt;/li&gt; &#xA; &lt;li&gt;打开程序的目录，里面有个 &lt;code&gt;server.bat&lt;/code&gt; ，启动它即可使用&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;温馨提示：&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;要是想使用这个功能，需要在 &lt;code&gt;game_data/characters/&amp;lt;角色名&amp;gt;/settings.txt&lt;/code&gt; 中设定 &lt;code&gt;model_name&lt;/code&gt; 的参数为导入的模型的名字&lt;br&gt; 模型的名字可以通过启动&lt;code&gt;app.bat&lt;/code&gt;中的人物列表中查看&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Step 6: 加入最新版的测试&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;我们一直在更新LingChat，所有更新都会随时推送到&lt;a href=&#34;https://github.com/SlimeBoyOwO/LingChat/tree/develop&#34;&gt;develop&lt;/a&gt;中，我们也会在&lt;a href=&#34;https://github.com/SlimeBoyOwO/LingChat/issues&#34;&gt;issues&lt;/a&gt;中发布开发日志。&lt;/li&gt; &#xA; &lt;li&gt;你可以参考&lt;a href=&#34;https://github.com/SlimeBoyOwO/LingChat/raw/develop/others/document/%E6%BA%90%E4%BB%A3%E7%A0%81%E4%BD%BF%E7%94%A8.md&#34;&gt;源代码使用教程&lt;/a&gt;来使用LingChat的源代码，并随时获取最新的develop开发版更新。&lt;/li&gt; &#xA; &lt;li&gt;开发版是不稳定的版本，如果遇到任何Bug，欢迎向我们反馈！&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔗 相关 &amp;amp; 致谢链接&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Zao-chen/ZcChat&#34;&gt;Zcchat&lt;/a&gt;: 本项目的灵感来源，可以在这里找到 &lt;code&gt;Vits&lt;/code&gt; 模型和人物素材。可以的话也帮他们点个stars吧❤&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Artrajz/vits-simple-api&#34;&gt;Simple-Vits-API&lt;/a&gt;: 该项目实现了基于 &lt;code&gt;VITS&lt;/code&gt; 的简单语音合成 API。如果你不是核显建议下载 GPU 版本，速度快。核显就用CPU。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/litagin02/Style-Bert-VITS2&#34;&gt;Style-Bert-VITS2&lt;/a&gt;：该项目实现了 &lt;code&gt;Bert-VITS&lt;/code&gt; 的语音合成和训练，你可以用这个进行语音训练和推理，少量数据量就可以达到很棒效果！&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Aikoyori/ProgrammingVTuberLogos&#34;&gt;ProgrammingVTuberLogos&lt;/a&gt;：LingChat 的标题风格，可爱滴捏，画风参考这个项目~&lt;/li&gt; &#xA; &lt;li&gt;本项目的实现离不开这些优秀开源作品的先驱者，在这里我们送上由衷的致谢🌼&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🌸 一些小话&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本项目为了快速开发用了很多 AI 工具，有做的不好的地方欢迎指出！我们欢迎各位开发者或用户提出issues！&lt;/li&gt; &#xA; &lt;li&gt;感谢一路结识的开发者，都是 &lt;strong&gt;香软可爱&lt;/strong&gt; 又厉害的大佬们~ 如果你有开发意向可以联系我！开发者群号就藏在GitHub中❤&lt;/li&gt; &#xA; &lt;li&gt;本项目更多作为一个超小型的学习项目，由于文件结构非常简单， &lt;del&gt;欢迎有兴趣的人学习&lt;/del&gt; 。现在变大了，应用了很多软件工程的架构思想，也欢迎学习啦qwq&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔍 其他&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;本项目使用的气泡+音效素材来源于碧蓝档案，其中对话哔哔音效来源于Undertale，请勿商用&lt;br&gt; 默认简单狼狼立绘是自绘，表情差分源于 AI + 人工修改，如果你想自己创作可使用 NovelAI 网站或者自己画&lt;br&gt; 请对AI生成的东西和使用负责，不要肆意传播不良信息&lt;br&gt; 有其他问题可以 B 站私信捏~&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;⭐️ 星星&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.star-history.com/#SlimeBoyOwO/LingChat&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=SlimeBoyOwO/LingChat&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;© LingChat 制作团队&lt;/p&gt;</summary>
  </entry>
</feed>