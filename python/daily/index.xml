<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-30T01:34:14Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>reflex-dev/reflex</title>
    <updated>2023-10-30T01:34:14Z</updated>
    <id>tag:github.com,2023-10-30:/reflex-dev/reflex</id>
    <link href="https://github.com/reflex-dev/reflex" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üï∏ Web apps in pure Python üêç&lt;/p&gt;&lt;hr&gt;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;+ Searching for Pynecone? You are in the right repo. Pynecone has been renamed to Reflex. +&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/reflex-dev/reflex/main/docs/images/reflex_dark.svg#gh-light-mode-only&#34; alt=&#34;Reflex Logo&#34; width=&#34;300px&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/reflex-dev/reflex/main/docs/images/reflex_light.svg#gh-dark-mode-only&#34; alt=&#34;Reflex Logo&#34; width=&#34;300px&#34;&gt; &#xA; &lt;hr&gt; &#xA; &lt;h3&gt;&lt;strong&gt;‚ú® Performant, customizable web apps in pure Python. Deploy in seconds. ‚ú®&lt;/strong&gt;&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://badge.fury.io/py/reflex&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/reflex.svg?sanitize=true&#34; alt=&#34;PyPI version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/pynecone-io/pynecone/actions/workflows/integration.yml/badge.svg?sanitize=true&#34; alt=&#34;tests&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/pyversions/reflex.svg?sanitize=true&#34; alt=&#34;versions&#34;&gt; &lt;a href=&#34;https://reflex.dev/docs/getting-started/introduction&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Documentation%20-Introduction%20-%20%23007ec6&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/T5WSbC2YtQ&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1029853095527727165?color=%237289da&amp;amp;label=Discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/reflex-dev/reflex/raw/main/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://github.com/reflex-dev/reflex/raw/main/docs/zh/zh_cn/README.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | &lt;a href=&#34;https://github.com/reflex-dev/reflex/raw/main/docs/zh/zh_tw/README.md&#34;&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/a&gt; | &lt;a href=&#34;https://github.com/reflex-dev/reflex/raw/main/docs/tr/README.md&#34;&gt;T√ºrk√ße&lt;/a&gt; | &lt;a href=&#34;https://github.com/reflex-dev/reflex/raw/main/docs/in/README.md&#34;&gt;‡§π‡§ø‡§Ç‡§¶‡•Ä&lt;/a&gt; | &lt;a href=&#34;https://github.com/reflex-dev/reflex/raw/main/docs/pt/pt_br/README.md&#34;&gt;Portugu√™s (Brasil)&lt;/a&gt; | &lt;a href=&#34;https://github.com/reflex-dev/reflex/raw/main/docs/it/README.md&#34;&gt;Italiano&lt;/a&gt; | &lt;a href=&#34;https://github.com/reflex-dev/reflex/raw/main/docs/kr/README.md&#34;&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Installation&lt;/h2&gt; &#xA;&lt;p&gt;Open a terminal and run (Requires Python 3.8+):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install reflex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ü•≥ Create your first app&lt;/h2&gt; &#xA;&lt;p&gt;Installing &lt;code&gt;reflex&lt;/code&gt; also installs the &lt;code&gt;reflex&lt;/code&gt; command line tool.&lt;/p&gt; &#xA;&lt;p&gt;Test that the install was successful by creating a new project. (Replace &lt;code&gt;my_app_name&lt;/code&gt; with your project name):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir my_app_name&#xA;cd my_app_name&#xA;reflex init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command initializes a template app in your new directory.&lt;/p&gt; &#xA;&lt;p&gt;You can run this app in development mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;reflex run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see your app running at &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now you can modify the source code in &lt;code&gt;my_app_name/my_app_name.py&lt;/code&gt;. Reflex has fast refreshes so you can see your changes instantly when you save your code.&lt;/p&gt; &#xA;&lt;h2&gt;ü´ß Example App&lt;/h2&gt; &#xA;&lt;p&gt;Let&#39;s go over an example: creating an image generation UI around DALL¬∑E. For simplicity, we just call the OpenAI API, but you could replace this with an ML model run locally.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/reflex-dev/reflex/main/docs/images/dalle.gif&#34; alt=&#34;A frontend wrapper for DALL¬∑E, shown in the process of generating an image.&#34; width=&#34;550&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;p&gt;Here is the complete code to create this. This is all done in one Python file!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import reflex as rx&#xA;import openai&#xA;&#xA;openai.api_key = &#34;YOUR_API_KEY&#34;&#xA;&#xA;class State(rx.State):&#xA;    &#34;&#34;&#34;The app state.&#34;&#34;&#34;&#xA;    prompt = &#34;&#34;&#xA;    image_url = &#34;&#34;&#xA;    processing = False&#xA;    complete = False&#xA;&#xA;    def get_image(self):&#xA;        &#34;&#34;&#34;Get the image from the prompt.&#34;&#34;&#34;&#xA;        if self.prompt == &#34;&#34;:&#xA;            return rx.window_alert(&#34;Prompt Empty&#34;)&#xA;&#xA;        self.processing, self.complete = True, False&#xA;        yield&#xA;        response = openai.Image.create(prompt=self.prompt, n=1, size=&#34;1024x1024&#34;)&#xA;        self.image_url = response[&#34;data&#34;][0][&#34;url&#34;]&#xA;        self.processing, self.complete = False, True&#xA;        &#xA;&#xA;def index():&#xA;    return rx.center(&#xA;        rx.vstack(&#xA;            rx.heading(&#34;DALL¬∑E&#34;),&#xA;            rx.input(placeholder=&#34;Enter a prompt&#34;, on_blur=State.set_prompt),&#xA;            rx.button(&#xA;                &#34;Generate Image&#34;,&#xA;                on_click=State.get_image,&#xA;                is_loading=State.processing,&#xA;                width=&#34;100%&#34;,&#xA;            ),&#xA;            rx.cond(&#xA;                State.complete,&#xA;                     rx.image(&#xA;                         src=State.image_url,&#xA;                         height=&#34;25em&#34;,&#xA;                         width=&#34;25em&#34;,&#xA;                    )&#xA;            ),&#xA;            padding=&#34;2em&#34;,&#xA;            shadow=&#34;lg&#34;,&#xA;            border_radius=&#34;lg&#34;,&#xA;        ),&#xA;        width=&#34;100%&#34;,&#xA;        height=&#34;100vh&#34;,&#xA;    )&#xA;&#xA;# Add state and page to the app.&#xA;app = rx.App()&#xA;app.add_page(index, title=&#34;reflex:DALL¬∑E&#34;)&#xA;app.compile()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Let&#39;s break this down.&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Reflex UI&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s start with the UI.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def index():&#xA;    return rx.center(&#xA;        ...&#xA;    )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This &lt;code&gt;index&lt;/code&gt; function defines the frontend of the app.&lt;/p&gt; &#xA;&lt;p&gt;We use different components such as &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;vstack&lt;/code&gt;, &lt;code&gt;input&lt;/code&gt;, and &lt;code&gt;button&lt;/code&gt; to build the frontend. Components can be nested within each other to create complex layouts. And you can use keyword args to style them with the full power of CSS.&lt;/p&gt; &#xA;&lt;p&gt;Reflex comes with &lt;a href=&#34;https://reflex.dev/docs/library&#34;&gt;60+ built-in components&lt;/a&gt; to help you get started. We are actively adding more components, and it&#39;s easy to &lt;a href=&#34;https://reflex.dev/docs/advanced-guide/wrapping-react&#34;&gt;create your own components&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;State&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Reflex represents your UI as a function of your state.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class State(rx.State):&#xA;    &#34;&#34;&#34;The app state.&#34;&#34;&#34;&#xA;    prompt = &#34;&#34;&#xA;    image_url = &#34;&#34;&#xA;    processing = False&#xA;    complete = False&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The state defines all the variables (called vars) in an app that can change and the functions that change them.&lt;/p&gt; &#xA;&lt;p&gt;Here the state is comprised of a &lt;code&gt;prompt&lt;/code&gt; and &lt;code&gt;image_url&lt;/code&gt;. There are also the booleans &lt;code&gt;processing&lt;/code&gt; and &lt;code&gt;complete&lt;/code&gt; to indicate when to show the circular progress and image.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Event Handlers&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def get_image(self):&#xA;    &#34;&#34;&#34;Get the image from the prompt.&#34;&#34;&#34;&#xA;    if self.prompt == &#34;&#34;:&#xA;        return rx.window_alert(&#34;Prompt Empty&#34;)&#xA;&#xA;    self.processing, self.complete = True, False&#xA;    yield&#xA;    response = openai.Image.create(prompt=self.prompt, n=1, size=&#34;1024x1024&#34;)&#xA;    self.image_url = response[&#34;data&#34;][0][&#34;url&#34;]&#xA;    self.processing, self.complete = False, True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Within the state, we define functions called event handlers that change the state vars. Event handlers are the way that we can modify the state in Reflex. They can be called in response to user actions, such as clicking a button or typing in a text box. These actions are called events.&lt;/p&gt; &#xA;&lt;p&gt;Our DALL¬∑E. app has an event handler, &lt;code&gt;get_image&lt;/code&gt; to which get this image from the OpenAI API. Using &lt;code&gt;yield&lt;/code&gt; in the middle of an event handler will cause the UI to update. Otherwise the UI will update at the end of the event handler.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Routing&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Finally, we define our app.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;app = rx.App()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We add a page from the root of the app to the index component. We also add a title that will show up in the page preview/browser tab.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;app.add_page(index, title=&#34;DALL-E&#34;)&#xA;app.compile()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can create a multi-page app by adding more pages.&lt;/p&gt; &#xA;&lt;h2&gt;üìë Resources&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;üìë &lt;a href=&#34;https://reflex.dev/docs/getting-started/introduction&#34;&gt;Docs&lt;/a&gt; &amp;nbsp; | &amp;nbsp; üóûÔ∏è &lt;a href=&#34;https://reflex.dev/blog&#34;&gt;Blog&lt;/a&gt; &amp;nbsp; | &amp;nbsp; üì± &lt;a href=&#34;https://reflex.dev/docs/library&#34;&gt;Component Library&lt;/a&gt; &amp;nbsp; | &amp;nbsp; üñºÔ∏è &lt;a href=&#34;https://reflex.dev/docs/gallery&#34;&gt;Gallery&lt;/a&gt; &amp;nbsp; | &amp;nbsp; üõ∏ &lt;a href=&#34;https://reflex.dev/docs/hosting/deploy&#34;&gt;Deployment&lt;/a&gt; &amp;nbsp;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;‚úÖ Status&lt;/h2&gt; &#xA;&lt;p&gt;Reflex launched in December 2022 with the name Pynecone.&lt;/p&gt; &#xA;&lt;p&gt;As of July 2023, we are in the &lt;strong&gt;Public Beta&lt;/strong&gt; stage.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;Public Alpha&lt;/strong&gt;: Anyone can install and use Reflex. There may be issues, but we are working to resolve them actively.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üî∂&lt;/span&gt; &lt;strong&gt;Public Beta&lt;/strong&gt;: Stable enough for non-enterprise use-cases.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Public Hosting Beta&lt;/strong&gt;: &lt;em&gt;Optionally&lt;/em&gt;, deploy and host your apps on Reflex!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Public&lt;/strong&gt;: Reflex is production ready.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Reflex has new releases and features coming every week! Make sure to &lt;span&gt;‚≠ê&lt;/span&gt; star and &lt;span&gt;üëÄ&lt;/span&gt; watch this repository to stay up to date.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions of any size! Below are some good ways to get started in the Reflex community.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Join Our Discord&lt;/strong&gt;: Our &lt;a href=&#34;https://discord.gg/T5WSbC2YtQ&#34;&gt;Discord&lt;/a&gt; is the best place to get help on your Reflex project and to discuss how you can contribute.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GitHub Discussions&lt;/strong&gt;: A great way to talk about features you want added or things that are confusing/need clarification.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GitHub Issues&lt;/strong&gt;: These are an excellent way to report bugs. Additionally, you can try and solve an existing issue and submit a PR.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We are actively looking for contributors, no matter your skill level or experience.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Reflex is open-source and licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/reflex-dev/reflex/main/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>THUDM/ChatGLM3</title>
    <updated>2023-10-30T01:34:14Z</updated>
    <id>tag:github.com,2023-10-30:/THUDM/ChatGLM3</id>
    <link href="https://github.com/THUDM/ChatGLM3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ChatGLM3 series: Open Bilingual Chat LLMs | ÂºÄÊ∫êÂèåËØ≠ÂØπËØùËØ≠Ë®ÄÊ®°Âûã&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGLM3&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; ü§ó &lt;a href=&#34;https://huggingface.co/THUDM/chatglm3-6b&#34; target=&#34;_blank&#34;&gt;HF Repo&lt;/a&gt; ‚Ä¢ ü§ñ &lt;a href=&#34;https://modelscope.cn/models/ZhipuAI/chatglm3-6b&#34; target=&#34;_blank&#34;&gt;ModelScope&lt;/a&gt; ‚Ä¢ üê¶ &lt;a href=&#34;https://twitter.com/thukeg&#34; target=&#34;_blank&#34;&gt;Twitter&lt;/a&gt; ‚Ä¢ üìÉ &lt;a href=&#34;https://arxiv.org/abs/2103.10360&#34; target=&#34;_blank&#34;&gt;[GLM@ACL 22]&lt;/a&gt; &lt;a href=&#34;https://github.com/THUDM/GLM&#34; target=&#34;_blank&#34;&gt;[GitHub]&lt;/a&gt; ‚Ä¢ üìÉ &lt;a href=&#34;https://arxiv.org/abs/2210.02414&#34; target=&#34;_blank&#34;&gt;[GLM-130B@ICLR 23]&lt;/a&gt; &lt;a href=&#34;https://github.com/THUDM/GLM-130B&#34; target=&#34;_blank&#34;&gt;[GitHub]&lt;/a&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; üëã Âä†ÂÖ•Êàë‰ª¨ÁöÑ &lt;a href=&#34;https://join.slack.com/t/chatglm/shared_invite/zt-25ti5uohv-A_hs~am_D3Q8XPZMpj7wwQ&#34; target=&#34;_blank&#34;&gt;Slack&lt;/a&gt; Âíå &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/ChatGLM3/main/resources/WECHAT.md&#34; target=&#34;_blank&#34;&gt;WeChat&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; üìçÂú® &lt;a href=&#34;https://www.chatglm.cn&#34;&gt;chatglm.cn&lt;/a&gt; ‰ΩìÈ™åÊõ¥Â§ßËßÑÊ®°ÁöÑ ChatGLM Ê®°Âûã„ÄÇ &lt;/p&gt; &#xA;&lt;h2&gt;‰ªãÁªç&lt;/h2&gt; &#xA;&lt;p&gt;ChatGLM3 ÊòØÊô∫Ë∞±AIÂíåÊ∏ÖÂçéÂ§ßÂ≠¶ KEG ÂÆûÈ™åÂÆ§ËÅîÂêàÂèëÂ∏ÉÁöÑÊñ∞‰∏Ä‰ª£ÂØπËØùÈ¢ÑËÆ≠ÁªÉÊ®°Âûã„ÄÇChatGLM3-6B ÊòØ ChatGLM3 Á≥ªÂàó‰∏≠ÁöÑÂºÄÊ∫êÊ®°ÂûãÔºåÂú®‰øùÁïô‰∫ÜÂâç‰∏§‰ª£Ê®°ÂûãÂØπËØùÊµÅÁïÖ„ÄÅÈÉ®ÁΩ≤Èó®Êßõ‰ΩéÁ≠â‰ºóÂ§ö‰ºòÁßÄÁâπÊÄßÁöÑÂü∫Á°Ä‰∏äÔºåChatGLM3-6B ÂºïÂÖ•‰∫ÜÂ¶Ç‰∏ãÁâπÊÄßÔºö&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Êõ¥Âº∫Â§ßÁöÑÂü∫Á°ÄÊ®°ÂûãÔºö&lt;/strong&gt; ChatGLM3-6B ÁöÑÂü∫Á°ÄÊ®°Âûã ChatGLM3-6B-Base ÈááÁî®‰∫ÜÊõ¥Â§öÊ†∑ÁöÑËÆ≠ÁªÉÊï∞ÊçÆ„ÄÅÊõ¥ÂÖÖÂàÜÁöÑËÆ≠ÁªÉÊ≠•Êï∞ÂíåÊõ¥ÂêàÁêÜÁöÑËÆ≠ÁªÉÁ≠ñÁï•„ÄÇÂú®ËØ≠‰πâ„ÄÅÊï∞Â≠¶„ÄÅÊé®ÁêÜ„ÄÅ‰ª£Á†Å„ÄÅÁü•ËØÜÁ≠â‰∏çÂêåËßíÂ∫¶ÁöÑÊï∞ÊçÆÈõÜ‰∏äÊµãËØÑÊòæÁ§∫Ôºå&lt;strong&gt;ChatGLM3-6B-Base ÂÖ∑ÊúâÂú® 10B ‰ª•‰∏ãÁöÑÂü∫Á°ÄÊ®°Âûã‰∏≠ÊúÄÂº∫ÁöÑÊÄßËÉΩ&lt;/strong&gt;„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Êõ¥ÂÆåÊï¥ÁöÑÂäüËÉΩÊîØÊåÅÔºö&lt;/strong&gt; ChatGLM3-6B ÈááÁî®‰∫ÜÂÖ®Êñ∞ËÆæËÆ°ÁöÑ &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/ChatGLM3/main/PROMPT.md&#34;&gt;Prompt Ê†ºÂºè&lt;/a&gt;ÔºåÈô§Ê≠£Â∏∏ÁöÑÂ§öËΩÆÂØπËØùÂ§ñ„ÄÇÂêåÊó∂ÂéüÁîüÊîØÊåÅ&lt;a href=&#34;https://raw.githubusercontent.com/THUDM/ChatGLM3/main/tool_using/README.md&#34;&gt;Â∑•ÂÖ∑Ë∞ÉÁî®&lt;/a&gt;ÔºàFunction CallÔºâ„ÄÅ‰ª£Á†ÅÊâßË°åÔºàCode InterpreterÔºâÂíå Agent ‰ªªÂä°Á≠âÂ§çÊùÇÂú∫ÊôØ„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Êõ¥ÂÖ®Èù¢ÁöÑÂºÄÊ∫êÂ∫èÂàóÔºö&lt;/strong&gt; Èô§‰∫ÜÂØπËØùÊ®°Âûã &lt;a href=&#34;https://huggingface.co/THUDM/chatglm3-6b&#34;&gt;ChatGLM3-6B&lt;/a&gt; Â§ñÔºåËøòÂºÄÊ∫ê‰∫ÜÂü∫Á°ÄÊ®°Âûã &lt;a href=&#34;https://huggingface.co/THUDM/chatglm3-6b-base&#34;&gt;ChatGLM3-6B-Base&lt;/a&gt;„ÄÅÈïøÊñáÊú¨ÂØπËØùÊ®°Âûã &lt;a href=&#34;https://huggingface.co/THUDM/chatglm3-6b-32k&#34;&gt;ChatGLM3-6B-32K&lt;/a&gt;„ÄÇ‰ª•‰∏äÊâÄÊúâÊùÉÈáçÂØπÂ≠¶ÊúØÁ†îÁ©∂&lt;strong&gt;ÂÆåÂÖ®ÂºÄÊîæ&lt;/strong&gt;ÔºåÂú®Â°´ÂÜô&lt;a href=&#34;https://open.bigmodel.cn/mla/form&#34;&gt;ÈóÆÂç∑&lt;/a&gt;ËøõË°åÁôªËÆ∞Âêé&lt;strong&gt;‰∫¶ÂÖÅËÆ∏ÂÖçË¥πÂïÜ‰∏ö‰ΩøÁî®&lt;/strong&gt;„ÄÇ&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;ChatGLM3 ÂºÄÊ∫êÊ®°ÂûãÊó®Âú®‰∏éÂºÄÊ∫êÁ§æÂå∫‰∏ÄËµ∑Êé®Âä®Â§ßÊ®°ÂûãÊäÄÊúØÂèëÂ±ïÔºåÊÅ≥ËØ∑ÂºÄÂèëËÄÖÂíåÂ§ßÂÆ∂ÈÅµÂÆà&lt;a href=&#34;https://raw.githubusercontent.com/THUDM/ChatGLM3/main/MODEL_LICENSE&#34;&gt;ÂºÄÊ∫êÂçèËÆÆ&lt;/a&gt;ÔºåÂãøÂ∞ÜÂºÄÊ∫êÊ®°ÂûãÂíå‰ª£Á†ÅÂèäÂü∫‰∫éÂºÄÊ∫êÈ°πÁõÆ‰∫ßÁîüÁöÑË°çÁîüÁâ©Áî®‰∫é‰ªª‰ΩïÂèØËÉΩÁªôÂõΩÂÆ∂ÂíåÁ§æ‰ºöÂ∏¶Êù•Âç±ÂÆ≥ÁöÑÁî®ÈÄî‰ª•ÂèäÁî®‰∫é‰ªª‰ΩïÊú™ÁªèËøáÂÆâÂÖ®ËØÑ‰º∞ÂíåÂ§áÊ°àÁöÑÊúçÂä°„ÄÇÁõÆÂâçÔºåÊú¨È°πÁõÆÂõ¢ÈòüÊú™Âü∫‰∫é &lt;strong&gt;ChatGLM3 ÂºÄÊ∫êÊ®°Âûã&lt;/strong&gt;ÂºÄÂèë‰ªª‰ΩïÂ∫îÁî®ÔºåÂåÖÊã¨ÁΩëÈ°µÁ´Ø„ÄÅÂÆâÂçì„ÄÅËãπÊûú iOS Âèä Windows App Á≠âÂ∫îÁî®„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Â∞ΩÁÆ°Ê®°ÂûãÂú®ËÆ≠ÁªÉÁöÑÂêÑ‰∏™Èò∂ÊÆµÈÉΩÂ∞ΩÂäõÁ°Æ‰øùÊï∞ÊçÆÁöÑÂêàËßÑÊÄßÂíåÂáÜÁ°ÆÊÄßÔºå‰ΩÜÁî±‰∫é ChatGLM3-6B Ê®°ÂûãËßÑÊ®°ËæÉÂ∞èÔºå‰∏îÊ®°ÂûãÂèóÊ¶ÇÁéáÈöèÊú∫ÊÄßÂõ†Á¥†ÂΩ±ÂìçÔºåÊó†Ê≥ï‰øùËØÅËæìÂá∫ÂÜÖÂÆπÁöÑÂáÜÁ°Æ„ÄÇÂêåÊó∂Ê®°ÂûãÁöÑËæìÂá∫ÂÆπÊòìË¢´Áî®Êà∑ÁöÑËæìÂÖ•ËØØÂØº„ÄÇ&lt;strong&gt;Êú¨È°πÁõÆ‰∏çÊâøÊãÖÂºÄÊ∫êÊ®°ÂûãÂíå‰ª£Á†ÅÂØºËá¥ÁöÑÊï∞ÊçÆÂÆâÂÖ®„ÄÅËàÜÊÉÖÈ£éÈô©ÊàñÂèëÁîü‰ªª‰ΩïÊ®°ÂûãË¢´ËØØÂØº„ÄÅÊª•Áî®„ÄÅ‰º†Êí≠„ÄÅ‰∏çÂΩìÂà©Áî®ËÄå‰∫ßÁîüÁöÑÈ£éÈô©ÂíåË¥£‰ªª„ÄÇ&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ê®°ÂûãÂàóË°®&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Model&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Seq Length&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Download&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ChatGLM3-6B&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8k&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://huggingface.co/THUDM/chatglm3-6b&#34;&gt;HuggingFace&lt;/a&gt; | &lt;a href=&#34;https://modelscope.cn/models/ZhipuAI/chatglm3-6b&#34;&gt;ModelScope&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ChatGLM3-6B-Base&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8k&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://huggingface.co/THUDM/chatglm3-6b-base&#34;&gt;HuggingFace&lt;/a&gt; | &lt;a href=&#34;https://modelscope.cn/models/ZhipuAI/chatglm3-6b-base&#34;&gt;ModelScope&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ChatGLM3-6B-32K&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;32k&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://huggingface.co/THUDM/chatglm3-6b-32k&#34;&gt;HuggingFace&lt;/a&gt; | &lt;a href=&#34;https://modelscope.cn/models/ZhipuAI/chatglm3-6b-32k&#34;&gt;ModelScope&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;ËØÑÊµãÁªìÊûú&lt;/h2&gt; &#xA;&lt;h3&gt;ÂÖ∏Âûã‰ªªÂä°&lt;/h3&gt; &#xA;&lt;p&gt;Êàë‰ª¨ÈÄâÂèñ‰∫Ü 8 ‰∏™‰∏≠Ëã±ÊñáÂÖ∏ÂûãÊï∞ÊçÆÈõÜÔºåÂú® ChatGLM3-6B (base) ÁâàÊú¨‰∏äËøõË°å‰∫ÜÊÄßËÉΩÊµãËØï„ÄÇ&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;GSM8K&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MATH&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;BBH&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MMLU&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;C-Eval&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;CMMLU&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MBPP&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;AGIEval&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ChatGLM2-6B-Base&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;32.4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;33.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;47.9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;51.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;50.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Best Baseline&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;52.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;45.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;60.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;63.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;62.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;47.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;45.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ChatGLM3-6B-Base&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;72.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;25.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;66.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;61.4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;69.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;67.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;52.4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;53.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Best Baseline ÊåáÁöÑÊòØÊ®°ÂûãÂèÇÊï∞Âú® 10B ‰ª•‰∏ã„ÄÅÂú®ÂØπÂ∫îÊï∞ÊçÆÈõÜ‰∏äË°®Áé∞ÊúÄÂ•ΩÁöÑÈ¢ÑËÆ≠ÁªÉÊ®°ÂûãÔºå‰∏çÂåÖÊã¨Âè™ÈíàÂØπÊüê‰∏ÄÈ°π‰ªªÂä°ËÆ≠ÁªÉËÄåÊú™‰øùÊåÅÈÄöÁî®ËÉΩÂäõÁöÑÊ®°Âûã„ÄÇ&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ÂØπ ChatGLM3-6B-Base ÁöÑÊµãËØï‰∏≠ÔºåBBH ÈááÁî® 3-shot ÊµãËØïÔºåÈúÄË¶ÅÊé®ÁêÜÁöÑ GSM8K„ÄÅMATH ÈááÁî® 0-shot CoT ÊµãËØïÔºåMBPP ÈááÁî® 0-shot ÁîüÊàêÂêéËøêË°åÊµã‰æãËÆ°ÁÆó Pass@1 ÔºåÂÖ∂‰ªñÈÄâÊã©È¢òÁ±ªÂûãÊï∞ÊçÆÈõÜÂùáÈááÁî® 0-shot ÊµãËØï„ÄÇ&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Êàë‰ª¨Âú®Â§ö‰∏™ÈïøÊñáÊú¨Â∫îÁî®Âú∫ÊôØ‰∏ãÂØπ ChatGLM3-6B-32K ËøõË°å‰∫Ü‰∫∫Â∑•ËØÑ‰º∞ÊµãËØï„ÄÇ‰∏é‰∫å‰ª£Ê®°ÂûãÁõ∏ÊØîÔºåÂÖ∂ÊïàÊûúÂπ≥ÂùáÊèêÂçá‰∫ÜË∂ÖËøá 50%„ÄÇÂú®ËÆ∫ÊñáÈòÖËØª„ÄÅÊñáÊ°£ÊëòË¶ÅÂíåË¥¢Êä•ÂàÜÊûêÁ≠âÂ∫îÁî®‰∏≠ÔºåËøôÁßçÊèêÂçáÂ∞§‰∏∫ÊòæËëó„ÄÇÊ≠§Â§ñÔºåÊàë‰ª¨ËøòÂú® LongBench ËØÑÊµãÈõÜ‰∏äÂØπÊ®°ÂûãËøõË°å‰∫ÜÊµãËØïÔºåÂÖ∑‰ΩìÁªìÊûúÂ¶Ç‰∏ãË°®ÊâÄÁ§∫&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Âπ≥Âùá&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Summary&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Single-Doc QA&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Multi-Doc QA&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Code&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Few-shot&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Synthetic&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ChatGLM2-6B-32K&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;41.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;24.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;37.6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;34.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;52.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;51.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;47.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ChatGLM3-6B-32K&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;50.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;26.6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;45.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;46.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;56.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;61.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;65&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;‰ΩøÁî®ÊñπÂºè&lt;/h2&gt; &#xA;&lt;h3&gt;ÁéØÂ¢ÉÂÆâË£Ö&lt;/h3&gt; &#xA;&lt;p&gt;È¶ñÂÖàÈúÄË¶Å‰∏ãËΩΩÊú¨‰ªìÂ∫ìÔºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/THUDM/ChatGLM3&#xA;cd ChatGLM3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÁÑ∂Âêé‰ΩøÁî® pip ÂÆâË£Ö‰æùËµñÔºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÂÖ∂‰∏≠ &lt;code&gt;transformers&lt;/code&gt; Â∫ìÁâàÊú¨Êé®Ëçê‰∏∫ &lt;code&gt;4.30.2&lt;/code&gt;Ôºå&lt;code&gt;torch&lt;/code&gt; Êé®Ëçê‰ΩøÁî® 2.0 Âèä‰ª•‰∏äÁöÑÁâàÊú¨Ôºå‰ª•Ëé∑ÂæóÊúÄ‰Ω≥ÁöÑÊé®ÁêÜÊÄßËÉΩ„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;ÁªºÂêà Demo&lt;/h3&gt; &#xA;&lt;p&gt;Êàë‰ª¨Êèê‰æõ‰∫Ü‰∏Ä‰∏™ÈõÜÊàê‰ª•‰∏ã‰∏âÁßçÂäüËÉΩÁöÑÁªºÂêà DemoÔºåËøêË°åÊñπÊ≥ïËØ∑ÂèÇËÄÉ &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/ChatGLM3/main/composite_demo/README.md&#34;&gt;ÁªºÂêà Demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chat: ÂØπËØùÊ®°ÂºèÔºåÂú®Ê≠§Ê®°Âºè‰∏ãÂèØ‰ª•‰∏éÊ®°ÂûãËøõË°åÂØπËØù„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;Tool: Â∑•ÂÖ∑Ê®°ÂºèÔºåÊ®°ÂûãÈô§‰∫ÜÂØπËØùÂ§ñÔºåËøòÂèØ‰ª•ÈÄöËøáÂ∑•ÂÖ∑ËøõË°åÂÖ∂‰ªñÊìç‰Ωú„ÄÇ &lt;img src=&#34;https://raw.githubusercontent.com/THUDM/ChatGLM3/main/resources/tool.png&#34; alt=&#34;tool&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Code Interpreter: ‰ª£Á†ÅËß£ÈáäÂô®Ê®°ÂºèÔºåÊ®°ÂûãÂèØ‰ª•Âú®‰∏Ä‰∏™ Jupyter ÁéØÂ¢É‰∏≠ÊâßË°å‰ª£Á†ÅÂπ∂Ëé∑ÂèñÁªìÊûúÔºå‰ª•ÂÆåÊàêÂ§çÊùÇ‰ªªÂä°„ÄÇ &lt;img src=&#34;https://raw.githubusercontent.com/THUDM/ChatGLM3/main/resources/heart.png&#34; alt=&#34;code&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;‰ª£Á†ÅË∞ÉÁî®&lt;/h3&gt; &#xA;&lt;p&gt;ÂèØ‰ª•ÈÄöËøáÂ¶Ç‰∏ã‰ª£Á†ÅË∞ÉÁî® ChatGLM Ê®°ÂûãÊù•ÁîüÊàêÂØπËØùÔºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from transformers import AutoTokenizer, AutoModel&#xA;&amp;gt;&amp;gt;&amp;gt; tokenizer = AutoTokenizer.from_pretrained(&#34;THUDM/chatglm3-6b&#34;, trust_remote_code=True)&#xA;&amp;gt;&amp;gt;&amp;gt; model = AutoModel.from_pretrained(&#34;THUDM/chatglm3-6b&#34;, trust_remote_code=True, device=&#39;cuda&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; model = model.eval()&#xA;&amp;gt;&amp;gt;&amp;gt; response, history = model.chat(tokenizer, &#34;‰Ω†Â•Ω&#34;, history=[])&#xA;&amp;gt;&amp;gt;&amp;gt; print(response)&#xA;‰Ω†Â•Ωüëã!ÊàëÊòØ‰∫∫Â∑•Êô∫ËÉΩÂä©Êâã ChatGLM3-6B,ÂæàÈ´òÂÖ¥ËßÅÂà∞‰Ω†,Ê¨¢ËøéÈóÆÊàë‰ªª‰ΩïÈóÆÈ¢ò„ÄÇ&#xA;&amp;gt;&amp;gt;&amp;gt; response, history = model.chat(tokenizer, &#34;Êôö‰∏äÁù°‰∏çÁùÄÂ∫îËØ•ÊÄé‰πàÂäû&#34;, history=history)&#xA;&amp;gt;&amp;gt;&amp;gt; print(response)&#xA;Êôö‰∏äÁù°‰∏çÁùÄÂèØËÉΩ‰ºöËÆ©‰Ω†ÊÑüÂà∞ÁÑ¶ËôëÊàñ‰∏çËàíÊúç,‰ΩÜ‰ª•‰∏ãÊòØ‰∏Ä‰∫õÂèØ‰ª•Â∏ÆÂä©‰Ω†ÂÖ•Áù°ÁöÑÊñπÊ≥ï:&#xA;&#xA;1. Âà∂ÂÆöËßÑÂæãÁöÑÁù°Áú†Êó∂Èó¥Ë°®:‰øùÊåÅËßÑÂæãÁöÑÁù°Áú†Êó∂Èó¥Ë°®ÂèØ‰ª•Â∏ÆÂä©‰Ω†Âª∫Á´ãÂÅ•Â∫∑ÁöÑÁù°Áú†‰π†ÊÉØ,‰Ωø‰Ω†Êõ¥ÂÆπÊòìÂÖ•Áù°„ÄÇÂ∞ΩÈáèÂú®ÊØèÂ§©ÁöÑÁõ∏ÂêåÊó∂Èó¥‰∏äÂ∫ä,Âπ∂Âú®Âêå‰∏ÄÊó∂Èó¥Ëµ∑Â∫ä„ÄÇ&#xA;2. ÂàõÈÄ†‰∏Ä‰∏™ËàíÈÄÇÁöÑÁù°Áú†ÁéØÂ¢É:Á°Æ‰øùÁù°Áú†ÁéØÂ¢ÉËàíÈÄÇ,ÂÆâÈùô,ÈªëÊöó‰∏îÊ∏©Â∫¶ÈÄÇÂÆú„ÄÇÂèØ‰ª•‰ΩøÁî®ËàíÈÄÇÁöÑÂ∫ä‰∏äÁî®ÂìÅ,Âπ∂‰øùÊåÅÊàøÈó¥ÈÄöÈ£é„ÄÇ&#xA;3. ÊîæÊùæË∫´ÂøÉ:Âú®Áù°ÂâçÂÅö‰∫õÊîæÊùæÁöÑÊ¥ªÂä®,‰æãÂ¶ÇÊ≥°‰∏™ÁÉ≠Ê∞¥Êæ°,Âê¨‰∫õËΩªÊüîÁöÑÈü≥‰πê,ÈòÖËØª‰∏Ä‰∫õÊúâË∂£ÁöÑ‰π¶Á±çÁ≠â,ÊúâÂä©‰∫éÁºìËß£Á¥ßÂº†ÂíåÁÑ¶Ëôë,‰Ωø‰Ω†Êõ¥ÂÆπÊòìÂÖ•Áù°„ÄÇ&#xA;4. ÈÅøÂÖçÈ•ÆÁî®Âê´ÊúâÂíñÂï°Âõ†ÁöÑÈ•ÆÊñô:ÂíñÂï°Âõ†ÊòØ‰∏ÄÁßçÂà∫ÊøÄÊÄßÁâ©Ë¥®,‰ºöÂΩ±Âìç‰Ω†ÁöÑÁù°Áú†Ë¥®Èáè„ÄÇÂ∞ΩÈáèÈÅøÂÖçÂú®Áù°ÂâçÈ•ÆÁî®Âê´ÊúâÂíñÂï°Âõ†ÁöÑÈ•ÆÊñô,‰æãÂ¶ÇÂíñÂï°,Ëå∂ÂíåÂèØ‰πê„ÄÇ&#xA;5. ÈÅøÂÖçÂú®Â∫ä‰∏äÂÅö‰∏éÁù°Áú†Êó†ÂÖ≥ÁöÑ‰∫ãÊÉÖ:Âú®Â∫ä‰∏äÂÅö‰∫õ‰∏éÁù°Áú†Êó†ÂÖ≥ÁöÑ‰∫ãÊÉÖ,‰æãÂ¶ÇÁúãÁîµÂΩ±,Áé©Ê∏∏ÊàèÊàñÂ∑•‰ΩúÁ≠â,ÂèØËÉΩ‰ºöÂπ≤Êâ∞‰Ω†ÁöÑÁù°Áú†„ÄÇ&#xA;6. Â∞ùËØïÂëºÂê∏ÊäÄÂ∑ß:Ê∑±ÂëºÂê∏ÊòØ‰∏ÄÁßçÊîæÊùæÊäÄÂ∑ß,ÂèØ‰ª•Â∏ÆÂä©‰Ω†ÁºìËß£Á¥ßÂº†ÂíåÁÑ¶Ëôë,‰Ωø‰Ω†Êõ¥ÂÆπÊòìÂÖ•Áù°„ÄÇËØïÁùÄÊÖ¢ÊÖ¢Âê∏Ê∞î,‰øùÊåÅÂá†ÁßíÈíü,ÁÑ∂ÂêéÁºìÊÖ¢ÂëºÊ∞î„ÄÇ&#xA;&#xA;Â¶ÇÊûúËøô‰∫õÊñπÊ≥ïÊó†Ê≥ïÂ∏ÆÂä©‰Ω†ÂÖ•Áù°,‰Ω†ÂèØ‰ª•ËÄÉËôëÂí®ËØ¢ÂåªÁîüÊàñÁù°Áú†‰∏ìÂÆ∂,ÂØªÊ±ÇËøõ‰∏ÄÊ≠•ÁöÑÂª∫ËÆÆ„ÄÇ&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;‰ªéÊú¨Âú∞Âä†ËΩΩÊ®°Âûã&lt;/h4&gt; &#xA;&lt;p&gt;‰ª•‰∏ä‰ª£Á†Å‰ºöÁî± &lt;code&gt;transformers&lt;/code&gt; Ëá™Âä®‰∏ãËΩΩÊ®°ÂûãÂÆûÁé∞ÂíåÂèÇÊï∞„ÄÇÂÆåÊï¥ÁöÑÊ®°ÂûãÂÆûÁé∞Âú® &lt;a href=&#34;https://huggingface.co/THUDM/chatglm3-6b&#34;&gt;Hugging Face Hub&lt;/a&gt;„ÄÇÂ¶ÇÊûú‰Ω†ÁöÑÁΩëÁªúÁéØÂ¢ÉËæÉÂ∑ÆÔºå‰∏ãËΩΩÊ®°ÂûãÂèÇÊï∞ÂèØËÉΩ‰ºöËä±Ë¥πËæÉÈïøÊó∂Èó¥ÁîöËá≥Â§±Ë¥•„ÄÇÊ≠§Êó∂ÂèØ‰ª•ÂÖàÂ∞ÜÊ®°Âûã‰∏ãËΩΩÂà∞Êú¨Âú∞ÔºåÁÑ∂Âêé‰ªéÊú¨Âú∞Âä†ËΩΩ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;‰ªé Hugging Face Hub ‰∏ãËΩΩÊ®°ÂûãÈúÄË¶ÅÂÖà&lt;a href=&#34;https://docs.github.com/zh/repositories/working-with-files/managing-large-files/installing-git-large-file-storage&#34;&gt;ÂÆâË£ÖGit LFS&lt;/a&gt;ÔºåÁÑ∂ÂêéËøêË°å&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;git clone https://huggingface.co/THUDM/chatglm3-6b&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Â¶ÇÊûú‰ªé‰Ω†‰ªé HuggingFace ‰∏ãËΩΩÊØîËæÉÊÖ¢Ôºå‰πüÂèØ‰ª•‰ªé &lt;a href=&#34;https://modelscope.cn/models/ZhipuAI/chatglm3-6b&#34;&gt;ModelScope&lt;/a&gt; ‰∏≠‰∏ãËΩΩ„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;ÁΩëÈ°µÁâàÂØπËØù Demo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/THUDM/ChatGLM3/main/resources/web-demo.gif&#34; alt=&#34;web-demo&#34;&gt; ÂèØ‰ª•ÈÄöËøá‰ª•‰∏ãÂëΩ‰ª§ÂêØÂä®Âü∫‰∫é Gradio ÁöÑÁΩëÈ°µÁâà demoÔºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python web_demo.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/THUDM/ChatGLM3/main/resources/web-demo2.png&#34; alt=&#34;web-demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;ÂèØ‰ª•ÈÄöËøá‰ª•‰∏ãÂëΩ‰ª§ÂêØÂä®Âü∫‰∫é Streamlit ÁöÑÁΩëÈ°µÁâà demoÔºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;streamlit run web_demo2.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÁΩëÈ°µÁâà demo ‰ºöËøêË°å‰∏Ä‰∏™ Web ServerÔºåÂπ∂ËæìÂá∫Âú∞ÂùÄ„ÄÇÂú®ÊµèËßàÂô®‰∏≠ÊâìÂºÄËæìÂá∫ÁöÑÂú∞ÂùÄÂç≥ÂèØ‰ΩøÁî®„ÄÇ ÁªèÊµãËØïÔºåÂü∫‰∫é Streamlit ÁöÑÁΩëÈ°µÁâà Demo ‰ºöÊõ¥ÊµÅÁïÖ„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;ÂëΩ‰ª§Ë°åÂØπËØù Demo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/THUDM/ChatGLM3/main/resources/cli-demo.png&#34; alt=&#34;cli-demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;ËøêË°å‰ªìÂ∫ì‰∏≠ &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/ChatGLM3/main/cli_demo.py&#34;&gt;cli_demo.py&lt;/a&gt;Ôºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python cli_demo.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Á®ãÂ∫è‰ºöÂú®ÂëΩ‰ª§Ë°å‰∏≠ËøõË°å‰∫§‰∫íÂºèÁöÑÂØπËØùÔºåÂú®ÂëΩ‰ª§Ë°å‰∏≠ËæìÂÖ•ÊåáÁ§∫Âπ∂ÂõûËΩ¶Âç≥ÂèØÁîüÊàêÂõûÂ§çÔºåËæìÂÖ• &lt;code&gt;clear&lt;/code&gt; ÂèØ‰ª•Ê∏ÖÁ©∫ÂØπËØùÂéÜÂè≤ÔºåËæìÂÖ• &lt;code&gt;stop&lt;/code&gt; ÁªàÊ≠¢Á®ãÂ∫è„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;API ÈÉ®ÁΩ≤&lt;/h3&gt; &#xA;&lt;p&gt;ÊÑüË∞¢ &lt;a href=&#34;https://github.com/xusenlinzy&#34;&gt;@xusenlinzy&lt;/a&gt; ÂÆûÁé∞‰∫Ü OpenAI Ê†ºÂºèÁöÑÊµÅÂºè API ÈÉ®ÁΩ≤ÔºåÂèØ‰ª•‰Ωú‰∏∫‰ªªÊÑèÂü∫‰∫é ChatGPT ÁöÑÂ∫îÁî®ÁöÑÂêéÁ´ØÔºåÊØîÂ¶Ç &lt;a href=&#34;https://github.com/Yidadaa/ChatGPT-Next-Web&#34;&gt;ChatGPT-Next-Web&lt;/a&gt;„ÄÇÂèØ‰ª•ÈÄöËøáËøêË°å‰ªìÂ∫ì‰∏≠ÁöÑ&lt;a href=&#34;https://raw.githubusercontent.com/THUDM/ChatGLM3/main/openai_api.py&#34;&gt;openai_api.py&lt;/a&gt; ËøõË°åÈÉ®ÁΩ≤Ôºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python openai_api.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ËøõË°å API Ë∞ÉÁî®ÁöÑÁ§∫‰æã‰ª£Á†Å‰∏∫&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import openai&#xA;if __name__ == &#34;__main__&#34;:&#xA;    openai.api_base = &#34;http://localhost:8000/v1&#34;&#xA;    openai.api_key = &#34;none&#34;&#xA;    for chunk in openai.ChatCompletion.create(&#xA;        model=&#34;chatglm3-6b&#34;,&#xA;        messages=[&#xA;            {&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;‰Ω†Â•Ω&#34;}&#xA;        ],&#xA;        stream=True&#xA;    ):&#xA;        if hasattr(chunk.choices[0].delta, &#34;content&#34;):&#xA;            print(chunk.choices[0].delta.content, end=&#34;&#34;, flush=True)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Â∑•ÂÖ∑Ë∞ÉÁî®&lt;/h3&gt; &#xA;&lt;p&gt;ÂÖ≥‰∫éÂ∑•ÂÖ∑Ë∞ÉÁî®ÁöÑÊñπÊ≥ïËØ∑ÂèÇËÄÉ &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/ChatGLM3/main/tool_using/README.md&#34;&gt;Â∑•ÂÖ∑Ë∞ÉÁî®&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;‰ΩéÊàêÊú¨ÈÉ®ÁΩ≤&lt;/h2&gt; &#xA;&lt;p&gt;ËØ∑ËßÅ &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/ChatGLM3/main/DEPLOYMENT.md&#34;&gt;DEPLOYMENT.md&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÂºïÁî®&lt;/h2&gt; &#xA;&lt;p&gt;Â¶ÇÊûú‰Ω†ËßâÂæóÊàë‰ª¨ÁöÑÂ∑•‰ΩúÊúâÂ∏ÆÂä©ÁöÑËØùÔºåËØ∑ËÄÉËôëÂºïÁî®‰∏ãÂàóËÆ∫Êñá„ÄÇ&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{zeng2022glm,&#xA;  title={Glm-130b: An open bilingual pre-trained model},&#xA;  author={Zeng, Aohan and Liu, Xiao and Du, Zhengxiao and Wang, Zihan and Lai, Hanyu and Ding, Ming and Yang, Zhuoyi and Xu, Yifan and Zheng, Wendi and Xia, Xiao and others},&#xA;  journal={arXiv preprint arXiv:2210.02414},&#xA;  year={2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;@inproceedings{du2022glm,&#xA;  title={GLM: General Language Model Pretraining with Autoregressive Blank Infilling},&#xA;  author={Du, Zhengxiao and Qian, Yujie and Liu, Xiao and Ding, Ming and Qiu, Jiezhong and Yang, Zhilin and Tang, Jie},&#xA;  booktitle={Proceedings of the 60th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)},&#xA;  pages={320--335},&#xA;  year={2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>huggingface/alignment-handbook</title>
    <updated>2023-10-30T01:34:14Z</updated>
    <id>tag:github.com,2023-10-30:/huggingface/alignment-handbook</id>
    <link href="https://github.com/huggingface/alignment-handbook" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Robust recipes for to align language models with human and AI preferences&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Alignment Handbook&lt;/h1&gt; &#xA;&lt;p&gt;Robust recipes to align language models with human and AI preferences.&lt;/p&gt; &#xA;&lt;h2&gt;What is this?&lt;/h2&gt; &#xA;&lt;p&gt;Just one year ago, chatbots were out of fashion and most people hadn&#39;t heard about techniques like Reinforcement Learning from Human Feedback (RLHF) to align language models with human preferences. Then, OpenAI broke the internet with ChatGPT and Meta followed suit by releasing the Llama series of language models which enabled the ML community to build their very own capable chatbots. This has led to a rich ecosystem of datasets and models that have mostly focused on teaching language models to follow instructions through supervised fine-tuning (SFT).&lt;/p&gt; &#xA;&lt;p&gt;However, we know from the &lt;a href=&#34;https://huggingface.co/papers/2203.02155&#34;&gt;InstructGPT&lt;/a&gt; and &lt;a href=&#34;https://huggingface.co/papers/2307.09288&#34;&gt;Llama2&lt;/a&gt; papers that significant gains in helpfulness and safety can be had by augmenting SFT with human (or AI) preferences. At the same time, aligning language models to a set of preferences is a fairly novel idea and there are few public resources available on how to train these models, what data to collect, and what metrics to measure for best downstream performance.&lt;/p&gt; &#xA;&lt;p&gt;The Alignment Handbook aims to fill that gap by providing the community with a series of robust training recipes that span the whole pipeline.&lt;/p&gt; &#xA;&lt;h2&gt;Links üîó&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/collections/HuggingFaceH4/zephyr-7b-6538c6d6d5ddd1cbb1744a66&#34;&gt;Zephyr 7B models, datasets, and demos&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;p&gt;The initial release of the handbook will focus on the following techniques:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Supervised fine-tuning:&lt;/strong&gt; teach language models to follow instructions and tips on how to collect and curate your own training dataset.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reward modeling:&lt;/strong&gt; teach language models to distinguish model responses according to human or AI preferences.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rejection sampling:&lt;/strong&gt; a simple, but powerful technique to boost the performance of your SFT model.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Direct preference optimisation (DPO):&lt;/strong&gt; a powerful and promising alternative to PPO.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;To run the code in this project, first create a Python virtual environment using e.g. Conda:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;conda create -n handbook python=3.10 &amp;amp;&amp;amp; conda activate handbook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, install PyTorch v2.1.0. Since this hardware-dependent, we direct you to the &lt;a href=&#34;https://pytorch.org/get-started/locally/&#34;&gt;PyTorch Installation Page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once PyTorch is installed, you can install the remaining package dependencies as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, log into your Hugging Face account as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;huggingface-cli login&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, install Git LFS so that you can push models to the Hugging Face Hub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt-get install git-lfs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find the content of this repo useful in your work, please cite it as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{alignment_handbook2023,&#xA;  author = {Lewis Tunstall and Edward Beeching and Nathan Lambert and Nazneen Rajani and Alexander M. Rush and Thomas Wolf},&#xA;  title = {The Alignment Handbook},&#xA;  year = {2023},&#xA;  publisher = {GitHub},&#xA;  journal = {GitHub repository},&#xA;  howpublished = {\url{https://github.com/huggingface/alignment-handbook}}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>