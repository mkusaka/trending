<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-31T01:31:12Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TomSchimansky/CustomTkinter</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/TomSchimansky/CustomTkinter</id>
    <link href="https://github.com/TomSchimansky/CustomTkinter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A modern and customizable python UI-library based on Tkinter&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/customtkinter&#34; alt=&#34;PyPI&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/dm/customtkinter?color=green&amp;amp;label=pip%20downloads&#34; alt=&#34;PyPI - Downloads&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/l/customtkinter&#34; alt=&#34;PyPI - License&#34;&gt; &lt;img src=&#34;https://img.shields.io/tokei/lines/github.com/tomschimansky/customtkinter?color=green&amp;amp;label=total%20lines&#34; alt=&#34;Total lines&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;CustomTkinter UI-Library&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TomSchimansky/CustomTkinter/master/documentation_images/Windows_dark.png&#34; alt=&#34;&#34;&gt; | &lt;em&gt;&lt;code&gt;complex_example.py&lt;/code&gt; on Windows 11 with dark mode and &#39;dark-blue&#39; theme&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TomSchimansky/CustomTkinter/master/documentation_images/macOS_light.png&#34; alt=&#34;&#34;&gt; | &lt;em&gt;&lt;code&gt;complex_example.py&lt;/code&gt; on macOS in light mode and standard &#39;blue&#39; theme&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;/h3&gt; &#xA;&lt;p&gt;CustomTkinter is a python UI-library based on Tkinter, which provides new, modern and fully customizable widgets. They are created and used like normal Tkinter widgets and can also be used in combination with normal Tkinter elements. The widgets and the window colors either adapt to the system appearance or the manually set mode (&#39;light&#39;, &#39;dark&#39;), and all CustomTkinter widgets and windows support HighDPI scaling (Windows, macOS). With CustomTkinter you&#39;ll get a consistent and modern look across all desktop platforms (Windows, macOS, Linux).&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the module with pip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip3 install customtkinter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Update existing installation:&lt;/strong&gt; &lt;code&gt;pip3 install customtkinter --upgrade&lt;/code&gt;&lt;br&gt; (update as often as possible because this library is under active development)&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;A detailed documentation can be found in the Wiki Tab here: &lt;strong&gt;&lt;a href=&#34;https://github.com/TomSchimansky/CustomTkinter/wiki&#34;&gt;Documentation&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Example Program&lt;/h2&gt; &#xA;&lt;p&gt;To test customtkinter you can try this simple example with only a single button:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import tkinter&#xA;import customtkinter&#xA;&#xA;customtkinter.set_appearance_mode(&#34;System&#34;)  # Modes: system (default), light, dark&#xA;customtkinter.set_default_color_theme(&#34;blue&#34;)  # Themes: blue (default), dark-blue, green&#xA;&#xA;app = customtkinter.CTk()  # create CTk window like you do with the Tk window&#xA;app.geometry(&#34;400x240&#34;)&#xA;&#xA;def button_function():&#xA;    print(&#34;button pressed&#34;)&#xA;&#xA;# Use CTkButton instead of tkinter Button&#xA;button = customtkinter.CTkButton(master=app, text=&#34;CTkButton&#34;, command=button_function)&#xA;button.place(relx=0.5, rely=0.5, anchor=tkinter.CENTER)&#xA;&#xA;app.mainloop()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which gives the following (macOS dark mode on):&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TomSchimansky/CustomTkinter/master/documentation_images/macOS_button_dark.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In the &lt;a href=&#34;https://github.com/TomSchimansky/CustomTkinter/tree/master/examples&#34;&gt;examples folder&lt;/a&gt;, you can find more example programs and in the &lt;a href=&#34;https://github.com/TomSchimansky/CustomTkinter/wiki&#34;&gt;Documentation&lt;/a&gt; you can find further information on the appearance mode, the themes and all widgets.&lt;/p&gt; &#xA;&lt;h2&gt;More Examples and Showcase&lt;/h2&gt; &#xA;&lt;h3&gt;Appearance mode change&lt;/h3&gt; &#xA;&lt;p&gt;On Windows 10/11 you get a dark window header, which changes with set appearance mode or the system, when you use &lt;code&gt;customtkinter.CTk()&lt;/code&gt; to create the window, and it works with all python versions:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TomSchimansky/CustomTkinter/master/documentation_images/Windows_system_mode_change.gif&#34; alt=&#34;&#34;&gt; | &lt;em&gt;&lt;code&gt;complex_example.py&lt;/code&gt; on Windows 11 with system mode change and standard &#39;blue&#39; theme&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;/h3&gt; &#xA;&lt;p&gt;On macOS however you either need python3.10 or higher or the anaconda python version to get a dark window header at all (Tcl/Tk &amp;gt;= 8.6.9 required).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TomSchimansky/CustomTkinter/master/documentation_images/macOS_system_mode_change.gif&#34; alt=&#34;&#34;&gt; | &lt;em&gt;&lt;code&gt;complex_example.py&lt;/code&gt; on macOS with system mode change and standard &#39;blue&#39; theme&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;Button with images&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s possible to put an image on a CTkButton. You just have to pass a PhotoImage object to the CTkButton with the &lt;code&gt;image&lt;/code&gt; argument. If you want no text at all you have to set &lt;code&gt;text=&#34;&#34;&lt;/code&gt; or you specify how to position the text and image at once with the &lt;code&gt;compound&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TomSchimansky/CustomTkinter/master/documentation_images/macOS_button_images.png&#34; alt=&#34;&#34;&gt; | &lt;em&gt;&lt;code&gt;example_button_images.py&lt;/code&gt; on macOS&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;Integration of TkinterMapView widget&lt;/h3&gt; &#xA;&lt;p&gt;In the following example I used a TkinterMapView which integrates well with a CustomTkinter program. It&#39;s a tile based map widget which displays OpenStreetMap or other tile based maps:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TomSchimansky/CustomTkinter/master/documentation_images/tkintermapview_example.gif&#34; alt=&#34;&#34;&gt; | &lt;em&gt;&lt;code&gt;examples/map_with_customtkinter.py&lt;/code&gt; from TkinterMapView repository on macOS&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can find the TkinterMapView library and the example program here: &lt;a href=&#34;https://github.com/TomSchimansky/TkinterMapView&#34;&gt;https://github.com/TomSchimansky/TkinterMapView&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ageitgey/face_recognition</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/ageitgey/face_recognition</id>
    <link href="https://github.com/ageitgey/face_recognition" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The world&#39;s simplest facial recognition api for Python and the command line&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Face Recognition&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;You can also read a translated version of this file &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/README_Simplified_Chinese.md&#34;&gt;in Chinese 简体中文版&lt;/a&gt; or &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/README_Korean.md&#34;&gt;in Korean 한국어&lt;/a&gt; or &lt;a href=&#34;https://github.com/m-i-k-i/face_recognition/raw/master/README_Japanese.md&#34;&gt;in Japanese 日本語&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Recognize and manipulate faces from Python or from the command line with the world&#39;s simplest face recognition library.&lt;/p&gt; &#xA;&lt;p&gt;Built using &lt;a href=&#34;http://dlib.net/&#34;&gt;dlib&lt;/a&gt;&#39;s state-of-the-art face recognition built with deep learning. The model has an accuracy of 99.38% on the &lt;a href=&#34;http://vis-www.cs.umass.edu/lfw/&#34;&gt;Labeled Faces in the Wild&lt;/a&gt; benchmark.&lt;/p&gt; &#xA;&lt;p&gt;This also provides a simple &lt;code&gt;face_recognition&lt;/code&gt; command line tool that lets you do face recognition on a folder of images from the command line!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/face_recognition&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/face_recognition.svg?sanitize=true&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ageitgey/face_recognition/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/ageitgey/face_recognition/workflows/CI/badge.svg?branch=master&amp;amp;event=push&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://face-recognition.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/face-recognition/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h4&gt;Find faces in pictures&lt;/h4&gt; &#xA;&lt;p&gt;Find all the faces that appear in a picture:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23625227/42c65360-025d-11e7-94ea-b12f28cb34b4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;image = face_recognition.load_image_file(&#34;your_file.jpg&#34;)&#xA;face_locations = face_recognition.face_locations(image)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Find and manipulate facial features in pictures&lt;/h4&gt; &#xA;&lt;p&gt;Get the locations and outlines of each person&#39;s eyes, nose, mouth and chin.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23625282/7f2d79dc-025d-11e7-8728-d8924596f8fa.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;image = face_recognition.load_image_file(&#34;your_file.jpg&#34;)&#xA;face_landmarks_list = face_recognition.face_landmarks(image)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finding facial features is super useful for lots of important stuff. But you can also use it for really stupid stuff like applying &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/digital_makeup.py&#34;&gt;digital make-up&lt;/a&gt; (think &#39;Meitu&#39;):&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23625283/80638760-025d-11e7-80a2-1d2779f7ccab.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Identify faces in pictures&lt;/h4&gt; &#xA;&lt;p&gt;Recognize who appears in each photo.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23625229/45e049b6-025d-11e7-89cc-8a71cf89e713.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;known_image = face_recognition.load_image_file(&#34;biden.jpg&#34;)&#xA;unknown_image = face_recognition.load_image_file(&#34;unknown.jpg&#34;)&#xA;&#xA;biden_encoding = face_recognition.face_encodings(known_image)[0]&#xA;unknown_encoding = face_recognition.face_encodings(unknown_image)[0]&#xA;&#xA;results = face_recognition.compare_faces([biden_encoding], unknown_encoding)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can even use this library with other Python libraries to do real-time face recognition:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/24430398/36f0e3f0-13cb-11e7-8258-4d0c9ce1e419.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_from_webcam_faster.py&#34;&gt;this example&lt;/a&gt; for the code.&lt;/p&gt; &#xA;&lt;h2&gt;Online Demos&lt;/h2&gt; &#xA;&lt;p&gt;User-contributed shared Jupyter notebook demo (not officially supported): &lt;a href=&#34;https://beta.deepnote.org/launch?template=face_recognition&#34;&gt;&lt;img src=&#34;https://beta.deepnote.org/buttons/try-in-a-jupyter-notebook.svg?sanitize=true&#34; alt=&#34;Deepnote&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.3+ or Python 2.7&lt;/li&gt; &#xA; &lt;li&gt;macOS or Linux (Windows not officially supported, but might work)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation Options:&lt;/h3&gt; &#xA;&lt;h4&gt;Installing on Mac or Linux&lt;/h4&gt; &#xA;&lt;p&gt;First, make sure you have dlib already installed with Python bindings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/ageitgey/629d75c1baac34dfa5ca2a1928a7aeaf&#34;&gt;How to install dlib from source on macOS or Ubuntu&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then, make sure you have cmake installed:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;brew install cmake&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Finally, install this module from pypi using &lt;code&gt;pip3&lt;/code&gt; (or &lt;code&gt;pip2&lt;/code&gt; for Python 2):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip3 install face_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can try this library with &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;, see &lt;a href=&#34;https://raw.githubusercontent.com/ageitgey/face_recognition/master/#deployment&#34;&gt;this section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are having trouble with installation, you can also try out a &lt;a href=&#34;https://medium.com/@ageitgey/try-deep-learning-in-python-now-with-a-fully-pre-configured-vm-1d97d4c3e9b&#34;&gt;pre-configured VM&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Installing on an Nvidia Jetson Nano board&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ageitgey/build-a-hardware-based-face-recognition-system-for-150-with-the-nvidia-jetson-nano-and-python-a25cb8c891fd&#34;&gt;Jetson Nano installation instructions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Please follow the instructions in the article carefully. There is current a bug in the CUDA libraries on the Jetson Nano that will cause this library to fail silently if you don&#39;t follow the instructions in the article to comment out a line in dlib and recompile it.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Installing on Raspberry Pi 2+&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/ageitgey/1ac8dbe8572f3f533df6269dab35df65&#34;&gt;Raspberry Pi 2+ installation instructions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Installing on FreeBSD&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pkg install graphics/py-face_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Installing on Windows&lt;/h4&gt; &#xA;&lt;p&gt;While Windows isn&#39;t officially supported, helpful users have posted instructions on how to install this library:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/issues/175#issue-257710508&#34;&gt;@masoudr&#39;s Windows 10 installation guide (dlib + face_recognition)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Installing a pre-configured Virtual Machine image&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ageitgey/try-deep-learning-in-python-now-with-a-fully-pre-configured-vm-1d97d4c3e9b&#34;&gt;Download the pre-configured VM image&lt;/a&gt; (for VMware Player or VirtualBox).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Command-Line Interface&lt;/h3&gt; &#xA;&lt;p&gt;When you install &lt;code&gt;face_recognition&lt;/code&gt;, you get two simple command-line programs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;face_recognition&lt;/code&gt; - Recognize faces in a photograph or folder full for photographs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;face_detection&lt;/code&gt; - Find faces in a photograph or folder full for photographs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;face_recognition&lt;/code&gt; command line tool&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;face_recognition&lt;/code&gt; command lets you recognize faces in a photograph or folder full for photographs.&lt;/p&gt; &#xA;&lt;p&gt;First, you need to provide a folder with one picture of each person you already know. There should be one image file for each person with the files named according to who is in the picture:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23582466/8324810e-00df-11e7-82cf-41515eba704d.png&#34; alt=&#34;known&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Next, you need a second folder with the files you want to identify:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23582465/81f422f8-00df-11e7-8b0d-75364f641f58.png&#34; alt=&#34;unknown&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then in you simply run the command &lt;code&gt;face_recognition&lt;/code&gt;, passing in the folder of known people and the folder (or single image) with unknown people and it tells you who is in each image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition ./pictures_of_people_i_know/ ./unknown_pictures/&#xA;&#xA;/unknown_pictures/unknown.jpg,Barack Obama&#xA;/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There&#39;s one line in the output for each face. The data is comma-separated with the filename and the name of the person found.&lt;/p&gt; &#xA;&lt;p&gt;An &lt;code&gt;unknown_person&lt;/code&gt; is a face in the image that didn&#39;t match anyone in your folder of known people.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;face_detection&lt;/code&gt; command line tool&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;face_detection&lt;/code&gt; command lets you find the location (pixel coordinatates) of any faces in an image.&lt;/p&gt; &#xA;&lt;p&gt;Just run the command &lt;code&gt;face_detection&lt;/code&gt;, passing in a folder of images to check (or a single image):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_detection  ./folder_with_pictures/&#xA;&#xA;examples/image1.jpg,65,215,169,112&#xA;examples/image2.jpg,62,394,211,244&#xA;examples/image2.jpg,95,941,244,792&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It prints one line for each face that was detected. The coordinates reported are the top, right, bottom and left coordinates of the face (in pixels).&lt;/p&gt; &#xA;&lt;h5&gt;Adjusting Tolerance / Sensitivity&lt;/h5&gt; &#xA;&lt;p&gt;If you are getting multiple matches for the same person, it might be that the people in your photos look very similar and a lower tolerance value is needed to make face comparisons more strict.&lt;/p&gt; &#xA;&lt;p&gt;You can do that with the &lt;code&gt;--tolerance&lt;/code&gt; parameter. The default tolerance value is 0.6 and lower numbers make face comparisons more strict:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition --tolerance 0.54 ./pictures_of_people_i_know/ ./unknown_pictures/&#xA;&#xA;/unknown_pictures/unknown.jpg,Barack Obama&#xA;/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to see the face distance calculated for each match in order to adjust the tolerance setting, you can use &lt;code&gt;--show-distance true&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition --show-distance true ./pictures_of_people_i_know/ ./unknown_pictures/&#xA;&#xA;/unknown_pictures/unknown.jpg,Barack Obama,0.378542298956785&#xA;/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person,None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;More Examples&lt;/h5&gt; &#xA;&lt;p&gt;If you simply want to know the names of the people in each photograph but don&#39;t care about file names, you could do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition ./pictures_of_people_i_know/ ./unknown_pictures/ | cut -d &#39;,&#39; -f2&#xA;&#xA;Barack Obama&#xA;unknown_person&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Speeding up Face Recognition&lt;/h5&gt; &#xA;&lt;p&gt;Face recognition can be done in parallel if you have a computer with multiple CPU cores. For example, if your system has 4 CPU cores, you can process about 4 times as many images in the same amount of time by using all your CPU cores in parallel.&lt;/p&gt; &#xA;&lt;p&gt;If you are using Python 3.4 or newer, pass in a &lt;code&gt;--cpus &amp;lt;number_of_cpu_cores_to_use&amp;gt;&lt;/code&gt; parameter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition --cpus 4 ./pictures_of_people_i_know/ ./unknown_pictures/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also pass in &lt;code&gt;--cpus -1&lt;/code&gt; to use all CPU cores in your system.&lt;/p&gt; &#xA;&lt;h4&gt;Python Module&lt;/h4&gt; &#xA;&lt;p&gt;You can import the &lt;code&gt;face_recognition&lt;/code&gt; module and then easily manipulate faces with just a couple of lines of code. It&#39;s super easy!&lt;/p&gt; &#xA;&lt;p&gt;API Docs: &lt;a href=&#34;https://face-recognition.readthedocs.io/en/latest/face_recognition.html&#34;&gt;https://face-recognition.readthedocs.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Automatically find all the faces in an image&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;&#xA;image = face_recognition.load_image_file(&#34;my_picture.jpg&#34;)&#xA;face_locations = face_recognition.face_locations(image)&#xA;&#xA;# face_locations is now an array listing the co-ordinates of each face!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_picture.py&#34;&gt;this example&lt;/a&gt; to try it out.&lt;/p&gt; &#xA;&lt;p&gt;You can also opt-in to a somewhat more accurate deep-learning-based face detection model.&lt;/p&gt; &#xA;&lt;p&gt;Note: GPU acceleration (via NVidia&#39;s CUDA library) is required for good performance with this model. You&#39;ll also want to enable CUDA support when compliling &lt;code&gt;dlib&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;&#xA;image = face_recognition.load_image_file(&#34;my_picture.jpg&#34;)&#xA;face_locations = face_recognition.face_locations(image, model=&#34;cnn&#34;)&#xA;&#xA;# face_locations is now an array listing the co-ordinates of each face!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_picture_cnn.py&#34;&gt;this example&lt;/a&gt; to try it out.&lt;/p&gt; &#xA;&lt;p&gt;If you have a lot of images and a GPU, you can also &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_batches.py&#34;&gt;find faces in batches&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Automatically locate the facial features of a person in an image&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;&#xA;image = face_recognition.load_image_file(&#34;my_picture.jpg&#34;)&#xA;face_landmarks_list = face_recognition.face_landmarks(image)&#xA;&#xA;# face_landmarks_list is now an array with the locations of each facial feature in each face.&#xA;# face_landmarks_list[0][&#39;left_eye&#39;] would be the location and outline of the first person&#39;s left eye.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_facial_features_in_picture.py&#34;&gt;this example&lt;/a&gt; to try it out.&lt;/p&gt; &#xA;&lt;h5&gt;Recognize faces in images and identify who they are&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;&#xA;picture_of_me = face_recognition.load_image_file(&#34;me.jpg&#34;)&#xA;my_face_encoding = face_recognition.face_encodings(picture_of_me)[0]&#xA;&#xA;# my_face_encoding now contains a universal &#39;encoding&#39; of my facial features that can be compared to any other picture of a face!&#xA;&#xA;unknown_picture = face_recognition.load_image_file(&#34;unknown.jpg&#34;)&#xA;unknown_face_encoding = face_recognition.face_encodings(unknown_picture)[0]&#xA;&#xA;# Now we can see the two face encodings are of the same person with `compare_faces`!&#xA;&#xA;results = face_recognition.compare_faces([my_face_encoding], unknown_face_encoding)&#xA;&#xA;if results[0] == True:&#xA;    print(&#34;It&#39;s a picture of me!&#34;)&#xA;else:&#xA;    print(&#34;It&#39;s not a picture of me!&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/recognize_faces_in_pictures.py&#34;&gt;this example&lt;/a&gt; to try it out.&lt;/p&gt; &#xA;&lt;h2&gt;Python Code Examples&lt;/h2&gt; &#xA;&lt;p&gt;All the examples are available &lt;a href=&#34;https://github.com/ageitgey/face_recognition/tree/master/examples&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Face Detection&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_picture.py&#34;&gt;Find faces in a photograph&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_picture_cnn.py&#34;&gt;Find faces in a photograph (using deep learning)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_batches.py&#34;&gt;Find faces in batches of images w/ GPU (using deep learning)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/blur_faces_on_webcam.py&#34;&gt;Blur all the faces in a live video using your webcam (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Facial Features&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_facial_features_in_picture.py&#34;&gt;Identify specific facial features in a photograph&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/digital_makeup.py&#34;&gt;Apply (horribly ugly) digital make-up&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Facial Recognition&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/recognize_faces_in_pictures.py&#34;&gt;Find and recognize unknown faces in a photograph based on photographs of known people&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/identify_and_draw_boxes_on_faces.py&#34;&gt;Identify and draw boxes around each person in a photo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/face_distance.py&#34;&gt;Compare faces by numeric face distance instead of only True/False matches&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_from_webcam.py&#34;&gt;Recognize faces in live video using your webcam - Simple / Slower Version (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_from_webcam_faster.py&#34;&gt;Recognize faces in live video using your webcam - Faster Version (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_from_video_file.py&#34;&gt;Recognize faces in a video file and write out new video file (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_on_raspberry_pi.py&#34;&gt;Recognize faces on a Raspberry Pi w/ camera&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/web_service_example.py&#34;&gt;Run a web service to recognize faces via HTTP (Requires Flask to be installed)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/face_recognition_knn.py&#34;&gt;Recognize faces with a K-nearest neighbors classifier&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/face_recognition_svm.py&#34;&gt;Train multiple images per person then recognize faces using a SVM&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Creating a Standalone Executable&lt;/h2&gt; &#xA;&lt;p&gt;If you want to create a standalone executable that can run without the need to install &lt;code&gt;python&lt;/code&gt; or &lt;code&gt;face_recognition&lt;/code&gt;, you can use &lt;a href=&#34;https://github.com/pyinstaller/pyinstaller&#34;&gt;PyInstaller&lt;/a&gt;. However, it requires some custom configuration to work with this library. See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/issues/357&#34;&gt;this issue&lt;/a&gt; for how to do it.&lt;/p&gt; &#xA;&lt;h2&gt;Articles and Guides that cover &lt;code&gt;face_recognition&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;My article on how Face Recognition works: &lt;a href=&#34;https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78&#34;&gt;Modern Face Recognition with Deep Learning&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Covers the algorithms and how they generally work&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2018/06/18/face-recognition-with-opencv-python-and-deep-learning/&#34;&gt;Face recognition with OpenCV, Python, and deep learning&lt;/a&gt; by Adrian Rosebrock &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Covers how to use face recognition in practice&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2018/06/25/raspberry-pi-face-recognition/&#34;&gt;Raspberry Pi Face Recognition&lt;/a&gt; by Adrian Rosebrock &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Covers how to use this on a Raspberry Pi&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2018/07/09/face-clustering-with-python/&#34;&gt;Face clustering with Python&lt;/a&gt; by Adrian Rosebrock &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Covers how to automatically cluster photos based on who appears in each photo using unsupervised learning&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How Face Recognition Works&lt;/h2&gt; &#xA;&lt;p&gt;If you want to learn how face location and recognition work instead of depending on a black box library, &lt;a href=&#34;https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78&#34;&gt;read my article&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Caveats&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The face recognition model is trained on adults and does not work very well on children. It tends to mix up children quite easy using the default comparison threshold of 0.6.&lt;/li&gt; &#xA; &lt;li&gt;Accuracy may vary between ethnic groups. Please see &lt;a href=&#34;https://github.com/ageitgey/face_recognition/wiki/Face-Recognition-Accuracy-Problems#question-face-recognition-works-well-with-european-individuals-but-overall-accuracy-is-lower-with-asian-individuals&#34;&gt;this wiki page&lt;/a&gt; for more details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;deployment&#34;&gt;Deployment to Cloud Hosts (Heroku, AWS, etc)&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Since &lt;code&gt;face_recognition&lt;/code&gt; depends on &lt;code&gt;dlib&lt;/code&gt; which is written in C++, it can be tricky to deploy an app using it to a cloud hosting provider like Heroku or AWS.&lt;/p&gt; &#xA;&lt;p&gt;To make things easier, there&#39;s an example Dockerfile in this repo that shows how to run an app built with &lt;code&gt;face_recognition&lt;/code&gt; in a &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; container. With that, you should be able to deploy to any service that supports Docker images.&lt;/p&gt; &#xA;&lt;p&gt;You can try the Docker image locally by running: &lt;code&gt;docker-compose up --build&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;There are also &lt;a href=&#34;https://raw.githubusercontent.com/ageitgey/face_recognition/master/docker/README.md&#34;&gt;several prebuilt Docker images.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Linux users with a GPU (drivers &amp;gt;= 384.81) and &lt;a href=&#34;https://github.com/NVIDIA/nvidia-docker&#34;&gt;Nvidia-Docker&lt;/a&gt; installed can run the example on the GPU: Open the &lt;a href=&#34;https://raw.githubusercontent.com/ageitgey/face_recognition/master/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt; file and uncomment the &lt;code&gt;dockerfile: Dockerfile.gpu&lt;/code&gt; and &lt;code&gt;runtime: nvidia&lt;/code&gt; lines.&lt;/p&gt; &#xA;&lt;h2&gt;Having problems?&lt;/h2&gt; &#xA;&lt;p&gt;If you run into problems, please read the &lt;a href=&#34;https://github.com/ageitgey/face_recognition/wiki/Common-Errors&#34;&gt;Common Errors&lt;/a&gt; section of the wiki before filing a github issue.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Many, many thanks to &lt;a href=&#34;https://github.com/davisking&#34;&gt;Davis King&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/nulhom&#34;&gt;@nulhom&lt;/a&gt;) for creating dlib and for providing the trained facial feature detection and face encoding models used in this library. For more information on the ResNet that powers the face encodings, check out his &lt;a href=&#34;http://blog.dlib.net/2017/02/high-quality-face-recognition-with-deep.html&#34;&gt;blog post&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Thanks to everyone who works on all the awesome Python data science libraries like numpy, scipy, scikit-image, pillow, etc, etc that makes this kind of stuff so easy and fun in Python.&lt;/li&gt; &#xA; &lt;li&gt;Thanks to &lt;a href=&#34;https://github.com/audreyr/cookiecutter&#34;&gt;Cookiecutter&lt;/a&gt; and the &lt;a href=&#34;https://github.com/audreyr/cookiecutter-pypackage&#34;&gt;audreyr/cookiecutter-pypackage&lt;/a&gt; project template for making Python project packaging way more tolerable.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>home-assistant/core</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/home-assistant/core</id>
    <link href="https://github.com/home-assistant/core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🏡 Open source home automation that puts local control and privacy first.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Home Assistant |Chat Status|&lt;/h1&gt; &#xA;&lt;p&gt;Open source home automation that puts local control and privacy first. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server.&lt;/p&gt; &#xA;&lt;p&gt;Check out &lt;code&gt;home-assistant.io &amp;lt;https://home-assistant.io&amp;gt;&lt;/code&gt;__ for &lt;code&gt;a demo &amp;lt;https://home-assistant.io/demo/&amp;gt;&lt;/code&gt;&lt;strong&gt;, &lt;code&gt;installation instructions &amp;lt;https://home-assistant.io/getting-started/&amp;gt;&lt;/code&gt;&lt;/strong&gt;, &lt;code&gt;tutorials &amp;lt;https://home-assistant.io/getting-started/automation/&amp;gt;&lt;/code&gt;__ and &lt;code&gt;documentation &amp;lt;https://home-assistant.io/docs/&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;|screenshot-states|&lt;/p&gt; &#xA;&lt;h2&gt;Featured integrations&lt;/h2&gt; &#xA;&lt;p&gt;|screenshot-components|&lt;/p&gt; &#xA;&lt;p&gt;The system is built using a modular approach so support for other devices or actions can be implemented easily. See also the &lt;code&gt;section on architecture &amp;lt;https://developers.home-assistant.io/docs/architecture_index/&amp;gt;&lt;/code&gt;__ and the &lt;code&gt;section on creating your own components &amp;lt;https://developers.home-assistant.io/docs/creating_component_index/&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;If you run into issues while using Home Assistant or during development of a component, check the &lt;code&gt;Home Assistant help section &amp;lt;https://home-assistant.io/help/&amp;gt;&lt;/code&gt;__ of our website for further help and information.&lt;/p&gt; &#xA;&lt;p&gt;.. |Chat Status| image:: &lt;a href=&#34;https://img.shields.io/discord/330944238910963714.svg&#34;&gt;https://img.shields.io/discord/330944238910963714.svg&lt;/a&gt; :target: &lt;a href=&#34;https://discord.gg/c5DvZ4e&#34;&gt;https://discord.gg/c5DvZ4e&lt;/a&gt; .. |screenshot-states| image:: &lt;a href=&#34;https://raw.githubusercontent.com/home-assistant/core/master/docs/screenshots.png&#34;&gt;https://raw.githubusercontent.com/home-assistant/core/master/docs/screenshots.png&lt;/a&gt; :target: &lt;a href=&#34;https://home-assistant.io/demo/&#34;&gt;https://home-assistant.io/demo/&lt;/a&gt; .. |screenshot-components| image:: &lt;a href=&#34;https://raw.githubusercontent.com/home-assistant/core/dev/docs/screenshot-components.png&#34;&gt;https://raw.githubusercontent.com/home-assistant/core/dev/docs/screenshot-components.png&lt;/a&gt; :target: &lt;a href=&#34;https://home-assistant.io/integrations/&#34;&gt;https://home-assistant.io/integrations/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>521xueweihan/HelloGitHub</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/521xueweihan/HelloGitHub</id>
    <link href="https://github.com/521xueweihan/HelloGitHub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;分享 GitHub 上有趣、入门级的开源项目。Share interesting, entry-level open source projects on GitHub.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/readme.gif&#34;&gt; &lt;br&gt;中文 | &lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/README_en.md&#34;&gt;English&lt;/a&gt; &lt;br&gt;分享 GitHub 上有趣、入门级的开源项目。&lt;br&gt;兴趣是最好的老师，这里能够帮你找到编程的兴趣！ &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/weixin.png&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Talk-%E5%BE%AE%E4%BF%A1%E7%BE%A4-brightgreen.svg?style=popout-square&#34; alt=&#34;WeiXin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/521xueweihan/HelloGitHub/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/521xueweihan/HelloGitHub.svg?style=popout-square&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/521xueweihan/HelloGitHub/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/521xueweihan/HelloGitHub.svg?style=popout-square&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://weibo.com/hellogithub&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E6%96%B0%E6%B5%AA-Weibo-red.svg?style=popout-square&#34; alt=&#34;Sina Weibo&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;HelloGitHub 分享 GitHub 上有趣、入门级的开源项目。&lt;strong&gt;每月 28 号&lt;/strong&gt;以月刊的形式&lt;a href=&#34;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA5MzYyNzQ0MQ==&amp;amp;action=getalbum&amp;amp;album_id=1331197538447310849#wechat_redirect&#34;&gt;更新发布&lt;/a&gt;，内容包括：&lt;strong&gt;有趣、入门级的开源项目&lt;/strong&gt;、&lt;strong&gt;开源书籍&lt;/strong&gt;、&lt;strong&gt;实战项目&lt;/strong&gt;、&lt;strong&gt;企业级项目&lt;/strong&gt;等，让你用很短时间感受到开源的魅力，爱上开源！&lt;/p&gt; &#xA;&lt;h2&gt;内容&lt;/h2&gt; &#xA;&lt;p&gt;获得更好的阅读体验 &lt;a href=&#34;https://hellogithub.com&#34;&gt;官网&lt;/a&gt; 或 &lt;a href=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/weixin.png&#34;&gt;HelloGitHub 公众号&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;span&gt;📇&lt;/span&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;span&gt;🎃&lt;/span&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;span&gt;🍺&lt;/span&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;span&gt;🍥&lt;/span&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/74/HelloGitHub74.md&#34;&gt;第 74 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/73/HelloGitHub73.md&#34;&gt;第 73 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/72/HelloGitHub72.md&#34;&gt;第 72 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/71/HelloGitHub71.md&#34;&gt;第 71 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/70/HelloGitHub70.md&#34;&gt;第 70 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/69/HelloGitHub69.md&#34;&gt;第 69 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/68/HelloGitHub68.md&#34;&gt;第 68 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/67/HelloGitHub67.md&#34;&gt;第 67 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/66/HelloGitHub66.md&#34;&gt;第 66 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/65/HelloGitHub65.md&#34;&gt;第 65 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/64/HelloGitHub64.md&#34;&gt;第 64 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/63/HelloGitHub63.md&#34;&gt;第 63 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/62/HelloGitHub62.md&#34;&gt;第 62 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/61/HelloGitHub61.md&#34;&gt;第 61 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/60/HelloGitHub60.md&#34;&gt;第 60 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/59/HelloGitHub59.md&#34;&gt;第 59 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/58/HelloGitHub58.md&#34;&gt;第 58 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/57/HelloGitHub57.md&#34;&gt;第 57 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/56/HelloGitHub56.md&#34;&gt;第 56 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/55/HelloGitHub55.md&#34;&gt;第 55 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/54/HelloGitHub54.md&#34;&gt;第 54 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/53/HelloGitHub53.md&#34;&gt;第 53 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/52/HelloGitHub52.md&#34;&gt;第 52 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/51/HelloGitHub51.md&#34;&gt;第 51 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/50/HelloGitHub50.md&#34;&gt;第 50 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/49/HelloGitHub49.md&#34;&gt;第 49 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/48/HelloGitHub48.md&#34;&gt;第 48 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/47/HelloGitHub47.md&#34;&gt;第 47 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/46/HelloGitHub46.md&#34;&gt;第 46 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/45/HelloGitHub45.md&#34;&gt;第 45 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/44/HelloGitHub44.md&#34;&gt;第 44 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/43/HelloGitHub43.md&#34;&gt;第 43 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/42/HelloGitHub42.md&#34;&gt;第 42 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/41/HelloGitHub41.md&#34;&gt;第 41 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/40/HelloGitHub40.md&#34;&gt;第 40 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/39/HelloGitHub39.md&#34;&gt;第 39 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/38/HelloGitHub38.md&#34;&gt;第 38 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/37/HelloGitHub37.md&#34;&gt;第 37 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/36/HelloGitHub36.md&#34;&gt;第 36 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/35/HelloGitHub35.md&#34;&gt;第 35 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/34/HelloGitHub34.md&#34;&gt;第 34 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/33/HelloGitHub33.md&#34;&gt;第 33 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/32/HelloGitHub32.md&#34;&gt;第 32 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/31/HelloGitHub31.md&#34;&gt;第 31 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/05/HelloGitHub05.md&#34;&gt;第 05 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/04/HelloGitHub04.md&#34;&gt;第 04 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/03/HelloGitHub03.md&#34;&gt;第 03 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/02/HelloGitHub02.md&#34;&gt;第 02 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/01/HelloGitHub01.md&#34;&gt;第 01 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;欢迎&lt;a href=&#34;https://github.com/521xueweihan/HelloGitHub/issues/new&#34;&gt;推荐或自荐&lt;/a&gt;项目成为 &lt;strong&gt;HelloGitHub&lt;/strong&gt; 的&lt;a href=&#34;https://github.com/521xueweihan/HelloGitHub/raw/master/content/contributors.md&#34;&gt;贡献者&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;赞助&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34; style=&#34;width: 80px;&#34;&gt; &lt;a href=&#34;https://www.ucloud.cn/site/active/kuaijie.html?invitation_code=C1xF2ECA89A2592&#34;&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/ucloud.png&#34; width=&#34;60px&#34;&gt;&lt;br&gt; &lt;sub&gt;云主机&lt;/sub&gt;&lt;br&gt; &lt;sub&gt;仅 4 元/月&lt;/sub&gt; &lt;/a&gt; &lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34; style=&#34;width: 80px;&#34;&gt; &lt;a href=&#34;https://www.upyun.com/&#34;&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/upyun.png&#34; width=&#34;60px&#34;&gt;&lt;br&gt; &lt;sub&gt;CDN&lt;/sub&gt;&lt;br&gt; &lt;sub&gt;开启全网加速&lt;/sub&gt; &lt;/a&gt; &lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34; style=&#34;width: 80px;&#34;&gt; &lt;a href=&#34;https://doc.rentsoft.cn/&#34;&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/im.png&#34; width=&#34;60px&#34;&gt;&lt;br&gt; &lt;sub&gt;OpenIM&lt;/sub&gt;&lt;br&gt; &lt;sub&gt;开源IM力争No.1&lt;/sub&gt; &lt;/a&gt; &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;声明&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a rel=&#34;license&#34; href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh&#34;&gt;&lt;img alt=&#34;知识共享许可协议&#34; style=&#34;border-width: 0&#34; src=&#34;https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png&#34;&gt;&lt;/a&gt;&lt;br&gt;本作品采用 &lt;a rel=&#34;license&#34; href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh&#34;&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 进行许可。&lt;a href=&#34;mailto:595666367@qq.com&#34;&gt;联系我&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>freqtrade/freqtrade</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/freqtrade/freqtrade</id>
    <link href="https://github.com/freqtrade/freqtrade" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free, open source crypto trading bot&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/freqtrade/freqtrade/develop/docs/assets/freqtrade_poweredby.svg?sanitize=true&#34; alt=&#34;freqtrade&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/freqtrade/freqtrade/actions/&#34;&gt;&lt;img src=&#34;https://github.com/freqtrade/freqtrade/workflows/Freqtrade%20CI/badge.svg?sanitize=true&#34; alt=&#34;Freqtrade CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/freqtrade/freqtrade?branch=develop&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/freqtrade/freqtrade/badge.svg?branch=develop&amp;amp;service=github&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.freqtrade.io&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/freqtrade/badge/&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/freqtrade/freqtrade/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/5737e6d668200b7518ff/maintainability&#34; alt=&#34;Maintainability&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Freqtrade is a free and open source crypto trading bot written in Python. It is designed to support all major exchanges and be controlled via Telegram or webUI. It contains backtesting, plotting and money management tools as well as strategy optimization by machine learning.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/freqtrade/freqtrade/develop/docs/assets/freqtrade-screenshot.png&#34; alt=&#34;freqtrade&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This software is for educational purposes only. Do not risk money which you are afraid to lose. USE THE SOFTWARE AT YOUR OWN RISK. THE AUTHORS AND ALL AFFILIATES ASSUME NO RESPONSIBILITY FOR YOUR TRADING RESULTS.&lt;/p&gt; &#xA;&lt;p&gt;Always start by running a trading bot in Dry-run and do not engage money before you understand how it works and what profit/loss you should expect.&lt;/p&gt; &#xA;&lt;p&gt;We strongly recommend you to have coding and Python knowledge. Do not hesitate to read the source code and understand the mechanism of this bot.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Exchange marketplaces&lt;/h2&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://raw.githubusercontent.com/freqtrade/freqtrade/develop/docs/exchanges.md&#34;&gt;exchange specific notes&lt;/a&gt; to learn about eventual, special configurations needed for each exchange.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://www.binance.com/&#34;&gt;Binance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://bittrex.com/&#34;&gt;Bittrex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://ftx.com/#a=2258149&#34;&gt;FTX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://www.gate.io/ref/6266643&#34;&gt;Gate.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;http://huobi.com/&#34;&gt;Huobi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://kraken.com/&#34;&gt;Kraken&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://okx.com/&#34;&gt;OKX&lt;/a&gt; (Former OKEX)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/ccxt/ccxt/&#34;&gt;potentially many others&lt;/a&gt;. &lt;em&gt;(We cannot guarantee they will work)&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported Futures Exchanges (experimental)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://www.binance.com/&#34;&gt;Binance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://www.gate.io/ref/6266643&#34;&gt;Gate.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://okx.com/&#34;&gt;OKX&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please make sure to read the &lt;a href=&#34;https://raw.githubusercontent.com/freqtrade/freqtrade/develop/docs/exchanges.md&#34;&gt;exchange specific notes&lt;/a&gt;, as well as the &lt;a href=&#34;https://raw.githubusercontent.com/freqtrade/freqtrade/develop/docs/leverage.md&#34;&gt;trading with leverage&lt;/a&gt; documentation before diving in.&lt;/p&gt; &#xA;&lt;h3&gt;Community tested&lt;/h3&gt; &#xA;&lt;p&gt;Exchanges confirmed working by the community:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://bitvavo.com/&#34;&gt;Bitvavo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://www.kucoin.com/&#34;&gt;Kucoin&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;We invite you to read the bot documentation to ensure you understand how the bot is working.&lt;/p&gt; &#xA;&lt;p&gt;Please find the complete documentation on the &lt;a href=&#34;https://www.freqtrade.io&#34;&gt;freqtrade website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Based on Python 3.8+&lt;/strong&gt;: For botting on any operating system - Windows, macOS and Linux.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Persistence&lt;/strong&gt;: Persistence is achieved through sqlite.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Dry-run&lt;/strong&gt;: Run the bot without paying money.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Backtesting&lt;/strong&gt;: Run a simulation of your buy/sell strategy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Strategy Optimization by machine learning&lt;/strong&gt;: Use machine learning to optimize your buy/sell strategy parameters with real exchange data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Edge position sizing&lt;/strong&gt; Calculate your win rate, risk reward ratio, the best stoploss and adjust your position size before taking a position for each specific market. &lt;a href=&#34;https://www.freqtrade.io/en/stable/edge/&#34;&gt;Learn more&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Whitelist crypto-currencies&lt;/strong&gt;: Select which crypto-currency you want to trade or use dynamic whitelists.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Blacklist crypto-currencies&lt;/strong&gt;: Select which crypto-currency you want to avoid.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Builtin WebUI&lt;/strong&gt;: Builtin web UI to manage your bot.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Manageable via Telegram&lt;/strong&gt;: Manage the bot with Telegram.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Display profit/loss in fiat&lt;/strong&gt;: Display your profit/loss in fiat currency.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Performance status report&lt;/strong&gt;: Provide a performance status of your current trades.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://www.freqtrade.io/en/stable/docker_quickstart/&#34;&gt;Docker Quickstart documentation&lt;/a&gt; on how to get started quickly.&lt;/p&gt; &#xA;&lt;p&gt;For further (native) installation methods, please refer to the &lt;a href=&#34;https://www.freqtrade.io/en/stable/installation/&#34;&gt;Installation documentation page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Basic Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Bot commands&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;usage: freqtrade [-h] [-V]&#xA;                 {trade,create-userdir,new-config,new-strategy,download-data,convert-data,convert-trade-data,list-data,backtesting,edge,hyperopt,hyperopt-list,hyperopt-show,list-exchanges,list-hyperopts,list-markets,list-pairs,list-strategies,list-timeframes,show-trades,test-pairlist,install-ui,plot-dataframe,plot-profit,webserver}&#xA;                 ...&#xA;&#xA;Free, open source crypto trading bot&#xA;&#xA;positional arguments:&#xA;  {trade,create-userdir,new-config,new-strategy,download-data,convert-data,convert-trade-data,list-data,backtesting,edge,hyperopt,hyperopt-list,hyperopt-show,list-exchanges,list-hyperopts,list-markets,list-pairs,list-strategies,list-timeframes,show-trades,test-pairlist,install-ui,plot-dataframe,plot-profit,webserver}&#xA;    trade               Trade module.&#xA;    create-userdir      Create user-data directory.&#xA;    new-config          Create new config&#xA;    new-strategy        Create new strategy&#xA;    download-data       Download backtesting data.&#xA;    convert-data        Convert candle (OHLCV) data from one format to&#xA;                        another.&#xA;    convert-trade-data  Convert trade data from one format to another.&#xA;    list-data           List downloaded data.&#xA;    backtesting         Backtesting module.&#xA;    edge                Edge module.&#xA;    hyperopt            Hyperopt module.&#xA;    hyperopt-list       List Hyperopt results&#xA;    hyperopt-show       Show details of Hyperopt results&#xA;    list-exchanges      Print available exchanges.&#xA;    list-hyperopts      Print available hyperopt classes.&#xA;    list-markets        Print markets on exchange.&#xA;    list-pairs          Print pairs on exchange.&#xA;    list-strategies     Print available strategies.&#xA;    list-timeframes     Print available timeframes for the exchange.&#xA;    show-trades         Show trades.&#xA;    test-pairlist       Test your pairlist configuration.&#xA;    install-ui          Install FreqUI&#xA;    plot-dataframe      Plot candles with indicators.&#xA;    plot-profit         Generate plot showing profits.&#xA;    webserver           Webserver module.&#xA;&#xA;optional arguments:&#xA;  -h, --help            show this help message and exit&#xA;  -V, --version         show program&#39;s version number and exit&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Telegram RPC commands&lt;/h3&gt; &#xA;&lt;p&gt;Telegram is not mandatory. However, this is a great way to control your bot. More details and the full command list on the &lt;a href=&#34;https://www.freqtrade.io/en/latest/telegram-usage/&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;/start&lt;/code&gt;: Starts the trader.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/stop&lt;/code&gt;: Stops the trader.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/stopbuy&lt;/code&gt;: Stop entering new trades.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/status &amp;lt;trade_id&amp;gt;|[table]&lt;/code&gt;: Lists all or specific open trades.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/profit [&amp;lt;n&amp;gt;]&lt;/code&gt;: Lists cumulative profit from all finished trades, over the last n days.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/forceexit &amp;lt;trade_id&amp;gt;|all&lt;/code&gt;: Instantly exits the given trade (Ignoring &lt;code&gt;minimum_roi&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/fx &amp;lt;trade_id&amp;gt;|all&lt;/code&gt;: Alias to &lt;code&gt;/forceexit&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/performance&lt;/code&gt;: Show performance of each finished trade grouped by pair&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/balance&lt;/code&gt;: Show account balance per currency.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/daily &amp;lt;n&amp;gt;&lt;/code&gt;: Shows profit or loss per day, over the last n days.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/help&lt;/code&gt;: Show help message.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/version&lt;/code&gt;: Show version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development branches&lt;/h2&gt; &#xA;&lt;p&gt;The project is currently setup in two main branches:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;develop&lt;/code&gt; - This branch has often new features, but might also contain breaking changes. We try hard to keep this branch as stable as possible.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stable&lt;/code&gt; - This branch contains the latest stable release. This branch is generally well tested.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;feat/*&lt;/code&gt; - These are feature branches, which are being worked on heavily. Please don&#39;t use these unless you want to test a specific feature.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;h3&gt;Help / Discord&lt;/h3&gt; &#xA;&lt;p&gt;For any questions not covered by the documentation or for further information about the bot, or to simply engage with like-minded individuals, we encourage you to join the Freqtrade &lt;a href=&#34;https://discord.gg/p7nuUNVfP7&#34;&gt;discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/freqtrade/freqtrade/issues?q=is%3Aissue&#34;&gt;Bugs / Issues&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;If you discover a bug in the bot, please &lt;a href=&#34;https://github.com/freqtrade/freqtrade/issues?q=is%3Aissue&#34;&gt;search the issue tracker&lt;/a&gt; first. If it hasn&#39;t been reported, please &lt;a href=&#34;https://github.com/freqtrade/freqtrade/issues/new/choose&#34;&gt;create a new issue&lt;/a&gt; and ensure you follow the template guide so that the team can assist you as quickly as possible.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/freqtrade/freqtrade/labels/enhancement&#34;&gt;Feature Requests&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Have you a great idea to improve the bot you want to share? Please, first search if this feature was not &lt;a href=&#34;https://github.com/freqtrade/freqtrade/labels/enhancement&#34;&gt;already discussed&lt;/a&gt;. If it hasn&#39;t been requested, please &lt;a href=&#34;https://github.com/freqtrade/freqtrade/issues/new/choose&#34;&gt;create a new request&lt;/a&gt; and ensure you follow the template guide so that it does not get lost in the bug reports.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/freqtrade/freqtrade/pulls&#34;&gt;Pull Requests&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Feel like the bot is missing a feature? We welcome your pull requests!&lt;/p&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://github.com/freqtrade/freqtrade/raw/develop/CONTRIBUTING.md&#34;&gt;Contributing document&lt;/a&gt; to understand the requirements before sending your pull-requests.&lt;/p&gt; &#xA;&lt;p&gt;Coding is not a necessity to contribute - maybe start with improving the documentation? Issues labeled &lt;a href=&#34;https://github.com/freqtrade/freqtrade/labels/good%20first%20issue&#34;&gt;good first issue&lt;/a&gt; can be good first contributions, and will help get you familiar with the codebase.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; before starting any major new feature work, &lt;em&gt;please open an issue describing what you are planning to do&lt;/em&gt; or talk to us on &lt;a href=&#34;https://discord.gg/p7nuUNVfP7&#34;&gt;discord&lt;/a&gt; (please use the #dev channel for this). This will ensure that interested parties can give valuable feedback on the feature, and let others know that you are working on it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Always create your PR against the &lt;code&gt;develop&lt;/code&gt; branch, not &lt;code&gt;stable&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;Up-to-date clock&lt;/h3&gt; &#xA;&lt;p&gt;The clock must be accurate, synchronized to a NTP server very frequently to avoid problems with communication to the exchanges.&lt;/p&gt; &#xA;&lt;h3&gt;Min hardware required&lt;/h3&gt; &#xA;&lt;p&gt;To run this bot we recommend you a cloud instance with a minimum of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Minimal (advised) system requirements: 2GB RAM, 1GB disk space, 2vCPU&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Software requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.python-guide.org/en/latest/starting/installation/&#34;&gt;Python &amp;gt;= 3.8&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pip.pypa.io/en/stable/installing/&#34;&gt;pip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&#34;&gt;git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mrjbq7.github.io/ta-lib/install.html&#34;&gt;TA-Lib&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://virtualenv.pypa.io/en/stable/installation.html&#34;&gt;virtualenv&lt;/a&gt; (Recommended)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docker.com/products/docker&#34;&gt;Docker&lt;/a&gt; (Recommended)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>XiaoMiku01/fansMedalHelper</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/XiaoMiku01/fansMedalHelper</id>
    <link href="https://github.com/XiaoMiku01/fansMedalHelper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;新版B站粉丝牌助手 全自动升级粉丝牌&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://s1.ax1x.com/2022/05/24/XPx1tx.png&#34; width=&#34;200&#34; height=&#34;200&#34; alt=&#34;&#34;&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt; 新 B 站粉丝牌助手 &lt;/h1&gt; &#xA; &lt;p&gt;当前版本：0.3.3&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;strong&gt;TODO&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 每日直播区签到&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 每日点赞 3 次直播间 （200*3 亲密度）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 每日分享 5 次直播间 （100*5 亲密度）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 每日弹幕打卡 （100 亲密度）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 每日观看 30 分钟 （100 亲密度）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 多账号支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 微信推送通知&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 多平台推送通知（可选）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;small&gt;ps: 新版 B 站粉丝牌的亲密度每一个牌子都将单独计算 &amp;nbsp;&lt;/small&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;使用说明&lt;/h3&gt; &#xA;&lt;p&gt;详细文档在这里 👉 &lt;a href=&#34;https://xiaomiku01.github.io/fansMedalHelperVersion/&#34;&gt;文档&lt;/a&gt;&lt;br&gt; &lt;strong&gt;请细心阅读&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;问题反馈&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;反馈交流群：979245756&lt;/li&gt; &#xA; &lt;li&gt;提 issue&lt;/li&gt; &#xA; &lt;li&gt;B 站私信 &lt;a href=&#34;https://space.bilibili.com/1772442517&#34;&gt;晓小轩 iAVA&lt;/a&gt;&lt;br&gt; &lt;strong&gt;提之前请明确问题主题和运行日志&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;友情链接&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;感谢 银弹 的 推送库 &lt;a href=&#34;https://github.com/y1ndan/onepush&#34;&gt;y1ndan/onepush&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;此脚本的 Go 语言实现版本 &lt;a href=&#34;https://github.com/ThreeCatsLoveFish/MedalHelper&#34;&gt;ThreeCatsLoveFish/MedalHelper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AW 的 B 站挂机助手 &lt;a href=&#34;https://github.com/andywang425/BLTH&#34;&gt;andywang425/BLTH&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;赞助&lt;/h3&gt; &#xA;&lt;img src=&#34;http://i0.hdslb.com/bfs/album/c267037c9513b8e44bc6ec95dbf772ff0439dce6.jpg&#34; width=&#34;500&#34;&gt;</summary>
  </entry>
  <entry>
    <title>iperov/DeepFaceLab</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/iperov/DeepFaceLab</id>
    <link href="https://github.com/iperov/DeepFaceLab" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DeepFaceLab is the leading software for creating deepfakes.&lt;/p&gt;&lt;hr&gt;&lt;table align=&#34;center&#34; border=&#34;0&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h1&gt;DeepFaceLab&lt;/h1&gt; &lt;a href=&#34;https://arxiv.org/abs/2005.05535&#34;&gt; &lt;/a&gt;&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2005.05535&#34;&gt;&lt;img src=&#34;https://static.arxiv.org/static/browse/0.3.0/images/icons/favicon.ico&#34; width=&#34;14&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://arxiv.org/abs/2005.05535&#34;&gt;https://arxiv.org/abs/2005.05535&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;the leading software for creating deepfakes&lt;/h3&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/DFL_welcome.png&#34; align=&#34;center&#34;&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/logo_tensorflow.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/logo_cuda.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/logo_directx.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;More than 95% of deepfake videos are created with DeepFaceLab.&lt;/p&gt; &lt;p&gt;DeepFaceLab is used by such popular youtube channels as&lt;/p&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/tiktok_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.tiktok.com/@deeptomcruise&#34;&gt;deeptomcruise&lt;/a&gt;&lt;/th&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/tiktok_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.tiktok.com/@1facerussia&#34;&gt;1facerussia&lt;/a&gt;&lt;/th&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/tiktok_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.tiktok.com/@arnoldschwarzneggar&#34;&gt;arnoldschwarzneggar&lt;/a&gt;&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;    &lt;/table&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/tiktok_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.tiktok.com/@mariahcareyathome?&#34;&gt;mariahcareyathome?&lt;/a&gt;&lt;/th&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/tiktok_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.tiktok.com/@diepnep&#34;&gt;diepnep&lt;/a&gt;&lt;/th&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/tiktok_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.tiktok.com/@mr__heisenberg&#34;&gt;mr__heisenberg&lt;/a&gt;&lt;/th&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/tiktok_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.tiktok.com/@deepcaprio&#34;&gt;deepcaprio&lt;/a&gt;&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;    &lt;/table&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/youtube_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.youtube.com/channel/UCGf4OlX_aTt8DlrgiH3jN3g/videos&#34;&gt;VFXChris Ume&lt;/a&gt;&lt;/th&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/youtube_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.youtube.com/channel/UCZXbWcv7fSZFTAZV4beckyw/videos&#34;&gt;Sham00k&lt;/a&gt;&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;    &lt;/table&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/youtube_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=A91P2qtPT54&amp;amp;list=PLayt6616lBclvOprvrC8qKGCO-mAhPRux&#34;&gt;Collider videos&lt;/a&gt;&lt;/th&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/youtube_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.youtube.com/channel/UCC0lK2Zo2BMXX-k1Ks0r7dg/videos&#34;&gt;iFake&lt;/a&gt;&lt;/th&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/youtube_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.youtube.com/channel/UCFh3gL0a8BS21g-DHvXZEeQ/videos&#34;&gt;NextFace&lt;/a&gt;&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;    &lt;/table&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/youtube_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.youtube.com/channel/UCC5BbFxqLQgfnWPhprmQLVg&#34;&gt;Futuring Machine&lt;/a&gt;&lt;/th&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/youtube_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.youtube.com/channel/UCRzgK52MmetD9aG8pDOID3g&#34;&gt;RepresentUS&lt;/a&gt;&lt;/th&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/youtube_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.youtube.com/c/corridorcrew/videos&#34;&gt;Corridor Crew&lt;/a&gt;&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;    &lt;/table&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/youtube_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.youtube.com/channel/UCkHecfDTcSazNZSKPEhtPVQ&#34;&gt;DeepFaker&lt;/a&gt;&lt;/th&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/youtube_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.youtube.com/c/DeepFakesinmovie/videos&#34;&gt;DeepFakes in movie&lt;/a&gt;&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;    &lt;/table&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/youtube_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.youtube.com/channel/UCkNFhcYNLQ5hr6A6lZ56mKA&#34;&gt;DeepFakeCreator&lt;/a&gt;&lt;/th&gt; &#xA;       &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/youtube_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.youtube.com/user/Jarkancio/videos&#34;&gt;Jarkan&lt;/a&gt;&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;    &lt;/table&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h1&gt;What can I do using DeepFaceLab?&lt;/h1&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h2&gt;Replace the face&lt;/h2&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/replace_the_face.jpg&#34; align=&#34;center&#34;&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h2&gt;De-age the face&lt;/h2&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;center&#34; width=&#34;50%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/deage_0_1.jpg&#34; align=&#34;center&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;50%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/deage_0_2.jpg&#34; align=&#34;center&#34;&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/youtube_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=Ddx5B-84ebo&#34;&gt;https://www.youtube.com/watch?v=Ddx5B-84ebo&lt;/a&gt;&lt;/p&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h2&gt;Replace the head&lt;/h2&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;center&#34; width=&#34;50%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/head_replace_0_1.jpg&#34; align=&#34;center&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;50%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/head_replace_0_2.jpg&#34; align=&#34;center&#34;&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/youtube_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=xr5FHd0AdlQ&#34;&gt;https://www.youtube.com/watch?v=xr5FHd0AdlQ&lt;/a&gt;&lt;/p&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;center&#34; width=&#34;50%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/head_replace_1_1.jpg&#34; align=&#34;center&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;50%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/head_replace_1_2.jpg&#34; align=&#34;center&#34;&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/youtube_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=RTjgkhMugVw&#34;&gt;https://www.youtube.com/watch?v=RTjgkhMugVw&lt;/a&gt;&lt;/p&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;center&#34; width=&#34;50%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/head_replace_2_1.jpg&#34; align=&#34;center&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;50%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/head_replace_2_2.jpg&#34; align=&#34;center&#34;&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/youtube_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=R9f7WD0gKPo&#34;&gt;https://www.youtube.com/watch?v=R9f7WD0gKPo&lt;/a&gt;&lt;/p&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h2&gt;Manipulate politicians lips&lt;/h2&gt; &lt;p&gt;(voice replacement is not included!) (also requires a skill in video editors such as &lt;em&gt;Adobe After Effects&lt;/em&gt; or &lt;em&gt;Davinci Resolve&lt;/em&gt;)&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/political_speech2.jpg&#34; align=&#34;center&#34;&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/youtube_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=IvY-Abd2FfM&#34;&gt;https://www.youtube.com/watch?v=IvY-Abd2FfM&lt;/a&gt;&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/political_speech3.jpg&#34; align=&#34;center&#34;&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/youtube_icon.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=ERQlaJ_czHU&#34;&gt;https://www.youtube.com/watch?v=ERQlaJ_czHU&lt;/a&gt;&lt;/p&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h1&gt;Deepfake native resolution progress&lt;/h1&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/deepfake_progress.png&#34; align=&#34;center&#34;&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/make_everything_ok.png&#34; align=&#34;center&#34;&gt; &lt;p&gt;Unfortunately, there is no &#34;make everything ok&#34; button in DeepFaceLab. You should spend time studying the workflow and growing your skills. A skill in programs such as &lt;em&gt;AfterEffects&lt;/em&gt; or &lt;em&gt;Davinci Resolve&lt;/em&gt; is also desirable.&lt;/p&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h2&gt;Mini tutorial&lt;/h2&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=kOIMXt8KK8M&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/mini_tutorial.jpg&#34; align=&#34;center&#34;&gt; &lt;/a&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h2&gt;Releases&lt;/h2&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://tinyurl.com/2p9cvt25&#34;&gt;Windows (magnet link)&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;Last release. Use torrent client to download.&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://mega.nz/folder/Po0nGQrA#dbbttiNWojCt8jzD4xYaPw&#34;&gt;Windows (Mega.nz)&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;Contains new and prev releases.&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://disk.yandex.ru/d/7i5XTKIKVg5UUg&#34;&gt;Windows (yandex.ru)&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;Contains new and prev releases.&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://github.com/chervonij/DFL-Colab&#34;&gt;Google Colab (github)&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;by @chervonij . You can train fakes for free using Google Colab.&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://github.com/nagadit/DeepFaceLab_Linux&#34;&gt;Linux (github)&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;by @nagadit&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://github.com/elemantalcode/dfl&#34;&gt;CentOS Linux (github)&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;May be outdated. By @elemantalcode&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table align=&#34;center&#34; border=&#34;0&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h2&gt;Links&lt;/h2&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h3&gt;Guides and tutorials&lt;/h3&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://mrdeepfakes.com/forums/thread-guide-deepfacelab-2-0-guide&#34;&gt;DeepFaceLab guide&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;Main guide&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://mrdeepfakes.com/forums/thread-guide-deepfacelab-2-0-guide?pid=18459#pid18459&#34;&gt;Faceset creation guide&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;How to create the right faceset&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://mrdeepfakes.com/forums/thread-guide-deepfacelab-google-colab-tutorial&#34;&gt;Google Colab guide&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;Guide how to train the fake on Google Colab&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://mrdeepfakes.com/forums/thread-deepfacelab-2-0-compositing-in-davinci-resolve-vegas-pro-and-after-effects&#34;&gt;Compositing&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;To achieve the highest quality, compose deepfake manually in video editors such as Davinci Resolve or Adobe AfterEffects&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://mrdeepfakes.com/forums/thread-deepfacelab-2-0-discussion-tips-suggestions&#34;&gt;Discussion and suggestions&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h3&gt;Supplementary material&lt;/h3&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://mrdeepfakes.com/forums/forum-celebrity-facesets&#34;&gt;Ready to work facesets&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;Celebrity facesets made by community&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://mrdeepfakes.com/forums/forum-trained-models&#34;&gt;Pretrained models&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;Pretrained models made by community&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h3&gt;Communication groups&lt;/h3&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://discord.gg/S2h7kPySQp&#34;&gt;Discord&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;Official discord channel. English / Russian.&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://t.me/joinchat/ElkhqlgJ0I5HhdJyFar80w&#34;&gt;Telegram group&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;Official telegram group. English / Russian. For anonymous communication. Don&#39;t forget to hide your phone number&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://mrdeepfakes.com/forums/forum-russian-community&#34;&gt;Русский форум&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://mrdeepfakes.com/forums/&#34;&gt;mrdeepfakes&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;the biggest NSFW English community&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://www.reddit.com/r/DeepFakesSFW/new/&#34;&gt;reddit r/DeepFakesSFW/&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;Post your deepfakes there !&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://www.reddit.com/r/RUdeepfakes/new/&#34;&gt;reddit r/RUdeepfakes/&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;Постим русские дипфейки сюда !&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; QQ群1095077489 &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;中文交流QQ群，商务合作找群主&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://www.dfldata.xyz&#34;&gt;dfldata.xyz&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;中文交流论坛，免费软件教程、模型、人脸数据&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://www.deepfaker.xyz/&#34;&gt;deepfaker.xyz&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;中文学习站（非官方)&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h2&gt;Related works&lt;/h2&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://github.com/iperov/DeepFaceLive&#34;&gt;DeepFaceLive&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;Real-time face swap for PC streaming or video calls&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://github.com/neuralchen/SimSwap&#34;&gt;neuralchen/SimSwap&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;Swapping face using ONE single photo 一张图免训练换脸&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;right&#34;&gt; &lt;a href=&#34;https://github.com/deepfakes/faceswap&#34;&gt;deepfakes/faceswap&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34;&gt;Something that was before DeepFaceLab and still remains in the past&lt;/td&gt;&#xA;  &lt;/tr&gt;  &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table align=&#34;center&#34; border=&#34;0&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h2&gt;How I can help the project?&lt;/h2&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h3&gt;Sponsor deepfake research and DeepFaceLab development.&lt;/h3&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;!--&#xA;&lt;tr&gt;&lt;td colspan=2 align=&#34;center&#34;&gt;&#xA;&lt;a href=&#34;https://www.paypal.com/paypalme/DeepFaceLab&#34;&gt;Donate via Paypal&lt;/a&gt;&#xA;&lt;/td&gt;&lt;/tr&gt;&#xA;--&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;a href=&#34;https://money.yandex.ru/to/41001142318065&#34;&gt;Donate via Yandex.Money&lt;/a&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; bitcoin:bc1qkhh7h0gwwhxgg6h6gpllfgstkd645fefrd5s6z &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h3&gt;Collect facesets&lt;/h3&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;p&gt;You can collect faceset of any celebrity that can be used in DeepFaceLab and share it &lt;a href=&#34;https://mrdeepfakes.com/forums/forum-celebrity-facesets&#34;&gt;in the community&lt;/a&gt;&lt;/p&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h3&gt;Star this repo&lt;/h3&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;p&gt;Register github account and push &#34;Star&#34; button.&lt;/p&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table align=&#34;center&#34; border=&#34;0&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h2&gt;Meme zone&lt;/h2&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;center&#34; width=&#34;50%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/meme1.jpg&#34; align=&#34;center&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; width=&#34;50%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/meme2.jpg&#34; align=&#34;center&#34;&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/iperov/DeepFaceLab/master/doc/meme3.jpg&#34; align=&#34;center&#34;&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td align=&#34;center&#34; width=&#34;50%&#34;&gt; &lt;h2&gt;You don&#39;t need deepfake detector. You need to stop lying.&lt;/h2&gt; &lt;/td&gt;&#xA;   &lt;td align=&#34;center&#34; width=&#34;10%&#34;&gt; &lt;img src=&#34;https://i.imgur.com/z0e0xFB.jpg&#34; align=&#34;center&#34;&gt; &lt;p&gt;V.I. Lenin&lt;/p&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;p&gt;&lt;sub&gt;#deepfacelab #deepfakes #faceswap #face-swap #deep-learning #deeplearning #deep-neural-networks #deepface #deep-face-swap #fakeapp #fake-app #neural-networks #neural-nets #tensorflow #cuda #nvidia&lt;/sub&gt;&lt;/p&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>abdulkadir-gungor/JPGtoMalware</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/abdulkadir-gungor/JPGtoMalware</id>
    <link href="https://github.com/abdulkadir-gungor/JPGtoMalware" rel="alternate"></link>
    <summary type="html">&lt;p&gt;It embeds the executable file or payload inside the jpg file. The method the program uses isn&#39;t exactly called one of the steganography methods. For this reason, it does not cause any distortion in the JPG file. The JPG file size and payload do not have to be proportional.The JPG file is displayed normally in any viewing application or web appli…&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JPGtoMalware&lt;/h1&gt; &#xA;&lt;p&gt;It embeds the executable file or payload inside the jpg file. The method the program uses isn&#39;t exactly called one of the steganography methods [secure cover selection, least significant bit, palette-based technique, etc ]. For this reason, it does not cause any distortion in the JPG file. The JPG file size and payload do not have to be proportional.The JPG file is displayed normally in any viewing application or web application. It can bypass various security programs such as firewall, antivirus. If the file is examined in detail, it is easier to detect than steganography methods.However, since the payload in the JPG file is encrypted, it cannot be easily decrypted. It also uses the &#34;garbage code insertion/dead-code insertion&#34; method to prevent the payload from being caught by the antivirus at runtime.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;File(s)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt; &lt;strong&gt;1) InjectingMalwareIntoJPG.py :&lt;/strong&gt; It is the script that embeds the payload into the JPG file.&lt;/p&gt; &#xA;&lt;p&gt; &lt;strong&gt;2) malware_v1.py :&lt;/strong&gt; It is the script that extracts the malware in the existing image file and runs it. The malware loaded JPG file must be in the same folder. (Default JPG Name : &#34;malwareJPG.jpg&#34;)&lt;/p&gt; &#xA;&lt;p&gt; &lt;strong&gt;3) malware_v2.py :&lt;/strong&gt; It is the script that extracts the malware in the JPG file downloaded from the internet and runs it. (Default Url : &#34;&lt;a href=&#34;https://raw.githubusercontent.com/abdulkadir-gungor/JPGtoMalware/main/.image/malwareJPG.jpg&#34;&gt;https://raw.githubusercontent.com/abdulkadir-gungor/JPGtoMalware/main/.image/malwareJPG.jpg&lt;/a&gt;&#34;) (After the script code is compiled, the values of the variables can be seen with the static analysis of the program.)&lt;/p&gt; &#xA;&lt;p&gt; &lt;strong&gt;4) malware_v3.py :&lt;/strong&gt; It is the script that extracts the malware in the JPG file downloaded from the internet and runs it. (Default Url : &#34;&lt;a href=&#34;https://raw.githubusercontent.com/abdulkadir-gungor/JPGtoMalware/main/.image/malwareJPG.jpg&#34;&gt;https://raw.githubusercontent.com/abdulkadir-gungor/JPGtoMalware/main/.image/malwareJPG.jpg&lt;/a&gt;&#34;) (After the script code is compiled, the values of the variables can be seen with dynamic analysis of the program.)&lt;/p&gt; &#xA;&lt;h2&gt;The Compiled Version of the Program Can be Downloaded from the Links Below.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71177413/169827598-5a1c7353-b39e-44c4-839b-ac7559001927.JPG&#34; alt=&#34;screenshot_1&#34;&gt;&lt;/p&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;   &#34;Injecting Malware Into JPG File&#34; &#xA; &lt;/dt&gt;&#xA; &lt;dd&gt; &#xA; &lt;/dd&gt;&#xA; &lt;dd&gt;&#xA;   InjectingMalwareIntoJPG.rar --&amp;gt; zip password: &#34;gungorX&#34; &#xA; &lt;/dd&gt;&#xA; &lt;dd&gt;&#xA;   Link = https://drive.google.com/file/d/1ENt-d0q-Yv-4mZALiUwqvZtp23JH415s/view?usp=sharing &#xA; &lt;/dd&gt;&#xA;&lt;/dl&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;   &#34;Malware V1&#34; &#xA; &lt;/dt&gt;&#xA; &lt;dd&gt; &#xA; &lt;/dd&gt;&#xA; &lt;dd&gt;&#xA;   malware_v1.rar --&amp;gt; zip password: &#34;gungorX&#34; &#xA; &lt;/dd&gt;&#xA; &lt;dd&gt;&#xA;   Link = https://drive.google.com/file/d/1kG2O2pKYxHz03zWpmywA-9CluSP7Orav/view?usp=sharing &#xA; &lt;/dd&gt;&#xA;&lt;/dl&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;   &#34;Malware V2&#34; &#xA; &lt;/dt&gt;&#xA; &lt;dd&gt; &#xA; &lt;/dd&gt;&#xA; &lt;dd&gt;&#xA;   malware_v2.rar --&amp;gt; zip password: &#34;gungorX&#34; &#xA; &lt;/dd&gt;&#xA; &lt;dd&gt;&#xA;   Link = https://drive.google.com/file/d/1yxvb3BjH3Xi3vbE7VTyBDeWGhr8v3cSX/view?usp=sharing &#xA; &lt;/dd&gt;&#xA;&lt;/dl&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;   &#34;Malware V3&#34; &#xA; &lt;/dt&gt;&#xA; &lt;dd&gt; &#xA; &lt;/dd&gt;&#xA; &lt;dd&gt;&#xA;   malware_v3.rar --&amp;gt; zip password: &#34;gungorX&#34; &#xA; &lt;/dd&gt;&#xA; &lt;dd&gt;&#xA;   Link = https://drive.google.com/file/d/1f_JQSrKTknlTg31rDeKOF3NpAVN9NO3C/view?usp=sharing &#xA; &lt;/dd&gt;&#xA;&lt;/dl&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Required libraries: colorama, cryptography, requests, pyinstaller&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install colorama&#xA;pip install cryptography&#xA;pip install requests&#xA;pip install pyinstaller&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&#34;pyinstaller&#34; will be used to make the code one piece executable&lt;/p&gt; &#xA;&lt;h2&gt;Settings&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;InjectingMalwareIntoJPG.py (Default Settings)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;class SETTINGS():&#xA;    PROGRAM_NAME = &#34;Injecting Malware Into JPG&#34;         # Program Name&#xA;    JPG_FILE = &#39;linux.jpg&#39;                              # Jpg file name      # The variable is changed again during the program run.&#xA;    EXE_FILE = &#34;malware.exe&#34;                            # Malware file name  # The variable is changed again during the program run.&#xA;    OUT_FILE = &#34;malwareJPG.jpg&#34;                         # Out file name&#xA;    PUPLIC_KEY = b&#39;!AbdUlkadiR%+39608]gunGor[{&#39;         # Encryption key&#xA;    PRIVATE_NUMBER = 19                                 # Encryption number&#xA;    BUFFER     = 1024                                   # Buffer for memory optimization&#xA;    FILL_SIZE  = 1073741824  # 1024x1024x1024 (1 GB)    # The size to increase the size of the executable file.&#xA;    WAIT_TIME  = 0.1                                    # Waiting time between processes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;malware_v1.py (Default Settings)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;class SETTINGS():&#xA;    JPG_NAME = &#39;malwareJPG.jpg&#39;                       # Jpg file name&#xA;    OUT_FILE = &#34;malware_test.exe&#34;                     # (to be created) Malware file name&#xA;    PUPLIC_KEY = b&#39;!AbdUlkadiR%+39608]gunGor[{&#39;       # Encryption key&#xA;    PRIVATE_NUMBER = 19                               # Encryption number&#xA;    BUFFER     = 1024                                 # Buffer for memory optimization&#xA;    WAIT_TIME  = 0.1                                  # Waiting time between processes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;malware_v2.py (Default Settings)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;class SETTINGS():&#xA;    URL_ADDR = &#34;https://raw.githubusercontent.com/abdulkadir-gungor/JPGtoMalware/main/.image/malwareJPG.jpg&#34;  # url where the image is located&#xA;    OUT_FILE = &#34;malware_test.exe&#34;                       # (to be created) Malware file name&#xA;    PUPLIC_KEY = b&#39;!AbdUlkadiR%+39608]gunGor[{&#39;         # Encryption key&#xA;    PRIVATE_NUMBER = 19                                 # Encryption number&#xA;    JPG_NAME  = &#39;malware_attack.jpg&#39;                    # Jpg file name&#xA;    BUFFER     = 1024                                   # Buffer for memory optimization&#xA;    WAIT_TIME  = 0.1                                    # Waiting time between processes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;malware_v3.py (Default Settings)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Encrypted data for static analysis&#xA;# However, variables can be resolved with dynamic analysis.&#xA;class SETTINGS():&#xA;    KEY      = b&#39;w3F4q2qyPG6WGHMwG6TrYq2R_ih9-_XTYH0H89J7UMk=&#39;&#xA;    URL_ADDR = b&#39;gAAAAABiinQIPIhKqfLYaKt76lRXeboIJfCDr0NGsGROzSLe3ndeSo9RxM-EXNzsxFjwC-sU3axowzYaZCgsSfMl4qe4rWGaLbmNY0zD6_S34lOO10a_idkEQpfVSld0BSM7Yd4LXpgH6Fvkuw36QVlzmI_NvQJ6v5_mgEmCIzhSbiuMHJ-p9hdj28-2cMRa1BcFWZBbbRe7&#39;&#xA;    OUT_FILE = b&#39;gAAAAABiinRLcZh6qJ959Mzqup5ZLOnGwAQBAFPXD6hebpSpI4u3M24Npi3lIbTjW5ImEYwiz6WfD8JOyrcDzjR5gpTun4pI0gPHjf-xi_LSboOy5B7hwXo=&#39;&#xA;    PUPLIC_KEY = b&#39;rt!1AtbydmUklvkaapdli+R)%=+4359?6#0!8-][gGu1nFGqoQrP[-{!Ue&amp;amp;&amp;amp;QcVb09@&#39;&#xA;    PRIVATE_NUMBER = 4&#xA;    JPG_NAME  = b&#39;gAAAAABiinSMlx2n6LSUzHfrET4UDnv_Fy7lc7h9zAKsC6p9ulM56yW0nXarAWvU2nmZqdNscglA9MLr2P3p20ADC3CWZsul4-YnfDiIFl13tZUnZ_BdDRU=&#39;&#xA;    BUFFER     = 1024&#xA;    WAIT_TIME  = 0.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compilation&lt;/h2&gt; &#xA;&lt;p&gt;[Language : Python 3.8.5]&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# [Program that produces jpg with malware]&#xA;pyinstaller --onefile  --icon=InjectingMalwareIntoJPG.ico InjectingMalwareIntoJPG.py&#xA;&#xA;# [Malware(s)]&#xA;pyinstaller --onefile  --noconsole  --icon=malware.ico  malware_v1.py&#xA;pyinstaller --onefile  --noconsole  --icon=malware.ico  malware_v2.py&#xA;pyinstaller --onefile  --noconsole  --icon=malware.ico  malware_v3.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Some Screenshot of the Working of the Program&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Screenshot [1] (InjectingMalwareIntoJPG.exe)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71177413/169830319-200b087d-f53e-41a2-80a9-d4d56ae95bdc.JPG&#34; alt=&#34;screenshot_2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Screenshot [2] (InjectingMalwareIntoJPG.exe)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71177413/169830432-b0c272d0-b79e-4f7a-981a-c32b5116cf08.JPG&#34; alt=&#34;screenshot_3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Screenshot [3] (malware_v1.exe)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71177413/169830565-2fbfefbe-140c-487b-876b-e9cda32a58e3.JPG&#34; alt=&#34;screenshot_4&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Screenshot [4] (malware_v1.exe)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71177413/169830641-594b4ed5-2fdb-49cb-adaa-c8f4a61ca4cc.JPG&#34; alt=&#34;screenshot_5&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Screenshot [5] (malware_v2.exe)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71177413/169830824-7f96234a-d4bb-4233-b21f-28f243a62510.JPG&#34; alt=&#34;screenshot_7&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Screenshot [6] (malware_v3.exe)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71177413/169830917-8119fc34-32f8-4aa3-aa78-9a4235941c10.JPG&#34; alt=&#34;screenshot_9&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Legal Warning&lt;/h2&gt; &#xA;&lt;p&gt;Run your tests on virtual machines. The responsibility for illegal use belongs to the user. Shared for educational purposes.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sebastianruder/NLP-progress</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/sebastianruder/NLP-progress</id>
    <link href="https://github.com/sebastianruder/NLP-progress" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repository to track the progress in Natural Language Processing (NLP), including the datasets and the current state-of-the-art for the most common NLP tasks.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tracking Progress in Natural Language Processing&lt;/h1&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;h3&gt;English&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/automatic_speech_recognition.md&#34;&gt;Automatic speech recognition&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/ccg.md&#34;&gt;CCG&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/common_sense.md&#34;&gt;Common sense&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/constituency_parsing.md&#34;&gt;Constituency parsing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/coreference_resolution.md&#34;&gt;Coreference resolution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/data_to_text_generation.md&#34;&gt;Data-to-Text Generation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/dependency_parsing.md&#34;&gt;Dependency parsing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/dialogue.md&#34;&gt;Dialogue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/domain_adaptation.md&#34;&gt;Domain adaptation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/entity_linking.md&#34;&gt;Entity linking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/grammatical_error_correction.md&#34;&gt;Grammatical error correction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/information_extraction.md&#34;&gt;Information extraction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/intent_detection_slot_filling.md&#34;&gt;Intent Detection and Slot Filling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/language_modeling.md&#34;&gt;Language modeling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/lexical_normalization.md&#34;&gt;Lexical normalization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/machine_translation.md&#34;&gt;Machine translation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/missing_elements.md&#34;&gt;Missing elements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/multi-task_learning.md&#34;&gt;Multi-task learning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/multimodal.md&#34;&gt;Multi-modal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/named_entity_recognition.md&#34;&gt;Named entity recognition&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/natural_language_inference.md&#34;&gt;Natural language inference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/part-of-speech_tagging.md&#34;&gt;Part-of-speech tagging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/paraphrase-generation.md&#34;&gt;Paraphrase Generation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/question_answering.md&#34;&gt;Question answering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/relation_prediction.md&#34;&gt;Relation prediction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/relationship_extraction.md&#34;&gt;Relationship extraction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/semantic_textual_similarity.md&#34;&gt;Semantic textual similarity&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/semantic_parsing.md&#34;&gt;Semantic parsing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/semantic_role_labeling.md&#34;&gt;Semantic role labeling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/sentiment_analysis.md&#34;&gt;Sentiment analysis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/shallow_syntax.md&#34;&gt;Shallow syntax&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/simplification.md&#34;&gt;Simplification&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/stance_detection.md&#34;&gt;Stance detection&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/summarization.md&#34;&gt;Summarization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/taxonomy_learning.md&#34;&gt;Taxonomy learning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/temporal_processing.md&#34;&gt;Temporal processing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/text_classification.md&#34;&gt;Text classification&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/english/word_sense_disambiguation.md&#34;&gt;Word sense disambiguation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Vietnamese&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/vietnamese/vietnamese.md#dependency-parsing&#34;&gt;Dependency parsing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/vietnamese/vietnamese.md#intent-detection-and-slot-filling&#34;&gt;Intent detection and Slot filling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/vietnamese/vietnamese.md#machine-translation&#34;&gt;Machine translation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/vietnamese/vietnamese.md#named-entity-recognition&#34;&gt;Named entity recognition&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/vietnamese/vietnamese.md#part-of-speech-tagging&#34;&gt;Part-of-speech tagging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/vietnamese/vietnamese.md#semantic-parsing&#34;&gt;Semantic parsing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/vietnamese/vietnamese.md#word-segmentation&#34;&gt;Word segmentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Hindi&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/hindi/hindi.md#chunking&#34;&gt;Chunking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/hindi/hindi.md#part-of-speech-tagging&#34;&gt;Part-of-speech tagging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/hindi/hindi.md#machine-translation&#34;&gt;Machine Translation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Chinese&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/chinese/chinese.md#entity-linking&#34;&gt;Entity linking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/chinese/chinese_word_segmentation.md&#34;&gt;Chinese word segmentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/chinese/question_answering.md&#34;&gt;Question answering&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more tasks, datasets and results in Chinese, check out the &lt;a href=&#34;https://chinesenlp.xyz/#/&#34;&gt;Chinese NLP&lt;/a&gt; website.&lt;/p&gt; &#xA;&lt;h3&gt;French&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/french/question_answering.md&#34;&gt;Question answering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/french/summarization.md&#34;&gt;Summarization&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Russian&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/russian/question_answering.md&#34;&gt;Question answering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/russian/sentiment-analysis.md&#34;&gt;Sentiment Analysis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/russian/summarization.md&#34;&gt;Summarization&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Spanish&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/spanish/named_entity_recognition.md&#34;&gt;Named Entity Recognition&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/spanish/entity_linking.md#entity-linking&#34;&gt;Entity linking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/spanish/summarization.md&#34;&gt;Summarization&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Portuguese&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/portuguese/question_answering.md&#34;&gt;Question Answering&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Korean&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/korean/question_answering.md&#34;&gt;Question Answering&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Nepali&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/nepali/nepali.md#machine-translation&#34;&gt;Machine Translation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Bengali&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/bengali/part_of_speech_tagging.md&#34;&gt;Part-of-speech Tagging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/bengali/sentiment_analysis.md&#34;&gt;Sentiment Analysis&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Persian&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/persian/named_entity_recognition.md&#34;&gt;Named entity recognition&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/persian/natural_language_inference.md&#34;&gt;Natural language inference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/persian/summarization.md&#34;&gt;Summarization&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Turkish&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/turkish/summarization.md&#34;&gt;Summarization&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;German&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/german/summarization.md&#34;&gt;Summarization&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Arabic&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/arabic/language_modeling.md&#34;&gt;Language modeling&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This document aims to track the progress in Natural Language Processing (NLP) and give an overview of the state-of-the-art (SOTA) across the most common NLP tasks and their corresponding datasets.&lt;/p&gt; &#xA;&lt;p&gt;It aims to cover both traditional and core NLP tasks such as dependency parsing and part-of-speech tagging as well as more recent ones such as reading comprehension and natural language inference. The main objective is to provide the reader with a quick overview of benchmark datasets and the state-of-the-art for their task of interest, which serves as a stepping stone for further research. To this end, if there is a place where results for a task are already published and regularly maintained, such as a public leaderboard, the reader will be pointed there.&lt;/p&gt; &#xA;&lt;p&gt;If you want to find this document again in the future, just go to &lt;a href=&#34;https://nlpprogress.com/&#34;&gt;&lt;code&gt;nlpprogress.com&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;http://nlpsota.com/&#34;&gt;&lt;code&gt;nlpsota.com&lt;/code&gt;&lt;/a&gt; in your browser.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;h4&gt;Guidelines&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;Results&lt;/strong&gt; &amp;nbsp; Results reported in published papers are preferred; an exception may be made for influential preprints.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Datasets&lt;/strong&gt; &amp;nbsp; Datasets should have been used for evaluation in at least one published paper besides the one that introduced the dataset.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Code&lt;/strong&gt; &amp;nbsp; We recommend to add a link to an implementation if available. You can add a &lt;code&gt;Code&lt;/code&gt; column (see below) to the table if it does not exist. In the &lt;code&gt;Code&lt;/code&gt; column, indicate an official implementation with &lt;a href=&#34;http://link_to_implementation&#34;&gt;Official&lt;/a&gt;. If an unofficial implementation is available, use &lt;a href=&#34;http://link_to_implementation&#34;&gt;Link&lt;/a&gt; (see below). If no implementation is available, you can leave the cell empty.&lt;/p&gt; &#xA;&lt;h4&gt;Adding a new result&lt;/h4&gt; &#xA;&lt;p&gt;If you would like to add a new result, you can just click on the small edit button in the top-right corner of the file for the respective task (see below).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/img/edit_file.png&#34; alt=&#34;Click on the edit button to add a file&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This allows you to edit the file in Markdown. Simply add a row to the corresponding table in the same format. Make sure that the table stays sorted (with the best result on top). After you&#39;ve made your change, make sure that the table still looks ok by clicking on the &#34;Preview changes&#34; tab at the top of the page. If everything looks good, go to the bottom of the page, where you see the below form.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/img/propose_file_change.png&#34; alt=&#34;Fill out the file change information&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Add a name for your proposed change, an optional description, indicate that you would like to &#34;Create a new branch for this commit and start a pull request&#34;, and click on &#34;Propose file change&#34;.&lt;/p&gt; &#xA;&lt;h4&gt;Adding a new dataset or task&lt;/h4&gt; &#xA;&lt;p&gt;For adding a new dataset or task, you can also follow the steps above. Alternatively, you can fork the repository. In both cases, follow the steps below:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If your task is completely new, create a new file and link to it in the table of contents above.&lt;/li&gt; &#xA; &lt;li&gt;If not, add your task or dataset to the respective section of the corresponding file (in alphabetical order).&lt;/li&gt; &#xA; &lt;li&gt;Briefly describe the dataset/task and include relevant references.&lt;/li&gt; &#xA; &lt;li&gt;Describe the evaluation setting and evaluation metric.&lt;/li&gt; &#xA; &lt;li&gt;Show how an annotated example of the dataset/task looks like.&lt;/li&gt; &#xA; &lt;li&gt;Add a download link if available.&lt;/li&gt; &#xA; &lt;li&gt;Copy the below table and fill in at least two results (including the state-of-the-art) for your dataset/task (change Score to the metric of your dataset). If your dataset/task has multiple metrics, add them to the right of &lt;code&gt;Score&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Submit your change as a pull request.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Score&lt;/th&gt; &#xA;   &lt;th&gt;Paper / Source&lt;/th&gt; &#xA;   &lt;th&gt;Code&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Wish list&lt;/h3&gt; &#xA;&lt;p&gt;These are tasks and datasets that are still missing:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bilingual dictionary induction&lt;/li&gt; &#xA; &lt;li&gt;Discourse parsing&lt;/li&gt; &#xA; &lt;li&gt;Keyphrase extraction&lt;/li&gt; &#xA; &lt;li&gt;Knowledge base population (KBP)&lt;/li&gt; &#xA; &lt;li&gt;More dialogue tasks&lt;/li&gt; &#xA; &lt;li&gt;Semi-supervised learning&lt;/li&gt; &#xA; &lt;li&gt;Frame-semantic parsing (FrameNet full-sentence analysis)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Exporting into a structured format&lt;/h3&gt; &#xA;&lt;p&gt;You can extract all the data into a structured, machine-readable JSON format with parsed tasks, descriptions and SOTA tables.&lt;/p&gt; &#xA;&lt;p&gt;The instructions are in &lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/structured/README.md&#34;&gt;structured/README.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Instructions for building the site locally&lt;/h3&gt; &#xA;&lt;p&gt;Instructions for building the website locally using Jekyll can be found &lt;a href=&#34;https://raw.githubusercontent.com/sebastianruder/NLP-progress/master/jekyll_instructions.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pyodide/pyodide</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/pyodide/pyodide</id>
    <link href="https://github.com/pyodide/pyodide" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pyodide is a Python distribution for the browser and Node.js based on WebAssembly&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/pyodide/pyodide&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/pyodide/pyodide/main/docs/_static/img/pyodide-logo-readme.png&#34; alt=&#34;Pyodide&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/pyodide&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/pyodide&#34; alt=&#34;NPM Latest Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/pyodide-build/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/pyodide-build.svg?sanitize=true&#34; alt=&#34;PyPI Latest Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/pyodide/pyodide&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/pyodide/pyodide.png&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pyodide.readthedocs.io/?badge=stable&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/pyodide/badge/?version=stable&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pyodide is a Python distribution for the browser and Node.js based on WebAssembly.&lt;/p&gt; &#xA;&lt;h2&gt;What is Pyodide?&lt;/h2&gt; &#xA;&lt;p&gt;Pyodide is a port of CPython to WebAssembly/&lt;a href=&#34;https://emscripten.org/&#34;&gt;Emscripten&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Pyodide makes it possible to install and run Python packages in the browser with &lt;a href=&#34;https://pyodide.org/en/stable/usage/api/micropip-api.html&#34;&gt;micropip&lt;/a&gt;. Any pure Python package with a wheel available on PyPi is supported. Many packages with C extensions have also been ported for use with Pyodide. These include many general-purpose packages such as regex, PyYAML, lxml and scientific Python packages including NumPy, pandas, SciPy, Matplotlib, and scikit-learn.&lt;/p&gt; &#xA;&lt;p&gt;Pyodide comes with a robust Javascript ⟺ Python foreign function interface so that you can freely mix these two languages in your code with minimal friction. This includes full support for error handling (throw an error in one language, catch it in the other), async/await, and much more.&lt;/p&gt; &#xA;&lt;p&gt;When used inside a browser, Python has full access to the Web APIs.&lt;/p&gt; &#xA;&lt;h2&gt;Try Pyodide (no installation needed)&lt;/h2&gt; &#xA;&lt;p&gt;Try Pyodide in a &lt;a href=&#34;https://pyodide.org/en/stable/console.html&#34;&gt;REPL&lt;/a&gt; directly in your browser. For further information, see the &lt;a href=&#34;https://pyodide.org/en/stable/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Pyodide offers three different ways to get started depending on your needs and technical resources. These include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use a hosted distribution of Pyodide: see the &lt;a href=&#34;https://pyodide.org/en/stable/usage/quickstart.html&#34;&gt;Getting Started&lt;/a&gt; documentation.&lt;/li&gt; &#xA; &lt;li&gt;Download a version of Pyodide from the &lt;a href=&#34;https://github.com/pyodide/pyodide/releases/&#34;&gt;releases page&lt;/a&gt; and serve it with a web server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pyodide.org/en/stable/development/building-from-sources.html&#34;&gt;Build Pyodide from source&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Build natively with &lt;code&gt;make&lt;/code&gt;: primarily for Linux users who want to experiment or contribute back to the project.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://pyodide.org/en/stable/development/building-from-sources.html#using-docker&#34;&gt;Use a Docker image&lt;/a&gt;: recommended for Windows and macOS users and for Linux users who prefer a Debian-based Docker image with the dependencies already installed.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;Pyodide was created in 2018 by &lt;a href=&#34;https://github.com/mdboom&#34;&gt;Michael Droettboom&lt;/a&gt; at Mozilla as part of the &lt;a href=&#34;https://github.com/iodide-project/iodide&#34;&gt;Iodide project&lt;/a&gt;. Iodide is an experimental web-based notebook environment for literate scientific computing and communication.&lt;/p&gt; &#xA;&lt;p&gt;Iodide is no longer maintained. If you want to use Pyodide in an interactive client-side notebook, see &lt;a href=&#34;https://pyodide.org/en/stable/project/related-projects.html#notebook-environments-ides-repls&#34;&gt;Pyodide notebook environments&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please view the &lt;a href=&#34;https://pyodide.org/en/stable/development/contributing.html&#34;&gt;contributing guide&lt;/a&gt; for tips on filing issues, making changes, and submitting pull requests. Pyodide is an independent and community-driven open-source project. The decision-making process is outlined in the &lt;a href=&#34;https://pyodide.org/en/stable/project/governance.html&#34;&gt;Project governance&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Blog: &lt;a href=&#34;https://blog.pyodide.org/&#34;&gt;blog.pyodide.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mailing list: &lt;a href=&#34;https://mail.python.org/mailman3/lists/pyodide.python.org/&#34;&gt;mail.python.org/mailman3/lists/pyodide.python.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gitter: &lt;a href=&#34;https://gitter.im/pyodide/community&#34;&gt;gitter.im/pyodide/community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/pyodide&#34;&gt;twitter.com/pyodide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stack Overflow: &lt;a href=&#34;https://stackoverflow.com/questions/tagged/pyodide&#34;&gt;stackoverflow.com/questions/tagged/pyodide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Pyodide uses the &lt;a href=&#34;https://choosealicense.com/licenses/mpl-2.0/&#34;&gt;Mozilla Public License Version 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sam5epi0l/BotTuber</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/sam5epi0l/BotTuber</id>
    <link href="https://github.com/sam5epi0l/BotTuber" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fully Automated YouTube Channel ▶️with Added Extra Features (Automated Title, Description, Tags, Watermark and much more)&lt;/p&gt;&lt;hr&gt;&lt;h4&gt;Graphql error in instalooter not been resolved yet!&lt;/h4&gt; &#xA;&lt;h1&gt;Fully Automated Youtube Channel&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;░█▀▀█ █▀▀█ ▀▀█▀▀ ▀▀█▀▀ █──█ █▀▀▄ █▀▀ █▀▀█ &#xA;░█▀▀▄ █──█ ──█── ─░█── █──█ █▀▀▄ █▀▀ █▄▄▀ &#xA;░█▄▄█ ▀▀▀▀ ──▀── ─░█── ─▀▀▀ ▀▀▀─ ▀▀▀ ▀─▀▀&#xA;🄵🅄🄻🄻 🅈🄾🅄🅃🅄🄱🄴 🄲🄷🄰🄽🄽🄴🄻 🄰🅄🅃🄾🄼🄰🅃🄸🄾🄽 🅂🅄🄸🅃🄴&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sam5epi0l/BotTuber/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/sam5epi0l/BotTuber?color=lightgreeen&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sam5epi0l/BotTuber/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/sam5epi0l/BotTuber?color=brightgreen&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sam5epi0l/BotTuber/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/sam5epi0l/BotTuber?color=blue&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sam5epi0l/BotTuber/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/sam5epi0l/BotTuber?color=lightgrey&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;img align=&#34;right&#34; width=&#34;450&#34; src=&#34;https://gh-card.dev/repos/sam5epi0l/BotTuber.png?fullname=&#34; alt=&#34;git status&#34;&gt; &lt;img align=&#34;right&#34; width=&#34;150&#34; src=&#34;https://raw.githubusercontent.com/sam5epi0l/BotTuber/master/BotTuber.png&#34; alt=&#34;BotTuber LOGO&#34;&gt; &lt;a href=&#34;https://twitter.com/intent/tweet?text=Wow:&amp;amp;url=https%3A%2F%2Fgithub.com%2Fsam5epi0l%2FBotTuber&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url?style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Fsam5epi0l?style=for-the-badge&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://youtu.be/BbPErvcqXyw&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/videoTutorial-BotTuber-red&#34; alt=&#34;YouTube&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Code to run a fully automated youtube that can scrape content, edit a compilation, and upload to youtube daily.&lt;/p&gt; &#xA;&lt;h1&gt;Features😶‍🌫️&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. Interactive  Auto/Manual mode&#xA;2. Makes Compilation (Intro &amp;amp; Outro)&#xA;3. Auto Title, Description &amp;amp; Tags &#xA;4. Auto TimeStamps &amp;amp; Credits (Username &amp;amp; Caption from Video)&#xA;5. Edit description.txt when in manual mode&#xA;6. Add Watermark to final Video&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Quick Start🐿️&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/sam5epi0l/BotTuber.git&#xA;cd BotTuber&#xA;# add instagram credentials in config.py&#xA;# add YouTube API v3 credentials to googleAPI.json (check instructions)&#xA;pip3 install -r requirements.txt&#xA;python3 botTuber.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage📄&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 botTuber.py -i # interactive mode&#xA;python3 botTuber.py -a # Full automation&#xA;python3 botTuber.py -m # manual mode&#xA;python3 botTuber.py -h # help menu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Instructions✅&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sam5epi0l/BotTuber.git&#34;&gt;Download&lt;/a&gt; the Github Repository&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download and install &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python3&lt;/a&gt; and &lt;a href=&#34;https://pip.pypa.io/en/stable/installing/&#34;&gt;pip&lt;/a&gt; if necessary.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install libraries with &lt;code&gt;pip3 install -r requirements.txt&lt;/code&gt; or &lt;code&gt;python3 -m pip install -r requirements.txt&lt;/code&gt; .&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Get setup and create a Project with the Youtube API: &lt;a href=&#34;https://developers.google.com/youtube/v3/quickstart/python&#34;&gt;https://developers.google.com/youtube/v3/quickstart/python&lt;/a&gt; Be sure to follow it carefully, as it won&#39;t work if you don&#39;t do this part right. Download your OATH file and name it as &#34;googleAPI.json&#34; in your project folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create an instagram account and follow accounts you want to scrape from&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open config.py in a text editor and fill in instagram credentials&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Note that you can edit variables inside botTuber.py in a text editor and things such as MAX_CLIP_LENGTH, Title, Description, Tags, etc..&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;8&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;In terminal/cmd, run &lt;code&gt;instalooter login&lt;/code&gt; and &lt;code&gt;instaloader --login {YOUR_USERNAME}&lt;/code&gt;. Follow the instructions to login.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;python3 botTuber.py&lt;/code&gt; in your computer terminal (terminal or cmd). You have to sign in to your Youtube Account through the link the script will give you. It&#39;s going to ask you: &#34;Please visit this URL to authorize this application:...&#34; so you copy that link, paste it in your browser, and then sign into your Google account. Then paste the authentication code you get back into your terminal. It will then say &#34;Starting Scraping&#34; and sign into your instagram account.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Type &#34;A&#34; to run automated script or &#34;M&#34; to manually decide what to do at each step&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enjoy your fully automated youtube channel! :) Note that for uploading public videos, you have to complete an audit for the Youtube API. See the note in the &lt;a href=&#34;https://developers.google.com/youtube/v3/docs/videos/insert&#34;&gt;Google Documentation&lt;/a&gt;. Without this, you can only post private videos, but they approve everyone. Have fun!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people who have improved the code and documentation to help this project grow. :&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/sam5epi0l&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/68191144?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sam-sepiol&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sam5epi0l/BotTuber/master/#content-sam5epi0l&#34; title=&#34;Content&#34;&gt;🖋&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/nathan-149&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5115108?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;nathan Ang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sam5epi0l/BotTuber/master/#content-nathan-Ang&#34; title=&#34;Content&#34;&gt;🖋&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind are welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Socials&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtube.com/c/pwnos&#34;&gt;YouTube_Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.buymeacoffee.com/sam5epi0l&#34;&gt;Buy Me A Coffee&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.patreon.com/pwnOS&#34;&gt;Patreon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://linkedin.com/in/sam-sepi0l/&#34;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pwnos.quora.com/&#34;&gt;Quora&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sam5epi0l&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tryhackme.com/signup?referrer=sam.sepiol&#34;&gt;TryHackMe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/pwn05/&#34;&gt;Reddit&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>vnpy/vnpy</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/vnpy/vnpy</id>
    <link href="https://github.com/vnpy/vnpy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;基于Python的开源量化交易平台开发框架&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VeighNa - By Traders, For Traders.&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://vnpy.oss-cn-shanghai.aliyuncs.com/veighna-logo.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;💬 Want to read this in &lt;strong&gt;english&lt;/strong&gt; ? Go &lt;a href=&#34;https://raw.githubusercontent.com/vnpy/vnpy/master/README_ENG.md&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/version-3.1.0-blueviolet.svg?sanitize=true&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/platform-windows|linux|macos-yellow.svg&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/python-3.7|3.8|3.9|3.10-blue.svg&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/vnpy/vnpy/Python%20application/master&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/vnpy/vnpy.svg?color=orange&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;VeighNa是一套基于Python的开源量化交易系统开发框架，在开源社区持续不断的贡献下一步步成长为多功能量化交易平台，自发布以来已经积累了众多来自金融机构或相关领域的用户，包括私募基金、证券公司、期货公司等。&lt;/p&gt; &#xA;&lt;p&gt;《VeighNa实战进阶》系列在线课程，已经在官方微信公众号[&lt;strong&gt;VeighNa开源量化&lt;/strong&gt;]上线，覆盖30天入门、CTA策略、期权波动率交易等内容。购买请扫描下方二维码关注后，点击菜单栏的【进阶资料】按钮即可：&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://vnpy.oss-cn-shanghai.aliyuncs.com/vnpy_qr.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;在使用VeighNa进行二次开发（策略、模块等）的过程中有任何疑问，请查看&lt;a href=&#34;https://www.vnpy.com/docs/cn/index.html&#34;&gt;&lt;strong&gt;VeighNa项目文档&lt;/strong&gt;&lt;/a&gt;，如果无法解决请前往&lt;a href=&#34;https://www.vnpy.com/forum/&#34;&gt;&lt;strong&gt;官方社区论坛&lt;/strong&gt;&lt;/a&gt;的【提问求助】板块寻求帮助，也欢迎在【经验分享】板块分享你的使用心得！&lt;/p&gt; &#xA;&lt;p&gt;针对VeighNa的金融机构用户，创建了一个专门的【VeighNa机构用户群】（QQ群号：676499931），主要分享机构应用方面相关的问题，如：银行间市场接入、资管O32系统、分布式部署等内容。请注意本群只对金融机构用户开放，加群时请注明：姓名-机构-部门。&lt;/p&gt; &#xA;&lt;h2&gt;功能特点&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;多功能量化交易平台（trader），整合了多种交易接口，并针对具体策略算法和功能开发提供了简洁易用的API，用于快速构建交易员所需的量化交易应用。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;覆盖国内外所拥有的下述交易品种的交易接口（gateway）：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;国内市场&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;CTP（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_ctp&#34;&gt;ctp&lt;/a&gt;）：国内期货、期权&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;CTP Mini（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_mini&#34;&gt;mini&lt;/a&gt;）：国内期货、期权&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;CTP证券（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_sopt&#34;&gt;sopt&lt;/a&gt;）：ETF期权&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;飞马（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_femas&#34;&gt;femas&lt;/a&gt;）：国内期货&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;恒生UFT（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_uft&#34;&gt;uft&lt;/a&gt;）：国内期货、ETF期权&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;易盛（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_esunny&#34;&gt;esunny&lt;/a&gt;）：国内期货、黄金TD&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;顶点飞创（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_sec&#34;&gt;sec&lt;/a&gt;）：ETF期权&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;顶点HTS（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_hts&#34;&gt;hts&lt;/a&gt;）：ETF期权&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;南华NHTD（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_nhtd&#34;&gt;nhtd&lt;/a&gt;）：国内期货、ETF期权&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;中泰XTP（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_xtp&#34;&gt;xtp&lt;/a&gt;）：国内证券（A股）、ETF期权&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;华鑫奇点（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_tora&#34;&gt;tora&lt;/a&gt;）：国内证券（A股）、ETF期权&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;国泰君安（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_hft&#34;&gt;hft&lt;/a&gt;）：国内证券（A股、两融）&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;东证OST（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_ost&#34;&gt;ost&lt;/a&gt;）：国内证券（A股）&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;飞鼠（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_sgit&#34;&gt;sgit&lt;/a&gt;）：黄金TD、国内期货&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;金仕达黄金（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_ksgold&#34;&gt;ksgold&lt;/a&gt;）：黄金TD&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;融航（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_rohon&#34;&gt;rohon&lt;/a&gt;）：期货资管&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;中汇亿达（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_comstar&#34;&gt;comstar&lt;/a&gt;）：银行间市场&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;TTS（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_tts&#34;&gt;tts&lt;/a&gt;）：国内期货（仿真）&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;恒生云UF（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_uf&#34;&gt;uf&lt;/a&gt;）：国内证券（仿真）&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;火象（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_hx&#34;&gt;hx&lt;/a&gt;）：国内期货（仿真）&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;海外市场&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;Interactive Brokers（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_ib&#34;&gt;ib&lt;/a&gt;）：海外证券、期货、期权、贵金属等&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;易盛9.0外盘（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_tap&#34;&gt;tap&lt;/a&gt;）：海外期货&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;直达期货（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_da&#34;&gt;da&lt;/a&gt;）：海外期货&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;特殊应用&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;RPC服务（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_rpcservice&#34;&gt;rpc&lt;/a&gt;）：跨进程通讯接口，用于分布式架构&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;覆盖下述各类量化策略的交易应用（app）：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.github.com/vnpy/vnpy_ctastrategy&#34;&gt;cta_strategy&lt;/a&gt;：CTA策略引擎模块，在保持易用性的同时，允许用户针对CTA类策略运行过程中委托的报撤行为进行细粒度控制（降低交易滑点、实现高频策略）&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.github.com/vnpy/vnpy_ctabacktester&#34;&gt;cta_backtester&lt;/a&gt;：CTA策略回测模块，无需使用Jupyter Notebook，直接使用图形界面进行策略回测分析、参数优化等相关工作&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.github.com/vnpy/vnpy_spreadtrading&#34;&gt;spread_trading&lt;/a&gt;：价差交易模块，支持自定义价差，实时计算价差行情和持仓，支持价差算法交易以及自动价差策略两种模式&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.github.com/vnpy/vnpy_optionmaster&#34;&gt;option_master&lt;/a&gt;：期权交易模块，针对国内期权市场设计，支持多种期权定价模型、隐含波动率曲面计算、希腊值风险跟踪等功能&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.github.com/vnpy/vnpy_portfoliostrategy&#34;&gt;portfolio_strategy&lt;/a&gt;：组合策略模块，面向同时交易多合约的量化策略（Alpha、期权套利等），提供历史数据回测和实盘自动交易功能&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.github.com/vnpy/vnpy_algotrading&#34;&gt;algo_trading&lt;/a&gt;：算法交易模块，提供多种常用的智能交易算法：TWAP、Sniper、Iceberg、BestLimit等&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.github.com/vnpy/vnpy_scripttrader&#34;&gt;script_trader&lt;/a&gt;：脚本策略模块，面向多标的类量化策略和计算任务设计，同时也可以在命令行中实现REPL指令形式的交易，不支持回测功能&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.github.com/vnpy/vnpy_paperaccount&#34;&gt;paper_account&lt;/a&gt;：本地仿真模块，纯本地化实现的仿真模拟交易功能，基于交易接口获取的实时行情进行委托撮合，提供委托成交推送以及持仓记录&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.github.com/vnpy/vnpy_chartwizard&#34;&gt;chart_wizard&lt;/a&gt;：K线图表模块，基于RQData数据服务（期货）或者交易接口获取历史数据，并结合Tick推送显示实时行情变化&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.github.com/vnpy/vnpy_portfoliomanager&#34;&gt;portfolio_manager&lt;/a&gt;：交易组合管理模块，以独立的策略交易组合（子账户）为基础，提供委托成交记录管理、交易仓位自动跟踪以及每日盈亏实时统计功能&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.github.com/vnpy/vnpy_rpcservice&#34;&gt;rpc_service&lt;/a&gt;：RPC服务模块，允许将某一进程启动为服务端，作为统一的行情和交易路由通道，允许多客户端同时连接，实现多进程分布式系统&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.github.com/vnpy/vnpy_datamanager&#34;&gt;data_manager&lt;/a&gt;：历史数据管理模块，通过树形目录查看数据库中已有的数据概况，选择任意时间段数据查看字段细节，支持CSV文件的数据导入和导出&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.github.com/vnpy/vnpy_datarecorder&#34;&gt;data_recorder&lt;/a&gt;：行情记录模块，基于图形界面进行配置，根据需求实时录制Tick或者K线行情到数据库中，用于策略回测或者实盘初始化&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.github.com/vnpy/vnpy_excelrtd&#34;&gt;excel_rtd&lt;/a&gt;：Excel RTD（Real Time Data）实时数据服务，基于pyxll模块实现在Excel中获取各类数据（行情、合约、持仓等）的实时推送更新&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.github.com/vnpy/vnpy_riskmanager&#34;&gt;risk_manager&lt;/a&gt;：风险管理模块，提供包括交易流控、下单数量、活动委托、撤单总数等规则的统计和限制，有效实现前端风控功能&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.github.com/vnpy/vnpy_webtrader&#34;&gt;web_trader&lt;/a&gt;：Web服务模块，针对B-S架构需求设计，实现了提供主动函数调用（REST）和被动数据推送（Websocket）的Web服务器&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Python交易API接口封装（api），提供上述交易接口的底层对接实现。&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;REST Client（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_rest&#34;&gt;rest&lt;/a&gt;）：基于协程异步IO的高性能REST API客户端，采用事件消息循环的编程模型，支持高并发实时交易请求发送&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Websocket Client（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_websocket&#34;&gt;websocket&lt;/a&gt;）：基于协程异步IO的高性能Websocket API客户端，支持和REST Client共用事件循环并发运行&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;简洁易用的事件驱动引擎（event），作为事件驱动型交易程序的核心。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;对接各类数据库的适配器接口（database）：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;SQL类&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;SQLite（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_sqlite&#34;&gt;sqlite&lt;/a&gt;）：轻量级单文件数据库，无需安装和配置数据服务程序，VeighNa的默认选项，适合入门新手用户&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;MySQL（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_mysql&#34;&gt;mysql&lt;/a&gt;）：主流的开源关系型数据库，文档资料极为丰富，且可替换其他NewSQL兼容实现（如TiDB）&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;PostgreSQL（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_postgresql&#34;&gt;postgresql&lt;/a&gt;）：特性更为丰富的开源关系型数据库，支持通过扩展插件来新增功能，只推荐熟手使用&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;NoSQL类&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;DolphinDB（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_dolphindb&#34;&gt;dolphindb&lt;/a&gt;）：一款高性能分布式时序数据库，适用于对速度要求极高的低延时或实时性任务&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Arctic（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_arctic&#34;&gt;arctic&lt;/a&gt;）：高性能金融时序数据库，采用了分块化储存、LZ4压缩等性能优化方案，以实现时序数据的高效读写&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;MongoDB（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_mongodb&#34;&gt;mongodb&lt;/a&gt;）：基于分布式文件储存（bson格式）的文档式数据库，内置的热数据内存缓存提供更快读写速度&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;InfluxDB（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_influxdb&#34;&gt;influxdb&lt;/a&gt;）：针对TimeSeries Data专门设计的时序数据库，列式数据储存提供极高的读写效率和外围分析应用&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;LevelDB（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_leveldb&#34;&gt;leveldb&lt;/a&gt;）：由Google推出的高性能Key/Value数据库，基于LSM算法实现进程内存储引擎，支持数十亿级别的海量数据&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;对接下述各类数据服务的适配器接口（datafeed）：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;米筐RQData（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_rqdata&#34;&gt;rqdata&lt;/a&gt;）：股票、期货、期权、基金、债券、黄金TD&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;恒生UData（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_udata&#34;&gt;udata&lt;/a&gt;）：股票、期货、期权&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;TuShare（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_tushare&#34;&gt;tushare&lt;/a&gt;）：股票、期货、期权、基金&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;万得Wind（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_wind&#34;&gt;wind&lt;/a&gt;）：股票、期货、基金、债券&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;天软Tinysoft（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_tinysoft&#34;&gt;tinysoft&lt;/a&gt;）：股票、期货、基金、债券&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;同花顺iFinD（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_ifind&#34;&gt;ifind&lt;/a&gt;）：股票、期货、基金、债券&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;天勤TQSDK（&lt;a href=&#34;https://www.github.com/vnpy/vnpy_tqsdk&#34;&gt;tqsdk&lt;/a&gt;）：期货&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;跨进程通讯标准组件（rpc），用于实现分布式部署的复杂交易系统。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Python高性能K线图表（chart），支持大数据量图表显示以及实时数据更新功能。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www.vnpy.com/forum&#34;&gt;社区论坛&lt;/a&gt;和&lt;a href=&#34;http://zhuanlan.zhihu.com/vn-py&#34;&gt;知乎专栏&lt;/a&gt;，内容包括VeighNa项目的开发教程和Python在量化交易领域的应用研究等内容。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;官方交流群262656087（QQ），管理严格（定期清除长期潜水的成员），入群费将捐赠给VeighNa社区基金。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;注：以上关于功能特点的说明为根据说明文档发布时情况罗列，后续可能存在更新或调整。若功能描述同实际存在出入，欢迎通过Issue联系进行调整。&lt;/p&gt; &#xA;&lt;h2&gt;环境准备&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;推荐使用VeighNa团队为量化交易专门打造的Python发行版&lt;a href=&#34;https://download.vnpy.com/veighna_studio-3.1.0.exe&#34;&gt;VeighNa Studio-3.1.0&lt;/a&gt;，集成内置了VeighNa框架以及VeighNa Station量化管理平台，无需手动安装&lt;/li&gt; &#xA; &lt;li&gt;支持的系统版本：Windows 10以上 / Windows Server 2016以上 / Ubuntu 20.04 LTS以上&lt;/li&gt; &#xA; &lt;li&gt;支持的Python版本：Python 3.7/ 3.8 / 3.9 / 3.10 64位（&lt;strong&gt;推荐使用Python 3.10&lt;/strong&gt;）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;安装步骤&lt;/h2&gt; &#xA;&lt;p&gt;在&lt;a href=&#34;https://github.com/vnpy/vnpy/releases&#34;&gt;这里&lt;/a&gt;下载Release发布版本，解压后运行以下命令安装：&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;install.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Macos&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash install_osx.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;注意：setup.cfg中列举了VeighNa框架安装所需的依赖库，requirements.txt中给出了这些依赖库的推荐安装版本。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;使用指南&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;在&lt;a href=&#34;http://www.simnow.com.cn/&#34;&gt;SimNow&lt;/a&gt;注册CTP仿真账号，并在&lt;a href=&#34;http://www.simnow.com.cn/product.action&#34;&gt;该页面&lt;/a&gt;获取经纪商代码以及交易行情服务器地址。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在&lt;a href=&#34;https://www.vnpy.com/forum/&#34;&gt;VeighNa社区论坛&lt;/a&gt;注册获得VeighNa Station账号密码（论坛账号密码即是）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启动VeighNa Station（安装VeighNa Studio后会在桌面自动创建快捷方式），输入上一步的账号密码登录&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;点击底部的&lt;strong&gt;VeighNa Trader&lt;/strong&gt;按钮，开始你的交易！！！&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;注意：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在VeighNa Trader的运行过程中请勿关闭VeighNa Station（会自动退出）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;脚本运行&lt;/h2&gt; &#xA;&lt;p&gt;除了基于VeighNa Station的图形化启动方式外，也可以在任意目录下创建run.py，写入以下示例代码：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;from vnpy.event import EventEngine&#xA;from vnpy.trader.engine import MainEngine&#xA;from vnpy.trader.ui import MainWindow, create_qapp&#xA;&#xA;from vnpy_ctp import CtpGateway&#xA;from vnpy_ctastrategy import CtaStrategyApp&#xA;from vnpy_ctabacktester import CtaBacktesterApp&#xA;&#xA;&#xA;def main():&#xA;    &#34;&#34;&#34;Start VeighNa Trader&#34;&#34;&#34;&#xA;    qapp = create_qapp()&#xA;&#xA;    event_engine = EventEngine()&#xA;    main_engine = MainEngine(event_engine)&#xA;    &#xA;    main_engine.add_gateway(CtpGateway)&#xA;    main_engine.add_app(CtaStrategyApp)&#xA;    main_engine.add_app(CtaBacktesterApp)&#xA;&#xA;    main_window = MainWindow(main_engine, event_engine)&#xA;    main_window.showMaximized()&#xA;&#xA;    qapp.exec()&#xA;&#xA;&#xA;if __name__ == &#34;__main__&#34;:&#xA;    main()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;在该目录下打开CMD（按住Shift-&amp;gt;点击鼠标右键-&amp;gt;在此处打开命令窗口/PowerShell）后运行下列命令启动VeighNa Trader：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python run.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;贡献代码&lt;/h2&gt; &#xA;&lt;p&gt;VeighNa使用Github托管其源代码，如果希望贡献代码请使用github的PR（Pull Request）的流程:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/vnpy/vnpy/issues/new&#34;&gt;创建 Issue&lt;/a&gt; - 对于较大的改动（如新功能，大型重构等）建议先开issue讨论一下，较小的improvement（如文档改进，bufix等）直接发PR即可&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fork &lt;a href=&#34;https://github.com/vnpy/vnpy&#34;&gt;VeighNa&lt;/a&gt; - 点击右上角&lt;strong&gt;Fork&lt;/strong&gt;按钮&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone你自己的fork: &lt;code&gt;git clone https://github.com/$userid/vnpy.git&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;如果你的fork已经过时，需要手动sync：&lt;a href=&#34;https://help.github.com/articles/syncing-a-fork/&#34;&gt;同步方法&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;从&lt;strong&gt;dev&lt;/strong&gt;创建你自己的feature branch: &lt;code&gt;git checkout -b $my_feature_branch dev&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在$my_feature_branch上修改并将修改push到你的fork上&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;创建从你的fork的$my_feature_branch分支到主项目的&lt;strong&gt;dev&lt;/strong&gt;分支的[Pull Request] - &lt;a href=&#34;https://github.com/vnpy/vnpy/compare?expand=1&#34;&gt;在此&lt;/a&gt;点击&lt;strong&gt;compare across forks&lt;/strong&gt;，选择需要的fork和branch创建PR&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;等待review, 需要继续改进，或者被Merge!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;在提交代码的时候，请遵守以下规则，以提高代码质量：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用&lt;a href=&#34;https://pypi.org/project/flake8/&#34;&gt;flake8&lt;/a&gt;检查你的代码，确保没有error和warning。在项目根目录下运行&lt;code&gt;flake8&lt;/code&gt;即可。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;其他内容&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vnpy/vnpy/raw/dev/.github/SUPPORT.md&#34;&gt;获取帮助&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vnpy/vnpy/raw/dev/.github/CODE_OF_CONDUCT.md&#34;&gt;社区行为准则&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vnpy/vnpy/raw/dev/.github/ISSUE_TEMPLATE.md&#34;&gt;Issue模板&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vnpy/vnpy/raw/dev/.github/PULL_REQUEST_TEMPLATE.md&#34;&gt;PR模板&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;版权说明&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TheSpeedX/TBomb</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/TheSpeedX/TBomb</id>
    <link href="https://github.com/TheSpeedX/TBomb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is a SMS And Call Bomber For Linux And Termux&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/TheSpeedX/TBomb&#34;&gt;&lt;img src=&#34;https://i.ibb.co/F4HBKqm/TBomb.png&#34; alt=&#34;TBomb&#34;&gt;&lt;/a&gt; &lt;br&gt; TBomb v2.1b &lt;br&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;A free and open-source SMS/Call bombing application&lt;/p&gt; &#xA;&lt;h2&gt;NOTE:&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Due to the overuse of script, a bunch of APIs have been taken offline. It is okay if you do not receive all the messages.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The application requires active internet connection to contact the APIs&lt;/li&gt; &#xA; &lt;li&gt;You would not be charged for any SMS/calls dispatched as a consequence of this script&lt;/li&gt; &#xA; &lt;li&gt;For best performance, use single thread with considerable delay time&lt;/li&gt; &#xA; &lt;li&gt;Always ensure that you are using the latest version of TBomb and have Python 3&lt;/li&gt; &#xA; &lt;li&gt;This application must not be used to cause harm/discomfort/trouble to others&lt;/li&gt; &#xA; &lt;li&gt;By using this, you agree that you cannot hold the contributors responsible for any misuse&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;Check your Python version by typing in&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ python --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you get the following&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Python 3.8.3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or any version greater than or equal to 3.4, this script has been tested and confirmed to be supported. For obsolete versions of Python (eg 2.7), use discretion while executing the script as it has not been tested there.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Over 15 integrated messaging and calling APIs included with JSON&lt;/li&gt; &#xA; &lt;li&gt;Unlimited (with abuse protection) and super-fast bombing with multithreading&lt;/li&gt; &#xA; &lt;li&gt;Possibility of international API support (APIs are offline)&lt;/li&gt; &#xA; &lt;li&gt;Flexible with addition of newer APIs with the help of JSON documents&lt;/li&gt; &#xA; &lt;li&gt;Actively supported by the developers with frequent updates and bug-fixes&lt;/li&gt; &#xA; &lt;li&gt;Intuitive auto-update feature and notification fetch feature included&lt;/li&gt; &#xA; &lt;li&gt;Recently made free and open-source for community contributions&lt;/li&gt; &#xA; &lt;li&gt;Modular codebase and snippets can be easily embedded in other program&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage:&lt;/h2&gt; &#xA;&lt;h3&gt;Install by PIP (Recommended)&lt;/h3&gt; &#xA;&lt;p&gt;Before continuing make sure following requirements are satisfied:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python version greater than or equal to 3.4 is installed&lt;/li&gt; &#xA; &lt;li&gt;pip is installed for Python 3&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Install &lt;code&gt;tbomb&lt;/code&gt; package by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip3 install tbomb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run TBomb by just typing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;tbomb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install from GIT&lt;/h3&gt; &#xA;&lt;h4&gt;NOTE&lt;/h4&gt; &#xA;&lt;p&gt;Git installation methods are not universal and are likely to differ between distributions so installing Git as per the given instructions below may not work. Please check out how to install Git for your Linux distribution &lt;a href=&#34;https://git-scm.com/&#34;&gt;here&lt;/a&gt;. Commands below provide instructions for Debian-based systems.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Running &lt;code&gt;TBomb.sh&lt;/code&gt; as sudo miscofigures files ownership. It is recommended not to run it as sudo&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Run these commands to clone and run TBomb.&lt;/p&gt; &#xA;&lt;h4&gt;For Termux&lt;/h4&gt; &#xA;&lt;p&gt;To use the bomber type the following commands in Termux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pkg install git -y &#xA;pkg install python -y &#xA;git clone https://github.com/TheSpeedX/TBomb.git&#xA;cd TBomb&#xA;./TBomb.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;For iSH&lt;/h4&gt; &#xA;&lt;p&gt;To use the application, type in the following commands in iSH.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;apk add git&#xA;apk add python3&#xA;apk add py3-pip&#xA;apk add ruby&#xA;gem install toilet&#xA;git clone https://github.com/TheSpeedX/TBomb.git&#xA;cd TBomb&#xA;pip3 install -r requirements.txt&#xA;chmod +x TBomb.sh&#xA;./TBomb.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;For Debian-based GNU/Linux distributions&lt;/h4&gt; &#xA;&lt;p&gt;To use the application, type in the following commands in GNU/Linux terminal.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt install git&#xA;git clone https://github.com/TheSpeedX/TBomb.git&#xA;cd TBomb&#xA;bash TBomb.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;For MacOS&lt;/h4&gt; &#xA;&lt;p&gt;To use the application, type in the following commands in MacOS terminal:&lt;/p&gt; &#xA;&lt;h5&gt;Install via Homebrew&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;/bin/bash -c &#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Install dependencies:&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew install git&#xA;brew install python3&#xA;sudo easy_install pip&#xA;sudo pip install --upgrade pip&#xA;git clone https://github.com/TheSpeedX/TBomb.git&#xA;cd TBomb&#xA;bash TBomb.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Missing Tools on MacOS&lt;/h5&gt; &#xA;&lt;p&gt;The package &lt;code&gt;toilet&lt;/code&gt; cannot be installed yet on macOS. But TBomb does still work.&lt;/p&gt; &#xA;&lt;h3&gt;Demonstrative Video:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Watch Indian Bombing Method &lt;a href=&#34;https://youtu.be/9KWkwsr_QGw&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Watch International Bombing Method &lt;a href=&#34;https://youtu.be/JqsHkyIcnPM&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Catch &lt;strong&gt;&lt;a href=&#34;https://github.com/t0xic0der&#34;&gt;t0xic0der&lt;/a&gt;&lt;/strong&gt; at &lt;a href=&#34;https://atlasdoc.netlify.app&#34;&gt;https://atlasdoc.netlify.app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check &lt;strong&gt;&lt;a href=&#34;https://github.com/AvinashReddy3108&#34;&gt;Avinash&lt;/a&gt;&lt;/strong&gt; at &lt;a href=&#34;https://github.com/AvinashReddy3108&#34;&gt;https://github.com/AvinashReddy3108&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mail &lt;strong&gt;&lt;a href=&#34;https://github.com/scpketer&#34;&gt;scpketer&lt;/a&gt;&lt;/strong&gt; at &lt;a href=&#34;mailto:scpketer@protonmail.ch&#34;&gt;scpketer@protonmail.ch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mail &lt;strong&gt;&lt;a href=&#34;https://github.com/0n1cOn3&#34;&gt;0n1cOn3&lt;/a&gt;&lt;/strong&gt; at &lt;a href=&#34;mailto:0n1cOn3@gmx.ch&#34;&gt;0n1cOn3@gmx.ch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ping &lt;strong&gt;Rieltar&lt;/strong&gt; at &lt;a href=&#34;https://t.me/RieltarReborn&#34;&gt;https://t.me/RieltarReborn&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Donators:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TheSpeedX/TBomb/master/34db0y@protonmail.com&#34;&gt;34D30Y&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SC AMAN&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;TODO:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Make Code More Readable and Extensible&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add More Mail Spam APIs&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add More SMS Spam APIs&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add More Call Spam APIs&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Resolve threading issue in some devices&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; Is there any TBomb Website/App ?&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; There is no official website/app yet.The only official releases of TBomb are published in &lt;a href=&#34;https://github.com/TheSpeedX/TBomb&#34;&gt;Github&lt;/a&gt; and &lt;a href=&#34;https://pypi.org/project/tbomb&#34;&gt;PyPi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; Poor Internet Connection Detected:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Here are a few stuff you can try:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check your connection.&lt;/li&gt; &#xA; &lt;li&gt;Make sure &lt;code&gt;openssl&lt;/code&gt; is installed.&lt;/li&gt; &#xA; &lt;li&gt;Try to &lt;code&gt;ping&lt;/code&gt; any remote site/address to be sure.&lt;/li&gt; &#xA; &lt;li&gt;Try to reinstall if nothing works.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; Do you support &#34;X&#34; Country?&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Most Countries are supported for SMS and only India for calls. The SMS delivery rate might be different for different countries.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; Can you add support for &#34;X&#34; Country?&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; We do what we can, but we cannot promise. Please stay tuned for future support. If you are ready to help then maybe we can do faster.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; Why is the limit so low?&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Due the amount of requests, the APIs can die. To prevent a bigger outtake of TBomb, it has been limited.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; Help, I got the error that the requirements aren&#39;t installed, even when the installer has successfully reached the main menu&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; First, make sure &lt;code&gt;python3&lt;/code&gt; and &lt;code&gt;pip3&lt;/code&gt; are installed.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Easy Method:&lt;br&gt; &lt;code&gt;pip3 install tbomb&lt;/code&gt;&lt;br&gt; Then execute by simply running &lt;code&gt;tbomb&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;The Git Method:&lt;br&gt; Clone the repo and Switch to the TBomb Directory and execute this command:&lt;br&gt; &lt;code&gt;pip3 install -r requirements.txt&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; Help, It says &lt;code&gt;command &#39;tbomb&#39; not found&lt;/code&gt; after installing PIP version!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Try running &lt;code&gt;sudo pip3 install tbomb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; Help, I can&#39;t execute TBomb.sh!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Run TBomb Directly with &lt;code&gt;python3 bomber.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; Should I use VPN?&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; No, If you are facing high fail rate as TBomb can fail due the high response time or API restrictions.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; How to get protection ?&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Use OTP blockers and activate DND.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; Why does it fail?&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Due to the overuse of script, a bunch of APIs have been taken offline. It is okay if you do not receive all the messages.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Support&lt;/h3&gt; &#xA;&lt;p&gt;For Queries: &lt;a href=&#34;https://t.me/TBombChat&#34;&gt;Telegram Group&lt;/a&gt;&lt;br&gt; Contributions, issues, and feature requests are welcome!&lt;br&gt; Give a ★ if you like this project!&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt; Last FAQ Update: 08.08.2021 &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tintinweb/smart-contract-sanctuary</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/tintinweb/smart-contract-sanctuary</id>
    <link href="https://github.com/tintinweb/smart-contract-sanctuary" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐦🌴🌴🌴🦕 A home for ethereum smart contracts. 🏠&lt;/p&gt;&lt;hr&gt;&lt;sup&gt; &lt;b&gt;Smart Contract Sanctuary - MultiRepo / Index&lt;/b&gt;&lt;br&gt; ⚠️&lt;b&gt;UPDATE:&lt;/b&gt; Repo layout changed! see &lt;a href=&#34;https://github.com/tintinweb/smart-contract-sanctuary/issues/13&#34;&gt;#13&lt;/a&gt; (&lt;a href=&#34;https://github.com/tintinweb/smart-contract-sanctuary/releases/tag/v1&#34;&gt;v1-layout&lt;/a&gt;) &lt;/sup&gt; &#xA;&lt;h1&gt;Smart Contract Sanctuary&lt;/h1&gt; &#xA;&lt;p&gt;🐦🌴🌴🌴🦕 A home for ethereum smart contracts verified on Etherscan. 🏠 &lt;br&gt;&lt;br&gt; &lt;sup&gt; &lt;strong&gt;⇝&lt;/strong&gt; This is the &lt;strong&gt;index repository&lt;/strong&gt; for the &lt;strong&gt;smart-contract-sanctuary&lt;/strong&gt;. 🔖 Bookmark this repo.&lt;br&gt; &lt;strong&gt;⇝&lt;/strong&gt; Chain-specific sub-repos and the index are updated twice a day.&lt;br&gt; &lt;strong&gt;⇝&lt;/strong&gt; Expect a full, recursive check-out to take 2GB+ disk space.&lt;br&gt; &lt;/sup&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The repo is configured for use with &lt;code&gt;git+ssh&lt;/code&gt; (much more stable and faster).&lt;/p&gt; &#xA;&lt;h4&gt;First time - clone the index and checkout all chain-specific sub repositories from scratch:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;⇒  git clone --recursive --depth=1 git@github.com:tintinweb/smart-contract-sanctuary.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;sub&gt; also see &lt;a href=&#34;https://git-scm.com/docs/git-submodule&#34;&gt;https://git-scm.com/docs/git-submodule&lt;/a&gt; for more options&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Existing repository but submodules never initialized - checkout submodules and update all chain-specific sub repositories:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;⇒  git submodule update --init --remote --depth=1 --progress&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Existing repository with submodules - update all chain-specific sub repositories:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;⇒  git submodule update --remote --progress&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Layout&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Folder&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;_docs&lt;/td&gt; &#xA;   &lt;td&gt;autogenerated stats; static github page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;lt;chain&amp;gt;&lt;sub&gt;/contracts&lt;/sub&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Chain specific smart contracts&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;↳ &lt;a href=&#34;https://github.com/tintinweb/smart-contract-sanctuary-ethereum&#34;&gt;ethereum&lt;/a&gt;&lt;sub&gt;/contracts&lt;/sub&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Git SubModule 👉 &lt;a href=&#34;https://github.com/tintinweb/smart-contract-sanctuary-ethereum&#34;&gt;https://github.com/tintinweb/smart-contract-sanctuary-ethereum&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;↳ &lt;a href=&#34;https://github.com/tintinweb/smart-contract-sanctuary-arbitrum&#34;&gt;arbitrum&lt;/a&gt;&lt;sub&gt;/contracts&lt;/sub&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Git SubModule 👉 &lt;a href=&#34;https://github.com/tintinweb/smart-contract-sanctuary-arbitrum&#34;&gt;https://github.com/tintinweb/smart-contract-sanctuary-arbitrum&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;↳ &lt;a href=&#34;https://github.com/tintinweb/smart-contract-sanctuary-avalanche&#34;&gt;avalanche&lt;/a&gt;&lt;sub&gt;/contracts&lt;/sub&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Git SubModule 👉 &lt;a href=&#34;https://github.com/tintinweb/smart-contract-sanctuary-avalanche&#34;&gt;https://github.com/tintinweb/smart-contract-sanctuary-avalanche&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;↳ &lt;a href=&#34;https://github.com/tintinweb/smart-contract-sanctuary-bsc&#34;&gt;bsc&lt;/a&gt;&lt;sub&gt;/contracts&lt;/sub&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Git SubModule 👉 &lt;a href=&#34;https://github.com/tintinweb/smart-contract-sanctuary-bsc&#34;&gt;https://github.com/tintinweb/smart-contract-sanctuary-bsc&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;↳ &lt;a href=&#34;https://github.com/tintinweb/smart-contract-sanctuary-fantom&#34;&gt;fantom&lt;/a&gt;&lt;sub&gt;/contracts&lt;/sub&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Git SubModule 👉 &lt;a href=&#34;https://github.com/tintinweb/smart-contract-sanctuary-fantom&#34;&gt;https://github.com/tintinweb/smart-contract-sanctuary-fantom&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;↳ &lt;a href=&#34;https://github.com/tintinweb/smart-contract-sanctuary-polygon&#34;&gt;polygon&lt;/a&gt;&lt;sub&gt;/contracts&lt;/sub&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Git SubModule 👉 &lt;a href=&#34;https://github.com/tintinweb/smart-contract-sanctuary-polygon&#34;&gt;https://github.com/tintinweb/smart-contract-sanctuary-polygon&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;↳ &lt;a href=&#34;https://github.com/tintinweb/smart-contract-sanctuary-tron&#34;&gt;tron&lt;/a&gt;&lt;sub&gt;/contracts&lt;/sub&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Git SubModule 👉 &lt;a href=&#34;https://github.com/tintinweb/smart-contract-sanctuary-tron&#34;&gt;https://github.com/tintinweb/smart-contract-sanctuary-tron&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;↳ &lt;a href=&#34;https://github.com/tintinweb/smart-contract-sanctuary-optimism&#34;&gt;optimism&lt;/a&gt;&lt;sub&gt;/contracts&lt;/sub&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Git SubModule 👉 &lt;a href=&#34;https://github.com/tintinweb/smart-contract-sanctuary-optimism&#34;&gt;https://github.com/tintinweb/smart-contract-sanctuary-optimism&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;lt;chain&amp;gt;&lt;sub&gt;/utils&lt;/sub&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Chain specific support scripts&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h5&gt;📂 &amp;lt;chain&amp;gt;/contracts&lt;/h5&gt; &#xA;&lt;p&gt;Contains smart contract sources for various networks, grouped by the first two chars of the contract address. Files are named in the format &lt;code&gt;&amp;lt;address&amp;gt;_&amp;lt;source_unit_name&amp;gt;&lt;/code&gt;, e.g. &lt;code&gt;0f0c3fedb6226cd5a18826ce23bec92d18336a98_URToken.sol&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Some contracts are listed in &lt;code&gt;contracts.json&lt;/code&gt;, but the file-system may contain more files than what is listed in this summary. Rely on the folder/file structure for a full list. This repo used to auto submit contracts to &lt;a href=&#34;https://www.4byte.directory/&#34;&gt;4byte.directory&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;📂 &amp;lt;chain&amp;gt;/utils&lt;/h5&gt; &#xA;&lt;p&gt;Support scripts for various activies like dumping smart contracts from public sources (etherscan.io, etherchain.com)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;requires:&lt;/strong&gt; &lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h6&gt;Dev Notes&lt;/h6&gt; &#xA;&lt;p&gt;To use &lt;a href=&#34;https://etherscan.io/exportData?type=open-source-contract-codes&#34;&gt;List of Verified Contract addresses with an OpenSource license&lt;/a&gt;, you can download the csv file, add it to the util folder, and run &lt;code&gt;parse_download_contracts_etherscan_io.py&lt;/code&gt; (with your etherscan API). This will add the new contracts to the appropriate folder&lt;/p&gt; &#xA;&lt;h2&gt;👩‍🔬 Data Science Tools&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tintinweb/solgrep&#34;&gt;🧠 SolGrep&lt;/a&gt; - A scriptable semantic grep utility for solidity (crunch numbers, find specific contracts, extract data)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://semgrep.dev/&#34;&gt;🐞 semgrep&lt;/a&gt; - Semgrep is a fast, open-source, static analysis tool for finding bugs and enforcing code standards at editor, commit, and CI time, and now supports &lt;strong&gt;Solidity&lt;/strong&gt;! ❤️ Thanks &lt;a href=&#34;https://github.com/JoranHonig&#34;&gt;@JoranHonig&lt;/a&gt; for contributing the &lt;a href=&#34;https://github.com/JoranHonig/tree-sitter-solidity&#34;&gt;semgrep solidity parser&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🎓 Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you are using this dataset in your research and paper, here&#39;s how you can cite this dataset:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;APA6&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;Ortner, M., Eskandari, S. (n.d.). Smart Contract Sanctuary. Retrieved from https://github.com/tintinweb/smart-contract-sanctuary.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;LateX (Bib)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt; @article{smart_contract_sanctuary, &#xA;          title={Smart Contract Sanctuary}, &#xA;          url={https://github.com/tintinweb/smart-contract-sanctuary}, &#xA;          author={Ortner, Martin and Eskandari, Shayan}} &#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>TheAlgorithms/Python</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/TheAlgorithms/Python</id>
    <link href="https://github.com/TheAlgorithms/Python" rel="alternate"></link>
    <summary type="html">&lt;p&gt;All Algorithms implemented in Python&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;!-- Title: --&gt; &#xA; &lt;a href=&#34;https://github.com/TheAlgorithms/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/TheAlgorithms/website/1cd824df116b27029f17c2d1b42d81731f28a920/public/logo.svg?sanitize=true&#34; height=&#34;100&#34;&gt; &lt;/a&gt; &#xA; &lt;h1&gt;&lt;a href=&#34;https://github.com/TheAlgorithms/&#34;&gt;The Algorithms&lt;/a&gt; - Python&lt;/h1&gt; &#xA; &lt;!-- Labels: --&gt; &#xA; &lt;!-- First row: --&gt; &#xA; &lt;a href=&#34;https://gitpod.io/#https://github.com/TheAlgorithms/Python&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;Gitpod Ready-to-Code&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/TheAlgorithms/Python/raw/master/CONTRIBUTING.md&#34;&gt; &lt;img src=&#34;https://img.shields.io/static/v1.svg?label=Contributions&amp;amp;message=Welcome&amp;amp;color=0059b3&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;Contributions Welcome&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://www.paypal.me/TheAlgorithms/100&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?logo=paypal&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;Donate&#34;&gt; &lt;/a&gt; &#xA; &lt;img src=&#34;https://img.shields.io/github/repo-size/TheAlgorithms/Python.svg?label=Repo%20size&amp;amp;style=flat-square&#34; height=&#34;20&#34;&gt; &#xA; &lt;a href=&#34;https://discord.gg/c7MnfGFGa6&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/808045925556682782.svg?logo=discord&amp;amp;colorB=7289DA&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;Discord chat&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://gitter.im/TheAlgorithms&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Chat-Gitter-ff69b4.svg?label=Chat&amp;amp;logo=gitter&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;Gitter chat&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- Second row: --&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://github.com/TheAlgorithms/Python/actions&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/TheAlgorithms/Python/build?label=CI&amp;amp;logo=github&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;GitHub Workflow Status&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://lgtm.com/projects/g/TheAlgorithms/Python/alerts&#34;&gt; &lt;img src=&#34;https://img.shields.io/lgtm/alerts/github/TheAlgorithms/Python.svg?label=LGTM&amp;amp;logo=LGTM&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;LGTM&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/pre-commit/pre-commit&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;pre-commit&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/psf/black&#34;&gt; &lt;img src=&#34;https://img.shields.io/static/v1?label=code%20style&amp;amp;message=black&amp;amp;color=black&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;code style: black&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- Short description: --&gt; &#xA; &lt;h3&gt;All algorithms implemented in Python - for education&lt;/h3&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Implementations are for learning purposes only. As they may be less efficient than the implementations in the Python standard library, use them at your discretion.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Read through our &lt;a href=&#34;https://raw.githubusercontent.com/TheAlgorithms/Python/master/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt; before you contribute.&lt;/p&gt; &#xA;&lt;h2&gt;Community Channels&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re on &lt;a href=&#34;https://discord.gg/c7MnfGFGa6&#34;&gt;Discord&lt;/a&gt; and &lt;a href=&#34;https://gitter.im/TheAlgorithms&#34;&gt;Gitter&lt;/a&gt;! Community channels are great for you to ask questions and get help. Please join us!&lt;/p&gt; &#xA;&lt;h2&gt;List of Algorithms&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://raw.githubusercontent.com/TheAlgorithms/Python/master/DIRECTORY.md&#34;&gt;directory&lt;/a&gt; for easier navigation and better overview of the project.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>donnemartin/system-design-primer</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/donnemartin/system-design-primer</id>
    <link href="https://github.com/donnemartin/system-design-primer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Learn how to design large-scale systems. Prep for the system design interview. Includes Anki flashcards.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README.md&#34;&gt;English&lt;/a&gt; ∙ &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-ja.md&#34;&gt;日本語&lt;/a&gt; ∙ &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-Hans.md&#34;&gt;简体中文&lt;/a&gt; ∙ &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-TW.md&#34;&gt;繁體中文&lt;/a&gt; | &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/170&#34;&gt;العَرَبِيَّة‎&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/220&#34;&gt;বাংলা&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/40&#34;&gt;Português do Brasil&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/186&#34;&gt;Deutsch&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/130&#34;&gt;ελληνικά&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/272&#34;&gt;עברית&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/104&#34;&gt;Italiano&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/102&#34;&gt;한국어&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/110&#34;&gt;فارسی&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/68&#34;&gt;Polski&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/87&#34;&gt;русский язык&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/136&#34;&gt;Español&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/187&#34;&gt;ภาษาไทย&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/39&#34;&gt;Türkçe&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/127&#34;&gt;tiếng Việt&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/250&#34;&gt;Français&lt;/a&gt; | &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/28&#34;&gt;Add Translation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Help &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/TRANSLATIONS.md&#34;&gt;translate&lt;/a&gt; this guide!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;The System Design Primer&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png&#34;&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Learn how to design large-scale systems.&lt;/p&gt; &#xA; &lt;p&gt;Prep for the system design interview.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Learn how to design large-scale systems&lt;/h3&gt; &#xA;&lt;p&gt;Learning how to design scalable systems will help you become a better engineer.&lt;/p&gt; &#xA;&lt;p&gt;System design is a broad topic. There is a &lt;strong&gt;vast amount of resources scattered throughout the web&lt;/strong&gt; on system design principles.&lt;/p&gt; &#xA;&lt;p&gt;This repo is an &lt;strong&gt;organized collection&lt;/strong&gt; of resources to help you learn how to build systems at scale.&lt;/p&gt; &#xA;&lt;h3&gt;Learn from the open source community&lt;/h3&gt; &#xA;&lt;p&gt;This is a continually updated, open source project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contributing&#34;&gt;Contributions&lt;/a&gt; are welcome!&lt;/p&gt; &#xA;&lt;h3&gt;Prep for the system design interview&lt;/h3&gt; &#xA;&lt;p&gt;In addition to coding interviews, system design is a &lt;strong&gt;required component&lt;/strong&gt; of the &lt;strong&gt;technical interview process&lt;/strong&gt; at many tech companies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Practice common system design interview questions&lt;/strong&gt; and &lt;strong&gt;compare&lt;/strong&gt; your results with &lt;strong&gt;sample solutions&lt;/strong&gt;: discussions, code, and diagrams.&lt;/p&gt; &#xA;&lt;p&gt;Additional topics for interview prep:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#study-guide&#34;&gt;Study guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#how-to-approach-a-system-design-interview-question&#34;&gt;How to approach a system design interview question&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#system-design-interview-questions-with-solutions&#34;&gt;System design interview questions, &lt;strong&gt;with solutions&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#object-oriented-design-interview-questions-with-solutions&#34;&gt;Object-oriented design interview questions, &lt;strong&gt;with solutions&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#additional-system-design-interview-questions&#34;&gt;Additional system design interview questions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Anki flashcards&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/zdCAkB3.png&#34;&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;The provided &lt;a href=&#34;https://apps.ankiweb.net/&#34;&gt;Anki flashcard decks&lt;/a&gt; use spaced repetition to help you retain key system design concepts.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design.apkg&#34;&gt;System design deck&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design%20Exercises.apkg&#34;&gt;System design exercises deck&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/OO%20Design.apkg&#34;&gt;Object oriented design exercises deck&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Great for use while on-the-go.&lt;/p&gt; &#xA;&lt;h3&gt;Coding Resource: Interactive Coding Challenges&lt;/h3&gt; &#xA;&lt;p&gt;Looking for resources to help you prep for the &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges&#34;&gt;&lt;strong&gt;Coding Interview&lt;/strong&gt;&lt;/a&gt;?&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/b4YtAEN.png&#34;&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;Check out the sister repo &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges&#34;&gt;&lt;strong&gt;Interactive Coding Challenges&lt;/strong&gt;&lt;/a&gt;, which contains an additional Anki deck:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg&#34;&gt;Coding deck&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Learn from the community.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Feel free to submit pull requests to help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fix errors&lt;/li&gt; &#xA; &lt;li&gt;Improve sections&lt;/li&gt; &#xA; &lt;li&gt;Add new sections&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/28&#34;&gt;Translate&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Content that needs some polishing is placed &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#under-development&#34;&gt;under development&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Review the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Index of system design topics&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Summaries of various system design topics, including pros and cons. &lt;strong&gt;Everything is a trade-off&lt;/strong&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Each section contains links to more in-depth resources.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png&#34;&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#system-design-topics-start-here&#34;&gt;System design topics: start here&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#step-1-review-the-scalability-video-lecture&#34;&gt;Step 1: Review the scalability video lecture&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#step-2-review-the-scalability-article&#34;&gt;Step 2: Review the scalability article&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#next-steps&#34;&gt;Next steps&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#performance-vs-scalability&#34;&gt;Performance vs scalability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#latency-vs-throughput&#34;&gt;Latency vs throughput&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#availability-vs-consistency&#34;&gt;Availability vs consistency&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#cap-theorem&#34;&gt;CAP theorem&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#cp---consistency-and-partition-tolerance&#34;&gt;CP - consistency and partition tolerance&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#ap---availability-and-partition-tolerance&#34;&gt;AP - availability and partition tolerance&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#consistency-patterns&#34;&gt;Consistency patterns&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#weak-consistency&#34;&gt;Weak consistency&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#eventual-consistency&#34;&gt;Eventual consistency&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#strong-consistency&#34;&gt;Strong consistency&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#availability-patterns&#34;&gt;Availability patterns&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#fail-over&#34;&gt;Fail-over&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#replication&#34;&gt;Replication&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#availability-in-numbers&#34;&gt;Availability in numbers&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#domain-name-system&#34;&gt;Domain name system&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#content-delivery-network&#34;&gt;Content delivery network&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#push-cdns&#34;&gt;Push CDNs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#pull-cdns&#34;&gt;Pull CDNs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#load-balancer&#34;&gt;Load balancer&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#active-passive&#34;&gt;Active-passive&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#active-active&#34;&gt;Active-active&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#layer-4-load-balancing&#34;&gt;Layer 4 load balancing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#layer-7-load-balancing&#34;&gt;Layer 7 load balancing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#horizontal-scaling&#34;&gt;Horizontal scaling&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#reverse-proxy-web-server&#34;&gt;Reverse proxy (web server)&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#load-balancer-vs-reverse-proxy&#34;&gt;Load balancer vs reverse proxy&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#application-layer&#34;&gt;Application layer&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#microservices&#34;&gt;Microservices&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#service-discovery&#34;&gt;Service discovery&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#database&#34;&gt;Database&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#relational-database-management-system-rdbms&#34;&gt;Relational database management system (RDBMS)&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#master-slave-replication&#34;&gt;Master-slave replication&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#master-master-replication&#34;&gt;Master-master replication&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#federation&#34;&gt;Federation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#sharding&#34;&gt;Sharding&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#denormalization&#34;&gt;Denormalization&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#sql-tuning&#34;&gt;SQL tuning&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#nosql&#34;&gt;NoSQL&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#key-value-store&#34;&gt;Key-value store&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#document-store&#34;&gt;Document store&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#wide-column-store&#34;&gt;Wide column store&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#graph-database&#34;&gt;Graph Database&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#sql-or-nosql&#34;&gt;SQL or NoSQL&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#cache&#34;&gt;Cache&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#client-caching&#34;&gt;Client caching&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#cdn-caching&#34;&gt;CDN caching&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#web-server-caching&#34;&gt;Web server caching&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#database-caching&#34;&gt;Database caching&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#application-caching&#34;&gt;Application caching&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#caching-at-the-database-query-level&#34;&gt;Caching at the database query level&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#caching-at-the-object-level&#34;&gt;Caching at the object level&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#when-to-update-the-cache&#34;&gt;When to update the cache&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#cache-aside&#34;&gt;Cache-aside&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#write-through&#34;&gt;Write-through&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#write-behind-write-back&#34;&gt;Write-behind (write-back)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#refresh-ahead&#34;&gt;Refresh-ahead&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#asynchronism&#34;&gt;Asynchronism&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#message-queues&#34;&gt;Message queues&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#task-queues&#34;&gt;Task queues&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#back-pressure&#34;&gt;Back pressure&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#communication&#34;&gt;Communication&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#transmission-control-protocol-tcp&#34;&gt;Transmission control protocol (TCP)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#user-datagram-protocol-udp&#34;&gt;User datagram protocol (UDP)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#remote-procedure-call-rpc&#34;&gt;Remote procedure call (RPC)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#representational-state-transfer-rest&#34;&gt;Representational state transfer (REST)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#security&#34;&gt;Security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#appendix&#34;&gt;Appendix&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#powers-of-two-table&#34;&gt;Powers of two table&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#latency-numbers-every-programmer-should-know&#34;&gt;Latency numbers every programmer should know&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#additional-system-design-interview-questions&#34;&gt;Additional system design interview questions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#real-world-architectures&#34;&gt;Real world architectures&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#company-architectures&#34;&gt;Company architectures&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#company-engineering-blogs&#34;&gt;Company engineering blogs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#under-development&#34;&gt;Under development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contact-info&#34;&gt;Contact info&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Study guide&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Suggested topics to review based on your interview timeline (short, medium, long).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/OfVllex.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q: For interviews, do I need to know everything here?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A: No, you don&#39;t need to know everything here to prepare for the interview&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;What you are asked in an interview depends on variables such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;How much experience you have&lt;/li&gt; &#xA; &lt;li&gt;What your technical background is&lt;/li&gt; &#xA; &lt;li&gt;What positions you are interviewing for&lt;/li&gt; &#xA; &lt;li&gt;Which companies you are interviewing with&lt;/li&gt; &#xA; &lt;li&gt;Luck&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More experienced candidates are generally expected to know more about system design. Architects or team leads might be expected to know more than individual contributors. Top tech companies are likely to have one or more design interview rounds.&lt;/p&gt; &#xA;&lt;p&gt;Start broad and go deeper in a few areas. It helps to know a little about various key system design topics. Adjust the following guide based on your timeline, experience, what positions you are interviewing for, and which companies you are interviewing with.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Short timeline&lt;/strong&gt; - Aim for &lt;strong&gt;breadth&lt;/strong&gt; with system design topics. Practice by solving &lt;strong&gt;some&lt;/strong&gt; interview questions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Medium timeline&lt;/strong&gt; - Aim for &lt;strong&gt;breadth&lt;/strong&gt; and &lt;strong&gt;some depth&lt;/strong&gt; with system design topics. Practice by solving &lt;strong&gt;many&lt;/strong&gt; interview questions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Long timeline&lt;/strong&gt; - Aim for &lt;strong&gt;breadth&lt;/strong&gt; and &lt;strong&gt;more depth&lt;/strong&gt; with system design topics. Practice by solving &lt;strong&gt;most&lt;/strong&gt; interview questions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Short&lt;/th&gt; &#xA;   &lt;th&gt;Medium&lt;/th&gt; &#xA;   &lt;th&gt;Long&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Read through the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#index-of-system-design-topics&#34;&gt;System design topics&lt;/a&gt; to get a broad understanding of how systems work&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Read through a few articles in the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#company-engineering-blogs&#34;&gt;Company engineering blogs&lt;/a&gt; for the companies you are interviewing with&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Read through a few &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#real-world-architectures&#34;&gt;Real world architectures&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Review &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#how-to-approach-a-system-design-interview-question&#34;&gt;How to approach a system design interview question&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Work through &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#system-design-interview-questions-with-solutions&#34;&gt;System design interview questions with solutions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Some&lt;/td&gt; &#xA;   &lt;td&gt;Many&lt;/td&gt; &#xA;   &lt;td&gt;Most&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Work through &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#object-oriented-design-interview-questions-with-solutions&#34;&gt;Object-oriented design interview questions with solutions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Some&lt;/td&gt; &#xA;   &lt;td&gt;Many&lt;/td&gt; &#xA;   &lt;td&gt;Most&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Review &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#additional-system-design-interview-questions&#34;&gt;Additional system design interview questions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Some&lt;/td&gt; &#xA;   &lt;td&gt;Many&lt;/td&gt; &#xA;   &lt;td&gt;Most&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How to approach a system design interview question&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;How to tackle a system design interview question.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The system design interview is an &lt;strong&gt;open-ended conversation&lt;/strong&gt;. You are expected to lead it.&lt;/p&gt; &#xA;&lt;p&gt;You can use the following steps to guide the discussion. To help solidify this process, work through the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#system-design-interview-questions-with-solutions&#34;&gt;System design interview questions with solutions&lt;/a&gt; section using the following steps.&lt;/p&gt; &#xA;&lt;h3&gt;Step 1: Outline use cases, constraints, and assumptions&lt;/h3&gt; &#xA;&lt;p&gt;Gather requirements and scope the problem. Ask questions to clarify use cases and constraints. Discuss assumptions.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Who is going to use it?&lt;/li&gt; &#xA; &lt;li&gt;How are they going to use it?&lt;/li&gt; &#xA; &lt;li&gt;How many users are there?&lt;/li&gt; &#xA; &lt;li&gt;What does the system do?&lt;/li&gt; &#xA; &lt;li&gt;What are the inputs and outputs of the system?&lt;/li&gt; &#xA; &lt;li&gt;How much data do we expect to handle?&lt;/li&gt; &#xA; &lt;li&gt;How many requests per second do we expect?&lt;/li&gt; &#xA; &lt;li&gt;What is the expected read to write ratio?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step 2: Create a high level design&lt;/h3&gt; &#xA;&lt;p&gt;Outline a high level design with all important components.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sketch the main components and connections&lt;/li&gt; &#xA; &lt;li&gt;Justify your ideas&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step 3: Design core components&lt;/h3&gt; &#xA;&lt;p&gt;Dive into details for each core component. For example, if you were asked to &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md&#34;&gt;design a url shortening service&lt;/a&gt;, discuss:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generating and storing a hash of the full url &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md&#34;&gt;MD5&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md&#34;&gt;Base62&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Hash collisions&lt;/li&gt; &#xA;   &lt;li&gt;SQL or NoSQL&lt;/li&gt; &#xA;   &lt;li&gt;Database schema&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Translating a hashed url to the full url &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Database lookup&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;API and object-oriented design&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step 4: Scale the design&lt;/h3&gt; &#xA;&lt;p&gt;Identify and address bottlenecks, given the constraints. For example, do you need the following to address scalability issues?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Load balancer&lt;/li&gt; &#xA; &lt;li&gt;Horizontal scaling&lt;/li&gt; &#xA; &lt;li&gt;Caching&lt;/li&gt; &#xA; &lt;li&gt;Database sharding&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Discuss potential solutions and trade-offs. Everything is a trade-off. Address bottlenecks using &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#index-of-system-design-topics&#34;&gt;principles of scalable system design&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Back-of-the-envelope calculations&lt;/h3&gt; &#xA;&lt;p&gt;You might be asked to do some estimates by hand. Refer to the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#appendix&#34;&gt;Appendix&lt;/a&gt; for the following resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html&#34;&gt;Use back of the envelope calculations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#powers-of-two-table&#34;&gt;Powers of two table&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#latency-numbers-every-programmer-should-know&#34;&gt;Latency numbers every programmer should know&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;p&gt;Check out the following links to get a better idea of what to expect:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/&#34;&gt;How to ace a systems design interview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.hiredintech.com/system-design&#34;&gt;The system design interview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ZgdS0EUmn70&#34;&gt;Intro to Architecture and Systems Design Interviews&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leetcode.com/discuss/career/229177/My-System-Design-Template&#34;&gt;System design template&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;System design interview questions with solutions&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Common system design interview questions with sample discussions, code, and diagrams.&lt;/p&gt; &#xA; &lt;p&gt;Solutions linked to content in the &lt;code&gt;solutions/&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Question&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design Pastebin.com (or Bit.ly)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design the Twitter timeline and search (or Facebook feed and search)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a web crawler&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design Mint.com&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design the data structures for a social network&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a key-value store for a search engine&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design Amazon&#39;s sales ranking by category feature&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a system that scales to millions of users on AWS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add a system design question&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contributing&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Design Pastebin.com (or Bit.ly)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md&#34;&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4edXG0T.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Design the Twitter timeline and search (or Facebook feed and search)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md&#34;&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Design a web crawler&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md&#34;&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bWxPtQA.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Design Mint.com&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md&#34;&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/V5q57vU.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Design the data structures for a social network&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md&#34;&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/cdCv5g7.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Design a key-value store for a search engine&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md&#34;&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4j99mhe.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Design Amazon&#39;s sales ranking by category feature&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md&#34;&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/MzExP06.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Design a system that scales to millions of users on AWS&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md&#34;&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Object-oriented design interview questions with solutions&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Common object-oriented design interview questions with sample discussions, code, and diagrams.&lt;/p&gt; &#xA; &lt;p&gt;Solutions linked to content in the &lt;code&gt;solutions/&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note: This section is under development&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Question&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a hash map&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/hash_table/hash_map.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a least recently used cache&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/lru_cache/lru_cache.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a call center&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/call_center/call_center.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a deck of cards&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a parking lot&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/parking_lot/parking_lot.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a chat server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/online_chat/online_chat.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a circular array&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contributing&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add an object-oriented design question&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contributing&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;System design topics: start here&lt;/h2&gt; &#xA;&lt;p&gt;New to system design?&lt;/p&gt; &#xA;&lt;p&gt;First, you&#39;ll need a basic understanding of common principles, learning about what they are, how they are used, and their pros and cons.&lt;/p&gt; &#xA;&lt;h3&gt;Step 1: Review the scalability video lecture&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-W9F__D3oY4&#34;&gt;Scalability Lecture at Harvard&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Topics covered: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Vertical scaling&lt;/li&gt; &#xA;   &lt;li&gt;Horizontal scaling&lt;/li&gt; &#xA;   &lt;li&gt;Caching&lt;/li&gt; &#xA;   &lt;li&gt;Load balancing&lt;/li&gt; &#xA;   &lt;li&gt;Database replication&lt;/li&gt; &#xA;   &lt;li&gt;Database partitioning&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step 2: Review the scalability article&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.lecloud.net/tagged/scalability/chrono&#34;&gt;Scalability&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Topics covered: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones&#34;&gt;Clones&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database&#34;&gt;Databases&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache&#34;&gt;Caches&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism&#34;&gt;Asynchronism&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Next steps&lt;/h3&gt; &#xA;&lt;p&gt;Next, we&#39;ll look at high-level trade-offs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt; vs &lt;strong&gt;scalability&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Latency&lt;/strong&gt; vs &lt;strong&gt;throughput&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Availability&lt;/strong&gt; vs &lt;strong&gt;consistency&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Keep in mind that &lt;strong&gt;everything is a trade-off&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then we&#39;ll dive into more specific topics such as DNS, CDNs, and load balancers.&lt;/p&gt; &#xA;&lt;h2&gt;Performance vs scalability&lt;/h2&gt; &#xA;&lt;p&gt;A service is &lt;strong&gt;scalable&lt;/strong&gt; if it results in increased &lt;strong&gt;performance&lt;/strong&gt; in a manner proportional to resources added. Generally, increasing performance means serving more units of work, but it can also be to handle larger units of work, such as when datasets grow.&lt;sup&gt;&lt;a href=&#34;http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;p&gt;Another way to look at performance vs scalability:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have a &lt;strong&gt;performance&lt;/strong&gt; problem, your system is slow for a single user.&lt;/li&gt; &#xA; &lt;li&gt;If you have a &lt;strong&gt;scalability&lt;/strong&gt; problem, your system is fast for a single user but slow under heavy load.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html&#34;&gt;A word on scalability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/jboner/scalability-availability-stability-patterns/&#34;&gt;Scalability, availability, stability, patterns&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Latency vs throughput&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Latency&lt;/strong&gt; is the time to perform some action or to produce some result.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Throughput&lt;/strong&gt; is the number of such actions or results per unit of time.&lt;/p&gt; &#xA;&lt;p&gt;Generally, you should aim for &lt;strong&gt;maximal throughput&lt;/strong&gt; with &lt;strong&gt;acceptable latency&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.cadence.com/cadence_blogs_8/b/sd/archive/2010/09/13/understanding-latency-vs-throughput&#34;&gt;Understanding latency vs throughput&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Availability vs consistency&lt;/h2&gt; &#xA;&lt;h3&gt;CAP theorem&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bgLMI2u.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://robertgreiner.com/2014/08/cap-theorem-revisited&#34;&gt;Source: CAP theorem revisited&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;In a distributed computer system, you can only support two of the following guarantees:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Consistency&lt;/strong&gt; - Every read receives the most recent write or an error&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Availability&lt;/strong&gt; - Every request receives a response, without guarantee that it contains the most recent version of the information&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Partition Tolerance&lt;/strong&gt; - The system continues to operate despite arbitrary partitioning due to network failures&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Networks aren&#39;t reliable, so you&#39;ll need to support partition tolerance. You&#39;ll need to make a software tradeoff between consistency and availability.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;CP - consistency and partition tolerance&lt;/h4&gt; &#xA;&lt;p&gt;Waiting for a response from the partitioned node might result in a timeout error. CP is a good choice if your business needs require atomic reads and writes.&lt;/p&gt; &#xA;&lt;h4&gt;AP - availability and partition tolerance&lt;/h4&gt; &#xA;&lt;p&gt;Responses return the most readily available version of the data available on any node, which might not be the latest. Writes might take some time to propagate when the partition is resolved.&lt;/p&gt; &#xA;&lt;p&gt;AP is a good choice if the business needs allow for &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#eventual-consistency&#34;&gt;eventual consistency&lt;/a&gt; or when the system needs to continue working despite external errors.&lt;/p&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://robertgreiner.com/2014/08/cap-theorem-revisited/&#34;&gt;CAP theorem revisited&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ksat.me/a-plain-english-introduction-to-cap-theorem&#34;&gt;A plain english introduction to CAP theorem&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/henryr/cap-faq&#34;&gt;CAP FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=k-Yaq8AHlFA&#34;&gt;The CAP theorem&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Consistency patterns&lt;/h2&gt; &#xA;&lt;p&gt;With multiple copies of the same data, we are faced with options on how to synchronize them so clients have a consistent view of the data. Recall the definition of consistency from the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#cap-theorem&#34;&gt;CAP theorem&lt;/a&gt; - Every read receives the most recent write or an error.&lt;/p&gt; &#xA;&lt;h3&gt;Weak consistency&lt;/h3&gt; &#xA;&lt;p&gt;After a write, reads may or may not see it. A best effort approach is taken.&lt;/p&gt; &#xA;&lt;p&gt;This approach is seen in systems such as memcached. Weak consistency works well in real time use cases such as VoIP, video chat, and realtime multiplayer games. For example, if you are on a phone call and lose reception for a few seconds, when you regain connection you do not hear what was spoken during connection loss.&lt;/p&gt; &#xA;&lt;h3&gt;Eventual consistency&lt;/h3&gt; &#xA;&lt;p&gt;After a write, reads will eventually see it (typically within milliseconds). Data is replicated asynchronously.&lt;/p&gt; &#xA;&lt;p&gt;This approach is seen in systems such as DNS and email. Eventual consistency works well in highly available systems.&lt;/p&gt; &#xA;&lt;h3&gt;Strong consistency&lt;/h3&gt; &#xA;&lt;p&gt;After a write, reads will see it. Data is replicated synchronously.&lt;/p&gt; &#xA;&lt;p&gt;This approach is seen in file systems and RDBMSes. Strong consistency works well in systems that need transactions.&lt;/p&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://snarfed.org/transactions_across_datacenters_io.html&#34;&gt;Transactions across data centers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Availability patterns&lt;/h2&gt; &#xA;&lt;p&gt;There are two complementary patterns to support high availability: &lt;strong&gt;fail-over&lt;/strong&gt; and &lt;strong&gt;replication&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Fail-over&lt;/h3&gt; &#xA;&lt;h4&gt;Active-passive&lt;/h4&gt; &#xA;&lt;p&gt;With active-passive fail-over, heartbeats are sent between the active and the passive server on standby. If the heartbeat is interrupted, the passive server takes over the active&#39;s IP address and resumes service.&lt;/p&gt; &#xA;&lt;p&gt;The length of downtime is determined by whether the passive server is already running in &#39;hot&#39; standby or whether it needs to start up from &#39;cold&#39; standby. Only the active server handles traffic.&lt;/p&gt; &#xA;&lt;p&gt;Active-passive failover can also be referred to as master-slave failover.&lt;/p&gt; &#xA;&lt;h4&gt;Active-active&lt;/h4&gt; &#xA;&lt;p&gt;In active-active, both servers are managing traffic, spreading the load between them.&lt;/p&gt; &#xA;&lt;p&gt;If the servers are public-facing, the DNS would need to know about the public IPs of both servers. If the servers are internal-facing, application logic would need to know about both servers.&lt;/p&gt; &#xA;&lt;p&gt;Active-active failover can also be referred to as master-master failover.&lt;/p&gt; &#xA;&lt;h3&gt;Disadvantage(s): failover&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fail-over adds more hardware and additional complexity.&lt;/li&gt; &#xA; &lt;li&gt;There is a potential for loss of data if the active system fails before any newly written data can be replicated to the passive.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Replication&lt;/h3&gt; &#xA;&lt;h4&gt;Master-slave and master-master&lt;/h4&gt; &#xA;&lt;p&gt;This topic is further discussed in the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#database&#34;&gt;Database&lt;/a&gt; section:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#master-slave-replication&#34;&gt;Master-slave replication&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#master-master-replication&#34;&gt;Master-master replication&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Availability in numbers&lt;/h3&gt; &#xA;&lt;p&gt;Availability is often quantified by uptime (or downtime) as a percentage of time the service is available. Availability is generally measured in number of 9s--a service with 99.99% availability is described as having four 9s.&lt;/p&gt; &#xA;&lt;h4&gt;99.9% availability - three 9s&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Duration&lt;/th&gt; &#xA;   &lt;th&gt;Acceptable downtime&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Downtime per year&lt;/td&gt; &#xA;   &lt;td&gt;8h 45min 57s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Downtime per month&lt;/td&gt; &#xA;   &lt;td&gt;43m 49.7s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Downtime per week&lt;/td&gt; &#xA;   &lt;td&gt;10m 4.8s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Downtime per day&lt;/td&gt; &#xA;   &lt;td&gt;1m 26.4s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;99.99% availability - four 9s&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Duration&lt;/th&gt; &#xA;   &lt;th&gt;Acceptable downtime&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Downtime per year&lt;/td&gt; &#xA;   &lt;td&gt;52min 35.7s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Downtime per month&lt;/td&gt; &#xA;   &lt;td&gt;4m 23s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Downtime per week&lt;/td&gt; &#xA;   &lt;td&gt;1m 5s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Downtime per day&lt;/td&gt; &#xA;   &lt;td&gt;8.6s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Availability in parallel vs in sequence&lt;/h4&gt; &#xA;&lt;p&gt;If a service consists of multiple components prone to failure, the service&#39;s overall availability depends on whether the components are in sequence or in parallel.&lt;/p&gt; &#xA;&lt;h6&gt;In sequence&lt;/h6&gt; &#xA;&lt;p&gt;Overall availability decreases when two components with availability &amp;lt; 100% are in sequence:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Availability (Total) = Availability (Foo) * Availability (Bar)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If both &lt;code&gt;Foo&lt;/code&gt; and &lt;code&gt;Bar&lt;/code&gt; each had 99.9% availability, their total availability in sequence would be 99.8%.&lt;/p&gt; &#xA;&lt;h6&gt;In parallel&lt;/h6&gt; &#xA;&lt;p&gt;Overall availability increases when two components with availability &amp;lt; 100% are in parallel:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Availability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If both &lt;code&gt;Foo&lt;/code&gt; and &lt;code&gt;Bar&lt;/code&gt; each had 99.9% availability, their total availability in parallel would be 99.9999%.&lt;/p&gt; &#xA;&lt;h2&gt;Domain name system&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/IOyLj4i.jpg&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.slideshare.net/srikrupa5/dns-security-presentation-issa&#34;&gt;Source: DNS security presentation&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;A Domain Name System (DNS) translates a domain name such as &lt;a href=&#34;http://www.example.com&#34;&gt;www.example.com&lt;/a&gt; to an IP address.&lt;/p&gt; &#xA;&lt;p&gt;DNS is hierarchical, with a few authoritative servers at the top level. Your router or ISP provides information about which DNS server(s) to contact when doing a lookup. Lower level DNS servers cache mappings, which could become stale due to DNS propagation delays. DNS results can also be cached by your browser or OS for a certain period of time, determined by the &lt;a href=&#34;https://en.wikipedia.org/wiki/Time_to_live&#34;&gt;time to live (TTL)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;NS record (name server)&lt;/strong&gt; - Specifies the DNS servers for your domain/subdomain.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MX record (mail exchange)&lt;/strong&gt; - Specifies the mail servers for accepting messages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;A record (address)&lt;/strong&gt; - Points a name to an IP address.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CNAME (canonical)&lt;/strong&gt; - Points a name to another name or &lt;code&gt;CNAME&lt;/code&gt; (example.com to &lt;a href=&#34;http://www.example.com&#34;&gt;www.example.com&lt;/a&gt;) or to an &lt;code&gt;A&lt;/code&gt; record.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Services such as &lt;a href=&#34;https://www.cloudflare.com/dns/&#34;&gt;CloudFlare&lt;/a&gt; and &lt;a href=&#34;https://aws.amazon.com/route53/&#34;&gt;Route 53&lt;/a&gt; provide managed DNS services. Some DNS services can route traffic through various methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jscape.com/blog/load-balancing-algorithms&#34;&gt;Weighted round robin&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Prevent traffic from going to servers under maintenance&lt;/li&gt; &#xA;   &lt;li&gt;Balance between varying cluster sizes&lt;/li&gt; &#xA;   &lt;li&gt;A/B testing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency&#34;&gt;Latency-based&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-geo&#34;&gt;Geolocation-based&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Disadvantage(s): DNS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Accessing a DNS server introduces a slight delay, although mitigated by caching described above.&lt;/li&gt; &#xA; &lt;li&gt;DNS server management could be complex and is generally managed by &lt;a href=&#34;http://superuser.com/questions/472695/who-controls-the-dns-servers/472729&#34;&gt;governments, ISPs, and large companies&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;DNS services have recently come under &lt;a href=&#34;http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/&#34;&gt;DDoS attack&lt;/a&gt;, preventing users from accessing websites such as Twitter without knowing Twitter&#39;s IP address(es).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx&#34;&gt;DNS architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Domain_Name_System&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://support.dnsimple.com/categories/dns/&#34;&gt;DNS articles&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Content delivery network&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h9TAuGI.jpg&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/&#34;&gt;Source: Why use a CDN&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;A content delivery network (CDN) is a globally distributed network of proxy servers, serving content from locations closer to the user. Generally, static files such as HTML/CSS/JS, photos, and videos are served from CDN, although some CDNs such as Amazon&#39;s CloudFront support dynamic content. The site&#39;s DNS resolution will tell clients which server to contact.&lt;/p&gt; &#xA;&lt;p&gt;Serving content from CDNs can significantly improve performance in two ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Users receive content from data centers close to them&lt;/li&gt; &#xA; &lt;li&gt;Your servers do not have to serve requests that the CDN fulfills&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Push CDNs&lt;/h3&gt; &#xA;&lt;p&gt;Push CDNs receive new content whenever changes occur on your server. You take full responsibility for providing content, uploading directly to the CDN and rewriting URLs to point to the CDN. You can configure when content expires and when it is updated. Content is uploaded only when it is new or changed, minimizing traffic, but maximizing storage.&lt;/p&gt; &#xA;&lt;p&gt;Sites with a small amount of traffic or sites with content that isn&#39;t often updated work well with push CDNs. Content is placed on the CDNs once, instead of being re-pulled at regular intervals.&lt;/p&gt; &#xA;&lt;h3&gt;Pull CDNs&lt;/h3&gt; &#xA;&lt;p&gt;Pull CDNs grab new content from your server when the first user requests the content. You leave the content on your server and rewrite URLs to point to the CDN. This results in a slower request until the content is cached on the CDN.&lt;/p&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://en.wikipedia.org/wiki/Time_to_live&#34;&gt;time-to-live (TTL)&lt;/a&gt; determines how long content is cached. Pull CDNs minimize storage space on the CDN, but can create redundant traffic if files expire and are pulled before they have actually changed.&lt;/p&gt; &#xA;&lt;p&gt;Sites with heavy traffic work well with pull CDNs, as traffic is spread out more evenly with only recently-requested content remaining on the CDN.&lt;/p&gt; &#xA;&lt;h3&gt;Disadvantage(s): CDN&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CDN costs could be significant depending on traffic, although this should be weighed with additional costs you would incur not using a CDN.&lt;/li&gt; &#xA; &lt;li&gt;Content might be stale if it is updated before the TTL expires it.&lt;/li&gt; &#xA; &lt;li&gt;CDNs require changing URLs for static content to point to the CDN.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://figshare.com/articles/Globally_distributed_content_delivery/6605972&#34;&gt;Globally distributed content delivery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/&#34;&gt;The differences between push and pull CDNs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Content_delivery_network&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Load balancer&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h81n9iK.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html&#34;&gt;Source: Scalable system design patterns&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;Load balancers distribute incoming client requests to computing resources such as application servers and databases. In each case, the load balancer returns the response from the computing resource to the appropriate client. Load balancers are effective at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Preventing requests from going to unhealthy servers&lt;/li&gt; &#xA; &lt;li&gt;Preventing overloading resources&lt;/li&gt; &#xA; &lt;li&gt;Helping to eliminate a single point of failure&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Load balancers can be implemented with hardware (expensive) or with software such as HAProxy.&lt;/p&gt; &#xA;&lt;p&gt;Additional benefits include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;SSL termination&lt;/strong&gt; - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Removes the need to install &lt;a href=&#34;https://en.wikipedia.org/wiki/X.509&#34;&gt;X.509 certificates&lt;/a&gt; on each server&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Session persistence&lt;/strong&gt; - Issue cookies and route a specific client&#39;s requests to same instance if the web apps do not keep track of sessions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To protect against failures, it&#39;s common to set up multiple load balancers, either in &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#active-passive&#34;&gt;active-passive&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#active-active&#34;&gt;active-active&lt;/a&gt; mode.&lt;/p&gt; &#xA;&lt;p&gt;Load balancers can route traffic based on various metrics, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Random&lt;/li&gt; &#xA; &lt;li&gt;Least loaded&lt;/li&gt; &#xA; &lt;li&gt;Session/cookies&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.g33kinfo.com/info/round-robin-vs-weighted-round-robin-lb&#34;&gt;Round robin or weighted round robin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#layer-4-load-balancing&#34;&gt;Layer 4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#layer-7-load-balancing&#34;&gt;Layer 7&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Layer 4 load balancing&lt;/h3&gt; &#xA;&lt;p&gt;Layer 4 load balancers look at info at the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#communication&#34;&gt;transport layer&lt;/a&gt; to decide how to distribute requests. Generally, this involves the source, destination IP addresses, and ports in the header, but not the contents of the packet. Layer 4 load balancers forward network packets to and from the upstream server, performing &lt;a href=&#34;https://www.nginx.com/resources/glossary/layer-4-load-balancing/&#34;&gt;Network Address Translation (NAT)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Layer 7 load balancing&lt;/h3&gt; &#xA;&lt;p&gt;Layer 7 load balancers look at the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#communication&#34;&gt;application layer&lt;/a&gt; to decide how to distribute requests. This can involve contents of the header, message, and cookies. Layer 7 load balancers terminate network traffic, reads the message, makes a load-balancing decision, then opens a connection to the selected server. For example, a layer 7 load balancer can direct video traffic to servers that host videos while directing more sensitive user billing traffic to security-hardened servers.&lt;/p&gt; &#xA;&lt;p&gt;At the cost of flexibility, layer 4 load balancing requires less time and computing resources than Layer 7, although the performance impact can be minimal on modern commodity hardware.&lt;/p&gt; &#xA;&lt;h3&gt;Horizontal scaling&lt;/h3&gt; &#xA;&lt;p&gt;Load balancers can also help with horizontal scaling, improving performance and availability. Scaling out using commodity machines is more cost efficient and results in higher availability than scaling up a single server on more expensive hardware, called &lt;strong&gt;Vertical Scaling&lt;/strong&gt;. It is also easier to hire for talent working on commodity hardware than it is for specialized enterprise systems.&lt;/p&gt; &#xA;&lt;h4&gt;Disadvantage(s): horizontal scaling&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scaling horizontally introduces complexity and involves cloning servers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Servers should be stateless: they should not contain any user-related data like sessions or profile pictures&lt;/li&gt; &#xA;   &lt;li&gt;Sessions can be stored in a centralized data store such as a &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#database&#34;&gt;database&lt;/a&gt; (SQL, NoSQL) or a persistent &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#cache&#34;&gt;cache&lt;/a&gt; (Redis, Memcached)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Downstream servers such as caches and databases need to handle more simultaneous connections as upstream servers scale out&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Disadvantage(s): load balancer&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The load balancer can become a performance bottleneck if it does not have enough resources or if it is not configured properly.&lt;/li&gt; &#xA; &lt;li&gt;Introducing a load balancer to help eliminate a single point of failure results in increased complexity.&lt;/li&gt; &#xA; &lt;li&gt;A single load balancer is a single point of failure, configuring multiple load balancers further increases complexity.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/&#34;&gt;NGINX architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.haproxy.org/download/1.2/doc/architecture.txt&#34;&gt;HAProxy architecture guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones&#34;&gt;Scalability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Load_balancing_(computing)&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nginx.com/resources/glossary/layer-4-load-balancing/&#34;&gt;Layer 4 load balancing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nginx.com/resources/glossary/layer-7-load-balancing/&#34;&gt;Layer 7 load balancing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html&#34;&gt;ELB listener config&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reverse proxy (web server)&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n41Azff.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg&#34;&gt;Source: Wikipedia&lt;/a&gt;&lt;/i&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;A reverse proxy is a web server that centralizes internal services and provides unified interfaces to the public. Requests from clients are forwarded to a server that can fulfill it before the reverse proxy returns the server&#39;s response to the client.&lt;/p&gt; &#xA;&lt;p&gt;Additional benefits include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Increased security&lt;/strong&gt; - Hide information about backend servers, blacklist IPs, limit number of connections per client&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Increased scalability and flexibility&lt;/strong&gt; - Clients only see the reverse proxy&#39;s IP, allowing you to scale servers or change their configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SSL termination&lt;/strong&gt; - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Removes the need to install &lt;a href=&#34;https://en.wikipedia.org/wiki/X.509&#34;&gt;X.509 certificates&lt;/a&gt; on each server&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Compression&lt;/strong&gt; - Compress server responses&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Caching&lt;/strong&gt; - Return the response for cached requests&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Static content&lt;/strong&gt; - Serve static content directly &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;HTML/CSS/JS&lt;/li&gt; &#xA;   &lt;li&gt;Photos&lt;/li&gt; &#xA;   &lt;li&gt;Videos&lt;/li&gt; &#xA;   &lt;li&gt;Etc&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Load balancer vs reverse proxy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Deploying a load balancer is useful when you have multiple servers. Often, load balancers route traffic to a set of servers serving the same function.&lt;/li&gt; &#xA; &lt;li&gt;Reverse proxies can be useful even with just one web server or application server, opening up the benefits described in the previous section.&lt;/li&gt; &#xA; &lt;li&gt;Solutions such as NGINX and HAProxy can support both layer 7 reverse proxying and load balancing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Disadvantage(s): reverse proxy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Introducing a reverse proxy results in increased complexity.&lt;/li&gt; &#xA; &lt;li&gt;A single reverse proxy is a single point of failure, configuring multiple reverse proxies (ie a &lt;a href=&#34;https://en.wikipedia.org/wiki/Failover&#34;&gt;failover&lt;/a&gt;) further increases complexity.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/&#34;&gt;Reverse proxy vs load balancer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/&#34;&gt;NGINX architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.haproxy.org/download/1.2/doc/architecture.txt&#34;&gt;HAProxy architecture guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Reverse_proxy&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Application layer&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yB5SYwm.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer&#34;&gt;Source: Intro to architecting systems for scale&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;Separating out the web layer from the application layer (also known as platform layer) allows you to scale and configure both layers independently. Adding a new API results in adding application servers without necessarily adding additional web servers. The &lt;strong&gt;single responsibility principle&lt;/strong&gt; advocates for small and autonomous services that work together. Small teams with small services can plan more aggressively for rapid growth.&lt;/p&gt; &#xA;&lt;p&gt;Workers in the application layer also help enable &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#asynchronism&#34;&gt;asynchronism&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Microservices&lt;/h3&gt; &#xA;&lt;p&gt;Related to this discussion are &lt;a href=&#34;https://en.wikipedia.org/wiki/Microservices&#34;&gt;microservices&lt;/a&gt;, which can be described as a suite of independently deployable, small, modular services. Each service runs a unique process and communicates through a well-defined, lightweight mechanism to serve a business goal. &lt;sup&gt;&lt;a href=&#34;https://smartbear.com/learn/api-design/what-are-microservices&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pinterest, for example, could have the following microservices: user profile, follower, feed, search, photo upload, etc.&lt;/p&gt; &#xA;&lt;h3&gt;Service Discovery&lt;/h3&gt; &#xA;&lt;p&gt;Systems such as &lt;a href=&#34;https://www.consul.io/docs/index.html&#34;&gt;Consul&lt;/a&gt;, &lt;a href=&#34;https://coreos.com/etcd/docs/latest&#34;&gt;Etcd&lt;/a&gt;, and &lt;a href=&#34;http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper&#34;&gt;Zookeeper&lt;/a&gt; can help services find each other by keeping track of registered names, addresses, and ports. &lt;a href=&#34;https://www.consul.io/intro/getting-started/checks.html&#34;&gt;Health checks&lt;/a&gt; help verify service integrity and are often done using an &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#hypertext-transfer-protocol-http&#34;&gt;HTTP&lt;/a&gt; endpoint. Both Consul and Etcd have a built in &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#key-value-store&#34;&gt;key-value store&lt;/a&gt; that can be useful for storing config values and other shared data.&lt;/p&gt; &#xA;&lt;h3&gt;Disadvantage(s): application layer&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adding an application layer with loosely coupled services requires a different approach from an architectural, operations, and process viewpoint (vs a monolithic system).&lt;/li&gt; &#xA; &lt;li&gt;Microservices can add complexity in terms of deployments and operations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://lethain.com/introduction-to-architecting-systems-for-scale&#34;&gt;Intro to architecting systems for scale&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview&#34;&gt;Crack the system design interview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Service-oriented_architecture&#34;&gt;Service oriented architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper&#34;&gt;Introduction to Zookeeper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/&#34;&gt;Here&#39;s what you need to know about building microservices&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Database&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Xkm5CXz.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=kKjm4ehYiMs&#34;&gt;Source: Scaling up to your first 10 million users&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Relational database management system (RDBMS)&lt;/h3&gt; &#xA;&lt;p&gt;A relational database like SQL is a collection of data items organized in tables.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ACID&lt;/strong&gt; is a set of properties of relational database &lt;a href=&#34;https://en.wikipedia.org/wiki/Database_transaction&#34;&gt;transactions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Atomicity&lt;/strong&gt; - Each transaction is all or nothing&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Consistency&lt;/strong&gt; - Any transaction will bring the database from one valid state to another&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Isolation&lt;/strong&gt; - Executing transactions concurrently has the same results as if the transactions were executed serially&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Durability&lt;/strong&gt; - Once a transaction has been committed, it will remain so&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are many techniques to scale a relational database: &lt;strong&gt;master-slave replication&lt;/strong&gt;, &lt;strong&gt;master-master replication&lt;/strong&gt;, &lt;strong&gt;federation&lt;/strong&gt;, &lt;strong&gt;sharding&lt;/strong&gt;, &lt;strong&gt;denormalization&lt;/strong&gt;, and &lt;strong&gt;SQL tuning&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Master-slave replication&lt;/h4&gt; &#xA;&lt;p&gt;The master serves reads and writes, replicating writes to one or more slaves, which serve only reads. Slaves can also replicate to additional slaves in a tree-like fashion. If the master goes offline, the system can continue to operate in read-only mode until a slave is promoted to a master or a new master is provisioned.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/C9ioGtn.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.slideshare.net/jboner/scalability-availability-stability-patterns/&#34;&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;h5&gt;Disadvantage(s): master-slave replication&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Additional logic is needed to promote a slave to a master.&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#disadvantages-replication&#34;&gt;Disadvantage(s): replication&lt;/a&gt; for points related to &lt;strong&gt;both&lt;/strong&gt; master-slave and master-master.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Master-master replication&lt;/h4&gt; &#xA;&lt;p&gt;Both masters serve reads and writes and coordinate with each other on writes. If either master goes down, the system can continue to operate with both reads and writes.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/krAHLGg.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.slideshare.net/jboner/scalability-availability-stability-patterns/&#34;&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;h5&gt;Disadvantage(s): master-master replication&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You&#39;ll need a load balancer or you&#39;ll need to make changes to your application logic to determine where to write.&lt;/li&gt; &#xA; &lt;li&gt;Most master-master systems are either loosely consistent (violating ACID) or have increased write latency due to synchronization.&lt;/li&gt; &#xA; &lt;li&gt;Conflict resolution comes more into play as more write nodes are added and as latency increases.&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#disadvantages-replication&#34;&gt;Disadvantage(s): replication&lt;/a&gt; for points related to &lt;strong&gt;both&lt;/strong&gt; master-slave and master-master.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Disadvantage(s): replication&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There is a potential for loss of data if the master fails before any newly written data can be replicated to other nodes.&lt;/li&gt; &#xA; &lt;li&gt;Writes are replayed to the read replicas. If there are a lot of writes, the read replicas can get bogged down with replaying writes and can&#39;t do as many reads.&lt;/li&gt; &#xA; &lt;li&gt;The more read slaves, the more you have to replicate, which leads to greater replication lag.&lt;/li&gt; &#xA; &lt;li&gt;On some systems, writing to the master can spawn multiple threads to write in parallel, whereas read replicas only support writing sequentially with a single thread.&lt;/li&gt; &#xA; &lt;li&gt;Replication adds more hardware and additional complexity.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Source(s) and further reading: replication&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/jboner/scalability-availability-stability-patterns/&#34;&gt;Scalability, availability, stability, patterns&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Multi-master_replication&#34;&gt;Multi-master replication&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Federation&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/U3qV33e.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=kKjm4ehYiMs&#34;&gt;Source: Scaling up to your first 10 million users&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;Federation (or functional partitioning) splits up databases by function. For example, instead of a single, monolithic database, you could have three databases: &lt;strong&gt;forums&lt;/strong&gt;, &lt;strong&gt;users&lt;/strong&gt;, and &lt;strong&gt;products&lt;/strong&gt;, resulting in less read and write traffic to each database and therefore less replication lag. Smaller databases result in more data that can fit in memory, which in turn results in more cache hits due to improved cache locality. With no single central master serializing writes you can write in parallel, increasing throughput.&lt;/p&gt; &#xA;&lt;h5&gt;Disadvantage(s): federation&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Federation is not effective if your schema requires huge functions or tables.&lt;/li&gt; &#xA; &lt;li&gt;You&#39;ll need to update your application logic to determine which database to read and write.&lt;/li&gt; &#xA; &lt;li&gt;Joining data from two databases is more complex with a &lt;a href=&#34;http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers&#34;&gt;server link&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Federation adds more hardware and additional complexity.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Source(s) and further reading: federation&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=kKjm4ehYiMs&#34;&gt;Scaling up to your first 10 million users&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Sharding&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wU8x5Id.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.slideshare.net/jboner/scalability-availability-stability-patterns/&#34;&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;Sharding distributes data across different databases such that each database can only manage a subset of the data. Taking a users database as an example, as the number of users increases, more shards are added to the cluster.&lt;/p&gt; &#xA;&lt;p&gt;Similar to the advantages of &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#federation&#34;&gt;federation&lt;/a&gt;, sharding results in less read and write traffic, less replication, and more cache hits. Index size is also reduced, which generally improves performance with faster queries. If one shard goes down, the other shards are still operational, although you&#39;ll want to add some form of replication to avoid data loss. Like federation, there is no single central master serializing writes, allowing you to write in parallel with increased throughput.&lt;/p&gt; &#xA;&lt;p&gt;Common ways to shard a table of users is either through the user&#39;s last name initial or the user&#39;s geographic location.&lt;/p&gt; &#xA;&lt;h5&gt;Disadvantage(s): sharding&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You&#39;ll need to update your application logic to work with shards, which could result in complex SQL queries.&lt;/li&gt; &#xA; &lt;li&gt;Data distribution can become lopsided in a shard. For example, a set of power users on a shard could result in increased load to that shard compared to others. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Rebalancing adds additional complexity. A sharding function based on &lt;a href=&#34;http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html&#34;&gt;consistent hashing&lt;/a&gt; can reduce the amount of transferred data.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Joining data from multiple shards is more complex.&lt;/li&gt; &#xA; &lt;li&gt;Sharding adds more hardware and additional complexity.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Source(s) and further reading: sharding&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html&#34;&gt;The coming of the shard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Shard_(database_architecture)&#34;&gt;Shard database architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html&#34;&gt;Consistent hashing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Denormalization&lt;/h4&gt; &#xA;&lt;p&gt;Denormalization attempts to improve read performance at the expense of some write performance. Redundant copies of the data are written in multiple tables to avoid expensive joins. Some RDBMS such as &lt;a href=&#34;https://en.wikipedia.org/wiki/PostgreSQL&#34;&gt;PostgreSQL&lt;/a&gt; and Oracle support &lt;a href=&#34;https://en.wikipedia.org/wiki/Materialized_view&#34;&gt;materialized views&lt;/a&gt; which handle the work of storing redundant information and keeping redundant copies consistent.&lt;/p&gt; &#xA;&lt;p&gt;Once data becomes distributed with techniques such as &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#federation&#34;&gt;federation&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#sharding&#34;&gt;sharding&lt;/a&gt;, managing joins across data centers further increases complexity. Denormalization might circumvent the need for such complex joins.&lt;/p&gt; &#xA;&lt;p&gt;In most systems, reads can heavily outnumber writes 100:1 or even 1000:1. A read resulting in a complex database join can be very expensive, spending a significant amount of time on disk operations.&lt;/p&gt; &#xA;&lt;h5&gt;Disadvantage(s): denormalization&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Data is duplicated.&lt;/li&gt; &#xA; &lt;li&gt;Constraints can help redundant copies of information stay in sync, which increases complexity of the database design.&lt;/li&gt; &#xA; &lt;li&gt;A denormalized database under heavy write load might perform worse than its normalized counterpart.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;Source(s) and further reading: denormalization&lt;/h6&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Denormalization&#34;&gt;Denormalization&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;SQL tuning&lt;/h4&gt; &#xA;&lt;p&gt;SQL tuning is a broad topic and many &lt;a href=&#34;https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&amp;amp;field-keywords=sql+tuning&#34;&gt;books&lt;/a&gt; have been written as reference.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s important to &lt;strong&gt;benchmark&lt;/strong&gt; and &lt;strong&gt;profile&lt;/strong&gt; to simulate and uncover bottlenecks.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Benchmark&lt;/strong&gt; - Simulate high-load situations with tools such as &lt;a href=&#34;http://httpd.apache.org/docs/2.2/programs/ab.html&#34;&gt;ab&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Profile&lt;/strong&gt; - Enable tools such as the &lt;a href=&#34;http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html&#34;&gt;slow query log&lt;/a&gt; to help track performance issues.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Benchmarking and profiling might point you to the following optimizations.&lt;/p&gt; &#xA;&lt;h5&gt;Tighten up the schema&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MySQL dumps to disk in contiguous blocks for fast access.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;CHAR&lt;/code&gt; instead of &lt;code&gt;VARCHAR&lt;/code&gt; for fixed-length fields. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;CHAR&lt;/code&gt; effectively allows for fast, random access, whereas with &lt;code&gt;VARCHAR&lt;/code&gt;, you must find the end of a string before moving onto the next one.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;TEXT&lt;/code&gt; for large blocks of text such as blog posts. &lt;code&gt;TEXT&lt;/code&gt; also allows for boolean searches. Using a &lt;code&gt;TEXT&lt;/code&gt; field results in storing a pointer on disk that is used to locate the text block.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;INT&lt;/code&gt; for larger numbers up to 2^32 or 4 billion.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;DECIMAL&lt;/code&gt; for currency to avoid floating point representation errors.&lt;/li&gt; &#xA; &lt;li&gt;Avoid storing large &lt;code&gt;BLOBS&lt;/code&gt;, store the location of where to get the object instead.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;VARCHAR(255)&lt;/code&gt; is the largest number of characters that can be counted in an 8 bit number, often maximizing the use of a byte in some RDBMS.&lt;/li&gt; &#xA; &lt;li&gt;Set the &lt;code&gt;NOT NULL&lt;/code&gt; constraint where applicable to &lt;a href=&#34;http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search&#34;&gt;improve search performance&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Use good indices&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Columns that you are querying (&lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;GROUP BY&lt;/code&gt;, &lt;code&gt;ORDER BY&lt;/code&gt;, &lt;code&gt;JOIN&lt;/code&gt;) could be faster with indices.&lt;/li&gt; &#xA; &lt;li&gt;Indices are usually represented as self-balancing &lt;a href=&#34;https://en.wikipedia.org/wiki/B-tree&#34;&gt;B-tree&lt;/a&gt; that keeps data sorted and allows searches, sequential access, insertions, and deletions in logarithmic time.&lt;/li&gt; &#xA; &lt;li&gt;Placing an index can keep the data in memory, requiring more space.&lt;/li&gt; &#xA; &lt;li&gt;Writes could also be slower since the index also needs to be updated.&lt;/li&gt; &#xA; &lt;li&gt;When loading large amounts of data, it might be faster to disable indices, load the data, then rebuild the indices.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Avoid expensive joins&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#denormalization&#34;&gt;Denormalize&lt;/a&gt; where performance demands it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Partition tables&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Break up a table by putting hot spots in a separate table to help keep it in memory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Tune the query cache&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In some cases, the &lt;a href=&#34;https://dev.mysql.com/doc/refman/5.7/en/query-cache.html&#34;&gt;query cache&lt;/a&gt; could lead to &lt;a href=&#34;https://www.percona.com/blog/2016/10/12/mysql-5-7-performance-tuning-immediately-after-installation/&#34;&gt;performance issues&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Source(s) and further reading: SQL tuning&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://aiddroid.com/10-tips-optimizing-mysql-queries-dont-suck/&#34;&gt;Tips for optimizing MySQL queries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l&#34;&gt;Is there a good reason i see VARCHAR(255) used so often?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search&#34;&gt;How do null values affect performance?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html&#34;&gt;Slow query log&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;NoSQL&lt;/h3&gt; &#xA;&lt;p&gt;NoSQL is a collection of data items represented in a &lt;strong&gt;key-value store&lt;/strong&gt;, &lt;strong&gt;document store&lt;/strong&gt;, &lt;strong&gt;wide column store&lt;/strong&gt;, or a &lt;strong&gt;graph database&lt;/strong&gt;. Data is denormalized, and joins are generally done in the application code. Most NoSQL stores lack true ACID transactions and favor &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#eventual-consistency&#34;&gt;eventual consistency&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;BASE&lt;/strong&gt; is often used to describe the properties of NoSQL databases. In comparison with the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#cap-theorem&#34;&gt;CAP Theorem&lt;/a&gt;, BASE chooses availability over consistency.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Basically available&lt;/strong&gt; - the system guarantees availability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Soft state&lt;/strong&gt; - the state of the system may change over time, even without input.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Eventual consistency&lt;/strong&gt; - the system will become consistent over a period of time, given that the system doesn&#39;t receive input during that period.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In addition to choosing between &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#sql-or-nosql&#34;&gt;SQL or NoSQL&lt;/a&gt;, it is helpful to understand which type of NoSQL database best fits your use case(s). We&#39;ll review &lt;strong&gt;key-value stores&lt;/strong&gt;, &lt;strong&gt;document stores&lt;/strong&gt;, &lt;strong&gt;wide column stores&lt;/strong&gt;, and &lt;strong&gt;graph databases&lt;/strong&gt; in the next section.&lt;/p&gt; &#xA;&lt;h4&gt;Key-value store&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Abstraction: hash table&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;A key-value store generally allows for O(1) reads and writes and is often backed by memory or SSD. Data stores can maintain keys in &lt;a href=&#34;https://en.wikipedia.org/wiki/Lexicographical_order&#34;&gt;lexicographic order&lt;/a&gt;, allowing efficient retrieval of key ranges. Key-value stores can allow for storing of metadata with a value.&lt;/p&gt; &#xA;&lt;p&gt;Key-value stores provide high performance and are often used for simple data models or for rapidly-changing data, such as an in-memory cache layer. Since they offer only a limited set of operations, complexity is shifted to the application layer if additional operations are needed.&lt;/p&gt; &#xA;&lt;p&gt;A key-value store is the basis for more complex systems such as a document store, and in some cases, a graph database.&lt;/p&gt; &#xA;&lt;h5&gt;Source(s) and further reading: key-value store&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Key-value_database&#34;&gt;Key-value database&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or&#34;&gt;Disadvantages of key-value stores&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://qnimate.com/overview-of-redis-architecture/&#34;&gt;Redis architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://adayinthelifeof.nl/2011/02/06/memcache-internals/&#34;&gt;Memcached architecture&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Document store&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Abstraction: key-value store with documents stored as values&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;A document store is centered around documents (XML, JSON, binary, etc), where a document stores all information for a given object. Document stores provide APIs or a query language to query based on the internal structure of the document itself. &lt;em&gt;Note, many key-value stores include features for working with a value&#39;s metadata, blurring the lines between these two storage types.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Based on the underlying implementation, documents are organized by collections, tags, metadata, or directories. Although documents can be organized or grouped together, documents may have fields that are completely different from each other.&lt;/p&gt; &#xA;&lt;p&gt;Some document stores like &lt;a href=&#34;https://www.mongodb.com/mongodb-architecture&#34;&gt;MongoDB&lt;/a&gt; and &lt;a href=&#34;https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/&#34;&gt;CouchDB&lt;/a&gt; also provide a SQL-like language to perform complex queries. &lt;a href=&#34;http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf&#34;&gt;DynamoDB&lt;/a&gt; supports both key-values and documents.&lt;/p&gt; &#xA;&lt;p&gt;Document stores provide high flexibility and are often used for working with occasionally changing data.&lt;/p&gt; &#xA;&lt;h5&gt;Source(s) and further reading: document store&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Document-oriented_database&#34;&gt;Document-oriented database&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mongodb.com/mongodb-architecture&#34;&gt;MongoDB architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/&#34;&gt;CouchDB architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up&#34;&gt;Elasticsearch architecture&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Wide column store&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n16iOGk.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html&#34;&gt;Source: SQL &amp;amp; NoSQL, a brief history&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Abstraction: nested map &lt;code&gt;ColumnFamily&amp;lt;RowKey, Columns&amp;lt;ColKey, Value, Timestamp&amp;gt;&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;A wide column store&#39;s basic unit of data is a column (name/value pair). A column can be grouped in column families (analogous to a SQL table). Super column families further group column families. You can access each column independently with a row key, and columns with the same row key form a row. Each value contains a timestamp for versioning and for conflict resolution.&lt;/p&gt; &#xA;&lt;p&gt;Google introduced &lt;a href=&#34;http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf&#34;&gt;Bigtable&lt;/a&gt; as the first wide column store, which influenced the open-source &lt;a href=&#34;https://www.edureka.co/blog/hbase-architecture/&#34;&gt;HBase&lt;/a&gt; often-used in the Hadoop ecosystem, and &lt;a href=&#34;http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html&#34;&gt;Cassandra&lt;/a&gt; from Facebook. Stores such as BigTable, HBase, and Cassandra maintain keys in lexicographic order, allowing efficient retrieval of selective key ranges.&lt;/p&gt; &#xA;&lt;p&gt;Wide column stores offer high availability and high scalability. They are often used for very large data sets.&lt;/p&gt; &#xA;&lt;h5&gt;Source(s) and further reading: wide column store&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html&#34;&gt;SQL &amp;amp; NoSQL, a brief history&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf&#34;&gt;Bigtable architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.edureka.co/blog/hbase-architecture/&#34;&gt;HBase architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html&#34;&gt;Cassandra architecture&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Graph database&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/fNcl65g.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png&#34;&gt;Source: Graph database&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Abstraction: graph&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;In a graph database, each node is a record and each arc is a relationship between two nodes. Graph databases are optimized to represent complex relationships with many foreign keys or many-to-many relationships.&lt;/p&gt; &#xA;&lt;p&gt;Graphs databases offer high performance for data models with complex relationships, such as a social network. They are relatively new and are not yet widely-used; it might be more difficult to find development tools and resources. Many graphs can only be accessed with &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#representational-state-transfer-rest&#34;&gt;REST APIs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Source(s) and further reading: graph&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Graph_database&#34;&gt;Graph database&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://neo4j.com/&#34;&gt;Neo4j&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.twitter.com/2010/introducing-flockdb&#34;&gt;FlockDB&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Source(s) and further reading: NoSQL&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/3342497/explanation-of-base-terminology&#34;&gt;Explanation of base terminology&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq&#34;&gt;NoSQL databases a survey and decision guidance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database&#34;&gt;Scalability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=qI_g07C_Q5I&#34;&gt;Introduction to NoSQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://horicky.blogspot.com/2009/11/nosql-patterns.html&#34;&gt;NoSQL patterns&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;SQL or NoSQL&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wXGqG5f.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;https://www.infoq.com/articles/Transition-RDBMS-NoSQL/&#34;&gt;Source: Transitioning from RDBMS to NoSQL&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;Reasons for &lt;strong&gt;SQL&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Structured data&lt;/li&gt; &#xA; &lt;li&gt;Strict schema&lt;/li&gt; &#xA; &lt;li&gt;Relational data&lt;/li&gt; &#xA; &lt;li&gt;Need for complex joins&lt;/li&gt; &#xA; &lt;li&gt;Transactions&lt;/li&gt; &#xA; &lt;li&gt;Clear patterns for scaling&lt;/li&gt; &#xA; &lt;li&gt;More established: developers, community, code, tools, etc&lt;/li&gt; &#xA; &lt;li&gt;Lookups by index are very fast&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Reasons for &lt;strong&gt;NoSQL&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Semi-structured data&lt;/li&gt; &#xA; &lt;li&gt;Dynamic or flexible schema&lt;/li&gt; &#xA; &lt;li&gt;Non-relational data&lt;/li&gt; &#xA; &lt;li&gt;No need for complex joins&lt;/li&gt; &#xA; &lt;li&gt;Store many TB (or PB) of data&lt;/li&gt; &#xA; &lt;li&gt;Very data intensive workload&lt;/li&gt; &#xA; &lt;li&gt;Very high throughput for IOPS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sample data well-suited for NoSQL:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rapid ingest of clickstream and log data&lt;/li&gt; &#xA; &lt;li&gt;Leaderboard or scoring data&lt;/li&gt; &#xA; &lt;li&gt;Temporary data, such as a shopping cart&lt;/li&gt; &#xA; &lt;li&gt;Frequently accessed (&#39;hot&#39;) tables&lt;/li&gt; &#xA; &lt;li&gt;Metadata/lookup tables&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Source(s) and further reading: SQL or NoSQL&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=kKjm4ehYiMs&#34;&gt;Scaling up to your first 10 million users&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sitepoint.com/sql-vs-nosql-differences/&#34;&gt;SQL vs NoSQL differences&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cache&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Q6z24La.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html&#34;&gt;Source: Scalable system design patterns&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;Caching improves page load times and can reduce the load on your servers and databases. In this model, the dispatcher will first lookup if the request has been made before and try to find the previous result to return, in order to save the actual execution.&lt;/p&gt; &#xA;&lt;p&gt;Databases often benefit from a uniform distribution of reads and writes across its partitions. Popular items can skew the distribution, causing bottlenecks. Putting a cache in front of a database can help absorb uneven loads and spikes in traffic.&lt;/p&gt; &#xA;&lt;h3&gt;Client caching&lt;/h3&gt; &#xA;&lt;p&gt;Caches can be located on the client side (OS or browser), &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#reverse-proxy-web-server&#34;&gt;server side&lt;/a&gt;, or in a distinct cache layer.&lt;/p&gt; &#xA;&lt;h3&gt;CDN caching&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#content-delivery-network&#34;&gt;CDNs&lt;/a&gt; are considered a type of cache.&lt;/p&gt; &#xA;&lt;h3&gt;Web server caching&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#reverse-proxy-web-server&#34;&gt;Reverse proxies&lt;/a&gt; and caches such as &lt;a href=&#34;https://www.varnish-cache.org/&#34;&gt;Varnish&lt;/a&gt; can serve static and dynamic content directly. Web servers can also cache requests, returning responses without having to contact application servers.&lt;/p&gt; &#xA;&lt;h3&gt;Database caching&lt;/h3&gt; &#xA;&lt;p&gt;Your database usually includes some level of caching in a default configuration, optimized for a generic use case. Tweaking these settings for specific usage patterns can further boost performance.&lt;/p&gt; &#xA;&lt;h3&gt;Application caching&lt;/h3&gt; &#xA;&lt;p&gt;In-memory caches such as Memcached and Redis are key-value stores between your application and your data storage. Since the data is held in RAM, it is much faster than typical databases where data is stored on disk. RAM is more limited than disk, so &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_algorithms&#34;&gt;cache invalidation&lt;/a&gt; algorithms such as &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)&#34;&gt;least recently used (LRU)&lt;/a&gt; can help invalidate &#39;cold&#39; entries and keep &#39;hot&#39; data in RAM.&lt;/p&gt; &#xA;&lt;p&gt;Redis has the following additional features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Persistence option&lt;/li&gt; &#xA; &lt;li&gt;Built-in data structures such as sorted sets and lists&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are multiple levels you can cache that fall into two general categories: &lt;strong&gt;database queries&lt;/strong&gt; and &lt;strong&gt;objects&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Row level&lt;/li&gt; &#xA; &lt;li&gt;Query-level&lt;/li&gt; &#xA; &lt;li&gt;Fully-formed serializable objects&lt;/li&gt; &#xA; &lt;li&gt;Fully-rendered HTML&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Generally, you should try to avoid file-based caching, as it makes cloning and auto-scaling more difficult.&lt;/p&gt; &#xA;&lt;h3&gt;Caching at the database query level&lt;/h3&gt; &#xA;&lt;p&gt;Whenever you query the database, hash the query as a key and store the result to the cache. This approach suffers from expiration issues:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hard to delete a cached result with complex queries&lt;/li&gt; &#xA; &lt;li&gt;If one piece of data changes such as a table cell, you need to delete all cached queries that might include the changed cell&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Caching at the object level&lt;/h3&gt; &#xA;&lt;p&gt;See your data as an object, similar to what you do with your application code. Have your application assemble the dataset from the database into a class instance or a data structure(s):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Remove the object from cache if its underlying data has changed&lt;/li&gt; &#xA; &lt;li&gt;Allows for asynchronous processing: workers assemble objects by consuming the latest cached object&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Suggestions of what to cache:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User sessions&lt;/li&gt; &#xA; &lt;li&gt;Fully rendered web pages&lt;/li&gt; &#xA; &lt;li&gt;Activity streams&lt;/li&gt; &#xA; &lt;li&gt;User graph data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;When to update the cache&lt;/h3&gt; &#xA;&lt;p&gt;Since you can only store a limited amount of data in cache, you&#39;ll need to determine which cache update strategy works best for your use case.&lt;/p&gt; &#xA;&lt;h4&gt;Cache-aside&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/ONjORqk.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast&#34;&gt;Source: From cache to in-memory data grid&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;The application is responsible for reading and writing from storage. The cache does not interact with storage directly. The application does the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Look for entry in cache, resulting in a cache miss&lt;/li&gt; &#xA; &lt;li&gt;Load entry from the database&lt;/li&gt; &#xA; &lt;li&gt;Add entry to cache&lt;/li&gt; &#xA; &lt;li&gt;Return entry&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def get_user(self, user_id):&#xA;    user = cache.get(&#34;user.{0}&#34;, user_id)&#xA;    if user is None:&#xA;        user = db.query(&#34;SELECT * FROM users WHERE user_id = {0}&#34;, user_id)&#xA;        if user is not None:&#xA;            key = &#34;user.{0}&#34;.format(user_id)&#xA;            cache.set(key, json.dumps(user))&#xA;    return user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://memcached.org/&#34;&gt;Memcached&lt;/a&gt; is generally used in this manner.&lt;/p&gt; &#xA;&lt;p&gt;Subsequent reads of data added to cache are fast. Cache-aside is also referred to as lazy loading. Only requested data is cached, which avoids filling up the cache with data that isn&#39;t requested.&lt;/p&gt; &#xA;&lt;h5&gt;Disadvantage(s): cache-aside&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Each cache miss results in three trips, which can cause a noticeable delay.&lt;/li&gt; &#xA; &lt;li&gt;Data can become stale if it is updated in the database. This issue is mitigated by setting a time-to-live (TTL) which forces an update of the cache entry, or by using write-through.&lt;/li&gt; &#xA; &lt;li&gt;When a node fails, it is replaced by a new, empty node, increasing latency.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Write-through&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/0vBc0hN.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.slideshare.net/jboner/scalability-availability-stability-patterns/&#34;&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;The application uses the cache as the main data store, reading and writing data to it, while the cache is responsible for reading and writing to the database:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Application adds/updates entry in cache&lt;/li&gt; &#xA; &lt;li&gt;Cache synchronously writes entry to data store&lt;/li&gt; &#xA; &lt;li&gt;Return&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Application code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;set_user(12345, {&#34;foo&#34;:&#34;bar&#34;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Cache code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def set_user(user_id, values):&#xA;    user = db.query(&#34;UPDATE Users WHERE id = {0}&#34;, user_id, values)&#xA;    cache.set(user_id, user)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Write-through is a slow overall operation due to the write operation, but subsequent reads of just written data are fast. Users are generally more tolerant of latency when updating data than reading data. Data in the cache is not stale.&lt;/p&gt; &#xA;&lt;h5&gt;Disadvantage(s): write through&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When a new node is created due to failure or scaling, the new node will not cache entries until the entry is updated in the database. Cache-aside in conjunction with write through can mitigate this issue.&lt;/li&gt; &#xA; &lt;li&gt;Most data written might never be read, which can be minimized with a TTL.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Write-behind (write-back)&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/rgSrvjG.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.slideshare.net/jboner/scalability-availability-stability-patterns/&#34;&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;In write-behind, the application does the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add/update entry in cache&lt;/li&gt; &#xA; &lt;li&gt;Asynchronously write entry to the data store, improving write performance&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Disadvantage(s): write-behind&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There could be data loss if the cache goes down prior to its contents hitting the data store.&lt;/li&gt; &#xA; &lt;li&gt;It is more complex to implement write-behind than it is to implement cache-aside or write-through.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Refresh-ahead&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/kxtjqgE.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast&#34;&gt;Source: From cache to in-memory data grid&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;You can configure the cache to automatically refresh any recently accessed cache entry prior to its expiration.&lt;/p&gt; &#xA;&lt;p&gt;Refresh-ahead can result in reduced latency vs read-through if the cache can accurately predict which items are likely to be needed in the future.&lt;/p&gt; &#xA;&lt;h5&gt;Disadvantage(s): refresh-ahead&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Not accurately predicting which items are likely to be needed in the future can result in reduced performance than without refresh-ahead.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Disadvantage(s): cache&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Need to maintain consistency between caches and the source of truth such as the database through &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_algorithms&#34;&gt;cache invalidation&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Cache invalidation is a difficult problem, there is additional complexity associated with when to update the cache.&lt;/li&gt; &#xA; &lt;li&gt;Need to make application changes such as adding Redis or memcached.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast&#34;&gt;From cache to in-memory data grid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html&#34;&gt;Scalable system design patterns&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://lethain.com/introduction-to-architecting-systems-for-scale/&#34;&gt;Introduction to architecting systems for scale&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/jboner/scalability-availability-stability-patterns/&#34;&gt;Scalability, availability, stability, patterns&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache&#34;&gt;Scalability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html&#34;&gt;AWS ElastiCache strategies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_(computing)&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Asynchronism&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/54GYsSx.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer&#34;&gt;Source: Intro to architecting systems for scale&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;Asynchronous workflows help reduce request times for expensive operations that would otherwise be performed in-line. They can also help by doing time-consuming work in advance, such as periodic aggregation of data.&lt;/p&gt; &#xA;&lt;h3&gt;Message queues&lt;/h3&gt; &#xA;&lt;p&gt;Message queues receive, hold, and deliver messages. If an operation is too slow to perform inline, you can use a message queue with the following workflow:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An application publishes a job to the queue, then notifies the user of job status&lt;/li&gt; &#xA; &lt;li&gt;A worker picks up the job from the queue, processes it, then signals the job is complete&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The user is not blocked and the job is processed in the background. During this time, the client might optionally do a small amount of processing to make it seem like the task has completed. For example, if posting a tweet, the tweet could be instantly posted to your timeline, but it could take some time before your tweet is actually delivered to all of your followers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt;&lt;/strong&gt; is useful as a simple message broker but messages can be lost.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.rabbitmq.com/&#34;&gt;RabbitMQ&lt;/a&gt;&lt;/strong&gt; is popular but requires you to adapt to the &#39;AMQP&#39; protocol and manage your own nodes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://aws.amazon.com/sqs/&#34;&gt;Amazon SQS&lt;/a&gt;&lt;/strong&gt; is hosted but can have high latency and has the possibility of messages being delivered twice.&lt;/p&gt; &#xA;&lt;h3&gt;Task queues&lt;/h3&gt; &#xA;&lt;p&gt;Tasks queues receive tasks and their related data, runs them, then delivers their results. They can support scheduling and can be used to run computationally-intensive jobs in the background.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.celeryproject.org/en/stable/&#34;&gt;Celery&lt;/a&gt;&lt;/strong&gt; has support for scheduling and primarily has python support.&lt;/p&gt; &#xA;&lt;h3&gt;Back pressure&lt;/h3&gt; &#xA;&lt;p&gt;If queues start to grow significantly, the queue size can become larger than memory, resulting in cache misses, disk reads, and even slower performance. &lt;a href=&#34;http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html&#34;&gt;Back pressure&lt;/a&gt; can help by limiting the queue size, thereby maintaining a high throughput rate and good response times for jobs already in the queue. Once the queue fills up, clients get a server busy or HTTP 503 status code to try again later. Clients can retry the request at a later time, perhaps with &lt;a href=&#34;https://en.wikipedia.org/wiki/Exponential_backoff&#34;&gt;exponential backoff&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Disadvantage(s): asynchronism&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use cases such as inexpensive calculations and realtime workflows might be better suited for synchronous operations, as introducing queues can add delays and complexity.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=1KRYH75wgy4&#34;&gt;It&#39;s all a numbers game&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html&#34;&gt;Applying back pressure when overloaded&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Little%27s_law&#34;&gt;Little&#39;s law&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function&#34;&gt;What is the difference between a message queue and a task queue?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/5KeocQs.jpg&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.escotal.com/osilayer.html&#34;&gt;Source: OSI 7 layer model&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Hypertext transfer protocol (HTTP)&lt;/h3&gt; &#xA;&lt;p&gt;HTTP is a method for encoding and transporting data between a client and a server. It is a request/response protocol: clients issue requests and servers issue responses with relevant content and completion status info about the request. HTTP is self-contained, allowing requests and responses to flow through many intermediate routers and servers that perform load balancing, caching, encryption, and compression.&lt;/p&gt; &#xA;&lt;p&gt;A basic HTTP request consists of a verb (method) and a resource (endpoint). Below are common HTTP verbs:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Verb&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Idempotent*&lt;/th&gt; &#xA;   &lt;th&gt;Safe&lt;/th&gt; &#xA;   &lt;th&gt;Cacheable&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GET&lt;/td&gt; &#xA;   &lt;td&gt;Reads a resource&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;POST&lt;/td&gt; &#xA;   &lt;td&gt;Creates a resource or trigger a process that handles data&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes if response contains freshness info&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PUT&lt;/td&gt; &#xA;   &lt;td&gt;Creates or replace a resource&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PATCH&lt;/td&gt; &#xA;   &lt;td&gt;Partially updates a resource&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes if response contains freshness info&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DELETE&lt;/td&gt; &#xA;   &lt;td&gt;Deletes a resource&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;*Can be called many times without different outcomes.&lt;/p&gt; &#xA;&lt;p&gt;HTTP is an application layer protocol relying on lower-level protocols such as &lt;strong&gt;TCP&lt;/strong&gt; and &lt;strong&gt;UDP&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Source(s) and further reading: HTTP&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nginx.com/resources/glossary/http/&#34;&gt;What is HTTP?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol&#34;&gt;Difference between HTTP and TCP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1&#34;&gt;Difference between PUT and PATCH&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Transmission control protocol (TCP)&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/JdAsdvG.jpg&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/&#34;&gt;Source: How to make a multiplayer game&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;TCP is a connection-oriented protocol over an &lt;a href=&#34;https://en.wikipedia.org/wiki/Internet_Protocol&#34;&gt;IP network&lt;/a&gt;. Connection is established and terminated using a &lt;a href=&#34;https://en.wikipedia.org/wiki/Handshaking&#34;&gt;handshake&lt;/a&gt;. All packets sent are guaranteed to reach the destination in the original order and without corruption through:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sequence numbers and &lt;a href=&#34;https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation&#34;&gt;checksum fields&lt;/a&gt; for each packet&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Acknowledgement_(data_networks)&#34;&gt;Acknowledgement&lt;/a&gt; packets and automatic retransmission&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the sender does not receive a correct response, it will resend the packets. If there are multiple timeouts, the connection is dropped. TCP also implements &lt;a href=&#34;https://en.wikipedia.org/wiki/Flow_control_(data)&#34;&gt;flow control&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Network_congestion#Congestion_control&#34;&gt;congestion control&lt;/a&gt;. These guarantees cause delays and generally result in less efficient transmission than UDP.&lt;/p&gt; &#xA;&lt;p&gt;To ensure high throughput, web servers can keep a large number of TCP connections open, resulting in high memory usage. It can be expensive to have a large number of open connections between web server threads and say, a &lt;a href=&#34;https://memcached.org/&#34;&gt;memcached&lt;/a&gt; server. &lt;a href=&#34;https://en.wikipedia.org/wiki/Connection_pool&#34;&gt;Connection pooling&lt;/a&gt; can help in addition to switching to UDP where applicable.&lt;/p&gt; &#xA;&lt;p&gt;TCP is useful for applications that require high reliability but are less time critical. Some examples include web servers, database info, SMTP, FTP, and SSH.&lt;/p&gt; &#xA;&lt;p&gt;Use TCP over UDP when:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need all of the data to arrive intact&lt;/li&gt; &#xA; &lt;li&gt;You want to automatically make a best estimate use of the network throughput&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;User datagram protocol (UDP)&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yzDrJtA.jpg&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/&#34;&gt;Source: How to make a multiplayer game&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;UDP is connectionless. Datagrams (analogous to packets) are guaranteed only at the datagram level. Datagrams might reach their destination out of order or not at all. UDP does not support congestion control. Without the guarantees that TCP support, UDP is generally more efficient.&lt;/p&gt; &#xA;&lt;p&gt;UDP can broadcast, sending datagrams to all devices on the subnet. This is useful with &lt;a href=&#34;https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol&#34;&gt;DHCP&lt;/a&gt; because the client has not yet received an IP address, thus preventing a way for TCP to stream without the IP address.&lt;/p&gt; &#xA;&lt;p&gt;UDP is less reliable but works well in real time use cases such as VoIP, video chat, streaming, and realtime multiplayer games.&lt;/p&gt; &#xA;&lt;p&gt;Use UDP over TCP when:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need the lowest latency&lt;/li&gt; &#xA; &lt;li&gt;Late data is worse than loss of data&lt;/li&gt; &#xA; &lt;li&gt;You want to implement your own error correction&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Source(s) and further reading: TCP and UDP&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/&#34;&gt;Networking for game programming&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/&#34;&gt;Key differences between TCP and UDP protocols&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp&#34;&gt;Difference between TCP and UDP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Transmission_Control_Protocol&#34;&gt;Transmission control protocol&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/User_Datagram_Protocol&#34;&gt;User datagram protocol&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf&#34;&gt;Scaling memcache at Facebook&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Remote procedure call (RPC)&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/iF4Mkb5.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview&#34;&gt;Source: Crack the system design interview&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;In an RPC, a client causes a procedure to execute on a different address space, usually a remote server. The procedure is coded as if it were a local procedure call, abstracting away the details of how to communicate with the server from the client program. Remote calls are usually slower and less reliable than local calls so it is helpful to distinguish RPC calls from local calls. Popular RPC frameworks include &lt;a href=&#34;https://developers.google.com/protocol-buffers/&#34;&gt;Protobuf&lt;/a&gt;, &lt;a href=&#34;https://thrift.apache.org/&#34;&gt;Thrift&lt;/a&gt;, and &lt;a href=&#34;https://avro.apache.org/docs/current/&#34;&gt;Avro&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;RPC is a request-response protocol:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Client program&lt;/strong&gt; - Calls the client stub procedure. The parameters are pushed onto the stack like a local procedure call.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Client stub procedure&lt;/strong&gt; - Marshals (packs) procedure id and arguments into a request message.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Client communication module&lt;/strong&gt; - OS sends the message from the client to the server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Server communication module&lt;/strong&gt; - OS passes the incoming packets to the server stub procedure.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Server stub procedure&lt;/strong&gt; - Unmarshalls the results, calls the server procedure matching the procedure id and passes the given arguments.&lt;/li&gt; &#xA; &lt;li&gt;The server response repeats the steps above in reverse order.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sample RPC calls:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;GET /someoperation?data=anId&#xA;&#xA;POST /anotheroperation&#xA;{&#xA;  &#34;data&#34;:&#34;anId&#34;;&#xA;  &#34;anotherdata&#34;: &#34;another value&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;RPC is focused on exposing behaviors. RPCs are often used for performance reasons with internal communications, as you can hand-craft native calls to better fit your use cases.&lt;/p&gt; &#xA;&lt;p&gt;Choose a native library (aka SDK) when:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You know your target platform.&lt;/li&gt; &#xA; &lt;li&gt;You want to control how your &#34;logic&#34; is accessed.&lt;/li&gt; &#xA; &lt;li&gt;You want to control how error control happens off your library.&lt;/li&gt; &#xA; &lt;li&gt;Performance and end user experience is your primary concern.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;HTTP APIs following &lt;strong&gt;REST&lt;/strong&gt; tend to be used more often for public APIs.&lt;/p&gt; &#xA;&lt;h4&gt;Disadvantage(s): RPC&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RPC clients become tightly coupled to the service implementation.&lt;/li&gt; &#xA; &lt;li&gt;A new API must be defined for every new operation or use case.&lt;/li&gt; &#xA; &lt;li&gt;It can be difficult to debug RPC.&lt;/li&gt; &#xA; &lt;li&gt;You might not be able to leverage existing technologies out of the box. For example, it might require additional effort to ensure &lt;a href=&#34;http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/&#34;&gt;RPC calls are properly cached&lt;/a&gt; on caching servers such as &lt;a href=&#34;http://www.squid-cache.org/&#34;&gt;Squid&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Representational state transfer (REST)&lt;/h3&gt; &#xA;&lt;p&gt;REST is an architectural style enforcing a client/server model where the client acts on a set of resources managed by the server. The server provides a representation of resources and actions that can either manipulate or get a new representation of resources. All communication must be stateless and cacheable.&lt;/p&gt; &#xA;&lt;p&gt;There are four qualities of a RESTful interface:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Identify resources (URI in HTTP)&lt;/strong&gt; - use the same URI regardless of any operation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Change with representations (Verbs in HTTP)&lt;/strong&gt; - use verbs, headers, and body.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Self-descriptive error message (status response in HTTP)&lt;/strong&gt; - Use status codes, don&#39;t reinvent the wheel.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;http://restcookbook.com/Basics/hateoas/&#34;&gt;HATEOAS&lt;/a&gt; (HTML interface for HTTP)&lt;/strong&gt; - your web service should be fully accessible in a browser.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sample REST calls:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;GET /someresources/anId&#xA;&#xA;PUT /someresources/anId&#xA;{&#34;anotherdata&#34;: &#34;another value&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;REST is focused on exposing data. It minimizes the coupling between client/server and is often used for public HTTP APIs. REST uses a more generic and uniform method of exposing resources through URIs, &lt;a href=&#34;https://github.com/for-GET/know-your-http-well/raw/master/headers.md&#34;&gt;representation through headers&lt;/a&gt;, and actions through verbs such as GET, POST, PUT, DELETE, and PATCH. Being stateless, REST is great for horizontal scaling and partitioning.&lt;/p&gt; &#xA;&lt;h4&gt;Disadvantage(s): REST&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;With REST being focused on exposing data, it might not be a good fit if resources are not naturally organized or accessed in a simple hierarchy. For example, returning all updated records from the past hour matching a particular set of events is not easily expressed as a path. With REST, it is likely to be implemented with a combination of URI path, query parameters, and possibly the request body.&lt;/li&gt; &#xA; &lt;li&gt;REST typically relies on a few verbs (GET, POST, PUT, DELETE, and PATCH) which sometimes doesn&#39;t fit your use case. For example, moving expired documents to the archive folder might not cleanly fit within these verbs.&lt;/li&gt; &#xA; &lt;li&gt;Fetching complicated resources with nested hierarchies requires multiple round trips between the client and server to render single views, e.g. fetching content of a blog entry and the comments on that entry. For mobile applications operating in variable network conditions, these multiple roundtrips are highly undesirable.&lt;/li&gt; &#xA; &lt;li&gt;Over time, more fields might be added to an API response and older clients will receive all new data fields, even those that they do not need, as a result, it bloats the payload size and leads to larger latencies.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;RPC and REST calls comparison&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Operation&lt;/th&gt; &#xA;   &lt;th&gt;RPC&lt;/th&gt; &#xA;   &lt;th&gt;REST&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Signup&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /signup&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /persons&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Resign&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /resign&lt;br&gt;{&lt;br&gt;&#34;personid&#34;: &#34;1234&#34;&lt;br&gt;}&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DELETE&lt;/strong&gt; /persons/1234&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Read a person&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GET&lt;/strong&gt; /readPerson?personid=1234&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GET&lt;/strong&gt; /persons/1234&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Read a person’s items list&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GET&lt;/strong&gt; /readUsersItemsList?personid=1234&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GET&lt;/strong&gt; /persons/1234/items&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add an item to a person’s items&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /addItemToUsersItemsList&lt;br&gt;{&lt;br&gt;&#34;personid&#34;: &#34;1234&#34;;&lt;br&gt;&#34;itemid&#34;: &#34;456&#34;&lt;br&gt;}&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /persons/1234/items&lt;br&gt;{&lt;br&gt;&#34;itemid&#34;: &#34;456&#34;&lt;br&gt;}&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Update an item&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /modifyItem&lt;br&gt;{&lt;br&gt;&#34;itemid&#34;: &#34;456&#34;;&lt;br&gt;&#34;key&#34;: &#34;value&#34;&lt;br&gt;}&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PUT&lt;/strong&gt; /items/456&lt;br&gt;{&lt;br&gt;&#34;key&#34;: &#34;value&#34;&lt;br&gt;}&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Delete an item&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /removeItem&lt;br&gt;{&lt;br&gt;&#34;itemid&#34;: &#34;456&#34;&lt;br&gt;}&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DELETE&lt;/strong&gt; /items/456&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;i&gt;&lt;a href=&#34;https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/&#34;&gt;Source: Do you really know why you prefer REST over RPC&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;h4&gt;Source(s) and further reading: REST and RPC&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/&#34;&gt;Do you really know why you prefer REST over RPC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://programmers.stackexchange.com/a/181186&#34;&gt;When are RPC-ish approaches more appropriate than REST?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/15056878/rest-vs-json-rpc&#34;&gt;REST vs JSON-RPC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/&#34;&gt;Debunking the myths of RPC and REST&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs&#34;&gt;What are the drawbacks of using REST&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview&#34;&gt;Crack the system design interview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.facebook.com/posts/1468950976659943/&#34;&gt;Thrift&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://arstechnica.com/civis/viewtopic.php?t=1190508&#34;&gt;Why REST for internal use and not RPC&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;This section could use some updates. Consider &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contributing&#34;&gt;contributing&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Security is a broad topic. Unless you have considerable experience, a security background, or are applying for a position that requires knowledge of security, you probably won&#39;t need to know more than the basics:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Encrypt in transit and at rest.&lt;/li&gt; &#xA; &lt;li&gt;Sanitize all user inputs or any input parameters exposed to user to prevent &lt;a href=&#34;https://en.wikipedia.org/wiki/Cross-site_scripting&#34;&gt;XSS&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/SQL_injection&#34;&gt;SQL injection&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Use parameterized queries to prevent SQL injection.&lt;/li&gt; &#xA; &lt;li&gt;Use the principle of &lt;a href=&#34;https://en.wikipedia.org/wiki/Principle_of_least_privilege&#34;&gt;least privilege&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shieldfy/API-Security-Checklist&#34;&gt;API security checklist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FallibleInc/security-guide-for-developers&#34;&gt;Security guide for developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet&#34;&gt;OWASP top ten&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Appendix&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll sometimes be asked to do &#39;back-of-the-envelope&#39; estimates. For example, you might need to determine how long it will take to generate 100 image thumbnails from disk or how much memory a data structure will take. The &lt;strong&gt;Powers of two table&lt;/strong&gt; and &lt;strong&gt;Latency numbers every programmer should know&lt;/strong&gt; are handy references.&lt;/p&gt; &#xA;&lt;h3&gt;Powers of two table&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Power           Exact Value         Approx Value        Bytes&#xA;---------------------------------------------------------------&#xA;7                             128&#xA;8                             256&#xA;10                           1024   1 thousand           1 KB&#xA;16                         65,536                       64 KB&#xA;20                      1,048,576   1 million            1 MB&#xA;30                  1,073,741,824   1 billion            1 GB&#xA;32                  4,294,967,296                        4 GB&#xA;40              1,099,511,627,776   1 trillion           1 TB&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Source(s) and further reading&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Power_of_two&#34;&gt;Powers of two&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Latency numbers every programmer should know&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Latency Comparison Numbers&#xA;--------------------------&#xA;L1 cache reference                           0.5 ns&#xA;Branch mispredict                            5   ns&#xA;L2 cache reference                           7   ns                      14x L1 cache&#xA;Mutex lock/unlock                           25   ns&#xA;Main memory reference                      100   ns                      20x L2 cache, 200x L1 cache&#xA;Compress 1K bytes with Zippy            10,000   ns       10 us&#xA;Send 1 KB bytes over 1 Gbps network     10,000   ns       10 us&#xA;Read 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD&#xA;Read 1 MB sequentially from memory     250,000   ns      250 us&#xA;Round trip within same datacenter      500,000   ns      500 us&#xA;Read 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory&#xA;HDD seek                            10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip&#xA;Read 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD&#xA;Read 1 MB sequentially from HDD     30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD&#xA;Send packet CA-&amp;gt;Netherlands-&amp;gt;CA    150,000,000   ns  150,000 us  150 ms&#xA;&#xA;Notes&#xA;-----&#xA;1 ns = 10^-9 seconds&#xA;1 us = 10^-6 seconds = 1,000 ns&#xA;1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Handy metrics based on numbers above:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read sequentially from HDD at 30 MB/s&lt;/li&gt; &#xA; &lt;li&gt;Read sequentially from 1 Gbps Ethernet at 100 MB/s&lt;/li&gt; &#xA; &lt;li&gt;Read sequentially from SSD at 1 GB/s&lt;/li&gt; &#xA; &lt;li&gt;Read sequentially from main memory at 4 GB/s&lt;/li&gt; &#xA; &lt;li&gt;6-7 world-wide round trips per second&lt;/li&gt; &#xA; &lt;li&gt;2,000 round trips per second within a data center&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Latency numbers visualized&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Source(s) and further reading&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/jboner/2841832&#34;&gt;Latency numbers every programmer should know - 1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/hellerbarde/2843375&#34;&gt;Latency numbers every programmer should know - 2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf&#34;&gt;Designs, lessons, and advice from building large distributed systems&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf&#34;&gt;Software Engineering Advice from Building Large-Scale Distributed Systems&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Additional system design interview questions&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Common system design interview questions, with links to resources on how to solve each.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Question&lt;/th&gt; &#xA;   &lt;th&gt;Reference(s)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a file sync service like Dropbox&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=PE4gwstWhmc&#34;&gt;youtube.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a search engine like Google&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://queue.acm.org/detail.cfm?id=988407&#34;&gt;queue.acm.org&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search&#34;&gt;stackexchange.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://www.ardendertat.com/2012/01/11/implementing-search-engines/&#34;&gt;ardendertat.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://infolab.stanford.edu/~backrub/google.html&#34;&gt;stanford.edu&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a scalable web crawler like Google&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch&#34;&gt;quora.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design Google docs&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://code.google.com/p/google-mobwrite/&#34;&gt;code.google.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://neil.fraser.name/writing/sync/&#34;&gt;neil.fraser.name&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a key-value store like Redis&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/dvirsky/introduction-to-redis&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a cache system like Memcached&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/oemebamo/introduction-to-memcached&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a recommendation system like Amazon&#39;s&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://web.archive.org/web/20170406065247/http://tech.hulu.com/blog/2011/09/19/recommendation-system.html&#34;&gt;hulu.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://ijcai13.org/files/tutorial_slides/td3.pdf&#34;&gt;ijcai13.org&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a tinyurl system like Bitly&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://n00tc0d3r.blogspot.com/&#34;&gt;n00tc0d3r.blogspot.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a chat app like WhatsApp&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html&#34;&gt;highscalability.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a picture sharing system like Instagram&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/flickr-architecture&#34;&gt;highscalability.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html&#34;&gt;highscalability.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design the Facebook news feed function&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed&#34;&gt;quora.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed&#34;&gt;quora.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design the Facebook timeline function&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.facebook.com/note.php?note_id=10150468255628920&#34;&gt;facebook.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html&#34;&gt;highscalability.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design the Facebook chat function&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf&#34;&gt;erlang-factory.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.facebook.com/note.php?note_id=14218138919&amp;amp;id=9445547199&amp;amp;index=0&#34;&gt;facebook.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a graph search function like Facebook&#39;s&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920&#34;&gt;facebook.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920&#34;&gt;facebook.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920&#34;&gt;facebook.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a content delivery network like CloudFlare&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://figshare.com/articles/Globally_distributed_content_delivery/6605972&#34;&gt;figshare.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a trending topic system like Twitter&#39;s&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/&#34;&gt;michael-noll.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/&#34;&gt;snikolov .wordpress.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a random ID generation system&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://blog.twitter.com/2010/announcing-snowflake&#34;&gt;blog.twitter.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/twitter/snowflake/&#34;&gt;github.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Return the top k requests during a time interval&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.cs.ucsb.edu/sites/cs.ucsb.edu/files/docs/reports/2005-23.pdf&#34;&gt;cs.ucsb.edu&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf&#34;&gt;wpi.edu&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a system that serves data from multiple data centers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html&#34;&gt;highscalability.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design an online multiplayer card game&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://web.archive.org/web/20180929181117/http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html&#34;&gt;indieflashblog.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://buildnewgames.com/real-time-multiplayer/&#34;&gt;buildnewgames.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a garbage collection system&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/&#34;&gt;stuffwithstuff.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf&#34;&gt;washington.edu&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design an API rate limiter&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://stripe.com/blog/rate-limiters&#34;&gt;https://stripe.com/blog/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a Stock Exchange (like NASDAQ or Binance)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://youtu.be/b1e4t2k2KJY&#34;&gt;Jane Street&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://around25.com/blog/building-a-trading-engine-for-a-crypto-exchange/&#34;&gt;Golang Implementation&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://bhomnick.net/building-a-simple-limit-order-in-go/&#34;&gt;Go Implementation&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add a system design question&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contributing&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Real world architectures&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Articles on how real world systems are designed.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/TcUo2fw.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;https://www.infoq.com/presentations/Twitter-Timeline-Scalability&#34;&gt;Source: Twitter timelines at scale&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Don&#39;t focus on nitty gritty details for the following articles, instead:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Identify shared principles, common technologies, and patterns within these articles&lt;/li&gt; &#xA; &lt;li&gt;Study what problems are solved by each component, where it works, where it doesn&#39;t&lt;/li&gt; &#xA; &lt;li&gt;Review the lessons learned&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;System&lt;/th&gt; &#xA;   &lt;th&gt;Reference(s)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data processing&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MapReduce&lt;/strong&gt; - Distributed data processing from Google&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf&#34;&gt;research.google.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data processing&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Spark&lt;/strong&gt; - Distributed data processing from Databricks&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/AGrishchenko/apache-spark-architecture&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data processing&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Storm&lt;/strong&gt; - Distributed data processing from Twitter&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/previa/storm-16094009&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data store&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Bigtable&lt;/strong&gt; - Distributed column-oriented database from Google&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf&#34;&gt;harvard.edu&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data store&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;HBase&lt;/strong&gt; - Open source implementation of Bigtable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/alexbaranau/intro-to-hbase&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data store&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Cassandra&lt;/strong&gt; - Distributed column-oriented database from Facebook&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data store&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DynamoDB&lt;/strong&gt; - Document-oriented database from Amazon&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf&#34;&gt;harvard.edu&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data store&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MongoDB&lt;/strong&gt; - Document-oriented database&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/mdirolf/introduction-to-mongodb&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data store&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Spanner&lt;/strong&gt; - Globally-distributed database from Google&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://research.google.com/archive/spanner-osdi2012.pdf&#34;&gt;research.google.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data store&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Memcached&lt;/strong&gt; - Distributed memory caching system&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/oemebamo/introduction-to-memcached&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data store&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Redis&lt;/strong&gt; - Distributed memory caching system with persistence and value types&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/dvirsky/introduction-to-redis&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;File system&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Google File System (GFS)&lt;/strong&gt; - Distributed file system&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf&#34;&gt;research.google.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;File system&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Hadoop File System (HDFS)&lt;/strong&gt; - Open source implementation of GFS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html&#34;&gt;apache.org&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Misc&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Chubby&lt;/strong&gt; - Lock service for loosely-coupled distributed systems from Google&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf&#34;&gt;research.google.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Misc&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Dapper&lt;/strong&gt; - Distributed systems tracing infrastructure&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf&#34;&gt;research.google.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Misc&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Kafka&lt;/strong&gt; - Pub/sub message queue from LinkedIn&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/mumrah/kafka-talk-tri-hug&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Misc&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Zookeeper&lt;/strong&gt; - Centralized infrastructure and services enabling synchronization&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add an architecture&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contributing&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Company architectures&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Company&lt;/th&gt; &#xA;   &lt;th&gt;Reference(s)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Amazon&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/amazon-architecture&#34;&gt;Amazon architecture&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cinchcast&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html&#34;&gt;Producing 1,500 hours of audio every day&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DataSift&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html&#34;&gt;Realtime datamining At 120,000 tweets per second&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dropbox&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=PE4gwstWhmc&#34;&gt;How we&#39;ve scaled Dropbox&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ESPN&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html&#34;&gt;Operating At 100,000 duh nuh nuhs per second&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Google&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/google-architecture&#34;&gt;Google architecture&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Instagram&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html&#34;&gt;14 million users, terabytes of photos&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances&#34;&gt;What powers Instagram&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Justin.tv&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html&#34;&gt;Justin.Tv&#39;s live video broadcasting architecture&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Facebook&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf&#34;&gt;Scaling memcached at Facebook&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf&#34;&gt;TAO: Facebook’s distributed data store for the social graph&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf&#34;&gt;Facebook’s photo storage&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/blog/2016/6/27/how-facebook-live-streams-to-800000-simultaneous-viewers.html&#34;&gt;How Facebook Live Streams To 800,000 Simultaneous Viewers&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Flickr&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/flickr-architecture&#34;&gt;Flickr architecture&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mailbox&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html&#34;&gt;From 0 to one million users in 6 weeks&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Netflix&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html&#34;&gt;A 360 Degree View Of The Entire Netflix Stack&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/blog/2017/12/11/netflix-what-happens-when-you-press-play.html&#34;&gt;Netflix: What Happens When You Press Play?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Pinterest&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html&#34;&gt;From 0 To 10s of billions of page views a month&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html&#34;&gt;18 million visitors, 10x growth, 12 employees&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Playfish&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html&#34;&gt;50 million monthly users and growing&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PlentyOfFish&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/plentyoffish-architecture&#34;&gt;PlentyOfFish architecture&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Salesforce&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html&#34;&gt;How they handle 1.3 billion transactions a day&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Stack Overflow&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html&#34;&gt;Stack Overflow architecture&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TripAdvisor&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html&#34;&gt;40M visitors, 200M dynamic page views, 30TB data&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tumblr&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html&#34;&gt;15 billion page views a month&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Twitter&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster&#34;&gt;Making Twitter 10000 percent faster&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html&#34;&gt;Storing 250 million tweets a day using MySQL&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html&#34;&gt;150M active users, 300K QPS, a 22 MB/S firehose&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.infoq.com/presentations/Twitter-Timeline-Scalability&#34;&gt;Timelines at scale&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5cKTP36HVgI&#34;&gt;Big and small data at Twitter&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=z8LU0Cj6BOU&#34;&gt;Operations at Twitter: scaling beyond 100 million users&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/blog/2016/4/20/how-twitter-handles-3000-images-per-second.html&#34;&gt;How Twitter Handles 3,000 Images Per Second&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Uber&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html&#34;&gt;How Uber scales their real-time market platform&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/blog/2016/10/12/lessons-learned-from-scaling-uber-to-2000-engineers-1000-ser.html&#34;&gt;Lessons Learned From Scaling Uber To 2000 Engineers, 1000 Services, And 8000 Git Repositories&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WhatsApp&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html&#34;&gt;The WhatsApp architecture Facebook bought for $19 billion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;YouTube&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=w5WVu624fY8&#34;&gt;YouTube scalability&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/youtube-architecture&#34;&gt;YouTube architecture&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Company engineering blogs&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Architectures for companies you are interviewing with.&lt;/p&gt; &#xA; &lt;p&gt;Questions you encounter might be from the same domain.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nerds.airbnb.com/&#34;&gt;Airbnb Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.atlassian.com/blog/&#34;&gt;Atlassian Developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/blogs/aws/&#34;&gt;AWS Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://word.bitly.com/&#34;&gt;Bitly Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.box.com/blog/category/engineering&#34;&gt;Box Blogs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://blog.cloudera.com/&#34;&gt;Cloudera Developer Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tech.dropbox.com/&#34;&gt;Dropbox Tech Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.quora.com/q/quoraengineering&#34;&gt;Engineering at Quora&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.ebaytechblog.com/&#34;&gt;Ebay Tech Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.evernote.com/tech/&#34;&gt;Evernote Tech Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://codeascraft.com/&#34;&gt;Etsy Code as Craft&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/Engineering&#34;&gt;Facebook Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://code.flickr.net/&#34;&gt;Flickr Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://engineering.foursquare.com/&#34;&gt;Foursquare Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.blog/category/engineering&#34;&gt;GitHub Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://googleresearch.blogspot.com/&#34;&gt;Google Research Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://engineering.groupon.com/&#34;&gt;Groupon Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://engineering.heroku.com/&#34;&gt;Heroku Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://product.hubspot.com/blog/topic/engineering&#34;&gt;Hubspot Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://highscalability.com/&#34;&gt;High Scalability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://instagram-engineering.tumblr.com/&#34;&gt;Instagram Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://software.intel.com/en-us/blogs/&#34;&gt;Intel Software Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blogs.janestreet.com/category/ocaml/&#34;&gt;Jane Street Tech Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://engineering.linkedin.com/blog&#34;&gt;LinkedIn Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://engineering.microsoft.com/&#34;&gt;Microsoft Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/pythonengineering/&#34;&gt;Microsoft Python Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://techblog.netflix.com/&#34;&gt;Netflix Tech Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/paypal-engineering&#34;&gt;Paypal Developer Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@Pinterest_Engineering&#34;&gt;Pinterest Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.redditblog.com/&#34;&gt;Reddit Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.salesforce.com/blogs/engineering/&#34;&gt;Salesforce Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://slack.engineering/&#34;&gt;Slack Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://labs.spotify.com/&#34;&gt;Spotify Labs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.twilio.com/engineering&#34;&gt;Twilio Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.twitter.com/engineering/&#34;&gt;Twitter Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://eng.uber.com/&#34;&gt;Uber Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://yahooeng.tumblr.com/&#34;&gt;Yahoo Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://engineeringblog.yelp.com/&#34;&gt;Yelp Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zynga.com/blogs/engineering&#34;&gt;Zynga Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Source(s) and further reading&lt;/h4&gt; &#xA;&lt;p&gt;Looking to add a blog? To avoid duplicating work, consider adding your company blog to the following repo:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kilimchoi/engineering-blogs&#34;&gt;kilimchoi/engineering-blogs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Under development&lt;/h2&gt; &#xA;&lt;p&gt;Interested in adding a section or helping complete one in-progress? &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contributing&#34;&gt;Contribute&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Distributed computing with MapReduce&lt;/li&gt; &#xA; &lt;li&gt;Consistent hashing&lt;/li&gt; &#xA; &lt;li&gt;Scatter gather&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contributing&#34;&gt;Contribute&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Credits and sources are provided throughout this repo.&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.hiredintech.com/system-design/the-system-design-process/&#34;&gt;Hired in tech&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/dp/0984782850/&#34;&gt;Cracking the coding interview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://highscalability.com/&#34;&gt;High scalability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/checkcheckzz/system-design-interview&#34;&gt;checkcheckzz/system-design-interview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shashank88/system_design&#34;&gt;shashank88/system_design&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mmcgrana/services-engineering&#34;&gt;mmcgrana/services-engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/vasanthk/485d1c25737e8e72759f&#34;&gt;System design cheat sheet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://dancres.github.io/Pages/&#34;&gt;A distributed systems reading list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview&#34;&gt;Cracking the system design interview&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact info&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to contact me to discuss any issues, questions, or comments.&lt;/p&gt; &#xA;&lt;p&gt;My contact info can be found on my &lt;a href=&#34;https://github.com/donnemartin&#34;&gt;GitHub page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;I am providing code and resources in this repository to you under an open source license. Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2017 Donne Martin&#xA;&#xA;Creative Commons Attribution 4.0 International License (CC BY 4.0)&#xA;&#xA;http://creativecommons.org/licenses/by/4.0/&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>p1ngul1n0/blackbird</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/p1ngul1n0/blackbird</id>
    <link href="https://github.com/p1ngul1n0/blackbird" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An OSINT tool to search for accounts by username in 73 social networks.&lt;/p&gt;&lt;hr&gt;&lt;img alt=&#34;blackbird-logo&#34; align=&#34;left&#34; width=&#34;300&#34; height=&#34;300&#34; src=&#34;https://github.com/p1ngul1n0/badges/raw/main/badges/20.png&#34;&gt; &#xA;&lt;h1&gt;Blackbird&lt;/h1&gt; &#xA;&lt;h3&gt;An OSINT tool to search fast for accounts by username across 73 sites.&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The Lockheed SR-71 &#34;Blackbird&#34; is a long-range, high-altitude, Mach 3+ strategic reconnaissance aircraft developed and manufactured by the American aerospace company Lockheed Corporation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;This or previous program is for Educational purpose ONLY. Do not use it without permission. &#xA;The usual disclaimer applies, especially the fact that me (P1ngul1n0) is not liable for any &#xA;damages caused by direct or indirect use of the information or functionality provided by these &#xA;programs. The author or any Internet provider bears NO responsibility for content or misuse &#xA;of these programs or any derivatives thereof. By using these programs you accept the fact &#xA;that any damage (dataloss, system crash, system compromise, etc.) caused by the use of these &#xA;programs is not P1ngul1n0&#39;s responsibility.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img alt=&#34;blackbird-web&#34; align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/p1ngul1n0/src/master/blackbird_web.png&#34;&gt; &#xA;&lt;img alt=&#34;blackbird-cli&#34; align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/p1ngul1n0/src/master/blackbird_printscreen.png&#34;&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;h4&gt;Clone the repository&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/p1ngul1n0/blackbird&#xA;cd blackbird&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Install requirements&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h4&gt;Search by username&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python blackbird.py -u username&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Run WebServer&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python blackbird.py --web&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Access &lt;a href=&#34;http://127.0.0.1:5000/&#34;&gt;http://127.0.0.1:5000&lt;/a&gt; on the browser&lt;/p&gt; &#xA;&lt;h4&gt;Read results file&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python blackbird.py -f username.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;List supportted sites&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python blackbird.py --list-sites&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported Social Networks &lt;a name=&#34;social-networks&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/73--red&#34; alt=&#34;&#34;&gt;&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Facebook&lt;/li&gt; &#xA;  &lt;li&gt;YouTube&lt;/li&gt; &#xA;  &lt;li&gt;Twitter&lt;/li&gt; &#xA;  &lt;li&gt;Telegram&lt;/li&gt; &#xA;  &lt;li&gt;TikTok&lt;/li&gt; &#xA;  &lt;li&gt;Tinder&lt;/li&gt; &#xA;  &lt;li&gt;Instagram&lt;/li&gt; &#xA;  &lt;li&gt;Pinterest&lt;/li&gt; &#xA;  &lt;li&gt;Snapchat&lt;/li&gt; &#xA;  &lt;li&gt;Reddit&lt;/li&gt; &#xA;  &lt;li&gt;Soundcloud&lt;/li&gt; &#xA;  &lt;li&gt;Github&lt;/li&gt; &#xA;  &lt;li&gt;Steam&lt;/li&gt; &#xA;  &lt;li&gt;Linktree&lt;/li&gt; &#xA;  &lt;li&gt;Xbox Gamertag&lt;/li&gt; &#xA;  &lt;li&gt;Twitter Archived&lt;/li&gt; &#xA;  &lt;li&gt;Xvideos&lt;/li&gt; &#xA;  &lt;li&gt;PornHub&lt;/li&gt; &#xA;  &lt;li&gt;Xhamster&lt;/li&gt; &#xA;  &lt;li&gt;Periscope&lt;/li&gt; &#xA;  &lt;li&gt;Ask FM&lt;/li&gt; &#xA;  &lt;li&gt;Vimeo&lt;/li&gt; &#xA;  &lt;li&gt;Twitch&lt;/li&gt; &#xA;  &lt;li&gt;Pastebin&lt;/li&gt; &#xA;  &lt;li&gt;WordPress Profile&lt;/li&gt; &#xA;  &lt;li&gt;WordPress Site&lt;/li&gt; &#xA;  &lt;li&gt;AllMyLinks&lt;/li&gt; &#xA;  &lt;li&gt;Buzzfeed&lt;/li&gt; &#xA;  &lt;li&gt;Jsiddle&lt;/li&gt; &#xA;  &lt;li&gt;Sourceforge&lt;/li&gt; &#xA;  &lt;li&gt;Kickstarter&lt;/li&gt; &#xA;  &lt;li&gt;Smule&lt;/li&gt; &#xA;  &lt;li&gt;Blogspot&lt;/li&gt; &#xA;  &lt;li&gt;Tradingview&lt;/li&gt; &#xA;  &lt;li&gt;Internet Archive&lt;/li&gt; &#xA;  &lt;li&gt;Alura&lt;/li&gt; &#xA;  &lt;li&gt;Behance&lt;/li&gt; &#xA;  &lt;li&gt;MySpace&lt;/li&gt; &#xA;  &lt;li&gt;Disqus&lt;/li&gt; &#xA;  &lt;li&gt;Slideshare&lt;/li&gt; &#xA;  &lt;li&gt;Rumble&lt;/li&gt; &#xA;  &lt;li&gt;Ebay&lt;/li&gt; &#xA;  &lt;li&gt;RedBubble&lt;/li&gt; &#xA;  &lt;li&gt;Kik&lt;/li&gt; &#xA;  &lt;li&gt;Roblox&lt;/li&gt; &#xA;  &lt;li&gt;Armor Games&lt;/li&gt; &#xA;  &lt;li&gt;Fortnite Tracker&lt;/li&gt; &#xA;  &lt;li&gt;Duolingo&lt;/li&gt; &#xA;  &lt;li&gt;Chess&lt;/li&gt; &#xA;  &lt;li&gt;Shopify&lt;/li&gt; &#xA;  &lt;li&gt;Untappd&lt;/li&gt; &#xA;  &lt;li&gt;Last FM&lt;/li&gt; &#xA;  &lt;li&gt;Cash APP&lt;/li&gt; &#xA;  &lt;li&gt;Imgur&lt;/li&gt; &#xA;  &lt;li&gt;Trello&lt;/li&gt; &#xA;  &lt;li&gt;MCUUID Minecraft&lt;/li&gt; &#xA;  &lt;li&gt;Patreon&lt;/li&gt; &#xA;  &lt;li&gt;DockerHub&lt;/li&gt; &#xA;  &lt;li&gt;Kongregate&lt;/li&gt; &#xA;  &lt;li&gt;Vine&lt;/li&gt; &#xA;  &lt;li&gt;Gamespot&lt;/li&gt; &#xA;  &lt;li&gt;Shutterstock&lt;/li&gt; &#xA;  &lt;li&gt;Chaturbate&lt;/li&gt; &#xA;  &lt;li&gt;ProtonMail&lt;/li&gt; &#xA;  &lt;li&gt;TripAdvisor&lt;/li&gt; &#xA;  &lt;li&gt;RapidAPI&lt;/li&gt; &#xA;  &lt;li&gt;HackTheBox&lt;/li&gt; &#xA;  &lt;li&gt;Wikipedia&lt;/li&gt; &#xA;  &lt;li&gt;Buymeacoffe&lt;/li&gt; &#xA;  &lt;li&gt;Arduino&lt;/li&gt; &#xA;  &lt;li&gt;League of Legend Tracker&lt;/li&gt; &#xA;  &lt;li&gt;Lego Ideas&lt;/li&gt; &#xA;  &lt;li&gt;Fiverr&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Supersonic speed &lt;span&gt;🚀&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Blackbird sends async HTTP requests, allowing a lot more speed when discovering user accounts.&lt;/p&gt; &#xA;&lt;h2&gt;Suggestions&lt;/h2&gt; &#xA;&lt;p&gt;If you have any suggestion of a site to be included in the search, feel free to contact me on &lt;a href=&#34;https://twitter.com/p1ngul1n0&#34;&gt;Twitter&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>searx/searx</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/searx/searx</id>
    <link href="https://github.com/searx/searx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Privacy-respecting metasearch engine&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. SPDX-License-Identifier: AGPL-3.0-or-later&lt;/p&gt; &#xA;&lt;p&gt;.. figure:: &lt;a href=&#34;https://raw.githubusercontent.com/searx/searx/master/searx/static/themes/oscar/img/logo_searx_a.png&#34;&gt;https://raw.githubusercontent.com/searx/searx/master/searx/static/themes/oscar/img/logo_searx_a.png&lt;/a&gt; :target: &lt;a href=&#34;https://searx.github.io/searx/&#34;&gt;https://searx.github.io/searx/&lt;/a&gt; :alt: searX :width: 100% :align: center&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;|searx install| |searx homepage| |searx wiki| |AGPL License| |Issues| |commits| |OpenCollective searx backers| |OpenCollective searx sponsors|&lt;/p&gt; &#xA;&lt;p&gt;Privacy-respecting, hackable &lt;code&gt;metasearch engine&lt;/code&gt;_ / &lt;em&gt;pronunciation&lt;/em&gt; &lt;strong&gt;sɜːks&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;.. _metasearch engine: &lt;a href=&#34;https://en.wikipedia.org/wiki/Metasearch_engine&#34;&gt;https://en.wikipedia.org/wiki/Metasearch_engine&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |searx install| image:: &lt;a href=&#34;https://img.shields.io/badge/-install-blue&#34;&gt;https://img.shields.io/badge/-install-blue&lt;/a&gt; :target: &lt;a href=&#34;https://searx.github.io/searx/admin/installation.html&#34;&gt;https://searx.github.io/searx/admin/installation.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |searx homepage| image:: &lt;a href=&#34;https://img.shields.io/badge/-homepage-blue&#34;&gt;https://img.shields.io/badge/-homepage-blue&lt;/a&gt; :target: &lt;a href=&#34;https://searx.github.io/searx&#34;&gt;https://searx.github.io/searx&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |searx wiki| image:: &lt;a href=&#34;https://img.shields.io/badge/-wiki-blue&#34;&gt;https://img.shields.io/badge/-wiki-blue&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/searx/searx/wiki&#34;&gt;https://github.com/searx/searx/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |AGPL License| image:: &lt;a href=&#34;https://img.shields.io/badge/license-AGPL-blue.svg&#34;&gt;https://img.shields.io/badge/license-AGPL-blue.svg&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/searx/searx/raw/master/LICENSE&#34;&gt;https://github.com/searx/searx/blob/master/LICENSE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |Issues| image:: &lt;a href=&#34;https://img.shields.io/github/issues/searx/searx?color=yellow&amp;amp;label=issues&#34;&gt;https://img.shields.io/github/issues/searx/searx?color=yellow&amp;amp;label=issues&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/searx/searx/issues&#34;&gt;https://github.com/searx/searx/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |PR| image:: &lt;a href=&#34;https://img.shields.io/github/issues-pr-raw/searx/searx?color=yellow&amp;amp;label=PR&#34;&gt;https://img.shields.io/github/issues-pr-raw/searx/searx?color=yellow&amp;amp;label=PR&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/searx/searx/pulls&#34;&gt;https://github.com/searx/searx/pulls&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |commits| image:: &lt;a href=&#34;https://img.shields.io/github/commit-activity/y/searx/searx?color=yellow&amp;amp;label=commits&#34;&gt;https://img.shields.io/github/commit-activity/y/searx/searx?color=yellow&amp;amp;label=commits&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/searx/searx/commits/master&#34;&gt;https://github.com/searx/searx/commits/master&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |OpenCollective searx backers| image:: &lt;a href=&#34;https://opencollective.com/searx/backers/badge.svg&#34;&gt;https://opencollective.com/searx/backers/badge.svg&lt;/a&gt; :target: &lt;a href=&#34;https://opencollective.com/searx#backer&#34;&gt;https://opencollective.com/searx#backer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |OpenCollective searx sponsors| image:: &lt;a href=&#34;https://opencollective.com/searx/sponsors/badge.svg&#34;&gt;https://opencollective.com/searx/sponsors/badge.svg&lt;/a&gt; :target: &lt;a href=&#34;https://opencollective.com/searx#sponsor&#34;&gt;https://opencollective.com/searx#sponsor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for running instances, ready to use, then visit searx.space_.&lt;/p&gt; &#xA;&lt;p&gt;Otherwise jump to the user_, admin_ and developer_ handbooks you will find on our homepage_.&lt;/p&gt; &#xA;&lt;p&gt;.. _searx.space: &lt;a href=&#34;https://searx.space&#34;&gt;https://searx.space&lt;/a&gt; .. _user: &lt;a href=&#34;https://searx.github.io/searx/user&#34;&gt;https://searx.github.io/searx/user&lt;/a&gt; .. _admin: &lt;a href=&#34;https://searx.github.io/searx/admin&#34;&gt;https://searx.github.io/searx/admin&lt;/a&gt; .. _developer: &lt;a href=&#34;https://searx.github.io/searx/dev&#34;&gt;https://searx.github.io/searx/dev&lt;/a&gt; .. _homepage: &lt;a href=&#34;https://searx.github.io/searx&#34;&gt;https://searx.github.io/searx&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;contact: openhub_ // twitter_ // IRC: #searx @ Libera (irc.libera.chat)&lt;/p&gt; &#xA;&lt;p&gt;.. _openhub: &lt;a href=&#34;https://www.openhub.net/p/searx&#34;&gt;https://www.openhub.net/p/searx&lt;/a&gt; .. _twitter: &lt;a href=&#34;https://twitter.com/Searx_engine&#34;&gt;https://twitter.com/Searx_engine&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;|gluten free|&lt;/p&gt; &#xA;&lt;p&gt;.. |gluten free| image:: &lt;a href=&#34;https://forthebadge.com/images/featured/featured-gluten-free.svg&#34;&gt;https://forthebadge.com/images/featured/featured-gluten-free.svg&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>borisdayma/dalle-mini</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/borisdayma/dalle-mini</id>
    <link href="https://github.com/borisdayma/dalle-mini" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DALL·E Mini - Generate images from a text prompt&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;h2&gt;title: DALL·E mini emoji: 🥑 colorFrom: yellow colorTo: green sdk: gradio sdk_version: 3.0.3 app_file: app/gradio/app.py pinned: True license: apache-2.0&lt;/h2&gt; &#xA;&lt;h1&gt;DALL·E Mini&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/xBPBXfcFHd&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/823813159592001537?color=5865F2&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Join us on Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Generate images from a text prompt&lt;/em&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/borisdayma/dalle-mini/raw/main/img/logo.png&#34; width=&#34;200&#34;&gt; &#xA;&lt;p&gt;Our logo was generated with DALL·E mini using the prompt &#34;logo of an armchair in the shape of an avocado&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;How to use it?&lt;/h2&gt; &#xA;&lt;p&gt;There are several ways to use DALL·E mini to create your own images:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;use &lt;a href=&#34;https://huggingface.co/spaces/dalle-mini/dalle-mini&#34;&gt;the official DALL·E Mini demo&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;experiment with the pipeline step by step through our &lt;a href=&#34;https://raw.githubusercontent.com/borisdayma/dalle-mini/main/tools/inference/inference_pipeline.ipynb&#34;&gt;&lt;code&gt;inference pipeline notebook&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/borisdayma/dalle-mini/blob/main/tools/inference/inference_pipeline.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;spin off your own app with &lt;a href=&#34;https://github.com/saharmor/dalle-playground&#34;&gt;DALL-E Playground repository&lt;/a&gt; (thanks &lt;a href=&#34;https://twitter.com/theaievangelist&#34;&gt;Sahar&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;try &lt;a href=&#34;https://github.com/jina-ai/dalle-flow&#34;&gt;DALL·E Flow&lt;/a&gt; project for generating, diffusion, upscaling in a Human-in-the-Loop workflow.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/jina-ai/dalle-flow/blob/main/client.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How does it work?&lt;/h2&gt; &#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://wandb.ai/dalle-mini/dalle-mini/reports/DALL-E-mini-Generate-images-from-any-text-prompt--VmlldzoyMDE4NDAy&#34;&gt;our report&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Join the community on the &lt;a href=&#34;https://discord.gg/xBPBXfcFHd&#34;&gt;LAION Discord&lt;/a&gt;. Any contribution is welcome, from reporting issues to proposing fixes/improvements or testing the model with cool prompts!&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Dependencies Installation&lt;/h3&gt; &#xA;&lt;p&gt;For inference only, use &lt;code&gt;pip install git+https://github.com/borisdayma/dalle-mini.git&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For development, clone the repo and use &lt;code&gt;pip install -e &#34;.[dev]&#34;&lt;/code&gt;. Before making a PR, check style with &lt;code&gt;make style&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Training of DALL·E mini&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://raw.githubusercontent.com/borisdayma/dalle-mini/main/tools/train/train.py&#34;&gt;&lt;code&gt;tools/train/train.py&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also adjust the &lt;a href=&#34;https://docs.wandb.ai/guides/sweeps&#34;&gt;sweep configuration file&lt;/a&gt; if you need to perform a hyperparameter search.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Where to find the latest models?&lt;/h3&gt; &#xA;&lt;p&gt;Trained models are on 🤗 Model Hub:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/dalle-mini/vqgan_imagenet_f16_16384&#34;&gt;VQGAN-f16-16384&lt;/a&gt; for encoding/decoding images&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/flax-community/dalle-mini&#34;&gt;DALL·E mini&lt;/a&gt; for generating images from a text prompt&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Where does the logo come from?&lt;/h3&gt; &#xA;&lt;p&gt;The &#34;armchair in the shape of an avocado&#34; was used by OpenAI when releasing DALL·E to illustrate the model&#39;s capabilities. Having successful predictions on this prompt represents a big milestone to us.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🤗 Hugging Face for organizing &lt;a href=&#34;https://github.com/huggingface/transformers/tree/master/examples/research_projects/jax-projects&#34;&gt;the FLAX/JAX community week&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Google &lt;a href=&#34;https://sites.research.google/trc/&#34;&gt;TPU Research Cloud (TRC) program&lt;/a&gt; for providing computing resources&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wandb.com/&#34;&gt;Weights &amp;amp; Biases&lt;/a&gt; for providing the infrastructure for experiment tracking and model management&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Authors &amp;amp; Contributors&lt;/h2&gt; &#xA;&lt;p&gt;DALL·E mini was initially developed by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/borisdayma&#34;&gt;Boris Dayma&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/patil-suraj&#34;&gt;Suraj Patil&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pcuenca&#34;&gt;Pedro Cuenca&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/khalidsaifullaah&#34;&gt;Khalid Saifullah&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tmabraham&#34;&gt;Tanishq Abraham&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lkhphuc&#34;&gt;Phúc Lê Khắc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lukemelas&#34;&gt;Luke Melas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ghosh-r&#34;&gt;Ritobrata Ghosh&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Many thanks to the people who helped make it better:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the &lt;a href=&#34;https://discord.gg/xBPBXfcFHd&#34;&gt;DALLE-Pytorch&lt;/a&gt; and &lt;a href=&#34;https://www.eleuther.ai/&#34;&gt;EleutherAI&lt;/a&gt; communities for testing and exchanging cool ideas&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rohan-anil&#34;&gt;Rohan Anil&lt;/a&gt; for adding Distributed Shampoo optimizer and always giving great suggestions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lucidrains&#34;&gt;Phil Wang&lt;/a&gt; has provided a lot of cool implementations of transformer variants and gives interesting insights with &lt;a href=&#34;https://github.com/lucidrains/x-transformers&#34;&gt;x-transformers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crowsonkb&#34;&gt;Katherine Crowson&lt;/a&gt; for &lt;a href=&#34;https://twitter.com/RiversHaveWings/status/1478093658716966912&#34;&gt;super conditioning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;the &lt;a href=&#34;https://gradio.app/&#34;&gt;Gradio team&lt;/a&gt; made an amazing UI for our app&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citing DALL·E mini&lt;/h2&gt; &#xA;&lt;p&gt;If you find DALL·E mini useful in your research or wish to refer, please use the following BibTeX entry.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{Dayma_DALL·E_Mini_2021,&#xA;      author = {Dayma, Boris and Patil, Suraj and Cuenca, Pedro and Saifullah, Khalid and Abraham, Tanishq and Lê Khắc, Phúc and Melas, Luke and Ghosh, Ritobrata},&#xA;      doi = {10.5281/zenodo.5146400},&#xA;      month = {7},&#xA;      title = {DALL·E Mini},&#xA;      url = {https://github.com/borisdayma/dalle-mini},&#xA;      year = {2021}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;p&gt;Original DALL·E from &#34;&lt;a href=&#34;https://arxiv.org/abs/2102.12092&#34;&gt;Zero-Shot Text-to-Image Generation&lt;/a&gt;&#34; with image quantization from &#34;&lt;a href=&#34;https://arxiv.org/abs/2103.00020&#34;&gt;Learning Transferable Visual Models From Natural Language Supervision&lt;/a&gt;&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Image encoder from &#34;&lt;a href=&#34;https://arxiv.org/abs/2012.09841v2&#34;&gt;Taming Transformers for High-Resolution Image Synthesis&lt;/a&gt;&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Sequence to sequence model based on &#34;&lt;a href=&#34;https://arxiv.org/abs/1910.13461v1&#34;&gt;BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension&lt;/a&gt;&#34; with implementation of a few variants:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;&lt;a href=&#34;https://arxiv.org/abs/2002.05202&#34;&gt;GLU Variants Improve Transformer&lt;/a&gt;&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;&lt;a href=&#34;https://arxiv.org/abs/2203.00555&#34;&gt;Deepnet: Scaling Transformers to 1,000 Layers&lt;/a&gt;&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;&lt;a href=&#34;https://arxiv.org/abs/2110.09456&#34;&gt;NormFormer: Improved Transformer Pretraining with Extra Normalization&lt;/a&gt;&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;&lt;a href=&#34;https://arxiv.org/abs/2103.14030&#34;&gt;Swin Transformer: Hierarchical Vision Transformer using Shifted Windows&lt;/a&gt;&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;&lt;a href=&#34;https://arxiv.org/abs/2105.13290v2&#34;&gt;CogView: Mastering Text-to-Image Generation via Transformers&lt;/a&gt;&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;&lt;a href=&#34;https://arxiv.org/abs/1910.07467&#34;&gt;Root Mean Square Layer Normalization&lt;/a&gt;&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;&lt;a href=&#34;https://arxiv.org/abs/2110.11773&#34;&gt;Sinkformers: Transformers with Doubly Stochastic Attention&lt;/a&gt;&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Main optimizer (Distributed Shampoo) from &#34;&lt;a href=&#34;https://arxiv.org/abs/2002.09018&#34;&gt;Scalable Second Order Optimization for Deep Learning&lt;/a&gt;&#34;.&lt;/p&gt; &#xA;&lt;h3&gt;Citations&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title={Zero-Shot Text-to-Image Generation}, &#xA;  author={Aditya Ramesh and Mikhail Pavlov and Gabriel Goh and Scott Gray and Chelsea Voss and Alec Radford and Mark Chen and Ilya Sutskever},&#xA;  year={2021},&#xA;  eprint={2102.12092},&#xA;  archivePrefix={arXiv},&#xA;  primaryClass={cs.CV}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title={Learning Transferable Visual Models From Natural Language Supervision}, &#xA;  author={Alec Radford and Jong Wook Kim and Chris Hallacy and Aditya Ramesh and Gabriel Goh and Sandhini Agarwal and Girish Sastry and Amanda Askell and Pamela Mishkin and Jack Clark and Gretchen Krueger and Ilya Sutskever},&#xA;  year={2021},&#xA;  eprint={2103.00020},&#xA;  archivePrefix={arXiv},&#xA;  primaryClass={cs.CV}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title={Taming Transformers for High-Resolution Image Synthesis}, &#xA;  author={Patrick Esser and Robin Rombach and Björn Ommer},&#xA;  year={2021},&#xA;  eprint={2012.09841},&#xA;  archivePrefix={arXiv},&#xA;  primaryClass={cs.CV}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title={BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension}, &#xA;  author={Mike Lewis and Yinhan Liu and Naman Goyal and Marjan Ghazvininejad and Abdelrahman Mohamed and Omer Levy and Ves Stoyanov and Luke Zettlemoyer},&#xA;  year={2019},&#xA;  eprint={1910.13461},&#xA;  archivePrefix={arXiv},&#xA;  primaryClass={cs.CL}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title={Scalable Second Order Optimization for Deep Learning},&#xA;  author={Rohan Anil and Vineet Gupta and Tomer Koren and Kevin Regan and Yoram Singer},&#xA;  year={2021},&#xA;  eprint={2002.09018},&#xA;  archivePrefix={arXiv},&#xA;  primaryClass={cs.LG}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title={GLU Variants Improve Transformer},&#xA;  author={Noam Shazeer},&#xA;  year={2020},&#xA;  url={https://arxiv.org/abs/2002.05202}    &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt; @misc{&#xA;  title={DeepNet: Scaling transformers to 1,000 layers},&#xA;  author={Wang, Hongyu and Ma, Shuming and Dong, Li and Huang, Shaohan and Zhang, Dongdong and Wei, Furu},&#xA;  year={2022},&#xA;  eprint={2203.00555}&#xA;  archivePrefix={arXiv},&#xA;  primaryClass={cs.LG}&#xA;} &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title={NormFormer: Improved Transformer Pretraining with Extra Normalization},&#xA;  author={Sam Shleifer and Jason Weston and Myle Ott},&#xA;  year={2021},&#xA;  eprint={2110.09456},&#xA;  archivePrefix={arXiv},&#xA;  primaryClass={cs.CL}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@inproceedings{&#xA;  title={Swin Transformer V2: Scaling Up Capacity and Resolution}, &#xA;  author={Ze Liu and Han Hu and Yutong Lin and Zhuliang Yao and Zhenda Xie and Yixuan Wei and Jia Ning and Yue Cao and Zheng Zhang and Li Dong and Furu Wei and Baining Guo},&#xA;  booktitle={International Conference on Computer Vision and Pattern Recognition (CVPR)},&#xA;  year={2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title = {CogView: Mastering Text-to-Image Generation via Transformers},&#xA;  author = {Ming Ding and Zhuoyi Yang and Wenyi Hong and Wendi Zheng and Chang Zhou and Da Yin and Junyang Lin and Xu Zou and Zhou Shao and Hongxia Yang and Jie Tang},&#xA;  year = {2021},&#xA;  eprint = {2105.13290},&#xA;  archivePrefix = {arXiv},&#xA;  primaryClass = {cs.CV}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title = {Root Mean Square Layer Normalization},&#xA;  author = {Biao Zhang and Rico Sennrich},&#xA;  year = {2019},&#xA;  eprint = {1910.07467},&#xA;  archivePrefix = {arXiv},&#xA;  primaryClass = {cs.LG}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title = {Sinkformers: Transformers with Doubly Stochastic Attention},&#xA;  url = {https://arxiv.org/abs/2110.11773},&#xA;  author = {Sander, Michael E. and Ablin, Pierre and Blondel, Mathieu and Peyré, Gabriel},&#xA;  publisher = {arXiv},&#xA;  year = {2021},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title = {Smooth activations and reproducibility in deep networks},&#xA;  url = {https://arxiv.org/abs/2010.09931},&#xA;  author = {Shamir, Gil I. and Lin, Dong and Coviello, Lorenzo},&#xA;  publisher = {arXiv},&#xA;  year = {2020},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>POSTECH-CVLab/PyTorch-StudioGAN</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/POSTECH-CVLab/PyTorch-StudioGAN</id>
    <link href="https://github.com/POSTECH-CVLab/PyTorch-StudioGAN" rel="alternate"></link>
    <summary type="html">&lt;p&gt;StudioGAN is a Pytorch library providing implementations of representative Generative Adversarial Networks (GANs) for conditional/unconditional image generation.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;60%&#34; src=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/docs/figures/studiogan_logo.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;StudioGAN&lt;/strong&gt; is a Pytorch library providing implementations of representative Generative Adversarial Networks (GANs) for conditional/unconditional image generation. StudioGAN aims to offer an identical playground for modern GANs so that machine learning researchers can readily compare and analyze a new idea.&lt;/p&gt; &#xA;&lt;h1&gt;News&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Our new paper &#34;&lt;a href=&#34;https://openreview.net/forum?id=Ja-hVQrfeGZ&#34;&gt;Rebooting ACGAN: Auxiliary Classifier GANs with Stable Training (ReACGAN)&lt;/a&gt;&#34; is made public on Neurips 2021 Openreview.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;StudioGAN provides clean-measures (IS, FID, Improved Precision &amp;amp; Recall, and Density &amp;amp; Coverage) using anti-aliasing PIL.BICUBIC resizer.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;StudioGAN contains StyleGAN2 and StyleGAN3 implementations. We will upload pre-trained models (StyleGAN2, StyleGAN3-t, and StyleGAN3-r) on AFHQ-v2 datasets.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Release Notes (v.0.3.0)&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add SOTA GANs: LGAN, TACGAN, StyleGAN2, MDGAN, MHGAN, ADCGAN, ReACGAN.&lt;/li&gt; &#xA; &lt;li&gt;Add five types of differentiable augmentation: CR, DiffAugment, ADA, SimCLR, BYOL.&lt;/li&gt; &#xA; &lt;li&gt;Implement useful regularizations: Top-K training, Feature Matching, R1-Regularization, MaxGP&lt;/li&gt; &#xA; &lt;li&gt;Add Improved Precision &amp;amp; Recall, Density &amp;amp; Coverage, iFID, and CAS for reliable evaluation.&lt;/li&gt; &#xA; &lt;li&gt;Support Inception_V3 and SwAV backbones for GAN evaluation.&lt;/li&gt; &#xA; &lt;li&gt;Verify the reproducibility of StyleGAN2 and BigGAN.&lt;/li&gt; &#xA; &lt;li&gt;Fix bugs in FreezeD, DDP training, Mixed Precision training, and ADA.&lt;/li&gt; &#xA; &lt;li&gt;Support Discriminator Driven Latent Sampling, Semantic Factorization for BigGAN evaluation.&lt;/li&gt; &#xA; &lt;li&gt;Support Wandb logging instead of Tensorboard.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Extensive GAN implementations using PyTorch.&lt;/li&gt; &#xA; &lt;li&gt;The only repository to train/evaluate BigGAN and StyleGAN2 baselines in a unified training pipeline.&lt;/li&gt; &#xA; &lt;li&gt;Comprehensive benchmark of GANs using CIFAR10, Tiny ImageNet, CUB200, and ImageNet datasets.&lt;/li&gt; &#xA; &lt;li&gt;Provide pre-trained models that are fully compatible with up-to-date PyTorch environment.&lt;/li&gt; &#xA; &lt;li&gt;Easy to handle other personal datasets (i.e. AFHQ, anime, and much more!).&lt;/li&gt; &#xA; &lt;li&gt;Better performance and lower memory consumption than original implementations.&lt;/li&gt; &#xA; &lt;li&gt;Support seven evaluation metrics including iFID, improved precision &amp;amp; recall, density &amp;amp; coverage, and CAS.&lt;/li&gt; &#xA; &lt;li&gt;Provide clean-IS, clean-FID, clean-prdc (Improved Precision &amp;amp; Recall, Density &amp;amp; Coverage).&lt;/li&gt; &#xA; &lt;li&gt;Support Multi-GPU (DP, DDP, and Multinode DistributedDataParallel), Mixed Precision, Synchronized Batch Normalization, Wandb Visualization, and other analysis methods.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Implemented GANs&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Method&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Venue&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;GC&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;DC&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Loss&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;EMA&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1511.06434&#34;&gt;&lt;strong&gt;DCGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arXiv&#39;15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CNN/ResNet&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/#footnote_1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Vanilla&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1611.04076&#34;&gt;&lt;strong&gt;LSGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ICCV&#39;17&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CNN/ResNet&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/#footnote_1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Least Sqaure&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1705.02894&#34;&gt;&lt;strong&gt;GGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arXiv&#39;17&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CNN/ResNet&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/#footnote_1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hinge&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1606.03657&#34;&gt;&lt;strong&gt;InfoGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;NIPS&#39;16&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;All&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Vanilla&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1701.04862&#34;&gt;&lt;strong&gt;WGAN-WC&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ICLR&#39;17&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ResNet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Wasserstein&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1704.00028&#34;&gt;&lt;strong&gt;WGAN-GP&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;NIPS&#39;17&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ResNet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Wasserstein&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1705.07215&#34;&gt;&lt;strong&gt;WGAN-DRA&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arXiv&#39;17&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ResNet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Wasserstein&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ACGAN-Mod&lt;/strong&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/#footnote_2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ResNet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cBN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AC&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hinge&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1802.05637&#34;&gt;&lt;strong&gt;ProjGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ICLR&#39;18&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ResNet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cBN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hinge&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1802.05957&#34;&gt;&lt;strong&gt;SNGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ICLR&#39;18&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ResNet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cBN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hinge&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1805.08318&#34;&gt;&lt;strong&gt;SAGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ICML&#39;19&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ResNet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cBN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hinge&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1907.02690&#34;&gt;&lt;strong&gt;TACGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Neurips&#39;19&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Big ResNet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cBN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TAC&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hinge&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;True&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1902.05687&#34;&gt;&lt;strong&gt;LGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ICML&#39;19&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ResNet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Vanilla&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;False&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1809.11096&#34;&gt;&lt;strong&gt;BigGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ICLR&#39;19&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Big ResNet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cBN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hinge&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;True&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/POSTECH-CVLab/PyTorch-StudioGAN/raw/master/src/models/big_resnet_deep_legacy.py&#34;&gt;&lt;strong&gt;BigGAN-Deep-CompareGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ICLR&#39;19&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Big ResNet Deep CompareGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cBN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hinge&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;True&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/POSTECH-CVLab/PyTorch-StudioGAN/raw/master/src/models/big_resnet_deep_studiogan.py&#34;&gt;&lt;strong&gt;BigGAN-Deep-StudioGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Big ResNet Deep StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cBN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hinge&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;True&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1912.00953&#34;&gt;&lt;strong&gt;LOGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arXiv&#39;19&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Big ResNet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cBN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hinge&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;True&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1912.04958&#34;&gt;&lt;strong&gt;StyleGAN2&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CVPR&#39; 20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StyleGAN2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cAdaIN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SPD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Logistic&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;True&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1910.12027&#34;&gt;&lt;strong&gt;CRGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ICLR&#39;20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Big ResNet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cBN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hinge&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;True&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2006.10738&#34;&gt;&lt;strong&gt;BigGAN + DiffAugment&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Neurips&#39;20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Big ResNet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cBN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hinge&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;True&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2006.06676&#34;&gt;&lt;strong&gt;StyleGAN2 + ADA&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Neurips&#39;20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StyleGAN2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cAdaIN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SPD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Logistic&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;True&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2006.12681&#34;&gt;&lt;strong&gt;ContraGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Neurips&#39;20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Big ResNet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cBN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2C&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hinge&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;True&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1912.04216&#34;&gt;&lt;strong&gt;MHGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WACV&#39;21&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Big ResNet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cBN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;MH&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;MH&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;True&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2002.04724&#34;&gt;&lt;strong&gt;ICRGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AAAI&#39;21&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Big ResNet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cBN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hinge&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;True&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2107.10060&#34;&gt;&lt;strong&gt;ADCGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arXiv&#39;21&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Big ResNet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cBN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ADC&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hinge&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;True&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2111.01118&#34;&gt;&lt;strong&gt;ReACGAN&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Neurips&#39;21&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Big ResNet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cBN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;D2D-CE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hinge&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;True&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://nvlabs.github.io/stylegan3/&#34;&gt;&lt;strong&gt;StyleGAN3&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Neurips&#39;21&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StyleGAN3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;cAaIN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SPD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Logistic&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;True&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;GC/DC indicates the way how we inject label information to the Generator or Discriminator.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://openreview.net/forum?id=SJgw_sRqFQ&#34;&gt;EMA&lt;/a&gt;: Exponential Moving Average update to the generator. &lt;a href=&#34;https://arxiv.org/abs/1610.07629&#34;&gt;cBN&lt;/a&gt; : conditional Batch Normalization. &lt;a href=&#34;https://arxiv.org/abs/1812.04948&#34;&gt;cAdaIN&lt;/a&gt;: Conditional version of Adaptive Instance Normalization. &lt;a href=&#34;https://arxiv.org/abs/1610.09585&#34;&gt;AC&lt;/a&gt; : Auxiliary Classifier. &lt;a href=&#34;https://arxiv.org/abs/1802.05637&#34;&gt;PD&lt;/a&gt; : Projection Discriminator. &lt;a href=&#34;https://arxiv.org/abs/1907.02690&#34;&gt;TAC&lt;/a&gt;: Twin Auxiliary Classifier. &lt;a href=&#34;https://arxiv.org/abs/1812.04948&#34;&gt;SPD&lt;/a&gt; : Modified PD for StyleGAN. &lt;a href=&#34;https://arxiv.org/abs/2006.12681&#34;&gt;2C&lt;/a&gt; : Conditional Contrastive loss. &lt;a href=&#34;https://arxiv.org/abs/1912.04216&#34;&gt;MH&lt;/a&gt; : Multi-Hinge loss. &lt;a href=&#34;https://arxiv.org/abs/2107.10060&#34;&gt;ADC&lt;/a&gt; : Auxiliary Discriminative Classifier. &lt;a href=&#34;https://arxiv.org/abs/2111.01118&#34;&gt;D2D-CE&lt;/a&gt; : Data-to-Data Cross-Entropy.&lt;/p&gt; &#xA;&lt;h1&gt;Differentiable Augmentations&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Method&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Venue&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Target Loss&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1910.12027&#34;&gt;&lt;strong&gt;CR&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ICLR&#39;2020&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2002.05709&#34;&gt;&lt;strong&gt;SimCLR&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ICML&#39;2020&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2006.10738&#34;&gt;&lt;strong&gt;DiffAugment&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Neurips&#39;2020&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2006.07733&#34;&gt;&lt;strong&gt;BYOL&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Neurips&#39;2020&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2006.06676&#34;&gt;&lt;strong&gt;ADA&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Neurips&#39;2020&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Logistic&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2111.06849&#34;&gt;&lt;strong&gt;APA&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Neurips&#39;2021&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Logistic&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Training Techniques and Misc&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Method&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Venue&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Target Architecture&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2002.10964&#34;&gt;&lt;strong&gt;FreezeD&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CVPRW&#39;20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Except for StyleGAN2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2002.06224&#34;&gt;&lt;strong&gt;Top-K Training&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Neurips&#39;2020&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2104.03310&#34;&gt;&lt;strong&gt;LeCam&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CVPR&#39;2021&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2007.06600&#34;&gt;&lt;strong&gt;SeFa&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CVPR&#39;2021&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;BigGAN&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Evaluation Metrics&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Method&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Venue&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1606.03498&#34;&gt;&lt;strong&gt;Inception Score (IS)&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Neurips&#39;16&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Inception_V3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1706.08500&#34;&gt;&lt;strong&gt;Frechet Inception Distance (FID)&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Neurips&#39;17&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Inception_V3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Intra-class FID&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Inception_V3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1904.06991&#34;&gt;&lt;strong&gt;Improved Precision &amp;amp; Recall&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Neurips&#39;19&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Inception_V3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1905.10887&#34;&gt;&lt;strong&gt;Classifier Accuracy Score (CAS)&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Neurips&#39;19&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Inception_V3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2002.09797&#34;&gt;&lt;strong&gt;Density &amp;amp; Coverage&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ICML&#39;20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Inception_V3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://openreview.net/forum?id=NeRdBeTionN&#34;&gt;&lt;strong&gt;SwAV FID&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ICLR&#39;21&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SwAV&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2104.11222&#34;&gt;&lt;strong&gt;Clean metrics (IS, FID, PRDC)&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arXiv&#39;21&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;p&gt;First, install PyTorch meeting your environment (at least 1.7, recommmended 1.10):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip3 install torch==1.10.0+cu111 torchvision==0.11.1+cu111 torchaudio==0.10.0+cu111 -f https://download.pytorch.org/whl/cu111/torch_stable.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, use the following command to install the rest of the libraries:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip3 install tqdm ninja h5py kornia matplotlib pandas sklearn scipy seaborn wandb PyYaml click requests pyspng imageio-ffmpeg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With docker, you can use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull mgkang/studiogan:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is my command to make a container named &#34;StudioGAN&#34;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --gpus all --shm-size 128g --name StudioGAN -v /home/USER:/root/code --workdir /root/code mgkang/studiogan:latest /bin/bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Dataset&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;CIFAR10/CIFAR100: StudioGAN will automatically download the dataset once you execute &lt;code&gt;main.py&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tiny ImageNet, ImageNet, or a custom dataset:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;download &lt;a href=&#34;https://gist.github.com/moskomule/2e6a9a463f50447beca4e64ab4699ac4&#34;&gt;Tiny ImageNet&lt;/a&gt; and &lt;a href=&#34;http://www.image-net.org&#34;&gt;ImageNet&lt;/a&gt;. Prepare your own dataset.&lt;/li&gt; &#xA;   &lt;li&gt;make the folder structure of the dataset as follows:&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;data&#xA;└── ImageNet or Tiny_ImageNet or CUSTOM&#xA;    ├── train&#xA;    │ &amp;nbsp; ├── cls0&#xA;    │   │   ├── train0.png&#xA;    │   │   ├── train1.png&#xA;    │   │   └── ...&#xA;    │   ├── cls1&#xA;    │   └── ...&#xA;    └── valid&#xA;        ├── cls0&#xA;        │   ├── valid0.png&#xA;        │   ├── valid1.png&#xA;        │   └── ...&#xA;        ├── cls1&#xA;        └── ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Quick Start&lt;/h1&gt; &#xA;&lt;p&gt;Before starting, users should login wandb using their personal API key.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wandb login PERSONAL_API_KEY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From release 0.3.0, you can now define which evaluation metrics to use through &lt;code&gt;-metrics&lt;/code&gt; option. Not specifying option defaults to calculating FID only. i.e. &lt;code&gt;-metrics is fid&lt;/code&gt; calculates only IS and FID and &lt;code&gt;-metrics none&lt;/code&gt; skips evaluation.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Train (&lt;code&gt;-t&lt;/code&gt;) and evaluate IS, FID, Prc, Rec, Dns, Cvg (&lt;code&gt;-metrics is fid prdc&lt;/code&gt;) of the model defined in &lt;code&gt;CONFIG_PATH&lt;/code&gt; using GPU &lt;code&gt;0&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0 python3 src/main.py -t -metrics is fid prdc -cfg CONFIG_PATH -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Train (&lt;code&gt;-t&lt;/code&gt;) and evaluate clean-IS, clean-FID, clean-Prc, clean-Rec, clean-Dns, clean-Cvg (&lt;code&gt;-metrics is fid prdc --resize_fn clean&lt;/code&gt;) of the model defined in &lt;code&gt;CONFIG_PATH&lt;/code&gt; using GPU &lt;code&gt;0&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0 python3 src/main.py -t -metrics is fid prdc --resize_fn clean -cfg CONFIG_PATH -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Train (&lt;code&gt;-t&lt;/code&gt;) and evaluate FID of the model defined in &lt;code&gt;CONFIG_PATH&lt;/code&gt; through &lt;code&gt;DataParallel&lt;/code&gt; using GPUs &lt;code&gt;(0, 1, 2, 3)&lt;/code&gt;. Evaluation of FID does not require (&lt;code&gt;-metrics&lt;/code&gt;) argument!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0,1,2,3 python3 src/main.py -t -cfg CONFIG_PATH -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Train (&lt;code&gt;-t&lt;/code&gt;) and skip evaluation (&lt;code&gt;-metrics none&lt;/code&gt;) of the model defined in &lt;code&gt;CONFIG_PATH&lt;/code&gt; through &lt;code&gt;DistributedDataParallel&lt;/code&gt; using GPUs &lt;code&gt;(0, 1, 2, 3)&lt;/code&gt;, &lt;code&gt;Synchronized batch norm&lt;/code&gt;, and &lt;code&gt;Mixed precision&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export MASTER_ADDR=&#34;localhost&#34;&#xA;export MASTER_PORT=2222&#xA;CUDA_VISIBLE_DEVICES=0,1,2,3 python3 src/main.py -t -metrics none -cfg CONFIG_PATH -data DATA_PATH -save SAVE_PATH -DDP -sync_bn -mpc &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Try &lt;code&gt;python3 src/main.py&lt;/code&gt; to see available options.&lt;/p&gt; &#xA;&lt;h1&gt;Supported Training/Testing Techniques&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Load All Data in Main Memory (&lt;code&gt;-hdf5 -l&lt;/code&gt;)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0,...,N python3 src/main.py -t -hdf5 -l -cfg CONFIG_PATH -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DistributedDataParallel (Please refer to &lt;a href=&#34;https://yangkky.github.io/2019/07/08/distributed-pytorch-tutorial.html&#34;&gt;Here&lt;/a&gt;) (&lt;code&gt;-DDP&lt;/code&gt;)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;### NODE_0, 4_GPUs, All ports are open to NODE_1&#xA;~/code&amp;gt;&amp;gt;&amp;gt; export MASTER_ADDR=PUBLIC_IP_OF_NODE_0&#xA;~/code&amp;gt;&amp;gt;&amp;gt; export MASTER_PORT=AVAILABLE_PORT_OF_NODE_0&#xA;~/code/PyTorch-StudioGAN&amp;gt;&amp;gt;&amp;gt; CUDA_VISIBLE_DEVICES=0,1,2,3 python3 src/main.py -t -DDP -tn 2 -cn 0 -cfg CONFIG_PATH -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;### NODE_1, 4_GPUs, All ports are open to NODE_0&#xA;~/code&amp;gt;&amp;gt;&amp;gt; export MASTER_ADDR=PUBLIC_IP_OF_NODE_0&#xA;~/code&amp;gt;&amp;gt;&amp;gt; export MASTER_PORT=AVAILABLE_PORT_OF_NODE_0&#xA;~/code/PyTorch-StudioGAN&amp;gt;&amp;gt;&amp;gt; CUDA_VISIBLE_DEVICES=0,1,2,3 python3 src/main.py -t -DDP -tn 2 -cn 1 -cfg CONFIG_PATH -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/1710.03740&#34;&gt;Mixed Precision Training&lt;/a&gt; (&lt;code&gt;-mpc&lt;/code&gt;)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0,...,N python3 src/main.py -t -mpc -cfg CONFIG_PATH -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Change Batch Normalization Statistics&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Synchronized batchNorm (-sync_bn)&#xA;CUDA_VISIBLE_DEVICES=0,...,N python3 src/main.py -t -sync_bn -cfg CONFIG_PATH -data DATA_PATH -save SAVE_PATH&#xA;&#xA;# Standing statistics (-std_stat, -std_max, -std_step)&#xA;CUDA_VISIBLE_DEVICES=0,...,N python3 src/main.py -std_stat -std_max STD_MAX -std_step STD_STEP -cfg CONFIG_PATH -ckpt CKPT -data DATA_PATH -save SAVE_PATH&#xA;&#xA;# Batch statistics (-batch_stat)&#xA;CUDA_VISIBLE_DEVICES=0,...,N python3 src/main.py -batch_stat -cfg CONFIG_PATH -ckpt CKPT -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/1809.11096&#34;&gt;Truncation Trick&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0,...,N python3 src/main.py --truncation_factor TRUNCATION_FACTOR -cfg CONFIG_PATH -ckpt CKPT -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2003.06060&#34;&gt;DDLS&lt;/a&gt; (&lt;code&gt;-lgv -lgv_rate -lgv_std -lgv_decay -lgv_decay_steps -lgv_steps&lt;/code&gt;)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0,...,N python3 src/main.py -lgv -lgv_rate LGV_RATE -lgv_std LGV_STD -lgv_decay LGV_DECAY -lgv_decay_steps LGV_DECAY_STEPS -lgv_steps LGV_STEPS -cfg CONFIG_PATH -ckpt CKPT -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2002.10964&#34;&gt;Freeze Discriminator&lt;/a&gt; (&lt;code&gt;-freezeD&lt;/code&gt;)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0,...,N python3 src/main.py -t --freezeD FREEZED -ckpt SOURCE_CKPT -cfg TARGET_CONFIG_PATH -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Analyzing Generated Images&lt;/h1&gt; &#xA;&lt;p&gt;StudioGAN supports &lt;code&gt;Image visualization, K-nearest neighbor analysis, Linear interpolation, Frequency analysis, TSNE analysis, and Semantic factorization&lt;/code&gt;. All results will be saved in &lt;code&gt;SAVE_DIR/figures/RUN_NAME/*.png&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Image Visualization&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0,...,N python3 src/main.py -v -cfg CONFIG_PATH -ckpt CKPT -save SAVE_DIR&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;95%&#34; src=&#34;https://github.com/POSTECH-CVLab/PyTorch-StudioGAN/raw/master/docs/figures/AFHQ_.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;95%&#34; src=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/docs/figures/generated_images1.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;95%&#34; src=&#34;https://github.com/POSTECH-CVLab/PyTorch-StudioGAN/raw/master/docs/figures/Anime_.png&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;K-Nearest Neighbor Analysis (we have fixed K=7, the images in the first column are generated images.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0,...,N python3 src/main.py -knn -cfg CONFIG_PATH -ckpt CKPT -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;95%&#34; src=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/docs/figures/knn_1.png&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linear Interpolation (applicable only to conditional Big ResNet models)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0,...,N python3 src/main.py -itp -cfg CONFIG_PATH -ckpt CKPT -save SAVE_DIR&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;95%&#34; src=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/docs/figures/interpolated_images.png&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Frequency Analysis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0,...,N python3 src/main.py -fa -cfg CONFIG_PATH -ckpt CKPT -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;60%&#34; src=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/docs/figures/diff_spectrum1.png&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TSNE Analysis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0,...,N python3 src/main.py -tsne -cfg CONFIG_PATH -ckpt CKPT -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;80%&#34; src=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/docs/figures/TSNE_results.png&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Semantic Factorization for BigGAN&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0,...,N python3 src/main.py -sefa -sefa_axis SEFA_AXIS -sefa_max SEFA_MAX -cfg CONFIG_PATH -ckpt CKPT -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;95%&#34; src=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/docs/figures/fox.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;95%&#34; src=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/docs/figures/boat.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Metrics&lt;/h1&gt; &#xA;&lt;p&gt;StudioGAN supports Inception Score, Frechet Inception Distance, Improved Precision and Recall, Density and Coverage, Intra-Class FID, Classifier Accuracy Score, and SwAV backbone FID. Users can get &lt;code&gt;Intra-Class FID, Classifier Accuracy Score, SwAV backbone FID&lt;/code&gt; scores using &lt;code&gt;-iFID, -GAN_train, -GAN_test, and --eval_backbone &#34;SwAV&#34;&lt;/code&gt; options, respectively. In addition to this, users can calculate metrics with clean-resizer (please refer to &lt;a href=&#34;https://arxiv.org/abs/2104.11222&#34;&gt;paper&lt;/a&gt;) using --resize_fn clean.&lt;/p&gt; &#xA;&lt;h3&gt;1. Inception Score (IS)&lt;/h3&gt; &#xA;&lt;p&gt;Inception Score (IS) is a metric to measure how much GAN generates high-fidelity and diverse images. Calculating IS requires the pre-trained Inception-V3 network. Note that we do not split a dataset into ten folds to calculate IS ten times.&lt;/p&gt; &#xA;&lt;h3&gt;2. Frechet Inception Distance (FID)&lt;/h3&gt; &#xA;&lt;p&gt;FID is a widely used metric to evaluate the performance of a GAN model. Calculating FID requires the pre-trained Inception-V3 network, and modern approaches use &lt;a href=&#34;https://github.com/bioinf-jku/TTUR&#34;&gt;Tensorflow-based FID&lt;/a&gt;. StudioGAN utilizes the &lt;a href=&#34;https://github.com/mseitzer/pytorch-fid&#34;&gt;PyTorch-based FID&lt;/a&gt; to test GAN models in the same PyTorch environment. We show that the PyTorch based FID implementation provides &lt;a href=&#34;https://github.com/POSTECH-CVLab/PyTorch-StudioGAN/raw/master/docs/figures/Table3.png&#34;&gt;almost the same results&lt;/a&gt; with the TensorFlow implementation (See Appendix F of &lt;a href=&#34;https://arxiv.org/abs/2006.12681&#34;&gt;our paper&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;3. Improved Precision and Recall (Prc, Rec)&lt;/h3&gt; &#xA;&lt;p&gt;Improved precision and recall are developed to make up for the shortcomings of the precision and recall. Like IS, FID, calculating improved precision and recall requires the pre-trained Inception-V3 model. StudioGAN uses the PyTorch implementation provided by &lt;a href=&#34;https://github.com/clovaai/generative-evaluation-prdc&#34;&gt;developers of density and coverage scores&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;4. Density and Coverage (Dns, Cvg)&lt;/h3&gt; &#xA;&lt;p&gt;Density and coverage metrics can estimate the fidelity and diversity of generated images using the pre-trained Inception-V3 model. The metrics are known to be robust to outliers, and they can detect identical real and fake distributions. StudioGAN uses the &lt;a href=&#34;https://github.com/clovaai/generative-evaluation-prdc&#34;&gt;authors&#39; official PyTorch implementation&lt;/a&gt;, and StudioGAN follows the author&#39;s suggestion for hyperparameter selection.&lt;/p&gt; &#xA;&lt;h1&gt;Evaluating pre-saved image folders&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Evaluate IS, FID, Prc, Rec, Dns, Cvg (-metrics is fid prdc) of image folders saved in DSET1 and DSET2 using GPUs &lt;code&gt;(0,...,N)&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0,...,N python3 src/evaluate.py -metrics is fid prdc --dset1 DSET1 --dset2 DSET2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Evaluate clean-IS, clean-FID, clean-Prc, clean-Rec, clean-Dns, clean-Cvg (-metrics is fid prdc --resize_fn clean) of image folders saved in DSET1 and DSET2 through &lt;code&gt;DistributedDataParallel&lt;/code&gt; using GPUs &lt;code&gt;(0,...,N)&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export MASTER_ADDR=&#34;localhost&#34;&#xA;export MASTER_PORT=2222&#xA;CUDA_VISIBLE_DEVICES=0,...,N python3 src/evaluate.py -metrics is fid prdc --resize_fn clean --dset1 DSET1 --dset2 DSET2 -DDP&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Benchmark&lt;/h1&gt; &#xA;&lt;h4&gt;※ We always welcome your contribution if you find any wrong implementation, bug, and misreported score.&lt;/h4&gt; &#xA;&lt;p&gt;We report the best IS, FID, and F_beta values of various GANs. B.S. means batch size for training.&lt;/p&gt; &#xA;&lt;p&gt;To download all checkpoints reported in StudioGAN, Please &lt;a href=&#34;https://drive.google.com/drive/folders/1CDM96Ic-99KdCDYTALkqvoAliprEnltC?usp=sharing&#34;&gt;click here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/1910.12027&#34;&gt;CR&lt;/a&gt;, &lt;a href=&#34;https://arxiv.org/abs/2002.04724&#34;&gt;ICR&lt;/a&gt;, &lt;a href=&#34;https://arxiv.org/abs/2006.10738&#34;&gt;DiffAugment&lt;/a&gt;, &lt;a href=&#34;https://arxiv.org/abs/2006.06676&#34;&gt;ADA&lt;/a&gt;, and &lt;a href=&#34;https://arxiv.org/abs/1912.00953&#34;&gt;LO&lt;/a&gt; refer to regularization or optimization techiniques: CR (Consistency Regularization), ICR (Improved Consistency Regularization), DiffAugment (Differentiable Augmentation), ADA (Adaptive Discriminator Augmentation), and LO (Latent Optimization), respectively.&lt;/p&gt; &#xA;&lt;h3&gt;CIFAR10 (3x32x32)&lt;/h3&gt; &#xA;&lt;p&gt;When training and evaluating, we used the command below.&lt;/p&gt; &#xA;&lt;p&gt;With a single TITAN RTX GPU, training BigGAN takes about 13-15 hours.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0 python3 src/main.py -t -hdf5 -l -batch_stat -metrics is fid prdc -ref &#34;test&#34; -cfg CONFIG_PATH -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;IS, FID, and F_beta values are computed using 10K test and 10K generated Images.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Method&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Reference&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;IS(⭡)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;FID(⭣)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;F_1/8(⭡)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;F_8(⭡)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Cfg&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Log&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Weights&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;DCGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6.638&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;49.030&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.833&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.795&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/DCGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/DCGAN-train-2020_09_15_13_23_51.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1_AAkKkwdSJaRjnNxg-FxiLfIU8nHgPLh?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;LSGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;5.577&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;66.686&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.757&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.720&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/LSGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/LSGAN-train-2020_09_15_23_40_37.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1s4gT44ar6C2PF1-LfCcCEJWIWR4bIKHu?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;GGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6.227&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;42.714&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.916&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.822&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/GGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/GGAN-train-2020_09_15_23_11_09.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1lGhmGt4W0LtlaoX0ABFOg-ND98cwnrRt?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;WGAN-WC&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2.579&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;159.090&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.190&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.199&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/WGAN-WC.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/WGAN-WC-train-2020_09_17_11_03_23.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1dRrTrftXj3lD3JH4wphas-SzaDvNz70f?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;WGAN-GP&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7.458&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;25.852&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.962&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.929&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/WGAN-GP.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/WGAN-GP-train-2020_09_16_14_17_00.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1OGwjRUuktEECax_Syz_hhTiL3vtd1kz2?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;WGAN-DRA&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6.432&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;41.586&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.922&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.863&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/WGAN-DRA.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/WGAN-DRA-train-2020_09_16_05_18_22.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1N4BxR1dTNa__8hQJZkcL5wI5PzCVyMHR?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ACGAN-Mod&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6.629&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;45.571&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.857&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.847&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/ACGAN-Mod.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/ACGAN-train-2020_09_17_20_04_13.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1KXbLUf9lqWvadwXv7WSPZ3V7Knoa0hNg?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ProjGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7.539&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;33.830&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.952&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.855&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/ProjGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/ProjGAN-train-2020_09_17_20_05_34.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1JtMUFYkKahlfItvHKx87WIiRl89D9Dhr?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;SNGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8.677&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13.248&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.983&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.978&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/SNGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/SNGAN-train-2020_09_18_14_37_00.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/16s5Cr-V-NlfLyy_uyXEkoNxLBt-8wYSM?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;SAGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8.680&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14.009&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.982&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.970&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/SAGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/SAGAN-train-2020_09_18_23_34_49.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1FA8hcz4MB8-hgTwLuDA0ZUfr8slud5P_?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;BigGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1809.11096&#34;&gt;Paper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9.22&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/#footnote_3&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14.73&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;BigGAN + CR&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1910.12027&#34;&gt;Paper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;BigGAN + ICR&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2002.04724&#34;&gt;Paper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;BigGAN + DiffAugment&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mit-han-lab/data-efficient-gans/tree/master/DiffAugment-biggan-cifar&#34;&gt;Repo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9.2&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/#footnote_3&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;BigGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9.746&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8.034&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.995&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.994&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/BigGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/BigGAN-train-2021_01_15_14_48_48.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/10sSMINp_xxVtjY0YssHgZ9w-_yk6rFVA?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;BigGAN + CR&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10.380&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7.178&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.994&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.993&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/BigGAN-CR.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/CRGAN(P)-train-2020_09_17_13_45_19.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1I9HYBU2t2CYmqsrKeeoivYiIUXHqO8k7?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;BigGAN + ICR&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10.153&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7.430&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.994&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.993&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/BigGAN-ICR.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/ICRGAN(P)-train-2020_09_17_13_46_09.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1ZsX9Xu7j7MCG0V53FSk5K8HJpnsRIvtw?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;BigGAN + DiffAugment&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9.775&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7.157&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.996&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.993&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/BigGAN-DiffAug.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/DiffAugGAN(P)-train-2020_09_18_14_33_57.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1xVN7dQPWMLi8gDZEb5FThkjbFtIdzb6b?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;LOGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TBA&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TBA&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TBA&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TBA&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/LOGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TBA&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TBA&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ContraGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9.729&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8.065&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.993&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.992&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/ContraGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/ContraGAN-train-2020_10_04_21_50_14.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/10nxLyB7PyUsaGiBn6xD0e3_teYlB9Q59?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ContraGAN + CR&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9.812&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7.685&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.995&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.993&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/ContraGAN-CR.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/CRGAN(C)-train-2020_12_04_13_51_40.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1_Bkt_3NE95Ekxo8YG840wSNDTPmQDQb3?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ContraGAN + ICR&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10.117&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7.547&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.996&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.993&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/ContraGAN-ICR.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/ICRGAN(C)-train-2020_12_04_13_53_13.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1vXoYnKEw3YwLG6ZutYFz_LCLr10VGa9T?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ContraGAN + DiffAugment&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9.996&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7.193&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.995&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.990&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/ContraGAN-DiffAug.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/DiffAugGAN(C)-train-2020_11_14_16_20_04.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1MKZgtyLg79Ti2nWRea6sAWMY1KfMqoKI?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ReACGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9.974&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7.792&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.995&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.990&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/ReACGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/CCMGAN-train-2021_04_28_12_09_23.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/12zTo4SD9idpqNuF9a8iVrGZUPVapr4jz?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ReACGAN + CR&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9.833&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7.176&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.996&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.993&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/ReACGAN-CR.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/CCMGAN-train-2021_05_03_12_19_16.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1-g7pxQ1nQnkjexiKmPk5GnO5im-6QHIe?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ReACGAN + DiffAugment&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10.181&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6.717&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.996&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.994&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/ReACGAN-DiffAug.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/CIFAR10/CCMGAN-train-2021_05_03_12_20_37.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1nzUrYuoofkekN-LM3SIaNMS3EQT43nGO?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;CIFAR10 (3x32x32) using StyleGAN2&lt;/h3&gt; &#xA;&lt;p&gt;When training and evaluating, we used the command below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0,1 python3 src/main.py -t -hdf5 -l -mpc -metrics is fid prdc -ref &#34;train&#34; -cfg CONFIG_PATH -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;IS, FID, Dns, and Cvg values are computed using 50K train and 50K generated Images.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Method&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Reference&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;IS(⭡)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;FID(⭣)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Dns(⭡)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Cvg(⭡)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Cfg&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Log&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Weights&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;StyleGAN2&lt;/strong&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/#footnote_1&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2006.06676&#34;&gt;Paper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9.53&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/#footnote_3&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6.96&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;StyleGAN2 + ADA&lt;/strong&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/#footnote_4&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2006.06676&#34;&gt;Paper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10.14&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/#footnote_3&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2.42&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;StyleGAN2&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10.149&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;3.889&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.979&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.893&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/StyleGAN2.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/POSTECH-CVLab/PyTorch-StudioGAN/raw/master/logs/CIFAR10/StyleGAN2-train-2021_10_18_00_40_38.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1YEMvPXzYNQWCkMCv83-3J6QC2tMbdy6Y?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;StyleGAN2 + D2D-CE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10.320&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;3.385&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.974&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.899&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/StyleGAN2-D2DCE.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/POSTECH-CVLab/PyTorch-StudioGAN/raw/master/logs/CIFAR10/StyleGAN2-D2DCE-train-2021_10_16_13_21_26.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1oOMN_w-Ij3Bx_vQP5z5_PCfbdf1Xd8Dz?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;StyleGAN2 + ADA&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10.477&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2.316&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.049&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.929&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/StyleGAN2-ADA.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/POSTECH-CVLab/PyTorch-StudioGAN/raw/master/logs/CIFAR10/StyleGAN2-ADA-train-2021_10_16_13_21_43.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1A9eEM_iYlaMQQ0ga_ulVXVEyMmGLr8pP?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;StyleGAN2 + ADA + D2D-CE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10.548&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2.325&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.052&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.929&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/StyleGAN2-D2DCE-ADA.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/POSTECH-CVLab/PyTorch-StudioGAN/raw/master/logs/CIFAR10/StyleGAN2-D2DCE-ADA-08-train-2021_10_18_14_12_03.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1TVlpUt9XYwxbAjGV4D7OGkLE3mR8jjkE?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;StyleGAN2 + DiffAug + D2D-CE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10.510&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2.236&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/CIFAR10/StyleGAN2-D2DCE-DiffAug-Rev.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/POSTECH-CVLab/PyTorch-StudioGAN/raw/master/logs/CIFAR10/CIFAR10-StyleGAN2-D2DCE-DiffAug-Rev-train-2022_02_04_16_46_16.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1gR_DmKOgdh4LNoEE4TAVQhEQ_Gdinq4z?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Tiny ImageNet (3x64x64)&lt;/h3&gt; &#xA;&lt;p&gt;When training and evaluating, we used the command below.&lt;/p&gt; &#xA;&lt;p&gt;With 4 TITAN RTX GPUs, training BigGAN takes about 2 days.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0,...,N python3 src/main.py -t -hdf5 -l -batch_stat -metrics is fid prdc -ref &#34;valid&#34; -cfg CONFIG_PATH -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;IS, FID, and F_beta values are computed using 10K validation and 10K generated Images.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Method&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Reference&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;IS(⭡)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;FID(⭣)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;F_1/8(⭡)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;F_8(⭡)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Cfg&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Log&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Weights&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;DCGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;5.640&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;91.625&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.606&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.391&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/DCGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/DCGAN-train-2021_01_01_08_11_26.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1unNCrGZarh5605yExX7L9nGaqSmZYoz3?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;LSGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;5.381&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;90.008&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.638&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.390&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/LSGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/LSGAN-train-2021_01_01_08_13_17.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1U011WruNfOX8KWpfMoNwufRPlG93q10h?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;GGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;5.146&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;102.094&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.503&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.307&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/GGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/GGAN-train-2021_01_01_08_13_58.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1A4RS05pOsVC-sguij7AI7lWcO2x9HQI-?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;WGAN-WC&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9.696&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;41.454&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.940&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.735&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/WGAN-WC.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/WGAN-WC-train-2021_01_15_11_59_38.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1kI7uS9hIHX_wPtbr1f9n8K-G59-89_5E?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;WGAN-GP&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.322&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;311.805&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.016&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.000&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/WGAN-GP.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/WGAN-GP-train-2021_01_15_11_59_40.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1hSCWA0ESZh8DDZpUcPw2eNsJl9ZfT3yO?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;WGAN-DRA&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9.564&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;40.655&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.938&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.724&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/WGAN-DRA.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/WGAN-DRA-train-2021_01_15_11_59_46.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1aJ05B3q0_pMLOS2fd0X0d8lHTRZqYoJZ?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ACGAN-Mod&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6.342&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;78.513&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.668&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.518&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/ACGAN-Mod.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/ACGAN-train-2021_01_15_11_59_50.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1viYGp4-3SoddvJddiS9Pp2Y1QCwi_ufd?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ProjGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6.224&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;89.175&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.626&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.428&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/ProjGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/ProjGAN-train-2021_01_15_11_59_49.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1YKd1gh7-1BGAyTfxVxKtTM3H6LQdPM8T?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;SNGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8.412&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;53.590&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.900&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.703&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/SNGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/SNGAN-train-2021_01_15_11_59_43.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1NYyvlFKrPU3aa88LUJcKyerEyJw_FgUR?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;SAGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8.342&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;51.414&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.898&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.698&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/SAGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/SAGAN-train-2021_01_15_12_16_42.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1J_A8fyaasglEuQB3M9A2u6HdPfsMt5xl?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;BigGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11.998&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;31.920&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.956&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.879&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/BigGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/BigGAN-train-2021_01_18_11_42_25.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1euAxIUzYGom1swguOJApcC-uQfOPx99V?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;BigGAN + CR&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14.887&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;21.488&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.969&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.936&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/BigGAN-CR.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/CRGAN(P)-train-2021_01_01_08_55_18.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/17w4QgeINDNcfOT0fpHLALIRnEZ_Z36ze?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;BigGAN + ICR&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;5.605&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;91.326&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.525&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.399&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/BigGAN-ICR.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/ICRGAN(P)-train-2021_01_04_11_19_15.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1dU-NzqIauXbK_JJf6aWT45IPmtbyti0T?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;BigGAN + DiffAugment&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17.075&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;16.338&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.979&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.971&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/BigGAN-DiffAug.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/DiffAugGAN(P)-train-2021_01_17_04_59_53.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1YXfQgDcrEQCzviSStZsmVKTBlg4gs1Jg?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ContraGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13.494&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;27.027&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.975&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.902&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/ContraGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/ContraGAN-train-2021_01_01_09_35_08.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1wFwCf0Zgjc5ODMNhS_9EPlstNh71ouC_?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ContraGAN + CR&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15.623&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;19.716&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.983&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.941&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/ContraGAN-CR.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/CRGAN(C)-train-2021_01_01_08_56_13.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1Iv1EilJDQ4V5L28KecRDC1ENoWpbVjwe?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ContraGAN + ICR&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15.830&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;21.940&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.980&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.944&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/ContraGAN-ICR.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/ICRGAN(C)-train-2021_01_03_12_11_56.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1VxSRKEk3ZPoNSU1GGzY2phJkagmnsYvX?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ContraGAN + DiffAugment&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17.303&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15.755&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.984&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.962&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/ContraGAN-DiffAug.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/DiffAugGAN(C)-train-2021_01_17_04_59_40.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1tk5zDV-HCFEnPhHgST7PzmwR5ZXiaT3S?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ReACGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14.162&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;26.586&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.975&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.897&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/ReACGAN.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/CCMGAN-train-2021_04_26_11_14_49.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1369q8KtPI1_lenz_Qk17Dc77AMsxUh1W?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ReACGAN + CR&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;16.505&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;20.251&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.982&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.934&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/ReACGAN-CR.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/CCMGAN-train-2021_05_03_19_37_26.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1mwVfwHlq8YCqD7Ao2YUsh7DQ1f8_3_lX?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ReACGAN + DiffAugment&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;20.479&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14.348&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.988&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.971&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/Tiny_ImageNet/ReACGAN-DiffAug.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/TINY_IMAGENET/CCMGAN-train-2021_05_03_15_36_29.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1YGMM4iw2qopgAhCaCm7rPEMx2GbTTWX_?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;ImageNet (3x128x128)&lt;/h3&gt; &#xA;&lt;p&gt;When training, we used the command below.&lt;/p&gt; &#xA;&lt;p&gt;With 8 TESLA V100 GPUs, training BigGAN2048 takes about a month.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0,...,N python3 src/main.py -t -hdf5 -l -sync_bn -metrics is fid prdc -ref &#34;valid&#34; -cfg CONFIG_PATH -std_stat -std_max STD_MAX -std_step STD_STEP -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;IS, FID, and F_beta values are computed using 50K validation and 50K generated Images.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Method&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Reference&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;IS(⭡)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;FID(⭣)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;F_1/8(⭡)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;F_8(⭡)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Cfg&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Log&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Weights&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;SNGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;32.247&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;26.792&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.938&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.913&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/ImageNet/SNGAN-256.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/IMAGENET/SNGAN-train-2021_02_05_01_08_08.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1Ek2wAMlxpajL_M8aub4DKQ9B313K8XhS?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;SAGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;29.848&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;34.726&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.849&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.914&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/ImageNet/SAGAN-256.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/IMAGENET/SAGAN-train-2021_02_11_16_18_59.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1ZYaqeeumDgxOPDhRR5QLeLFIpgBJ9S6B?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;BigGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/1809.11096&#34;&gt;Paper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;98.8&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/#footnote_3&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;BigGAN + TTUR&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2006.12681&#34;&gt;Paper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;21.072&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/ImageNet/BigGAN-256-TTUR.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;BigGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;28.633&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;24.684&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.941&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.921&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/ImageNet/BigGAN-256.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/IMAGENET/BigGAN256-train-2021_01_24_03_52_15.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1DNX7-q6N0UgOKTqFG45KKZ1aY2o9pAx2?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;BigGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;99.705&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7.893&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.985&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.989&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/ImageNet/BigGAN-2048.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/IMAGENET/BigGAN2048-train-2020_11_17_15_17_48.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1_RTYZ0RXbVLWufE7bbWPvp8n_QJbA8K0?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ContraGAN + TTUR&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2006.12681&#34;&gt;Paper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;31.101&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;19.693&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.951&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.927&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/ImageNet/ContraGAN-256-TTUR.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/IMAGENET/contra_biggan_imagenet128_hinge_no-train-2020_08_08_18_45_52.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1ywFuPOY1jo6xd6COHaIlnspIThKUotgL?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ContraGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;25.249&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;25.161&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.947&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.855&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/ImageNet/ContraGAN-256.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/IMAGENET/ContraGAN256-train-2021_01_25_13_55_18.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1pbP6LQ00VF7si-LXLvd_D00Pk5_E_JnP?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ReACGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;67.416&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13.907&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.977&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.977&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/ImageNet/ReACGAN-256.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/IMAGENET/CCMGAN256-train-2021_04_30_19_04_27.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1lWw6Oh_Mjc7BKiSUKhWxfgP9QLc45g8a?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;ReACGAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;96.299&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8.206&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.989&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.989&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/ImageNet/ReACGAN-2048.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/logs/IMAGENET/CCMGAN2048-train-2021_06_22_06_11_37.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1XkGZb8nVjpAyYYC8gFRWngiZredIluSo?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;AFHQ (3x512x512) using StyleGAN2&lt;/h3&gt; &#xA;&lt;p&gt;When training and evaluating, we used the command below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CUDA_VISIBLE_DEVICES=0,1,2,3 python3 src/main.py -t -hdf5 -l -mpc -metrics is fid prdc -ref &#34;train&#34; -cfg CONFIG_PATH -data DATA_PATH -save SAVE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;IS, FID, Dns, and Cvg values are computed using 14,630 train and 14,630 generated Images.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Method&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Reference&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;IS(⭡)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;FID(⭣)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Dns(⭡)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Cvg(⭡)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Cfg&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Log&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Weights&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;StyleGAN2 + ADA&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;12.907&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4.992&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.282&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.835&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/AFHQ/StyleGAN2-SPD-ADA.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/POSTECH-CVLab/PyTorch-StudioGAN/raw/master/logs/AFHQ/StyleGAN2-SPD-ADA-train-2021_10_18_16_01_19.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1TjBH8eJTDgpvRdG5d84Wfh62gb9aKWUK?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;StyleGAN2 + ADA + D2D-CE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;StudioGAN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;12.792&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4.950&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/POSTECH-CVLab/PyTorch-StudioGAN/master/src/configs/AFHQ/StyleGAN2-D2DCE-ADA.yaml&#34;&gt;Cfg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/POSTECH-CVLab/PyTorch-StudioGAN/raw/master/logs/AFHQ/StyleGAN2-D2DCE-ADA-train-2021_10_24_03_59_32.log&#34;&gt;Log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1GN5JL6XquzvJkWSsQn00oJguMHCm-w94?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;StudioGAN thanks the following Repos for the code sharing&lt;/h2&gt; &#xA;&lt;p&gt;Exponential Moving Average: &lt;a href=&#34;https://github.com/ajbrock/BigGAN-PyTorch&#34;&gt;https://github.com/ajbrock/BigGAN-PyTorch&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Synchronized BatchNorm: &lt;a href=&#34;https://github.com/vacancy/Synchronized-BatchNorm-PyTorch&#34;&gt;https://github.com/vacancy/Synchronized-BatchNorm-PyTorch&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Self-Attention module: &lt;a href=&#34;https://github.com/voletiv/self-attention-GAN-pytorch&#34;&gt;https://github.com/voletiv/self-attention-GAN-pytorch&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Implementation Details: &lt;a href=&#34;https://github.com/ajbrock/BigGAN-PyTorch&#34;&gt;https://github.com/ajbrock/BigGAN-PyTorch&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Architecture Details: &lt;a href=&#34;https://github.com/google/compare_gan&#34;&gt;https://github.com/google/compare_gan&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;StyleGAN2: &lt;a href=&#34;https://github.com/NVlabs/stylegan2&#34;&gt;https://github.com/NVlabs/stylegan2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;DiffAugment: &lt;a href=&#34;https://github.com/mit-han-lab/data-efficient-gans&#34;&gt;https://github.com/mit-han-lab/data-efficient-gans&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Adaptive Discriminator Augmentation: &lt;a href=&#34;https://github.com/NVlabs/stylegan2&#34;&gt;https://github.com/NVlabs/stylegan2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Tensorflow IS: &lt;a href=&#34;https://github.com/openai/improved-gan&#34;&gt;https://github.com/openai/improved-gan&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Tensorflow FID: &lt;a href=&#34;https://github.com/bioinf-jku/TTUR&#34;&gt;https://github.com/bioinf-jku/TTUR&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pytorch FID: &lt;a href=&#34;https://github.com/mseitzer/pytorch-fid&#34;&gt;https://github.com/mseitzer/pytorch-fid&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Tensorflow Precision and Recall: &lt;a href=&#34;https://github.com/msmsajjadi/precision-recall-distributions&#34;&gt;https://github.com/msmsajjadi/precision-recall-distributions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;PyTorch Improved Precision and Recall: &lt;a href=&#34;https://github.com/clovaai/generative-evaluation-prdc&#34;&gt;https://github.com/clovaai/generative-evaluation-prdc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;PyTorch Density and Coverage: &lt;a href=&#34;https://github.com/clovaai/generative-evaluation-prdc&#34;&gt;https://github.com/clovaai/generative-evaluation-prdc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;PyTorch clean-FID: &lt;a href=&#34;https://github.com/GaParmar/clean-fid&#34;&gt;https://github.com/GaParmar/clean-fid&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;PyTorch-StudioGAN is an open-source library under the MIT license (MIT). However, portions of the library are avaiiable under distinct license terms: StyleGAN2, StyleGAN2-ADA, and StyleGAN3 are licensed under &lt;a href=&#34;https://github.com/POSTECH-CVLab/PyTorch-StudioGAN/raw/master/LICENSE-NVIDIA&#34;&gt;NVIDIA source code license&lt;/a&gt;, Synchronized batch normalization is licensed under &lt;a href=&#34;https://github.com/POSTECH-CVLab/PyTorch-StudioGAN/raw/master/src/sync_batchnorm/LICENSE&#34;&gt;MIT license&lt;/a&gt;, HDF5 generator is licensed under &lt;a href=&#34;https://github.com/POSTECH-CVLab/PyTorch-StudioGAN/raw/master/src/utils/hdf5.py&#34;&gt;MIT license&lt;/a&gt;, differentiable SimCLR-style augmentations is licensed under &lt;a href=&#34;https://github.com/POSTECH-CVLab/PyTorch-StudioGAN/raw/master/src/utils/simclr_aug.py&#34;&gt;MIT license&lt;/a&gt;, and clean-FID is licensed under &lt;a href=&#34;https://github.com/POSTECH-CVLab/PyTorch-StudioGAN/raw/master/src/utils/resize.py&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;StudioGAN is established for the following research projects. Please cite our work if you use StudioGAN.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bib&#34;&gt;@inproceedings{kang2020ContraGAN,&#xA;  title   = {{ContraGAN: Contrastive Learning for Conditional Image Generation}},&#xA;  author  = {Minguk Kang and Jaesik Park},&#xA;  journal = {Conference on Neural Information Processing Systems (NeurIPS)},&#xA;  year    = {2020}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bib&#34;&gt;@inproceedings{kang2021ReACGAN,&#xA;  title   = {{Rebooting ACGAN: Auxiliary Classifier GANs with Stable Training}},&#xA;  author  = {Minguk Kang, Woohyeon Shim, Minsu Cho, and Jaesik Park},&#xA;  journal = {Conference on Neural Information Processing Systems (NeurIPS)},&#xA;  year    = {2021}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;footnote_1&#34;&gt;[1]&lt;/a&gt; Experiments on Tiny ImageNet are conducted using the ResNet architecture instead of CNN.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;footnote_2&#34;&gt;[2]&lt;/a&gt; Our re-implementation of &lt;a href=&#34;https://arxiv.org/abs/1610.09585&#34;&gt;ACGAN (ICML&#39;17)&lt;/a&gt; with slight modifications, which bring strong performance enhancement for the experiment using CIFAR10.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;footnote_3&#34;&gt;[4]&lt;/a&gt; IS is computed using Tensorflow official code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;footnote_4&#34;&gt;[5]&lt;/a&gt; The difference in FID values between the original StyleGAN2 and StudioGAN implementation is caused by the presence of random flip augmentation.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>demisto/content</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/demisto/content</id>
    <link href="https://github.com/demisto/content" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Demisto is now Cortex XSOAR. Automate and orchestrate your Security Operations with Cortex XSOAR&#39;s ever-growing Content Repository. Pull Requests are always welcome and highly appreciated!&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/demisto/content/master/xsoar_content_logo.png&#34; alt=&#34;Content logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/demisto/content&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/demisto/content.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/demisto/content/context:python&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/python/g/demisto/content.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language grade: Python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://open.vscode.dev/demisto/content&#34;&gt;&lt;img src=&#34;https://open.vscode.dev/badges/open-in-vscode.svg?sanitize=true&#34; alt=&#34;Open in Visual Studio Code&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Cortex XSOAR Platform - Content Repository&lt;/h1&gt; &#xA;&lt;h4&gt;Demisto is now Cortex XSOAR.&lt;/h4&gt; &#xA;&lt;p&gt;This repo contains content provided by Demisto to automate and orchestrate your Security Operations. Here we will share our ever-growing list of playbooks, automation scripts, report templates and other useful content.&lt;/p&gt; &#xA;&lt;p&gt;We security folks love to tinker, keep enhancing and sharpening our toolset and we decided to open up everything and make it a collaborative process for the entire security community. We want to create useful knowledge and build flexible, customizable tools, sharing them with each other as we go along.&lt;/p&gt; &#xA;&lt;p&gt;We invite you to use the playbooks and scripts, modify them to suit your needs and see what works for you, get involved in the community discussion and of course remember to give back and contribute so that others can enjoy and learn from your hard work and build upon it to enhance it even further.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to develop and contribute Content, make sure to check our Content Developer Portal at: &lt;a href=&#34;https://xsoar.pan.dev/&#34;&gt;https://xsoar.pan.dev/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome and appreciated. For instructions about adding/modifying content please see our &lt;a href=&#34;https://xsoar.pan.dev/docs/contributing/contributing&#34;&gt;Content Contribution Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Playbooks&lt;/h2&gt; &#xA;&lt;p&gt;The Cortex XSOAR Platform includes a visual playbook editor - you can add and modify tasks, create control flow according to answers returned by your queries, and automate everything with your existing security tools, services and products. You can also export your work to a file in the COPS format, and import playbooks shared by your peers who have done the same.&lt;/p&gt; &#xA;&lt;p&gt;We will be releasing more and more playbooks for interesting scenarios, so stay tuned. If you are working on an interesting playbook of your own, feel free to send us a Pull Request and let&#39;s build it together.&lt;/p&gt; &#xA;&lt;p&gt;The spec for our open playbook format, COPS, can be found &lt;a href=&#34;https://github.com/demisto/COPS&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Scripts&lt;/h2&gt; &#xA;&lt;p&gt;These scripts written in Python or Javascript perform Security Operations tasks. The scripts are built to run inside the Cortex XSOAR Platform - they can query or send commands to a long list of existing security products, and react based on the output.&lt;/p&gt; &#xA;&lt;p&gt;You can take your logic and the way you want to work and write your own scripts, allowing for maximum flexibility. The services and products you use can be online Cloud-based or on-premises setups, and we have tools to support more complex topologies such as when the product&#39;s subnet is firewalled off.&lt;/p&gt; &#xA;&lt;h2&gt;Integrations&lt;/h2&gt; &#xA;&lt;p&gt;Integrations written in Javascript or Python enable the Cortex XSOAR Platform to orchestrate security and IT products. Each integration provides capabilities in the form of commands and each command usually reflects a product capability (API) and returns both a human readable and computer readable response.&lt;/p&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;We use docker to run python scripts and integrations in a controlled environment. You can configure an existing docker image from the &lt;a href=&#34;https://hub.docker.com/u/demisto/&#34;&gt;Cortex XSOAR Docker Hub Organization&lt;/a&gt; or create a new docker image to suite your needs. More information about how to use Docker is available &lt;a href=&#34;https://demisto.pan.dev/docs/docker&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Reports&lt;/h2&gt; &#xA;&lt;p&gt;Cortex XSOAR Platform support flexible reports written in JSON. All of our standard reports calculating various incident statistics and metrics are stored in this repo.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Enjoy and feel free to reach out to us on the &lt;a href=&#34;https://www.demisto.com/community/&#34;&gt;DFIR Community Slack channel&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bregman-arie/devops-exercises</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/bregman-arie/devops-exercises</id>
    <link href="https://github.com/bregman-arie/devops-exercises" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Linux, Jenkins, AWS, SRE, Prometheus, Docker, Python, Ansible, Git, Kubernetes, Terraform, OpenStack, SQL, NoSQL, Azure, GCP, DNS, Elastic, Network, Virtualization. DevOps Interview Questions&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/devops_exercises.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; &amp;nbsp;This repo contains questions and exercises on various technical topics, sometimes related to DevOps and SRE&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;📊&lt;/span&gt; &amp;nbsp;There are currently &lt;strong&gt;2292&lt;/strong&gt; exercises and questions&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;📚&lt;/span&gt; &amp;nbsp;To learn more about DevOps and SRE, check the resources in &lt;a href=&#34;https://github.com/bregman-arie/devops-resources&#34;&gt;devops-resources&lt;/a&gt; repository&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &amp;nbsp;You can use these for preparing for an interview but most of the questions and exercises don&#39;t represent an actual interview. Please read &lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/faq.md&#34;&gt;FAQ page&lt;/a&gt; for more details&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;👥&lt;/span&gt; &amp;nbsp;Join our &lt;a href=&#34;https://www.facebook.com/groups/538897960007080&#34;&gt;DevOps community&lt;/a&gt; where we have discussions and share resources on DevOps&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;📝&lt;/span&gt; &amp;nbsp;You can add more exercises by submitting pull requests :) Read about contribution guidelines &lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- ALL-TOPICS-LIST:START --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;center&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/devops/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/devops.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;DevOps&#34;&gt;&lt;br&gt;&lt;b&gt;DevOps&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/cicd/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/cicd.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;cicd&#34;&gt;&lt;br&gt;&lt;b&gt;CI/CD&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/git/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/git.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Git&#34;&gt;&lt;br&gt;&lt;b&gt;Git&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/ansible/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/ansible.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;ansible&#34;&gt;&lt;br&gt;&lt;b&gt;Ansible&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#Network&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/network.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Network&#34;&gt;&lt;br&gt;&lt;b&gt;Network&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#linux&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/linux.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Linux&#34;&gt;&lt;br&gt;&lt;b&gt;Linux&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/software_development/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/programming.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;programming&#34;&gt;&lt;br&gt;&lt;b&gt;Software Development&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/python-exercises&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/python.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Python&#34;&gt;&lt;br&gt;&lt;b&gt;Python&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#go&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/Go.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;go&#34;&gt;&lt;br&gt;&lt;b&gt;Go&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/shell/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/bash.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Bash&#34;&gt;&lt;br&gt;&lt;b&gt;Shell Scripting&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/kubernetes/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/kubernetes.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;kubernetes&#34;&gt;&lt;br&gt;&lt;b&gt;Kubernetes&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#prometheus&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/prometheus.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Prometheus&#34;&gt;&lt;br&gt;&lt;b&gt;Prometheus&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/cloud/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/cloud.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Cloud&#34;&gt;&lt;br&gt;&lt;b&gt;Cloud&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/aws/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/aws.png&#34; width=&#34;100px;&#34; height=&#34;75px;&#34; alt=&#34;aws&#34;&gt;&lt;br&gt;&lt;b&gt;AWS&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/azure/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/azure.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;azure&#34;&gt;&lt;br&gt;&lt;b&gt;Azure&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#gcp&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/googlecloud.png&#34; width=&#34;70px;&#34; height=&#34;70px;&#34; alt=&#34;Google Cloud Platform&#34;&gt;&lt;br&gt;&lt;b&gt;Google Cloud Platform&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#openstack&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/openstack.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;openstack&#34;&gt;&lt;br&gt;&lt;b&gt;OpenStack&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/security/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/security.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;security&#34;&gt;&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#operating-system&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/os.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Operating System&#34;&gt;&lt;br&gt;&lt;b&gt;Operating System&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#monitoring&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/monitoring.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Monitoring&#34;&gt;&lt;br&gt;&lt;b&gt;Monitoring&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#elastic&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/elastic.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Elastic&#34;&gt;&lt;br&gt;&lt;b&gt;Elastic&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#virtualization&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/virtualization.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Virtualization&#34;&gt;&lt;br&gt;&lt;b&gt;Virtualization&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/dns/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/dns.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;DNS&#34;&gt;&lt;br&gt;&lt;b&gt;DNS&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#Misc&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/general.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Misc&#34;&gt;&lt;br&gt;&lt;b&gt;Misc&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#testing&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/testing.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Testing&#34;&gt;&lt;br&gt;&lt;b&gt;Testing&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#databases&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/databases.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Databases&#34;&gt;&lt;br&gt;&lt;b&gt;Databases&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#regex&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/regex.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;RegEx&#34;&gt;&lt;br&gt;&lt;b&gt;Regex&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#system-design&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Design&#34;&gt;&lt;br&gt;&lt;b&gt;System Design&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#hardware&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/hardware.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Hardware&#34;&gt;&lt;br&gt;&lt;b&gt;Hardware&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#big-data&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/big-data.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Big Data&#34;&gt;&lt;br&gt;&lt;b&gt;Big Data&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#certificates&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/certificates.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Certificates&#34;&gt;&lt;br&gt;&lt;b&gt;Certificates&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/containers/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/containers.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Containers&#34;&gt;&lt;br&gt;&lt;b&gt;Containers&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#sql&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/sql.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;sql&#34;&gt;&lt;br&gt;&lt;b&gt;SQL&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/openshift/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/openshift.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;OpenShift&#34;&gt;&lt;br&gt;&lt;b&gt;OpenShift&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#storage&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/storage.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Storage&#34;&gt;&lt;br&gt;&lt;b&gt;Storage&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/soft_skills/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/HR.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;HR&#34;&gt;&lt;br&gt;&lt;b&gt;Soft Skills&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/terraform/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/terraform.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Terraform&#34;&gt;&lt;br&gt;&lt;b&gt;Terraform&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#mongo&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/mongo.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Mongo&#34;&gt;&lt;br&gt;&lt;b&gt;Mongo&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#puppet&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/puppet.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;puppet&#34;&gt;&lt;br&gt;&lt;b&gt;Puppet&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#distributed&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/distributed.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Distributed&#34;&gt;&lt;br&gt;&lt;b&gt;Distributed&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#questions-you-ask&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/you.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;you&#34;&gt;&lt;br&gt;&lt;b&gt;Questions you can ask&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/perl/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/perl.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;perl&#34;&gt;&lt;br&gt;&lt;b&gt;Perl&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/center&gt; &#xA;&lt;!-- markdownlint-enable --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-TOPICS-LIST:END --&gt; &#xA;&lt;h2&gt;Network&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you need in order to communicate?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A common language (for the two ends to understand)&lt;/li&gt; &lt;li&gt;A way to address who do you want to communicate with&lt;/li&gt; &lt;li&gt;A Connection (so the content of of the communication can reach the recipients) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is TCP/IP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A set of protocols that define how two or more devices can communicate with each other. To learn more about TCP/IP, read &lt;a href=&#34;http://www.penguintutor.com/linux/basic-network-reference&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is APIPA?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; APIPA is a set of it addresses that devices are allocated when the main DHCP server is not reachable &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What ip range does APIPA use?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; APIPA uses the ip range: 169.254.0.1 - 169.254.255.254. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Ethernet?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Ethernet simply refers to the most common type of Local Area Network (LAN) used today. A LAN—in contrast to a WAN (Wide Area Network), which spans a larger geographical area—is a connected network of computers in a small area, like your office, college campus, or even home. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a MAC address? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A MAC address is a unique identification number or code used to identify individual devices on the network.&lt;/p&gt; &lt;p&gt;Packets that are sent on the ethernet are always coming from a MAC address and sent to a MAC address. If a network adapter is receiving a packet, it is comparing the packet’s destination MAC address to the adapter’s own MAC address.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When is this MAC address used?: ff:ff:ff:ff:ff:ff&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;When a device sends a packet to the broadcast MAC address (FF:FF:FF:FF:FF:FF​), it is delivered to all stations on the local network. Ethernet broadcasts are used to resolve IP addresses to MAC addresses (by ARP) at the datalink layer . &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an IP address?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An Internet Protocol address (IP address) is a numerical label assigned to each device connected to a computer network that uses the Internet Protocol for communication.An IP address serves two main functions: host or network interface identification and location addressing. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain subnet mask and given an example&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A Subnet mask is a 32-bit number that masks an IP address, and divides the IP address into network address and host address. Subnet Mask is made by setting network bits to all &#34;1&#34;s and setting host bits to all &#34;0&#34;s. Within a given network, two host addresses are reserved for special purpose, and cannot be assigned to hosts. The &#34;0&#34; address is assigned a network address and &#34;255&#34; is assigned to a broadcast address, and they cannot be assigned to hosts.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;For Example&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;| Address Class | No of Network Bits | No of Host Bits | Subnet mask     | CIDR notation |&#xA;| ------------- | ------------------ | --------------- | --------------- | ------------- |&#xA;| A             | 8                  | 24              | 255.0.0.0       | /8            |&#xA;| A             | 9                  | 23              | 255.128.0.0     | /9            |&#xA;| A             | 12                 | 20              | 255.240.0.0     | /12           |&#xA;| A             | 14                 | 18              | 255.252.0.0     | /14           |&#xA;| B             | 16                 | 16              | 255.255.0.0     | /16           |&#xA;| B             | 17                 | 15              | 255.255.128.0   | /17           |&#xA;| B             | 20                 | 12              | 255.255.240.0   | /20           |&#xA;| B             | 22                 | 10              | 255.255.252.0   | /22           |&#xA;| C             | 24                 | 8               | 255.255.255.0   | /24           |&#xA;| C             | 25                 | 7               | 255.255.255.128 | /25           |&#xA;| C             | 28                 | 4               | 255.255.255.240 | /28           |&#xA;| C             | 30                 | 2               | 255.255.255.252 | /30           |&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a private IP address? In which scenarios/system designs, one should use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Private IP addresses are assigned to the hosts in the same network to communicate among one another. As the name &#34;private&#34; suggests, the devices having the priate IP addresses assigned can&#39;t be reached by the devices from any external network. For example, if I am living in a hostel and I want my hostelmates to join the game server I have hosted, I will ask them to join via my server&#39;s private IP address, since the network is local to the hostel. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a public IP address? In which scenarios/system designs, one should use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; A public IP address is the public facing IP address. In the event that you was hosting a game server that you want your friends to join, you will give your friends your public IP address to allow their computers to identify and locate your network and server in order for the connection to take place. One time that you would not need to use a public facing IP address is in the event that you was playing with friends who was connected to the same network as you, in that case, you would use a private ip address. In order for someone to be able to connect to your server that is located internally, you will have to setup a port forward to tell your router to allow traffic from the public domain into your network and vice versa. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the OSI model. What layers there are? What each layer is responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Application: user end (HTTP is here)&lt;/li&gt; &#xA;   &lt;li&gt;Presentation: establishes context between application-layer entities (Encryption is here)&lt;/li&gt; &#xA;   &lt;li&gt;Session: establishes, manages and terminates the connections&lt;/li&gt; &#xA;   &lt;li&gt;Transport: transfers variable-length data sequences from a source to a destination host (TCP &amp;amp; UDP are here)&lt;/li&gt; &#xA;   &lt;li&gt;Network: transfers datagrams from one network to another (IP is here)&lt;/li&gt; &#xA;   &lt;li&gt;Data link: provides a link between two directly connected nodes (MAC is here)&lt;/li&gt; &#xA;   &lt;li&gt;Physical: the electrical and physical spec the data connection (Bits are here)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can read more about the OSI model in &lt;a href=&#34;http://www.penguintutor.com/linux/basic-network-reference&#34;&gt;penguintutor.com&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;For each of the following determine to which OSI layer it belongs: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Error correction&lt;/li&gt; &#xA;   &lt;li&gt;Packets routing&lt;/li&gt; &#xA;   &lt;li&gt;Cables and electrical signals&lt;/li&gt; &#xA;   &lt;li&gt;MAC address&lt;/li&gt; &#xA;   &lt;li&gt;IP address&lt;/li&gt; &#xA;   &lt;li&gt;Terminate connections&lt;/li&gt; &#xA;   &lt;li&gt;3 way handshake&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;li&gt;Error correction - Data link&lt;/li&gt; &lt;li&gt;Packets routing - Network&lt;/li&gt; &lt;li&gt;Cables and electrical signals - Physical&lt;/li&gt; &lt;li&gt;MAC address - Data link&lt;/li&gt; &lt;li&gt;IP address - Network&lt;/li&gt; &lt;li&gt;Terminate connections - Session&lt;/li&gt; &lt;/b&gt;&#xA; &lt;li&gt;&lt;b&gt;3 way handshake - Transport &lt;/b&gt;&lt;/li&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What delivery schemes are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Unitcast: One to one communication where there is one sender and one receiver.&lt;/p&gt; &lt;p&gt;Broadcast: Sending a message to everyone in the network. The address ff:ff:ff:ff:ff:ff is used for broadcasting. Two common protocols which use broadcast are ARP and DHCP.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Multicast: Sending a message to a group of subscribers. It can be one-to-many or many-to-many. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is CSMA/CD? Is it used in modern ethernet networks?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;CSMA/CD stands for Carrier Sense Multiple Access / Collision Detection. Its primarily focus it to manage access to shared medium/bus where only one host can transmit at a given point of time.&lt;/p&gt; &lt;p&gt;CSMA/CD algorithm:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Before sending a frame, it checks whether another host already transmitting a frame.&lt;/li&gt; &lt;li&gt;If no one transmitting, it starts transmitting the frame.&lt;/li&gt; &lt;li&gt;If two hosts transmitted at the same time, we have a collision.&lt;/li&gt; &lt;li&gt;Both hosts stop sending the frame and they send to everyone a &#39;jam signal&#39; notifying everyone that a collision occurred&lt;/li&gt; &lt;li&gt;They are waiting for a random time before sending again&lt;/li&gt; &lt;li&gt;Once each host waited for a random time, they try to send the frame again and so the &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the following network devices and the difference between them: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;router&lt;/li&gt; &#xA;   &lt;li&gt;switch&lt;/li&gt; &#xA;   &lt;li&gt;hub&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does a router works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A router is a physical or virtual appliance that passes information between two or more packet-switched computer networks. A router inspects a given data packet&#39;s destination Internet Protocol address (IP address), calculates the best way for it to reach its destination and then forwards it accordingly.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NAT?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Network Address Translation (NAT) is a process in which one or more local IP address is translated into one or more Global IP address and vice versa in order to provide Internet access to the local hosts.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a proxy? How does it works? What do we need it for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A proxy server acts as a gateway between you and the internet. It’s an intermediary server separating end users from the websites they browse.&lt;/p&gt; &lt;p&gt;If you’re using a proxy server, internet traffic flows through the proxy server on its way to the address you requested. The request then comes back through that same proxy server (there are exceptions to this rule), and then the proxy server forwards the data received from the website to you.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;roxy servers provide varying levels of functionality, security, and privacy depending on your use case, needs, or company policy. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is TCP? How does it works? What is the 3 way handshake?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;TCP 3-way handshake or three-way handshake is a process which is used in a TCP/IP network to make a connection between server and client.&lt;/p&gt; &lt;p&gt;A three-way handshake is primarily used to create a TCP socket connection. It works when:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A client node sends a SYN data packet over an IP network to a server on the same or an external network. The objective of this packet is to ask/infer if the server is open for new connections.&lt;/li&gt; &lt;li&gt;The target server must have open ports that can accept and initiate new connections. When the server receives the SYN packet from the client node, it responds and returns a confirmation receipt – the ACK packet or SYN/ACK packet.&lt;/li&gt; &lt;li&gt;The client node receives the SYN/ACK from the server and responds with an ACK packet. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is round-trip delay or round-trip time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Round-trip_delay&#34;&gt;wikipedia&lt;/a&gt;: &#34;the length of time it takes for a signal to be sent plus the length of time it takes for an acknowledgement of that signal to be received&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bonus question: what is the RTT of LAN? &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does SSL handshake work?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between TCP and UDP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;TCP establishes a connection between the client and the server to guarantee the order of the packages, on the other hand, UDP does not establish a connection between client and server and doesn&#39;t handle package order. This makes UDP more lightweight than TCP and a perfect candidate for services like streaming.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;http://www.penguintutor.com/linux/basic-network-reference&#34;&gt;Penguintutor.com&lt;/a&gt; provides a good explanation. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What TCP/IP protocols are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;default gateway&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A default gateway serves as an access point or IP router that a networked computer uses to send information to a computer in another network or the internet. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ARP? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;ARP stands for Address Resolution Protocol. When you try to ping an IP address on your local network, say 192.168.1.1, your system has to turn the IP address 192.168.1.1 into a MAC address. This involves using ARP to resolve the address, hence its name.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Systems keep an ARP look-up table where they store information about what IP addresses are associated with what MAC addresses. When trying to send a packet to an IP address, the system will first consult this table to see if it already knows the MAC address. If there is a value cached, ARP is not used. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is TTL? What does it helps to prevent?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DHCP? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It stands for Dynamic Host Configuration Protocol, and allocates IP addresses, subnet masks and gateways to hosts. This is how it works:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A host upon entering a network, broadcasts a message in search of a DHCP server (DHCP DISCOVER)&lt;/li&gt; &#xA;   &lt;li&gt;An offer message is sent back by the DHCP server as a packet containing lease time, subnet mask, IP addresses, etc (DHCP OFFER)&lt;/li&gt; &#xA;   &lt;li&gt;Depending on which offer accepted, the client sends back a reply broadcast letting all DHCP servers know (DHCP REQUEST)&lt;/li&gt; &#xA;   &lt;li&gt;Server sends an acknowledgment (DHCP ACK)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read more &lt;a href=&#34;https://linuxjourney.com/lesson/dhcp-overview&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you have two DHCP servers in the same network? How it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SSL tunneling? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a socket? Where can you see the list of sockets in your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is IPv6? Why should we consider using it if we have IPv4?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is VLAN?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is MTU?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens if you send a packet that is bigger than the MTU?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False?. Ping is using UDP because it doesn&#39;t care about reliable connection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SDN?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ICMP? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NAT? How does it work?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;NAT stands for network address translation. It’s a way to map multiple local private addresses to a public one before transferring the information. Organizations that want multiple devices to employ a single IP address use NAT, as do most home routers. For example, your computer&#39;s private IP could be 192.168.1.100, but your router maps the traffic to it&#39;s public IP (e.g. 1.1.1.1). Any device on the internet would see the traffic coming from your public IP (1.1.1.1) instead of your private IP (192.168.1.100). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which factors affect network performances&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which port number is used in each of the following protocols?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;SSH&lt;/li&gt; &#xA;   &lt;li&gt;SMTP&lt;/li&gt; &#xA;   &lt;li&gt;HTTP&lt;/li&gt; &#xA;   &lt;li&gt;DNS&lt;/li&gt; &#xA;   &lt;li&gt;HTTPS&lt;/li&gt; &#xA;   &lt;li&gt;FTP&lt;/li&gt; &#xA;   &lt;li&gt;SFTP&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;SSH - 22&lt;/li&gt; &lt;li&gt;SMTP - 25&lt;/li&gt; &lt;li&gt;HTTP - 80&lt;/li&gt; &lt;li&gt;DNS - 53&lt;/li&gt; &lt;li&gt;HTTPS - 443&lt;/li&gt; &lt;li&gt;FTP - 21&lt;/li&gt; &lt;li&gt;SFTP - 22 &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Network - Data and Control planes&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;control plane&#34; refers to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The control plane is the part of the network that decides how to route and forward packets to a different location. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;data plane&#34; refers to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The data plane is the part of the network that actually forwards the data/packets. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;management plane&#34; refers to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Refers to monitoring and management functions. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;To which plane (data, control, ...) is creating routing tables belongs to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Control Plane. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Spanning Tree Protocol (STP)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is link aggregation? Why is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Asymmetric Routing? How do deal with it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What overlay (tunnel) protocols are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is GRE? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is VXLAN? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SNAT?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain OSPF&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is latency?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Latency is the time taken for an information to reach its destination from the source. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is bandwidth?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bandwidth is the capacity of a communication channel to measure how much data the latter can handle over a specific time period. More bandwidth would imply more traffic handling and thus more data transfer. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is throughput?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Throughput refers to the measurement of the real amount of data transferred over a certain period of time across any transmission channel. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When performing a search query, what is more important, latency or throughput? And how to assure that what managing global infrastructure?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Latency. To have a good latency, a search query should be forwarded to the closest datacenter. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When uploading a video, what is more important, latency or throughput? And how to assure that?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Throughput. To have a good throughput, the upload stream should be routed to an underutilized link. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What other considerations (except latency and throughput) are there when forwarding requests?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Keep caches updated (which means the request could be forwarded not to the closest datacenter) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Spine &amp;amp; Leaf&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Network Congestion? What can cause it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you tell me about UDP packet format? What about TCP packet format? How is it different?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the exponential backoff algorithm? Where is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using Hamming code, what would be the code word for the following data word 100111010001101?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;00110011110100011101 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Give examples of protocols found in the application layer&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Hypertext Transfer Protocol (HTTP) - used for the webpages on the internet&lt;/li&gt; &lt;li&gt;Simple Mail Transfer Protocol (SMTP) - email transmission&lt;/li&gt; &lt;li&gt;Telecommunications Network - (TELNET) - terminal emulation to allow client access to telnet server&lt;/li&gt; &lt;li&gt;File Transfer Protocol (FTP) - facilitates transfer of files between any two machines&lt;/li&gt; &lt;li&gt;Domain Name System (DNS) - domain name translation&lt;/li&gt; &lt;li&gt;Dynamic Host Configuration Protocol (DHCP) - allocates IP addresses, subnet masks and gateways to hosts&lt;/li&gt; &lt;li&gt;Simple Network Management Protocol (SNMP) - gathers data of devices on the network &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Give examples of protocols found in the network Layer&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Internet Protocol (IP) - assists in routing packets from one machine to another&lt;/li&gt; &lt;li&gt;Internet Control Message Protocol (ICMP) - lets one know what is going such as error messages and debugging information &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HSTS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; HTTP Strict Transport Security is a web server directive that informs user agents and web browsers how to handle its connection through a response header sent at the very beginning and back to the browser. This forces connections over HTTPS encryption, disregarding any script&#39;s call to load any resource in that domain over HTTP. &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read more [here](&lt;a href=&#34;https://www.globalsign.com/en/blog/what-is-hsts-and-how-do-i-use-it#:~:text=HTTP%20Strict%20Transport%20Security%20(HSTS,and%20back%20to%20the%20browser.)&#34;&gt;https://www.globalsign.com/en/blog/what-is-hsts-and-how-do-i-use-it#:~:text=HTTP%20Strict%20Transport%20Security%20(HSTS,and%20back%20to%20the%20browser.)&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Network - Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Internet? Is it the same as the World Wide Web?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The internet refers to network of networks, transferring huge amounts of data around the globe.&lt;br&gt; The World Wide Web is an application running on millions of server, on top of the internet, accessed through what is know as the web browser &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the ISP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;ISP (Internet Service Provider) is the local internet company provider. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Linux&lt;/h2&gt; &#xA;&lt;h4&gt;Linux Master Application&lt;/h4&gt; &#xA;&lt;p&gt;A completely free application for testing your knowledge on Linux&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.codingshell.linuxmaster&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/linux_master.jpeg&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Linux Self Assessment&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is your experience with Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Only you know :)&lt;/p&gt; &lt;p&gt;For example:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Administration&lt;/li&gt; &lt;li&gt;Troubleshooting &amp;amp; Debugging&lt;/li&gt; &lt;li&gt;Storage&lt;/li&gt; &lt;li&gt;Networking&lt;/li&gt; &lt;li&gt;Development&lt;/li&gt; &lt;li&gt;Deployments &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what each of the following commands does and give an example on how to use it: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;touch&lt;/li&gt; &#xA;   &lt;li&gt;ls&lt;/li&gt; &#xA;   &lt;li&gt;rm&lt;/li&gt; &#xA;   &lt;li&gt;cat&lt;/li&gt; &#xA;   &lt;li&gt;cp&lt;/li&gt; &#xA;   &lt;li&gt;mkdir&lt;/li&gt; &#xA;   &lt;li&gt;pwd&lt;/li&gt; &#xA;   &lt;li&gt;cd&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;touch - update file&#39;s timestamp. More commonly used for creating files&lt;/li&gt; &lt;li&gt;ls - listing files and directories&lt;/li&gt; &lt;li&gt;rm - remove files and directories&lt;/li&gt; &lt;li&gt;cat - create, view and concatenate files&lt;/li&gt; &lt;li&gt;cp - copy files and directories&lt;/li&gt; &lt;li&gt;mkdir - create directories&lt;/li&gt; &lt;li&gt;pwd - print current working directory (= at what path the user currently located)&lt;/li&gt; &lt;li&gt;cd - change directory &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What each of the following commands does? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;cd /&lt;/li&gt; &#xA;   &lt;li&gt;cd ~&lt;/li&gt; &#xA;   &lt;li&gt;cd&lt;/li&gt; &#xA;   &lt;li&gt;cd ..&lt;/li&gt; &#xA;   &lt;li&gt;cd .&lt;/li&gt; &#xA;   &lt;li&gt;cd -&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;cd / -&amp;gt; change to the root directory&lt;/li&gt; &lt;li&gt;cd ~ -&amp;gt; change to your home directory&lt;/li&gt; &lt;li&gt;cd -&amp;gt; change to your home directory&lt;/li&gt; &lt;li&gt;cd .. -&amp;gt; change to the directory above your current i.e parent directory&lt;/li&gt; &lt;li&gt;cd . -&amp;gt; change to the directory you currently in&lt;/li&gt; &lt;li&gt;cd - -&amp;gt; change to the last visited path &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Some of the commands in the previous question can be run with the -r/-R flag. What does it do? Give an example to when you would use it&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The -r (or -R in some commands) flag allows the user to run a certain command recursively. For example, listing all the files under the following tree is possible when done recursively (&lt;code&gt;ls -R&lt;/code&gt;):&lt;/p&gt; &lt;p&gt;/dir1/ dir2/ file1 file2 dir3/ file3&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;To list all the files, one can run &lt;code&gt;ls -R /dir1&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain each field in the output of `ls -l` command&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It shows a detailed list of files in a long format. From the left: &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;file permissions, number of links, owner name, owner group, file size, timestamp of last modification and directory/file name &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are hidden files/directories? How to list them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;These are files directly not displayed after performing a standard ls direct listing. An example of these files are .bashrc which are used to execute some scripts. Some also store configuration about services on your host like .KUBECONFIG. The command used to list them is, &lt;code&gt;ls -a&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do &amp;gt; and &amp;lt; do in terms of input and output for programs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; They take in input (&amp;lt;) and output for a given file (&amp;gt;) using stdin and stdout. &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;myProgram &amp;lt; input.txt &amp;gt; executionOutput.txt&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what each of the following commands does and give an example on how to use it: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;sed&lt;/li&gt; &#xA;   &lt;li&gt;grep&lt;/li&gt; &#xA;   &lt;li&gt;cut&lt;/li&gt; &#xA;   &lt;li&gt;awk&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;sed: a stream editor. Can be used for various purposes like replacing a word in a file: &lt;code&gt;sed -i s/salad/burger/g&lt;/code&gt;&lt;/li&gt; &lt;li&gt;grep: a search tool. Used to search, count or match a text in a file: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;searching for any line that contains a word in a file: &lt;code&gt;grep &#39;word&#39; file.md&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;or displaying the total number of times a string appears in a file: &lt;code&gt;grep -c &#39;This is a string&#39; file.md&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;cut: a tool for cutting out selected portions of each line of a file: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;syntax: &lt;code&gt;cut OPTION [FILE]&lt;/code&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;cutting first two bytes from a word in a file: &lt;code&gt;cut -b 1-2 file.md&lt;/code&gt;, output: &lt;code&gt;wo&lt;/code&gt; &lt;/li&gt;&#xA;      &lt;/ul&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;      &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to rename the name of a file or a directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the &lt;code&gt;mv&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Specify which command would you use (and how) for each of the following scenarios &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Remove a directory with files&lt;/li&gt; &#xA;   &lt;li&gt;Display the content of a file&lt;/li&gt; &#xA;   &lt;li&gt;Provides access to the file /tmp/x for everyone&lt;/li&gt; &#xA;   &lt;li&gt;Change working directory to user home directory&lt;/li&gt; &#xA;   &lt;li&gt;Replace every occurrence of the word &#34;good&#34; with &#34;great&#34; in the file /tmp/y&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;code&gt;rm -rf dir&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;cat or less&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;chmod 777 /tmp/x&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;cd ~&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;sed -i s/good/great/g /tmp/y&lt;/code&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you check what is the path of a certain command?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;whereis&lt;/li&gt; &lt;li&gt;which &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between these two commands? Will it result in the same output? &lt;pre&gt;&lt;code&gt;echo hello world&#xA;echo &#34;hello world&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The echo command receives two separate arguments in the first execution and in the second execution it gets one argument which is the string &#34;hello world&#34;. The output will be the same. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain piping. How do you perform piping?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using a pipe in Linux, allows you to send the output of one command to the input of another command. For example: &lt;code&gt;cat /etc/services | wc -l&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Fix the following commands: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;sed &#34;s/1/2/g&#39; /tmp/myFile&lt;/li&gt; &#xA;   &lt;li&gt;find . -iname *.yaml -exec sed -i &#34;s/1/2/g&#34; {} ;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;sed &#39;s/1/2/g&#39; /tmp/myFile  # sed &#34;s/1/2/g&#34; is also fine&#xA;find . -iname &#34;*.yaml&#34; -exec sed -i &#34;s/1/2/g&#34; {} \;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check which commands you executed in the past?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;history command or .bash_history file &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Running the command &lt;code&gt;df&lt;/code&gt; you get &#34;command not found&#34;. What could be wrong and how to fix it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;p&gt;&lt;b&gt; Most likely the default/generated $PATH was somehow modified or overridden thus not containing &lt;code&gt;/bin/&lt;/code&gt; where df would normally go. This issue could also happen if bash_profile or any configuration file of your interpreter was wrongly modified, causing erratics behaviours. You would solve this by fixing your $PATH variable: &lt;/b&gt;&lt;/p&gt;&#xA; &lt;p&gt;&lt;b&gt;As to fix it there are several options:&lt;/b&gt;&lt;/p&gt;&#xA; &lt;b&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Manually adding what you need to your $PATH &lt;code&gt;PATH=&#34;$PATH&#34;:/user/bin:/..etc&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;You have your weird env variables backed up.&lt;/li&gt; &#xA;   &lt;li&gt;You would look for your distro default $PATH variable, copy paste using method #1&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Note: There are many ways of getting errors like this: if bash_profile or any configuration file of your interpreter was wrongly modified; causing erratics behaviours, permissions issues, bad compiled software (if you compiled it by yourself)... there is no answer that will be true 100% of the time. &lt;/b&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you schedule tasks periodically?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can use the commands &lt;code&gt;cron&lt;/code&gt; and &lt;code&gt;at&lt;/code&gt;. With cron, tasks are scheduled using the following format:&lt;/p&gt; &lt;p&gt;&lt;code&gt;*/30 * * * * bash myscript.sh&lt;/code&gt; Executes the script every 30 minutes.&lt;/p&gt; &lt;p&gt;&#xA;   &lt;minute&gt; &#xA;    &lt;hour&gt; &#xA;     &lt;day of month&gt; &#xA;      &lt;month&gt; &#xA;       &lt;day of week&gt; &#xA;        &lt;command to execute&gt;&#xA;       &lt;/day&gt;&#xA;      &lt;/month&gt;&#xA;     &lt;/day&gt;&#xA;    &lt;/hour&gt;&#xA;   &lt;/minute&gt;&lt;/p&gt; &lt;p&gt;The tasks are stored in a cron file, you can write in it using &lt;code&gt;crontab -e&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Alternatively if you are using a distro with systemd it&#39;s recommended to use systemd timers. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - I/O Redirection&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Linux I/O redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Demonstrate Linux output redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;ls &amp;gt; ls_output.txt &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Demonstrate Linux stderr output redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;yippiekaiyay 2&amp;gt; ls_output.txt &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Demonstrate Linux stderr to stdout redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;yippiekaiyay 1&amp;gt;&amp;amp;2 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of running the following command? &lt;code&gt;yippiekaiyay 1&amp;gt;&amp;amp;2 die_hard&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An output similar to: &lt;code&gt;yippikaiyay: command not found...&lt;/code&gt;&lt;br&gt; The file &lt;code&gt;die_hard&lt;/code&gt; will not be created &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux FHS&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In Linux FHS (Filesystem Hierarchy Standard) what is the &lt;code&gt;/&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The root of the filesystem. The beginning of the tree. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is stored in each of the following paths? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;/bin, /sbin, /usr/bin and /usr/sbin&lt;/li&gt; &#xA;   &lt;li&gt;/etc&lt;/li&gt; &#xA;   &lt;li&gt;/home&lt;/li&gt; &#xA;   &lt;li&gt;/var&lt;/li&gt; &#xA;   &lt;li&gt;/tmp&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;binaries&lt;/li&gt; &lt;li&gt;configuration files&lt;/li&gt; &lt;li&gt;home directories of the different users&lt;/li&gt; &lt;li&gt;files that tend to change and be modified like logs&lt;/li&gt; &lt;li&gt;temporary files &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is special about the /tmp directory when compared to other directories?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;/tmp&lt;/code&gt; folder is cleaned automatically, usually upon reboot. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What kind of information one can find in /proc?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What makes /proc different from other filesystems?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? only root can create files in /proc&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. No one can create file in /proc directly (certain operations can lead to files being created in /proc by the kernel). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can be found in /proc/cmdline?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The command passed to the boot loader to run the kernel &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In which path can you find the system devices (e.g. block storage)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux - Permissions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to change the permissions of a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the &lt;code&gt;chmod&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What does the following permissions mean?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;777&lt;/li&gt; &#xA;   &lt;li&gt;644&lt;/li&gt; &#xA;   &lt;li&gt;750&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;pre&gt;&#xA;777 - You give the owner, group and other: Execute (1), Write (2) and Read (4); 4+2+1 = 7.&#xA;644 - Owner has Read (4), Write (2), 4+2 = 6; Group and Other have Read (4).&#xA;750 - Owner has x+r+w, Group has Read (4) and Execute (1); 4+1 = 5. Other have no permissions.&#xA;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What this command does? &lt;code&gt;chmod +x some_file&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It adds execute permissions to all sets i.e user, group and others &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is setgid and setuid&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;setuid is a linux file permission that permits a user to run a file or program with the permissions of the owner of that file. This is possible by elevation of current user privileges.&lt;/li&gt; &lt;li&gt;setgid is a process when executed will run as the group that owns the file. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the purpose of sticky bit?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Its a bit that only allows the owner or the root user to delete or modify the file. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the following commands do? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;chmod&lt;/li&gt; &#xA;   &lt;li&gt;chown&lt;/li&gt; &#xA;   &lt;li&gt;chgrp&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;chmod - changes access permissions to files system objects&lt;/li&gt; &lt;li&gt;chown - changes the owner of file system files and directories&lt;/li&gt; &lt;li&gt;chgrp - changes the group associated with a file system object &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is sudo? How do you set it up?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In order to install packages on the system one must be the root user or use the sudo command&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what are ACLs. For what use cases would you recommend to use them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You try to create a file but it fails. Name at least three different reason as to why it could happen&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;No more disk space&lt;/li&gt; &lt;li&gt;No more inodes&lt;/li&gt; &lt;li&gt;No permissions &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A user accidentally executed the following &lt;code&gt;chmod -x $(which chmod)&lt;/code&gt;. How to fix it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using &lt;code&gt;sudo setfacl -m u::rx /usr/bin/chmod&lt;/code&gt; will set the execute permissions on &lt;code&gt;chmod&lt;/code&gt; for all the users. Post this, the &lt;code&gt;chmod&lt;/code&gt; binary can be used as usual. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - systemd&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is systemd?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;b&gt; Systemd is a daemon (System &#39;d&#39;, d stands for daemon). &lt;p&gt;A daemon is a program that runs in the background without direct control of the user, although the user can at any time talk to the daemon.&lt;/p&gt; &lt;p&gt;systemd has many features such as user processes control/tracking, snapshot support, inhibitor locks..&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;If we visualize the unix/linux system in layers, systemd would fall directly after the linux kernel.&lt;br&gt; Hardware -&amp;gt; Kernel -&amp;gt; &lt;u&gt;Daemons&lt;/u&gt;, System Libraries, Server Display. &lt;/b&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to start or stop a service?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;To start a service: &lt;code&gt;systemctl start &amp;lt;service name&amp;gt;&lt;/code&gt; To stop a service: &lt;code&gt;systemctl stop &amp;lt;service name&amp;gt;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check the status of a service?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;systemctl status &amp;lt;service name&amp;gt;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;On a system which uses systemd, how would you display the logs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;journalctl&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe how to make a certain process/app a service&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux - Troubleshooting &amp;amp; Debugging&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where system logs are located?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;/var/log &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to follow file&#39;s content as it being appended without opening the file every time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;tail -f &amp;lt;file_name&amp;gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for troubleshooting and debugging &lt;b&gt;network&lt;/b&gt; issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;dstat -t&lt;/code&gt; is great for identifying network and disk issues. &lt;code&gt;netstat -tnlaup&lt;/code&gt; can be used to see which processes are running on which ports. &lt;code&gt;lsof -i -P&lt;/code&gt; can be used for the same purpose as netstat. &lt;code&gt;ngrep -d any metafilter&lt;/code&gt; for matching regex against payloads of packets. &lt;code&gt;tcpdump&lt;/code&gt; for capturing packets &lt;code&gt;wireshark&lt;/code&gt; same concept as tcpdump but with GUI (optional). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for troubleshooting and debugging &lt;b&gt;disk &amp;amp; file system&lt;/b&gt; issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;dstat -t&lt;/code&gt; is great for identifying network and disk issues. &lt;code&gt;opensnoop&lt;/code&gt; can be used to see which files are being opened on the system (in real time). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for troubleshooting and debugging &lt;b&gt;process&lt;/b&gt; issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;strace&lt;/code&gt; is great for understanding what your program does. It prints every system call your program executed. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for debugging CPU related issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;top&lt;/code&gt; will show you how much CPU percentage each process consumes &lt;code&gt;perf&lt;/code&gt; is a great choice for sampling profiler and in general, figuring out what your CPU cycles are &#34;wasted&#34; on &lt;code&gt;flamegraphs&lt;/code&gt; is great for CPU consumption visualization (&lt;a href=&#34;http://www.brendangregg.com/flamegraphs.html&#34;&gt;http://www.brendangregg.com/flamegraphs.html&lt;/a&gt;) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You get a call from someone claiming &#34;my system is SLOW&#34;. What do you do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Check with &lt;code&gt;top&lt;/code&gt; for anything unusual&lt;/li&gt; &lt;li&gt;Run &lt;code&gt;dstat -t&lt;/code&gt; to check if it&#39;s related to disk or network.&lt;/li&gt; &lt;li&gt;Check if it&#39;s network related with &lt;code&gt;sar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Check I/O stats with &lt;code&gt;iostat&lt;/code&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain iostat output&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to debug binaries?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between CPU load and utilization?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How you measure time execution of a program?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux - Kernel&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a kernel, and what does it do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The kernel is part of the operating system and is responsible for tasks like:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Allocating memory&lt;/li&gt; &lt;li&gt;Schedule processes&lt;/li&gt; &lt;li&gt;Control CPU &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you find out which Kernel version your system is using?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;uname -a&lt;/code&gt; command &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Linux kernel module and how do you load a new module?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain user space vs. kernel space&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The operating system executes the kernel in protected memory to prevent anyone from changing (and risking it crashing). This is what is known as &#34;Kernel space&#34;. &#34;User space&#34; is where users executes their commands or applications. It&#39;s important to create this separation since we can&#39;t rely on user applications to not tamper with the kernel, causing it to crash.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Applications can access system resources and indirectly the kernel space by making what is called &#34;system calls&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In what phases of kernel lifecycle, can you change its configuration?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Build time (when it&#39;s compiled)&lt;/li&gt; &lt;li&gt;Boot time (when it starts)&lt;/li&gt; &lt;li&gt;Runtime (once it&#39;s already running) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where can you find kernel&#39;s configuration?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Usually it will reside in &lt;code&gt;/boot/config-&amp;lt;kernel version&amp;gt;.&amp;lt;os release&amp;gt;.&amp;lt;arch&amp;gt;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where can you find the file that contains the command passed to the boot loader to run the kernel?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;/proc/cmdline&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to list kernel&#39;s runtime parameters?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;sysctl -a&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Will running &lt;code&gt;sysctl -a&lt;/code&gt; as a regular user vs. root, produce different result?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Yes, you might notice that in most systems, when running &lt;code&gt;systctl -a&lt;/code&gt; with root, you&#39;ll get more runtime parameters compared to executing the same command with a regular user. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You would like to enable IPv4 forwarding in the kernel, how would you do it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;sudo sysctl net.ipv4.ip_forward=1&lt;/code&gt;&lt;/p&gt; &lt;p&gt;To make it persistent (applied after reboot for example): insert &lt;code&gt;net.ipv4.ip_forward = 1&lt;/code&gt; into &lt;code&gt;/etc/sysctl.conf&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another way to is to run &lt;code&gt;echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How &lt;code&gt;sysctl&lt;/code&gt; applies the changes to kernel&#39;s runtime parameters the moment you run sysctl command?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;If you &lt;code&gt;strace&lt;/code&gt; the sysctl command you can see it does it by changing the file under /proc/sys/...&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In the past it was done with sysctl system call, but it was deprecated at some point. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How changes to kernel runtime parameters persist? (applied even after reboot to the system for example)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;There is a service called &lt;code&gt;systemd-sysctl&lt;/code&gt; that takes the content of /etc/sysctl.conf and applies it. This is how changes persist, even after reboot, when they are written in /etc/sysctl.conf &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are the changes you make to kernel parameters in a container, affects also the kernel parameters of the host on which the container runs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;No. Containers have their own /proc filesystem so any change to kernel parameters inside a container, are not affecting the host or other containers running on that host. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - SSH&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SSH? How to check if a Linux server is running SSH?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/SSH_(Secure_Shell)&#34;&gt;Wikipedia Definition&lt;/a&gt;: &#34;SSH or Secure Shell is a cryptographic network protocol for operating network services securely over an unsecured network.&#34;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.hostinger.com/tutorials/ssh-tutorial-how-does-ssh-work&#34;&gt;Hostinger.com Definition&lt;/a&gt;: &#34;SSH, or Secure Shell, is a remote administration protocol that allows users to control and modify their remote servers over the Internet.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An SSH server will have SSH daemon running. Depends on the distribution, you should be able to check whether the service is running (e.g. systemctl status sshd). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why SSH is considered better than telnet?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Telnet also allows you to connect to a remote host but as opposed to SSH where the communication is encrypted, in telnet, the data is sent in clear text, so it doesn&#39;t considered to be secured because anyone on the network can see what exactly is sent, including passwords. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is stored in &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The file stores the key fingerprints for the clients connecting to the SSH server. This fingerprint creates a trust between the client and the server for future SSH connections. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You try to ssh to a server and you get &#34;Host key verification failed&#34;. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It means that the key of the remote host was changed and doesn&#39;t match the one that stored on the machine (in ~/.ssh/known_hosts). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between SSH and SSL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;ssh-keygen&lt;/code&gt; is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;ssh-keygen&lt;/code&gt; is a tool to generate an authentication key pair for SSH, that consists of a private and a public key. It supports a number of algorithms to generate authentication keys :&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;dsa&lt;/li&gt; &#xA;   &lt;li&gt;ecdsa&lt;/li&gt; &#xA;   &lt;li&gt;ecdsa-sk&lt;/li&gt; &#xA;   &lt;li&gt;ed25519&lt;/li&gt; &#xA;   &lt;li&gt;ed25519-sk&lt;/li&gt; &#xA;   &lt;li&gt;rsa (default)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;One can also specify number of bits in key. Command below generates an SSH key pair with RSA 4096-bits :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ ssh-keygen -t rsa -b 4096&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The output looks like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Generating public/private rsa key pair.&#xA;Enter file in which to save the key (/home/user/.ssh/id_rsa): &#xA;Enter passphrase (empty for no passphrase): &#xA;Enter same passphrase again: &#xA;Your identification has been saved in /home/user/.ssh/id_rsa&#xA;Your public key has been saved in /home/user/.ssh/id_rsa.pub&#xA;The key fingerprint is:&#xA;SHA256:f5MOGnhzYfC0ZCHvbSXXiRiNVYETjxpHcXD5xSojx+M user@mac-book-pro&#xA;The key&#39;s randomart image is:&#xA;+---[RSA 4096]----+&#xA;|        . ..+***o|&#xA;|         o o++*o+|&#xA;|        . =+.++++|&#xA;|         B.oX+. .|&#xA;|        S *=o+   |&#xA;|       . o oE.   |&#xA;|      . + + +    |&#xA;|       . = + .   |&#xA;|        .   .    |&#xA;+----[SHA256]-----+&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;One can check how many bits an SSH key has with :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ ssh-keygen -l -f /home/user/.ssh/id_rsa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Output should look like this :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;4096 SHA256:f5MOGnhzYfC0ZCHvbSXXiRiNVYETjxpHcXD5xSojx+M user@mac-book-pro (RSA)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It shows the key is RSA 4096-bits.&lt;/p&gt; &lt;p&gt;&lt;code&gt;-l&lt;/code&gt; and &lt;code&gt;-f&lt;/code&gt; parameters usage explanation :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;-l          Show the fingerprint of the key file.&#xA;-f filename Filename of the key file.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Learn more : &lt;a href=&#34;https://superuser.com/a/139311&#34;&gt;How can I tell how many bits my ssh key is? - Superuser&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SSH port forwarding?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux - Globbing, Wildcards&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Globbing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are wildcards? Can you give an example of how to use them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what will &lt;code&gt;ls [XYZ]&lt;/code&gt; match&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what will &lt;code&gt;ls [^XYZ]&lt;/code&gt; match&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what will &lt;code&gt;ls [0-5]&lt;/code&gt; match&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What each of the following matches &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;?&lt;/li&gt; &#xA;   &lt;li&gt;*&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;The ? matches any single character&lt;/li&gt; &lt;li&gt;The * matches zero or more characters &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do we grep for in each of the following commands?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;grep &#39;[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}&#39; some_file&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;grep -E &#34;error|failure&#34; some_file&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;grep &#39;[0-9]$&#39; some_file&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;An IP address&lt;/li&gt; &lt;li&gt;The word &#34;error&#34; or &#34;failure&#34;&lt;/li&gt; &lt;li&gt;Lines which end with a number &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which line numbers will be printed when running `grep &#39;\baaa\b&#39;` on the following content: &lt;p&gt;aaa bbb ccc.aaa aaaaaa&lt;/p&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;&lt;p&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;lines 1 and 3. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference single and double quotes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is escaping? What escape character is used for escaping?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an exit code? What exit codes are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;An exit code (or return code) represents the code returned by a child process to its parent process.&lt;/p&gt; &lt;p&gt;0 is an exit code which represents success while anything higher than 1 represents error. Each number has different meaning, based on how the application was developed.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;I consider this as a good blog post to read more about it: &lt;a href=&#34;https://shapeshed.com/unix-exit-codes&#34;&gt;https://shapeshed.com/unix-exit-codes&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Boot Process&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me everything you know about the Linux boot process&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another way to ask this: what happens from the moment you turned on the server until you get a prompt &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is GRUB2?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Secure Boot?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find in /boot?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux Disk &amp;amp; Filesystem&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s an inode?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;For each file (and directory) in Linux there is an inode, a data structure which stores meta data related to the file like its size, owner, permissions, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which of the following is not included in inode: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Link count&lt;/li&gt; &#xA;   &lt;li&gt;File size&lt;/li&gt; &#xA;   &lt;li&gt;File name&lt;/li&gt; &#xA;   &lt;li&gt;File timestamp&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;File name (it&#39;s part of the directory file) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check which disks are currently mounted?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Run &lt;code&gt;mount&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run the &lt;code&gt;mount&lt;/code&gt; command but you get no output. How would you check what mounts you have on your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;cat /proc/mounts&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between a soft link and hard link?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Hard link is the same file, using the same inode. Soft link is a shortcut to another file, using a different inode. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? You can create an hard link for a directory&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? You can create a soft link between different filesystems&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Directories always have by minimum 2 links&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you delete the original file in case of soft link and hard link?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you check what type of filesystem is used in /home?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;There are many answers for this question. One way is running &lt;code&gt;df -T&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a swap partition? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create a &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;new empty file&lt;/li&gt; &#xA;   &lt;li&gt;a file with text (without using text editor)&lt;/li&gt; &#xA;   &lt;li&gt;a file with given size&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You are trying to create a new file but you get &#34;File system is full&#34;. You check with df for free space and you see you used only 20% of the space. What could be the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you check what is the size of a certain directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;du -sh&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is LVM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following in regards to LVM: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;PV&lt;/li&gt; &#xA;   &lt;li&gt;VG&lt;/li&gt; &#xA;   &lt;li&gt;LV&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NFS? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What RAID is used for? Can you explain the differences between RAID 0, 1, 5 and 10?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the process of extending a filesystem disk space&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is lazy umount?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is tmpfs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is stored in each of the following logs? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;/var/log/messages&lt;/li&gt; &#xA;   &lt;li&gt;/var/log/boot.log&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? both /tmp and /var/tmp cleared upon system boot&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. /tmp is cleared upon system boot while /var/tmp is cleared every a couple of days or not cleared at all (depends on distro). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Performance Analysis&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check what is the current load average?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One can use &lt;code&gt;uptime&lt;/code&gt; or &lt;code&gt;top&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You know how to see the load average, great. but what each part of it means? for example 1.43, 2.34, 2.78&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;http://www.brendangregg.com/blog/2017-08-08/linux-load-averages.html&#34;&gt;This article&lt;/a&gt; summarizes the load average topic in a great way &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check process usage?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;pidstat &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check disk I/O?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;iostat -xz 1&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check how much free memory a system has? How to check memory consumption by each process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can use the commands &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;free&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check TCP stats?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;sar -n TCP,ETCP 1 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Processes&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;how to list all the processes running in your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;ps -ef&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to run a process in the background and why to do that in the first place?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can achieve that by specifying &amp;amp; at the end of the command. As to why, since some commands/processes can take a lot of time to finish execution or run forever, you may want to run them in the background instead of waiting for them to finish before gaining control again in current session. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you find how much memory a specific process consumes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;code&gt; mem() { ps -eo rss,pid,euser,args:100 --sort %mem | grep -v grep | grep -i $@ | awk &#39;{printf $1/1024 &#34;MB&#34;; $1=&#34;&#34;; print }&#39; } &lt;/code&gt; [Source](https://stackoverflow.com/questions/3853655/in-linux-how-to-tell-how-much-memory-processes-are-using) &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What signal is used by default when you run &#39;kill *process id*&#39;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&#xA;The default signal is SIGTERM (15). This signal kills&#xA;process gracefully which means it allows it to save current&#xA;state configuration.&#xA;&lt;/pre&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What signals are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;SIGTERM - default signal for terminating a process SIGHUP - common usage is for reloading configuration SIGKILL - a signal which cannot caught or ignored&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;To view all available signals run &lt;code&gt;kill -l&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;kill 0&lt;/code&gt; does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;kill -0 &#xA;   &lt;pid&gt;&lt;/pid&gt;&lt;/code&gt; does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a trap?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Every couple of days, a certain process stops running. How can you look into why it&#39;s happening?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you press ctrl + c?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Daemon in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A background process. Most of these processes are waiting for requests or set of conditions to be met before actually running anything. Some examples: sshd, crond, rpcbind. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the possible states of a process in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&#xA;Running (R)&#xA;Uninterruptible Sleep (D) - The process is waiting for I/O&#xA;Interruptible Sleep (S)&#xA;Stopped (T)&#xA;Dead (x)&#xA;Zombie (z)&#xA;&lt;/pre&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you kill a process in D state?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a zombie process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A process which has finished to run but has not exited.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One reason it happens is when a parent process is programmed incorrectly. Every parent process should execute wait() to get the exit code from the child process which finished to run. But when the parent isn&#39;t checking for the child exit code, the child process can still exists although it finished to run. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to get rid of zombie processes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can&#39;t kill a zombie process the regular way with &lt;code&gt;kill -9&lt;/code&gt; for example as it&#39;s already dead.&lt;/p&gt; &lt;p&gt;One way to kill zombie process is by sending SIGCHLD to the parent process telling it to terminate its child processes. This might not work if the parent process wasn&#39;t programmed properly. The invocation is &lt;code&gt;kill -s SIGCHLD [parent_pid]&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can also try closing/terminating the parent process. This will make the zombie process a child of init (1) which does periodic cleanups and will at some point clean up the zombie process. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to find all the &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Processes executed/owned by a certain user&lt;/li&gt; &#xA;   &lt;li&gt;Process which are Java processes&lt;/li&gt; &#xA;   &lt;li&gt;Zombie Processes&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;If you mention at any point ps command with arugments, be familiar with what these arguments does exactly. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the init process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is the first process executed by the kernel during the booting of a system. It is a daemon process which runs till the system is shutdown. That is why, it is the parent of all the processes &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe how processes are being created?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to change the priority of a process? Why would you want to do that?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain how network process/connection is established and how it&#39;s terminated?&amp;gt;&lt;/summary&gt;&#xA; &lt;br&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;strace&lt;/code&gt; does? What about &lt;code&gt;ltrace&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find all the files which end with &#39;.yml&#39; and replace the number 1 in 2 in each file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;find /some_dir -iname *.yml -print0 | xargs -0 -r sed -i &#34;s/1/2/g&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run ls and you get &#34;/lib/ld-linux-armhf.so.3 no such file or directory&#34;. What is the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The ls executable is built for an incompatible architecture. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you split a 50 lines file into 2 files of 25 lines each?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can use the &lt;code&gt;split&lt;/code&gt; command this way: &lt;code&gt;split -l 25 some_file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a file descriptor? What file descriptors are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Kerberos File descriptor, also known as file handler, is a unique number which identifies an open file in the operating system. &lt;p&gt;In Linux (and Unix) the first three file descriptors are:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0 - the default data stream for input&lt;/li&gt; &#xA;   &lt;li&gt;1 - the default data stream for output&lt;/li&gt; &#xA;   &lt;li&gt;2 - the default data stream for output related to errors&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a great article on the topic: &lt;a href=&#34;https://www.computerhope.com/jargon/f/file-descriptor.htm&#34;&gt;https://www.computerhope.com/jargon/f/file-descriptor.htm&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NTP? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Kernel OOM&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux Security&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is chroot? In what scenarios would you consider using it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SELiunx?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Kerberos?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is nftables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What firewalld daemon is responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with hardening servers? Can you describe the process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux - Networking&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to list all the interfaces?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;ip link show&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the loopback (lo) interface?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The loopback interface is a special, virtual network interface that your computer uses to communicate with itself. It is used mainly for diagnostics and troubleshooting, and to connect to servers running on the local machine. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the following commands are used for? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ip addr&lt;/li&gt; &#xA;   &lt;li&gt;ip route&lt;/li&gt; &#xA;   &lt;li&gt;ip link&lt;/li&gt; &#xA;   &lt;li&gt;ping&lt;/li&gt; &#xA;   &lt;li&gt;netstat&lt;/li&gt; &#xA;   &lt;li&gt;traceroute&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a network namespace? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check if a certain port is being used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;One of the following would work:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;netstat -tnlp | grep &amp;lt;port_number&amp;gt;&#xA;lsof -i -n -P | grep &amp;lt;port_number&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you turn your Linux server into a router?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a virtual IP? In what situation would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? The MAC address of an interface is assigned/set by the OS&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you have more than one default gateway in a given system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Technically, yes. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is telnet and why is it a bad idea to use it in production? (or at all)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Telnet is a type of client-server protocol that can be used to open a command line on a remote computer, typically a server. By default, all the data sent and received via telnet is transmitted in clear/plain text, therefore it should not be used as it does not encrypt any data between the client and the server. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the routing table? How do you view it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you send an HTTP request from your shell?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;br&gt; Using nc is one way&lt;br&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are packet sniffers? Have you used one in the past? If yes, which packet sniffers have you used and for what purpose?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is a network utility that analyses and may inject tasks into the data-stream travelling over the targeted network. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to list active connections?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to trigger neighbor discovery in IPv6?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One way would be &lt;code&gt;ping6 ff02::1&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is network interface bonding and do you know how it&#39;s performed in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What network bonding modes are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;There a couple of modes:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;balance-rr: round robing bonding&lt;/li&gt; &lt;li&gt;active-backup: a fault tolerance mode where only one is active&lt;/li&gt; &lt;li&gt;balance-tlb: Adaptive transmit load balancing&lt;/li&gt; &lt;li&gt;balance-alb: Adaptive load balancing &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a bridge? How it&#39;s added in Linux OS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux - DNS&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check what is the hostname of the system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;cat /etc/hostname&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can also run &lt;code&gt;hostnamectl&lt;/code&gt; or &lt;code&gt;hostname&lt;/code&gt; but that might print only a temporary hostname. The one in the file is the permanent one. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the file &lt;code&gt;/etc/resolv.conf&lt;/code&gt; is used for? What does it include?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What commands are you using for performing DNS queries (or troubleshoot DNS related issues)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can specify one or more of the following:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;code&gt;dig&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;host&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;nslookup&lt;/code&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run &lt;code&gt;dig codingshell.com&lt;/code&gt; and get the following result: &lt;pre&gt;&lt;code&gt;ANSWER SECTION:&#xA;codingshell.com.&#x9;3515&#x9;IN&#x9;A&#x9;185.199.109.153&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;What is the meaning of the number 3515?&lt;/p&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is the TTL. When you lookup for an address using a domain/host name, your OS is performing DNS resolution by contacting DNS name servers to get the IP address of the host/domain you are looking for.&lt;br&gt; When you get a reply, this reply in cached in your OS for a certain period of time. This is period of time is also known as TTL and this is the meaning of 3515 number - it will be cached for 3515 seconds before removed from the cache and during that period of time, you&#39;ll get the value from the cache instead of asking DNS name servers for the address again. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Linux - Packaging&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with packaging? (as in building packages) Can you explain how does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How packages installation/removal is performed on the distribution you are using?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The answer depends on the distribution being used.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In Fedora/CentOS/RHEL/Rocky it can be done with &lt;code&gt;rpm&lt;/code&gt; or &lt;code&gt;dnf&lt;/code&gt; commands. In Ubuntu it can be done with the &lt;code&gt;apt&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;RPM: explain the spec format (what it should and can include)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you list the content of a package without actually installing it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to know to which package a file on the system belongs to? Is it a problem if it doesn&#39;t belongs to any package?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where repositories are stored? (based on the distribution you are using)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an archive? How do you create one in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to extract the content of an archive?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why do we need package managers? Why not simply creating archives and publish them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Package managers allow you to manage packages lifecycle as in installing, removing and updating the packages.&lt;br&gt; In addition, you can specify in a spec how a certain package will be installed - where to copy the files, which commands to run prior to the installation, post the installation, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux DNF&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DNF?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the &lt;a href=&#34;https://github.com/rpm-software-management/dnf&#34;&gt;repo&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&#34;Dandified YUM (DNF) is the next upcoming major version of YUM. It does package management using RPM, libsolv and hawkey libraries.&#34;&lt;/p&gt; &lt;p&gt;Official &lt;a href=&#34;https://dnf.readthedocs.io/en/latest/&#34;&gt;docs&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to look for a package that provides the command /usr/bin/git? (the package isn&#39;t necessarily installed)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;dnf provides /usr/bin/git &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Linux Applications and Services&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find in /etc/services?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to make sure a Service starts automatically after a reboot or crash?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Depends on the init system.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Systemd: &lt;code&gt; systemctl enable [service_name] &lt;/code&gt; System V: &lt;code&gt; update-rc.d [service_name] &lt;/code&gt; and add this line &lt;code&gt; id:5678:respawn:/bin/sh /path/to/app &lt;/code&gt; to /etc/inittab Upstart: add Upstart init script at /etc/init/service.conf &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run &lt;code&gt;ssh 127.0.0.1&lt;/code&gt; but it fails with &#34;connection refused&#34;. What could be the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;SSH server is not installed&lt;/li&gt; &lt;li&gt;SSH server is not running &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print the shared libraries required by a certain program? What is it useful for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is CUPS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of web servers are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Nginx, Apache httpd. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Linux Users and Groups&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a &#34;superuser&#34; (or root user)? How is it different from regular users?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you create users? Where user information is stored?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;Command to create users is &lt;code&gt;useradd&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Syntax: &lt;code&gt;useradd [options] Username&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;There are 2 configuration files, which stores users information&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;/etc/passwd&lt;/code&gt; - Users information like, username, shell etc is stored in this file&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;/etc/shadow&lt;/code&gt; - Users password is stored in encrypted format&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which file stores information about groups?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/groups&lt;/code&gt; file stores the group name, group ID, usernames which are in secondary group.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you change/set the password of a user?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;passwd &amp;lt;username&amp;gt;&lt;/code&gt; is the command to set/change password of a user.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which file stores users passwords? Is it visible for everyone?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/shadow&lt;/code&gt; file holds the passwords of the users in encryted format. NO, it is only visble to the &lt;code&gt;root&lt;/code&gt; user&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you know how to create a new user without using adduser/useradd command?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;YES, we can create new user by manually adding an entry in the &lt;code&gt;/etc/passwd&lt;/code&gt; file.&lt;/p&gt; &#xA; &lt;p&gt;For example, if we need to create a user called &lt;code&gt;john&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Step 1: Add an entry to &lt;code&gt;/etc/passwd&lt;/code&gt; file, so user gets created.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;echo &#34;john&lt;span&gt;❌&lt;/span&gt;2001:2001::/home/john:/bin/bash&#34; &amp;gt;&amp;gt; /etc/passwd&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Step 2: Add an entry to &lt;code&gt;/etc/group&lt;/code&gt; file, because every user belong to the primary group that has same name as the username.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;echo &#34;john&lt;span&gt;❌&lt;/span&gt;2001:&#34; &amp;gt;&amp;gt; /etc/group&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Step 3: Verify if the user got created&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;id john&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What information is stored in /etc/passwd? explain each field&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/passwd&lt;/code&gt; is a configuration file, which contains users information. Each entry in this file has, 7 fields,&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;username:password:UID:GID:Comment:home directory:shell&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;username&lt;/code&gt; - The name of the user.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;password&lt;/code&gt; - This field is actually a placeholder of the password field. Due to security concerns, this field does not contain the password, just a placeholder (x) to the encrypted password stored in &lt;code&gt;/etc/shadow&lt;/code&gt; file.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;UID&lt;/code&gt; - User ID of the user.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;GID&lt;/code&gt; - Group ID&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;Comment&lt;/code&gt; - This field is to provide description about the user.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;home directory&lt;/code&gt; - Abousulte path of the user&#39;s home directory. This directory gets created once the user is added.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;shell&lt;/code&gt; - This field contains the absolute path of the shell that will be used by the respective user.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to add a new user to the system without providing him the ability to log-in into the system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;adduser user_name --shell=/bin/false --no-create-home&lt;/code&gt; You can also add a user and then edit /etc/passwd. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to switch to another user? How to switch to the root user?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;su command. Use su - to switch to root &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the UID the root user? What about a regular user?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;UID of root user is 0&lt;/p&gt; &#xA; &lt;p&gt;Default values of UID_MIN and UID_MAX in &lt;code&gt;/etc/login.defs&lt;/code&gt; &lt;code&gt;UID_MIN&lt;/code&gt; is &lt;code&gt;1000&lt;/code&gt; &lt;code&gt;UID_MAX&lt;/code&gt; is &lt;code&gt;60000&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Actually, we can change this value. But UID &amp;lt; 1000 are reserved for system accounts. Therefore, as per the default configuration, for regular user UID starts from &lt;code&gt;1000&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you do if you lost/forogt the root password?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Re-install the OS IS NOT the right answer :) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is /etc/skel?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/skel&lt;/code&gt; is a directory, that contains files or directories, so when a new user is created, these files/directories created under &lt;code&gt;/etc/skel&lt;/code&gt; will be copied to user&#39;s home directory.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to see a list of who logged-in to the system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the &lt;code&gt;last&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what each of the following commands does: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;useradd&lt;/li&gt; &#xA;   &lt;li&gt;usermod&lt;/li&gt; &#xA;   &lt;li&gt;whoami&lt;/li&gt; &#xA;   &lt;li&gt;id&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;useradd&lt;/code&gt; - Command for creating new users &lt;code&gt;usermod&lt;/code&gt; - Modify the users setting &lt;code&gt;whoami&lt;/code&gt; - Outputs, the username that we are currently logged in &lt;code&gt;id&lt;/code&gt; - Prints the&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run &lt;code&gt;grep $(whoami) /etc/passwd&lt;/code&gt; but the output is empty. What might be a possible reason for that?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The user you are using isn&#39;t defined locally but originates from services like LDAP.&lt;br&gt; You can verify with: &lt;code&gt;getent passwd&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Hardware&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where can you find information on the processor (like number of CPUs)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;/proc/cpuinfo&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can also use &lt;code&gt;nproc&lt;/code&gt; for number of processors &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you print information on the BIOS, motherboard, processor and RAM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;dmidecoode &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you print all the information on connected block devices in your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;lsblk &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In user space, applications don&#39;t have full access to hardware resources&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. Only in kernel space they have full access to hardware resources. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Security&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you create a private key for a CA (certificate authority)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;One way is using openssl this way:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;openssl genrsa -aes256 -out ca-private-key.pem 4096&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you create a public key for a CA (certificate authority)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;openssl req -new -x509 -days 730 -key [private key file name] -sha256 -out ca.pem&lt;/code&gt;&lt;/p&gt; &lt;p&gt;If using the private key from the previous question then the command would be:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;openssl req -new -x509 -days 730 -key ca-private-key.pem -sha256 -out ca.pem&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Namespaces&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of namespaces are there in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Process ID namespaces: these namespaces include independent set of process IDs&lt;/li&gt; &lt;li&gt;Mount namespaces: Isolation and control of mountpoints&lt;/li&gt; &lt;li&gt;Network namespaces: Isolates system networking resources such as routing table, interfaces, ARP table, etc.&lt;/li&gt; &lt;li&gt;UTS namespaces: Isolate host and domains&lt;/li&gt; &lt;li&gt;IPC namespaces: Isolates interprocess communications&lt;/li&gt; &lt;li&gt;User namespaces: Isolate user and group IDs&lt;/li&gt; &lt;li&gt;Time namespaces: Isolates time machine &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In every PID (Process ID) namespace the first process assigned with the process id number 1&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. Inside the namespace it&#39;s PID 1 while to the parent namespace the PID is a different one. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In a child PID namespace all processes are aware of parent PID namespace and processes and the parent PID namespace has no visibility of child PID namespace processes&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. The opposite is true. Parent PID namespace is aware and has visibility of processes in child PID namespace and child PID namespace has no visibility as to what is going on in the parent PID namespace. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? By default, when creating two separate network namespaces, a ping from one namespace to another will work fine&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. Network namespace has its own interfaces and routing table. There is no way (without creating a bridge for example) for one network namespace to reach another. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? With UTS namespaces, processes may appear as if they run on different hosts and domains while running on the same host&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? It&#39;s not possible to have a root user with ID 0 in child user namespaces&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. In every child user namespace, it&#39;s possible to have a separate root user with uid of 0. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What time namespaces are used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In time namespaces processes can use different system time. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Virtualization&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What virtualization solutions are available for Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;a href=&#34;https://www.linux-kvm.org/page/Main_Page&#34;&gt;KVM&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;http://www.xen.org/&#34;&gt;XEN&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.virtualbox.org/&#34;&gt;VirtualBox&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;http://linux-vserver.org/Welcome_to_Linux-VServer.org&#34;&gt;Linux-VServer&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;http://user-mode-linux.sourceforge.net/&#34;&gt;User-mode Linux&lt;/a&gt;&lt;/li&gt; &lt;li&gt;... &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is KVM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Is an open source virtualization technology used to operate on x86 hardware.&lt;/p&gt; &lt;p&gt;From the official &lt;a href=&#34;https://www.linux-kvm.org/page/Main_Page&#34;&gt;docs&lt;/a&gt; Recommended read:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;a href=&#34;https://www.redhat.com/en/topics/virtualization/what-is-KVM&#34;&gt;Red Hat Article - What is KVM?&lt;/a&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Libvirt?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It&#39;s an open source collection of software used to manage virtual machines. It can be used with: KVM, Xen, LXC and others. It&#39;s also called Libvirt Virtualization API.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From the official &lt;a href=&#34;https://libvirt.org/&#34;&gt;docs&lt;/a&gt; Hypervisor supported &lt;a href=&#34;https://libvirt.org/drivers.html&#34;&gt;docs&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - AWK&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the &lt;code&gt;awk&lt;/code&gt; command does? Have you used it? What for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From Wikipedia: &#34;AWK is domain-specific language designed for text processing and typically used as a data extraction and reporting tool&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print the 4th column in a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;awk &#39;{print $4}&#39; file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print every line that is longer than 79 characters?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;awk &#39;length($0) &amp;gt; 79&#39; file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the &lt;code&gt;lsof&lt;/code&gt; command does? Have you used it? What for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between find and locate?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a user process performs a privileged operation, such as reading from the disk?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using system calls &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - System Calls&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a system call? What system calls are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a program executes a system call?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A program executes a trap instruction. The instruction jump into the kernel while raising the privileged level to kernel space.&lt;/li&gt; &lt;li&gt;Once in kernel space, it can perform any privileged operation&lt;/li&gt; &lt;li&gt;Once it&#39;s finished, it calls a &#34;return-from-trap&#34; instruction which returns to user space while reducing back the privilege level to user space. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the fork() system call&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;fork() is used for creating a new process. It does so by cloning the calling process but the child process has its own PID and any memory locks, I/O operations and semaphores are not inherited. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the return value of fork()?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;On success, the PID of the child process in parent and 0 in child process&lt;/li&gt; &lt;li&gt;On error, -1 in the parent &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Name one reason for fork() to fail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not enough memory to create a new process &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why do we need the wait() system call?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;wait() is used by a parent process to wait for the child process to finish execution. If wait is not used by a parent process then a child process might become a zombie process. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How the kernel notifies the parent process about child process termination?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The kernel notifies the parent by sending the SIGCHLD to the parent. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How the waitpid() is different from wait()?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The waitpid() is a non-blocking version of the wait() function.&lt;br&gt; It also supports using library routine (e.g. system()) to wait a child process without messing up with other children processes for which the process has not waited. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? The wait() system call won&#39;t return until the child process has run and exited&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True in most cases though there are cases where wait() returns before the child exits. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the exec() system call&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It transforms the current running program into another program.&lt;br&gt; Given the name of an executable and some arguments, it loads the code and static data from the specified executable and overwrites its current code segment and current static code data. After initializing its memory space (like stack and heap) the OS runs the program passing any arguments as the argv of that process. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? A successful call to exec() never returns&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True&lt;br&gt; Since a succesful exec replace the current process, it can&#39;t return anything to the process that made the call. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What system call is used for listing files?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What system calls are used for creating a new process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;fork(), exec() and the wait() system call is also included in this workflow. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What execve() does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Executes a program. The program is passed as a filename (or path) and must be a binary executable or a script. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the return value of malloc?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the pipe() system call. What does it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;https://toroid.org/unix-pipe-implementation&#34;&gt;Unix pipe implementation&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Pipes provide a unidirectional interprocess communication channel. A pipe has a read end and a write end. Data written to the write end of a pipe can be read from the read end of the pipe. A pipe is created using pipe(2), which returns two file descriptors, one referring to the read end of the pipe, the other referring to the write end.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you execute &lt;code&gt;ls -l&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Shell reads the input using getline() which reads the input file stream and stores into a buffer as a string&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;The buffer is broken down into tokens and stored in an array this way: {&#34;ls&#34;, &#34;-l&#34;, &#34;NULL&#34;}&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Shell checks if an expansion is required (in case of ls *.c)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Once the program in memory, its execution starts. First by calling readdir()&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Notes:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;getline() originates in GNU C library and used to read lines from input stream and stores those lines in the buffer &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you execute &lt;code&gt;ls -l *.log&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What readdir() system call does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What exactly the command &lt;code&gt;alias x=y&lt;/code&gt; does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why running a new program is done using the fork() and exec() system calls? why a different API wasn&#39;t developed where there is one call to run a new program?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This way provides a lot of flexibility. It allows the shell for example, to run code after the call to fork() but before the call to exec(). Such code can be used to alter the environment of the program it about to run. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe shortly what happens when you execute a command in the shell&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The shell figures out, using the PATH variable, where the executable of the command resides in the filesystem. It then calls fork() to create a new child process for running the command. Once the fork was executed successfully, it calls a variant of exec() to execute the command and finally, waits the command to finish using wait(). When the child completes, the shell returns from wait() and prints out the prompt again. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Filesystem &amp;amp; Files&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create a file of a certain size?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;There are a couple of ways to do that:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;dd if=/dev/urandom of=new_file.txt bs=2MB count=1&lt;/li&gt; &lt;li&gt;truncate -s 2M new_file.txt&lt;/li&gt; &lt;li&gt;fallocate -l 2097152 new_file.txt &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What does the following block do?: &lt;pre&gt;&lt;code&gt;open(&#34;/my/file&#34;) = 5&#xA;read(5, &#34;file content&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;These system calls are reading the file &lt;code&gt;/my/file&lt;/code&gt; and 5 is the file descriptor number. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe three different ways to remove a file (or its content)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between a process and a thread?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is context switch?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Context_switch&#34;&gt;wikipedia&lt;/a&gt;: a context switch is the process of storing the state of a process or thread, so that it can be restored and resume execution at a later point &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You found there is a server with high CPU load but you didn&#39;t find a process with high CPU. How is that possible?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux Advanced - Networking&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When you run &lt;code&gt;ip a&lt;/code&gt; you see there is a device called &#39;lo&#39;. What is it and why do we need it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the &lt;code&gt;traceroute&lt;/code&gt; command does? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another common way to task this questions is &#34;what part of the tcp header does traceroute modify?&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is network bonding? What types are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to link two separate network namespaces so you can ping an interface on one namespace from the second one?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are cgroups?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Process Descriptor and Task Structure&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the differences between threads and processes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Kernel Threads&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when socket system call is used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a good article about the topic: &lt;a href=&#34;https://ops.tips/blog/how-linux-creates-sockets&#34;&gt;https://ops.tips/blog/how-linux-creates-sockets&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You executed a script and while still running, it got accidentally removed. Is it possible to restore the script while it&#39;s still running?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux Memory&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between MemFree and MemAvailable in /proc/meminfo?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;MemFree - The amount of unused physical RAM in your system MemAvailable - The amount of available memory for new workloads (without pushing system to use swap) based on MemFree, Active(file), Inactive(file), and SReclaimable. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between paging and swapping?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is OOM killer&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Distribution&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Linux distribution?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What Linux distributions are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the components of a Linux distribution?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Kernel&lt;/li&gt; &lt;li&gt;Utilities&lt;/li&gt; &lt;li&gt;Services&lt;/li&gt; &lt;li&gt;Software/Packages Management &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Linux - Sed&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using sed, extract the date from the following line: &lt;code&gt;201.7.19.90 - - [05/Jun/1985:13:42:99 +0000] &#34;GET /site HTTP/1.1&#34; 200 32421&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;echo $line | sed &#39;s/.*\[//g;s/].*//g;s/:.*//g&#39;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a random string?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One way is to run the following: &lt;code&gt;cat /proc/sys/kernel/random/uuid&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Linux distribution?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A collection of packages - kernel, GNU, third party apps, ...&lt;/li&gt; &lt;li&gt;Sometimes distributions store some information on the distribution in &lt;code&gt;/etc/*-release&lt;/code&gt; file &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;For example for Red Hat distribution it will be &lt;code&gt;/etc/redhat-release&lt;/code&gt; and for Amazon it will be &lt;code&gt;/etc/os-release&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;lsb_release&lt;/code&gt; is a common command you can use in multiple different distributions &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Name 5 commands which are two letters long&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;ls, wc, dd, df, du, ps, ip, cp, cd ... &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What ways are there for creating a new empty file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;touch new_file&lt;/li&gt; &lt;li&gt;echo &#34;&#34; &amp;gt; new_file &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How `cd -` works? How does it knows the previous location?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;$OLDPWD &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List three ways to print all the files in the current directory&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;ls&lt;/li&gt; &lt;li&gt;find .&lt;/li&gt; &lt;li&gt;echo * &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to count the number of lines in a file? What about words?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You define x=2 in /etc/bashrc and x=6 ~/.bashrc you then login to the system. What would be the value of x?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between man and info?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A good answer can be found &lt;a href=&#34;https://askubuntu.com/questions/9325/what-is-the-difference-between-man-and-info-documentation&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;environment variables&#34;. How do you list all environment variables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a TTY device?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create your own environment variables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;X=2&lt;/code&gt; for example. But this will persist to new shells. To have it in new shells as well, use &lt;code&gt;export X=2&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What a double dash (--) mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It&#39;s used in commands to mark the end of commands options. One common example is when used with git to discard local changes: &lt;code&gt;git checkout -- some_file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Wildcards are implemented on user or kernel space?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If I plug a new device into a Linux machine, where on the system, a new device entry/file will be created?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;/dev &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why there are different sections in man? What is the difference between the sections?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is User-mode Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Under which license Linux is distributed? &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;GPL v2 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Operating System&lt;/h2&gt; &#xA;&lt;h3&gt;Operating System Exercises&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fork 101&lt;/td&gt; &#xA;   &lt;td&gt;Fork&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/fork_101.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/solutions/fork_101_solution.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fork 102&lt;/td&gt; &#xA;   &lt;td&gt;Fork&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/fork_102.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/solutions/fork_102_solution.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Operating System - Self Assessment&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an operating system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the book &#34;Operating Systems: Three Easy Pieces&#34;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;responsible for making it easy to run programs (even allowing you to seemingly run many at the same time), allowing programs to share memory, enabling programs to interact with devices, and other fun stuff like that&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Operating System - Process&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain what is a process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A process is a running program. A program is one or more instructions and the program (or process) is executed by the operating system. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If you had to design an API for processes in an operating system, what would this API look like?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It would support the following:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Create - allow to create new processes&lt;/li&gt; &lt;li&gt;Delete - allow to remove/destroy processes&lt;/li&gt; &lt;li&gt;State - allow to check the state of the process, whether it&#39;s running, stopped, waiting, etc.&lt;/li&gt; &lt;li&gt;Stop - allow to stop a running process &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a process is created?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;The OS is reading program&#39;s code and any additional relevant data&lt;/li&gt; &lt;li&gt;Program&#39;s code is loaded into the memory or more specifically, into the address space of the process.&lt;/li&gt; &lt;li&gt;Memory is allocated for program&#39;s stack (aka run-time stack). The stack also initialized by the OS with data like argv, argc and parameters to main()&lt;/li&gt; &lt;li&gt;Memory is allocated for program&#39;s heap which is required for dynamically allocated data like the data structures linked lists and hash tables&lt;/li&gt; &lt;li&gt;I/O initialization tasks are performed, like in Unix/Linux based systems where each process has 3 file descriptors (input, output and error)&lt;/li&gt; &lt;li&gt;OS is running the program, starting from main() &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? The loading of the program into the memory is done eagerly (all at once)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. It was true in the past but today&#39;s operating systems perform lazy loading which means only the relevant pieces required for the process to run are loaded first. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are different states of a process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Running - it&#39;s executing instructions&lt;/li&gt; &lt;li&gt;Ready - it&#39;s ready to run but for different reasons it&#39;s on hold&lt;/li&gt; &lt;li&gt;Blocked - it&#39;s waiting for some operation to complete. For example I/O disk request &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are some reasons for a process to become blocked?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;I/O operations (e.g. Reading from a disk)&lt;/li&gt; &lt;li&gt;Waiting for a packet from a network &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Inter Process Communication (IPC)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;time sharing&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Even when using a system with one physical CPU, it&#39;s possible to allow multiple users to work on it and run programs. This is possible with time sharing where computing resources are shared in a way it seems to the user the system has multiple CPUs but in fact it&#39;s simply one CPU shared by applying multiprogramming and multi-tasking. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;space sharing&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Somewhat the opposite of time sharing. While in time sharing a resource is used for a while by one entity and then the same resource can be used by another resource, in space sharing the space is shared by multiple entities but in a way where it&#39;s not being transferred between them.&lt;br&gt; It&#39;s used by one entity until this entity decides to get rid of it. Take for example storage. In storage, a file is yours until you decide to delete it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What component determines which process runs at a given moment in time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;CPU scheduler &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Operating System - Memory&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;virtual memory&#34; and what purpose it serves?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is demand paging?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is copy-on-write or shadowing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a kernel, and what does it do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The kernel is part of the operating system and is responsible for tasks like:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Allocating memory&lt;/li&gt; &lt;li&gt;Schedule processes&lt;/li&gt; &lt;li&gt;Control CPU &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Some pieces of the code in the kernel are loaded into protected areas of the memory so applications can&#39;t overwritten them&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is POSIX?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Semaphore and what its role in operating systems&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is cache? What is buffer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Buffer: Reserved place in RAM which is used to hold data for temporary purposes Cache: Cache is usually used when processes reading and writing to the disk to make the process faster by making similar data used by different programs easily accessible. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Virtualization&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Virtualization?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Virtualization uses software to create an abstraction layer over computer hardware that allows the hardware elements of a single computer—processors, memory, storage and more - to be divided into multiple virtual computers, commonly called virtual machines (VMs). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a hypervisor?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Red Hat: &#34;A hypervisor is software that creates and runs virtual machines (VMs). A hypervisor, sometimes called a virtual machine monitor (VMM), isolates the hypervisor operating system and resources from the virtual machines and enables the creation and management of those VMs.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read more &lt;a href=&#34;https://www.redhat.com/en/topics/virtualization/what-is-a-hypervisor&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of hypervisors are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Hosted hypervisors and bare-metal hypervisors. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages and disadvantges of bare-metal hypervisor over a hosted hypervisor?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Due to having its own drivers and a direct access to hardware components, a baremetal hypervisor will often have better performances along with stability and scalability.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;On the other hand, there will probably be some limitation regarding loading (any) drivers so a hosted hypervisor will usually benefit from having a better hardware compatibility. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of virtualization are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Operating system virtualization Network functions virtualization Desktop virtualization &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Is containerization is a type of Virtualization?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Yes, it&#39;s a operating-system-level virtualization, where the kernel is shared and allows to use multiple isolated user-spaces instances. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How the introduction of virtual machines changed the industry and the way applications were deployed?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The introduction of virtual machines allowed companies to deploy multiple business applications on the same hardware while each application is separated from each other in secured way, where each is running on its own separate operating system. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - OOP&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain inheritance and how to use it in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;By definition inheritance is the mechanism where an object acts as a base of another object, retaining all its&#xA;properties.&#xA;&#xA;So if Class B inherits from Class A, every characteristics from class A will be also available in class B.&#xA;Class A would be the &#39;Base class&#39; and B class would be the &#39;derived class&#39;.&#xA;&#xA;This comes handy when you have several classes that share the same functionalities.&#xA;&#xA;The basic syntax is:&#xA;&#xA;class Base: pass&#xA;&#xA;class Derived(Base): pass&#xA;&#xA;A more forged example:&#xA;&#xA;class Animal:&#xA;    def __init__(self):&#xA;        print(&#34;and I&#39;m alive!&#34;)&#xA;&#xA;    def eat(self, food):&#xA;        print(&#34;ñom ñom ñom&#34;, food)&#xA;&#xA;class Human(Animal):&#xA;    def __init__(self, name):&#xA;        print(&#39;My name is &#39;, name)&#xA;        super().__init__()&#xA;&#xA;    def write_poem(self):&#xA;        print(&#39;Foo bar bar foo foo bar!&#39;)&#xA;&#xA;class Dog(Animal):&#xA;    def __init__(self, name):&#xA;        print(&#39;My name is&#39;, name)&#xA;        super().__init__()&#xA;&#xA;    def bark(self):&#xA;        print(&#39;woof woof&#39;)&#xA;&#xA;&#xA;michael = Human(&#39;Michael&#39;)&#xA;michael.eat(&#39;Spam&#39;)&#xA;michael.write_poem()&#xA;&#xA;bruno = Dog(&#39;Bruno&#39;)&#xA;bruno.eat(&#39;bone&#39;)&#xA;bruno.bark()&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; My name is  Michael&#xA;&amp;gt;&amp;gt;&amp;gt; and I&#39;m alive!&#xA;&amp;gt;&amp;gt;&amp;gt; ñom ñom ñom Spam&#xA;&amp;gt;&amp;gt;&amp;gt; Foo bar bar foo foo bar!&#xA;&amp;gt;&amp;gt;&amp;gt; My name is Bruno&#xA;&amp;gt;&amp;gt;&amp;gt; and I&#39;m alive!&#xA;&amp;gt;&amp;gt;&amp;gt; ñom ñom ñom bone&#xA;&amp;gt;&amp;gt;&amp;gt; woof woof&#xA;&#xA;Calling super() calls the Base method, thus, calling super().__init__() we called the Animal __init__.&#xA;&#xA;There is a more advanced python feature called MetaClasses that aid the programmer to directly control class creation.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain and demonstrate class attributes &amp;amp; instance attributes&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;In the following block of code &lt;code&gt;x&lt;/code&gt; is a class attribute while &lt;code&gt;self.y&lt;/code&gt; is a instance attribute&lt;/p&gt; &lt;pre&gt;&lt;code&gt;class MyClass(object):&#xA;    x = 1&#xA;&#xA;    def __init__(self, y):&#xA;        self.y = y&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Exceptions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an error? What is an exception? What types of exceptions are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;#  Note that you generally don&#39;t need to know the compiling process but knowing where everything comes from&#xA;#  and giving complete answers shows that you truly know what you are talking about.&#xA;&#xA;Generally, every compiling process have a two steps.&#xA;    - Analysis&#xA;    - Code Generation.&#xA;&#xA;    Analysis can be broken into:&#xA;        1. Lexical analysis   (Tokenizes source code)&#xA;        2. Syntactic analysis (Check whether the tokens are legal or not, tldr, if syntax is correct)&#xA;&#xA;               for i in &#39;foo&#39;&#xA;                          ^&#xA;             SyntaxError: invalid syntax&#xA;&#xA;        We missed &#39;:&#39;&#xA;&#xA;&#xA;        3. Semantic analysis  (Contextual analysis, legal syntax can still trigger errors, did you try to divide by 0,&#xA;          hash a mutable object or use an undeclared function?)&#xA;&#xA;                 1/0&#xA;                ZeroDivisionError: division by zero&#xA;&#xA;    These three analysis steps are the responsible for error handlings.&#xA;&#xA;    The second step would be responsible for errors, mostly syntax errors, the most common error.&#xA;    The third step would be responsible for Exceptions.&#xA;&#xA;    As we have seen, Exceptions are semantic errors, there are many builtin Exceptions:&#xA;&#xA;        ImportError&#xA;        ValueError&#xA;        KeyError&#xA;        FileNotFoundError&#xA;        IndentationError&#xA;        IndexError&#xA;        ...&#xA;&#xA;    You can also have user defined Exceptions that have to inherit from the `Exception` class, directly or indirectly.&#xA;&#xA;    Basic example:&#xA;&#xA;    class DividedBy2Error(Exception):&#xA;        def __init__(self, message):&#xA;            self.message = message&#xA;&#xA;&#xA;    def division(dividend,divisor):&#xA;        if divisor == 2:&#xA;            raise DividedBy2Error(&#39;I dont want you to divide by 2!&#39;)&#xA;        return dividend / divisor&#xA;&#xA;    division(100, 2)&#xA;&#xA;    &amp;gt;&amp;gt;&amp;gt; __main__.DividedBy2Error: I dont want you to divide by 2!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Exception Handling and how to use it in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;strong&gt;Exceptions:&lt;/strong&gt; Errors detected during execution are called Exceptions.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Handling Exception:&lt;/strong&gt; When an error occurs, or exception as we call it, Python will normally stop and generate an error message.&lt;br&gt; Exceptions can be handled using &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;except&lt;/code&gt; statement in python.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; Following example asks the user for input until a valid integer has been entered. &lt;br&gt; If user enter a non-integer value it will raise exception and using except it will catch that exception and ask the user to enter valid integer again.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;while True:&#xA;    try:&#xA;        a = int(input(&#34;please enter an integer value: &#34;))&#xA;        break&#xA;    except ValueError:&#xA;        print(&#34;Ops! Please enter a valid integer value.&#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more details about errors and exceptions follow this &lt;a href=&#34;https://docs.python.org/3/tutorial/errors.html&#34;&gt;https://docs.python.org/3/tutorial/errors.html&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of running the following function? &lt;pre&gt;&lt;code&gt;def true_or_false():&#xA;    try:&#xA;        return True&#xA;    finally:&#xA;        return False&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; False &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Built-in functions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following built-in functions (their purpose + use case example): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;repr&lt;/li&gt; &#xA;   &lt;li&gt;any&lt;/li&gt; &#xA;   &lt;li&gt;all&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between repr function and str?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the __call__ method?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It is used to emulate callable objects. It allows a class instance to be called as a function.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example code:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;class Foo:&#xA;    def __init__(self: object) -&amp;gt;  None:&#xA;        pass&#xA;    def __call__(self: object) -&amp;gt; None:&#xA;        print(&#34;Called!&#34;)&#xA;&#xA;f = Foo()&#xA;f()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Result:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;Called!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do classes has the __call__ method as well? What for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What _ is used for in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Translation lookup in i18n&lt;/li&gt; &lt;li&gt;Hold the result of the last executed expression or statement in the interactive interpreter.&lt;/li&gt; &lt;li&gt;As a general purpose &#34;throwaway&#34; variable name. For example: x, y, _ = get_data() (x and y are used but since we don&#39;t care about third variable, we &#34;threw it away&#34;). &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is GIL&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Python Global Interpreter Lock (GIL) is a type of process lock which is used by python whenever it deals with processes. Generally, Python only uses only one thread to execute the set of written statements. This means that in python only one thread will be executed at a time &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Lambda? How is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A &lt;code&gt;lambda&lt;/code&gt; expression is an &#39;anonymous&#39; function, the difference from a normal defined function using the keyword `def`` is the syntax and usage.&lt;/p&gt; &lt;p&gt;The syntax is:&lt;/p&gt; &lt;p&gt;&lt;code&gt;lambda[parameters]: [expresion]&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A lambda function add 10 with any argument passed.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;x = lambda a: a + 10&#xA;print(x(10))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;An addition function&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;addition = lambda x, y: x + y&#xA;print(addition(10, 20))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Squaring function&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;square = lambda x : x ** 2&#xA;print(square(5))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Generally it is considered a bad practice under PEP 8 to assign a lambda expresion, they are meant to be used as parameters and inside of other defined functions.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Properties&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are there private variables in Python? How would you make an attribute of a class, private?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;getter&lt;/li&gt; &#xA;   &lt;li&gt;setter&lt;/li&gt; &#xA;   &lt;li&gt;deleter&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is @property&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you swap values between two variables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;x, y = y, x&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following object&#39;s magic variables: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;dict&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a function to return the sum of one or more numbers. The user will decide how many numbers to use&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;First you ask the user for the amount of numbers that will be use. Use a while loop that runs until amount_of_numbers becomes 0 through subtracting amount_of_numbers by one each loop. In the while loop you want ask the user for a number which will be added a variable each time the loop runs.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def return_sum():&#xA;&#x9;amount_of_numbers = int(input(&#34;How many numbers? &#34;))&#xA;&#x9;total_sum = 0&#xA;&#x9;while amount_of_numbers != 0:&#xA;&#x9;&#x9;num = int(input(&#34;Input a number. &#34;))&#xA;&#x9;&#x9;total_sum += num&#xA;&#x9;&#x9;amount_of_numbers -= 1&#xA;&#x9;return total_sum&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print the average of [2, 5, 6]. It should be rounded to 3 decimal places&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;li = [2, 5, 6]&#xA;print(&#34;{0:.3f}&#34;.format(sum(li)/len(li)))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Lists&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a tuple in Python? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A tuple is a built-in data type in Python. It&#39;s used for storing multiple items in a single variable. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List, like a tuple, is also used for storing multiple items. What is then, the difference between a tuple and a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;List, as opposed to a tuple, is a mutable data type. It means we can modify it and at items to it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to add the number 2 to the list &lt;code&gt;x = [1, 2, 3]&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;x.append(2)&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to get the last element of a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;some_list[-1]&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to add the items of [1, 2, 3] to the list [4, 5, 6]?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; x = [4, 5, 6] x.extend([1, 2, 3]) &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Don&#39;t use &lt;code&gt;append&lt;/code&gt; unless you would like the list as one item. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to remove the first 3 items from a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;my_list[0:3] = []&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to insert an item to the beginning of a list? What about two items?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;One item:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;numbers = [1, 2, 3, 4, 5]&#xA;numbers.insert(0, 0)&#xA;print(numbers)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Multiple items or list:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;numbers_1 = [2, 3, 4, 5]&#xA;numbers_2 = [0, 1]&#xA;numbers_1 = numbers_2 + numbers_1&#xA;print(numbers_1)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to sort list by the length of items?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;sorted_li = sorted(li, key=len)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or without creating a new list:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;li.sort(key=len)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you know what is the difference between list.sort() and sorted(list)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt; &lt;p&gt;sorted(list) will return a new list (original list doesn&#39;t change)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;list.sort() will return None but the list is change in-place&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;sorted() works on any iterable (Dictionaries, Strings, ...)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;list.sort() is faster than sorted(list) in case of Lists &lt;/p&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt;   &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Convert every string to an integer: &lt;code&gt;[[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;], [&#39;4&#39;, &#39;5&#39;, &#39;6&#39;]]&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;nested_li = [[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;], [&#39;4&#39;, &#39;5&#39;, &#39;6&#39;]]&#xA;[[int(x) for x in li] for li in nested_li]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to merge two sorted lists into one sorted list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;sorted(li1 + li2)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Another way:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;i, j = 0&#xA;merged_li = []&#xA;&#xA;while i &amp;lt; len(li1) and j &amp;lt; len(li2):&#xA;    if li1[i] &amp;lt; li2[j]:&#xA;        merged_li.append(li1[i])&#xA;        i += 1&#xA;    else:&#xA;        merged_li.append(li2[j])&#xA;        j += 1&#xA;&#xA;merged_li = merged_li + merged_li[i:] + merged_li[j:]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check if all the elements in a given lists are unique? so [1, 2, 3] is unique but [1, 1, 2, 3] is not unique because 1 exists twice&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;p&gt;There are many ways of solving this problem:&lt;br&gt; &lt;code&gt;# Note: :list and -&amp;gt; bool are just python typings, they are not needed for the correct execution of the algorithm. &lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Taking advantage of sets and len:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique(l:list) -&amp;gt; bool:&#xA;    return len(set(l)) == len(l)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This one is can be seen used in other programming languages.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique2(l:list) -&amp;gt; bool:&#xA;    seen = []&#xA;&#xA;    for i in l:&#xA;        if i in seen:&#xA;            return False&#xA;        seen.append(i)&#xA;    return True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Here we just count and make sure every element is just repeated once.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique3(l:list) -&amp;gt; bool:&#xA;    for i in l:&#xA;        if l.count(i) &amp;gt; 1:&#xA;            return False&#xA;    return True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This one might look more convulated but hey, one liners.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique4(l:list) -&amp;gt; bool:&#xA;    return all(map(lambda x: l.count(x) &amp;lt; 2, l))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have the following function &lt;pre&gt;&lt;code&gt;def my_func(li = []):&#xA;    li.append(&#34;hmm&#34;)&#xA;    print(li)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If we call it 3 times, what would be the result each call?&lt;/p&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[&#39;hmm&#39;]&#xA;[&#39;hmm&#39;, &#39;hmm&#39;]&#xA;[&#39;hmm&#39;, &#39;hmm&#39;, &#39;hmm&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to iterate over a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;for item in some_list:&#xA;    print(item)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to iterate over a list with indexes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;for i, item in enumerate(some_list):&#xA;    print(i)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to start list iteration from 2nd index?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Using range like this&lt;/p&gt; &lt;pre&gt;&lt;code&gt;for i in range(1, len(some_list)):&#xA;    some_list[i]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Another way is using slicing&lt;/p&gt; &lt;pre&gt;&lt;code&gt;for i in some_list[1:]:&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to iterate over a list in reverse order?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Method 1&lt;/p&gt; &lt;pre&gt;&lt;code&gt;for i in reversed(li):&#xA;    ...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Method 2&lt;/p&gt; &lt;pre&gt;&lt;code&gt;n = len(li) - 1&#xA;while n &amp;gt; 0:&#xA;    ...&#xA;    n -= 1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Sort a list of lists by the second item of each nested list&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;li = [[1, 4], [2, 1], [3, 9], [4, 2], [4, 5]]&#xA;&#xA;sorted(li, key=lambda l: l[1])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;pre&gt;&lt;code&gt;li.sort(key=lambda l: l[1)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Combine [1, 2, 3] and [&#39;x&#39;, &#39;y&#39;, &#39;z&#39;] so the result is [(1, &#39;x&#39;), (2, &#39;y&#39;), (3, &#39;z&#39;)]&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;nums = [1, 2, 3]&#xA;letters = [&#39;x&#39;, &#39;y&#39;, &#39;z&#39;]&#xA;&#xA;list(zip(nums, letters))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is List Comprehension? Is it better than a typical loop? Why? Can you demonstrate how to use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From &lt;a href=&#34;https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions&#34;&gt;Docs&lt;/a&gt;: &#34;List comprehensions provide a concise way to create lists. Common applications are to make new lists where each element is the result of some operations applied to each member of another sequence or iterable, or to create a subsequence of those elements that satisfy a certain condition.&#34;.&lt;/p&gt; &lt;p&gt;It&#39;s better because they&#39;re compact, faster and have better readability.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For loop:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;number_lists = [[1, 7, 3, 1], [13, 93, 23, 12], [123, 423, 456, 653, 124]]&#xA;odd_numbers = []&#xA;for number_list in number_lists:&#xA;    for number in number_list:&#xA;        if number % 2 == 0:&#xA;            odd_numbers.append(number)&#xA;print(odd_numbers)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;List comprehesion:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;number_lists = [[1, 7, 3, 1], [13, 93, 23, 12], [123, 423, 456, 653, 124]]&#xA;odd_numbers = [number for number_list in number_lists for number in number_list if number % 2 == 0]&#xA;print(odd_numbers)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have the following list: &lt;code&gt;[{&#39;name&#39;: &#39;Mario&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;goombas&#39;]}, {&#39;name&#39;: &#39;Luigi&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;turtles&#39;]}]&lt;/code&gt; Extract all type of foods. Final output should be: {&#39;mushrooms&#39;, &#39;goombas&#39;, &#39;turtles&#39;}&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;brothers_menu =  \&#xA;[{&#39;name&#39;: &#39;Mario&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;goombas&#39;]}, {&#39;name&#39;: &#39;Luigi&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;turtles&#39;]}]&#xA;&#xA;# &#34;Classic&#34; Way&#xA;def get_food(brothers_menu) -&amp;gt; set:&#xA;    temp = []&#xA;&#xA;    for brother in brothers_menu:&#xA;        for food in brother[&#39;food&#39;]:&#xA;            temp.append(food)&#xA;&#xA;    return set(temp)&#xA;&#xA;# One liner way (Using list comprehension)&#xA;set([food for bro in x for food in bro[&#39;food&#39;]])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Dictionaries&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create a dictionary?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;my_dict = dict(x=1, y=2) OR my_dict = {&#39;x&#39;: 1, &#39;y&#39;: 2} OR my_dict = dict([(&#39;x&#39;, 1), (&#39;y&#39;, 2)]) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to remove a key from a dictionary?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;del my_dict[&#39;some_key&#39;] you can also use &lt;code&gt;my_dict.pop(&#39;some_key&#39;)&lt;/code&gt; which returns the value of the key. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to sort a dictionary by values?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;{k: v for k, v in sorted(x.items(), key=lambda item: item[1])}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to sort a dictionary by keys?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;dict(sorted(some_dictionary.items()))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to merge two dictionaries?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;some_dict1.update(some_dict2)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Convert the string &#34;a.b.c&#34; to the dictionary &lt;code&gt;{&#39;a&#39;: {&#39;b&#39;: {&#39;c&#39;: 1}}}&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;output = {}&#xA;string = &#34;a.b.c&#34;&#xA;path = string.split(&#39;.&#39;)&#xA;target = reduce(lambda d, k: d.setdefault(k, {}), path[:-1], output)&#xA;target[path[-1]] = 1&#xA;print(output)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Common Algorithms Implementation&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you implement &#34;binary search&#34; in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/coding/python/binary_search.py&#34;&gt;Solution&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python Files&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to write to a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;with open(&#39;file.txt&#39;, &#39;w&#39;) as file:&#xA;    file.write(&#34;My insightful comment&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Sum all the integers in a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print a random line of a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print every 3rd line of a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print the number of lines in a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print the number of of words in a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you write a function which will print all the file in a given directory? including sub-directories&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a dictionary (variable) to a file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import json&#xA;&#xA;with open(&#39;file.json&#39;, &#39;w&#39;) as f:&#xA;    f.write(json.dumps(dict_var))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python OS&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print current working directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import os&#xA;&#xA;print(os.getcwd())&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the path &lt;code&gt;/dir1/dir2/file1&lt;/code&gt; print the file name (file1)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import os&#xA;&#xA;print(os.path.basename(&#39;/dir1/dir2/file1&#39;))&#xA;&#xA;# Another way&#xA;print(os.path.split(&#39;/dir1/dir2/file1&#39;)[1])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the path &lt;code&gt;/dir1/dir2/file1&lt;/code&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Print the path without the file name (/dir1/dir2)&lt;/li&gt; &#xA;   &lt;li&gt;Print the name of the directory where the file resides (dir2)&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import os&#xA;&#xA;## Part 1.&#xA;# os.path.dirname gives path removing the end component&#xA;dirpath = os.path.dirname(&#39;/dir1/dir2/file1&#39;)&#xA;print(dirpath)&#xA;&#xA;## Part 2.&#xA;print(os.path.basename(dirpath))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you execute shell commands using Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you join path components? for example &lt;code&gt;/home&lt;/code&gt; and &lt;code&gt;luig&lt;/code&gt; will result in &lt;code&gt;/home/luigi&lt;/code&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you remove non-empty directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Regex&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you perform regular expressions related operations in Python? (match patterns, substitute strings, etc.)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the re module &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to find all the IP addresses in a variable? How to find them in a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Strings&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find the first repeated character in a string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;While you iterate through the characters, store them in a dictionary and check for every character whether it&#39;s already in the dictionary.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def firstRepeatedCharacter(str):&#xA;    chars = {}&#xA;    for ch in str:&#xA;        if ch in chars:&#xA;            return ch&#xA;        else:&#xA;            chars[ch] = 0&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to extract the unique characters from a string? for example given the input &#34;itssssssameeeemarioooooo&#34; the output will be &#34;mrtisaoe&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;x = &#34;itssssssameeeemarioooooo&#34;&#xA;y = &#39;&#39;.join(set(x))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find all the permutations of a given string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;def permute_string(string):&#xA;&#xA;    if len(string) == 1:&#xA;        return [string]&#xA;&#xA;    permutations = []&#xA;    for i in range(len(string)):&#xA;        swaps = permute_string(string[:i] + string[(i+1):])&#xA;        for swap in swaps:&#xA;            permutations.append(string[i] + swap)&#xA;&#xA;    return permutations&#xA;&#xA;print(permute_string(&#34;abc&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Short way (but probably not acceptable in interviews):&lt;/p&gt; &lt;pre&gt;&lt;code&gt;from itertools import permutations&#xA;&#xA;[&#39;&#39;.join(p) for p in permutations(&#34;abc&#34;)]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Detailed answer can be found here: &lt;a href=&#34;http://codingshell.com/python-all-string-permutations&#34;&gt;http://codingshell.com/python-all-string-permutations&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check if a string contains a sub string?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find the frequency of each character in string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Count the number of spaces in a string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can use the &#34;count&#34; method like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#xA;ImAString.count(&#34; &#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given a string, find the N most repeated words&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the string (which represents a matrix) &#34;1 2 3\n4 5 6\n7 8 9&#34; create rows and colums variables (should contain integers, not strings)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of each of the following? &lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; &#39;, &#39;.join([&#34;One&#34;, &#34;Two&#34;, &#34;Three&#34;])&#xA;&amp;gt;&amp;gt; &#34; &#34;.join(&#34;welladsadgadoneadsadga&#34;.split(&#34;adsadga&#34;)[:2])&#xA;&amp;gt;&amp;gt; &#34;&#34;.join([&#34;c&#34;, &#34;t&#34;, &#34;o&#34;, &#34;a&#34;, &#34;o&#34;, &#34;q&#34;, &#34;l&#34;])[0::2]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; &#39;One, Two, Three&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; &#39;well done&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; &#39;cool&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If &lt;code&gt;x = &#34;pizza&#34;&lt;/code&gt;, what would be the result of &lt;code&gt;x[::-1]&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It will reverse the string, so x would be equal to &lt;code&gt;azzip&lt;/code&gt;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Reverse each word in a string (while keeping the order)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the output of the following code: &lt;code&gt;&#34;&#34;.join([&#34;a&#34;, &#34;h&#34;, &#34;m&#34;, &#34;a&#34;, &#34;h&#34;, &#34;a&#34;, &#34;n&#34;, &#34;q&#34;, &#34;r&#34;, &#34;l&#34;, &#34;o&#34;, &#34;i&#34;, &#34;f&#34;, &#34;o&#34;, &#34;o&#34;])[2::3]&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;mario &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python Iterators&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an iterator?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain data serialization and how do you perform it with Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you handle argument parsing in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a generator? Why using generators?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What would be the output of the following block? &lt;pre&gt;&lt;code&gt;for i in range(3, 3):&#xA;   print(i)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;No output :) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &lt;code&gt;yeild&lt;/code&gt;? When would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following types of methods and how to use them: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Static method&lt;/li&gt; &#xA;   &lt;li&gt;Class method&lt;/li&gt; &#xA;   &lt;li&gt;instance method&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to reverse a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to combine list of strings into one string with spaces between the strings&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have the following list of nested lists: &lt;code&gt;[[&#39;Mario&#39;, 90], [&#39;Geralt&#39;, 82], [&#39;Gordon&#39;, 88]]&lt;/code&gt; How to sort the list by the numbers in the nested lists?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;One way is:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;the_list.sort(key=lambda x: x[1]) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;zip()&lt;/li&gt; &#xA;   &lt;li&gt;map()&lt;/li&gt; &#xA;   &lt;li&gt;filter()&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Python - Slicing&lt;/h4&gt; &#xA;&lt;p&gt;For the following slicing exercises, assume you have the following list: &lt;code&gt;my_list = [8, 2, 1, 10, 5, 4, 3, 9]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[0:4]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[5:6]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[5:5]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[::-1]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[::3]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[2:]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[:3]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Debugging&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug Python code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;pdb :D &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check how much time it took to execute a certain script or block of code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What empty &lt;code&gt;return&lt;/code&gt; returns?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;p&gt;Short answer is: It returns a None object.&lt;/p&gt; &#xA; &lt;p&gt;We could go a bit deeper and explain the difference between&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def a ():&#xA;    return&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;And&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def a ():&#xA;    pass&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Or we could be asked this as a following question, since they both give the same result.&lt;/p&gt; &#xA; &lt;p&gt;We could use the dis module to see what&#39;s going on:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;  2           0 LOAD_CONST               0 (&amp;lt;code object a at 0x0000029C4D3C2DB0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 2&amp;gt;)&#xA;              2 LOAD_CONST               1 (&#39;a&#39;)&#xA;              4 MAKE_FUNCTION            0&#xA;              6 STORE_NAME               0 (a)&#xA;&#xA;  5           8 LOAD_CONST               2 (&amp;lt;code object b at 0x0000029C4D3C2ED0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 5&amp;gt;)&#xA;             10 LOAD_CONST               3 (&#39;b&#39;)&#xA;             12 MAKE_FUNCTION            0&#xA;             14 STORE_NAME               1 (b)&#xA;             16 LOAD_CONST               4 (None)&#xA;             18 RETURN_VALUE&#xA;&#xA;Disassembly of &amp;lt;code object a at 0x0000029C4D3C2DB0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 2&amp;gt;:&#xA;  3           0 LOAD_CONST               0 (None)&#xA;              2 RETURN_VALUE&#xA;&#xA;Disassembly of &amp;lt;code object b at 0x0000029C4D3C2ED0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 5&amp;gt;:&#xA;  6           0 LOAD_CONST               0 (None)&#xA;              2 RETURN_VALUE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;An empty &lt;code&gt; return&lt;/code&gt; is exactly the same as &lt;code&gt;return None&lt;/code&gt; and functions without any explicit return will always return None regardless of the operations, therefore&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def sum(a, b):&#xA;    global c&#xA;    c = a + b&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to improve the following block of code? &lt;pre&gt;&lt;code&gt;li = []&#xA;for i in range(1, 10):&#xA;    li.append(i)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[i for i in range(1, 10)]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the following function &lt;pre&gt;&lt;code&gt;def is_int(num):&#xA;    if isinstance(num, int):&#xA;        print(&#39;Yes&#39;)&#xA;    else:&#xA;        print(&#39;No&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;What would be the result of is_int(2) and is_int(False)?&lt;/p&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python - Linked List&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you implement a linked list in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The reason we need to implement in the first place, it&#39;s because a linked list isn&#39;t part of Python standard library.&lt;br&gt; To implement a linked list, we have to implement two structures: The linked list itself and a node which is used by the linked list.&lt;/p&gt; &lt;p&gt;Let&#39;s start with a node. A node has some value (the data it holds) and a pointer to the next node&lt;/p&gt; &lt;pre&gt;&lt;code&gt;class Node(object):&#xA;    def __init__(self, data):&#xA;        self.data = data&#xA;        self.next = None&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now the linked list. An empty linked list has nothing but an empty head.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;class LinkedList(object):&#xA;    def __init__(self):&#xA;        self.head = None&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now we can start using the linked list&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ll = Linkedlist()&#xA;ll.head = Node(1)&#xA;ll.head.next = Node(2)&#xA;ll.head.next.next = Node(3)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;What we have is:&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;p&gt;| 1 | -&amp;gt; | 2 | -&amp;gt; | 3 |&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;p&gt;Usually, more methods are implemented, like a push_head() method where you insert a node at the beginning of the linked list&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def push_head(self, value):&#xA;    new_node = Node(value)&#xA;    new_node.next = self.head&#xA;    self.head = new_node&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Add a method to the Linked List class to traverse (print every node&#39;s data) the linked list&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;def print_list(self): node = self.head while(node): print(node.data) node = node.next &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a method to that will return a boolean based on whether there is a loop in a linked list or not&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Let&#39;s use the Floyd&#39;s Cycle-Finding algorithm:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def loop_exists(self):&#xA;    one_step_p = self.head&#xA;    two_steps_p = self.head&#xA;    while(one_step_p and two_steps_p and two_steps_p.next):&#xA;        one_step_p = self.head.next&#xA;        two_step_p = self.head.next.next&#xA;        if (one_step_p == two_steps_p):&#xA;            return True &#xA;    return False&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Stack&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Implement Stack in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Testing&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is your experience with writing tests in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is PEP8? Give an example of 3 style guidelines&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;PEP8 is a list of coding conventions and style guidelines for Python&lt;/p&gt; &lt;p&gt;5 style guidelines:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1. Limit all lines to a maximum of 79 characters.&#xA;2. Surround top-level function and class definitions with two blank lines.&#xA;3. Use commas when making a tuple of one element&#xA;4. Use spaces (and not tabs) for indentation&#xA;5. Use 4 spaces per indentation level&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to test if an exception was raised?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;assert&lt;/code&gt; does in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain mocks&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you measure execution time of small code snippets?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why one shouldn&#39;t use &lt;code&gt;assert&lt;/code&gt; in non-test/production code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Flask&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe what is Django/Flask and how you have used it? Why Flask and not Django? (or vice versa)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a route?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; As every web framework, Flask provides a route functionality that lets you serve a content of a given URL. &lt;p&gt;There are multiple ways to map a URL with a function in Python.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Decorator: you can use python decorators. In this case we&#39;re using &lt;code&gt;app&lt;/code&gt;. This &lt;code&gt;app&lt;/code&gt; decorator is the instance of the &lt;code&gt;Flask&lt;/code&gt; class. And route it&#39;s a method of this class.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;@app.route(&#39;/&#39;)&#xA;def home():&#xA;  return &#39;main website&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;add_url_rule&lt;/code&gt; method: This is a method of the Flask class. We can also use it for map the URL with a function.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;def home():&#xA;  return &#39;main website&#39;&#xA;&#xA;app.add_url_rule(&#39;/&#39;, view_func=home)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a blueprint in Flask?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a template?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;zip&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given &lt;code&gt;x = [1, 2, 3]&lt;/code&gt;, what is the result of list(zip(x))?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[(1,), (2,), (3,)]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of each of the following: &lt;pre&gt;&lt;code&gt;list(zip(range(5), range(50), range(50)))&#xA;list(zip(range(5), range(50), range(-2)))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[(0, 0, 0), (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4)]&#xA;[]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python Descriptors&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Descriptors&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read about descriptors &lt;a href=&#34;https://docs.python.org/3/howto/descriptor.html&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What would be the result of running &lt;code&gt;a.num2&lt;/code&gt; assuming the following code &lt;pre&gt;&lt;code&gt;class B:&#xA;    def __get__(self, obj, objtype=None):&#xA;        reuturn 10&#xA;&#xA;class A:&#xA;    num1 = 2&#xA;    num2 = Five()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; 10 &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What would be the result of running &lt;code&gt;some_car = Car(&#34;Red&#34;, 4)&lt;/code&gt; assuming the following code &lt;pre&gt;&lt;code&gt;class Print:&#xA;&#xA;    def __get__(self, obj, objtype=None):&#xA;        value = obj._color&#xA;        print(&#34;Color was set to {}&#34;.format(valie))&#xA;        return value&#xA;&#xA;    def __set__(self, obj, value):&#xA;        print(&#34;The color of the car is {}&#34;.format(value))&#xA;        obj._color = value&#xA;&#xA;class Car:&#xA;&#xA;    color = Print()&#xA;&#xA;    def __ini__(self, color, age):&#xA;        self.color = color&#xA;        self.age = age&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; An instance of Car class will be created and the following will be printed: &#34;The color of the car is Red&#34; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you spawn multiple processes with Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Implement simple calculator for two numbers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;def add(num1, num2):&#xA;    return num1 + num2&#xA;&#xA;&#xA;def sub(num1, num2):&#xA;    return num1 - num2&#xA;&#xA;&#xA;def mul(num1, num2):&#xA;    return num1*num2&#xA;&#xA;&#xA;def div(num1, num2):&#xA;    return num1 / num2&#xA;&#xA;operators = {&#xA;    &#39;+&#39;: add,&#xA;    &#39;-&#39;: sub,&#xA;    &#39;*&#39;: mul,&#xA;    &#39;/&#39;: div&#xA;}&#xA;&#xA;if __name__ == &#39;__main__&#39;:&#xA;    operator = str(input(&#34;Operator: &#34;))&#xA;    num1 = int(input(&#34;1st number: &#34;))&#xA;    num2 = int(input(&#34;2nd number: &#34;))&#xA;    print(operators[operator](num1, num2))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What data types are you familiar with that are not Python built-in types but still provided by modules which are part of the standard library?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a good reference &lt;a href=&#34;https://docs.python.org/3/library/datatypes.html&#34;&gt;https://docs.python.org/3/library/datatypes.html&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a decorator&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;b&gt;In python, everything is an object, even functions themselves. Therefore you could pass functions as arguments for another function eg; &lt;pre&gt;&lt;code&gt;def wee(word):&#xA;    return word&#xA;&#xA;def oh(f):&#xA;    return f + &#34;Ohh&#34;&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; oh(wee(&#34;Wee&#34;))&#xA;&amp;lt;&amp;lt;&amp;lt; Wee Ohh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This allows us to control the before execution of any given function and if we added another function as wrapper, (a function receiving another function that receives a function as parameter) we could also control the after execution.&lt;/p&gt; &lt;p&gt;Sometimes we want to control the before-after execution of many functions and it would get tedious to write&lt;/p&gt; &lt;p&gt;&lt;code&gt; f = function(function_1())&lt;/code&gt; &lt;code&gt; f = function(function_1(function_2(*args)))&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;every time, that&#39;s what decorators do, they introduce syntax to write all of this on the go, using the keyword &#39;@&#39;. &lt;/b&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you show how to write and use decorators?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;code&gt; These two decorators (ntimes and timer) are usually used to display decorators functionalities, you can find them in lots of tutorials/reviews. I first saw these examples two years ago in pyData 2017. https://www.youtube.com/watch?v=7lmCu8wz8ro&amp;amp;t=3731s&lt;/code&gt; &lt;pre&gt;&lt;code&gt;Simple decorator:&#xA;&#xA;def deco(f):&#xA;    print(f&#34;Hi I am the {f.__name__}() function!&#34;)&#xA;    return f&#xA;&#xA;@deco&#xA;def hello_world():&#xA;    return &#34;Hi, I&#39;m in!&#34;&#xA;&#xA;a = hello_world()&#xA;print(a)&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; Hi I am the hello_world() function!&#xA;    Hi, I&#39;m in!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is the simplest decorator version, it basically saves us from writting &lt;code&gt;a = deco(hello_world())&lt;/code&gt;. But at this point we can only control the before execution, let&#39;s take on the after:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def deco(f):&#xA;    def wrapper(*args, **kwargs):&#xA;        print(&#34;Rick Sanchez!&#34;)&#xA;        func = f(*args, **kwargs)&#xA;        print(&#34;I&#39;m in!&#34;)&#xA;        return func&#xA;    return wrapper&#xA;&#xA;@deco&#xA;def f(word):&#xA;    print(word)&#xA;&#xA;a = f(&#34;************&#34;)&#xA;&amp;gt;&amp;gt;&amp;gt; Rick Sanchez!&#xA;    ************&#xA;    I&#39;m in!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;deco receives a function -&amp;gt; f wrapper receives the arguments -&amp;gt; *args, **kwargs&lt;/p&gt; &lt;p&gt;wrapper returns the function plus the arguments -&amp;gt; f(*args, **kwargs) deco returns wrapper.&lt;/p&gt; &lt;p&gt;As you can see we conveniently do things before and after the execution of a given function.&lt;/p&gt; &lt;p&gt;For example, we could write a decorator that calculates the execution time of a function.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;import time&#xA;def deco(f):&#xA;    def wrapper(*args, **kwargs):&#xA;        before = time.time()&#xA;        func = f(*args, **kwargs)&#xA;        after = time.time()&#xA;        print(after-before)&#xA;        return func&#xA;    return wrapper&#xA;&#xA;@deco&#xA;def f():&#xA;    time.sleep(2)&#xA;    print(&#34;************&#34;)&#xA;&#xA;a = f()&#xA;&amp;gt;&amp;gt;&amp;gt; 2.0008859634399414&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or create a decorator that executes a function n times.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def n_times(n):&#xA;    def wrapper(f):&#xA;        def inner(*args, **kwargs):&#xA;            for _ in range(n):&#xA;                func = f(*args, **kwargs)&#xA;            return func&#xA;        return inner&#xA;    return wrapper&#xA;&#xA;@n_times(4)&#xA;def f():&#xA;    print(&#34;************&#34;)&#xA;&#xA;a = f()&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt;************&#xA;   ************&#xA;   ************&#xA;   ************&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a decorator that calculates the execution time of a function&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a script which will determine if a given host is accessible on a given port&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are you familiar with Dataclasses? Can you explain what are they used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You wrote a class to represent a car. How would you compare two cars instances if two cars are equal if they have the same model and color?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;class Car:&#xA;    def __init__(self, model, color):&#xA;        self.model = model&#xA;        self.color = color&#xA;&#xA;    def __eq__(self, other):&#xA;        if not isinstance(other, Car):&#xA;            return NotImplemented&#xA;        return self.model == other.model and self.color == other.color&#xA;&#xA;&amp;gt;&amp;gt; a = Car(&#39;model_1&#39;, &#39;red&#39;)&#xA;&amp;gt;&amp;gt; b = Car(&#39;model_2&#39;, &#39;green&#39;)&#xA;&amp;gt;&amp;gt; c = Car(&#39;model_1&#39;, &#39;red&#39;)&#xA;&amp;gt;&amp;gt; a == b&#xA;False&#xA;&amp;gt;&amp;gt; a == c&#xA;True&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Context Manager&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me everything you know about concurrency in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the Buffer Protocol&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with web scraping? Can you describe what have you used and for what?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you implement Linux&#39;s &lt;code&gt;tail&lt;/code&gt; command in Python? Bonus: implement &lt;code&gt;head&lt;/code&gt; as well&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have created a web page where a user can upload a document. But the function which reads the uploaded files, runs for a long time, based on the document size and user has to wait for the read operation to complete before he/she can continue using the web site. How can you overcome this?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How yield works exactly?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Monitoring&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain monitoring. What is it? What its goal?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Google: &#34;Monitoring is one of the primary means by which service owners keep track of a system’s health and availability&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is wrong with the old approach of watching for a specific value and trigger an email/phone alert while value is exceeded?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This approach require from a human to always check why the value exceeded and how to handle it while today, it is more effective to notify people only when they need to take an actual action. If the issue doesn&#39;t require any human intervention, then the problem can be fixed by some processes running in the relevant environment. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of monitoring outputs are you familiar with and/or used in the past?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Alerts&lt;br&gt; Tickets&lt;br&gt; Logging&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between infrastructure monitoring and application monitoring? (methods, tools, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Prometheus&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Prometheus? What are some of Prometheus&#39;s main features?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In what scenarios it might be better to NOT use Prometheus?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From Prometheus documentation: &#34;if you need 100% accuracy, such as for per-request billing&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Prometheus architecture and components&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you compare Prometheus to other solutions like InfluxDB for example?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Alert?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the following Prometheus components: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Prometheus server&lt;/li&gt; &#xA;   &lt;li&gt;Push Gateway&lt;/li&gt; &#xA;   &lt;li&gt;Alert Manager&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Prometheus server is responsible for scraping and storing the data&lt;br&gt; Push gateway is used for short-lived jobs&lt;br&gt; Alert manager is responsible for alerts ;) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Instance? What is a Job?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What core metrics types Prometheus supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an exporter? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which Prometheus best practices are you familiar with?. Name at least three&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to get total requests in a given period of time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What HA in Prometheus means?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you join two metrics?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to write a query that returns the value of a label?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you convert cpu_user_seconds to cpu usage in percentage?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Go&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are some characteristics of the Go programming language?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Strong and static typing - the type of the variables can&#39;t be changed over time and they have to be defined at compile time&lt;/li&gt; &#xA;   &lt;li&gt;Simplicity&lt;/li&gt; &#xA;   &lt;li&gt;Fast compile times&lt;/li&gt; &#xA;   &lt;li&gt;Built-in concurrency&lt;/li&gt; &#xA;   &lt;li&gt;Garbage collected&lt;/li&gt; &#xA;   &lt;li&gt;Platform independent&lt;/li&gt; &#xA;   &lt;li&gt;Compile to standalone binary - anything you need to run your app will be compiled into one binary. Very useful for version management in run-time.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Go also has good community. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between &lt;code&gt;var x int = 2&lt;/code&gt; and &lt;code&gt;x := 2&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The result is the same, a variable with the value 2.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;With &lt;code&gt;var x int = 2&lt;/code&gt; we are setting the variable type to integer while with &lt;code&gt;x := 2&lt;/code&gt; we are letting Go figure out by itself the type. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In Go we can redeclare variables and once declared we must use it.&lt;/summary&gt; &#xA; &lt;p&gt;False. We can&#39;t redeclare variables but yes, we must used declared variables. &lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What libraries of Go have you used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;This should be answered based on your usage but some examples are:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;fmt - formatted I/O &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the problem with the following block of code? How to fix it? &lt;pre&gt;&lt;code&gt;func main() {&#xA;    var x float32 = 13.5&#xA;    var y int&#xA;    y = x&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;The following block of code tries to convert the integer 101 to a string but instead we get &#34;e&#34;. Why is that? How to fix it? &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;func main() {&#xA;    var x int = 101&#xA;    var y string&#xA;    y = string(x)&#xA;    fmt.Println(y)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It looks what unicode value is set at 101 and uses it for converting the integer to a string. If you want to get &#34;101&#34; you should use the package &#34;strconv&#34; and replace &lt;code&gt;y = string(x)&lt;/code&gt; with &lt;code&gt;y = strconv.Itoa(x)&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is wrong with the following code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;func main() {&#xA;    var x = 2&#xA;    var y = 3&#xA;    const someConst = x + y&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Constants in Go can only be declared using constant expressions. But &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and their sum is variable. &lt;br&gt; &lt;code&gt;const initializer x + y is not a constant&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;const (&#xA;&#x9;x = iota&#xA;&#x9;y = iota&#xA;)&#xA;const z = iota&#xA;&#xA;func main() {&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, x)&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, y)&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, z)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Go&#39;s iota identifier is used in const declarations to simplify definitions of incrementing numbers. Because it can be used in expressions, it provides a generality beyond that of simple enumerations. &lt;br&gt; &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; in the first iota group, &lt;code&gt;z&lt;/code&gt; in the second. &lt;br&gt; &lt;a href=&#34;https://github.com/golang/go/wiki/Iota&#34;&gt;Iota page in Go Wiki&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What _ is used for in Go?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It avoids having to declare all the variables for the returns values. It is called the &lt;a href=&#34;https://golang.org/doc/effective_go.html#blank&#34;&gt;blank identifier&lt;/a&gt;. &lt;br&gt; &lt;a href=&#34;https://stackoverflow.com/questions/27764421/what-is-underscore-comma-in-a-go-declaration#answer-27764432&#34;&gt;answer in SO&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;const (&#xA;&#x9;_ = iota + 3&#xA;&#x9;x&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, x)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Since the first iota is declared with the value &lt;code&gt;3&lt;/code&gt; (&lt;code&gt; + 3&lt;/code&gt;), the next one has the value &lt;code&gt;4&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;&#x9;&#34;sync&#34;&#xA;&#x9;&#34;time&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;var wg sync.WaitGroup&#xA;&#xA;&#x9;wg.Add(1)&#xA;&#x9;go func() {&#xA;&#x9;&#x9;time.Sleep(time.Second * 2)&#xA;&#x9;&#x9;fmt.Println(&#34;1&#34;)&#xA;&#x9;&#x9;wg.Done()&#xA;&#x9;}()&#xA;&#xA;&#x9;go func() {&#xA;&#x9;&#x9;fmt.Println(&#34;2&#34;)&#xA;&#x9;}()&#xA;&#xA;&#x9;wg.Wait()&#xA;&#x9;fmt.Println(&#34;3&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Output: 2 1 3&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://tutorialedge.net/golang/go-waitgroup-tutorial/&#34;&gt;Aritcle about sync/waitgroup&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://golang.org/pkg/sync/&#34;&gt;Golang package sync&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;)&#xA;&#xA;func mod1(a []int) {&#xA;&#x9;for i := range a {&#xA;&#x9;&#x9;a[i] = 5&#xA;&#x9;}&#xA;&#xA;&#x9;fmt.Println(&#34;1:&#34;, a)&#xA;}&#xA;&#xA;func mod2(a []int) {&#xA;&#x9;a = append(a, 125) // !&#xA;&#xA;&#x9;for i := range a {&#xA;&#x9;&#x9;a[i] = 5&#xA;&#x9;}&#xA;&#xA;&#x9;fmt.Println(&#34;2:&#34;, a)&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;s1 := []int{1, 2, 3, 4}&#xA;&#x9;mod1(s1)&#xA;&#x9;fmt.Println(&#34;1:&#34;, s1)&#xA;&#xA;&#x9;s2 := []int{1, 2, 3, 4}&#xA;&#x9;mod2(s2)&#xA;&#x9;fmt.Println(&#34;2:&#34;, s2)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Output: &lt;code&gt;&lt;br&gt; 1 [5 5 5 5]&lt;br&gt; 1 [5 5 5 5]&lt;br&gt; 2 [5 5 5 5 5]&lt;br&gt; 2 [1 2 3 4]&lt;br&gt; &lt;/code&gt;&lt;/p&gt; &lt;p&gt;In &lt;code&gt;mod1&lt;/code&gt; a is link, and when we&#39;re using &lt;code&gt;a[i]&lt;/code&gt;, we&#39;re changing &lt;code&gt;s1&lt;/code&gt; value to. But in &lt;code&gt;mod2&lt;/code&gt;, &lt;code&gt;append&lt;/code&gt; creats new slice, and we&#39;re changing only &lt;code&gt;a&lt;/code&gt; value, not &lt;code&gt;s2&lt;/code&gt;.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://golangbot.com/arrays-and-slices/&#34;&gt;Aritcle about arrays&lt;/a&gt;, &lt;a href=&#34;https://blog.golang.org/slices&#34;&gt;Blog post about &lt;code&gt;append&lt;/code&gt;&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;container/heap&#34;&#xA;&#x9;&#34;fmt&#34;&#xA;)&#xA;&#xA;// An IntHeap is a min-heap of ints.&#xA;type IntHeap []int&#xA;&#xA;func (h IntHeap) Len() int           { return len(h) }&#xA;func (h IntHeap) Less(i, j int) bool { return h[i] &amp;lt; h[j] }&#xA;func (h IntHeap) Swap(i, j int)      { h[i], h[j] = h[j], h[i] }&#xA;&#xA;func (h *IntHeap) Push(x interface{}) {&#xA;&#x9;// Push and Pop use pointer receivers because they modify the slice&#39;s length,&#xA;&#x9;// not just its contents.&#xA;&#x9;*h = append(*h, x.(int))&#xA;}&#xA;&#xA;func (h *IntHeap) Pop() interface{} {&#xA;&#x9;old := *h&#xA;&#x9;n := len(old)&#xA;&#x9;x := old[n-1]&#xA;&#x9;*h = old[0 : n-1]&#xA;&#x9;return x&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;h := &amp;amp;IntHeap{4, 8, 3, 6}&#xA;&#x9;heap.Init(h)&#xA;&#x9;heap.Push(h, 7)&#xA;&#xA;  fmt.Println((*h)[0])&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Output: 3&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://golang.org/pkg/container/heap/&#34;&gt;Golang container/heap package&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Mongo&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages of MongoDB? Or in other words, why choosing MongoDB and not other implementation of NoSQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;MongoDB advantages are as followings:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Schemaless&lt;/li&gt; &#xA;   &lt;li&gt;Easy to scale-out&lt;/li&gt; &#xA;   &lt;li&gt;No complex joins&lt;/li&gt; &#xA;   &lt;li&gt;Structure of a single object is clear&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between SQL and NoSQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The main difference is that SQL databases are structured (data is stored in the form of tables with rows and columns - like an excel spreadsheet table) while NoSQL is unstructured, and the data storage can vary depending on how the NoSQL DB is set up, such as key-value pair, document-oriented, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In what scenarios would you prefer to use NoSQL/Mongo over SQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Heterogeneous data which changes often&lt;/li&gt; &lt;li&gt;Data consistency and integrity is not top priority&lt;/li&gt; &lt;li&gt;Best if the database needs to scale rapidly &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a document? What is a collection?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an aggregator?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is better? Embedded documents or referenced?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Have you performed data retrieval optimizations in Mongo? If not, can you think about ways to optimize a slow data retrieval?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Queries&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain this query: &lt;code&gt;db.books.find({&#34;name&#34;: /abc/})&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain this query: &lt;code&gt;db.books.find().sort({x:1})&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between find() and find_one()?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you export data from Mongo DB?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;mongoexport&lt;/li&gt; &lt;li&gt;programming languages &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;SQL&lt;/h2&gt; &#xA;&lt;h3&gt;SQL Exercises&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Functions vs. Comparisons&lt;/td&gt; &#xA;   &lt;td&gt;Query Improvements&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/sql/improve_query.md&#34;&gt;Exercise&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/sql/solutions/improve_query.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;SQL Self Assessment&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;SQL (Structured Query Language) is a standard language for relational databases (like MySQL, MariaDB, ...).&lt;br&gt; It&#39;s used for reading, updating, removing and creating data in a relational database. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How is SQL Different from NoSQL&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The main difference is that SQL databases are structured (data is stored in the form of tables with rows and columns - like an excel spreadsheet table) while NoSQL is unstructured, and the data storage can vary depending on how the NoSQL DB is set up, such as key-value pair, document-oriented, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When is it best to use SQL? NoSQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;SQL - Best used when data integrity is crucial. SQL is typically implemented with many businesses and areas within the finance field due to it&#39;s ACID compliance.&lt;/p&gt; &lt;p&gt;NoSQL - Great if you need to scale things quickly. NoSQL was designed with web applications in mind, so it works great if you need to quickly spread the same information around to multiple servers&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Additionally, since NoSQL does not adhere to the strict table with columns and rows structure that Relational Databases require, you can store different data types together. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Practical SQL - Basics&lt;/h5&gt; &#xA;&lt;p&gt;For these questions, we will be using the Customers and Orders tables shown below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Customers&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Customer_ID&lt;/th&gt; &#xA;   &lt;th&gt;Customer_Name&lt;/th&gt; &#xA;   &lt;th&gt;Items_in_cart&lt;/th&gt; &#xA;   &lt;th&gt;Cash_spent_to_Date&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100204&lt;/td&gt; &#xA;   &lt;td&gt;John Smith&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;20.00&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Jane Smith&lt;/td&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;40.00&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;Bobby Frank&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;100.20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;ORDERS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Customer_ID&lt;/th&gt; &#xA;   &lt;th&gt;Order_ID&lt;/th&gt; &#xA;   &lt;th&gt;Item&lt;/th&gt; &#xA;   &lt;th&gt;Price&lt;/th&gt; &#xA;   &lt;th&gt;Date_sold&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;A123&lt;/td&gt; &#xA;   &lt;td&gt;Rubber Ducky&lt;/td&gt; &#xA;   &lt;td&gt;2.20&lt;/td&gt; &#xA;   &lt;td&gt;2019-09-18&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;A123&lt;/td&gt; &#xA;   &lt;td&gt;Bubble Bath&lt;/td&gt; &#xA;   &lt;td&gt;8.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-09-18&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;Q987&lt;/td&gt; &#xA;   &lt;td&gt;80-Pack TP&lt;/td&gt; &#xA;   &lt;td&gt;90.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-09-20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Tuna Fish&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Chicken&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Beef&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Kitty quesadilla&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100204&lt;/td&gt; &#xA;   &lt;td&gt;X202&lt;/td&gt; &#xA;   &lt;td&gt;Coffee&lt;/td&gt; &#xA;   &lt;td&gt;20.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-04-29&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would I select all fields from this table?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select * &lt;br&gt; From Customers; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How many items are in John&#39;s cart?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select Items_in_cart &lt;br&gt; From Customers &lt;br&gt; Where Customer_Name = &#34;John Smith&#34;; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the sum of all the cash spent across all customers?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select SUM(Cash_spent_to_Date) as SUM_CASH &lt;br&gt; From Customers; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How many people have items in their cart?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select count(1) as Number_of_People_w_items &lt;br&gt; From Customers &lt;br&gt; where Items_in_cart &amp;gt; 0; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you join the customer table to the order table?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You would join them on the unique key. In this case, the unique key is Customer_ID in both the Customers table and Orders table &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you show which customer ordered which items?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Select c.Customer_Name, o.Item &lt;br&gt; From Customers c &lt;br&gt; Left Join Orders o &lt;br&gt; On c.Customer_ID = o.Customer_ID;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using a with statement, how would you show who ordered cat food, and the total amount of money spent?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;with cat_food as ( &lt;br&gt; Select Customer_ID, SUM(Price) as TOTAL_PRICE &lt;br&gt; From Orders &lt;br&gt; Where Item like &#34;%Cat Food%&#34; &lt;br&gt; Group by Customer_ID &lt;br&gt; ) &lt;br&gt; Select Customer_name, TOTAL_PRICE &lt;br&gt; From Customers c &lt;br&gt; Inner JOIN cat_food f &lt;br&gt; ON c.Customer_ID = f.Customer_ID &lt;br&gt; where c.Customer_ID in (Select Customer_ID from cat_food);&lt;/p&gt; &lt;p&gt;Although this was a simple statement, the &#34;with&#34; clause really shines when a complex query needs to be run on a table before joining to another. With statements are nice, because you create a pseudo temp when running your query, instead of creating a whole new table.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The Sum of all the purchases of cat food weren&#39;t readily available, so we used a with statement to create the pseudo table to retrieve the sum of the prices spent by each customer, then join the table normally. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which of the following queries would you use? &lt;pre&gt;&lt;code&gt;SELECT count(*)                             SELECT count(*)&#xA;FROM shawarma_purchases                     FROM shawarma_purchases&#xA;WHERE                               vs.     WHERE&#xA;  YEAR(purchased_at) == &#39;2017&#39;              purchased_at &amp;gt;= &#39;2017-01-01&#39; AND&#xA;                                            purchased_at &amp;lt;= &#39;2017-31-12&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;SELECT count(*)&#xA;FROM shawarma_purchases&#xA;WHERE&#xA;  purchased_at &amp;gt;= &#39;2017-01-01&#39; AND&#xA;  purchased_at &amp;lt;= &#39;2017-31-12&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;When you use a function (&lt;code&gt;YEAR(purchased_at)&lt;/code&gt;) it has to scan the whole database as opposed to using indexes and basically the column as it is, in its natural state. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;GCP&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain GCP&#39;s architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the main components and services of GCP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;Components&lt;/th&gt; &#xA;     &lt;th&gt;Services&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Compute&lt;/td&gt; &#xA;     &lt;td&gt;Compute Engine&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;App Engine&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Kubernetes Engine&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Function&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Run&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Storage &amp;amp;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Storage&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Database&lt;/td&gt; &#xA;     &lt;td&gt;Cloud SQL&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud BigTable&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Spanner&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Datastore&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Networking&lt;/td&gt; &#xA;     &lt;td&gt;VPC&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Load Balancing&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Armor&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud CDN&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud DNS&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Interconnect&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Big Data&lt;/td&gt; &#xA;     &lt;td&gt;Big Query&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Dataproc&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Datalab&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Data Studio&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;DevOps&lt;/td&gt; &#xA;     &lt;td&gt;Container Registry&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Build&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Source Repository&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Identity &amp;amp;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Identity&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Security&lt;/td&gt; &#xA;     &lt;td&gt;Cloud IAM&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud KMS&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Cloud AI&lt;/td&gt; &#xA;     &lt;td&gt;Cloud AutoML&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Vision API&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Natural Language&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Speech-to-Text&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Text-to-Speech&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Translation API&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Video Intelligence&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;API Platform&lt;/td&gt; &#xA;     &lt;td&gt;Maps Platform&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;API Analytics&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Apigee Sense&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Endpoints&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What GCP management tools are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me what do you know about GCP networking&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Virtual Private Cloud(VPC) network is a virtual version of physical network, implemented in Google&#39;s internal Network. VPC is a gloabal resource in GCP. Subnetworks(subnets) are regional resources, ie., subnets can be created withinin regions.&lt;/p&gt; &lt;p&gt;VPC are created in 2 modes,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;Auto mode VPC - One subnet in each region is created automatically by GCP while creating VPC&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Custom mode VPC - No subnets are automatically created. This type of network provides complete control over the subnets creation to the users.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Cloud Functions&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Google Cloud Functions is a serverless execution environment for building and connecting cloud services. With Cloud Functions you write simple, single-purpose functions that are attached to events emitted from your cloud infrastructure and services. Your function is triggered when an event being watched is fired.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cloud Datastore?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Cloud Datastore is a schemaless NoSQL datastore in Google&#39;s cloud. Applications can use Datastore to query your data with SQL-like queries that support filtering and sorting. Datastore replicates data across multiple datacenters, which provides a high level of read/write availability.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What network tags are used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Network tags allow you to apply firewall rules and routes to a specific instance or set of instances: You make a firewall rule applicable to specific instances by using target tags and source tags.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are flow logs? Where are they enabled?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;VPC Flow Logs records a sample of network flows sent from and received by VM instances, including instances used as Google Kubernetes Engine nodes. These logs can be used for network monitoring, forensics, real-time security analysis, and expense optimization.&lt;/p&gt; &lt;p&gt;Enable Flow Logs&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;Open VPC Network in GCP Console&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Click the name of the subnet&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Click EDIT button&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Set Flow Logs to On&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Click Save&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you list buckets?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Two ways to do that: &lt;p&gt;$ gsutil ls&lt;/p&gt; &lt;p&gt;$ gcloud alpha storage ls&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What Compute metadata key allows you to run code at startup?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;startap-script &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the following commands does? `gcloud deployment-manager deployments create`&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Deployment Manager creates a new deployment.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cloud Code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is a set of tools to help developers write, run and debug GCP kubernetes based applications. It provides built-in support for rapid iteration, debugging and running applications in development and production K8s environments. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Google Kubernetes Engine (GKE)&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is GKE&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;It is the managed kubernetes service on GCP for deploying, managing and scaling containerised applications using Google infrastructure. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h3&gt;Anthos&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Anthos&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is a managed application platform for organisations like enterprises that require quick modernisation and certain levels of consistency for their legacy applications in a hybrid or multicloud world. From this explanation the core ideas can be drawn from these statements; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Managed -&amp;gt; the customer does not need to worry about the underlying software intergrations, they just enable the API.&lt;/li&gt; &#xA;   &lt;li&gt;application platform -&amp;gt; It consists of open source tools like K8s, Knative, Istio and Tekton&lt;/li&gt; &#xA;   &lt;li&gt;Enterprises -&amp;gt; these are usually organisations with complex needs&lt;/li&gt; &#xA;   &lt;li&gt;Consistency -&amp;gt; to have the same policies declaratively initiated to be run anywhere securely e.g on-prem, GCP or other-clouds (AWS or Azure)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;fun fact: Anthos is flower in greek, they grow in the ground (earth) but need rain from the clouds to flourish. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List the technical components that make up Anthos&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Infrastructure management - Google Kubernetes Engine (GKE)&lt;/li&gt; &lt;li&gt;Cluster management - GKE, Ingress for Anthos&lt;/li&gt; &lt;li&gt;Service management - Anthos Service Mesh&lt;/li&gt; &lt;li&gt;Policy enforcement - Anthos Config Management, Anthos Enterprise Data Protection, Policy Controller&lt;/li&gt; &lt;li&gt;Application deployment - CI/CD tools like Cloud Build, GitLab&lt;/li&gt; &lt;li&gt;Application development - Cloud Code &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the primary computing environment for Anthos to easily manage workload deployment?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Google Kubernetes Engine (GKE) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Anthos handle the control plane and node components for GKE?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;On GCP the kubernetes api-server is the only control plane component exposed to customers whilst compute engine manages instances in the project. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which load balancing options are available?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Networking load balancing for L4 and HTTP(S) Load Balancing for L7 which are both managed services that do not require additional configuration.&lt;/li&gt; &lt;li&gt;Ingress for Anthos which allows the ability to deploy a load balancer that serves an application across multiple clusters on GKE &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you deploy Anthos on AWS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Yes, Anthos on AWS is now GA. For more read &lt;a href=&#34;https://cloud.google.com/anthos/gke/docs/aws&#34;&gt;here&lt;/a&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List and explain the enterprise security capabilities provided by Anthos&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Control plane security - GCP manages and maintains the K8s control plane out of the box. The user can secure the api-server by using master authorized networks and private clusters. These allow the user to disable access on the public IP address by assigning a private IP address to the master.&lt;/li&gt; &lt;li&gt;Node security - By default workloads are provisioned on Compute engine instances that use Google&#39;s Container Optimised OS. This operating system implements a locked-down firewall, limited user accounts with root disabled and a read-only filesystem. There is a further option to enable GKE Sandbox for stronger isolation in multi-tenant deployment scenarios.&lt;/li&gt; &lt;li&gt;Network security - Within a created cluster VPC, Anthos GKE leverages a powerful software-defined network that enables simple Pod-to-Pod communications. Network policies allow locking down ingress and egress connections in a given namespace. Filtering can also be implemented to incoming load-balanced traffic for services that require external access, by supplying whitelisted CIDR IP ranges.&lt;/li&gt; &lt;li&gt;Workload security - Running workloads run with limited privileges, default Docker AppArmor security policies are applied to all Kubernetes Pods. Workload identity for Anthos GKE aligns with the open source kubernetes service accounts with GCP service account permissions.&lt;/li&gt; &lt;li&gt;Audit logging - Adminstrators are given a way to retain, query, process and alert on events of the deployed environments. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can workloads deployed on Anthos GKE on-prem clusters securely connect to Google Cloud services?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Google Cloud Virtual Private Network (Cloud VPN) - this is for secure networking&lt;/li&gt; &lt;li&gt;Google Cloud Key Management Service (Cloud KMS) - for key management &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Island Mode configuration with regards to networking in Anthos GKE deployed on-prem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;This is when pods can directly talk to each other within a cluster, but cannot be reached from outside the cluster thus forming an &#34;island&#34; within the network that is not connected to the external network. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Anthos Config Management&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It is a core component of the Anthos stack which provides platform, service and security operators with a single, unified approach to multi-cluster management that spans both on-premises and cloud environments. It closely follows K8s best practices, favoring declarative approaches over imperative operations, and actively monitors cluster state and applies the desired state as defined in Git. It includes three key components as follows:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;An importer that reads from a central Git repository&lt;/li&gt; &lt;li&gt;A component that synchronises stored configuration data into K8s objects&lt;/li&gt; &lt;li&gt;A component that monitors drift between desired and actual cluster configurations with a capability of reconciliation when need rises. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Anthos Config Management help?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It follows common modern software development practices which makes cluster configuration, management and policy changes auditable, revertable, and versionable easily enforcing IT governance and unifying resource management in an organisation. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Anthos Service Mesh?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;It is a suite of tools that assist in monitoring and managing deployed services on Anthos of all shapes and sizes whether running in cloud, hybrid or multi-cloud environments. It leverages the APIs and core components from Istio, a highly configurable and open-source service mesh platform. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the two main components of Anthos Service Mesh&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Data plane - it consists of a set of distributed proxies that mediate all inbound and outbound network traffic between individual services which are configured using a centralised control plane and an open API&lt;/li&gt; &lt;li&gt;Control plane - is a fully managed offering outside of Anthos GKE clusters to simplify management overhead and ensure highest possible availability. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the components of the managed control plane of Anthos Service Mesh?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Traffic Director - it is GCP&#39;s fully managed service mesh traffic control plane, responsible for translating Istio API objects into configuration information for the distributed proxies, as well as directing service mesh ingress and egress traffic&lt;/li&gt; &lt;li&gt;Managed CA - is a centralised certificate authority responsible for providing SSL certificates to each of the distributed proxies, authentication information and distributing secrets&lt;/li&gt; &lt;li&gt;Operations tooling - formerly stackdriver, provides a managed ingestion point for observability and telemetry, specifically monitoring, tracing and logging data generated by each of the proxies. This powers the observability dashboard for operators to visually inspect their services and service dependencies assisting in the implementation of SRE best practices for monitoring SLIs and establishing SLOs. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Anthos Service Mesh help?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Tool and technology integration that makes up Anthos service mesh delivers signficant operational benefits to Anthos environments, with minimal additional overhead such as follows: &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Uniform observability - the data plane reports service to service communication back to the control plane generating a service dependency graph. Traffic inspection by the proxy inserts headers to facilitate distributed tracing, capturing and reporting service logs together with service-level metrics (i.e latency, errors, availability).&lt;/li&gt; &lt;li&gt;Operational agility - fine-grained controls for managing the flow of inter-mesh (north-south) and intra-mesh (east-west) traffic are provided.&lt;/li&gt; &lt;li&gt;Policy-driven security - policies can be enforced consistently across diverse protocols and runtimes as service communications are secured by default. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List possible use cases of traffic controls that can be implemented within Anthos Service Mesh&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Traffic splitting across differing service versions for canary or A/B testing&lt;/li&gt; &lt;li&gt;Circuit breaking to prevent cascading failures&lt;/li&gt; &lt;li&gt;Fault injection to help build resilient and fault-tolerant deployments&lt;/li&gt; &lt;li&gt;HTTP header-based traffic steering between individual services or versions &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cloud Run for Anthos?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It is part of the Anthos stack that brings a serverless container experience to Anthos, offering a high-level platform experience on top of K8s clusters. It is built with Knative, an open-source operator for K8s that brings serverless application serving and eventing capabilities. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Cloud Run for Anthos simplify operations?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Platform teams in organisations that wish to offer developers additional tools to test, deploy and run applications can use Knative to enhance this experience on Anthos as Cloud Run. Below are some of the benefits;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Easy migration from K8s deployments - Without Cloud Run, platform engineers have to configure deployment, service, and HorizontalPodAutoscalers(HPA) objects to a loadbalancer and autoscaling. If application is already serving traffic it becomes hard to change configurations or roll back efficiently. Using Cloud Run all this is managed thus the Knative service manifest describes the application to be autoscaled and loadbalanced&lt;/li&gt; &lt;li&gt;Autoscaling - a sudden traffic spike may cause application containers in K8s to crash due to overload thus an efficient automated autoscaling is executed to serve the high volume of traffic&lt;/li&gt; &lt;li&gt;Networking - it has built-in load balancing capabilities and policies for traffic splitting between multiple versions of an application.&lt;/li&gt; &lt;li&gt;Releases and rollouts - supports the notion of the Knatibe API&#39;s revisions which describe new versions or different configurations of your application and canary deployments by splitting traffic.&lt;/li&gt; &lt;li&gt;Monitoring - observing and recording metrics such as latency, error rate and requests per second. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List and explain three high-level out of the box autoscaling primitives offered by Cloud Run for Anthos that do not exist in K8s natively&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Rapid, request-based autoscaling - default autoscalers monitor request metrics which allows Cloud Run for Anthos to handle spiky traffic patterns smoothly&lt;/li&gt; &lt;li&gt;Concurrency controls - limits such as max in-flight requests per container are enforced to ensure the container does not become overloaded and crash. More containers are added to handle the spiky traffic, buffering the requests.&lt;/li&gt; &lt;li&gt;Scale to zero - if an application is inactive for a while Cloud Run scales it down to zero to reduce its footprint. Alternatively one can turn off scale-to-zero to prevent cold starts. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List some Cloud Run for Anthos use cases&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;As it does not support stateful applications or sticky sessions, it is suitable for running stateless applications such as:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Machine learning model predictions e.g Tensorflow serving containers&lt;/li&gt; &lt;li&gt;API gateways, API middleware, web front ends and Microservices&lt;/li&gt; &lt;li&gt;Event handlers, ETL &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;OpenStack&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What components/projects of OpenStack are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you tell me what each of the following services/projects is responsible for?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Nova&lt;/li&gt; &#xA;   &lt;li&gt;Neutron&lt;/li&gt; &#xA;   &lt;li&gt;Cinder&lt;/li&gt; &#xA;   &lt;li&gt;Glance&lt;/li&gt; &#xA;   &lt;li&gt;Keystone&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Nova - Manage virtual instances&lt;/li&gt; &lt;li&gt;Cinder - Block Storage&lt;/li&gt; &lt;li&gt;Keystone - Authentication service across the cloud &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Identify the service/project used for each of the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Copy or snapshot instances&lt;/li&gt; &#xA;   &lt;li&gt;GUI for viewing and modifying resources&lt;/li&gt; &#xA;   &lt;li&gt;Block Storage&lt;/li&gt; &#xA;   &lt;li&gt;Manage virtual instances&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Glance - Images Service. Also used for copying or snapshot instances&lt;/li&gt; &lt;li&gt;Horizon - GUI for viewing and modifying resources&lt;/li&gt; &lt;li&gt;Cinder - Block Storage&lt;/li&gt; &lt;li&gt;Nova - Manage virtual instances &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a tenant/project?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Determine true or false: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;OpenStack is free to use&lt;/li&gt; &#xA;   &lt;li&gt;The service responsible for networking is Glance&lt;/li&gt; &#xA;   &lt;li&gt;The purpose of tenant/project is to share resources between different projects and users of OpenStack&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe in detail how you bring up an instance with a floating IP&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You get a call from a customer saying: &#34;I can ping my instance but can&#39;t connect (ssh) it&#34;. What might be the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of networks OpenStack supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug OpenStack storage issues? (tools, logs, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug OpenStack compute issues? (tools, logs, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;OpenStack Deployment &amp;amp; TripleO&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Have you deployed OpenStack in the past? If yes, can you describe how you did it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are you familiar with TripleO? How is it different from Devstack or Packstack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can read about TripleO right &lt;a href=&#34;https://docs.openstack.org/tripleo-docs/latest&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;OpenStack Compute&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe Nova in detail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Used to provision and manage virtual instances&lt;/li&gt; &lt;li&gt;It supports Multi-Tenancy in different levels - logging, end-user control, auditing, etc.&lt;/li&gt; &lt;li&gt;Highly scalable&lt;/li&gt; &lt;li&gt;Authentication can be done using internal system or LDAP&lt;/li&gt; &lt;li&gt;Supports multiple types of block storage&lt;/li&gt; &lt;li&gt;Tries to be hardware and hypervisor agnostice &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you know about Nova architecture and components?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;nova-api - the server which serves metadata and compute APIs&lt;/li&gt; &lt;li&gt;the different Nova components communicate by using a queue (Rabbitmq usually) and a database&lt;/li&gt; &lt;li&gt;a request for creating an instance is inspected by nova-scheduler which determines where the instance will be created and running&lt;/li&gt; &lt;li&gt;nova-compute is the component responsible for communicating with the hypervisor for creating the instance and manage its lifecycle &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Networking (Neutron)&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Neutron in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;One of the core component of OpenStack and a standalone project&lt;/li&gt; &lt;li&gt;Neutron focused on delivering networking as a service&lt;/li&gt; &lt;li&gt;With Neutron, users can set up networks in the cloud and configure and manage a variety of network services&lt;/li&gt; &lt;li&gt;Neutron interacts with: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Keystone - authorize API calls&lt;/li&gt; &#xA;     &lt;li&gt;Nova - nova communicates with neutron to plug NICs into a network&lt;/li&gt; &#xA;     &lt;li&gt;Horizon - supports networking entities in the dashboard and also provides topology view which includes networking details &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain each of the following components: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;neutron-dhcp-agent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-l3-agent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-metering-agent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-*-agtent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-server&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;neutron-l3-agent - L3/NAT forwarding (provides external network access for VMs for example)&lt;/li&gt; &lt;li&gt;neutron-dhcp-agent - DHCP services&lt;/li&gt; &lt;li&gt;neutron-metering-agent - L3 traffic metering&lt;/li&gt; &lt;li&gt;neutron-*-agtent - manages local vSwitch configuration on each compute (based on chosen plugin)&lt;/li&gt; &lt;li&gt;neutron-server - exposes networking API and passes requests to other plugins if required &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain these network types: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Management Network&lt;/li&gt; &#xA;   &lt;li&gt;Guest Network&lt;/li&gt; &#xA;   &lt;li&gt;API Network&lt;/li&gt; &#xA;   &lt;li&gt;External Network&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Management Network - used for internal communication between OpenStack components. Any IP address in this network is accessible only within the datacetner&lt;/li&gt; &lt;li&gt;Guest Network - used for communication between instances/VMs&lt;/li&gt; &lt;li&gt;API Network - used for services API communication. Any IP address in this network is publicly accessible&lt;/li&gt; &lt;li&gt;External Network - used for public communication. Any IP address in this network is accessible by anyone on the internet &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In which order should you remove the following entities: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Network&lt;/li&gt; &#xA;   &lt;li&gt;Port&lt;/li&gt; &#xA;   &lt;li&gt;Router&lt;/li&gt; &#xA;   &lt;li&gt;Subnet&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Port&lt;/li&gt; &#xA;   &lt;li&gt;Subnet&lt;/li&gt; &#xA;   &lt;li&gt;Router&lt;/li&gt; &#xA;   &lt;li&gt;Network&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;There are many reasons for that. One for example: you can&#39;t remove router if there are active ports assigned to it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a provider network?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What components and services exist for L2 and L3?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the ML2 plug-in? Explain its architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the L2 agent? How does it works and what is it responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the L3 agent? How does it works and what is it responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what the Metadata agent is responsible for&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What networking entities Neutron supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug OpenStack networking issues? (tools, logs, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;OpenStack - Glance&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Glance in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Glance is the OpenStack image service&lt;/li&gt; &lt;li&gt;It handles requests related to instances disks and images&lt;/li&gt; &lt;li&gt;Glance also used for creating snapshots for quick instances backups&lt;/li&gt; &lt;li&gt;Users can use Glance to create new images or upload existing ones &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Glance architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;glance-api - responsible for handling image API calls such as retrieval and storage. It consists of two APIs: 1. registry-api - responsible for internal requests 2. user API - can be accessed publicly&lt;/li&gt; &lt;li&gt;glance-registry - responsible for handling image metadata requests (e.g. size, type, etc). This component is private which means it&#39;s not available publicly&lt;/li&gt; &lt;li&gt;metadata definition service - API for custom metadata&lt;/li&gt; &lt;li&gt;database - for storing images metadata&lt;/li&gt; &lt;li&gt;image repository - for storing images. This can be a filesystem, swift object storage, HTTP, etc. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack - Swift&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Swift in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Swift is Object Store service and is an highly available, distributed and consistent store designed for storing a lot of data&lt;/li&gt; &lt;li&gt;Swift is distributing data across multiple servers while writing it to multiple disks&lt;/li&gt; &lt;li&gt;One can choose to add additional servers to scale the cluster. All while swift maintaining integrity of the information and data replications. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can users store by default an object of 100GB in size?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not by default. Object Storage API limits the maximum to 5GB per object but it can be adjusted. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following in regards to Swift: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Container&lt;/li&gt; &#xA;   &lt;li&gt;Account&lt;/li&gt; &#xA;   &lt;li&gt;Object&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Container - Defines a namespace for objects.&lt;/li&gt; &lt;li&gt;Account - Defines a namespace for containers&lt;/li&gt; &lt;li&gt;Object - Data content (e.g. image, document, ...) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? there can be two objects with the same name in the same container but not in two different containers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. Two objects can have the same name if they are in different containers. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;OpenStack - Cinder&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Cinder in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Cinder is OpenStack Block Storage service&lt;/li&gt; &lt;li&gt;It basically provides used with storage resources they can consume with other services such as Nova&lt;/li&gt; &lt;li&gt;One of the most used implementations of storage supported by Cinder is LVM&lt;/li&gt; &lt;li&gt;From user perspective this is transparent which means the user doesn&#39;t know where, behind the scenes, the storage is located or what type of storage is used &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Cinder&#39;s components&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;cinder-api - receives API requests&lt;/li&gt; &lt;li&gt;cinder-volume - manages attached block devices&lt;/li&gt; &lt;li&gt;cinder-scheduler - responsible for storing volumes &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack - Keystone&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe the following concepts in regards to Keystone? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Role&lt;/li&gt; &#xA;   &lt;li&gt;Tenant/Project&lt;/li&gt; &#xA;   &lt;li&gt;Service&lt;/li&gt; &#xA;   &lt;li&gt;Endpoint&lt;/li&gt; &#xA;   &lt;li&gt;Token&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Role - A list of rights and privileges determining what a user or a project can perform&lt;/li&gt; &lt;li&gt;Tenant/Project - Logical representation of a group of resources isolated from other groups of resources. It can be an account, organization, ...&lt;/li&gt; &lt;li&gt;Service - An endpoint which the user can use for accessing different resources&lt;/li&gt; &lt;li&gt;Endpoint - a network address which can be used to access a certain OpenStack service&lt;/li&gt; &lt;li&gt;Token - Used for access resources while describing which resources can be accessed by using a scope &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the properties of a service? In other words, how a service is identified?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Using:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Name&lt;/li&gt; &lt;li&gt;ID number&lt;/li&gt; &lt;li&gt;Type&lt;/li&gt; &lt;li&gt;Description &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: - PublicURL - InternalURL - AdminURL&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;PublicURL - Publicly accessible through public internet&lt;/li&gt; &lt;li&gt;InternalURL - Used for communication between services&lt;/li&gt; &lt;li&gt;AdminURL - Used for administrative management &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a service catalog?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A list of services and their endpoints &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;OpenStack Advanced - Services&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe each of the following services &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Swift&lt;/li&gt; &#xA;   &lt;li&gt;Sahara&lt;/li&gt; &#xA;   &lt;li&gt;Ironic&lt;/li&gt; &#xA;   &lt;li&gt;Trove&lt;/li&gt; &#xA;   &lt;li&gt;Aodh&lt;/li&gt; &#xA;   &lt;li&gt;Ceilometer&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Swift - highly available, distributed, eventually consistent object/blob store&lt;/li&gt; &lt;li&gt;Sahara - Manage Hadoop Clusters&lt;/li&gt; &lt;li&gt;Ironic - Bare Metal Provisioning&lt;/li&gt; &lt;li&gt;Trove - Database as a service that runs on OpenStack&lt;/li&gt; &lt;li&gt;Aodh - Alarms Service&lt;/li&gt; &lt;li&gt;Ceilometer - Track and monitor usage &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Identify the service/project used for each of the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Database as a service which runs on OpenStack&lt;/li&gt; &#xA;   &lt;li&gt;Bare Metal Provisioning&lt;/li&gt; &#xA;   &lt;li&gt;Track and monitor usage&lt;/li&gt; &#xA;   &lt;li&gt;Alarms Service&lt;/li&gt; &#xA;   &lt;li&gt;Manage Hadoop Clusters&lt;/li&gt; &#xA;   &lt;li&gt;highly available, distributed, eventually consistent object/blob store&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Database as a service which runs on OpenStack - Trove&lt;/li&gt; &lt;li&gt;Bare Metal Provisioning - Ironic&lt;/li&gt; &lt;li&gt;Track and monitor usage - Ceilometer&lt;/li&gt; &lt;li&gt;Alarms Service - Aodh&lt;/li&gt; &lt;li&gt;Manage Hadoop Clusters&lt;/li&gt; &lt;li&gt;Manage Hadoop Clusters - Sahara&lt;/li&gt; &lt;li&gt;highly available, distributed, eventually consistent object/blob store - Swift &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Advanced - Keystone&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe Keystone service in detail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;You can&#39;t have OpenStack deployed without Keystone&lt;/li&gt; &lt;li&gt;It Provides identity, policy and token services &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;The authentication provided is for both users and services&lt;/li&gt; &#xA;     &lt;li&gt;The authorization supported is token-based and user-based.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;There is a policy defined based on RBAC stored in a JSON file and each line in that file defines the level of access to apply &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Keystone architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;There is a service API and admin API through which Keystone gets requests&lt;/li&gt; &lt;li&gt;Keystone has four backends: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Token Backend - Temporary Tokens for users and services&lt;/li&gt; &#xA;     &lt;li&gt;Policy Backend - Rules management and authorization&lt;/li&gt; &#xA;     &lt;li&gt;Identity Backend - users and groups (either standalone DB, LDAP, ...)&lt;/li&gt; &#xA;     &lt;li&gt;Catalog Backend - Endpoints&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;It has pluggable environment where you can integrate with: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;LDAP&lt;/li&gt; &#xA;     &lt;li&gt;KVS (Key Value Store)&lt;/li&gt; &#xA;     &lt;li&gt;SQL&lt;/li&gt; &#xA;     &lt;li&gt;PAM&lt;/li&gt; &#xA;     &lt;li&gt;Memcached &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the Keystone authentication process&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Keystone gets a call/request and checks whether it&#39;s from an authorized user, using username, password and authURL&lt;/li&gt; &lt;li&gt;Once confirmed, Keystone provides a token.&lt;/li&gt; &lt;li&gt;A token contains a list of user&#39;s projects so there is no to authenticate every time and a token can submitted instead &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Advanced - Compute (Nova)&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What each of the following does?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;nova-api&lt;/li&gt; &#xA;   &lt;li&gt;nova-compuate&lt;/li&gt; &#xA;   &lt;li&gt;nova-conductor&lt;/li&gt; &#xA;   &lt;li&gt;nova-cert&lt;/li&gt; &#xA;   &lt;li&gt;nova-consoleauth&lt;/li&gt; &#xA;   &lt;li&gt;nova-scheduler&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;nova-api - responsible for managing requests/calls&lt;/li&gt; &lt;li&gt;nova-compute - responsible for managing instance lifecycle&lt;/li&gt; &lt;li&gt;nova-conductor - Mediates between nova-compute and the database so nova-compute doesn&#39;t access it directly &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of Nova proxies are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Nova-novncproxy - Access through VNC connections&lt;/li&gt; &lt;li&gt;Nova-spicehtml5proxy - Access through SPICE&lt;/li&gt; &lt;li&gt;Nova-xvpvncproxy - Access through a VNC connection &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Advanced - Networking (Neutron)&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain BGP dynamic routing&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the role of network namespaces in OpenStack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;OpenStack Advanced - Horizon&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe Horizon in detail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Django-based project focusing on providing an OpenStack dashboard and the ability to create additional customized dashboards&lt;/li&gt; &lt;li&gt;You can use it to access the different OpenStack services resources - instances, images, networks, ... &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;By accessing the dashboard, users can use it to list, create, remove and modify the different resources&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;It&#39;s also highly customizable and you can modify or add to it based on your needs &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you tell about Horizon architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;API is backward compatible&lt;/li&gt; &lt;li&gt;There are three type of dashboards: user, system and settings&lt;/li&gt; &lt;li&gt;It provides core support for all OpenStack core projects such as Neutron, Nova, etc. (out of the box, no need to install extra packages or plugins)&lt;/li&gt; &lt;li&gt;Anyone can extend the dashboards and add new components&lt;/li&gt; &lt;li&gt;Horizon provides templates and core classes from which one can build its own dashboard &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;Puppet&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Puppet? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Puppet architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you compare Puppet to other configuration management tools? Why did you chose to use Puppet?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Module&lt;/li&gt; &#xA;   &lt;li&gt;Manifest&lt;/li&gt; &#xA;   &lt;li&gt;Node&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Facter&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is MCollective?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with writing modules? Which module have you created and for what?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Hiera&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Elastic&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Elastic Stack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The Elastic Stack consists of:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Elasticsearch&lt;/li&gt; &#xA;   &lt;li&gt;Kibana&lt;/li&gt; &#xA;   &lt;li&gt;Logstash&lt;/li&gt; &#xA;   &lt;li&gt;Beats&lt;/li&gt; &#xA;   &lt;li&gt;Elastic Hadoop&lt;/li&gt; &#xA;   &lt;li&gt;APM Server&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Elasticserach, Logstash and Kibana are also known as the ELK stack. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Elasticsearch&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/documents-indices.html&#34;&gt;docs&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Elasticsearch is a distributed document store. Instead of storing information as rows of columnar data, Elasticsearch stores complex data structures that have been serialized as JSON documents&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Logstash?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the &lt;a href=&#34;https://logit.io/blog/post/the-top-50-elk-stack-and-elasticsearch-interview-questions&#34;&gt;blog&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Logstash is a powerful, flexible pipeline that collects, enriches and transports data. It works as an extract, transform &amp;amp; load (ETL) tool for collecting log messages.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what beats are&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Beats are lightweight data shippers. These data shippers installed on the client where the data resides. Examples of beats: Filebeat, Metricbeat, Auditbeat. There are much more.&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Kibana?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official docs:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Kibana is an open source analytics and visualization platform designed to work with Elasticsearch. You use Kibana to search, view, and interact with data stored in Elasticsearch indices. You can easily perform advanced data analysis and visualize your data in a variety of charts, tables, and maps.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe what happens from the moment an app logged some information until it&#39;s displayed to the user in a dashboard when the Elastic stack is used&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The process may vary based on the chosen architecture and the processing you may want to apply to the logs. One possible workflow is:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;The data logged by the application is picked by filebeat and sent to logstash&lt;/li&gt; &lt;li&gt;Logstash process the log based on the defined filters. Once done, the output is sent to Elasticsearch&lt;/li&gt; &lt;li&gt;Elasticsearch stores the document it got and the document is indexed for quick future access&lt;/li&gt; &lt;li&gt;The user creates visualizations in Kibana which based on the indexed data&lt;/li&gt; &lt;li&gt;The user creates a dashboard which composed out of the visualization created in the previous step &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h5&gt;Elasticsearch&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a data node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is where data is stored and also where different processing takes place (e.g. when you search for a data). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a master node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Par of a master node responsibilites:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Track the status of all the nodes in the cluster&lt;/li&gt; &#xA;   &lt;li&gt;Verify replicas are working and the data is available from every data node.&lt;/li&gt; &#xA;   &lt;li&gt;No hot nodes (no data node that works much harder than other nodes)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;While there can be multiple master nodes in reality only of them is the elected master node. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an ingest node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A node which responsible for parsing the data. In case you don&#39;t use logstash then this node can recieve data from beats and parse it, similarly to how it can be parsed in Logstash. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Coordinating node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A Coordinating node responsible for routing requests out and in to the cluser (data nodes). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How data is stored in elasticsearch?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Data is stored in an index&lt;/li&gt; &lt;li&gt;The index is spread across the cluster using shards &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Index?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Index in Elastic is in most cases compared to a whole database from the SQL/NoSQL world.&lt;br&gt; You can choose to have one index to hold all the data of your app or have multiple indices where each index holds different type of your app (e.g. index for each service your app is running).&lt;/p&gt; &lt;p&gt;The official docs also offer a great explanation (in general, it&#39;s really good documentation, as every project should have):&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An index can be thought of as an optimized collection of documents and each document is a collection of fields, which are the key-value pairs that contain your data&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Shards&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An index is split into shards and documents are hashed to a particular shard. Each shard may be on a different node in a cluster and each one of the shards is a self contained index.&lt;br&gt; This allows Elasticsearch to scale to an entire cluster of servers. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Inverted Index?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official docs:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An inverted index lists every unique word that appears in any document and identifies all of the documents each word occurs in.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Document?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Continuing with the comparison to SQL/NoSQL a Document in Elastic is a row in table in the case of SQL or a document in a collection in the case of NoSQL. As in NoSQL a Document is a JSON object which holds data on a unit in your app. What is this unit depends on the your app. If your app related to book then each document describes a book. If you are app is about shirts then each document is a shirt. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You check the health of your elasticsearch cluster and it&#39;s red. What does it mean? What can cause the status to be yellow instead of green?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Red means some data is unavailable. Yellow can be caused by running single node cluster instead of multi-node. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Elasticsearch indexes all data in every field and each indexed field has the same data structure for unified and quick query ability&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;False. From the official docs:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Each indexed field has a dedicated, optimized data structure. For example, text fields are stored in inverted indices, and numeric and geo fields are stored in BKD trees.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What reserved fields a document has?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;_index&lt;/li&gt; &lt;li&gt;_id&lt;/li&gt; &lt;li&gt;_type &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Mapping&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages of defining your own mapping? (or: when would you use your own mapping?)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;You can optimize fields for partial matching&lt;/li&gt; &lt;li&gt;You can define custom formats of known fields (e.g. date)&lt;/li&gt; &lt;li&gt;You can perform language-specific analysis &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Replicas&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In a network/cloud environment where failures can be expected any time, it is very useful and highly recommended to have a failover mechanism in case a shard/node somehow goes offline or disappears for whatever reason. To this end, Elasticsearch allows you to make one or more copies of your index’s shards into what are called replica shards, or replicas for short. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain Term Frequency &amp;amp; Document Frequency?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Term Frequency is how often a term appears in a given document and Document Frequency is how often a term appears in all documents. They both are used for determining the relevance of a term by calculating Term Frequency / Document Frequency. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You check &#34;Current Phase&#34; under &#34;Index lifecycle management&#34; and you see it&#39;s set to &#34;hot&#34;. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;The index is actively being written to&#34;. More about the phases &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/7.6/ilm-policy-definition.html&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What this command does? &lt;code&gt;curl -X PUT &#34;localhost:9200/customer/_doc/1?pretty&#34; -H &#39;Content-Type: application/json&#39; -d&#39;{ &#34;name&#34;: &#34;John Doe&#34; }&#39;&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It creates customer index if it doesn&#39;t exists and adds a new document with the field name which is set to &#34;John Dow&#34;. Also, if it&#39;s the first document it will get the ID 1. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will happen if you run the previous command twice? What about running it 100 times?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;If name value was different then it would update &#34;name&#34; to the new value&lt;/li&gt; &lt;li&gt;In any case, it bumps version field by one &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Bulk API? What would you use it for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bulk API is used when you need to index multiple documents. For high number of documents it would be significantly faster to use rather than individual requests since there are less network roundtrips. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Query DSL&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Elasticsearch query syntax (Booleans, Fields, Ranges)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Relevance Score&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Query Context and Filter Context&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official docs:&lt;/p&gt; &lt;p&gt;&#34;In the query context, a query clause answers the question “How well does this document match this query clause?” Besides deciding whether or not the document matches, the query clause also calculates a relevance score in the _score meta-field.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;In a filter context, a query clause answers the question “Does this document match this query clause?” The answer is a simple Yes or No — no scores are calculated. Filter context is mostly used for filtering structured data&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe how would an architecture of production environment with large amounts of data would be different from a small-scale environment&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;There are several possible answers for this question. One of them is as follows:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A small-scale architecture of elastic will consist of the elastic stack as it is. This means we will have beats, logstash, elastcsearch and kibana.&lt;br&gt; A production environment with large amounts of data can include some kind of buffering component (e.g. Reddis or RabbitMQ) and also security component such as Nginx. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Logstash&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are Logstash plugins? What plugins types are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Input Plugins - how to collect data from different sources&lt;/li&gt; &lt;li&gt;Filter Plugins - processing data&lt;/li&gt; &lt;li&gt;Output Plugins - push data to different outputs/services/platforms &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is grok?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A logstash plugin which modifies information in one format and immerse it in another. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How grok works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What grok patterns are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is `_grokparsefailure?`&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you test or debug grok patterns?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are Logstash Codecs? What codecs are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Kibana&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find under &#34;Discover&#34; in Kibana?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The raw data as it is stored in the index. You can search and filter it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You see in Kibana, after clicking on Discover, &#34;561 hits&#34;. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Total number of documents matching the search results. If not query used then simply the total number of documents. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find under &#34;Visualize&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Visualize&#34; is where you can create visual representations for your data (pie charts, graphs, ...) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What visualization types are supported/included in Kibana?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What visualization type would you use for statistical outliers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe in detail how do you create a dashboard in Kibana&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Filebeat&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Filebeat?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If one is using ELK, is it a must to also use filebeat? In what scenarios it&#39;s useful to use filebeat?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a harvester?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read &lt;a href=&#34;https://www.elastic.co/guide/en/beats/filebeat/current/how-filebeat-works.html#harvester&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? a single harvester harvest multiple files, according to the limits set in filebeat.yml&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. One harvester harvests one file. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are filebeat modules?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Elastic Stack&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you secure an Elastic Stack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can generate certificates with the provided elastic utils and change configuration to enable security using certificates model. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Distributed&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Distributed Computing (or Distributed System)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;According to Martin Kleppmann:&lt;/p&gt; &lt;p&gt;&#34;Many processes running on many machines...only message-passing via an unreliable network with variable delays, and the system may suffer from partial failures, unreliable clocks, and process pauses.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another definition: &#34;Systems that are physically separated, but logically connected&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can cause a system to fail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Network&lt;/li&gt; &lt;li&gt;CPU&lt;/li&gt; &lt;li&gt;Memory&lt;/li&gt; &lt;li&gt;Disk &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you know what is &#34;CAP theorem&#34;? (aka as Brewer&#39;s theorem)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;According to the CAP theorem, it&#39;s not possible for a distributed data store to provide more than two of the following at the same time:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Availability: Every request receives a response (it doesn&#39;t has to be the most recent data)&lt;/li&gt; &lt;li&gt;Consistency: Every request receives a response with the latest/most recent data&lt;/li&gt; &lt;li&gt;Partition tolerance: Even if some the data is lost/dropped, the system keeps running &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the problems with the following design? How to improve it?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/distributed/distributed_design_standby.png&#34; width=&#34;500x;&#34; height=&#34;350px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; 1. The transition can take time. In other words, noticeable downtime. 2. Standby server is a waste of resources - if first application server is running then the standby does nothing &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the problems with the following design? How to improve it?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/distributed/distributed_design_lb.png&#34; width=&#34;700x;&#34; height=&#34;350px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Issues: If load balancer dies , we lose the ability to communicate with the application. &lt;p&gt;Ways to improve:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Add another load balancer&lt;/li&gt; &lt;li&gt;Use DNS A record for both load balancers&lt;/li&gt; &lt;li&gt;Use message queue &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;Shared-Nothing&#34; architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It&#39;s an architecture in which data is and retrieved from a single, non-shared, source usually exclusively connected to one node as opposed to architectures where the request can get to one of many nodes and the data will be retrieved from one shared location (storage, memory, ...). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the Sidecar Pattern (Or sidecar proxy)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Misc&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Highly Available &#34;Hello World&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/devops/ha_hello_world.md&#34;&gt;Exercise&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/devops/solutions/ha_hello_world.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you type in a URL in an address bar in a browser?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;The browser searches for the record of the domain name IP address in the DNS in the following order:&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Browser cache&lt;/li&gt; &#xA;   &lt;li&gt;Operating system cache&lt;/li&gt; &#xA;   &lt;li&gt;The DNS server configured on the user&#39;s system (can be ISP DNS, public DNS, ...)&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ol start=&#34;2&#34;&gt; &#xA;   &lt;li&gt;If it couldn&#39;t find a DNS record locally, a full DNS resolution is started.&lt;/li&gt; &#xA;   &lt;li&gt;It connects to the server using the TCP protocol&lt;/li&gt; &#xA;   &lt;li&gt;The browser sends an HTTP request to the server&lt;/li&gt; &#xA;   &lt;li&gt;The server sends an HTTP response back to the browser&lt;/li&gt; &#xA;   &lt;li&gt;The browser renders the response (e.g. HTML)&lt;/li&gt; &#xA;   &lt;li&gt;The browser then sends subsequent requests as needed to the server to get the embedded links, javascript, images in the HTML and then steps 3 to 5 are repeated.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;TODO: add more details! &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;API&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is an API&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;I like this definition from &lt;a href=&#34;https://blog.christianposta.com/microservices/api-gateways-are-going-through-an-identity-crisis&#34;&gt;blog.christianposta.com&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An explicitly and purposefully defined interface designed to be invoked over a network that enables software developers to get programmatic access to data and functionality within an organization in a controlled and comfortable way.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an API specification?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From &lt;a href=&#34;https://swagger.io/resources/articles/difference-between-api-documentation-specification&#34;&gt;swagger.io&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An API specification provides a broad understanding of how an API behaves and how the API links with other APIs. It explains how the API functions and the results to expect when using the API&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? API Definition is the same as API Specification&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;False. From &lt;a href=&#34;https://swagger.io/resources/articles/difference-between-api-documentation-specification&#34;&gt;swagger.io&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An API definition is similar to an API specification in that it provides an understanding of how an API is organized and how the API functions. But the API definition is aimed at machine consumption instead of human consumption of APIs.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Payload in API?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Automation? How it&#39;s related or different from Orchestration?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Automation is the act of automating tasks to reduce human intervention or interaction in regards to IT technology and systems.&lt;br&gt; While automation focuses on a task level, Orchestration is the process of automating processes and/or workflows which consists of multiple tasks that usually across multiple systems. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me about interesting bugs you&#39;ve found and also fixed&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Debuggger and how it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What services an application might have?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Authorization&lt;/li&gt; &lt;li&gt;Logging&lt;/li&gt; &lt;li&gt;Authentication&lt;/li&gt; &lt;li&gt;Ordering&lt;/li&gt; &lt;li&gt;Front-end&lt;/li&gt; &lt;li&gt;Back-end ... &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Metadata?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Data about data. Basically, it describes the type of information that an underlying data will hold. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You can use one of the following formats: JSON, YAML, XML. Which one would you use? Why?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;I can&#39;t answer this for you :) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s KPI?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s OKR?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s DSL (Domain Specific Language)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Domain Specific Language (DSLs) are used to create a customised language that represents the domain such that domain experts can easily interpret it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s the difference between KPI and OKR?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;YAML&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is YAML?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Data serialization language used by many technologies today like Kubernetes, Ansible, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Any valid JSON file is also a valid YAML file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. Because YAML is superset of JSON. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the format of the following data? &lt;pre&gt;&lt;code&gt;{&#xA;    applications: [&#xA;        {&#xA;            name: &#34;my_app&#34;,&#xA;            language: &#34;python&#34;,&#xA;            version: 20.17&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; JSON &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the format of the following data? &lt;pre&gt;&lt;code&gt;applications:&#xA;  - app: &#34;my_app&#34;&#xA;    language: &#34;python&#34;&#xA;    version: 20.17&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; YAML &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to write a multi-line string with YAML? What use cases is it good for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;someMultiLineString: |&#xA;  look mama&#xA;  I can write a multi-line string&#xA;  I love YAML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It&#39;s good for use cases like writing a shell script where each line of the script is a different command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between &lt;code&gt;someMultiLineString: |&lt;/code&gt; to &lt;code&gt;someMultiLineString: &amp;gt;&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;using &lt;code&gt;&amp;gt;&lt;/code&gt; will make the multi-line string to fold into a single line&lt;/p&gt; &lt;pre&gt;&lt;code&gt;someMultiLineString: &amp;gt;&#xA;  This is actually&#xA;  a single line&#xA;  do not let appearances fool you&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are placeholders in YAML?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;They allow you reference values instead of directly writing them and it is used like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;username: {{ my.user_name }}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you define multiple YAML components in one file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Using this: &lt;code&gt;---&lt;/code&gt; For Examples:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;document_number: 1&#xA;---&#xA;document_number: 2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Firmware&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a firmware&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Firmware&#34;&gt;Wikipedia&lt;/a&gt;: &#34;In computing, firmware is a specific class of computer software that provides the low-level control for a device&#39;s specific hardware. Firmware, such as the BIOS of a personal computer, may contain basic functions of a device, and may provide hardware abstraction services to higher-level software such as operating systems.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Customers and Service Providers&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SLO (service-level objective)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SLA (service-level agreement)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Jira&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain/Demonstrate the following types in Jira: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Epic&lt;/li&gt; &#xA;   &lt;li&gt;Story&lt;/li&gt; &#xA;   &lt;li&gt;Task&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a project in Jira?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Kafka&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Kafka?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In Kafka, how to automatically balance brokers leadership of partitions in a cluster? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Enable auto leader election and reduce the imbalance percentage ratio&lt;/li&gt; &#xA;   &lt;li&gt;Manually rebalance by using kafkat&lt;/li&gt; &#xA;   &lt;li&gt;Configure group.initial.rebalance.delay.ms to 3000&lt;/li&gt; &#xA;   &lt;li&gt;All of the above&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Cassandra&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When running a cassandra cluster, how often do you need to run nodetool repair in order to keep the cluster consistent? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Within the columnFamily GC-grace Once a week&lt;/li&gt; &#xA;   &lt;li&gt;Less than the compacted partition minimum bytes&lt;/li&gt; &#xA;   &lt;li&gt;Depended on the compaction strategy&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;HTTP&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HTTP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe HTTP request lifecycle&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Resolve host by request to DNS resolver&lt;/li&gt; &lt;li&gt;Client SYN&lt;/li&gt; &lt;li&gt;Server SYN+ACK&lt;/li&gt; &lt;li&gt;Client SYN&lt;/li&gt; &lt;li&gt;HTTP request&lt;/li&gt; &lt;li&gt;HTTP response &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? HTTP is stateful&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. It doesn&#39;t maintain state for incoming request. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How HTTP request looks like?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It consists of:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Request line - request type&lt;/li&gt; &lt;li&gt;Headers - content info like length, enconding, etc.&lt;/li&gt; &lt;li&gt;Body (not always included) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What HTTP method types are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;GET&lt;/li&gt; &lt;li&gt;POST&lt;/li&gt; &lt;li&gt;HEAD&lt;/li&gt; &lt;li&gt;PUT&lt;/li&gt; &lt;li&gt;DELETE&lt;/li&gt; &lt;li&gt;CONNECT&lt;/li&gt; &lt;li&gt;OPTIONS&lt;/li&gt; &lt;li&gt;TRACE &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What HTTP response codes are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;1xx - informational&lt;/li&gt; &lt;li&gt;2xx - Success&lt;/li&gt; &lt;li&gt;3xx - Redirect&lt;/li&gt; &lt;li&gt;4xx - Error, client fault&lt;/li&gt; &lt;li&gt;5xx - Error, server fault &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HTTPS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain HTTP Cookies&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;HTTP is stateless. To share state, we can use Cookies.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;TODO: explain what is actually a Cookie &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HTTP Pipelining?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You get &#34;504 Gateway Timeout&#34; error from an HTTP server. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The server didn&#39;t receive a response from another server it communicates with in a timely manner. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a proxy?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a reverse proxy?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is CDN?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When you publish a project, you usually publish it with a license. What types of licenses are you familiar with and which one do you prefer to use?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is &#34;X-Forwarded-For&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/X-Forwarded-For&#34;&gt;Wikipedia&lt;/a&gt;: &#34;The X-Forwarded-For (XFF) HTTP header field is a common method for identifying the originating IP address of a client connecting to a web server through an HTTP proxy or load balancer.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Load Balancers&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a load balancer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A load balancer accepts (or denies) incoming network traffic from a client, and based on some criteria (application related, network, etc.) it distributes those communications out to servers (at least one). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why to used a load balancer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Scalability - using a load balancer, you can possibly add more servers in the backend to handle more requests/traffic from the clients, as opposed to using one server.&lt;/li&gt; &lt;li&gt;Redundancy - if one server in the backend dies, the load balancer will keep forwarding the traffic/requests to the second server so users won&#39;t even notice one of the servers in the backend is down. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What load balancer techniques/algorithms are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Round Robin&lt;/li&gt; &lt;li&gt;Weighted Round Robin&lt;/li&gt; &lt;li&gt;Least Connection&lt;/li&gt; &lt;li&gt;Weighted Least Connection&lt;/li&gt; &lt;li&gt;Resource Based&lt;/li&gt; &lt;li&gt;Fixed Weighting&lt;/li&gt; &lt;li&gt;Weighted Response Time&lt;/li&gt; &lt;li&gt;Source IP Hash&lt;/li&gt; &lt;li&gt;URL Hash &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the drawbacks of round robin algorithm in load balancing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A simple round robin algorithm knows nothing about the load and the spec of each server it forwards the requests to. It is possible, that multiple heavy workloads requests will get to the same server while other servers will got only lightweight requests which will result in one server doing most of the work, maybe even crashing at some point because it unable to handle all the heavy workloads requests by its own.&lt;/li&gt; &lt;li&gt;Each request from the client creates a whole new session. This might be a problem for certain scenarios where you would like to perform multiple operations where the server has to know about the result of operation so basically, being sort of aware of the history it has with the client. In round robin, first request might hit server X, while second request might hit server Y and ask to continue processing the data that was processed on server X already. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Application Load Balancer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In which scenarios would you use ALB?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;At what layers a load balancer can operate?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;L4 and L7 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you perform load balancing without using a dedicated load balancer instance?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Yes, you can use DNS for performing load balancing. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DNS load balancing? What its advantages? When would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Load Balancers - Sticky Sessions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are sticky sessions? What are their pros and cons?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Recommended read:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://access.redhat.com/solutions/900933&#34;&gt;Red Hat Article&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Cons:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Can cause uneven load on instance (since requests routed to the same instances) Pros:&lt;/li&gt; &lt;li&gt;Ensures in-proc sessions are not lost when a new request is created &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Name one use case for using sticky sessions&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You would like to make sure the user doesn&#39;t lose the current session data. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What sticky sessions use for enabling the &#34;stickiness&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Cookies. There are application based cookies and duration based cookies. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain application-based cookies&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Generated by the application and/or the load balancer&lt;/li&gt; &lt;li&gt;Usually allows to include custom data &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain duration-based cookies&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Generated by the load balancer&lt;/li&gt; &lt;li&gt;Session is not sticky anymore once the duration elapsed &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Load Balancers - Load Balancing Algorithms&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain each of the following load balancing techniques &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Round Robin&lt;/li&gt; &#xA;   &lt;li&gt;Weighted Round Robin&lt;/li&gt; &#xA;   &lt;li&gt;Least Connection&lt;/li&gt; &#xA;   &lt;li&gt;Weighted Least Connection&lt;/li&gt; &#xA;   &lt;li&gt;Resource Based&lt;/li&gt; &#xA;   &lt;li&gt;Fixed Weighting&lt;/li&gt; &#xA;   &lt;li&gt;Weighted Response Time&lt;/li&gt; &#xA;   &lt;li&gt;Source IP Hash&lt;/li&gt; &#xA;   &lt;li&gt;URL Hash&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain use case for connection draining?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; To ensure that a Classic Load Balancer stops sending requests to instances that are de-registering or unhealthy, while keeping the existing connections open, use connection draining. This enables the load balancer to complete in-flight requests made to instances that are de-registering or unhealthy. &lt;p&gt;The maximum timeout value can be set between 1 and 3,600 seconds on both GCP and AWS.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Licenses&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are you familiar with &#34;Creative Commons&#34;? What do you know about it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the differences between copyleft and permissive licenses&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In Copyleft, any derivative work must use the same licensing while in permissive licensing there are no such condition. GPL-3 is an example of copyleft license while BSD is an example of permissive license. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Random&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a search engine works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How auto completion works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is faster than RAM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;CPU cache. &lt;a href=&#34;https://www.enterprisestorageforum.com/hardware/cache-memory/&#34;&gt;Source&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a memory leak?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is your favorite protocol?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;SSH HTTP DHCP DNS ... &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cache API?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the C10K problem? Is it relevant today?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://idiallo.com/blog/c10k-2016&#34;&gt;https://idiallo.com/blog/c10k-2016&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Storage&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of storage formats are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;File&lt;/li&gt; &lt;li&gt;Block&lt;/li&gt; &lt;li&gt;Object &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of storage devices are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain IOPS&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain storage throughput&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a filesystem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Dark Data&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Questions you CAN ask&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;questions-you-ask&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A list of questions you as a candidate can ask the interviewer during or after the interview. These are only a suggestion, use them carefully. Not every interviewer will be able to answer these (or happy to) which should be perhaps a red flag warning for your regarding working in such place but that&#39;s really up to you.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you like about working here?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does the company promote personal growth?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the current level of technical debt you are dealing with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Be careful when asking this question - all companies, regardless of size, have some level of tech debt. Phrase the question in the light that all companies have the deal with this, but you want to see the current pain points they are dealing with &lt;br&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a great way to figure how managers deal with unplanned work, and how good they are at setting expectations with projects. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why I should NOT join you? (or &#39;what you don&#39;t like about working here?&#39;)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What was your favorite project you&#39;ve worked on?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This can give you insights in some of the cool projects a company is working on, and if you would enjoy working on projects like these. This is also a good way to see if the managers are allowing employees to learn and grow with projects outside of the normal work you&#39;d do. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If you could change one thing about your day to day, what would it be?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Similar to the tech debt question, this helps you identify any pain points with the company. Additionally, it can be a great way to show how you&#39;d be an asset to the team.&lt;br&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;For Example, if they mention they have problem X, and you&#39;ve solved that in the past, you can show how you&#39;d be able to mitigate that problem. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Let&#39;s say that we agree and you hire me to this position, after X months, what do you expect that I have achieved?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not only this will tell you what is expected from you, it will also provide big hint on the type of work you are going to do in the first months of your job. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain white-box testing&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain black-box testing&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are unit tests?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of tests would you run to test a web application?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain test harness?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is A/B testing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is network simulation and how do you perform it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of performances tests are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following types of tests: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Load Testing&lt;/li&gt; &#xA;   &lt;li&gt;Stress Testing&lt;/li&gt; &#xA;   &lt;li&gt;Capacity Testing&lt;/li&gt; &#xA;   &lt;li&gt;Volume Testing&lt;/li&gt; &#xA;   &lt;li&gt;Endurance Testing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Databases&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Message Board Tables&lt;/td&gt; &#xA;   &lt;td&gt;Relational DB Tables&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/databases/table_for_message_board_system.md&#34;&gt;Exercise&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/databases/solutions/table_for_message_board_system.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a relational database?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Data Storage: system to store data in tables&lt;/li&gt; &lt;li&gt;SQL: programming language to manage relational databases&lt;/li&gt; &lt;li&gt;Data Definition Language: a standard syntax to create, alter and delete tables &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What does it mean when a database is ACID compliant?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;ACID stands for Atomicity, Consistency, Isolation, Durability. In order to be ACID compliant, the database must meet each of the four criteria&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Atomicity&lt;/strong&gt; - When a change occurs to the database, it should either succeed or fail as a whole.&lt;/p&gt; &#xA; &lt;p&gt;For example, if you were to update a table, the update should completely execute. If it only partially executes, the update is considered failed as a whole, and will not go through - the DB will revert back to it&#39;s original state before the update occurred. It should also be mentioned that Atomicity ensures that each transaction is completed as it&#39;s own stand alone &#34;unit&#34; - if any part fails, the whole statement fails.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Consistency&lt;/strong&gt; - any change made to the database should bring it from one valid state into the next.&lt;/p&gt; &#xA; &lt;p&gt;For example, if you make a change to the DB, it shouldn&#39;t corrupt it. Consistency is upheld by checks and constraints that are pre-defined in the DB. For example, if you tried to change a value from a string to an int when the column should be of datatype string, a consistent DB would not allow this transaction to go through, and the action would not be executed&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Isolation&lt;/strong&gt; - this ensures that a database will never be seen &#34;mid-update&#34; - as multiple transactions are running at the same time, it should still leave the DB in the same state as if the transactions were being run sequentially.&lt;/p&gt; &#xA; &lt;p&gt;For example, let&#39;s say that 20 other people were making changes to the database at the same time. At the time you executed your query, 15 of the 20 changes had gone through, but 5 were still in progress. You should only see the 15 changes that had completed - you wouldn&#39;t see the database mid-update as the change goes through.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Durability&lt;/strong&gt; - Once a change is committed, it will remain committed regardless of what happens (power failure, system crash, etc.). This means that all completed transactions must be recorded in non-volatile memory.&lt;/p&gt; &#xA; &lt;p&gt;Note that SQL is by nature ACID compliant. Certain NoSQL DB&#39;s can be ACID compliant depending on how they operate, but as a general rule of thumb, NoSQL DB&#39;s are not considered ACID compliant&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is sharding?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Sharding is a horizontal partitioning.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Are you able to explain what is it good for? &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You find out your database became a bottleneck and users experience issues accessing data. How can you deal with such situation?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not much information provided as to why it became a bottleneck and what is current architecture, so one general approach could be&lt;br&gt; to reduce the load on your database by moving frequently-accessed data to in-memory structure. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a connection pool?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Connection Pool is a cache of database connections and the reason it&#39;s used is to avoid an overhead of establishing a connection for every query done to a database. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a connection leak?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A connection leak is a situation where database connection isn&#39;t closed after being created and is no longer needed. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Table Lock?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Your database performs slowly than usual. More specifically, your queries are taking a lot of time. What would you do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Query for running queries and cancel the irrelevant queries&lt;/li&gt; &lt;li&gt;Check for connection leaks (query for running connections and include their IP)&lt;/li&gt; &lt;li&gt;Check for table locks and kill irrelevant locking sessions &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Data Warehouse?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;A data warehouse is a subject-oriented, integrated, time-variant and non-volatile collection of data in support of organisation&#39;s decision-making process&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a time-series database&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is OLTP (Online transaction processing)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is OLAP (Online Analytical Processing)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an index in a database?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A database index is a data structure that improves the speed of operations in a table. Indexes can be created using one or more columns, providing the basis for both rapid random lookups and efficient ordering of access to records. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What data types are there in relational databases?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Normalization&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Data that is used multiple times in a database should be stored once and referenced with a foreign key.&lt;br&gt; This has the clear benefit of ease of maintenance where you need to change a value only in a single place to change it everywhere. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Primary Key and Foreign Key&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Primary Key: each row in every table should a unique identifier that represents the row.&lt;br&gt; Foreign Key: a reference to another table&#39;s primary key. This allows you to join table together to retrieve all the information you need without duplicating data. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of data tables have you used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Primary data table: main data you care about&lt;/li&gt; &lt;li&gt;Details table: includes a foreign key and has one to many relationship&lt;/li&gt; &lt;li&gt;Lookup values table: can be one table per lookup or a table containing all the lookups and has one to many relationship&lt;/li&gt; &lt;li&gt;Multi reference table &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ORM? What benefits it provides in regards to relational databases usage?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping&#34;&gt;Wikipedia&lt;/a&gt;: &#34;is a programming technique for converting data between incompatible type systems using object-oriented programming languages&#34;&lt;/p&gt; &lt;p&gt;In regards to the relational databases:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Database as code&lt;/li&gt; &lt;li&gt;Database abstraction&lt;/li&gt; &lt;li&gt;Encapsulates SQL complexity&lt;/li&gt; &lt;li&gt;Enables code review process&lt;/li&gt; &lt;li&gt;Enables usage as a native OOP structure &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DDL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_definition_language&#34;&gt;Wikipedia&lt;/a&gt;: &#34;In the context of SQL, data definition or data description language (DDL) is a syntax for creating and modifying database objects such as tables, indices, and users.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Regex&lt;/h2&gt; &#xA;&lt;p&gt;Given a text file, perform the following exercises&lt;/p&gt; &#xA;&lt;h4&gt;Extract&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract all the numbers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract the first word of each line&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bonus: extract the last word of each line &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract all the IP addresses&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract dates in the format of yyyy-mm-dd or yyyy-dd-mm&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract email addresses&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Replace&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Replace tabs with four spaces&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Replace &#39;red&#39; with &#39;green&#39;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;System Design&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a &#34;Single point of failure&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;3-Tier Architecture&#34; (including pros and cons)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the drawbacks of monolithic architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Not suitable for frequent code changes and the ability to deploy new features&lt;/li&gt; &lt;li&gt;Not designed for today&#39;s infrastructure (like public clouds)&lt;/li&gt; &lt;li&gt;Scaling a team to work monolithic architecture is more challenging &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages of microoservices architecture over a monolithic architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Each of the services individually fail without escalating into an application-wide outage.&lt;/li&gt; &lt;li&gt;Each service can be developed and maintained by a separate team and this team can choose its own tools and coding language &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s a service mesh?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://www.redhat.com/en/topics/microservices/what-is-a-service-mesh&#34;&gt;This article&lt;/a&gt; provides a great explanation. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;Loose Coupling&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a message queue? When is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Scalability&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Scalability&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The ability easily grow in size and capacity based on demand and usage. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Elasticity&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The ability to grow but also to reduce based on what is required &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Disaster Recovery&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Fault Tolerance and High Availability&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Fault Tolerance - The ability to self-heal and return to normal capacity. Also the ability to withstand a failure and remain functional.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;High Availability - Being able to access a resource (in some use cases, using different platforms) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between high availability and Disaster Recovery?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://www.wintellect.com/high-availability-vs-disaster-recovery&#34;&gt;wintellect.com&lt;/a&gt;: &#34;High availability, simply put, is eliminating single points of failure and disaster recovery is the process of getting a system back to an operational state when a system is rendered inoperative. In essence, disaster recovery picks up when high availability fails, so HA first.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Vertical Scaling&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Vertical Scaling is the process of adding resources to increase power of existing servers. For example, adding more CPUs, adding more RAM, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the disadvantages of Vertical Scaling?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;With vertical scaling alone, the component still remains a single point of failure. In addition, it has hardware limit where if you don&#39;t have more resources, you might not be able to scale vertically. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which type of cloud services usually support vertical scaling?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Databases, cache. It&#39;s common mostly for non-distributed systems. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Horizontal Scaling&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Horizontal Scaling is the process of adding more resources that will be able handle requests as one unit &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the disadvantage of Horizontal Scaling? What is often required in order to perform Horizontal Scaling?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A load balancer. You can add more resources, but if you would like them to be part of the process, you have to serve them the requests/responses. Also, data inconsistency is a concern with horizontal scaling. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain in which use cases will you use vertical scaling and in which use cases you will use horizontal scaling&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Resiliency and what ways are there to make a system more resilient&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;Consistent Hashing&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you update each of the services in the following drawing without having app (foo.com) downtime?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/cdn-no-downtime.png&#34; width=&#34;300x;&#34; height=&#34;400px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the problem with the following architecture and how would you fix it?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/producers_consumers_issue.png&#34; width=&#34;400x;&#34; height=&#34;300px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The load on the producers or consumers may be high which will then cause them to hang or crash.&lt;br&gt; Instead of working in &#34;push mode&#34;, the consumers can pull tasks only when they are ready to handle them. It can be fixed by using a streaming platform like Kafka, Kinesis, etc. This platform will make sure to handle the high load/traffic and pass tasks/messages to consumers only when the ready to get them.&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/producers_consumers_fix.png&#34; width=&#34;300x;&#34; height=&#34;200px;&#34;&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Users report that there is huge spike in process time when adding little bit more data to process as an input. What might be the problem?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/input-process-output.png&#34; width=&#34;300x;&#34; height=&#34;200px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you scale the architecture from the previous question to hundreds of users?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Cache&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;cache&#34;? In which cases would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;distributed cache&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a &#34;cache replacement policy&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Take a look &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_replacement_policies&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which cache replacement policies are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can find a list &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_replacement_policies&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following cache policies: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;FIFO&lt;/li&gt; &#xA;   &lt;li&gt;LIFO&lt;/li&gt; &#xA;   &lt;li&gt;LRU&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read about it &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_replacement_policies&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why not writing everything to cache instead of a database/datastore?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Migrations&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How you prepare for a migration? (or plan a migration)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can mention:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;roll-back &amp;amp; roll-forward cut over dress rehearsals DNS redirection &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;Branch by Abstraction&#34; technique&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Design a system&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you design a video streaming website?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you design a photo upload website?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you build a URL shortener?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;More System Design Questions&lt;/h4&gt; &#xA;&lt;p&gt;Additional exercises can be found in &lt;a href=&#34;https://github.com/bregman-arie/system-design-notebook&#34;&gt;system-design-notebook repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/system-design-notebook&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/system_design_notebook.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Hardware&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a CPU?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A central processing unit (CPU) performs basic arithmetic, logic, controlling, and input/output (I/O) operations specified by the instructions in the program. This contrasts with external components such as main memory and I/O circuitry, and specialized processors such as graphics processing units (GPUs). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is RAM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;RAM (Random Access Memory) is the hardware in a computing device where the operating system (OS), application programs and data in current use are kept so they can be quickly reached by the device&#39;s processor. RAM is the main memory in a computer. It is much faster to read from and write to than other kinds of storage, such as a hard disk drive (HDD), solid-state drive (SSD) or optical drive. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an embedded system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An embedded system is a computer system - a combination of a computer processor, computer memory, and input/output peripheral devices—that has a dedicated function within a larger mechanical or electronic system. It is embedded as part of a complete device often including electrical or electronic hardware and mechanical parts. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you give an example of an embedded system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Raspberry Pi &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of storage are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Big Data&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is exactly Big Data&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;As defined by Doug Laney:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Volume: Extremely large volumes of data&lt;/li&gt; &lt;li&gt;Velocity: Real time, batch, streams of data&lt;/li&gt; &lt;li&gt;Variety: Various forms of data, structured, semi-structured and unstructured&lt;/li&gt; &lt;li&gt;Veracity or Variability: Inconsistent, sometimes inaccurate, varying data &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DataOps? How is it related to DevOps?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;DataOps seeks to reduce the end-to-end cycle time of data analytics, from the origin of ideas to the literal creation of charts, graphs and models that create value. DataOps combines Agile development, DevOps and statistical process controls and applies them to data analytics. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Data Architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;An answer from &lt;a href=&#34;https://www.talend.com/resources/what-is-data-architecture&#34;&gt;talend.com&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Data architecture is the process of standardizing how organizations collect, store, transform, distribute, and use data. The goal is to deliver relevant data to people who need it, when they need it, and help them make sense of it.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the different formats of data&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Structured - data that has defined format and length (e.g. numbers, words)&lt;/li&gt; &lt;li&gt;Semi-structured - Doesn&#39;t conform to a specific format but is self-describing (e.g. XML, SWIFT)&lt;/li&gt; &lt;li&gt;Unstructured - does not follow a specific format (e.g. images, test messages) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Data Warehouse?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_warehouse&#34;&gt;Wikipedia&#39;s explanation on Data Warehouse&lt;/a&gt; &lt;a href=&#34;https://aws.amazon.com/data-warehouse&#34;&gt;Amazon&#39;s explanation on Data Warehouse&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Data Lake?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_lake&#34;&gt;Data Lake - Wikipedia&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain the difference between a data lake and a data warehouse?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;Data Versioning&#34;? What models of &#34;Data Versioning&#34; are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ETL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Apache Hadoop&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Hadoop&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Apache_Hadoop&#34;&gt;Apache Hadoop - Wikipedia&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Hadoop YARN&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Responsible for managing the compute resources in clusters and scheduling users&#39; applications &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Hadoop MapReduce&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A programming model for large-scale data processing &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Hadoop Distributed File Systems (HDFS)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Distributed file system providing high aggregate bandwidth across the cluster.&lt;/li&gt; &lt;li&gt;For a user it looks like a regular file system structure but behind the scenes it&#39;s distributed across multiple machines in a cluster&lt;/li&gt; &lt;li&gt;Typical file size is TB and it can scale and supports millions of files&lt;/li&gt; &lt;li&gt;It&#39;s fault tolerant which means it provides automatic recovery from faults&lt;/li&gt; &lt;li&gt;It&#39;s best suited for running long batch operations rather than live analysis &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you know about HDFS architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;http://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html&#34;&gt;HDFS Architecture&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Master-slave architecture&lt;/li&gt; &lt;li&gt;Namenode - master, Datanodes - slaves&lt;/li&gt; &lt;li&gt;Files split into blocks&lt;/li&gt; &lt;li&gt;Blocks stored on datanodes&lt;/li&gt; &lt;li&gt;Namenode controls all metadata &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;Ceph&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Ceph&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Ceph favor consistency and correctness over performances&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; True &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which services or types of storage Ceph supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Object (RGW)&lt;/li&gt; &lt;li&gt;Block (RBD)&lt;/li&gt; &lt;li&gt;File (CephFS) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is RADOS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Reliable Autonomic Distributed Object Storage&lt;/li&gt; &lt;li&gt;Provides low-level data object storage service&lt;/li&gt; &lt;li&gt;Strong Consistency&lt;/li&gt; &lt;li&gt;Simplifies design and implementation of higher layers (block, file, object) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe RADOS software components&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Monitor &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Central authority for authentication, data placement, policy&lt;/li&gt; &#xA;     &lt;li&gt;Coordination point for all other cluster components&lt;/li&gt; &#xA;     &lt;li&gt;Protect critical cluster state with Paxos&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Manager &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Aggregates real-time metrics (throughput, disk usage, etc.)&lt;/li&gt; &#xA;     &lt;li&gt;Host for pluggable management functions&lt;/li&gt; &#xA;     &lt;li&gt;1 active, 1+ standby per cluster&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;OSD (Object Storage Daemon) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Stores data on an HDD or SSD&lt;/li&gt; &#xA;     &lt;li&gt;Services client IO requests &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the workflow of retrieving data from Ceph?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the workflow of retrieving data from Ceph?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are &#34;Placement Groups&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe in the detail the following: Objects -&amp;gt; Pool -&amp;gt; Placement Groups -&amp;gt; OSDs&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is OMAP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a metadata server? How it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Packer&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Packer? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In general, Packer automates machine images creation. It allows you to focus on configuration prior to deployment while making the images. This allows you start the instances much faster in most cases. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Packer follows a &#34;configuration-&amp;gt;deployment&#34; model or &#34;deployment-&amp;gt;configuration&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A configuration-&amp;gt;deployment which has some advantages like:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Deployment Speed - you configure once prior to deployment instead of configuring every time you deploy. This allows you to start instances/services much quicker.&lt;/li&gt; &lt;li&gt;More immutable infrastructure - with configuration-&amp;gt;deployment it&#39;s not likely to have very different deployments since most of the configuration is done prior to the deployment. Issues like dependencies errors are handled/discovered prior to deployment in this model. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;Certificates&lt;/h2&gt; &#xA;&lt;p&gt;If you are looking for a way to prepare for a certain exam this is the section for you. Here you&#39;ll find a list of certificates, each references to a separate file with focused questions that will help you to prepare to the exam. Good luck :)&lt;/p&gt; &#xA;&lt;h4&gt;AWS&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/aws-cloud-practitioner.md&#34;&gt;Cloud Practitioner&lt;/a&gt; (Latest update: 2020)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/aws-solutions-architect-associate.md&#34;&gt;Solutions Architect Associate&lt;/a&gt; (Latest update: 2021)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Azure&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/azure-fundamentals-az-900.md&#34;&gt;AZ-900&lt;/a&gt; (Latest update: 2021)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Kubernetes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/cka.md&#34;&gt;Certified Kubernetes Administrator (CKA)&lt;/a&gt; (Latest update: 2020)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other DevOps Projects&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/howtheydevops&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/how_they_devops.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/devops-resources&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/devops_resources.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/infraverse&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/infraverse.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all of our amazing &lt;a href=&#34;https://github.com/bregman-arie/devops-exercises/graphs/contributors&#34;&gt;contributors&lt;/a&gt; who make it easy for everyone to learn new things :)&lt;/p&gt; &#xA;&lt;p&gt;Logos credits can be found &lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/credits.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/3.0/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-CC%20BY--NC--ND%203.0-lightgrey.svg?sanitize=true&#34; alt=&#34;License: CC BY-NC-ND 3.0&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>yt-dlp/yt-dlp</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/yt-dlp/yt-dlp</id>
    <link href="https://github.com/yt-dlp/yt-dlp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A youtube-dl fork with additional features and fixes&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#readme&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/.github/banner.svg?sanitize=true&#34; alt=&#34;YT-DLP&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#release-files&#34; title=&#34;Release&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/yt-dlp/yt-dlp?color=brightgreen&amp;amp;label=Download&amp;amp;style=for-the-badge&#34; alt=&#34;Release version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/yt-dlp&#34; title=&#34;PyPi&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-PyPi-blue.svg?logo=pypi&amp;amp;labelColor=555555&amp;amp;style=for-the-badge&#34; alt=&#34;PyPi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/Collaborators.md#collaborators&#34; title=&#34;Donate&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/_-Donate-red.svg?logo=githubsponsors&amp;amp;labelColor=555555&amp;amp;style=for-the-badge&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#yt-dlp:matrix.org&#34; title=&#34;Matrix&#34;&gt;&lt;img src=&#34;https://img.shields.io/matrix/yt-dlp:matrix.org?color=brightgreen&amp;amp;labelColor=555555&amp;amp;label=&amp;amp;logo=element&amp;amp;style=for-the-badge&#34; alt=&#34;Matrix&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/H5MNcFW63r&#34; title=&#34;Discord&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/807245652072857610?color=blue&amp;amp;labelColor=555555&amp;amp;label=&amp;amp;logo=discord&amp;amp;style=for-the-badge&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/supportedsites.md&#34; title=&#34;Supported Sites&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Supported_Sites-brightgreen.svg?style=for-the-badge&#34; alt=&#34;Supported Sites&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/LICENSE&#34; title=&#34;License&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Unlicense-blue.svg?style=for-the-badge&#34; alt=&#34;License: Unlicense&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/actions&#34; title=&#34;CI Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/yt-dlp/yt-dlp/Core%20Tests/master?label=Tests&amp;amp;style=for-the-badge&#34; alt=&#34;CI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/commits&#34; title=&#34;Commit History&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/yt-dlp/yt-dlp?label=commits&amp;amp;style=for-the-badge&#34; alt=&#34;Commits&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/commits&#34; title=&#34;Commit History&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/yt-dlp/yt-dlp/master?label=&amp;amp;style=for-the-badge&#34; alt=&#34;Last Commit&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- MANPAGE: END EXCLUDED SECTION --&gt; &#xA;&lt;p&gt;yt-dlp is a &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl&#34;&gt;youtube-dl&lt;/a&gt; fork based on the now inactive &lt;a href=&#34;https://github.com/blackjack4494/yt-dlc&#34;&gt;youtube-dlc&lt;/a&gt;. The main focus of this project is adding new features and patches while also keeping up to date with the original project&lt;/p&gt; &#xA;&lt;!-- MANPAGE: MOVE &#34;USAGE AND OPTIONS&#34; SECTION HERE --&gt; &#xA;&lt;!-- MANPAGE: BEGIN EXCLUDED SECTION --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#new-features&#34;&gt;NEW FEATURES&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#differences-in-default-behavior&#34;&gt;Differences in default behavior&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#installation&#34;&gt;INSTALLATION&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#update&#34;&gt;Update&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#release-files&#34;&gt;Release Files&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#dependencies&#34;&gt;Dependencies&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#compile&#34;&gt;Compile&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#usage-and-options&#34;&gt;USAGE AND OPTIONS&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#general-options&#34;&gt;General Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#network-options&#34;&gt;Network Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#geo-restriction&#34;&gt;Geo-restriction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#video-selection&#34;&gt;Video Selection&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#download-options&#34;&gt;Download Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#filesystem-options&#34;&gt;Filesystem Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#thumbnail-options&#34;&gt;Thumbnail Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#internet-shortcut-options&#34;&gt;Internet Shortcut Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#verbosity-and-simulation-options&#34;&gt;Verbosity and Simulation Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#workarounds&#34;&gt;Workarounds&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#video-format-options&#34;&gt;Video Format Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#subtitle-options&#34;&gt;Subtitle Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#authentication-options&#34;&gt;Authentication Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#post-processing-options&#34;&gt;Post-processing Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#sponsorblock-options&#34;&gt;SponsorBlock Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#extractor-options&#34;&gt;Extractor Options&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#configuration&#34;&gt;CONFIGURATION&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#authentication-with-netrc-file&#34;&gt;Authentication with .netrc file&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template&#34;&gt;OUTPUT TEMPLATE&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template-and-windows-batch-files&#34;&gt;Output template and Windows batch files&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template-examples&#34;&gt;Output template examples&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#format-selection&#34;&gt;FORMAT SELECTION&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#filtering-formats&#34;&gt;Filtering Formats&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#sorting-formats&#34;&gt;Sorting Formats&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#format-selection-examples&#34;&gt;Format Selection examples&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#modifying-metadata&#34;&gt;MODIFYING METADATA&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#modifying-metadata-examples&#34;&gt;Modifying metadata examples&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#extractor-arguments&#34;&gt;EXTRACTOR ARGUMENTS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#plugins&#34;&gt;PLUGINS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#embedding-yt-dlp&#34;&gt;EMBEDDING YT-DLP&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#embedding-examples&#34;&gt;Embedding examples&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#deprecated-options&#34;&gt;DEPRECATED OPTIONS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/CONTRIBUTING.md#contributing-to-yt-dlp&#34;&gt;CONTRIBUTING&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/CONTRIBUTING.md#opening-an-issue&#34;&gt;Opening an Issue&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/CONTRIBUTING.md#developer-instructions&#34;&gt;Developer Instructions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#more&#34;&gt;MORE&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- MANPAGE: END EXCLUDED SECTION --&gt; &#xA;&lt;h1&gt;NEW FEATURES&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Based on &lt;strong&gt;youtube-dl 2021.12.17 &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/commit/6508688e88c83bb811653083db9351702cd39a6a&#34;&gt;commit/6508688&lt;/a&gt;&lt;/strong&gt; (&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/issues/21&#34;&gt;exceptions&lt;/a&gt;) and &lt;strong&gt;youtube-dlc 2020.11.11-3 &lt;a href=&#34;https://github.com/blackjack4494/yt-dlc/commit/f9401f2a91987068139c5f757b12fc711d4c0cee&#34;&gt;commit/f9401f2&lt;/a&gt;&lt;/strong&gt;: You get all the features and patches of &lt;a href=&#34;https://github.com/blackjack4494/yt-dlc&#34;&gt;youtube-dlc&lt;/a&gt; in addition to the latest &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl&#34;&gt;youtube-dl&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#sponsorblock-options&#34;&gt;SponsorBlock Integration&lt;/a&gt;&lt;/strong&gt;: You can mark/remove sponsor sections in youtube videos by utilizing the &lt;a href=&#34;https://sponsor.ajay.app&#34;&gt;SponsorBlock&lt;/a&gt; API&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#sorting-formats&#34;&gt;Format Sorting&lt;/a&gt;&lt;/strong&gt;: The default format sorting options have been changed so that higher resolution and better codecs will be now preferred instead of simply using larger bitrate. Furthermore, you can now specify the sort order using &lt;code&gt;-S&lt;/code&gt;. This allows for much easier format selection than what is possible by simply using &lt;code&gt;--format&lt;/code&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#format-selection-examples&#34;&gt;examples&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Merged with animelover1984/youtube-dl&lt;/strong&gt;: You get most of the features and improvements from &lt;a href=&#34;https://github.com/animelover1984/youtube-dl&#34;&gt;animelover1984/youtube-dl&lt;/a&gt; including &lt;code&gt;--write-comments&lt;/code&gt;, &lt;code&gt;BiliBiliSearch&lt;/code&gt;, &lt;code&gt;BilibiliChannel&lt;/code&gt;, Embedding thumbnail in mp4/ogg/opus, playlist infojson etc. Note that the NicoNico livestreams are not available. See &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/pull/31&#34;&gt;#31&lt;/a&gt; for details.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Youtube improvements&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;All Feeds (&lt;code&gt;:ytfav&lt;/code&gt;, &lt;code&gt;:ytwatchlater&lt;/code&gt;, &lt;code&gt;:ytsubs&lt;/code&gt;, &lt;code&gt;:ythistory&lt;/code&gt;, &lt;code&gt;:ytrec&lt;/code&gt;, &lt;code&gt;:ytnotif&lt;/code&gt;) and private playlists supports downloading multiple pages of content&lt;/li&gt; &#xA;   &lt;li&gt;Search (&lt;code&gt;ytsearch:&lt;/code&gt;, &lt;code&gt;ytsearchdate:&lt;/code&gt;), search URLs and in-channel search works&lt;/li&gt; &#xA;   &lt;li&gt;Mixes supports downloading multiple pages of content&lt;/li&gt; &#xA;   &lt;li&gt;Some (but not all) age-gated content can be downloaded without cookies&lt;/li&gt; &#xA;   &lt;li&gt;Fix for &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/issues/29326&#34;&gt;n-sig based throttling&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Redirect channel&#39;s home URL automatically to &lt;code&gt;/video&lt;/code&gt; to preserve the old behaviour&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;255kbps&lt;/code&gt; audio is extracted (if available) from youtube music when premium cookies are given&lt;/li&gt; &#xA;   &lt;li&gt;Youtube music Albums, channels etc can be downloaded (&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/issues/723&#34;&gt;except self-uploaded music&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Download livestreams from the start using &lt;code&gt;--live-from-start&lt;/code&gt; (experimental)&lt;/li&gt; &#xA;   &lt;li&gt;Support for downloading stories (&lt;code&gt;ytstories:&amp;lt;channel UCID&amp;gt;&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cookies from browser&lt;/strong&gt;: Cookies can be automatically extracted from all major web browsers using &lt;code&gt;--cookies-from-browser BROWSER[+KEYRING][:PROFILE]&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Split video by chapters&lt;/strong&gt;: Videos can be split into multiple files based on chapters using &lt;code&gt;--split-chapters&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multi-threaded fragment downloads&lt;/strong&gt;: Download multiple fragments of m3u8/mpd videos in parallel. Use &lt;code&gt;--concurrent-fragments&lt;/code&gt; (&lt;code&gt;-N&lt;/code&gt;) option to set the number of threads used&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Aria2c with HLS/DASH&lt;/strong&gt;: You can use &lt;code&gt;aria2c&lt;/code&gt; as the external downloader for DASH(mpd) and HLS(m3u8) formats&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;New and fixed extractors&lt;/strong&gt;: Many new extractors have been added and a lot of existing ones have been fixed. See the &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/Changelog.md&#34;&gt;changelog&lt;/a&gt; or the &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/supportedsites.md&#34;&gt;list of supported sites&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;New MSOs&lt;/strong&gt;: Philo, Spectrum, SlingTV, Cablevision, RCN&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Subtitle extraction from manifests&lt;/strong&gt;: Subtitles can be extracted from streaming media manifests. See &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/commit/be6202f12b97858b9d716e608394b51065d0419f&#34;&gt;commit/be6202f&lt;/a&gt; for details&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multiple paths and output templates&lt;/strong&gt;: You can give different &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template&#34;&gt;output templates&lt;/a&gt; and download paths for different types of files. You can also set a temporary path where intermediary files are downloaded to using &lt;code&gt;--paths&lt;/code&gt; (&lt;code&gt;-P&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Portable Configuration&lt;/strong&gt;: Configuration files are automatically loaded from the home and root directories. See &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#configuration&#34;&gt;configuration&lt;/a&gt; for details&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Output template improvements&lt;/strong&gt;: Output templates can now have date-time formatting, numeric offsets, object traversal etc. See &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template&#34;&gt;output template&lt;/a&gt; for details. Even more advanced operations can also be done with the help of &lt;code&gt;--parse-metadata&lt;/code&gt; and &lt;code&gt;--replace-in-metadata&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Other new options&lt;/strong&gt;: Many new options have been added such as &lt;code&gt;--alias&lt;/code&gt;, &lt;code&gt;--print&lt;/code&gt;, &lt;code&gt;--concat-playlist&lt;/code&gt;, &lt;code&gt;--wait-for-video&lt;/code&gt;, &lt;code&gt;--retry-sleep&lt;/code&gt;, &lt;code&gt;--sleep-requests&lt;/code&gt;, &lt;code&gt;--convert-thumbnails&lt;/code&gt;, &lt;code&gt;--force-download-archive&lt;/code&gt;, &lt;code&gt;--force-overwrites&lt;/code&gt;, &lt;code&gt;--break-on-reject&lt;/code&gt; etc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Improvements&lt;/strong&gt;: Regex and other operators in &lt;code&gt;--format&lt;/code&gt;/&lt;code&gt;--match-filter&lt;/code&gt;, multiple &lt;code&gt;--postprocessor-args&lt;/code&gt; and &lt;code&gt;--downloader-args&lt;/code&gt;, faster archive checking, more &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#format-selection&#34;&gt;format selection options&lt;/a&gt;, merge multi-video/audio, multiple &lt;code&gt;--config-locations&lt;/code&gt;, &lt;code&gt;--exec&lt;/code&gt; at different stages, etc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Plugins&lt;/strong&gt;: Extractors and PostProcessors can be loaded from an external file. See &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#plugins&#34;&gt;plugins&lt;/a&gt; for details&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Self-updater&lt;/strong&gt;: The releases can be updated using &lt;code&gt;yt-dlp -U&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/Changelog.md&#34;&gt;changelog&lt;/a&gt; or &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/commits&#34;&gt;commits&lt;/a&gt; for the full list of changes&lt;/p&gt; &#xA;&lt;h3&gt;Differences in default behavior&lt;/h3&gt; &#xA;&lt;p&gt;Some of yt-dlp&#39;s default options are different from that of youtube-dl and youtube-dlc:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The options &lt;code&gt;--auto-number&lt;/code&gt; (&lt;code&gt;-A&lt;/code&gt;), &lt;code&gt;--title&lt;/code&gt; (&lt;code&gt;-t&lt;/code&gt;) and &lt;code&gt;--literal&lt;/code&gt; (&lt;code&gt;-l&lt;/code&gt;), no longer work. See &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#Removed&#34;&gt;removed options&lt;/a&gt; for details&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;avconv&lt;/code&gt; is not supported as an alternative to &lt;code&gt;ffmpeg&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;yt-dlp stores config files in slightly different locations to youtube-dl. See &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#configuration&#34;&gt;configuration&lt;/a&gt; for a list of correct locations&lt;/li&gt; &#xA; &lt;li&gt;The default &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template&#34;&gt;output template&lt;/a&gt; is &lt;code&gt;%(title)s [%(id)s].%(ext)s&lt;/code&gt;. There is no real reason for this change. This was changed before yt-dlp was ever made public and now there are no plans to change it back to &lt;code&gt;%(title)s-%(id)s.%(ext)s&lt;/code&gt;. Instead, you may use &lt;code&gt;--compat-options filename&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;The default &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#sorting-formats&#34;&gt;format sorting&lt;/a&gt; is different from youtube-dl and prefers higher resolution and better codecs rather than higher bitrates. You can use the &lt;code&gt;--format-sort&lt;/code&gt; option to change this to any order you prefer, or use &lt;code&gt;--compat-options format-sort&lt;/code&gt; to use youtube-dl&#39;s sorting order&lt;/li&gt; &#xA; &lt;li&gt;The default format selector is &lt;code&gt;bv*+ba/b&lt;/code&gt;. This means that if a combined video + audio format that is better than the best video-only format is found, the former will be preferred. Use &lt;code&gt;-f bv+ba/b&lt;/code&gt; or &lt;code&gt;--compat-options format-spec&lt;/code&gt; to revert this&lt;/li&gt; &#xA; &lt;li&gt;Unlike youtube-dlc, yt-dlp does not allow merging multiple audio/video streams into one file by default (since this conflicts with the use of &lt;code&gt;-f bv*+ba&lt;/code&gt;). If needed, this feature must be enabled using &lt;code&gt;--audio-multistreams&lt;/code&gt; and &lt;code&gt;--video-multistreams&lt;/code&gt;. You can also use &lt;code&gt;--compat-options multistreams&lt;/code&gt; to enable both&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--no-abort-on-error&lt;/code&gt; is enabled by default. Use &lt;code&gt;--abort-on-error&lt;/code&gt; or &lt;code&gt;--compat-options abort-on-error&lt;/code&gt; to abort on errors instead&lt;/li&gt; &#xA; &lt;li&gt;When writing metadata files such as thumbnails, description or infojson, the same information (if available) is also written for playlists. Use &lt;code&gt;--no-write-playlist-metafiles&lt;/code&gt; or &lt;code&gt;--compat-options no-playlist-metafiles&lt;/code&gt; to not write these files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--add-metadata&lt;/code&gt; attaches the &lt;code&gt;infojson&lt;/code&gt; to &lt;code&gt;mkv&lt;/code&gt; files in addition to writing the metadata when used with &lt;code&gt;--write-info-json&lt;/code&gt;. Use &lt;code&gt;--no-embed-info-json&lt;/code&gt; or &lt;code&gt;--compat-options no-attach-info-json&lt;/code&gt; to revert this&lt;/li&gt; &#xA; &lt;li&gt;Some metadata are embedded into different fields when using &lt;code&gt;--add-metadata&lt;/code&gt; as compared to youtube-dl. Most notably, &lt;code&gt;comment&lt;/code&gt; field contains the &lt;code&gt;webpage_url&lt;/code&gt; and &lt;code&gt;synopsis&lt;/code&gt; contains the &lt;code&gt;description&lt;/code&gt;. You can &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#modifying-metadata&#34;&gt;use &lt;code&gt;--parse-metadata&lt;/code&gt;&lt;/a&gt; to modify this to your liking or use &lt;code&gt;--compat-options embed-metadata&lt;/code&gt; to revert this&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playlist_index&lt;/code&gt; behaves differently when used with options like &lt;code&gt;--playlist-reverse&lt;/code&gt; and &lt;code&gt;--playlist-items&lt;/code&gt;. See &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/issues/302&#34;&gt;#302&lt;/a&gt; for details. You can use &lt;code&gt;--compat-options playlist-index&lt;/code&gt; if you want to keep the earlier behavior&lt;/li&gt; &#xA; &lt;li&gt;The output of &lt;code&gt;-F&lt;/code&gt; is listed in a new format. Use &lt;code&gt;--compat-options list-formats&lt;/code&gt; to revert this&lt;/li&gt; &#xA; &lt;li&gt;All &lt;em&gt;experiences&lt;/em&gt; of a funimation episode are considered as a single video. This behavior breaks existing archives. Use &lt;code&gt;--compat-options seperate-video-versions&lt;/code&gt; to extract information from only the default player&lt;/li&gt; &#xA; &lt;li&gt;Youtube live chat (if available) is considered as a subtitle. Use &lt;code&gt;--sub-langs all,-live_chat&lt;/code&gt; to download all subtitles except live chat. You can also use &lt;code&gt;--compat-options no-live-chat&lt;/code&gt; to prevent live chat from downloading&lt;/li&gt; &#xA; &lt;li&gt;Youtube channel URLs are automatically redirected to &lt;code&gt;/video&lt;/code&gt;. Append a &lt;code&gt;/featured&lt;/code&gt; to the URL to download only the videos in the home page. If the channel does not have a videos tab, we try to download the equivalent &lt;code&gt;UU&lt;/code&gt; playlist instead. For all other tabs, if the channel does not show the requested tab, an error will be raised. Also, &lt;code&gt;/live&lt;/code&gt; URLs raise an error if there are no live videos instead of silently downloading the entire channel. You may use &lt;code&gt;--compat-options no-youtube-channel-redirect&lt;/code&gt; to revert all these redirections&lt;/li&gt; &#xA; &lt;li&gt;Unavailable videos are also listed for youtube playlists. Use &lt;code&gt;--compat-options no-youtube-unavailable-videos&lt;/code&gt; to remove this&lt;/li&gt; &#xA; &lt;li&gt;If &lt;code&gt;ffmpeg&lt;/code&gt; is used as the downloader, the downloading and merging of formats happen in a single step when possible. Use &lt;code&gt;--compat-options no-direct-merge&lt;/code&gt; to revert this&lt;/li&gt; &#xA; &lt;li&gt;Thumbnail embedding in &lt;code&gt;mp4&lt;/code&gt; is done with mutagen if possible. Use &lt;code&gt;--compat-options embed-thumbnail-atomicparsley&lt;/code&gt; to force the use of AtomicParsley instead&lt;/li&gt; &#xA; &lt;li&gt;Some private fields such as filenames are removed by default from the infojson. Use &lt;code&gt;--no-clean-infojson&lt;/code&gt; or &lt;code&gt;--compat-options no-clean-infojson&lt;/code&gt; to revert this&lt;/li&gt; &#xA; &lt;li&gt;When &lt;code&gt;--embed-subs&lt;/code&gt; and &lt;code&gt;--write-subs&lt;/code&gt; are used together, the subtitles are written to disk and also embedded in the media file. You can use just &lt;code&gt;--embed-subs&lt;/code&gt; to embed the subs and automatically delete the separate file. See &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/issues/630#issuecomment-893659460&#34;&gt;#630 (comment)&lt;/a&gt; for more info. &lt;code&gt;--compat-options no-keep-subs&lt;/code&gt; can be used to revert this&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;certifi&lt;/code&gt; will be used for SSL root certificates, if installed. If you want to use only system certificates, use &lt;code&gt;--compat-options no-certifi&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;youtube-dl tries to remove some superfluous punctuations from filenames. While this can sometimes be helpfull, it is often undesirable. So yt-dlp tries to keep the fields in the filenames as close to their original values as possible. You can use &lt;code&gt;--compat-options filename-sanitization&lt;/code&gt; to revert to youtube-dl&#39;s behavior&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For ease of use, a few more compat options are available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--compat-options all&lt;/code&gt;: Use all compat options (Do NOT use)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--compat-options youtube-dl&lt;/code&gt;: Same as &lt;code&gt;--compat-options all,-multistreams&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--compat-options youtube-dlc&lt;/code&gt;: Same as &lt;code&gt;--compat-options all,-no-live-chat,-no-youtube-channel-redirect&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;INSTALLATION&lt;/h1&gt; &#xA;&lt;p&gt;You can install yt-dlp using one of the following methods:&lt;/p&gt; &#xA;&lt;h3&gt;Using the release binary&lt;/h3&gt; &#xA;&lt;p&gt;You can simply download the &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#release-files&#34;&gt;correct binary file&lt;/a&gt; for your OS&lt;/p&gt; &#xA;&lt;!-- MANPAGE: BEGIN EXCLUDED SECTION --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Windows_x64-blue.svg?style=for-the-badge&amp;amp;logo=windows&#34; alt=&#34;Windows&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Linux/BSD-red.svg?style=for-the-badge&amp;amp;logo=linux&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_macos&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-MacOS-lightblue.svg?style=for-the-badge&amp;amp;logo=apple&#34; alt=&#34;MacOS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.tar.gz&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Source_tar-green.svg?style=for-the-badge&#34; alt=&#34;Source Tarball&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#release-files&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Other-grey.svg?style=for-the-badge&#34; alt=&#34;Other variants&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-All_Versions-lightgrey.svg?style=for-the-badge&#34; alt=&#34;All versions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- MANPAGE: END EXCLUDED SECTION --&gt; &#xA;&lt;p&gt;Note: The manpages, shell completion files etc. are available in the &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.tar.gz&#34;&gt;source tarball&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- TODO: Move to Wiki --&gt; &#xA;&lt;p&gt;In UNIX-like OSes (MacOS, Linux, BSD), you can also install the same in one of the following ways:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o /usr/local/bin/yt-dlp&#xA;sudo chmod a+rx /usr/local/bin/yt-dlp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo wget https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -O /usr/local/bin/yt-dlp&#xA;sudo chmod a+rx /usr/local/bin/yt-dlp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo aria2c https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp --dir /usr/local/bin -o yt-dlp&#xA;sudo chmod a+rx /usr/local/bin/yt-dlp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;With &lt;a href=&#34;https://pypi.org/project/pip&#34;&gt;PIP&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can install the &lt;a href=&#34;https://pypi.org/project/yt-dlp&#34;&gt;PyPI package&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 -m pip install -U yt-dlp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can install without any of the optional dependencies using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 -m pip install --no-deps -U yt-dlp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to be on the cutting edge, you can also install the master branch with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 -m pip install --force-reinstall https://github.com/yt-dlp/yt-dlp/archive/master.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that on some systems, you may need to use &lt;code&gt;py&lt;/code&gt; or &lt;code&gt;python&lt;/code&gt; instead of &lt;code&gt;python3&lt;/code&gt;&lt;/p&gt; &#xA;&lt;!-- TODO: Add to Wiki, Remove Taps --&gt; &#xA;&lt;h3&gt;With &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;macOS or Linux users that are using Homebrew can also install it by:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install yt-dlp/taps/yt-dlp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;UPDATE&lt;/h2&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;yt-dlp -U&lt;/code&gt; to update if you are &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#using-the-release-binary&#34;&gt;using the provided release&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#with-pip&#34;&gt;installed with pip&lt;/a&gt;, simply re-run the same command that was used to install the program&lt;/p&gt; &#xA;&lt;p&gt;If you &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#with-homebrew&#34;&gt;installed using Homebrew&lt;/a&gt;, run &lt;code&gt;brew upgrade yt-dlp/taps/yt-dlp&lt;/code&gt;&lt;/p&gt; &#xA;&lt;!-- MANPAGE: BEGIN EXCLUDED SECTION --&gt; &#xA;&lt;h2&gt;RELEASE FILES&lt;/h2&gt; &#xA;&lt;h4&gt;Recommended&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;File&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp&#34;&gt;yt-dlp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Platform-independant binary. Needs Python (recommended for &lt;strong&gt;Linux/BSD&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe&#34;&gt;yt-dlp.exe&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Windows (Win7 SP1+) standalone x64 binary (recommended for &lt;strong&gt;Windows&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_macos&#34;&gt;yt-dlp_macos&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MacOS (10.15+) standalone executable (recommended for &lt;strong&gt;MacOS&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Alternatives&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;File&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_x86.exe&#34;&gt;yt-dlp_x86.exe&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Windows (Vista SP2+) standalone x86 (32-bit) binary&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_min.exe&#34;&gt;yt-dlp_min.exe&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Windows (Win7 SP1+) standalone x64 binary built with &lt;code&gt;py2exe&lt;/code&gt;.&lt;br&gt; Does not contain &lt;code&gt;pycryptodomex&lt;/code&gt;/&lt;code&gt;certifi&lt;/code&gt;, needs VC++14&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_win.zip&#34;&gt;yt-dlp_win.zip&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Unpackaged Windows executable (no auto-update)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_macos.zip&#34;&gt;yt-dlp_macos.zip&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Unpackaged MacOS (10.15+) executable (no auto-update)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Misc&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;File&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.tar.gz&#34;&gt;yt-dlp.tar.gz&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Source tarball. Also contains manpages, completions, etc&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/releases/latest/download/SHA2-512SUMS&#34;&gt;SHA2-512SUMS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;GNU-style SHA512 sums&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/releases/latest/download/SHA2-256SUMS&#34;&gt;SHA2-256SUMS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;GNU-style SHA256 sums&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- MANPAGE: END EXCLUDED SECTION --&gt; &#xA;&lt;h2&gt;DEPENDENCIES&lt;/h2&gt; &#xA;&lt;p&gt;Python versions 3.6+ (CPython and PyPy) are supported. Other versions and implementations may or may not work correctly.&lt;/p&gt; &#xA;&lt;!-- Python 3.5+ uses VC++14 and it is already embedded in the binary created&#xA;&lt;!x-- https://www.microsoft.com/en-us/download/details.aspx?id=26999 --x&gt;&#xA;On windows, [Microsoft Visual C++ 2010 SP1 Redistributable Package (x86)](https://download.microsoft.com/download/1/6/5/165255E7-1014-4D0A-B094-B6A430A6BFFC/vcredist_x86.exe) is also necessary to run yt-dlp. You probably already have this, but if the executable throws an error due to missing `MSVCR100.dll` you need to install it manually.&#xA;--&gt; &#xA;&lt;p&gt;While all the other dependencies are optional, &lt;code&gt;ffmpeg&lt;/code&gt; and &lt;code&gt;ffprobe&lt;/code&gt; are highly recommended&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ffmpeg.org&#34;&gt;&lt;strong&gt;ffmpeg&lt;/strong&gt; and &lt;strong&gt;ffprobe&lt;/strong&gt;&lt;/a&gt; - Required for &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#format-selection&#34;&gt;merging separate video and audio files&lt;/a&gt; as well as for various &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#post-processing-options&#34;&gt;post-processing&lt;/a&gt; tasks. License &lt;a href=&#34;https://www.ffmpeg.org/legal.html&#34;&gt;depends on the build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quodlibet/mutagen&#34;&gt;&lt;strong&gt;mutagen&lt;/strong&gt;&lt;/a&gt;* - For embedding thumbnail in certain formats. Licensed under &lt;a href=&#34;https://github.com/quodlibet/mutagen/raw/master/COPYING&#34;&gt;GPLv2+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Legrandin/pycryptodome&#34;&gt;&lt;strong&gt;pycryptodomex&lt;/strong&gt;&lt;/a&gt;* - For decrypting AES-128 HLS streams and various other data. Licensed under &lt;a href=&#34;https://github.com/Legrandin/pycryptodome/raw/master/LICENSE.rst&#34;&gt;BSD-2-Clause&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aaugustin/websockets&#34;&gt;&lt;strong&gt;websockets&lt;/strong&gt;&lt;/a&gt;* - For downloading over websocket. Licensed under &lt;a href=&#34;https://github.com/aaugustin/websockets/raw/main/LICENSE&#34;&gt;BSD-3-Clause&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mitya57/secretstorage&#34;&gt;&lt;strong&gt;secretstorage&lt;/strong&gt;&lt;/a&gt; - For accessing the Gnome keyring while decrypting cookies of Chromium-based browsers on Linux. Licensed under &lt;a href=&#34;https://github.com/mitya57/secretstorage/raw/master/LICENSE&#34;&gt;BSD-3-Clause&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/brotli&#34;&gt;&lt;strong&gt;brotli&lt;/strong&gt;&lt;/a&gt;* or &lt;a href=&#34;https://github.com/python-hyper/brotlicffi&#34;&gt;&lt;strong&gt;brotlicffi&lt;/strong&gt;&lt;/a&gt; - &lt;a href=&#34;https://en.wikipedia.org/wiki/Brotli&#34;&gt;Brotli&lt;/a&gt; content encoding support. Both licensed under MIT &lt;sup&gt;&lt;a href=&#34;https://github.com/google/brotli/raw/master/LICENSE&#34;&gt;1&lt;/a&gt; &lt;a href=&#34;https://github.com/python-hyper/brotlicffi/raw/master/LICENSE&#34;&gt;2&lt;/a&gt; &lt;/sup&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/certifi/python-certifi&#34;&gt;&lt;strong&gt;certifi&lt;/strong&gt;&lt;/a&gt;* - Provides Mozilla&#39;s root certificate bundle. Licensed under &lt;a href=&#34;https://github.com/certifi/python-certifi/raw/master/LICENSE&#34;&gt;MPLv2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xattr/xattr&#34;&gt;&lt;strong&gt;xattr&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/iustin/pyxattr&#34;&gt;&lt;strong&gt;pyxattr&lt;/strong&gt;&lt;/a&gt; or &lt;a href=&#34;http://savannah.nongnu.org/projects/attr&#34;&gt;&lt;strong&gt;setfattr&lt;/strong&gt;&lt;/a&gt; - For writing xattr metadata on Linux. Licensed under &lt;a href=&#34;https://github.com/xattr/xattr/raw/master/LICENSE.txt&#34;&gt;MIT&lt;/a&gt;, &lt;a href=&#34;https://github.com/iustin/pyxattr/raw/master/COPYING&#34;&gt;LGPL2.1&lt;/a&gt; and &lt;a href=&#34;http://git.savannah.nongnu.org/cgit/attr.git/tree/doc/COPYING&#34;&gt;GPLv2+&lt;/a&gt; respectively&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wez/atomicparsley&#34;&gt;&lt;strong&gt;AtomicParsley&lt;/strong&gt;&lt;/a&gt; - For embedding thumbnail in mp4/m4a if mutagen/ffmpeg cannot. Licensed under &lt;a href=&#34;https://github.com/wez/atomicparsley/raw/master/COPYING&#34;&gt;GPLv2+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://rtmpdump.mplayerhq.hu&#34;&gt;&lt;strong&gt;rtmpdump&lt;/strong&gt;&lt;/a&gt; - For downloading &lt;code&gt;rtmp&lt;/code&gt; streams. ffmpeg will be used as a fallback. Licensed under &lt;a href=&#34;http://rtmpdump.mplayerhq.hu&#34;&gt;GPLv2+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mplayerhq.hu/design7/info.html&#34;&gt;&lt;strong&gt;mplayer&lt;/strong&gt;&lt;/a&gt; or &lt;a href=&#34;https://mpv.io&#34;&gt;&lt;strong&gt;mpv&lt;/strong&gt;&lt;/a&gt; - For downloading &lt;code&gt;rstp&lt;/code&gt; streams. ffmpeg will be used as a fallback. Licensed under &lt;a href=&#34;https://github.com/mpv-player/mpv/raw/master/Copyright&#34;&gt;GPLv2+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ariya/phantomjs&#34;&gt;&lt;strong&gt;phantomjs&lt;/strong&gt;&lt;/a&gt; - Used in extractors where javascript needs to be run. Licensed under &lt;a href=&#34;https://github.com/ariya/phantomjs/raw/master/LICENSE.BSD&#34;&gt;BSD-3-Clause&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/faissaloo/SponSkrub&#34;&gt;&lt;strong&gt;sponskrub&lt;/strong&gt;&lt;/a&gt; - For using the now &lt;strong&gt;deprecated&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#sponskrub-options&#34;&gt;sponskrub options&lt;/a&gt;. Licensed under &lt;a href=&#34;https://github.com/faissaloo/SponSkrub/raw/master/LICENCE.md&#34;&gt;GPLv3+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Any external downloader that you want to use with &lt;code&gt;--downloader&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To use or redistribute the dependencies, you must agree to their respective licensing terms.&lt;/p&gt; &#xA;&lt;p&gt;The Windows and MacOS standalone release binaries are built with the Python interpreter and the packages marked with * included.&lt;/p&gt; &#xA;&lt;!-- TODO: ffmpeg has merged this patch. Remove this note once there is new release --&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: There are some regressions in newer ffmpeg versions that causes various issues when used alongside yt-dlp. Since ffmpeg is such an important dependency, we provide &lt;a href=&#34;https://github.com/yt-dlp/FFmpeg-Builds#ffmpeg-static-auto-builds&#34;&gt;custom builds&lt;/a&gt; with patches for these issues at &lt;a href=&#34;https://github.com/yt-dlp/FFmpeg-Builds&#34;&gt;yt-dlp/FFmpeg-Builds&lt;/a&gt;. See &lt;a href=&#34;https://github.com/yt-dlp/FFmpeg-Builds#patches-applied&#34;&gt;the readme&lt;/a&gt; for details on the specific issues solved by these builds&lt;/p&gt; &#xA;&lt;h2&gt;COMPILE&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Windows&lt;/strong&gt;: To build the Windows executable, you must have pyinstaller (and any of yt-dlp&#39;s optional dependencies if needed). Once you have all the necessary dependencies installed, (optionally) build lazy extractors using &lt;code&gt;devscripts/make_lazy_extractors.py&lt;/code&gt;, and then just run &lt;code&gt;pyinst.py&lt;/code&gt;. The executable will be built for the same architecture (32/64 bit) as the python used to build it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;py -m pip install -U pyinstaller -r requirements.txt&#xA;py devscripts/make_lazy_extractors.py&#xA;py pyinst.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that pyinstaller &lt;a href=&#34;https://github.com/pyinstaller/pyinstaller#requirements-and-tested-platforms&#34;&gt;does not support&lt;/a&gt; Python installed from the Windows store without using a virtual environment&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Unix&lt;/strong&gt;: You will need the required build tools: &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;make&lt;/code&gt; (GNU), &lt;code&gt;pandoc&lt;/code&gt;, &lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;pytest&lt;/code&gt;&lt;br&gt; Then simply run &lt;code&gt;make&lt;/code&gt;. You can also run &lt;code&gt;make yt-dlp&lt;/code&gt; instead to compile only the binary without updating any of the additional files&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: In either platform, &lt;code&gt;devscripts/update-version.py&lt;/code&gt; can be used to automatically update the version number&lt;/p&gt; &#xA;&lt;p&gt;You can also fork the project on github and run your fork&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/.github/workflows/build.yml&#34;&gt;build workflow&lt;/a&gt; to automatically build a release&lt;/p&gt; &#xA;&lt;h1&gt;USAGE AND OPTIONS&lt;/h1&gt; &#xA;&lt;!-- MANPAGE: BEGIN EXCLUDED SECTION --&gt; &#xA;&lt;pre&gt;&lt;code&gt;yt-dlp [OPTIONS] [--] URL [URL...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Ctrl+F&lt;/code&gt; is your friend :D&lt;/p&gt; &#xA;&lt;!-- MANPAGE: END EXCLUDED SECTION --&gt; &#xA;&lt;!-- Auto generated --&gt; &#xA;&lt;h2&gt;General Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;-h, --help                      Print this help text and exit&#xA;--version                       Print program version and exit&#xA;-U, --update                    Update this program to latest version&#xA;-i, --ignore-errors             Ignore download and postprocessing errors.&#xA;                                The download will be considered successful&#xA;                                even if the postprocessing fails&#xA;--no-abort-on-error             Continue with next video on download errors;&#xA;                                e.g. to skip unavailable videos in a&#xA;                                playlist (default)&#xA;--abort-on-error                Abort downloading of further videos if an&#xA;                                error occurs (Alias: --no-ignore-errors)&#xA;--dump-user-agent               Display the current user-agent and exit&#xA;--list-extractors               List all supported extractors and exit&#xA;--extractor-descriptions        Output descriptions of all supported&#xA;                                extractors and exit&#xA;--force-generic-extractor       Force extraction to use the generic&#xA;                                extractor&#xA;--default-search PREFIX         Use this prefix for unqualified URLs. Eg:&#xA;                                &#34;gvsearch2:python&#34; downloads two videos from&#xA;                                google videos for the search term &#34;python&#34;.&#xA;                                Use the value &#34;auto&#34; to let yt-dlp guess&#xA;                                (&#34;auto_warning&#34; to emit a warning when&#xA;                                guessing). &#34;error&#34; just throws an error. The&#xA;                                default value &#34;fixup_error&#34; repairs broken&#xA;                                URLs, but emits an error if this is not&#xA;                                possible instead of searching&#xA;--ignore-config                 Don&#39;t load any more configuration files&#xA;                                except those given by --config-locations.&#xA;                                For backward compatibility, if this option&#xA;                                is found inside the system configuration&#xA;                                file, the user configuration is not loaded.&#xA;                                (Alias: --no-config)&#xA;--no-config-locations           Do not load any custom configuration files&#xA;                                (default). When given inside a configuration&#xA;                                file, ignore all previous --config-locations&#xA;                                defined in the current file&#xA;--config-locations PATH         Location of the main configuration file;&#xA;                                either the path to the config or its&#xA;                                containing directory (&#34;-&#34; for stdin). Can be&#xA;                                used multiple times and inside other&#xA;                                configuration files&#xA;--flat-playlist                 Do not extract the videos of a playlist,&#xA;                                only list them&#xA;--no-flat-playlist              Extract the videos of a playlist&#xA;--live-from-start               Download livestreams from the start.&#xA;                                Currently only supported for YouTube&#xA;                                (Experimental)&#xA;--no-live-from-start            Download livestreams from the current time&#xA;                                (default)&#xA;--wait-for-video MIN[-MAX]      Wait for scheduled streams to become&#xA;                                available. Pass the minimum number of&#xA;                                seconds (or range) to wait between retries&#xA;--no-wait-for-video             Do not wait for scheduled streams (default)&#xA;--mark-watched                  Mark videos watched (even with --simulate)&#xA;--no-mark-watched               Do not mark videos watched (default)&#xA;--no-colors                     Do not emit color codes in output&#xA;--compat-options OPTS           Options that can help keep compatibility&#xA;                                with youtube-dl or youtube-dlc&#xA;                                configurations by reverting some of the&#xA;                                changes made in yt-dlp. See &#34;Differences in&#xA;                                default behavior&#34; for details&#xA;--alias ALIASES OPTIONS         Create aliases for an option string. Unless&#xA;                                an alias starts with a dash &#34;-&#34;, it is&#xA;                                prefixed with &#34;--&#34;. Arguments are parsed&#xA;                                according to the Python string formatting&#xA;                                mini-language. Eg: --alias get-audio,-X&#xA;                                &#34;-S=aext:{0},abr -x --audio-format {0}&#34;&#xA;                                creates options &#34;--get-audio&#34; and &#34;-X&#34; that&#xA;                                takes an argument (ARG0) and expands to&#xA;                                &#34;-S=aext:ARG0,abr -x --audio-format ARG0&#34;.&#xA;                                All defined aliases are listed in the --help&#xA;                                output. Alias options can trigger more&#xA;                                aliases; so be carefull to avoid defining&#xA;                                recursive options. As a safety measure, each&#xA;                                alias may be triggered a maximum of 100&#xA;                                times. This option can be used multiple&#xA;                                times&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Network Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;--proxy URL                     Use the specified HTTP/HTTPS/SOCKS proxy. To&#xA;                                enable SOCKS proxy, specify a proper scheme.&#xA;                                Eg: socks5://user:pass@127.0.0.1:1080/. Pass&#xA;                                in an empty string (--proxy &#34;&#34;) for direct&#xA;                                connection&#xA;--socket-timeout SECONDS        Time to wait before giving up, in seconds&#xA;--source-address IP             Client-side IP address to bind to&#xA;-4, --force-ipv4                Make all connections via IPv4&#xA;-6, --force-ipv6                Make all connections via IPv6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Geo-restriction:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;--geo-verification-proxy URL    Use this proxy to verify the IP address for&#xA;                                some geo-restricted sites. The default proxy&#xA;                                specified by --proxy (or none, if the option&#xA;                                is not present) is used for the actual&#xA;                                downloading&#xA;--geo-bypass                    Bypass geographic restriction via faking&#xA;                                X-Forwarded-For HTTP header (default)&#xA;--no-geo-bypass                 Do not bypass geographic restriction via&#xA;                                faking X-Forwarded-For HTTP header&#xA;--geo-bypass-country CODE       Force bypass geographic restriction with&#xA;                                explicitly provided two-letter ISO 3166-2&#xA;                                country code&#xA;--geo-bypass-ip-block IP_BLOCK  Force bypass geographic restriction with&#xA;                                explicitly provided IP block in CIDR&#xA;                                notation&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Video Selection:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;--playlist-start NUMBER         Playlist video to start at (default is 1)&#xA;--playlist-end NUMBER           Playlist video to end at (default is last)&#xA;--playlist-items ITEM_SPEC      Playlist video items to download. Specify&#xA;                                indices of the videos in the playlist&#xA;                                separated by commas like: &#34;--playlist-items&#xA;                                1,2,5,8&#34; if you want to download videos&#xA;                                indexed 1, 2, 5, 8 in the playlist. You can&#xA;                                specify range: &#34;--playlist-items&#xA;                                1-3,7,10-13&#34;, it will download the videos at&#xA;                                index 1, 2, 3, 7, 10, 11, 12 and 13&#xA;--min-filesize SIZE             Do not download any videos smaller than SIZE&#xA;                                (e.g. 50k or 44.6m)&#xA;--max-filesize SIZE             Do not download any videos larger than SIZE&#xA;                                (e.g. 50k or 44.6m)&#xA;--date DATE                     Download only videos uploaded on this date.&#xA;                                The date can be &#34;YYYYMMDD&#34; or in the format &#xA;                                [now|today|yesterday][-N[day|week|month|year]].&#xA;                                Eg: --date today-2weeks&#xA;--datebefore DATE               Download only videos uploaded on or before&#xA;                                this date. The date formats accepted is the&#xA;                                same as --date&#xA;--dateafter DATE                Download only videos uploaded on or after&#xA;                                this date. The date formats accepted is the&#xA;                                same as --date&#xA;--match-filters FILTER          Generic video filter. Any &#34;OUTPUT TEMPLATE&#34;&#xA;                                field can be compared with a number or a&#xA;                                string using the operators defined in&#xA;                                &#34;Filtering formats&#34;. You can also simply&#xA;                                specify a field to match if the field is&#xA;                                present, use &#34;!field&#34; to check if the field&#xA;                                is not present, and &#34;&amp;amp;&#34; to check multiple&#xA;                                conditions. Use a &#34;\&#34; to escape &#34;&amp;amp;&#34; or&#xA;                                quotes if needed. If used multiple times,&#xA;                                the filter matches if atleast one of the&#xA;                                conditions are met. Eg: --match-filter&#xA;                                !is_live --match-filter &#34;like_count&amp;gt;?100 &amp;amp;&#xA;                                description~=&#39;(?i)\bcats \&amp;amp; dogs\b&#39;&#34; matches&#xA;                                only videos that are not live OR those that&#xA;                                have a like count more than 100 (or the like&#xA;                                field is not available) and also has a&#xA;                                description that contains the phrase &#34;cats &amp;amp;&#xA;                                dogs&#34; (caseless). Use &#34;--match-filter -&#34; to&#xA;                                interactively ask whether to download each&#xA;                                video&#xA;--no-match-filter               Do not use generic video filter (default)&#xA;--no-playlist                   Download only the video, if the URL refers&#xA;                                to a video and a playlist&#xA;--yes-playlist                  Download the playlist, if the URL refers to&#xA;                                a video and a playlist&#xA;--age-limit YEARS               Download only videos suitable for the given&#xA;                                age&#xA;--download-archive FILE         Download only videos not listed in the&#xA;                                archive file. Record the IDs of all&#xA;                                downloaded videos in it&#xA;--no-download-archive           Do not use archive file (default)&#xA;--max-downloads NUMBER          Abort after downloading NUMBER files&#xA;--break-on-existing             Stop the download process when encountering&#xA;                                a file that is in the archive&#xA;--break-on-reject               Stop the download process when encountering&#xA;                                a file that has been filtered out&#xA;--break-per-input               Make --break-on-existing, --break-on-reject&#xA;                                and --max-downloads act only on the current&#xA;                                input URL&#xA;--no-break-per-input            --break-on-existing and similar options&#xA;                                terminates the entire download queue&#xA;--skip-playlist-after-errors N  Number of allowed failures until the rest of&#xA;                                the playlist is skipped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Download Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;-N, --concurrent-fragments N    Number of fragments of a dash/hlsnative&#xA;                                video that should be downloaded concurrently&#xA;                                (default is 1)&#xA;-r, --limit-rate RATE           Maximum download rate in bytes per second&#xA;                                (e.g. 50K or 4.2M)&#xA;--throttled-rate RATE           Minimum download rate in bytes per second&#xA;                                below which throttling is assumed and the&#xA;                                video data is re-extracted (e.g. 100K)&#xA;-R, --retries RETRIES           Number of retries (default is 10), or&#xA;                                &#34;infinite&#34;&#xA;--file-access-retries RETRIES   Number of times to retry on file access&#xA;                                error (default is 3), or &#34;infinite&#34;&#xA;--fragment-retries RETRIES      Number of retries for a fragment (default is&#xA;                                10), or &#34;infinite&#34; (DASH, hlsnative and ISM)&#xA;--retry-sleep [TYPE:]EXPR       An expression for the time to sleep between&#xA;                                retries in seconds (optionally) prefixed by&#xA;                                the type of retry (file_access, fragment,&#xA;                                http (default)) to apply the sleep to. EXPR&#xA;                                can be a number, linear=START[:END[:STEP=1]]&#xA;                                or exp=START[:END[:BASE=2]]. This option can&#xA;                                be used multiple times to set the sleep for&#xA;                                the different retry types. Eg: --retry-sleep&#xA;                                linear=1::2 --retry-sleep fragment:exp=1:20&#xA;--skip-unavailable-fragments    Skip unavailable fragments for DASH,&#xA;                                hlsnative and ISM downloads (default)&#xA;                                (Alias: --no-abort-on-unavailable-fragment)&#xA;--abort-on-unavailable-fragment&#xA;                                Abort download if a fragment is unavailable&#xA;                                (Alias: --no-skip-unavailable-fragments)&#xA;--keep-fragments                Keep downloaded fragments on disk after&#xA;                                downloading is finished&#xA;--no-keep-fragments             Delete downloaded fragments after&#xA;                                downloading is finished (default)&#xA;--buffer-size SIZE              Size of download buffer (e.g. 1024 or 16K)&#xA;                                (default is 1024)&#xA;--resize-buffer                 The buffer size is automatically resized&#xA;                                from an initial value of --buffer-size&#xA;                                (default)&#xA;--no-resize-buffer              Do not automatically adjust the buffer size&#xA;--http-chunk-size SIZE          Size of a chunk for chunk-based HTTP&#xA;                                downloading (e.g. 10485760 or 10M) (default&#xA;                                is disabled). May be useful for bypassing&#xA;                                bandwidth throttling imposed by a webserver&#xA;                                (experimental)&#xA;--playlist-reverse              Download playlist videos in reverse order&#xA;--no-playlist-reverse           Download playlist videos in default order&#xA;                                (default)&#xA;--playlist-random               Download playlist videos in random order&#xA;--xattr-set-filesize            Set file xattribute ytdl.filesize with&#xA;                                expected file size&#xA;--hls-use-mpegts                Use the mpegts container for HLS videos;&#xA;                                allowing some players to play the video&#xA;                                while downloading, and reducing the chance&#xA;                                of file corruption if download is&#xA;                                interrupted. This is enabled by default for&#xA;                                live streams&#xA;--no-hls-use-mpegts             Do not use the mpegts container for HLS&#xA;                                videos. This is default when not downloading&#xA;                                live streams&#xA;--downloader [PROTO:]NAME       Name or path of the external downloader to&#xA;                                use (optionally) prefixed by the protocols&#xA;                                (http, ftp, m3u8, dash, rstp, rtmp, mms) to&#xA;                                use it for. Currently supports native,&#xA;                                aria2c, avconv, axel, curl, ffmpeg, httpie,&#xA;                                wget. You can use this option multiple times&#xA;                                to set different downloaders for different&#xA;                                protocols. For example, --downloader aria2c&#xA;                                --downloader &#34;dash,m3u8:native&#34; will use&#xA;                                aria2c for http/ftp downloads, and the&#xA;                                native downloader for dash/m3u8 downloads&#xA;                                (Alias: --external-downloader)&#xA;--downloader-args NAME:ARGS     Give these arguments to the external&#xA;                                downloader. Specify the downloader name and&#xA;                                the arguments separated by a colon &#34;:&#34;. For&#xA;                                ffmpeg, arguments can be passed to different&#xA;                                positions using the same syntax as&#xA;                                --postprocessor-args. You can use this&#xA;                                option multiple times to give different&#xA;                                arguments to different downloaders (Alias:&#xA;                                --external-downloader-args)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Filesystem Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;-a, --batch-file FILE           File containing URLs to download (&#34;-&#34; for&#xA;                                stdin), one URL per line. Lines starting&#xA;                                with &#34;#&#34;, &#34;;&#34; or &#34;]&#34; are considered as&#xA;                                comments and ignored&#xA;--no-batch-file                 Do not read URLs from batch file (default)&#xA;-P, --paths [TYPES:]PATH        The paths where the files should be&#xA;                                downloaded. Specify the type of file and the&#xA;                                path separated by a colon &#34;:&#34;. All the same&#xA;                                TYPES as --output are supported.&#xA;                                Additionally, you can also provide &#34;home&#34;&#xA;                                (default) and &#34;temp&#34; paths. All intermediary&#xA;                                files are first downloaded to the temp path&#xA;                                and then the final files are moved over to&#xA;                                the home path after download is finished.&#xA;                                This option is ignored if --output is an&#xA;                                absolute path&#xA;-o, --output [TYPES:]TEMPLATE   Output filename template; see &#34;OUTPUT&#xA;                                TEMPLATE&#34; for details&#xA;--output-na-placeholder TEXT    Placeholder for unavailable fields in&#xA;                                &#34;OUTPUT TEMPLATE&#34; (default: &#34;NA&#34;)&#xA;--restrict-filenames            Restrict filenames to only ASCII characters,&#xA;                                and avoid &#34;&amp;amp;&#34; and spaces in filenames&#xA;--no-restrict-filenames         Allow Unicode characters, &#34;&amp;amp;&#34; and spaces in&#xA;                                filenames (default)&#xA;--windows-filenames             Force filenames to be Windows-compatible&#xA;--no-windows-filenames          Make filenames Windows-compatible only if&#xA;                                using Windows (default)&#xA;--trim-filenames LENGTH         Limit the filename length (excluding&#xA;                                extension) to the specified number of&#xA;                                characters&#xA;-w, --no-overwrites             Do not overwrite any files&#xA;--force-overwrites              Overwrite all video and metadata files. This&#xA;                                option includes --no-continue&#xA;--no-force-overwrites           Do not overwrite the video, but overwrite&#xA;                                related files (default)&#xA;-c, --continue                  Resume partially downloaded files/fragments&#xA;                                (default)&#xA;--no-continue                   Do not resume partially downloaded&#xA;                                fragments. If the file is not fragmented,&#xA;                                restart download of the entire file&#xA;--part                          Use .part files instead of writing directly&#xA;                                into output file (default)&#xA;--no-part                       Do not use .part files - write directly into&#xA;                                output file&#xA;--mtime                         Use the Last-modified header to set the file&#xA;                                modification time (default)&#xA;--no-mtime                      Do not use the Last-modified header to set&#xA;                                the file modification time&#xA;--write-description             Write video description to a .description&#xA;                                file&#xA;--no-write-description          Do not write video description (default)&#xA;--write-info-json               Write video metadata to a .info.json file&#xA;                                (this may contain personal information)&#xA;--no-write-info-json            Do not write video metadata (default)&#xA;--write-playlist-metafiles      Write playlist metadata in addition to the&#xA;                                video metadata when using --write-info-json,&#xA;                                --write-description etc. (default)&#xA;--no-write-playlist-metafiles   Do not write playlist metadata when using&#xA;                                --write-info-json, --write-description etc.&#xA;--clean-info-json               Remove some private fields such as filenames&#xA;                                from the infojson. Note that it could still&#xA;                                contain some personal information (default)&#xA;--no-clean-info-json            Write all fields to the infojson&#xA;--write-comments                Retrieve video comments to be placed in the&#xA;                                infojson. The comments are fetched even&#xA;                                without this option if the extraction is&#xA;                                known to be quick (Alias: --get-comments)&#xA;--no-write-comments             Do not retrieve video comments unless the&#xA;                                extraction is known to be quick (Alias:&#xA;                                --no-get-comments)&#xA;--load-info-json FILE           JSON file containing the video information&#xA;                                (created with the &#34;--write-info-json&#34;&#xA;                                option)&#xA;--cookies FILE                  Netscape formatted file to read cookies from&#xA;                                and dump cookie jar in&#xA;--no-cookies                    Do not read/dump cookies from/to file&#xA;                                (default)&#xA;--cookies-from-browser BROWSER[+KEYRING][:PROFILE]&#xA;                                The name of the browser and (optionally) the&#xA;                                name/path of the profile to load cookies&#xA;                                from, separated by a &#34;:&#34;. Currently&#xA;                                supported browsers are: brave, chrome,&#xA;                                chromium, edge, firefox, opera, safari,&#xA;                                vivaldi. By default, the most recently&#xA;                                accessed profile is used. The keyring used&#xA;                                for decrypting Chromium cookies on Linux can&#xA;                                be (optionally) specified after the browser&#xA;                                name separated by a &#34;+&#34;. Currently supported&#xA;                                keyrings are: basictext, gnomekeyring,&#xA;                                kwallet&#xA;--no-cookies-from-browser       Do not load cookies from browser (default)&#xA;--cache-dir DIR                 Location in the filesystem where youtube-dl&#xA;                                can store some downloaded information (such&#xA;                                as client ids and signatures) permanently.&#xA;                                By default $XDG_CACHE_HOME/yt-dlp or&#xA;                                ~/.cache/yt-dlp&#xA;--no-cache-dir                  Disable filesystem caching&#xA;--rm-cache-dir                  Delete all filesystem cache files&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Thumbnail Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;--write-thumbnail               Write thumbnail image to disk&#xA;--no-write-thumbnail            Do not write thumbnail image to disk&#xA;                                (default)&#xA;--write-all-thumbnails          Write all thumbnail image formats to disk&#xA;--list-thumbnails               List available thumbnails of each video.&#xA;                                Simulate unless --no-simulate is used&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Internet Shortcut Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;--write-link                    Write an internet shortcut file, depending&#xA;                                on the current platform (.url, .webloc or&#xA;                                .desktop). The URL may be cached by the OS&#xA;--write-url-link                Write a .url Windows internet shortcut. The&#xA;                                OS caches the URL based on the file path&#xA;--write-webloc-link             Write a .webloc macOS internet shortcut&#xA;--write-desktop-link            Write a .desktop Linux internet shortcut&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Verbosity and Simulation Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;-q, --quiet                     Activate quiet mode. If used with --verbose,&#xA;                                print the log to stderr&#xA;--no-warnings                   Ignore warnings&#xA;-s, --simulate                  Do not download the video and do not write&#xA;                                anything to disk&#xA;--no-simulate                   Download the video even if printing/listing&#xA;                                options are used&#xA;--ignore-no-formats-error       Ignore &#34;No video formats&#34; error. Useful for&#xA;                                extracting metadata even if the videos are&#xA;                                not actually available for download&#xA;                                (experimental)&#xA;--no-ignore-no-formats-error    Throw error when no downloadable video&#xA;                                formats are found (default)&#xA;--skip-download                 Do not download the video but write all&#xA;                                related files (Alias: --no-download)&#xA;-O, --print [WHEN:]TEMPLATE     Field name or output template to print to&#xA;                                screen, optionally prefixed with when to&#xA;                                print it, separated by a &#34;:&#34;. Supported&#xA;                                values of &#34;WHEN&#34; are the same as that of&#xA;                                --use-postprocessor, and &#34;video&#34; (default).&#xA;                                Implies --quiet. Implies --simulate unless&#xA;                                --no-simulate or later stages of WHEN are&#xA;                                used. This option can be used multiple times&#xA;--print-to-file [WHEN:]TEMPLATE FILE&#xA;                                Append given template to the file. The&#xA;                                values of WHEN and TEMPLATE are same as that&#xA;                                of --print. FILE uses the same syntax as the&#xA;                                output template. This option can be used&#xA;                                multiple times&#xA;-j, --dump-json                 Quiet, but print JSON information for each&#xA;                                video. Simulate unless --no-simulate is&#xA;                                used. See &#34;OUTPUT TEMPLATE&#34; for a&#xA;                                description of available keys&#xA;-J, --dump-single-json          Quiet, but print JSON information for each&#xA;                                url or infojson passed. Simulate unless&#xA;                                --no-simulate is used. If the URL refers to&#xA;                                a playlist, the whole playlist information&#xA;                                is dumped in a single line&#xA;--force-write-archive           Force download archive entries to be written&#xA;                                as far as no errors occur, even if -s or&#xA;                                another simulation option is used (Alias:&#xA;                                --force-download-archive)&#xA;--newline                       Output progress bar as new lines&#xA;--no-progress                   Do not print progress bar&#xA;--progress                      Show progress bar, even if in quiet mode&#xA;--console-title                 Display progress in console titlebar&#xA;--progress-template [TYPES:]TEMPLATE&#xA;                                Template for progress outputs, optionally&#xA;                                prefixed with one of &#34;download:&#34; (default),&#xA;                                &#34;download-title:&#34; (the console title),&#xA;                                &#34;postprocess:&#34;,  or &#34;postprocess-title:&#34;.&#xA;                                The video&#39;s fields are accessible under the&#xA;                                &#34;info&#34; key and the progress attributes are&#xA;                                accessible under &#34;progress&#34; key. E.g.:&#xA;                                --console-title --progress-template&#xA;                                &#34;download-title:%(info.id)s-%(progress.eta)s&#34;&#xA;-v, --verbose                   Print various debugging information&#xA;--dump-pages                    Print downloaded pages encoded using base64&#xA;                                to debug problems (very verbose)&#xA;--write-pages                   Write downloaded intermediary pages to files&#xA;                                in the current directory to debug problems&#xA;--print-traffic                 Display sent and read HTTP traffic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Workarounds:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;--encoding ENCODING             Force the specified encoding (experimental)&#xA;--legacy-server-connect         Explicitly allow HTTPS connection to servers&#xA;                                that do not support RFC 5746 secure&#xA;                                renegotiation&#xA;--no-check-certificates         Suppress HTTPS certificate validation&#xA;--prefer-insecure               Use an unencrypted connection to retrieve&#xA;                                information about the video (Currently&#xA;                                supported only for YouTube)&#xA;--add-header FIELD:VALUE        Specify a custom HTTP header and its value,&#xA;                                separated by a colon &#34;:&#34;. You can use this&#xA;                                option multiple times&#xA;--bidi-workaround               Work around terminals that lack&#xA;                                bidirectional text support. Requires bidiv&#xA;                                or fribidi executable in PATH&#xA;--sleep-requests SECONDS        Number of seconds to sleep between requests&#xA;                                during data extraction&#xA;--sleep-interval SECONDS        Number of seconds to sleep before each&#xA;                                download. This is the minimum time to sleep&#xA;                                when used along with --max-sleep-interval&#xA;                                (Alias: --min-sleep-interval)&#xA;--max-sleep-interval SECONDS    Maximum number of seconds to sleep. Can only&#xA;                                be used along with --min-sleep-interval&#xA;--sleep-subtitles SECONDS       Number of seconds to sleep before each&#xA;                                subtitle download&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Video Format Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;-f, --format FORMAT             Video format code, see &#34;FORMAT SELECTION&#34;&#xA;                                for more details&#xA;-S, --format-sort SORTORDER     Sort the formats by the fields given, see&#xA;                                &#34;Sorting Formats&#34; for more details&#xA;--format-sort-force             Force user specified sort order to have&#xA;                                precedence over all fields, see &#34;Sorting&#xA;                                Formats&#34; for more details (Alias: --S-force)&#xA;--no-format-sort-force          Some fields have precedence over the user&#xA;                                specified sort order (default)&#xA;--video-multistreams            Allow multiple video streams to be merged&#xA;                                into a single file&#xA;--no-video-multistreams         Only one video stream is downloaded for each&#xA;                                output file (default)&#xA;--audio-multistreams            Allow multiple audio streams to be merged&#xA;                                into a single file&#xA;--no-audio-multistreams         Only one audio stream is downloaded for each&#xA;                                output file (default)&#xA;--prefer-free-formats           Prefer video formats with free containers&#xA;                                over non-free ones of same quality. Use with&#xA;                                &#34;-S ext&#34; to strictly prefer free containers&#xA;                                irrespective of quality&#xA;--no-prefer-free-formats        Don&#39;t give any special preference to free&#xA;                                containers (default)&#xA;--check-formats                 Make sure formats are selected only from&#xA;                                those that are actually downloadable&#xA;--check-all-formats             Check all formats for whether they are&#xA;                                actually downloadable&#xA;--no-check-formats              Do not check that the formats are actually&#xA;                                downloadable&#xA;-F, --list-formats              List available formats of each video.&#xA;                                Simulate unless --no-simulate is used&#xA;--merge-output-format FORMAT    If a merge is required (e.g.&#xA;                                bestvideo+bestaudio), output to given&#xA;                                container format. One of mkv, mp4, ogg,&#xA;                                webm, flv. Ignored if no merge is required&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Subtitle Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;--write-subs                    Write subtitle file&#xA;--no-write-subs                 Do not write subtitle file (default)&#xA;--write-auto-subs               Write automatically generated subtitle file&#xA;                                (Alias: --write-automatic-subs)&#xA;--no-write-auto-subs            Do not write auto-generated subtitles&#xA;                                (default) (Alias: --no-write-automatic-subs)&#xA;--list-subs                     List available subtitles of each video.&#xA;                                Simulate unless --no-simulate is used&#xA;--sub-format FORMAT             Subtitle format; accepts formats preference,&#xA;                                Eg: &#34;srt&#34; or &#34;ass/srt/best&#34;&#xA;--sub-langs LANGS               Languages of the subtitles to download (can&#xA;                                be regex) or &#34;all&#34; separated by commas. (Eg:&#xA;                                --sub-langs &#34;en.*,ja&#34;) You can prefix the&#xA;                                language code with a &#34;-&#34; to exclude it from&#xA;                                the requested languages. (Eg: --sub-langs&#xA;                                all,-live_chat) Use --list-subs for a list&#xA;                                of available language tags&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Authentication Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;-u, --username USERNAME         Login with this account ID&#xA;-p, --password PASSWORD         Account password. If this option is left&#xA;                                out, yt-dlp will ask interactively&#xA;-2, --twofactor TWOFACTOR       Two-factor authentication code&#xA;-n, --netrc                     Use .netrc authentication data&#xA;--netrc-location PATH           Location of .netrc authentication data;&#xA;                                either the path or its containing directory.&#xA;                                Defaults to ~/.netrc&#xA;--video-password PASSWORD       Video password (vimeo, youku)&#xA;--ap-mso MSO                    Adobe Pass multiple-system operator (TV&#xA;                                provider) identifier, use --ap-list-mso for&#xA;                                a list of available MSOs&#xA;--ap-username USERNAME          Multiple-system operator account login&#xA;--ap-password PASSWORD          Multiple-system operator account password.&#xA;                                If this option is left out, yt-dlp will ask&#xA;                                interactively&#xA;--ap-list-mso                   List all supported multiple-system operators&#xA;--client-certificate CERTFILE   Path to client certificate file in PEM&#xA;                                format. May include the private key&#xA;--client-certificate-key KEYFILE&#xA;                                Path to private key file for client&#xA;                                certificate&#xA;--client-certificate-password PASSWORD&#xA;                                Password for client certificate private key,&#xA;                                if encrypted. If not provided, and the key&#xA;                                is encrypted, yt-dlp will ask interactively&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Post-Processing Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;-x, --extract-audio             Convert video files to audio-only files&#xA;                                (requires ffmpeg and ffprobe)&#xA;--audio-format FORMAT           Specify audio format to convert the audio to&#xA;                                when -x is used. Currently supported formats&#xA;                                are: best (default) or one of aac, flac,&#xA;                                mp3, m4a, opus, vorbis, wav, alac&#xA;--audio-quality QUALITY         Specify ffmpeg audio quality to use when&#xA;                                converting the audio with -x. Insert a value&#xA;                                between 0 (best) and 10 (worst) for VBR or a&#xA;                                specific bitrate like 128K (default 5)&#xA;--remux-video FORMAT            Remux the video into another container if&#xA;                                necessary (currently supported: mp4, mkv,&#xA;                                flv, webm, mov, avi, mka, ogg, aac, flac,&#xA;                                mp3, m4a, opus, vorbis, wav, alac). If&#xA;                                target container does not support the&#xA;                                video/audio codec, remuxing will fail. You&#xA;                                can specify multiple rules; Eg.&#xA;                                &#34;aac&amp;gt;m4a/mov&amp;gt;mp4/mkv&#34; will remux aac to m4a,&#xA;                                mov to mp4 and anything else to mkv.&#xA;--recode-video FORMAT           Re-encode the video into another format if&#xA;                                necessary. The syntax and supported formats&#xA;                                are the same as --remux-video&#xA;--postprocessor-args NAME:ARGS  Give these arguments to the postprocessors.&#xA;                                Specify the postprocessor/executable name&#xA;                                and the arguments separated by a colon &#34;:&#34;&#xA;                                to give the argument to the specified&#xA;                                postprocessor/executable. Supported PP are:&#xA;                                Merger, ModifyChapters, SplitChapters,&#xA;                                ExtractAudio, VideoRemuxer, VideoConvertor,&#xA;                                Metadata, EmbedSubtitle, EmbedThumbnail,&#xA;                                SubtitlesConvertor, ThumbnailsConvertor,&#xA;                                FixupStretched, FixupM4a, FixupM3u8,&#xA;                                FixupTimestamp and FixupDuration. The&#xA;                                supported executables are: AtomicParsley,&#xA;                                FFmpeg and FFprobe. You can also specify&#xA;                                &#34;PP+EXE:ARGS&#34; to give the arguments to the&#xA;                                specified executable only when being used by&#xA;                                the specified postprocessor. Additionally,&#xA;                                for ffmpeg/ffprobe, &#34;_i&#34;/&#34;_o&#34; can be&#xA;                                appended to the prefix optionally followed&#xA;                                by a number to pass the argument before the&#xA;                                specified input/output file. Eg: --ppa&#xA;                                &#34;Merger+ffmpeg_i1:-v quiet&#34;. You can use&#xA;                                this option multiple times to give different&#xA;                                arguments to different postprocessors.&#xA;                                (Alias: --ppa)&#xA;-k, --keep-video                Keep the intermediate video file on disk&#xA;                                after post-processing&#xA;--no-keep-video                 Delete the intermediate video file after&#xA;                                post-processing (default)&#xA;--post-overwrites               Overwrite post-processed files (default)&#xA;--no-post-overwrites            Do not overwrite post-processed files&#xA;--embed-subs                    Embed subtitles in the video (only for mp4,&#xA;                                webm and mkv videos)&#xA;--no-embed-subs                 Do not embed subtitles (default)&#xA;--embed-thumbnail               Embed thumbnail in the video as cover art&#xA;--no-embed-thumbnail            Do not embed thumbnail (default)&#xA;--embed-metadata                Embed metadata to the video file. Also&#xA;                                embeds chapters/infojson if present unless&#xA;                                --no-embed-chapters/--no-embed-info-json are&#xA;                                used (Alias: --add-metadata)&#xA;--no-embed-metadata             Do not add metadata to file (default)&#xA;                                (Alias: --no-add-metadata)&#xA;--embed-chapters                Add chapter markers to the video file&#xA;                                (Alias: --add-chapters)&#xA;--no-embed-chapters             Do not add chapter markers (default) (Alias:&#xA;                                --no-add-chapters)&#xA;--embed-info-json               Embed the infojson as an attachment to&#xA;                                mkv/mka video files&#xA;--no-embed-info-json            Do not embed the infojson as an attachment&#xA;                                to the video file&#xA;--parse-metadata FROM:TO        Parse additional metadata like title/artist&#xA;                                from other fields; see &#34;MODIFYING METADATA&#34;&#xA;                                for details&#xA;--replace-in-metadata FIELDS REGEX REPLACE&#xA;                                Replace text in a metadata field using the&#xA;                                given regex. This option can be used&#xA;                                multiple times&#xA;--xattrs                        Write metadata to the video file&#39;s xattrs&#xA;                                (using dublin core and xdg standards)&#xA;--concat-playlist POLICY        Concatenate videos in a playlist. One of&#xA;                                &#34;never&#34;, &#34;always&#34;, or &#34;multi_video&#34;&#xA;                                (default; only when the videos form a single&#xA;                                show). All the video files must have same&#xA;                                codecs and number of streams to be&#xA;                                concatable. The &#34;pl_video:&#34; prefix can be&#xA;                                used with &#34;--paths&#34; and &#34;--output&#34; to set&#xA;                                the output filename for the concatenated&#xA;                                files. See &#34;OUTPUT TEMPLATE&#34; for details&#xA;--fixup POLICY                  Automatically correct known faults of the&#xA;                                file. One of never (do nothing), warn (only&#xA;                                emit a warning), detect_or_warn (the&#xA;                                default; fix file if we can, warn&#xA;                                otherwise), force (try fixing even if file&#xA;                                already exists)&#xA;--ffmpeg-location PATH          Location of the ffmpeg binary; either the&#xA;                                path to the binary or its containing&#xA;                                directory&#xA;--exec [WHEN:]CMD               Execute a command, optionally prefixed with&#xA;                                when to execute it (after_move if&#xA;                                unspecified), separated by a &#34;:&#34;. Supported&#xA;                                values of &#34;WHEN&#34; are the same as that of&#xA;                                --use-postprocessor. Same syntax as the&#xA;                                output template can be used to pass any&#xA;                                field as arguments to the command. After&#xA;                                download, an additional field &#34;filepath&#34;&#xA;                                that contains the final path of the&#xA;                                downloaded file is also available, and if no&#xA;                                fields are passed, %(filepath)q is appended&#xA;                                to the end of the command. This option can&#xA;                                be used multiple times&#xA;--no-exec                       Remove any previously defined --exec&#xA;--convert-subs FORMAT           Convert the subtitles to another format&#xA;                                (currently supported: srt, vtt, ass, lrc)&#xA;                                (Alias: --convert-subtitles)&#xA;--convert-thumbnails FORMAT     Convert the thumbnails to another format&#xA;                                (currently supported: jpg, png, webp)&#xA;--split-chapters                Split video into multiple files based on&#xA;                                internal chapters. The &#34;chapter:&#34; prefix can&#xA;                                be used with &#34;--paths&#34; and &#34;--output&#34; to set&#xA;                                the output filename for the split files. See&#xA;                                &#34;OUTPUT TEMPLATE&#34; for details&#xA;--no-split-chapters             Do not split video based on chapters&#xA;                                (default)&#xA;--remove-chapters REGEX         Remove chapters whose title matches the&#xA;                                given regular expression. Time ranges&#xA;                                prefixed by a &#34;*&#34; can also be used in place&#xA;                                of chapters to remove the specified range.&#xA;                                Eg: --remove-chapters &#34;*10:15-15:00&#34;&#xA;                                --remove-chapters &#34;intro&#34;. This option can&#xA;                                be used multiple times&#xA;--no-remove-chapters            Do not remove any chapters from the file&#xA;                                (default)&#xA;--force-keyframes-at-cuts       Force keyframes around chapters when&#xA;                                removing/splitting them. This is slow due to&#xA;                                needing a re-encode, but the resulting video&#xA;                                may have fewer artifacts around the cuts&#xA;--no-force-keyframes-at-cuts    Do not force keyframes around the chapters&#xA;                                when cutting/splitting (default)&#xA;--use-postprocessor NAME[:ARGS]&#xA;                                The (case sensitive) name of plugin&#xA;                                postprocessors to be enabled, and&#xA;                                (optionally) arguments to be passed to it,&#xA;                                separated by a colon &#34;:&#34;. ARGS are a&#xA;                                semicolon &#34;;&#34; delimited list of NAME=VALUE.&#xA;                                The &#34;when&#34; argument determines when the&#xA;                                postprocessor is invoked. It can be one of&#xA;                                &#34;pre_process&#34; (after video extraction),&#xA;                                &#34;after_filter&#34; (after video passes filter),&#xA;                                &#34;before_dl&#34; (before each video download),&#xA;                                &#34;post_process&#34; (after each video download;&#xA;                                default), &#34;after_move&#34; (after moving video&#xA;                                file to it&#39;s final locations), &#34;after_video&#34;&#xA;                                (after downloading and processing all&#xA;                                formats of a video), or &#34;playlist&#34; (at end&#xA;                                of playlist). This option can be used&#xA;                                multiple times to add different&#xA;                                postprocessors&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;SponsorBlock Options:&lt;/h2&gt; &#xA;&lt;p&gt;Make chapter entries for, or remove various segments (sponsor, introductions, etc.) from downloaded YouTube videos using the &lt;a href=&#34;https://sponsor.ajay.app&#34;&gt;SponsorBlock API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--sponsorblock-mark CATS        SponsorBlock categories to create chapters&#xA;                                for, separated by commas. Available&#xA;                                categories are sponsor, intro, outro,&#xA;                                selfpromo, preview, filler, interaction,&#xA;                                music_offtopic, poi_highlight, all and&#xA;                                default (=all). You can prefix the category&#xA;                                with a &#34;-&#34; to exclude it. See [1] for&#xA;                                description of the categories. Eg:&#xA;                                --sponsorblock-mark all,-preview&#xA;                                [1] https://wiki.sponsor.ajay.app/w/Segment_Categories&#xA;--sponsorblock-remove CATS      SponsorBlock categories to be removed from&#xA;                                the video file, separated by commas. If a&#xA;                                category is present in both mark and remove,&#xA;                                remove takes precedence. The syntax and&#xA;                                available categories are the same as for&#xA;                                --sponsorblock-mark except that &#34;default&#34;&#xA;                                refers to &#34;all,-filler&#34; and poi_highlight is&#xA;                                not available&#xA;--sponsorblock-chapter-title TEMPLATE&#xA;                                An output template for the title of the&#xA;                                SponsorBlock chapters created by&#xA;                                --sponsorblock-mark. The only available&#xA;                                fields are start_time, end_time, category,&#xA;                                categories, name, category_names. Defaults&#xA;                                to &#34;[SponsorBlock]: %(category_names)l&#34;&#xA;--no-sponsorblock               Disable both --sponsorblock-mark and&#xA;                                --sponsorblock-remove&#xA;--sponsorblock-api URL          SponsorBlock API location, defaults to&#xA;                                https://sponsor.ajay.app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Extractor Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;--extractor-retries RETRIES     Number of retries for known extractor errors&#xA;                                (default is 3), or &#34;infinite&#34;&#xA;--allow-dynamic-mpd             Process dynamic DASH manifests (default)&#xA;                                (Alias: --no-ignore-dynamic-mpd)&#xA;--ignore-dynamic-mpd            Do not process dynamic DASH manifests&#xA;                                (Alias: --no-allow-dynamic-mpd)&#xA;--hls-split-discontinuity       Split HLS playlists to different formats at&#xA;                                discontinuities such as ad breaks&#xA;--no-hls-split-discontinuity    Do not split HLS playlists to different&#xA;                                formats at discontinuities such as ad breaks&#xA;                                (default)&#xA;--extractor-args KEY:ARGS       Pass these arguments to the extractor. See&#xA;                                &#34;EXTRACTOR ARGUMENTS&#34; for details. You can&#xA;                                use this option multiple times to give&#xA;                                arguments for different extractors&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;CONFIGURATION&lt;/h1&gt; &#xA;&lt;p&gt;You can configure yt-dlp by placing any supported command line option to a configuration file. The configuration is loaded from the following locations:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Main Configuration&lt;/strong&gt;: The file given by &lt;code&gt;--config-location&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Portable Configuration&lt;/strong&gt;: &lt;code&gt;yt-dlp.conf&lt;/code&gt; in the same directory as the bundled binary. If you are running from source-code (&lt;code&gt;&amp;lt;root dir&amp;gt;/yt_dlp/__main__.py&lt;/code&gt;), the root directory is used instead.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Home Configuration&lt;/strong&gt;: &lt;code&gt;yt-dlp.conf&lt;/code&gt; in the home path given by &lt;code&gt;-P&lt;/code&gt;, or in the current directory if no such path is given&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;User Configuration&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;%XDG_CONFIG_HOME%/yt-dlp/config&lt;/code&gt; (recommended on Linux/macOS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;%XDG_CONFIG_HOME%/yt-dlp.conf&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;%APPDATA%/yt-dlp/config&lt;/code&gt; (recommended on Windows)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;%APPDATA%/yt-dlp/config.txt&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;~/yt-dlp.conf&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;~/yt-dlp.conf.txt&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;&lt;code&gt;%XDG_CONFIG_HOME%&lt;/code&gt; defaults to &lt;code&gt;~/.config&lt;/code&gt; if undefined. On windows, &lt;code&gt;%APPDATA%&lt;/code&gt; generally points to &lt;code&gt;C:\Users\&amp;lt;user name&amp;gt;\AppData\Roaming&lt;/code&gt; and &lt;code&gt;~&lt;/code&gt; points to &lt;code&gt;%HOME%&lt;/code&gt; if present, &lt;code&gt;%USERPROFILE%&lt;/code&gt; (generally &lt;code&gt;C:\Users\&amp;lt;user name&amp;gt;&lt;/code&gt;), or &lt;code&gt;%HOMEDRIVE%%HOMEPATH%&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;System Configuration&lt;/strong&gt;: &lt;code&gt;/etc/yt-dlp.conf&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For example, with the following configuration file yt-dlp will always extract the audio, not copy the mtime, use a proxy and save all videos under &lt;code&gt;YouTube&lt;/code&gt; directory in your home directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Lines starting with # are comments&#xA;&#xA;# Always extract audio&#xA;-x&#xA;&#xA;# Do not copy the mtime&#xA;--no-mtime&#xA;&#xA;# Use this proxy&#xA;--proxy 127.0.0.1:3128&#xA;&#xA;# Save all videos under YouTube directory in your home directory&#xA;-o ~/YouTube/%(title)s.%(ext)s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that options in configuration file are just the same options aka switches used in regular command line calls; thus there &lt;strong&gt;must be no whitespace&lt;/strong&gt; after &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;--&lt;/code&gt;, e.g. &lt;code&gt;-o&lt;/code&gt; or &lt;code&gt;--proxy&lt;/code&gt; but not &lt;code&gt;- o&lt;/code&gt; or &lt;code&gt;-- proxy&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;--ignore-config&lt;/code&gt; if you want to disable all configuration files for a particular yt-dlp run. If &lt;code&gt;--ignore-config&lt;/code&gt; is found inside any configuration file, no further configuration will be loaded. For example, having the option in the portable configuration file prevents loading of home, user, and system configurations. Additionally, (for backward compatibility) if &lt;code&gt;--ignore-config&lt;/code&gt; is found inside the system configuration file, the user configuration is not loaded.&lt;/p&gt; &#xA;&lt;h3&gt;Authentication with &lt;code&gt;.netrc&lt;/code&gt; file&lt;/h3&gt; &#xA;&lt;p&gt;You may also want to configure automatic credentials storage for extractors that support authentication (by providing login and password with &lt;code&gt;--username&lt;/code&gt; and &lt;code&gt;--password&lt;/code&gt;) in order not to pass credentials as command line arguments on every yt-dlp execution and prevent tracking plain text passwords in the shell command history. You can achieve this using a &lt;a href=&#34;https://stackoverflow.com/tags/.netrc/info&#34;&gt;&lt;code&gt;.netrc&lt;/code&gt; file&lt;/a&gt; on a per extractor basis. For that you will need to create a &lt;code&gt;.netrc&lt;/code&gt; file in &lt;code&gt;--netrc-location&lt;/code&gt; and restrict permissions to read/write by only you:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;touch $HOME/.netrc&#xA;chmod a-rwx,u+rw $HOME/.netrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After that you can add credentials for an extractor in the following format, where &lt;em&gt;extractor&lt;/em&gt; is the name of the extractor in lowercase:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;machine &amp;lt;extractor&amp;gt; login &amp;lt;username&amp;gt; password &amp;lt;password&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;machine youtube login myaccount@gmail.com password my_youtube_password&#xA;machine twitch login my_twitch_account_name password my_twitch_password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To activate authentication with the &lt;code&gt;.netrc&lt;/code&gt; file you should pass &lt;code&gt;--netrc&lt;/code&gt; to yt-dlp or place it in the &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#configuration&#34;&gt;configuration file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The default location of the .netrc file is &lt;code&gt;$HOME&lt;/code&gt; (&lt;code&gt;~&lt;/code&gt;) in UNIX. On Windows, it is &lt;code&gt;%HOME%&lt;/code&gt; if present, &lt;code&gt;%USERPROFILE%&lt;/code&gt; (generally &lt;code&gt;C:\Users\&amp;lt;user name&amp;gt;&lt;/code&gt;) or &lt;code&gt;%HOMEDRIVE%%HOMEPATH%&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;OUTPUT TEMPLATE&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;code&gt;-o&lt;/code&gt; option is used to indicate a template for the output file names while &lt;code&gt;-P&lt;/code&gt; option is used to specify the path each type of file should be saved to.&lt;/p&gt; &#xA;&lt;!-- MANPAGE: BEGIN EXCLUDED SECTION --&gt; &#xA;&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template-examples&#34;&gt;navigate me to examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- MANPAGE: END EXCLUDED SECTION --&gt; &#xA;&lt;p&gt;The simplest usage of &lt;code&gt;-o&lt;/code&gt; is not to set any template arguments when downloading a single file, like in &lt;code&gt;yt-dlp -o funny_video.flv &#34;https://some/video&#34;&lt;/code&gt; (hard-coding file extension like this is &lt;em&gt;not&lt;/em&gt; recommended and could break some post-processing).&lt;/p&gt; &#xA;&lt;p&gt;It may however also contain special sequences that will be replaced when downloading each video. The special sequences may be formatted according to &lt;a href=&#34;https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting&#34;&gt;Python string formatting operations&lt;/a&gt;. For example, &lt;code&gt;%(NAME)s&lt;/code&gt; or &lt;code&gt;%(NAME)05d&lt;/code&gt;. To clarify, that is a percent symbol followed by a name in parentheses, followed by formatting operations.&lt;/p&gt; &#xA;&lt;p&gt;The field names themselves (the part inside the parenthesis) can also have some special formatting:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Object traversal&lt;/strong&gt;: The dictionaries and lists available in metadata can be traversed by using a &lt;code&gt;.&lt;/code&gt; (dot) separator. You can also do python slicing using &lt;code&gt;:&lt;/code&gt;. Eg: &lt;code&gt;%(tags.0)s&lt;/code&gt;, &lt;code&gt;%(subtitles.en.-1.ext)s&lt;/code&gt;, &lt;code&gt;%(id.3:7:-1)s&lt;/code&gt;, &lt;code&gt;%(formats.:.format_id)s&lt;/code&gt;. &lt;code&gt;%()s&lt;/code&gt; refers to the entire infodict. Note that all the fields that become available using this method are not listed below. Use &lt;code&gt;-j&lt;/code&gt; to see such fields&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Addition&lt;/strong&gt;: Addition and subtraction of numeric fields can be done using &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;-&lt;/code&gt; respectively. Eg: &lt;code&gt;%(playlist_index+10)03d&lt;/code&gt;, &lt;code&gt;%(n_entries+1-playlist_index)d&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Date/time Formatting&lt;/strong&gt;: Date/time fields can be formatted according to &lt;a href=&#34;https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes&#34;&gt;strftime formatting&lt;/a&gt; by specifying it separated from the field name using a &lt;code&gt;&amp;gt;&lt;/code&gt;. Eg: &lt;code&gt;%(duration&amp;gt;%H-%M-%S)s&lt;/code&gt;, &lt;code&gt;%(upload_date&amp;gt;%Y-%m-%d)s&lt;/code&gt;, &lt;code&gt;%(epoch-3600&amp;gt;%H-%M-%S)s&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Alternatives&lt;/strong&gt;: Alternate fields can be specified separated with a &lt;code&gt;,&lt;/code&gt;. Eg: &lt;code&gt;%(release_date&amp;gt;%Y,upload_date&amp;gt;%Y|Unknown)s&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Replacement&lt;/strong&gt;: A replacement value can specified using a &lt;code&gt;&amp;amp;&lt;/code&gt; separator. If the field is &lt;em&gt;not&lt;/em&gt; empty, this replacement value will be used instead of the actual field content. This is done after alternate fields are considered; thus the replacement is used if &lt;em&gt;any&lt;/em&gt; of the alternative fields is &lt;em&gt;not&lt;/em&gt; empty.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Default&lt;/strong&gt;: A literal default value can be specified for when the field is empty using a &lt;code&gt;|&lt;/code&gt; separator. This overrides &lt;code&gt;--output-na-template&lt;/code&gt;. Eg: &lt;code&gt;%(uploader|Unknown)s&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;More Conversions&lt;/strong&gt;: In addition to the normal format types &lt;code&gt;diouxXeEfFgGcrs&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;j&lt;/code&gt;, &lt;code&gt;l&lt;/code&gt;, &lt;code&gt;q&lt;/code&gt;, &lt;code&gt;D&lt;/code&gt;, &lt;code&gt;S&lt;/code&gt; can be used for converting to &lt;strong&gt;B&lt;/strong&gt;ytes, &lt;strong&gt;j&lt;/strong&gt;son (flag &lt;code&gt;#&lt;/code&gt; for pretty-printing), a comma separated &lt;strong&gt;l&lt;/strong&gt;ist (flag &lt;code&gt;#&lt;/code&gt; for &lt;code&gt;\n&lt;/code&gt; newline-separated), a string &lt;strong&gt;q&lt;/strong&gt;uoted for the terminal (flag &lt;code&gt;#&lt;/code&gt; to split a list into different arguments), to add &lt;strong&gt;D&lt;/strong&gt;ecimal suffixes (Eg: 10M) (flag &lt;code&gt;#&lt;/code&gt; to use 1024 as factor), and to &lt;strong&gt;S&lt;/strong&gt;anitize as filename (flag &lt;code&gt;#&lt;/code&gt; for restricted), respectively&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unicode normalization&lt;/strong&gt;: The format type &lt;code&gt;U&lt;/code&gt; can be used for NFC &lt;a href=&#34;https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize&#34;&gt;unicode normalization&lt;/a&gt;. The alternate form flag (&lt;code&gt;#&lt;/code&gt;) changes the normalization to NFD and the conversion flag &lt;code&gt;+&lt;/code&gt; can be used for NFKC/NFKD compatibility equivalence normalization. Eg: &lt;code&gt;%(title)+.100U&lt;/code&gt; is NFKC&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To summarize, the general syntax for a field is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;%(name[.keys][addition][&amp;gt;strf][,alternate][&amp;amp;replacement][|default])[flags][width][.precision][length]type&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally, you can set different output templates for the various metadata files separately from the general output template by specifying the type of file followed by the template separated by a colon &lt;code&gt;:&lt;/code&gt;. The different file types supported are &lt;code&gt;subtitle&lt;/code&gt;, &lt;code&gt;thumbnail&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;annotation&lt;/code&gt; (deprecated), &lt;code&gt;infojson&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt;, &lt;code&gt;pl_thumbnail&lt;/code&gt;, &lt;code&gt;pl_description&lt;/code&gt;, &lt;code&gt;pl_infojson&lt;/code&gt;, &lt;code&gt;chapter&lt;/code&gt;, &lt;code&gt;pl_video&lt;/code&gt;. For example, &lt;code&gt;-o &#34;%(title)s.%(ext)s&#34; -o &#34;thumbnail:%(title)s\%(title)s.%(ext)s&#34;&lt;/code&gt; will put the thumbnails in a folder with the same name as the video. If any of the templates is empty, that type of file will not be written. Eg: &lt;code&gt;--write-thumbnail -o &#34;thumbnail:&#34;&lt;/code&gt; will write thumbnails only for playlists and not for video.&lt;/p&gt; &#xA;&lt;p&gt;The available fields are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;id&lt;/code&gt; (string): Video identifier&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;title&lt;/code&gt; (string): Video title&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fulltitle&lt;/code&gt; (string): Video title ignoring live timestamp and generic title&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;url&lt;/code&gt; (string): Video URL&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ext&lt;/code&gt; (string): Video filename extension&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;alt_title&lt;/code&gt; (string): A secondary title of the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;description&lt;/code&gt; (string): The description of the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;display_id&lt;/code&gt; (string): An alternative identifier for the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;uploader&lt;/code&gt; (string): Full name of the video uploader&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;license&lt;/code&gt; (string): License name the video is licensed under&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;creator&lt;/code&gt; (string): The creator of the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;timestamp&lt;/code&gt; (numeric): UNIX timestamp of the moment the video became available&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;upload_date&lt;/code&gt; (string): Video upload date in UTC (YYYYMMDD)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;release_timestamp&lt;/code&gt; (numeric): UNIX timestamp of the moment the video was released&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;release_date&lt;/code&gt; (string): The date (YYYYMMDD) when the video was released in UTC&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;modified_timestamp&lt;/code&gt; (numeric): UNIX timestamp of the moment the video was last modified&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;modified_date&lt;/code&gt; (string): The date (YYYYMMDD) when the video was last modified in UTC&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;uploader_id&lt;/code&gt; (string): Nickname or id of the video uploader&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;channel&lt;/code&gt; (string): Full name of the channel the video is uploaded on&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;channel_id&lt;/code&gt; (string): Id of the channel&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;channel_follower_count&lt;/code&gt; (numeric): Number of followers of the channel&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;location&lt;/code&gt; (string): Physical location where the video was filmed&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;duration&lt;/code&gt; (numeric): Length of the video in seconds&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;duration_string&lt;/code&gt; (string): Length of the video (HH:mm:ss)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;view_count&lt;/code&gt; (numeric): How many users have watched the video on the platform&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;like_count&lt;/code&gt; (numeric): Number of positive ratings of the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dislike_count&lt;/code&gt; (numeric): Number of negative ratings of the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;repost_count&lt;/code&gt; (numeric): Number of reposts of the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;average_rating&lt;/code&gt; (numeric): Average rating give by users, the scale used depends on the webpage&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;comment_count&lt;/code&gt; (numeric): Number of comments on the video (For some extractors, comments are only downloaded at the end, and so this field cannot be used)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;age_limit&lt;/code&gt; (numeric): Age restriction for the video (years)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;live_status&lt;/code&gt; (string): One of &#34;is_live&#34;, &#34;was_live&#34;, &#34;is_upcoming&#34;, &#34;not_live&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;is_live&lt;/code&gt; (boolean): Whether this video is a live stream or a fixed-length video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;was_live&lt;/code&gt; (boolean): Whether this video was originally a live stream&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playable_in_embed&lt;/code&gt; (string): Whether this video is allowed to play in embedded players on other sites&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;availability&lt;/code&gt; (string): Whether the video is &#34;private&#34;, &#34;premium_only&#34;, &#34;subscriber_only&#34;, &#34;needs_auth&#34;, &#34;unlisted&#34; or &#34;public&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;start_time&lt;/code&gt; (numeric): Time in seconds where the reproduction should start, as specified in the URL&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;end_time&lt;/code&gt; (numeric): Time in seconds where the reproduction should end, as specified in the URL&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;format&lt;/code&gt; (string): A human-readable description of the format&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;format_id&lt;/code&gt; (string): Format code specified by &lt;code&gt;--format&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;format_note&lt;/code&gt; (string): Additional info about the format&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;width&lt;/code&gt; (numeric): Width of the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;height&lt;/code&gt; (numeric): Height of the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;resolution&lt;/code&gt; (string): Textual description of width and height&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tbr&lt;/code&gt; (numeric): Average bitrate of audio and video in KBit/s&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;abr&lt;/code&gt; (numeric): Average audio bitrate in KBit/s&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;acodec&lt;/code&gt; (string): Name of the audio codec in use&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;asr&lt;/code&gt; (numeric): Audio sampling rate in Hertz&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vbr&lt;/code&gt; (numeric): Average video bitrate in KBit/s&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fps&lt;/code&gt; (numeric): Frame rate&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dynamic_range&lt;/code&gt; (string): The dynamic range of the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vcodec&lt;/code&gt; (string): Name of the video codec in use&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;container&lt;/code&gt; (string): Name of the container format&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;filesize&lt;/code&gt; (numeric): The number of bytes, if known in advance&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;filesize_approx&lt;/code&gt; (numeric): An estimate for the number of bytes&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;protocol&lt;/code&gt; (string): The protocol that will be used for the actual download&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;extractor&lt;/code&gt; (string): Name of the extractor&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;extractor_key&lt;/code&gt; (string): Key name of the extractor&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;epoch&lt;/code&gt; (numeric): Unix epoch of when the information extraction was completed&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;autonumber&lt;/code&gt; (numeric): Number that will be increased with each download, starting at &lt;code&gt;--autonumber-start&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;video_autonumber&lt;/code&gt; (numeric): Number that will be increased with each video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;n_entries&lt;/code&gt; (numeric): Total number of extracted items in the playlist&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playlist_id&lt;/code&gt; (string): Identifier of the playlist that contains the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playlist_title&lt;/code&gt; (string): Name of the playlist that contains the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playlist&lt;/code&gt; (string): &lt;code&gt;playlist_id&lt;/code&gt; or &lt;code&gt;playlist_title&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playlist_count&lt;/code&gt; (numeric): Total number of items in the playlist. May not be known if entire playlist is not extracted&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playlist_index&lt;/code&gt; (numeric): Index of the video in the playlist padded with leading zeros according the final index&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playlist_autonumber&lt;/code&gt; (numeric): Position of the video in the playlist download queue padded with leading zeros according to the total length of the playlist&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playlist_uploader&lt;/code&gt; (string): Full name of the playlist uploader&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playlist_uploader_id&lt;/code&gt; (string): Nickname or id of the playlist uploader&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;webpage_url&lt;/code&gt; (string): A URL to the video webpage which if given to yt-dlp should allow to get the same result again&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;webpage_url_basename&lt;/code&gt; (string): The basename of the webpage URL&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;webpage_url_domain&lt;/code&gt; (string): The domain of the webpage URL&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;original_url&lt;/code&gt; (string): The URL given by the user (or same as &lt;code&gt;webpage_url&lt;/code&gt; for playlist entries)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Available for the video that belongs to some logical chapter or section:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;chapter&lt;/code&gt; (string): Name or title of the chapter the video belongs to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;chapter_number&lt;/code&gt; (numeric): Number of the chapter the video belongs to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;chapter_id&lt;/code&gt; (string): Id of the chapter the video belongs to&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Available for the video that is an episode of some series or programme:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;series&lt;/code&gt; (string): Title of the series or programme the video episode belongs to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;season&lt;/code&gt; (string): Title of the season the video episode belongs to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;season_number&lt;/code&gt; (numeric): Number of the season the video episode belongs to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;season_id&lt;/code&gt; (string): Id of the season the video episode belongs to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;episode&lt;/code&gt; (string): Title of the video episode&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;episode_number&lt;/code&gt; (numeric): Number of the video episode within a season&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;episode_id&lt;/code&gt; (string): Id of the video episode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Available for the media that is a track or a part of a music album:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;track&lt;/code&gt; (string): Title of the track&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;track_number&lt;/code&gt; (numeric): Number of the track within an album or a disc&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;track_id&lt;/code&gt; (string): Id of the track&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;artist&lt;/code&gt; (string): Artist(s) of the track&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;genre&lt;/code&gt; (string): Genre(s) of the track&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;album&lt;/code&gt; (string): Title of the album the track belongs to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;album_type&lt;/code&gt; (string): Type of the album&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;album_artist&lt;/code&gt; (string): List of all artists appeared on the album&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;disc_number&lt;/code&gt; (numeric): Number of the disc or other physical medium the track belongs to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;release_year&lt;/code&gt; (numeric): Year (YYYY) when the album was released&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Available for &lt;code&gt;chapter:&lt;/code&gt; prefix when using &lt;code&gt;--split-chapters&lt;/code&gt; for videos with internal chapters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;section_title&lt;/code&gt; (string): Title of the chapter&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;section_number&lt;/code&gt; (numeric): Number of the chapter within the file&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;section_start&lt;/code&gt; (numeric): Start time of the chapter in seconds&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;section_end&lt;/code&gt; (numeric): End time of the chapter in seconds&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Available only when used in &lt;code&gt;--print&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;urls&lt;/code&gt; (string): The URLs of all requested formats, one in each line&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;filename&lt;/code&gt; (string): Name of the video file. Note that the actual filename may be different due to post-processing. Use &lt;code&gt;--exec echo&lt;/code&gt; to get the name after all postprocessing is complete&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;formats_table&lt;/code&gt; (table): The video format table as printed by &lt;code&gt;--list-formats&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;thumbnails_table&lt;/code&gt; (table): The thumbnail format table as printed by &lt;code&gt;--list-thumbnails&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;subtitles_table&lt;/code&gt; (table): The subtitle format table as printed by &lt;code&gt;--list-subs&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;automatic_captions_table&lt;/code&gt; (table): The automatic subtitle format table as printed by &lt;code&gt;--list-subs&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Available only in &lt;code&gt;--sponsorblock-chapter-title&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;start_time&lt;/code&gt; (numeric): Start time of the chapter in seconds&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;end_time&lt;/code&gt; (numeric): End time of the chapter in seconds&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;categories&lt;/code&gt; (list): The SponsorBlock categories the chapter belongs to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;category&lt;/code&gt; (string): The smallest SponsorBlock category the chapter belongs to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;category_names&lt;/code&gt; (list): Friendly names of the categories&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;name&lt;/code&gt; (string): Friendly name of the smallest category&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Each aforementioned sequence when referenced in an output template will be replaced by the actual value corresponding to the sequence name. For example for &lt;code&gt;-o %(title)s-%(id)s.%(ext)s&lt;/code&gt; and an mp4 video with title &lt;code&gt;yt-dlp test video&lt;/code&gt; and id &lt;code&gt;BaW_jenozKc&lt;/code&gt;, this will result in a &lt;code&gt;yt-dlp test video-BaW_jenozKc.mp4&lt;/code&gt; file created in the current directory.&lt;/p&gt; &#xA;&lt;p&gt;Note that some of the sequences are not guaranteed to be present since they depend on the metadata obtained by a particular extractor. Such sequences will be replaced with placeholder value provided with &lt;code&gt;--output-na-placeholder&lt;/code&gt; (&lt;code&gt;NA&lt;/code&gt; by default).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: Look at the &lt;code&gt;-j&lt;/code&gt; output to identify which fields are available for the particular URL&lt;/p&gt; &#xA;&lt;p&gt;For numeric sequences you can use &lt;a href=&#34;https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting&#34;&gt;numeric related formatting&lt;/a&gt;, for example, &lt;code&gt;%(view_count)05d&lt;/code&gt; will result in a string with view count padded with zeros up to 5 characters, like in &lt;code&gt;00042&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Output templates can also contain arbitrary hierarchical path, e.g. &lt;code&gt;-o &#34;%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s&#34;&lt;/code&gt; which will result in downloading each video in a directory corresponding to this path template. Any missing directory will be automatically created for you.&lt;/p&gt; &#xA;&lt;p&gt;To use percent literals in an output template use &lt;code&gt;%%&lt;/code&gt;. To output to stdout use &lt;code&gt;-o -&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The current default template is &lt;code&gt;%(title)s [%(id)s].%(ext)s&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In some cases, you don&#39;t want special characters such as 中, spaces, or &amp;amp;, such as when transferring the downloaded filename to a Windows system or the filename through an 8bit-unsafe channel. In these cases, add the &lt;code&gt;--restrict-filenames&lt;/code&gt; flag to get a shorter title.&lt;/p&gt; &#xA;&lt;!-- MANPAGE: BEGIN EXCLUDED SECTION --&gt; &#xA;&lt;h4&gt;Output template and Windows batch files&lt;/h4&gt; &#xA;&lt;p&gt;If you are using an output template inside a Windows batch file then you must escape plain percent characters (&lt;code&gt;%&lt;/code&gt;) by doubling, so that &lt;code&gt;-o &#34;%(title)s-%(id)s.%(ext)s&#34;&lt;/code&gt; should become &lt;code&gt;-o &#34;%%(title)s-%%(id)s.%%(ext)s&#34;&lt;/code&gt;. However you should not touch &lt;code&gt;%&lt;/code&gt;&#39;s that are not plain characters, e.g. environment variables for expansion should stay intact: &lt;code&gt;-o &#34;C:\%HOMEPATH%\Desktop\%%(title)s.%%(ext)s&#34;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;!-- MANPAGE: END EXCLUDED SECTION --&gt; &#xA;&lt;h4&gt;Output template examples&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ yt-dlp --get-filename -o &#34;test video.%(ext)s&#34; BaW_jenozKc&#xA;test video.webm    # Literal name with correct extension&#xA;&#xA;$ yt-dlp --get-filename -o &#34;%(title)s.%(ext)s&#34; BaW_jenozKc&#xA;youtube-dl test video &#39;&#39;_ä↭𝕐.webm    # All kinds of weird characters&#xA;&#xA;$ yt-dlp --get-filename -o &#34;%(title)s.%(ext)s&#34; BaW_jenozKc --restrict-filenames&#xA;youtube-dl_test_video_.webm    # Restricted file name&#xA;&#xA;# Download YouTube playlist videos in separate directory indexed by video order in a playlist&#xA;$ yt-dlp -o &#34;%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s&#34; &#34;https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re&#34;&#xA;&#xA;# Download YouTube playlist videos in separate directories according to their uploaded year&#xA;$ yt-dlp -o &#34;%(upload_date&amp;gt;%Y)s/%(title)s.%(ext)s&#34; &#34;https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re&#34;&#xA;&#xA;# Prefix playlist index with &#34; - &#34; separator, but only if it is available&#xA;$ yt-dlp -o &#39;%(playlist_index|)s%(playlist_index&amp;amp; - |)s%(title)s.%(ext)s&#39; BaW_jenozKc &#34;https://www.youtube.com/user/TheLinuxFoundation/playlists&#34;&#xA;&#xA;# Download all playlists of YouTube channel/user keeping each playlist in separate directory:&#xA;$ yt-dlp -o &#34;%(uploader)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s&#34; &#34;https://www.youtube.com/user/TheLinuxFoundation/playlists&#34;&#xA;&#xA;# Download Udemy course keeping each chapter in separate directory under MyVideos directory in your home&#xA;$ yt-dlp -u user -p password -P &#34;~/MyVideos&#34; -o &#34;%(playlist)s/%(chapter_number)s - %(chapter)s/%(title)s.%(ext)s&#34; &#34;https://www.udemy.com/java-tutorial&#34;&#xA;&#xA;# Download entire series season keeping each series and each season in separate directory under C:/MyVideos&#xA;$ yt-dlp -P &#34;C:/MyVideos&#34; -o &#34;%(series)s/%(season_number)s - %(season)s/%(episode_number)s - %(episode)s.%(ext)s&#34; &#34;https://videomore.ru/kino_v_detalayah/5_sezon/367617&#34;&#xA;&#xA;# Download video as &#34;C:\MyVideos\uploader\title.ext&#34;, subtitles as &#34;C:\MyVideos\subs\uploader\title.ext&#34;&#xA;# and put all temporary files in &#34;C:\MyVideos\tmp&#34;&#xA;$ yt-dlp -P &#34;C:/MyVideos&#34; -P &#34;temp:tmp&#34; -P &#34;subtitle:subs&#34; -o &#34;%(uploader)s/%(title)s.%(ext)s&#34; BaW_jenoz --write-subs&#xA;&#xA;# Download video as &#34;C:\MyVideos\uploader\title.ext&#34; and subtitles as &#34;C:\MyVideos\uploader\subs\title.ext&#34;&#xA;$ yt-dlp -P &#34;C:/MyVideos&#34; -o &#34;%(uploader)s/%(title)s.%(ext)s&#34; -o &#34;subtitle:%(uploader)s/subs/%(title)s.%(ext)s&#34; BaW_jenozKc --write-subs&#xA;&#xA;# Stream the video being downloaded to stdout&#xA;$ yt-dlp -o - BaW_jenozKc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;FORMAT SELECTION&lt;/h1&gt; &#xA;&lt;p&gt;By default, yt-dlp tries to download the best available quality if you &lt;strong&gt;don&#39;t&lt;/strong&gt; pass any options. This is generally equivalent to using &lt;code&gt;-f bestvideo*+bestaudio/best&lt;/code&gt;. However, if multiple audiostreams is enabled (&lt;code&gt;--audio-multistreams&lt;/code&gt;), the default format changes to &lt;code&gt;-f bestvideo+bestaudio/best&lt;/code&gt;. Similarly, if ffmpeg is unavailable, or if you use yt-dlp to stream to &lt;code&gt;stdout&lt;/code&gt; (&lt;code&gt;-o -&lt;/code&gt;), the default becomes &lt;code&gt;-f best/bestvideo+bestaudio&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Deprecation warning&lt;/strong&gt;: Latest versions of yt-dlp can stream multiple formats to the stdout simultaneously using ffmpeg. So, in future versions, the default for this will be set to &lt;code&gt;-f bv*+ba/b&lt;/code&gt; similar to normal downloads. If you want to preserve the &lt;code&gt;-f b/bv+ba&lt;/code&gt; setting, it is recommended to explicitly specify it in the configuration options.&lt;/p&gt; &#xA;&lt;p&gt;The general syntax for format selection is &lt;code&gt;-f FORMAT&lt;/code&gt; (or &lt;code&gt;--format FORMAT&lt;/code&gt;) where &lt;code&gt;FORMAT&lt;/code&gt; is a &lt;em&gt;selector expression&lt;/em&gt;, i.e. an expression that describes format or formats you would like to download.&lt;/p&gt; &#xA;&lt;!-- MANPAGE: BEGIN EXCLUDED SECTION --&gt; &#xA;&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#format-selection-examples&#34;&gt;navigate me to examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- MANPAGE: END EXCLUDED SECTION --&gt; &#xA;&lt;p&gt;The simplest case is requesting a specific format, for example with &lt;code&gt;-f 22&lt;/code&gt; you can download the format with format code equal to 22. You can get the list of available format codes for particular video using &lt;code&gt;--list-formats&lt;/code&gt; or &lt;code&gt;-F&lt;/code&gt;. Note that these format codes are extractor specific.&lt;/p&gt; &#xA;&lt;p&gt;You can also use a file extension (currently &lt;code&gt;3gp&lt;/code&gt;, &lt;code&gt;aac&lt;/code&gt;, &lt;code&gt;flv&lt;/code&gt;, &lt;code&gt;m4a&lt;/code&gt;, &lt;code&gt;mp3&lt;/code&gt;, &lt;code&gt;mp4&lt;/code&gt;, &lt;code&gt;ogg&lt;/code&gt;, &lt;code&gt;wav&lt;/code&gt;, &lt;code&gt;webm&lt;/code&gt; are supported) to download the best quality format of a particular file extension served as a single file, e.g. &lt;code&gt;-f webm&lt;/code&gt; will download the best quality format with the &lt;code&gt;webm&lt;/code&gt; extension served as a single file.&lt;/p&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;-f -&lt;/code&gt; to interactively provide the format selector &lt;em&gt;for each video&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also use special names to select particular edge case formats:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;all&lt;/code&gt;: Select &lt;strong&gt;all formats&lt;/strong&gt; separately&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mergeall&lt;/code&gt;: Select and &lt;strong&gt;merge all formats&lt;/strong&gt; (Must be used with &lt;code&gt;--audio-multistreams&lt;/code&gt;, &lt;code&gt;--video-multistreams&lt;/code&gt; or both)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;b*&lt;/code&gt;, &lt;code&gt;best*&lt;/code&gt;: Select the best quality format that &lt;strong&gt;contains either&lt;/strong&gt; a video or an audio&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;b&lt;/code&gt;, &lt;code&gt;best&lt;/code&gt;: Select the best quality format that &lt;strong&gt;contains both&lt;/strong&gt; video and audio. Equivalent to &lt;code&gt;best*[vcodec!=none][acodec!=none]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bv&lt;/code&gt;, &lt;code&gt;bestvideo&lt;/code&gt;: Select the best quality &lt;strong&gt;video-only&lt;/strong&gt; format. Equivalent to &lt;code&gt;best*[acodec=none]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bv*&lt;/code&gt;, &lt;code&gt;bestvideo*&lt;/code&gt;: Select the best quality format that &lt;strong&gt;contains video&lt;/strong&gt;. It may also contain audio. Equivalent to &lt;code&gt;best*[vcodec!=none]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ba&lt;/code&gt;, &lt;code&gt;bestaudio&lt;/code&gt;: Select the best quality &lt;strong&gt;audio-only&lt;/strong&gt; format. Equivalent to &lt;code&gt;best*[vcodec=none]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ba*&lt;/code&gt;, &lt;code&gt;bestaudio*&lt;/code&gt;: Select the best quality format that &lt;strong&gt;contains audio&lt;/strong&gt;. It may also contain video. Equivalent to &lt;code&gt;best*[acodec!=none]&lt;/code&gt; (&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/issues/979#issuecomment-919629354&#34;&gt;Do not use!&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;w*&lt;/code&gt;, &lt;code&gt;worst*&lt;/code&gt;: Select the worst quality format that contains either a video or an audio&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;w&lt;/code&gt;, &lt;code&gt;worst&lt;/code&gt;: Select the worst quality format that contains both video and audio. Equivalent to &lt;code&gt;worst*[vcodec!=none][acodec!=none]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;wv&lt;/code&gt;, &lt;code&gt;worstvideo&lt;/code&gt;: Select the worst quality video-only format. Equivalent to &lt;code&gt;worst*[acodec=none]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;wv*&lt;/code&gt;, &lt;code&gt;worstvideo*&lt;/code&gt;: Select the worst quality format that contains video. It may also contain audio. Equivalent to &lt;code&gt;worst*[vcodec!=none]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;wa&lt;/code&gt;, &lt;code&gt;worstaudio&lt;/code&gt;: Select the worst quality audio-only format. Equivalent to &lt;code&gt;worst*[vcodec=none]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;wa*&lt;/code&gt;, &lt;code&gt;worstaudio*&lt;/code&gt;: Select the worst quality format that contains audio. It may also contain video. Equivalent to &lt;code&gt;worst*[acodec!=none]&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, to download the worst quality video-only format you can use &lt;code&gt;-f worstvideo&lt;/code&gt;. It is however recommended not to use &lt;code&gt;worst&lt;/code&gt; and related options. When your format selector is &lt;code&gt;worst&lt;/code&gt;, the format which is worst in all respects is selected. Most of the time, what you actually want is the video with the smallest filesize instead. So it is generally better to use &lt;code&gt;-S +size&lt;/code&gt; or more rigorously, &lt;code&gt;-S +size,+br,+res,+fps&lt;/code&gt; instead of &lt;code&gt;-f worst&lt;/code&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#sorting-formats&#34;&gt;sorting formats&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;You can select the n&#39;th best format of a type by using &lt;code&gt;best&amp;lt;type&amp;gt;.&amp;lt;n&amp;gt;&lt;/code&gt;. For example, &lt;code&gt;best.2&lt;/code&gt; will select the 2nd best combined format. Similarly, &lt;code&gt;bv*.3&lt;/code&gt; will select the 3rd best format that contains a video stream.&lt;/p&gt; &#xA;&lt;p&gt;If you want to download multiple videos and they don&#39;t have the same formats available, you can specify the order of preference using slashes. Note that formats on the left hand side are preferred, for example &lt;code&gt;-f 22/17/18&lt;/code&gt; will download format 22 if it&#39;s available, otherwise it will download format 17 if it&#39;s available, otherwise it will download format 18 if it&#39;s available, otherwise it will complain that no suitable formats are available for download.&lt;/p&gt; &#xA;&lt;p&gt;If you want to download several formats of the same video use a comma as a separator, e.g. &lt;code&gt;-f 22,17,18&lt;/code&gt; will download all these three formats, of course if they are available. Or a more sophisticated example combined with the precedence feature: &lt;code&gt;-f 136/137/mp4/bestvideo,140/m4a/bestaudio&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can merge the video and audio of multiple formats into a single file using &lt;code&gt;-f &amp;lt;format1&amp;gt;+&amp;lt;format2&amp;gt;+...&lt;/code&gt; (requires ffmpeg installed), for example &lt;code&gt;-f bestvideo+bestaudio&lt;/code&gt; will download the best video-only format, the best audio-only format and mux them together with ffmpeg.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Deprecation warning&lt;/strong&gt;: Since the &lt;em&gt;below&lt;/em&gt; described behavior is complex and counter-intuitive, this will be removed and multistreams will be enabled by default in the future. A new operator will be instead added to limit formats to single audio/video&lt;/p&gt; &#xA;&lt;p&gt;Unless &lt;code&gt;--video-multistreams&lt;/code&gt; is used, all formats with a video stream except the first one are ignored. Similarly, unless &lt;code&gt;--audio-multistreams&lt;/code&gt; is used, all formats with an audio stream except the first one are ignored. For example, &lt;code&gt;-f bestvideo+best+bestaudio --video-multistreams --audio-multistreams&lt;/code&gt; will download and merge all 3 given formats. The resulting file will have 2 video streams and 2 audio streams. But &lt;code&gt;-f bestvideo+best+bestaudio --no-video-multistreams&lt;/code&gt; will download and merge only &lt;code&gt;bestvideo&lt;/code&gt; and &lt;code&gt;bestaudio&lt;/code&gt;. &lt;code&gt;best&lt;/code&gt; is ignored since another format containing a video stream (&lt;code&gt;bestvideo&lt;/code&gt;) has already been selected. The order of the formats is therefore important. &lt;code&gt;-f best+bestaudio --no-audio-multistreams&lt;/code&gt; will download and merge both formats while &lt;code&gt;-f bestaudio+best --no-audio-multistreams&lt;/code&gt; will ignore &lt;code&gt;best&lt;/code&gt; and download only &lt;code&gt;bestaudio&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Filtering Formats&lt;/h2&gt; &#xA;&lt;p&gt;You can also filter the video formats by putting a condition in brackets, as in &lt;code&gt;-f &#34;best[height=720]&#34;&lt;/code&gt; (or &lt;code&gt;-f &#34;[filesize&amp;gt;10M]&#34;&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;The following numeric meta fields can be used with comparisons &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt; (equals), &lt;code&gt;!=&lt;/code&gt; (not equals):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;filesize&lt;/code&gt;: The number of bytes, if known in advance&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: Width of the video, if known&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;height&lt;/code&gt;: Height of the video, if known&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tbr&lt;/code&gt;: Average bitrate of audio and video in KBit/s&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;abr&lt;/code&gt;: Average audio bitrate in KBit/s&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vbr&lt;/code&gt;: Average video bitrate in KBit/s&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;asr&lt;/code&gt;: Audio sampling rate in Hertz&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fps&lt;/code&gt;: Frame rate&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also filtering work for comparisons &lt;code&gt;=&lt;/code&gt; (equals), &lt;code&gt;^=&lt;/code&gt; (starts with), &lt;code&gt;$=&lt;/code&gt; (ends with), &lt;code&gt;*=&lt;/code&gt; (contains), &lt;code&gt;~=&lt;/code&gt; (matches regex) and following string meta fields:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ext&lt;/code&gt;: File extension&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;acodec&lt;/code&gt;: Name of the audio codec in use&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vcodec&lt;/code&gt;: Name of the video codec in use&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;container&lt;/code&gt;: Name of the container format&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;protocol&lt;/code&gt;: The protocol that will be used for the actual download, lower-case (&lt;code&gt;http&lt;/code&gt;, &lt;code&gt;https&lt;/code&gt;, &lt;code&gt;rtsp&lt;/code&gt;, &lt;code&gt;rtmp&lt;/code&gt;, &lt;code&gt;rtmpe&lt;/code&gt;, &lt;code&gt;mms&lt;/code&gt;, &lt;code&gt;f4m&lt;/code&gt;, &lt;code&gt;ism&lt;/code&gt;, &lt;code&gt;http_dash_segments&lt;/code&gt;, &lt;code&gt;m3u8&lt;/code&gt;, or &lt;code&gt;m3u8_native&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;format_id&lt;/code&gt;: A short description of the format&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;language&lt;/code&gt;: Language code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Any string comparison may be prefixed with negation &lt;code&gt;!&lt;/code&gt; in order to produce an opposite comparison, e.g. &lt;code&gt;!*=&lt;/code&gt; (does not contain). The comparand of a string comparison needs to be quoted with either double or single quotes if it contains spaces or special characters other than &lt;code&gt;._-&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that none of the aforementioned meta fields are guaranteed to be present since this solely depends on the metadata obtained by particular extractor, i.e. the metadata offered by the website. Any other field made available by the extractor can also be used for filtering.&lt;/p&gt; &#xA;&lt;p&gt;Formats for which the value is not known are excluded unless you put a question mark (&lt;code&gt;?&lt;/code&gt;) after the operator. You can combine format filters, so &lt;code&gt;-f &#34;[height&amp;lt;=?720][tbr&amp;gt;500]&#34;&lt;/code&gt; selects up to 720p videos (or videos where the height is not known) with a bitrate of at least 500 KBit/s. You can also use the filters with &lt;code&gt;all&lt;/code&gt; to download all formats that satisfy the filter. For example, &lt;code&gt;-f &#34;all[vcodec=none]&#34;&lt;/code&gt; selects all audio-only formats.&lt;/p&gt; &#xA;&lt;p&gt;Format selectors can also be grouped using parentheses, for example if you want to download the best pre-merged mp4 and webm formats with a height lower than 480 you can use &lt;code&gt;-f &#34;(mp4,webm)[height&amp;lt;480]&#34;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sorting Formats&lt;/h2&gt; &#xA;&lt;p&gt;You can change the criteria for being considered the &lt;code&gt;best&lt;/code&gt; by using &lt;code&gt;-S&lt;/code&gt; (&lt;code&gt;--format-sort&lt;/code&gt;). The general format for this is &lt;code&gt;--format-sort field1,field2...&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The available fields are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;hasvid&lt;/code&gt;: Gives priority to formats that has a video stream&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hasaud&lt;/code&gt;: Gives priority to formats that has a audio stream&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ie_pref&lt;/code&gt;: The format preference&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lang&lt;/code&gt;: The language preference&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;quality&lt;/code&gt;: The quality of the format&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;source&lt;/code&gt;: The preference of the source&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proto&lt;/code&gt;: Protocol used for download (&lt;code&gt;https&lt;/code&gt;/&lt;code&gt;ftps&lt;/code&gt; &amp;gt; &lt;code&gt;http&lt;/code&gt;/&lt;code&gt;ftp&lt;/code&gt; &amp;gt; &lt;code&gt;m3u8_native&lt;/code&gt;/&lt;code&gt;m3u8&lt;/code&gt; &amp;gt; &lt;code&gt;http_dash_segments&lt;/code&gt;&amp;gt; &lt;code&gt;websocket_frag&lt;/code&gt; &amp;gt; &lt;code&gt;mms&lt;/code&gt;/&lt;code&gt;rtsp&lt;/code&gt; &amp;gt; &lt;code&gt;f4f&lt;/code&gt;/&lt;code&gt;f4m&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vcodec&lt;/code&gt;: Video Codec (&lt;code&gt;av01&lt;/code&gt; &amp;gt; &lt;code&gt;vp9.2&lt;/code&gt; &amp;gt; &lt;code&gt;vp9&lt;/code&gt; &amp;gt; &lt;code&gt;h265&lt;/code&gt; &amp;gt; &lt;code&gt;h264&lt;/code&gt; &amp;gt; &lt;code&gt;vp8&lt;/code&gt; &amp;gt; &lt;code&gt;h263&lt;/code&gt; &amp;gt; &lt;code&gt;theora&lt;/code&gt; &amp;gt; other)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;acodec&lt;/code&gt;: Audio Codec (&lt;code&gt;flac&lt;/code&gt;/&lt;code&gt;alac&lt;/code&gt; &amp;gt; &lt;code&gt;wav&lt;/code&gt;/&lt;code&gt;aiff&lt;/code&gt; &amp;gt; &lt;code&gt;opus&lt;/code&gt; &amp;gt; &lt;code&gt;vorbis&lt;/code&gt; &amp;gt; &lt;code&gt;aac&lt;/code&gt; &amp;gt; &lt;code&gt;mp4a&lt;/code&gt; &amp;gt; &lt;code&gt;mp3&lt;/code&gt; &amp;gt; &lt;code&gt;eac3&lt;/code&gt; &amp;gt; &lt;code&gt;ac3&lt;/code&gt; &amp;gt; &lt;code&gt;dts&lt;/code&gt; &amp;gt; other)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;codec&lt;/code&gt;: Equivalent to &lt;code&gt;vcodec,acodec&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vext&lt;/code&gt;: Video Extension (&lt;code&gt;mp4&lt;/code&gt; &amp;gt; &lt;code&gt;webm&lt;/code&gt; &amp;gt; &lt;code&gt;flv&lt;/code&gt; &amp;gt; other). If &lt;code&gt;--prefer-free-formats&lt;/code&gt; is used, &lt;code&gt;webm&lt;/code&gt; is preferred.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;aext&lt;/code&gt;: Audio Extension (&lt;code&gt;m4a&lt;/code&gt; &amp;gt; &lt;code&gt;aac&lt;/code&gt; &amp;gt; &lt;code&gt;mp3&lt;/code&gt; &amp;gt; &lt;code&gt;ogg&lt;/code&gt; &amp;gt; &lt;code&gt;opus&lt;/code&gt; &amp;gt; &lt;code&gt;webm&lt;/code&gt; &amp;gt; other). If &lt;code&gt;--prefer-free-formats&lt;/code&gt; is used, the order changes to &lt;code&gt;opus&lt;/code&gt; &amp;gt; &lt;code&gt;ogg&lt;/code&gt; &amp;gt; &lt;code&gt;webm&lt;/code&gt; &amp;gt; &lt;code&gt;m4a&lt;/code&gt; &amp;gt; &lt;code&gt;mp3&lt;/code&gt; &amp;gt; &lt;code&gt;aac&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ext&lt;/code&gt;: Equivalent to &lt;code&gt;vext,aext&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;filesize&lt;/code&gt;: Exact filesize, if known in advance&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fs_approx&lt;/code&gt;: Approximate filesize calculated from the manifests&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;size&lt;/code&gt;: Exact filesize if available, otherwise approximate filesize&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;height&lt;/code&gt;: Height of video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: Width of video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;res&lt;/code&gt;: Video resolution, calculated as the smallest dimension.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fps&lt;/code&gt;: Framerate of video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hdr&lt;/code&gt;: The dynamic range of the video (&lt;code&gt;DV&lt;/code&gt; &amp;gt; &lt;code&gt;HDR12&lt;/code&gt; &amp;gt; &lt;code&gt;HDR10+&lt;/code&gt; &amp;gt; &lt;code&gt;HDR10&lt;/code&gt; &amp;gt; &lt;code&gt;HLG&lt;/code&gt; &amp;gt; &lt;code&gt;SDR&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tbr&lt;/code&gt;: Total average bitrate in KBit/s&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vbr&lt;/code&gt;: Average video bitrate in KBit/s&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;abr&lt;/code&gt;: Average audio bitrate in KBit/s&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;br&lt;/code&gt;: Equivalent to using &lt;code&gt;tbr,vbr,abr&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;asr&lt;/code&gt;: Audio sample rate in Hz&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Deprecation warning&lt;/strong&gt;: Many of these fields have (currently undocumented) aliases, that may be removed in a future version. It is recommended to use only the documented field names.&lt;/p&gt; &#xA;&lt;p&gt;All fields, unless specified otherwise, are sorted in descending order. To reverse this, prefix the field with a &lt;code&gt;+&lt;/code&gt;. Eg: &lt;code&gt;+res&lt;/code&gt; prefers format with the smallest resolution. Additionally, you can suffix a preferred value for the fields, separated by a &lt;code&gt;:&lt;/code&gt;. Eg: &lt;code&gt;res:720&lt;/code&gt; prefers larger videos, but no larger than 720p and the smallest video if there are no videos less than 720p. For &lt;code&gt;codec&lt;/code&gt; and &lt;code&gt;ext&lt;/code&gt;, you can provide two preferred values, the first for video and the second for audio. Eg: &lt;code&gt;+codec:avc:m4a&lt;/code&gt; (equivalent to &lt;code&gt;+vcodec:avc,+acodec:m4a&lt;/code&gt;) sets the video codec preference to &lt;code&gt;h264&lt;/code&gt; &amp;gt; &lt;code&gt;h265&lt;/code&gt; &amp;gt; &lt;code&gt;vp9&lt;/code&gt; &amp;gt; &lt;code&gt;vp9.2&lt;/code&gt; &amp;gt; &lt;code&gt;av01&lt;/code&gt; &amp;gt; &lt;code&gt;vp8&lt;/code&gt; &amp;gt; &lt;code&gt;h263&lt;/code&gt; &amp;gt; &lt;code&gt;theora&lt;/code&gt; and audio codec preference to &lt;code&gt;mp4a&lt;/code&gt; &amp;gt; &lt;code&gt;aac&lt;/code&gt; &amp;gt; &lt;code&gt;vorbis&lt;/code&gt; &amp;gt; &lt;code&gt;opus&lt;/code&gt; &amp;gt; &lt;code&gt;mp3&lt;/code&gt; &amp;gt; &lt;code&gt;ac3&lt;/code&gt; &amp;gt; &lt;code&gt;dts&lt;/code&gt;. You can also make the sorting prefer the nearest values to the provided by using &lt;code&gt;~&lt;/code&gt; as the delimiter. Eg: &lt;code&gt;filesize~1G&lt;/code&gt; prefers the format with filesize closest to 1 GiB.&lt;/p&gt; &#xA;&lt;p&gt;The fields &lt;code&gt;hasvid&lt;/code&gt; and &lt;code&gt;ie_pref&lt;/code&gt; are always given highest priority in sorting, irrespective of the user-defined order. This behaviour can be changed by using &lt;code&gt;--format-sort-force&lt;/code&gt;. Apart from these, the default order used is: &lt;code&gt;lang,quality,res,fps,hdr:12,codec:vp9.2,size,br,asr,proto,ext,hasaud,source,id&lt;/code&gt;. The extractors may override this default order, but they cannot override the user-provided order.&lt;/p&gt; &#xA;&lt;p&gt;Note that the default has &lt;code&gt;codec:vp9.2&lt;/code&gt;; i.e. &lt;code&gt;av1&lt;/code&gt; is not preferred. Similarly, the default for hdr is &lt;code&gt;hdr:12&lt;/code&gt;; i.e. dolby vision is not preferred. These choices are made since DV and AV1 formats are not yet fully compatible with most devices. This may be changed in the future as more devices become capable of smoothly playing back these formats.&lt;/p&gt; &#xA;&lt;p&gt;If your format selector is &lt;code&gt;worst&lt;/code&gt;, the last item is selected after sorting. This means it will select the format that is worst in all respects. Most of the time, what you actually want is the video with the smallest filesize instead. So it is generally better to use &lt;code&gt;-f best -S +size,+br,+res,+fps&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: You can use the &lt;code&gt;-v -F&lt;/code&gt; to see how the formats have been sorted (worst to best).&lt;/p&gt; &#xA;&lt;h2&gt;Format Selection examples&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Download and merge the best video-only format and the best audio-only format,&#xA;# or download the best combined format if video-only format is not available&#xA;$ yt-dlp -f &#34;bv+ba/b&#34;&#xA;&#xA;# Download best format that contains video,&#xA;# and if it doesn&#39;t already have an audio stream, merge it with best audio-only format&#xA;$ yt-dlp -f &#34;bv*+ba/b&#34;&#xA;&#xA;# Same as above&#xA;$ yt-dlp&#xA;&#xA;# Download the best video-only format and the best audio-only format without merging them&#xA;# For this case, an output template should be used since&#xA;# by default, bestvideo and bestaudio will have the same file name.&#xA;$ yt-dlp -f &#34;bv,ba&#34; -o &#34;%(title)s.f%(format_id)s.%(ext)s&#34;&#xA;&#xA;# Download and merge the best format that has a video stream,&#xA;# and all audio-only formats into one file&#xA;$ yt-dlp -f &#34;bv*+mergeall[vcodec=none]&#34; --audio-multistreams&#xA;&#xA;# Download and merge the best format that has a video stream,&#xA;# and the best 2 audio-only formats into one file&#xA;$ yt-dlp -f &#34;bv*+ba+ba.2&#34; --audio-multistreams&#xA;&#xA;&#xA;# The following examples show the old method (without -S) of format selection&#xA;# and how to use -S to achieve a similar but (generally) better result&#xA;&#xA;# Download the worst video available (old method)&#xA;$ yt-dlp -f &#34;wv*+wa/w&#34;&#xA;&#xA;# Download the best video available but with the smallest resolution&#xA;$ yt-dlp -S &#34;+res&#34;&#xA;&#xA;# Download the smallest video available&#xA;$ yt-dlp -S &#34;+size,+br&#34;&#xA;&#xA;&#xA;&#xA;# Download the best mp4 video available, or the best video if no mp4 available&#xA;$ yt-dlp -f &#34;bv*[ext=mp4]+ba[ext=m4a]/b[ext=mp4] / bv*+ba/b&#34;&#xA;&#xA;# Download the best video with the best extension&#xA;# (For video, mp4 &amp;gt; webm &amp;gt; flv. For audio, m4a &amp;gt; aac &amp;gt; mp3 ...)&#xA;$ yt-dlp -S &#34;ext&#34;&#xA;&#xA;&#xA;&#xA;# Download the best video available but no better than 480p,&#xA;# or the worst video if there is no video under 480p&#xA;$ yt-dlp -f &#34;bv*[height&amp;lt;=480]+ba/b[height&amp;lt;=480] / wv*+ba/w&#34;&#xA;&#xA;# Download the best video available with the largest height but no better than 480p,&#xA;# or the best video with the smallest resolution if there is no video under 480p&#xA;$ yt-dlp -S &#34;height:480&#34;&#xA;&#xA;# Download the best video available with the largest resolution but no better than 480p,&#xA;# or the best video with the smallest resolution if there is no video under 480p&#xA;# Resolution is determined by using the smallest dimension.&#xA;# So this works correctly for vertical videos as well&#xA;$ yt-dlp -S &#34;res:480&#34;&#xA;&#xA;&#xA;&#xA;# Download the best video (that also has audio) but no bigger than 50 MB,&#xA;# or the worst video (that also has audio) if there is no video under 50 MB&#xA;$ yt-dlp -f &#34;b[filesize&amp;lt;50M] / w&#34;&#xA;&#xA;# Download largest video (that also has audio) but no bigger than 50 MB,&#xA;# or the smallest video (that also has audio) if there is no video under 50 MB&#xA;$ yt-dlp -f &#34;b&#34; -S &#34;filesize:50M&#34;&#xA;&#xA;# Download best video (that also has audio) that is closest in size to 50 MB&#xA;$ yt-dlp -f &#34;b&#34; -S &#34;filesize~50M&#34;&#xA;&#xA;&#xA;&#xA;# Download best video available via direct link over HTTP/HTTPS protocol,&#xA;# or the best video available via any protocol if there is no such video&#xA;$ yt-dlp -f &#34;(bv*+ba/b)[protocol^=http][protocol!*=dash] / (bv*+ba/b)&#34;&#xA;&#xA;# Download best video available via the best protocol&#xA;# (https/ftps &amp;gt; http/ftp &amp;gt; m3u8_native &amp;gt; m3u8 &amp;gt; http_dash_segments ...)&#xA;$ yt-dlp -S &#34;proto&#34;&#xA;&#xA;&#xA;&#xA;# Download the best video with either h264 or h265 codec,&#xA;# or the best video if there is no such video&#xA;$ yt-dlp -f &#34;(bv*[vcodec~=&#39;^((he|a)vc|h26[45])&#39;]+ba) / (bv*+ba/b)&#34;&#xA;&#xA;# Download the best video with best codec no better than h264,&#xA;# or the best video with worst codec if there is no such video&#xA;$ yt-dlp -S &#34;codec:h264&#34;&#xA;&#xA;# Download the best video with worst codec no worse than h264,&#xA;# or the best video with best codec if there is no such video&#xA;$ yt-dlp -S &#34;+codec:h264&#34;&#xA;&#xA;&#xA;&#xA;# More complex examples&#xA;&#xA;# Download the best video no better than 720p preferring framerate greater than 30,&#xA;# or the worst video (still preferring framerate greater than 30) if there is no such video&#xA;$ yt-dlp -f &#34;((bv*[fps&amp;gt;30]/bv*)[height&amp;lt;=720]/(wv*[fps&amp;gt;30]/wv*)) + ba / (b[fps&amp;gt;30]/b)[height&amp;lt;=720]/(w[fps&amp;gt;30]/w)&#34;&#xA;&#xA;# Download the video with the largest resolution no better than 720p,&#xA;# or the video with the smallest resolution available if there is no such video,&#xA;# preferring larger framerate for formats with the same resolution&#xA;$ yt-dlp -S &#34;res:720,fps&#34;&#xA;&#xA;&#xA;&#xA;# Download the video with smallest resolution no worse than 480p,&#xA;# or the video with the largest resolution available if there is no such video,&#xA;# preferring better codec and then larger total bitrate for the same resolution&#xA;$ yt-dlp -S &#34;+res:480,codec,br&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;MODIFYING METADATA&lt;/h1&gt; &#xA;&lt;p&gt;The metadata obtained by the extractors can be modified by using &lt;code&gt;--parse-metadata&lt;/code&gt; and &lt;code&gt;--replace-in-metadata&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;--replace-in-metadata FIELDS REGEX REPLACE&lt;/code&gt; is used to replace text in any metadata field using &lt;a href=&#34;https://docs.python.org/3/library/re.html#regular-expression-syntax&#34;&gt;python regular expression&lt;/a&gt;. &lt;a href=&#34;https://docs.python.org/3/library/re.html?highlight=backreferences#re.sub&#34;&gt;Backreferences&lt;/a&gt; can be used in the replace string for advanced use.&lt;/p&gt; &#xA;&lt;p&gt;The general syntax of &lt;code&gt;--parse-metadata FROM:TO&lt;/code&gt; is to give the name of a field or an &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template&#34;&gt;output template&lt;/a&gt; to extract data from, and the format to interpret it as, separated by a colon &lt;code&gt;:&lt;/code&gt;. Either a &lt;a href=&#34;https://docs.python.org/3/library/re.html#regular-expression-syntax&#34;&gt;python regular expression&lt;/a&gt; with named capture groups or a similar syntax to the &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template&#34;&gt;output template&lt;/a&gt; (only &lt;code&gt;%(field)s&lt;/code&gt; formatting is supported) can be used for &lt;code&gt;TO&lt;/code&gt;. The option can be used multiple times to parse and modify various fields.&lt;/p&gt; &#xA;&lt;p&gt;Note that any field created by this can be used in the &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template&#34;&gt;output template&lt;/a&gt; and will also affect the media file&#39;s metadata added when using &lt;code&gt;--add-metadata&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This option also has a few special uses:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;You can download an additional URL based on the metadata of the currently downloaded video. To do this, set the field &lt;code&gt;additional_urls&lt;/code&gt; to the URL that you want to download. Eg: &lt;code&gt;--parse-metadata &#34;description:(?P&amp;lt;additional_urls&amp;gt;https?://www\.vimeo\.com/\d+)&lt;/code&gt; will download the first vimeo video found in the description&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can use this to change the metadata that is embedded in the media file. To do this, set the value of the corresponding field with a &lt;code&gt;meta_&lt;/code&gt; prefix. For example, any value you set to &lt;code&gt;meta_description&lt;/code&gt; field will be added to the &lt;code&gt;description&lt;/code&gt; field in the file. For example, you can use this to set a different &#34;description&#34; and &#34;synopsis&#34;. To modify the metadata of individual streams, use the &lt;code&gt;meta&amp;lt;n&amp;gt;_&lt;/code&gt; prefix (Eg: &lt;code&gt;meta1_language&lt;/code&gt;). Any value set to the &lt;code&gt;meta_&lt;/code&gt; field will overwrite all default values.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Metadata modification happens before format selection, post-extraction and other post-processing operations. Some fields may be added or changed during these steps, overriding your changes.&lt;/p&gt; &#xA;&lt;p&gt;For reference, these are the fields yt-dlp adds by default to the file metadata:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Metadata fields&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;From&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;title&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;track&lt;/code&gt; or &lt;code&gt;title&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;upload_date&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;description&lt;/code&gt;, &lt;code&gt;synopsis&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;description&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;purl&lt;/code&gt;, &lt;code&gt;comment&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;webpage_url&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;track_number&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;artist&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;artist&lt;/code&gt;, &lt;code&gt;creator&lt;/code&gt;, &lt;code&gt;uploader&lt;/code&gt; or &lt;code&gt;uploader_id&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;genre&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;genre&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;album&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;album&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;album_artist&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;album_artist&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;disc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;disc_number&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;show&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;series&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;season_number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;season_number&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;episode_id&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;episode&lt;/code&gt; or &lt;code&gt;episode_id&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;episode_sort&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;episode_number&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;language&lt;/code&gt; of each stream&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;the format&#39;s &lt;code&gt;language&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The file format may not support some of these fields&lt;/p&gt; &#xA;&lt;h2&gt;Modifying metadata examples&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Interpret the title as &#34;Artist - Title&#34;&#xA;$ yt-dlp --parse-metadata &#34;title:%(artist)s - %(title)s&#34;&#xA;&#xA;# Regex example&#xA;$ yt-dlp --parse-metadata &#34;description:Artist - (?P&amp;lt;artist&amp;gt;.+)&#34;&#xA;&#xA;# Set title as &#34;Series name S01E05&#34;&#xA;$ yt-dlp --parse-metadata &#34;%(series)s S%(season_number)02dE%(episode_number)02d:%(title)s&#34;&#xA;&#xA;# Prioritize uploader as the &#34;artist&#34; field in video metadata&#xA;$ yt-dlp --parse-metadata &#34;%(uploader|)s:%(meta_artist)s&#34; --add-metadata&#xA;&#xA;# Set &#34;comment&#34; field in video metadata using description instead of webpage_url,&#xA;# handling multiple lines correctly&#xA;$ yt-dlp --parse-metadata &#34;description:(?s)(?P&amp;lt;meta_comment&amp;gt;.+)&#34; --add-metadata&#xA;&#xA;# Remove &#34;formats&#34; field from the infojson by setting it to an empty string&#xA;$ yt-dlp --parse-metadata &#34;:(?P&amp;lt;formats&amp;gt;)&#34; -j&#xA;&#xA;# Replace all spaces and &#34;_&#34; in title and uploader with a `-`&#xA;$ yt-dlp --replace-in-metadata &#34;title,uploader&#34; &#34;[ _]&#34; &#34;-&#34;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;EXTRACTOR ARGUMENTS&lt;/h1&gt; &#xA;&lt;p&gt;Some extractors accept additional arguments which can be passed using &lt;code&gt;--extractor-args KEY:ARGS&lt;/code&gt;. &lt;code&gt;ARGS&lt;/code&gt; is a &lt;code&gt;;&lt;/code&gt; (semicolon) separated string of &lt;code&gt;ARG=VAL1,VAL2&lt;/code&gt;. Eg: &lt;code&gt;--extractor-args &#34;youtube:player-client=android_embedded,web;include_live_dash&#34; --extractor-args &#34;funimation:version=uncut&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The following extractors use this feature:&lt;/p&gt; &#xA;&lt;h4&gt;youtube&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;skip&lt;/code&gt;: One or more of &lt;code&gt;hls&lt;/code&gt;, &lt;code&gt;dash&lt;/code&gt; or &lt;code&gt;translated_subs&lt;/code&gt; to skip extraction of the m3u8 manifests, dash manifests and auto-translated subtitles respectively&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;player_client&lt;/code&gt;: Clients to extract video data from. The main clients are &lt;code&gt;web&lt;/code&gt;, &lt;code&gt;android&lt;/code&gt; and &lt;code&gt;ios&lt;/code&gt; with variants &lt;code&gt;_music&lt;/code&gt;, &lt;code&gt;_embedded&lt;/code&gt;, &lt;code&gt;_embedscreen&lt;/code&gt;, &lt;code&gt;_creator&lt;/code&gt; (Eg: &lt;code&gt;web_embedded&lt;/code&gt;); and &lt;code&gt;mweb&lt;/code&gt; and &lt;code&gt;tv_embedded&lt;/code&gt; (agegate bypass) with no variants. By default, &lt;code&gt;android,web&lt;/code&gt; is used, but tv_embedded and creator variants are added as required for age-gated videos. Similarly the music variants are added for &lt;code&gt;music.youtube.com&lt;/code&gt; urls. You can use &lt;code&gt;all&lt;/code&gt; to use all the clients, and &lt;code&gt;default&lt;/code&gt; for the default clients.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;player_skip&lt;/code&gt;: Skip some network requests that are generally needed for robust extraction. One or more of &lt;code&gt;configs&lt;/code&gt; (skip client configs), &lt;code&gt;webpage&lt;/code&gt; (skip initial webpage), &lt;code&gt;js&lt;/code&gt; (skip js player). While these options can help reduce the number of requests needed or avoid some rate-limiting, they could cause some issues. See &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/pull/860&#34;&gt;#860&lt;/a&gt; for more details&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;include_live_dash&lt;/code&gt;: Include live dash formats even without &lt;code&gt;--live-from-start&lt;/code&gt; (These formats don&#39;t download properly)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;comment_sort&lt;/code&gt;: &lt;code&gt;top&lt;/code&gt; or &lt;code&gt;new&lt;/code&gt; (default) - choose comment sorting mode (on YouTube&#39;s side)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;max_comments&lt;/code&gt;: Limit the amount of comments to gather. Comma-separated list of integers representing &lt;code&gt;max-comments,max-parents,max-replies,max-replies-per-thread&lt;/code&gt;. Default is &lt;code&gt;all,all,all,all&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;E.g. &lt;code&gt;all,all,1000,10&lt;/code&gt; will get a maximum of 1000 replies total, with up to 10 replies per thread. &lt;code&gt;1000,all,100&lt;/code&gt; will get a maximum of 1000 comments, with a maximum of 100 replies total&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;youtubetab (YouTube playlists, channels, feeds, etc.)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;skip&lt;/code&gt;: One or more of &lt;code&gt;webpage&lt;/code&gt; (skip initial webpage download), &lt;code&gt;authcheck&lt;/code&gt; (allow the download of playlists requiring authentication when no initial webpage is downloaded. This may cause unwanted behavior, see &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/pull/1122&#34;&gt;#1122&lt;/a&gt; for more details)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;approximate_date&lt;/code&gt;: Extract approximate &lt;code&gt;upload_date&lt;/code&gt; in flat-playlist. This may cause date-based filters to be slightly off&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;funimation&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;language&lt;/code&gt;: Languages to extract. Eg: &lt;code&gt;funimation:language=english,japanese&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;version&lt;/code&gt;: The video version to extract - &lt;code&gt;uncut&lt;/code&gt; or &lt;code&gt;simulcast&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;crunchyroll&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;language&lt;/code&gt;: Languages to extract. Eg: &lt;code&gt;crunchyroll:language=jaJp&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hardsub&lt;/code&gt;: Which hard-sub versions to extract. Eg: &lt;code&gt;crunchyroll:hardsub=None,enUS&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;crunchyrollbeta&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;format&lt;/code&gt;: Which stream type(s) to extract. Default is &lt;code&gt;adaptive_hls&lt;/code&gt; Eg: &lt;code&gt;crunchyrollbeta:format=vo_adaptive_hls&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Potentially useful values include &lt;code&gt;adaptive_hls&lt;/code&gt;, &lt;code&gt;adaptive_dash&lt;/code&gt;, &lt;code&gt;vo_adaptive_hls&lt;/code&gt;, &lt;code&gt;vo_adaptive_dash&lt;/code&gt;, &lt;code&gt;download_hls&lt;/code&gt;, &lt;code&gt;trailer_hls&lt;/code&gt;, &lt;code&gt;trailer_dash&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hardsub&lt;/code&gt;: Preference order for which hardsub versions to extract. Default is &lt;code&gt;None&lt;/code&gt; (no hardsubs). Eg: &lt;code&gt;crunchyrollbeta:hardsub=en-US,None&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;vikichannel&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;video_types&lt;/code&gt;: Types of videos to download - one or more of &lt;code&gt;episodes&lt;/code&gt;, &lt;code&gt;movies&lt;/code&gt;, &lt;code&gt;clips&lt;/code&gt;, &lt;code&gt;trailers&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;niconico&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;segment_duration&lt;/code&gt;: Segment duration in milliseconds for HLS-DMC formats. Use it at your own risk since this feature &lt;strong&gt;may result in your account termination.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;youtubewebarchive&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;check_all&lt;/code&gt;: Try to check more at the cost of more requests. One or more of &lt;code&gt;thumbnails&lt;/code&gt;, &lt;code&gt;captures&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;gamejolt&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;comment_sort&lt;/code&gt;: &lt;code&gt;hot&lt;/code&gt; (default), &lt;code&gt;you&lt;/code&gt; (cookies needed), &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;new&lt;/code&gt; - choose comment sorting mode (on GameJolt&#39;s side)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;hotstar&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;res&lt;/code&gt;: resolution to ignore - one or more of &lt;code&gt;sd&lt;/code&gt;, &lt;code&gt;hd&lt;/code&gt;, &lt;code&gt;fhd&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vcodec&lt;/code&gt;: vcodec to ignore - one or more of &lt;code&gt;h264&lt;/code&gt;, &lt;code&gt;h265&lt;/code&gt;, &lt;code&gt;dvh265&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dr&lt;/code&gt;: dynamic range to ignore - one or more of &lt;code&gt;sdr&lt;/code&gt;, &lt;code&gt;hdr10&lt;/code&gt;, &lt;code&gt;dv&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;tiktok&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;app_version&lt;/code&gt;: App version to call mobile APIs with - should be set along with &lt;code&gt;manifest_app_version&lt;/code&gt;. (e.g. &lt;code&gt;20.2.1&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;manifest_app_version&lt;/code&gt;: Numeric app version to call mobile APIs with. (e.g. &lt;code&gt;221&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;rokfinchannel&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;tab&lt;/code&gt;: Which tab to download. One of &lt;code&gt;new&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;videos&lt;/code&gt;, &lt;code&gt;podcasts&lt;/code&gt;, &lt;code&gt;streams&lt;/code&gt;, &lt;code&gt;stacks&lt;/code&gt;. (E.g. &lt;code&gt;rokfinchannel:tab=streams&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;NOTE: These options may be changed/removed in the future without concern for backward compatibility&lt;/p&gt; &#xA;&lt;!-- MANPAGE: MOVE &#34;INSTALLATION&#34; SECTION HERE --&gt; &#xA;&lt;h1&gt;PLUGINS&lt;/h1&gt; &#xA;&lt;p&gt;Plugins are loaded from &lt;code&gt;&amp;lt;root-dir&amp;gt;/ytdlp_plugins/&amp;lt;type&amp;gt;/__init__.py&lt;/code&gt;; where &lt;code&gt;&amp;lt;root-dir&amp;gt;&lt;/code&gt; is the directory of the binary (&lt;code&gt;&amp;lt;root-dir&amp;gt;/yt-dlp&lt;/code&gt;), or the root directory of the module if you are running directly from source-code (&lt;code&gt;&amp;lt;root dir&amp;gt;/yt_dlp/__main__.py&lt;/code&gt;). Plugins are currently not supported for the &lt;code&gt;pip&lt;/code&gt; version&lt;/p&gt; &#xA;&lt;p&gt;Plugins can be of &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt;s &lt;code&gt;extractor&lt;/code&gt; or &lt;code&gt;postprocessor&lt;/code&gt;. Extractor plugins do not need to be enabled from the CLI and are automatically invoked when the input URL is suitable for it. Postprocessor plugins can be invoked using &lt;code&gt;--use-postprocessor NAME&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/ytdlp_plugins&#34;&gt;ytdlp_plugins&lt;/a&gt; for example plugins.&lt;/p&gt; &#xA;&lt;p&gt;Note that &lt;strong&gt;all&lt;/strong&gt; plugins are imported even if not invoked, and that &lt;strong&gt;there are no checks&lt;/strong&gt; performed on plugin code. Use plugins at your own risk and only if you trust the code&lt;/p&gt; &#xA;&lt;p&gt;If you are a plugin author, add &lt;a href=&#34;https://github.com/topics/ytdlp-plugins&#34;&gt;ytdlp-plugins&lt;/a&gt; as a topic to your repository for discoverability&lt;/p&gt; &#xA;&lt;h1&gt;EMBEDDING YT-DLP&lt;/h1&gt; &#xA;&lt;p&gt;yt-dlp makes the best effort to be a good command-line program, and thus should be callable from any programming language.&lt;/p&gt; &#xA;&lt;p&gt;Your program should avoid parsing the normal stdout since they may change in future versions. Instead they should use options such as &lt;code&gt;-J&lt;/code&gt;, &lt;code&gt;--print&lt;/code&gt;, &lt;code&gt;--progress-template&lt;/code&gt;, &lt;code&gt;--exec&lt;/code&gt; etc to create console output that you can reliably reproduce and parse.&lt;/p&gt; &#xA;&lt;p&gt;From a Python program, you can embed yt-dlp in a more powerful fashion, like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from yt_dlp import YoutubeDL&#xA;&#xA;URLS = [&#39;https://www.youtube.com/watch?v=BaW_jenozKc&#39;]&#xA;with YoutubeDL() as ydl:&#xA;    ydl.download(URLS)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Most likely, you&#39;ll want to use various options. For a list of options available, have a look at &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/yt_dlp/YoutubeDL.py#L181&#34;&gt;&lt;code&gt;yt_dlp/YoutubeDL.py&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: If you are porting your code from youtube-dl to yt-dlp, one important point to look out for is that we do not guarantee the return value of &lt;code&gt;YoutubeDL.extract_info&lt;/code&gt; to be json serializable, or even be a dictionary. It will be dictionary-like, but if you want to ensure it is a serializable dictionary, pass it through &lt;code&gt;YoutubeDL.sanitize_info&lt;/code&gt; as shown in the &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#extracting-information&#34;&gt;example below&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Embedding examples&lt;/h2&gt; &#xA;&lt;h4&gt;Extracting information&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import json&#xA;import yt_dlp&#xA;&#xA;URL = &#39;https://www.youtube.com/watch?v=BaW_jenozKc&#39;&#xA;&#xA;# ℹ️ See help(yt_dlp.YoutubeDL) for a list of available options and public functions&#xA;ydl_opts = {}&#xA;with yt_dlp.YoutubeDL(ydl_opts) as ydl:&#xA;    info = ydl.extract_info(URL, download=False)&#xA;&#xA;    # ℹ️ ydl.sanitize_info makes the info json-serializable&#xA;    print(json.dumps(ydl.sanitize_info(info)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Download using an info-json&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import yt_dlp&#xA;&#xA;INFO_FILE = &#39;path/to/video.info.json&#39;&#xA;&#xA;with yt_dlp.YoutubeDL() as ydl:&#xA;    error_code = ydl.download_with_info_file(INFO_FILE)&#xA;&#xA;print(&#39;Some videos failed to download&#39; if error_code&#xA;      else &#39;All videos successfully downloaded&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Extract audio&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import yt_dlp&#xA;&#xA;URLS = [&#39;https://www.youtube.com/watch?v=BaW_jenozKc&#39;]&#xA;&#xA;ydl_opts = {&#xA;    &#39;format&#39;: &#39;m4a/bestaudio/best&#39;,&#xA;    # ℹ️ See help(yt_dlp.postprocessor) for a list of available Postprocessors and their arguments&#xA;    &#39;postprocessors&#39;: [{  # Extract audio using ffmpeg&#xA;        &#39;key&#39;: &#39;FFmpegExtractAudio&#39;,&#xA;        &#39;preferredcodec&#39;: &#39;m4a&#39;,&#xA;    }]&#xA;}&#xA;&#xA;with yt_dlp.YoutubeDL(ydl_opts) as ydl:&#xA;    error_code = ydl.download(URLS)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Filter videos&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import yt_dlp&#xA;&#xA;URLS = [&#39;https://www.youtube.com/watch?v=BaW_jenozKc&#39;]&#xA;&#xA;def longer_than_a_minute(info, *, incomplete):&#xA;    &#34;&#34;&#34;Download only videos longer than a minute (or with unknown duration)&#34;&#34;&#34;&#xA;    duration = info.get(&#39;duration&#39;)&#xA;    if duration and duration &amp;lt; 60:&#xA;        return &#39;The video is too short&#39;&#xA;&#xA;ydl_opts = {&#xA;    &#39;match_filter&#39;: longer_than_a_minute,&#xA;}&#xA;&#xA;with yt_dlp.YoutubeDL(ydl_opts) as ydl:&#xA;    error_code = ydl.download(URLS)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Adding logger and progress hook&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import yt_dlp&#xA;&#xA;URLS = [&#39;https://www.youtube.com/watch?v=BaW_jenozKc&#39;]&#xA;&#xA;class MyLogger:&#xA;    def debug(self, msg):&#xA;        # For compatibility with youtube-dl, both debug and info are passed into debug&#xA;        # You can distinguish them by the prefix &#39;[debug] &#39;&#xA;        if msg.startswith(&#39;[debug] &#39;):&#xA;            pass&#xA;        else:&#xA;            self.info(msg)&#xA;&#xA;    def info(self, msg):&#xA;        pass&#xA;&#xA;    def warning(self, msg):&#xA;        pass&#xA;&#xA;    def error(self, msg):&#xA;        print(msg)&#xA;&#xA;&#xA;# ℹ️ See &#34;progress_hooks&#34; in help(yt_dlp.YoutubeDL)&#xA;def my_hook(d):&#xA;    if d[&#39;status&#39;] == &#39;finished&#39;:&#xA;        print(&#39;Done downloading, now post-processing ...&#39;)&#xA;&#xA;&#xA;ydl_opts = {&#xA;    &#39;logger&#39;: MyLogger(),&#xA;    &#39;progress_hooks&#39;: [my_hook],&#xA;}&#xA;&#xA;with yt_dlp.YoutubeDL(ydl_opts) as ydl:&#xA;    ydl.download(URLS)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Add a custom PostProcessor&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import yt_dlp&#xA;&#xA;URLS = [&#39;https://www.youtube.com/watch?v=BaW_jenozKc&#39;]&#xA;&#xA;# ℹ️ See help(yt_dlp.postprocessor.PostProcessor)&#xA;class MyCustomPP(yt_dlp.postprocessor.PostProcessor):&#xA;    def run(self, info):&#xA;        self.to_screen(&#39;Doing stuff&#39;)&#xA;        return [], info&#xA;&#xA;&#xA;with yt_dlp.YoutubeDL() as ydl:&#xA;    ydl.add_post_processor(MyCustomPP())&#xA;    ydl.download(URLS)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Use a custom format selector&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import yt_dlp&#xA;&#xA;URL = [&#39;https://www.youtube.com/watch?v=BaW_jenozKc&#39;]&#xA;&#xA;def format_selector(ctx):&#xA;    &#34;&#34;&#34; Select the best video and the best audio that won&#39;t result in an mkv.&#xA;    NOTE: This is just an example and does not handle all cases &#34;&#34;&#34;&#xA;&#xA;    # formats are already sorted worst to best&#xA;    formats = ctx.get(&#39;formats&#39;)[::-1]&#xA;&#xA;    # acodec=&#39;none&#39; means there is no audio&#xA;    best_video = next(f for f in formats&#xA;                      if f[&#39;vcodec&#39;] != &#39;none&#39; and f[&#39;acodec&#39;] == &#39;none&#39;)&#xA;&#xA;    # find compatible audio extension&#xA;    audio_ext = {&#39;mp4&#39;: &#39;m4a&#39;, &#39;webm&#39;: &#39;webm&#39;}[best_video[&#39;ext&#39;]]&#xA;    # vcodec=&#39;none&#39; means there is no video&#xA;    best_audio = next(f for f in formats if (&#xA;        f[&#39;acodec&#39;] != &#39;none&#39; and f[&#39;vcodec&#39;] == &#39;none&#39; and f[&#39;ext&#39;] == audio_ext))&#xA;&#xA;    # These are the minimum required fields for a merged format&#xA;    yield {&#xA;        &#39;format_id&#39;: f&#39;{best_video[&#34;format_id&#34;]}+{best_audio[&#34;format_id&#34;]}&#39;,&#xA;        &#39;ext&#39;: best_video[&#39;ext&#39;],&#xA;        &#39;requested_formats&#39;: [best_video, best_audio],&#xA;        # Must be + separated list of protocols&#xA;        &#39;protocol&#39;: f&#39;{best_video[&#34;protocol&#34;]}+{best_audio[&#34;protocol&#34;]}&#39;&#xA;    }&#xA;&#xA;&#xA;ydl_opts = {&#xA;    &#39;format&#39;: format_selector,&#xA;}&#xA;&#xA;with yt_dlp.YoutubeDL(ydl_opts) as ydl:&#xA;    ydl.download(URLS)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- MANPAGE: MOVE &#34;NEW FEATURES&#34; SECTION HERE --&gt; &#xA;&lt;h1&gt;DEPRECATED OPTIONS&lt;/h1&gt; &#xA;&lt;p&gt;These are all the deprecated options and the current alternative to achieve the same effect&lt;/p&gt; &#xA;&lt;h4&gt;Almost redundant options&lt;/h4&gt; &#xA;&lt;p&gt;While these options are almost the same as their new counterparts, there are some differences that prevents them being redundant&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-j, --dump-json                  --print &#34;%()j&#34;&#xA;-F, --list-formats               --print formats_table&#xA;--list-thumbnails                --print thumbnails_table --print playlist:thumbnails_table&#xA;--list-subs                      --print automatic_captions_table --print subtitles_table&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Redundant options&lt;/h4&gt; &#xA;&lt;p&gt;While these options are redundant, they are still expected to be used due to their ease of use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--get-description                --print description&#xA;--get-duration                   --print duration_string&#xA;--get-filename                   --print filename&#xA;--get-format                     --print format&#xA;--get-id                         --print id&#xA;--get-thumbnail                  --print thumbnail&#xA;-e, --get-title                  --print title&#xA;-g, --get-url                    --print urls&#xA;--match-title REGEX              --match-filter &#34;title ~= (?i)REGEX&#34;&#xA;--reject-title REGEX             --match-filter &#34;title !~= (?i)REGEX&#34;&#xA;--min-views COUNT                --match-filter &#34;view_count &amp;gt;=? COUNT&#34;&#xA;--max-views COUNT                --match-filter &#34;view_count &amp;lt;=? COUNT&#34;&#xA;--user-agent UA                  --add-header &#34;User-Agent:UA&#34;&#xA;--referer URL                    --add-header &#34;Referer:URL&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Not recommended&lt;/h4&gt; &#xA;&lt;p&gt;While these options still work, their use is not recommended since there are other alternatives to achieve the same&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--exec-before-download CMD       --exec &#34;before_dl:CMD&#34;&#xA;--no-exec-before-download        --no-exec&#xA;--all-formats                    -f all&#xA;--all-subs                       --sub-langs all --write-subs&#xA;--print-json                     -j --no-simulate&#xA;--autonumber-size NUMBER         Use string formatting. Eg: %(autonumber)03d&#xA;--autonumber-start NUMBER        Use internal field formatting like %(autonumber+NUMBER)s&#xA;--id                             -o &#34;%(id)s.%(ext)s&#34;&#xA;--metadata-from-title FORMAT     --parse-metadata &#34;%(title)s:FORMAT&#34;&#xA;--hls-prefer-native              --downloader &#34;m3u8:native&#34;&#xA;--hls-prefer-ffmpeg              --downloader &#34;m3u8:ffmpeg&#34;&#xA;--list-formats-old               --compat-options list-formats (Alias: --no-list-formats-as-table)&#xA;--list-formats-as-table          --compat-options -list-formats [Default] (Alias: --no-list-formats-old)&#xA;--youtube-skip-dash-manifest     --extractor-args &#34;youtube:skip=dash&#34; (Alias: --no-youtube-include-dash-manifest)&#xA;--youtube-skip-hls-manifest      --extractor-args &#34;youtube:skip=hls&#34; (Alias: --no-youtube-include-hls-manifest)&#xA;--youtube-include-dash-manifest  Default (Alias: --no-youtube-skip-dash-manifest)&#xA;--youtube-include-hls-manifest   Default (Alias: --no-youtube-skip-hls-manifest)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Developer options&lt;/h4&gt; &#xA;&lt;p&gt;These options are not intended to be used by the end-user&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--test                           Download only part of video for testing extractors&#xA;--youtube-print-sig-code         For testing youtube signatures&#xA;--allow-unplayable-formats       List unplayable formats also&#xA;--no-allow-unplayable-formats    Default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Old aliases&lt;/h4&gt; &#xA;&lt;p&gt;These are aliases that are no longer documented for various reasons&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--avconv-location                --ffmpeg-location&#xA;--clean-infojson                 --clean-info-json&#xA;--cn-verification-proxy URL      --geo-verification-proxy URL&#xA;--dump-headers                   --print-traffic&#xA;--dump-intermediate-pages        --dump-pages&#xA;--force-write-download-archive   --force-write-archive&#xA;--load-info                      --load-info-json&#xA;--no-clean-infojson              --no-clean-info-json&#xA;--no-split-tracks                --no-split-chapters&#xA;--no-write-srt                   --no-write-subs&#xA;--prefer-unsecure                --prefer-insecure&#xA;--rate-limit RATE                --limit-rate RATE&#xA;--split-tracks                   --split-chapters&#xA;--srt-lang LANGS                 --sub-langs LANGS&#xA;--trim-file-names LENGTH         --trim-filenames LENGTH&#xA;--write-srt                      --write-subs&#xA;--yes-overwrites                 --force-overwrites&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Sponskrub Options&lt;/h4&gt; &#xA;&lt;p&gt;Support for &lt;a href=&#34;https://github.com/faissaloo/SponSkrub&#34;&gt;SponSkrub&lt;/a&gt; has been deprecated in favor of the &lt;code&gt;--sponsorblock&lt;/code&gt; options&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--sponskrub                      --sponsorblock-mark all&#xA;--no-sponskrub                   --no-sponsorblock&#xA;--sponskrub-cut                  --sponsorblock-remove all&#xA;--no-sponskrub-cut               --sponsorblock-remove -all&#xA;--sponskrub-force                Not applicable&#xA;--no-sponskrub-force             Not applicable&#xA;--sponskrub-location             Not applicable&#xA;--sponskrub-args                 Not applicable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;No longer supported&lt;/h4&gt; &#xA;&lt;p&gt;These options may no longer work as intended&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--prefer-avconv                  avconv is not officially supported by yt-dlp (Alias: --no-prefer-ffmpeg)&#xA;--prefer-ffmpeg                  Default (Alias: --no-prefer-avconv)&#xA;-C, --call-home                  Not implemented&#xA;--no-call-home                   Default&#xA;--include-ads                    No longer supported&#xA;--no-include-ads                 Default&#xA;--write-annotations              No supported site has annotations now&#xA;--no-write-annotations           Default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Removed&lt;/h4&gt; &#xA;&lt;p&gt;These options were deprecated since 2014 and have now been entirely removed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-A, --auto-number                -o &#34;%(autonumber)s-%(id)s.%(ext)s&#34;&#xA;-t, -l, --title, --literal       -o &#34;%(title)s-%(id)s.%(ext)s&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;CONTRIBUTING&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/CONTRIBUTING.md#contributing-to-yt-dlp&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for instructions on &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/CONTRIBUTING.md#opening-an-issue&#34;&gt;Opening an Issue&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/CONTRIBUTING.md#developer-instructions&#34;&gt;Contributing code to the project&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;MORE&lt;/h1&gt; &#xA;&lt;p&gt;For FAQ see the &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl#faq&#34;&gt;youtube-dl README&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ytdl-org/youtube-dl</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/ytdl-org/youtube-dl</id>
    <link href="https://github.com/ytdl-org/youtube-dl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Command-line program to download videos from YouTube.com and other video sites&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/ytdl-org/youtube-dl/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;youtube-dl - download videos from youtube.com or other video platforms&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#installation&#34;&gt;INSTALLATION&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#description&#34;&gt;DESCRIPTION&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#options&#34;&gt;OPTIONS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#configuration&#34;&gt;CONFIGURATION&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#output-template&#34;&gt;OUTPUT TEMPLATE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#format-selection&#34;&gt;FORMAT SELECTION&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#video-selection&#34;&gt;VIDEO SELECTION&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#developer-instructions&#34;&gt;DEVELOPER INSTRUCTIONS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#embedding-youtube-dl&#34;&gt;EMBEDDING YOUTUBE-DL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#bugs&#34;&gt;BUGS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#copyright&#34;&gt;COPYRIGHT&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;INSTALLATION&lt;/h1&gt; &#xA;&lt;p&gt;To install it right away for all UNIX users (Linux, macOS, etc.), type:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl&#xA;sudo chmod a+rx /usr/local/bin/youtube-dl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you do not have curl, you can alternatively use a recent wget:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl&#xA;sudo chmod a+rx /usr/local/bin/youtube-dl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Windows users can &lt;a href=&#34;https://yt-dl.org/latest/youtube-dl.exe&#34;&gt;download an .exe file&lt;/a&gt; and place it in any location on their &lt;a href=&#34;https://en.wikipedia.org/wiki/PATH_%28variable%29&#34;&gt;PATH&lt;/a&gt; except for &lt;code&gt;%SYSTEMROOT%\System32&lt;/code&gt; (e.g. &lt;strong&gt;do not&lt;/strong&gt; put in &lt;code&gt;C:\Windows\System32&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;You can also use pip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo -H pip install --upgrade youtube-dl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will update youtube-dl if you have already installed it. See the &lt;a href=&#34;https://pypi.python.org/pypi/youtube_dl&#34;&gt;pypi page&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;macOS users can install youtube-dl with &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install youtube-dl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or with &lt;a href=&#34;https://www.macports.org/&#34;&gt;MacPorts&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo port install youtube-dl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, refer to the &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#developer-instructions&#34;&gt;developer instructions&lt;/a&gt; for how to check out and work with the git repository. For further options, including PGP signatures, see the &lt;a href=&#34;https://ytdl-org.github.io/youtube-dl/download.html&#34;&gt;youtube-dl Download Page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;DESCRIPTION&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;youtube-dl&lt;/strong&gt; is a command-line program to download videos from YouTube.com and a few more sites. It requires the Python interpreter, version 2.6, 2.7, or 3.2+, and it is not platform specific. It should work on your Unix box, on Windows or on macOS. It is released to the public domain, which means you can modify it, redistribute it or use it however you like.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;youtube-dl [OPTIONS] URL [URL...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;OPTIONS&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;-h, --help                           Print this help text and exit&#xA;--version                            Print program version and exit&#xA;-U, --update                         Update this program to latest version.&#xA;                                     Make sure that you have sufficient&#xA;                                     permissions (run with sudo if needed)&#xA;-i, --ignore-errors                  Continue on download errors, for&#xA;                                     example to skip unavailable videos in a&#xA;                                     playlist&#xA;--abort-on-error                     Abort downloading of further videos (in&#xA;                                     the playlist or the command line) if an&#xA;                                     error occurs&#xA;--dump-user-agent                    Display the current browser&#xA;                                     identification&#xA;--list-extractors                    List all supported extractors&#xA;--extractor-descriptions             Output descriptions of all supported&#xA;                                     extractors&#xA;--force-generic-extractor            Force extraction to use the generic&#xA;                                     extractor&#xA;--default-search PREFIX              Use this prefix for unqualified URLs.&#xA;                                     For example &#34;gvsearch2:&#34; downloads two&#xA;                                     videos from google videos for youtube-&#xA;                                     dl &#34;large apple&#34;. Use the value &#34;auto&#34;&#xA;                                     to let youtube-dl guess (&#34;auto_warning&#34;&#xA;                                     to emit a warning when guessing).&#xA;                                     &#34;error&#34; just throws an error. The&#xA;                                     default value &#34;fixup_error&#34; repairs&#xA;                                     broken URLs, but emits an error if this&#xA;                                     is not possible instead of searching.&#xA;--ignore-config                      Do not read configuration files. When&#xA;                                     given in the global configuration file&#xA;                                     /etc/youtube-dl.conf: Do not read the&#xA;                                     user configuration in&#xA;                                     ~/.config/youtube-dl/config&#xA;                                     (%APPDATA%/youtube-dl/config.txt on&#xA;                                     Windows)&#xA;--config-location PATH               Location of the configuration file;&#xA;                                     either the path to the config or its&#xA;                                     containing directory.&#xA;--flat-playlist                      Do not extract the videos of a&#xA;                                     playlist, only list them.&#xA;--mark-watched                       Mark videos watched (YouTube only)&#xA;--no-mark-watched                    Do not mark videos watched (YouTube&#xA;                                     only)&#xA;--no-color                           Do not emit color codes in output&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Network Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;--proxy URL                          Use the specified HTTP/HTTPS/SOCKS&#xA;                                     proxy. To enable SOCKS proxy, specify a&#xA;                                     proper scheme. For example&#xA;                                     socks5://127.0.0.1:1080/. Pass in an&#xA;                                     empty string (--proxy &#34;&#34;) for direct&#xA;                                     connection&#xA;--socket-timeout SECONDS             Time to wait before giving up, in&#xA;                                     seconds&#xA;--source-address IP                  Client-side IP address to bind to&#xA;-4, --force-ipv4                     Make all connections via IPv4&#xA;-6, --force-ipv6                     Make all connections via IPv6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Geo Restriction:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;--geo-verification-proxy URL         Use this proxy to verify the IP address&#xA;                                     for some geo-restricted sites. The&#xA;                                     default proxy specified by --proxy (or&#xA;                                     none, if the option is not present) is&#xA;                                     used for the actual downloading.&#xA;--geo-bypass                         Bypass geographic restriction via&#xA;                                     faking X-Forwarded-For HTTP header&#xA;--no-geo-bypass                      Do not bypass geographic restriction&#xA;                                     via faking X-Forwarded-For HTTP header&#xA;--geo-bypass-country CODE            Force bypass geographic restriction&#xA;                                     with explicitly provided two-letter ISO&#xA;                                     3166-2 country code&#xA;--geo-bypass-ip-block IP_BLOCK       Force bypass geographic restriction&#xA;                                     with explicitly provided IP block in&#xA;                                     CIDR notation&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Video Selection:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;--playlist-start NUMBER              Playlist video to start at (default is&#xA;                                     1)&#xA;--playlist-end NUMBER                Playlist video to end at (default is&#xA;                                     last)&#xA;--playlist-items ITEM_SPEC           Playlist video items to download.&#xA;                                     Specify indices of the videos in the&#xA;                                     playlist separated by commas like: &#34;--&#xA;                                     playlist-items 1,2,5,8&#34; if you want to&#xA;                                     download videos indexed 1, 2, 5, 8 in&#xA;                                     the playlist. You can specify range: &#34;&#xA;                                     --playlist-items 1-3,7,10-13&#34;, it will&#xA;                                     download the videos at index 1, 2, 3,&#xA;                                     7, 10, 11, 12 and 13.&#xA;--match-title REGEX                  Download only matching titles (regex or&#xA;                                     caseless sub-string)&#xA;--reject-title REGEX                 Skip download for matching titles&#xA;                                     (regex or caseless sub-string)&#xA;--max-downloads NUMBER               Abort after downloading NUMBER files&#xA;--min-filesize SIZE                  Do not download any videos smaller than&#xA;                                     SIZE (e.g. 50k or 44.6m)&#xA;--max-filesize SIZE                  Do not download any videos larger than&#xA;                                     SIZE (e.g. 50k or 44.6m)&#xA;--date DATE                          Download only videos uploaded in this&#xA;                                     date&#xA;--datebefore DATE                    Download only videos uploaded on or&#xA;                                     before this date (i.e. inclusive)&#xA;--dateafter DATE                     Download only videos uploaded on or&#xA;                                     after this date (i.e. inclusive)&#xA;--min-views COUNT                    Do not download any videos with less&#xA;                                     than COUNT views&#xA;--max-views COUNT                    Do not download any videos with more&#xA;                                     than COUNT views&#xA;--match-filter FILTER                Generic video filter. Specify any key&#xA;                                     (see the &#34;OUTPUT TEMPLATE&#34; for a list&#xA;                                     of available keys) to match if the key&#xA;                                     is present, !key to check if the key is&#xA;                                     not present, key &amp;gt; NUMBER (like&#xA;                                     &#34;comment_count &amp;gt; 12&#34;, also works with&#xA;                                     &amp;gt;=, &amp;lt;, &amp;lt;=, !=, =) to compare against a&#xA;                                     number, key = &#39;LITERAL&#39; (like &#34;uploader&#xA;                                     = &#39;Mike Smith&#39;&#34;, also works with !=) to&#xA;                                     match against a string literal and &amp;amp; to&#xA;                                     require multiple matches. Values which&#xA;                                     are not known are excluded unless you&#xA;                                     put a question mark (?) after the&#xA;                                     operator. For example, to only match&#xA;                                     videos that have been liked more than&#xA;                                     100 times and disliked less than 50&#xA;                                     times (or the dislike functionality is&#xA;                                     not available at the given service),&#xA;                                     but who also have a description, use&#xA;                                     --match-filter &#34;like_count &amp;gt; 100 &amp;amp;&#xA;                                     dislike_count &amp;lt;? 50 &amp;amp; description&#34; .&#xA;--no-playlist                        Download only the video, if the URL&#xA;                                     refers to a video and a playlist.&#xA;--yes-playlist                       Download the playlist, if the URL&#xA;                                     refers to a video and a playlist.&#xA;--age-limit YEARS                    Download only videos suitable for the&#xA;                                     given age&#xA;--download-archive FILE              Download only videos not listed in the&#xA;                                     archive file. Record the IDs of all&#xA;                                     downloaded videos in it.&#xA;--include-ads                        Download advertisements as well&#xA;                                     (experimental)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Download Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;-r, --limit-rate RATE                Maximum download rate in bytes per&#xA;                                     second (e.g. 50K or 4.2M)&#xA;-R, --retries RETRIES                Number of retries (default is 10), or&#xA;                                     &#34;infinite&#34;.&#xA;--fragment-retries RETRIES           Number of retries for a fragment&#xA;                                     (default is 10), or &#34;infinite&#34; (DASH,&#xA;                                     hlsnative and ISM)&#xA;--skip-unavailable-fragments         Skip unavailable fragments (DASH,&#xA;                                     hlsnative and ISM)&#xA;--abort-on-unavailable-fragment      Abort downloading when some fragment is&#xA;                                     not available&#xA;--keep-fragments                     Keep downloaded fragments on disk after&#xA;                                     downloading is finished; fragments are&#xA;                                     erased by default&#xA;--buffer-size SIZE                   Size of download buffer (e.g. 1024 or&#xA;                                     16K) (default is 1024)&#xA;--no-resize-buffer                   Do not automatically adjust the buffer&#xA;                                     size. By default, the buffer size is&#xA;                                     automatically resized from an initial&#xA;                                     value of SIZE.&#xA;--http-chunk-size SIZE               Size of a chunk for chunk-based HTTP&#xA;                                     downloading (e.g. 10485760 or 10M)&#xA;                                     (default is disabled). May be useful&#xA;                                     for bypassing bandwidth throttling&#xA;                                     imposed by a webserver (experimental)&#xA;--playlist-reverse                   Download playlist videos in reverse&#xA;                                     order&#xA;--playlist-random                    Download playlist videos in random&#xA;                                     order&#xA;--xattr-set-filesize                 Set file xattribute ytdl.filesize with&#xA;                                     expected file size&#xA;--hls-prefer-native                  Use the native HLS downloader instead&#xA;                                     of ffmpeg&#xA;--hls-prefer-ffmpeg                  Use ffmpeg instead of the native HLS&#xA;                                     downloader&#xA;--hls-use-mpegts                     Use the mpegts container for HLS&#xA;                                     videos, allowing to play the video&#xA;                                     while downloading (some players may not&#xA;                                     be able to play it)&#xA;--external-downloader COMMAND        Use the specified external downloader.&#xA;                                     Currently supports aria2c,avconv,axel,c&#xA;                                     url,ffmpeg,httpie,wget&#xA;--external-downloader-args ARGS      Give these arguments to the external&#xA;                                     downloader&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Filesystem Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;-a, --batch-file FILE                File containing URLs to download (&#39;-&#39;&#xA;                                     for stdin), one URL per line. Lines&#xA;                                     starting with &#39;#&#39;, &#39;;&#39; or &#39;]&#39; are&#xA;                                     considered as comments and ignored.&#xA;--id                                 Use only video ID in file name&#xA;-o, --output TEMPLATE                Output filename template, see the&#xA;                                     &#34;OUTPUT TEMPLATE&#34; for all the info&#xA;--output-na-placeholder PLACEHOLDER  Placeholder value for unavailable meta&#xA;                                     fields in output filename template&#xA;                                     (default is &#34;NA&#34;)&#xA;--autonumber-start NUMBER            Specify the start value for&#xA;                                     %(autonumber)s (default is 1)&#xA;--restrict-filenames                 Restrict filenames to only ASCII&#xA;                                     characters, and avoid &#34;&amp;amp;&#34; and spaces in&#xA;                                     filenames&#xA;-w, --no-overwrites                  Do not overwrite files&#xA;-c, --continue                       Force resume of partially downloaded&#xA;                                     files. By default, youtube-dl will&#xA;                                     resume downloads if possible.&#xA;--no-continue                        Do not resume partially downloaded&#xA;                                     files (restart from beginning)&#xA;--no-part                            Do not use .part files - write directly&#xA;                                     into output file&#xA;--no-mtime                           Do not use the Last-modified header to&#xA;                                     set the file modification time&#xA;--write-description                  Write video description to a&#xA;                                     .description file&#xA;--write-info-json                    Write video metadata to a .info.json&#xA;                                     file&#xA;--write-annotations                  Write video annotations to a&#xA;                                     .annotations.xml file&#xA;--load-info-json FILE                JSON file containing the video&#xA;                                     information (created with the &#34;--write-&#xA;                                     info-json&#34; option)&#xA;--cookies FILE                       File to read cookies from and dump&#xA;                                     cookie jar in&#xA;--cache-dir DIR                      Location in the filesystem where&#xA;                                     youtube-dl can store some downloaded&#xA;                                     information permanently. By default&#xA;                                     $XDG_CACHE_HOME/youtube-dl or&#xA;                                     ~/.cache/youtube-dl . At the moment,&#xA;                                     only YouTube player files (for videos&#xA;                                     with obfuscated signatures) are cached,&#xA;                                     but that may change.&#xA;--no-cache-dir                       Disable filesystem caching&#xA;--rm-cache-dir                       Delete all filesystem cache files&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Thumbnail Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;--write-thumbnail                    Write thumbnail image to disk&#xA;--write-all-thumbnails               Write all thumbnail image formats to&#xA;                                     disk&#xA;--list-thumbnails                    Simulate and list all available&#xA;                                     thumbnail formats&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Verbosity / Simulation Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;-q, --quiet                          Activate quiet mode&#xA;--no-warnings                        Ignore warnings&#xA;-s, --simulate                       Do not download the video and do not&#xA;                                     write anything to disk&#xA;--skip-download                      Do not download the video&#xA;-g, --get-url                        Simulate, quiet but print URL&#xA;-e, --get-title                      Simulate, quiet but print title&#xA;--get-id                             Simulate, quiet but print id&#xA;--get-thumbnail                      Simulate, quiet but print thumbnail URL&#xA;--get-description                    Simulate, quiet but print video&#xA;                                     description&#xA;--get-duration                       Simulate, quiet but print video length&#xA;--get-filename                       Simulate, quiet but print output&#xA;                                     filename&#xA;--get-format                         Simulate, quiet but print output format&#xA;-j, --dump-json                      Simulate, quiet but print JSON&#xA;                                     information. See the &#34;OUTPUT TEMPLATE&#34;&#xA;                                     for a description of available keys.&#xA;-J, --dump-single-json               Simulate, quiet but print JSON&#xA;                                     information for each command-line&#xA;                                     argument. If the URL refers to a&#xA;                                     playlist, dump the whole playlist&#xA;                                     information in a single line.&#xA;--print-json                         Be quiet and print the video&#xA;                                     information as JSON (video is still&#xA;                                     being downloaded).&#xA;--newline                            Output progress bar as new lines&#xA;--no-progress                        Do not print progress bar&#xA;--console-title                      Display progress in console titlebar&#xA;-v, --verbose                        Print various debugging information&#xA;--dump-pages                         Print downloaded pages encoded using&#xA;                                     base64 to debug problems (very verbose)&#xA;--write-pages                        Write downloaded intermediary pages to&#xA;                                     files in the current directory to debug&#xA;                                     problems&#xA;--print-traffic                      Display sent and read HTTP traffic&#xA;-C, --call-home                      Contact the youtube-dl server for&#xA;                                     debugging&#xA;--no-call-home                       Do NOT contact the youtube-dl server&#xA;                                     for debugging&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Workarounds:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;--encoding ENCODING                  Force the specified encoding&#xA;                                     (experimental)&#xA;--no-check-certificate               Suppress HTTPS certificate validation&#xA;--prefer-insecure                    Use an unencrypted connection to&#xA;                                     retrieve information about the video.&#xA;                                     (Currently supported only for YouTube)&#xA;--user-agent UA                      Specify a custom user agent&#xA;--referer URL                        Specify a custom referer, use if the&#xA;                                     video access is restricted to one&#xA;                                     domain&#xA;--add-header FIELD:VALUE             Specify a custom HTTP header and its&#xA;                                     value, separated by a colon &#39;:&#39;. You&#xA;                                     can use this option multiple times&#xA;--bidi-workaround                    Work around terminals that lack&#xA;                                     bidirectional text support. Requires&#xA;                                     bidiv or fribidi executable in PATH&#xA;--sleep-interval SECONDS             Number of seconds to sleep before each&#xA;                                     download when used alone or a lower&#xA;                                     bound of a range for randomized sleep&#xA;                                     before each download (minimum possible&#xA;                                     number of seconds to sleep) when used&#xA;                                     along with --max-sleep-interval.&#xA;--max-sleep-interval SECONDS         Upper bound of a range for randomized&#xA;                                     sleep before each download (maximum&#xA;                                     possible number of seconds to sleep).&#xA;                                     Must only be used along with --min-&#xA;                                     sleep-interval.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Video Format Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;-f, --format FORMAT                  Video format code, see the &#34;FORMAT&#xA;                                     SELECTION&#34; for all the info&#xA;--all-formats                        Download all available video formats&#xA;--prefer-free-formats                Prefer free video formats unless a&#xA;                                     specific one is requested&#xA;-F, --list-formats                   List all available formats of requested&#xA;                                     videos&#xA;--youtube-skip-dash-manifest         Do not download the DASH manifests and&#xA;                                     related data on YouTube videos&#xA;--merge-output-format FORMAT         If a merge is required (e.g.&#xA;                                     bestvideo+bestaudio), output to given&#xA;                                     container format. One of mkv, mp4, ogg,&#xA;                                     webm, flv. Ignored if no merge is&#xA;                                     required&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Subtitle Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;--write-sub                          Write subtitle file&#xA;--write-auto-sub                     Write automatically generated subtitle&#xA;                                     file (YouTube only)&#xA;--all-subs                           Download all the available subtitles of&#xA;                                     the video&#xA;--list-subs                          List all available subtitles for the&#xA;                                     video&#xA;--sub-format FORMAT                  Subtitle format, accepts formats&#xA;                                     preference, for example: &#34;srt&#34; or&#xA;                                     &#34;ass/srt/best&#34;&#xA;--sub-lang LANGS                     Languages of the subtitles to download&#xA;                                     (optional) separated by commas, use&#xA;                                     --list-subs for available language tags&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Authentication Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;-u, --username USERNAME              Login with this account ID&#xA;-p, --password PASSWORD              Account password. If this option is&#xA;                                     left out, youtube-dl will ask&#xA;                                     interactively.&#xA;-2, --twofactor TWOFACTOR            Two-factor authentication code&#xA;-n, --netrc                          Use .netrc authentication data&#xA;--video-password PASSWORD            Video password (vimeo, youku)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Adobe Pass Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;--ap-mso MSO                         Adobe Pass multiple-system operator (TV&#xA;                                     provider) identifier, use --ap-list-mso&#xA;                                     for a list of available MSOs&#xA;--ap-username USERNAME               Multiple-system operator account login&#xA;--ap-password PASSWORD               Multiple-system operator account&#xA;                                     password. If this option is left out,&#xA;                                     youtube-dl will ask interactively.&#xA;--ap-list-mso                        List all supported multiple-system&#xA;                                     operators&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Post-processing Options:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;-x, --extract-audio                  Convert video files to audio-only files&#xA;                                     (requires ffmpeg/avconv and&#xA;                                     ffprobe/avprobe)&#xA;--audio-format FORMAT                Specify audio format: &#34;best&#34;, &#34;aac&#34;,&#xA;                                     &#34;flac&#34;, &#34;mp3&#34;, &#34;m4a&#34;, &#34;opus&#34;, &#34;vorbis&#34;,&#xA;                                     or &#34;wav&#34;; &#34;best&#34; by default; No effect&#xA;                                     without -x&#xA;--audio-quality QUALITY              Specify ffmpeg/avconv audio quality,&#xA;                                     insert a value between 0 (better) and 9&#xA;                                     (worse) for VBR or a specific bitrate&#xA;                                     like 128K (default 5)&#xA;--recode-video FORMAT                Encode the video to another format if&#xA;                                     necessary (currently supported:&#xA;                                     mp4|flv|ogg|webm|mkv|avi)&#xA;--postprocessor-args ARGS            Give these arguments to the&#xA;                                     postprocessor&#xA;-k, --keep-video                     Keep the video file on disk after the&#xA;                                     post-processing; the video is erased by&#xA;                                     default&#xA;--no-post-overwrites                 Do not overwrite post-processed files;&#xA;                                     the post-processed files are&#xA;                                     overwritten by default&#xA;--embed-subs                         Embed subtitles in the video (only for&#xA;                                     mp4, webm and mkv videos)&#xA;--embed-thumbnail                    Embed thumbnail in the audio as cover&#xA;                                     art&#xA;--add-metadata                       Write metadata to the video file&#xA;--metadata-from-title FORMAT         Parse additional metadata like song&#xA;                                     title / artist from the video title.&#xA;                                     The format syntax is the same as&#xA;                                     --output. Regular expression with named&#xA;                                     capture groups may also be used. The&#xA;                                     parsed parameters replace existing&#xA;                                     values. Example: --metadata-from-title&#xA;                                     &#34;%(artist)s - %(title)s&#34; matches a&#xA;                                     title like &#34;Coldplay - Paradise&#34;.&#xA;                                     Example (regex): --metadata-from-title&#xA;                                     &#34;(?P&amp;lt;artist&amp;gt;.+?) - (?P&amp;lt;title&amp;gt;.+)&#34;&#xA;--xattrs                             Write metadata to the video file&#39;s&#xA;                                     xattrs (using dublin core and xdg&#xA;                                     standards)&#xA;--fixup POLICY                       Automatically correct known faults of&#xA;                                     the file. One of never (do nothing),&#xA;                                     warn (only emit a warning),&#xA;                                     detect_or_warn (the default; fix file&#xA;                                     if we can, warn otherwise)&#xA;--prefer-avconv                      Prefer avconv over ffmpeg for running&#xA;                                     the postprocessors&#xA;--prefer-ffmpeg                      Prefer ffmpeg over avconv for running&#xA;                                     the postprocessors (default)&#xA;--ffmpeg-location PATH               Location of the ffmpeg/avconv binary;&#xA;                                     either the path to the binary or its&#xA;                                     containing directory.&#xA;--exec CMD                           Execute a command on the file after&#xA;                                     downloading and post-processing,&#xA;                                     similar to find&#39;s -exec syntax.&#xA;                                     Example: --exec &#39;adb push {}&#xA;                                     /sdcard/Music/ &amp;amp;&amp;amp; rm {}&#39;&#xA;--convert-subs FORMAT                Convert the subtitles to other format&#xA;                                     (currently supported: srt|ass|vtt|lrc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;CONFIGURATION&lt;/h1&gt; &#xA;&lt;p&gt;You can configure youtube-dl by placing any supported command line option to a configuration file. On Linux and macOS, the system wide configuration file is located at &lt;code&gt;/etc/youtube-dl.conf&lt;/code&gt; and the user wide configuration file at &lt;code&gt;~/.config/youtube-dl/config&lt;/code&gt;. On Windows, the user wide configuration file locations are &lt;code&gt;%APPDATA%\youtube-dl\config.txt&lt;/code&gt; or &lt;code&gt;C:\Users\&amp;lt;user name&amp;gt;\youtube-dl.conf&lt;/code&gt;. Note that by default configuration file may not exist so you may need to create it yourself.&lt;/p&gt; &#xA;&lt;p&gt;For example, with the following configuration file youtube-dl will always extract the audio, not copy the mtime, use a proxy and save all videos under &lt;code&gt;Movies&lt;/code&gt; directory in your home directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Lines starting with # are comments&#xA;&#xA;# Always extract audio&#xA;-x&#xA;&#xA;# Do not copy the mtime&#xA;--no-mtime&#xA;&#xA;# Use this proxy&#xA;--proxy 127.0.0.1:3128&#xA;&#xA;# Save all videos under Movies directory in your home directory&#xA;-o ~/Movies/%(title)s.%(ext)s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that options in configuration file are just the same options aka switches used in regular command line calls thus there &lt;strong&gt;must be no whitespace&lt;/strong&gt; after &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;--&lt;/code&gt;, e.g. &lt;code&gt;-o&lt;/code&gt; or &lt;code&gt;--proxy&lt;/code&gt; but not &lt;code&gt;- o&lt;/code&gt; or &lt;code&gt;-- proxy&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;--ignore-config&lt;/code&gt; if you want to disable the configuration file for a particular youtube-dl run.&lt;/p&gt; &#xA;&lt;p&gt;You can also use &lt;code&gt;--config-location&lt;/code&gt; if you want to use custom configuration file for a particular youtube-dl run.&lt;/p&gt; &#xA;&lt;h3&gt;Authentication with &lt;code&gt;.netrc&lt;/code&gt; file&lt;/h3&gt; &#xA;&lt;p&gt;You may also want to configure automatic credentials storage for extractors that support authentication (by providing login and password with &lt;code&gt;--username&lt;/code&gt; and &lt;code&gt;--password&lt;/code&gt;) in order not to pass credentials as command line arguments on every youtube-dl execution and prevent tracking plain text passwords in the shell command history. You can achieve this using a &lt;a href=&#34;https://stackoverflow.com/tags/.netrc/info&#34;&gt;&lt;code&gt;.netrc&lt;/code&gt; file&lt;/a&gt; on a per extractor basis. For that you will need to create a &lt;code&gt;.netrc&lt;/code&gt; file in your &lt;code&gt;$HOME&lt;/code&gt; and restrict permissions to read/write by only you:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;touch $HOME/.netrc&#xA;chmod a-rwx,u+rw $HOME/.netrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After that you can add credentials for an extractor in the following format, where &lt;em&gt;extractor&lt;/em&gt; is the name of the extractor in lowercase:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;machine &amp;lt;extractor&amp;gt; login &amp;lt;login&amp;gt; password &amp;lt;password&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;machine youtube login myaccount@gmail.com password my_youtube_password&#xA;machine twitch login my_twitch_account_name password my_twitch_password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To activate authentication with the &lt;code&gt;.netrc&lt;/code&gt; file you should pass &lt;code&gt;--netrc&lt;/code&gt; to youtube-dl or place it in the &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#configuration&#34;&gt;configuration file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On Windows you may also need to setup the &lt;code&gt;%HOME%&lt;/code&gt; environment variable manually. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;set HOME=%USERPROFILE%&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;OUTPUT TEMPLATE&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;code&gt;-o&lt;/code&gt; option allows users to indicate a template for the output file names.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#output-template-examples&#34;&gt;navigate me to examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The basic usage is not to set any template arguments when downloading a single file, like in &lt;code&gt;youtube-dl -o funny_video.flv &#34;https://some/video&#34;&lt;/code&gt;. However, it may contain special sequences that will be replaced when downloading each video. The special sequences may be formatted according to &lt;a href=&#34;https://docs.python.org/2/library/stdtypes.html#string-formatting&#34;&gt;python string formatting operations&lt;/a&gt;. For example, &lt;code&gt;%(NAME)s&lt;/code&gt; or &lt;code&gt;%(NAME)05d&lt;/code&gt;. To clarify, that is a percent symbol followed by a name in parentheses, followed by formatting operations. Allowed names along with sequence type are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;id&lt;/code&gt; (string): Video identifier&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;title&lt;/code&gt; (string): Video title&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;url&lt;/code&gt; (string): Video URL&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ext&lt;/code&gt; (string): Video filename extension&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;alt_title&lt;/code&gt; (string): A secondary title of the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;display_id&lt;/code&gt; (string): An alternative identifier for the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;uploader&lt;/code&gt; (string): Full name of the video uploader&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;license&lt;/code&gt; (string): License name the video is licensed under&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;creator&lt;/code&gt; (string): The creator of the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;release_date&lt;/code&gt; (string): The date (YYYYMMDD) when the video was released&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;timestamp&lt;/code&gt; (numeric): UNIX timestamp of the moment the video became available&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;upload_date&lt;/code&gt; (string): Video upload date (YYYYMMDD)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;uploader_id&lt;/code&gt; (string): Nickname or id of the video uploader&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;channel&lt;/code&gt; (string): Full name of the channel the video is uploaded on&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;channel_id&lt;/code&gt; (string): Id of the channel&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;location&lt;/code&gt; (string): Physical location where the video was filmed&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;duration&lt;/code&gt; (numeric): Length of the video in seconds&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;view_count&lt;/code&gt; (numeric): How many users have watched the video on the platform&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;like_count&lt;/code&gt; (numeric): Number of positive ratings of the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dislike_count&lt;/code&gt; (numeric): Number of negative ratings of the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;repost_count&lt;/code&gt; (numeric): Number of reposts of the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;average_rating&lt;/code&gt; (numeric): Average rating give by users, the scale used depends on the webpage&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;comment_count&lt;/code&gt; (numeric): Number of comments on the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;age_limit&lt;/code&gt; (numeric): Age restriction for the video (years)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;is_live&lt;/code&gt; (boolean): Whether this video is a live stream or a fixed-length video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;start_time&lt;/code&gt; (numeric): Time in seconds where the reproduction should start, as specified in the URL&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;end_time&lt;/code&gt; (numeric): Time in seconds where the reproduction should end, as specified in the URL&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;format&lt;/code&gt; (string): A human-readable description of the format&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;format_id&lt;/code&gt; (string): Format code specified by &lt;code&gt;--format&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;format_note&lt;/code&gt; (string): Additional info about the format&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;width&lt;/code&gt; (numeric): Width of the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;height&lt;/code&gt; (numeric): Height of the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;resolution&lt;/code&gt; (string): Textual description of width and height&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tbr&lt;/code&gt; (numeric): Average bitrate of audio and video in KBit/s&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;abr&lt;/code&gt; (numeric): Average audio bitrate in KBit/s&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;acodec&lt;/code&gt; (string): Name of the audio codec in use&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;asr&lt;/code&gt; (numeric): Audio sampling rate in Hertz&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vbr&lt;/code&gt; (numeric): Average video bitrate in KBit/s&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fps&lt;/code&gt; (numeric): Frame rate&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vcodec&lt;/code&gt; (string): Name of the video codec in use&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;container&lt;/code&gt; (string): Name of the container format&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;filesize&lt;/code&gt; (numeric): The number of bytes, if known in advance&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;filesize_approx&lt;/code&gt; (numeric): An estimate for the number of bytes&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;protocol&lt;/code&gt; (string): The protocol that will be used for the actual download&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;extractor&lt;/code&gt; (string): Name of the extractor&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;extractor_key&lt;/code&gt; (string): Key name of the extractor&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;epoch&lt;/code&gt; (numeric): Unix epoch when creating the file&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;autonumber&lt;/code&gt; (numeric): Number that will be increased with each download, starting at &lt;code&gt;--autonumber-start&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playlist&lt;/code&gt; (string): Name or id of the playlist that contains the video&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playlist_index&lt;/code&gt; (numeric): Index of the video in the playlist padded with leading zeros according to the total length of the playlist&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playlist_id&lt;/code&gt; (string): Playlist identifier&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playlist_title&lt;/code&gt; (string): Playlist title&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playlist_uploader&lt;/code&gt; (string): Full name of the playlist uploader&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playlist_uploader_id&lt;/code&gt; (string): Nickname or id of the playlist uploader&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Available for the video that belongs to some logical chapter or section:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;chapter&lt;/code&gt; (string): Name or title of the chapter the video belongs to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;chapter_number&lt;/code&gt; (numeric): Number of the chapter the video belongs to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;chapter_id&lt;/code&gt; (string): Id of the chapter the video belongs to&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Available for the video that is an episode of some series or programme:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;series&lt;/code&gt; (string): Title of the series or programme the video episode belongs to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;season&lt;/code&gt; (string): Title of the season the video episode belongs to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;season_number&lt;/code&gt; (numeric): Number of the season the video episode belongs to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;season_id&lt;/code&gt; (string): Id of the season the video episode belongs to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;episode&lt;/code&gt; (string): Title of the video episode&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;episode_number&lt;/code&gt; (numeric): Number of the video episode within a season&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;episode_id&lt;/code&gt; (string): Id of the video episode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Available for the media that is a track or a part of a music album:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;track&lt;/code&gt; (string): Title of the track&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;track_number&lt;/code&gt; (numeric): Number of the track within an album or a disc&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;track_id&lt;/code&gt; (string): Id of the track&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;artist&lt;/code&gt; (string): Artist(s) of the track&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;genre&lt;/code&gt; (string): Genre(s) of the track&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;album&lt;/code&gt; (string): Title of the album the track belongs to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;album_type&lt;/code&gt; (string): Type of the album&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;album_artist&lt;/code&gt; (string): List of all artists appeared on the album&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;disc_number&lt;/code&gt; (numeric): Number of the disc or other physical medium the track belongs to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;release_year&lt;/code&gt; (numeric): Year (YYYY) when the album was released&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Each aforementioned sequence when referenced in an output template will be replaced by the actual value corresponding to the sequence name. Note that some of the sequences are not guaranteed to be present since they depend on the metadata obtained by a particular extractor. Such sequences will be replaced with placeholder value provided with &lt;code&gt;--output-na-placeholder&lt;/code&gt; (&lt;code&gt;NA&lt;/code&gt; by default).&lt;/p&gt; &#xA;&lt;p&gt;For example for &lt;code&gt;-o %(title)s-%(id)s.%(ext)s&lt;/code&gt; and an mp4 video with title &lt;code&gt;youtube-dl test video&lt;/code&gt; and id &lt;code&gt;BaW_jenozKcj&lt;/code&gt;, this will result in a &lt;code&gt;youtube-dl test video-BaW_jenozKcj.mp4&lt;/code&gt; file created in the current directory.&lt;/p&gt; &#xA;&lt;p&gt;For numeric sequences you can use numeric related formatting, for example, &lt;code&gt;%(view_count)05d&lt;/code&gt; will result in a string with view count padded with zeros up to 5 characters, like in &lt;code&gt;00042&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Output templates can also contain arbitrary hierarchical path, e.g. &lt;code&gt;-o &#39;%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s&#39;&lt;/code&gt; which will result in downloading each video in a directory corresponding to this path template. Any missing directory will be automatically created for you.&lt;/p&gt; &#xA;&lt;p&gt;To use percent literals in an output template use &lt;code&gt;%%&lt;/code&gt;. To output to stdout use &lt;code&gt;-o -&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The current default template is &lt;code&gt;%(title)s-%(id)s.%(ext)s&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In some cases, you don&#39;t want special characters such as 中, spaces, or &amp;amp;, such as when transferring the downloaded filename to a Windows system or the filename through an 8bit-unsafe channel. In these cases, add the &lt;code&gt;--restrict-filenames&lt;/code&gt; flag to get a shorter title:&lt;/p&gt; &#xA;&lt;h4&gt;Output template and Windows batch files&lt;/h4&gt; &#xA;&lt;p&gt;If you are using an output template inside a Windows batch file then you must escape plain percent characters (&lt;code&gt;%&lt;/code&gt;) by doubling, so that &lt;code&gt;-o &#34;%(title)s-%(id)s.%(ext)s&#34;&lt;/code&gt; should become &lt;code&gt;-o &#34;%%(title)s-%%(id)s.%%(ext)s&#34;&lt;/code&gt;. However you should not touch &lt;code&gt;%&lt;/code&gt;&#39;s that are not plain characters, e.g. environment variables for expansion should stay intact: &lt;code&gt;-o &#34;C:\%HOMEPATH%\Desktop\%%(title)s.%%(ext)s&#34;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Output template examples&lt;/h4&gt; &#xA;&lt;p&gt;Note that on Windows you may need to use double quotes instead of single.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ youtube-dl --get-filename -o &#39;%(title)s.%(ext)s&#39; BaW_jenozKc&#xA;youtube-dl test video &#39;&#39;_ä↭𝕐.mp4    # All kinds of weird characters&#xA;&#xA;$ youtube-dl --get-filename -o &#39;%(title)s.%(ext)s&#39; BaW_jenozKc --restrict-filenames&#xA;youtube-dl_test_video_.mp4          # A simple file name&#xA;&#xA;# Download YouTube playlist videos in separate directory indexed by video order in a playlist&#xA;$ youtube-dl -o &#39;%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s&#39; https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re&#xA;&#xA;# Download all playlists of YouTube channel/user keeping each playlist in separate directory:&#xA;$ youtube-dl -o &#39;%(uploader)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s&#39; https://www.youtube.com/user/TheLinuxFoundation/playlists&#xA;&#xA;# Download Udemy course keeping each chapter in separate directory under MyVideos directory in your home&#xA;$ youtube-dl -u user -p password -o &#39;~/MyVideos/%(playlist)s/%(chapter_number)s - %(chapter)s/%(title)s.%(ext)s&#39; https://www.udemy.com/java-tutorial/&#xA;&#xA;# Download entire series season keeping each series and each season in separate directory under C:/MyVideos&#xA;$ youtube-dl -o &#34;C:/MyVideos/%(series)s/%(season_number)s - %(season)s/%(episode_number)s - %(episode)s.%(ext)s&#34; https://videomore.ru/kino_v_detalayah/5_sezon/367617&#xA;&#xA;# Stream the video being downloaded to stdout&#xA;$ youtube-dl -o - BaW_jenozKc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;FORMAT SELECTION&lt;/h1&gt; &#xA;&lt;p&gt;By default youtube-dl tries to download the best available quality, i.e. if you want the best quality you &lt;strong&gt;don&#39;t need&lt;/strong&gt; to pass any special options, youtube-dl will guess it for you by &lt;strong&gt;default&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;But sometimes you may want to download in a different format, for example when you are on a slow or intermittent connection. The key mechanism for achieving this is so-called &lt;em&gt;format selection&lt;/em&gt; based on which you can explicitly specify desired format, select formats based on some criterion or criteria, setup precedence and much more.&lt;/p&gt; &#xA;&lt;p&gt;The general syntax for format selection is &lt;code&gt;--format FORMAT&lt;/code&gt; or shorter &lt;code&gt;-f FORMAT&lt;/code&gt; where &lt;code&gt;FORMAT&lt;/code&gt; is a &lt;em&gt;selector expression&lt;/em&gt;, i.e. an expression that describes format or formats you would like to download.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#format-selection-examples&#34;&gt;navigate me to examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The simplest case is requesting a specific format, for example with &lt;code&gt;-f 22&lt;/code&gt; you can download the format with format code equal to 22. You can get the list of available format codes for particular video using &lt;code&gt;--list-formats&lt;/code&gt; or &lt;code&gt;-F&lt;/code&gt;. Note that these format codes are extractor specific.&lt;/p&gt; &#xA;&lt;p&gt;You can also use a file extension (currently &lt;code&gt;3gp&lt;/code&gt;, &lt;code&gt;aac&lt;/code&gt;, &lt;code&gt;flv&lt;/code&gt;, &lt;code&gt;m4a&lt;/code&gt;, &lt;code&gt;mp3&lt;/code&gt;, &lt;code&gt;mp4&lt;/code&gt;, &lt;code&gt;ogg&lt;/code&gt;, &lt;code&gt;wav&lt;/code&gt;, &lt;code&gt;webm&lt;/code&gt; are supported) to download the best quality format of a particular file extension served as a single file, e.g. &lt;code&gt;-f webm&lt;/code&gt; will download the best quality format with the &lt;code&gt;webm&lt;/code&gt; extension served as a single file.&lt;/p&gt; &#xA;&lt;p&gt;You can also use special names to select particular edge case formats:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;best&lt;/code&gt;: Select the best quality format represented by a single file with video and audio.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;worst&lt;/code&gt;: Select the worst quality format represented by a single file with video and audio.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bestvideo&lt;/code&gt;: Select the best quality video-only format (e.g. DASH video). May not be available.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;worstvideo&lt;/code&gt;: Select the worst quality video-only format. May not be available.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bestaudio&lt;/code&gt;: Select the best quality audio only-format. May not be available.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;worstaudio&lt;/code&gt;: Select the worst quality audio only-format. May not be available.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, to download the worst quality video-only format you can use &lt;code&gt;-f worstvideo&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to download multiple videos and they don&#39;t have the same formats available, you can specify the order of preference using slashes. Note that slash is left-associative, i.e. formats on the left hand side are preferred, for example &lt;code&gt;-f 22/17/18&lt;/code&gt; will download format 22 if it&#39;s available, otherwise it will download format 17 if it&#39;s available, otherwise it will download format 18 if it&#39;s available, otherwise it will complain that no suitable formats are available for download.&lt;/p&gt; &#xA;&lt;p&gt;If you want to download several formats of the same video use a comma as a separator, e.g. &lt;code&gt;-f 22,17,18&lt;/code&gt; will download all these three formats, of course if they are available. Or a more sophisticated example combined with the precedence feature: &lt;code&gt;-f 136/137/mp4/bestvideo,140/m4a/bestaudio&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also filter the video formats by putting a condition in brackets, as in &lt;code&gt;-f &#34;best[height=720]&#34;&lt;/code&gt; (or &lt;code&gt;-f &#34;[filesize&amp;gt;10M]&#34;&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;The following numeric meta fields can be used with comparisons &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt; (equals), &lt;code&gt;!=&lt;/code&gt; (not equals):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;filesize&lt;/code&gt;: The number of bytes, if known in advance&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: Width of the video, if known&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;height&lt;/code&gt;: Height of the video, if known&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tbr&lt;/code&gt;: Average bitrate of audio and video in KBit/s&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;abr&lt;/code&gt;: Average audio bitrate in KBit/s&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vbr&lt;/code&gt;: Average video bitrate in KBit/s&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;asr&lt;/code&gt;: Audio sampling rate in Hertz&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fps&lt;/code&gt;: Frame rate&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also filtering work for comparisons &lt;code&gt;=&lt;/code&gt; (equals), &lt;code&gt;^=&lt;/code&gt; (starts with), &lt;code&gt;$=&lt;/code&gt; (ends with), &lt;code&gt;*=&lt;/code&gt; (contains) and following string meta fields:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ext&lt;/code&gt;: File extension&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;acodec&lt;/code&gt;: Name of the audio codec in use&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vcodec&lt;/code&gt;: Name of the video codec in use&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;container&lt;/code&gt;: Name of the container format&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;protocol&lt;/code&gt;: The protocol that will be used for the actual download, lower-case (&lt;code&gt;http&lt;/code&gt;, &lt;code&gt;https&lt;/code&gt;, &lt;code&gt;rtsp&lt;/code&gt;, &lt;code&gt;rtmp&lt;/code&gt;, &lt;code&gt;rtmpe&lt;/code&gt;, &lt;code&gt;mms&lt;/code&gt;, &lt;code&gt;f4m&lt;/code&gt;, &lt;code&gt;ism&lt;/code&gt;, &lt;code&gt;http_dash_segments&lt;/code&gt;, &lt;code&gt;m3u8&lt;/code&gt;, or &lt;code&gt;m3u8_native&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;format_id&lt;/code&gt;: A short description of the format&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;language&lt;/code&gt;: Language code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Any string comparison may be prefixed with negation &lt;code&gt;!&lt;/code&gt; in order to produce an opposite comparison, e.g. &lt;code&gt;!*=&lt;/code&gt; (does not contain).&lt;/p&gt; &#xA;&lt;p&gt;Note that none of the aforementioned meta fields are guaranteed to be present since this solely depends on the metadata obtained by particular extractor, i.e. the metadata offered by the video hoster.&lt;/p&gt; &#xA;&lt;p&gt;Formats for which the value is not known are excluded unless you put a question mark (&lt;code&gt;?&lt;/code&gt;) after the operator. You can combine format filters, so &lt;code&gt;-f &#34;[height &amp;lt;=? 720][tbr&amp;gt;500]&#34;&lt;/code&gt; selects up to 720p videos (or videos where the height is not known) with a bitrate of at least 500 KBit/s.&lt;/p&gt; &#xA;&lt;p&gt;You can merge the video and audio of two formats into a single file using &lt;code&gt;-f &amp;lt;video-format&amp;gt;+&amp;lt;audio-format&amp;gt;&lt;/code&gt; (requires ffmpeg or avconv installed), for example &lt;code&gt;-f bestvideo+bestaudio&lt;/code&gt; will download the best video-only format, the best audio-only format and mux them together with ffmpeg/avconv.&lt;/p&gt; &#xA;&lt;p&gt;Format selectors can also be grouped using parentheses, for example if you want to download the best mp4 and webm formats with a height lower than 480 you can use &lt;code&gt;-f &#39;(mp4,webm)[height&amp;lt;480]&#39;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Since the end of April 2015 and version 2015.04.26, youtube-dl uses &lt;code&gt;-f bestvideo+bestaudio/best&lt;/code&gt; as the default format selection (see &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/issues/5447&#34;&gt;#5447&lt;/a&gt;, &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/issues/5456&#34;&gt;#5456&lt;/a&gt;). If ffmpeg or avconv are installed this results in downloading &lt;code&gt;bestvideo&lt;/code&gt; and &lt;code&gt;bestaudio&lt;/code&gt; separately and muxing them together into a single file giving the best overall quality available. Otherwise it falls back to &lt;code&gt;best&lt;/code&gt; and results in downloading the best available quality served as a single file. &lt;code&gt;best&lt;/code&gt; is also needed for videos that don&#39;t come from YouTube because they don&#39;t provide the audio and video in two different files. If you want to only download some DASH formats (for example if you are not interested in getting videos with a resolution higher than 1080p), you can add &lt;code&gt;-f bestvideo[height&amp;lt;=?1080]+bestaudio/best&lt;/code&gt; to your configuration file. Note that if you use youtube-dl to stream to &lt;code&gt;stdout&lt;/code&gt; (and most likely to pipe it to your media player then), i.e. you explicitly specify output template as &lt;code&gt;-o -&lt;/code&gt;, youtube-dl still uses &lt;code&gt;-f best&lt;/code&gt; format selection in order to start content delivery immediately to your player and not to wait until &lt;code&gt;bestvideo&lt;/code&gt; and &lt;code&gt;bestaudio&lt;/code&gt; are downloaded and muxed.&lt;/p&gt; &#xA;&lt;p&gt;If you want to preserve the old format selection behavior (prior to youtube-dl 2015.04.26), i.e. you want to download the best available quality media served as a single file, you should explicitly specify your choice with &lt;code&gt;-f best&lt;/code&gt;. You may want to add it to the &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#configuration&#34;&gt;configuration file&lt;/a&gt; in order not to type it every time you run youtube-dl.&lt;/p&gt; &#xA;&lt;h4&gt;Format selection examples&lt;/h4&gt; &#xA;&lt;p&gt;Note that on Windows you may need to use double quotes instead of single.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Download best mp4 format available or any other best if no mp4 available&#xA;$ youtube-dl -f &#39;bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best&#39;&#xA;&#xA;# Download best format available but no better than 480p&#xA;$ youtube-dl -f &#39;bestvideo[height&amp;lt;=480]+bestaudio/best[height&amp;lt;=480]&#39;&#xA;&#xA;# Download best video only format but no bigger than 50 MB&#xA;$ youtube-dl -f &#39;best[filesize&amp;lt;50M]&#39;&#xA;&#xA;# Download best format available via direct link over HTTP/HTTPS protocol&#xA;$ youtube-dl -f &#39;(bestvideo+bestaudio/best)[protocol^=http]&#39;&#xA;&#xA;# Download the best video format and the best audio format without merging them&#xA;$ youtube-dl -f &#39;bestvideo,bestaudio&#39; -o &#39;%(title)s.f%(format_id)s.%(ext)s&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that in the last example, an output template is recommended as bestvideo and bestaudio may have the same file name.&lt;/p&gt; &#xA;&lt;h1&gt;VIDEO SELECTION&lt;/h1&gt; &#xA;&lt;p&gt;Videos can be filtered by their upload date using the options &lt;code&gt;--date&lt;/code&gt;, &lt;code&gt;--datebefore&lt;/code&gt; or &lt;code&gt;--dateafter&lt;/code&gt;. They accept dates in two formats:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Absolute dates: Dates in the format &lt;code&gt;YYYYMMDD&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Relative dates: Dates in the format &lt;code&gt;(now|today)[+-][0-9](day|week|month|year)(s)?&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Download only the videos uploaded in the last 6 months&#xA;$ youtube-dl --dateafter now-6months&#xA;&#xA;# Download only the videos uploaded on January 1, 1970&#xA;$ youtube-dl --date 19700101&#xA;&#xA;$ # Download only the videos uploaded in the 200x decade&#xA;$ youtube-dl --dateafter 20000101 --datebefore 20091231&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;h3&gt;How do I update youtube-dl?&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;ve followed &lt;a href=&#34;https://ytdl-org.github.io/youtube-dl/download.html&#34;&gt;our manual installation instructions&lt;/a&gt;, you can simply run &lt;code&gt;youtube-dl -U&lt;/code&gt; (or, on Linux, &lt;code&gt;sudo youtube-dl -U&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;If you have used pip, a simple &lt;code&gt;sudo pip install -U youtube-dl&lt;/code&gt; is sufficient to update.&lt;/p&gt; &#xA;&lt;p&gt;If you have installed youtube-dl using a package manager like &lt;em&gt;apt-get&lt;/em&gt; or &lt;em&gt;yum&lt;/em&gt;, use the standard system update mechanism to update. Note that distribution packages are often outdated. As a rule of thumb, youtube-dl releases at least once a month, and often weekly or even daily. Simply go to &lt;a href=&#34;https://yt-dl.org&#34;&gt;https://yt-dl.org&lt;/a&gt; to find out the current version. Unfortunately, there is nothing we youtube-dl developers can do if your distribution serves a really outdated version. You can (and should) complain to your distribution in their bugtracker or support forum.&lt;/p&gt; &#xA;&lt;p&gt;As a last resort, you can also uninstall the version installed by your package manager and follow our manual installation instructions. For that, remove the distribution&#39;s package, with a line like&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get remove -y youtube-dl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Afterwards, simply follow &lt;a href=&#34;https://ytdl-org.github.io/youtube-dl/download.html&#34;&gt;our manual installation instructions&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl&#xA;sudo chmod a+rx /usr/local/bin/youtube-dl&#xA;hash -r&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Again, from then on you&#39;ll be able to update with &lt;code&gt;sudo youtube-dl -U&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;youtube-dl is extremely slow to start on Windows&lt;/h3&gt; &#xA;&lt;p&gt;Add a file exclusion for &lt;code&gt;youtube-dl.exe&lt;/code&gt; in Windows Defender settings.&lt;/p&gt; &#xA;&lt;h3&gt;I&#39;m getting an error &lt;code&gt;Unable to extract OpenGraph title&lt;/code&gt; on YouTube playlists&lt;/h3&gt; &#xA;&lt;p&gt;YouTube changed their playlist format in March 2014 and later on, so you&#39;ll need at least youtube-dl 2014.07.25 to download all YouTube videos.&lt;/p&gt; &#xA;&lt;p&gt;If you have installed youtube-dl with a package manager, pip, setup.py or a tarball, please use that to update. Note that Ubuntu packages do not seem to get updated anymore. Since we are not affiliated with Ubuntu, there is little we can do. Feel free to &lt;a href=&#34;https://bugs.launchpad.net/ubuntu/+source/youtube-dl/+filebug&#34;&gt;report bugs&lt;/a&gt; to the &lt;a href=&#34;mailto:ubuntu-motu@lists.ubuntu.com?subject=outdated%20version%20of%20youtube-dl&#34;&gt;Ubuntu packaging people&lt;/a&gt; - all they have to do is update the package to a somewhat recent version. See above for a way to update.&lt;/p&gt; &#xA;&lt;h3&gt;I&#39;m getting an error when trying to use output template: &lt;code&gt;error: using output template conflicts with using title, video ID or auto number&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Make sure you are not using &lt;code&gt;-o&lt;/code&gt; with any of these options &lt;code&gt;-t&lt;/code&gt;, &lt;code&gt;--title&lt;/code&gt;, &lt;code&gt;--id&lt;/code&gt;, &lt;code&gt;-A&lt;/code&gt; or &lt;code&gt;--auto-number&lt;/code&gt; set in command line or in a configuration file. Remove the latter if any.&lt;/p&gt; &#xA;&lt;h3&gt;Do I always have to pass &lt;code&gt;-citw&lt;/code&gt;?&lt;/h3&gt; &#xA;&lt;p&gt;By default, youtube-dl intends to have the best options (incidentally, if you have a convincing case that these should be different, &lt;a href=&#34;https://yt-dl.org/bug&#34;&gt;please file an issue where you explain that&lt;/a&gt;). Therefore, it is unnecessary and sometimes harmful to copy long option strings from webpages. In particular, the only option out of &lt;code&gt;-citw&lt;/code&gt; that is regularly useful is &lt;code&gt;-i&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Can you please put the &lt;code&gt;-b&lt;/code&gt; option back?&lt;/h3&gt; &#xA;&lt;p&gt;Most people asking this question are not aware that youtube-dl now defaults to downloading the highest available quality as reported by YouTube, which will be 1080p or 720p in some cases, so you no longer need the &lt;code&gt;-b&lt;/code&gt; option. For some specific videos, maybe YouTube does not report them to be available in a specific high quality format you&#39;re interested in. In that case, simply request it with the &lt;code&gt;-f&lt;/code&gt; option and youtube-dl will try to download it.&lt;/p&gt; &#xA;&lt;h3&gt;I get HTTP error 402 when trying to download a video. What&#39;s this?&lt;/h3&gt; &#xA;&lt;p&gt;Apparently YouTube requires you to pass a CAPTCHA test if you download too much. We&#39;re &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/issues/154&#34;&gt;considering to provide a way to let you solve the CAPTCHA&lt;/a&gt;, but at the moment, your best course of action is pointing a web browser to the youtube URL, solving the CAPTCHA, and restart youtube-dl.&lt;/p&gt; &#xA;&lt;h3&gt;Do I need any other programs?&lt;/h3&gt; &#xA;&lt;p&gt;youtube-dl works fine on its own on most sites. However, if you want to convert video/audio, you&#39;ll need &lt;a href=&#34;https://libav.org/&#34;&gt;avconv&lt;/a&gt; or &lt;a href=&#34;https://www.ffmpeg.org/&#34;&gt;ffmpeg&lt;/a&gt;. On some sites - most notably YouTube - videos can be retrieved in a higher quality format without sound. youtube-dl will detect whether avconv/ffmpeg is present and automatically pick the best option.&lt;/p&gt; &#xA;&lt;p&gt;Videos or video formats streamed via RTMP protocol can only be downloaded when &lt;a href=&#34;https://rtmpdump.mplayerhq.hu/&#34;&gt;rtmpdump&lt;/a&gt; is installed. Downloading MMS and RTSP videos requires either &lt;a href=&#34;https://mplayerhq.hu/&#34;&gt;mplayer&lt;/a&gt; or &lt;a href=&#34;https://mpv.io/&#34;&gt;mpv&lt;/a&gt; to be installed.&lt;/p&gt; &#xA;&lt;h3&gt;I have downloaded a video but how can I play it?&lt;/h3&gt; &#xA;&lt;p&gt;Once the video is fully downloaded, use any video player, such as &lt;a href=&#34;https://mpv.io/&#34;&gt;mpv&lt;/a&gt;, &lt;a href=&#34;https://www.videolan.org/&#34;&gt;vlc&lt;/a&gt; or &lt;a href=&#34;https://www.mplayerhq.hu/&#34;&gt;mplayer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;I extracted a video URL with &lt;code&gt;-g&lt;/code&gt;, but it does not play on another machine / in my web browser.&lt;/h3&gt; &#xA;&lt;p&gt;It depends a lot on the service. In many cases, requests for the video (to download/play it) must come from the same IP address and with the same cookies and/or HTTP headers. Use the &lt;code&gt;--cookies&lt;/code&gt; option to write the required cookies into a file, and advise your downloader to read cookies from that file. Some sites also require a common user agent to be used, use &lt;code&gt;--dump-user-agent&lt;/code&gt; to see the one in use by youtube-dl. You can also get necessary cookies and HTTP headers from JSON output obtained with &lt;code&gt;--dump-json&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It may be beneficial to use IPv6; in some cases, the restrictions are only applied to IPv4. Some services (sometimes only for a subset of videos) do not restrict the video URL by IP address, cookie, or user-agent, but these are the exception rather than the rule.&lt;/p&gt; &#xA;&lt;p&gt;Please bear in mind that some URL protocols are &lt;strong&gt;not&lt;/strong&gt; supported by browsers out of the box, including RTMP. If you are using &lt;code&gt;-g&lt;/code&gt;, your own downloader must support these as well.&lt;/p&gt; &#xA;&lt;p&gt;If you want to play the video on a machine that is not running youtube-dl, you can relay the video content from the machine that runs youtube-dl. You can use &lt;code&gt;-o -&lt;/code&gt; to let youtube-dl stream a video to stdout, or simply allow the player to download the files written by youtube-dl in turn.&lt;/p&gt; &#xA;&lt;h3&gt;ERROR: no fmt_url_map or conn information found in video info&lt;/h3&gt; &#xA;&lt;p&gt;YouTube has switched to a new video info format in July 2011 which is not supported by old versions of youtube-dl. See &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#how-do-i-update-youtube-dl&#34;&gt;above&lt;/a&gt; for how to update youtube-dl.&lt;/p&gt; &#xA;&lt;h3&gt;ERROR: unable to download video&lt;/h3&gt; &#xA;&lt;p&gt;YouTube requires an additional signature since September 2012 which is not supported by old versions of youtube-dl. See &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#how-do-i-update-youtube-dl&#34;&gt;above&lt;/a&gt; for how to update youtube-dl.&lt;/p&gt; &#xA;&lt;h3&gt;Video URL contains an ampersand and I&#39;m getting some strange output &lt;code&gt;[1] 2839&lt;/code&gt; or &lt;code&gt;&#39;v&#39; is not recognized as an internal or external command&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;That&#39;s actually the output from your shell. Since ampersand is one of the special shell characters it&#39;s interpreted by the shell preventing you from passing the whole URL to youtube-dl. To disable your shell from interpreting the ampersands (or any other special characters) you have to either put the whole URL in quotes or escape them with a backslash (which approach will work depends on your shell).&lt;/p&gt; &#xA;&lt;p&gt;For example if your URL is &lt;a href=&#34;https://www.youtube.com/watch?t=4&amp;amp;v=BaW_jenozKc&#34;&gt;https://www.youtube.com/watch?t=4&amp;amp;v=BaW_jenozKc&lt;/a&gt; you should end up with following command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;youtube-dl &#39;https://www.youtube.com/watch?t=4&amp;amp;v=BaW_jenozKc&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;youtube-dl https://www.youtube.com/watch?t=4\&amp;amp;v=BaW_jenozKc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For Windows you have to use the double quotes:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;youtube-dl &#34;https://www.youtube.com/watch?t=4&amp;amp;v=BaW_jenozKc&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ExtractorError: Could not find JS function u&#39;OF&#39;&lt;/h3&gt; &#xA;&lt;p&gt;In February 2015, the new YouTube player contained a character sequence in a string that was misinterpreted by old versions of youtube-dl. See &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#how-do-i-update-youtube-dl&#34;&gt;above&lt;/a&gt; for how to update youtube-dl.&lt;/p&gt; &#xA;&lt;h3&gt;HTTP Error 429: Too Many Requests or 402: Payment Required&lt;/h3&gt; &#xA;&lt;p&gt;These two error codes indicate that the service is blocking your IP address because of overuse. Usually this is a soft block meaning that you can gain access again after solving CAPTCHA. Just open a browser and solve a CAPTCHA the service suggests you and after that &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#how-do-i-pass-cookies-to-youtube-dl&#34;&gt;pass cookies&lt;/a&gt; to youtube-dl. Note that if your machine has multiple external IPs then you should also pass exactly the same IP you&#39;ve used for solving CAPTCHA with &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#network-options&#34;&gt;&lt;code&gt;--source-address&lt;/code&gt;&lt;/a&gt;. Also you may need to pass a &lt;code&gt;User-Agent&lt;/code&gt; HTTP header of your browser with &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#workarounds&#34;&gt;&lt;code&gt;--user-agent&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If this is not the case (no CAPTCHA suggested to solve by the service) then you can contact the service and ask them to unblock your IP address, or - if you have acquired a whitelisted IP address already - use the &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#network-options&#34;&gt;&lt;code&gt;--proxy&lt;/code&gt; or &lt;code&gt;--source-address&lt;/code&gt; options&lt;/a&gt; to select another IP address.&lt;/p&gt; &#xA;&lt;h3&gt;SyntaxError: Non-ASCII character&lt;/h3&gt; &#xA;&lt;p&gt;The error&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;File &#34;youtube-dl&#34;, line 2&#xA;SyntaxError: Non-ASCII character &#39;\x93&#39; ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;means you&#39;re using an outdated version of Python. Please update to Python 2.6 or 2.7.&lt;/p&gt; &#xA;&lt;h3&gt;What is this binary file? Where has the code gone?&lt;/h3&gt; &#xA;&lt;p&gt;Since June 2012 (&lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/issues/342&#34;&gt;#342&lt;/a&gt;) youtube-dl is packed as an executable zipfile, simply unzip it (might need renaming to &lt;code&gt;youtube-dl.zip&lt;/code&gt; first on some systems) or clone the git repository, as laid out above. If you modify the code, you can run it by executing the &lt;code&gt;__main__.py&lt;/code&gt; file. To recompile the executable, run &lt;code&gt;make youtube-dl&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;The exe throws an error due to missing &lt;code&gt;MSVCR100.dll&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To run the exe you need to install first the &lt;a href=&#34;https://download.microsoft.com/download/1/6/5/165255E7-1014-4D0A-B094-B6A430A6BFFC/vcredist_x86.exe&#34;&gt;Microsoft Visual C++ 2010 Service Pack 1 Redistributable Package (x86)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;On Windows, how should I set up ffmpeg and youtube-dl? Where should I put the exe files?&lt;/h3&gt; &#xA;&lt;p&gt;If you put youtube-dl and ffmpeg in the same directory that you&#39;re running the command from, it will work, but that&#39;s rather cumbersome.&lt;/p&gt; &#xA;&lt;p&gt;To make a different directory work - either for ffmpeg, or for youtube-dl, or for both - simply create the directory (say, &lt;code&gt;C:\bin&lt;/code&gt;, or &lt;code&gt;C:\Users\&amp;lt;User name&amp;gt;\bin&lt;/code&gt;), put all the executables directly in there, and then &lt;a href=&#34;https://www.java.com/en/download/help/path.xml&#34;&gt;set your PATH environment variable&lt;/a&gt; to include that directory.&lt;/p&gt; &#xA;&lt;p&gt;From then on, after restarting your shell, you will be able to access both youtube-dl and ffmpeg (and youtube-dl will be able to find ffmpeg) by simply typing &lt;code&gt;youtube-dl&lt;/code&gt; or &lt;code&gt;ffmpeg&lt;/code&gt;, no matter what directory you&#39;re in.&lt;/p&gt; &#xA;&lt;h3&gt;How do I put downloads into a specific folder?&lt;/h3&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;-o&lt;/code&gt; to specify an &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#output-template&#34;&gt;output template&lt;/a&gt;, for example &lt;code&gt;-o &#34;/home/user/videos/%(title)s-%(id)s.%(ext)s&#34;&lt;/code&gt;. If you want this for all of your downloads, put the option into your &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#configuration&#34;&gt;configuration file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;How do I download a video starting with a &lt;code&gt;-&lt;/code&gt;?&lt;/h3&gt; &#xA;&lt;p&gt;Either prepend &lt;code&gt;https://www.youtube.com/watch?v=&lt;/code&gt; or separate the ID from the options with &lt;code&gt;--&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;youtube-dl -- -wNyEUrxzFU&#xA;youtube-dl &#34;https://www.youtube.com/watch?v=-wNyEUrxzFU&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How do I pass cookies to youtube-dl?&lt;/h3&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--cookies&lt;/code&gt; option, for example &lt;code&gt;--cookies /path/to/cookies/file.txt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In order to extract cookies from browser use any conforming browser extension for exporting cookies. For example, &lt;a href=&#34;https://chrome.google.com/webstore/detail/get-cookiestxt/bgaddhkoddajcdgocldbbfleckgcbcid/&#34;&gt;Get cookies.txt&lt;/a&gt; (for Chrome) or &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/cookies-txt/&#34;&gt;cookies.txt&lt;/a&gt; (for Firefox).&lt;/p&gt; &#xA;&lt;p&gt;Note that the cookies file must be in Mozilla/Netscape format and the first line of the cookies file must be either &lt;code&gt;# HTTP Cookie File&lt;/code&gt; or &lt;code&gt;# Netscape HTTP Cookie File&lt;/code&gt;. Make sure you have correct &lt;a href=&#34;https://en.wikipedia.org/wiki/Newline&#34;&gt;newline format&lt;/a&gt; in the cookies file and convert newlines if necessary to correspond with your OS, namely &lt;code&gt;CRLF&lt;/code&gt; (&lt;code&gt;\r\n&lt;/code&gt;) for Windows and &lt;code&gt;LF&lt;/code&gt; (&lt;code&gt;\n&lt;/code&gt;) for Unix and Unix-like systems (Linux, macOS, etc.). &lt;code&gt;HTTP Error 400: Bad Request&lt;/code&gt; when using &lt;code&gt;--cookies&lt;/code&gt; is a good sign of invalid newline format.&lt;/p&gt; &#xA;&lt;p&gt;Passing cookies to youtube-dl is a good way to workaround login when a particular extractor does not implement it explicitly. Another use case is working around &lt;a href=&#34;https://en.wikipedia.org/wiki/CAPTCHA&#34;&gt;CAPTCHA&lt;/a&gt; some websites require you to solve in particular cases in order to get access (e.g. YouTube, CloudFlare).&lt;/p&gt; &#xA;&lt;h3&gt;How do I stream directly to media player?&lt;/h3&gt; &#xA;&lt;p&gt;You will first need to tell youtube-dl to stream media to stdout with &lt;code&gt;-o -&lt;/code&gt;, and also tell your media player to read from stdin (it must be capable of this for streaming) and then pipe former to latter. For example, streaming to &lt;a href=&#34;https://www.videolan.org/&#34;&gt;vlc&lt;/a&gt; can be achieved with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;youtube-dl -o - &#34;https://www.youtube.com/watch?v=BaW_jenozKcj&#34; | vlc -&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How do I download only new videos from a playlist?&lt;/h3&gt; &#xA;&lt;p&gt;Use download-archive feature. With this feature you should initially download the complete playlist with &lt;code&gt;--download-archive /path/to/download/archive/file.txt&lt;/code&gt; that will record identifiers of all the videos in a special file. Each subsequent run with the same &lt;code&gt;--download-archive&lt;/code&gt; will download only new videos and skip all videos that have been downloaded before. Note that only successful downloads are recorded in the file.&lt;/p&gt; &#xA;&lt;p&gt;For example, at first,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;youtube-dl --download-archive archive.txt &#34;https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will download the complete &lt;code&gt;PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re&lt;/code&gt; playlist and create a file &lt;code&gt;archive.txt&lt;/code&gt;. Each subsequent run will only download new videos if any:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;youtube-dl --download-archive archive.txt &#34;https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Should I add &lt;code&gt;--hls-prefer-native&lt;/code&gt; into my config?&lt;/h3&gt; &#xA;&lt;p&gt;When youtube-dl detects an HLS video, it can download it either with the built-in downloader or ffmpeg. Since many HLS streams are slightly invalid and ffmpeg/youtube-dl each handle some invalid cases better than the other, there is an option to switch the downloader if needed.&lt;/p&gt; &#xA;&lt;p&gt;When youtube-dl knows that one particular downloader works better for a given website, that downloader will be picked. Otherwise, youtube-dl will pick the best downloader for general compatibility, which at the moment happens to be ffmpeg. This choice may change in future versions of youtube-dl, with improvements of the built-in downloader and/or ffmpeg.&lt;/p&gt; &#xA;&lt;p&gt;In particular, the generic extractor (used when your website is not in the &lt;a href=&#34;https://ytdl-org.github.io/youtube-dl/supportedsites.html&#34;&gt;list of supported sites by youtube-dl&lt;/a&gt; cannot mandate one specific downloader.&lt;/p&gt; &#xA;&lt;p&gt;If you put either &lt;code&gt;--hls-prefer-native&lt;/code&gt; or &lt;code&gt;--hls-prefer-ffmpeg&lt;/code&gt; into your configuration, a different subset of videos will fail to download correctly. Instead, it is much better to &lt;a href=&#34;https://yt-dl.org/bug&#34;&gt;file an issue&lt;/a&gt; or a pull request which details why the native or the ffmpeg HLS downloader is a better choice for your use case.&lt;/p&gt; &#xA;&lt;h3&gt;Can you add support for this anime video site, or site which shows current movies for free?&lt;/h3&gt; &#xA;&lt;p&gt;As a matter of policy (as well as legality), youtube-dl does not include support for services that specialize in infringing copyright. As a rule of thumb, if you cannot easily find a video that the service is quite obviously allowed to distribute (i.e. that has been uploaded by the creator, the creator&#39;s distributor, or is published under a free license), the service is probably unfit for inclusion to youtube-dl.&lt;/p&gt; &#xA;&lt;p&gt;A note on the service that they don&#39;t host the infringing content, but just link to those who do, is evidence that the service should &lt;strong&gt;not&lt;/strong&gt; be included into youtube-dl. The same goes for any DMCA note when the whole front page of the service is filled with videos they are not allowed to distribute. A &#34;fair use&#34; note is equally unconvincing if the service shows copyright-protected videos in full without authorization.&lt;/p&gt; &#xA;&lt;p&gt;Support requests for services that &lt;strong&gt;do&lt;/strong&gt; purchase the rights to distribute their content are perfectly fine though. If in doubt, you can simply include a source that mentions the legitimate purchase of content.&lt;/p&gt; &#xA;&lt;h3&gt;How can I speed up work on my issue?&lt;/h3&gt; &#xA;&lt;p&gt;(Also known as: Help, my important issue not being solved!) The youtube-dl core developer team is quite small. While we do our best to solve as many issues as possible, sometimes that can take quite a while. To speed up your issue, here&#39;s what you can do:&lt;/p&gt; &#xA;&lt;p&gt;First of all, please do report the issue &lt;a href=&#34;https://yt-dl.org/bugs&#34;&gt;at our issue tracker&lt;/a&gt;. That allows us to coordinate all efforts by users and developers, and serves as a unified point. Unfortunately, the youtube-dl project has grown too large to use personal email as an effective communication channel.&lt;/p&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#bugs&#34;&gt;bug reporting instructions&lt;/a&gt; below. A lot of bugs lack all the necessary information. If you can, offer proxy, VPN, or shell access to the youtube-dl developers. If you are able to, test the issue from multiple computers in multiple countries to exclude local censorship or misconfiguration issues.&lt;/p&gt; &#xA;&lt;p&gt;If nobody is interested in solving your issue, you are welcome to take matters into your own hands and submit a pull request (or coerce/pay somebody else to do so).&lt;/p&gt; &#xA;&lt;p&gt;Feel free to bump the issue from time to time by writing a small comment (&#34;Issue is still present in youtube-dl version ...from France, but fixed from Belgium&#34;), but please not more than once a month. Please do not declare your issue as &lt;code&gt;important&lt;/code&gt; or &lt;code&gt;urgent&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;How can I detect whether a given URL is supported by youtube-dl?&lt;/h3&gt; &#xA;&lt;p&gt;For one, have a look at the &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/docs/supportedsites.md&#34;&gt;list of supported sites&lt;/a&gt;. Note that it can sometimes happen that the site changes its URL scheme (say, from &lt;a href=&#34;https://example.com/video/1234567&#34;&gt;https://example.com/video/1234567&lt;/a&gt; to &lt;a href=&#34;https://example.com/v/1234567&#34;&gt;https://example.com/v/1234567&lt;/a&gt; ) and youtube-dl reports an URL of a service in that list as unsupported. In that case, simply report a bug.&lt;/p&gt; &#xA;&lt;p&gt;It is &lt;em&gt;not&lt;/em&gt; possible to detect whether a URL is supported or not. That&#39;s because youtube-dl contains a generic extractor which matches &lt;strong&gt;all&lt;/strong&gt; URLs. You may be tempted to disable, exclude, or remove the generic extractor, but the generic extractor not only allows users to extract videos from lots of websites that embed a video from another service, but may also be used to extract video from a service that it&#39;s hosting itself. Therefore, we neither recommend nor support disabling, excluding, or removing the generic extractor.&lt;/p&gt; &#xA;&lt;p&gt;If you want to find out whether a given URL is supported, simply call youtube-dl with it. If you get no videos back, chances are the URL is either not referring to a video or unsupported. You can find out which by examining the output (if you run youtube-dl on the console) or catching an &lt;code&gt;UnsupportedError&lt;/code&gt; exception if you run it from a Python program.&lt;/p&gt; &#xA;&lt;h1&gt;Why do I need to go through that much red tape when filing bugs?&lt;/h1&gt; &#xA;&lt;p&gt;Before we had the issue template, despite our extensive &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#bugs&#34;&gt;bug reporting instructions&lt;/a&gt;, about 80% of the issue reports we got were useless, for instance because people used ancient versions hundreds of releases old, because of simple syntactic errors (not in youtube-dl but in general shell usage), because the problem was already reported multiple times before, because people did not actually read an error message, even if it said &#34;please install ffmpeg&#34;, because people did not mention the URL they were trying to download and many more simple, easy-to-avoid problems, many of whom were totally unrelated to youtube-dl.&lt;/p&gt; &#xA;&lt;p&gt;youtube-dl is an open-source project manned by too few volunteers, so we&#39;d rather spend time fixing bugs where we are certain none of those simple problems apply, and where we can be reasonably confident to be able to reproduce the issue without asking the reporter repeatedly. As such, the output of &lt;code&gt;youtube-dl -v YOUR_URL_HERE&lt;/code&gt; is really all that&#39;s required to file an issue. The issue template also guides you through some basic steps you can do, such as checking that your version of youtube-dl is current.&lt;/p&gt; &#xA;&lt;h1&gt;DEVELOPER INSTRUCTIONS&lt;/h1&gt; &#xA;&lt;p&gt;Most users do not need to build youtube-dl and can &lt;a href=&#34;https://ytdl-org.github.io/youtube-dl/download.html&#34;&gt;download the builds&lt;/a&gt; or get them from their distribution.&lt;/p&gt; &#xA;&lt;p&gt;To run youtube-dl as a developer, you don&#39;t need to build anything either. Simply execute&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -m youtube_dl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the test, simply invoke your favorite test runner, or execute a test file directly; any of the following work:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -m unittest discover&#xA;python test/test_download.py&#xA;nosetests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See item 6 of &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#adding-support-for-a-new-site&#34;&gt;new extractor tutorial&lt;/a&gt; for how to run extractor specific test cases.&lt;/p&gt; &#xA;&lt;p&gt;If you want to create a build of youtube-dl yourself, you&#39;ll need&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;python&lt;/li&gt; &#xA; &lt;li&gt;make (only GNU make is supported)&lt;/li&gt; &#xA; &lt;li&gt;pandoc&lt;/li&gt; &#xA; &lt;li&gt;zip&lt;/li&gt; &#xA; &lt;li&gt;nosetests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Adding support for a new site&lt;/h3&gt; &#xA;&lt;p&gt;If you want to add support for a new site, first of all &lt;strong&gt;make sure&lt;/strong&gt; this site is &lt;strong&gt;not dedicated to &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/README.md#can-you-add-support-for-this-anime-video-site-or-site-which-shows-current-movies-for-free&#34;&gt;copyright infringement&lt;/a&gt;&lt;/strong&gt;. youtube-dl does &lt;strong&gt;not support&lt;/strong&gt; such sites thus pull requests adding support for them &lt;strong&gt;will be rejected&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;After you have ensured this site is distributing its content legally, you can follow this quick list (assuming your service is called &lt;code&gt;yourextractor&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/fork&#34;&gt;Fork this repository&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check out the source code with:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone git@github.com:YOUR_GITHUB_USERNAME/youtube-dl.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start a new git branch with&lt;/p&gt; &lt;pre&gt;&lt;code&gt; cd youtube-dl&#xA; git checkout -b yourextractor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start with this simple template and save it to &lt;code&gt;youtube_dl/extractor/yourextractor.py&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# coding: utf-8&#xA;from __future__ import unicode_literals&#xA;&#xA;from .common import InfoExtractor&#xA;&#xA;&#xA;class YourExtractorIE(InfoExtractor):&#xA;    _VALID_URL = r&#39;https?://(?:www\.)?yourextractor\.com/watch/(?P&amp;lt;id&amp;gt;[0-9]+)&#39;&#xA;    _TEST = {&#xA;        &#39;url&#39;: &#39;https://yourextractor.com/watch/42&#39;,&#xA;        &#39;md5&#39;: &#39;TODO: md5 sum of the first 10241 bytes of the video file (use --test)&#39;,&#xA;        &#39;info_dict&#39;: {&#xA;            &#39;id&#39;: &#39;42&#39;,&#xA;            &#39;ext&#39;: &#39;mp4&#39;,&#xA;            &#39;title&#39;: &#39;Video title goes here&#39;,&#xA;            &#39;thumbnail&#39;: r&#39;re:^https?://.*\.jpg$&#39;,&#xA;            # TODO more properties, either as:&#xA;            # * A value&#xA;            # * MD5 checksum; start the string with md5:&#xA;            # * A regular expression; start the string with re:&#xA;            # * Any Python type (for example int or float)&#xA;        }&#xA;    }&#xA;&#xA;    def _real_extract(self, url):&#xA;        video_id = self._match_id(url)&#xA;        webpage = self._download_webpage(url, video_id)&#xA;&#xA;        # TODO more code goes here, for example ...&#xA;        title = self._html_search_regex(r&#39;&amp;lt;h1&amp;gt;(.+?)&amp;lt;/h1&amp;gt;&#39;, webpage, &#39;title&#39;)&#xA;&#xA;        return {&#xA;            &#39;id&#39;: video_id,&#xA;            &#39;title&#39;: title,&#xA;            &#39;description&#39;: self._og_search_description(webpage),&#xA;            &#39;uploader&#39;: self._search_regex(r&#39;&amp;lt;div[^&amp;gt;]+id=&#34;uploader&#34;[^&amp;gt;]*&amp;gt;([^&amp;lt;]+)&amp;lt;&#39;, webpage, &#39;uploader&#39;, fatal=False),&#xA;            # TODO more properties (see youtube_dl/extractor/common.py)&#xA;        }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add an import in &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/raw/master/youtube_dl/extractor/extractors.py&#34;&gt;&lt;code&gt;youtube_dl/extractor/extractors.py&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;python test/test_download.py TestDownload.test_YourExtractor&lt;/code&gt;. This &lt;em&gt;should fail&lt;/em&gt; at first, but you can continually re-run it until you&#39;re done. If you decide to add more than one test (actually, test case) then rename &lt;code&gt;_TEST&lt;/code&gt; to &lt;code&gt;_TESTS&lt;/code&gt; and make it into a list of dictionaries. The tests will then be named &lt;code&gt;TestDownload.test_YourExtractor&lt;/code&gt;, &lt;code&gt;TestDownload.test_YourExtractor_1&lt;/code&gt;, &lt;code&gt;TestDownload.test_YourExtractor_2&lt;/code&gt;, etc. Note:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;the test names use the extractor class name &lt;strong&gt;without the trailing &lt;code&gt;IE&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;tests with &lt;code&gt;only_matching&lt;/code&gt; key in test&#39;s dict are not counted.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Have a look at &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/raw/master/youtube_dl/extractor/common.py&#34;&gt;&lt;code&gt;youtube_dl/extractor/common.py&lt;/code&gt;&lt;/a&gt; for possible helper methods and a &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/raw/7f41a598b3fba1bcab2817de64a08941200aa3c8/youtube_dl/extractor/common.py#L94-L303&#34;&gt;detailed description of what your extractor should and may return&lt;/a&gt;. Add tests and code for as many as you want.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure your code follows &lt;a href=&#34;https://raw.githubusercontent.com/ytdl-org/youtube-dl/master/#youtube-dl-coding-conventions&#34;&gt;youtube-dl coding conventions&lt;/a&gt; and check the code with &lt;a href=&#34;https://flake8.pycqa.org/en/latest/index.html#quickstart&#34;&gt;flake8&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ flake8 youtube_dl/extractor/yourextractor.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure your code works under all &lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt; versions claimed supported by youtube-dl, namely 2.6, 2.7, and 3.2+.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When the tests pass, &lt;a href=&#34;https://git-scm.com/docs/git-add&#34;&gt;add&lt;/a&gt; the new files and &lt;a href=&#34;https://git-scm.com/docs/git-commit&#34;&gt;commit&lt;/a&gt; them and &lt;a href=&#34;https://git-scm.com/docs/git-push&#34;&gt;push&lt;/a&gt; the result, like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ git add youtube_dl/extractor/extractors.py&#xA;$ git add youtube_dl/extractor/yourextractor.py&#xA;$ git commit -m &#39;[yourextractor] Add new extractor&#39;&#xA;$ git push origin yourextractor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Finally, &lt;a href=&#34;https://help.github.com/articles/creating-a-pull-request&#34;&gt;create a pull request&lt;/a&gt;. We&#39;ll then review and merge it.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;In any case, thank you very much for your contributions!&lt;/p&gt; &#xA;&lt;h2&gt;youtube-dl coding conventions&lt;/h2&gt; &#xA;&lt;p&gt;This section introduces a guide lines for writing idiomatic, robust and future-proof extractor code.&lt;/p&gt; &#xA;&lt;p&gt;Extractors are very fragile by nature since they depend on the layout of the source data provided by 3rd party media hosters out of your control and this layout tends to change. As an extractor implementer your task is not only to write code that will extract media links and metadata correctly but also to minimize dependency on the source&#39;s layout and even to make the code foresee potential future changes and be ready for that. This is important because it will allow the extractor not to break on minor layout changes thus keeping old youtube-dl versions working. Even though this breakage issue is easily fixed by emitting a new version of youtube-dl with a fix incorporated, all the previous versions become broken in all repositories and distros&#39; packages that may not be so prompt in fetching the update from us. Needless to say, some non rolling release distros may never receive an update at all.&lt;/p&gt; &#xA;&lt;h3&gt;Mandatory and optional metafields&lt;/h3&gt; &#xA;&lt;p&gt;For extraction to work youtube-dl relies on metadata your extractor extracts and provides to youtube-dl expressed by an &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/raw/7f41a598b3fba1bcab2817de64a08941200aa3c8/youtube_dl/extractor/common.py#L94-L303&#34;&gt;information dictionary&lt;/a&gt; or simply &lt;em&gt;info dict&lt;/em&gt;. Only the following meta fields in the &lt;em&gt;info dict&lt;/em&gt; are considered mandatory for a successful extraction process by youtube-dl:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;id&lt;/code&gt; (media identifier)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;title&lt;/code&gt; (media title)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;url&lt;/code&gt; (media download URL) or &lt;code&gt;formats&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In fact only the last option is technically mandatory (i.e. if you can&#39;t figure out the download location of the media the extraction does not make any sense). But by convention youtube-dl also treats &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;title&lt;/code&gt; as mandatory. Thus the aforementioned metafields are the critical data that the extraction does not make any sense without and if any of them fail to be extracted then the extractor is considered completely broken.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/raw/7f41a598b3fba1bcab2817de64a08941200aa3c8/youtube_dl/extractor/common.py#L188-L303&#34;&gt;Any field&lt;/a&gt; apart from the aforementioned ones are considered &lt;strong&gt;optional&lt;/strong&gt;. That means that extraction should be &lt;strong&gt;tolerant&lt;/strong&gt; to situations when sources for these fields can potentially be unavailable (even if they are always available at the moment) and &lt;strong&gt;future-proof&lt;/strong&gt; in order not to break the extraction of general purpose mandatory fields.&lt;/p&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;p&gt;Say you have some source dictionary &lt;code&gt;meta&lt;/code&gt; that you&#39;ve fetched as JSON with HTTP request and it has a key &lt;code&gt;summary&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;meta = self._download_json(url, video_id)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Assume at this point &lt;code&gt;meta&lt;/code&gt;&#39;s layout is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;{&#xA;    ...&#xA;    &#34;summary&#34;: &#34;some fancy summary text&#34;,&#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Assume you want to extract &lt;code&gt;summary&lt;/code&gt; and put it into the resulting info dict as &lt;code&gt;description&lt;/code&gt;. Since &lt;code&gt;description&lt;/code&gt; is an optional meta field you should be ready that this key may be missing from the &lt;code&gt;meta&lt;/code&gt; dict, so that you should extract it like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;description = meta.get(&#39;summary&#39;)  # correct&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and not like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;description = meta[&#39;summary&#39;]  # incorrect&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The latter will break extraction process with &lt;code&gt;KeyError&lt;/code&gt; if &lt;code&gt;summary&lt;/code&gt; disappears from &lt;code&gt;meta&lt;/code&gt; at some later time but with the former approach extraction will just go ahead with &lt;code&gt;description&lt;/code&gt; set to &lt;code&gt;None&lt;/code&gt; which is perfectly fine (remember &lt;code&gt;None&lt;/code&gt; is equivalent to the absence of data).&lt;/p&gt; &#xA;&lt;p&gt;Similarly, you should pass &lt;code&gt;fatal=False&lt;/code&gt; when extracting optional data from a webpage with &lt;code&gt;_search_regex&lt;/code&gt;, &lt;code&gt;_html_search_regex&lt;/code&gt; or similar methods, for instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;description = self._search_regex(&#xA;    r&#39;&amp;lt;span[^&amp;gt;]+id=&#34;title&#34;[^&amp;gt;]*&amp;gt;([^&amp;lt;]+)&amp;lt;&#39;,&#xA;    webpage, &#39;description&#39;, fatal=False)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With &lt;code&gt;fatal&lt;/code&gt; set to &lt;code&gt;False&lt;/code&gt; if &lt;code&gt;_search_regex&lt;/code&gt; fails to extract &lt;code&gt;description&lt;/code&gt; it will emit a warning and continue extraction.&lt;/p&gt; &#xA;&lt;p&gt;You can also pass &lt;code&gt;default=&amp;lt;some fallback value&amp;gt;&lt;/code&gt;, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;description = self._search_regex(&#xA;    r&#39;&amp;lt;span[^&amp;gt;]+id=&#34;title&#34;[^&amp;gt;]*&amp;gt;([^&amp;lt;]+)&amp;lt;&#39;,&#xA;    webpage, &#39;description&#39;, default=None)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On failure this code will silently continue the extraction with &lt;code&gt;description&lt;/code&gt; set to &lt;code&gt;None&lt;/code&gt;. That is useful for metafields that may or may not be present.&lt;/p&gt; &#xA;&lt;h3&gt;Provide fallbacks&lt;/h3&gt; &#xA;&lt;p&gt;When extracting metadata try to do so from multiple sources. For example if &lt;code&gt;title&lt;/code&gt; is present in several places, try extracting from at least some of them. This makes it more future-proof in case some of the sources become unavailable.&lt;/p&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;p&gt;Say &lt;code&gt;meta&lt;/code&gt; from the previous example has a &lt;code&gt;title&lt;/code&gt; and you are about to extract it. Since &lt;code&gt;title&lt;/code&gt; is a mandatory meta field you should end up with something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;title = meta[&#39;title&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If &lt;code&gt;title&lt;/code&gt; disappears from &lt;code&gt;meta&lt;/code&gt; in future due to some changes on the hoster&#39;s side the extraction would fail since &lt;code&gt;title&lt;/code&gt; is mandatory. That&#39;s expected.&lt;/p&gt; &#xA;&lt;p&gt;Assume that you have some another source you can extract &lt;code&gt;title&lt;/code&gt; from, for example &lt;code&gt;og:title&lt;/code&gt; HTML meta of a &lt;code&gt;webpage&lt;/code&gt;. In this case you can provide a fallback scenario:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;title = meta.get(&#39;title&#39;) or self._og_search_title(webpage)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This code will try to extract from &lt;code&gt;meta&lt;/code&gt; first and if it fails it will try extracting &lt;code&gt;og:title&lt;/code&gt; from a &lt;code&gt;webpage&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Regular expressions&lt;/h3&gt; &#xA;&lt;h4&gt;Don&#39;t capture groups you don&#39;t use&lt;/h4&gt; &#xA;&lt;p&gt;Capturing group must be an indication that it&#39;s used somewhere in the code. Any group that is not used must be non capturing.&lt;/p&gt; &#xA;&lt;h5&gt;Example&lt;/h5&gt; &#xA;&lt;p&gt;Don&#39;t capture id attribute name here since you can&#39;t use it for anything anyway.&lt;/p&gt; &#xA;&lt;p&gt;Correct:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;r&#39;(?:id|ID)=(?P&amp;lt;id&amp;gt;\d+)&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Incorrect:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;r&#39;(id|ID)=(?P&amp;lt;id&amp;gt;\d+)&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Make regular expressions relaxed and flexible&lt;/h4&gt; &#xA;&lt;p&gt;When using regular expressions try to write them fuzzy, relaxed and flexible, skipping insignificant parts that are more likely to change, allowing both single and double quotes for quoted values and so on.&lt;/p&gt; &#xA;&lt;h5&gt;Example&lt;/h5&gt; &#xA;&lt;p&gt;Say you need to extract &lt;code&gt;title&lt;/code&gt; from the following HTML code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;span style=&#34;position: absolute; left: 910px; width: 90px; float: right; z-index: 9999;&#34; class=&#34;title&#34;&amp;gt;some fancy title&amp;lt;/span&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code for that task should look similar to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;title = self._search_regex(&#xA;    r&#39;&amp;lt;span[^&amp;gt;]+class=&#34;title&#34;[^&amp;gt;]*&amp;gt;([^&amp;lt;]+)&#39;, webpage, &#39;title&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or even better:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;title = self._search_regex(&#xA;    r&#39;&amp;lt;span[^&amp;gt;]+class=([&#34;\&#39;])title\1[^&amp;gt;]*&amp;gt;(?P&amp;lt;title&amp;gt;[^&amp;lt;]+)&#39;,&#xA;    webpage, &#39;title&#39;, group=&#39;title&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note how you tolerate potential changes in the &lt;code&gt;style&lt;/code&gt; attribute&#39;s value or switch from using double quotes to single for &lt;code&gt;class&lt;/code&gt; attribute:&lt;/p&gt; &#xA;&lt;p&gt;The code definitely should not look like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;title = self._search_regex(&#xA;    r&#39;&amp;lt;span style=&#34;position: absolute; left: 910px; width: 90px; float: right; z-index: 9999;&#34; class=&#34;title&#34;&amp;gt;(.*?)&amp;lt;/span&amp;gt;&#39;,&#xA;    webpage, &#39;title&#39;, group=&#39;title&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Long lines policy&lt;/h3&gt; &#xA;&lt;p&gt;There is a soft limit to keep lines of code under 80 characters long. This means it should be respected if possible and if it does not make readability and code maintenance worse.&lt;/p&gt; &#xA;&lt;p&gt;For example, you should &lt;strong&gt;never&lt;/strong&gt; split long string literals like URLs or some other often copied entities over multiple lines to fit this limit:&lt;/p&gt; &#xA;&lt;p&gt;Correct:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#39;https://www.youtube.com/watch?v=FqZTN594JQw&amp;amp;list=PLMYEtVRpaqY00V9W81Cwmzp6N6vZqfUKD4&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Incorrect:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#39;https://www.youtube.com/watch?v=FqZTN594JQw&amp;amp;list=&#39;&#xA;&#39;PLMYEtVRpaqY00V9W81Cwmzp6N6vZqfUKD4&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Inline values&lt;/h3&gt; &#xA;&lt;p&gt;Extracting variables is acceptable for reducing code duplication and improving readability of complex expressions. However, you should avoid extracting variables used only once and moving them to opposite parts of the extractor file, which makes reading the linear flow difficult.&lt;/p&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;p&gt;Correct:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;title = self._html_search_regex(r&#39;&amp;lt;title&amp;gt;([^&amp;lt;]+)&amp;lt;/title&amp;gt;&#39;, webpage, &#39;title&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Incorrect:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;TITLE_RE = r&#39;&amp;lt;title&amp;gt;([^&amp;lt;]+)&amp;lt;/title&amp;gt;&#39;&#xA;# ...some lines of code...&#xA;title = self._html_search_regex(TITLE_RE, webpage, &#39;title&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Collapse fallbacks&lt;/h3&gt; &#xA;&lt;p&gt;Multiple fallback values can quickly become unwieldy. Collapse multiple fallback values into a single expression via a list of patterns.&lt;/p&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;p&gt;Good:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;description = self._html_search_meta(&#xA;    [&#39;og:description&#39;, &#39;description&#39;, &#39;twitter:description&#39;],&#xA;    webpage, &#39;description&#39;, default=None)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unwieldy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;description = (&#xA;    self._og_search_description(webpage, default=None)&#xA;    or self._html_search_meta(&#39;description&#39;, webpage, default=None)&#xA;    or self._html_search_meta(&#39;twitter:description&#39;, webpage, default=None))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Methods supporting list of patterns are: &lt;code&gt;_search_regex&lt;/code&gt;, &lt;code&gt;_html_search_regex&lt;/code&gt;, &lt;code&gt;_og_search_property&lt;/code&gt;, &lt;code&gt;_html_search_meta&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Trailing parentheses&lt;/h3&gt; &#xA;&lt;p&gt;Always move trailing parentheses after the last argument.&lt;/p&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;p&gt;Correct:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    lambda x: x[&#39;ResultSet&#39;][&#39;Result&#39;][0][&#39;VideoUrlSet&#39;][&#39;VideoUrl&#39;],&#xA;    list)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Incorrect:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    lambda x: x[&#39;ResultSet&#39;][&#39;Result&#39;][0][&#39;VideoUrlSet&#39;][&#39;VideoUrl&#39;],&#xA;    list,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use convenience conversion and parsing functions&lt;/h3&gt; &#xA;&lt;p&gt;Wrap all extracted numeric data into safe functions from &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/raw/master/youtube_dl/utils.py&#34;&gt;&lt;code&gt;youtube_dl/utils.py&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;int_or_none&lt;/code&gt;, &lt;code&gt;float_or_none&lt;/code&gt;. Use them for string to number conversions as well.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;url_or_none&lt;/code&gt; for safe URL processing.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;try_get&lt;/code&gt; for safe metadata extraction from parsed JSON.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;unified_strdate&lt;/code&gt; for uniform &lt;code&gt;upload_date&lt;/code&gt; or any &lt;code&gt;YYYYMMDD&lt;/code&gt; meta field extraction, &lt;code&gt;unified_timestamp&lt;/code&gt; for uniform &lt;code&gt;timestamp&lt;/code&gt; extraction, &lt;code&gt;parse_filesize&lt;/code&gt; for &lt;code&gt;filesize&lt;/code&gt; extraction, &lt;code&gt;parse_count&lt;/code&gt; for count meta fields extraction, &lt;code&gt;parse_resolution&lt;/code&gt;, &lt;code&gt;parse_duration&lt;/code&gt; for &lt;code&gt;duration&lt;/code&gt; extraction, &lt;code&gt;parse_age_limit&lt;/code&gt; for &lt;code&gt;age_limit&lt;/code&gt; extraction.&lt;/p&gt; &#xA;&lt;p&gt;Explore &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/raw/master/youtube_dl/utils.py&#34;&gt;&lt;code&gt;youtube_dl/utils.py&lt;/code&gt;&lt;/a&gt; for more useful convenience functions.&lt;/p&gt; &#xA;&lt;h4&gt;More examples&lt;/h4&gt; &#xA;&lt;h5&gt;Safely extract optional description from parsed JSON&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;description = try_get(response, lambda x: x[&#39;result&#39;][&#39;video&#39;][0][&#39;summary&#39;], compat_str)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Safely extract more optional metadata&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;video = try_get(response, lambda x: x[&#39;result&#39;][&#39;video&#39;][0], dict) or {}&#xA;description = video.get(&#39;summary&#39;)&#xA;duration = float_or_none(video.get(&#39;durationMs&#39;), scale=1000)&#xA;view_count = int_or_none(video.get(&#39;views&#39;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;EMBEDDING YOUTUBE-DL&lt;/h1&gt; &#xA;&lt;p&gt;youtube-dl makes the best effort to be a good command-line program, and thus should be callable from any programming language. If you encounter any problems parsing its output, feel free to &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/issues/new&#34;&gt;create a report&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;From a Python program, you can embed youtube-dl in a more powerful fashion, like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from __future__ import unicode_literals&#xA;import youtube_dl&#xA;&#xA;ydl_opts = {}&#xA;with youtube_dl.YoutubeDL(ydl_opts) as ydl:&#xA;    ydl.download([&#39;https://www.youtube.com/watch?v=BaW_jenozKc&#39;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Most likely, you&#39;ll want to use various options. For a list of options available, have a look at &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/raw/3e4cedf9e8cd3157df2457df7274d0c842421945/youtube_dl/YoutubeDL.py#L137-L312&#34;&gt;&lt;code&gt;youtube_dl/YoutubeDL.py&lt;/code&gt;&lt;/a&gt;. For a start, if you want to intercept youtube-dl&#39;s output, set a &lt;code&gt;logger&lt;/code&gt; object.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s a more complete example of a program that outputs only errors (and a short message after the download is finished), and downloads/converts the video to an mp3 file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from __future__ import unicode_literals&#xA;import youtube_dl&#xA;&#xA;&#xA;class MyLogger(object):&#xA;    def debug(self, msg):&#xA;        pass&#xA;&#xA;    def warning(self, msg):&#xA;        pass&#xA;&#xA;    def error(self, msg):&#xA;        print(msg)&#xA;&#xA;&#xA;def my_hook(d):&#xA;    if d[&#39;status&#39;] == &#39;finished&#39;:&#xA;        print(&#39;Done downloading, now converting ...&#39;)&#xA;&#xA;&#xA;ydl_opts = {&#xA;    &#39;format&#39;: &#39;bestaudio/best&#39;,&#xA;    &#39;postprocessors&#39;: [{&#xA;        &#39;key&#39;: &#39;FFmpegExtractAudio&#39;,&#xA;        &#39;preferredcodec&#39;: &#39;mp3&#39;,&#xA;        &#39;preferredquality&#39;: &#39;192&#39;,&#xA;    }],&#xA;    &#39;logger&#39;: MyLogger(),&#xA;    &#39;progress_hooks&#39;: [my_hook],&#xA;}&#xA;with youtube_dl.YoutubeDL(ydl_opts) as ydl:&#xA;    ydl.download([&#39;https://www.youtube.com/watch?v=BaW_jenozKc&#39;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;BUGS&lt;/h1&gt; &#xA;&lt;p&gt;Bugs and suggestions should be reported at: &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/issues&#34;&gt;https://github.com/ytdl-org/youtube-dl/issues&lt;/a&gt;. Unless you were prompted to or there is another pertinent reason (e.g. GitHub fails to accept the bug report), please do not send bug reports via personal email. For discussions, join us in the IRC channel &lt;a href=&#34;irc://chat.freenode.net/#youtube-dl&#34;&gt;#youtube-dl&lt;/a&gt; on freenode (&lt;a href=&#34;https://webchat.freenode.net/?randomnick=1&amp;amp;channels=youtube-dl&#34;&gt;webchat&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please include the full output of youtube-dl when run with &lt;code&gt;-v&lt;/code&gt;&lt;/strong&gt;, i.e. &lt;strong&gt;add&lt;/strong&gt; &lt;code&gt;-v&lt;/code&gt; flag to &lt;strong&gt;your command line&lt;/strong&gt;, copy the &lt;strong&gt;whole&lt;/strong&gt; output and post it in the issue body wrapped in ``` for better formatting. It should look similar to this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ youtube-dl -v &amp;lt;your command line&amp;gt;&#xA;[debug] System config: []&#xA;[debug] User config: []&#xA;[debug] Command-line args: [u&#39;-v&#39;, u&#39;https://www.youtube.com/watch?v=BaW_jenozKcj&#39;]&#xA;[debug] Encodings: locale cp1251, fs mbcs, out cp866, pref cp1251&#xA;[debug] youtube-dl version 2015.12.06&#xA;[debug] Git HEAD: 135392e&#xA;[debug] Python version 2.6.6 - Windows-2003Server-5.2.3790-SP2&#xA;[debug] exe versions: ffmpeg N-75573-g1d0487f, ffprobe N-75573-g1d0487f, rtmpdump 2.4&#xA;[debug] Proxy map: {}&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Do not post screenshots of verbose logs; only plain text is acceptable.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The output (including the first lines) contains important debugging information. Issues without the full output are often not reproducible and therefore do not get solved in short order, if ever.&lt;/p&gt; &#xA;&lt;p&gt;Please re-read your issue once again to avoid a couple of common mistakes (you can and should use this as a checklist):&lt;/p&gt; &#xA;&lt;h3&gt;Is the description of the issue itself sufficient?&lt;/h3&gt; &#xA;&lt;p&gt;We often get issue reports that we cannot really decipher. While in most cases we eventually get the required information after asking back multiple times, this poses an unnecessary drain on our resources. Many contributors, including myself, are also not native speakers, so we may misread some parts.&lt;/p&gt; &#xA;&lt;p&gt;So please elaborate on what feature you are requesting, or what bug you want to be fixed. Make sure that it&#39;s obvious&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;What the problem is&lt;/li&gt; &#xA; &lt;li&gt;How it could be fixed&lt;/li&gt; &#xA; &lt;li&gt;How your proposed solution would look like&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If your report is shorter than two lines, it is almost certainly missing some of these, which makes it hard for us to respond to it. We&#39;re often too polite to close the issue outright, but the missing info makes misinterpretation likely. As a committer myself, I often get frustrated by these issues, since the only possible way for me to move forward on them is to ask for clarification over and over.&lt;/p&gt; &#xA;&lt;p&gt;For bug reports, this means that your report should contain the &lt;em&gt;complete&lt;/em&gt; output of youtube-dl when called with the &lt;code&gt;-v&lt;/code&gt; flag. The error message you get for (most) bugs even says so, but you would not believe how many of our bug reports do not contain this information.&lt;/p&gt; &#xA;&lt;p&gt;If your server has multiple IPs or you suspect censorship, adding &lt;code&gt;--call-home&lt;/code&gt; may be a good idea to get more diagnostics. If the error is &lt;code&gt;ERROR: Unable to extract ...&lt;/code&gt; and you cannot reproduce it from multiple countries, add &lt;code&gt;--dump-pages&lt;/code&gt; (warning: this will yield a rather large output, redirect it to the file &lt;code&gt;log.txt&lt;/code&gt; by adding &lt;code&gt;&amp;gt;log.txt 2&amp;gt;&amp;amp;1&lt;/code&gt; to your command-line) or upload the &lt;code&gt;.dump&lt;/code&gt; files you get when you add &lt;code&gt;--write-pages&lt;/code&gt; &lt;a href=&#34;https://gist.github.com/&#34;&gt;somewhere&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Site support requests must contain an example URL&lt;/strong&gt;. An example URL is a URL you might want to download, like &lt;code&gt;https://www.youtube.com/watch?v=BaW_jenozKc&lt;/code&gt;. There should be an obvious video present. Except under very special circumstances, the main page of a video service (e.g. &lt;code&gt;https://www.youtube.com/&lt;/code&gt;) is &lt;em&gt;not&lt;/em&gt; an example URL.&lt;/p&gt; &#xA;&lt;h3&gt;Are you using the latest version?&lt;/h3&gt; &#xA;&lt;p&gt;Before reporting any issue, type &lt;code&gt;youtube-dl -U&lt;/code&gt;. This should report that you&#39;re up-to-date. About 20% of the reports we receive are already fixed, but people are using outdated versions. This goes for feature requests as well.&lt;/p&gt; &#xA;&lt;h3&gt;Is the issue already documented?&lt;/h3&gt; &#xA;&lt;p&gt;Make sure that someone has not already opened the issue you&#39;re trying to open. Search at the top of the window or browse the &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/search?type=Issues&#34;&gt;GitHub Issues&lt;/a&gt; of this repository. If there is an issue, feel free to write something along the lines of &#34;This affects me as well, with version 2015.01.01. Here is some more information on the issue: ...&#34;. While some issues may be old, a new post into them often spurs rapid activity.&lt;/p&gt; &#xA;&lt;h3&gt;Why are existing options not enough?&lt;/h3&gt; &#xA;&lt;p&gt;Before requesting a new feature, please have a quick peek at &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl/raw/master/README.md#options&#34;&gt;the list of supported options&lt;/a&gt;. Many feature requests are for features that actually exist already! Please, absolutely do show off your work in the issue report and detail how the existing similar options do &lt;em&gt;not&lt;/em&gt; solve your problem.&lt;/p&gt; &#xA;&lt;h3&gt;Is there enough context in your bug report?&lt;/h3&gt; &#xA;&lt;p&gt;People want to solve problems, and often think they do us a favor by breaking down their larger problems (e.g. wanting to skip already downloaded files) to a specific request (e.g. requesting us to look whether the file exists before downloading the info page). However, what often happens is that they break down the problem into two steps: One simple, and one impossible (or extremely complicated one).&lt;/p&gt; &#xA;&lt;p&gt;We are then presented with a very complicated request when the original problem could be solved far easier, e.g. by recording the downloaded video IDs in a separate file. To avoid this, you must include the greater context where it is non-obvious. In particular, every feature request that does not consist of adding support for a new site should contain a use case scenario that explains in what situation the missing feature would be useful.&lt;/p&gt; &#xA;&lt;h3&gt;Does the issue involve one problem, and one problem only?&lt;/h3&gt; &#xA;&lt;p&gt;Some of our users seem to think there is a limit of issues they can or should open. There is no limit of issues they can or should open. While it may seem appealing to be able to dump all your issues into one ticket, that means that someone who solves one of your issues cannot mark the issue as closed. Typically, reporting a bunch of issues leads to the ticket lingering since nobody wants to attack that behemoth, until someone mercifully splits the issue into multiple ones.&lt;/p&gt; &#xA;&lt;p&gt;In particular, every site support request issue should only pertain to services at one site (generally under a common domain, but always using the same backend technology). Do not request support for vimeo user videos, White house podcasts, and Google Plus pages in the same issue. Also, make sure that you don&#39;t post bug reports alongside feature requests. As a rule of thumb, a feature request does not include outputs of youtube-dl that are not immediately related to the feature at hand. Do not post reports of a network error alongside the request for a new video service.&lt;/p&gt; &#xA;&lt;h3&gt;Is anyone going to need the feature?&lt;/h3&gt; &#xA;&lt;p&gt;Only post features that you (or an incapacitated friend you can personally talk to) require. Do not post features because they seem like a good idea. If they are really useful, they will be requested by someone who requires them.&lt;/p&gt; &#xA;&lt;h3&gt;Is your question about youtube-dl?&lt;/h3&gt; &#xA;&lt;p&gt;It may sound strange, but some bug reports we receive are completely unrelated to youtube-dl and relate to a different, or even the reporter&#39;s own, application. Please make sure that you are actually using youtube-dl. If you are using a UI for youtube-dl, report the bug to the maintainer of the actual application providing the UI. On the other hand, if your UI for youtube-dl fails in some way you believe is related to youtube-dl, by all means, go ahead and report the bug.&lt;/p&gt; &#xA;&lt;h1&gt;COPYRIGHT&lt;/h1&gt; &#xA;&lt;p&gt;youtube-dl is released into the public domain by the copyright holders.&lt;/p&gt; &#xA;&lt;p&gt;This README file was originally written by &lt;a href=&#34;https://github.com/dbbolton&#34;&gt;Daniel Bolton&lt;/a&gt; and is likewise released into the public domain.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mindsdb/mindsdb</title>
    <updated>2022-05-31T01:31:12Z</updated>
    <id>tag:github.com,2022-05-31:/mindsdb/mindsdb</id>
    <link href="https://github.com/mindsdb/mindsdb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;In-Database Machine Learning&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://github.com/mindsdb/mindsdb_native/raw/stable/assets/MindsDBColorPurp@3x.png?raw=true&#34; alt=&#34;MindsDB&#34;&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/mindsdb/mindsdb/actions&#34;&gt;&lt;img src=&#34;https://github.com/mindsdb/mindsdb/workflows/MindsDB%20workflow/badge.svg?sanitize=true&#34; alt=&#34;MindsDB workflow&#34;&gt;&lt;/a&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.6%20|%203.7|%203.8-brightgreen.svg&#34; alt=&#34;Python supported&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/MindsDB/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/MindsDB.svg?sanitize=true&#34; alt=&#34;PyPi Version&#34;&gt;&lt;/a&gt; &lt;img alt=&#34;PyPI - Downloads&#34; src=&#34;https://img.shields.io/pypi/dm/Mindsdb&#34;&gt; &lt;a href=&#34;https://hub.docker.com/u/mindsdb&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/mindsdb/mindsdb&#34; alt=&#34;Docker pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/website?url=https%3A%2F%2Fwww.mindsdb.com%2F&#34; alt=&#34;MindsDB Website&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/mindsdbcommunity/shared_invite/zt-o8mrmx3l-5ai~5H66s6wlxFfBMVI6wQ&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-@mindsdbcommunity-brightgreen.svg?logo=slack &#34; alt=&#34;MindsDB Community&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://deepnote.com/project/Machine-Learning-With-SQL-8GDF7bc7SzKlhBLorqoIcw/%2Fmindsdb_demo.ipynb&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://deepnote.com/buttons/launch-in-deepnote-white.svg?sanitize=true&#34; alt=&#34;Launch in Deepnote&#34;&gt;&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.mindsdb.com?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;Website&lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://docs.mindsdb.com?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;Docs&lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://join.slack.com/t/mindsdbcommunity/shared_invite/zt-o8mrmx3l-5ai~5H66s6wlxFfBMVI6wQ&#34;&gt;Community Slack&lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://github.com/mindsdb/mindsdb/projects&#34;&gt;Contribute&lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://cloud.mindsdb.com&#34;&gt;Demo&lt;/a&gt; &lt;/h3&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mindsdb.com?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;MindsDB&lt;/a&gt; ML-SQL Server enables machine learning workflows for the most powerful databases and datawarehouses using SQL. &lt;a href=&#34;https://twitter.com/intent/tweet?text=Machine%20Learning%20inside%20Databases%20&amp;amp;url=https://www.mindsdb.com&amp;amp;via=mindsdb&amp;amp;hashtags=ai,ml,machine_learning,neural_networks,databases,sql&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&#34; alt=&#34;Tweet&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Developers can quickly add AI capabilities to your applications.&lt;/li&gt; &#xA; &lt;li&gt;Data Scientists can streamline MLOps by deploying ML models as AI Tables.&lt;/li&gt; &#xA; &lt;li&gt;Data Analysts can easily make forecasts on complex data (like multivariate time-series with high cardinality) and visualize them in BI tools like Tableau.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you like our project then we would really appreciate &lt;strong&gt;a Star ⭐!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Also, check-out the &lt;a href=&#34;https://mindsdb.com/community?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;rewards and community programs.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mindsdb/mindsdb#installation&#34;&gt;Installation&lt;/a&gt; - &lt;a href=&#34;https://github.com/mindsdb/mindsdb#overview&#34;&gt;Overview&lt;/a&gt; - &lt;a href=&#34;https://github.com/mindsdb/mindsdb#features&#34;&gt;Features&lt;/a&gt; - &lt;a href=&#34;https://github.com/mindsdb/mindsdb#database-integrations&#34;&gt;Database Integrations&lt;/a&gt; - &lt;a href=&#34;https://github.com/mindsdb/mindsdb#quickstart&#34;&gt;Quickstart&lt;/a&gt; - &lt;a href=&#34;https://github.com/mindsdb/mindsdb#documentation&#34;&gt;Documentation&lt;/a&gt; - &lt;a href=&#34;https://github.com/mindsdb/mindsdb#support&#34;&gt;Support&lt;/a&gt; - &lt;a href=&#34;https://github.com/mindsdb/mindsdb#contribution&#34;&gt;Contributing&lt;/a&gt; - &lt;a href=&#34;https://github.com/mindsdb/mindsdb#mailing-lists&#34;&gt;Mailing lists&lt;/a&gt; - &lt;a href=&#34;https://github.com/mindsdb/mindsdb#license&#34;&gt;License&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt; Machine Learning using SQL &lt;br&gt; &lt;br&gt; &lt;img width=&#34;600&#34; src=&#34;https://docs.mindsdb.com/assets/mdb_image.png&#34; alt=&#34;MindsDB&#34;&gt; &lt;/h2&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;You can try Mindsdb ML SQL server here &lt;a href=&#34;https://cloud.mindsdb.com&#34;&gt;(demo)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install the latest version of MindsDB please pull the following Docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull mindsdb/mindsdb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, use PyPI:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install mindsdb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;MindsDB automates and abstracts machine learning models through virtual AI Tables:&lt;/p&gt; &#xA;&lt;p&gt;Apart from abstracting ML models as AI Tables inside databases, MindsDB has a set of unique capabilities as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Easily make predictions over very complex multivariate time-series data with high cardinality&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;An open JSON-AI syntax to tune ML models and optimize ML pipelines in a declarative way&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;How it works:&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Let MindsDB connect to your database.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Train a Predictor using a single SQL statement (make MindsDB learn from historical data automatically) or import your own ML model to a Predictor via JSON-AI .&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make predictions with SQL statements (Predictor is exposed as virtual AI Tables). There’s no need to deploy models since they are already part of the data layer.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Check our &lt;a href=&#34;https://docs.mindsdb.com/?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;docs&lt;/a&gt; and &lt;a href=&#34;https://mindsdb.com/blog/?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;blog&lt;/a&gt; for tutorials and use case examples.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatic data pre-processing, feature engineering and encoding&lt;/li&gt; &#xA; &lt;li&gt;Classification, regression, time-series tasks&lt;/li&gt; &#xA; &lt;li&gt;Bring models to production without “traditional deployment” as AI Tables&lt;/li&gt; &#xA; &lt;li&gt;Get mModels’ accuracy scoring and confidence intervals for each prediction&lt;/li&gt; &#xA; &lt;li&gt;Join ML models with existing data&lt;/li&gt; &#xA; &lt;li&gt;Anomaly detection&lt;/li&gt; &#xA; &lt;li&gt;Model explainability analysis&lt;/li&gt; &#xA; &lt;li&gt;GPU support for models’ training&lt;/li&gt; &#xA; &lt;li&gt;Open JSON-AI syntax to build models and bring your own ML blocks in a declarative way&lt;/li&gt; &#xA; &lt;li&gt;REST API available as well&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Database Integrations&lt;/h2&gt; &#xA;&lt;p&gt;MindsDB works with most of the SQL and NoSQL databases and data Streams for real-time ML.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Connect your Data&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Apache Kafka-808080?style=for-the-badge&amp;amp;logo=apache-kafka&amp;amp;logoColor=white&#34; alt=&#34;Connect Apache Kafka&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Amazon%20Redshift-0466C8?style=for-the-badge&amp;amp;logo=amazon-aws&amp;amp;logoColor=white&#34; alt=&#34;Connect Amazon Redshift&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Cassandra-1287B1?style=for-the-badge&amp;amp;logo=apache%20cassandra&amp;amp;logoColor=white&#34; alt=&#34;Connect Cassandra&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Clickhouse-e6e600?style=for-the-badge&amp;amp;logo=clickhouse&amp;amp;logoColor=white&#34; alt=&#34;Connect Clickhouse&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/CockroachDB-426EDF?style=for-the-badge&amp;amp;logo=cockroach-labs&amp;amp;logoColor=white&#34; alt=&#34;Connect CockroachDB&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/MariaDB-003545?style=for-the-badge&amp;amp;logo=mariadb&amp;amp;logoColor=white&#34; alt=&#34;Connect MariaDB&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Microsoft%20SQL%20Sever-CC2927?style=for-the-badge&amp;amp;logo=microsoft%20sql%20server&amp;amp;logoColor=white&#34; alt=&#34;Connect SQL Server&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/MongoDB-4EA94B?style=for-the-badge&amp;amp;logo=mongodb&amp;amp;logoColor=white&#34; alt=&#34;Connect MongoDB&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/MySQL-00758F?style=for-the-badge&amp;amp;logo=mysql&amp;amp;logoColor=white&#34; alt=&#34;Connect MySQL&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PostgreSQL-316192?style=for-the-badge&amp;amp;logo=postgresql&amp;amp;logoColor=white&#34; alt=&#34;Connect PostgreSQL&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/QuestDB-d14671?style=for-the-badge&amp;amp;logo=questdb&amp;amp;logoColor=white&#34; alt=&#34;Connect QuestDB&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/redis-%23DD0031.svg?&amp;amp;style=for-the-badge&amp;amp;logo=redis&amp;amp;logoColor=white&#34; alt=&#34;Connect Redis&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/ScyllaDB-53CADD?style=for-the-badge&amp;amp;logo=scylladbb&amp;amp;logoColor=white&#34; alt=&#34;Connect ScyllaDB&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Singlestore-5f07b4?style=for-the-badge&amp;amp;logo=singlestore&amp;amp;logoColor=white&#34; alt=&#34;Connect Singlestore&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Snowflake-35aedd?style=for-the-badge&amp;amp;logo=snowflake&amp;amp;logoColor=blue&#34; alt=&#34;Connect Snowflake&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Trino-dd00a1?style=for-the-badge&amp;amp;logo=trino&amp;amp;logoColor=white&#34; alt=&#34;Connect Trino&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mindsdb/mindsdb/issues/new?assignees=&amp;amp;labels=&amp;amp;template=feature-mindsdb-request.yaml&#34;&gt;&lt;span&gt;❓&lt;/span&gt; &lt;span&gt;👋&lt;/span&gt; Missing integration?&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;To get your hands on MindsDB, we recommend using the &lt;a href=&#34;https://docs.mindsdb.com/deployment/docker/?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;Docker image&lt;/a&gt; or simply sign up for a &lt;a href=&#34;https://cloud.mindsdb.com/signup?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;free cloud account&lt;/a&gt;. Feel free to browse &lt;a href=&#34;https://docs.mindsdb.com?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;documentation&lt;/a&gt; for other installation methods and tutorials.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find the complete documentation of MindsDB at &lt;a href=&#34;https://docs.mindsdb.com?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;docs.mindsdb.com&lt;/a&gt;. Documentation for our HTTP API can be found at &lt;a href=&#34;https://apidocs.mindsdb.com/&#34;&gt;apidocs.mindsdb.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you found a bug, please submit an &lt;a href=&#34;https://github.com/mindsdb/mindsdb/issues&#34;&gt;issue on Github&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get community support, you can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Post at MindsDB &lt;a href=&#34;https://join.slack.com/t/mindsdbcommunity/shared_invite/zt-o8mrmx3l-5ai~5H66s6wlxFfBMVI6wQ&#34;&gt;Slack community&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Ask for help at our &lt;a href=&#34;https://github.com/mindsdb/mindsdb/discussions&#34;&gt;Github Discussions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Ask a question at &lt;a href=&#34;https://stackoverflow.com/questions/tagged/mindsdb&#34;&gt;Stackoverflow&lt;/a&gt; with a MindsDB tag.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you need commercial support, please &lt;a href=&#34;https://mindsdb.com/contact/?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;contact&lt;/a&gt; the MindsDB team.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;A great place to start contributing to MindsDB will be our GitHub projects for &lt;span&gt;🏁&lt;/span&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Community writers &lt;a href=&#34;https://github.com/mindsdb/mindsdb/projects/7&#34;&gt;dashboard tasks&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Community code contributors &lt;a href=&#34;https://github.com/mindsdb/mindsdb/projects/8&#34;&gt;dashboard tasks&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also, we are always open to suggestions so feel free to open new issues with your ideas and we can give you guidance!&lt;/p&gt; &#xA;&lt;p&gt;Being part of the core team is accessible to anyone who is motivated and wants to be part of that journey! If you&#39;d like to contribute to the project, refer to the &lt;a href=&#34;https://docs.mindsdb.com/contribute/?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;contributing documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please note that this project is released with a &lt;a href=&#34;https://github.com/mindsdb/mindsdb/raw/stable/CODE_OF_CONDUCT.md&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project, you agree to abide by its terms.&lt;/p&gt; &#xA;&lt;h3&gt;Current contributors&lt;/h3&gt; &#xA;&lt;a href=&#34;https://github.com/mindsdb/mindsdb/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contributors-img.web.app/image?repo=mindsdb/mindsdb&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Made with &lt;a href=&#34;https://contributors-img.web.app&#34;&gt;contributors-img&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Mailing lists&lt;/h2&gt; &#xA;&lt;p&gt;Subscribe to MindsDB Monthly &lt;a href=&#34;https://mindsdb.com/newsletter/?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;Community Newsletter&lt;/a&gt; to get general announcements, release notes, information about MindsDB events, and the latest blog posts. You may also join our &lt;a href=&#34;https://mindsdb.com/beta-tester/?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;beta-users&lt;/a&gt; group, and get access to new beta features.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MindsDB is licensed under &lt;a href=&#34;https://github.com/mindsdb/mindsdb/raw/master/LICENSE&#34;&gt;GNU General Public License v3.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>