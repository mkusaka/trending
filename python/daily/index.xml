<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-03T01:36:07Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lich0821/WeChatFerry</title>
    <updated>2024-02-03T01:36:07Z</updated>
    <id>tag:github.com,2024-02-03:/lich0821/WeChatFerry</id>
    <link href="https://github.com/lich0821/WeChatFerry" rel="alternate"></link>
    <summary type="html">&lt;p&gt;微信逆向，微信机器人，可接入 ChatGPT、ChatGLM、讯飞星火、Tigerbot等大模型。Hook WeChat.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WeChatFerry&lt;/h1&gt; &#xA;&lt;p&gt;一个玩微信的工具。更多介绍见：&lt;a href=&#34;https://mp.weixin.qq.com/s/CGLfSaNDy8MyuyPWGjGJ7w&#34;&gt;WeChatFerry: 一个玩微信的工具&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;font color=&#34;#FF0000&#34; size=&#34;5&#34;&gt;免责声明【必读】&lt;/font&gt;&lt;/summary&gt; &#xA; &lt;p&gt;本工具仅供学习和技术研究使用，不得用于任何商业或非法行为，否则后果自负。&lt;/p&gt; &#xA; &lt;p&gt;本工具的作者不对本工具的安全性、完整性、可靠性、有效性、正确性或适用性做任何明示或暗示的保证，也不对本工具的使用或滥用造成的任何直接或间接的损失、责任、索赔、要求或诉讼承担任何责任。&lt;/p&gt; &#xA; &lt;p&gt;本工具的作者保留随时修改、更新、删除或终止本工具的权利，无需事先通知或承担任何义务。&lt;/p&gt; &#xA; &lt;p&gt;本工具的使用者应遵守相关法律法规，尊重微信的版权和隐私，不得侵犯微信或其他第三方的合法权益，不得从事任何违法或不道德的行为。&lt;/p&gt; &#xA; &lt;p&gt;本工具的使用者在下载、安装、运行或使用本工具时，即表示已阅读并同意本免责声明。如有异议，请立即停止使用本工具，并删除所有相关文件。&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://wechatferry.readthedocs.io/&#34;&gt;📖 文档&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/APdjGyZ2hllXxyG_sNCfXQ&#34;&gt;📺 视频教程&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/mFUwK2cJJrajVqYiM-GlDA&#34;&gt;🙋 FAQ&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;👉 &lt;a href=&#34;https://github.com/lich0821/WeChatRobot&#34;&gt;WeChatRobot🤖&lt;/a&gt;，一个基于 WeChatFerry 的 Python 机器人框架。&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;点击查看功能清单&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;检查登录状态&lt;/li&gt; &#xA;  &lt;li&gt;获取登录账号的 wxid&lt;/li&gt; &#xA;  &lt;li&gt;获取消息类型&lt;/li&gt; &#xA;  &lt;li&gt;获取所有联系人&lt;/li&gt; &#xA;  &lt;li&gt;获取所有好友&lt;/li&gt; &#xA;  &lt;li&gt;获取数据库&lt;/li&gt; &#xA;  &lt;li&gt;获取某数据库下的表&lt;/li&gt; &#xA;  &lt;li&gt;获取用户信息&lt;/li&gt; &#xA;  &lt;li&gt;发送文本消息（可 @）&lt;/li&gt; &#xA;  &lt;li&gt;发送图片&lt;/li&gt; &#xA;  &lt;li&gt;发送文件&lt;/li&gt; &#xA;  &lt;li&gt;允许接收消息&lt;/li&gt; &#xA;  &lt;li&gt;停止接收消息&lt;/li&gt; &#xA;  &lt;li&gt;执行 SQL 查询&lt;/li&gt; &#xA;  &lt;li&gt;接受好友申请&lt;/li&gt; &#xA;  &lt;li&gt;添加群成员&lt;/li&gt; &#xA;  &lt;li&gt;删除群成员&lt;/li&gt; &#xA;  &lt;li&gt;解密图片&lt;/li&gt; &#xA;  &lt;li&gt;获取朋友圈消息&lt;/li&gt; &#xA;  &lt;li&gt;保存图片&lt;/li&gt; &#xA;  &lt;li&gt;保存语音&lt;/li&gt; &#xA;  &lt;li&gt;发送卡片消息&lt;/li&gt; &#xA;  &lt;li&gt;拍一拍群友&lt;/li&gt; &#xA;  &lt;li&gt;邀请群成员&lt;/li&gt; &#xA;  &lt;li&gt;图片 OCR&lt;/li&gt; &#xA;  &lt;li&gt;转发消息&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;点击查看支持的客户端&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Go&lt;/li&gt; &#xA;  &lt;li&gt;HTTP&lt;/li&gt; &#xA;  &lt;li&gt;Java&lt;/li&gt; &#xA;  &lt;li&gt;Node.js&lt;/li&gt; &#xA;  &lt;li&gt;Python&lt;/li&gt; &#xA;  &lt;li&gt;Rust&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lich0821/WeChatFerry/master/assets/TEQuant.jpg&#34; alt=&#34;碲矿&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lich0821/WeChatFerry/master/assets/QR.jpeg&#34; alt=&#34;赞赏&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;后台回复 &lt;code&gt;WeChatFerry&lt;/code&gt; 加群交流&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;如果你觉得有用&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;h3&gt;Python&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/wcferry&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/wcferry.svg?sanitize=true&#34; alt=&#34;PyPi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/wcferry&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/badge/wcferry&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://wechatferry.readthedocs.io/zh/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/wechatferry/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;安装&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install --upgrade wcferry&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;参考框架：&lt;a href=&#34;https://github.com/lich0821/WeChatRobot&#34;&gt;🤖WeChatRobot&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;HTTP&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/wcfhttp&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/wcfhttp.svg?sanitize=true&#34; alt=&#34;PyPi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/wcfhttp&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/badge/wcfhttp&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://wechatferry.readthedocs.io/zh/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/wechatferry/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;安装&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install --upgrade wcfhttp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;运行&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 查看版本&#xA;wcfhttp -v&#xA;&#xA;# 查看帮助&#xA;wcfhttp -h&#xA;&#xA;# 忽略新消息运行&#xA;wcfhttp&#xA;&#xA;# 新消息转发到指定地址&#xA;wcfhttp --cb http://your_host:your_port/callback&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;其余客户端，可下载 &lt;a href=&#34;https://github.com/lich0821/WeChatFerry/releases/latest&#34;&gt;最新发布的版本&lt;/a&gt;，根据技术栈，选择客户端，将相应 &lt;code&gt;dll&lt;/code&gt; 和 &lt;code&gt;exe&lt;/code&gt; 文件放到对应位置。&lt;/p&gt; &#xA;&lt;h3&gt;Go&lt;/h3&gt; &#xA;&lt;p&gt;参考 &lt;a href=&#34;https://raw.githubusercontent.com/lich0821/WeChatFerry/master/clients/go/README.md&#34;&gt;Go README.MD&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;GoHttp&lt;/h3&gt; &#xA;&lt;p&gt;参考 &lt;a href=&#34;https://raw.githubusercontent.com/lich0821/WeChatFerry/master/clients/gohttp/README.md&#34;&gt;GoHttp README.MD&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Java&lt;/h3&gt; &#xA;&lt;p&gt;参考 &lt;a href=&#34;https://raw.githubusercontent.com/lich0821/WeChatFerry/master/clients/java/README.MD&#34;&gt;Java README.MD&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Node.js&lt;/h3&gt; &#xA;&lt;p&gt;参考 &lt;a href=&#34;https://github.com/stkevintan/node-wcferry/raw/main/README.md&#34;&gt;Node.js README.MD&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Rust&lt;/h3&gt; &#xA;&lt;p&gt;参考 &lt;a href=&#34;https://raw.githubusercontent.com/lich0821/WeChatFerry/master/clients/rust/README.MD&#34;&gt;Rust README.MD&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;一起开发&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;🛈 非开发用户不需要往下看。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;安装开发环境&lt;/h3&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;点击查看&lt;/summary&gt; &#xA; &lt;h4&gt;安装 vcpkg&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;安装，参考&lt;a href=&#34;https://github.com/microsoft/vcpkg/raw/master/README_zh_CN.md&#34;&gt;Vcpkg: 总览&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd C:\Tools&#xA;git clone https://github.com/microsoft/vcpkg&#xA;.\vcpkg\bootstrap-vcpkg.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;添加全局配置： 环境变量增加 &lt;code&gt;vcpkg&lt;/code&gt; 所在路径（本文为：&lt;code&gt;C:\Tools\vcpkg&lt;/code&gt;）。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;安装相关组件&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;vcpkg install protobuf[zlib]:x86-windows-static&#xA;vcpkg install spdlog:x86-windows-static&#xA;vcpkg install nng:x86-windows-static&#xA;vcpkg install magic-enum:x86-windows-static&#xA;vcpkg integrate install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;安装完毕后，需要配置 protoc 的环境变量，并确保在命令行下可用，protoc 的路径在 &lt;code&gt;&amp;lt;vcpkg_install_path&amp;gt;\installed\x86-windows-static\tools\protobuf&lt;/code&gt;&lt;/p&gt; &#xA; &lt;h4&gt;安装 VS2019&lt;/h4&gt; &#xA; &lt;h4&gt;安装 Python3&lt;/h4&gt; &#xA; &lt;p&gt;通过微软商店或者 python.org 自行下载均可，注意配置好环境变量，确保 &lt;code&gt;python3&lt;/code&gt; 在命令行下可用&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;编译&lt;/h3&gt; &#xA;&lt;p&gt;使用 VS2019 打开工程，编译即可。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：如果遇到执行 &lt;code&gt;protoc&lt;/code&gt; 时的 9009 错误，检查是否是 python3 环境有问题，或者 protoc 命令的环境变量配置不正确。&lt;/p&gt; &#xA;&lt;h3&gt;运行&lt;/h3&gt; &#xA;&lt;p&gt;运行 &lt;code&gt;wcf.exe&lt;/code&gt; 启动&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;wcf.exe --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;项目结构&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;WeChatFerry&#xA;├── LICENSE                 # LICENSE&#xA;├── README.MD               # 说明&#xA;├── WeChatFerry&#xA;│&amp;nbsp;&amp;nbsp; ├── WeChatFerry.sln     # VS2019 工程文件&#xA;│&amp;nbsp;&amp;nbsp; ├── rpc                 # RPC 模块&#xA;│&amp;nbsp;&amp;nbsp; ├── sdk                 # 注入及启动模块&#xA;│&amp;nbsp;&amp;nbsp; ├── spy                 # 核心功能实现模块&#xA;│&amp;nbsp;&amp;nbsp; └── wcf                 # 命令行版启动器&#xA;├── assets&#xA;│&amp;nbsp;&amp;nbsp; ├── QR.jpeg             # 二维码，测试用图&#xA;│&amp;nbsp;&amp;nbsp; ├── TEQuant.jpg         # 二维码，测试用图&#xA;│&amp;nbsp;&amp;nbsp; └── demo.gif            # 示例动图&#xA;├── clients&#xA;│&amp;nbsp;&amp;nbsp; ├── go                  # Go 客户端&#xA;│&amp;nbsp;&amp;nbsp; ├── gohttp              # HTTP 客户端&#xA;│&amp;nbsp;&amp;nbsp; ├── http                # HTTP 客户端&#xA;│&amp;nbsp;&amp;nbsp; ├── java                # Java 客户端&#xA;│&amp;nbsp;&amp;nbsp; ├── node                # Node.js 客户端  &#xA;│&amp;nbsp;&amp;nbsp; ├── pyauto              # 群友封装的客户端&#xA;│&amp;nbsp;&amp;nbsp; ├── python              # Python 客户端&#xA;│&amp;nbsp;&amp;nbsp; └── rust                # Rust 客户端&#xA;└── docs                    # 文档&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;点击查看&lt;/summary&gt; &#xA; &lt;h3&gt;go&lt;/h3&gt; &#xA; &lt;p&gt;Go 客户端。&lt;/p&gt; &#xA; &lt;h3&gt;gohttp&lt;/h3&gt; &#xA; &lt;p&gt;HTTP 客户端，二进制发布无依赖&lt;/p&gt; &#xA; &lt;h3&gt;http&lt;/h3&gt; &#xA; &lt;p&gt;HTTP 客户端。&lt;/p&gt; &#xA; &lt;h3&gt;node&lt;/h3&gt; &#xA; &lt;p&gt;Node.js 客户端.&lt;/p&gt; &#xA; &lt;h3&gt;java&lt;/h3&gt; &#xA; &lt;p&gt;Java 客户端。&lt;/p&gt; &#xA; &lt;h3&gt;python&lt;/h3&gt; &#xA; &lt;p&gt;Python 客户端。&lt;/p&gt; &#xA; &lt;h3&gt;rpc&lt;/h3&gt; &#xA; &lt;p&gt;RPC 的通信部分和序列化 / 反序列化部分。&lt;/p&gt; &#xA; &lt;h3&gt;rust&lt;/h3&gt; &#xA; &lt;p&gt;Rust 客户端。&lt;/p&gt; &#xA; &lt;h3&gt;sdk&lt;/h3&gt; &#xA; &lt;p&gt;负责将 &lt;code&gt;spy&lt;/code&gt; 注入微信进程，并启动 RPC 服务。&lt;/p&gt; &#xA; &lt;h3&gt;spy&lt;/h3&gt; &#xA; &lt;p&gt;间谍模块，注入到微信中，通过 RPC 做消息转发工作。&lt;/p&gt; &#xA; &lt;h3&gt;wcf&lt;/h3&gt; &#xA; &lt;p&gt;命令行版启动器，调用 &lt;code&gt;sdk&lt;/code&gt; 将 &lt;code&gt;spy&lt;/code&gt; 注入微信。其他客户端可通过 RPC 连接到 &lt;code&gt;spy&lt;/code&gt; 进行消息传递。默认监听的地址为 &lt;code&gt;tcp://0.0.0.0:10086&lt;/code&gt; 和 &lt;code&gt;tcp://0.0.0.0:10087&lt;/code&gt;。一般情况不需要显式运行，各客户端自动调用。&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;版本更新&lt;/h2&gt; &#xA;&lt;h3&gt;v39.0.12 (2023.12.20)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;修复一个问题&lt;/li&gt; &#xA; &lt;li&gt;消息转发&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;点击查看更多&lt;/summary&gt; &#xA; &lt;p&gt;客户端越来越多了，版本号开始混乱，所以重新定义了版本号：&lt;code&gt;w.x.y.z&lt;/code&gt;。&lt;/p&gt; &#xA; &lt;p&gt;其中：&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;w&lt;/code&gt; 是微信的大版本号，如 &lt;code&gt;37&lt;/code&gt; (3.7.a.a), &lt;code&gt;38&lt;/code&gt; (3.8.a.a), &lt;code&gt;39&lt;/code&gt; (3.9.a.a)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;x&lt;/code&gt; 是适配的微信的小版本号，从 0 开始&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;y&lt;/code&gt; 是 &lt;code&gt;WeChatFerry&lt;/code&gt; 的版本，从 0 开始&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;z&lt;/code&gt; 是各客户端的版本，从 0 开始&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v39.0.11 (2023.12.16)&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;修复 PB 消息类型（可能会导致非 Python 客户端崩溃）&lt;/li&gt; &#xA;  &lt;li&gt;修复日志错误&lt;/li&gt; &#xA;  &lt;li&gt;移除非必要依赖&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v39.0.10 (2023.12.08)&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;代码优化&lt;/li&gt; &#xA;  &lt;li&gt;发送卡片消息&lt;/li&gt; &#xA;  &lt;li&gt;拍一拍群友&lt;/li&gt; &#xA;  &lt;li&gt;邀请群成员&lt;/li&gt; &#xA;  &lt;li&gt;图片 OCR&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v39.0.7 (2023.12.03)&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;保存语音&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v39.0.6 (2023.11.26)&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;修复下载图片退出问题&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v39.0.5 (2023.11.22)&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;修复收到某些文件崩溃问题&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v39.0.4 (2023.11.21)&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;下载图片、文件和视频&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v39.0.3 (2023.09.28)&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;修复登录账号昵称超长报错问题&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v39.0.2 (2023.07.16)&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;修复朋友圈消息 &lt;code&gt;is_group&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; 问题&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v39.0.1 (2023.07.16)&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;获取朋友圈消息&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v39.0.0 (2023.07.14)&lt;/h3&gt; &#xA; &lt;p&gt;升级到 &lt;code&gt;3.9.2.23&lt;/code&gt;。&lt;/p&gt; &#xA; &lt;h3&gt;v37.1.25 (2023.05.07)&lt;/h3&gt; &#xA; &lt;p&gt;更新版本编码。&lt;/p&gt; &#xA; &lt;p&gt;根据新版本编码规则：&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;WeChatFerry&lt;/code&gt; 的 &lt;code&gt;v3.7.0.30.25&lt;/code&gt; 应调整为：&lt;code&gt;v37.1.25&lt;/code&gt;，因为此前曾适配过 &lt;code&gt;3.7.0.29&lt;/code&gt;。&lt;/li&gt; &#xA;  &lt;li&gt;Python 客户端 &lt;code&gt;wcferry&lt;/code&gt; 的 &lt;code&gt;v3.7.0.30.25&lt;/code&gt; 应该调整为 &lt;code&gt;v37.1.25.0&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;HTTP 客户端 &lt;code&gt;wcfhttp&lt;/code&gt; 的 &lt;code&gt;v3.7.0.30.25&lt;/code&gt; 应该调整为 &lt;code&gt;v37.1.25.0&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v3.7.0.30.25 (2023.05.05)&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;修复群消息判断错误&lt;/li&gt; &#xA;  &lt;li&gt;修复名片添加好友问题&lt;/li&gt; &#xA;  &lt;li&gt;修复获取数据库多余字符问题&lt;/li&gt; &#xA;  &lt;li&gt;添加 Python 文档&lt;/li&gt; &#xA;  &lt;li&gt;Python 客户端发送图片支持网络路径&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v3.7.0.30.24 (2023.04.19)&lt;/h3&gt; &#xA; &lt;p&gt;实现了一个功能。&lt;/p&gt; &#xA; &lt;h3&gt;v3.7.0.30.23 (2023.04.13)&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;解密图片&lt;/li&gt; &#xA;  &lt;li&gt;获取登录账号信息&lt;/li&gt; &#xA;  &lt;li&gt;获取联系人备注&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v3.7.0.30.22（2023.04.09）&lt;/h3&gt; &#xA; &lt;p&gt;将监听端口调整为可配置。&lt;/p&gt; &#xA; &lt;h3&gt;v3.7.0.30.21（2023.03.15）&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;发送表情&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v3.7.0.30.20（2023.03.12）&lt;/h3&gt; &#xA; &lt;p&gt;修复 wxid 获取问题。&lt;/p&gt; &#xA; &lt;h3&gt;v3.7.0.30.19（2023.03.06）&lt;/h3&gt; &#xA; &lt;p&gt;修复重复消息问题。&lt;/p&gt; &#xA; &lt;h3&gt;v3.7.0.30.18（2023.03.05）&lt;/h3&gt; &#xA; &lt;p&gt;修复添加好友问题。&lt;/p&gt; &#xA; &lt;h3&gt;v3.7.0.30.17（2023.03.05）&lt;/h3&gt; &#xA; &lt;p&gt;修复获取登录账号 wxid 问题。&lt;/p&gt; &#xA; &lt;h3&gt;v3.7.0.30.16（2023.03.04）&lt;/h3&gt; &#xA; &lt;p&gt;将错误码改成错误消息，方便调试。&lt;/p&gt; &#xA; &lt;h3&gt;v3.7.0.30.15（2023.03.01）&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;发送 xml&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v3.7.0.30.14（2023.02.28）&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;添加群成员&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v3.7.0.30.13（2023.02.27）&lt;/h3&gt; &#xA; &lt;p&gt;去除 gRPC 框架，自定义更轻量的 RPC 轮子 &lt;code&gt;nnprc&lt;/code&gt;。&lt;/p&gt; &#xA; &lt;h3&gt;v3.7.0.30.12（2023.01.20）&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;更新 Python 客户端&lt;/li&gt; &#xA;  &lt;li&gt;修改监听地址为 &lt;code&gt;0.0.0.0:10086&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;增加 &lt;code&gt;Launcher&lt;/code&gt;，直接注入 &lt;code&gt;spy&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v3.7.0.30.11（2022.10.19）&lt;/h3&gt; &#xA; &lt;p&gt;更新 Python 客户端。&lt;/p&gt; &#xA; &lt;h3&gt;v3.7.0.30-gRPC-2（2022.10.18）&lt;/h3&gt; &#xA; &lt;p&gt;增加 Java 客户端。&lt;/p&gt; &#xA; &lt;h3&gt;v3.7.0.30-gRPC-1（2022.10.16）&lt;/h3&gt; &#xA; &lt;p&gt;将 RPC 框架切换为 gRPC！&lt;/p&gt; &#xA; &lt;h3&gt;v3.7.0.30-8（2022.09.25）&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;获取登录账号微信 ID&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v3.7.0.30-7（2022.09.24）&lt;/h3&gt; &#xA; &lt;p&gt;修复群聊有系统消息时会崩溃 bug。后续考虑把消息来源交还给客户端自己区别。&lt;/p&gt; &#xA; &lt;h3&gt;v3.7.0.30-6（2022.08.21）&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;通过好友验证&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v3.7.0.30-5（2022.08.20）&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;执行 SQL 语句&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v3.7.0.30-4（2022.08.20）&lt;/h3&gt; &#xA; &lt;p&gt;修复群消息 @人 功能。有几点注意事项：&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;code&gt;vAtWxids&lt;/code&gt; 是要 &lt;code&gt;@&lt;/code&gt; 的 &lt;code&gt;wxid&lt;/code&gt; 清单，以 &lt;code&gt;,&lt;/code&gt; 分隔。&lt;/li&gt; &#xA;  &lt;li&gt;只有群主才能 &lt;code&gt;@所有人&lt;/code&gt;，非群主硬发 &lt;code&gt;@所有人&lt;/code&gt; 会导致消息发不出去；&lt;code&gt;@所有人&lt;/code&gt; 对应 &lt;code&gt;vAtWxids&lt;/code&gt; 为 &lt;code&gt;&#34;notify@all&#34;&lt;/code&gt;。&lt;/li&gt; &#xA;  &lt;li&gt;消息体里 &lt;code&gt;@&lt;/code&gt; 的数量必须与 &lt;code&gt;vAtWxids&lt;/code&gt; 里的数量一致，否则消息能发出但 &lt;code&gt;@&lt;/code&gt; 功能失效。&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;h3&gt;v3.7.0.30-3（2022.08.20）&lt;/h3&gt; &#xA; &lt;p&gt;修复可重入 bug。&lt;/p&gt; &#xA; &lt;h3&gt;v3.7.0.30-2（2022.08.14）&lt;/h3&gt; &#xA; &lt;p&gt;优化 Hook 和 Inject 代码，实现可重入。&lt;/p&gt; &#xA; &lt;h3&gt;v3.7.0.30-1（2022.08.12）&lt;/h3&gt; &#xA; &lt;p&gt;适配微信 &lt;code&gt;3.7.0.30&lt;/code&gt;。&lt;/p&gt; &#xA; &lt;h3&gt;v3.7.0.29-3（2022.08.7）&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;查询数据库，获取库、表。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v3.7.0.29-2（2022.08.7）&lt;/h3&gt; &#xA; &lt;p&gt;优化 RPC。&lt;/p&gt; &#xA; &lt;h3&gt;v3.7.0.29-1（2022.08.7）&lt;/h3&gt; &#xA; &lt;p&gt;适配微信 &lt;code&gt;3.7.0.29&lt;/code&gt;。&lt;/p&gt; &#xA; &lt;h3&gt;v3.3.0.115-3（2021.08.28）&lt;/h3&gt; &#xA; &lt;p&gt;适配微信 &lt;code&gt;3.3.0.115&lt;/code&gt;，新增功能：&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;获取所有联系人&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v3.3.0.115-2（2021.08.22）&lt;/h3&gt; &#xA; &lt;p&gt;适配微信 &lt;code&gt;3.3.0.115&lt;/code&gt;，新增功能：&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;发送图片消息&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;v3.3.0.115-1（2021.08.22）&lt;/h3&gt; &#xA; &lt;p&gt;适配微信 &lt;code&gt;3.3.0.115&lt;/code&gt;。&lt;/p&gt; &#xA; &lt;h3&gt;v3.0.0.57-1（2021.02.12）&lt;/h3&gt; &#xA; &lt;p&gt;适配微信 &lt;code&gt;3.0.0.57&lt;/code&gt;，支持功能：&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;登录状态判断&lt;/li&gt; &#xA;  &lt;li&gt;接收文本消息&lt;/li&gt; &#xA;  &lt;li&gt;发送文本消息&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>zaigie/palworld-server-tool</title>
    <updated>2024-02-03T01:36:07Z</updated>
    <id>tag:github.com,2024-02-03:/zaigie/palworld-server-tool</id>
    <link href="https://github.com/zaigie/palworld-server-tool" rel="alternate"></link>
    <summary type="html">&lt;p&gt;基于Level.sav存档解析和RCON优雅地用可视化界面管理幻兽帕鲁专用服务器。/ Through parse Level.sav and RCON, visual interface management PalWorld dedicated server.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;幻兽帕鲁服务器管理工具&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;简体中文&lt;/strong&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/README.en.md&#34;&gt;English&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; 通过可视化界面及 REST 接口管理幻兽帕鲁专用服务器，基于 SAV 存档文件解析及 RCON 实现&lt;br&gt; 并且花了很漫长且枯燥的时间去做了国际化... &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;GitHub Repo stars&#34; src=&#34;https://img.shields.io/github/stars/zaigie/palworld-server-tool?style=for-the-badge&#34;&gt;&amp;nbsp;&amp;nbsp; &lt;img alt=&#34;Go&#34; src=&#34;https://img.shields.io/badge/Go-00ADD8?style=for-the-badge&amp;amp;logo=go&amp;amp;logoColor=white&#34;&gt;&amp;nbsp;&amp;nbsp; &lt;img alt=&#34;Python&#34; src=&#34;https://img.shields.io/badge/Python-FFD43B?style=for-the-badge&amp;amp;logo=python&amp;amp;logoColor=blue&#34;&gt;&amp;nbsp;&amp;nbsp; &lt;img alt=&#34;Vue&#34; src=&#34;https://img.shields.io/badge/Vue%20js-35495E?style=for-the-badge&amp;amp;logo=vuedotjs&amp;amp;logoColor=4FC08D&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/docs/img/pst-zh-1.png&#34; alt=&#34;PC&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;目前移动端适配良好，可查看下面 &lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#%E5%8A%9F%E8%83%BD%E6%88%AA%E5%9B%BE&#34;&gt;功能截图&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;基于 &lt;code&gt;Level.sav&lt;/code&gt; 存档文件解析实现的功能及路线图：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 完整玩家数据&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 玩家帕鲁数据&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 公会数据&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 玩家背包数据&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;基于官方提供的 RCON 命令（仅服务器可用的）实现功能：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 获取服务器信息&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 在线玩家列表&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 踢出/封禁玩家&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 游戏内广播&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 平滑关闭服务器并广播消息&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;本工具使用 bbolt 单文件存储，将 RCON 和 Level.sav 文件的数据通过定时任务获取并保存，提供简单的可视化界面和 REST 接口和便于管理与开发。&lt;/p&gt; &#xA;&lt;p&gt;由于维护开发人员较少，虽有心但力不足，欢迎各前端和后端甚至数据工程师来提交 PR！&lt;/p&gt; &#xA;&lt;h2&gt;下载&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION] 解析 &lt;code&gt;Level.sav&lt;/code&gt; 存档的任务需要在&lt;strong&gt;短时间（1-3 分钟）耗费较大的系统内存&lt;/strong&gt;（常常是 4GB~6GB），这部分内存会在执行完解析任务后释放，因此你至少需要确保你的服务器有充足的内存！&lt;/p&gt; &#xA; &lt;p&gt;若不满足条件仍需使用，提供了 &lt;code&gt;pst-agent&lt;/code&gt; 部署在游戏服务器，而将 &lt;code&gt;pst&lt;/code&gt; 部署在 PC 或者其它有足够内存执行解析任务的服务器。&lt;/p&gt; &#xA; &lt;p&gt;==&amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/README.agent.md&#34;&gt;pst-agent 部署教程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;请在以下地址下载最新版可执行文件&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zaigie/palworld-server-tool/releases&#34;&gt;Github Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitee.com/jokerwho/palworld-server-tool/releases&#34;&gt;(国内) Gitee Releases&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Docker 部署请参考 &lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#docker-%E9%83%A8%E7%BD%B2&#34;&gt;Docker 部署&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;功能截图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zaigie/palworld-server-tool/assets/17232619/7a861091-94ee-4efe-8274-15df261d50b4&#34;&gt;https://github.com/zaigie/palworld-server-tool/assets/17232619/7a861091-94ee-4efe-8274-15df261d50b4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;桌面端&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/docs/img/pst-zh-2.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/docs/img/pst-zh-4.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/docs/img/pst-zh-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;移动端&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/docs/img/pst-zh-m-1.png&#34; width=&#34;30%&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/docs/img/pst-zh-m-2.png&#34; width=&#34;30%&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/docs/img/pst-zh-m-3.png&#34; width=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;如何开启私服 RCON&lt;/h2&gt; &#xA;&lt;p&gt;需要开启服务器的 RCON 功能，如果你的私服教程有写更好，没有的话，修改 &lt;code&gt;PalWorldSettings.ini&lt;/code&gt; 文件&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;也就是修改游戏内各种倍数、概率的那个文件&lt;/strong&gt;，里面最后的位置有如下：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;AdminPassword=...,...,RCONEnabled=true,RCONPort=25575&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/docs/img/rcon.png&#34; alt=&#34;RCON&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;请&lt;strong&gt;先关闭服务器再作修改&lt;/strong&gt;，你需要设置一个 AdminPassword，然后将 &lt;code&gt;RCONEnabled&lt;/code&gt; 和 &lt;code&gt;RCONPort&lt;/code&gt; 填写如上，再重启服务器即可。&lt;/p&gt; &#xA;&lt;h2&gt;安装部署&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#%E6%96%87%E4%BB%B6%E9%83%A8%E7%BD%B2&#34;&gt;文件部署&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#linux&#34;&gt;Linux&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/README.agent.md#linux&#34;&gt;pst-agent 部署&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#windows&#34;&gt;Windows&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/README.agent.md#windows&#34;&gt;pst-agent 部署&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#docker-%E9%83%A8%E7%BD%B2&#34;&gt;Docker 部署&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#%E5%8D%95%E4%BD%93%E9%83%A8%E7%BD%B2&#34;&gt;单体部署&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#agent-%E9%83%A8%E7%BD%B2&#34;&gt;Agent 部署&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;这里&lt;strong&gt;默认为将 pst 工具和游戏服务器放在同一台物理机上&lt;/strong&gt;，在一些情况下你可能不想要它们部署在同一机器上：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;需要单独部署在其它服务器&lt;/li&gt; &#xA; &lt;li&gt;只需要部署在本地个人电脑&lt;/li&gt; &#xA; &lt;li&gt;游戏服务器性能较弱不满足，采用上述两种方案之一&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;请参考 &lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/README.agent.md&#34;&gt;pst-agent 部署教程&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;文件部署&lt;/h3&gt; &#xA;&lt;h4&gt;Linux&lt;/h4&gt; &#xA;&lt;h5&gt;下载解压&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 下载 pst_{version}_{platform}_{arch}.tar.gz 文件并解压到 pst 目录&#xA;mkdir -p pst &amp;amp;&amp;amp; tar -xzf pst_v0.5.0_linux_amd64.tar.gz -C pst&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;配置&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;打开目录并允许可执行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd pst&#xA;chmod +x pst sav_cli&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;找到其中的 &lt;code&gt;config.yaml&lt;/code&gt; 文件并按照说明修改。&lt;/p&gt; &lt;p&gt;关于其中的 &lt;code&gt;decode_path&lt;/code&gt;，一般就是解压后的 pst 目录加上 &lt;code&gt;sav_cli&lt;/code&gt; ，如果不知道绝对路径，在终端执行 &lt;code&gt;pwd&lt;/code&gt; 即可&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;web: # web 相关配置&#xA;  password: &#34;&#34; # web 管理模式密码&#xA;  port: 8080 # web 服务端口&#xA;rcon: # RCON 相关配置&#xA;  address: &#34;127.0.0.1:25575&#34; # RCON 地址&#xA;  password: &#34;&#34; # 设置的 AdminPassword&#xA;  timeout: 5 # 请求 RCON 超时时间，推荐 &amp;lt;= 5&#xA;  sync_interval: 60 # 定时向 RCON 服务获取玩家在线情况的间隔，单位秒&#xA;save: # 存档文件解析相关配置&#xA;  path: &#34;/path/to/you/Level.sav&#34; # 存档文件路径&#xA;  decode_path: &#34;/path/to/your/sav_cli&#34; # 存档解析工具路径，一般和 pst 在同一目录&#xA;  sync_interval: 600 # 定时从存档获取数据的间隔，单位秒，推荐 &amp;gt;= 600&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h5&gt;运行&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./pst&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-log&#34;&gt;2024/01/31 - 22:39:20 | INFO | palworld-server-tool/main.go:75 | Starting PalWorld Server Tool...&#xA;2024/01/31 - 22:39:20 | INFO | palworld-server-tool/main.go:76 | Version: Develop&#xA;2024/01/31 - 22:39:20 | INFO | palworld-server-tool/main.go:77 | Listening on http://127.0.0.1:8080 or http://192.168.1.66:8080&#xA;2024/01/31 - 22:39:20 | INFO | palworld-server-tool/main.go:78 | Swagger on http://127.0.0.1:8080/swagger/index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;若需要后台运行（关闭 ssh 窗口后仍运行）&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 后台运行并将日志保存在 server.log&#xA;nohup ./pst &amp;gt; server.log 2&amp;gt;&amp;amp;1 &amp;amp;&#xA;# 查看日志&#xA;tail -f server.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;关闭后台运行&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kill $(ps aux | grep &#39;pst&#39; | awk &#39;{print $2}&#39;) | head -n 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;访问&lt;/h5&gt; &#xA;&lt;p&gt;请通过浏览器访问 &lt;a href=&#34;http://127.0.0.1:8080&#34;&gt;http://127.0.0.1:8080&lt;/a&gt; 或 http://{局域网 IP}:8080&lt;/p&gt; &#xA;&lt;p&gt;云服务器开放防火墙及安全组后也可以访问 http://{服务器 IP}:8080&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] 初次打开会显示空白没有内容，请&lt;strong&gt;等待第一次 sav 存档同步完成&lt;/strong&gt;再访问&lt;/p&gt; &#xA; &lt;p&gt;如果你的服务器配置足够且性能良好，你可以试着将 &lt;code&gt;save.sync_interval&lt;/code&gt; 改短一点，默认 600s（10min）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;h5&gt;下载解压&lt;/h5&gt; &#xA;&lt;p&gt;解压 &lt;code&gt;pst_v0.5.0_windows_x86.zip&lt;/code&gt; 到任意目录（推荐命名文件夹目录名称为 &lt;code&gt;pst&lt;/code&gt;）&lt;/p&gt; &#xA;&lt;h5&gt;配置&lt;/h5&gt; &#xA;&lt;p&gt;找到解压目录中的 &lt;code&gt;config.yaml&lt;/code&gt; 文件并按照说明修改。&lt;/p&gt; &#xA;&lt;p&gt;关于其中的 &lt;code&gt;decode_path&lt;/code&gt;，一般就是解压后的 pst 目录加上 &lt;code&gt;sav_cli.exe&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;你也可以直接鼠标右键——“属性”，查看路径和文件名，再将它们拼接起来。（存档文件路径和工具路径同理）&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/docs/img/windows_path.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] 请不要直接将复制的路径粘贴到 &lt;code&gt;config.yaml&lt;/code&gt; 中，而是需要在所有的 &#39;\&#39; 前面再加一个 &#39;\&#39;，像下面展示的一样&lt;/p&gt; &#xA; &lt;p&gt;还有比较重要的是，请确保 &lt;code&gt;config.yaml&lt;/code&gt; 文件为 &lt;strong&gt;ANSI 编码&lt;/strong&gt;，其它编码格式将会导致路径错误等问题！！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;web: # web 相关配置&#xA;  password: &#34;&#34; # web 管理模式密码&#xA;  port: 8080 # web 服务端口&#xA;rcon: # RCON 相关配置&#xA;  address: &#34;127.0.0.1:25575&#34; # RCON 地址&#xA;  password: &#34;&#34; # 设置的 AdminPassword&#xA;  timeout: 5 # 请求 RCON 超时时间，推荐 &amp;lt;= 5&#xA;  sync_interval: 60 # 定时向 RCON 服务获取玩家在线情况的间隔，单位秒&#xA;save: # 存档文件解析相关配置&#xA;  path: &#34;C:\\path\\to\\you\\Level.sav&#34; # 存档文件路径&#xA;  decode_path: &#34;C:\\path\\to\\your\\sav_cli.exe&#34; # 存档解析工具路径，一般和 pst 在同一目录&#xA;  sync_interval: 600 # 定时从存档获取数据的间隔，单位秒，推荐 &amp;gt;= 600&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;运行&lt;/h5&gt; &#xA;&lt;p&gt;这里有两种方式可以在 Windows 下运行&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;start.bat（推荐）&lt;/p&gt; &lt;p&gt;找到解压目录下的 &lt;code&gt;start.bat&lt;/code&gt; 文件，双击运行&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;按下 &lt;code&gt;Win + R&lt;/code&gt;，输入 &lt;code&gt;powershell&lt;/code&gt; 打开 Powershell，通过 &lt;code&gt;cd&lt;/code&gt; 命令到下载的可执行文件目录&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;.\pst.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-log&#34;&gt;2024/01/31 - 22:39:20 | INFO | palworld-server-tool/main.go:75 | Starting PalWorld Server Tool...&#xA;2024/01/31 - 22:39:20 | INFO | palworld-server-tool/main.go:76 | Version: Develop&#xA;2024/01/31 - 22:39:20 | INFO | palworld-server-tool/main.go:77 | Listening on http://127.0.0.1:8080 or http://192.168.31.214:8080&#xA;2024/01/31 - 22:39:20 | INFO | palworld-server-tool/main.go:78 | Swagger on http://127.0.0.1:8080/swagger/index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;看到上述界面表示成功运行，请保持窗口打开&lt;/p&gt; &#xA;&lt;h5&gt;访问&lt;/h5&gt; &#xA;&lt;p&gt;请通过浏览器访问 &lt;a href=&#34;http://127.0.0.1:8080&#34;&gt;http://127.0.0.1:8080&lt;/a&gt; 或 http://{局域网 IP}:8080&lt;/p&gt; &#xA;&lt;p&gt;云服务器开放防火墙及安全组后也可以访问 http://{服务器 IP}:8080&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] 初次打开会显示空白没有内容，请&lt;strong&gt;等待第一次 sav 存档同步完成&lt;/strong&gt;再访问&lt;/p&gt; &#xA; &lt;p&gt;如果你的服务器配置足够且性能良好，你可以试着将 &lt;code&gt;save.sync_interval&lt;/code&gt; 改短一点，默认 600s（10min）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Docker 部署&lt;/h3&gt; &#xA;&lt;h4&gt;单体部署&lt;/h4&gt; &#xA;&lt;p&gt;只需要一个容器，将游戏存档目录映射至容器内，与游戏服务器在同一物理主机上运行。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --name pst \&#xA;-p 8080:8080 \&#xA;-v /path/to/your/Pal/Saved/SaveGames/0/E8F71231A51246429C7CCCCD51320C22:/game \&#xA;-e WEB__PASSWORD=&#34;your password&#34; \&#xA;-e RCON__ADDRESS=&#34;172.17.0.1:25575&#34; \&#xA;-e RCON__PASSWORD=&#34;your password&#34; \&#xA;-e SAVE__PATH=&#34;/game/Level.sav&#34; \&#xA;-e SAVE__SYNC_INTERVAL=600 \&#xA;jokerwho/palworld-server-tool:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;最重要的是需要 -v 到游戏存档文件（Level.sav）所在目录，将其映射到容器内的 /game 目录&lt;/p&gt; &#xA;&lt;h5&gt;持久化&lt;/h5&gt; &#xA;&lt;p&gt;如果需要持久化 &lt;code&gt;pst.db&lt;/code&gt; 文件：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 先创建文件，避免被识别为目录&#xA;touch pst.db&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后在 &lt;code&gt;docker run -v&lt;/code&gt; 中增加 &lt;code&gt;-v ./pst.db:/app/pst.db&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h5&gt;环境变量&lt;/h5&gt; &#xA;&lt;p&gt;设置各环境变量，与 &lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/#%E9%85%8D%E7%BD%AE&#34;&gt;&lt;code&gt;config.yaml&lt;/code&gt;&lt;/a&gt; 基本相似，表格如下：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] 注意区分单个和多个下划线，若需修改最好请复制下表变量名！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;变量名&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;默认值&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;类型&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WEB__PASSWORD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Web 界面的管理员模式密码&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WEB__PORT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8080&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;数字&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;若非必要不建议修改，而是更改容器映射端口&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON__ADDRESS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;127.0.0.1:25575&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON 服务对应的地址，可以用容器网络 172.17.0.1:25575&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON__PASSWORD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;服务器配置文件中的 AdminPassword&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON__TIMEOUT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;数字&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;单个请求 RCON 服务的超时时间&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON__SYNC_INTERVAL&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;60&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;数字&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;请求 RCON 服务器同步玩家在线数据的间隔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SAVE__PATH&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;游戏存档所在路径 &lt;strong&gt;请务必填写为容器内的路径&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SAVE__DECODE_PATH&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;/app/sav_cli&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;⚠️ 容器内置，禁止修改，会导致存档解析工具错误&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SAVE__SYNC_INTERVAL&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;600&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;数字&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;同步玩家存档数据的间隔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Agent 部署&lt;/h4&gt; &#xA;&lt;p&gt;需要两个容器，分别是 &lt;code&gt;palworld-server-tool&lt;/code&gt; 和 &lt;code&gt;palworld-server-tool-agent&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;适用于：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;需要单独部署在其它服务器&lt;/li&gt; &#xA; &lt;li&gt;只需要部署在本地个人电脑&lt;/li&gt; &#xA; &lt;li&gt;游戏服务器性能较弱不满足，采用上述两种方案之一&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;先运行 agent 容器&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --name pst-agent \&#xA;-p 8081:8081 \&#xA;-v /path/to/your/Pal/Saved/SaveGames/0/E8F71231A51246429C7CCCCD51320C22:/game \&#xA;-e SAV_FILE=&#34;/game/Level.sav&#34; \&#xA;jokerwho/palworld-server-tool-agent:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;需要 -v 到游戏存档文件（Level.sav）所在目录，将其映射到容器内的 /game 目录&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;变量名&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;默认值&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;类型&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SAV_FILE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;游戏存档所在路径 &lt;strong&gt;请务必填写为容器内的路径&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h5&gt;再运行 pst 容器&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --name pst \&#xA;-p 8080:8080 \&#xA;-e WEB__PASSWORD=&#34;your password&#34; \&#xA;-e RCON__ADDRESS=&#34;游戏服务器IP:25575&#34; \&#xA;-e RCON__PASSWORD=&#34;your password&#34; \&#xA;-e SAVE__PATH=&#34;http://游戏服务器IP:Agent端口/sync&#34; \&#xA;-e SAVE__SYNC_INTERVAL=600 \&#xA;jokerwho/palworld-server-tool:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;持久化&lt;/h5&gt; &#xA;&lt;p&gt;如果需要持久化 &lt;code&gt;pst.db&lt;/code&gt; 文件：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 先创建文件，避免被识别为目录&#xA;touch pst.db&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后在 &lt;code&gt;docker run -v&lt;/code&gt; 中增加 &lt;code&gt;-v ./pst.db:/app/pst.db&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h5&gt;环境变量&lt;/h5&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] 注意区分单个和多个下划线，若需修改最好请复制下表变量名！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;变量名&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;默认值&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;类型&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WEB__PASSWORD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Web 界面的管理员模式密码&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WEB__PORT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8080&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;数字&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;若非必要不建议修改，而是更改容器映射端口&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON__ADDRESS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;127.0.0.1:25575&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON 服务对应的地址，一般为游戏服务器 IP:25575&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON__PASSWORD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;服务器配置文件中的 AdminPassword&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON__TIMEOUT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;数字&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;单个请求 RCON 服务的超时时间&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RCON__SYNC_INTERVAL&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;60&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;数字&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;请求 RCON 服务器同步玩家在线数据的间隔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SAVE__PATH&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;pst-agent 所在服务地址，格式为&lt;br&gt; http://{游戏服务器 IP}:{Agent 端口}/sync&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SAVE__DECODE_PATH&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#34;/app/sav_cli&#34;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;文本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;⚠️ 容器内置，禁止修改，会导致存档解析工具错误&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SAVE__SYNC_INTERVAL&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;600&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;数字&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;同步玩家存档数据的间隔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;接口文档&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://q4ly3bfcop.apifox.cn/&#34;&gt;APIFox 在线接口文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;感谢&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cheahjs/palworld-save-tools&#34;&gt;palworld-save-tools&lt;/a&gt; 提供了存档解析工具实现&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EternalWraith/PalEdit&#34;&gt;PalEdit&lt;/a&gt; 提供了最初的数据化思路及逻辑&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gorcon/rcon&#34;&gt;gorcon&lt;/a&gt; 提供的 RCON 请求/接收基础能力&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;许可证&lt;/h2&gt; &#xA;&lt;p&gt;根据 &lt;a href=&#34;https://raw.githubusercontent.com/zaigie/palworld-server-tool/main/LICENSE&#34;&gt;Apache2.0 许可证&lt;/a&gt; 授权，任何转载请在 README 和文件部分标明！任何商用行为请务必告知！&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AILab-CVC/YOLO-World</title>
    <updated>2024-02-03T01:36:07Z</updated>
    <id>tag:github.com,2024-02-03:/AILab-CVC/YOLO-World</id>
    <link href="https://github.com/AILab-CVC/YOLO-World" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Real-Time Open-Vocabulary Object Detection&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/AILab-CVC/YOLO-World/master/assets/yolo_logo.png&#34; width=&#34;60%&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://scholar.google.com/citations?hl=zh-CN&amp;amp;user=PH8rJHYAAAAJ&#34;&gt;Tianheng Cheng&lt;/a&gt;&#xA; &lt;sup&gt;&lt;span&gt;2,3,*&lt;/span&gt;&lt;/sup&gt;, &#xA; &lt;a href=&#34;https://linsong.info/&#34;&gt;Lin Song&lt;/a&gt;&#xA; &lt;sup&gt;&lt;span&gt;1,📧,*&lt;/span&gt;&lt;/sup&gt;, &#xA; &lt;a href=&#34;https://yxgeee.github.io/&#34;&gt;Yixiao Ge&lt;/a&gt;&#xA; &lt;sup&gt;&lt;span&gt;1,🌟,2&lt;/span&gt;&lt;/sup&gt;, &#xA; &lt;a href=&#34;http://eic.hust.edu.cn/professor/liuwenyu/&#34;&gt; Wenyu Liu&lt;/a&gt;&#xA; &lt;sup&gt;&lt;span&gt;3&lt;/span&gt;&lt;/sup&gt;, &#xA; &lt;a href=&#34;https://xwcv.github.io/&#34;&gt;Xinggang Wang&lt;/a&gt;&#xA; &lt;sup&gt;&lt;span&gt;3,📧&lt;/span&gt;&lt;/sup&gt;, &#xA; &lt;a href=&#34;https://scholar.google.com/citations?user=4oXBp9UAAAAJ&amp;amp;hl=en&#34;&gt;Ying Shan&lt;/a&gt;&#xA; &lt;sup&gt;&lt;span&gt;1,2&lt;/span&gt;&lt;/sup&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;* Equal contribution 🌟 Project lead 📧 Corresponding author&lt;/p&gt; &#xA; &lt;p&gt;&lt;sup&gt;1&lt;/sup&gt; Tencent AI Lab, &lt;sup&gt;2&lt;/sup&gt; ARC Lab, Tencent PCG &lt;sup&gt;3&lt;/sup&gt; Huazhong University of Science and Technology &lt;br&gt;&lt;/p&gt; &#xA; &lt;div&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://wondervictor.github.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Project-Page-green&#34; alt=&#34;arxiv paper&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/abs/2401.17270&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/arXiv-Paper-red&#34; alt=&#34;arxiv paper&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/spaces/stevengrove/YOLO-World&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97HugginngFace-Spaces-orange&#34; alt=&#34;video&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AILab-CVC/YOLO-World/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPLv3.0-blue&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Updates&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;🔥[2024-2-1]:&lt;/code&gt; We&#39;ve released the code and weights of YOLO-World now!&lt;br&gt; &lt;code&gt;[2024-2-1]:&lt;/code&gt; We deploy the YOLO-World demo on &lt;a href=&#34;https://huggingface.co/spaces/stevengrove/YOLO-World&#34;&gt;HuggingFace 🤗&lt;/a&gt;, you can try it now!&lt;br&gt; &lt;code&gt;[2024-1-31]:&lt;/code&gt; We are excited to launch &lt;strong&gt;YOLO-World&lt;/strong&gt;, a cutting-edge real-time open-vocabulary object detector.&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;p&gt;YOLO-World is under active development and please stay tuned ☕️!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Complete documents for pre-training YOLO-World.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; COCO &amp;amp; LVIS fine-tuning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Extra pre-trained models on more data, such as CC3M.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Deployment toolkits, e.g., ONNX or TensorRT.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Inference acceleration and scripts for speed evaluation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Automatic labeling framework for image-text pairs, such as CC3M.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Highlights&lt;/h2&gt; &#xA;&lt;p&gt;This repo contains the PyTorch implementation, pre-trained weights, and pre-training/fine-tuning code for YOLO-World.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;YOLO-World is pre-trained on large-scale datasets, including detection, grounding, and image-text datasets.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;YOLO-World is the next-generation YOLO detector, with a strong open-vocabulary detection capability and grounding ability.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;YOLO-World presents a &lt;em&gt;prompt-then-detect&lt;/em&gt; paradigm for efficient user-vocabulary inference, which re-parameterizes vocabulary embeddings as parameters into the model and achieve superior inference speed. You can try to export your own detection model without extra training or fine-tuning in our &lt;a href=&#34;https://huggingface.co/spaces/stevengrove/YOLO-World&#34;&gt;online demo&lt;/a&gt;!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;center&gt; &#xA; &lt;img width=&#34;800px&#34; src=&#34;https://raw.githubusercontent.com/AILab-CVC/YOLO-World/master/assets/yolo_arch.png&#34;&gt; &#xA;&lt;/center&gt; &#xA;&lt;h2&gt;Abstract&lt;/h2&gt; &#xA;&lt;p&gt;The You Only Look Once (YOLO) series of detectors have established themselves as efficient and practical tools. However, their reliance on predefined and trained object categories limits their applicability in open scenarios. Addressing this limitation, we introduce YOLO-World, an innovative approach that enhances YOLO with open-vocabulary detection capabilities through vision-language modeling and pre-training on large-scale datasets. Specifically, we propose a new Re-parameterizable Vision-Language Path Aggregation Network (RepVL-PAN) and region-text contrastive loss to facilitate the interaction between visual and linguistic information. Our method excels in detecting a wide range of objects in a zero-shot manner with high efficiency. On the challenging LVIS dataset, YOLO-World achieves 35.4 AP with 52.0 FPS on V100, which outperforms many state-of-the-art methods in terms of both accuracy and speed. Furthermore, the fine-tuned YOLO-World achieves remarkable performance on several downstream tasks, including object detection and open-vocabulary instance segmentation.&lt;/p&gt; &#xA;&lt;h2&gt;Main Results&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;ve pre-trained YOLO-World-S/M/L from scratch and evaluate on the &lt;code&gt;LVIS val-1.0&lt;/code&gt; and &lt;code&gt;LVIS minival&lt;/code&gt;. We provide the pre-trained model weights and training logs for applications/research or re-producing the results.&lt;/p&gt; &#xA;&lt;h3&gt;Zero-shot Inference on LVIS dataset&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;model&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Pre-train Data&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;AP&lt;sup&gt;fixed&lt;/sup&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;AP&lt;sup&gt;mini&lt;/sup&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;AP&lt;sub&gt;r&lt;/sub&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;AP&lt;sub&gt;c&lt;/sub&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;AP&lt;sub&gt;f&lt;/sub&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;AP&lt;sup&gt;val&lt;/sup&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;AP&lt;sub&gt;r&lt;/sub&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;AP&lt;sub&gt;c&lt;/sub&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;AP&lt;sub&gt;f&lt;/sub&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;weights&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AILab-CVC/YOLO-World/master/configs/pretrain/yolo_world_s_dual_3block_2e-4_100e_4x8gpus_obj365v1_goldg_train_lvis_minival.py&#34;&gt;YOLO-World-S&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;O365+GoldG&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;26.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;24.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;16.6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;22.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;27.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;24.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://huggingface.co/wondervictor/YOLO-World/resolve/main/yolo_world_s_clip_base_dual_vlpan_2e-3adamw_32xb16_100e_o365_goldg_train_pretrained-18bea4d2.pth&#34;&gt;HF Checkpoints 🤗&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AILab-CVC/YOLO-World/master/configs/pretrain/yolo_world_m_dual_l2norm_2e-4_100e_4x8gpus_obj365v1_goldg_train_lvis_minival.py&#34;&gt;YOLO-World-M&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;O365+GoldG&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;31.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;28.6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;19.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;26.6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;31.9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;22.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;16.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;19.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;28.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://huggingface.co/wondervictor/YOLO-World/resolve/main/yolo_world_m_clip_base_dual_vlpan_2e-3adamw_32xb16_100e_o365_goldg_train_pretrained-2b7bd1be.pth&#34;&gt;HF Checkpoints 🤗&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AILab-CVC/YOLO-World/master/configs/pretrain/yolo_world_s_dual_3block_2e-4_100e_4x8gpus_obj365v1_goldg_train_lvis_minival.py&#34;&gt;YOLO-World-L&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;O365+GoldG&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;35.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;32.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;22.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;30.6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;36.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;24.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;22.4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;32.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://huggingface.co/wondervictor/YOLO-World/resolve/main/yolo_world_l_clip_base_dual_vlpan_2e-3adamw_32xb16_100e_o365_goldg_train_pretrained-0e566235.pth&#34;&gt;HF Checkpoints 🤗&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The evaluation results of AP&lt;sup&gt;fixed&lt;/sup&gt; are tested on LVIS &lt;code&gt;minival&lt;/code&gt; with &lt;a href=&#34;https://github.com/achalddave/large-vocab-devil&#34;&gt;fixed AP&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The evaluation results of AP&lt;sup&gt;mini&lt;/sup&gt; are tested on LVIS &lt;code&gt;minival&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The evaluation results of AP&lt;sup&gt;val&lt;/sup&gt; are tested on LVIS &lt;code&gt;val 1.0&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;1. Installation&lt;/h3&gt; &#xA;&lt;p&gt;YOLO-World is developed based on &lt;code&gt;torch==1.11.0&lt;/code&gt; &lt;code&gt;mmyolo==0.6.0&lt;/code&gt; and &lt;code&gt;mmdetection==3.0.0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# install key dependencies&#xA;pip install mmdetection==3.0.0 mmengine transformers&#xA;&#xA;# clone the repo&#xA;git clone https://github.com/AILAB-CVC/YOLO-World.git&#xA;cd YOLO-World &#xA;&#xA;# install mmyolo&#xA;mkdir third_party&#xA;git clone https://github.com/open-mmlab/mmyolo.git&#xA;cd ..&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Preparing Data&lt;/h3&gt; &#xA;&lt;p&gt;We provide the details about the pre-training data in &lt;a href=&#34;https://raw.githubusercontent.com/AILab-CVC/YOLO-World/master/docs/data.md&#34;&gt;docs/data&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Training &amp;amp; Evaluation&lt;/h2&gt; &#xA;&lt;p&gt;We adopt the default &lt;a href=&#34;https://raw.githubusercontent.com/AILab-CVC/YOLO-World/master/tools/train.py&#34;&gt;training&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/AILab-CVC/YOLO-World/master/tools/test.py&#34;&gt;evaluation&lt;/a&gt; scripts of &lt;a href=&#34;https://github.com/open-mmlab/mmyolo&#34;&gt;mmyolo&lt;/a&gt;. We provide the configs for pre-training and fine-tuning in &lt;code&gt;configs/pretrain&lt;/code&gt; and &lt;code&gt;configs/finetune_coco&lt;/code&gt;. Training YOLO-World is easy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x tools/dist_train.sh&#xA;# sample command for pre-training, use AMP for mixed-precision training&#xA;./tools/dist_train.sh configs/pretrain/yolo_world_l_t2i_bn_2e-4_100e_4x8gpus_obj365v1_goldg_train_lvis_minival.py 8 --amp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; YOLO-World is pre-trained on 4 nodes with 8 GPUs per node (32 GPUs in total). For pre-training, the &lt;code&gt;node_rank&lt;/code&gt; and &lt;code&gt;nnodes&lt;/code&gt; for multi-node training should be specified.&lt;/p&gt; &#xA;&lt;p&gt;Evaluating YOLO-World is also easy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x tools/dist_test.sh&#xA;./tools/dist_test.sh path/to/config path/to/weights 8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; We mainly evaluate the performance on LVIS-minival for pre-training.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;We provide the details about deployment for downstream applications in &lt;a href=&#34;https://raw.githubusercontent.com/AILab-CVC/YOLO-World/master/docs/deploy.md&#34;&gt;docs/deployment&lt;/a&gt;. You can directly download the ONNX model through the online &lt;a href=&#34;https://huggingface.co/spaces/stevengrove/YOLO-World&#34;&gt;demo&lt;/a&gt; in Huggingface Spaces 🤗.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;We sincerely thank &lt;a href=&#34;https://github.com/open-mmlab/mmyolo&#34;&gt;mmyolo&lt;/a&gt;, &lt;a href=&#34;https://github.com/open-mmlab/mmdetection&#34;&gt;mmdetection&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/GLIP&#34;&gt;GLIP&lt;/a&gt;, and &lt;a href=&#34;https://github.com/huggingface/transformers&#34;&gt;transformers&lt;/a&gt; for providing their wonderful code to the community!&lt;/p&gt; &#xA;&lt;h2&gt;Citations&lt;/h2&gt; &#xA;&lt;p&gt;If you find YOLO-World is useful in your research or applications, please consider giving us a star 🌟 and citing it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{cheng2024yolow,&#xA;  title={YOLO-World: Real-Time Open-Vocabulary Object Detection},&#xA;  author={Cheng, Tianheng and Song, Lin and Ge, Yixiao and Liu, Wenyu and Wang, Xinggang and Shan, Ying},&#xA;  journal={arXiv preprint arXiv:2401.17270},&#xA;  year={2024}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;YOLO-World is under the GPL-v3 Licence and is supported for comercial usage.&lt;/p&gt;</summary>
  </entry>
</feed>