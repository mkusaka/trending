<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-17T01:36:35Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>NanmiCoder/MediaCrawler</title>
    <updated>2024-03-17T01:36:35Z</updated>
    <id>tag:github.com,2024-03-17:/NanmiCoder/MediaCrawler</id>
    <link href="https://github.com/NanmiCoder/MediaCrawler" rel="alternate"></link>
    <summary type="html">&lt;p&gt;小红书笔记 | 评论爬虫、抖音视频 | 评论爬虫、快手视频 | 评论爬虫、B 站视频 ｜ 评论爬虫、微博帖子 ｜ 评论爬虫&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;免责声明：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;本仓库的所有内容仅供学习和参考之用，禁止用于商业用途。任何人或组织不得将本仓库的内容用于非法用途或侵犯他人合法权益。本仓库所涉及的爬虫技术仅用于学习和研究，不得用于对其他平台进行大规模爬虫或其他非法行为。对于因使用本仓库内容而引起的任何法律责任，本仓库不承担任何责任。使用本仓库的内容即表示您同意本免责声明的所有条款和条件。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;仓库描述&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;小红书爬虫&lt;/strong&gt;，&lt;strong&gt;抖音爬虫&lt;/strong&gt;， &lt;strong&gt;快手爬虫&lt;/strong&gt;， &lt;strong&gt;B站爬虫&lt;/strong&gt;， &lt;strong&gt;微博爬虫&lt;/strong&gt;...。&lt;br&gt; 目前能抓取小红书、抖音、快手、B站、微博的视频、图片、评论、点赞、转发等信息。&lt;/p&gt; &#xA;&lt;p&gt;原理：利用&lt;a href=&#34;https://playwright.dev/&#34;&gt;playwright&lt;/a&gt;搭桥，保留登录成功后的上下文浏览器环境，通过执行JS表达式获取一些加密参数 通过使用此方式，免去了复现核心加密JS代码，逆向难度大大降低&lt;/p&gt; &#xA;&lt;p&gt;爬虫技术交流群：&lt;a href=&#34;http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;amp;k=NFz-oY7Pek3gpG5zbLJFHARlB8lKL94f&amp;amp;authKey=FlxIQK99Uu90wddNV5W%2FBga6T6lXU5BRqyTTc26f2P2ZK5OW%2BDhHp7MwviX%2BbrPa&amp;amp;noverify=0&amp;amp;group_code=949715256&#34;&gt;949715256&lt;/a&gt;，同时欢迎大家贡献代码提交PR&lt;/p&gt; &#xA;&lt;p&gt;视频配置教程：&lt;a href=&#34;https://space.bilibili.com/434377496/channel/series&#34;&gt;MediaCrawler视频入门教程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;感谢下列Sponsors对本仓库赞助&lt;/h2&gt; &#xA;&lt;p&gt;成为赞助者，展示你的产品在这里，联系作者：&lt;a href=&#34;mailto:relakkes@gmail.com&#34;&gt;relakkes@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;功能列表&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;平台&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Cookie 登录&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;二维码登录&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;手机号登录&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;关键词搜索&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;指定视频/帖子 ID 爬取&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;登录状态缓存&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;数据保存&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;IP 代理池&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;滑块验证码&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;小红书&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✕&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;抖音&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;快手&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✕&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✕&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;B 站&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✕&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✕&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;微博&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✕&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✕&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;使用方法&lt;/h2&gt; &#xA;&lt;h3&gt;创建并激活 python 虚拟环境&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 进入项目根目录&#xA;cd MediaCrawler&#xA;&#xA;# 创建虚拟环境&#xA;python -m venv venv&#xA;&#xA;# macos &amp;amp; linux 激活虚拟环境&#xA;source venv/bin/activate&#xA;&#xA;# windows 激活虚拟环境&#xA;venv\Scripts\activate&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;安装依赖库&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip3 install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;安装 playwright浏览器驱动&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;playwright install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;运行爬虫程序&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 默认没有开启评论爬取模式，有需要请到配置文件中指定&#xA;# 从配置文件中读取关键词搜索相关的帖子并爬去帖子信息与评论&#xA;python main.py --platform xhs --lt qrcode --type search&#xA;&#xA;# 从配置文件中读取指定的帖子ID列表获取指定帖子的信息与评论信息&#xA;python main.py --platform xhs --lt qrcode --type detail&#xA;&#xA;# 打开对应APP扫二维码登录&#xA;  &#xA;# 其他平台爬虫使用示例, 执行下面的命令查看&#xA;python main.py --help    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;数据保存&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持保存到关系型数据库（Mysql、PgSQL等）&lt;/li&gt; &#xA; &lt;li&gt;支持保存到csv中（data/目录下）&lt;/li&gt; &#xA; &lt;li&gt;支持保存到json中（data/目录下）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;打赏&lt;/h2&gt; &#xA;&lt;p&gt;如果觉得项目不错的话可以打赏哦。您的支持就是我最大的动力！&lt;/p&gt; &#xA;&lt;p&gt;打赏时您可以备注名称，我会将您添加至打赏列表中。&lt;/p&gt; &#xA;&lt;p&gt; &lt;img alt=&#34;打赏-微信&#34; src=&#34;https://raw.githubusercontent.com/NanmiCoder/MediaCrawler/main/static/images/wechat_pay.jpeg&#34; style=&#34;width: 200px;margin-right: 140px;&#34;&gt; &lt;img alt=&#34;打赏-支付宝&#34; src=&#34;https://raw.githubusercontent.com/NanmiCoder/MediaCrawler/main/static/images/zfb_pay.jpeg&#34; style=&#34;width: 200px&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;捐赠信息&lt;/h2&gt; &#xA;&lt;p&gt;PS：如果打赏时请备注捐赠者，如有遗漏请联系我添加（有时候消息多可能会漏掉，十分抱歉）&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;捐赠者&lt;/th&gt; &#xA;   &lt;th&gt;捐赠金额&lt;/th&gt; &#xA;   &lt;th&gt;捐赠日期&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Strem Gamer&lt;/td&gt; &#xA;   &lt;td&gt;20 元&lt;/td&gt; &#xA;   &lt;td&gt;2024-03-16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;*鑫&lt;/td&gt; &#xA;   &lt;td&gt;20 元&lt;/td&gt; &#xA;   &lt;td&gt;2024-03-14&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Yuzu&lt;/td&gt; &#xA;   &lt;td&gt;20 元&lt;/td&gt; &#xA;   &lt;td&gt;2024-03-07&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;**宁&lt;/td&gt; &#xA;   &lt;td&gt;100 元&lt;/td&gt; &#xA;   &lt;td&gt;2024-03-03&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;**媛&lt;/td&gt; &#xA;   &lt;td&gt;20 元&lt;/td&gt; &#xA;   &lt;td&gt;2024-03-03&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Scarlett&lt;/td&gt; &#xA;   &lt;td&gt;20 元&lt;/td&gt; &#xA;   &lt;td&gt;2024-02-16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Asun&lt;/td&gt; &#xA;   &lt;td&gt;20 元&lt;/td&gt; &#xA;   &lt;td&gt;2024-01-30&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;何*&lt;/td&gt; &#xA;   &lt;td&gt;100 元&lt;/td&gt; &#xA;   &lt;td&gt;2024-01-21&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;allen&lt;/td&gt; &#xA;   &lt;td&gt;20 元&lt;/td&gt; &#xA;   &lt;td&gt;2024-01-10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;llllll&lt;/td&gt; &#xA;   &lt;td&gt;20 元&lt;/td&gt; &#xA;   &lt;td&gt;2024-01-07&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;邝*元&lt;/td&gt; &#xA;   &lt;td&gt;20 元&lt;/td&gt; &#xA;   &lt;td&gt;2023-12-29&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;50chen&lt;/td&gt; &#xA;   &lt;td&gt;50 元&lt;/td&gt; &#xA;   &lt;td&gt;2023-12-22&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;xiongot&lt;/td&gt; &#xA;   &lt;td&gt;20 元&lt;/td&gt; &#xA;   &lt;td&gt;2023-12-17&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;atom.hu&lt;/td&gt; &#xA;   &lt;td&gt;20 元&lt;/td&gt; &#xA;   &lt;td&gt;2023-12-16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;一呆&lt;/td&gt; &#xA;   &lt;td&gt;20 元&lt;/td&gt; &#xA;   &lt;td&gt;2023-12-01&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;坠落&lt;/td&gt; &#xA;   &lt;td&gt;50 元&lt;/td&gt; &#xA;   &lt;td&gt;2023-11-08&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;运行报错常见问题Q&amp;amp;A&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;遇到问题先自行搜索解决下，现在AI很火，用ChatGPT大多情况下能解决你的问题 &lt;a href=&#34;https://sider.ai/invited?c=8e03db1a973401fdf114ed9cf9f8c183&#34;&gt;免费的ChatGPT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;➡️➡️➡️ &lt;a href=&#34;https://raw.githubusercontent.com/NanmiCoder/MediaCrawler/main/docs/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.md&#34;&gt;常见问题&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;项目代码结构&lt;/h2&gt; &#xA;&lt;p&gt;➡️➡️➡️ &lt;a href=&#34;https://raw.githubusercontent.com/NanmiCoder/MediaCrawler/main/docs/%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84.md&#34;&gt;项目代码结构说明&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;手机号登录说明&lt;/h2&gt; &#xA;&lt;p&gt;➡️➡️➡️ &lt;a href=&#34;https://raw.githubusercontent.com/NanmiCoder/MediaCrawler/main/docs/%E6%89%8B%E6%9C%BA%E5%8F%B7%E7%99%BB%E5%BD%95%E8%AF%B4%E6%98%8E.md&#34;&gt;手机号登录说明&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;star 趋势图&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如果该项目对你有帮助，star一下 ❤️❤️❤️&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#NanmiCoder/MediaCrawler&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=NanmiCoder/MediaCrawler&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;参考&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;xhs客户端 &lt;a href=&#34;https://github.com/ReaJason/xhs&#34;&gt;ReaJason的xhs仓库&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;短信转发 &lt;a href=&#34;https://github.com/pppscn/SmsForwarder&#34;&gt;参考仓库&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;内网穿透工具 &lt;a href=&#34;https://ngrok.com/docs/&#34;&gt;ngrok&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>huggingface/safetensors</title>
    <updated>2024-03-17T01:36:35Z</updated>
    <id>tag:github.com,2024-03-17:/huggingface/safetensors</id>
    <link href="https://github.com/huggingface/safetensors" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple, safe way to store and distribute tensors&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://huggingface.co/datasets/safetensors/assets/raw/main/banner-dark.svg&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://huggingface.co/datasets/safetensors/assets/raw/main/banner-light.svg&#34;&gt; &#xA;  &lt;img alt=&#34;Hugging Face Safetensors Library&#34; src=&#34;https://huggingface.co/datasets/safetensors/assets/raw/main/banner-light.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA; &lt;/picture&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;Python &lt;a href=&#34;https://pypi.org/pypi/safetensors/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/safetensors.svg?sanitize=true&#34; alt=&#34;Pypi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/docs/safetensors/index&#34;&gt;&lt;img src=&#34;https://img.shields.io/website/http/huggingface.co/docs/safetensors/index.svg?label=docs&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/huggingface/safetensors&#34;&gt;&lt;img src=&#34;https://codecov.io/github/huggingface/safetensors/coverage.svg?branch=main&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pepy.tech/project/safetensors&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/badge/safetensors/month&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Rust &lt;a href=&#34;https://crates.io/crates/safetensors&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/safetensors.svg?sanitize=true&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/safetensors/&#34;&gt;&lt;img src=&#34;https://docs.rs/safetensors/badge.svg?sanitize=true&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/huggingface/safetensors&#34;&gt;&lt;img src=&#34;https://codecov.io/github/huggingface/safetensors/coverage.svg?branch=main&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://deps.rs/repo/github/huggingface/safetensors?path=safetensors&#34;&gt;&lt;img src=&#34;https://deps.rs/repo/github/huggingface/safetensors/status.svg?path=safetensors&#34; alt=&#34;Dependency status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;safetensors&lt;/h1&gt; &#xA;&lt;h2&gt;Safetensors&lt;/h2&gt; &#xA;&lt;p&gt;This repository implements a new simple format for storing tensors safely (as opposed to pickle) and that is still fast (zero-copy).&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;h4&gt;Pip&lt;/h4&gt; &#xA;&lt;p&gt;You can install safetensors via the pip manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install safetensors&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;From source&lt;/h4&gt; &#xA;&lt;p&gt;For the sources, you need Rust&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install Rust&#xA;curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh&#xA;# Make sure it&#39;s up to date and using stable channel&#xA;rustup update&#xA;git clone https://github.com/huggingface/safetensors&#xA;cd safetensors/bindings/python&#xA;pip install setuptools_rust&#xA;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Getting started&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from safetensors import safe_open&#xA;from safetensors.torch import save_file&#xA;&#xA;tensors = {&#xA;   &#34;weight1&#34;: torch.zeros((1024, 1024)),&#xA;   &#34;weight2&#34;: torch.zeros((1024, 1024))&#xA;}&#xA;save_file(tensors, &#34;model.safetensors&#34;)&#xA;&#xA;tensors = {}&#xA;with safe_open(&#34;model.safetensors&#34;, framework=&#34;pt&#34;, device=&#34;cpu&#34;) as f:&#xA;   for key in f.keys():&#xA;       tensors[key] = f.get_tensor(key)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://huggingface.co/docs/safetensors/index&#34;&gt;Python documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Format&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;8 bytes: &lt;code&gt;N&lt;/code&gt;, an unsigned little-endian 64-bit integer, containing the size of the header&lt;/li&gt; &#xA; &lt;li&gt;N bytes: a JSON UTF-8 string representing the header. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The header data MUST begin with a &lt;code&gt;{&lt;/code&gt; character (0x7B).&lt;/li&gt; &#xA;   &lt;li&gt;The header data MAY be trailing padded with whitespace (0x20).&lt;/li&gt; &#xA;   &lt;li&gt;The header is a dict like &lt;code&gt;{&#34;TENSOR_NAME&#34;: {&#34;dtype&#34;: &#34;F16&#34;, &#34;shape&#34;: [1, 16, 256], &#34;data_offsets&#34;: [BEGIN, END]}, &#34;NEXT_TENSOR_NAME&#34;: {...}, ...}&lt;/code&gt;, &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;data_offsets&lt;/code&gt; point to the tensor data relative to the beginning of the byte buffer (i.e. not an absolute position in the file), with &lt;code&gt;BEGIN&lt;/code&gt; as the starting offset and &lt;code&gt;END&lt;/code&gt; as the one-past offset (so total tensor byte size = &lt;code&gt;END - BEGIN&lt;/code&gt;).&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;A special key &lt;code&gt;__metadata__&lt;/code&gt; is allowed to contain free form string-to-string map. Arbitrary JSON is not allowed, all values must be strings.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Rest of the file: byte-buffer.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Notes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Duplicate keys are disallowed. Not all parsers may respect this.&lt;/li&gt; &#xA; &lt;li&gt;In general the subset of JSON is implicitly decided by &lt;code&gt;serde_json&lt;/code&gt; for this library. Anything obscure might be modified at a later time, that odd ways to represent integer, newlines and escapes in utf-8 strings. This would only be done for safety concerns&lt;/li&gt; &#xA; &lt;li&gt;Tensor values are not checked against, in particular NaN and +/-Inf could be in the file&lt;/li&gt; &#xA; &lt;li&gt;Empty tensors (tensors with 1 dimension being 0) are allowed. They are not storing any data in the databuffer, yet retaining size in the header. They don&#39;t really bring a lot of values but are accepted since they are valid tensors from traditional tensor libraries perspective (torch, tensorflow, numpy, ..).&lt;/li&gt; &#xA; &lt;li&gt;0-rank Tensors (tensors with shape &lt;code&gt;[]&lt;/code&gt;) are allowed, they are merely a scalar.&lt;/li&gt; &#xA; &lt;li&gt;The byte buffer needs to be entirely indexed, and cannot contain holes. This prevents the creation of polyglot files.&lt;/li&gt; &#xA; &lt;li&gt;Endianness: Little-endian. moment.&lt;/li&gt; &#xA; &lt;li&gt;Order: &#39;C&#39; or row-major.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Yet another format ?&lt;/h3&gt; &#xA;&lt;p&gt;The main rationale for this crate is to remove the need to use &lt;code&gt;pickle&lt;/code&gt; on &lt;code&gt;PyTorch&lt;/code&gt; which is used by default. There are other formats out there used by machine learning and more general formats.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s take a look at alternatives and why this format is deemed interesting. This is my very personal and probably biased view:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Format&lt;/th&gt; &#xA;   &lt;th&gt;Safe&lt;/th&gt; &#xA;   &lt;th&gt;Zero-copy&lt;/th&gt; &#xA;   &lt;th&gt;Lazy loading&lt;/th&gt; &#xA;   &lt;th&gt;No file size limit&lt;/th&gt; &#xA;   &lt;th&gt;Layout control&lt;/th&gt; &#xA;   &lt;th&gt;Flexibility&lt;/th&gt; &#xA;   &lt;th&gt;Bfloat16/Fp8&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pickle (PyTorch)&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;H5 (Tensorflow)&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;~&lt;/td&gt; &#xA;   &lt;td&gt;~&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SavedModel (Tensorflow)&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MsgPack (flax)&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Protobuf (ONNX)&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cap&#39;n&#39;Proto&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;~&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;~&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Arrow&lt;/td&gt; &#xA;   &lt;td&gt;?&lt;/td&gt; &#xA;   &lt;td&gt;?&lt;/td&gt; &#xA;   &lt;td&gt;?&lt;/td&gt; &#xA;   &lt;td&gt;?&lt;/td&gt; &#xA;   &lt;td&gt;?&lt;/td&gt; &#xA;   &lt;td&gt;?&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Numpy (npy,npz)&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;?&lt;/td&gt; &#xA;   &lt;td&gt;?&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pdparams (Paddle)&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SafeTensors&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;🗸&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Safe: Can I use a file randomly downloaded and expect not to run arbitrary code ?&lt;/li&gt; &#xA; &lt;li&gt;Zero-copy: Does reading the file require more memory than the original file ?&lt;/li&gt; &#xA; &lt;li&gt;Lazy loading: Can I inspect the file without loading everything ? And loading only some tensors in it without scanning the whole file (distributed setting) ?&lt;/li&gt; &#xA; &lt;li&gt;Layout control: Lazy loading, is not necessarily enough since if the information about tensors is spread out in your file, then even if the information is lazily accessible you might have to access most of your file to read the available tensors (incurring many DISK -&amp;gt; RAM copies). Controlling the layout to keep fast access to single tensors is important.&lt;/li&gt; &#xA; &lt;li&gt;No file size limit: Is there a limit to the file size ?&lt;/li&gt; &#xA; &lt;li&gt;Flexibility: Can I save custom code in the format and be able to use it later with zero extra code ? (~ means we can store more than pure tensors, but no custom code)&lt;/li&gt; &#xA; &lt;li&gt;Bfloat16/Fp8: Does the format support native bfloat16/fp8 (meaning no weird workarounds are necessary)? This is becoming increasingly important in the ML world.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Main oppositions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pickle: Unsafe, runs arbitrary code&lt;/li&gt; &#xA; &lt;li&gt;H5: Apparently now discouraged for TF/Keras. Seems like a great fit otherwise actually. Some classic use after free issues: &lt;a href=&#34;https://www.cvedetails.com/vulnerability-list/vendor_id-15991/product_id-35054/Hdfgroup-Hdf5.html&#34;&gt;https://www.cvedetails.com/vulnerability-list/vendor_id-15991/product_id-35054/Hdfgroup-Hdf5.html&lt;/a&gt;. On a very different level than pickle security-wise. Also 210k lines of code vs ~400 lines for this lib currently.&lt;/li&gt; &#xA; &lt;li&gt;SavedModel: Tensorflow specific (it contains TF graph information).&lt;/li&gt; &#xA; &lt;li&gt;MsgPack: No layout control to enable lazy loading (important for loading specific parts in distributed setting)&lt;/li&gt; &#xA; &lt;li&gt;Protobuf: Hard 2Go max file size limit&lt;/li&gt; &#xA; &lt;li&gt;Cap&#39;n&#39;proto: Float16 support is not present &lt;a href=&#34;https://capnproto.org/language.html#built-in-types&#34;&gt;link&lt;/a&gt; so using a manual wrapper over a byte-buffer would be necessary. Layout control seems possible but not trivial as buffers have limitations &lt;a href=&#34;https://stackoverflow.com/questions/48458839/capnproto-maximum-filesize&#34;&gt;link&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Numpy (npz): No &lt;code&gt;bfloat16&lt;/code&gt; support. Vulnerable to zip bombs (DOS). Not zero-copy.&lt;/li&gt; &#xA; &lt;li&gt;Arrow: No &lt;code&gt;bfloat16&lt;/code&gt; support. Seem to require decoding &lt;a href=&#34;https://arrow.apache.org/docs/python/parquet.html#reading-parquet-and-memory-mapping&#34;&gt;link&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Notes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Zero-copy: No format is really zero-copy in ML, it needs to go from disk to RAM/GPU RAM (that takes time). On CPU, if the file is already in cache, then it can truly be zero-copy, whereas on GPU there is not such disk cache, so a copy is always required but you can bypass allocating all the tensors on CPU at any given point. SafeTensors is not zero-copy for the header. The choice of JSON is pretty arbitrary, but since deserialization is &amp;lt;&amp;lt;&amp;lt; of the time required to load the actual tensor data and is readable I went that way, (also space is &amp;lt;&amp;lt;&amp;lt; to the tensor data).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Endianness: Little-endian. This can be modified later, but it feels really unnecessary at the moment.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Order: &#39;C&#39; or row-major. This seems to have won. We can add that information later if needed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Stride: No striding, all tensors need to be packed before being serialized. I have yet to see a case where it seems useful to have a strided tensor stored in serialized format.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Benefits&lt;/h3&gt; &#xA;&lt;p&gt;Since we can invent a new format we can propose additional benefits:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Prevent DOS attacks: We can craft the format in such a way that it&#39;s almost impossible to use malicious files to DOS attack a user. Currently, there&#39;s a limit on the size of the header of 100MB to prevent parsing extremely large JSON. Also when reading the file, there&#39;s a guarantee that addresses in the file do not overlap in any way, meaning when you&#39;re loading a file you should never exceed the size of the file in memory&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Faster load: PyTorch seems to be the fastest file to load out in the major ML formats. However, it does seem to have an extra copy on CPU, which we can bypass in this lib by using &lt;code&gt;torch.UntypedStorage.from_file&lt;/code&gt;. Currently, CPU loading times are extremely fast with this lib compared to pickle. GPU loading times are as fast or faster than PyTorch equivalent. Loading first on CPU with memmapping with torch, and then moving all tensors to GPU seems to be faster too somehow (similar behavior in torch pickle)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Lazy loading: in distributed (multi-node or multi-gpu) settings, it&#39;s nice to be able to load only part of the tensors on the various models. For &lt;a href=&#34;https://huggingface.co/bigscience/bloom&#34;&gt;BLOOM&lt;/a&gt; using this format enabled to load the model on 8 GPUs from 10mn with regular PyTorch weights down to 45s. This really speeds up feedbacks loops when developing on the model. For instance you don&#39;t have to have separate copies of the weights when changing the distribution strategy (for instance Pipeline Parallelism vs Tensor Parallelism).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;License: Apache-2.0&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wbt5/real-url</title>
    <updated>2024-03-17T01:36:35Z</updated>
    <id>tag:github.com,2024-03-17:/wbt5/real-url</id>
    <link href="https://github.com/wbt5/real-url" rel="alternate"></link>
    <summary type="html">&lt;p&gt;获取斗鱼&amp;虎牙&amp;哔哩哔哩&amp;抖音&amp;快手等 58 个直播平台的真实流媒体地址(直播源)和弹幕，直播源可在 PotPlayer、flv.js 等播放器中播放。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Real-Url&lt;/h1&gt; &#xA;&lt;h2&gt;说明&lt;/h2&gt; &#xA;&lt;p&gt;没想到还有这么多朋友发 issue 和邮件咨询问题，感谢大家的支持🎈！因为有时很忙，回复和提交代码的周期会有点长，抱歉哦😋&lt;/p&gt; &#xA;&lt;p&gt;这个仓库存放的是：获取一些直播平台真实流媒体地址（直播源）和弹幕的 Python 代码实现。获取的地址经测试，均可在 PotPlayer、VLC、DPlayer(flv.js + hls.js)等播放器中播放。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;🤘👌🤙🙏🐉👉 ：如果该项目能帮助到您，欢迎 star 和 pr；或在您的项目中标注 Real-Url 为参考来源。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;目前已实现：&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;59&lt;/strong&gt; 个直播平台的直播源获取：斗鱼直播、虎牙直播、哔哩哔哩直播、战旗直播、网易 CC 直播、火猫直播、企鹅电竞、YY 直播、一直播、快手直播、花椒直播、映客直播、西瓜直播、触手直播（已倒闭）、NOW 直播、抖音直播，爱奇艺直播、酷狗直播、龙珠直播、PPS 奇秀直播、六间房、17 直播、来疯直播、优酷轮播台、网易 LOOK 直播、千帆直播、陌陌直播、小米直播、迅雷直播、京东直播、企鹅体育、人人直播、棉花糖直播、九秀直播、羚萌直播、95秀、新浪疯播、红人直播、艾米直播、KK直播、酷我聚星、乐嗨直播、秀色直播、星光直播、我秀直播、热猫直播、艺气山直播、AcFun 直播、猫耳FM、畅秀阁、Twitch、TikTok、央视频、PP体育、zhibotv、腾讯体育直播、爱奇艺体育直播、liveU、bigolive、咪咕视频体育。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;18&lt;/strong&gt; 个直播平台的弹幕获取：斗鱼直播、虎牙直播、哔哩哔哩直播、快手直播、火猫直播、企鹅电竞、花椒直播、映客直播、网易 CC 直播、酷狗直播、龙珠直播、PPS 奇秀、搜狐千帆、战旗直播、来疯直播、网易 LOOK 直播、AcFun 直播、艺气山直播。&lt;/p&gt; &#xA;&lt;h2&gt;运行&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;项目使用了很简单的 Python 代码，仅在 Python 3 环境运行测试。&lt;/li&gt; &#xA; &lt;li&gt;具体所需模块请查看 requirements.txt&lt;/li&gt; &#xA; &lt;li&gt;获取斗鱼和爱奇艺的直播源，需 JavaScript 环境，可使用 node.js。爱奇艺直播里有个参数是加盐的 MD5，由仓库中的 iqiyi.js 生成。&lt;/li&gt; &#xA; &lt;li&gt;每个平台的直播源和弹幕获取功能相互独立，以后再整合。弹幕食用：python main.py&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;反馈&lt;/h2&gt; &#xA;&lt;p&gt;有直播平台失效或新增其他平台解析的，可发 &lt;a href=&#34;https://github.com/wbt5/real-url/issues/new&#34;&gt;issue&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;更新&lt;/h2&gt; &#xA;&lt;p&gt;2021.11.7：&lt;span&gt;✨&lt;/span&gt;新增咪咕体育。&lt;/p&gt; &#xA;&lt;p&gt;2021.8.15：&lt;span&gt;✨&lt;/span&gt;新增 liveU、bigolive。&lt;/p&gt; &#xA;&lt;p&gt;2021.7.4：&lt;span&gt;🎨&lt;/span&gt;更新哔哩哔哩直播源；&lt;span&gt;🐛&lt;/span&gt;修复Acfun直播弹幕；&lt;span&gt;🐛&lt;/span&gt;修复企鹅电竞弹幕。&lt;/p&gt; &#xA;&lt;p&gt;2021.6.20：&lt;span&gt;✨&lt;/span&gt;新增爱奇艺体育直播。&lt;/p&gt; &#xA;&lt;p&gt;2021.6.13：&lt;span&gt;🐛&lt;/span&gt;修复腾讯体育。&lt;/p&gt; &#xA;&lt;p&gt;2021.6.12：&lt;span&gt;🐛&lt;/span&gt;修复斗鱼直播。&lt;/p&gt; &#xA;&lt;p&gt;2021.05.22：&lt;span&gt;✨&lt;/span&gt;新增腾讯体育直播。&lt;/p&gt; &#xA;&lt;p&gt;2021.05.15：&lt;span&gt;🎨&lt;/span&gt;更新爱奇艺、&lt;span&gt;🐛&lt;/span&gt;修复战旗直播。&lt;/p&gt; &#xA;&lt;p&gt;2021.05.13： &lt;span&gt;✨&lt;/span&gt;新增 zhibotv。&lt;/p&gt; &#xA;&lt;p&gt;2021.05.05：&lt;span&gt;✨&lt;/span&gt;新增 PP体育。&lt;/p&gt; &#xA;&lt;p&gt;2021.05.03：&lt;span&gt;✨&lt;/span&gt;新增 央视频。&lt;/p&gt; &#xA;&lt;p&gt;2021.05.02：&lt;span&gt;✨&lt;/span&gt;新增 Twitch、TikTok。&lt;/p&gt; &#xA;&lt;p&gt;2021.05.01：&lt;span&gt;✨&lt;/span&gt;新增畅秀阁、猫耳FM。&lt;/p&gt; &#xA;&lt;p&gt;2020.12.20：修复直播源：抖音、艺气山、花椒、快手、来疯、龙珠、PPS、人人直播、17live 可能需要挂代理。&lt;/p&gt; &#xA;&lt;p&gt;2020.10.17：修复：西瓜直播、YY直播。&lt;/p&gt; &#xA;&lt;p&gt;2020.09.26：更新：虎牙直播源；注释掉未完成的 YY 直播弹幕功能。&lt;/p&gt; &#xA;&lt;p&gt;2020.09.12：新增：斗鱼添加一个从PC网页端获取直播源的方法，可选线路和清晰度；新增requirements.txt文件；更新代码。&lt;/p&gt; &#xA;&lt;p&gt;2020.08.18：更新快手直播源，现在播放链接需要带参数；更新快手直播弹幕，直接用 protobuf 序列化；新增 AcFun、艺气山两个平台的弹幕功能。&lt;/p&gt; &#xA;&lt;p&gt;2020.08.08：新增 AcFun 直播、艺气山直播；更新：哔哩哔哩直播、虎牙直播、红人直播；优化：斗鱼直播。&lt;/p&gt; &#xA;&lt;p&gt;2020.07.31：新增 19 个直播平台，详见上面说明；更新YY直播，现在可以获取最高画质；优化战旗直播、优酷直播代码；&lt;/p&gt; &#xA;&lt;p&gt;2020.07.25：新增网易 LOOK 直播弹幕获取；修复斗鱼直播源；新增陌陌直播源。&lt;/p&gt; &#xA;&lt;p&gt;2020.07.19：新增来疯直播弹幕获取&lt;/p&gt; &#xA;&lt;p&gt;2020.07.18：新增酷狗、龙珠、PPS奇秀、搜狐千帆、战旗直播等5个平台的弹幕获取&lt;/p&gt; &#xA;&lt;p&gt;2020.07.11：新增网易CC直播弹幕获取&lt;/p&gt; &#xA;&lt;p&gt;2020.07.05：新增花椒直播、映客直播弹幕获取；更新虎牙直播源&lt;/p&gt; &#xA;&lt;p&gt;2020.06.25：新增🐧企鹅电竞弹幕获取&lt;/p&gt; &#xA;&lt;p&gt;2020.06.19：新增火猫直播弹幕获取&lt;/p&gt; &#xA;&lt;p&gt;2020.06.18：新增弹幕功能&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加斗鱼、虎牙、哔哩哔哩和快手 4 个平台的弹幕获取。后续添加其他平台。&lt;/li&gt; &#xA; &lt;li&gt;实现弹幕功能的代码和思路主要来自：&lt;a href=&#34;https://github.com/IsoaSFlus/danmaku&#34;&gt;danmaku&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/py-wuhao/ks_barrage&#34;&gt;ks_barrage&lt;/a&gt;，感谢两位大佬！&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2020.05.30：更新虎牙直播。&lt;/p&gt; &#xA;&lt;p&gt;2020.05.25：更新哔哩哔哩直播。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;默认获取最高画质，不同清晰度取决于请求参数中的 qn。&lt;/li&gt; &#xA; &lt;li&gt;增加 .m3u8 格式播放链接的获取方法。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2020.05.23：更新17直播、虎牙直播&lt;/p&gt; &#xA;&lt;p&gt;2020.05.19：更新火猫、快手、酷狗、PPS&lt;/p&gt; &#xA;&lt;p&gt;2020.05.08：新增优酷轮播台、look 直播、千帆直播；&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新增优酷轮播台：优酷轮播台是优酷直播下的一个子栏目，轮播一些经典电影电视剧，个人感觉要比其他直播平台影视区的画质要好，而且没有平台水印和主播自己贴的乱七八糟的字幕遮挡。&lt;/li&gt; &#xA; &lt;li&gt;新增 LOOK 直播：LOOK 直播是网易云音乐旗下的直播平台。&lt;/li&gt; &#xA; &lt;li&gt;新增千帆直播：千帆直播是搜狐旗下的直播平台。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2020.05.01：新增优酷的来疯直播。&lt;/p&gt; &#xA;&lt;p&gt;2020.04.30：新增17直播。&lt;/p&gt; &#xA;&lt;p&gt;2020.04.24：修复虎牙、哔哩哔哩、快手、爱奇艺。&lt;/p&gt; &#xA;&lt;p&gt;2020.02.26：更新一直播。&lt;/p&gt; &#xA;&lt;p&gt;2020.01.18：更新抖音直播。&lt;/p&gt; &#xA;&lt;p&gt;2020.01.10：新增酷狗直播、龙珠直播、PPS奇秀直播、六间房。&lt;/p&gt; &#xA;&lt;p&gt;2020.01.09：新增爱奇艺直播。&lt;/p&gt; &#xA;&lt;p&gt;2020.01.07：新增抖音直播；删除一个直播平台。&lt;/p&gt; &#xA;&lt;p&gt;2020.01.03：修复快手直播，请求移动网页版。&lt;/p&gt; &#xA;&lt;p&gt;2019.12.31：修复快手直播。&lt;/p&gt; &#xA;&lt;p&gt;2019.12.07：修复哔哩哔哩直播。&lt;/p&gt; &#xA;&lt;p&gt;2019.12.04：更新斗鱼直播，新增一种获取方式。&lt;/p&gt; &#xA;&lt;p&gt;2019.11.24：新增收米直播。&lt;/p&gt; &#xA;&lt;p&gt;2019.11.18：新增西瓜直播；触手直播；NOW直播。&lt;/p&gt; &#xA;&lt;p&gt;2019.11.18：新增一直播；快手直播；花椒直播；映客直播。&lt;/p&gt; &#xA;&lt;p&gt;2019.11.17：新增火猫直播；新增企鹅电竞；新增YY直播。&lt;/p&gt; &#xA;&lt;p&gt;2019.11.16：新增战旗tv直播源；新增网易CC直播。&lt;/p&gt; &#xA;&lt;p&gt;2019.11.09：新增哔哩哔哩直播源。&lt;/p&gt; &#xA;&lt;p&gt;2019.11.03：新增虎牙直播源。&lt;/p&gt; &#xA;&lt;p&gt;2019.11.02：修复斗鱼预览地址获取的方法；新增未开播房间的判断。&lt;/p&gt; &#xA;&lt;h2&gt;鸣谢&lt;/h2&gt; &#xA;&lt;p&gt;感谢 &lt;a href=&#34;https://www.jetbrains.com/?from=real-url&#34;&gt;JetBrains&lt;/a&gt; 提供的 free JetBrains Open Source license&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/?from=real-url&#34;&gt;&lt;img src=&#34;https://i.loli.net/2020/10/03/E4h5FZmSfnGIgap.png&#34; alt=&#34;JetBrains-logo&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>