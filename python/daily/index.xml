<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-09T01:41:27Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>KSCHdsc/BlackCap-Grabber</title>
    <updated>2023-03-09T01:41:27Z</updated>
    <id>tag:github.com,2023-03-09:/KSCHdsc/BlackCap-Grabber</id>
    <link href="https://github.com/KSCHdsc/BlackCap-Grabber" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Powerfull Fully Undetect Token Stealer / Token Grabber, allow to steal discord new password / a2f codes / email / credit card / anti delete, steal browsers chromium based Passwords / Cookies / History, Can also steal steam / metamask / exodus / minecraft login / roblox cookies, with anti debug&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BlackCap Grabber v2.3&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/KSCHdsc/BlackCap-Assets/main/Banner.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/KSCHdsc/BlackCap-Assets/main/nowFUD.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;BlackCap Codes is fully undetectable, the only detections are the fault of pyinstaller we recommend to use Cx_Freeze to compile it&lt;/h5&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://discord.gg/blackcap&#34;&gt;&lt;span&gt;üíé&lt;/span&gt; Premium&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; https://discord.gg/blackcap &lt;/h1&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt; BlackCap Grabber was made with &lt;p&gt;Love ‚ùå code ‚úÖ&lt;/p&gt; &lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt; Blackcap was created for purely cultural and educational purposes in order to prove that the security of Discord and other applications is totally to be reviewed. I do not encourage the use of this script on others. That&#39;s why I won&#39;t be responsible for any damage caused by this script if you use it in violation of my terms of service.&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;BlackCap was made for educational purposes, there for all consequences caused by your actions are &lt;strong&gt;your&lt;/strong&gt; responsibility and accountability.&lt;/li&gt; &#xA; &lt;li&gt;You got an error? you&#39;ve find a bug? join the discord or create an issue!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;content&#34;&gt;&lt;/a&gt;üåê „Ä¢ Content&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blackcap.glitch.me&#34;&gt;üåê„ÉªWebsite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/blackcap&#34;&gt;üåå„ÉªDiscord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/KSCHdsc/BlackCap-Grabber/main/#setup&#34;&gt;üéâ„ÉªSetting up BlackCap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/KSCHdsc/BlackCap-Grabber/main/#features&#34;&gt;üî∞„ÉªFeatures&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/KSCHdsc/BlackCap-Grabber/main/#explanation&#34;&gt;üëÅÔ∏è„ÉªFeatures Explanation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/KSCHdsc/BlackCap-Grabber/main/#changelog&#34;&gt;üìù„ÉªChangelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KSCHdsc/BlackCap-Inject&#34;&gt;ü¶ú„ÉªInjection&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/KSCHdsc/BlackCap-Grabber/main/#forkedfrom&#34;&gt;üïµÔ∏è‚Äç‚ôÇÔ∏è„ÉªCredits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/KSCHdsc/BlackCap-Grabber/main/#terms&#34;&gt;üíº„ÉªTerm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;setup&#34;&gt;&lt;/a&gt; üìÅ „Ä¢ Setting up BlackCap&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://www.python.org/ftp/python/3.10.0/python-3.10.0-amd64.exe&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/KSCHdsc/BlackCap-Grabber/archive/refs/heads/main.zip&#34;&gt;BlackCap Files&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install all requirements &lt;a href=&#34;https://github.com/KSCHdsc/BlackCap-Grabber/raw/main/install.bat&#34;&gt;install.bat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click on start.bat &lt;a href=&#34;https://github.com/KSCHdsc/BlackCap-Grabber/raw/main/start.bat&#34;&gt;start.bat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Complete the configuration&lt;/li&gt; &#xA; &lt;li&gt;You have your .exe file enjoy :)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;features&#34;&gt;&lt;/a&gt;üî∞ „Ä¢ Features&lt;/h2&gt; &#xA;&lt;h1&gt;üíé = Premium Features Join the discord to buy&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;&amp;gt; Default:&#xA;&#xA;- Steal Steam / Minecraft / Metamask / Exodus / Roblox / NationGlory login&#xA;- Steal Chrome Passwords / Cookies / History&#xA;- Inject Discord / Discord Canary / Lightcord / Ripcord / Xcord&#xA;- Debug Killer (Kill task gestionary)&#xA;- Bypass TokenProtector / BetterDiscord&#xA;- Take a Screenshot&#xA;- Grabb System Informations&#xA;- Bypass Virus Total machines&#xA;- Bypass VM machines&#xA;- Hide Itself in Background&#xA;- Replace the BTC address copying by your&#xA;- Custom Installer / Setuper&#xA;- Icon / Name / Description Customizable&#xA;- Cookies Exploiter Tech (üíé)&#xA;- Steal all Chromium Passwords and Cookies for OperaGX/Opera/GoogleChrome/Brave/Chromium/Torch/Edge/Mozilla and others&#xA;- 0/64 Detect Virus Total Builder (.exe) (üíé)&#xA;- Grabb Sensitive Files exodus login / a2f backup codes / tokens / passwords... (can be customizable) (üíé)&#xA;&#xA;&#xA;&#xA;&amp;gt; Injection:&#xA;&#xA;- Nitro Auto Buy&#xA;- First Start Reporter&#xA;- New Passwords&#xA;- New Emails&#xA;- New Login&#xA;- New Credit Card&#xA;- New PayPal&#xA;- Anti Delete system (re install after Discord uninstall / Discord Update)&#xA;&amp;gt; + More!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;explanation&#34;&gt;&lt;/a&gt;üëÅÔ∏è „Ä¢ Explanations of Features and options&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.discordapp.net/attachments/912038729626058853/1062467388320272504/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-d&#34;&gt;@blackcap: Here put your Discord Webhook you can find it in your &#xA;&#34;DISCORD CHANNEL OPTIONS&#34; &amp;gt; &#34;INTEGRATION&#34; &amp;gt; &#34;CREATE A WEBHOOK&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.discordapp.net/attachments/912038729626058853/1062467782446420049/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-d&#34;&gt;@blackcap: Here put your final file name like &#34;blackcap_is_best&#34; or &#34;KSCH_the_Goat&#34; ü§ì&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.discordapp.net/attachments/912038729626058853/1062468541967773756/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-d&#34;&gt;@blackcap: This is a option to &#34;KILL&#34; all discord clients opened &#xA;and to restart them with the blackcap injection &#xA;(so i recommand &#34;yes&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.discordapp.net/attachments/912038729626058853/1062469117954768998/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-d&#34;&gt;@blackcap: This is a option to &#34;KILL&#34; all process which could analyze the properties of blackcap, &#xA;such as the task manager, the terminal or even analysis tools (so i recommand &#34;yes&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.discordapp.net/attachments/912038729626058853/1062469614036078642/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-d&#34;&gt;@blackcap: This is a option to ping when someone run BlackCap you can specify &#34;everyone&#34; or &#34;here&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.discordapp.net/attachments/912038729626058853/1062470764609151016/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-d&#34;&gt;@blackcap: This option replaces each of the crypto addresses copied by the victim with yours, &#xA;it will not realize that it is not the same and during a payment the cryptomoney will be sent &#xA;to your address&#xA;&#xA;//Yeah, that OP i know&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.discordapp.net/attachments/912038729626058853/1062471735582146630/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-d&#34;&gt;@blackcap: If you chose &#39;yes&#39; to the previous option you will have to fill in this with &#xA;YOUR crypto wallet addresses &#xA;(You can also put mine)üëå&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.discordapp.net/attachments/912038729626058853/1062472209777574009/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-d&#34;&gt;@blackcap: This option allows you to display an error message when someone launches your blackcap &#xA;for the moment it is a predefined message but later it will be customizable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.discordapp.net/attachments/912038729626058853/1062472564078817330/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-d&#34;&gt;@blackcap: This option will make a copy of the .exe in the windows startup of your victims and &#xA;blackcap will therefore launch at each start&#xA;&#xA;(if you have activated the address crypto replacer I advise you to activate this one)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.discordapp.net/attachments/912038729626058853/1062473429216919684/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-d&#34;&gt;@blackcap: This option will close automatically the window that will launch blackcap &#xA;(also works if you let the final file in .py so i recommand &#39;yes&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.discordapp.net/attachments/912038729626058853/1062473970537992192/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-d&#34;&gt;@blackcap: This option will obfuscate the source code &#xA;I recommand to chose &#39;yes&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.discordapp.net/attachments/912038729626058853/1062474365079388201/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-d&#34;&gt;@blackcap: This option will create an .exe if you put &#39;no&#39; the final file will be an .py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.discordapp.net/attachments/912038729626058853/1062474813135925288/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-d&#34;&gt;@blackcap: If you chose &#39;yes&#39; in the previous option this option will add an icon to your .exe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;changelog&#34;&gt;&lt;/a&gt;üí≠ „Ä¢ ChangeLog&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;v1.9 ‚ãÆ 2022-26-10&#xA;- bug fix to search token&#xA;- error message fixed&#xA;- build with pyinstaller fixed&#xA;&#xA;v2.0 : 2022-30-10&#xA;- enoent zipfile bug fixed&#xA;+ Place .exe in startup&#xA;+ Add Fake Error&#xA;&#xA;v2.1: 2022-30-10&#xA;+ New builder&#xA;+ Ping on run&#xA;+ Task Manager killer&#xA;&#xA;v2.1.1: 2022-31-10&#xA;- Builder correction&#xA;+ Compacting Builder&#xA;+ Add auto compressed build&#xA;&#xA;v2.2: 2022-31-10&#xA;- Token Grabber Correction&#xA;+ Grab all other Browsers&#xA;+ CMD and gestionnary killer&#xA;&#xA;&#xA;v2.2.5: 2022-14-11&#xA;+ Detect New Discord Active Developer Badge&#xA;&#xA;&#xA;v2.3: 2023-10-01&#xA;- 0 detection source code by virustotal&#xA;- Builder error patched&#xA;+ New code optimisation&#xA;+ New features can replace all crypto wallet by your address&#xA;&#xA;v2.3.5: 2023-20-01&#xA;- Detect Patched&#xA;- Builder .exe deleted patched&#xA;&#xA;&#xA;v2.3.8: 2023-21-01&#xA;- Text Encoder Bug Fixed&#xA;+ New Cookies Format (Can be used by Cookie Quick Manager extension)&#xA;&#xA;&#xA;v2.3.9: 2023-21-01&#xA;+ AntiDebug More Powerfull (check ip)&#xA;&#xA;&#xA;v2.3.9.5 2023-31-01&#xA;+ NEW OBFUSCATION OP (-6 detection on virustotal)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Authors&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KSCHdsc&#34;&gt;@KSCH&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NotFubukIl&#34;&gt;@NotFubukIl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HisSlot&#34;&gt;@HisSlot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/002-sans&#34;&gt;@Sans&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/loTus04&#34;&gt;@loTus&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contributors (CapingTeam)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xenis&lt;/li&gt; &#xA; &lt;li&gt;Nono1337&lt;/li&gt; &#xA; &lt;li&gt;Irax212&lt;/li&gt; &#xA; &lt;li&gt;Shamroks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;forkedfrom&#34;&gt;&lt;/a&gt;üïµÔ∏è‚Äç‚ôÇÔ∏è „Ä¢ Forked From:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hazard Grabber&lt;/li&gt; &#xA; &lt;li&gt;PirateStealer&lt;/li&gt; &#xA; &lt;li&gt;Wasp-stealer&lt;/li&gt; &#xA; &lt;li&gt;Builder by Luna token grabber&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;terms&#34;&gt;&lt;/a&gt;üíº „Ä¢ Terms Of Usage&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Educational purpose only&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Reselling is forbidden&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; You can use the source code if you keep credits (in embed + in markdown), it has to be open-source&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; We are NOT responsible of anything you do with our software (if its illegal)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/KSCHdsc/BlackCap-Grabber/main/#top&#34;&gt;Back to Top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/KSCHdsc/BlackCap-Assets/main/mona-loading-dark.gif&#34; alt=&#34;&#34;&gt;&#xA;&lt;p&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>n3d1117/chatgpt-telegram-bot</title>
    <updated>2023-03-09T01:41:27Z</updated>
    <id>tag:github.com,2023-03-09:/n3d1117/chatgpt-telegram-bot</id>
    <link href="https://github.com/n3d1117/chatgpt-telegram-bot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ü§ñ A Telegram bot that integrates with OpenAI&#39;s official ChatGPT APIs to provide answers, written in Python&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGPT Telegram Bot&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.10-blue.svg?sanitize=true&#34; alt=&#34;python-version&#34;&gt; &lt;a href=&#34;https://openai.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/openai-0.27.0-green.svg?sanitize=true&#34; alt=&#34;openai-version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/n3d1117/chatgpt-telegram-bot/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPL%202.0-brightgreen.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://core.telegram.org/bots/api&#34;&gt;Telegram bot&lt;/a&gt; that integrates with OpenAI&#39;s &lt;em&gt;official&lt;/em&gt; &lt;a href=&#34;https://openai.com/blog/chatgpt/&#34;&gt;ChatGPT&lt;/a&gt; APIs to provide answers. Ready to use with minimal configuration required.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/n3d1117/chatgpt-telegram-bot/files/10900400/demo.pdf&#34; alt=&#34;demo.pdf&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support markdown in answers&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Reset conversation with the &lt;code&gt;/reset&lt;/code&gt; command&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Typing indicator while generating a response&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Access can be restricted by specifying a list of allowed users&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Docker support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Proxy support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; (NEW!) Support multiple answers via the &lt;code&gt;n_choices&lt;/code&gt; configuration parameter&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; (NEW!) Customizable model parameters (see &lt;a href=&#34;https://raw.githubusercontent.com/n3d1117/chatgpt-telegram-bot/main/#configuration&#34;&gt;configuration&lt;/a&gt; section)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; (NEW!) See token usage after each answer&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; (NEW!) Multi-chat support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; (NEW!) Image generation using DALL¬∑E via the &lt;code&gt;/image&lt;/code&gt; command&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; (NEW!) Transcribe audio messages using Whisper (may require &lt;a href=&#34;https://ffmpeg.org&#34;&gt;ffmpeg&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; (NEW!) Automatic conversation summary to avoid excessive token usage (fixes &lt;a href=&#34;https://github.com/n3d1117/chatgpt-telegram-bot/issues/34&#34;&gt;#34&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; (NEW!) Group chat support with inline queries &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To use this feature, enable inline queries for your bot in BotFather via the &lt;code&gt;/setinline&lt;/code&gt; command&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Additional features - help needed!&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add stream support (&lt;a href=&#34;https://github.com/n3d1117/chatgpt-telegram-bot/issues/43&#34;&gt;#43&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Handle responses longer than telegram message limit (&lt;a href=&#34;https://github.com/n3d1117/chatgpt-telegram-bot/issues/44&#34;&gt;#44&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;PRs are always welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.10+ and &lt;a href=&#34;https://pipenv.readthedocs.io/en/latest/&#34;&gt;Pipenv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://core.telegram.org/bots#6-botfather&#34;&gt;Telegram bot&lt;/a&gt; and its token (see &lt;a href=&#34;https://core.telegram.org/bots/tutorial#obtain-your-bot-token&#34;&gt;tutorial&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;An &lt;a href=&#34;https://openai.com&#34;&gt;OpenAI&lt;/a&gt; account (see &lt;a href=&#34;https://raw.githubusercontent.com/n3d1117/chatgpt-telegram-bot/main/#configuration&#34;&gt;configuration&lt;/a&gt; section)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;Customize the configuration by copying &lt;code&gt;.env.example&lt;/code&gt; and renaming it to &lt;code&gt;.env&lt;/code&gt;, then editing the parameters as desired:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;OPENAI_API_KEY=&#34;YOUR_OPENAI_API_KEY&#34;&#xA;TELEGRAM_BOT_TOKEN=&#34;YOUR_TELEGRAM_BOT_TOKEN&#34;&#xA;&#xA;# Optional parameters&#xA;ALLOWED_TELEGRAM_USER_IDS=&#34;USER_ID_1,USER_ID_2,...&#34; # Defaults to &#34;*&#34; (everyone)&#xA;PROXY=&#34;YOUR_PROXY&#34; # e.g. &#34;http://localhost:8080&#34;, defaults to none&#xA;ASSISTANT_PROMPT=&#34;Custom prompt&#34; # Defaults to &#34;You are a helpful assistant.&#34;&#xA;SHOW_USAGE=true # Defaults to false&#xA;MAX_TOKENS=2000 # Defaults to 1200&#xA;MAX_HISTORY_SIZE=15 # Defaults to 10&#xA;MAX_CONVERSATION_AGE_MINUTES=120 # Defaults to 180 (3h)&#xA;VOICE_REPLY_WITH_TRANSCRIPT_ONLY=false # Defaults to true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;OPENAI_API_KEY&lt;/code&gt;: Your OpenAI API key, you can get it from &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TELEGRAM_BOT_TOKEN&lt;/code&gt;: Your Telegram bot&#39;s token, obtained using &lt;a href=&#34;http://t.me/botfather&#34;&gt;BotFather&lt;/a&gt; (see &lt;a href=&#34;https://core.telegram.org/bots/tutorial#obtain-your-bot-token&#34;&gt;tutorial&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ALLOWED_TELEGRAM_USER_IDS&lt;/code&gt;: A comma-separated list of Telegram user IDs that are allowed to interact with the bot (use &lt;a href=&#34;https://t.me/getidsbot&#34;&gt;getidsbot&lt;/a&gt; to find your user ID). &lt;strong&gt;Note&lt;/strong&gt;: by default, &lt;em&gt;everyone&lt;/em&gt; is allowed (&lt;code&gt;*&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PROXY&lt;/code&gt;: Proxy to be used for OpenAI and Telegram bot&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ASSISTANT_PROMPT&lt;/code&gt;: A system message that sets the tone and controls the behavior of the assistant&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SHOW_USAGE&lt;/code&gt;: Whether to show OpenAI token usage information after each response&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MAX_TOKENS&lt;/code&gt;: Upper bound on how many tokens the ChatGPT API will return&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MAX_HISTORY_SIZE&lt;/code&gt;: Max number of messages to keep in memory, after which the conversation will be summarised to avoid excessive token usage (&lt;a href=&#34;https://github.com/n3d1117/chatgpt-telegram-bot/issues/34&#34;&gt;#34&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MAX_CONVERSATION_AGE_MINUTES&lt;/code&gt;: Maximum number of minutes a conversation should live, after which the conversation will be reset to avoid excessive token usage&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;VOICE_REPLY_WITH_TRANSCRIPT_ONLY&lt;/code&gt;: Whether to answer to voice messages with the transcript only or with a ChatGPT response of the transcript (&lt;a href=&#34;https://github.com/n3d1117/chatgpt-telegram-bot/issues/38&#34;&gt;#38&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Additional model parameters can be configured from the `main.py` file.&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;{&#xA;    # &#39;gpt-3.5-turbo&#39; or &#39;gpt-3.5-turbo-0301&#39;&#xA;    &#39;model&#39;: &#39;gpt-3.5-turbo&#39;,&#xA;&#xA;    # Number between 0 and 2. Higher values like 0.8 will make the output more random,&#xA;    # while lower values like 0.2 will make it more focused and deterministic. Defaults to 1&#xA;    &#39;temperature&#39;: 1,&#xA;    &#xA;    # How many answers to generate for each input message. Defaults to 1&#xA;    &#39;n_choices&#39;: 1,&#xA;&#xA;    # Number between -2.0 and 2.0. Positive values penalize new tokens based on whether&#xA;    # they appear in the text so far, increasing the model&#39;s likelihood to talk about new topics. Defaults to 0&#xA;    &#39;presence_penalty&#39;: 0,&#xA;    &#xA;    # Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing&#xA;    # frequency in the text so far, decreasing the model&#39;s likelihood to repeat the same line verbatim. Defaults to 0&#xA;    &#39;frequency_penalty&#39;: 0,&#xA;    &#xA;    # The DALL¬∑E generated image size. 256x256, 512x512, or 1024x1024. Defaults to 512x512&#xA;    &#39;image_size&#39;: &#39;512x512&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://platform.openai.com/docs/api-reference/chat&#34;&gt;official API reference&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h3&gt;Installing&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository and navigate to the project directory:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/n3d1117/chatgpt-telegram-bot.git&#xA;cd chatgpt-telegram-bot&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;From Source&lt;/h4&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Create a new virtual environment with Pipenv and install the required dependencies:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;pipenv install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Activate the virtual environment:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;pipenv shell&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Use the following command to start the bot:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;python main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using Docker Compose&lt;/h4&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Run the following command to build and run the Docker image:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;ChatGPT&lt;/a&gt; from &lt;a href=&#34;https://openai.com&#34;&gt;OpenAI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://python-telegram-bot.org&#34;&gt;python-telegram-bot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jiaaro/pydub&#34;&gt;jiaaro/pydub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This is a personal project and is not affiliated with OpenAI in any way.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is released under the terms of the GPL 2.0 license. For more information, see the &lt;a href=&#34;https://raw.githubusercontent.com/n3d1117/chatgpt-telegram-bot/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file included in the repository.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ashawkey/nerf2mesh</title>
    <updated>2023-03-09T01:41:27Z</updated>
    <id>tag:github.com,2023-03-09:/ashawkey/nerf2mesh</id>
    <link href="https://github.com/ashawkey/nerf2mesh" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Delicate Textured Mesh Recovery from NeRF via Adaptive Surface Refinement&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nerf2mesh&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains a PyTorch re-implementation of the paper: &lt;a href=&#34;https://arxiv.org/abs/2303.02091&#34;&gt;Delicate Textured Mesh Recovery from NeRF via Adaptive Surface Refinement&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://ashawkey.github.io/nerf2mesh/&#34;&gt;Project Page&lt;/a&gt; | &lt;a href=&#34;https://arxiv.org/abs/2303.02091&#34;&gt;Arxiv&lt;/a&gt; | &lt;a href=&#34;https://huggingface.co/ashawkey/nerf2mesh/resolve/main/paper.pdf&#34;&gt;Paper&lt;/a&gt; | &lt;a href=&#34;https://huggingface.co/ashawkey/nerf2mesh/tree/main/scenes&#34;&gt;Models&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ashawkey/nerf2mesh/main/assets/teaser.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/25863658/223434084-a487cb0f-2408-41c6-bd39-93d017641eec.jpg&#34; alt=&#34;vis&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Install&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/ashawkey/nerf2mesh.git&#xA;cd nerf2mesh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install with pip&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;&#xA;# nvdiffrast&#xA;pip install git+https://github.com/NVlabs/nvdiffrast/&#xA;&#xA;# pytorch3d&#xA;pip install git+https://github.com/facebookresearch/pytorch3d.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build extension (optional)&lt;/h3&gt; &#xA;&lt;p&gt;By default, we use &lt;a href=&#34;https://pytorch.org/docs/stable/cpp_extension.html#torch.utils.cpp_extension.load&#34;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; to build the extension at runtime. However, this may be inconvenient sometimes. Therefore, we also provide the &lt;code&gt;setup.py&lt;/code&gt; to build each extension:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# install all extension modules&#xA;bash scripts/install_ext.sh&#xA;&#xA;# if you want to install manually, here is an example:&#xA;cd raymarching&#xA;python setup.py build_ext --inplace # build ext only, do not install (only can be used in the parent directory)&#xA;pip install . # install to python path (you still need the raymarching/ folder, since this only install the built extension.)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Tested environments&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu 22 with torch 1.12 &amp;amp; CUDA 11.6 on a V100.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;We support the original NeRF data format like &lt;a href=&#34;https://drive.google.com/drive/folders/128yBriW1IG_3NJ5Rp7APSTZsJqdJdfc1&#34;&gt;nerf-synthetic&lt;/a&gt;, and COLMAP dataset like &lt;a href=&#34;http://storage.googleapis.com/gresearch/refraw360/360_v2.zip&#34;&gt;Mip-NeRF 360&lt;/a&gt;. Please download and put them under &lt;code&gt;./data&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;First time running will take some time to compile the CUDA extensions.&lt;/p&gt; &#xA;&lt;h3&gt;Basics&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;### Stage0 (NeRF, continuous, volumetric rendering), this stage exports a coarse mesh under &amp;lt;workspace&amp;gt;/mesh_stage0/&#xA;&#xA;# nerf&#xA;python main.py data/nerf_synthetic/lego/ --workspace trial_syn_lego/ -O --bound 1 --scale 0.8 --dt_gamma 0 --stage 0 --lambda_tv 1e-8&#xA;&#xA;# colmap&#xA;python main.py data/garden/ --workspace trial_360_garden -O --data_format colmap --bound 16 --enable_cam_center --enable_cam_near_far --scale 0.3 --downscale 4 --stage 0 --lambda_entropy 1e-3 --clean_min_f 16 --clean_min_d 10 --lambda_tv 2e-8 --visibility_mask_dilation 50&#xA;&#xA;### Stage1 (Mesh, binarized, rasterization), this stage exports a fine mesh with textures under &amp;lt;workspace&amp;gt;/mesh_stage1/&#xA;&#xA;# nerf&#xA;python main.py data/nerf_synthetic/lego/ --workspace trial_syn_lego/ -O --bound 1 --scale 0.8 --dt_gamma 0 --stage 1&#xA;&#xA;# colmap&#xA;python main.py data/garden/ --workspace trial_360_garden   -O --data_format colmap --bound 16 --enable_cam_center --enable_cam_near_far --scale 0.3 --downscale 4 --stage 1 --iters 10000&#xA;&#xA;### Web Renderer&#xA;# you can simply open &amp;lt;workspace&amp;gt;/mesh_stage1/mesh.obj with a 3D viewer to visualize the diffuse texture.&#xA;# to render full diffuse + specular, you&#39;ll need to host this folder (e.g., by vscode live server), and open renderer.html for further instructions.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom Dataset&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tips:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To get best mesh quality, you may need to adjust &lt;code&gt;--scale&lt;/code&gt; to let the most interested object fall inside the unit box &lt;code&gt;[-1, 1]^3&lt;/code&gt;, which can be visualized by appending &lt;code&gt;--vis_pose&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To better model background (especially for outdoor scenes), you may need to adjust &lt;code&gt;--bound&lt;/code&gt; to let most sparse points fall into the full box &lt;code&gt;[-bound, bound]^3&lt;/code&gt;, which can also be visualized by appending &lt;code&gt;--vis_pose&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For forward-facing dataset, remove &lt;code&gt;--enable_cam_center&lt;/code&gt; so the scene center is determined by sparse points which is more suitable.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# prepare your video or images under /data/custom, and run colmap (assumed installed):&#xA;python scripts/colmap2nerf.py --video ./data/custom/video.mp4 --run_colmap # if use video&#xA;python scripts/colmap2nerf.py --images ./data/custom/images/ --run_colmap # if use images&#xA;&#xA;# recommended options for outdoor 360-inwarding captures&#xA;python main.py data/custom/ --workspace trial_custom -O --data_format colmap --bound 16 --enable_cam_center --enable_cam_near_far --scale 0.3 --stage 0 --lambda_entropy 1e-3 --clean_min_f 16 --clean_min_d 10 --lambda_tv 2e-8 --visibility_mask_dilation 50&#xA;&#xA;python main.py data/custom/ --workspace trial_custom -O --data_format colmap --bound 16 --enable_cam_center --enable_cam_near_far --scale 0.3 --stage 1 --iters 10000 --lambda_normal 1e-3&#xA;&#xA;# recommended options for forward-facing captures&#xA;python main.py data/custom/ --workspace trial_custom -O --data_format colmap --bound 4 --scale 0.3 --stage 0 --clean_min_f 16 --clean_min_d 10 --lambda_tv 2e-8 --visibility_mask_dilation 50&#xA;&#xA;python main.py data/custom/ --workspace trial_custom -O --data_format colmap --bound 4 --scale 0.3 --stage 1 --iters 10000 --lambda_normal 1e-3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Advanced Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;### -O: the recommended setting, equals&#xA;--fp16 --preload --mark_untrained --random_image_batch --adaptive_num_rays --refine --mesh_visibility_culling&#xA;&#xA;### load checkpoint&#xA;--ckpt latest # by default we load the latest checkpoint in the workspace&#xA;--ckpt scratch # train from scratch. For stage 1, this will still load the stage 0 model as an initialization.&#xA;--ckpt trial/checkpoints/xxx.pth # specify it by path&#xA;&#xA;### testing&#xA;--test # test, save video and mesh&#xA;--test_no_video # do not save video&#xA;--test_no_mesh # do not save mesh&#xA;&#xA;### dataset related&#xA;--data_format [colmap|nerf] # dataset format&#xA;--enable_cam_center # use camera center instead of sparse point center as scene center (colmap dataset only)&#xA;--enable_cam_near_far # estimate camera near &amp;amp; far from sparse points (colmap dataset only)&#xA;&#xA;--bound 16 # scene bound set to [-16, 16]^3, note that only meshes inside the center [-1, 1]^3 will be adaptively refined!&#xA;--scale 0.3 # camera scale, if not specified, automatically estimate one based on camera positions. Important targets should be scaled into the center [-1, 1]^3.&#xA;&#xA;### visualization &#xA;--vis_pose # viusalize camera poses and sparse points (sparse points are colmap dataset only)&#xA;--gui # open gui&#xA;&#xA;### balance between surface quality / rendering quality&#xA;&#xA;# increase these weights to get better surface quality but worse rendering quality&#xA;--lambda_tv 1e-7 # total variation loss (stage 0)&#xA;--lambda_entropy 1e-3 # entropy on rendering weights (transparency, alpha), encourage them to be either 0 or 1 (stage 0)&#xA;--lambda_lap 0.001 # laplacian smoothness loss (stage 1)&#xA;--lambda_normal 0.001 # normal consistency loss (stage 1)&#xA;--lambda_offsets 0.1 # vertex offsets L2 loss (stage 1)&#xA;--lambda_edgelen 0.1 # edge length L2 loss (stage 1)&#xA;&#xA;# set all smoothness regularizations to 0, usually get the best rendering quality&#xA;--wo_smooth&#xA;&#xA;### coarse mesh extraction &amp;amp; post-processing&#xA;--mcubes_reso 512 # marching cubes resolution&#xA;--decimate_target 300000 # decimate raw mesh to this face number&#xA;--clean_min_d 5 # isolated floaters with smaller diameter will be removed&#xA;--clean_min_f 8 # isolated floaters with fewer faces will be removed&#xA;--visibility_mask_dilation 5 # dilate iterations after performing visibility face culling&#xA;&#xA;### fine mesh exportation&#xA;--texture_size 4096 # max texture image resolution&#xA;--ssaa 2 # super-sampling anti-alias ratio&#xA;--refine_size 0.01 # finest edge len at subdivision&#xA;--refine_decimate_ratio 0.1 # decimate ratio at each refine step&#xA;--refine_remesh_size 0.02 # remesh edge len after decimation&#xA;&#xA;### Depth supervision (colmap dataset only)&#xA;&#xA;# generate downscaled images (&#39;images` --&amp;gt; `images_4`)&#xA;python scripts/downscale.py data/&amp;lt;name&amp;gt; --downscale 4&#xA;&#xA;# download depth checkpoints (omnidata v2)&#xA;cd depth_tools&#xA;bash download_models.sh&#xA;cd ..&#xA;&#xA;# generate dense depth&#xA;python depth_tools/extract_depth.py --in_dir data/&amp;lt;name&amp;gt;/images_4 --out_dir data/&amp;lt;name&amp;gt;/depths&#xA;&#xA;# enable dense depth training&#xA;python main.py data/&amp;lt;name&amp;gt; -O --bound 16 --data_format colmap --enable_dense_depth&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please check the &lt;code&gt;scripts&lt;/code&gt; directory for more examples on common datasets, and check &lt;code&gt;main.py&lt;/code&gt; for all options.&lt;/p&gt; &#xA;&lt;h1&gt;Acknowledgement&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The NeRF framework is based on &lt;a href=&#34;https://github.com/ashawkey/torch-ngp&#34;&gt;torch-ngp&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The GUI is developed with &lt;a href=&#34;https://github.com/hoffstadt/DearPyGui&#34;&gt;DearPyGui&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Citation&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{tang2022nerf2mesh,&#xA;  title={Delicate Textured Mesh Recovery from NeRF via Adaptive Surface Refinement},&#xA;  author={Tang, Jiaxiang and Zhou, Hang and Chen, Xiaokang and Hu, Tianshu and Ding, Errui and Wang, Jingdong and Zeng, Gang},&#xA;  journal={arXiv preprint arXiv:2303.02091},&#xA;  year={2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>