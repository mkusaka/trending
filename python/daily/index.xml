<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-26T01:33:22Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>s0md3v/Photon</title>
    <updated>2024-08-26T01:33:22Z</updated>
    <id>tag:github.com,2024-08-26:/s0md3v/Photon</id>
    <link href="https://github.com/s0md3v/Photon" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Incredibly fast crawler designed for OSINT.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/s0md3v/Photon&#34;&gt;&lt;img src=&#34;https://image.ibb.co/h5OZAK/photonsmall.png&#34; alt=&#34;Photon&#34;&gt;&lt;/a&gt; &lt;br&gt; Photon &lt;br&gt; &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;Incredibly fast crawler designed for OSINT.&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/s0md3v/Photon/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/s0md3v/Photon.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/photon/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/pypi-@photon-red.svg?style=style=flat-square&#34; alt=&#34;pypi&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/s0md3v/Photon/issues?q=is%3Aissue+is%3Aclosed&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-closed-raw/s0md3v/Photon.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://travis-ci.com/s0md3v/Photon&#34;&gt; &lt;img src=&#34;https://img.shields.io/travis/com/s0md3v/Photon.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Met a CAPTCHA? Try &lt;a href=&#34;https://www.capsolver.com/?utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=scraping&amp;amp;utm_term=photon&#34;&gt;CapSolver&lt;/a&gt; solving solution.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://image.ibb.co/kQSUcz/demo.png&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/s0md3v/Photon/wiki&#34;&gt;Photon Wiki&lt;/a&gt; • &lt;a href=&#34;https://github.com/s0md3v/Photon/wiki/Usage&#34;&gt;How To Use&lt;/a&gt; • &lt;a href=&#34;https://github.com/s0md3v/Photon/wiki/Compatibility-&amp;amp;-Dependencies&#34;&gt;Compatibility&lt;/a&gt; • &lt;a href=&#34;https://github.com/s0md3v/Photon/wiki/Photon-Library&#34;&gt;Photon Library&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/s0md3v/Photon/master/#contribution--license&#34;&gt;Contribution&lt;/a&gt; • &lt;a href=&#34;https://github.com/s0md3v/Photon/projects/1&#34;&gt;Roadmap&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Key Features&lt;/h3&gt; &#xA;&lt;h4&gt;Data Extraction&lt;/h4&gt; &#xA;&lt;p&gt;Photon can extract the following data while crawling:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;URLs (in-scope &amp;amp; out-of-scope)&lt;/li&gt; &#xA; &lt;li&gt;URLs with parameters (&lt;code&gt;example.com/gallery.php?id=2&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Intel (emails, social media accounts, amazon buckets etc.)&lt;/li&gt; &#xA; &lt;li&gt;Files (pdf, png, xml etc.)&lt;/li&gt; &#xA; &lt;li&gt;Secret keys (auth/API keys &amp;amp; hashes)&lt;/li&gt; &#xA; &lt;li&gt;JavaScript files &amp;amp; Endpoints present in them&lt;/li&gt; &#xA; &lt;li&gt;Strings matching custom regex pattern&lt;/li&gt; &#xA; &lt;li&gt;Subdomains &amp;amp; DNS related data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The extracted information is saved in an organized manner or can be &lt;a href=&#34;https://github.com/s0md3v/Photon/wiki/Usage#export-formatted-result&#34;&gt;exported as json&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://image.ibb.co/dS1BqK/carbon_2.png&#34; alt=&#34;save demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Flexible&lt;/h4&gt; &#xA;&lt;p&gt;Control timeout, delay, add seeds, exclude URLs matching a regex pattern and other cool stuff. The extensive range of &lt;a href=&#34;https://github.com/s0md3v/Photon/wiki/Usage&#34;&gt;options&lt;/a&gt; provided by Photon lets you crawl the web exactly the way you want.&lt;/p&gt; &#xA;&lt;h4&gt;Genius&lt;/h4&gt; &#xA;&lt;p&gt;Photon&#39;s smart thread management &amp;amp; refined logic gives you top notch performance.&lt;/p&gt; &#xA;&lt;p&gt;Still, crawling can be resource intensive but Photon has some tricks up it&#39;s sleeves. You can fetch URLs archived by &lt;a href=&#34;https://archive.org/&#34;&gt;archive.org&lt;/a&gt; to be used as seeds by using &lt;code&gt;--wayback&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;h4&gt;Plugins&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/s0md3v/Photon/wiki/Usage#use-urls-from-archiveorg-as-seeds&#34;&gt;wayback&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/s0md3v/Photon/wiki/Usage#dumping-dns-data&#34;&gt;dnsdumpster&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/s0md3v/Photon/wiki/Usage#export-formatted-result&#34;&gt;Exporter&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Docker&lt;/h4&gt; &#xA;&lt;p&gt;Photon can be launched using a lightweight Python-Alpine (103 MB) Docker image.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/s0md3v/Photon.git&#xA;$ cd Photon&#xA;$ docker build -t photon .&#xA;$ docker run -it --name photon photon:latest -u google.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To view results, you can either head over to the local docker volume, which you can find by running &lt;code&gt;docker inspect photon&lt;/code&gt; or by mounting the target loot folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -it --name photon -v &#34;$PWD:/Photon/google.com&#34; photon:latest -u google.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Frequent &amp;amp; Seamless Updates&lt;/h4&gt; &#xA;&lt;p&gt;Photon is under heavy development and updates for fixing bugs. optimizing performance &amp;amp; new features are being rolled regularly.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to see features and issues that are being worked on, you can do that on &lt;a href=&#34;https://github.com/s0md3v/Photon/projects/1&#34;&gt;Development&lt;/a&gt; project board.&lt;/p&gt; &#xA;&lt;p&gt;Updates can be installed &amp;amp; checked for with the &lt;code&gt;--update&lt;/code&gt; option. Photon has seamless update capabilities which means you can update Photon without losing any of your saved data.&lt;/p&gt; &#xA;&lt;h3&gt;Contribution &amp;amp; License&lt;/h3&gt; &#xA;&lt;p&gt;You can contribute in following ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Report bugs&lt;/li&gt; &#xA; &lt;li&gt;Develop plugins&lt;/li&gt; &#xA; &lt;li&gt;Add more &#34;APIs&#34; for ninja mode&lt;/li&gt; &#xA; &lt;li&gt;Give suggestions to make it better&lt;/li&gt; &#xA; &lt;li&gt;Fix issues &amp;amp; submit a pull request&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://github.com/s0md3v/Photon/wiki/Guidelines&#34;&gt;guidelines&lt;/a&gt; before submitting a pull request or issue.&lt;/p&gt; &#xA;&lt;p&gt;Do you want to have a conversation in private? Hit me up on my &lt;a href=&#34;https://twitter.com/s0md3v/&#34;&gt;twitter&lt;/a&gt;, inbox is open :)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Photon&lt;/strong&gt; is licensed under &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;GPL v3.0 license&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/vizier</title>
    <updated>2024-08-26T01:33:22Z</updated>
    <id>tag:github.com,2024-08-26:/google/vizier</id>
    <link href="https://github.com/google/vizier" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Python-based research interface for blackbox and hyperparameter optimization, based on the internal Google Vizier Service.&lt;/p&gt;&lt;hr&gt;&lt;figure&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/google/vizier/main/docs/assets/vizier_logo2.png&#34; width=&#34;20%&#34; align=&#34;right&#34;&gt; &#xA;&lt;/figure&gt; &#xA;&lt;h1&gt;Open Source Vizier: Reliable and Flexible Black-Box Optimization.&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/py/google-vizier&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/google-vizier.svg?sanitize=true&#34; alt=&#34;PyPI version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/google/vizier/actions/workflows/ci.yml?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/google/vizier/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Continuous Integration&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/google/vizier/workflows/docs_test/badge.svg?sanitize=true&#34; alt=&#34;Docs&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ai.googleblog.com/2023/02/open-source-vizier-towards-reliable-and.html&#34;&gt;&lt;strong&gt;Google AI Blog&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/google/vizier/main/#getting_started&#34;&gt;&lt;strong&gt;Getting Started&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/google/vizier/main/#documentation&#34;&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/google/vizier/main/#installation&#34;&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/google/vizier/main/#citing_vizier&#34;&gt;&lt;strong&gt;Citing and Highlights&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Open Source (OSS) Vizier?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2207.13676&#34;&gt;OSS Vizier&lt;/a&gt; is a Python-based service for black-box optimization and research, based on &lt;a href=&#34;https://dl.acm.org/doi/10.1145/3097983.3098043&#34;&gt;Google Vizier&lt;/a&gt;, one of the first hyperparameter tuning services designed to work at scale.&lt;/p&gt; &#xA;&lt;figure&gt; &#xA; &lt;p align=&#34;center&#34; width=&#34;65%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/google/vizier/main/docs/assets/oss_vizier_service.gif&#34;&gt; &lt;br&gt; &lt;em&gt;&lt;b&gt;OSS Vizier&#39;s distributed client-server system. Animation by Tom Small.&lt;/b&gt;&lt;/em&gt; &lt;/p&gt; &#xA;&lt;/figure&gt; &#xA;&lt;h2&gt;Getting Started &lt;a name=&#34;getting_started&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;As a basic example for users, below shows how to tune a simple objective using all flat search space types:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from vizier.service import clients&#xA;from vizier.service import pyvizier as vz&#xA;&#xA;# Objective function to maximize.&#xA;def evaluate(w: float, x: int, y: float, z: str) -&amp;gt; float:&#xA;  return w**2 - y**2 + x * ord(z)&#xA;&#xA;# Algorithm, search space, and metrics.&#xA;study_config = vz.StudyConfig(algorithm=&#39;DEFAULT&#39;)&#xA;study_config.search_space.root.add_float_param(&#39;w&#39;, 0.0, 5.0)&#xA;study_config.search_space.root.add_int_param(&#39;x&#39;, -2, 2)&#xA;study_config.search_space.root.add_discrete_param(&#39;y&#39;, [0.3, 7.2])&#xA;study_config.search_space.root.add_categorical_param(&#39;z&#39;, [&#39;a&#39;, &#39;g&#39;, &#39;k&#39;])&#xA;study_config.metric_information.append(vz.MetricInformation(&#39;metric_name&#39;, goal=vz.ObjectiveMetricGoal.MAXIMIZE))&#xA;&#xA;# Setup client and begin optimization. Vizier Service will be implicitly created.&#xA;study = clients.Study.from_study_config(study_config, owner=&#39;my_name&#39;, study_id=&#39;example&#39;)&#xA;for i in range(10):&#xA;  suggestions = study.suggest(count=2)&#xA;  for suggestion in suggestions:&#xA;    params = suggestion.parameters&#xA;    objective = evaluate(params[&#39;w&#39;], params[&#39;x&#39;], params[&#39;y&#39;], params[&#39;z&#39;])&#xA;    suggestion.complete(vz.Measurement({&#39;metric_name&#39;: objective}))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation &lt;a name=&#34;documentation&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;OSS Vizier&#39;s interface consists of &lt;a href=&#34;https://oss-vizier.readthedocs.io/en/latest/guides/index.html&#34;&gt;three main APIs&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oss-vizier.readthedocs.io/en/latest/guides/index.html#for-users&#34;&gt;&lt;strong&gt;User API:&lt;/strong&gt;&lt;/a&gt; Allows a user to optimize their blackbox objective and optionally setup a server for distributed multi-client settings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oss-vizier.readthedocs.io/en/latest/guides/index.html#for-developers&#34;&gt;&lt;strong&gt;Developer API:&lt;/strong&gt;&lt;/a&gt; Defines abstractions and utilities for implementing new optimization algorithms for research and to be hosted in the service.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oss-vizier.readthedocs.io/en/latest/guides/index.html#for-benchmarking&#34;&gt;&lt;strong&gt;Benchmarking API:&lt;/strong&gt;&lt;/a&gt; A wide collection of objective functions and methods to benchmark and compare algorithms.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, it contains &lt;a href=&#34;https://oss-vizier.readthedocs.io/en/latest/advanced_topics/index.html&#34;&gt;advanced API&lt;/a&gt; for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oss-vizier.readthedocs.io/en/latest/advanced_topics/index.html#tensorflow-probability&#34;&gt;&lt;strong&gt;Tensorflow Probability:&lt;/strong&gt;&lt;/a&gt; For writing Bayesian Optimization algorithms using Tensorflow Probability and Flax.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oss-vizier.readthedocs.io/en/latest/advanced_topics/index.html#pyglove&#34;&gt;&lt;strong&gt;PyGlove:&lt;/strong&gt;&lt;/a&gt; For large-scale evolutionary experimentation and program search using OSS Vizier as a distributed backend.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please see OSS Vizier&#39;s &lt;a href=&#34;https://oss-vizier.readthedocs.io/&#34;&gt;ReadTheDocs documentation&lt;/a&gt; for detailed information.&lt;/p&gt; &#xA;&lt;h2&gt;Installation &lt;a name=&#34;installation&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Quick start:&lt;/strong&gt; For tuning objectives using our state-of-the-art JAX-based Bayesian Optimizer, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install google-vizier[jax]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Advanced Installation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Minimal version:&lt;/strong&gt; To install only the core service and client APIs from &lt;code&gt;requirements.txt&lt;/code&gt;, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install google-vizier&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Full installation:&lt;/strong&gt; To support all algorithms and benchmarks, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install google-vizier[all]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Specific installation:&lt;/strong&gt; If you only need a specific part &#34;X&#34; of OSS Vizier, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install google-vizier[X]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which installs add-ons from &lt;code&gt;requirements-X.txt&lt;/code&gt;. Possible options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;requirements-jax.txt&lt;/code&gt;: Jax libraries shared by both algorithms and benchmarks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;requirements-tf.txt&lt;/code&gt;: Tensorflow libraries used by benchmarks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;requirements-algorithms.txt&lt;/code&gt;: Additional repositories (e.g. EvoJAX) for algorithms.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;requirements-benchmarks.txt&lt;/code&gt;: Additional repositories (e.g. NASBENCH-201) for benchmarks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;requirements-test.txt&lt;/code&gt;: Libraries needed for testing code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check if all unit tests work by running &lt;code&gt;run_tests.sh&lt;/code&gt; after a full installation. OSS Vizier requires Python 3.10+, while client-only packages require Python 3.8+.&lt;/p&gt; &#xA;&lt;h2&gt;Citing and Highlights &lt;a name=&#34;citing_vizier&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;ins&gt;&lt;strong&gt;Citing Vizier:&lt;/strong&gt;&lt;/ins&gt; Please consider citing the appropriate paper(s): &lt;a href=&#34;https://arxiv.org/abs/2408.11527&#34;&gt;Algorithm&lt;/a&gt;, &lt;a href=&#34;https://arxiv.org/abs/2207.13676&#34;&gt;OSS Package&lt;/a&gt;, and &lt;a href=&#34;https://dl.acm.org/doi/10.1145/3097983.3098043&#34;&gt;Google System&lt;/a&gt; if you found any of them useful.&lt;/p&gt; &#xA;&lt;p&gt;&lt;ins&gt;&lt;strong&gt;Highlights:&lt;/strong&gt;&lt;/ins&gt; We track &lt;a href=&#34;https://oss-vizier.readthedocs.io/en/latest/highlights/applications.html&#34;&gt;notable users&lt;/a&gt; and &lt;a href=&#34;https://oss-vizier.readthedocs.io/en/latest/highlights/media.html&#34;&gt;media attention&lt;/a&gt; - let us know if OSS Vizier was helpful for your work.&lt;/p&gt; &#xA;&lt;p&gt;Thanks!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{gaussian_process_bandit,&#xA;  author       = {Xingyou Song and&#xA;                  Qiuyi Zhang and&#xA;                  Chansoo Lee and&#xA;                  Emily Fertig and&#xA;                  Tzu-Kuo Huang and&#xA;                  Lior Belenki and&#xA;                  Greg Kochanski and&#xA;                  Setareh Ariafar and&#xA;                  Srinivas Vasudevan and&#xA;                  Sagi Perel and&#xA;                  Daniel Golovin},&#xA;  title        = {The Vizier Gaussian Process Bandit Algorithm},&#xA;  journal      = {Google DeepMind Technical Report},&#xA;  year         = {2024},&#xA;  eprinttype    = {arXiv},&#xA;  eprint       = {2408.11527},&#xA;}&#xA;&#xA;@inproceedings{oss_vizier,&#xA;  author    = {Xingyou Song and&#xA;               Sagi Perel and&#xA;               Chansoo Lee and&#xA;               Greg Kochanski and&#xA;               Daniel Golovin},&#xA;  title     = {Open Source Vizier: Distributed Infrastructure and API for Reliable and Flexible Black-box Optimization},&#xA;  booktitle = {Automated Machine Learning Conference, Systems Track (AutoML-Conf Systems)},&#xA;  year      = {2022},&#xA;}&#xA;&#xA;@inproceedings{google_vizier,&#xA;  author    = {Daniel Golovin and&#xA;               Benjamin Solnik and&#xA;               Subhodeep Moitra and&#xA;               Greg Kochanski and&#xA;               John Karro and&#xA;               D. Sculley},&#xA;  title     = {Google Vizier: {A} Service for Black-Box Optimization},&#xA;  booktitle = {Proceedings of the 23rd {ACM} {SIGKDD} International Conference on&#xA;               Knowledge Discovery and Data Mining, Halifax, NS, Canada, August 13&#xA;               - 17, 2017},&#xA;  pages     = {1487--1495},&#xA;  publisher = {{ACM}},&#xA;  year      = {2017},&#xA;  url       = {https://doi.org/10.1145/3097983.3098043},&#xA;  doi       = {10.1145/3097983.3098043},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>