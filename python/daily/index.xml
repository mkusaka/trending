<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-08T01:40:18Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JusticeRage/Gepetto</title>
    <updated>2022-12-08T01:40:18Z</updated>
    <id>tag:github.com,2022-12-08:/JusticeRage/Gepetto</id>
    <link href="https://github.com/JusticeRage/Gepetto" rel="alternate"></link>
    <summary type="html">&lt;p&gt;IDA plugin which queries OpenAI&#39;s davinci-003 language model to speed up reverse-engineering&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gepetto&lt;/h1&gt; &#xA;&lt;p&gt;Gepetto is a Python script which uses OpenAI&#39;s davinci-003 model to provide meaning to functions decompiled by IDA Pro. At the moment, it can ask davinci-003 to explain what a function does, and to automatically rename its variables. Here is a simple example of what results it can provide in mere seconds:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/JusticeRage/Gepetto/raw/main/readme/comparison.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;Simply drop this script into your IDA plugins folder (&lt;code&gt;$IDAUSR/plugins&lt;/code&gt;). By default, on Windows, this should be &lt;code&gt;%AppData%\Hex-Rays\IDA Pro\plugins&lt;/code&gt; (you may need to create the folder).&lt;/p&gt; &#xA;&lt;p&gt;You will need to add the required packages to IDA&#39;s Python installation for the script to work. Find which interpreter IDA is using by checking the following registry key: &lt;code&gt;Computer\HKEY_CURRENT_USER\Software\Hex-Rays\IDA&lt;/code&gt; (default on Windows: &lt;code&gt;%LOCALAPPDATA%\Programs\Python\Python39&lt;/code&gt;). Finally, with the corresponding interpreter, simply run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[/path/to/python] -m pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;⚠️ You will also need to edit the script and add your own API key, which can be found on &lt;a href=&#34;https://beta.openai.com/account/api-keys&#34;&gt;this page&lt;/a&gt;. Please note that davinci-003 queries are not free (although not very expensive) and you will need to set up a payment method.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Once the plugin is installed properly, you should be able to invoke it from the context menu of IDA&#39;s pseudocode window, as shown in the screenshot below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/JusticeRage/Gepetto/raw/main/readme/usage.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also use the following hotkeys:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ask davinci-003 to explain the function: &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;Alt&lt;/code&gt; + &lt;code&gt;H&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Request better names for the function&#39;s variables: &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;Alt&lt;/code&gt; + &lt;code&gt;R&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Initial testing shows that asking for better names works better if you ask for an explanation of the function first – I assume because davinci-003 then uses its own comment to make more accurate suggestions. There is an element of randomness to the AI&#39;s replies. If for some reason the initial response you get doesn&#39;t suit you, you can always run the command again.&lt;/p&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The plugin requires access to the HexRays decompiler to function.&lt;/li&gt; &#xA; &lt;li&gt;davinci-003 is a general-purpose language model and may very well get things wrong! Always be critical of results returned!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openai.com&#34;&gt;OpenAI&lt;/a&gt;, for making this incredible chatbot, obviously&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hex-rays.com/&#34;&gt;Hex Rays&lt;/a&gt;, the makers of IDA for their lightning fast support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kaspersky.com&#34;&gt;Kaspersky&lt;/a&gt;, for funding all my research&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>bupticybee/ChineseAiDungeonChatGPT</title>
    <updated>2022-12-08T01:40:18Z</updated>
    <id>tag:github.com,2022-12-08:/bupticybee/ChineseAiDungeonChatGPT</id>
    <link href="https://github.com/bupticybee/ChineseAiDungeonChatGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;中文版的ai地牢，直接使用的openai的ChatGPT api作为讲故事的模型。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;中文版本的ai地牢（基于ChatGPT版本）&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/bupticybee/ChineseAiDungeonChatGPT/blob/main/Example.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bupticybee/ChineseAiDungeonChatGPT/main/outputs/story.gif&#34; alt=&#34;storysample&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;介绍&lt;/h2&gt; &#xA;&lt;p&gt;中文版的ai地牢，直接使用的openai的ChatGPT api作为讲故事的模型。&lt;/p&gt; &#xA;&lt;p&gt;我已经不知道说什么了，我只是写了40行代码，花了1个小时，这个版本的中文ai地牢讲故事的能力比我之前花了一个月训练的 &lt;a href=&#34;https://github.com/bupticybee/ChineseAiDungeon&#34;&gt;ChineseAiDungeon&lt;/a&gt; 好了不止一个数量级。 并且它甚至不需要finetune。模型效果显著比清华开源的清源CPM好的多得多。&lt;/p&gt; &#xA;&lt;p&gt;我感觉chat gpt讲故事的能力已经直接逼近ai地牢本身了。科技的进步，令人恐怖。&lt;/p&gt; &#xA;&lt;h2&gt;安装和使用&lt;/h2&gt; &#xA;&lt;p&gt;直接下载项目，然后&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip3 install revChatGPT --upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;安装依赖&lt;/p&gt; &#xA;&lt;p&gt;然后直接&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python3 example_story.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;就可以在命令行运行起来&lt;/p&gt; &#xA;&lt;p&gt;你也可以通过&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python3 app.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;调出一个app界面运行。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bupticybee/ChineseAiDungeonChatGPT/main/outputs/example_chatgpt_app.png&#34; alt=&#34;app_screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;须知&lt;/h2&gt; &#xA;&lt;p&gt;我把我自己的open ai账号token直接附带在了代码里，大家可以直接使用。&lt;/p&gt; &#xA;&lt;p&gt;但是仍可能有一些情况，可能导致我的token没法用：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;太多人用导致账号被封禁&lt;/li&gt; &#xA; &lt;li&gt;账号被盗，改了密码等&lt;/li&gt; &#xA; &lt;li&gt;token过期&lt;/li&gt; &#xA; &lt;li&gt;openai封了接口，或者接口收费了等等&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;在这种情况出现时，大家需要自备梯子，并且按照 &lt;a href=&#34;https://github.com/acheong08/ChatGPT&#34;&gt;revChatGPT&lt;/a&gt; 的说明填写config.py。&lt;/p&gt; &#xA;&lt;p&gt;几个我自己玩的故事见outputs文件夹，总体感觉非常震撼，大家可以参考。&lt;/p&gt; &#xA;&lt;p&gt;其中一个故事,这一个故事里边，我在一个洞穴里迷路了，然后机智的凭借回城卷轴回了村子。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;你在树林里冒险，指不定会从哪里蹦出来一些奇怪的东西，你握紧手上的手枪，希望这次冒险能够找到一些值钱的&#xA;东西，你往树林深处走去。&#xA;&amp;gt; 你穿好伪装衣，这样敌人很难发现自己&#xA;你走了几步之后，感觉身后有什么东西在跟着你。你转身一看，发现是一只巨大的熊。你立刻拔出手枪，准备向它&#xA;开枪。但是你发现，这只熊似乎并不想攻击你，反而好像在寻找什么东西。你观察了它一会儿，发现它的视线总是&#xA;落在某个方向。你决定去看看那个方向，看看它到底在寻找什么。&#xA;&amp;gt; 你仔细观察熊在找什么&#xA;你跟着它走了几分钟，终于发现它在找一个密密麻麻的洞口。你观察了一会儿，发现洞口似乎非常深，里面有很多&#xA;石头和树根。你想进去看看，但是又害怕里面会有什么危险的动物。你决定先把手枪备好，然后再进去。你慢慢地&#xA;靠近洞口，准备进去。&#xA;&amp;gt; 你今走进这个洞口&#xA;你慢慢走进洞口，手里的手枪随时准备开枪。你一边走一边小心地观察周围的环境。你发现洞里非常黑暗，光线几&#xA;乎没有。你尝试着用手中的手电筒照亮前方，但是手电筒的光线也几乎看不清楚前面的情况。你开始有些担心，怕&#xA;自己会在这个洞里迷路。你决定继续走下去，看看会有什么惊喜。&#xA;&amp;gt; 你往洞的深处走去，同时伪装好自己&#xA;你按照原来的方向继续走，小心翼翼地躲避着前方的障碍物。你发现这个洞里非常安静，几乎没有任何声音。你开&#xA;始有些担心，怕自己会碰到什么危险的动物。但是你也感到好奇，想知道洞里面到底有什么。你决定冒险继续往前&#xA;走，看看会发现什么。&#xA;&amp;gt; 你主动弄出点声音，看看周围有没有动物之类的踪迹&#xA;你小心翼翼地把手里的手枪拿在前面，随时准备开枪。你仔细地观察着周围的环境，没有发现任何可疑的东西。你&#xA;开始有些放松，觉得自己可能没有遇到什么危险。但是你也感到好奇，想知道这个洞里面到底有什么。你决定继续&#xA;往前走，看看会发现什么。&#xA;&amp;gt; 你照亮周围，看看有没有人类或者动物的痕迹，如果没有，那时时候回头走出洞穴了&#xA;你继续往前走，手中的手电筒照亮着周围的环境。你仔细地观察着周围的情况，没有发现任何人类或动物的痕迹。&#xA;你开始有些担心，觉得自己可能走错了方向。你想回头走出洞穴，但是又担心自己会迷路。你决定继续往前走，看&#xA;看会发现什么。&#xA;&amp;gt; 你继续向前走&#xA;你继续往前走，手中的手电筒照亮着周围的环境。你发现自己已经走了很久，但是还没有看到出口。你开始有些担&#xA;心，觉得自己可能真的迷路了。你决定停下来，好好想想怎么办。你拿出手机，想看看自己的位置，但是发现手机&#xA;没电了，无法使用。你感到有些绝望，不知道该怎么办了。&#xA;&amp;gt; 你大声呼救&#xA;你心急火燎地大声呼救，希望有人能听到自己的声音，然后把你救出来。你高声喊叫了好几分钟，但是没有人回应&#xA;。你开始担心，觉得自己可能真的是被困在这个洞里面了。你想着等天黑了再走，可能会比较容易找到出口。你只&#xA;能坐在那里，等待天黑。&#xA;&amp;gt; 你顺着水流走，水流的上游就是洞口&#xA;你想到了一个主意，决定沿着水流往上游走，因为水流的上游应该就是洞口。你慢慢地走着，手中的手电筒照亮着&#xA;前方的道路。你发现水流变得越来越浅，最后几乎干涸了。你担心自己走错了方向，可能会走得更远。你决定停下&#xA;来，好好想想怎么办。&#xA;&amp;gt; 你想，难道要饿死在这里了么&#xA;你坐在地上，感到无助和绝望。你想，难道自己真的会饿死在这个洞里面吗？你想起了自己的家人和朋友，他们一&#xA;定会担心自己的。你觉得自己非常幸运，能够和他们相处。你决定继续努力，想办法找到出路。你拿出手中的手枪&#xA;，准备迎接接下来的挑战。&#xA;&amp;gt; 你突然想到， 口袋里有回城符文，可以直接传送回村子&#xA;你突然想起，自己口袋里有一块回城符文。这块符文可以让你直接传送回村子，不用再走回去。你拿出这块符文，&#xA;准备使用它。你觉得自己非常幸运，终于有一个办法脱身了。你手心里把符文捏碎，准备传送回村子。你感到欣慰&#xA;和感恩，感谢这次冒险的机会。&#xA;&amp;gt; 你传送回到村子&#xA;你成功地使用了回城符文，被传送回到了村子。你感到欣慰和感恩，感谢这次冒险的机会。你终于回到了安全的地&#xA;方，可以和家人朋友团聚。你决定把这次经历写成日记，留作纪念。你感到非常开心，觉得自己更加坚强了。你决&#xA;定继续冒险，寻找更多未知的世界。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;常见问题&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;err TypeError: &#39;generator&#39; object is not subscriptable&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;见 &lt;a href=&#34;https://github.com/bupticybee/ChineseAiDungeonChatGPT/issues/1&#34;&gt;#1&lt;/a&gt; ，尝试&lt;code&gt;pip3 install revChatGPT --upgrade&lt;/code&gt;升级依赖&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;response = response.text.splitlines()[-4] IndexError: list index out of rang&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;一般是接口太多人调用挂了，等openai修复就好，或者接口更新导致无效之类的，这个时候一般更新revChatGPT可以解决&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rawandahmad698/PyChatGPT</title>
    <updated>2022-12-08T01:40:18Z</updated>
    <id>tag:github.com,2022-12-08:/rawandahmad698/PyChatGPT</id>
    <link href="https://github.com/rawandahmad698/PyChatGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⚡️ TLS-based ChatGPT API with auto token regeneration, conversation tracking, proxy support and more.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🔥 PyChatGPT&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://img.shields.io/badge/python-3.8-blue.svg&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.8-blue.svg?sanitize=true&#34; alt=&#34;Python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/chatgptpy&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/chatgptpy.svg?sanitize=true&#34; alt=&#34;PyPi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/chatgptpy&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/chatgptpy.svg?sanitize=true&#34; alt=&#34;PyPi&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Change Log&lt;/h3&gt; &#xA;&lt;h4&gt;1.0.2&lt;/h4&gt; &#xA;&lt;h4&gt;Update using &lt;code&gt;pip install chatgptpy --upgrade&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ChatGPT API switches from &lt;code&gt;action=next&lt;/code&gt; to &lt;code&gt;action=variant&lt;/code&gt;, frequently. This library is now using &lt;code&gt;action=variant&lt;/code&gt; instead of &lt;code&gt;action=next&lt;/code&gt; to get the next response from the API.&lt;/li&gt; &#xA; &lt;li&gt;Sometimes when the server is overloaded, the API returns a &lt;code&gt;502 Bad Gateway&lt;/code&gt; error.&lt;/li&gt; &#xA; &lt;li&gt;Added Error handling if the auth.json file is not found/corrupt&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;1.0.0&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Initial Release via PyPi&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;⭐️ Like this repo? please star&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;💡 If OpenAI change their API, I will fix it as soon as possible, so &lt;mark&gt;Watch&lt;/mark&gt; the repo if you want to be notified&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;I have been looking for a way to interact with the new Chat GPT API, but most of the sources here on GitHub require you to have a Chromium instance running in the background. or by using the Web Inspector to grab Access Token manually.&lt;/p&gt; &#xA;&lt;p&gt;No more. I have been able to reverse engineer the API and use a TLS client to mimic a real user, allowing the script to login without setting off any bot detection techniques by Auth0&lt;/p&gt; &#xA;&lt;p&gt;Basically, the script logs in on your behalf, using a TLS client, then grabs the Access Token. It&#39;s pretty fast.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Proxy Support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Automatically login without involving a browser&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Automatically grab Access Token&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Get around the login captcha (If you try to log in subsequently, you will be prompted to solve a captcha)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Saves the access token to a file, so you don&#39;t have to log in again&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Automatically refreshes the access token when it expires&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Uses colorama to colorize the output, because why not?&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Smart Conversation Tracking&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;i&gt;Chatting&lt;/i&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.discordapp.net/attachments/1038565125482881027/1049255804366237736/image.png&#34; alt=&#34;Screenshot 1&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;i&gt;Creating a token&lt;/i&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.discordapp.net/attachments/1038565125482881027/1049072247442264094/image.png?width=2468&amp;amp;height=885&#34; alt=&#34;Screenshot 2&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;You: Hi there, My name is Rawa&#xA;Chat GPT: Hello Rawa, nice to meet you. Is there something you would like to talk about or ask me? I&#39;m here to help with any questions you may have.&#xA;You: great, now say my name like Heisenberg&#xA;Chat GPT: Sure, Rawa like Heisenberg. Is there anything else you would like to talk about? I&#39;m here to help with any questions you may have.&#xA;You: Sorry I meant like the episode of Breaking Bad where Walter White says Heisenberg&#xA;Chat GPT: Ah, I see. In that case, you could try saying it like this: &#34;My name is Rawa, like Heisenberg.&#34; This is a reference to the character Walter White from the TV show Breaking Bad, who often used the pseudonym &#34;Heisenberg&#34; when conducting illegal activities. The character was known for his cool and calculated demeanor, so saying your name like Heisenberg in this context would mean saying it with confidence and authority.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Shall we get started?&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install chatgptpy --upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it!&lt;/p&gt; &#xA;&lt;h4&gt;Start a CLI session?&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pychatgpt import Chat&#xA;&#xA;chat = Chat(email=&#34;email&#34;, password=&#34;password&#34;)&#xA;chat.cli_chat()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pychatgpt import Chat&#xA;&#xA;# Initializing the chat class will automatically log you in, check access_tokens&#xA;chat = Chat(email=&#34;email&#34;, password=&#34;password&#34;) &#xA;answer = chat.ask(&#34;Hello!&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Usage with a proxy&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pychatgpt import Chat&#xA;&#xA;chat = Chat(email=&#34;email&#34;, password=&#34;password&#34;, proxies=&#34;http://localhost:8080&#34;)  # proxy is optional, type: str or dict&#xA;answer = chat.ask(&#34;Hello!&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;You could also manually set, get the token&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pychatgpt import OpenAI&#xA;&#xA;# Manually set the token&#xA;OpenAI.Auth.save_access_token(access_token=&#34;&#34;, expiry=0) &#xA;&#xA;# Get the token, expiry&#xA;access_token, expiry = OpenAI.Auth.get_access_token()&#xA;&#xA;# Check if the token is valid&#xA;is_expired = OpenAI.Auth.token_expired() # Returns True or False&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Other notes&lt;/h3&gt; &#xA;&lt;p&gt;If the token creation process is failing:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Try to use a proxy (I recommend using this always)&lt;/li&gt; &#xA; &lt;li&gt;Don&#39;t try to log in too fast. At least wait 10 minutes if you&#39;re being rate limited.&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;re still having issues, try to use a VPN. On a VPN, the script should work fine.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;What&#39;s next?&lt;/h3&gt; &#xA;&lt;p&gt;I&#39;m planning to add a few more features, such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; A python module that can be imported and used in other projects&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; A way to save the conversation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Better error handling&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Multi-user chatting&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;The whole process&lt;/h3&gt; &#xA;&lt;p&gt;First, I&#39;d like to tell you that &#34;just making http&#34; requests is not going to be enough, Auth0 is smart, each process is guarded by a &lt;code&gt;state&lt;/code&gt; token, which is a JWT token. This token is used to prevent CSRF attacks, and it&#39;s also used to prevent bots from logging in. If you look at the &lt;code&gt;auth.py&lt;/code&gt; file, there are over nine functions, each one of them is responsible for a different task, and they all work together to create a token for you. &lt;code&gt;allow-redirects&lt;/code&gt; played a huge role in this, as it allowed to navigate through the login process&lt;/p&gt; &#xA;&lt;p&gt;I work at MeshMonitors.io, We make amazing tools (Check it out yo!). I decided not to spend too much time on this, but here we are, I have been able to reverse engineer the API and use a TLS client to mimic a real user, allowing the script to login without setting off any bot detection techniques by Auth0&lt;/p&gt; &#xA;&lt;h3&gt;Why did I do this?&lt;/h3&gt; &#xA;&lt;p&gt;No one has been able to do this, and I wanted to see if I could.&lt;/p&gt; &#xA;&lt;h3&gt;Credits&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openai.com/&#34;&gt;OpenAI&lt;/a&gt; for creating the ChatGPT API&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FlorianREGAZ&#34;&gt;FlorianREGAZ&lt;/a&gt; for the TLS Client&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>