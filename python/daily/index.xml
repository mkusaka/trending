<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-20T01:34:50Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cyclotruc/gitingest</title>
    <updated>2025-04-20T01:34:50Z</updated>
    <id>tag:github.com,2025-04-20:/cyclotruc/gitingest</id>
    <link href="https://github.com/cyclotruc/gitingest" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Replace &#39;hub&#39; with &#39;ingest&#39; in any github url to get a prompt-friendly extract of a codebase&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gitingest&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitingest.com&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cyclotruc/gitingest/main/docs/frontpage.png&#34; alt=&#34;Image&#34; title=&#34;Gitingest main page&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cyclotruc/gitingest/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/py/gitingest&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/gitingest.svg?sanitize=true&#34; alt=&#34;PyPI version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cyclotruc/gitingest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/cyclotruc/gitingest?style=social.svg?sanitize=true&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pepy.tech/project/gitingest&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/gitingest&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.com/invite/zerRaGK9EC&#34;&gt;&lt;img src=&#34;https://dcbadge.limes.pink/api/server/https://discord.com/invite/zerRaGK9EC&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Turn any Git repository into a prompt-friendly text ingest for LLMs.&lt;/p&gt; &#xA;&lt;p&gt;You can also replace &lt;code&gt;hub&lt;/code&gt; with &lt;code&gt;ingest&lt;/code&gt; in any GitHub URL to access the corresponding digest.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitingest.com&#34;&gt;gitingest.com&lt;/a&gt; ¬∑ &lt;a href=&#34;https://chromewebstore.google.com/detail/adfjahbijlkjfoicpjkhjicpjpjfaood&#34;&gt;Chrome Extension&lt;/a&gt; ¬∑ &lt;a href=&#34;https://addons.mozilla.org/firefox/addon/gitingest&#34;&gt;Firefox Add-on&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üöÄ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy code context&lt;/strong&gt;: Get a text digest from a Git repository URL or a directory&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Smart Formatting&lt;/strong&gt;: Optimized output format for LLM prompts&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Statistics about&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;File and directory structure&lt;/li&gt; &#xA;   &lt;li&gt;Size of the extract&lt;/li&gt; &#xA;   &lt;li&gt;Token count&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CLI tool&lt;/strong&gt;: Run it as a shell command&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Python package&lt;/strong&gt;: Import it in your code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìö Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.7+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üì¶ Installation&lt;/h3&gt; &#xA;&lt;p&gt;Gitingest is available on &lt;a href=&#34;https://pypi.org/project/gitingest/&#34;&gt;PyPI&lt;/a&gt;. You can install it using &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install gitingest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;However, it might be a good idea to use &lt;code&gt;pipx&lt;/code&gt; to install it. You can install &lt;code&gt;pipx&lt;/code&gt; using your preferred package manager.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install pipx&#xA;apt install pipx&#xA;scoop install pipx&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using pipx for the first time, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pipx ensurepath&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# install gitingest&#xA;pipx install gitingest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üß© Browser Extension Usage&lt;/h2&gt; &#xA;&lt;!-- markdownlint-disable MD033 --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chromewebstore.google.com/detail/adfjahbijlkjfoicpjkhjicpjpjfaood&#34; target=&#34;_blank&#34; title=&#34;Get Gitingest Extension from Chrome Web Store&#34;&gt;&lt;img height=&#34;48&#34; src=&#34;https://github.com/user-attachments/assets/20a6e44b-fd46-4e6c-8ea6-aad436035753&#34; alt=&#34;Available in the Chrome Web Store&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://addons.mozilla.org/firefox/addon/gitingest&#34; target=&#34;_blank&#34; title=&#34;Get Gitingest Extension from Firefox Add-ons&#34;&gt;&lt;img height=&#34;48&#34; src=&#34;https://github.com/user-attachments/assets/c0e99e6b-97cf-4af2-9737-099db7d3538b&#34; alt=&#34;Get The Add-on for Firefox&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://microsoftedge.microsoft.com/addons/detail/nfobhllgcekbmpifkjlopfdfdmljmipf&#34; target=&#34;_blank&#34; title=&#34;Get Gitingest Extension from Microsoft Edge Add-ons&#34;&gt;&lt;img height=&#34;48&#34; src=&#34;https://github.com/user-attachments/assets/204157eb-4cae-4c0e-b2cb-db514419fd9e&#34; alt=&#34;Get from the Edge Add-ons&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- markdownlint-enable MD033 --&gt; &#xA;&lt;p&gt;The extension is open source at &lt;a href=&#34;https://github.com/lcandy2/gitingest-extension&#34;&gt;lcandy2/gitingest-extension&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Issues and feature requests are welcome to the repo.&lt;/p&gt; &#xA;&lt;h2&gt;üí° Command line usage&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;gitingest&lt;/code&gt; command line tool allows you to analyze codebases and create a text dump of their contents.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Basic usage&#xA;gitingest /path/to/directory&#xA;&#xA;# From URL&#xA;gitingest https://github.com/cyclotruc/gitingest&#xA;&#xA;# See more options&#xA;gitingest --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will write the digest in a text file (default &lt;code&gt;digest.txt&lt;/code&gt;) in your current working directory.&lt;/p&gt; &#xA;&lt;h2&gt;üêç Python package usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Synchronous usage&#xA;from gitingest import ingest&#xA;&#xA;summary, tree, content = ingest(&#34;path/to/directory&#34;)&#xA;&#xA;# or from URL&#xA;summary, tree, content = ingest(&#34;https://github.com/cyclotruc/gitingest&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, this won&#39;t write a file but can be enabled with the &lt;code&gt;output&lt;/code&gt; argument.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Asynchronous usage&#xA;from gitingest import ingest_async&#xA;import asyncio&#xA;&#xA;result = asyncio.run(ingest_async(&#34;path/to/directory&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Jupyter notebook usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from gitingest import ingest_async&#xA;&#xA;# Use await directly in Jupyter&#xA;summary, tree, content = await ingest_async(&#34;path/to/directory&#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is because Jupyter notebooks are asynchronous by default.&lt;/p&gt; &#xA;&lt;h2&gt;üê≥ Self-host&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the image:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t gitingest .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the container:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --name gitingest -p 8000:8000 gitingest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The application will be available at &lt;code&gt;http://localhost:8000&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are hosting it on a domain, you can specify the allowed hostnames via env variable &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Default: &#34;gitingest.com, *.gitingest.com, localhost, 127.0.0.1&#34;.&#xA;ALLOWED_HOSTS=&#34;example.com, localhost, 127.0.0.1&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; &#xA;&lt;h3&gt;Non-technical ways to contribute&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Create an Issue&lt;/strong&gt;: If you find a bug or have an idea for a new feature, please &lt;a href=&#34;https://github.com/cyclotruc/gitingest/issues/new&#34;&gt;create an issue&lt;/a&gt; on GitHub. This will help us track and prioritize your request.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Spread the Word&lt;/strong&gt;: If you like Gitingest, please share it with your friends, colleagues, and on social media. This will help us grow the community and make Gitingest even better.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use Gitingest&lt;/strong&gt;: The best feedback comes from real-world usage! If you encounter any issues or have ideas for improvement, please let us know by &lt;a href=&#34;https://github.com/cyclotruc/gitingest/issues/new&#34;&gt;creating an issue&lt;/a&gt; on GitHub or by reaching out to us on &lt;a href=&#34;https://discord.com/invite/zerRaGK9EC&#34;&gt;Discord&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Technical ways to contribute&lt;/h3&gt; &#xA;&lt;p&gt;Gitingest aims to be friendly for first time contributors, with a simple Python and HTML codebase. If you need any help while working with the code, reach out to us on &lt;a href=&#34;https://discord.com/invite/zerRaGK9EC&#34;&gt;Discord&lt;/a&gt;. For detailed instructions on how to make a pull request, see &lt;a href=&#34;https://raw.githubusercontent.com/cyclotruc/gitingest/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üõ†Ô∏è Stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com&#34;&gt;Tailwind CSS&lt;/a&gt; - Frontend&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fastapi/fastapi&#34;&gt;FastAPI&lt;/a&gt; - Backend framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jinja.palletsprojects.com&#34;&gt;Jinja2&lt;/a&gt; - HTML templating&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openai/tiktoken&#34;&gt;tiktoken&lt;/a&gt; - Token estimation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PostHog/posthog&#34;&gt;posthog&lt;/a&gt; - Amazing analytics&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Looking for a JavaScript/FileSystemNode package?&lt;/h3&gt; &#xA;&lt;p&gt;Check out the NPM alternative üì¶ Repomix: &lt;a href=&#34;https://github.com/yamadashy/repomix&#34;&gt;https://github.com/yamadashy/repomix&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üöÄ Project Growth&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#cyclotruc/gitingest&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=cyclotruc/gitingest&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kijai/ComfyUI-KJNodes</title>
    <updated>2025-04-20T01:34:50Z</updated>
    <id>tag:github.com,2025-04-20:/kijai/ComfyUI-KJNodes</id>
    <link href="https://github.com/kijai/ComfyUI-KJNodes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Various custom nodes for ComfyUI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;KJNodes for ComfyUI&lt;/h1&gt; &#xA;&lt;p&gt;Various quality of life and masking related -nodes and scripts made by combining functionality of existing nodes for ComfyUI.&lt;/p&gt; &#xA;&lt;p&gt;I know I&#39;m bad at documentation, especially this project that has grown from random practice nodes to... too many lines in one file. I have however started to add descriptions to the nodes themselves, there&#39;s a small ? you can click for info what the node does. This is still work in progress, like everything else.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repo into &lt;code&gt;custom_nodes&lt;/code&gt; folder.&lt;/li&gt; &#xA; &lt;li&gt;Install dependencies: &lt;code&gt;pip install -r requirements.txt&lt;/code&gt; or if you use the portable install, run this in ComfyUI_windows_portable -folder:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;python_embeded\python.exe -m pip install -r ComfyUI\custom_nodes\ComfyUI-KJNodes\requirements.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Javascript&lt;/h2&gt; &#xA;&lt;h3&gt;browserstatus.js&lt;/h3&gt; &#xA;&lt;p&gt;Sets the favicon to green circle when not processing anything, sets it to red when processing and shows progress percentage and the length of your queue. Default off, needs to be enabled from options, overrides Custom-Scripts favicon when enabled.&lt;/p&gt; &#xA;&lt;h2&gt;Nodes:&lt;/h2&gt; &#xA;&lt;h3&gt;Set/Get&lt;/h3&gt; &#xA;&lt;p&gt;Javascript nodes to set and get constants to reduce unnecessary lines. Takes in and returns anything, purely visual nodes. On the right click menu of these nodes there&#39;s now an options to visualize the paths, as well as option to jump to the corresponding node on the other end.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Known limitations&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Will not work with any node that dynamically sets it&#39;s outpute, such as reroute or other Set/Get node&lt;/li&gt; &#xA; &lt;li&gt;Will not work when directly connected to a bypassed node&lt;/li&gt; &#xA; &lt;li&gt;Other possible conflicts with javascript based nodes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ColorToMask&lt;/h3&gt; &#xA;&lt;p&gt;RBG color value to mask, works with batches and AnimateDiff.&lt;/p&gt; &#xA;&lt;h3&gt;ConditioningMultiCombine&lt;/h3&gt; &#xA;&lt;p&gt;Combine any number of conditions, saves space.&lt;/p&gt; &#xA;&lt;h3&gt;ConditioningSetMaskAndCombine&lt;/h3&gt; &#xA;&lt;p&gt;Mask and combine two sets of conditions, saves space.&lt;/p&gt; &#xA;&lt;h3&gt;GrowMaskWithBlur&lt;/h3&gt; &#xA;&lt;p&gt;Grows or shrinks (with negative values) mask, option to invert input, returns mask and inverted mask. Additionally Blurs the mask, this is a slow operation especially with big batches.&lt;/p&gt; &#xA;&lt;h3&gt;RoundMask&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kijai/ComfyUI-KJNodes/assets/40791699/52c85202-f74e-4b96-9dac-c8bda5ddcc40&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;WidgetToString&lt;/h3&gt; &#xA;&lt;p&gt;Outputs the value of a widget on any node as a string &lt;img src=&#34;https://raw.githubusercontent.com/kijai/ComfyUI-KJNodes/main/docs/images/2024-04-03_20_49_29-ComfyUI.png&#34; alt=&#34;example of use&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Enable node id display from Manager menu, to get the ID of the node you want to read a widget from: &lt;img src=&#34;https://raw.githubusercontent.com/kijai/ComfyUI-KJNodes/main/docs/images/319121636-706b5081-9120-4a29-bd76-901691ada688.png&#34; alt=&#34;enable node id display&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use the node id of the target node, and add the name of the widget to read from &lt;img src=&#34;https://raw.githubusercontent.com/kijai/ComfyUI-KJNodes/main/docs/images/319121566-05f66385-7568-4b1f-8bbc-11053660b02f.png&#34; alt=&#34;use node id and widget name&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Recreating or reloading the target node will change its id, and the WidgetToString node will no longer be able to find it until you update the node id value with the new id.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>elastic/detection-rules</title>
    <updated>2025-04-20T01:34:50Z</updated>
    <id>tag:github.com,2025-04-20:/elastic/detection-rules</id>
    <link href="https://github.com/elastic/detection-rules" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.12+-yellow.svg?sanitize=true&#34; alt=&#34;Supported Python versions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/elastic/detection-rules/actions&#34;&gt;&lt;img src=&#34;https://github.com/elastic/detection-rules/workflows/Unit%20Tests/badge.svg?sanitize=true&#34; alt=&#34;Unit Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ela.st/slack&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-%23security--detection--rules-blueviolet&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ela.st/detection-rules-navigator-trade&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/ATT&amp;amp;CK-Navigator-red.svg?sanitize=true&#34; alt=&#34;ATT&amp;amp;CK navigator coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Detection Rules&lt;/h1&gt; &#xA;&lt;p&gt;Detection Rules is the home for rules used by Elastic Security. This repository is used for the development, maintenance, testing, validation, and release of rules for Elastic Security‚Äôs Detection Engine.&lt;/p&gt; &#xA;&lt;p&gt;This repository was first announced on Elastic&#39;s blog post, &lt;a href=&#34;https://elastic.co/blog/elastic-security-opens-public-detection-rules-repo&#34;&gt;Elastic Security opens public detection rules repo&lt;/a&gt;. For additional content, see the accompanying webinar, &lt;a href=&#34;https://www.elastic.co/webinars/introducing-the-public-repository-for-detection-rules&#34;&gt;Elastic Security: Introducing the public repository for detection rules&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/#detection-rules&#34;&gt;Detection Rules&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/#overview-of-this-repository&#34;&gt;Overview of this repository&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/#getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/#how-to-contribute&#34;&gt;How to contribute&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/#detections-as-code-dac&#34;&gt;Detections as Code (DaC)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/#rtas&#34;&gt;RTAs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/#licensing&#34;&gt;Licensing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/#questions-problems-suggestions&#34;&gt;Questions? Problems? Suggestions?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview of this repository&lt;/h2&gt; &#xA;&lt;p&gt;Detection Rules contains more than just static rule files. This repository also contains code for building Detections-as-code pipelines, unit testing in Python and integrating with the Detection Engine in Kibana.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;folder&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/detection_rules&#34;&gt;&lt;code&gt;detection_rules/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python module for rule parsing, validating and packaging&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/detection_rules/etc&#34;&gt;&lt;code&gt;etc/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Miscellaneous files, such as ECS and Beats schemas and configuration files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/hunting/&#34;&gt;&lt;code&gt;hunting/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root directory where threat hunting package and queries are stored&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/lib/kibana&#34;&gt;&lt;code&gt;kibana/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python library for handling the API calls to Kibana and the Detection Engine&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/lib/kql&#34;&gt;&lt;code&gt;kql/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python library for parsing and validating Kibana Query Language&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/rules&#34;&gt;&lt;code&gt;rules/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root directory where rules are stored&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/rules_building_block&#34;&gt;&lt;code&gt;rules_building_block/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root directory where building block rules are stored&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/tests&#34;&gt;&lt;code&gt;tests/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python code for unit testing rules&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Although rules can be added by manually creating &lt;code&gt;.toml&lt;/code&gt; files, we don&#39;t recommend it. This repository also consists of a python module that aids rule creation and unit testing. Assuming you have Python 3.12+, run the below command to install the dependencies using the makefile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;‚úó make&#xA;python3.12 -m pip install --upgrade pip setuptools&#xA;Looking in indexes: https://pypi.org/simple&#xA;Requirement already satisfied: pip in /opt/homebrew/lib/python3.12/site-packages (24.0)&#xA;Requirement already satisfied: setuptools in /opt/homebrew/lib/python3.12/site-packages (69.1.1)&#xA;python3.12 -m venv ./env/detection-rules-build&#xA;./env/detection-rules-build/bin/pip install --upgrade pip setuptools&#xA;Looking in indexes: https://pypi.org/simple&#xA;Requirement already satisfied: pip in ./env/detection-rules-build/lib/python3.12/site-packages (24.0)&#xA;Collecting setuptools&#xA;  Using cached setuptools-69.1.1-py3-none-any.whl.metadata (6.2 kB)&#xA;Using cached setuptools-69.1.1-py3-none-any.whl (819 kB)&#xA;Installing collected packages: setuptools&#xA;Successfully installed setuptools-69.1.1&#xA;Installing kql and kibana packages...&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or install the dependencies using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ pip3 install &#34;.[dev]&#34;&#xA;Collecting jsl==0.2.4&#xA;  Downloading jsl-0.2.4.tar.gz (21 kB)&#xA;Collecting jsonschema==3.2.0&#xA;  Downloading jsonschema-3.2.0-py2.py3-none-any.whl (56 kB)&#xA;     |‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 56 kB 318 kB/s&#xA;Collecting requests==2.22.0&#xA;  Downloading requests-2.22.0-py2.py3-none-any.whl (57 kB)&#xA;     |‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 57 kB 1.2 MB/s&#xA;Collecting Click==7.0&#xA;  Downloading Click-7.0-py2.py3-none-any.whl (81 kB)&#xA;     |‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 81 kB 2.6 MB/s&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: The &lt;code&gt;kibana&lt;/code&gt; and &lt;code&gt;kql&lt;/code&gt; packages are not available on PyPI and must be installed from the &lt;code&gt;lib&lt;/code&gt; directory. The &lt;code&gt;hunting&lt;/code&gt; package has optional dependencies to be installed with &lt;code&gt;pip3 install &#34;.[hunting]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&#xA;# Install from the repository&#xA;pip3 install git+https://github.com/elastic/detection-rules.git#subdirectory=kibana&#xA;pip3 install git+https://github.com/elastic/detection-rules.git#subdirectory=kql&#xA;&#xA;# Or locally for development&#xA;pip3 install lib/kibana lib/kql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Remember, make sure to activate your virtual environment if you are using one. If installed via &lt;code&gt;make&lt;/code&gt;, the associated virtual environment is created in &lt;code&gt;env/detection-rules-build/&lt;/code&gt;. If you are having trouble using a Python 3.12 environment, please see the relevant section in our &lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/Troubleshooting.md&#34;&gt;troubleshooting guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To confirm that everything was properly installed, run with the &lt;code&gt;--help&lt;/code&gt; flag&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$  python -m detection_rules --help&#xA;&#xA;Usage: detection_rules [OPTIONS] COMMAND [ARGS]...&#xA;&#xA;  Commands for detection-rules repository.&#xA;&#xA;Options:&#xA;  -d, --debug / -n, --no-debug  Print full exception stacktrace on errors&#xA;  -h, --help                    Show this message and exit.&#xA;&#xA;Commands:&#xA;  create-rule     Create a detection rule.&#xA;  dev             Commands for development and management by internal...&#xA;  es              Commands for integrating with Elasticsearch.&#xA;  import-rules    Import rules from json, toml, or Kibana exported rule...&#xA;  kibana          Commands for integrating with Kibana.&#xA;  mass-update     Update multiple rules based on eql results.&#xA;  normalize-data  Normalize Elasticsearch data timestamps and sort.&#xA;  rule-search     Use KQL or EQL to find matching rules.&#xA;  test            Run unit tests over all of the rules.&#xA;  toml-lint       Cleanup files with some simple toml formatting.&#xA;  validate-all    Check if all rules validates against a schema.&#xA;  validate-rule   Check if a rule staged in rules dir validates against a...&#xA;  view-rule       View an internal rule or specified rule file.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you are using a virtual environment, make sure to activate it before running the above command.&lt;/li&gt; &#xA; &lt;li&gt;If using Windows, you may have to also run &lt;code&gt;&amp;lt;venv_directory&amp;gt;\Scripts\pywin32_postinstall.py -install&lt;/code&gt; depending on your python version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; describes how to use the &lt;code&gt;create-rule&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; commands to create and test a new rule when contributing to Detection Rules.&lt;/p&gt; &#xA;&lt;p&gt;For more advanced command line interface (CLI) usage, refer to the &lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/CLI.md&#34;&gt;CLI guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;We welcome your contributions to Detection Rules! Before contributing, please familiarize yourself with this repository, its &lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/#overview-of-this-repository&#34;&gt;directory structure&lt;/a&gt;, and our &lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/PHILOSOPHY.md&#34;&gt;philosophy&lt;/a&gt; about rule creation. When you&#39;re ready to contribute, read the &lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; to learn how we turn detection ideas into production rules and validate with testing.&lt;/p&gt; &#xA;&lt;h2&gt;Detections as Code (DaC)&lt;/h2&gt; &#xA;&lt;p&gt;The Detection Rules repo includes a number of commands to help one manage rules with an &#34;as code&#34; philosophy. We recommend starting with our &lt;a href=&#34;https://dac-reference.readthedocs.io/en/latest/&#34;&gt;DaC Specific Documentation&lt;/a&gt; for strategies and recommended setup information. However, if you would prefer to jump right in, please see our local &lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/docs-dev/detections-as-code.md&#34;&gt;detections as code documentation&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/docs-dev/custom-rules-management.md&#34;&gt;custom rules documentation&lt;/a&gt; for information on how to configure this repo for use with custom rules followed by our &lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/CLI.md&#34;&gt;CLI documentation&lt;/a&gt; for information on our commands to import and export rules.&lt;/p&gt; &#xA;&lt;h2&gt;RTAs&lt;/h2&gt; &#xA;&lt;p&gt;Red Team Automations (RTAs) used to emulate attacker techniques and verify the rules can be found in dedicated repository - &lt;a href=&#34;https://github.com/elastic/cortado&#34;&gt;Cortado&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;Everything in this repository ‚Äî rules, code, etc. ‚Äî is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/LICENSE.txt&#34;&gt;Elastic License v2&lt;/a&gt;. These rules are designed to be used in the context of the Detection Engine within the Elastic Security application. If you‚Äôre using our &lt;a href=&#34;https://www.elastic.co/cloud/&#34;&gt;Elastic Cloud managed service&lt;/a&gt; or the default distribution of the Elastic Stack software that includes the &lt;a href=&#34;https://www.elastic.co/subscriptions&#34;&gt;full set of free features&lt;/a&gt;, you‚Äôll get the latest rules the first time you navigate to the detection engine.&lt;/p&gt; &#xA;&lt;p&gt;Occasionally, we may want to import rules from another repository that already have a license, such as MIT or Apache 2.0. This is welcome, as long as the license permits sublicensing under the Elastic License v2. We keep those license notices in &lt;code&gt;NOTICE.txt&lt;/code&gt; and sublicense as the Elastic License v2 with all other rules. We also require contributors to sign a &lt;a href=&#34;https://www.elastic.co/contributor-agreement&#34;&gt;Contributor License Agreement&lt;/a&gt; before contributing code to any Elastic repositories.&lt;/p&gt; &#xA;&lt;h2&gt;Questions? Problems? Suggestions?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Want to know more about the Detection Engine? Check out the &lt;a href=&#34;https://www.elastic.co/guide/en/security/current/detection-engine-overview.html&#34;&gt;overview&lt;/a&gt; in Kibana.&lt;/li&gt; &#xA; &lt;li&gt;This repository includes new and updated rules that have not been released yet. To see the latest set of rules released with the stack, see the &lt;a href=&#34;https://www.elastic.co/guide/en/security/current/prebuilt-rules-downloadable-updates.html&#34;&gt;Prebuilt rule reference&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you‚Äôd like to report a false positive or other type of bug, please create a GitHub issue and check if there&#39;s an existing one first.&lt;/li&gt; &#xA; &lt;li&gt;Need help with Detection Rules? Post an issue or ask away in our &lt;a href=&#34;https://discuss.elastic.co/c/security/&#34;&gt;Security Discuss Forum&lt;/a&gt; or the &lt;strong&gt;#security-detection-rules&lt;/strong&gt; channel within &lt;a href=&#34;https://www.elastic.co/blog/join-our-elastic-stack-workspace-on-slack&#34;&gt;Slack workspace&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For DaC specific cases, pleases see our &lt;a href=&#34;https://raw.githubusercontent.com/elastic/detection-rules/main/docs-dev/detections-as-code.md#support-and-scope&#34;&gt;support and scope documentation&lt;/a&gt; for more information.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>