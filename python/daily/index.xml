<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-08T01:34:05Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>laluka/bypass-url-parser</title>
    <updated>2022-07-08T01:34:05Z</updated>
    <id>tag:github.com,2022-07-08:/laluka/bypass-url-parser</id>
    <link href="https://github.com/laluka/bypass-url-parser" rel="alternate"></link>
    <summary type="html">&lt;p&gt;bypass-url-parser&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bypass Url Parser&lt;/h1&gt; &#xA;&lt;p&gt;Tool that tests &lt;code&gt;MANY&lt;/code&gt; url bypasses to reach a &lt;code&gt;40X protected page&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you wonder why this code is &lt;code&gt;nothing but a dirty curl wrapper&lt;/code&gt;, here&#39;s why:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Most of the python requests do url/path/parameter encoding/decoding, and I hate this.&lt;/li&gt; &#xA; &lt;li&gt;If I submit raw chars, I want raw chars to be sent.&lt;/li&gt; &#xA; &lt;li&gt;If I send a weird path, I want it weird, not normalized.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This is &lt;code&gt;surprisingly hard&lt;/code&gt; to achieve in python without loosing all of the lib goodies like parsing, ssl/tls encapsulation and so on. &lt;br&gt; So, be like me, use &lt;code&gt;curl as a backend&lt;/code&gt;, it&#39;s gonna be just fine.&lt;/p&gt; &#xA;&lt;h2&gt;Setup for bypass.py&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Deps&#xA;sudo apt install -y bat curl virtualenv python3&#xA;# Tool&#xA;virtualenv -p python3 .py3&#xA;source .py3/bin/activate&#xA;pip install -r requirements.txt&#xA;./bypass-url-parser.py --url &#34;http://127.0.0.1/juicy_403_endpoint/&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Bypass Url Parser, made with love by @TheLaluka&#xA;A tool that tests MANY url bypasses to reach a 40X protected page.&#xA;&#xA;Usage:&#xA;    ./bypass-url-parser.py --url=&amp;lt;URL&amp;gt; [--outdir=&amp;lt;OUTDIR&amp;gt;] [--threads=&amp;lt;threads&amp;gt;] [--timeout=&amp;lt;timeout&amp;gt;] [(--header=&amp;lt;header&amp;gt;)...] [--spoofip=&amp;lt;ip&amp;gt;] [--debug]&#xA;    ./bypass-url-parser.py (-h | --help)&#xA;    ./bypass-url-parser.py (-v | --version)&#xA;&#xA;Options:&#xA;    -h --help            Show help, you are here :)&#xA;    -v --version         Show version info.&#xA;    --url=&amp;lt;URL&amp;gt;          URL (path is optional) to run bypasses against.&#xA;    --outdir=&amp;lt;outdir&amp;gt;    Output directory for results.&#xA;    --timeout=&amp;lt;timeout&amp;gt;  Request times out after N seconds [Default: 3].&#xA;    --threads=&amp;lt;threads&amp;gt;  Scan with N parallel threads [Default: 1].&#xA;    --header=&amp;lt;header&amp;gt;    Header(s) to use, format: &#34;Cookie: can_i_haz=fire&#34;.&#xA;    --spoofip=&amp;lt;ip&amp;gt;       IP to inject in ip-specific headers.&#xA;    --debug              Enable debugging output, to... Tou know... Debug.&#xA;&#xA;Example:&#xA;    ./bypass-url-parser.py --url &#34;http://127.0.0.1/juicy_403_endpoint/&#34; --spoofip 8.8.8.8 --debug&#xA;    ./bypass-url-parser.py --url &#34;http://127.0.0.1/juicy_403_endpoint/&#34; --threads 30 --timeout 5 --header &#34;Cookie: me_iz=damin&#34; --header &#34;Waf: bypazzzzz&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Expected result&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;2022-05-10 15:54:03 work bup[738125] INFO === Config ===&#xA;2022-05-10 15:54:03 work bup[738125] INFO debug: False&#xA;2022-05-10 15:54:03 work bup[738125] INFO url: http://thinkloveshare.com/api/jolokia/list&#xA;2022-05-10 15:54:03 work bup[738125] INFO outdir: /tmp/tmp48drf_ie-bypass-url-parser&#xA;2022-05-10 15:54:03 work bup[738125] INFO threads: 20&#xA;2022-05-10 15:54:03 work bup[738125] INFO timeout: 2&#xA;2022-05-10 15:54:03 work bup[738125] INFO headers: {}&#xA;2022-05-10 15:54:03 work bup[738125] WARNING Stage: generate_curls&#xA;2022-05-10 15:54:03 work bup[738125] INFO base_url: http://thinkloveshare.com&#xA;2022-05-10 15:54:03 work bup[738125] INFO base_path: /api/jolokia/list&#xA;2022-05-10 15:54:03 work bup[738125] WARNING Stage: run_curls&#xA;2022-05-10 15:54:03 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com/api/jolokia/list&#39;&#xA;2022-05-10 15:54:03 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; -X &#39;CONNECT&#39; &#39;http://thinkloveshare.com/api/jolokia/list&#39;&#xA;2022-05-10 15:54:03 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; -X &#39;GET&#39; &#39;http://thinkloveshare.com/api/jolokia/list&#39;&#xA;2022-05-10 15:54:03 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; -X &#39;LOCK&#39; &#39;http://thinkloveshare.com/api/jolokia/list&#39;&#xA;2022-05-10 15:54:03 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; -X &#39;OPTIONS&#39; &#39;http://thinkloveshare.com/api/jolokia/list&#39;&#xA;2022-05-10 15:54:03 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; -X &#39;PATCH&#39; &#39;http://thinkloveshare.com/api/jolokia/list&#39;&#xA;2022-05-10 15:54:03 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; -X &#39;POST&#39; &#39;http://thinkloveshare.com/api/jolokia/list&#39;&#xA;2022-05-10 15:54:03 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; -X &#39;POUET&#39; &#39;http://thinkloveshare.com/api/jolokia/list&#39;&#xA;2022-05-10 15:54:03 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; -X &#39;PUT&#39; &#39;http://thinkloveshare.com/api/jolokia/list&#39;&#xA;2022-05-10 15:54:03 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; -X &#39;TRACE&#39; &#39;http://thinkloveshare.com/api/jolokia/list&#39;&#xA;2022-05-10 15:54:03 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; -X &#39;TRACK&#39; &#39;http://thinkloveshare.com/api/jolokia/list&#39;&#xA;2022-05-10 15:54:03 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; -X &#39;UPDATE&#39; &#39;http://thinkloveshare.com/api/jolokia/list&#39;&#xA;2022-05-10 15:54:03 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; -H &#39;Access-Control-Allow-Origin: 0.0.0.0&#39; &#39;http://thinkloveshare.com/api/jolokia/list&#39;&#xA;2022-05-10 15:54:03 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; -H &#39;Access-Control-Allow-Origin: 127.0.0.1&#39; &#39;http://thinkloveshare.com/api/jolokia/list&#39;&#xA;2022-05-10 15:54:03 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; -H &#39;Access-Control-Allow-Origin: localhost&#39; &#39;http://thinkloveshare.com/api/jolokia/list&#39;&#xA;2022-05-10 15:54:03 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; -H &#39;Access-Control-Allow-Origin: norealhost&#39; &#39;http://thinkloveshare.com/api/jolokia/list&#39;&#xA;[...]&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%252f%252f//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%26//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%2e//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%2e%2e//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%2e%2e///list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%2e%2e%2f//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%2f//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%2f///list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%2f%20%23//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%2f%23//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%2f%2f//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%2f%3b%2f//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%2f%3b%2f%2f//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%2f%3f//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%2f%3f///list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%3b//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%3b/..//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%3b//%2f..///list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%3b/%2e.//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%3b/%2e%2e/..%2f%2f//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%3b/%2f%2f..///list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%3b%09//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%3b%2f..//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%3b%2f%2e.//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%3b%2f%2e%2e//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%3b%2f%2e%2e%2f%2e%2e%2f%2f//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%3f//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%3f%23//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] INFO Current: curl -sS -kgi --path-as-is -H &#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36&#39; -w &#39;\nStatus: %{http_code}, Length: %{size_download}&#39; &#39;http://thinkloveshare.com//api/jolokia//%3f%3f//list&#39;&#xA;2022-05-10 15:54:09 work bup[738125] WARNING Stage: save_and_quit&#xA;2022-05-10 15:54:10 work bup[738125] INFO Saving html pages and short output in: /tmp/tmp48drf_ie-bypass-url-parser&#xA;2022-05-10 15:54:10 work bup[738125] INFO Triaged results shows the following distinct pages:&#xA;    9:   41 - 850a2bd214c68f582aaac1c84c702b5d.html&#xA;   10:   97 - 219145da181c48fea603aab3097d8201.html&#xA;   10:   99 - 309b8397d07f618ec07541c418979a84.html&#xA;   10:  100 - 9a1304f66bfee2130b34258635d50171.html&#xA;   10:  108 - b61052875693afa4b86d39321d4170b4.html&#xA;   10:  109 - 6fb5c59f5c29d23e407d6f041523a2bb.html&#xA;   11:  101 - 045d36e3cfba7f6cbb7e657fc6cf1125.html&#xA;   12:43116 - 9787a734c56b37f7bf5d78aaee43c55d.html&#xA;   16:   41 - c5663aedf1036c950a5d83bd83c8e4e7.html&#xA;   21:  156 - 7857d3d4a9bc8bf69278bf43c4918909.html&#xA;   22:  107 - 011ca570bdf2e5babcf4f99c4cd84126.html&#xA;   22:  109 - 6d4b61258386f744a388d402a5f11d03.html&#xA;   22:  110 - 2f26cd3ba49e023dbda4453e5fd89431.html&#xA;   76:  821 - bfe5f92861f949e44b355ee22574194a.html&#xA;2022-05-10 15:54:10 work bup[738125] INFO Also, inspect them manually with batcat:&#xA;echo /tmp/tmp48drf_ie-bypass-url-parser/{850a2bd214c68f582aaac1c84c702b5d.html,219145da181c48fea603aab3097d8201.html,309b8397d07f618ec07541c418979a84.html,9a1304f66bfee2130b34258635d50171.html,b61052875693afa4b86d39321d4170b4.html,6fb5c59f5c29d23e407d6f041523a2bb.html,045d36e3cfba7f6cbb7e657fc6cf1125.html,9787a734c56b37f7bf5d78aaee43c55d.html,c5663aedf1036c950a5d83bd83c8e4e7.html,7857d3d4a9bc8bf69278bf43c4918909.html,011ca570bdf2e5babcf4f99c4cd84126.html,6d4b61258386f744a388d402a5f11d03.html,2f26cd3ba49e023dbda4453e5fd89431.html,bfe5f92861f949e44b355ee22574194a.html} | xargs bat&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>secretflow/secretflow</title>
    <updated>2022-07-08T01:34:05Z</updated>
    <id>tag:github.com,2022-07-08:/secretflow/secretflow</id>
    <link href="https://github.com/secretflow/secretflow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A unified framework for privacy-preserving data analysis and machine learning&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/secretflow/secretflow/beta/docs/_static/logo.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;SecretFlow is a unified framework for privacy-preserving data intelligence and machine learning. To achieve this goal, it provides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An abstract device layer consists of plain devices and secret devices which encapsulate various cryptographic protocols.&lt;/li&gt; &#xA; &lt;li&gt;A device flow layer modeling higher algorithms as device object flow and DAG.&lt;/li&gt; &#xA; &lt;li&gt;An algorithm layer to do data analysis and machine learning with horizontal or vertical partitioned data.&lt;/li&gt; &#xA; &lt;li&gt;A workflow layer that seamlessly integrates data processing, model training, and hyperparameter tuning.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/secretflow/secretflow/beta/docs/_static/secretflow_arch.svg?sanitize=true&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;For users who want to try SecretFlow, you can install the current release from &lt;a href=&#34;https://pypi.org/&#34;&gt;pypi&lt;/a&gt;. Note that it requires python version == 3.8, you can create a virtual environment with conda if not satisfied.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install -U secretflow&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Try you first SecretFlow program&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; import secretflow as sf&#xA;&amp;gt;&amp;gt;&amp;gt; sf.init([&#39;alice&#39;, &#39;bob&#39;, &#39;carol&#39;], num_cpus=8, log_to_driver=True)&#xA;&amp;gt;&amp;gt;&amp;gt; dev = sf.PYU(&#39;alice&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; import numpy as np&#xA;&amp;gt;&amp;gt;&amp;gt; data = dev(np.random.rand)(3, 4)&#xA;&amp;gt;&amp;gt;&amp;gt; data&#xA;&amp;lt;secretflow.device.device.pyu.PYUObject object at 0x7fdec24a15b0&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://secretflow.readthedocs.io/en/latest/getting_started/index.html&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://secretflow.readthedocs.io/en/latest/tutorial/index.html&#34;&gt;Tutorials help you to understand and use secretflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://secretflow.readthedocs.io/en/latest/reference/index.html&#34;&gt;The api reference&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/secretflow/secretflow/beta/docs/getting_started/deployment.md&#34;&gt;Standalone or Cluster Mode&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution guide&lt;/h2&gt; &#xA;&lt;p&gt;For developers who want to contribute to SecretFlow, you can set up an environment with the following instruction.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/secretflow/secretflow.git&#xA;&#xA;# optional&#xA;git lfs install&#xA;&#xA;conda create -n secretflow python=3.8&#xA;conda activate secretflow&#xA;pip install -r dev-requirements.txt -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Coding Style&lt;/h3&gt; &#xA;&lt;p&gt;We prefer &lt;a href=&#34;https://github.com/psf/black&#34;&gt;black&lt;/a&gt; as our code formatter. For various editor users, please refer to &lt;a href=&#34;https://black.readthedocs.io/en/stable/integrations/editors.html&#34;&gt;editor integration&lt;/a&gt;. Pass &lt;code&gt;-S, --skip-string-normalization&lt;/code&gt; to &lt;a href=&#34;https://github.com/psf/black&#34;&gt;black&lt;/a&gt; to avoid string quotes or prefixes normalization.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Non-release versions of SecretFlow are prohibited to use in any production environment due to possible bugs, glitches, lack of functionality, security issues or other problems.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>geohot/tinygrad</title>
    <updated>2022-07-08T01:34:05Z</updated>
    <id>tag:github.com,2022-07-08:/geohot/tinygrad</id>
    <link href="https://github.com/geohot/tinygrad" rel="alternate"></link>
    <summary type="html">&lt;p&gt;You like pytorch? You like micrograd? You love tinygrad! ❤️&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/geohot/tinygrad/master/docs/logo.png&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/geohot/tinygrad/workflows/Unit%20Tests/badge.svg?sanitize=true&#34; alt=&#34;Unit Tests&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For something in between a &lt;a href=&#34;https://github.com/pytorch/pytorch&#34;&gt;pytorch&lt;/a&gt; and a &lt;a href=&#34;https://github.com/karpathy/micrograd&#34;&gt;karpathy/micrograd&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This may not be the best deep learning framework, but it is a deep learning framework.&lt;/p&gt; &#xA;&lt;p&gt;The sub 1000 line core of it is in &lt;code&gt;tinygrad/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Due to its extreme simplicity, it aims to be the easiest framework to add new accelerators to, with support for both inference and training. Support the simple basic ops, and you get SOTA &lt;a href=&#34;https://arxiv.org/abs/1905.11946&#34;&gt;vision&lt;/a&gt; &lt;code&gt;models/efficientnet.py&lt;/code&gt; and &lt;a href=&#34;https://arxiv.org/abs/1706.03762&#34;&gt;language&lt;/a&gt; &lt;code&gt;models/transformer.py&lt;/code&gt; models.&lt;/p&gt; &#xA;&lt;p&gt;We are working on support for the Apple Neural Engine and the Google TPU in the &lt;code&gt;accel/&lt;/code&gt; folder. Eventually, &lt;a href=&#34;https://geohot.github.io/blog/jekyll/update/2021/06/13/a-breakdown-of-ai-chip-companies.html&#34;&gt;we will build custom hardware&lt;/a&gt; for tinygrad, and it will be blindingly fast. Now, it is slow.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/geohot/tinygrad.git&#xA;cd tinygrad&#xA;python3 setup.py develop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from tinygrad.tensor import Tensor&#xA;&#xA;x = Tensor.eye(3)&#xA;y = Tensor([[2.0,0,-2.0]])&#xA;z = y.matmul(x).sum()&#xA;z.backward()&#xA;&#xA;print(x.grad)  # dz/dx&#xA;print(y.grad)  # dz/dy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Same example in torch&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;&#xA;x = torch.eye(3, requires_grad=True)&#xA;y = torch.tensor([[2.0,0,-2.0]], requires_grad=True)&#xA;z = y.matmul(x).sum()&#xA;z.backward()&#xA;&#xA;print(x.grad)  # dz/dx&#xA;print(y.grad)  # dz/dy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Neural networks?&lt;/h2&gt; &#xA;&lt;p&gt;It turns out, a decent autograd tensor library is 90% of what you need for neural networks. Add an optimizer (SGD, RMSprop, and Adam implemented) from tinygrad.optim, write some boilerplate minibatching code, and you have all you need.&lt;/p&gt; &#xA;&lt;h3&gt;Neural network example (from test/test_mnist.py)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from tinygrad.tensor import Tensor&#xA;import tinygrad.optim as optim&#xA;&#xA;class TinyBobNet:&#xA;  def __init__(self):&#xA;    self.l1 = Tensor.uniform(784, 128)&#xA;    self.l2 = Tensor.uniform(128, 10)&#xA;&#xA;  def forward(self, x):&#xA;    return x.dot(self.l1).relu().dot(self.l2).logsoftmax()&#xA;&#xA;model = TinyBobNet()&#xA;optim = optim.SGD([model.l1, model.l2], lr=0.001)&#xA;&#xA;# ... and complete like pytorch, with (x,y) data&#xA;&#xA;out = model.forward(x)&#xA;loss = out.mul(y).mean()&#xA;optim.zero_grad()&#xA;loss.backward()&#xA;optim.step()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GPU and Accelerator Support&lt;/h2&gt; &#xA;&lt;p&gt;tinygrad supports GPUs through PyOpenCL.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from tinygrad.tensor import Tensor&#xA;(Tensor.ones(4,4).gpu() + Tensor.ones(4,4).gpu()).cpu()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;ANE Support?! (broken)&lt;/h3&gt; &#xA;&lt;p&gt;If all you want to do is ReLU, you are in luck! You can do very fast ReLU (at least 30 MEGAReLUs/sec confirmed)&lt;/p&gt; &#xA;&lt;p&gt;Requires your Python to be signed with &lt;code&gt;ane/lib/sign_python.sh&lt;/code&gt; to add the &lt;code&gt;com.apple.ane.iokit-user-access&lt;/code&gt; entitlement, which also requires &lt;code&gt;amfi_get_out_of_my_way=0x1&lt;/code&gt; in your &lt;code&gt;boot-args&lt;/code&gt;. Build the library with &lt;code&gt;ane/lib/build.sh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from tinygrad.tensor import Tensor&#xA;&#xA;a = Tensor([-2,-1,0,1,2]).ane()&#xA;b = a.relu()&#xA;print(b.cpu())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Warning: do not rely on the ANE port. It segfaults sometimes. So if you were doing something important with tinygrad and wanted to use the ANE, you might have a bad time.&lt;/p&gt; &#xA;&lt;h3&gt;hlops (in tensor.py)&lt;/h3&gt; &#xA;&lt;p&gt;hlops are syntactic sugar around mlops. They support most things torch does.&lt;/p&gt; &#xA;&lt;h3&gt;mlops&lt;/h3&gt; &#xA;&lt;p&gt;mlops are mid level ops, there&#39;s 15 of them. They understand memory allocation and derivatives&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Relu, Log, Exp                          # unary ops&#xA;Sum, Max                                # reduce ops (with axis argument)&#xA;Add, Sub, Mul, Pow                      # binary ops (no broadcasting, use expand)&#xA;Reshape, Permute, Slice, Expand, Flip   # movement ops&#xA;Conv2D(NCHW)                            # processing op (Matmul is also Conv2D)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You no longer need to write mlops for a new accelerator&lt;/p&gt; &#xA;&lt;h3&gt;Adding an accelerator (llops)&lt;/h3&gt; &#xA;&lt;p&gt;The autodiff stuff is all in mlops now so you can focus on the raw operations&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Buffer                                               # class of memory on this device&#xA;unary_op  (RELU, EXP, LOG, NEG, SIGN)                # A -&amp;gt; A&#xA;reduce_op (SUM, MAX)                                 # A -&amp;gt; B (smaller size, B has 1 in shape)&#xA;binary_op (ADD, SUB, MUL, DIV, POW, CMPEQ)           # A + B -&amp;gt; C (all the same size)&#xA;movement_op (RESHAPE, PERMUTE, SLICE, EXPAND, FLIP)  # A -&amp;gt; B (different size)&#xA;processing_op (CONV)                                 # A + B -&amp;gt; C&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When tinygrad moves to lazy evaluation, optimizations will happen here.&lt;/p&gt; &#xA;&lt;h2&gt;ImageNet inference&lt;/h2&gt; &#xA;&lt;p&gt;Despite being tiny, tinygrad supports the full EfficientNet. Pass in a picture to discover what it is.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ipython3 examples/efficientnet.py https://media.istockphoto.com/photos/hen-picture-id831791190&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, if you have a webcam and cv2 installed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ipython3 examples/efficientnet.py webcam&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;PROTIP: Set &#34;GPU=1&#34; environment variable if you want this to go faster.&lt;/p&gt; &#xA;&lt;p&gt;PROPROTIP: Set &#34;DEBUG=1&#34; environment variable if you want to see why it&#39;s slow.&lt;/p&gt; &#xA;&lt;h3&gt;tinygrad supports GANs&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;code&gt;examples/mnist_gan.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/geohot/tinygrad/master/docs/mnist_by_tinygrad.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;tinygrad supports yolo&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;code&gt;examples/yolov3.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/geohot/tinygrad/master/docs/yolo_by_tinygrad.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;The promise of small&lt;/h2&gt; &#xA;&lt;p&gt;tinygrad will always be below 1000 lines. If it isn&#39;t, we will revert commits until tinygrad becomes smaller.&lt;/p&gt; &#xA;&lt;h3&gt;Drawing Execution Graph&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nodes are Tensors&lt;/li&gt; &#xA; &lt;li&gt;Black edge is a forward pass&lt;/li&gt; &#xA; &lt;li&gt;Blue edge is a backward pass&lt;/li&gt; &#xA; &lt;li&gt;Red edge is data the backward pass depends on&lt;/li&gt; &#xA; &lt;li&gt;Purple edge is intermediates created in the forward&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;GRAPH=1 python3 test/test_mnist.py TestMNIST.test_sgd_onestep&#xA;# requires dot, outputs /tmp/net.svg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running tests&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m pytest&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>