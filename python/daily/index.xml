<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-02T01:38:24Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>LC044/WeChatMsg</title>
    <updated>2023-12-02T01:38:24Z</updated>
    <id>tag:github.com,2023-12-02:/LC044/WeChatMsg</id>
    <link href="https://github.com/LC044/WeChatMsg" rel="alternate"></link>
    <summary type="html">&lt;p&gt;提取微信聊天记录，将其导出成HTML、Word、CSV文档永久保存，对聊天记录进行分析生成年度聊天报告&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;我的数据我做主&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://img.shields.io/badge/WeChat-解密-blue.svg&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/LC044/WeChatMsg/stargazers&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/LC044/WeChatMsg.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/LC044/WeChatMsg/issues&#34;&gt; &lt;img alt=&#34;Issues&#34; src=&#34;https://img.shields.io/github/issues/LC044/WeChatMsg?color=0088ff&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/readme.md&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/文档-最新-brightgreen.svg&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/LC044/WeChatMsg&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/logo.png&#34; height=&#34;240&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🍉功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;破解📱手机微信数据库&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安卓 or 苹果都可以哦&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;破解💻PC端微信数据库&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;还原微信聊天界面&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🗨文本✅&lt;/li&gt; &#xA;   &lt;li&gt;🏝图片✅&lt;/li&gt; &#xA;   &lt;li&gt;🐻‍❄️表情包✅&lt;/li&gt; &#xA;   &lt;li&gt;语音❎&lt;/li&gt; &#xA;   &lt;li&gt;视频❎&lt;/li&gt; &#xA;   &lt;li&gt;文件❎&lt;/li&gt; &#xA;   &lt;li&gt;回复❎&lt;/li&gt; &#xA;   &lt;li&gt;拍一拍❎&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;导出聊天记录&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;HTML(文本、图片)✅&lt;/li&gt; &#xA;   &lt;li&gt;Word文档✅&lt;/li&gt; &#xA;   &lt;li&gt;CSV文档✅&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;分析聊天数据，做成可视化年报&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🔥&lt;strong&gt;项目持续更新中&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;导出全部表情包❎&lt;/li&gt; &#xA;   &lt;li&gt;合并多个备份数据❎&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;小伙伴们想要其他功能可以留言哦📬&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;有任何问题可以随时联系我(&lt;a href=&#34;mailto:863909694@qq.com&#34;&gt;863909694@qq.com&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;为了方便大家交流，我新建了一个QQ群💬：&lt;strong&gt;474379264&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;大家有任何想法💡、建议或bug可以群里反馈给我&lt;/p&gt; &#xA;&lt;h2&gt;🥤效果&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;img alt=&#34;聊天界面&#34; src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/chat_.png&#34;&gt; &#xA; &lt;img alt=&#34;image-20230520235113261&#34; src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230520235113261.png&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230520235220104.png&#34; alt=&#34;image-20230520235220104&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230520235338305.png&#34; alt=&#34;image-20230520235338305&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230520235351749.png&#34; alt=&#34;image-20230520235351749&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230520235400772.png&#34; alt=&#34;image-20230520235400772&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230520235409112.png&#34; alt=&#34;image-20230520235409112&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230520235422128.png&#34; alt=&#34;image-20230520235422128&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230520235431091.png&#34; alt=&#34;image-20230520235431091&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;⌛使用&lt;/h1&gt; &#xA;&lt;p&gt;小白可以先点个star⭐(💘项目不断更新中),然后去旁边&lt;a href=&#34;https://github.com/LC044/WeChatMsg/releases/tag/v0.2.4&#34;&gt;Release&lt;/a&gt; 下载打包好的exe可执行文件，双击即可运行&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;⚠️注意：若出现闪退情况请右击选择用管理员身份运行exe程序，该程序不存在任何病毒，若杀毒软件提示有风险选择略过即可&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;解密PC版微信数据库&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;h3&gt;1. 安装&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Python&amp;gt;=3.10&#xA;git clone https://github.com/LC044/WeChatMsg&#xA;cd WeChatMsg&#xA;pip install -r requirements_pc.txt -i https://pypi.tuna.tsinghua.edu.cn/simple&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;2. 使用&lt;/h3&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;登录微信&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;运行程序&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python main_pc.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;点击获取信息&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/pc_decrypt_info.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;设置微信安装路径(如果自动设置好了就不用管了) 可以到微信-&amp;gt;设置-&amp;gt;文件管理查看 &lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/setting.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;p&gt;点击&lt;strong&gt;设置微信路径&lt;/strong&gt;按钮，选择该文件夹路径下的带有wxid_xxx的路径(没有wxid的话先选择其中一个文件夹不对的话换其他文件夹) &lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/path_select.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;获取到密钥和微信路径之后点击开始解密&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;解密后的数据库文件保存在./app/DataBase/Msg路径下&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;h3&gt;3. 查看&lt;/h3&gt; &#xA; &lt;p&gt;随便下载一个SQLite数据库查看软件就能打开数据库，例如&lt;a href=&#34;https://sqlitebrowser.org/dl/&#34;&gt;DB Browser for SQLite&lt;/a&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%8B%E7%BB%8D.md&#34;&gt;数据库功能介绍&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/%E7%94%B5%E8%84%91%E7%AB%AF%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.md&#34;&gt;更多功能介绍&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;显示效果 &lt;img alt=&#34;聊天界面&#34; src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/chat_.png&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;使用模拟器（支持可视化分析）&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;p&gt;&lt;strong&gt;不推荐使用，PC端微信可视化功能马上实现&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;根据&lt;a href=&#34;https://blog.csdn.net/m0_59452630/article/details/124222235?spm=1001.2014.3001.5501&#34;&gt;教程&lt;/a&gt;获得两个文件 &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;auth_info_key_prefs.xml——解析数据库密码&lt;/li&gt; &#xA;    &lt;li&gt;EnMicroMsg.db——聊天数据库&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;上面这两个文件就可以&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;安装依赖库&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;python版本&amp;gt;=3.10&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;说明:用到了python3.10的match语法，不方便更换python版本的小伙伴可以把match(运行报错的地方)更改为if else&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;命令行运行以下代码（&lt;strong&gt;建议使用Pycharm打开项目，Pycharm会自动配置好所有东西，直接运行main.py即可&lt;/strong&gt;）&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;运行main.py&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ol start=&#34;3&#34;&gt; &#xA;  &lt;li&gt;出现解密界面&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230521001305274.png&#34; alt=&#34;image-20230521001305274&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;按照提示选择上面获得的两个文件，等待解密完成，重新运行程序&lt;/p&gt; &#xA; &lt;ol start=&#34;4&#34;&gt; &#xA;  &lt;li&gt;进入主界面&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;这时候不显示头像，因为头像文件没有导入进来&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230521001547481.png&#34; alt=&#34;image-20230521001547481&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;根据&lt;a href=&#34;https://blog.csdn.net/m0_59452630/article/details/124222235?spm=1001.2014.3001.5501&#34;&gt;教程&lt;/a&gt; 将头像文件夹avatar复制到工程目录./app/data/目录下&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230521001726799.png&#34; alt=&#34;image-20230521001726799&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;如果想要显示聊天图像就把&lt;a href=&#34;https://blog.csdn.net/m0_59452630/article/details/124222235?spm=1001.2014.3001.5501&#34;&gt;教程&lt;/a&gt; 里的image2文件夹复制到./app/data文件夹里，效果跟上图一样&lt;/p&gt; &#xA; &lt;p&gt;复制进来之后再运行程序就有图像了&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/image-20230520235113261.png&#34; alt=&#34;image-20230520235113261&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;项目还有很多bug，希望大家能够及时反馈&lt;/h2&gt; &#xA;&lt;p&gt;项目地址：&lt;a href=&#34;https://github.com/LC044/WeChatMsg&#34;&gt;https://github.com/LC044/WeChatMsg&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;🏆致谢&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PC微信解密工具:&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump&#34;&gt;https://github.com/xaoyaoo/PyWxDump&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;说明：该项目仅可用于交流学习，禁止任何非法用途，创作者不承担任何责任🙄&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/?utm_source=bestxtools.com#LC044/WeChatMsg&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=LC044/WeChatMsg&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;🎄温馨提示&lt;/h1&gt; &#xA;&lt;p&gt;如果您在使用该软件的过程中&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;发现新的bug&lt;/li&gt; &#xA; &lt;li&gt;有新的功能诉求&lt;/li&gt; &#xA; &lt;li&gt;操作比较繁琐&lt;/li&gt; &#xA; &lt;li&gt;觉得UI不够美观&lt;/li&gt; &#xA; &lt;li&gt;等其他给您造成困扰的地方&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;请提起&lt;a href=&#34;https://github.com/LC044/WeChatMsg/issues&#34;&gt;issue&lt;/a&gt;或者添加QQ群(进群前先点个⭐哦):&lt;a href=&#34;https://raw.githubusercontent.com/LC044/WeChatMsg/master/doc/images/qq.jpg&#34;&gt;&lt;strong&gt;474379264&lt;/strong&gt;&lt;/a&gt; ，我将尽快为您解决问题&lt;/p&gt; &#xA;&lt;p&gt;如果您是一名开发者，有新的想法或建议，欢迎&lt;a href=&#34;https://github.com/LC044/WeChatMsg/forks&#34;&gt;fork&lt;/a&gt; 该项目并发起&lt;a href=&#34;https://github.com/LC044/WeChatMsg/pulls&#34;&gt;PR&lt;/a&gt;，我将把您的名字写入贡献者名单中&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>francozappa/bluffs</title>
    <updated>2023-12-02T01:38:24Z</updated>
    <id>tag:github.com,2023-12-02:/francozappa/bluffs</id>
    <link href="https://github.com/francozappa/bluffs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bluetooth Forward and Future Secrecy Attacks and Defenses (BLUFFS) [CVE 2023-24023]&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;bluffs&lt;/h1&gt; &#xA;&lt;p&gt;Bluetooth Forward and Future Secrecy Attacks and Defenses (BLUFFS) [CVE 2023-24023]&lt;/p&gt; &#xA;&lt;h2&gt;pcap&lt;/h2&gt; &#xA;&lt;p&gt;Contains pcap samples captured while testing the attacks.&lt;/p&gt; &#xA;&lt;h2&gt;checker&lt;/h2&gt; &#xA;&lt;p&gt;Contains the parser.&lt;/p&gt; &#xA;&lt;h2&gt;device&lt;/h2&gt; &#xA;&lt;p&gt;Contains the ARM patches (&lt;code&gt;*.s&lt;/code&gt;) and the &lt;code&gt;bluffs.py&lt;/code&gt; script to test the attacks.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>autonomousvision/mip-splatting</title>
    <updated>2023-12-02T01:38:24Z</updated>
    <id>tag:github.com,2023-12-02:/autonomousvision/mip-splatting</id>
    <link href="https://github.com/autonomousvision/mip-splatting" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mip-Splatting: Alias-free 3D Gaussian Splatting&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;Mip-Splatting: Alias-free 3D Gaussian Splatting&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://niujinshuchong.github.io/&#34;&gt;Zehao Yu&lt;/a&gt; · &lt;a href=&#34;https://apchenstu.github.io/&#34;&gt;Anpei Chen&lt;/a&gt; · &lt;a href=&#34;https://github.com/hbb1&#34;&gt;Binbin Huang&lt;/a&gt; · &lt;a href=&#34;https://tsattler.github.io/&#34;&gt;Torsten Sattler&lt;/a&gt; · &lt;a href=&#34;http://www.cvlibs.net/&#34;&gt;Andreas Geiger&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;&lt;a href=&#34;https://drive.google.com/file/d/1Q7KgGbynzcIEyFJV1I17HgrYz6xrOwRJ/view?usp=sharing&#34;&gt;Paper&lt;/a&gt; | &lt;a href=&#34;https://arxiv.org/pdf/2311.16493.pdf&#34;&gt;arXiv&lt;/a&gt; | &lt;a href=&#34;https://niujinshuchong.github.io/mip-splatting/&#34;&gt;Project Page&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&lt;/div&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/autonomousvision/mip-splatting/main/media/bicycle_3dgs_vs_ours.gif&#34; alt=&#34;Logo&#34; width=&#34;95%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; We introduce a 3D smoothing filter and a 2D Mip filter for 3D Gaussian Splatting (3DGS), eliminating multiple artifacts and achieving alias-free renderings. &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Clone the repository and create an anaconda environment using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:autonomousvision/mip-splatting.git&#xA;cd mip-splatting&#xA;&#xA;conda create -y -n mip-splatting python=3.8&#xA;conda activate mip-splatting&#xA;&#xA;pip install torch==1.12.1+cu113 torchvision==0.13.1+cu113 -f https://download.pytorch.org/whl/torch_stable.html&#xA;conda install cudatoolkit-dev=11.3 -c conda-forge&#xA;&#xA;pip install -r requirements.txt&#xA;&#xA;pip install submodules/diff-gaussian-rasterization&#xA;pip install submodules/simple-knn/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Dataset&lt;/h1&gt; &#xA;&lt;h2&gt;Blender Dataset&lt;/h2&gt; &#xA;&lt;p&gt;Please download and unzip nerf_synthetic.zip from the &lt;a href=&#34;https://drive.google.com/drive/folders/128yBriW1IG_3NJ5Rp7APSTZsJqdJdfc1&#34;&gt;NeRF&#39;s official Google Drive&lt;/a&gt;. Then generate multi-scale blender dataset with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python convert_blender_data.py --blender_dir nerf_synthetic/ --out_dir multi-scale&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Mip-NeRF 360 Dataset&lt;/h2&gt; &#xA;&lt;p&gt;Please download the data from the &lt;a href=&#34;https://jonbarron.info/mipnerf360/&#34;&gt;Mip-NeRF 360&lt;/a&gt; and request the authors for the treehill and flowers scenes.&lt;/p&gt; &#xA;&lt;h1&gt;Training and evaluation&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;# single-scale training and single-scale testing on NeRF-synthetic dataset&#xA;python scripts/run_nerf_synthetic_stmt.py &#xA;&#xA;# multi-scale training and multi-scale testing on NeRF-synthetic dataset&#xA;python scripts/run_nerf_synthetic_mtmt.py &#xA;&#xA;# single-scale training and single-scale testing on the mip-nerf 360 dataset&#xA;python scripts/run_mipnerf360.py &#xA;&#xA;# single-scale training and multi-scale testing on the mip-nerf 360 dataset&#xA;python scripts/run_mipnerf360_stmt.py &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Acknowledgements&lt;/h1&gt; &#xA;&lt;p&gt;This project is built upon &lt;a href=&#34;https://github.com/graphdeco-inria/gaussian-splatting&#34;&gt;3DGS&lt;/a&gt;. Please follow the license of 3DGS. We thank all the authors for their great work and repos.&lt;/p&gt; &#xA;&lt;h1&gt;Citation&lt;/h1&gt; &#xA;&lt;p&gt;If you find our code or paper useful, please cite&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{Yu2023MipSplatting,&#xA;  author    = {Yu, Zehao and Chen, Anpei and Huang, Binbin and Sattler, Torsten and Geiger, Andreas},&#xA;  title     = {Mip-Splatting: Alias-free 3D Gaussian Splatting},&#xA;  journal   = {arXiv:2311.16493},&#xA;  year      = {2023},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>