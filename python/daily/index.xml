<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-02T01:37:46Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>elceef/subzuf</title>
    <updated>2022-12-02T01:37:46Z</updated>
    <id>tag:github.com,2022-12-02:/elceef/subzuf</id>
    <link href="https://github.com/elceef/subzuf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a smart DNS response-guided subdomain fuzzer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;subzuf&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;subzuf&lt;/em&gt; is a subdomain brute-force fuzzer coupled with an immensly simple but effective DNS reponse-guided algorithm. It utilizes a provided set of input data, like a tailored wordlist or historical DNS/TLS records, to accurately synthesize more corresponding domain names and expand them even further in a loop based on information gathered during DNS scan. This somewhat different approach to subdomain enumeration in most cases allows to discover more subdomains with significantly reduced time and resources.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/elceef/subzuf/main/misc/demo.gif&#34; alt=&#34;Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In short, &lt;em&gt;subzuf&lt;/em&gt; can be summarized by the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generates carefully selected candidates and uncover completely new subdomains during DNS enumeration scans&lt;/li&gt; &#xA; &lt;li&gt;Efficient multi-threaded DNS client capable of resolving thousands of domains per second&lt;/li&gt; &#xA; &lt;li&gt;Wildcard detection in two modes: filter (default, slightly slower but accurate) and reject (resource-saving)&lt;/li&gt; &#xA; &lt;li&gt;Accepts wordlist or domain names or a mix of both as input&lt;/li&gt; &#xA; &lt;li&gt;Requires essentially no configuration or fine-tuning&lt;/li&gt; &#xA; &lt;li&gt;Works right of out the box - no external dependencies or bizzare requirements&lt;/li&gt; &#xA; &lt;li&gt;Easily chainable with other tools&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/elceef/subzuf.git&#xA;$ cd subzuf&#xA;$ pip install .&#xA;$ subzuf --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;subzuf&lt;/em&gt; itself is just a single file which has no external dependencies - you can move it anywhere you need.&lt;/p&gt; &#xA;&lt;h2&gt;Quick examples&lt;/h2&gt; &#xA;&lt;p&gt;Using the attached scripts, collect publicly available data related to the target domain and provide it as input:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./scripts/_subfind.sh example.com | subzuf example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Provide a text file as input, save JSON output to a file, and display results in CSV format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cat wordlist.txt | subzuf example.com | tee out.zuf | ./scripts/json2csv.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage tips&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The most efficient enumeration happens not with enormous or random input but with a mix of targeted test cases generated from OSINT and tailored wordlist.&lt;/li&gt; &#xA; &lt;li&gt;Input data is validated and everything that can&#39;t be quickly &#34;fixed&#34; on the fly will be silently skipped.&lt;/li&gt; &#xA; &lt;li&gt;By default the number of threads is auto-selected based on available CPU cores, which is a safe and in many cases sufficient value. Although it often pays off to increase this number, keep in mind that at some point speed does not increase linearly with the number of threads.&lt;/li&gt; &#xA; &lt;li&gt;Keep an eye at the error ratio in the status line. It should be reasonably low, say less than 1%. The most common errors are socket timeouts due to: congested and poor quality network links, slow DNS resolvers, rate-limiting, overloaded authoritative nameservers.&lt;/li&gt; &#xA; &lt;li&gt;Cloudflare, Google and OpenDNS public DNS resolvers are used by default and considered reliable. Feel free to supply your own list of DNS resolvers. Although resolvers undergo basic validation test, please ensure that they can handle higher loads. Poor quality DNS resolvers will cause excessive timeout errors or refused/servfail status responses.&lt;/li&gt; &#xA; &lt;li&gt;Colourful CLI output is auto-selected when an interactive terminal is detected. Otherwise JSON is used by default. Output format can be always enforced with the optional command line argument.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known limitations and common-sense risks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Active DNS enumeration involves many thousands of queries in a relatively short period of time. Keep in mind that such a volume of DNS messages might not go unnoticed at the target.&lt;/li&gt; &#xA; &lt;li&gt;Virtual machines with NAT network adapters are generally not suitable for handling hundreds of DNS packets per second and will likely cause timeout errors.&lt;/li&gt; &#xA; &lt;li&gt;Built-in DNS client has a bare-minimum implementation required for the task and does not support DoH - use a proxy solution if really necessary.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Questions? Don&#39;t hesitate to contact the author. Any feedback is appreciated.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>electricitymaps/electricitymaps-contrib</title>
    <updated>2022-12-02T01:37:46Z</updated>
    <id>tag:github.com,2022-12-02:/electricitymaps/electricitymaps-contrib</id>
    <link href="https://github.com/electricitymaps/electricitymaps-contrib" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A real-time visualisation of the CO2 emissions of electricity consumption&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Electricity Maps&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://slack.electricitymaps.com&#34;&gt;&lt;img src=&#34;https://slack.electricitymaps.com/badge.svg?sanitize=true&#34; alt=&#34;Slack Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/electricitymaps/electricitymaps-contrib&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/electricitymaps/electricitymaps-contrib.svg?style=shield&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/ElectricityMaps&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/ElectricityMaps.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A real-time visualisation of the Greenhouse Gas (in terms of CO&lt;sub&gt;2&lt;/sub&gt; equivalent) footprint of electricity consumption built with &lt;a href=&#34;https://d3js.org/&#34;&gt;d3.js&lt;/a&gt; and &lt;a href=&#34;https://github.com/mapbox/mapbox-gl-js/&#34;&gt;mapbox GL&lt;/a&gt;. Try it out at &lt;a href=&#34;https://app.electricitymaps.com&#34;&gt;app.electricitymaps.com&lt;/a&gt;, or download the app on &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.tmrow.electricitymap&amp;amp;utm_source=github&#34;&gt;Google Play&lt;/a&gt; or &lt;a href=&#34;https://itunes.apple.com/us/app/electricity-map/id1224594248&amp;amp;utm_source=github&#34;&gt;App store&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://app.electricitymaps.com/images/electricitymap_social_image.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for your interest. Check out the &lt;a href=&#34;https://github.com/electricityMaps/electricitymaps-contrib/wiki&#34;&gt;Wiki&lt;/a&gt; for how to get started. Also, have a look at our current &lt;a href=&#34;https://github.com/electricityMaps/electricitymaps-contrib/issues&#34;&gt;issues&lt;/a&gt; and &lt;a href=&#34;https://github.com/electricityMaps/electricitymaps-contrib/discussions&#34;&gt;discussions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here are some of the ways you can contribute:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/electricitymap/electricitymap-contrib/wiki/Building-a-new-parser&#34;&gt;Building a new parser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/electricitymap/electricitymap-contrib/wiki/Fixing-a-broken-parser&#34;&gt;Fixing a broken parser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/electricitymap/electricitymap-contrib/wiki/Changes-to-the-frontend&#34;&gt;Changes to the frontend&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/electricitymap/electricitymap-contrib/wiki/Find-data-sources&#34;&gt;Find data sources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/electricitymap/electricitymap-contrib/wiki/Verify-data-sources&#34;&gt;Verify data sources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/electricitymap/electricitymap-contrib/wiki/Translating-electricitymaps.com&#34;&gt;Translating the app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/electricitymap/electricitymap-contrib/wiki/Update-region-capacities&#34;&gt;Updating region capacities&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Join us on &lt;a href=&#34;https://slack.electricitymaps.com&#34;&gt;Slack&lt;/a&gt; if you wish to discuss development or need help to get started.&lt;/p&gt; &#xA;&lt;p&gt;We would love your feedback on how to improve the contribution experience, please feel free to fill out this &lt;a href=&#34;https://forms.gle/VRWvEFwhtnhpzPVX8&#34;&gt;form&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Frequently asked questions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Where does the data come from?&lt;/strong&gt; The data comes from many different sources. You can check them out &lt;a href=&#34;https://github.com/electricityMaps/electricitymaps-contrib/raw/master/DATA_SOURCES.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How do you define real-time data?&lt;/strong&gt; Real-time data is defined as a data source with an hourly (or better) frequency, delayed by less than 2hrs. It should provide a breakdown by generation type. Often fossil fuel generation (coal/gas/oil) is combined under a single heading like &#39;thermal&#39; or &#39;conventional&#39;, this is not a problem.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Why do you calculate the carbon intensity of &lt;em&gt;consumption&lt;/em&gt;?&lt;/strong&gt; In short, citizens should not be responsible for the emissions associated with all the products they export, but only for what they consume. Consumption-based accounting (CBA) is a very important aspect of climate policy and allows assigning responsibility to consumers instead of producers. Furthermore, this method is robust to governments relocating dirty production to neighboring countries in order to green their image while still importing from it. You can read more in our blog post &lt;a href=&#34;https://electricitymaps.com/blog/flow-tracing/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Why don&#39;t you show emissions per capita?&lt;/strong&gt; A country that has few inhabitants but a lot of factories will appear high on CO&lt;sub&gt;2&lt;/sub&gt;/capita. This means you can &#34;trick&#34; the numbers by moving your factory abroad and import the produced &lt;em&gt;good&lt;/em&gt; instead of the electricity itself. That country now has a low CO&lt;sub&gt;2&lt;/sub&gt;/capita number because we only count CO&lt;sub&gt;2&lt;/sub&gt; for electricity (not for imported/exported goods). The CO&lt;sub&gt;2&lt;/sub&gt;/capita metric, by involving the size of the population, and by not integrating all CO&lt;sub&gt;2&lt;/sub&gt; emission sources, is thus an incomplete metric. CO&lt;sub&gt;2&lt;/sub&gt; intensity on the other hand only describes where is the best place to put that factory (and when it is best to use electricity), enabling proper decisions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;CO&lt;sub&gt;2&lt;/sub&gt; emission factors look high — what do they cover exactly?&lt;/strong&gt; The carbon intensity of each type of power plant takes into account emissions arising from the whole life cycle of the plant (construction, fuel production, operational emissions and decommissioning).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Is delayed data useful?&lt;/strong&gt; While the map relies on having real-time data to work it&#39;s still useful to collect data from days/months past. This older data can be used to show past emissions and build up a better dataset. So if there&#39;s an hourly data source that lags several days behind you can still build a parser for it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Can scheduled/assumed generation data be used?&lt;/strong&gt; The Electricity Maps doesn&#39;t use scheduled generation data or make assumptions about unknown fuel mixes. This is to avoid introducing extra uncertainty into emissions calculations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Can areas other than countries be shown?&lt;/strong&gt; Yes, providing there is a valid GeoJSON geometry (or another format that can be converted) for the area. As an example, we already split several countries into states and grid regions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How can I get access to historical data or the live API?&lt;/strong&gt; All this and more can be found &lt;strong&gt;&lt;a href=&#34;https://electricitymaps.com/&#34;&gt;here&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>isocpp/CppCoreGuidelines</title>
    <updated>2022-12-02T01:37:46Z</updated>
    <id>tag:github.com,2022-12-02:/isocpp/CppCoreGuidelines</id>
    <link href="https://github.com/isocpp/CppCoreGuidelines" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The C++ Core Guidelines are a set of tried-and-true guidelines, rules, and best practices about coding in C++&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/isocpp/CppCoreGuidelines/master/cpp_core_guidelines_logo_text.png&#34; alt=&#34;C++ Core Guidelines&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&#34;Within C++ is a smaller, simpler, safer language struggling to get out.&#34; -- &lt;cite&gt;Bjarne Stroustrup&lt;/cite&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/isocpp/CppCoreGuidelines/master/CppCoreGuidelines.md&#34;&gt;C++ Core Guidelines&lt;/a&gt; are a collaborative effort led by Bjarne Stroustrup, much like the C++ language itself. They are the result of many person-years of discussion and design across a number of organizations. Their design encourages general applicability and broad adoption but they can be freely copied and modified to meet your organization&#39;s needs.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;The guidelines themselves are found at &lt;a href=&#34;https://raw.githubusercontent.com/isocpp/CppCoreGuidelines/master/CppCoreGuidelines.md&#34;&gt;CppCoreGuidelines&lt;/a&gt;. The document is in &lt;a href=&#34;https://github.github.com/gfm/&#34;&gt;GH-flavored MarkDown&lt;/a&gt;. It is intentionally kept simple, mostly in ASCII, to allow automatic post-processing such as language translation and reformatting. The editors maintain one &lt;a href=&#34;http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines&#34;&gt;version formatted for browsing&lt;/a&gt;. Note that it is manually integrated and can be slightly older than the version in the master branch.&lt;/p&gt; &#xA;&lt;p&gt;The Guidelines are a constantly evolving document without a strict &#34;release&#34; cadence. Bjarne Stroustrup periodically reviews the document and increments the version number in the introduction. &lt;a href=&#34;https://github.com/isocpp/CppCoreGuidelines/releases&#34;&gt;Checkins that increment the version number&lt;/a&gt; are tagged in git.&lt;/p&gt; &#xA;&lt;p&gt;Many of the guidelines make use of the header-only Guidelines Support Library. One implementation is available at &lt;a href=&#34;https://github.com/Microsoft/GSL&#34;&gt;GSL: Guidelines Support Library&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Background and scope&lt;/h2&gt; &#xA;&lt;p&gt;The aim of the guidelines is to help people to use modern C++ effectively. By &#34;modern C++&#34; we mean C++11 and newer. In other words, what would you like your code to look like in 5 years&#39; time, given that you can start now? In 10 years&#39; time?&lt;/p&gt; &#xA;&lt;p&gt;The guidelines are focused on relatively higher-level issues, such as interfaces, resource management, memory management, and concurrency. Such rules affect application architecture and library design. Following the rules will lead to code that is statically type-safe, has no resource leaks, and catches many more programming logic errors than is common in code today. And it will run fast -- you can afford to do things right.&lt;/p&gt; &#xA;&lt;p&gt;We are less concerned with low-level issues, such as naming conventions and indentation style. However, no topic that can help a programmer is out of bounds.&lt;/p&gt; &#xA;&lt;p&gt;Our initial set of rules emphasizes safety (of various forms) and simplicity. They may very well be too strict. We expect to have to introduce more exceptions to better accommodate real-world needs. We also need more rules.&lt;/p&gt; &#xA;&lt;p&gt;You will find some of the rules contrary to your expectations or even contrary to your experience. If we haven&#39;t suggested that you change your coding style in any way, we have failed! Please try to verify or disprove rules! In particular, we&#39;d really like to have some of our rules backed up with measurements or better examples.&lt;/p&gt; &#xA;&lt;p&gt;You will find some of the rules obvious or even trivial. Please remember that one purpose of a guideline is to help someone who is less experienced or coming from a different background or language to get up to speed.&lt;/p&gt; &#xA;&lt;p&gt;The rules are designed to be supported by an analysis tool. Violations of rules will be flagged with references (or links) to the relevant rule. We do not expect you to memorize all the rules before trying to write code.&lt;/p&gt; &#xA;&lt;p&gt;The rules are meant for gradual introduction into a code base. We plan to build tools for that and hope others will too.&lt;/p&gt; &#xA;&lt;h2&gt;Contributions and LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;Comments and suggestions for improvements are most welcome. We plan to modify and extend this document as our understanding improves and the language and the set of available libraries improve. More details are found at &lt;a href=&#34;https://raw.githubusercontent.com/isocpp/CppCoreGuidelines/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/isocpp/CppCoreGuidelines/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://www.digitalocean.com/?refcode=32f291566cf7&amp;amp;utm_campaign=Referral_Invite&amp;amp;utm_medium=Referral_Program&amp;amp;utm_source=CopyPaste&#34;&gt;DigitalOcean&lt;/a&gt; for hosting the Standard C++ Foundation website.&lt;/p&gt;</summary>
  </entry>
</feed>