<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-28T01:38:57Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>R3gm/SoniTranslate</title>
    <updated>2024-10-28T01:38:57Z</updated>
    <id>tag:github.com,2024-10-28:/R3gm/SoniTranslate</id>
    <link href="https://github.com/R3gm/SoniTranslate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Synchronized Translation for Videos. Video dubbing&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🎥 SoniTranslate 🈷️&lt;/h1&gt; &#xA;&lt;p&gt;🎬 Video Translation with Synchronized Audio 🌐&lt;/p&gt; &#xA;&lt;p&gt;SonyTranslate is a powerful and user-friendly web application that allows you to easily translate videos into different languages. This repository hosts the code for the SonyTranslate web UI, which is built with the Gradio library to provide a seamless and interactive user experience.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;📙 Colab Notebook&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://colab.research.google.com/github/R3gm/SoniTranslate/blob/main/SoniTranslate_Colab.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🎉 Repository&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/R3gm/SoniTranslate/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/GitHub-Repository-black?style=flat-square&amp;amp;logo=github&#34; alt=&#34;GitHub Repository&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🚀 Online DEMO&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/spaces/r3gm/SoniTranslate_translate_audio_of_a_video_content&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue&#34; alt=&#34;Hugging Face Spaces&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;SonyTranslate&#39;s web UI, which features a browser interface built on the Gradio library.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/R3gm/SoniTranslate/assets/114810545/0d71fbf4-e9f0-4f8f-944e-8f3f1ea6a019&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using the project: A video guide&lt;/h2&gt; &#xA;&lt;p&gt;For a comprehensive understanding of the project, we highly recommend watching this video tutorial by &lt;a href=&#34;https://github.com/DEV-MalletteS&#34;&gt;DEV-MalletteS&lt;/a&gt;. You can watch it on YouTube by clicking the thumbnail below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=SmGkFaSzq_Q&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/SmGkFaSzq_Q/0.jpg&#34; alt=&#34;Watch the video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported languages for translation&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language Code&lt;/th&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;en&lt;/td&gt; &#xA;   &lt;td&gt;English&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fr&lt;/td&gt; &#xA;   &lt;td&gt;French&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;de&lt;/td&gt; &#xA;   &lt;td&gt;German&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;es&lt;/td&gt; &#xA;   &lt;td&gt;Spanish&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;it&lt;/td&gt; &#xA;   &lt;td&gt;Italian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ja&lt;/td&gt; &#xA;   &lt;td&gt;Japanese&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nl&lt;/td&gt; &#xA;   &lt;td&gt;Dutch&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;uk&lt;/td&gt; &#xA;   &lt;td&gt;Ukrainian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pt&lt;/td&gt; &#xA;   &lt;td&gt;Portuguese&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ar&lt;/td&gt; &#xA;   &lt;td&gt;Arabic&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;zh&lt;/td&gt; &#xA;   &lt;td&gt;Chinese - Simplified&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;zh-TW&lt;/td&gt; &#xA;   &lt;td&gt;Chinese - Traditional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cs&lt;/td&gt; &#xA;   &lt;td&gt;Czech&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;da&lt;/td&gt; &#xA;   &lt;td&gt;Danish&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fi&lt;/td&gt; &#xA;   &lt;td&gt;Finnish&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;el&lt;/td&gt; &#xA;   &lt;td&gt;Greek&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;he&lt;/td&gt; &#xA;   &lt;td&gt;Hebrew&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hu&lt;/td&gt; &#xA;   &lt;td&gt;Hungarian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ko&lt;/td&gt; &#xA;   &lt;td&gt;Korean&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fa&lt;/td&gt; &#xA;   &lt;td&gt;Persian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pl&lt;/td&gt; &#xA;   &lt;td&gt;Polish&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ru&lt;/td&gt; &#xA;   &lt;td&gt;Russian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tr&lt;/td&gt; &#xA;   &lt;td&gt;Turkish&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ur&lt;/td&gt; &#xA;   &lt;td&gt;Urdu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hi&lt;/td&gt; &#xA;   &lt;td&gt;Hindi&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;vi&lt;/td&gt; &#xA;   &lt;td&gt;Vietnamese&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;id&lt;/td&gt; &#xA;   &lt;td&gt;Indonesian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;bn&lt;/td&gt; &#xA;   &lt;td&gt;Bengali&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;te&lt;/td&gt; &#xA;   &lt;td&gt;Telugu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mr&lt;/td&gt; &#xA;   &lt;td&gt;Marathi&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ta&lt;/td&gt; &#xA;   &lt;td&gt;Tamil&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;jw (or jv)&lt;/td&gt; &#xA;   &lt;td&gt;Javanese&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ca&lt;/td&gt; &#xA;   &lt;td&gt;Catalan&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ne&lt;/td&gt; &#xA;   &lt;td&gt;Nepali&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;th&lt;/td&gt; &#xA;   &lt;td&gt;Thai&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sv&lt;/td&gt; &#xA;   &lt;td&gt;Swedish&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;am&lt;/td&gt; &#xA;   &lt;td&gt;Amharic&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cy&lt;/td&gt; &#xA;   &lt;td&gt;Welsh&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hr&lt;/td&gt; &#xA;   &lt;td&gt;Croatian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;is&lt;/td&gt; &#xA;   &lt;td&gt;Icelandic&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ka&lt;/td&gt; &#xA;   &lt;td&gt;Georgian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;km&lt;/td&gt; &#xA;   &lt;td&gt;Khmer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sk&lt;/td&gt; &#xA;   &lt;td&gt;Slovak&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sq&lt;/td&gt; &#xA;   &lt;td&gt;Albanian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sr&lt;/td&gt; &#xA;   &lt;td&gt;Serbian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;az&lt;/td&gt; &#xA;   &lt;td&gt;Azerbaijani&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;bg&lt;/td&gt; &#xA;   &lt;td&gt;Bulgarian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gl&lt;/td&gt; &#xA;   &lt;td&gt;Galician&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gu&lt;/td&gt; &#xA;   &lt;td&gt;Gujarati&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;kk&lt;/td&gt; &#xA;   &lt;td&gt;Kazakh&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;kn&lt;/td&gt; &#xA;   &lt;td&gt;Kannada&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;lt&lt;/td&gt; &#xA;   &lt;td&gt;Lithuanian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;lv&lt;/td&gt; &#xA;   &lt;td&gt;Latvian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ml&lt;/td&gt; &#xA;   &lt;td&gt;Malayalam&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ro&lt;/td&gt; &#xA;   &lt;td&gt;Romanian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;si&lt;/td&gt; &#xA;   &lt;td&gt;Sinhala&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;su&lt;/td&gt; &#xA;   &lt;td&gt;Sundanese&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;et&lt;/td&gt; &#xA;   &lt;td&gt;Estonian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mk&lt;/td&gt; &#xA;   &lt;td&gt;Macedonian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sw&lt;/td&gt; &#xA;   &lt;td&gt;Swahili&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;af&lt;/td&gt; &#xA;   &lt;td&gt;Afrikaans&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;bs&lt;/td&gt; &#xA;   &lt;td&gt;Bosnian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;la&lt;/td&gt; &#xA;   &lt;td&gt;Latin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;my&lt;/td&gt; &#xA;   &lt;td&gt;Myanmar Burmese&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;Norwegian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;as&lt;/td&gt; &#xA;   &lt;td&gt;Assamese&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;eu&lt;/td&gt; &#xA;   &lt;td&gt;Basque&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ha&lt;/td&gt; &#xA;   &lt;td&gt;Hausa&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ht&lt;/td&gt; &#xA;   &lt;td&gt;Haitian Creole&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hy&lt;/td&gt; &#xA;   &lt;td&gt;Armenian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;lo&lt;/td&gt; &#xA;   &lt;td&gt;Lao&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mg&lt;/td&gt; &#xA;   &lt;td&gt;Malagasy&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mn&lt;/td&gt; &#xA;   &lt;td&gt;Mongolian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mt&lt;/td&gt; &#xA;   &lt;td&gt;Maltese&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pa&lt;/td&gt; &#xA;   &lt;td&gt;Punjabi&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ps&lt;/td&gt; &#xA;   &lt;td&gt;Pashto&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sl&lt;/td&gt; &#xA;   &lt;td&gt;Slovenian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sn&lt;/td&gt; &#xA;   &lt;td&gt;Shona&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;so&lt;/td&gt; &#xA;   &lt;td&gt;Somali&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tg&lt;/td&gt; &#xA;   &lt;td&gt;Tajik&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tk&lt;/td&gt; &#xA;   &lt;td&gt;Turkmen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tt&lt;/td&gt; &#xA;   &lt;td&gt;Tatar&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;uz&lt;/td&gt; &#xA;   &lt;td&gt;Uzbek&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;yo&lt;/td&gt; &#xA;   &lt;td&gt;Yoruba&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Non-transcription&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language Code&lt;/th&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ay&lt;/td&gt; &#xA;   &lt;td&gt;Aymara&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;bm&lt;/td&gt; &#xA;   &lt;td&gt;Bambara&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ceb&lt;/td&gt; &#xA;   &lt;td&gt;Cebuano&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ny&lt;/td&gt; &#xA;   &lt;td&gt;Chichewa&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dv&lt;/td&gt; &#xA;   &lt;td&gt;Divehi&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;doi&lt;/td&gt; &#xA;   &lt;td&gt;Dogri&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ee&lt;/td&gt; &#xA;   &lt;td&gt;Ewe&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gn&lt;/td&gt; &#xA;   &lt;td&gt;Guarani&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ilo&lt;/td&gt; &#xA;   &lt;td&gt;Iloko&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;rw&lt;/td&gt; &#xA;   &lt;td&gt;Kinyarwanda&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;kri&lt;/td&gt; &#xA;   &lt;td&gt;Krio&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ku&lt;/td&gt; &#xA;   &lt;td&gt;Kurdish&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ky&lt;/td&gt; &#xA;   &lt;td&gt;Kirghiz&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;lg&lt;/td&gt; &#xA;   &lt;td&gt;Ganda&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mai&lt;/td&gt; &#xA;   &lt;td&gt;Maithili&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;or&lt;/td&gt; &#xA;   &lt;td&gt;Oriya&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;om&lt;/td&gt; &#xA;   &lt;td&gt;Oromo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;qu&lt;/td&gt; &#xA;   &lt;td&gt;Quechua&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sm&lt;/td&gt; &#xA;   &lt;td&gt;Samoan&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ti&lt;/td&gt; &#xA;   &lt;td&gt;Tigrinya&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ts&lt;/td&gt; &#xA;   &lt;td&gt;Tsonga&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ak&lt;/td&gt; &#xA;   &lt;td&gt;Akan&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ug&lt;/td&gt; &#xA;   &lt;td&gt;Uighur&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Example:&lt;/h2&gt; &#xA;&lt;h3&gt;Original audio&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/R3gm/SoniTranslate/assets/114810545/db9e78c0-b228-4e81-9704-e62d5cc407a3&#34;&gt;https://github.com/R3gm/SoniTranslate/assets/114810545/db9e78c0-b228-4e81-9704-e62d5cc407a3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Translated audio&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/R3gm/SoniTranslate/assets/114810545/6a8ddc65-a46f-4653-9726-6df2615f0ef9&#34;&gt;https://github.com/R3gm/SoniTranslate/assets/114810545/6a8ddc65-a46f-4653-9726-6df2615f0ef9&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Colab Runtime&lt;/h2&gt; &#xA;&lt;p&gt;To run SoniTranslate using Colab Runtime: &lt;a href=&#34;https://colab.research.google.com/github/R3gm/SoniTranslate/blob/main/SoniTranslate_Colab.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install Locally (Installation tested in Linux)&lt;/h2&gt; &#xA;&lt;h3&gt;Before You Start&lt;/h3&gt; &#xA;&lt;p&gt;Before you start installing and using SoniTranslate, there are a few things you need to do:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the NVIDIA drivers for CUDA 11.8.0, NVIDIA CUDA is a parallel computing platform and programming model that enables developers to use the power of NVIDIA graphics processing units (GPUs) to speed up compute-intensive tasks. You can find the drivers &lt;a href=&#34;https://developer.nvidia.com/cuda-toolkit-archive&#34;&gt;here&lt;/a&gt;. Follow the instructions on the website to download and install the drivers.&lt;/li&gt; &#xA; &lt;li&gt;Accept the license agreement for using Pyannote. You need to have an account on Hugging Face and &lt;code&gt;accept the license to use the models&lt;/code&gt;: &lt;a href=&#34;https://huggingface.co/pyannote/speaker-diarization&#34;&gt;https://huggingface.co/pyannote/speaker-diarization&lt;/a&gt; and &lt;a href=&#34;https://huggingface.co/pyannote/segmentation&#34;&gt;https://huggingface.co/pyannote/segmentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;a href=&#34;https://huggingface.co/settings/tokens&#34;&gt;huggingface token&lt;/a&gt;. Hugging Face is a natural language processing platform that provides access to state-of-the-art models and tools. You will need to create a token in order to use some of the automatic model download features in SoniTranslate. Follow the instructions on the Hugging Face website to create a token. When you are creating the new Access Token in Hugging Face, make sure to tick &#34;Read access to contents of all public gated repos you can access&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://www.anaconda.com/&#34;&gt;Anaconda&lt;/a&gt; or &lt;a href=&#34;https://docs.anaconda.com/free/miniconda/miniconda-install/&#34;&gt;Miniconda&lt;/a&gt;. Anaconda is a free and open-source distribution of Python and R. It includes a package manager called conda that makes it easy to install and manage Python environments and packages. Follow the instructions on the Anaconda website to download and install Anaconda on your system.&lt;/li&gt; &#xA; &lt;li&gt;Install Git for your system. Git is a version control system that helps you track changes to your code and collaborate with other developers. You can install Git with Anaconda by running &lt;code&gt;conda install -c anaconda git -y&lt;/code&gt; in your terminal (Do this after step 1 in the following section.). If you have trouble installing Git via Anaconda, you can use the following link instead: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://git-scm.com/download/linux&#34;&gt;Git for Linux&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Once you have completed these steps, you will be ready to install SoniTranslate.&lt;/p&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;p&gt;To install SoniTranslate, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a suitable anaconda environment for SoniTranslate and activate it:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda create -n sonitr python=3.10 -y&#xA;conda activate sonitr&#xA;python -m pip install pip==23.1.2&#xA;conda install pytorch torchvision torchaudio pytorch-cuda=11.8 -c pytorch -c nvidia&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Clone this github repository and navigate to it:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/r3gm/SoniTranslate.git&#xA;cd SoniTranslate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Install required packages:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -r requirements_base.txt -v&#xA;pip install -r requirements_extra.txt -v&#xA;pip install onnxruntime-gpu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://ffmpeg.org/download.html&#34;&gt;ffmpeg&lt;/a&gt;. FFmpeg is a free software project that produces libraries and programs for handling multimedia data. You will need it to process audio and video files. You can install ffmpeg with Anaconda by running &lt;code&gt;conda install -y ffmpeg&lt;/code&gt; in your terminal (recommended). If you have trouble installing ffmpeg via Anaconda, you can use the following link instead: (&lt;a href=&#34;https://ffmpeg.org/ffmpeg.html&#34;&gt;https://ffmpeg.org/ffmpeg.html&lt;/a&gt;). Once it is installed, make sure it is in your PATH by running &lt;code&gt;ffmpeg -h&lt;/code&gt; in your terminal. If you don&#39;t get an error message, you&#39;re good to go.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Optional install:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;After installing FFmpeg, you can install these optional packages.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rhasspy/piper&#34;&gt;Piper TTS&lt;/a&gt; is a fast, local neural text to speech system that sounds great and is optimized for the Raspberry Pi 4. Piper is used in a variety of projects. Voices are trained with VITS and exported to the onnxruntime.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -q piper-tts==1.2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/coqui-ai/TTS&#34;&gt;Coqui XTTS&lt;/a&gt; is a text-to-speech (TTS) model that lets you generate realistic voices in different languages. It can clone voices with just a short audio clip, even speak in a different language! It&#39;s like having a personal voice mimic for any text you need spoken.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -q -r requirements_xtts.txt&#xA;pip install -q TTS==0.21.1  --no-deps&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running SoniTranslate&lt;/h3&gt; &#xA;&lt;p&gt;To run SoniTranslate locally, make sure the &lt;code&gt;sonitr&lt;/code&gt; conda environment is active:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda activate sonitr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Setting your Hugging Face token as an environment variable in Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export YOUR_HF_TOKEN=&#34;YOUR_HUGGING_FACE_TOKEN&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then navigate to the &lt;code&gt;SoniTranslate&lt;/code&gt; folder and run either the &lt;code&gt;app_rvc.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app_rvc.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When the &lt;code&gt;local URL&lt;/code&gt; &lt;code&gt;http://127.0.0.1:7860&lt;/code&gt; is displayed in the terminal, simply open this URL in your web browser to access the SoniTranslate interface.&lt;/p&gt; &#xA;&lt;h3&gt;Stop and close SoniTranslate.&lt;/h3&gt; &#xA;&lt;p&gt;In most environments, you can stop the execution by pressing Ctrl+C in the terminal where you launched the script &lt;code&gt;app_rvc.py&lt;/code&gt;. This will interrupt the program and stop the Gradio app. To deactivate the Conda environment, you can use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda deactivate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will deactivate the currently active Conda environment sonitr, and you&#39;ll return to the base environment or the global Python environment.&lt;/p&gt; &#xA;&lt;h3&gt;Starting Over&lt;/h3&gt; &#xA;&lt;p&gt;If you need to start over from scratch, you can delete the &lt;code&gt;SoniTranslate&lt;/code&gt; folder and remove the &lt;code&gt;sonitr&lt;/code&gt; conda environment with the following set of commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda deactivate&#xA;conda env remove -n sonitr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the &lt;code&gt;sonitr&lt;/code&gt; environment removed, you can start over with a fresh installation.&lt;/p&gt; &#xA;&lt;h3&gt;Notes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Alternatively, you can set your Hugging Face token as a permanent environment variable with:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda activate sonitr&#xA;conda env config vars set YOUR_HF_TOKEN=&#34;YOUR_HUGGING_FACE_TOKEN_HERE&#34;&#xA;conda deactivate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To use OpenAI&#39;s GPT API for translation, tts or transcription, set up your OpenAI API key as an environment variable in quotes:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda activate sonitr&#xA;conda env config vars set OPENAI_API_KEY=&#34;your-api-key-here&#34;&#xA;conda deactivate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Command line arguments&lt;/h2&gt; &#xA;&lt;p&gt;The app_rvc.py script supports command-line arguments to customize its behavior. Here&#39;s a brief guide on how to use them:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Argument command&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--theme&lt;/td&gt; &#xA;   &lt;td&gt;Taithrah/Minimal&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Sets the theme for the interface. Themes can be found in the &lt;a href=&#34;https://huggingface.co/spaces/gradio/theme-gallery&#34;&gt;Theme Gallery&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--language&lt;/td&gt; &#xA;   &lt;td&gt;english&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Selects the interface language. Available options: afrikaans, arabic, azerbaijani, chinese_zh_cn, english, french, german, hindi, indonesian, italian, japanese, korean, marathi, persian, polish, portuguese, russian, spanish, swedish, turkish, ukrainian, vietnamese.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--verbosity_level&lt;/td&gt; &#xA;   &lt;td&gt;info&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Sets the verbosity level of the logger: debug, info, warning, error, or critical.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--public_url&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Boolean&lt;/td&gt; &#xA;   &lt;td&gt;Enables a public link.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--cpu_mode&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Boolean&lt;/td&gt; &#xA;   &lt;td&gt;Enable CPU mode to run the program without utilizing GPU acceleration.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--logs_in_gui&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Boolean&lt;/td&gt; &#xA;   &lt;td&gt;Shows the operations performed in Logs (obsolete).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Example usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app_rvc.py --theme aliabid94/new-theme --language french&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command sets the theme to a custom theme and selects French as the interface language. Feel free to customize these arguments according to your preferences and requirements.&lt;/p&gt; &#xA;&lt;h2&gt;📖 News&lt;/h2&gt; &#xA;&lt;p&gt;🔥 2024/18/05: New Update Details&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added option Overlap Reduction&lt;/li&gt; &#xA; &lt;li&gt;OpenAI API Key Integration for Transcription, translation, and TTS&lt;/li&gt; &#xA; &lt;li&gt;More output types: subtitles by speaker, separate audio sound, and video only with subtitles&lt;/li&gt; &#xA; &lt;li&gt;Access to a better-performing version of Whisper for transcribing speech on the &lt;a href=&#34;https://huggingface.co/models?pipeline_tag=automatic-speech-recognition&amp;amp;sort=trending&amp;amp;search=whisper&#34;&gt;Hugging Face Whisper page&lt;/a&gt;. Copy the repository ID and paste it into the &#39;Whisper ASR model&#39; section in &#39;Advanced Settings&#39;; e.g., &lt;code&gt;kotoba-tech/kotoba-whisper-v1.1&lt;/code&gt; for Japanese transcription &lt;a href=&#34;https://huggingface.co/kotoba-tech/kotoba-whisper-v1.1&#34;&gt;available here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Support for ASS subtitles and batch processing with subtitles&lt;/li&gt; &#xA; &lt;li&gt;Vocal enhancement before transcription&lt;/li&gt; &#xA; &lt;li&gt;Added CPU mode with &lt;code&gt;app_rvc.py --cpu_mode&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;TTS now supports up to 12 speakers&lt;/li&gt; &#xA; &lt;li&gt;OpenVoiceV2 integration for voice imitation&lt;/li&gt; &#xA; &lt;li&gt;PDF to videobook (displays images from the PDF)&lt;/li&gt; &#xA; &lt;li&gt;GUI language translation in Persian and Afrikaans&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;New Language Support&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Complete support&lt;/strong&gt;: Estonian, Macedonian, Malay, Swahili, Afrikaans, Bosnian, Latin, Myanmar Burmese, Norwegian, Traditional Chinese, Assamese, Basque, Hausa, Haitian Creole, Armenian, Lao, Malagasy, Mongolian, Maltese, Punjabi, Pashto, Slovenian, Shona, Somali, Tajik, Turkmen, Tatar, Uzbek, and Yoruba&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Non-transcription&lt;/strong&gt;: Aymara, Bambara, Cebuano, Chichewa, Divehi, Dogri, Ewe, Guarani, Iloko, Kinyarwanda, Krio, Kurdish, Kirghiz, Ganda, Maithili, Oriya, Oromo, Quechua, Samoan, Tigrinya, Tsonga, Akan, and Uighur&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;🔥 2024/03/02: Preserve file names in output. Multiple archives can now be submitted simultaneously by specifying their paths, directories or URLs separated by commas. Processing of a full YouTube playlist. About &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp/raw/master/supportedsites.md&#34;&gt;supported sites URL&lt;/a&gt;, please be aware that not all sites may work optimally. Added option for disabling diarization. Implemented soft subtitles. Format output (MP3, MP4, MKV, WAV, and OGG), and resolved issues related to file reading and diarization.&lt;/p&gt; &#xA;&lt;p&gt;🔥 2024/02/22: Added freevc for voice imitation, fixed voiceless track, divide segments. New languages support (Swedish, Amharic, Welsh, Croatian, Icelandic, Georgian, Khmer, Slovak, Albanian, Serbian, Azerbaijani, Bulgarian, Galician, Gujarati, Kazakh, Kannada, Lithuanian, Latvian, Malayalam, Romanian, Sinhala and Sundanese). New translations of the GUI (Spanish, French, German, Italian, Japanese, Chinese Simplified, Ukrainian, Arabic, Russian, Turkish, Indonesian, Portuguese, Hindi, Vietnamese, Polish, Swedish, Korean, Marathi and Azerbaijani). With subtitle file, no align and the media file is not needed to process the SRT file. Burn subtitles to video. Queue can accept multiple tasks simultaneously. Sound alert notification. Continue process from last checkpoint. Acceleration rate regulation.&lt;/p&gt; &#xA;&lt;p&gt;🔥 2024/01/16: Expanded language support (Thai, Nepali, Catalan, Javanese, Tamil, Marathi, Telugu, Bengali and Indonesian), the introduction of whisper large v3, configurable GUI options, integration of BARK, Facebook-mms, Coqui XTTS, and Piper-TTS. Additional features included audio separation utilities, XTTS WAV creation, use an SRT file as a base for translation, document translation, manual speaker editing, and flexible output options (video, audio, subtitles).&lt;/p&gt; &#xA;&lt;p&gt;🔥 2023/10/29: Edit the translated subtitle, download it, adjust volume and speed options.&lt;/p&gt; &#xA;&lt;p&gt;🔥 2023/08/03: Changed default options and added directory view of downloads.&lt;/p&gt; &#xA;&lt;p&gt;🔥 2023/08/02: Added support for Arabic, Czech, Danish, Finnish, Greek, Hebrew, Hungarian, Korean, Persian, Polish, Russian, Turkish, Urdu, Hindi, and Vietnamese languages. 🌐&lt;/p&gt; &#xA;&lt;p&gt;🔥 2023/08/01: Add options for use RVC models.&lt;/p&gt; &#xA;&lt;p&gt;🔥 2023/07/27: Fix some bug processing the video and audio.&lt;/p&gt; &#xA;&lt;p&gt;🔥 2023/07/26: New UI and add mix options.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to contributions from the community! If you have any ideas, bug reports, or feature requests, please open an issue or submit a pull request. For more information, please refer to the contribution guidelines.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This project leverages a number of open-source projects. We would like to acknowledge and thank the contributors of the following repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pytorch/pytorch&#34;&gt;PyTorch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp&#34;&gt;yt-dlp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gradio-app/gradio&#34;&gt;Gradio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rany2/edge-tts&#34;&gt;edge-tts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nidhaloff/deep-translator&#34;&gt;deep-translator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pyannote/pyannote-audio&#34;&gt;pyannote-audio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/m-bain/whisperX&#34;&gt;WhisperX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SYSTRAN/faster-whisper&#34;&gt;faster-whisper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpenNMT/CTranslate2&#34;&gt;CTranslate2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/huggingface/transformers&#34;&gt;Transformers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FFmpeg/FFmpeg&#34;&gt;FFmpeg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rhasspy/piper&#34;&gt;Piper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coqui-ai/TTS&#34;&gt;Coqui TTS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/py-pdf/pypdf&#34;&gt;pypdf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/myshell-ai/OpenVoice&#34;&gt;OpenVoice&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Although the code is licensed under Apache 2, the models or weights may have commercial restrictions, as seen with pyannote diarization.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>permitio/opal</title>
    <updated>2024-10-28T01:38:57Z</updated>
    <id>tag:github.com,2024-10-28:/permitio/opal</id>
    <link href="https://github.com/permitio/opal" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Policy and data administration, distribution, and real-time updates on top of Policy Agents (OPA, Cedar, ...)&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/permitio/opal/assets/4082578/4e21f85f-30ab-43e2-92de-b82f78888c71&#34; height=&#34;170&#34; alt=&#34;opal&#34; border=&#34;0&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; ⚡OPAL⚡ &lt;/h1&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt; Open Policy Administration Layer &lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/permitio/opal/actions?query=workflow%3ATests&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/permitio/opal/workflows/Tests/badge.svg?sanitize=true&#34; alt=&#34;Tests&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://pypi.org/project/opal-server/&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/opal-server?color=%2331C654&amp;amp;label=OPAL%20Server%20%28PyPi%29&#34; alt=&#34;Package&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://pypi.org/project/opal-client/&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/opal-client?color=%2331C654&amp;amp;label=OPAL%20Client%20%28PyPi%29&#34; alt=&#34;Package&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://pepy.tech/project/opal-server&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://static.pepy.tech/personalized-badge/opal-client?period=total&amp;amp;units=international_system&amp;amp;left_color=black&amp;amp;right_color=blue&amp;amp;left_text=Downloads&#34; alt=&#34;Downloads&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://hub.docker.com/r/permitio/opal-server&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/permitio/opal-client?label=Docker%20pulls&#34; alt=&#34;Docker pulls&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://bit.ly/permit-slack&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Slack%20Community-4A154B?logo=slack&amp;amp;logoColor=white&#34; alt=&#34;Join our Slack!&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://twitter.com/intent/follow?original_referer=https%3A%2F%2Fpublish.twitter.com%2F%3FbuttonType%3DFollowButton%26query%3Dhttps%253A%252F%252Ftwitter.com%252Fpermit_io%26widget%3DButton&amp;amp;ref_src=twsrc%5Etfw&amp;amp;region=follow_link&amp;amp;screen_name=permit_io&amp;amp;tw_p=followbutton&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/permit_io?label=Follow%20%40permit_io&amp;amp;style=social&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;What is OPAL?&lt;/h2&gt; &#xA;&lt;p&gt;OPAL is an administration layer for Policy Engines such as &lt;a target=&#34;_blank&#34; href=&#34;https://www.openpolicyagent.org/&#34;&gt;Open Policy Agent (OPA)&lt;/a&gt;, and &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/permitio/cedar-agent&#34;&gt;AWS&#39; Cedar Agent&lt;/a&gt; detecting changes to both policy and policy data in realtime and pushing live updates to your agents. OPAL brings open-policy up to the speed needed by live applications.&lt;/p&gt; &#xA;&lt;p&gt;As your app&#39;s data state changes (whether it&#39;s via your APIs, DBs, git, S3 or 3rd-party SaaS services), OPAL will make sure your services are always in sync with the authorization data and policy they need (and only those they need).&lt;/p&gt; &#xA;&lt;p&gt;Check out OPAL&#39;s main site at &lt;a target=&#34;_blank&#34; href=&#34;https://opal.ac&#34;&gt;OPAL.ac&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;OPAL Use Cases&lt;/h2&gt; &#xA;&lt;p&gt;OPAL is the easiest way to keep your solution&#39;s authorization layer up-to-date in realtime. It aggregates policy and data from across the field and integrates them seamlessly into the authorization layer, and is microservices and cloud-native.&lt;/p&gt; &#xA;&lt;p&gt;Here are some of the main use cases for using OPAL:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;End-to-End &lt;a href=&#34;https://www.permit.io/blog/what-is-fine-grained-authorization-fga&#34;&gt;Fine-Grained Authorization&lt;/a&gt; service&lt;/strong&gt; that can be used with any policy language or data store&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.permit.io/blog/what-is-google-zanzibar&#34;&gt;Google-Zanzibar&lt;/a&gt; support for Policy as Code engines such as OPA and AWS Cedar&lt;/li&gt; &#xA; &lt;li&gt;Streamline permissions in microservice architectures using &lt;a href=&#34;https://www.permit.io/blog/best-practices-for-implementing-hybrid-cloud-security&#34;&gt;centralized policy configuration with decentralized data&lt;/a&gt; sources and policy engines&lt;/li&gt; &#xA; &lt;li&gt;Manage and automate the deployment of multiple Open Policy Agent engines in a Cloud-Native environment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://github.com/permitio/opal/assets/4082578/99d3dd95-a7ff-45c2-805e-3d533f8b1e8c&#34; alt=&#34;simplified&#34; border=&#34;0&#34;&gt; &#xA;&lt;p&gt;OPAL uses a client-server stateless architecture. OPAL-Servers publish policy and data updates over a lightweight (websocket) PubSub Channel, which OPAL-clients subscribe to via topics. Upon updates, each client fetches data directly (from the source) to load it into its managed Policy Engine instance.&lt;/p&gt; &#xA;&lt;h3&gt;OPA + OPAL == 💜&lt;/h3&gt; &#xA;&lt;p&gt;While OPA (Open Policy Agent) decouples policy from code in a highly-performant and elegant way, the challenge of keeping policy agents up-to-date remains. This is especially true in applications, where each user interaction or API call may affect access-control decisions. OPAL runs in the background, supercharging policy agents and keeping them in sync with events in real time.&lt;/p&gt; &#xA;&lt;h3&gt;AWS Cedar + OPAL == 💪&lt;/h3&gt; &#xA;&lt;p&gt;Cedar is a very powerful policy language, which powers AWS&#39; AVP (Amazon Verified Permissions) - but what if you want to enjoy the power of Cedar on another cloud, locally, or on premise? This is where &lt;a href=&#34;https://github.com/permitio/cedar-agent&#34;&gt;Cedar-Agent&lt;/a&gt; and OPAL come in.&lt;/p&gt; &#xA;&lt;p&gt;This &lt;a href=&#34;https://youtu.be/tG8jrdcc7Zo&#34;&gt;video&lt;/a&gt; briefly explains OPAL and how it works with OPA, and a deeper dive into it at &lt;a href=&#34;https://www.youtube.com/watch?v=1_Iz0tRQCH4&#34;&gt;this OWASP DevSlop talk&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Who&#39;s Using OPAL?&lt;/h2&gt; &#xA;&lt;p&gt;OPAL is being used as the core engine of Permit.io Authorization Service and serves in production:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&amp;gt; 10,000 policy engines deployment&lt;/li&gt; &#xA; &lt;li&gt;&amp;gt; 100,000 policy changes and data synchronizations every day&lt;/li&gt; &#xA; &lt;li&gt;&amp;gt; 10,000,000 authorization checks every day&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Besides Permit, OPAL is being used in Production in &lt;strong&gt;Tesla&lt;/strong&gt;, &lt;strong&gt;Walmart&lt;/strong&gt;, &lt;strong&gt;The NBA&lt;/strong&gt;, &lt;strong&gt;Intel&lt;/strong&gt;, &lt;strong&gt;Cisco&lt;/strong&gt;, &lt;strong&gt;Live-Oak Bank&lt;/strong&gt;, and thousands of other development teams and companies of all sizes.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;📃 &amp;nbsp; &lt;a href=&#34;https://docs.opal.ac&#34;&gt;Full documentation is available here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;💡 &amp;nbsp; &lt;a href=&#34;https://docs.opal.ac/getting-started/intro&#34;&gt;Intro to OPAL&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🚀 &amp;nbsp; Getting Started:&lt;/p&gt; &lt;p&gt;OPAL is available both as &lt;strong&gt;python packages&lt;/strong&gt; with a built-in CLI as well as pre-built &lt;strong&gt;docker images&lt;/strong&gt; ready-to-go.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.opal.ac/getting-started/quickstart/opal-playground/overview&#34;&gt;Play with a live playground environment in docker-compose&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;!-- - this tutorial is great for learning about OPAL core features and see what OPAL can do for you. --&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.opal.ac/getting-started/running-opal/overview&#34;&gt;Try the getting started guide for containers&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;!-- - this tutorial will show you how to configure OPAL to your specific needs and run the official docker containers locally or in production. --&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/permitio/opal-helm-chart&#34;&gt;Check out the Helm Chart for Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A video demo of OPAL is available &lt;a href=&#34;https://www.youtube.com/watch?v=IkR6EGY3QfM&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also check out this webinar and Q&amp;amp;A about OPAL &lt;a href=&#34;https://www.youtube.com/watch?v=A5adHlkmdC0&amp;amp;t=1s&#34;&gt;on our YouTube channel&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;💪 &amp;nbsp; TL;DR - This one command will download and run a working configuration of OPAL server and OPAL client on your machine:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -L https://raw.githubusercontent.com/permitio/opal/master/docker/docker-compose-example.yml \&#xA;&amp;gt; docker-compose.yml &amp;amp;&amp;amp; docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://asciinema.org/a/409288&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://asciinema.org/a/409288.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;🧠 &amp;nbsp; &#34;How-To&#34;s&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.opal.ac/getting-started/running-opal/as-python-package/overview&#34;&gt;How to get started with OPAL (Packages and CLI)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.opal.ac/getting-started/running-opal/overview&#34;&gt;How to get started with OPAL (Container Images)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.opal.ac/tutorials/trigger_data_updates&#34;&gt;How to trigger Data Updates via OPAL&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.opal.ac/tutorials/write_your_own_fetch_provider&#34;&gt;How to extend OPAL to fetch data from your sources with FetchProviders&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.opal.ac/tutorials/configure_opal&#34;&gt;How to configure OPAL (basic concepts)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.permit.io/blog/scaling-authorization-with-cedar-and-opal&#34;&gt;How to Use OPAL with Cedar in a Multi-Language Project&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🎨 &amp;nbsp; &lt;a href=&#34;https://docs.opal.ac/overview/design&#34;&gt;Key concepts and design&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🏗️ &amp;nbsp; &lt;a href=&#34;https://docs.opal.ac/overview/architecture&#34;&gt;Architecture&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;📖 For further reading, check out our &lt;a href=&#34;https://io.permit.io/opal-readme-blog&#34;&gt;Blog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;We would love to chat with you about OPAL. &lt;a href=&#34;https://io.permit.io/opal-readme-slack&#34;&gt;Join our Slack community&lt;/a&gt; to chat about authorization, open-source, realtime communication, tech, or anything else!&lt;/p&gt; &#xA;&lt;p&gt;You can raise questions and ask for features to be added to the road-map in our &lt;a href=&#34;https://github.com/permitio/opal/discussions&#34;&gt;&lt;strong&gt;Github discussions&lt;/strong&gt;&lt;/a&gt;, report issues in &lt;a href=&#34;https://github.com/permitio/opal/issues&#34;&gt;&lt;strong&gt;Github issues&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; If you like our project, please consider giving us a ⭐️ &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://io.permit.io/join_community&#34;&gt;&lt;img src=&#34;https://i.ibb.co/wzrGHQL/Group-749.png&#34; alt=&#34;Button&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://twitter.com/opal_ac&#34;&gt;&lt;img src=&#34;https://i.ibb.co/k4x55Lr/Group-750.png&#34; alt=&#34;Button&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to OPAL&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pull requests are welcome! (please make sure to include &lt;em&gt;passing&lt;/em&gt; tests and docs)&lt;/li&gt; &#xA; &lt;li&gt;Prior to submitting a PR - open an issue on GitHub, or make sure your PR addresses an existing issue well.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;There&#39;s more!&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check out &lt;a href=&#34;https://github.com/permitio/OPToggles&#34;&gt;OPToggles&lt;/a&gt;, which enables you to create user targeted feature flags/toggles based on Open Policy managed authorization rules!&lt;/li&gt; &#xA; &lt;li&gt;Check out &lt;a href=&#34;https://github.com/permitio/cedar-agent&#34;&gt;Cedar-Agent&lt;/a&gt;, the easiest way to deploy &amp;amp; run AWS Cedar.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>THUDM/AutoWebGLM</title>
    <updated>2024-10-28T01:38:57Z</updated>
    <id>tag:github.com,2024-10-28:/THUDM/AutoWebGLM</id>
    <link href="https://github.com/THUDM/AutoWebGLM" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An LLM-based Web Navigating Agent (KDD&#39;24)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AutoWebGLM: A Large Language Model-based Web Navigating Agent&lt;/h1&gt; &#xA;&lt;p&gt;This is the official implementation of AutoWebGLM. If you find our open-sourced efforts useful, please 🌟 the repo to encourage our following development!&lt;/p&gt; &#xA;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/THUDM/AutoWebGLM/main/assets/framework.png&#34; alt=&#34;paper&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;AutoWebGLM is a project aimed at building a more efficient language model-driven automated web navigation agent. This project is built on top of the ChatGLM3-6B model, extending its capabilities to navigate the web more effectively and tackle real-world browsing challenges better.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;HTML Simplification Algorithm&lt;/strong&gt;: Inspired by human browsing patterns, we&#39;ve designed an algorithm to simplify HTML, making webpages more digestible for LLM agents while preserving crucial information.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hybrid Human-AI Training&lt;/strong&gt;: We combine human and AI knowledge to build web browsing data for curriculum training, enhancing the model&#39;s practical navigation skills.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reinforcement Learning and Rejection Sampling&lt;/strong&gt;: We enhance the model&#39;s webpage comprehension, browser operations, and efficient task decomposition abilities by bootstrapping it with reinforcement learning and rejection sampling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bilingual Web Navigation Benchmark&lt;/strong&gt;: We introduce AutoWebBench—a bilingual (Chinese and English) benchmark for real-world web browsing tasks. This benchmark provides a robust tool for testing and refining the capabilities of AI web navigation agents.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Evaluation&lt;/h1&gt; &#xA;&lt;p&gt;We have publicly disclosed our evaluation code, data, and environment. You may conduct the experiment using the following code.&lt;/p&gt; &#xA;&lt;h2&gt;AutoWebBench &amp;amp; Mind2Web&lt;/h2&gt; &#xA;&lt;p&gt;You can find our evaluation datasets at &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AutoWebGLM/main/autowebbench/&#34; alt=&#34;autowebbench&#34;&gt;AutoWebBench&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AutoWebGLM/main/mind2web/&#34; alt=&#34;mind2web&#34;&gt;Mind2Web&lt;/a&gt;. For the code to perform model inference, please refer to &lt;a href=&#34;https://huggingface.co/THUDM/chatglm3-6b&#34; alt=&#34;chatglm3-6b&#34;&gt;ChatGLM3-6B&lt;/a&gt;. After obtaining the output file, the score can be obtained through &lt;code&gt;python eval.py [result_path]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;WebArena&lt;/h2&gt; &#xA;&lt;p&gt;We have made modifications to the WebArena environment to fit the interaction of our system; see &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AutoWebGLM/main/webarena/&#34; alt=&#34;webarena&#34;&gt;WebArena&lt;/a&gt;. The modifications and execution instructions can be found in &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AutoWebGLM/main/webarena/README.md&#34; alt=&#34;readme&#34;&gt;README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;MiniWob++&lt;/h2&gt; &#xA;&lt;p&gt;We have also made modifications to the MiniWob++ environment, see &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AutoWebGLM/main/miniwob++/&#34; alt=&#34;miniwob++&#34;&gt;MiniWob++&lt;/a&gt;. The modifications and execution instructions can be found in &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AutoWebGLM/main/miniwob++/README.md&#34; alt=&#34;readme&#34;&gt;README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This repository is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AutoWebGLM/main/LICENSE&#34;&gt;Apache-2.0 License&lt;/a&gt;. All open-sourced data is for resarch purpose only.&lt;/p&gt; &#xA;&lt;h1&gt;Citation&lt;/h1&gt; &#xA;&lt;p&gt;If you use this code for your research, please cite our paper.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@inproceedings{lai2024autowebglm,&#xA;    author = {Lai, Hanyu and Liu, Xiao and Iong, Iat Long and Yao, Shuntian and Chen, Yuxuan and Shen, Pengbo and Yu, Hao and Zhang, Hanchen and Zhang, Xiaohan and Dong, Yuxiao and Tang, Jie},&#xA;    title = {AutoWebGLM: A Large Language Model-based Web Navigating Agent},&#xA;    booktitle = {Proceedings of the 30th ACM SIGKDD Conference on Knowledge Discovery and Data Mining},&#xA;    pages = {5295–-5306},&#xA;    year = {2024}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>