<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-10T01:41:25Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>chtmp223/topicGPT</title>
    <updated>2023-11-10T01:41:25Z</updated>
    <id>tag:github.com,2023-11-10:/chtmp223/topicGPT</id>
    <link href="https://github.com/chtmp223/topicGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Code &amp; Prompts for TopicGPT paper (Pham et al. 2023)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TopicGPT&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains scripts and prompts for our paper &lt;a href=&#34;https://arxiv.org/abs/2311.01449&#34;&gt;&#34;TopicGPT: Topic Modeling by Prompting Large Language Models&#34;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/chtmp223/topicGPT/main/pipeline.png&#34; alt=&#34;TopicGPT Pipeline Overview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Updates&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[02/11/23] Basic pipeline is uploaded. Refinement and second-level topic generation code are coming soon.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the requirements: &lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set your OpenAI key according to &lt;a href=&#34;https://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety&#34;&gt;this article&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Refer to &lt;a href=&#34;https://openai.com/pricing/&#34;&gt;https://openai.com/pricing/&lt;/a&gt; for OpenAI API pricing or to &lt;a href=&#34;https://blog.perplexity.ai/blog/introducing-pplx-api&#34;&gt;https://blog.perplexity.ai/blog/introducing-pplx-api&lt;/a&gt; for Perplexity API pricing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Data&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prepare your &lt;code&gt;.jsonl&lt;/code&gt; data file in the following format: &lt;pre&gt;&lt;code&gt;{&#xA;    &#34;id&#34;: &#34;Optional IDs&#34;,&#xA;    &#34;text&#34;: &#34;Documents&#34;,&#xA;    &#34;label&#34;: &#34;Optional ground-truth labels&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Put the data file in &lt;code&gt;data/input&lt;/code&gt;. There is also a sample data file &lt;code&gt;data/input/sample.jsonl&lt;/code&gt; to debug the code.&lt;/li&gt; &#xA; &lt;li&gt;If you want to sample a subset of the data for topic generation, run &lt;code&gt;python script/data.py --data &amp;lt;data_file&amp;gt; --num_samples 1000 --output &amp;lt;output_file&amp;gt;&lt;/code&gt;. This will sample 1000 documents from the data file and save it to &lt;code&gt;&amp;lt;output_file&amp;gt;&lt;/code&gt;. You can also specify &lt;code&gt;--num_samples&lt;/code&gt; to sample a different number of documents, see the paper for more detail.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Pipeline&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can either run &lt;code&gt;script/run.sh&lt;/code&gt; to run the entire pipeline or run each step individually. See the notebook in &lt;code&gt;script/example.ipynb&lt;/code&gt; for a step-by-step guide.&lt;/li&gt; &#xA; &lt;li&gt;Topic generation: Modify the prompts according to the templates in &lt;code&gt;templates/generation_1.txt&lt;/code&gt; and &lt;code&gt;templates/seed_1.md&lt;/code&gt;. Then, to run topic generation, do: &lt;pre&gt;&lt;code&gt;python3 script/generation_1.py --deployment_name gpt-4 \&#xA;                        --max_tokens 300 --temperature 0.0 --top_p 0.0 \&#xA;                        --data data/input/sample.jsonl \&#xA;                        --prompt_file prompt/generation_1.txt \&#xA;                        --seed_file prompt/seed_1.md \&#xA;                        --out_file data/output/generation_1.jsonl \&#xA;                        --topic_file data/output/generation_1.md \&#xA;                        --verbose True&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Topic assignment: Modify the prompts according to the templates in &lt;code&gt;templates/assignment.txt&lt;/code&gt;. Then, to run topic assignment, do: &lt;pre&gt;&lt;code&gt;python3 script/assignment.py --deployment_name gpt-3.5-turbo \&#xA;                        --max_tokens 300 --temperature 0.0 --top_p 0.0 \&#xA;                        --data data/input/sample.jsonl \&#xA;                        --prompt_file prompt/assignment.txt \&#xA;                        --topic_file data/output/generation_1.md \&#xA;                        --out_file data/output/assignment.jsonl \&#xA;                        --verbose True&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Topic correction: If the assignment contains errors or hallucinated topics, modify the prompts according to the templates in &lt;code&gt;templates/correction.txt&lt;/code&gt; (note that this prompt is very similar to the assignment prompt, only adding a &lt;code&gt;{Message}&lt;/code&gt; field towards the end of the prompt). Then, to run topic correction, do: &lt;pre&gt;&lt;code&gt;python3 script/correction.py --deployment_name gpt-3.5-turbo \&#xA;                        --max_tokens 300 --temperature 0.0 --top_p 0.0 \&#xA;                        --data data/output/assignment.jsonl \&#xA;                        --prompt_file prompt/correction.txt \&#xA;                        --topic_file data/output/generation_1.md \&#xA;                        --out_file data/output/assignment_corrected.jsonl \&#xA;                        --verbose True&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cite&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{pham2023topicgpt,&#xA;      title={TopicGPT: A Prompt-based Topic Modeling Framework}, &#xA;      author={Chau Minh Pham and Alexander Hoyle and Simeng Sun and Mohit Iyyer},&#xA;      year={2023},&#xA;      eprint={2311.01449},&#xA;      archivePrefix={arXiv},&#xA;      primaryClass={cs.CL}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>0-8-4/miui-auto-tasks</title>
    <updated>2023-11-10T01:41:25Z</updated>
    <id>tag:github.com,2023-11-10:/0-8-4/miui-auto-tasks</id>
    <link href="https://github.com/0-8-4/miui-auto-tasks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个自动化完成小米社区任务的脚本&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MIUI Task&lt;/h1&gt; &#xA;&lt;p&gt;一个适用于 社区 4.0 模拟网络功能请求的脚本&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://996.icu&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/link-996.icu-red.svg?sanitize=true&#34; alt=&#34;996.icu&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/license/0-8-4/miui-auto-tasks&#34; alt=&#34;GitHub&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/python-3.7+-blue&#34; alt=&#34;Python&#34;&gt; &lt;img src=&#34;https://github.com/0-8-4/miui-auto-tasks/actions/workflows/docker-image.yml/badge.svg?sanitize=true&#34; alt=&#34;DockerHub&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;我们收到反馈，部分用户已收到通知要求不得继续随意调用社区接口，否则社区账户将被永久封禁。&lt;br&gt;鉴于以上情况，我们作为项目维护者建议停用脚本。&lt;br&gt;感谢大家的支持，谢谢所有Star和Fork的人。&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;strong&gt;关于项目&lt;/strong&gt;:&lt;/h2&gt; &#xA;&lt;p&gt;受&lt;code&gt;東雲研究所&lt;/code&gt; 的某位大佬启发&lt;br&gt; 最初的源码由大佬授权 &lt;code&gt;0-8-4&lt;/code&gt; 使用 &lt;code&gt;MIT&lt;/code&gt; 开源&lt;br&gt; 项目初期由&lt;code&gt;0-8-4&lt;/code&gt; 和 &lt;code&gt;TardisLX&lt;/code&gt; 进行维护，现已逐渐转为社区驱动 我们认为社区无权在无任何回报的情况下强制要求内测用户完成 KPI 任务，因此诞生了这个脚本&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;重要声明&lt;/strong&gt;:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;虽然理论上本脚本不会影响社区账户安全，但您需要自行承担使用本脚本的后果&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;我们不鼓励，不支持一切商业使用&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;鉴于项目的特殊性，我们可能在任何时间 &lt;strong&gt;停止更新&lt;/strong&gt; 或 &lt;strong&gt;删除项目&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;使用说明&lt;/strong&gt;：&lt;/h3&gt; &#xA;&lt;p&gt;项目支持本地、Docker、青龙面板等部署方式，详细使用说明请参见 &lt;strong&gt;&lt;a href=&#34;https://github.com/0-8-4/miui-auto-tasks/wiki&#34;&gt;WiKi&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;项目依赖&lt;/strong&gt;：&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;需要前往 Python 官网自行下载自己系统对应的 Python 版本，或使用自己系统对应的包管理安装，推荐至少 Python 3.7 以上&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://www.python.org/downloads/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Python 3 安装完成之后，请在 &lt;strong&gt;项目目录&lt;/strong&gt; 执行以下命令安装所需模块&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;注意：你可能需要使用管理员权限运行命令行&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;快速上手&lt;/strong&gt;：&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;配置好 &lt;code&gt;config.yaml&lt;/code&gt; 文件，并与 &lt;code&gt;miuitask.py&lt;/code&gt; 文件放在同一个目录下&lt;/li&gt; &#xA; &lt;li&gt;使用终端 在 &lt;code&gt;miuitask.py&lt;/code&gt; 所在目录下运行如下命令：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 miuitask.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;strong&gt;项目介绍&lt;/strong&gt;：&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持 多账号 配置&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持 Docker 部署&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持 青龙面板 部署&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持 自动登录账号刷新社区 Cookie 以便于实现自动化&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 绝大多数功能均可在配置文件中自行开关启用&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;⚠&amp;nbsp;请注意，配置文件默认禁用了 MIUI Task 绝大多数模拟网络请求的功能能力，请注意修改配置文件按需启用。根据社区相关规则，模拟这些功能的网络请求可能存在一定风险。您需要自行承担使用本脚本的后果&lt;/p&gt; &#xA;&lt;h4&gt;&lt;strong&gt;其他&lt;/strong&gt;：&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在使用本脚本时请临时关闭网络代理工具及广告拦截程序&lt;/li&gt; &#xA; &lt;li&gt;在服务器上使用前建议先使用服务器IP登录 &lt;code&gt;https://account.xiaomi.com&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;如需定时自动化建议配合 Python3 及 Crontab 使用&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;欢迎提供有关的思路，提交BUG以及更多完成社区其他任务方式，我们会认真对待~&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;strong&gt;贡献&lt;/strong&gt;：&lt;/h4&gt; &#xA;&lt;p&gt;如果你在使用过程中发现任何问题，可以使用模板 &lt;a href=&#34;https://github.com/0-8-4/miui-auto-tasks/issues/new&#34;&gt;提交 issue&lt;/a&gt; 或自行 Fork 修改后提交 Pull request&lt;/p&gt; &#xA;&lt;p&gt;如果你要提交 Pull request，请确保你的代码风格和项目已有的代码保持一致，遵循 &lt;a href=&#34;https://www.python.org/dev/peps/pep-0008&#34;&gt;PEP 8&lt;/a&gt; ，变量命名清晰，有适当的注释&lt;/p&gt; &#xA;&lt;h1&gt;&lt;strong&gt;License&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;MIT License&#xA;&#xA;Copyright (c) 2021 東雲研究所&#xA;&#xA;Permission is hereby granted, free of charge, to any person obtaining a copy&#xA;of this software and associated documentation files (the &#34;Software&#34;), to deal&#xA;in the Software without restriction, including without limitation the rights&#xA;to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&#xA;copies of the Software, and to permit persons to whom the Software is&#xA;furnished to do so, subject to the following conditions:&#xA;&#xA;The above copyright notice and this permission notice shall be included in all&#xA;copies or substantial portions of the Software.&#xA;&#xA;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#xA;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#xA;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#xA;AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#xA;LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&#xA;OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE&#xA;SOFTWARE.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;&lt;strong&gt;鸣谢&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;社区&lt;/h2&gt; &#xA;&lt;p&gt;本项目所有贡献者感谢所有Star了本项目的人&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#0-8-4/miui-auto-tasks&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=0-8-4/miui-auto-tasks&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;JetBrains&lt;/h2&gt; &#xA;&lt;p&gt;特别感谢 &lt;a href=&#34;https://www.jetbrains.com/&#34;&gt;JetBrains&lt;/a&gt; 为开源项目提供免费的 &lt;a href=&#34;https://www.jetbrains.com/pycharm/&#34;&gt;PyCharm&lt;/a&gt; 等 IDE 的授权&lt;br&gt; &lt;a href=&#34;https://www.jetbrains.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/0-8-4/miui-auto-tasks/master/.github/md_pic/jetbrains-variant-3.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>locustio/locust</title>
    <updated>2023-11-10T01:41:25Z</updated>
    <id>tag:github.com,2023-11-10:/locustio/locust</id>
    <link href="https://github.com/locustio/locust" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Write scalable load tests in plain Python 🚗💨&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Locust&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.org/project/locust/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/locust.svg?sanitize=true&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/locust/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/locust.svg?sanitize=true&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/locustio/locust/actions?query=workflow%3ATests&#34;&gt;&lt;img src=&#34;https://github.com/locustio/locust/workflows/Tests/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/locustio/locust/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/locustio/locust.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/locustio/locust/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/locustio/locust.svg?sanitize=true&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/support-ukraine/support-ukraine&#34;&gt;&lt;img src=&#34;https://bit.ly/support-ukraine-now&#34; alt=&#34;Support Ukraine Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Locust is an easy to use, scriptable and scalable performance testing tool. You define the behaviour of your users in regular Python code, instead of being constrained by a UI or domain specific language that only pretends to be real code. This makes Locust infinitely expandable and very developer friendly.&lt;/p&gt; &#xA;&lt;p&gt;To get started right away, head over to the &lt;a href=&#34;http://docs.locust.io/en/stable/installation.html&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h4&gt;Write user test scenarios in plain old Python&lt;/h4&gt; &#xA;&lt;p&gt;If you want your users to loop, perform some conditional behaviour or do some calculations, you just use the regular programming constructs provided by Python. Locust runs every user inside its own greenlet (a lightweight process/coroutine). This enables you to write your tests like normal (blocking) Python code instead of having to use callbacks or some other mechanism. Because your scenarios are “just python” you can use your regular IDE, and version control your tests as regular code (as opposed to some other tools that use XML or binary formats)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from locust import HttpUser, task, between&#xA;&#xA;class QuickstartUser(HttpUser):&#xA;    wait_time = between(1, 2)&#xA;&#xA;    def on_start(self):&#xA;        self.client.post(&#34;/login&#34;, json={&#34;username&#34;:&#34;foo&#34;, &#34;password&#34;:&#34;bar&#34;})&#xA;&#xA;    @task&#xA;    def hello_world(self):&#xA;        self.client.get(&#34;/hello&#34;)&#xA;        self.client.get(&#34;/world&#34;)&#xA;&#xA;    @task(3)&#xA;    def view_item(self):&#xA;        for item_id in range(10):&#xA;            self.client.get(f&#34;/item?id={item_id}&#34;, name=&#34;/item&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Distributed &amp;amp; Scalable - supports hundreds of thousands of users&lt;/h4&gt; &#xA;&lt;p&gt;Locust makes it easy to run load tests distributed over multiple machines. It is event-based (using &lt;a href=&#34;http://www.gevent.org/&#34;&gt;gevent&lt;/a&gt;), which makes it possible for a single process to handle many thousands concurrent users. While there may be other tools that are capable of doing more requests per second on a given hardware, the low overhead of each Locust user makes it very suitable for testing highly concurrent workloads.&lt;/p&gt; &#xA;&lt;h4&gt;Web-based UI&lt;/h4&gt; &#xA;&lt;p&gt;Locust has a user friendly web interface that shows the progress of your test in real-time. You can even change the load while the test is running. It can also be run without the UI, making it easy to use for CI/CD testing.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/locustio/locust/master/locust/static/img/ui-screenshot-charts.png&#34; alt=&#34;Locust UI charts&#34; width=&#34;200&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/locustio/locust/master/locust/static/img/ui-screenshot-stats.png&#34; alt=&#34;Locust UI stats&#34; width=&#34;200&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/locustio/locust/master/locust/static/img/ui-screenshot-workers.png&#34; alt=&#34;Locust UI workers&#34; width=&#34;200&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/locustio/locust/master/locust/static/img/ui-screenshot-start-test.png&#34; alt=&#34;Locust UI start test&#34; width=&#34;200&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Can test any system&lt;/h4&gt; &#xA;&lt;p&gt;Even though Locust primarily works with web sites/services, it can be used to test almost any system or protocol. Just &lt;a href=&#34;https://docs.locust.io/en/latest/testing-other-systems.html#testing-other-systems&#34;&gt;write a client&lt;/a&gt; for what you want to test, or &lt;a href=&#34;https://github.com/SvenskaSpel/locust-plugins#users&#34;&gt;explore some created by the community&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Hackable&lt;/h2&gt; &#xA;&lt;p&gt;Locust&#39;s code base is intentionally kept small and doesn&#39;t solve everything out of the box. Instead, we try to make it easy to adapt to any situation you may come across, using regular Python code. There is nothing stopping you from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SvenskaSpel/locust-plugins/raw/master/locust_plugins/dashboards/README.md&#34;&gt;Send real time reporting data to TimescaleDB and visualize it in Grafana&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SvenskaSpel/locust-plugins/raw/8af21862d8129a5c3b17559677fe92192e312d8f/examples/rest_ex.py#L87&#34;&gt;Wrap calls to handle the peculiarities of your REST API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.locust.io/en/latest/custom-load-shape.html#custom-load-shape&#34;&gt;Use a totally custom load shape/profile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;https://locust.io&#34;&gt;locust.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Documentation: &lt;a href=&#34;https://docs.locust.io&#34;&gt;docs.locust.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Support/Questions: &lt;a href=&#34;https://stackoverflow.com/questions/tagged/locust&#34;&gt;StackOverflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Code/issues: &lt;a href=&#34;https://github.com/locustio/locust&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chat/discussion: &lt;a href=&#34;https://locustio.slack.com&#34;&gt;Slack&lt;/a&gt; &lt;a href=&#34;https://communityinviter.com/apps/locustio/locust&#34;&gt;(signup)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cgbystrom.com&#34;&gt;Carl Byström&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/cgbystrom&#34;&gt;@cgbystrom&lt;/a&gt; on Twitter)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://heyman.info&#34;&gt;Jonatan Heyman&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/jonatanheyman&#34;&gt;@jonatanheyman&lt;/a&gt; on Twitter)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Jahaja&#34;&gt;Joakim Hamrén&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/Jahaaja&#34;&gt;@Jahaaja&lt;/a&gt; on Twitter)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HeyHugo&#34;&gt;Hugo Heyman&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/hugoheyman&#34;&gt;@hugoheyman&lt;/a&gt; on Twitter)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cyberw&#34;&gt;Lars Holmberg&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Open source licensed under the MIT license (see &lt;em&gt;LICENSE&lt;/em&gt; file for details).&lt;/p&gt;</summary>
  </entry>
</feed>