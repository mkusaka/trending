<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-19T01:34:27Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zhenglinpan/SakugaDataset</title>
    <updated>2024-05-19T01:34:27Z</updated>
    <id>tag:github.com,2024-05-19:/zhenglinpan/SakugaDataset</id>
    <link href="https://github.com/zhenglinpan/SakugaDataset" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official Repository for Sakuga-42M Dataset&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/img/teaser.png&#34; alt=&#34;img1&#34;&gt;&lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2405.07425&#34;&gt;Sakuga-42M Dataset: Scaling Up Cartoon Research&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/zhenglinpan&#34;&gt;Zhenglin Pan&lt;/a&gt;, &lt;a href=&#34;https://github.com/UNKNOWNTIMER&#34;&gt;Yu Zhu&lt;/a&gt;, &lt;a href=&#34;https://yxmu.foo&#34;&gt;Yuxuan Mu&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2405.07425&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/cs.CV-2405.07425-b31b1b?logo=arxiv&amp;amp;logoColor=red&#34; alt=&#34;Paper&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://zhenglinpan.github.io/Sakuga_42M/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Project-Website-green&#34; alt=&#34;Project Page&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/datasets/aidenpan/Sakuga-42M&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20huggingface-Datasets-orange&#34; alt=&#34;Paper&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-CC_BY_NC_SA_4.0-blue&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/img/icon.png&#34; alt=&#34;Icon&#34; width=&#34;20&#34; height=&#34;20&#34;&gt; Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This is the official GitHub repository of &lt;strong&gt;Sakuga-42M Dataset&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Sakuga-42M Dataset&lt;/strong&gt; is the first large-scale cartoon animation dataset, comprising 42 million keyframes. We hope that our efforts in providing this fundamental dataset could somehow alleviate the data scarcity that has haunted this research domain for years and make it possible to introduce large-scale models and approaches that lead to more robust and transferable applications, which could help animators create more easily.&lt;/p&gt; &#xA;&lt;p&gt;We anticipate more researchers join us on this journey to explore the potential of cartoon animation research. Suggestions and contributions are always welcome.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;note:&lt;/strong&gt; We are still working on the repo&amp;amp;website, so please stay tuned for more updates!😉&lt;/p&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/img/icon.png&#34; alt=&#34;Icon&#34; width=&#34;20&#34; height=&#34;20&#34;&gt; TO-DO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Release the dataset parquet files&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Release the dataset preparation codes&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Release the pre-trained models&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Release the tagging/rating, captioning, and text detection pipelines&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/img/icon.png&#34; alt=&#34;Icon&#34; width=&#34;20&#34; height=&#34;20&#34;&gt; Download&lt;/h2&gt; &#xA;&lt;h3&gt;Dataset&lt;/h3&gt; &#xA;&lt;p&gt;Thank you guys for your enthusiasm😊! Many researchers are paying attention to our work, which is a positive development for animation research! You can fill out &lt;a href=&#34;https://forms.gle/EwcaNGy4H7HCZYu86&#34;&gt;this form&lt;/a&gt; to apply for the dataset parquet files, and we will send the download links via email to academic researchers.&lt;/p&gt; &#xA;&lt;h4&gt;👉Important👈&lt;/h4&gt; &#xA;&lt;p&gt;[&lt;strong&gt;May 16, 2024 Update&lt;/strong&gt;] Due to the recently added anti-bot measures by the data holders, our downloading pipeline is no longer working. The video links are still accessible through a browser but not via our python crawler. We are working on a workaround and will make an update once we find one. &lt;strong&gt;At this time, we are still providing the parquet files to researchers, but researchers will need to find a way obtain the video data.&lt;/strong&gt; Thank you for your understanding.&lt;/p&gt; &#xA;&lt;h4&gt;Dataset Information&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Split&lt;/th&gt; &#xA;   &lt;th&gt;Download&lt;/th&gt; &#xA;   &lt;th&gt;# Keyframes&lt;/th&gt; &#xA;   &lt;th&gt;# Clips&lt;/th&gt; &#xA;   &lt;th&gt;# Videos&lt;/th&gt; &#xA;   &lt;th&gt;Storage&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Training(Full)&lt;/td&gt; &#xA;   &lt;td&gt;link (529 MB)&lt;/td&gt; &#xA;   &lt;td&gt;38,137,371&lt;/td&gt; &#xA;   &lt;td&gt;1,117,898&lt;/td&gt; &#xA;   &lt;td&gt;142,089&lt;/td&gt; &#xA;   &lt;td&gt;~441 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Training (Aesthetic)&lt;/td&gt; &#xA;   &lt;td&gt;link (74.5 MB)&lt;/td&gt; &#xA;   &lt;td&gt;6,154,562&lt;/td&gt; &#xA;   &lt;td&gt;139,989&lt;/td&gt; &#xA;   &lt;td&gt;61,273&lt;/td&gt; &#xA;   &lt;td&gt;~56 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Training (Small)&lt;/td&gt; &#xA;   &lt;td&gt;link (53.6 MB)&lt;/td&gt; &#xA;   &lt;td&gt;3,811,189&lt;/td&gt; &#xA;   &lt;td&gt;111,790&lt;/td&gt; &#xA;   &lt;td&gt;68,326&lt;/td&gt; &#xA;   &lt;td&gt;~45 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Validation&lt;/td&gt; &#xA;   &lt;td&gt;link (28.6 MB)&lt;/td&gt; &#xA;   &lt;td&gt;2,035,853&lt;/td&gt; &#xA;   &lt;td&gt;59,717&lt;/td&gt; &#xA;   &lt;td&gt;44,564&lt;/td&gt; &#xA;   &lt;td&gt;~25 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Testing&lt;/td&gt; &#xA;   &lt;td&gt;link (28.5 MB)&lt;/td&gt; &#xA;   &lt;td&gt;2,018,545&lt;/td&gt; &#xA;   &lt;td&gt;59,718&lt;/td&gt; &#xA;   &lt;td&gt;44,247&lt;/td&gt; &#xA;   &lt;td&gt;~25 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/img/icon.png&#34; alt=&#34;Icon&#34; width=&#34;20&#34; height=&#34;20&#34;&gt; Preperation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/img/pipeline.png&#34; alt=&#34;img1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please follow the instructions below to prepare the complete dataset.&lt;/p&gt; &#xA;&lt;h4&gt;1. Setup environment&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/zhenglinpan/SakugaDataset.git&#xA;cd SakugaDataset&#xA;&#xA;conda create -n sakuga -y&#xA;conda activate sakuga&#xA;&#xA;pip install -r requirement.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Download Dataset&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Fill out &lt;a href=&#34;https://forms.gle/EwcaNGy4H7HCZYu86&#34;&gt;this form&lt;/a&gt; to apply for the dataset parquet files.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the parquet files from the following links and put them into &lt;code&gt;./download/parquet&lt;/code&gt; folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the videos from the links provided in the parquet files and put them into &lt;code&gt;./download/videos&lt;/code&gt; folder. You can use the following command to show the url links of the dataset videos:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd download&#xA;python demo.py&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Split Videos&lt;/h4&gt; &#xA;&lt;p&gt;Our parquet files contains clip boundary information so users don&#39;t need to do the boudary detection again. Run the code to split videos into smaller clips:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd prepare_dataset&#xA;python split_video.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;4. Extract Keyframes&lt;/h4&gt; &#xA;&lt;p&gt;And remove the repetitive frames:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd prepare_dataset&#xA;python detect_keyframes.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;5. Good-To-Go !&lt;/h4&gt; &#xA;&lt;p&gt;At this time, you should have the dataset ready for your research. Enjoy!&lt;/p&gt; &#xA;&lt;p&gt;We will be releasing the code for our tagging/rating, captioning, and text detection in near future in case users want to expand the dataset. Stay tuned.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/img/icon.png&#34; alt=&#34;Icon&#34; width=&#34;20&#34; height=&#34;20&#34;&gt; Supporting Research&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/img/future_research.png&#34; alt=&#34;img1&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/img/icon.png&#34; alt=&#34;Icon&#34; width=&#34;20&#34; height=&#34;20&#34;&gt; Demonstration&lt;/h2&gt; &#xA;&lt;h3&gt;Diversity&lt;/h3&gt; &#xA;&lt;table class=&#34;center&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr style=&#34;text-align: center;&#34;&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none; font-weight: bold;&#34;&gt;Rough Sketch&lt;/td&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none; font-weight: bold;&#34;&gt;Tiedown(TP)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/gif/rough.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/gif/undead_unluck.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table class=&#34;center&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr style=&#34;text-align: center;&#34;&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none; font-weight: bold;&#34;&gt;Western&lt;/td&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none; font-weight: bold;&#34;&gt;Asian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/gif/mickey.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/gif/miyamori.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table class=&#34;center&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr style=&#34;text-align: center;&#34;&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none; font-weight: bold;&#34;&gt;Cell-Look&lt;/td&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none; font-weight: bold;&#34;&gt;Illus-Look&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/gif/sakura.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/gif/diamond.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Video-Text Descriptions Pairs&lt;/h3&gt; &#xA;&lt;table class=&#34;center&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/blob/main/assets/gif/♪❤muteki❤no❤idoru❤♪-Scene-0091_1_fps14.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/gif/cthulhu_musume_(zannenn)-Scene-0021_1_fps14.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/blob/main/assets/gif/👓miraiinaimiraiwawatashigahoshikunainnda!👓-Scene-0011_1_fps14.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr style=&#34;text-align: center;&#34;&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;multiple girls with blonde, red, and brown hair, wearing idol outfits, dance in a line on stage... &lt;/td&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;Nyarlathotep holds out her arms with a glowing face. The second frame shows her in a store..&lt;/td&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;Her hair is now curled back as she smiles, still in the same outfit and setting...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table class=&#34;center&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/gif/naruto!doushida!-Scene-0101_1_fps14.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/gif/bluefat_and_his_friends-Scene-0011_1_fps14.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/blob/main/assets/gif/★pokemon★getto★daze★!-Scene-0081_1_fps14.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr style=&#34;text-align: center;&#34;&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;an anime character kneels on a red surface while a man in white and black stands behind...&lt;/td&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;a diverse group of cartoon characters gathers around a table, enjoying a meal with a variety of dishes...&lt;/td&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;a cute green cat with fangs, tongue, and a smile, jumps with energy and glowing aura...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table class=&#34;center&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/gif/nobitanofriend-Scene-0021_1_fps14.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/gif/ribai!!_1_fps14.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/gif/ekubo!!!-Scene-0021_1_fps14.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr style=&#34;text-align: center;&#34;&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;the dinosaur emerges from the egg shell, curled up in the blanket...&lt;/td&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;in an anime clip, a man in a suit falls from a building, holding onto a rope...&lt;/td&gt; &#xA;   &lt;td width=&#34;33.3%&#34; style=&#34;border: none&#34;&gt;a beam shoots out from his clenched fist in a battle scene. The man, now standing on a hill... &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/img/icon.png&#34; alt=&#34;Icon&#34; width=&#34;20&#34; height=&#34;20&#34;&gt; Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find this project useful for your research, please cite our paper. 🤗&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-latex&#34;&gt;@article{sakuga42m2024,&#xA;    title   = {Sakuga-42M Dataset: Scaling Up Cartoon Research},&#xA;    author  = {Zhenglin Pan, Yu Zhu, Yuxuan Mu},&#xA;    journal = {arXiv preprint arXiv:2405.07425},&#xA;    year    = {2024}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/img/icon.png&#34; alt=&#34;Icon&#34; width=&#34;20&#34; height=&#34;20&#34;&gt; Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Sakuga-42M Dataset is licensed under the &lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License&lt;/a&gt;, and is designed only for academic research purposes, copyrights of images and videos in the dataset are owned by their respective creators, we will remove the works from the dataset upon request to protect the author&#39;s rights.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://github.com/zhenglinpan/SakugaDataset/raw/main/assets/img/icon.png&#34; alt=&#34;Icon&#34; width=&#34;20&#34; height=&#34;20&#34;&gt; Contact&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Zhenglin Pan&lt;/strong&gt;: &lt;a href=&#34;mailto:zhengli3@ualberta.ca&#34;&gt;zhengli3@ualberta.ca&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>JadyXuan/NTTS</title>
    <updated>2024-05-19T01:34:27Z</updated>
    <id>tag:github.com,2024-05-19:/JadyXuan/NTTS</id>
    <link href="https://github.com/JadyXuan/NTTS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NO TIME TO SLEEP&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;There is No Time to Sleep&lt;/h1&gt; &#xA;&lt;h3&gt;没时间睡觉了&lt;/h3&gt; &#xA;&lt;p&gt;还在为ctrl+C时Traceback停在time.sleep()上而感到尴尬吗？在你的项目中引入这个包吧，它会把所有的KeyboardInterrupt输出traceback信息的最后一行替换成model.py，让你的代码看起来就像是在跑一个神经网络模型一样酷炫！&lt;/p&gt; &#xA;&lt;p&gt;Clone本项目到你的工程目录下，然后在你的入口文件代码中import它，其余的什么也不用做！&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import NTTS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后你的代码在ctrl+C时就会给出漂亮的输出&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Traceback (most recent call last):&#xA;  File &#34;d:/GitHub/test.py&#34;, line 14, in &amp;lt;module&amp;gt;&#xA;    a()&#xA;  File &#34;d:/GitHub/test.py&#34;, line 5, in a&#xA;    b()&#xA;  File &#34;d:/GitHub/test.py&#34;, line 9, in b&#xA;    c()&#xA;  File &#34;C:/Users/admin/anaconda3/envs/torch/lib/site-packages/mindx/model.py&#34;, line 23, in c&#xA;    Model.inference(img)&#xA;KeyboardInterrupt&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Tencent/HunyuanDiT</title>
    <updated>2024-05-19T01:34:27Z</updated>
    <id>tag:github.com,2024-05-19:/Tencent/HunyuanDiT</id>
    <link href="https://github.com/Tencent/HunyuanDiT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hunyuan-DiT : A Powerful Multi-Resolution Diffusion Transformer with Fine-Grained Chinese Understanding&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/asset/logo.png&#34; height=&#34;100&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Hunyuan-DiT : A Powerful Multi-Resolution Diffusion Transformer with Fine-Grained Chinese Understanding&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/Tencent/HunyuanDiT&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Hunyuan-DiT Code&amp;amp;message=Github&amp;amp;color=blue&amp;amp;logo=github-pages&#34;&gt;&lt;/a&gt;   &#xA; &lt;a href=&#34;https://dit.hunyuan.tencent.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Project%20Page&amp;amp;message=Github&amp;amp;color=blue&amp;amp;logo=github-pages&#34;&gt;&lt;/a&gt;   &#xA; &lt;a href=&#34;https://arxiv.org/abs/2405.08748&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Tech Report&amp;amp;message=Arxiv:HunYuan-DiT&amp;amp;color=red&amp;amp;logo=arxiv&#34;&gt;&lt;/a&gt;   &#xA; &lt;a href=&#34;https://arxiv.org/abs/2403.08857&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Paper&amp;amp;message=Arxiv:DialogGen&amp;amp;color=red&amp;amp;logo=arxiv&#34;&gt;&lt;/a&gt;   &#xA; &lt;a href=&#34;https://huggingface.co/Tencent-Hunyuan/HunyuanDiT&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Hunyuan-DiT&amp;amp;message=HuggingFace&amp;amp;color=yellow&#34;&gt;&lt;/a&gt;   &#xA; &lt;a href=&#34;https://hunyuan.tencent.com/bot/chat&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Hunyuan Bot&amp;amp;message=Web&amp;amp;color=green&#34;&gt;&lt;/a&gt;   &#xA; &lt;a href=&#34;https://huggingface.co/spaces/Tencent-Hunyuan/HunyuanDiT&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Hunyuan-DiT Demo&amp;amp;message=HuggingFace&amp;amp;color=yellow&#34;&gt;&lt;/a&gt;   &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;This repo contains PyTorch model definitions, pre-trained weights and inference/sampling code for our paper exploring Hunyuan-DiT. You can find more visualizations on our &lt;a href=&#34;https://dit.hunyuan.tencent.com/&#34;&gt;project page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2405.08748&#34;&gt;&lt;strong&gt;Hunyuan-DiT : A Powerful Multi-Resolution Diffusion Transformer with Fine-Grained Chinese Understanding&lt;/strong&gt;&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2403.08857&#34;&gt;&lt;strong&gt;DialogGen:Multi-modal Interactive Dialogue System for Multi-turn Text-to-Image Generation&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🔥🔥🔥 Tencent Hunyuan Bot&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to &lt;a href=&#34;https://hunyuan.tencent.com/bot/chat&#34;&gt;Tencent Hunyuan Bot&lt;/a&gt;, where you can explore our innovative products! Just input the suggested prompts below or any other &lt;strong&gt;imaginative prompts containing drawing-related keywords&lt;/strong&gt; to activate the Hunyuan text-to-image generation feature. Unleash your creativity and create any picture you desire, &lt;strong&gt;all for free!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can use simple prompts similar to natural language text&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;画一只穿着西装的猪&lt;/p&gt; &#xA; &lt;p&gt;draw a pig in a suit&lt;/p&gt; &#xA; &lt;p&gt;生成一幅画，赛博朋克风，跑车&lt;/p&gt; &#xA; &lt;p&gt;generate a painting, cyberpunk style, sports car&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;or multi-turn language interactions to create the picture.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;画一个木制的鸟&lt;/p&gt; &#xA; &lt;p&gt;draw a wooden bird&lt;/p&gt; &#xA; &lt;p&gt;变成玻璃的&lt;/p&gt; &#xA; &lt;p&gt;turn into glass&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;📑 Open-source Plan&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hunyuan-DiT (Text-to-Image Model) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Inference&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Checkpoints&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Distillation Version (Coming soon ⏩️)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; TensorRT Version (Coming soon ⏩️)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Training (Coming later ⏩️)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Centaurusalpha/DialogGen&#34;&gt;DialogGen&lt;/a&gt; (Prompt Enhancement Model) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Inference&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Web Demo (Gradio)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Cli Demo&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/#hunyuan-dit--a-powerful-multi-resolution-diffusion-transformer-with-fine-grained-chinese-understanding&#34;&gt;Hunyuan-DiT&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/#abstract&#34;&gt;Abstract&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/#-hunyuan-dit-key-features&#34;&gt;🎉 Hunyuan-DiT Key Features&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/#chinese-english-bilingual-dit-architecture&#34;&gt;Chinese-English Bilingual DiT Architecture&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/#multi-turn-text2image-generation&#34;&gt;Multi-turn Text2Image Generation&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/#-comparisons&#34;&gt;📈 Comparisons&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/#-visualization&#34;&gt;🎥 Visualization&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/#-requirements&#34;&gt;📜 Requirements&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/#%EF%B8%8F-dependencies-and-installation&#34;&gt;🛠 Dependencies and Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/#-download-pretrained-models&#34;&gt;🧱 Download Pretrained Models&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/#-inference&#34;&gt;🔑 Inference&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/#using-gradio&#34;&gt;Using Gradio&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/#using-command-line&#34;&gt;Using Command Line&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/#more-configurations&#34;&gt;More Configurations&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/#-bibtex&#34;&gt;🔗 BibTeX&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;We present Hunyuan-DiT, a text-to-image diffusion transformer with fine-grained understanding of both English and Chinese. To construct Hunyuan-DiT, we carefully designed the transformer structure, text encoder, and positional encoding. We also build from scratch a whole data pipeline to update and evaluate data for iterative model optimization. For fine-grained language understanding, we train a Multimodal Large Language Model to refine the captions of the images. Finally, Hunyuan-DiT can perform multi-round multi-modal dialogue with users, generating and refining images according to the context. Through our carefully designed holistic human evaluation protocol with more than 50 professional human evaluators, Hunyuan-DiT sets a new state-of-the-art in Chinese-to-image generation compared with other open-source models.&lt;/p&gt; &#xA;&lt;h2&gt;🎉 &lt;strong&gt;Hunyuan-DiT Key Features&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Chinese-English Bilingual DiT Architecture&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Hunyuan-DiT is a diffusion model in the latent space, as depicted in figure below. Following the Latent Diffusion Model, we use a pre-trained Variational Autoencoder (VAE) to compress the images into low-dimensional latent spaces and train a diffusion model to learn the data distribution with diffusion models. Our diffusion model is parameterized with a transformer. To encode the text prompts, we leverage a combination of pre-trained bilingual (English and Chinese) CLIP and multilingual T5 encoder.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/asset/framework.png&#34; height=&#34;450&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Multi-turn Text2Image Generation&lt;/h3&gt; &#xA;&lt;p&gt;Understanding natural language instructions and performing multi-turn interaction with users are important for a text-to-image system. It can help build a dynamic and iterative creation process that bring the user’s idea into reality step by step. In this section, we will detail how we empower Hunyuan-DiT with the ability to perform multi-round conversations and image generation. We train MLLM to understand the multi-round user dialogue and output the new text prompt for image generation.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/asset/mllm.png&#34; height=&#34;300&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;📈 Comparisons&lt;/h2&gt; &#xA;&lt;p&gt;In order to comprehensively compare the generation capabilities of HunyuanDiT and other models, we constructed a 4-dimensional test set, including Text-Image Consistency, Excluding AI Artifacts, Subject Clarity, Aesthetic. More than 50 professional evaluators performs the evaluation.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th rowspan=&#34;2&#34;&gt;Model&lt;/th&gt; &#xA;   &lt;th rowspan=&#34;2&#34;&gt;Open Source&lt;/th&gt; &#xA;   &lt;th&gt;Text-Image Consistency (%)&lt;/th&gt; &#xA;   &lt;th&gt;Excluding AI Artifacts (%)&lt;/th&gt; &#xA;   &lt;th&gt;Subject Clarity (%)&lt;/th&gt; &#xA;   &lt;th rowspan=&#34;2&#34;&gt;Aesthetics (%)&lt;/th&gt; &#xA;   &lt;th rowspan=&#34;2&#34;&gt;Overall (%)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SDXL&lt;/td&gt; &#xA;   &lt;td&gt; ✔ &lt;/td&gt; &#xA;   &lt;td&gt;64.3&lt;/td&gt; &#xA;   &lt;td&gt;60.6&lt;/td&gt; &#xA;   &lt;td&gt;91.1&lt;/td&gt; &#xA;   &lt;td&gt;76.3&lt;/td&gt; &#xA;   &lt;td&gt;42.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PixArt-α&lt;/td&gt; &#xA;   &lt;td&gt; ✔&lt;/td&gt; &#xA;   &lt;td&gt;68.3&lt;/td&gt; &#xA;   &lt;td&gt;60.9&lt;/td&gt; &#xA;   &lt;td&gt;93.2&lt;/td&gt; &#xA;   &lt;td&gt;77.5&lt;/td&gt; &#xA;   &lt;td&gt;45.5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Playground 2.5&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;71.9&lt;/td&gt; &#xA;   &lt;td&gt;70.8&lt;/td&gt; &#xA;   &lt;td&gt;94.9&lt;/td&gt; &#xA;   &lt;td&gt;83.3&lt;/td&gt; &#xA;   &lt;td&gt;54.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SD 3&lt;/td&gt; &#xA;   &lt;td&gt;✘&lt;/td&gt; &#xA;   &lt;td&gt;77.1&lt;/td&gt; &#xA;   &lt;td&gt;69.3&lt;/td&gt; &#xA;   &lt;td&gt;94.6&lt;/td&gt; &#xA;   &lt;td&gt;82.5&lt;/td&gt; &#xA;   &lt;td&gt;56.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MidJourney v6&lt;/td&gt;&#xA;   &lt;td&gt;✘&lt;/td&gt; &#xA;   &lt;td&gt;73.5&lt;/td&gt; &#xA;   &lt;td&gt;80.2&lt;/td&gt; &#xA;   &lt;td&gt;93.5&lt;/td&gt; &#xA;   &lt;td&gt;87.2&lt;/td&gt; &#xA;   &lt;td&gt;63.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DALL-E 3&lt;/td&gt;&#xA;   &lt;td&gt;✘&lt;/td&gt; &#xA;   &lt;td&gt;83.9&lt;/td&gt; &#xA;   &lt;td&gt;80.3&lt;/td&gt; &#xA;   &lt;td&gt;96.5&lt;/td&gt; &#xA;   &lt;td&gt;89.4&lt;/td&gt; &#xA;   &lt;td&gt;71.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr style=&#34;font-weight: bold; background-color: #f2f2f2;&#34;&gt; &#xA;   &lt;td&gt;Hunyuan-DiT&lt;/td&gt;&#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;74.2&lt;/td&gt; &#xA;   &lt;td&gt;74.3&lt;/td&gt; &#xA;   &lt;td&gt;95.4&lt;/td&gt; &#xA;   &lt;td&gt;86.6&lt;/td&gt; &#xA;   &lt;td&gt;59.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🎥 Visualization&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Chinese Elements&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/asset/chinese elements understanding.png&#34; height=&#34;220&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Long Text Input&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/asset/long text understanding.png&#34; height=&#34;310&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-turn Text2Image Generation&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/tencent.github.io/assets/27557933/94b4dcc3-104d-44e1-8bb2-dc55108763d1&#34;&gt;https://github.com/Tencent/tencent.github.io/assets/27557933/94b4dcc3-104d-44e1-8bb2-dc55108763d1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;📜 Requirements&lt;/h2&gt; &#xA;&lt;p&gt;This repo consists of DialogGen (a prompt enhancement model) and Hunyuan-DiT (a text-to-image model).&lt;/p&gt; &#xA;&lt;p&gt;The following table shows the requirements for running the models (The TensorRT version will be updated soon):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Model&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;TensorRT&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Batch Size&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;GPU Memory&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;GPU&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;DialogGen + Hunyuan-DiT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✘&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;32G&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;V100/A100&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hunyuan-DiT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✘&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11G&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;V100/A100&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- | DialogGen + Hunyuan-DiT  |    ✔     |     1      |     ?      |   A100    |&#xA;|       Hunyuan-DiT        |    ✔     |     1      |     ?      |   A100    | --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An NVIDIA GPU with CUDA support is required. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;We have tested V100 and A100 GPUs.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Minimum&lt;/strong&gt;: The minimum GPU memory required is 11GB.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Recommended&lt;/strong&gt;: We recommend using a GPU with 32GB of memory for better generation quality.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Tested operating system: Linux&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🛠️ Dependencies and Installation&lt;/h2&gt; &#xA;&lt;p&gt;Begin by cloning the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/tencent/HunyuanDiT&#xA;cd HunyuanDiT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We provide an &lt;code&gt;environment.yml&lt;/code&gt; file for setting up a Conda environment. Conda&#39;s installation instructions are available &lt;a href=&#34;https://docs.anaconda.com/free/miniconda/index.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 1. Prepare conda environment&#xA;conda env create -f environment.yml&#xA;&#xA;# 2. Activate the environment&#xA;conda activate HunyuanDiT&#xA;&#xA;# 3. Install pip dependencies&#xA;python -m pip install -r requirements.txt&#xA;&#xA;# 4. (Optional) Install flash attention v2 for acceleration (requires CUDA 11.6 or above)&#xA;python -m pip install git+https://github.com/Dao-AILab/flash-attention.git@v2.1.2.post3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🧱 Download Pretrained Models&lt;/h2&gt; &#xA;&lt;p&gt;To download the model, first install the huggingface-cli. (Detailed instructions are available &lt;a href=&#34;https://huggingface.co/docs/huggingface_hub/guides/cli&#34;&gt;here&lt;/a&gt;.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m pip install &#34;huggingface_hub[cli]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then download the model using the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create a directory named &#39;ckpts&#39; where the model will be saved, fulfilling the prerequisites for running the demo.&#xA;mkdir ckpts&#xA;# Use the huggingface-cli tool to download the model.&#xA;# The download time may vary from 10 minutes to 1 hour depending on network conditions.&#xA;huggingface-cli download Tencent-Hunyuan/HunyuanDiT --local-dir ./ckpts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note：If an &lt;code&gt;No such file or directory: &#39;ckpts/.huggingface/.gitignore.lock&#39;&lt;/code&gt; like error occurs during the download process, you can ignore the error and retry the command by executing &lt;code&gt;huggingface-cli download Tencent-Hunyuan/HunyuanDiT --local-dir ./ckpts&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;All models will be automatically downloaded. For more information about the model, visit the Hugging Face repository &lt;a href=&#34;https://huggingface.co/Tencent-Hunyuan/HunyuanDiT&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Model&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;#Params&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Download URL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;mT5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.6B&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://huggingface.co/Tencent-Hunyuan/HunyuanDiT/tree/main/t2i/mt5&#34;&gt;mT5&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CLIP&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;350M&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://huggingface.co/Tencent-Hunyuan/HunyuanDiT/tree/main/t2i/clip_text_encoder&#34;&gt;CLIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;DialogGen&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7.0B&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://huggingface.co/Tencent-Hunyuan/HunyuanDiT/tree/main/dialoggen&#34;&gt;DialogGen&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;sdxl-vae-fp16-fix&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;83M&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://huggingface.co/Tencent-Hunyuan/HunyuanDiT/tree/main/t2i/sdxl-vae-fp16-fix&#34;&gt;sdxl-vae-fp16-fix&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hunyuan-DiT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.5B&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://huggingface.co/Tencent-Hunyuan/HunyuanDiT/tree/main/t2i/model&#34;&gt;Hunyuan-DiT&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🔑 Inference&lt;/h2&gt; &#xA;&lt;h3&gt;Using Gradio&lt;/h3&gt; &#xA;&lt;p&gt;Make sure you have activated the conda environment before running the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# By default, we start a Chinese UI.&#xA;python app/hydit_app.py&#xA;&#xA;# Using Flash Attention for acceleration.&#xA;python app/hydit_app.py --infer-mode fa&#xA;&#xA;# You can disable the enhancement model if the GPU memory is insufficient.&#xA;# The enhancement will be unavailable until you restart the app without the `--no-enhance` flag. &#xA;python app/hydit_app.py --no-enhance&#xA;&#xA;# Start with English UI&#xA;python app/hydit_app.py --lang en&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using Command Line&lt;/h3&gt; &#xA;&lt;p&gt;We provide 3 modes to quick start:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Prompt Enhancement + Text-to-Image. Torch mode&#xA;python sample_t2i.py --prompt &#34;渔舟唱晚&#34;&#xA;&#xA;# Only Text-to-Image. Torch mode&#xA;python sample_t2i.py --prompt &#34;渔舟唱晚&#34; --no-enhance&#xA;&#xA;# Only Text-to-Image. Flash Attention mode&#xA;python sample_t2i.py --infer-mode fa --prompt &#34;渔舟唱晚&#34;&#xA;&#xA;# Generate an image with other image sizes.&#xA;python sample_t2i.py --prompt &#34;渔舟唱晚&#34; --image-size 1280 768&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More example prompts can be found in &lt;a href=&#34;https://raw.githubusercontent.com/Tencent/HunyuanDiT/main/example_prompts.txt&#34;&gt;example_prompts.txt&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;More Configurations&lt;/h3&gt; &#xA;&lt;p&gt;We list some more useful configurations for easy usage:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Argument&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Default&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--prompt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;None&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;The text prompt for image generation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--image-size&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1024 1024&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;The size of the generated image&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--seed&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;42&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;The random seed for generating images&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--infer-steps&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;100&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;The number of steps for sampling&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--negative&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;The negative prompt for image generation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--infer-mode&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;torch&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;The inference mode (torch or fa)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--sampler&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ddpm&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;The diffusion sampler (ddpm, ddim, or dpmms)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--no-enhance&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;False&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Disable the prompt enhancement model&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--model-root&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ckpts&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;The root directory of the model checkpoints&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--load-key&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ema&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Load the student model or EMA model (ema or module)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🔗 BibTeX&lt;/h2&gt; &#xA;&lt;p&gt;If you find &lt;a href=&#34;https://arxiv.org/abs/2405.08748&#34;&gt;Hunyuan-DiT&lt;/a&gt; or &lt;a href=&#34;https://arxiv.org/abs/2403.08857&#34;&gt;DialogGen&lt;/a&gt; useful for your research and applications, please cite using this BibTeX:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-BibTeX&#34;&gt;@misc{li2024hunyuandit,&#xA;      title={Hunyuan-DiT: A Powerful Multi-Resolution Diffusion Transformer with Fine-Grained Chinese Understanding}, &#xA;      author={Zhimin Li and Jianwei Zhang and Qin Lin and Jiangfeng Xiong and Yanxin Long and Xinchi Deng and Yingfang Zhang and Xingchao Liu and Minbin Huang and Zedong Xiao and Dayou Chen and Jiajun He and Jiahao Li and Wenyue Li and Chen Zhang and Rongwei Quan and Jianxiang Lu and Jiabin Huang and Xiaoyan Yuan and Xiaoxiao Zheng and Yixuan Li and Jihong Zhang and Chao Zhang and Meng Chen and Jie Liu and Zheng Fang and Weiyan Wang and Jinbao Xue and Yangyu Tao and Jianchen Zhu and Kai Liu and Sihuan Lin and Yifu Sun and Yun Li and Dongdong Wang and Mingtao Chen and Zhichao Hu and Xiao Xiao and Yan Chen and Yuhong Liu and Wei Liu and Di Wang and Yong Yang and Jie Jiang and Qinglin Lu},&#xA;      year={2024},&#xA;      eprint={2405.08748},&#xA;      archivePrefix={arXiv},&#xA;      primaryClass={cs.CV}&#xA;}&#xA;&#xA;@article{huang2024dialoggen,&#xA;  title={DialogGen: Multi-modal Interactive Dialogue System for Multi-turn Text-to-Image Generation},&#xA;  author={Huang, Minbin and Long, Yanxin and Deng, Xinchi and Chu, Ruihang and Xiong, Jiangfeng and Liang, Xiaodan and Cheng, Hong and Lu, Qinglin and Liu, Wei},&#xA;  journal={arXiv preprint arXiv:2403.08857},&#xA;  year={2024}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Start History&lt;/h2&gt; &#xA;&lt;a href=&#34;https://star-history.com/#Tencent/HunyuanDiT&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=Tencent/HunyuanDiT&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=Tencent/HunyuanDiT&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=Tencent/HunyuanDiT&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt;</summary>
  </entry>
</feed>