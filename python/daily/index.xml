<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-16T01:39:13Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>malwaredllc/byob</title>
    <updated>2022-09-16T01:39:13Z</updated>
    <id>tag:github.com,2022-09-16:/malwaredllc/byob</id>
    <link href="https://github.com/malwaredllc/byob" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source post-exploitation framework for students, researchers and developers.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/malwaredllc/byob/raw/master/byob/static/byob_logo_black.svg?sanitize=true&#34; alt=&#34;Banner&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/malwaredllc/byob/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPL-brightgreen.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/malwaredllc/byob&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/version-2.0-blue.svg?sanitize=true&#34; alt=&#34;version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/malwaredllc/byob/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt; &lt;a href=&#34;https://coveralls.io/github/malwaredllc/byob&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/malwaredllc/byob/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/709150520446550097&#34;&gt; &lt;a href=&#34;https://twitter.com/intent/tweet?text=BYOB%20(Post-Exploitation%20Framework)&amp;amp;url=https://github.com/malwaredllc/byob&amp;amp;via=malwaredllc&amp;amp;hashtags=byob,python,security,github&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&#34; alt=&#34;Tweet&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Questions?&lt;/strong&gt; Check out the &lt;a href=&#34;https://github.com/malwaredllc/byob/wiki&#34;&gt;docs&lt;/a&gt; or join our &lt;a href=&#34;https://discord.gg/8FsSrw7&#34;&gt;Discord support server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: This project should be used for authorized testing or educational purposes only.&lt;/p&gt; &#xA;&lt;p&gt;BYOB is an open-source post-exploitation framework for students, researchers and developers. It includes features such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Command &amp;amp; control server with intuitive user-interface&lt;/li&gt; &#xA; &lt;li&gt;Custom payload generator for multiple platforms&lt;/li&gt; &#xA; &lt;li&gt;12 post-exploitation modules&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is designed to allow students and developers to easily implement their own code and add cool new features &lt;em&gt;without&lt;/em&gt; having to write a C2 server or Remote Administration Tool from scratch.&lt;/p&gt; &#xA;&lt;p&gt;This project has 2 main parts: the &lt;strong&gt;original console-based application&lt;/strong&gt; (&lt;code&gt;/byob&lt;/code&gt;) and the &lt;strong&gt;web GUI&lt;/strong&gt; (&lt;code&gt;/web-gui&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h1&gt;Web GUI&lt;/h1&gt; &#xA;&lt;h2&gt;Dashboard&lt;/h2&gt; &#xA;&lt;p&gt;A control panel for your C2 server with a point-and-click interface for executing post-exploitation modules. The control panel includes an interactive map of client machines and a dashboard which allows efficient, intuitive administration of client machines.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/malwaredllc/byob/raw/master/web-gui/buildyourownbotnet/assets/images/previews/preview-dashboard.png&#34; alt=&#34;dashboard_preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Payload Generator&lt;/h2&gt; &#xA;&lt;p&gt;The payload generator uses black magic involving Docker containers &amp;amp; Wine servers to compile executable payloads for any platform/architecture you select. These payloads spawn reverse TCP shells with communication over the network encrypted via AES-256 after generating a secure symmetric key using the &lt;a href=&#34;https://tools.ietf.org/html/rfc2409&#34;&gt;Diffie-Hellman IKE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/malwaredllc/byob/raw/master/web-gui/buildyourownbotnet/assets/images/previews/preview-payloads2.png&#34; alt=&#34;payloads_preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Terminal Emulator&lt;/h2&gt; &#xA;&lt;p&gt;The web app includes an in-browser terminal emulator so you can still have direct shell access even when using the web GUI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/malwaredllc/byob/raw/master/web-gui/buildyourownbotnet/assets/images/previews/preview-shell.png&#34; alt=&#34;terminal_preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Console Application&lt;/h1&gt; &#xA;&lt;h2&gt;Client&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/malwaredllc/byob/raw/master/byob/payloads.py&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/byob-client-blue.svg?sanitize=true&#34; alt=&#34;client&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Generate fully-undetectable clients with staged payloads, remote imports, and unlimited post-exploitation modules&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Remote Imports&lt;/strong&gt;: remotely import third-party packages from the server without writing them to the disk or downloading/installing them&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Nothing Written To The Disk&lt;/strong&gt;: clients never write anything to the disk - not even temporary files (zero IO system calls are made) because remote imports allow arbitrary code to be dynamically loaded into memory and directly imported into the currently running process&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zero Dependencies (Not Even Python Itself)&lt;/strong&gt;: client runs with just the python standard library, remotely imports any non-standard packages/modules from the server, and can be compiled with a standalone python interpreter into a portable binary executable formatted for any platform/architecture, allowing it to run on anything, even when Python itself is missing on the target host&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Add New Features With Just 1 Click&lt;/strong&gt;: any python script, module, or package you copy to the &lt;code&gt;./byob/modules/&lt;/code&gt; directory automatically becomes remotely importable &amp;amp; directly usable by every client while your command &amp;amp; control server is running&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Write Your Own Modules&lt;/strong&gt;: a basic module template is provided in &lt;code&gt;./byob/modules/&lt;/code&gt; directory to make writing your own modules a straight-forward, hassle-free process&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run Unlimited Modules Without Bloating File Size&lt;/strong&gt;: use remote imports to add unlimited features without adding a single byte to the client&#39;s file size&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fully Updatable&lt;/strong&gt;: each client will periodically check the server for new content available for remote import, and will dynamically update its in-memory resources if anything has been added/removed&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Platform Independent&lt;/strong&gt;: everything is written in Python (a platform-agnostic language) and the clients generated can optionally be compiled into a portable executable (&lt;em&gt;Windows&lt;/em&gt;) or bundled into a standalone application (&lt;em&gt;macOS&lt;/em&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bypass Firewalls&lt;/strong&gt;: clients connect to the command &amp;amp; control server via reverse TCP connections, which will bypass most firewalls because the default filter configurations primarily block incoming connections&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Counter-Measure Against Antivirus&lt;/strong&gt;: avoids being analyzed by antivirus by blocking processes with names of known antivirus products from spawning&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Encrypt Payloads To Prevent Analysis&lt;/strong&gt;: the main client payload is encrypted with a random 256-bit key which exists solely in the payload stager which is generated along with it&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Prevent Reverse-Engineering&lt;/strong&gt;: by default, clients will abort execution if a virtual machine or sandbox is detected&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Modules&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/malwaredllc/byob/raw/master/byob/modules&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/byob-modules-blue.svg?sanitize=true&#34; alt=&#34;modules&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Post-exploitation modules that are remotely importable by clients&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Persistence&lt;/strong&gt; (&lt;code&gt;byob.modules.persistence&lt;/code&gt;): establish persistence on the host machine using 5 different methods&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Packet Sniffer&lt;/strong&gt; (&lt;code&gt;byob.modules.packetsniffer&lt;/code&gt;): run a packet sniffer on the host network &amp;amp; upload .pcap file&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Escalate Privileges&lt;/strong&gt; (&lt;code&gt;byob.modules.escalate&lt;/code&gt;): attempt UAC bypass to gain unauthorized administrator privileges&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Port Scanner&lt;/strong&gt; (&lt;code&gt;byob.modules.portscanner&lt;/code&gt;): scan the local network for other online devices &amp;amp; open ports&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Keylogger&lt;/strong&gt; (&lt;code&gt;byob.modules.keylogger&lt;/code&gt;): logs the userâ€™s keystrokes &amp;amp; the window name entered&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Screenshot&lt;/strong&gt; (&lt;code&gt;byob.modules.screenshot&lt;/code&gt;): take a screenshot of current userâ€™s desktop&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Outlook&lt;/strong&gt; (&lt;code&gt;byob.modules.outlook&lt;/code&gt;): read/search/upload emails from the local Outlook client&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Process Control&lt;/strong&gt; (&lt;code&gt;byob.modules.process&lt;/code&gt;): list/search/kill/monitor currently running processes on the host&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;iCloud&lt;/strong&gt; (&lt;code&gt;byob.modules.icloud&lt;/code&gt;): check for logged in iCloud account on macOS&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Miner&lt;/strong&gt; (&lt;code&gt;byob.core.miner&lt;/code&gt;): mine Monero in the background using the built-in miner or XMRig&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Server&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/malwaredllc/byob/raw/master/byob/server.py&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/byob-server-blue.svg?sanitize=true&#34; alt=&#34;server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Command &amp;amp; control server with persistent database and console&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Console-Based User-Interface&lt;/strong&gt;: streamlined console interface for controlling client host machines remotely via reverse TCP shells which provide direct terminal access to the client host machines&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Persistent SQLite Database&lt;/strong&gt;: lightweight database that stores identifying information about client host machines, allowing reverse TCP shell sessions to persist through disconnections of arbitrary duration and enabling long-term reconnaissance&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Client-Server Architecture&lt;/strong&gt;: all python packages/modules installed locally are automatically made available for clients to remotely import without writing them to the disk of the target machines, allowing clients to use modules which require packages not installed on the target machines&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Core&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/malwaredllc/byob/raw/master/byob/core&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/byob-core-blue.svg?sanitize=true&#34; alt=&#34;core&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Core framework modules used by the generator and the server&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Utilities&lt;/strong&gt; (&lt;code&gt;byob.core.util&lt;/code&gt;): miscellaneous utility functions that are used by many modules&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt; (&lt;code&gt;byob.core.security&lt;/code&gt;): Diffie-Hellman IKE &amp;amp; 3 encryption modes (AES-256-OCB, AES-256-CBC, XOR-128)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Loaders&lt;/strong&gt; (&lt;code&gt;byob.core.loaders&lt;/code&gt;): remotely import any package/module/scripts from the server&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Payloads&lt;/strong&gt; (&lt;code&gt;byob.core.payloads&lt;/code&gt;): reverse TCP shell designed to remotely import dependencies, packages &amp;amp; modules&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Stagers&lt;/strong&gt; (&lt;code&gt;byob.core.stagers&lt;/code&gt;): generate unique payload stagers to prevent analysis &amp;amp; detection&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Generators&lt;/strong&gt; (&lt;code&gt;byob.core.generators&lt;/code&gt;): functions which all dynamically generate code for the client generator&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DAO&lt;/strong&gt; (&lt;code&gt;byob.core.dao&lt;/code&gt;): handles interaction between command &amp;amp; control server and the SQLite database&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Handler&lt;/strong&gt; (&lt;code&gt;byob.core.handler&lt;/code&gt;): HTTP POST request handler for remote file uploads to the server&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;To Do&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;Contributors welcome! Feel free to issue pull-requests with any new features or improvements you have come up with!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Remote Import Encryption&lt;/strong&gt; - encryption for data streams of packages/modules being remotely imported (to maintain confidentiality/authenticity/integrity and prevent any remote code execution vulnerabilities arising from deserialization)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Transport Types&lt;/strong&gt; - add support for more transport types (HTTP/S, DNS, etc.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bug Fixes&lt;/strong&gt; - fix any bugs/issues&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>ethereum/consensus-specs</title>
    <updated>2022-09-16T01:39:13Z</updated>
    <id>tag:github.com,2022-09-16:/ethereum/consensus-specs</id>
    <link href="https://github.com/ethereum/consensus-specs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ethereum Proof-of-Stake Consensus Specifications&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ethereum Proof-of-Stake Consensus Specifications&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/qGpsxSA&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20discord-blue.svg?sanitize=true&#34; alt=&#34;Join the chat at https://discord.gg/qGpsxSA&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/ethereum/sharding?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/ethereum/sharding.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/ethereum/sharding&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To learn more about proof-of-stake and sharding, see the &lt;a href=&#34;https://eth.wiki/en/concepts/proof-of-stake-faqs&#34;&gt;PoS FAQ&lt;/a&gt;, &lt;a href=&#34;https://eth.wiki/sharding/Sharding-FAQs&#34;&gt;sharding FAQ&lt;/a&gt; and the &lt;a href=&#34;https://notes.ethereum.org/s/H1PGqDhpm&#34;&gt;research compendium&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This repository hosts the current Ethereum proof-of-stake specifications. Discussions about design rationale and proposed changes can be brought up and discussed as issues. Solidified, agreed-upon changes to the spec can be made through pull requests.&lt;/p&gt; &#xA;&lt;h2&gt;Specs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ethereum/eth2.0-specs/releases/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/ethereum/eth2.0-specs&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/py/eth2spec&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/eth2spec.svg?sanitize=true&#34; alt=&#34;PyPI version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Core specifications for Ethereum proof-of-stake clients can be found in &lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/&#34;&gt;specs&lt;/a&gt;. These are divided into features. Features are researched and developed in parallel, and then consolidated into sequential upgrades when ready.&lt;/p&gt; &#xA;&lt;h3&gt;Stable Specifications&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Seq.&lt;/th&gt; &#xA;   &lt;th&gt;Code Name&lt;/th&gt; &#xA;   &lt;th&gt;Fork Epoch&lt;/th&gt; &#xA;   &lt;th&gt;Specs&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Phase0&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Core&lt;/li&gt;&#xA;     &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/phase0/beacon-chain.md&#34;&gt;The beacon chain&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/phase0/deposit-contract.md&#34;&gt;Deposit contract&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/phase0/fork-choice.md&#34;&gt;Beacon chain fork choice&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;/ul&gt;&#xA;     &lt;li&gt;Additions&lt;/li&gt;&#xA;     &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/phase0/validator.md&#34;&gt;Honest validator guide&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/phase0/p2p-interface.md&#34;&gt;P2P networking&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/phase0/weak-subjectivity.md&#34;&gt;Weak subjectivity&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;/ul&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Altair&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;74240&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Core&lt;/li&gt;&#xA;     &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/altair/beacon-chain.md&#34;&gt;Beacon chain changes&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/altair/fork.md&#34;&gt;Altair fork&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;/ul&gt;&#xA;     &lt;li&gt;Additions&lt;/li&gt;&#xA;     &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/altair/light-client/sync-protocol.md&#34;&gt;Light client sync protocol&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/altair/light-client/full-node.md&#34;&gt;full node&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/altair/light-client/light-client.md&#34;&gt;light client&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/altair/light-client/p2p-interface.md&#34;&gt;networking&lt;/a&gt;)&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/altair/validator.md&#34;&gt;Honest validator guide changes&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/altair/p2p-interface.md&#34;&gt;P2P networking&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;/ul&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Bellatrix&lt;/strong&gt; &lt;br&gt; (&lt;a href=&#34;https://ethereum.org/en/upgrades/merge/&#34;&gt;&#34;The Merge&#34;&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;144896&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Core&lt;/li&gt;&#xA;     &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/bellatrix/beacon-chain.md&#34;&gt;Beacon Chain changes&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/bellatrix/fork.md&#34;&gt;Bellatrix fork&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/bellatrix/fork-choice.md&#34;&gt;Fork choice changes&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;/ul&gt;&#xA;     &lt;li&gt;Additions&lt;/li&gt;&#xA;     &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/bellatrix/validator.md&#34;&gt;Honest validator guide changes&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/bellatrix/p2p-interface.md&#34;&gt;P2P networking&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;/ul&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;In-development Specifications&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Code Name or Topic&lt;/th&gt; &#xA;   &lt;th&gt;Specs&lt;/th&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Capella (tentative)&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Core&lt;/li&gt;&#xA;     &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/capella/beacon-chain.md&#34;&gt;Beacon chain changes&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/capella/fork.md&#34;&gt;Capella fork&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;/ul&gt;&#xA;     &lt;li&gt;Additions&lt;/li&gt;&#xA;     &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/capella/validator.md&#34;&gt;Validator additions&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;/ul&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EIP4844 (tentative)&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Core&lt;/li&gt;&#xA;     &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/eip4844/beacon-chain.md&#34;&gt;Beacon Chain changes&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/eip4844/fork.md&#34;&gt;EIP-4844 fork&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/eip4844/polynomial-commitments.md&#34;&gt;Polynomial commitments&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;/ul&gt;&#xA;     &lt;li&gt;Additions&lt;/li&gt;&#xA;     &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/eip4844/validator.md&#34;&gt;Honest validator guide changes&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/eip4844/p2p-interface.md&#34;&gt;P2P networking&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;/ul&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sharding (outdated)&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Core&lt;/li&gt;&#xA;     &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/sharding/beacon-chain.md&#34;&gt;Beacon Chain changes&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;/ul&gt;&#xA;     &lt;li&gt;Additions&lt;/li&gt;&#xA;     &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/sharding/p2p-interface.md&#34;&gt;P2P networking&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;/ul&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Custody Game (outdated)&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Core&lt;/li&gt;&#xA;     &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/custody_game/beacon-chain.md&#34;&gt;Beacon Chain changes&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;/ul&gt;&#xA;     &lt;li&gt;Additions&lt;/li&gt;&#xA;     &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/custody_game/validator.md&#34;&gt;Honest validator guide changes&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;/ul&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Dependent on sharding&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data Availability Sampling (outdated)&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Core&lt;/li&gt;&#xA;     &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/das/das-core.md&#34;&gt;Core types and functions&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/das/fork-choice.md&#34;&gt;Fork choice changes&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;/ul&gt;&#xA;     &lt;li&gt;Additions&lt;/li&gt;&#xA;     &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/das/p2p-interface.md&#34;&gt;P2P Networking&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs/das/sampling.md&#34;&gt;Sampling process&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;/ul&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; Dependent on sharding&lt;/li&gt;&#xA;     &lt;li&gt;&lt;a href=&#34;https://hackmd.io/@HWeNw8hNRimMm2m2GH56Cw/B1YJPGkpD&#34;&gt;Technical explainer&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Accompanying documents can be found in &lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/specs&#34;&gt;specs&lt;/a&gt; and include:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/ssz/simple-serialize.md&#34;&gt;SimpleSerialize (SSZ) spec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/ssz/merkle-proofs.md&#34;&gt;Merkle proof formats&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/tests/formats/README.md&#34;&gt;General test format&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Additional specifications for client implementers&lt;/h2&gt; &#xA;&lt;p&gt;Additional specifications and standards outside of requisite client functionality can be found in the following repos:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ethereum/beacon-apis&#34;&gt;Beacon APIs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ethereum/beacon-metrics/&#34;&gt;Beacon Metrics&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Design goals&lt;/h2&gt; &#xA;&lt;p&gt;The following are the broad design goals for the Ethereum proof-of-stake consensus specifications:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;to minimize complexity, even at the cost of some losses in efficiency&lt;/li&gt; &#xA; &lt;li&gt;to remain live through major network partitions and when very large portions of nodes go offline&lt;/li&gt; &#xA; &lt;li&gt;to select all components such that they are either quantum secure or can be easily swapped out for quantum secure counterparts when available&lt;/li&gt; &#xA; &lt;li&gt;to utilize crypto and design techniques that allow for a large participation of validators in total and per unit time&lt;/li&gt; &#xA; &lt;li&gt;to allow for a typical consumer laptop with &lt;code&gt;O(C)&lt;/code&gt; resources to process/validate &lt;code&gt;O(1)&lt;/code&gt; shards (including any system level validation such as the beacon chain)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Useful external resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://notes.ethereum.org/s/rkhCgQteN#&#34;&gt;Design Rationale&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://notes.ethereum.org/s/Bkn3zpwxB&#34;&gt;Phase 0 Onboarding Document&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2003.03052&#34;&gt;Combining GHOST and Casper paper&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;For spec contributors&lt;/h2&gt; &#xA;&lt;p&gt;Documentation on the different components used during spec writing can be found here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/tests/generators/README.md&#34;&gt;YAML Test Generators&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/consensus-specs/dev/tests/core/pyspec/README.md&#34;&gt;Executable Python Spec, with Py-tests&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Consensus spec tests&lt;/h2&gt; &#xA;&lt;p&gt;Conformance tests built from the executable python spec are available in the &lt;a href=&#34;https://github.com/ethereum/consensus-spec-tests&#34;&gt;Ethereum Proof-of-Stake Consensus Spec Tests&lt;/a&gt; repo. Compressed tarballs are available in &lt;a href=&#34;https://github.com/ethereum/consensus-spec-tests/releases&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>DiegoDBLe/Python-Basico-Lets-Code</title>
    <updated>2022-09-16T01:39:13Z</updated>
    <id>tag:github.com,2022-09-16:/DiegoDBLe/Python-Basico-Lets-Code</id>
    <link href="https://github.com/DiegoDBLe/Python-Basico-Lets-Code" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Curso BÃ¡sico de Python da Lets-Code&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Python-Basico-Lets-Code&lt;/h1&gt; &#xA;&lt;p&gt;Curso BÃ¡sico de Python da Lets-Code&lt;/p&gt;</summary>
  </entry>
</feed>