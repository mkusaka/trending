<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-07T01:46:03Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>reactive-python/reactpy</title>
    <updated>2023-06-07T01:46:03Z</updated>
    <id>tag:github.com,2023-06-07:/reactive-python/reactpy</id>
    <link href="https://github.com/reactive-python/reactpy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;It&#39;s React, but in Python&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/reactive-python/reactpy/main/branding/svg/reactpy-logo-square.svg?sanitize=true&#34; align=&#34;left&#34; height=&#34;45&#34;&gt; ReactPy&lt;/h1&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://github.com/reactive-python/reactpy/actions&#34;&gt; &lt;img src=&#34;https://github.com/reactive-python/reactpy/workflows/test/badge.svg?event=push&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/reactpy/&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/reactpy.svg?label=PyPI&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/reactive-python/reactpy/raw/main/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-MIT-purple.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://reactpy.dev/&#34;&gt; &lt;img src=&#34;https://img.shields.io/website?down_message=offline&amp;amp;label=Docs&amp;amp;logo=read-the-docs&amp;amp;logoColor=white&amp;amp;up_message=online&amp;amp;url=https%3A%2F%2Freactpy.dev%2Fdocs%2Findex.html&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/uNb5P4hA9X&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/1111078259854168116?label=Discord&amp;amp;logo=discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://reactpy.dev/&#34;&gt;ReactPy&lt;/a&gt; is a library for building user interfaces in Python without Javascript. ReactPy interfaces are made from components that look and behave similar to those found in &lt;a href=&#34;https://reactjs.org/&#34;&gt;ReactJS&lt;/a&gt;. Designed with simplicity in mind, ReactPy can be used by those without web development experience while also being powerful enough to grow with your ambitions.&lt;/p&gt; &#xA;&lt;table align=&#34;center&#34;&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th colspan=&#34;2&#34; style=&#34;text-align: center&#34;&gt;Supported Backends&lt;/th&gt; &#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th style=&#34;text-align: center&#34;&gt;Built-in&lt;/th&gt; &#xA;   &lt;th style=&#34;text-align: center&#34;&gt;External&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://reactpy.dev/docs/guides/getting-started/installing-reactpy.html#officially-supported-servers&#34;&gt; Flask, FastAPI, Sanic, Tornado &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/reactive-python/reactpy-django&#34;&gt;Django&lt;/a&gt;, &lt;a href=&#34;https://github.com/reactive-python/reactpy-jupyter&#34;&gt;Jupyter&lt;/a&gt;, &lt;a href=&#34;https://github.com/idom-team/idom-dash&#34;&gt;Plotly-Dash&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;At a Glance&lt;/h1&gt; &#xA;&lt;p&gt;To get a rough idea of how to write apps in ReactPy, take a look at this tiny &lt;em&gt;Hello World&lt;/em&gt; application.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from reactpy import component, html, run&#xA;&#xA;@component&#xA;def hello_world():&#xA;    return html.h1(&#34;Hello, World!&#34;)&#xA;&#xA;run(hello_world)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Resources&lt;/h1&gt; &#xA;&lt;p&gt;Follow the links below to find out more about this project.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mybinder.org/v2/gh/reactive-python/reactpy-jupyter/main?urlpath=lab/tree/notebooks/introduction.ipynb&#34;&gt;Try ReactPy (Jupyter Notebook)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactpy.dev/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reactive-python/reactpy/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/uNb5P4hA9X&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactpy.dev/docs/about/contributor-guide.html&#34;&gt;Contributor Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reactive-python/reactpy/raw/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>mitre/caldera</title>
    <updated>2023-06-07T01:46:03Z</updated>
    <id>tag:github.com,2023-06-07:/mitre/caldera</id>
    <link href="https://github.com/mitre/caldera" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automated Adversary Emulation Platform&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/mitre/caldera/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/json?color=blue&amp;amp;label=Release&amp;amp;query=tag_name&amp;amp;url=https%3A%2F%2Fapi.github.com%2Frepos%2Fmitre%2Fcaldera%2Freleases%2Flatest&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mitre/caldera/actions/workflows/testing.yml?query=branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/mitre/caldera/actions/workflows/testing.yml/badge.svg?branch=master&#34; alt=&#34;Testing Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mitre/caldera/actions/workflows/security.yml?query=branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/mitre/caldera/actions/workflows/security.yml/badge.svg?branch=master&#34; alt=&#34;Security Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/mitre/caldera&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/mitre/caldera/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://caldera.readthedocs.io/?badge=stable&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/caldera/badge/?version=stable&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;CALDERA‚Ñ¢&lt;/h1&gt; &#xA;&lt;p&gt;CALDERA‚Ñ¢ is a cyber security platform designed to easily automate adversary emulation, assist manual red-teams, and automate incident response.&lt;/p&gt; &#xA;&lt;p&gt;It is built on the &lt;a href=&#34;https://attack.mitre.org/&#34;&gt;MITRE ATT&amp;amp;CK‚Ñ¢ framework&lt;/a&gt; and is an active research project at MITRE.&lt;/p&gt; &#xA;&lt;p&gt;The framework consists of two components:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;The core system&lt;/strong&gt;. This is the framework code, consisting of what is available in this repository. Included is an asynchronous command-and-control (C2) server with a REST API and a web interface.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Plugins&lt;/strong&gt;. These repositories expand the core framework capabilities and providing additional functionality. Examples include agents, reporting, collections of TTPs and more.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Resources and Socials&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìú &lt;a href=&#34;https://caldera.readthedocs.io/en/latest/&#34;&gt;Documentation, training, and use-cases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;‚úçÔ∏è &lt;a href=&#34;https://medium.com/@mitrecaldera/welcome-to-the-official-mitre-caldera-blog-page-f34c2cdfef09&#34;&gt;CALDERA&#39;s blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üåê &lt;a href=&#34;https://caldera.mitre.org&#34;&gt;Homepage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;&lt;span&gt;‚≠ê&lt;/span&gt; Create your own plugin! Plugin generator: &lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/skeleton&#34;&gt;Skeleton&lt;/a&gt;&lt;/strong&gt; &lt;span&gt;‚≠ê&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Default&lt;/h3&gt; &#xA;&lt;p&gt;These plugins are supported and maintained by the Caldera team.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/access&#34;&gt;Access&lt;/a&gt;&lt;/strong&gt; (red team initial access tools and techniques)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/atomic&#34;&gt;Atomic&lt;/a&gt;&lt;/strong&gt; (Atomic Red Team project TTPs)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/builder&#34;&gt;Builder&lt;/a&gt;&lt;/strong&gt; (dynamically compile payloads)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/compass&#34;&gt;Compass&lt;/a&gt;&lt;/strong&gt; (ATT&amp;amp;CK visualizations)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/debrief&#34;&gt;Debrief&lt;/a&gt;&lt;/strong&gt; (operations insights)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/emu&#34;&gt;Emu&lt;/a&gt;&lt;/strong&gt; (CTID emulation plans)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/fieldmanual&#34;&gt;Fieldmanual&lt;/a&gt;&lt;/strong&gt; (documentation)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/gameboard&#34;&gt;GameBoard&lt;/a&gt;&lt;/strong&gt; (visualize joint red and blue operations)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/human&#34;&gt;Human&lt;/a&gt;&lt;/strong&gt; (create simulated noise on an endpoint)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/manx&#34;&gt;Manx&lt;/a&gt;&lt;/strong&gt; (shell functionality and reverse shell payloads)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/mock&#34;&gt;Mock&lt;/a&gt;&lt;/strong&gt; (simulate agents in operations)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/response&#34;&gt;Response&lt;/a&gt;&lt;/strong&gt; (incident response)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/sandcat&#34;&gt;Sandcat&lt;/a&gt;&lt;/strong&gt; (default agent)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/SSL&#34;&gt;SSL&lt;/a&gt;&lt;/strong&gt; (enable https for caldera)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/stockpile&#34;&gt;Stockpile&lt;/a&gt;&lt;/strong&gt; (technique and profile storehouse)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/training&#34;&gt;Training&lt;/a&gt;&lt;/strong&gt; (certification and training course)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;More&lt;/h3&gt; &#xA;&lt;p&gt;These plugins are ready to use but are not included by default and are not maintained by the Caldera team.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre-atlas/arsenal&#34;&gt;Arsenal&lt;/a&gt;&lt;/strong&gt; (MITRE ATLAS techniques and profiles)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/center-for-threat-informed-defense/caldera_pathfinder&#34;&gt;Pathfinder&lt;/a&gt;&lt;/strong&gt; (vulnerability scanning)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/saml&#34;&gt;SAML&lt;/a&gt;&lt;/strong&gt; (SAML authentication)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mitre/caltack.git&#34;&gt;CalTack&lt;/a&gt;&lt;/strong&gt; (embedded ATT&amp;amp;CK website)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;These requirements are for the computer running the core framework:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Any Linux or MacOS&lt;/li&gt; &#xA; &lt;li&gt;Python 3.7+ (with Pip3)&lt;/li&gt; &#xA; &lt;li&gt;Recommended hardware to run on is 8GB+ RAM and 2+ CPUs&lt;/li&gt; &#xA; &lt;li&gt;Recommended: GoLang 1.17+ to dynamically compile GoLang-based agents.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Concise installation steps:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Bash&#34;&gt;git clone https://github.com/mitre/caldera.git --recursive&#xA;cd caldera&#xA;pip3 install -r requirements.txt&#xA;python3 server.py --insecure&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Full steps: Start by cloning this repository recursively, passing the desired version/release in x.x.x format. This will pull in all available plugins.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Bash&#34;&gt;git clone https://github.com/mitre/caldera.git --recursive --branch x.x.x&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, install the PIP requirements:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Bash&#34;&gt;pip3 install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Super-power your CALDERA server installation! &lt;a href=&#34;https://go.dev/doc/install&#34;&gt;Install GoLang (1.17+)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Finally, start the server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Bash&#34;&gt;python3 server.py --insecure&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once started, log into &lt;a href=&#34;http://localhost:8888&#34;&gt;http://localhost:8888&lt;/a&gt; using the default credentials red/admin. Then go into Plugins -&amp;gt; Training and complete the capture-the-flag style training course to learn how to use CALDERA.&lt;/p&gt; &#xA;&lt;h2&gt;Docker Deployment&lt;/h2&gt; &#xA;&lt;p&gt;To build a CALDERA docker image, ensure you have docker installed and perform the following actions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Bash&#34;&gt;# Recursively clone the CALDERA repository if you have not done so&#xA;git clone https://github.com/mitre/caldera.git --recursive&#xA;&#xA;# Build the docker image. Change image tagging as desired.&#xA;# WIN_BUILD is set to true to allow CALDERA installation to compile windows-based agents.&#xA;# Alternatively, you can use the docker compose YML file via &#34;docker-compose build&#34;&#xA;cd caldera&#xA;docker build . --build-arg WIN_BUILD=true -t caldera:latest&#xA;&#xA;# Run the image. Change port forwarding configuration as desired.&#xA;docker run -p 8888:8888 caldera:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To gracefully terminate your docker container, do the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Bash&#34;&gt;# Find the container ID for your docker container running CALDERA&#xA;docker ps&#xA;&#xA;# Send interrupt signal, e.g. &#34;docker kill --signal=SIGINT 5b9220dd9c0f&#34;&#xA;docker kill --signal=SIGINT [container ID]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Refer to our &lt;a href=&#34;https://raw.githubusercontent.com/mitre/caldera/master/CONTRIBUTING.md&#34;&gt;contributor documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Vulnerability Disclosures&lt;/h2&gt; &#xA;&lt;p&gt;Refer to our &lt;a href=&#34;https://raw.githubusercontent.com/mitre/caldera/master/SECURITY.md&#34;&gt;vulnerability discolosure documentation&lt;/a&gt; for submitting bugs.&lt;/p&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;To discuss licensing opportunities, please reach out to &lt;a href=&#34;mailto:caldera@mitre.org&#34;&gt;caldera@mitre.org&lt;/a&gt; or directly to &lt;a href=&#34;https://www.mitre.org/about/corporate-overview/contact-us#technologycontact&#34;&gt;MITRE&#39;s Technology Transfer Office&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Caldera Benefactor Program&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested in partnering to support, sustain, and evolve CALDERA‚Ñ¢&#39;s open source capabilities, please contact us at &lt;a href=&#34;mailto:caldera@mitre.org&#34;&gt;caldera@mitre.org&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>foundryzero/binder-trace</title>
    <updated>2023-06-07T01:46:03Z</updated>
    <id>tag:github.com,2023-06-07:/foundryzero/binder-trace</id>
    <link href="https://github.com/foundryzero/binder-trace" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Binder Trace is a tool for intercepting and parsing Android Binder messages. Think of it as &#34;Wireshark for Binder&#34;.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Binder Trace&lt;/h1&gt; &#xA;&lt;p&gt;Binder Trace is a tool for intercepting and parsing Android Binder messages. Think of it as &#34;Wireshark for Binder&#34;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/foundryzero/binder-trace/main/binder-trace.gif&#34; alt=&#34;binder-trace demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;‚öôÔ∏è Installation&lt;/h1&gt; &#xA;&lt;p&gt;You&#39;ll need a rooted Android device or emulator.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;(Linux only) - install xclip or xsel for &#34;copy to clipboard&#34; functionality&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;sudo apt-get install xclip&lt;/code&gt;&lt;/p&gt; &#xA;   &lt;p&gt;&lt;code&gt;sudo apt-get install xsel&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repo and install python dependencies&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;pip install -r binder_trace/requirements.txt&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check which version of frida is installed (make sure you&#39;ve pip installed the requirements)&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;pip list | grep frida&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the matching version of frida-server from the &lt;a href=&#34;https://github.com/frida/frida/releases&#34;&gt;frida releases page&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure adb is running as root, push frida-server to your device and run it&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;adb root&lt;/code&gt;&lt;/p&gt; &#xA;   &lt;p&gt;&lt;code&gt;adb push frida-server /data/local/tmp&lt;/code&gt;&lt;/p&gt; &#xA;   &lt;p&gt;&lt;code&gt;chmod u+x /data/local/tmp/frida-server&lt;/code&gt;&lt;/p&gt; &#xA;   &lt;p&gt;&lt;code&gt;adb shell /data/local/tmp/frida-server&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Arguments&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Argument&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-h&lt;/td&gt; &#xA;   &lt;td&gt;Prints the argument help.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-d&amp;nbsp;DEVICE&lt;/td&gt; &#xA;   &lt;td&gt;The device to attach to e.g. &#34;emulator-5554&#34;. Use &lt;code&gt;adb devices&lt;/code&gt; to list available devices. If not provided defaults to the USB device.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-p&amp;nbsp;PID&lt;/td&gt; &#xA;   &lt;td&gt;The pid of the process on DEVICE to attach to.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-n&amp;nbsp;NAME&lt;/td&gt; &#xA;   &lt;td&gt;The name of the process on DEVICE to attach to e.g. &#34;Messaging&#34;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-s&amp;nbsp;STRUCTPATH&lt;/td&gt; &#xA;   &lt;td&gt;The path to the directory of structure files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;‚ñ∂Ô∏è Starting binder trace&lt;/h1&gt; &#xA;&lt;p&gt;To start binder trace we need to pick a device and process to attach to. In the following example we use &lt;code&gt;adb&lt;/code&gt; and &lt;code&gt;frida-ps&lt;/code&gt; to identify a process to attach to on a local emulator. As it&#39;s an Android 11 emulator we choose the Android 11 structs directory. Pick the struct directory that most closely matches your version of Android. If you would like structures for a different version of Android, please let us know. Once it&#39;s running start using the target app to generate some binder transactions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; adb devices&#xA;List of devices attached&#xA;emulator-5554   device&#xA;&#xA;&amp;gt; frida-ps -Ua&#xA; PID  Name           Identifier&#xA;----  -------------  ----------------------------&#xA;8334  Messaging      com.android.messaging&#xA;7941  Phone          com.android.dialer&#xA;9607  Settings       com.android.settings&#xA;&#xA;&amp;gt; cd binder_trace&#xA;&amp;gt; python -m binder_trace -d emulator-5554 -n Messaging -s ../structs/android11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;‚å®Ô∏è Controls&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Key&lt;/th&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;up&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move up&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;down&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move down&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;shift + up&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Page up&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;shift + down&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Page down&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;home&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go to top&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;end&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go to bottom&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tab&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Next pane&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;shift + tab&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Previous pane&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ctrl + c&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Copy pane to clipboard&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;f&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open filter options&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;h&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open help&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;q&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Quit&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;üîé Filtering&lt;/h1&gt; &#xA;&lt;p&gt;If you&#39;re interested in specific messages you can filter the displayed results with the following options.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Interface&lt;/strong&gt; - limit results to interfaces that contain the case sensitive search string e.g. &#34;com.android&#34; or &#34;Sms&#34;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Method&lt;/strong&gt; - limit results to function names containing the specified case sensitive string.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Type&lt;/strong&gt; - Limit results to certain types of messages e.g. requests or responses.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once you&#39;ve entered your filter options just press &lt;code&gt;Enter&lt;/code&gt; to apply them.&lt;/p&gt;</summary>
  </entry>
</feed>