<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-01T01:32:22Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>github/copilot-docs</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/github/copilot-docs</id>
    <link href="https://github.com/github/copilot-docs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Documentation for GitHub Copilot&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub Copilot &lt;img src=&#34;https://img.shields.io/badge/version-technical_preview-green&#34; alt=&#34;Version&#34;&gt;&lt;/h1&gt; &#xA;&lt;img width=&#34;128&#34; alt=&#34;GitHub Copilot Logo&#34; src=&#34;https://user-images.githubusercontent.com/28068/123712981-02676c80-d839-11eb-919a-96ee0c895e15.png&#34;&gt; &#xA;&lt;p&gt;Welcome to the GitHub Copilot user community! In this repository, you can find documentation, walkthroughs, examples, and the latest resources you need to use GitHub Copilot.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To install GitHub Copilot, check out the Getting Started guides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/docs/visualstudiocode/gettingstarted.md#getting-started-with-github-copilot-in-visual-studio-code&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/docs/visualstudio/gettingstarted.md#getting-started-with-github-copilot-in-visual-studio&#34;&gt;Visual Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/docs/jetbrains/gettingstarted.md#getting-started-with-github-copilot-in-jetbrains&#34;&gt;JetBrains&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/github/copilot.vim#getting-started&#34;&gt;Neovim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For a tour of GitHub Copilot, visit the homepage at &lt;a href=&#34;https://copilot.github.com&#34;&gt;copilot.github.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to get help&lt;/h2&gt; &#xA;&lt;p&gt;Have a question, or want to provide feedback? Visit the &lt;a href=&#34;https://github.com/github/feedback/discussions/categories/copilot-feedback&#34;&gt;Feedback forum&lt;/a&gt; to ask questions, share bugs or feedback, or chat with other users in the Preview. The GitHub Copilot team will respond as often as possible, but we also welcome you to share your experiences and help others in the community.&lt;/p&gt; &#xA;&lt;h2&gt;Safety&lt;/h2&gt; &#xA;&lt;p&gt;We take safety seriously and are constantly working to improve GitHub Copilot. If you discover dangerous, biased, or offensive output from GitHub Copilot, please report it privately to &lt;a href=&#34;mailto:copilot-safety@github.com&#34;&gt;copilot-safety@github.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Useful links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://copilot.github.com&#34;&gt;GitHub Copilot homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/gallery&#34;&gt;Gallery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/docs&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/github/feedback/discussions/categories/copilot-feedback&#34;&gt;Feedback forum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code of conduct&lt;/h2&gt; &#xA;&lt;p&gt;All users of GitHub Copilot are expected to comply with our &lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;. By participating in this repository, you are also agreeing to the same &lt;a href=&#34;https://help.github.com/articles/github-terms-of-service/&#34;&gt;Terms of Service&lt;/a&gt; that you agree to when using GitHub.com.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Content in this repository is released under &lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/LICENSE.txt&#34;&gt;CC-BY-4.0&lt;/a&gt;. When using the GitHub logos, be sure to follow the &lt;a href=&#34;https://github.com/logos&#34;&gt;GitHub logo guidelines&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>abdulkadir-gungor/JPGtoMalware</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/abdulkadir-gungor/JPGtoMalware</id>
    <link href="https://github.com/abdulkadir-gungor/JPGtoMalware" rel="alternate"></link>
    <summary type="html">&lt;p&gt;It embeds the executable file or payload inside the jpg file. The method the program uses isn&#39;t exactly called one of the steganography methods. For this reason, it does not cause any distortion in the JPG file. The JPG file size and payload do not have to be proportional.The JPG file is displayed normally in any viewing application or web appli…&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JPGtoMalware&lt;/h1&gt; &#xA;&lt;p&gt;It embeds the executable file or payload inside the jpg file. The method the program uses isn&#39;t exactly called one of the steganography methods [secure cover selection, least significant bit, palette-based technique, etc ]. For this reason, it does not cause any distortion in the JPG file. The JPG file size and payload do not have to be proportional.The JPG file is displayed normally in any viewing application or web application. It can bypass various security programs such as firewall, antivirus. If the file is examined in detail, it is easier to detect than steganography methods.However, since the payload in the JPG file is encrypted, it cannot be easily decrypted. It also uses the &#34;garbage code insertion/dead-code insertion&#34; method to prevent the payload from being caught by the antivirus at runtime.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;File(s)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt; &lt;strong&gt;1) InjectingMalwareIntoJPG.py :&lt;/strong&gt; It is the script that embeds the payload into the JPG file.&lt;/p&gt; &#xA;&lt;p&gt; &lt;strong&gt;2) malware_v1.py :&lt;/strong&gt; It is the script that extracts the malware in the existing image file and runs it. The malware loaded JPG file must be in the same folder. (Default JPG Name : &#34;malwareJPG.jpg&#34;)&lt;/p&gt; &#xA;&lt;p&gt; &lt;strong&gt;3) malware_v2.py :&lt;/strong&gt; It is the script that extracts the malware in the JPG file downloaded from the internet and runs it. (Default Url : &#34;&lt;a href=&#34;https://raw.githubusercontent.com/abdulkadir-gungor/JPGtoMalware/main/.image/malwareJPG.jpg&#34;&gt;https://raw.githubusercontent.com/abdulkadir-gungor/JPGtoMalware/main/.image/malwareJPG.jpg&lt;/a&gt;&#34;) (After the script code is compiled, the values of the variables can be seen with the static analysis of the program.)&lt;/p&gt; &#xA;&lt;p&gt; &lt;strong&gt;4) malware_v3.py :&lt;/strong&gt; It is the script that extracts the malware in the JPG file downloaded from the internet and runs it. (Default Url : &#34;&lt;a href=&#34;https://raw.githubusercontent.com/abdulkadir-gungor/JPGtoMalware/main/.image/malwareJPG.jpg&#34;&gt;https://raw.githubusercontent.com/abdulkadir-gungor/JPGtoMalware/main/.image/malwareJPG.jpg&lt;/a&gt;&#34;) (After the script code is compiled, the values of the variables can be seen with dynamic analysis of the program.)&lt;/p&gt; &#xA;&lt;h2&gt;The Compiled Version of the Program Can be Downloaded from the Links Below.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71177413/169827598-5a1c7353-b39e-44c4-839b-ac7559001927.JPG&#34; alt=&#34;screenshot_1&#34;&gt;&lt;/p&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;   &#34;Injecting Malware Into JPG File&#34; &#xA; &lt;/dt&gt;&#xA; &lt;dd&gt; &#xA; &lt;/dd&gt;&#xA; &lt;dd&gt;&#xA;   InjectingMalwareIntoJPG.rar --&amp;gt; zip password: &#34;gungorX&#34; &#xA; &lt;/dd&gt;&#xA; &lt;dd&gt;&#xA;   Link = https://drive.google.com/file/d/1ENt-d0q-Yv-4mZALiUwqvZtp23JH415s/view?usp=sharing &#xA; &lt;/dd&gt;&#xA;&lt;/dl&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;   &#34;Malware V1&#34; &#xA; &lt;/dt&gt;&#xA; &lt;dd&gt; &#xA; &lt;/dd&gt;&#xA; &lt;dd&gt;&#xA;   malware_v1.rar --&amp;gt; zip password: &#34;gungorX&#34; &#xA; &lt;/dd&gt;&#xA; &lt;dd&gt;&#xA;   Link = https://drive.google.com/file/d/1kG2O2pKYxHz03zWpmywA-9CluSP7Orav/view?usp=sharing &#xA; &lt;/dd&gt;&#xA;&lt;/dl&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;   &#34;Malware V2&#34; &#xA; &lt;/dt&gt;&#xA; &lt;dd&gt; &#xA; &lt;/dd&gt;&#xA; &lt;dd&gt;&#xA;   malware_v2.rar --&amp;gt; zip password: &#34;gungorX&#34; &#xA; &lt;/dd&gt;&#xA; &lt;dd&gt;&#xA;   Link = https://drive.google.com/file/d/1yxvb3BjH3Xi3vbE7VTyBDeWGhr8v3cSX/view?usp=sharing &#xA; &lt;/dd&gt;&#xA;&lt;/dl&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;   &#34;Malware V3&#34; &#xA; &lt;/dt&gt;&#xA; &lt;dd&gt; &#xA; &lt;/dd&gt;&#xA; &lt;dd&gt;&#xA;   malware_v3.rar --&amp;gt; zip password: &#34;gungorX&#34; &#xA; &lt;/dd&gt;&#xA; &lt;dd&gt;&#xA;   Link = https://drive.google.com/file/d/1f_JQSrKTknlTg31rDeKOF3NpAVN9NO3C/view?usp=sharing &#xA; &lt;/dd&gt;&#xA;&lt;/dl&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Required libraries: colorama, cryptography, requests, pyinstaller&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install colorama&#xA;pip install cryptography&#xA;pip install requests&#xA;pip install pyinstaller&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&#34;pyinstaller&#34; will be used to make the code one piece executable&lt;/p&gt; &#xA;&lt;h2&gt;Settings&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;InjectingMalwareIntoJPG.py (Default Settings)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;class SETTINGS():&#xA;    PROGRAM_NAME = &#34;Injecting Malware Into JPG&#34;         # Program Name&#xA;    JPG_FILE = &#39;linux.jpg&#39;                              # Jpg file name      # The variable is changed again during the program run.&#xA;    EXE_FILE = &#34;malware.exe&#34;                            # Malware file name  # The variable is changed again during the program run.&#xA;    OUT_FILE = &#34;malwareJPG.jpg&#34;                         # Out file name&#xA;    PUPLIC_KEY = b&#39;!AbdUlkadiR%+39608]gunGor[{&#39;         # Encryption key&#xA;    PRIVATE_NUMBER = 19                                 # Encryption number&#xA;    BUFFER     = 1024                                   # Buffer for memory optimization&#xA;    FILL_SIZE  = 1073741824  # 1024x1024x1024 (1 GB)    # The size to increase the size of the executable file.&#xA;    WAIT_TIME  = 0.1                                    # Waiting time between processes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;malware_v1.py (Default Settings)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;class SETTINGS():&#xA;    JPG_NAME = &#39;malwareJPG.jpg&#39;                       # Jpg file name&#xA;    OUT_FILE = &#34;malware_test.exe&#34;                     # (to be created) Malware file name&#xA;    PUPLIC_KEY = b&#39;!AbdUlkadiR%+39608]gunGor[{&#39;       # Encryption key&#xA;    PRIVATE_NUMBER = 19                               # Encryption number&#xA;    BUFFER     = 1024                                 # Buffer for memory optimization&#xA;    WAIT_TIME  = 0.1                                  # Waiting time between processes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;malware_v2.py (Default Settings)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;class SETTINGS():&#xA;    URL_ADDR = &#34;https://raw.githubusercontent.com/abdulkadir-gungor/JPGtoMalware/main/.image/malwareJPG.jpg&#34;  # url where the image is located&#xA;    OUT_FILE = &#34;malware_test.exe&#34;                       # (to be created) Malware file name&#xA;    PUPLIC_KEY = b&#39;!AbdUlkadiR%+39608]gunGor[{&#39;         # Encryption key&#xA;    PRIVATE_NUMBER = 19                                 # Encryption number&#xA;    JPG_NAME  = &#39;malware_attack.jpg&#39;                    # Jpg file name&#xA;    BUFFER     = 1024                                   # Buffer for memory optimization&#xA;    WAIT_TIME  = 0.1                                    # Waiting time between processes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;malware_v3.py (Default Settings)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Encrypted data for static analysis&#xA;# However, variables can be resolved with dynamic analysis.&#xA;class SETTINGS():&#xA;    KEY      = b&#39;w3F4q2qyPG6WGHMwG6TrYq2R_ih9-_XTYH0H89J7UMk=&#39;&#xA;    URL_ADDR = b&#39;gAAAAABiinQIPIhKqfLYaKt76lRXeboIJfCDr0NGsGROzSLe3ndeSo9RxM-EXNzsxFjwC-sU3axowzYaZCgsSfMl4qe4rWGaLbmNY0zD6_S34lOO10a_idkEQpfVSld0BSM7Yd4LXpgH6Fvkuw36QVlzmI_NvQJ6v5_mgEmCIzhSbiuMHJ-p9hdj28-2cMRa1BcFWZBbbRe7&#39;&#xA;    OUT_FILE = b&#39;gAAAAABiinRLcZh6qJ959Mzqup5ZLOnGwAQBAFPXD6hebpSpI4u3M24Npi3lIbTjW5ImEYwiz6WfD8JOyrcDzjR5gpTun4pI0gPHjf-xi_LSboOy5B7hwXo=&#39;&#xA;    PUPLIC_KEY = b&#39;rt!1AtbydmUklvkaapdli+R)%=+4359?6#0!8-][gGu1nFGqoQrP[-{!Ue&amp;amp;&amp;amp;QcVb09@&#39;&#xA;    PRIVATE_NUMBER = 4&#xA;    JPG_NAME  = b&#39;gAAAAABiinSMlx2n6LSUzHfrET4UDnv_Fy7lc7h9zAKsC6p9ulM56yW0nXarAWvU2nmZqdNscglA9MLr2P3p20ADC3CWZsul4-YnfDiIFl13tZUnZ_BdDRU=&#39;&#xA;    BUFFER     = 1024&#xA;    WAIT_TIME  = 0.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compilation&lt;/h2&gt; &#xA;&lt;p&gt;[Language : Python 3.8.5]&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# [Program that produces jpg with malware]&#xA;pyinstaller --onefile  --icon=InjectingMalwareIntoJPG.ico InjectingMalwareIntoJPG.py&#xA;&#xA;# [Malware(s)]&#xA;pyinstaller --onefile  --noconsole  --icon=malware.ico  malware_v1.py&#xA;pyinstaller --onefile  --noconsole  --icon=malware.ico  malware_v2.py&#xA;pyinstaller --onefile  --noconsole  --icon=malware.ico  malware_v3.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Some Screenshot of the Working of the Program&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Screenshot [1] (InjectingMalwareIntoJPG.exe)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71177413/169830319-200b087d-f53e-41a2-80a9-d4d56ae95bdc.JPG&#34; alt=&#34;screenshot_2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Screenshot [2] (InjectingMalwareIntoJPG.exe)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71177413/169830432-b0c272d0-b79e-4f7a-981a-c32b5116cf08.JPG&#34; alt=&#34;screenshot_3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Screenshot [3] (malware_v1.exe)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71177413/169830565-2fbfefbe-140c-487b-876b-e9cda32a58e3.JPG&#34; alt=&#34;screenshot_4&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Screenshot [4] (malware_v1.exe)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71177413/169830641-594b4ed5-2fdb-49cb-adaa-c8f4a61ca4cc.JPG&#34; alt=&#34;screenshot_5&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Screenshot [5] (malware_v2.exe)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71177413/169830824-7f96234a-d4bb-4233-b21f-28f243a62510.JPG&#34; alt=&#34;screenshot_7&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Screenshot [6] (malware_v3.exe)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71177413/169830917-8119fc34-32f8-4aa3-aa78-9a4235941c10.JPG&#34; alt=&#34;screenshot_9&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Legal Warning&lt;/h2&gt; &#xA;&lt;p&gt;Run your tests on virtual machines. The responsibility for illegal use belongs to the user. Shared for educational purposes.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>borisdayma/dalle-mini</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/borisdayma/dalle-mini</id>
    <link href="https://github.com/borisdayma/dalle-mini" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DALL·E Mini - Generate images from a text prompt&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;h2&gt;title: DALL·E mini emoji: 🥑 colorFrom: yellow colorTo: green sdk: gradio sdk_version: 3.0.3 app_file: app/gradio/app.py pinned: True license: apache-2.0&lt;/h2&gt; &#xA;&lt;h1&gt;DALL·E Mini&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/xBPBXfcFHd&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/823813159592001537?color=5865F2&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Join us on Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Generate images from a text prompt&lt;/em&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/borisdayma/dalle-mini/raw/main/img/logo.png&#34; width=&#34;200&#34;&gt; &#xA;&lt;p&gt;Our logo was generated with DALL·E mini using the prompt &#34;logo of an armchair in the shape of an avocado&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;How to use it?&lt;/h2&gt; &#xA;&lt;p&gt;There are several ways to use DALL·E mini to create your own images:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;use &lt;a href=&#34;https://huggingface.co/spaces/dalle-mini/dalle-mini&#34;&gt;the official DALL·E Mini demo&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;experiment with the pipeline step by step through our &lt;a href=&#34;https://raw.githubusercontent.com/borisdayma/dalle-mini/main/tools/inference/inference_pipeline.ipynb&#34;&gt;&lt;code&gt;inference pipeline notebook&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/borisdayma/dalle-mini/blob/main/tools/inference/inference_pipeline.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;spin off your own app with &lt;a href=&#34;https://github.com/saharmor/dalle-playground&#34;&gt;DALL-E Playground repository&lt;/a&gt; (thanks &lt;a href=&#34;https://twitter.com/theaievangelist&#34;&gt;Sahar&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;try &lt;a href=&#34;https://github.com/jina-ai/dalle-flow&#34;&gt;DALL·E Flow&lt;/a&gt; project for generating, diffusion, upscaling in a Human-in-the-Loop workflow.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/jina-ai/dalle-flow/blob/main/client.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How does it work?&lt;/h2&gt; &#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://wandb.ai/dalle-mini/dalle-mini/reports/DALL-E-mini-Generate-images-from-any-text-prompt--VmlldzoyMDE4NDAy&#34;&gt;our report&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Join the community on the &lt;a href=&#34;https://discord.gg/xBPBXfcFHd&#34;&gt;LAION Discord&lt;/a&gt;. Any contribution is welcome, from reporting issues to proposing fixes/improvements or testing the model with cool prompts!&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Dependencies Installation&lt;/h3&gt; &#xA;&lt;p&gt;For inference only, use &lt;code&gt;pip install git+https://github.com/borisdayma/dalle-mini.git&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For development, clone the repo and use &lt;code&gt;pip install -e &#34;.[dev]&#34;&lt;/code&gt;. Before making a PR, check style with &lt;code&gt;make style&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Training of DALL·E mini&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://raw.githubusercontent.com/borisdayma/dalle-mini/main/tools/train/train.py&#34;&gt;&lt;code&gt;tools/train/train.py&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also adjust the &lt;a href=&#34;https://docs.wandb.ai/guides/sweeps&#34;&gt;sweep configuration file&lt;/a&gt; if you need to perform a hyperparameter search.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Where to find the latest models?&lt;/h3&gt; &#xA;&lt;p&gt;Trained models are on 🤗 Model Hub:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/dalle-mini/vqgan_imagenet_f16_16384&#34;&gt;VQGAN-f16-16384&lt;/a&gt; for encoding/decoding images&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/flax-community/dalle-mini&#34;&gt;DALL·E mini&lt;/a&gt; for generating images from a text prompt&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Where does the logo come from?&lt;/h3&gt; &#xA;&lt;p&gt;The &#34;armchair in the shape of an avocado&#34; was used by OpenAI when releasing DALL·E to illustrate the model&#39;s capabilities. Having successful predictions on this prompt represents a big milestone to us.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🤗 Hugging Face for organizing &lt;a href=&#34;https://github.com/huggingface/transformers/tree/master/examples/research_projects/jax-projects&#34;&gt;the FLAX/JAX community week&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Google &lt;a href=&#34;https://sites.research.google/trc/&#34;&gt;TPU Research Cloud (TRC) program&lt;/a&gt; for providing computing resources&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wandb.com/&#34;&gt;Weights &amp;amp; Biases&lt;/a&gt; for providing the infrastructure for experiment tracking and model management&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Authors &amp;amp; Contributors&lt;/h2&gt; &#xA;&lt;p&gt;DALL·E mini was initially developed by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/borisdayma&#34;&gt;Boris Dayma&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/patil-suraj&#34;&gt;Suraj Patil&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pcuenca&#34;&gt;Pedro Cuenca&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/khalidsaifullaah&#34;&gt;Khalid Saifullah&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tmabraham&#34;&gt;Tanishq Abraham&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lkhphuc&#34;&gt;Phúc Lê Khắc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lukemelas&#34;&gt;Luke Melas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ghosh-r&#34;&gt;Ritobrata Ghosh&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Many thanks to the people who helped make it better:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the &lt;a href=&#34;https://discord.gg/xBPBXfcFHd&#34;&gt;DALLE-Pytorch&lt;/a&gt; and &lt;a href=&#34;https://www.eleuther.ai/&#34;&gt;EleutherAI&lt;/a&gt; communities for testing and exchanging cool ideas&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rohan-anil&#34;&gt;Rohan Anil&lt;/a&gt; for adding Distributed Shampoo optimizer and always giving great suggestions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lucidrains&#34;&gt;Phil Wang&lt;/a&gt; has provided a lot of cool implementations of transformer variants and gives interesting insights with &lt;a href=&#34;https://github.com/lucidrains/x-transformers&#34;&gt;x-transformers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crowsonkb&#34;&gt;Katherine Crowson&lt;/a&gt; for &lt;a href=&#34;https://twitter.com/RiversHaveWings/status/1478093658716966912&#34;&gt;super conditioning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;the &lt;a href=&#34;https://gradio.app/&#34;&gt;Gradio team&lt;/a&gt; made an amazing UI for our app&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citing DALL·E mini&lt;/h2&gt; &#xA;&lt;p&gt;If you find DALL·E mini useful in your research or wish to refer, please use the following BibTeX entry.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{Dayma_DALL·E_Mini_2021,&#xA;      author = {Dayma, Boris and Patil, Suraj and Cuenca, Pedro and Saifullah, Khalid and Abraham, Tanishq and Lê Khắc, Phúc and Melas, Luke and Ghosh, Ritobrata},&#xA;      doi = {10.5281/zenodo.5146400},&#xA;      month = {7},&#xA;      title = {DALL·E Mini},&#xA;      url = {https://github.com/borisdayma/dalle-mini},&#xA;      year = {2021}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;p&gt;Original DALL·E from &#34;&lt;a href=&#34;https://arxiv.org/abs/2102.12092&#34;&gt;Zero-Shot Text-to-Image Generation&lt;/a&gt;&#34; with image quantization from &#34;&lt;a href=&#34;https://arxiv.org/abs/2103.00020&#34;&gt;Learning Transferable Visual Models From Natural Language Supervision&lt;/a&gt;&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Image encoder from &#34;&lt;a href=&#34;https://arxiv.org/abs/2012.09841v2&#34;&gt;Taming Transformers for High-Resolution Image Synthesis&lt;/a&gt;&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Sequence to sequence model based on &#34;&lt;a href=&#34;https://arxiv.org/abs/1910.13461v1&#34;&gt;BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension&lt;/a&gt;&#34; with implementation of a few variants:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;&lt;a href=&#34;https://arxiv.org/abs/2002.05202&#34;&gt;GLU Variants Improve Transformer&lt;/a&gt;&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;&lt;a href=&#34;https://arxiv.org/abs/2203.00555&#34;&gt;Deepnet: Scaling Transformers to 1,000 Layers&lt;/a&gt;&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;&lt;a href=&#34;https://arxiv.org/abs/2110.09456&#34;&gt;NormFormer: Improved Transformer Pretraining with Extra Normalization&lt;/a&gt;&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;&lt;a href=&#34;https://arxiv.org/abs/2103.14030&#34;&gt;Swin Transformer: Hierarchical Vision Transformer using Shifted Windows&lt;/a&gt;&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;&lt;a href=&#34;https://arxiv.org/abs/2105.13290v2&#34;&gt;CogView: Mastering Text-to-Image Generation via Transformers&lt;/a&gt;&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;&lt;a href=&#34;https://arxiv.org/abs/1910.07467&#34;&gt;Root Mean Square Layer Normalization&lt;/a&gt;&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;&lt;a href=&#34;https://arxiv.org/abs/2110.11773&#34;&gt;Sinkformers: Transformers with Doubly Stochastic Attention&lt;/a&gt;&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Main optimizer (Distributed Shampoo) from &#34;&lt;a href=&#34;https://arxiv.org/abs/2002.09018&#34;&gt;Scalable Second Order Optimization for Deep Learning&lt;/a&gt;&#34;.&lt;/p&gt; &#xA;&lt;h3&gt;Citations&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title={Zero-Shot Text-to-Image Generation}, &#xA;  author={Aditya Ramesh and Mikhail Pavlov and Gabriel Goh and Scott Gray and Chelsea Voss and Alec Radford and Mark Chen and Ilya Sutskever},&#xA;  year={2021},&#xA;  eprint={2102.12092},&#xA;  archivePrefix={arXiv},&#xA;  primaryClass={cs.CV}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title={Learning Transferable Visual Models From Natural Language Supervision}, &#xA;  author={Alec Radford and Jong Wook Kim and Chris Hallacy and Aditya Ramesh and Gabriel Goh and Sandhini Agarwal and Girish Sastry and Amanda Askell and Pamela Mishkin and Jack Clark and Gretchen Krueger and Ilya Sutskever},&#xA;  year={2021},&#xA;  eprint={2103.00020},&#xA;  archivePrefix={arXiv},&#xA;  primaryClass={cs.CV}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title={Taming Transformers for High-Resolution Image Synthesis}, &#xA;  author={Patrick Esser and Robin Rombach and Björn Ommer},&#xA;  year={2021},&#xA;  eprint={2012.09841},&#xA;  archivePrefix={arXiv},&#xA;  primaryClass={cs.CV}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title={BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension}, &#xA;  author={Mike Lewis and Yinhan Liu and Naman Goyal and Marjan Ghazvininejad and Abdelrahman Mohamed and Omer Levy and Ves Stoyanov and Luke Zettlemoyer},&#xA;  year={2019},&#xA;  eprint={1910.13461},&#xA;  archivePrefix={arXiv},&#xA;  primaryClass={cs.CL}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title={Scalable Second Order Optimization for Deep Learning},&#xA;  author={Rohan Anil and Vineet Gupta and Tomer Koren and Kevin Regan and Yoram Singer},&#xA;  year={2021},&#xA;  eprint={2002.09018},&#xA;  archivePrefix={arXiv},&#xA;  primaryClass={cs.LG}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title={GLU Variants Improve Transformer},&#xA;  author={Noam Shazeer},&#xA;  year={2020},&#xA;  url={https://arxiv.org/abs/2002.05202}    &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt; @misc{&#xA;  title={DeepNet: Scaling transformers to 1,000 layers},&#xA;  author={Wang, Hongyu and Ma, Shuming and Dong, Li and Huang, Shaohan and Zhang, Dongdong and Wei, Furu},&#xA;  year={2022},&#xA;  eprint={2203.00555}&#xA;  archivePrefix={arXiv},&#xA;  primaryClass={cs.LG}&#xA;} &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title={NormFormer: Improved Transformer Pretraining with Extra Normalization},&#xA;  author={Sam Shleifer and Jason Weston and Myle Ott},&#xA;  year={2021},&#xA;  eprint={2110.09456},&#xA;  archivePrefix={arXiv},&#xA;  primaryClass={cs.CL}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@inproceedings{&#xA;  title={Swin Transformer V2: Scaling Up Capacity and Resolution}, &#xA;  author={Ze Liu and Han Hu and Yutong Lin and Zhuliang Yao and Zhenda Xie and Yixuan Wei and Jia Ning and Yue Cao and Zheng Zhang and Li Dong and Furu Wei and Baining Guo},&#xA;  booktitle={International Conference on Computer Vision and Pattern Recognition (CVPR)},&#xA;  year={2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title = {CogView: Mastering Text-to-Image Generation via Transformers},&#xA;  author = {Ming Ding and Zhuoyi Yang and Wenyi Hong and Wendi Zheng and Chang Zhou and Da Yin and Junyang Lin and Xu Zou and Zhou Shao and Hongxia Yang and Jie Tang},&#xA;  year = {2021},&#xA;  eprint = {2105.13290},&#xA;  archivePrefix = {arXiv},&#xA;  primaryClass = {cs.CV}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title = {Root Mean Square Layer Normalization},&#xA;  author = {Biao Zhang and Rico Sennrich},&#xA;  year = {2019},&#xA;  eprint = {1910.07467},&#xA;  archivePrefix = {arXiv},&#xA;  primaryClass = {cs.LG}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title = {Sinkformers: Transformers with Doubly Stochastic Attention},&#xA;  url = {https://arxiv.org/abs/2110.11773},&#xA;  author = {Sander, Michael E. and Ablin, Pierre and Blondel, Mathieu and Peyré, Gabriel},&#xA;  publisher = {arXiv},&#xA;  year = {2021},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;@misc{&#xA;  title = {Smooth activations and reproducibility in deep networks},&#xA;  url = {https://arxiv.org/abs/2010.09931},&#xA;  author = {Shamir, Gil I. and Lin, Dong and Coviello, Lorenzo},&#xA;  publisher = {arXiv},&#xA;  year = {2020},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>deepset-ai/haystack</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/deepset-ai/haystack</id>
    <link href="https://github.com/deepset-ai/haystack" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔍 Haystack is an open source NLP framework that leverages Transformer models. It enables developers to implement production-ready neural search, question answering, semantic document search and summarization for a wide range of applications.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.deepset.ai/haystack/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deepset-ai/haystack/master/docs/img/haystack_logo_colored.png&#34; alt=&#34;Haystack&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://github.com/deepset-ai/haystack/actions&#34;&gt; &lt;img alt=&#34;Build&#34; src=&#34;https://github.com/deepset-ai/haystack/workflows/Build/badge.svg?branch=master&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://haystack.deepset.ai/overview/intro&#34;&gt; &lt;img alt=&#34;Documentation&#34; src=&#34;https://img.shields.io/website/http/haystack.deepset.ai/docs/intromd.svg?down_color=red&amp;amp;down_message=offline&amp;amp;up_message=online&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/deepset-ai/haystack/releases&#34;&gt; &lt;img alt=&#34;Release&#34; src=&#34;https://img.shields.io/github/release/deepset-ai/haystack&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/deepset-ai/haystack/commits/master&#34;&gt; &lt;img alt=&#34;Last commit&#34; src=&#34;https://img.shields.io/github/last-commit/deepset-ai/haystack&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://pepy.tech/project/farm-haystack&#34;&gt; &lt;img alt=&#34;Downloads&#34; src=&#34;https://pepy.tech/badge/farm-haystack/month&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.deepset.ai/jobs&#34;&gt; &lt;img alt=&#34;Jobs&#34; src=&#34;https://img.shields.io/badge/Jobs-We&#39;re%20hiring-blue&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=deepset_ai&#34;&gt; &lt;img alt=&#34;Twitter&#34; src=&#34;https://img.shields.io/twitter/follow/deepset_ai?style=social&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Haystack is an end-to-end framework that enables you to build powerful and production-ready pipelines for different search use cases. Whether you want to perform Question Answering or semantic document search, you can use the State-of-the-Art NLP models in Haystack to provide unique search experiences and allow your users to query in natural language. Haystack is built in a modular fashion so that you can combine the best technology from other open-source projects like Huggingface&#39;s Transformers, Elasticsearch, or Milvus.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deepset-ai/haystack/master/docs/img/main_example.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What to build with Haystack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ask questions in natural language&lt;/strong&gt; and find granular answers in your documents.&lt;/li&gt; &#xA; &lt;li&gt;Perform &lt;strong&gt;semantic search&lt;/strong&gt; and retrieve documents according to meaning, not keywords&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;strong&gt;off-the-shelf models&lt;/strong&gt; or &lt;strong&gt;fine-tune&lt;/strong&gt; them to your domain.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;strong&gt;user feedback&lt;/strong&gt; to evaluate, benchmark, and continuously improve your live models.&lt;/li&gt; &#xA; &lt;li&gt;Leverage existing &lt;strong&gt;knowledge bases&lt;/strong&gt; and better handle the long tail of queries that &lt;strong&gt;chatbots&lt;/strong&gt; receive.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Automate processes&lt;/strong&gt; by automatically applying a list of questions to new documents and using the extracted answers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Core Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Latest models&lt;/strong&gt;: Utilize all latest transformer-based models (e.g., BERT, RoBERTa, MiniLM) for extractive QA, generative QA, and document retrieval.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Modular&lt;/strong&gt;: Multiple choices to fit your tech stack and use case. Pick your favorite database, file converter, or modeling framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pipelines&lt;/strong&gt;: The Node and Pipeline design of Haystack allows for custom routing of queries to only the relevant components.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open&lt;/strong&gt;: 100% compatible with HuggingFace&#39;s model hub. Tight interfaces to other frameworks (e.g., Transformers, FARM, sentence-transformers)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scalable&lt;/strong&gt;: Scale to millions of docs via retrievers, production-ready backends like Elasticsearch / FAISS, and a fastAPI REST API&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;End-to-End&lt;/strong&gt;: All tooling in one place: file conversion, cleaning, splitting, training, eval, inference, labeling, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Developer friendly&lt;/strong&gt;: Easy to debug, extend and modify.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customizable&lt;/strong&gt;: Fine-tune models to your domain or implement your custom DocumentStore.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Continuous Learning&lt;/strong&gt;: Collect new training data via user feedback in production &amp;amp; improve your models continuously&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;📒&lt;/span&gt; &lt;a href=&#34;https://haystack.deepset.ai/overview/intro&#34;&gt;Docs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Overview, Components, Guides, API documentation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;💾&lt;/span&gt; &lt;a href=&#34;https://github.com/deepset-ai/haystack#floppy_disk-installation&#34;&gt;Installation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;How to install Haystack&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;🎓&lt;/span&gt; &lt;a href=&#34;https://github.com/deepset-ai/haystack#mortar_board-tutorials&#34;&gt;Tutorials&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See what Haystack can do with our Notebooks &amp;amp; Scripts&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;🔰&lt;/span&gt; &lt;a href=&#34;https://github.com/deepset-ai/haystack#beginner-quick-demo&#34;&gt;Quick Demo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a Haystack application with Docker Compose and a REST API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;🖖&lt;/span&gt; &lt;a href=&#34;https://github.com/deepset-ai/haystack#vulcan_salute-community&#34;&gt;Community&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://haystack.deepset.ai/community/join&#34;&gt;Slack&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/deepset_ai&#34;&gt;Twitter&lt;/a&gt;, &lt;a href=&#34;https://stackoverflow.com/questions/tagged/haystack&#34;&gt;Stack Overflow&lt;/a&gt;, &lt;a href=&#34;https://github.com/deepset-ai/haystack/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;❤️&lt;/span&gt; &lt;a href=&#34;https://github.com/deepset-ai/haystack#heart-contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;We welcome all contributions!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;📊&lt;/span&gt; &lt;a href=&#34;https://haystack.deepset.ai/benchmarks/latest&#34;&gt;Benchmarks&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Speed &amp;amp; Accuracy of Retriever, Readers and DocumentStores&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;🔭&lt;/span&gt; &lt;a href=&#34;https://haystack.deepset.ai/overview/roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Public roadmap of Haystack&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;📰&lt;/span&gt; &lt;a href=&#34;https://medium.com/deepset-ai&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Read our articles on Medium&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;☎&lt;/span&gt; &lt;a href=&#34;https://www.deepset.ai/jobs&#34;&gt;Jobs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;We&#39;re hiring! Have a look at our open positions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;&lt;span&gt;💾&lt;/span&gt; Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Basic Installation&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can install a basic version of Haystack&#39;s latest release by using &lt;a href=&#34;https://github.com/pypa/pip&#34;&gt;pip&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    pip3 install farm-haystack&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will install everything needed for basic Pipelines that use an Elasticsearch Document Store.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Full Installation&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you plan to be using more advanced features like Milvus, FAISS, Weaviate, OCR or Ray, you will need to install a full version of Haystack. The following command will install the latest version of Haystack from the master branch.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/deepset-ai/haystack.git&#xA;cd haystack&#xA;pip install --upgrade pip&#xA;pip install -e &#39;.[all]&#39; ## or &#39;all-gpu&#39; for the GPU-enabled dependencies&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you cannot upgrade &lt;code&gt;pip&lt;/code&gt; to version 21.3 or higher, you will need to replace:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&#39;.[all]&#39;&lt;/code&gt; with &lt;code&gt;&#39;.[sql,only-faiss,only-milvus1,weaviate,graphdb,crawler,preprocessing,ocr,onnx,ray,dev]&#39;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&#39;.[all-gpu]&#39;&lt;/code&gt; with &lt;code&gt;&#39;.[sql,only-faiss-gpu,only-milvus1,weaviate,graphdb,crawler,preprocessing,ocr,onnx-gpu,ray,dev]&#39;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For an complete list of the dependency groups available, have a look at the &lt;code&gt;haystack/setup.cfg&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;To install the REST API and UI, run the following from the root directory of the Haystack repo&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install rest_api/&#xA;pip install ui/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Installing on Windows&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install farm-haystack -f https://download.pytorch.org/whl/torch_stable.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;4. Installing on Apple Silicon (M1)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;M1 Macbooks require some extra depencies in order to install Haystack.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# some additional dependencies needed on m1 mac&#xA;brew install postgresql&#xA;brew install cmake&#xA;brew install rust&#xA;&#xA;# haystack installation&#xA;GRPC_PYTHON_BUILD_SYSTEM_ZLIB=true pip install git+https://github.com/deepset-ai/haystack.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;5. Learn More&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://haystack.deepset.ai/overview/get-started&#34;&gt;installation guide&lt;/a&gt; for more options. You can find out more about our PyPi package on our &lt;a href=&#34;https://pypi.org/project/farm-haystack/&#34;&gt;PyPi page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;🎓&lt;/span&gt; Tutorials&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deepset-ai/haystack/master/docs/img/concepts_haystack_handdrawn.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Follow our &lt;a href=&#34;https://haystack.deepset.ai/tutorials/first-qa-system&#34;&gt;introductory tutorial&lt;/a&gt; to setup a question answering system using Python and start performing queries! Explore the rest of our tutorials to learn how to tweak pipelines, train models and perform evaluation.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tutorial 1 - Basic QA Pipeline: &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial1_Basic_QA_Pipeline.ipynb&#34;&gt;Jupyter notebook&lt;/a&gt; | &lt;a href=&#34;https://colab.research.google.com/github/deepset-ai/haystack/blob/master/tutorials/Tutorial1_Basic_QA_Pipeline.ipynb&#34;&gt;Colab&lt;/a&gt; | &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial1_Basic_QA_Pipeline.py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorial 2 - Fine-tuning a model on own data: &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial2_Finetune_a_model_on_your_data.ipynb&#34;&gt;Jupyter notebook&lt;/a&gt; | &lt;a href=&#34;https://colab.research.google.com/github/deepset-ai/haystack/blob/master/tutorials/Tutorial2_Finetune_a_model_on_your_data.ipynb&#34;&gt;Colab&lt;/a&gt; | &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial2_Finetune_a_model_on_your_data.py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorial 3 - Basic QA Pipeline without Elasticsearch: &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial3_Basic_QA_Pipeline_without_Elasticsearch.ipynb&#34;&gt;Jupyter notebook&lt;/a&gt; | &lt;a href=&#34;https://colab.research.google.com/github/deepset-ai/haystack/blob/master/tutorials/Tutorial3_Basic_QA_Pipeline_without_Elasticsearch.ipynb&#34;&gt;Colab&lt;/a&gt; | &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial3_Basic_QA_Pipeline_without_Elasticsearch.py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorial 4 - FAQ-style QA: &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial4_FAQ_style_QA.ipynb&#34;&gt;Jupyter notebook&lt;/a&gt; | &lt;a href=&#34;https://colab.research.google.com/github/deepset-ai/haystack/blob/master/tutorials/Tutorial4_FAQ_style_QA.ipynb&#34;&gt;Colab&lt;/a&gt; | &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial4_FAQ_style_QA.py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorial 5 - Evaluation of the whole QA-Pipeline: &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial5_Evaluation.ipynb&#34;&gt;Jupyter noteboook&lt;/a&gt; | &lt;a href=&#34;https://colab.research.google.com/github/deepset-ai/haystack/blob/master/tutorials/Tutorial5_Evaluation.ipynb&#34;&gt;Colab&lt;/a&gt; | &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial5_Evaluation.py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorial 6 - Better Retrievers via &#34;Dense Passage Retrieval&#34;: &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial6_Better_Retrieval_via_DPR.ipynb&#34;&gt;Jupyter noteboook&lt;/a&gt; | &lt;a href=&#34;https://colab.research.google.com/github/deepset-ai/haystack/blob/master/tutorials/Tutorial6_Better_Retrieval_via_DPR.ipynb&#34;&gt;Colab&lt;/a&gt; | &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial6_Better_Retrieval_via_DPR.py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorial 7 - Generative QA via &#34;Retrieval-Augmented Generation&#34;: &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial7_RAG_Generator.ipynb&#34;&gt;Jupyter noteboook&lt;/a&gt; | &lt;a href=&#34;https://colab.research.google.com/github/deepset-ai/haystack/blob/master/tutorials/Tutorial7_RAG_Generator.ipynb&#34;&gt;Colab&lt;/a&gt; | &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial7_RAG_Generator.py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorial 8 - Preprocessing: &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial8_Preprocessing.ipynb&#34;&gt;Jupyter noteboook&lt;/a&gt; | &lt;a href=&#34;https://colab.research.google.com/github/deepset-ai/haystack/blob/master/tutorials/Tutorial8_Preprocessing.ipynb&#34;&gt;Colab&lt;/a&gt; | &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial8_Preprocessing.py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorial 9 - DPR Training: &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial9_DPR_training.ipynb&#34;&gt;Jupyter noteboook&lt;/a&gt; | &lt;a href=&#34;https://colab.research.google.com/github/deepset-ai/haystack/blob/master/tutorials/Tutorial9_DPR_training.ipynb&#34;&gt;Colab&lt;/a&gt; | &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial9_DPR_training.py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorial 10 - Knowledge Graph: &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial10_Knowledge_Graph.ipynb&#34;&gt;Jupyter noteboook&lt;/a&gt; | &lt;a href=&#34;https://colab.research.google.com/github/deepset-ai/haystack/blob/master/tutorials/Tutorial10_Knowledge_Graph.ipynb&#34;&gt;Colab&lt;/a&gt; | &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial10_Knowledge_Graph.py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorial 11 - Pipelines: &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial11_Pipelines.ipynb&#34;&gt;Jupyter noteboook&lt;/a&gt; | &lt;a href=&#34;https://colab.research.google.com/github/deepset-ai/haystack/blob/master/tutorials/Tutorial11_Pipelines.ipynb&#34;&gt;Colab&lt;/a&gt; | &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial11_Pipelines.py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorial 12 - Long-Form Question Answering: &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial12_LFQA.ipynb&#34;&gt;Jupyter noteboook&lt;/a&gt; | &lt;a href=&#34;https://colab.research.google.com/github/deepset-ai/haystack/blob/master/tutorials/Tutorial12_LFQA.ipynb&#34;&gt;Colab&lt;/a&gt; | &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial12_LFQA.py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorial 13 - Question Generation: &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial13_Question_generation.ipynb&#34;&gt;Jupyter noteboook&lt;/a&gt; | &lt;a href=&#34;https://colab.research.google.com/github/deepset-ai/haystack/blob/master/tutorials/Tutorial13_Question_generation.ipynb&#34;&gt;Colab&lt;/a&gt; | &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial13_Question_generation.py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorial 14 - Query Classifier: &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial14_Query_Classifier.ipynb&#34;&gt;Jupyter noteboook&lt;/a&gt; | &lt;a href=&#34;https://colab.research.google.com/github/deepset-ai/haystack/blob/master/tutorials/Tutorial14_Query_Classifier.ipynb&#34;&gt;Colab&lt;/a&gt; | &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial14_Query_Classifier.py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorial 15 - TableQA: &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial15_TableQA.ipynb&#34;&gt;Jupyter noteboook&lt;/a&gt; | &lt;a href=&#34;https://colab.research.google.com/github/deepset-ai/haystack/blob/master/tutorials/Tutorial15_TableQA.ipynb&#34;&gt;Colab&lt;/a&gt; | &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/tutorials/Tutorial15_TableQA.py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;🔰&lt;/span&gt; Quick Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Hosted&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Try out our hosted &lt;a href=&#34;https://haystack-demo.deepset.ai/&#34;&gt;Explore The World&lt;/a&gt; live demo here! Ask any question on countries or capital cities and let Haystack return the answers to you.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Local&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Start up a Haystack service via &lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Docker Compose&lt;/a&gt;. With this you can begin calling it directly via the REST API or even interact with it using the included Streamlit UI.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click here for a step-by-step guide&lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;1. Update/install Docker and Docker Compose, then launch Docker&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;    apt-get update &amp;amp;&amp;amp; apt-get install docker &amp;amp;&amp;amp; apt-get install docker-compose&#xA;    service docker start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;2. Clone Haystack repository&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;    git clone https://github.com/deepset-ai/haystack.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;3. Pull images &amp;amp; launch demo app&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;    cd haystack&#xA;    docker-compose pull&#xA;    docker-compose up&#xA;    &#xA;    # Or on a GPU machine: docker-compose -f docker-compose-gpu.yml up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;You should be able to see the following in your terminal window as part of the log output:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;..&#xA;ui_1             |   You can now view your Streamlit app in your browser.&#xA;..&#xA;ui_1             |   External URL: http://192.168.108.218:8501&#xA;..&#xA;haystack-api_1   | [2021-01-01 10:21:58 +0000] [17] [INFO] Application startup complete.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;4. Open the Streamlit UI for Haystack by pointing your browser to the &#34;External URL&#34; from above.&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;You should see the following:&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deepset-ai/haystack/master/docs/img/streamlit_ui_screenshot.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;You can then try different queries against a pre-defined set of indexed articles related to Game of Thrones.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The following containers are started as a part of this demo:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Haystack API: listens on port 8000&lt;/li&gt; &#xA;  &lt;li&gt;DocumentStore (Elasticsearch): listens on port 9200&lt;/li&gt; &#xA;  &lt;li&gt;Streamlit UI: listens on port 8501&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;Please note that the demo will &lt;a href=&#34;https://docs.docker.com/config/containers/container-networking/&#34;&gt;publish&lt;/a&gt; the container ports to the outside world. &lt;em&gt;We suggest that you review the firewall settings depending on your system setup and the security guidelines.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;&lt;span&gt;🖖&lt;/span&gt; Community&lt;/h2&gt; &#xA;&lt;p&gt;There is a very vibrant and active community around Haystack which we are regularly interacting with! If you have a feature request or a bug report, feel free to open an &lt;a href=&#34;https://github.com/deepset-ai/haystack/issues&#34;&gt;issue in Github&lt;/a&gt;. We regularly check these and you can expect a quick response. If you&#39;d like to discuss a topic, or get more general advice on how to make Haystack work for your project, you can start a thread in &lt;a href=&#34;https://github.com/deepset-ai/haystack/discussions&#34;&gt;Github Discussions&lt;/a&gt; or our &lt;a href=&#34;https://haystack.deepset.ai/community/join&#34;&gt;Slack channel&lt;/a&gt;. We also check &lt;a href=&#34;https://twitter.com/deepset_ai&#34;&gt;Twitter&lt;/a&gt; and &lt;a href=&#34;https://stackoverflow.com/questions/tagged/haystack&#34;&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;❤️&lt;/span&gt; Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We are very open to the community&#39;s contributions - be it a quick fix of a typo, or a completely new feature! You don&#39;t need to be a Haystack expert to provide meaningful improvements. To learn how to get started, check out our &lt;a href=&#34;https://github.com/deepset-ai/haystack/raw/master/CONTRIBUTING.md&#34;&gt;Contributor Guidelines&lt;/a&gt; first. You can also find instructions to run the tests locally there.&lt;/p&gt; &#xA;&lt;p&gt;Thanks so much to all those who have contributed to our project!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/deepset-ai/haystack/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=deepset-ai/haystack&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Who uses Haystack&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s a list of organizations who use Haystack. Don&#39;t hesitate to send a PR to let the world know that you use Haystack. Join our growing community!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.airbus.com/en&#34;&gt;Airbus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.al-enterprise.com/&#34;&gt;Alcatel-Lucent&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.betterup.com/&#34;&gt;BetterUp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://deepset.ai/&#34;&gt;Deepset&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.etalab.gouv.fr/&#34;&gt;Etalab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.infineon.com/&#34;&gt;Infineon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sooth.ai/&#34;&gt;Sooth.ai&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ageitgey/face_recognition</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/ageitgey/face_recognition</id>
    <link href="https://github.com/ageitgey/face_recognition" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The world&#39;s simplest facial recognition api for Python and the command line&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Face Recognition&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;You can also read a translated version of this file &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/README_Simplified_Chinese.md&#34;&gt;in Chinese 简体中文版&lt;/a&gt; or &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/README_Korean.md&#34;&gt;in Korean 한국어&lt;/a&gt; or &lt;a href=&#34;https://github.com/m-i-k-i/face_recognition/raw/master/README_Japanese.md&#34;&gt;in Japanese 日本語&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Recognize and manipulate faces from Python or from the command line with the world&#39;s simplest face recognition library.&lt;/p&gt; &#xA;&lt;p&gt;Built using &lt;a href=&#34;http://dlib.net/&#34;&gt;dlib&lt;/a&gt;&#39;s state-of-the-art face recognition built with deep learning. The model has an accuracy of 99.38% on the &lt;a href=&#34;http://vis-www.cs.umass.edu/lfw/&#34;&gt;Labeled Faces in the Wild&lt;/a&gt; benchmark.&lt;/p&gt; &#xA;&lt;p&gt;This also provides a simple &lt;code&gt;face_recognition&lt;/code&gt; command line tool that lets you do face recognition on a folder of images from the command line!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/face_recognition&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/face_recognition.svg?sanitize=true&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ageitgey/face_recognition/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/ageitgey/face_recognition/workflows/CI/badge.svg?branch=master&amp;amp;event=push&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://face-recognition.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/face-recognition/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h4&gt;Find faces in pictures&lt;/h4&gt; &#xA;&lt;p&gt;Find all the faces that appear in a picture:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23625227/42c65360-025d-11e7-94ea-b12f28cb34b4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;image = face_recognition.load_image_file(&#34;your_file.jpg&#34;)&#xA;face_locations = face_recognition.face_locations(image)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Find and manipulate facial features in pictures&lt;/h4&gt; &#xA;&lt;p&gt;Get the locations and outlines of each person&#39;s eyes, nose, mouth and chin.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23625282/7f2d79dc-025d-11e7-8728-d8924596f8fa.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;image = face_recognition.load_image_file(&#34;your_file.jpg&#34;)&#xA;face_landmarks_list = face_recognition.face_landmarks(image)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finding facial features is super useful for lots of important stuff. But you can also use it for really stupid stuff like applying &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/digital_makeup.py&#34;&gt;digital make-up&lt;/a&gt; (think &#39;Meitu&#39;):&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23625283/80638760-025d-11e7-80a2-1d2779f7ccab.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Identify faces in pictures&lt;/h4&gt; &#xA;&lt;p&gt;Recognize who appears in each photo.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23625229/45e049b6-025d-11e7-89cc-8a71cf89e713.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;known_image = face_recognition.load_image_file(&#34;biden.jpg&#34;)&#xA;unknown_image = face_recognition.load_image_file(&#34;unknown.jpg&#34;)&#xA;&#xA;biden_encoding = face_recognition.face_encodings(known_image)[0]&#xA;unknown_encoding = face_recognition.face_encodings(unknown_image)[0]&#xA;&#xA;results = face_recognition.compare_faces([biden_encoding], unknown_encoding)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can even use this library with other Python libraries to do real-time face recognition:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/24430398/36f0e3f0-13cb-11e7-8258-4d0c9ce1e419.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_from_webcam_faster.py&#34;&gt;this example&lt;/a&gt; for the code.&lt;/p&gt; &#xA;&lt;h2&gt;Online Demos&lt;/h2&gt; &#xA;&lt;p&gt;User-contributed shared Jupyter notebook demo (not officially supported): &lt;a href=&#34;https://beta.deepnote.org/launch?template=face_recognition&#34;&gt;&lt;img src=&#34;https://beta.deepnote.org/buttons/try-in-a-jupyter-notebook.svg?sanitize=true&#34; alt=&#34;Deepnote&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.3+ or Python 2.7&lt;/li&gt; &#xA; &lt;li&gt;macOS or Linux (Windows not officially supported, but might work)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation Options:&lt;/h3&gt; &#xA;&lt;h4&gt;Installing on Mac or Linux&lt;/h4&gt; &#xA;&lt;p&gt;First, make sure you have dlib already installed with Python bindings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/ageitgey/629d75c1baac34dfa5ca2a1928a7aeaf&#34;&gt;How to install dlib from source on macOS or Ubuntu&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then, make sure you have cmake installed:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;brew install cmake&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Finally, install this module from pypi using &lt;code&gt;pip3&lt;/code&gt; (or &lt;code&gt;pip2&lt;/code&gt; for Python 2):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip3 install face_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can try this library with &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;, see &lt;a href=&#34;https://raw.githubusercontent.com/ageitgey/face_recognition/master/#deployment&#34;&gt;this section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are having trouble with installation, you can also try out a &lt;a href=&#34;https://medium.com/@ageitgey/try-deep-learning-in-python-now-with-a-fully-pre-configured-vm-1d97d4c3e9b&#34;&gt;pre-configured VM&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Installing on an Nvidia Jetson Nano board&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ageitgey/build-a-hardware-based-face-recognition-system-for-150-with-the-nvidia-jetson-nano-and-python-a25cb8c891fd&#34;&gt;Jetson Nano installation instructions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Please follow the instructions in the article carefully. There is current a bug in the CUDA libraries on the Jetson Nano that will cause this library to fail silently if you don&#39;t follow the instructions in the article to comment out a line in dlib and recompile it.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Installing on Raspberry Pi 2+&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/ageitgey/1ac8dbe8572f3f533df6269dab35df65&#34;&gt;Raspberry Pi 2+ installation instructions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Installing on FreeBSD&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pkg install graphics/py-face_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Installing on Windows&lt;/h4&gt; &#xA;&lt;p&gt;While Windows isn&#39;t officially supported, helpful users have posted instructions on how to install this library:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/issues/175#issue-257710508&#34;&gt;@masoudr&#39;s Windows 10 installation guide (dlib + face_recognition)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Installing a pre-configured Virtual Machine image&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ageitgey/try-deep-learning-in-python-now-with-a-fully-pre-configured-vm-1d97d4c3e9b&#34;&gt;Download the pre-configured VM image&lt;/a&gt; (for VMware Player or VirtualBox).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Command-Line Interface&lt;/h3&gt; &#xA;&lt;p&gt;When you install &lt;code&gt;face_recognition&lt;/code&gt;, you get two simple command-line programs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;face_recognition&lt;/code&gt; - Recognize faces in a photograph or folder full for photographs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;face_detection&lt;/code&gt; - Find faces in a photograph or folder full for photographs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;face_recognition&lt;/code&gt; command line tool&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;face_recognition&lt;/code&gt; command lets you recognize faces in a photograph or folder full for photographs.&lt;/p&gt; &#xA;&lt;p&gt;First, you need to provide a folder with one picture of each person you already know. There should be one image file for each person with the files named according to who is in the picture:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23582466/8324810e-00df-11e7-82cf-41515eba704d.png&#34; alt=&#34;known&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Next, you need a second folder with the files you want to identify:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23582465/81f422f8-00df-11e7-8b0d-75364f641f58.png&#34; alt=&#34;unknown&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then in you simply run the command &lt;code&gt;face_recognition&lt;/code&gt;, passing in the folder of known people and the folder (or single image) with unknown people and it tells you who is in each image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition ./pictures_of_people_i_know/ ./unknown_pictures/&#xA;&#xA;/unknown_pictures/unknown.jpg,Barack Obama&#xA;/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There&#39;s one line in the output for each face. The data is comma-separated with the filename and the name of the person found.&lt;/p&gt; &#xA;&lt;p&gt;An &lt;code&gt;unknown_person&lt;/code&gt; is a face in the image that didn&#39;t match anyone in your folder of known people.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;face_detection&lt;/code&gt; command line tool&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;face_detection&lt;/code&gt; command lets you find the location (pixel coordinatates) of any faces in an image.&lt;/p&gt; &#xA;&lt;p&gt;Just run the command &lt;code&gt;face_detection&lt;/code&gt;, passing in a folder of images to check (or a single image):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_detection  ./folder_with_pictures/&#xA;&#xA;examples/image1.jpg,65,215,169,112&#xA;examples/image2.jpg,62,394,211,244&#xA;examples/image2.jpg,95,941,244,792&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It prints one line for each face that was detected. The coordinates reported are the top, right, bottom and left coordinates of the face (in pixels).&lt;/p&gt; &#xA;&lt;h5&gt;Adjusting Tolerance / Sensitivity&lt;/h5&gt; &#xA;&lt;p&gt;If you are getting multiple matches for the same person, it might be that the people in your photos look very similar and a lower tolerance value is needed to make face comparisons more strict.&lt;/p&gt; &#xA;&lt;p&gt;You can do that with the &lt;code&gt;--tolerance&lt;/code&gt; parameter. The default tolerance value is 0.6 and lower numbers make face comparisons more strict:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition --tolerance 0.54 ./pictures_of_people_i_know/ ./unknown_pictures/&#xA;&#xA;/unknown_pictures/unknown.jpg,Barack Obama&#xA;/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to see the face distance calculated for each match in order to adjust the tolerance setting, you can use &lt;code&gt;--show-distance true&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition --show-distance true ./pictures_of_people_i_know/ ./unknown_pictures/&#xA;&#xA;/unknown_pictures/unknown.jpg,Barack Obama,0.378542298956785&#xA;/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person,None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;More Examples&lt;/h5&gt; &#xA;&lt;p&gt;If you simply want to know the names of the people in each photograph but don&#39;t care about file names, you could do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition ./pictures_of_people_i_know/ ./unknown_pictures/ | cut -d &#39;,&#39; -f2&#xA;&#xA;Barack Obama&#xA;unknown_person&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Speeding up Face Recognition&lt;/h5&gt; &#xA;&lt;p&gt;Face recognition can be done in parallel if you have a computer with multiple CPU cores. For example, if your system has 4 CPU cores, you can process about 4 times as many images in the same amount of time by using all your CPU cores in parallel.&lt;/p&gt; &#xA;&lt;p&gt;If you are using Python 3.4 or newer, pass in a &lt;code&gt;--cpus &amp;lt;number_of_cpu_cores_to_use&amp;gt;&lt;/code&gt; parameter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition --cpus 4 ./pictures_of_people_i_know/ ./unknown_pictures/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also pass in &lt;code&gt;--cpus -1&lt;/code&gt; to use all CPU cores in your system.&lt;/p&gt; &#xA;&lt;h4&gt;Python Module&lt;/h4&gt; &#xA;&lt;p&gt;You can import the &lt;code&gt;face_recognition&lt;/code&gt; module and then easily manipulate faces with just a couple of lines of code. It&#39;s super easy!&lt;/p&gt; &#xA;&lt;p&gt;API Docs: &lt;a href=&#34;https://face-recognition.readthedocs.io/en/latest/face_recognition.html&#34;&gt;https://face-recognition.readthedocs.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Automatically find all the faces in an image&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;&#xA;image = face_recognition.load_image_file(&#34;my_picture.jpg&#34;)&#xA;face_locations = face_recognition.face_locations(image)&#xA;&#xA;# face_locations is now an array listing the co-ordinates of each face!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_picture.py&#34;&gt;this example&lt;/a&gt; to try it out.&lt;/p&gt; &#xA;&lt;p&gt;You can also opt-in to a somewhat more accurate deep-learning-based face detection model.&lt;/p&gt; &#xA;&lt;p&gt;Note: GPU acceleration (via NVidia&#39;s CUDA library) is required for good performance with this model. You&#39;ll also want to enable CUDA support when compliling &lt;code&gt;dlib&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;&#xA;image = face_recognition.load_image_file(&#34;my_picture.jpg&#34;)&#xA;face_locations = face_recognition.face_locations(image, model=&#34;cnn&#34;)&#xA;&#xA;# face_locations is now an array listing the co-ordinates of each face!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_picture_cnn.py&#34;&gt;this example&lt;/a&gt; to try it out.&lt;/p&gt; &#xA;&lt;p&gt;If you have a lot of images and a GPU, you can also &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_batches.py&#34;&gt;find faces in batches&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Automatically locate the facial features of a person in an image&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;&#xA;image = face_recognition.load_image_file(&#34;my_picture.jpg&#34;)&#xA;face_landmarks_list = face_recognition.face_landmarks(image)&#xA;&#xA;# face_landmarks_list is now an array with the locations of each facial feature in each face.&#xA;# face_landmarks_list[0][&#39;left_eye&#39;] would be the location and outline of the first person&#39;s left eye.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_facial_features_in_picture.py&#34;&gt;this example&lt;/a&gt; to try it out.&lt;/p&gt; &#xA;&lt;h5&gt;Recognize faces in images and identify who they are&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;&#xA;picture_of_me = face_recognition.load_image_file(&#34;me.jpg&#34;)&#xA;my_face_encoding = face_recognition.face_encodings(picture_of_me)[0]&#xA;&#xA;# my_face_encoding now contains a universal &#39;encoding&#39; of my facial features that can be compared to any other picture of a face!&#xA;&#xA;unknown_picture = face_recognition.load_image_file(&#34;unknown.jpg&#34;)&#xA;unknown_face_encoding = face_recognition.face_encodings(unknown_picture)[0]&#xA;&#xA;# Now we can see the two face encodings are of the same person with `compare_faces`!&#xA;&#xA;results = face_recognition.compare_faces([my_face_encoding], unknown_face_encoding)&#xA;&#xA;if results[0] == True:&#xA;    print(&#34;It&#39;s a picture of me!&#34;)&#xA;else:&#xA;    print(&#34;It&#39;s not a picture of me!&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/recognize_faces_in_pictures.py&#34;&gt;this example&lt;/a&gt; to try it out.&lt;/p&gt; &#xA;&lt;h2&gt;Python Code Examples&lt;/h2&gt; &#xA;&lt;p&gt;All the examples are available &lt;a href=&#34;https://github.com/ageitgey/face_recognition/tree/master/examples&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Face Detection&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_picture.py&#34;&gt;Find faces in a photograph&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_picture_cnn.py&#34;&gt;Find faces in a photograph (using deep learning)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_batches.py&#34;&gt;Find faces in batches of images w/ GPU (using deep learning)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/blur_faces_on_webcam.py&#34;&gt;Blur all the faces in a live video using your webcam (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Facial Features&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_facial_features_in_picture.py&#34;&gt;Identify specific facial features in a photograph&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/digital_makeup.py&#34;&gt;Apply (horribly ugly) digital make-up&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Facial Recognition&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/recognize_faces_in_pictures.py&#34;&gt;Find and recognize unknown faces in a photograph based on photographs of known people&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/identify_and_draw_boxes_on_faces.py&#34;&gt;Identify and draw boxes around each person in a photo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/face_distance.py&#34;&gt;Compare faces by numeric face distance instead of only True/False matches&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_from_webcam.py&#34;&gt;Recognize faces in live video using your webcam - Simple / Slower Version (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_from_webcam_faster.py&#34;&gt;Recognize faces in live video using your webcam - Faster Version (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_from_video_file.py&#34;&gt;Recognize faces in a video file and write out new video file (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_on_raspberry_pi.py&#34;&gt;Recognize faces on a Raspberry Pi w/ camera&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/web_service_example.py&#34;&gt;Run a web service to recognize faces via HTTP (Requires Flask to be installed)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/face_recognition_knn.py&#34;&gt;Recognize faces with a K-nearest neighbors classifier&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/face_recognition_svm.py&#34;&gt;Train multiple images per person then recognize faces using a SVM&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Creating a Standalone Executable&lt;/h2&gt; &#xA;&lt;p&gt;If you want to create a standalone executable that can run without the need to install &lt;code&gt;python&lt;/code&gt; or &lt;code&gt;face_recognition&lt;/code&gt;, you can use &lt;a href=&#34;https://github.com/pyinstaller/pyinstaller&#34;&gt;PyInstaller&lt;/a&gt;. However, it requires some custom configuration to work with this library. See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/issues/357&#34;&gt;this issue&lt;/a&gt; for how to do it.&lt;/p&gt; &#xA;&lt;h2&gt;Articles and Guides that cover &lt;code&gt;face_recognition&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;My article on how Face Recognition works: &lt;a href=&#34;https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78&#34;&gt;Modern Face Recognition with Deep Learning&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Covers the algorithms and how they generally work&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2018/06/18/face-recognition-with-opencv-python-and-deep-learning/&#34;&gt;Face recognition with OpenCV, Python, and deep learning&lt;/a&gt; by Adrian Rosebrock &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Covers how to use face recognition in practice&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2018/06/25/raspberry-pi-face-recognition/&#34;&gt;Raspberry Pi Face Recognition&lt;/a&gt; by Adrian Rosebrock &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Covers how to use this on a Raspberry Pi&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2018/07/09/face-clustering-with-python/&#34;&gt;Face clustering with Python&lt;/a&gt; by Adrian Rosebrock &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Covers how to automatically cluster photos based on who appears in each photo using unsupervised learning&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How Face Recognition Works&lt;/h2&gt; &#xA;&lt;p&gt;If you want to learn how face location and recognition work instead of depending on a black box library, &lt;a href=&#34;https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78&#34;&gt;read my article&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Caveats&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The face recognition model is trained on adults and does not work very well on children. It tends to mix up children quite easy using the default comparison threshold of 0.6.&lt;/li&gt; &#xA; &lt;li&gt;Accuracy may vary between ethnic groups. Please see &lt;a href=&#34;https://github.com/ageitgey/face_recognition/wiki/Face-Recognition-Accuracy-Problems#question-face-recognition-works-well-with-european-individuals-but-overall-accuracy-is-lower-with-asian-individuals&#34;&gt;this wiki page&lt;/a&gt; for more details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;deployment&#34;&gt;Deployment to Cloud Hosts (Heroku, AWS, etc)&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Since &lt;code&gt;face_recognition&lt;/code&gt; depends on &lt;code&gt;dlib&lt;/code&gt; which is written in C++, it can be tricky to deploy an app using it to a cloud hosting provider like Heroku or AWS.&lt;/p&gt; &#xA;&lt;p&gt;To make things easier, there&#39;s an example Dockerfile in this repo that shows how to run an app built with &lt;code&gt;face_recognition&lt;/code&gt; in a &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; container. With that, you should be able to deploy to any service that supports Docker images.&lt;/p&gt; &#xA;&lt;p&gt;You can try the Docker image locally by running: &lt;code&gt;docker-compose up --build&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;There are also &lt;a href=&#34;https://raw.githubusercontent.com/ageitgey/face_recognition/master/docker/README.md&#34;&gt;several prebuilt Docker images.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Linux users with a GPU (drivers &amp;gt;= 384.81) and &lt;a href=&#34;https://github.com/NVIDIA/nvidia-docker&#34;&gt;Nvidia-Docker&lt;/a&gt; installed can run the example on the GPU: Open the &lt;a href=&#34;https://raw.githubusercontent.com/ageitgey/face_recognition/master/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt; file and uncomment the &lt;code&gt;dockerfile: Dockerfile.gpu&lt;/code&gt; and &lt;code&gt;runtime: nvidia&lt;/code&gt; lines.&lt;/p&gt; &#xA;&lt;h2&gt;Having problems?&lt;/h2&gt; &#xA;&lt;p&gt;If you run into problems, please read the &lt;a href=&#34;https://github.com/ageitgey/face_recognition/wiki/Common-Errors&#34;&gt;Common Errors&lt;/a&gt; section of the wiki before filing a github issue.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Many, many thanks to &lt;a href=&#34;https://github.com/davisking&#34;&gt;Davis King&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/nulhom&#34;&gt;@nulhom&lt;/a&gt;) for creating dlib and for providing the trained facial feature detection and face encoding models used in this library. For more information on the ResNet that powers the face encodings, check out his &lt;a href=&#34;http://blog.dlib.net/2017/02/high-quality-face-recognition-with-deep.html&#34;&gt;blog post&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Thanks to everyone who works on all the awesome Python data science libraries like numpy, scipy, scikit-image, pillow, etc, etc that makes this kind of stuff so easy and fun in Python.&lt;/li&gt; &#xA; &lt;li&gt;Thanks to &lt;a href=&#34;https://github.com/audreyr/cookiecutter&#34;&gt;Cookiecutter&lt;/a&gt; and the &lt;a href=&#34;https://github.com/audreyr/cookiecutter-pypackage&#34;&gt;audreyr/cookiecutter-pypackage&lt;/a&gt; project template for making Python project packaging way more tolerable.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>rougier/numpy-100</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/rougier/numpy-100</id>
    <link href="https://github.com/rougier/numpy-100" rel="alternate"></link>
    <summary type="html">&lt;p&gt;100 numpy exercises (with solutions)&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;100 numpy exercises&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://mybinder.org:/repo/rougier/numpy-100/notebooks/100%20Numpy%20exercises.ipynb&#34;&gt;&lt;img src=&#34;http://mybinder.org/badge.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a collection of numpy exercises from numpy mailing list, stack overflow, and numpy documentation. I&#39;ve also created some problems myself to reach the 100 limit. The goal of this collection is to offer a quick reference for both old and new users but also to provide a set of exercises for those who teach. For extended exercises, make sure to read &lt;a href=&#34;http://www.labri.fr/perso/nrougier/from-python-to-numpy/&#34;&gt;From Python to NumPy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;→ &lt;a href=&#34;http://mybinder.org:/repo/rougier/numpy-100/notebooks/100_Numpy_exercises.ipynb&#34;&gt;Test them on Binder&lt;/a&gt;&lt;br&gt; → &lt;a href=&#34;https://raw.githubusercontent.com/rougier/numpy-100/master/100_Numpy_exercises.md&#34;&gt;Read them on GitHub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note: markdown and ipython notebook are created programmatically from the source data in &lt;code&gt;source/exercises.ktx&lt;/code&gt;. To modify the content of these files, please change the text in the source and run the &lt;code&gt;generators.py&lt;/code&gt; module with a python interpreter with the libraries under &lt;code&gt;requirements.txt&lt;/code&gt; installed.&lt;/p&gt; &#xA;&lt;p&gt;The keyed text format (&lt;code&gt;ktx&lt;/code&gt;) is a minimal human readable key-values to store text (markdown or others) indexed by keys.&lt;/p&gt; &#xA;&lt;p&gt;This work is licensed under the MIT license.&lt;br&gt; &lt;a href=&#34;https://zenodo.org/badge/latestdoi/10173/rougier/numpy-100&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/10173/rougier/numpy-100.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Variants in Other Languages&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Julia&lt;/strong&gt;: &lt;a href=&#34;https://github.com/RoyiAvital/Julia100Exercises&#34;&gt;100 Julia Exercises&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>AntixK/PyTorch-VAE</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/AntixK/PyTorch-VAE</id>
    <link href="https://github.com/AntixK/PyTorch-VAE" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Collection of Variational Autoencoders (VAE) in PyTorch.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;b&gt;PyTorch VAE&lt;/b&gt;&lt;br&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.python.org/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Python-3.5-ff69b4.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pytorch.org/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/PyTorch-1.3-2BAF2B.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/LICENSE.md&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-Apache2.0-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/tweet?text=PyTorch-VAE:%20Collection%20of%20VAE%20models%20in%20PyTorch.&amp;amp;url=https://github.com/AntixK/PyTorch-VAE&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/url/https/shields.io.svg?style=social&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Update 22/12/2021:&lt;/strong&gt; Added support for PyTorch Lightning 1.5.6 version and cleaned up the code.&lt;/p&gt; &#xA;&lt;p&gt;A collection of Variational AutoEncoders (VAEs) implemented in pytorch with focus on reproducibility. The aim of this project is to provide a quick and simple working example for many of the cool VAE models out there. All the models are trained on the &lt;a href=&#34;http://mmlab.ie.cuhk.edu.hk/projects/CelebA.html&#34;&gt;CelebA dataset&lt;/a&gt; for consistency and comparison. The architecture of all the models are kept as similar as possible with the same layers, except for cases where the original paper necessitates a radically different architecture (Ex. VQ VAE uses Residual layers and no Batch-Norm, unlike other models). Here are the &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/README.md#--results&#34;&gt;results&lt;/a&gt; of each model.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python &amp;gt;= 3.5&lt;/li&gt; &#xA; &lt;li&gt;PyTorch &amp;gt;= 1.3&lt;/li&gt; &#xA; &lt;li&gt;Pytorch Lightning &amp;gt;= 0.6.0 (&lt;a href=&#34;https://github.com/PyTorchLightning/pytorch-lightning/tree/deb1581e26b7547baf876b7a94361e60bb200d32&#34;&gt;GitHub Repo&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;CUDA enabled computing device&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/AntixK/PyTorch-VAE&#xA;$ cd PyTorch-VAE&#xA;$ pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd PyTorch-VAE&#xA;$ python run.py -c configs/&amp;lt;config-file-name.yaml&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Config file template&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;model_params:&#xA;  name: &#34;&amp;lt;name of VAE model&amp;gt;&#34;&#xA;  in_channels: 3&#xA;  latent_dim: &#xA;    .         # Other parameters required by the model&#xA;    .&#xA;    .&#xA;&#xA;data_params:&#xA;  data_path: &#34;&amp;lt;path to the celebA dataset&amp;gt;&#34;&#xA;  train_batch_size: 64 # Better to have a square number&#xA;  val_batch_size:  64&#xA;  patch_size: 64  # Models are designed to work for this size&#xA;  num_workers: 4&#xA;  &#xA;exp_params:&#xA;  manual_seed: 1265&#xA;  LR: 0.005&#xA;  weight_decay:&#xA;    .         # Other arguments required for training, like scheduler etc.&#xA;    .&#xA;    .&#xA;&#xA;trainer_params:&#xA;  gpus: 1         &#xA;  max_epochs: 100&#xA;  gradient_clip_val: 1.5&#xA;    .&#xA;    .&#xA;    .&#xA;&#xA;logging_params:&#xA;  save_dir: &#34;logs/&#34;&#xA;  name: &#34;&amp;lt;experiment name&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;View TensorBoard Logs&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd logs/&amp;lt;experiment name&amp;gt;/version_&amp;lt;the version you want&amp;gt;&#xA;$ tensorboard --logdir .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The default dataset is CelebA. However, there has been many issues with downloading the dataset from google drive (owing to some file structure changes). So, the recommendation is to download the &lt;a href=&#34;https://drive.google.com/file/d/1m8-EBPgi5MRubrm6iQjafK2QMHDBMSfJ/view?usp=sharing&#34;&gt;file&lt;/a&gt; from google drive directly and extract to the path of your choice. The default path assumed in the config files is `Data/celeba/img_align_celeba&#39;. But you can change it acording to your preference.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt; &lt;b&gt;Results&lt;/b&gt;&lt;br&gt; &lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;/th&gt; &#xA;   &lt;th&gt;Paper&lt;/th&gt; &#xA;   &lt;th&gt;Reconstruction&lt;/th&gt; &#xA;   &lt;th&gt;Samples&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VAE (&lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/models/vanilla_vae.py&#34;&gt;Code&lt;/a&gt;, &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/configs/vae.yaml&#34;&gt;Config&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/1312.6114&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/recons_Vanilla%20VAE_25.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/Vanilla%20VAE_25.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Conditional VAE (&lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/models/cvae.py&#34;&gt;Code&lt;/a&gt;, &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/configs/cvae.yaml&#34;&gt;Config&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://openreview.net/forum?id=rJWXGDWd-H&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/recons_ConditionalVAE_20.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/ConditionalVAE_20.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WAE - MMD (RBF Kernel) (&lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/models/wae_mmd.py&#34;&gt;Code&lt;/a&gt;, &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/configs/wae_mmd_rbf.yaml&#34;&gt;Config&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/1711.01558&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/recons_WAE_RBF_19.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/WAE_RBF_18.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WAE - MMD (IMQ Kernel) (&lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/models/wae_mmd.py&#34;&gt;Code&lt;/a&gt;, &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/configs/wae_mmd_imq.yaml&#34;&gt;Config&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/1711.01558&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/recons_WAE_IMQ_15.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/WAE_IMQ_15.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Beta-VAE (&lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/models/beta_vae.py&#34;&gt;Code&lt;/a&gt;, &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/configs/bbvae.yaml&#34;&gt;Config&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://openreview.net/forum?id=Sy2fzU9gl&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/recons_BetaVAE_H_20.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/BetaVAE_H_20.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Disentangled Beta-VAE (&lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/models/beta_vae.py&#34;&gt;Code&lt;/a&gt;, &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/configs/bhvae.yaml&#34;&gt;Config&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/1804.03599&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/recons_BetaVAE_B_35.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/BetaVAE_B_35.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Beta-TC-VAE (&lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/models/betatc_vae.py&#34;&gt;Code&lt;/a&gt;, &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/configs/betatc_vae.yaml&#34;&gt;Config&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/1802.04942&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/recons_BetaTCVAE_49.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/BetaTCVAE_49.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IWAE (&lt;em&gt;K = 5&lt;/em&gt;) (&lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/models/iwae.py&#34;&gt;Code&lt;/a&gt;, &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/configs/iwae.yaml&#34;&gt;Config&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/1509.00519&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/recons_IWAE_19.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/IWAE_19.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MIWAE (&lt;em&gt;K = 5, M = 3&lt;/em&gt;) (&lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/models/miwae.py&#34;&gt;Code&lt;/a&gt;, &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/configs/miwae.yaml&#34;&gt;Config&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/1802.04537&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/recons_MIWAE_29.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/MIWAE_29.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DFCVAE (&lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/models/dfcvae.py&#34;&gt;Code&lt;/a&gt;, &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/configs/dfc_vae.yaml&#34;&gt;Config&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/1610.00291&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/recons_DFCVAE_49.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/DFCVAE_49.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MSSIM VAE (&lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/models/mssim_vae.py&#34;&gt;Code&lt;/a&gt;, &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/configs/mssim_vae.yaml&#34;&gt;Config&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/1511.06409&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/recons_MSSIMVAE_29.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/MSSIMVAE_29.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Categorical VAE (&lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/models/cat_vae.py&#34;&gt;Code&lt;/a&gt;, &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/configs/cat_vae.yaml&#34;&gt;Config&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/1611.01144&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/recons_CategoricalVAE_49.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/CategoricalVAE_49.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Joint VAE (&lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/models/joint_vae.py&#34;&gt;Code&lt;/a&gt;, &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/configs/joint_vae.yaml&#34;&gt;Config&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/1804.00104&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/recons_JointVAE_49.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/JointVAE_49.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Info VAE (&lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/models/info_vae.py&#34;&gt;Code&lt;/a&gt;, &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/configs/infovae.yaml&#34;&gt;Config&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/1706.02262&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/recons_InfoVAE_31.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/InfoVAE_31.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LogCosh VAE (&lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/models/logcosh_vae.py&#34;&gt;Code&lt;/a&gt;, &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/configs/logcosh_vae.yaml&#34;&gt;Config&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://openreview.net/forum?id=rkglvsC9Ym&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/recons_LogCoshVAE_49.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/LogCoshVAE_49.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SWAE (200 Projections) (&lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/models/swae.py&#34;&gt;Code&lt;/a&gt;, &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/configs/swae.yaml&#34;&gt;Config&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/1804.01947&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/recons_SWAE_49.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/SWAE_49.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VQ-VAE (&lt;em&gt;K = 512, D = 64&lt;/em&gt;) (&lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/models/vq_vae.py&#34;&gt;Code&lt;/a&gt;, &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/configs/vq_vae.yaml&#34;&gt;Config&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/1711.00937&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/recons_VQVAE_29.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DIP VAE (&lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/models/dip_vae.py&#34;&gt;Code&lt;/a&gt;, &lt;a href=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/configs/dip_vae.yaml&#34;&gt;Config&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/1711.00848&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/recons_DIPVAE_83.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/AntixK/PyTorch-VAE/raw/master/assets/DIPVAE_83.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- | Gamma VAE             |[Link](https://arxiv.org/abs/1610.05683)          |    ![][16]    | ![][15] |--&gt; &#xA;&lt;!--&#xA;### TODO&#xA;- [x] VanillaVAE&#xA;- [x] Beta VAE&#xA;- [x] DFC VAE&#xA;- [x] MSSIM VAE&#xA;- [x] IWAE&#xA;- [x] MIWAE&#xA;- [x] WAE-MMD&#xA;- [x] Conditional VAE- [ ] PixelVAE&#xA;- [x] Categorical VAE (Gumbel-Softmax VAE)&#xA;- [x] Joint VAE&#xA;- [x] Disentangled beta-VAE&#xA;- [x] InfoVAE&#xA;- [x] LogCosh VAE&#xA;- [x] SWAE&#xA;- [x] VQVAE&#xA;- [x] Beta TC-VAE&#xA;- [x] DIP VAE&#xA;- [ ] Ladder VAE (Doesn&#39;t work well)&#xA;- [ ] Gamma VAE (Doesn&#39;t work well) &#xA;- [ ] Vamp VAE (Doesn&#39;t work well)&#xA;--&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;If you have trained a better model, using these implementations, by fine-tuning the hyper-params in the config file, I would be happy to include your result (along with your config file) in this repo, citing your name 😊.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, if you would like to contribute some models, please submit a PR.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Apache License 2.0&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Permissions&lt;/th&gt; &#xA;   &lt;th&gt;Limitations&lt;/th&gt; &#xA;   &lt;th&gt;Conditions&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;✔️ Commercial use&lt;/td&gt; &#xA;   &lt;td&gt;❌ Trademark use&lt;/td&gt; &#xA;   &lt;td&gt;ⓘ License and copyright notice&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;✔️ Modification&lt;/td&gt; &#xA;   &lt;td&gt;❌ Liability&lt;/td&gt; &#xA;   &lt;td&gt;ⓘ State changes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;✔️ Distribution&lt;/td&gt; &#xA;   &lt;td&gt;❌ Warranty&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;✔️ Patent use&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;✔️ Private use&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Citation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{Subramanian2020,&#xA;  author = {Subramanian, A.K},&#xA;  title = {PyTorch-VAE},&#xA;  year = {2020},&#xA;  publisher = {GitHub},&#xA;  journal = {GitHub repository},&#xA;  howpublished = {\url{https://github.com/AntixK/PyTorch-VAE}}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>diego-vicente/som-tsp</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/diego-vicente/som-tsp</id>
    <link href="https://github.com/diego-vicente/som-tsp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Solving the Traveling Salesman Problem using Self-Organizing Maps&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#+TITLE: Solving the Traveling Salesman Problem using Self-Organizing Maps #+AUTHOR: Diego Vicente Martín #+EMAIL: &lt;a href=&#34;mailto:mail@diego.codes&#34;&gt;mail@diego.codes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository contains an implementation of a Self Organizing Map that can be used to find sub-optimal solutions for the Traveling Salesman Problem. The instances of the problems that the program supports are =.tsp= files, which is a widespread format in this problem. All the source code can be found in the =src= directory, while a report and brief presentation slides (in Spanish) can be found in the =report= folder. However, for a complete read on the topic, you can read [[https://diego.codes/post/som-tsp/][my blog post explaining this implementation and its evaluation]].&lt;/p&gt; &#xA;&lt;p&gt;[[file:diagrams/uruguay.gif]]&lt;/p&gt; &#xA;&lt;p&gt;To run the code, only Python 3 and the dependencies (=matplotlib=, =numpy= and =pandas=, which are included in the Anaconda distribution by default) are needed. In case you are not using Anaconda, you can install all the dependencies with:&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC sh pip install -r requirements.txt #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;To run the code, simply execute:&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC sh cd som-tsp python src/main.py assets/&#xA; &lt;instance&gt;&#xA;  .tsp #+END_SRC&#xA; &lt;/instance&gt;&lt;/p&gt; &#xA;&lt;p&gt;The images generated will be stored in the =diagrams= folder. Using a tool like =convert=, you can easily generate an animation like the one in this file by running:&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC sh convert -delay 10 -loop 0 *.png animation.gif #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;This code is licensed under MIT License, so feel free to modify and/or use it in your projects. If you have any doubts, feel free to contact me or contribute to this repository by creating an issue.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;This code was presented for the Bio-Inspired Artificial Intelligence course in the Computer Science &amp;amp; Technology master&#39;s degree @ UC3M. A previous version of this code can be found in [[https://github.com/DiegoVicen/ntnu-som][this repository]]. Special thanks to [[https://github.com/leo-labs][Leonard Kleinans]], who worked with me in that previous version.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>p1ngul1n0/blackbird</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/p1ngul1n0/blackbird</id>
    <link href="https://github.com/p1ngul1n0/blackbird" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An OSINT tool to search for accounts by username in 73 social networks.&lt;/p&gt;&lt;hr&gt;&lt;img alt=&#34;blackbird-logo&#34; align=&#34;left&#34; width=&#34;300&#34; height=&#34;300&#34; src=&#34;https://github.com/p1ngul1n0/badges/raw/main/badges/20.png&#34;&gt; &#xA;&lt;h1&gt;Blackbird&lt;/h1&gt; &#xA;&lt;h3&gt;An OSINT tool to search fast for accounts by username across 74 sites.&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The Lockheed SR-71 &#34;Blackbird&#34; is a long-range, high-altitude, Mach 3+ strategic reconnaissance aircraft developed and manufactured by the American aerospace company Lockheed Corporation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;This or previous program is for Educational purpose ONLY. Do not use it without permission. &#xA;The usual disclaimer applies, especially the fact that me (P1ngul1n0) is not liable for any &#xA;damages caused by direct or indirect use of the information or functionality provided by these &#xA;programs. The author or any Internet provider bears NO responsibility for content or misuse &#xA;of these programs or any derivatives thereof. By using these programs you accept the fact &#xA;that any damage (dataloss, system crash, system compromise, etc.) caused by the use of these &#xA;programs is not P1ngul1n0&#39;s responsibility.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img alt=&#34;blackbird-web&#34; align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/p1ngul1n0/src/master/blackbird_web.png&#34;&gt; &#xA;&lt;img alt=&#34;blackbird-cli&#34; align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/p1ngul1n0/src/master/blackbird_printscreen.png&#34;&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;h4&gt;Clone the repository&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/p1ngul1n0/blackbird&#xA;cd blackbird&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Install requirements&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h4&gt;Search by username&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python blackbird.py -u username&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Run WebServer&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python blackbird.py --web&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Access &lt;a href=&#34;http://127.0.0.1:5000/&#34;&gt;http://127.0.0.1:5000&lt;/a&gt; on the browser&lt;/p&gt; &#xA;&lt;h4&gt;Read results file&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python blackbird.py -f username.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;List supportted sites&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python blackbird.py --list-sites&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported Social Networks &lt;a name=&#34;social-networks&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/73--red&#34; alt=&#34;&#34;&gt;&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Facebook&lt;/li&gt; &#xA;  &lt;li&gt;YouTube&lt;/li&gt; &#xA;  &lt;li&gt;Twitter&lt;/li&gt; &#xA;  &lt;li&gt;Telegram&lt;/li&gt; &#xA;  &lt;li&gt;TikTok&lt;/li&gt; &#xA;  &lt;li&gt;Tinder&lt;/li&gt; &#xA;  &lt;li&gt;Instagram&lt;/li&gt; &#xA;  &lt;li&gt;Pinterest&lt;/li&gt; &#xA;  &lt;li&gt;Snapchat&lt;/li&gt; &#xA;  &lt;li&gt;Reddit&lt;/li&gt; &#xA;  &lt;li&gt;Soundcloud&lt;/li&gt; &#xA;  &lt;li&gt;Github&lt;/li&gt; &#xA;  &lt;li&gt;Steam&lt;/li&gt; &#xA;  &lt;li&gt;Linktree&lt;/li&gt; &#xA;  &lt;li&gt;Xbox Gamertag&lt;/li&gt; &#xA;  &lt;li&gt;Twitter Archived&lt;/li&gt; &#xA;  &lt;li&gt;Xvideos&lt;/li&gt; &#xA;  &lt;li&gt;PornHub&lt;/li&gt; &#xA;  &lt;li&gt;Xhamster&lt;/li&gt; &#xA;  &lt;li&gt;Periscope&lt;/li&gt; &#xA;  &lt;li&gt;Ask FM&lt;/li&gt; &#xA;  &lt;li&gt;Vimeo&lt;/li&gt; &#xA;  &lt;li&gt;Twitch&lt;/li&gt; &#xA;  &lt;li&gt;Pastebin&lt;/li&gt; &#xA;  &lt;li&gt;WordPress Profile&lt;/li&gt; &#xA;  &lt;li&gt;WordPress Site&lt;/li&gt; &#xA;  &lt;li&gt;AllMyLinks&lt;/li&gt; &#xA;  &lt;li&gt;Buzzfeed&lt;/li&gt; &#xA;  &lt;li&gt;Jsiddle&lt;/li&gt; &#xA;  &lt;li&gt;Sourceforge&lt;/li&gt; &#xA;  &lt;li&gt;Kickstarter&lt;/li&gt; &#xA;  &lt;li&gt;Smule&lt;/li&gt; &#xA;  &lt;li&gt;Blogspot&lt;/li&gt; &#xA;  &lt;li&gt;Tradingview&lt;/li&gt; &#xA;  &lt;li&gt;Internet Archive&lt;/li&gt; &#xA;  &lt;li&gt;Alura&lt;/li&gt; &#xA;  &lt;li&gt;Behance&lt;/li&gt; &#xA;  &lt;li&gt;MySpace&lt;/li&gt; &#xA;  &lt;li&gt;Disqus&lt;/li&gt; &#xA;  &lt;li&gt;Slideshare&lt;/li&gt; &#xA;  &lt;li&gt;Rumble&lt;/li&gt; &#xA;  &lt;li&gt;Ebay&lt;/li&gt; &#xA;  &lt;li&gt;RedBubble&lt;/li&gt; &#xA;  &lt;li&gt;Kik&lt;/li&gt; &#xA;  &lt;li&gt;Roblox&lt;/li&gt; &#xA;  &lt;li&gt;Armor Games&lt;/li&gt; &#xA;  &lt;li&gt;Fortnite Tracker&lt;/li&gt; &#xA;  &lt;li&gt;Duolingo&lt;/li&gt; &#xA;  &lt;li&gt;Chess&lt;/li&gt; &#xA;  &lt;li&gt;Shopify&lt;/li&gt; &#xA;  &lt;li&gt;Untappd&lt;/li&gt; &#xA;  &lt;li&gt;Last FM&lt;/li&gt; &#xA;  &lt;li&gt;Cash APP&lt;/li&gt; &#xA;  &lt;li&gt;Imgur&lt;/li&gt; &#xA;  &lt;li&gt;Trello&lt;/li&gt; &#xA;  &lt;li&gt;MCUUID Minecraft&lt;/li&gt; &#xA;  &lt;li&gt;Patreon&lt;/li&gt; &#xA;  &lt;li&gt;DockerHub&lt;/li&gt; &#xA;  &lt;li&gt;Kongregate&lt;/li&gt; &#xA;  &lt;li&gt;Vine&lt;/li&gt; &#xA;  &lt;li&gt;Gamespot&lt;/li&gt; &#xA;  &lt;li&gt;Shutterstock&lt;/li&gt; &#xA;  &lt;li&gt;Chaturbate&lt;/li&gt; &#xA;  &lt;li&gt;ProtonMail&lt;/li&gt; &#xA;  &lt;li&gt;TripAdvisor&lt;/li&gt; &#xA;  &lt;li&gt;RapidAPI&lt;/li&gt; &#xA;  &lt;li&gt;HackTheBox&lt;/li&gt; &#xA;  &lt;li&gt;Wikipedia&lt;/li&gt; &#xA;  &lt;li&gt;Buymeacoffe&lt;/li&gt; &#xA;  &lt;li&gt;Arduino&lt;/li&gt; &#xA;  &lt;li&gt;League of Legend Tracker&lt;/li&gt; &#xA;  &lt;li&gt;Lego Ideas&lt;/li&gt; &#xA;  &lt;li&gt;Fiverr&lt;/li&gt; &#xA;  &lt;li&gt;Redtube&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Supersonic speed &lt;span&gt;🚀&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Blackbird sends async HTTP requests, allowing a lot more speed when discovering user accounts.&lt;/p&gt; &#xA;&lt;h2&gt;Suggestions&lt;/h2&gt; &#xA;&lt;p&gt;If you have any suggestion of a site to be included in the search, feel free to contact me on &lt;a href=&#34;https://twitter.com/p1ngul1n0&#34;&gt;Twitter&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PaddlePaddle/PaddleDetection</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/PaddlePaddle/PaddleDetection</id>
    <link href="https://github.com/PaddlePaddle/PaddleDetection" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Object Detection toolkit based on PaddlePaddle. It supports object detection, instance segmentation, multiple object tracking and real-time multi-person keypoint detection.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;简体中文 | &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/README_en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/48054808/160532560-34cf7a1f-d950-435e-90d2-4b0a679e5119.png&#34; align=&#34;middle&#34; width=&#34;800&#34;&gt; &lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;飞桨目标检测开发套件，端到端地完成从训练到部署的全流程目标检测应用。&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-dfd.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleDetection/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/PaddlePaddle/PaddleDetection?color=ffa&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.7+-aff.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/os-linux%2C%20win%2C%20mac-pink.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleDetection/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/PaddlePaddle/PaddleDetection?color=ccf&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/48054808/157793354-6e7f381a-0aa6-4bb7-845c-9acf2ecc05c3.png&#34; width=&#34;20&#34;&gt; 产品动态&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;🔥 &lt;strong&gt;2022.3.24：PaddleDetection发布&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleDetection/tree/release/2.4&#34;&gt;release/2.4版本&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;发布高精度云边一体SOTA目标检测模型&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/ppyoloe&#34;&gt;PP-YOLOE&lt;/a&gt;，发布s/m/l/x版本，l版本COCO test2017数据集精度51.4%，V100预测速度78.1 FPS，支持混合精度训练，训练较PP-YOLOv2加速33%，全系列多尺度模型，满足不同硬件算力需求，可适配服务器、边缘端GPU及其他服务器端AI加速卡。&lt;/li&gt; &#xA;   &lt;li&gt;发布边缘端和CPU端超轻量SOTA目标检测模型&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/picodet&#34;&gt;PP-PicoDet增强版&lt;/a&gt;，精度提升2%左右，CPU预测速度提升63%，新增参数量0.7M的PicoDet-XS模型，提供模型稀疏化和量化功能，便于模型加速，各类硬件无需单独开发后处理模块，降低部署门槛。&lt;/li&gt; &#xA;   &lt;li&gt;发布实时行人分析工具&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/deploy/pphuman&#34;&gt;PP-Human&lt;/a&gt;，支持行人跟踪、人流量统计、人体属性识别与摔倒检测四大能力，基于真实场景数据特殊优化，精准识别各类摔倒姿势，适应不同环境背景、光线及摄像角度。&lt;/li&gt; &#xA;   &lt;li&gt;新增&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/yolox&#34;&gt;YOLOX&lt;/a&gt;目标检测模型，支持nano/tiny/s/m/l/x版本，x版本COCO val2017数据集精度51.8%。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2021.11.03: PaddleDetection发布&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleDetection/tree/release/2.3&#34;&gt;release/2.3版本&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;发布轻量级检测特色模型⚡&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/picodet&#34;&gt;PP-PicoDet&lt;/a&gt;，0.99m的参数量可实现精度30+mAP、速度150FPS。&lt;/li&gt; &#xA;   &lt;li&gt;发布轻量级关键点特色模型⚡&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/keypoint/tiny_pose&#34;&gt;PP-TinyPose&lt;/a&gt;，单人场景FP16推理可达122FPS、51.8AP，具有精度高速度快、检测人数无限制、微小目标效果好的优势。&lt;/li&gt; &#xA;   &lt;li&gt;发布实时跟踪系统&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/deploy/pptracking&#34;&gt;PP-Tracking&lt;/a&gt;，覆盖单、多镜头下行人、车辆、多类别跟踪，对小目标、密集型特殊优化，提供人、车流量技术解决方案。&lt;/li&gt; &#xA;   &lt;li&gt;新增&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/faster_rcnn&#34;&gt;Swin Transformer&lt;/a&gt;，&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/tood&#34;&gt;TOOD&lt;/a&gt;，&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/gfl&#34;&gt;GFL&lt;/a&gt;目标检测模型。&lt;/li&gt; &#xA;   &lt;li&gt;发布&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/sniper&#34;&gt;Sniper&lt;/a&gt;小目标检测优化模型，发布针对EdgeBoard优化&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/ppyolo&#34;&gt;PP-YOLO-EB&lt;/a&gt;模型。&lt;/li&gt; &#xA;   &lt;li&gt;新增轻量化关键点模型&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/keypoint&#34;&gt;Lite HRNet&lt;/a&gt;关键点模型并支持Paddle Lite部署。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2021.08.10: PaddleDetection发布&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleDetection/tree/release/2.2&#34;&gt;release/2.2版本&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;发布Transformer检测系列模型，包括&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/detr&#34;&gt;DETR&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/deformable_detr&#34;&gt;Deformable DETR&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/sparse_rcnn&#34;&gt;Sparse RCNN&lt;/a&gt;。&lt;/li&gt; &#xA;   &lt;li&gt;新增Dark HRNet关键点模型和MPII数据集&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/keypoint&#34;&gt;关键点模型&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;新增&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/mot/headtracking21&#34;&gt;人头&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/mot/vehicle&#34;&gt;车辆&lt;/a&gt;跟踪垂类模型。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2021.05.20: PaddleDetection发布&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleDetection/tree/release/2.1&#34;&gt;release/2.1版本&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;新增&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/keypoint&#34;&gt;关键点检测&lt;/a&gt;，模型包括HigherHRNet，HRNet。&lt;/li&gt; &#xA;   &lt;li&gt;新增&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/mot&#34;&gt;多目标跟踪&lt;/a&gt;能力，模型包括DeepSORT，JDE，FairMOT。&lt;/li&gt; &#xA;   &lt;li&gt;发布PPYOLO系列模型压缩模型，新增&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/deploy/EXPORT_ONNX_MODEL.md&#34;&gt;ONNX模型导出教程&lt;/a&gt;。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;img title=&#34;&#34; src=&#34;https://user-images.githubusercontent.com/48054808/157795569-9fc77c85-732f-4870-9be0-99a7fe2cff27.png&#34; alt=&#34;&#34; width=&#34;20&#34;&gt; 简介&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;PaddleDetection&lt;/strong&gt;为基于飞桨PaddlePaddle的端到端目标检测套件，内置&lt;strong&gt;30+模型算法&lt;/strong&gt;及&lt;strong&gt;250+预训练模型&lt;/strong&gt;，覆盖&lt;strong&gt;目标检测、实例分割、跟踪、关键点检测&lt;/strong&gt;等方向，其中包括&lt;strong&gt;服务器端和移动端高精度、轻量级&lt;/strong&gt;产业级SOTA模型、冠军方案和学术前沿算法，并提供配置化的网络模块组件、十余种数据增强策略和损失函数等高阶优化支持和多种部署方案，在打通数据处理、模型开发、训练、压缩、部署全流程的基础上，提供丰富的案例及教程，加速算法产业落地应用。&lt;/p&gt; &#xA;&lt;h4&gt;提供目标检测、实例分割、多目标跟踪、关键点检测等多种能力&lt;/h4&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/docs/images/ppdet.gif&#34; width=&#34;800&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h4&gt;应用场景覆盖工业、智慧城市、安防、交通、零售、医疗等十余种行业&lt;/h4&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/48054808/157826886-2e101a71-25a2-42f5-bf5e-30a97be28f46.gif&#34; width=&#34;800&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/48054808/157799599-e6a66855-bac6-4e75-b9c0-96e13cb9612f.png&#34; width=&#34;20&#34;&gt; 特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;模型丰富&lt;/strong&gt;: 包含&lt;strong&gt;目标检测&lt;/strong&gt;、&lt;strong&gt;实例分割&lt;/strong&gt;、&lt;strong&gt;人脸检测&lt;/strong&gt;、&lt;strong&gt;&lt;strong&gt;关键点检测&lt;/strong&gt;&lt;/strong&gt;、&lt;strong&gt;多目标跟踪&lt;/strong&gt;等&lt;strong&gt;250+个预训练模型&lt;/strong&gt;，涵盖多种&lt;strong&gt;全球竞赛冠军&lt;/strong&gt;方案。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;使用简洁&lt;/strong&gt;：模块化设计，解耦各个网络组件，开发者轻松搭建、试用各种检测模型及优化策略，快速得到高性能、定制化的算法。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;端到端打通&lt;/strong&gt;: 从数据增强、组网、训练、压缩、部署端到端打通，并完备支持&lt;strong&gt;云端&lt;/strong&gt;/&lt;strong&gt;边缘端&lt;/strong&gt;多架构、多设备部署。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;高性能&lt;/strong&gt;: 基于飞桨的高性能内核，模型训练速度及显存占用优势明显。支持FP16训练, 支持多机训练。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;img title=&#34;&#34; src=&#34;https://user-images.githubusercontent.com/48054808/157800467-2a9946ad-30d1-49a9-b9db-ba33413d9c90.png&#34; alt=&#34;&#34; width=&#34;20&#34;&gt; 技术交流&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;如果你发现任何PaddleDetection存在的问题或者是建议, 欢迎通过&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleDetection/issues&#34;&gt;GitHub Issues&lt;/a&gt;给我们提issues。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;欢迎加入PaddleDetection QQ、微信用户群（添加并回复小助手“检测”）&lt;/p&gt; &#xA;  &lt;div align=&#34;center&#34;&gt; &#xA;   &lt;img src=&#34;https://user-images.githubusercontent.com/48054808/157800129-2f9a0b72-6bb8-4b10-8310-93ab1639253f.jpg&#34; width=&#34;200&#34;&gt; &#xA;   &lt;img src=&#34;https://user-images.githubusercontent.com/48054808/160531099-9811bbe6-cfbb-47d5-8bdb-c2b40684d7dd.png&#34; width=&#34;200&#34;&gt; &#xA;  &lt;/div&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/48054808/157827140-03ffaff7-7d14-48b4-9440-c38986ea378c.png&#34; width=&#34;20&#34;&gt; 套件结构概览&lt;/h2&gt; &#xA;&lt;table align=&#34;center&#34;&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr align=&#34;center&#34; valign=&#34;bottom&#34;&gt; &#xA;   &lt;td&gt; &lt;b&gt;Architectures&lt;/b&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;Backbones&lt;/b&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;Components&lt;/b&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;Data Augmentation&lt;/b&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr valign=&#34;top&#34;&gt; &#xA;   &lt;td&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;b&gt;Object Detection&lt;/b&gt;&lt;/li&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;Faster RCNN&lt;/li&gt; &#xA;      &lt;li&gt;FPN&lt;/li&gt; &#xA;      &lt;li&gt;Cascade-RCNN&lt;/li&gt; &#xA;      &lt;li&gt;Libra RCNN&lt;/li&gt; &#xA;      &lt;li&gt;Hybrid Task RCNN&lt;/li&gt; &#xA;      &lt;li&gt;PSS-Det&lt;/li&gt; &#xA;      &lt;li&gt;RetinaNet&lt;/li&gt; &#xA;      &lt;li&gt;YOLOv3&lt;/li&gt; &#xA;      &lt;li&gt;YOLOv4&lt;/li&gt; &#xA;      &lt;li&gt;PP-YOLOv1/v2&lt;/li&gt; &#xA;      &lt;li&gt;PP-YOLO-Tiny&lt;/li&gt; &#xA;      &lt;li&gt;PP-YOLOE&lt;/li&gt; &#xA;      &lt;li&gt;YOLOX&lt;/li&gt; &#xA;      &lt;li&gt;SSD&lt;/li&gt; &#xA;      &lt;li&gt;CornerNet-Squeeze&lt;/li&gt; &#xA;      &lt;li&gt;FCOS&lt;/li&gt; &#xA;      &lt;li&gt;TTFNet&lt;/li&gt; &#xA;      &lt;li&gt;PP-PicoDet&lt;/li&gt; &#xA;      &lt;li&gt;DETR&lt;/li&gt; &#xA;      &lt;li&gt;Deformable DETR&lt;/li&gt; &#xA;      &lt;li&gt;Swin Transformer&lt;/li&gt; &#xA;      &lt;li&gt;Sparse RCNN&lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;     &lt;li&gt;&lt;b&gt;Instance Segmentation&lt;/b&gt;&lt;/li&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;Mask RCNN&lt;/li&gt; &#xA;      &lt;li&gt;SOLOv2&lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;     &lt;li&gt;&lt;b&gt;Face Detection&lt;/b&gt;&lt;/li&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;FaceBoxes&lt;/li&gt; &#xA;      &lt;li&gt;BlazeFace&lt;/li&gt; &#xA;      &lt;li&gt;BlazeFace-NAS&lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;     &lt;li&gt;&lt;b&gt;Multi-Object-Tracking&lt;/b&gt;&lt;/li&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;JDE&lt;/li&gt; &#xA;      &lt;li&gt;FairMOT&lt;/li&gt; &#xA;      &lt;li&gt;DeepSORT&lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;     &lt;li&gt;&lt;b&gt;KeyPoint-Detection&lt;/b&gt;&lt;/li&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;HRNet&lt;/li&gt; &#xA;      &lt;li&gt;HigherHRNet&lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;ResNet(&amp;amp;vd)&lt;/li&gt; &#xA;     &lt;li&gt;ResNeXt(&amp;amp;vd)&lt;/li&gt; &#xA;     &lt;li&gt;SENet&lt;/li&gt; &#xA;     &lt;li&gt;Res2Net&lt;/li&gt; &#xA;     &lt;li&gt;HRNet&lt;/li&gt; &#xA;     &lt;li&gt;Hourglass&lt;/li&gt; &#xA;     &lt;li&gt;CBNet&lt;/li&gt; &#xA;     &lt;li&gt;GCNet&lt;/li&gt; &#xA;     &lt;li&gt;DarkNet&lt;/li&gt; &#xA;     &lt;li&gt;CSPDarkNet&lt;/li&gt; &#xA;     &lt;li&gt;VGG&lt;/li&gt; &#xA;     &lt;li&gt;MobileNetv1/v3&lt;/li&gt; &#xA;     &lt;li&gt;GhostNet&lt;/li&gt; &#xA;     &lt;li&gt;Efficientnet&lt;/li&gt; &#xA;     &lt;li&gt;BlazeNet&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;&lt;b&gt;Common&lt;/b&gt;&lt;/li&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;Sync-BN&lt;/li&gt; &#xA;      &lt;li&gt;Group Norm&lt;/li&gt; &#xA;      &lt;li&gt;DCNv2&lt;/li&gt; &#xA;      &lt;li&gt;Non-local&lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/ul&gt; &#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;&lt;b&gt;KeyPoint&lt;/b&gt;&lt;/li&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;DarkPose&lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/ul&gt; &#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;&lt;b&gt;FPN&lt;/b&gt;&lt;/li&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;BiFPN&lt;/li&gt; &#xA;      &lt;li&gt;BFP&lt;/li&gt; &#xA;      &lt;li&gt;HRFPN&lt;/li&gt; &#xA;      &lt;li&gt;ACFPN&lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/ul&gt; &#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;&lt;b&gt;Loss&lt;/b&gt;&lt;/li&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;Smooth-L1&lt;/li&gt; &#xA;      &lt;li&gt;GIoU/DIoU/CIoU&lt;/li&gt; &#xA;      &lt;li&gt;IoUAware&lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/ul&gt; &#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;&lt;b&gt;Post-processing&lt;/b&gt;&lt;/li&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;SoftNMS&lt;/li&gt; &#xA;      &lt;li&gt;MatrixNMS&lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/ul&gt; &#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;&lt;b&gt;Speed&lt;/b&gt;&lt;/li&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;FP16 training&lt;/li&gt; &#xA;      &lt;li&gt;Multi-machine training &lt;/li&gt; &#xA;     &lt;/ul&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Resize&lt;/li&gt; &#xA;     &lt;li&gt;Lighting&lt;/li&gt; &#xA;     &lt;li&gt;Flipping&lt;/li&gt; &#xA;     &lt;li&gt;Expand&lt;/li&gt; &#xA;     &lt;li&gt;Crop&lt;/li&gt; &#xA;     &lt;li&gt;Color Distort&lt;/li&gt; &#xA;     &lt;li&gt;Random Erasing&lt;/li&gt; &#xA;     &lt;li&gt;Mixup &lt;/li&gt; &#xA;     &lt;li&gt;AugmentHSV&lt;/li&gt; &#xA;     &lt;li&gt;Mosaic&lt;/li&gt; &#xA;     &lt;li&gt;Cutmix &lt;/li&gt; &#xA;     &lt;li&gt;Grid Mask&lt;/li&gt; &#xA;     &lt;li&gt;Auto Augment&lt;/li&gt; &#xA;     &lt;li&gt;Random Perspective&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt;   &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/48054808/157801371-9a9a8c65-1690-4123-985a-e0559a7f9494.png&#34; width=&#34;20&#34;&gt; 模型性能概览&lt;/h2&gt; &#xA;&lt;p&gt;各模型结构和骨干网络的代表模型在COCO数据集上精度mAP和单卡Tesla V100上预测速度(FPS)对比图。&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/docs/images/fps_map.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;CBResNet&lt;/code&gt;为&lt;code&gt;Cascade-Faster-RCNN-CBResNet200vd-FPN&lt;/code&gt;模型，COCO数据集mAP高达53.3%&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Cascade-Faster-RCNN&lt;/code&gt;为&lt;code&gt;Cascade-Faster-RCNN-ResNet50vd-DCN&lt;/code&gt;，PaddleDetection将其优化到COCO数据mAP为47.8%时推理速度为20FPS&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PP-YOLO&lt;/code&gt;在COCO数据集精度45.9%，Tesla V100预测速度72.9FPS，精度速度均优于&lt;a href=&#34;https://arxiv.org/abs/2004.10934&#34;&gt;YOLOv4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PP-YOLO v2&lt;/code&gt;是对&lt;code&gt;PP-YOLO&lt;/code&gt;模型的进一步优化，在COCO数据集精度49.5%，Tesla V100预测速度68.9FPS&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PP-YOLOE&lt;/code&gt;是对&lt;code&gt;PP-YOLO v2&lt;/code&gt;模型的进一步优化，在COCO数据集精度51.4%，Tesla V100预测速度78.1FPS&lt;/li&gt; &#xA; &lt;li&gt;图中模型均可在&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/#%E6%A8%A1%E5%9E%8B%E5%BA%93&#34;&gt;模型库&lt;/a&gt;中获取&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;各移动端模型在COCO数据集上精度mAP和高通骁龙865处理器上预测速度(FPS)对比图。&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/docs/images/mobile_fps_map.png&#34; width=&#34;600/&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;测试数据均使用高通骁龙865(4*A77 + 4*A55)处理器batch size为1, 开启4线程测试，测试使用NCNN预测库，测试脚本见&lt;a href=&#34;https://github.com/JiweiMaster/MobileDetBenchmark&#34;&gt;MobileDetBenchmark&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/picodet&#34;&gt;PP-PicoDet&lt;/a&gt;及&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/ppyolo&#34;&gt;PP-YOLO-Tiny&lt;/a&gt;为PaddleDetection自研模型，其余模型PaddleDetection暂未提供&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/48054808/157828296-d5eb0ccb-23ea-40f5-9957-29853d7d13a9.png&#34; width=&#34;20&#34;&gt; 文档教程&lt;/h2&gt; &#xA;&lt;h3&gt;入门教程&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/docs/tutorials/INSTALL_cn.md&#34;&gt;安装说明&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/docs/tutorials/PrepareDataSet.md&#34;&gt;数据准备&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/docs/tutorials/GETTING_STARTED_cn.md&#34;&gt;30分钟上手PaddleDetecion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/docs/tutorials/FAQ&#34;&gt;FAQ/常见问题汇总&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;进阶教程&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;参数配置&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/docs/tutorials/config_annotation/faster_rcnn_r50_fpn_1x_coco_annotation.md&#34;&gt;RCNN参数说明&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/docs/tutorials/config_annotation/ppyolo_r50vd_dcn_1x_coco_annotation.md&#34;&gt;PP-YOLO参数说明&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;模型压缩(基于&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSlim&#34;&gt;PaddleSlim&lt;/a&gt;)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/slim&#34;&gt;剪裁/量化/蒸馏教程&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/deploy/README.md&#34;&gt;推理部署&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/deploy/EXPORT_MODEL.md&#34;&gt;模型导出教程&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/deploy/README.md&#34;&gt;Paddle Inference部署&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/deploy/python&#34;&gt;Python端推理部署&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/deploy/cpp&#34;&gt;C++端推理部署&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/deploy/lite&#34;&gt;Paddle-Lite部署&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/deploy/serving&#34;&gt;Paddle Serving部署&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/deploy/EXPORT_ONNX_MODEL.md&#34;&gt;ONNX模型导出&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/deploy/BENCHMARK_INFER.md&#34;&gt;推理benchmark&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;进阶开发&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/docs/advanced_tutorials/READER.md&#34;&gt;数据处理模块&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/docs/advanced_tutorials/MODEL_TECHNICAL.md&#34;&gt;新增检测模型&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;课程专栏&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;2022.4.19 &lt;a href=&#34;https://aistudio.baidu.com/aistudio/education/group/info/23670&#34;&gt;产业级目标检测技术与应用&lt;/a&gt;三日课：&lt;/strong&gt; 超强目标检测算法矩阵、实时行人分析系统PP-Human、目标检测产业应用全流程拆解与实践&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;2022.3.26 &lt;a href=&#34;https://aistudio.baidu.com/aistudio/education/group/info/25620&#34;&gt;智慧城市行业&lt;/a&gt;七日课：&lt;/strong&gt; 城市规划、城市治理、智慧政务、交通管理、社区治理&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/industrial_tutorial/README_cn.md&#34;&gt;产业实践范例教程&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://aistudio.baidu.com/aistudio/projectdetail/3846170?channelType=0&amp;amp;channel=0&#34;&gt;基于PP-PicoDet增强版的路面垃圾检测&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://aistudio.baidu.com/aistudio/projectdetail/3561097&#34;&gt;基于PP-PicoDet的通信塔识别及Android端部署&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://aistudio.baidu.com/aistudio/projectdetail/2571419&#34;&gt;基于Faster-RCNN的瓷砖表面瑕疵检测&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://aistudio.baidu.com/aistudio/projectdetail/2367089&#34;&gt;基于PaddleDetection的PCB瑕疵检测&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://aistudio.baidu.com/aistudio/projectdetail/2421822&#34;&gt;基于FairMOT实现人流量统计&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://aistudio.baidu.com/aistudio/projectdetail/2500639&#34;&gt;基于YOLOv3实现跌倒检测 &lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://aistudio.baidu.com/aistudio/projectdetail/3846170?channelType=0&amp;amp;channel=0&#34;&gt;基于PP-PicoDetv2 的路面垃圾检测&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://aistudio.baidu.com/aistudio/projectdetail/4061642?contributionType=1&#34;&gt;基于人体关键点检测的合规检测&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/48054808/157829890-a535b8a6-631c-4c87-b861-64d4b32b2d6a.png&#34; width=&#34;20&#34;&gt; 模型库&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;通用目标检测: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/docs/MODEL_ZOO_cn.md&#34;&gt;模型库&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/ppyoloe/README_cn.md&#34;&gt;PP-YOLOE模型&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/ppyolo/README_cn.md&#34;&gt;PP-YOLO模型&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/picodet/README.md&#34;&gt;PP-PicoDet模型&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/ttfnet/README.md&#34;&gt;增强版Anchor Free模型TTFNet&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/static/configs/mobile/README.md&#34;&gt;移动端模型&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/static/docs/featured_model/LARGE_SCALE_DET_MODEL.md&#34;&gt;676类目标检测&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/rcnn_enhance/README.md&#34;&gt;两阶段实用模型PSS-Det&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/docs/feature_models/SSLD_PRETRAINED_MODEL.md&#34;&gt;半监督知识蒸馏预训练检测模型&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;通用实例分割 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/solov2/README.md&#34;&gt;SOLOv2&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;旋转框检测 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/dota/README.md&#34;&gt;S2ANet&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/keypoint&#34;&gt;关键点检测&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/keypoint/tiny_pose&#34;&gt;PP-TinyPose&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;HigherHRNet&lt;/li&gt; &#xA;   &lt;li&gt;HRNet&lt;/li&gt; &#xA;   &lt;li&gt;LiteHRNet&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/mot/README.md&#34;&gt;多目标跟踪&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/deploy/pptracking/README_cn.md&#34;&gt;PP-Tracking&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/mot/deepsort/README_cn.md&#34;&gt;DeepSORT&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/mot/jde/README_cn.md&#34;&gt;JDE&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/mot/fairmot/README_cn.md&#34;&gt;FairMOT&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/mot/bytetrack/README.md&#34;&gt;ByteTrack&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;垂类领域 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/pedestrian/README.md&#34;&gt;行人检测&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/vehicle/README.md&#34;&gt;车辆检测&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/configs/face_detection/README.md&#34;&gt;人脸检测&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;场景化工具 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/deploy/pphuman/README.md&#34;&gt;实时行人分析工具PP-Human&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;比赛冠军方案 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/static/docs/featured_model/champion_model/CACascadeRCNN.md&#34;&gt;Objects365 2019 Challenge夺冠模型&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/static/docs/featured_model/champion_model/OIDV5_BASELINE_MODEL.md&#34;&gt;Open Images 2019-Object Detction比赛最佳单模型&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;img title=&#34;&#34; src=&#34;https://user-images.githubusercontent.com/48054808/157836473-1cf451fa-f01f-4148-ba68-b6d06d5da2f9.png&#34; alt=&#34;&#34; width=&#34;20&#34;&gt; 应用案例&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/static/application/christmas&#34;&gt;人像圣诞特效自动生成工具&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zhiboniu/pose_demo_android&#34;&gt;安卓健身APP&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/48054808/160552806-496dc3ba-beb6-4623-8e26-44416b5848bf.png&#34; width=&#34;25&#34;&gt; 第三方教程推荐&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/268657833&#34;&gt;PaddleDetection在Windows下的部署(一)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/280206376&#34;&gt;PaddleDetection在Windows下的部署(二)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/319371293&#34;&gt;Jetson Nano上部署PaddleDetection经验分享&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PaddleCV-FAQ/PaddleDetection-FAQ/raw/main/Lite%E9%83%A8%E7%BD%B2/yolov3_for_raspi.md&#34;&gt;安全帽检测YOLOv3模型在树莓派上的部署&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PaddleCV-FAQ/PaddleDetection-FAQ/raw/main/Lite%E9%83%A8%E7%BD%B2/ssd_mobilenet_v1_for_raspi.md&#34;&gt;使用SSD-MobileNetv1完成一个项目--准备数据集到完成树莓派部署&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/48054808/157835981-ef6057b4-6347-4768-8fcc-cd07fcc3d8b0.png&#34; width=&#34;20&#34;&gt; 版本更新&lt;/h2&gt; &#xA;&lt;p&gt;版本更新内容请参考&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/docs/CHANGELOG.md&#34;&gt;版本更新文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;img title=&#34;&#34; src=&#34;https://user-images.githubusercontent.com/48054808/157835345-f5d24128-abaf-4813-b793-d2e5bdc70e5a.png&#34; alt=&#34;&#34; width=&#34;20&#34;&gt; 许可证书&lt;/h2&gt; &#xA;&lt;p&gt;本项目的发布受&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/release/2.4/LICENSE&#34;&gt;Apache 2.0 license&lt;/a&gt;许可认证。&lt;/p&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/48054808/157835796-08d4ffbc-87d9-4622-89d8-cf11a44260fc.png&#34; width=&#34;20&#34;&gt; 贡献代码&lt;/h2&gt; &#xA;&lt;p&gt;我们非常欢迎你可以为PaddleDetection提供代码，也十分感谢你的反馈。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;感谢&lt;a href=&#34;https://github.com/Mandroide&#34;&gt;Mandroide&lt;/a&gt;清理代码并且统一部分函数接口。&lt;/li&gt; &#xA; &lt;li&gt;感谢&lt;a href=&#34;https://github.com/FL77N/&#34;&gt;FL77N&lt;/a&gt;贡献&lt;code&gt;Sparse-RCNN&lt;/code&gt;模型。&lt;/li&gt; &#xA; &lt;li&gt;感谢&lt;a href=&#34;https://github.com/Chen-Song&#34;&gt;Chen-Song&lt;/a&gt;贡献&lt;code&gt;Swin Faster-RCNN&lt;/code&gt;模型。&lt;/li&gt; &#xA; &lt;li&gt;感谢&lt;a href=&#34;https://github.com/yangyudong2020&#34;&gt;yangyudong&lt;/a&gt;, &lt;a href=&#34;https://github.com/hchhtc123&#34;&gt;hchhtc123&lt;/a&gt; 开发PP-Tracking GUI界面&lt;/li&gt; &#xA; &lt;li&gt;感谢&lt;a href=&#34;https://github.com/Shigure19&#34;&gt;Shigure19&lt;/a&gt; 开发PP-TinyPose健身APP&lt;/li&gt; &#xA; &lt;li&gt;感谢&lt;a href=&#34;https://github.com/manangoel99&#34;&gt;manangoel99&lt;/a&gt;贡献Wandb可视化方式&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/48054808/157835276-9aab9d1c-1c46-446b-bdd4-5ab75c5cfa48.png&#34; width=&#34;20&#34;&gt; 引用&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{ppdet2019,&#xA;title={PaddleDetection, Object detection and instance segmentation toolkit based on PaddlePaddle.},&#xA;author={PaddlePaddle Authors},&#xA;howpublished = {\url{https://github.com/PaddlePaddle/PaddleDetection}},&#xA;year={2019}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>open-mmlab/mmpose</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/open-mmlab/mmpose</id>
    <link href="https://github.com/open-mmlab/mmpose" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenMMLab Pose Estimation Toolbox and Benchmark.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/resources/mmpose-logo.png&#34; width=&#34;450&#34;&gt; &#xA; &lt;div&gt;&#xA;  &amp;nbsp;&#xA; &lt;/div&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;b&gt;OpenMMLab website&lt;/b&gt; &#xA;  &lt;sup&gt; &lt;a href=&#34;https://openmmlab.com&#34;&gt; &lt;i&gt;HOT&lt;/i&gt; &lt;/a&gt; &lt;/sup&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &#xA;  &lt;b&gt;OpenMMLab platform&lt;/b&gt; &#xA;  &lt;sup&gt; &lt;a href=&#34;https://platform.openmmlab.com&#34;&gt; &lt;i&gt;TRY IT OUT&lt;/i&gt; &lt;/a&gt; &lt;/sup&gt; &#xA; &lt;/div&gt; &#xA; &lt;div&gt;&#xA;  &amp;nbsp;&#xA; &lt;/div&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/mmpose/badge/?version=latest&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/open-mmlab/mmpose/actions&#34;&gt;&lt;img src=&#34;https://github.com/open-mmlab/mmpose/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;actions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/open-mmlab/mmpose&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/open-mmlab/mmpose/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/mmpose/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/mmpose&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/open-mmlab/mmpose/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/open-mmlab/mmpose.svg?sanitize=true&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/open-mmlab/mmpose/issues&#34;&gt;&lt;img src=&#34;https://isitmaintained.com/badge/resolution/open-mmlab/mmpose.svg?sanitize=true&#34; alt=&#34;Average time to resolve an issue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/open-mmlab/mmpose/issues&#34;&gt;&lt;img src=&#34;https://isitmaintained.com/badge/open/open-mmlab/mmpose.svg?sanitize=true&#34; alt=&#34;Percentage of issues still open&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://mmpose.readthedocs.io/en/v0.26.0/&#34;&gt;📘Documentation&lt;/a&gt; | &lt;a href=&#34;https://mmpose.readthedocs.io/en/v0.26.0/install.html&#34;&gt;🛠️Installation&lt;/a&gt; | &lt;a href=&#34;https://mmpose.readthedocs.io/en/v0.26.0/modelzoo.html&#34;&gt;👀Model Zoo&lt;/a&gt; | &lt;a href=&#34;https://mmpose.readthedocs.io/en/v0.26.0/papers/algorithms.html&#34;&gt;📜Papers&lt;/a&gt; | &lt;a href=&#34;https://mmpose.readthedocs.io/en/v0.26.0/changelog.html&#34;&gt;🆕Update News&lt;/a&gt; | &lt;a href=&#34;https://github.com/open-mmlab/mmpose/issues/new/choose&#34;&gt;🤔Reporting Issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/README_CN.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;MMPose is an open-source toolbox for pose estimation based on PyTorch. It is a part of the &lt;a href=&#34;https://github.com/open-mmlab&#34;&gt;OpenMMLab project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The master branch works with &lt;strong&gt;PyTorch 1.5+&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/15977946/124654387-0fd3c500-ded1-11eb-84f6-24eeddbf4d91.mp4&#34;&gt;https://user-images.githubusercontent.com/15977946/124654387-0fd3c500-ded1-11eb-84f6-24eeddbf4d91.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;&lt;b&gt;Major Features&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Support diverse tasks&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;We support a wide spectrum of mainstream pose analysis tasks in current research community, including 2d multi-person human pose estimation, 2d hand pose estimation, 2d face landmark detection, 133 keypoint whole-body human pose estimation, 3d human mesh recovery, fashion landmark detection and animal pose estimation. See &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/demo/README.md&#34;&gt;demo.md&lt;/a&gt; for more information.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Higher efficiency and higher accuracy&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;MMPose implements multiple state-of-the-art (SOTA) deep learning models, including both top-down &amp;amp; bottom-up approaches. We achieve faster training speed and higher accuracy than other popular codebases, such as &lt;a href=&#34;https://github.com/leoxiaobin/deep-high-resolution-net.pytorch&#34;&gt;HRNet&lt;/a&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/docs/en/benchmark.md&#34;&gt;benchmark.md&lt;/a&gt; for more information.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Support for various datasets&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The toolbox directly supports multiple popular and representative datasets, COCO, AIC, MPII, MPII-TRB, OCHuman etc. See &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/docs/en/data_preparation.md&#34;&gt;data_preparation.md&lt;/a&gt; for more information.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Well designed, tested and documented&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;We decompose MMPose into different components and one can easily construct a customized pose estimation framework by combining different modules. We provide detailed documentation and API reference, as well as unittests.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;What&#39;s New&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2022-05-05: MMPose &lt;a href=&#34;https://github.com/open-mmlab/mmpose/releases/tag/v0.26.0&#34;&gt;v0.26.0&lt;/a&gt; is released. Major updates include: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Support &lt;a href=&#34;https://arxiv.org/abs/2107.11291&#34;&gt;RLE (Residual Log-likelihood Estimation)&lt;/a&gt;, ICCV&#39;2021&lt;/li&gt; &#xA;   &lt;li&gt;Support &lt;a href=&#34;https://arxiv.org/abs/2103.14030&#34;&gt;Swin Transformer&lt;/a&gt;, ICCV&#39;2021&lt;/li&gt; &#xA;   &lt;li&gt;Support &lt;a href=&#34;https://arxiv.org/abs/2102.12122&#34;&gt;PVT&lt;/a&gt;, ICCV&#39;2021 and &lt;a href=&#34;https://arxiv.org/abs/2106.13797&#34;&gt;PVTv2&lt;/a&gt;, CVMJ&#39;2022&lt;/li&gt; &#xA;   &lt;li&gt;Optimize the inference speed and CPU usage&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2022-04: MMPose is available on &lt;a href=&#34;https://gitee.com/open-mmlab/mmpose&#34;&gt;Gitee&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;2022-02-28: MMPose model deployment is supported by &lt;a href=&#34;https://github.com/open-mmlab/mmdeploy&#34;&gt;MMDeploy&lt;/a&gt; v0.3.0&lt;/li&gt; &#xA; &lt;li&gt;2022-02-11: &lt;a href=&#34;https://github.com/open-mmlab/mmpose/tree/master/tools/webcam&#34;&gt;MMPose Webcam API&lt;/a&gt; is released with documents and tutorials MMPose Webcam API is a simple yet powerful tool to develop interactive webcam applications with MMPose features.&lt;/li&gt; &#xA; &lt;li&gt;2021-12-29: OpenMMLab Open Platform is online! Try our &lt;a href=&#34;https://platform.openmmlab.com/web-demo/demo/poseestimation&#34;&gt;pose estimation demo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;MMPose depends on &lt;a href=&#34;https://pytorch.org/&#34;&gt;PyTorch&lt;/a&gt; and &lt;a href=&#34;https://github.com/open-mmlab/mmcv&#34;&gt;MMCV&lt;/a&gt;. Below are quick steps for installation. Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/docs/en/install.md&#34;&gt;install.md&lt;/a&gt; for detailed installation guide.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;conda create -n open-mmlab python=3.8 pytorch=1.10 cudatoolkit=11.3 torchvision -c pytorch -y&#xA;conda activate open-mmlab&#xA;pip3 install openmim&#xA;mim install mmcv-full&#xA;git clone https://github.com/open-mmlab/mmpose.git&#xA;cd mmpose&#xA;pip3 install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/docs/en/get_started.md&#34;&gt;get_started.md&lt;/a&gt; for the basic usage of MMPose. There are also tutorials:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/docs/en/tutorials/0_config.md&#34;&gt;learn about configs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/docs/en/tutorials/1_finetune.md&#34;&gt;finetune model&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/docs/en/tutorials/2_new_dataset.md&#34;&gt;add new dataset&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/docs/en/tutorials/3_data_pipeline.md&#34;&gt;customize data pipelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/docs/en/tutorials/4_new_modules.md&#34;&gt;add new modules&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/docs/en/tutorials/5_export_model.md&#34;&gt;export a model to ONNX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/docs/en/tutorials/6_customize_runtime.md&#34;&gt;customize runtime settings&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Model Zoo&lt;/h2&gt; &#xA;&lt;p&gt;Results and models are available in the &lt;em&gt;README.md&lt;/em&gt; of each method&#39;s config directory. A summary can be found in the &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/modelzoo.html&#34;&gt;Model Zoo&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;&lt;b&gt;Supported algorithms:&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/algorithms.html#deeppose-cvpr-2014&#34;&gt;DeepPose&lt;/a&gt; (CVPR&#39;2014)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#cpm-cvpr-2016&#34;&gt;CPM&lt;/a&gt; (CVPR&#39;2016)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#hourglass-eccv-2016&#34;&gt;Hourglass&lt;/a&gt; (ECCV&#39;2016)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/algorithms.html#simplebaseline3d-iccv-2017&#34;&gt;SimpleBaseline3D&lt;/a&gt; (ICCV&#39;2017)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/algorithms.html#associative-embedding-nips-2017&#34;&gt;Associative Embedding&lt;/a&gt; (NeurIPS&#39;2017)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/algorithms.html#hmr-cvpr-2018&#34;&gt;HMR&lt;/a&gt; (CVPR&#39;2018)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/algorithms.html#simplebaseline2d-eccv-2018&#34;&gt;SimpleBaseline2D&lt;/a&gt; (ECCV&#39;2018)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#hrnet-cvpr-2019&#34;&gt;HRNet&lt;/a&gt; (CVPR&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/algorithms.html#videopose3d-cvpr-2019&#34;&gt;VideoPose3D&lt;/a&gt; (CVPR&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#hrnetv2-tpami-2019&#34;&gt;HRNetv2&lt;/a&gt; (TPAMI&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#mspn-arxiv-2019&#34;&gt;MSPN&lt;/a&gt; (ArXiv&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#scnet-cvpr-2020&#34;&gt;SCNet&lt;/a&gt; (CVPR&#39;2020)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#higherhrnet-cvpr-2020&#34;&gt;HigherHRNet&lt;/a&gt; (CVPR&#39;2020)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#rsn-eccv-2020&#34;&gt;RSN&lt;/a&gt; (ECCV&#39;2020)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/algorithms.html#internet-eccv-2020&#34;&gt;InterNet&lt;/a&gt; (ECCV&#39;2020)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/algorithms.html#voxelpose-eccv-2020&#34;&gt;VoxelPose&lt;/a&gt; (ECCV&#39;2020)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#litehrnet-cvpr-2021&#34;&gt;LiteHRNet&lt;/a&gt; (CVPR&#39;2021)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#vipnas-cvpr-2021&#34;&gt;ViPNAS&lt;/a&gt; (CVPR&#39;2021)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;&lt;b&gt;Supported techniques:&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/techniques.html#fpn-cvpr-2017&#34;&gt;FPN&lt;/a&gt; (CVPR&#39;2017)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/techniques.html#fp16-arxiv-2017&#34;&gt;FP16&lt;/a&gt; (ArXiv&#39;2017)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/techniques.html#wingloss-cvpr-2018&#34;&gt;Wingloss&lt;/a&gt; (CVPR&#39;2018)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/techniques.html#adaptivewingloss-iccv-2019&#34;&gt;AdaptiveWingloss&lt;/a&gt; (ICCV&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/techniques.html#darkpose-cvpr-2020&#34;&gt;DarkPose&lt;/a&gt; (CVPR&#39;2020)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/techniques.html#udp-cvpr-2020&#34;&gt;UDP&lt;/a&gt; (CVPR&#39;2020)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/techniques.html#albumentations-information-2020&#34;&gt;Albumentations&lt;/a&gt; (Information&#39;2020)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/techniques.html#softwingloss-tip-2021&#34;&gt;SoftWingloss&lt;/a&gt; (TIP&#39;2021)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/configs/_base_/filters/smoothnet_h36m.md&#34;&gt;SmoothNet&lt;/a&gt; (arXiv&#39;2021)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/techniques.html#rle-iccv-2021&#34;&gt;RLE&lt;/a&gt; (ICCV&#39;2021)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;&lt;b&gt;Supported &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/datasets.html&#34;&gt;datasets&lt;/a&gt;:&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#aflw-iccvw-2011&#34;&gt;AFLW&lt;/a&gt; [&lt;a href=&#34;https://www.tugraz.at/institute/icg/research/team-bischof/lrs/downloads/aflw/&#34;&gt;homepage&lt;/a&gt;] (ICCVW&#39;2011)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#jhmdb-iccv-2013&#34;&gt;sub-JHMDB&lt;/a&gt; [&lt;a href=&#34;http://jhmdb.is.tue.mpg.de/dataset&#34;&gt;homepage&lt;/a&gt;] (ICCV&#39;2013)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#cofw-iccv-2013&#34;&gt;COFW&lt;/a&gt; [&lt;a href=&#34;http://www.vision.caltech.edu/xpburgos/ICCV13/&#34;&gt;homepage&lt;/a&gt;] (ICCV&#39;2013)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#mpii-cvpr-2014&#34;&gt;MPII&lt;/a&gt; [&lt;a href=&#34;http://human-pose.mpi-inf.mpg.de/&#34;&gt;homepage&lt;/a&gt;] (CVPR&#39;2014)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#human3-6m-tpami-2014&#34;&gt;Human3.6M&lt;/a&gt; [&lt;a href=&#34;http://vision.imar.ro/human3.6m/description.php&#34;&gt;homepage&lt;/a&gt;] (TPAMI&#39;2014)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#coco-eccv-2014&#34;&gt;COCO&lt;/a&gt; [&lt;a href=&#34;http://cocodataset.org/&#34;&gt;homepage&lt;/a&gt;] (ECCV&#39;2014)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#cmu-panoptic-iccv-2015&#34;&gt;CMU Panoptic&lt;/a&gt; [&lt;a href=&#34;http://domedb.perception.cs.cmu.edu/&#34;&gt;homepage&lt;/a&gt;] (ICCV&#39;2015)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#deepfashion-cvpr-2016&#34;&gt;DeepFashion&lt;/a&gt; [&lt;a href=&#34;http://mmlab.ie.cuhk.edu.hk/projects/DeepFashion/LandmarkDetection.html&#34;&gt;homepage&lt;/a&gt;] (CVPR&#39;2016)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#300w-imavis-2016&#34;&gt;300W&lt;/a&gt; [&lt;a href=&#34;https://ibug.doc.ic.ac.uk/resources/300-W/&#34;&gt;homepage&lt;/a&gt;] (IMAVIS&#39;2016)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#rhd-iccv-2017&#34;&gt;RHD&lt;/a&gt; [&lt;a href=&#34;https://lmb.informatik.uni-freiburg.de/resources/datasets/RenderedHandposeDataset.en.html&#34;&gt;homepage&lt;/a&gt;] (ICCV&#39;2017)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#cmu-panoptic-handdb-cvpr-2017&#34;&gt;CMU Panoptic HandDB&lt;/a&gt; [&lt;a href=&#34;http://domedb.perception.cs.cmu.edu/handdb.html&#34;&gt;homepage&lt;/a&gt;] (CVPR&#39;2017)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#ai-challenger-arxiv-2017&#34;&gt;AI Challenger&lt;/a&gt; [&lt;a href=&#34;https://github.com/AIChallenger/AI_Challenger_2017&#34;&gt;homepage&lt;/a&gt;] (ArXiv&#39;2017)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#mhp-acm-mm-2018&#34;&gt;MHP&lt;/a&gt; [&lt;a href=&#34;https://lv-mhp.github.io/dataset&#34;&gt;homepage&lt;/a&gt;] (ACM MM&#39;2018)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#wflw-cvpr-2018&#34;&gt;WFLW&lt;/a&gt; [&lt;a href=&#34;https://wywu.github.io/projects/LAB/WFLW.html&#34;&gt;homepage&lt;/a&gt;] (CVPR&#39;2018)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#posetrack18-cvpr-2018&#34;&gt;PoseTrack18&lt;/a&gt; [&lt;a href=&#34;https://posetrack.net/users/download.php&#34;&gt;homepage&lt;/a&gt;] (CVPR&#39;2018)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#ochuman-cvpr-2019&#34;&gt;OCHuman&lt;/a&gt; [&lt;a href=&#34;https://github.com/liruilong940607/OCHumanApi&#34;&gt;homepage&lt;/a&gt;] (CVPR&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#crowdpose-cvpr-2019&#34;&gt;CrowdPose&lt;/a&gt; [&lt;a href=&#34;https://github.com/Jeff-sjtu/CrowdPose&#34;&gt;homepage&lt;/a&gt;] (CVPR&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#mpii-trb-iccv-2019&#34;&gt;MPII-TRB&lt;/a&gt; [&lt;a href=&#34;https://github.com/kennymckormick/Triplet-Representation-of-human-Body&#34;&gt;homepage&lt;/a&gt;] (ICCV&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#freihand-iccv-2019&#34;&gt;FreiHand&lt;/a&gt; [&lt;a href=&#34;https://lmb.informatik.uni-freiburg.de/projects/freihand/&#34;&gt;homepage&lt;/a&gt;] (ICCV&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#animal-pose-iccv-2019&#34;&gt;Animal-Pose&lt;/a&gt; [&lt;a href=&#34;https://sites.google.com/view/animal-pose/&#34;&gt;homepage&lt;/a&gt;] (ICCV&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#onehand10k-tcsvt-2019&#34;&gt;OneHand10K&lt;/a&gt; [&lt;a href=&#34;https://www.yangangwang.com/papers/WANG-MCC-2018-10.html&#34;&gt;homepage&lt;/a&gt;] (TCSVT&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#vinegar-fly-nature-methods-2019&#34;&gt;Vinegar Fly&lt;/a&gt; [&lt;a href=&#34;https://github.com/jgraving/DeepPoseKit-Data&#34;&gt;homepage&lt;/a&gt;] (Nature Methods&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#desert-locust-elife-2019&#34;&gt;Desert Locust&lt;/a&gt; [&lt;a href=&#34;https://github.com/jgraving/DeepPoseKit-Data&#34;&gt;homepage&lt;/a&gt;] (Elife&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#grevys-zebra-elife-2019&#34;&gt;Grévy’s Zebra&lt;/a&gt; [&lt;a href=&#34;https://github.com/jgraving/DeepPoseKit-Data&#34;&gt;homepage&lt;/a&gt;] (Elife&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#atrw-acm-mm-2020&#34;&gt;ATRW&lt;/a&gt; [&lt;a href=&#34;https://cvwc2019.github.io/challenge.html&#34;&gt;homepage&lt;/a&gt;] (ACM MM&#39;2020)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#halpe-cvpr-2020&#34;&gt;Halpe&lt;/a&gt; [&lt;a href=&#34;https://github.com/Fang-Haoshu/Halpe-FullBody/&#34;&gt;homepage&lt;/a&gt;] (CVPR&#39;2020)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#coco-wholebody-eccv-2020&#34;&gt;COCO-WholeBody&lt;/a&gt; [&lt;a href=&#34;https://github.com/jin-s13/COCO-WholeBody/&#34;&gt;homepage&lt;/a&gt;] (ECCV&#39;2020)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#macaquepose-biorxiv-2020&#34;&gt;MacaquePose&lt;/a&gt; [&lt;a href=&#34;http://www.pri.kyoto-u.ac.jp/datasets/macaquepose/index.html&#34;&gt;homepage&lt;/a&gt;] (bioRxiv&#39;2020)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#interhand2-6m-eccv-2020&#34;&gt;InterHand2.6M&lt;/a&gt; [&lt;a href=&#34;https://mks0601.github.io/InterHand2.6M/&#34;&gt;homepage&lt;/a&gt;] (ECCV&#39;2020)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#ap-10k-neurips-2021&#34;&gt;AP-10K&lt;/a&gt; [&lt;a href=&#34;https://github.com/AlexTheBad/AP-10K&#34;&gt;homepage&lt;/a&gt;] (NeurIPS&#39;2021)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/datasets.html#horse-10-wacv-2021&#34;&gt;Horse-10&lt;/a&gt; [&lt;a href=&#34;http://www.mackenziemathislab.org/horse10&#34;&gt;homepage&lt;/a&gt;] (WACV&#39;2021)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;&lt;b&gt;Supported backbones:&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#alexnet-neurips-2012&#34;&gt;AlexNet&lt;/a&gt; (NeurIPS&#39;2012)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#vgg-iclr-2015&#34;&gt;VGG&lt;/a&gt; (ICLR&#39;2015)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#resnet-cvpr-2016&#34;&gt;ResNet&lt;/a&gt; (CVPR&#39;2016)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#resnext-cvpr-2017&#34;&gt;ResNext&lt;/a&gt; (CVPR&#39;2017)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#seresnet-cvpr-2018&#34;&gt;SEResNet&lt;/a&gt; (CVPR&#39;2018)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#shufflenetv1-cvpr-2018&#34;&gt;ShufflenetV1&lt;/a&gt; (CVPR&#39;2018)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#shufflenetv2-eccv-2018&#34;&gt;ShufflenetV2&lt;/a&gt; (ECCV&#39;2018)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#mobilenetv2-cvpr-2018&#34;&gt;MobilenetV2&lt;/a&gt; (CVPR&#39;2018)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#resnetv1d-cvpr-2019&#34;&gt;ResNetV1D&lt;/a&gt; (CVPR&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#resnest-arxiv-2020&#34;&gt;ResNeSt&lt;/a&gt; (ArXiv&#39;2020)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#swin-cvpr-2021&#34;&gt;Swin&lt;/a&gt; (CVPR&#39;2021)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#hrformer-nips-2021&#34;&gt;HRFormer&lt;/a&gt; (NIPS&#39;2021)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#pvt-iccv-2021&#34;&gt;PVT&lt;/a&gt; (ICCV&#39;2021)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mmpose.readthedocs.io/en/latest/papers/backbones.html#pvtv2-cvmj-2022&#34;&gt;PVTV2&lt;/a&gt; (CVMJ&#39;2022)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Model Request&lt;/h3&gt; &#xA;&lt;p&gt;We will keep up with the latest progress of the community, and support more popular algorithms and frameworks. If you have any feature requests, please feel free to leave a comment in &lt;a href=&#34;https://github.com/open-mmlab/mmpose/issues/9&#34;&gt;MMPose Roadmap&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Benchmark&lt;/h3&gt; &#xA;&lt;h4&gt;Accuracy and Training Speed&lt;/h4&gt; &#xA;&lt;p&gt;MMPose achieves superior of training speed and accuracy on the standard keypoint detection benchmarks like COCO. See more details at &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/docs/en/benchmark.md&#34;&gt;benchmark.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Inference Speed&lt;/h4&gt; &#xA;&lt;p&gt;We summarize the model complexity and inference speed of major models in MMPose, including FLOPs, parameter counts and inference speeds on both CPU and GPU devices with different batch sizes. Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/docs/en/inference_speed_summary.md&#34;&gt;inference_speed_summary.md&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Data Preparation&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/docs/en/data_preparation.md&#34;&gt;data_preparation.md&lt;/a&gt; for a general knowledge of data preparation.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/docs/en/faq.md&#34;&gt;FAQ&lt;/a&gt; for frequently asked questions.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We appreciate all contributions to improve MMPose. Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for the contributing guideline.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;MMPose is an open source project that is contributed by researchers and engineers from various colleges and companies. We appreciate all the contributors who implement their methods or add new features, as well as users who give valuable feedbacks. We wish that the toolbox and benchmark could serve the growing research community by providing a flexible toolkit to reimplement existing methods and develop their own new models.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find this project useful in your research, please consider cite:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{mmpose2020,&#xA;    title={OpenMMLab Pose Estimation Toolbox and Benchmark},&#xA;    author={MMPose Contributors},&#xA;    howpublished = {\url{https://github.com/open-mmlab/mmpose}},&#xA;    year={2020}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is released under the &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmpose/master/LICENSE&#34;&gt;Apache 2.0 license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Projects in OpenMMLab&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmcv&#34;&gt;MMCV&lt;/a&gt;: OpenMMLab foundational library for computer vision.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mim&#34;&gt;MIM&lt;/a&gt;: MIM installs OpenMMLab packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmclassification&#34;&gt;MMClassification&lt;/a&gt;: OpenMMLab image classification toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmdetection&#34;&gt;MMDetection&lt;/a&gt;: OpenMMLab detection toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmdetection3d&#34;&gt;MMDetection3D&lt;/a&gt;: OpenMMLab&#39;s next-generation platform for general 3D object detection.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmrotate&#34;&gt;MMRotate&lt;/a&gt;: OpenMMLab rotated object detection toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmsegmentation&#34;&gt;MMSegmentation&lt;/a&gt;: OpenMMLab semantic segmentation toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmocr&#34;&gt;MMOCR&lt;/a&gt;: OpenMMLab text detection, recognition, and understanding toolbox.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmpose&#34;&gt;MMPose&lt;/a&gt;: OpenMMLab pose estimation toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmhuman3d&#34;&gt;MMHuman3D&lt;/a&gt;: OpenMMLab 3D human parametric model toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmselfsup&#34;&gt;MMSelfSup&lt;/a&gt;: OpenMMLab self-supervised learning toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmrazor&#34;&gt;MMRazor&lt;/a&gt;: OpenMMLab model compression toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmfewshot&#34;&gt;MMFewShot&lt;/a&gt;: OpenMMLab fewshot learning toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmaction2&#34;&gt;MMAction2&lt;/a&gt;: OpenMMLab&#39;s next-generation action understanding toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmtracking&#34;&gt;MMTracking&lt;/a&gt;: OpenMMLab video perception toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmflow&#34;&gt;MMFlow&lt;/a&gt;: OpenMMLab optical flow toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmediting&#34;&gt;MMEditing&lt;/a&gt;: OpenMMLab image and video editing toolbox.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmgeneration&#34;&gt;MMGeneration&lt;/a&gt;: OpenMMLab image and video generative models toolbox.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmdeploy&#34;&gt;MMDeploy&lt;/a&gt;: OpenMMLab Model Deployment Framework.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>python-poetry/poetry</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/python-poetry/poetry</id>
    <link href="https://github.com/python-poetry/poetry" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Python dependency management and packaging made easy.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Poetry: Dependency Management for Python&lt;/h1&gt; &#xA;&lt;p&gt;Poetry helps you declare, manage and install dependencies of Python projects, ensuring you have the right stack everywhere.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/python-poetry/poetry/master/assets/install.gif&#34; alt=&#34;Poetry Install&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It supports Python 3.7+.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/python-poetry/poetry/actions?query=workflow%3ATests+branch%3Amaster+event%3Apush&#34;&gt;&lt;img src=&#34;https://github.com/python-poetry/poetry/workflows/Tests/badge.svg?branch=master&amp;amp;event=push&#34; alt=&#34;Tests Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/poetry/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/poetry?label=stable&#34; alt=&#34;Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/poetry/#history&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/python-poetry/poetry?label=alpha&amp;amp;include_prereleases&amp;amp;sort=semver&#34; alt=&#34;Pre-release Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypistats.org/packages/poetry&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/poetry&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/awxPgve&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/487711540787675139?logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://python-poetry.org/docs/&#34;&gt;complete documentation&lt;/a&gt; is available on the &lt;a href=&#34;https://python-poetry.org&#34;&gt;official website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Instructions on how to install &lt;code&gt;poetry&lt;/code&gt; can be found &lt;a href=&#34;https://python-poetry.org/docs/master/#installation&#34;&gt;here&lt;/a&gt;. You can also refer &lt;a href=&#34;https://python-poetry.org/docs/master/#enable-tab-completion-for-bash-fish-or-zsh&#34;&gt;here&lt;/a&gt; for information on how to enable tab completion in your environment.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;poetry&lt;/code&gt; is a tool to handle dependency installation as well as building and packaging of Python packages. It only needs one file to do all of that: the new, &lt;a href=&#34;https://www.python.org/dev/peps/pep-0518/&#34;&gt;standardized&lt;/a&gt; &lt;code&gt;pyproject.toml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In other words, poetry uses &lt;code&gt;pyproject.toml&lt;/code&gt; to replace &lt;code&gt;setup.py&lt;/code&gt;, &lt;code&gt;requirements.txt&lt;/code&gt;, &lt;code&gt;setup.cfg&lt;/code&gt;, &lt;code&gt;MANIFEST.in&lt;/code&gt; and the newly added &lt;code&gt;Pipfile&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[tool.poetry]&#xA;name = &#34;my-package&#34;&#xA;version = &#34;0.1.0&#34;&#xA;description = &#34;The description of the package&#34;&#xA;&#xA;license = &#34;MIT&#34;&#xA;&#xA;authors = [&#xA;    &#34;Sébastien Eustace &amp;lt;sebastien@eustace.io&amp;gt;&#34;&#xA;]&#xA;&#xA;readme = &#34;README.md&#34;  # Markdown files are supported&#xA;&#xA;repository = &#34;https://github.com/python-poetry/poetry&#34;&#xA;homepage = &#34;https://github.com/python-poetry/poetry&#34;&#xA;&#xA;keywords = [&#34;packaging&#34;, &#34;poetry&#34;]&#xA;&#xA;[tool.poetry.dependencies]&#xA;python = &#34;~2.7 || ^3.2&#34;  # Compatible python versions must be declared here&#xA;toml = &#34;^0.9&#34;&#xA;# Dependencies with extras&#xA;requests = { version = &#34;^2.13&#34;, extras = [ &#34;security&#34; ] }&#xA;# Python specific dependencies with prereleases allowed&#xA;pathlib2 = { version = &#34;^2.2&#34;, python = &#34;~2.7&#34;, allow-prereleases = true }&#xA;# Git dependencies&#xA;cleo = { git = &#34;https://github.com/sdispater/cleo.git&#34;, branch = &#34;master&#34; }&#xA;&#xA;# Optional dependencies (extras)&#xA;pendulum = { version = &#34;^1.4&#34;, optional = true }&#xA;&#xA;[tool.poetry.dev-dependencies]&#xA;pytest = &#34;^3.0&#34;&#xA;pytest-cov = &#34;^2.4&#34;&#xA;&#xA;[tool.poetry.scripts]&#xA;my-script = &#34;my_package:main&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are some things we can notice here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It will try to enforce &lt;a href=&#34;http://semver.org&#34;&gt;semantic versioning&lt;/a&gt; as the best practice in version naming.&lt;/li&gt; &#xA; &lt;li&gt;You can specify the readme, included and excluded files: no more &lt;code&gt;MANIFEST.in&lt;/code&gt;. &lt;code&gt;poetry&lt;/code&gt; will also use VCS ignore files (like &lt;code&gt;.gitignore&lt;/code&gt;) to populate the &lt;code&gt;exclude&lt;/code&gt; section.&lt;/li&gt; &#xA; &lt;li&gt;Keywords can be specified and will act as tags on the packaging site.&lt;/li&gt; &#xA; &lt;li&gt;The dependencies sections support caret, tilde, wildcard, inequality and multiple requirements.&lt;/li&gt; &#xA; &lt;li&gt;You must specify the python versions for which your package is compatible.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;poetry&lt;/code&gt; will also detect if you are inside a virtualenv and install the packages accordingly. So, &lt;code&gt;poetry&lt;/code&gt; can be installed globally and used everywhere.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;poetry&lt;/code&gt; also comes with a full fledged dependency resolution library.&lt;/p&gt; &#xA;&lt;h2&gt;Why?&lt;/h2&gt; &#xA;&lt;p&gt;Packaging systems and dependency management in Python are rather convoluted and hard to understand for newcomers. Even for seasoned developers it might be cumbersome at times to create all files needed in a Python project: &lt;code&gt;setup.py&lt;/code&gt;, &lt;code&gt;requirements.txt&lt;/code&gt;, &lt;code&gt;setup.cfg&lt;/code&gt;, &lt;code&gt;MANIFEST.in&lt;/code&gt; and the newly added &lt;code&gt;Pipfile&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;So I wanted a tool that would limit everything to a single configuration file to do: dependency management, packaging and publishing.&lt;/p&gt; &#xA;&lt;p&gt;It takes inspiration in tools that exist in other languages, like &lt;code&gt;composer&lt;/code&gt; (PHP) or &lt;code&gt;cargo&lt;/code&gt; (Rust).&lt;/p&gt; &#xA;&lt;p&gt;And, finally, I started &lt;code&gt;poetry&lt;/code&gt; to bring another exhaustive dependency resolver to the Python community apart from &lt;a href=&#34;https://conda.io&#34;&gt;Conda&#39;s&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://python-poetry.org&#34;&gt;Official Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/python-poetry/poetry/issues&#34;&gt;Issue Tracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.com/invite/awxPgve&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>TencentARC/GFPGAN</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/TencentARC/GFPGAN</id>
    <link href="https://github.com/TencentARC/GFPGAN" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GFPGAN aims at developing Practical Algorithms for Real-world Face Restoration.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/assets/gfpgan_logo.png&#34; height=&#34;130&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  &lt;b&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/README_CN.md&#34;&gt;简体中文&lt;/a&gt;&lt;/b&gt;&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/TencentARC/GFPGAN/total.svg?sanitize=true&#34; alt=&#34;download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/gfpgan/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/gfpgan&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/TencentARC/GFPGAN/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/TencentARC/GFPGAN&#34; alt=&#34;Open issue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/TencentARC/GFPGAN/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed/TencentARC/GFPGAN&#34; alt=&#34;Closed issue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/TencentARC/GFPGAN/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/TencentARC/GFPGAN/raw/master/.github/workflows/pylint.yml&#34;&gt;&lt;img src=&#34;https://github.com/TencentARC/GFPGAN/actions/workflows/pylint.yml/badge.svg?sanitize=true&#34; alt=&#34;python lint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/TencentARC/GFPGAN/raw/master/.github/workflows/publish-pip.yml&#34;&gt;&lt;img src=&#34;https://github.com/TencentARC/GFPGAN/actions/workflows/publish-pip.yml/badge.svg?sanitize=true&#34; alt=&#34;Publish-pip&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/drive/1sVsoBd9AjckIXThgtZhGrHRfFI6UUYOo&#34;&gt;Colab Demo&lt;/a&gt; for GFPGAN &lt;a href=&#34;https://colab.research.google.com/drive/1sVsoBd9AjckIXThgtZhGrHRfFI6UUYOo&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;google colab logo&#34;&gt;&lt;/a&gt;; (Another &lt;a href=&#34;https://colab.research.google.com/drive/1Oa1WwKB4M4l1GmR7CtswDVgOCOeSLChA?usp=sharing&#34;&gt;Colab Demo&lt;/a&gt; for the original paper model)&lt;/li&gt; &#xA; &lt;li&gt;Online demo: &lt;a href=&#34;https://huggingface.co/spaces/akhaliq/GFPGAN&#34;&gt;Huggingface&lt;/a&gt; (return only the cropped face)&lt;/li&gt; &#xA; &lt;li&gt;Online demo: &lt;a href=&#34;https://replicate.com/xinntao/gfpgan&#34;&gt;Replicate.ai&lt;/a&gt; (may need to sign in, return the whole image)&lt;/li&gt; &#xA; &lt;li&gt;Online demo: &lt;a href=&#34;https://app.baseten.co/applications/Q04Lz0d/operator_views/8qZG6Bg&#34;&gt;Baseten.co&lt;/a&gt; (backed by GPU, returns the whole image)&lt;/li&gt; &#xA; &lt;li&gt;We provide a &lt;em&gt;clean&lt;/em&gt; version of GFPGAN, which can run without CUDA extensions. So that it can run in &lt;strong&gt;Windows&lt;/strong&gt; or on &lt;strong&gt;CPU mode&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;🚀&lt;/span&gt; &lt;strong&gt;Thanks for your interest in our work. You may also want to check our new updates on the &lt;em&gt;tiny models&lt;/em&gt; for &lt;em&gt;anime images and videos&lt;/em&gt; in &lt;a href=&#34;https://github.com/xinntao/Real-ESRGAN/raw/master/docs/anime_video_model.md&#34;&gt;Real-ESRGAN&lt;/a&gt;&lt;/strong&gt; &lt;span&gt;😊&lt;/span&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;GFPGAN aims at developing a &lt;strong&gt;Practical Algorithm for Real-world Face Restoration&lt;/strong&gt;.&lt;br&gt; It leverages rich and diverse priors encapsulated in a pretrained face GAN (&lt;em&gt;e.g.&lt;/em&gt;, StyleGAN2) for blind face restoration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;❓&lt;/span&gt; Frequently Asked Questions can be found in &lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/FAQ.md&#34;&gt;FAQ.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;🚩&lt;/span&gt; &lt;strong&gt;Updates&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;🔥&lt;/span&gt;&lt;span&gt;🔥&lt;/span&gt;&lt;span&gt;✅&lt;/span&gt; Add &lt;strong&gt;&lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases/download/v1.3.0/GFPGANv1.3.pth&#34;&gt;V1.3 model&lt;/a&gt;&lt;/strong&gt;, which produces &lt;strong&gt;more natural&lt;/strong&gt; restoration results, and better results on &lt;em&gt;very low-quality&lt;/em&gt; / &lt;em&gt;high-quality&lt;/em&gt; inputs. See more in &lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/#european_castle-model-zoo&#34;&gt;Model zoo&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/Comparisons.md&#34;&gt;Comparisons.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; Integrated to &lt;a href=&#34;https://huggingface.co/spaces&#34;&gt;Huggingface Spaces&lt;/a&gt; with &lt;a href=&#34;https://github.com/gradio-app/gradio&#34;&gt;Gradio&lt;/a&gt;. See &lt;a href=&#34;https://huggingface.co/spaces/akhaliq/GFPGAN&#34;&gt;Gradio Web Demo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; Support enhancing non-face regions (background) with &lt;a href=&#34;https://github.com/xinntao/Real-ESRGAN&#34;&gt;Real-ESRGAN&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; We provide a &lt;em&gt;clean&lt;/em&gt; version of GFPGAN, which does not require CUDA extensions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;✅&lt;/span&gt; We provide an updated model without colorizing faces.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If GFPGAN is helpful in your photos/projects, please help to &lt;span&gt;⭐&lt;/span&gt; this repo or recommend it to your friends. Thanks&lt;span&gt;😊&lt;/span&gt; Other recommended projects:&lt;br&gt; &lt;span&gt;▶&lt;/span&gt; &lt;a href=&#34;https://github.com/xinntao/Real-ESRGAN&#34;&gt;Real-ESRGAN&lt;/a&gt;: A practical algorithm for general image restoration&lt;br&gt; &lt;span&gt;▶&lt;/span&gt; &lt;a href=&#34;https://github.com/xinntao/BasicSR&#34;&gt;BasicSR&lt;/a&gt;: An open-source image and video restoration toolbox&lt;br&gt; &lt;span&gt;▶&lt;/span&gt; &lt;a href=&#34;https://github.com/xinntao/facexlib&#34;&gt;facexlib&lt;/a&gt;: A collection that provides useful face-relation functions&lt;br&gt; &lt;span&gt;▶&lt;/span&gt; &lt;a href=&#34;https://github.com/xinntao/HandyView&#34;&gt;HandyView&lt;/a&gt;: A PyQt5-based image viewer that is handy for view and comparison&lt;br&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;span&gt;📖&lt;/span&gt; GFP-GAN: Towards Real-World Blind Face Restoration with Generative Facial Prior&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[&lt;a href=&#34;https://arxiv.org/abs/2101.04061&#34;&gt;Paper&lt;/a&gt;]   [&lt;a href=&#34;https://xinntao.github.io/projects/gfpgan&#34;&gt;Project Page&lt;/a&gt;]   [Demo] &lt;br&gt; &lt;a href=&#34;https://xinntao.github.io/&#34;&gt;Xintao Wang&lt;/a&gt;, &lt;a href=&#34;https://yu-li.github.io/&#34;&gt;Yu Li&lt;/a&gt;, &lt;a href=&#34;https://scholar.google.com/citations?hl=en&amp;amp;user=KjQLROoAAAAJ&#34;&gt;Honglun Zhang&lt;/a&gt;, &lt;a href=&#34;https://scholar.google.com/citations?user=4oXBp9UAAAAJ&amp;amp;hl=en&#34;&gt;Ying Shan&lt;/a&gt; &lt;br&gt; Applied Research Center (ARC), Tencent PCG&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://xinntao.github.io/projects/GFPGAN_src/gfpgan_teaser.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&lt;span&gt;🔧&lt;/span&gt; Dependencies and Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python &amp;gt;= 3.7 (Recommend to use &lt;a href=&#34;https://www.anaconda.com/download/#linux&#34;&gt;Anaconda&lt;/a&gt; or &lt;a href=&#34;https://docs.conda.io/en/latest/miniconda.html&#34;&gt;Miniconda&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pytorch.org/&#34;&gt;PyTorch &amp;gt;= 1.7&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Option: NVIDIA GPU + &lt;a href=&#34;https://developer.nvidia.com/cuda-downloads&#34;&gt;CUDA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Option: Linux&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;We now provide a &lt;em&gt;clean&lt;/em&gt; version of GFPGAN, which does not require customized CUDA extensions. &lt;br&gt; If you want to use the original model in our paper, please see &lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/PaperModel.md&#34;&gt;PaperModel.md&lt;/a&gt; for installation.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone repo&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/TencentARC/GFPGAN.git&#xA;cd GFPGAN&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install dependent packages&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install basicsr - https://github.com/xinntao/BasicSR&#xA;# We use BasicSR for both training and inference&#xA;pip install basicsr&#xA;&#xA;# Install facexlib - https://github.com/xinntao/facexlib&#xA;# We use face detection and face restoration helper in the facexlib package&#xA;pip install facexlib&#xA;&#xA;pip install -r requirements.txt&#xA;python setup.py develop&#xA;&#xA;# If you want to enhance the background (non-face) regions with Real-ESRGAN,&#xA;# you also need to install the realesrgan package&#xA;pip install realesrgan&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;span&gt;⚡&lt;/span&gt; Quick Inference&lt;/h2&gt; &#xA;&lt;p&gt;We take the v1.3 version for an example. More models can be found &lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/#european_castle-model-zoo&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Download pre-trained models: &lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases/download/v1.3.0/GFPGANv1.3.pth&#34;&gt;GFPGANv1.3.pth&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://github.com/TencentARC/GFPGAN/releases/download/v1.3.0/GFPGANv1.3.pth -P experiments/pretrained_models&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Inference!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python inference_gfpgan.py -i inputs/whole_imgs -o results -v 1.3 -s 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;Usage: python inference_gfpgan.py -i inputs/whole_imgs -o results -v 1.3 -s 2 [options]...&#xA;&#xA;  -h                   show this help&#xA;  -i input             Input image or folder. Default: inputs/whole_imgs&#xA;  -o output            Output folder. Default: results&#xA;  -v version           GFPGAN model version. Option: 1 | 1.2 | 1.3. Default: 1.3&#xA;  -s upscale           The final upsampling scale of the image. Default: 2&#xA;  -bg_upsampler        background upsampler. Default: realesrgan&#xA;  -bg_tile             Tile size for background sampler, 0 for no tile during testing. Default: 400&#xA;  -suffix              Suffix of the restored faces&#xA;  -only_center_face    Only restore the center face&#xA;  -aligned             Input are aligned faces&#xA;  -ext                 Image extension. Options: auto | jpg | png, auto means using the same extension as inputs. Default: auto&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use the original model in our paper, please see &lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/PaperModel.md&#34;&gt;PaperModel.md&lt;/a&gt; for installation and inference.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;🏰&lt;/span&gt; Model Zoo&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Version&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Model Name&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;V1.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases/download/v1.3.0/GFPGANv1.3.pth&#34;&gt;GFPGANv1.3.pth&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Based on V1.2; &lt;strong&gt;more natural&lt;/strong&gt; restoration results; better results on very low-quality / high-quality inputs.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;V1.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases/download/v0.2.0/GFPGANCleanv1-NoCE-C2.pth&#34;&gt;GFPGANCleanv1-NoCE-C2.pth&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;No colorization; no CUDA extensions are required. Trained with more data with pre-processing.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;V1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases/download/v0.1.0/GFPGANv1.pth&#34;&gt;GFPGANv1.pth&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;The paper model, with colorization.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The comparisons are in &lt;a href=&#34;https://raw.githubusercontent.com/TencentARC/GFPGAN/master/Comparisons.md&#34;&gt;Comparisons.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that V1.3 is not always better than V1.2. You may need to select different models based on your purpose and inputs.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Version&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Strengths&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Weaknesses&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;V1.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓ natural outputs&lt;br&gt; ✓better results on very low-quality inputs &lt;br&gt; ✓ work on relatively high-quality inputs &lt;br&gt;✓ can have repeated (twice) restorations&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✗ not very sharp &lt;br&gt; ✗ have a slight change on identity&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;V1.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓ sharper output &lt;br&gt; ✓ with beauty makeup&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✗ some outputs are unnatural&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can find &lt;strong&gt;more models (such as the discriminators)&lt;/strong&gt; here: [&lt;a href=&#34;https://drive.google.com/drive/folders/17rLiFzcUMoQuhLnptDsKolegHWwJOnHu?usp=sharing&#34;&gt;Google Drive&lt;/a&gt;], OR [&lt;a href=&#34;https://share.weiyun.com/ShYoCCoc&#34;&gt;Tencent Cloud 腾讯微云&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;💻&lt;/span&gt; Training&lt;/h2&gt; &#xA;&lt;p&gt;We provide the training codes for GFPGAN (used in our paper). &lt;br&gt; You could improve it according to your own needs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tips&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;More high quality faces can improve the restoration quality.&lt;/li&gt; &#xA; &lt;li&gt;You may need to perform some pre-processing, such as beauty makeup.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Procedures&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;(You can try a simple version ( &lt;code&gt;options/train_gfpgan_v1_simple.yml&lt;/code&gt;) that does not require face component landmarks.)&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Dataset preparation: &lt;a href=&#34;https://github.com/NVlabs/ffhq-dataset&#34;&gt;FFHQ&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download pre-trained models and other data. Put them in the &lt;code&gt;experiments/pretrained_models&lt;/code&gt; folder.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases/download/v0.1.0/StyleGAN2_512_Cmul1_FFHQ_B12G4_scratch_800k.pth&#34;&gt;Pre-trained StyleGAN2 model: StyleGAN2_512_Cmul1_FFHQ_B12G4_scratch_800k.pth&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases/download/v0.1.0/FFHQ_eye_mouth_landmarks_512.pth&#34;&gt;Component locations of FFHQ: FFHQ_eye_mouth_landmarks_512.pth&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/TencentARC/GFPGAN/releases/download/v0.1.0/arcface_resnet18.pth&#34;&gt;A simple ArcFace model: arcface_resnet18.pth&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Modify the configuration file &lt;code&gt;options/train_gfpgan_v1.yml&lt;/code&gt; accordingly.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Training&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;python -m torch.distributed.launch --nproc_per_node=4 --master_port=22021 gfpgan/train.py -opt options/train_gfpgan_v1.yml --launcher pytorch&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;&lt;span&gt;📜&lt;/span&gt; License and Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;GFPGAN is released under Apache License Version 2.0.&lt;/p&gt; &#xA;&lt;h2&gt;BibTeX&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@InProceedings{wang2021gfpgan,&#xA;    author = {Xintao Wang and Yu Li and Honglun Zhang and Ying Shan},&#xA;    title = {Towards Real-World Blind Face Restoration with Generative Facial Prior},&#xA;    booktitle={The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)},&#xA;    year = {2021}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;span&gt;📧&lt;/span&gt; Contact&lt;/h2&gt; &#xA;&lt;p&gt;If you have any question, please email &lt;code&gt;xintao.wang@outlook.com&lt;/code&gt; or &lt;code&gt;xintaowang@tencent.com&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SigmaHQ/sigma</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/SigmaHQ/sigma</id>
    <link href="https://github.com/SigmaHQ/sigma" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Generic Signature Format for SIEM Systems&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/SigmaHQ/sigma/actions?query=branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/SigmaHQ/sigma/actions/workflows/sigma-test.yml/badge.svg?branch=master&#34; alt=&#34;sigma build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SigmaHQ/sigma/master/images/Sigma_0.3.png&#34; alt=&#34;sigma_logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Sigma&lt;/h1&gt; &#xA;&lt;p&gt;Generic Signature Format for SIEM Systems&lt;/p&gt; &#xA;&lt;h1&gt;What is Sigma&lt;/h1&gt; &#xA;&lt;p&gt;Sigma is a generic and open signature format that allows you to describe relevant log events in a straightforward manner. The rule format is very flexible, easy to write and applicable to any type of log file. The main purpose of this project is to provide a structured form in which researchers or analysts can describe their once developed detection methods and make them shareable with others.&lt;/p&gt; &#xA;&lt;p&gt;Sigma is for log files what &lt;a href=&#34;https://www.snort.org/&#34;&gt;Snort&lt;/a&gt; is for network traffic and &lt;a href=&#34;https://github.com/VirusTotal/yara&#34;&gt;YARA&lt;/a&gt; is for files.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Sigma rule specification in the &lt;a href=&#34;https://github.com/Neo23x0/sigma/wiki/Specification&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open repository for sigma signatures in the &lt;code&gt;./rules&lt;/code&gt; subfolder&lt;/li&gt; &#xA; &lt;li&gt;A converter named &lt;code&gt;sigmac&lt;/code&gt; located in the &lt;code&gt;./tools/&lt;/code&gt; sub folder that generates search queries for different SIEM systems from Sigma rules&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SigmaHQ/sigma/master/images/Sigma-description.png&#34; alt=&#34;sigma_description&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Hack.lu 2017 Talk&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=OheVuE9Ifhs&#34; title=&#34;Sigma - Generic Signatures for Log Events&#34;&gt;&lt;img src=&#34;https://preview.ibb.co/cMCigR/Screen_Shot_2017_10_18_at_15_47_15.png&#34; alt=&#34;Sigma - Generic Signatures for Log Events&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;SANS Webcast on MITRE ATT&amp;amp;CK® and Sigma&lt;/h2&gt; &#xA;&lt;p&gt;The SANS webcast on Sigma contains a very good 20 min introduction to the project by John Hubbart from minute 39 onward. (SANS account required; registration is free)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.sans.org/webcasts/mitre-att-ck-sigma-alerting-110010&#34; title=&#34;MITRE ATT&amp;amp;CK® and Sigma Alerting&#34;&gt;MITRE ATT&amp;amp;CK® and Sigma Alerting Webcast Recording&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Use Cases&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Describe your detection method in Sigma to make it shareable&lt;/li&gt; &#xA; &lt;li&gt;Write your SIEM searches in Sigma to avoid a vendor lock-in&lt;/li&gt; &#xA; &lt;li&gt;Share the signature in the appendix of your analysis along with IOCs and YARA rules&lt;/li&gt; &#xA; &lt;li&gt;Share the signature in threat intel communities - e.g. via MISP&lt;/li&gt; &#xA; &lt;li&gt;Provide Sigma signatures for malicious behaviour in your own application&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Why Sigma&lt;/h1&gt; &#xA;&lt;p&gt;Today, everyone collects log data for analysis. People start working on their own, processing numerous white papers, blog posts and log analysis guidelines, extracting the necessary information and build their own searches and dashboard. Some of their searches and correlations are great and very useful but they lack a standardized format in which they can share their work with others.&lt;/p&gt; &#xA;&lt;p&gt;Others provide excellent analyses, include IOCs and YARA rules to detect the malicious files and network connections, but have no way to describe a specific or generic detection method in log events. Sigma is meant to be an open standard in which such detection mechanisms can be defined, shared and collected in order to improve the detection capabilities for everyone.&lt;/p&gt; &#xA;&lt;h2&gt;Slides&lt;/h2&gt; &#xA;&lt;p&gt;See the first slide deck that I prepared for a private conference in mid January 2017.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.slideshare.net/secret/gvgxeXoKblXRcA&#34;&gt;Sigma - Make Security Monitoring Great Again&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Specification&lt;/h1&gt; &#xA;&lt;p&gt;The specifications can be found in the &lt;a href=&#34;https://github.com/Neo23x0/sigma/wiki/Specification&#34;&gt;Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The current specification is a proposal. Feedback is requested.&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;h2&gt;Rule Creation&lt;/h2&gt; &#xA;&lt;p&gt;Florian wrote a short &lt;a href=&#34;https://www.nextron-systems.com/2018/02/10/write-sigma-rules/&#34;&gt;rule creation tutorial&lt;/a&gt; that can help you getting started. Use the &lt;a href=&#34;https://github.com/SigmaHQ/sigma/wiki/Rule-Creation-Guide&#34;&gt;Rule Creation Guide&lt;/a&gt; in our Wiki for a clear guidance on how to populate the various field in Sigma rules.&lt;/p&gt; &#xA;&lt;h2&gt;Rule Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download or clone the repository&lt;/li&gt; &#xA; &lt;li&gt;Check the &lt;code&gt;./rules&lt;/code&gt; sub directory for an overview on the rule base&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;python sigmac --help&lt;/code&gt; in folder &lt;code&gt;./tools&lt;/code&gt; to get a help on the rule converter&lt;/li&gt; &#xA; &lt;li&gt;Convert a rule of your choice with &lt;code&gt;sigmac&lt;/code&gt; like &lt;code&gt;./sigmac -t splunk -c tools/config/generic/sysmon.yml ./rules/windows/process_creation/proc_creation_win_susp_whoami.yml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Convert a whole rule directory with &lt;code&gt;python sigmac -t splunk -r ../rules/proxy/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check the &lt;code&gt;./tools/config&lt;/code&gt; folder and the &lt;a href=&#34;https://github.com/Neo23x0/sigma/wiki/Converter-Tool-Sigmac&#34;&gt;wiki&lt;/a&gt; if you need custom field or log source mappings in your environment&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Troubles / Troubleshooting / Help&lt;/h2&gt; &#xA;&lt;p&gt;If you need help for a specific supported backend you can use e.g. &lt;code&gt;sigmac --backend-help elastalert-dsl&lt;/code&gt;. More details on the usage of &lt;code&gt;sigmac&lt;/code&gt; can be found in the dedicated &lt;a href=&#34;https://github.com/Neo23x0/sigma/raw/master/tools/README.md&#34;&gt;README.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Be sure to checkout the &lt;a href=&#34;https://github.com/Neo23x0/sigma/raw/master/tools/README.md#choosing-the-right-sigmac&#34;&gt;guidance on backend specific settings&lt;/a&gt; for &lt;code&gt;sigmac&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Examples&lt;/h1&gt; &#xA;&lt;p&gt;Windows &#39;Security&#39; Eventlog: Access to LSASS Process with Certain Access Mask / Object Type (experimental) &lt;img src=&#34;https://raw.githubusercontent.com/SigmaHQ/sigma/master/images/Sigma_rule_example2.png&#34; alt=&#34;sigma_rule example2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sysmon: Remote Thread Creation in LSASS Process &lt;img src=&#34;https://raw.githubusercontent.com/SigmaHQ/sigma/master/images/Sigma_rule_example1.png&#34; alt=&#34;sigma_rule example1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Web Server Access Logs: Web Shell Detection &lt;img src=&#34;https://raw.githubusercontent.com/SigmaHQ/sigma/master/images/Sigma_rule_example3.png&#34; alt=&#34;sigma_rule example3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sysmon: Web Shell Detection &lt;img src=&#34;https://raw.githubusercontent.com/SigmaHQ/sigma/master/images/Sigma_rule_example4.png&#34; alt=&#34;sigma_rule example4&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Windows &#39;Security&#39; Eventlog: Suspicious Number of Failed Logons from a Single Source Workstation &lt;img src=&#34;https://raw.githubusercontent.com/SigmaHQ/sigma/master/images/Sigma_rule_example5.png&#34; alt=&#34;sigma_rule example5&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Sigma Tools&lt;/h1&gt; &#xA;&lt;h2&gt;Sigmac&lt;/h2&gt; &#xA;&lt;p&gt;Sigmac converts sigma rules into queries or inputs of the supported targets listed below. It acts as a frontend to the Sigma library that may be used to integrate Sigma support in other projects. Further, there&#39;s &lt;code&gt;merge_sigma.py&lt;/code&gt; which merges multiple YAML documents of a Sigma rule collection into simple Sigma rules.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING: Do not provide conversion backends for this tool anymore. We&#39;ll soon set a date for its deprecation. Since October 2020, we&#39;re working on a much more flexible and stable module named &lt;a href=&#34;https://github.com/SigmaHQ/pySigma&#34;&gt;pySigma&lt;/a&gt; and a command line interface named &lt;a href=&#34;https://github.com/SigmaHQ/sigma-cli&#34;&gt;sigma-cli&lt;/a&gt; that makes use of pySigma.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;usage: sigmac [-h] [--recurse] [--filter FILTER]&#xA;              [--target {sqlite,netwitness-epl,logpoint,graylog,netwitness,arcsight,carbonblack,es-rule,ala,elastalert-dsl,splunkxml,fieldlist,sysmon,arcsight-esm,kibana,csharp,qualys,powershell,es-qs,mdatp,humio,grep,qradar,logiq,sql,sumologic,ala-rule,limacharlie,elastalert,splunk,stix,xpack-watcher,crowdstrike,es-dsl,ee-outliers}]&#xA;              [--target-list] [--config CONFIG] [--output OUTPUT]&#xA;              [--backend-option BACKEND_OPTION] [--defer-abort]&#xA;              [--ignore-backend-errors] [--verbose] [--debug]&#xA;              [inputs [inputs ...]]&#xA;&#xA;Convert Sigma rules into SIEM signatures.&#xA;&#xA;positional arguments:&#xA;  inputs                Sigma input files (&#39;-&#39; for stdin)&#xA;&#xA;optional arguments:&#xA;  -h, --help            show this help message and exit&#xA;  --recurse, -r         Use directory as input (recurse into subdirectories is&#xA;                        not implemented yet)&#xA;  --filter FILTER, -f FILTER&#xA;                        Define comma-separated filters that must match (AND-&#xA;                        linked) to rule to be processed. Valid filters:&#xA;                        level&amp;lt;=x, level&amp;gt;=x, level=x, status=y, logsource=z,&#xA;                        tag=t. x is one of: low, medium, high, critical. y is&#xA;                        one of: experimental, testing, stable. z is a word&#xA;                        appearing in an arbitrary log source attribute. t is a&#xA;                        tag that must appear in the rules tag list, case-&#xA;                        insensitive matching. Multiple log source&#xA;                        specifications are AND linked.&#xA;  --target {arcsight,es-qs,es-dsl,kibana,xpack-watcher,elastalert,graylog,limacharlie,logpoint,grep,netwitness,powershell,qradar,qualys,splunk,splunkxml,sumologic,fieldlist,mdatp,devo}, -t {arcsight,es-qs,es-dsl,kibana,xpack-watcher,elastalert,graylog,limacharlie,logpoint,grep,netwitness,powershell,qradar,qualys,splunk,splunkxml,sumologic,fieldlist,mdatp,devo}&#xA;                        Output target format&#xA;  --target-list, -l     List available output target formats&#xA;  --config CONFIG, -c CONFIG&#xA;                        Configurations with field name and index mapping for&#xA;                        target environment. Multiple configurations are merged&#xA;                        into one. Last config is authoritative in case of&#xA;                        conflicts.&#xA;  --output OUTPUT, -o OUTPUT&#xA;                        Output file or filename prefix if multiple files are&#xA;                        generated&#xA;  --backend-option BACKEND_OPTION, -O BACKEND_OPTION&#xA;                        Options and switches that are passed to the backend&#xA;  --defer-abort, -d     Don&#39;t abort on parse or conversion errors, proceed&#xA;                        with next rule. The exit code from the last error is&#xA;                        returned&#xA;  --ignore-backend-errors, -I&#xA;                        Only return error codes for parse errors and ignore&#xA;                        errors for rules that cause backend errors. Useful,&#xA;                        when you want to get as much queries as possible.&#xA;  --verbose, -v         Be verbose&#xA;  --debug, -D           Debugging output&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;h4&gt;Single Rule Translation&lt;/h4&gt; &#xA;&lt;p&gt;Translate a single rule&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tools/sigmac -t splunk -c splunk-windows rules/windows/sysmon/sysmon_susp_image_load.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Rule Set Translation&lt;/h4&gt; &#xA;&lt;p&gt;Translate a whole rule directory and ignore backend errors (&lt;code&gt;-I&lt;/code&gt;) in rule conversion for the selected backend (&lt;code&gt;-t splunk&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tools/sigmac -I -t splunk -c splunk-windows -r rules/windows/sysmon/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Translate Only Rules of Level High or Critical&lt;/h4&gt; &#xA;&lt;p&gt;Translate a whole rule directory and ignore backend errors (&lt;code&gt;-I&lt;/code&gt;) in rule conversion for the selected backend (&lt;code&gt;-t splunk&lt;/code&gt;) and select only rules of level &lt;code&gt;high&lt;/code&gt; and &lt;code&gt;critical&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tools/sigmac -I -t splunk -c splunk-windows -f &#39;level&amp;gt;=high&#39; -r rules/windows/sysmon/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Rule Set Translation with Custom Config&lt;/h4&gt; &#xA;&lt;p&gt;Apply your own config file (&lt;code&gt;-c ~/my-elk-winlogbeat.yml&lt;/code&gt;) during conversion, which can contain you custom field and source mappings&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tools/sigmac -t es-qs -c ~/my-elk-winlogbeat.yml -r rules/windows/sysmon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Generic Rule Set Translation&lt;/h4&gt; &#xA;&lt;p&gt;Use a config file for &lt;code&gt;process_creation&lt;/code&gt; rules (&lt;code&gt;-r rules/windows/process_creation&lt;/code&gt;) that instructs sigmac to create queries for a Sysmon log source (&lt;code&gt;-c tools/config/generic/sysmon.yml&lt;/code&gt;) and the ElasticSearch target backend (&lt;code&gt;-t es-qs&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tools/sigmac -t es-qs -c tools/config/generic/sysmon.yml -r rules/windows/process_creation&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Generic Rule Set Translation with Custom Config&lt;/h4&gt; &#xA;&lt;p&gt;Use a config file for a single &lt;code&gt;process_creation&lt;/code&gt; rule (&lt;code&gt;./rules/windows/process_creation/win_susp_outlook.yml&lt;/code&gt;) that instructs sigmac to create queries for process creation events generated in the Windows Security Eventlog (&lt;code&gt;-c tools/config/generic/windows-audit.yml&lt;/code&gt;) and a Splunk target backend (&lt;code&gt;-t splunk&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tools/sigmac -t splunk -c ~/my-splunk-mapping.yml -c tools/config/generic/windows-audit.yml ./rules/windows/process_creation/win_susp_outlook.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(See @blubbfiction&#39;s &lt;a href=&#34;https://patzke.org/a-guide-to-generic-log-sources-in-sigma.html&#34;&gt;blog post&lt;/a&gt; for more information)&lt;/p&gt; &#xA;&lt;h3&gt;Supported Targets&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.splunk.com/&#34;&gt;Splunk&lt;/a&gt; (plainqueries and dashboards)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/&#34;&gt;ElasticSearch Query Strings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html&#34;&gt;ElasticSearch Query DSL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/de/products/kibana&#34;&gt;Kibana&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/x-pack/current/xpack-alerting.html&#34;&gt;Elastic X-Pack Watcher&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.logpoint.com&#34;&gt;Logpoint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/microsoft-365/windows/microsoft-defender-atp&#34;&gt;Microsoft Defender Advanced Threat Protection (MDATP)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://azure.microsoft.com/en-us/services/azure-sentinel/&#34;&gt;Azure Sentinel / Azure Log Analytics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sumologic.com/&#34;&gt;Sumologic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://software.microfocus.com/en-us/products/siem-security-information-event-management/overview&#34;&gt;ArcSight&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ibm.com/de-de/marketplace/ibm-qradar-siem&#34;&gt;QRadar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.qualys.com/apps/threat-protection/&#34;&gt;Qualys&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rsa.com/en-us/products/threat-detection-response&#34;&gt;RSA NetWitness&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/powershell/scripting/getting-started/getting-started-with-windows-powershell?view=powershell-6&#34;&gt;PowerShell&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/grep/manual/grep.html&#34;&gt;Grep&lt;/a&gt; with Perl-compatible regular expression support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://limacharlie.io&#34;&gt;LimaCharlie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NVISO-BE/ee-outliers&#34;&gt;ee-outliers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oasis-open.github.io/cti-documentation/stix/intro.html&#34;&gt;Structured Threat Information Expression (STIX)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.logiq.ai&#34;&gt;LOGIQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://uberagent.com/&#34;&gt;uberAgent ESA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devo.com&#34;&gt;Devo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://logrhythm.com/&#34;&gt;LogRhythm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.datadoghq.com/logs/explorer/search_syntax/&#34;&gt;Datadog Logs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.fortinet.com&#34;&gt;FortiSIEM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hawk.io/&#34;&gt;HAWK.io MDR&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;New targets are continuously developed. You can get a list of supported targets with &lt;code&gt;sigmac --lists&lt;/code&gt; or &lt;code&gt;sigmac -l&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;The usage of Sigmac (the Sigma Rule Converter) or the underlying library requires Python &amp;gt;= 3.5 and PyYAML.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s available on PyPI. Install with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip3 install sigmatools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, if used from the Sigma Github repository, the Python dependencies can be installed with &lt;a href=&#34;https://pypi.org/project/pipenv/&#34;&gt;Pipenv&lt;/a&gt;. Run the following command to get a shell with the installed requirements:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pipenv shell&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For development (e.g. execution of integration tests with &lt;code&gt;make&lt;/code&gt; and packaging), further dependencies are required and can be installed with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pipenv install --dev&#xA;pipenv shell&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sigma2MISP&lt;/h2&gt; &#xA;&lt;p&gt;Import Sigma rules to MISP events. Depends on PyMISP.&lt;/p&gt; &#xA;&lt;p&gt;Parameters that aren&#39;t changed frequently (&lt;code&gt;--url&lt;/code&gt;, &lt;code&gt;--key&lt;/code&gt;) can be put without the prefixing dashes &lt;code&gt;--&lt;/code&gt; into a file and included with &lt;code&gt;@filename&lt;/code&gt; as parameter on the command line.&lt;/p&gt; &#xA;&lt;p&gt;Example: &lt;em&gt;misp.conf&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;url https://host&#xA;key foobarfoobarfoobarfoobarfoobarfoobarfoo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Load Sigma rule into MISP event 1234:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sigma2misp @misp.conf --event 1234 sigma_rule.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Load Sigma rules in directory sigma_rules/ into one newly created MISP event with info set to &lt;em&gt;Test Event&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sigma2misp @misp.conf --same-event --info &#34;Test Event&#34; -r sigma_rules/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Evt2Sigma&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Neo23x0/evt2sigma&#34;&gt;Evt2Sigma&lt;/a&gt; helps you with the rule creation. It generates a Sigma rule from a log entry.&lt;/p&gt; &#xA;&lt;h2&gt;Sigma2attack&lt;/h2&gt; &#xA;&lt;p&gt;Generates a &lt;a href=&#34;https://github.com/mitre/attack-navigator/&#34;&gt;MITRE ATT&amp;amp;CK® Navigator&lt;/a&gt; heatmap from a directory containing sigma rules.&lt;/p&gt; &#xA;&lt;p&gt;Requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sigma rules tagged with a &lt;code&gt;attack.tXXXX&lt;/code&gt; tag (e.g.: &lt;code&gt;attack.t1086&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Usage samples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Use the default &#34;rules&#34; folder&#xA;./tools/sigma2attack&#xA;&#xA;# ... or specify your own&#xA;./tools/sigma2attack --rules-directory ~/hunting/rules&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Result once imported in the MITRE ATT&amp;amp;CK® Navigator (&lt;a href=&#34;https://mitre-attack.github.io/attack-navigator/enterprise/&#34;&gt;online version&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SigmaHQ/sigma/master/images/sigma2attack.png&#34; alt=&#34;Sigma2attack result&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;S2AN&lt;/h2&gt; &#xA;&lt;p&gt;Similar to &lt;strong&gt;Sigma2attack&lt;/strong&gt;, &lt;a href=&#34;https://github.com/3CORESec/S2AN&#34;&gt;S2AN&lt;/a&gt; is a pre-compiled binary for both Windows and GNU/Linux that generates &lt;a href=&#34;https://github.com/mitre/attack-navigator/&#34;&gt;MITRE ATT&amp;amp;CK® Navigator&lt;/a&gt; layers from a directory of Sigma rules.&lt;/p&gt; &#xA;&lt;p&gt;S2AN was developed to be used as a standalone tool or as part of a CI/CD pipeline where it can be quickly downloaded and executed without external dependencies.&lt;/p&gt; &#xA;&lt;h2&gt;Contributed Scripts&lt;/h2&gt; &#xA;&lt;p&gt;The directory &lt;code&gt;contrib&lt;/code&gt; contains scripts that were contributed by the community:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sigma2elastalert.py&lt;/code&gt;i by David Routin: A script that converts Sigma rules to Elastalert configurations. This tool uses &lt;em&gt;sigmac&lt;/em&gt; and expects it in its path.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These tools are not part of the main toolchain and maintained separately by their authors.&lt;/p&gt; &#xA;&lt;h1&gt;Next Steps&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Finalizing and promoting the new &lt;a href=&#34;https://github.com/SigmaHQ/pySigma&#34;&gt;pySigma&lt;/a&gt; codebase&lt;/li&gt; &#xA; &lt;li&gt;Development of backends for the new converter (in separate github repositories)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Projects or Products that use Sigma&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.misp-project.org/2017/03/26/MISP.2.4.70.released.html&#34;&gt;MISP&lt;/a&gt; (since version 2.4.70, March 2017)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/atc-project/atomic-threat-coverage&#34;&gt;Atomic Threat Coverage&lt;/a&gt; (since December 2018)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tdm.socprime.com/sigma/&#34;&gt;SOC Prime - Sigma Rule Editor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://uncoder.io/&#34;&gt;uncoder.io&lt;/a&gt; - Online Translator for SIEM Searches&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nextron-systems.com/2018/06/28/spark-applies-sigma-rules-in-eventlog-scan/&#34;&gt;THOR&lt;/a&gt; - Scan with Sigma rules on endpoints&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.joesecurity.org/&#34;&gt;Joe Sandbox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/P4T12ICK/ypsilon&#34;&gt;ypsilon&lt;/a&gt; - Automated Use Case Testing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://globenewswire.com/news-release/2019/03/04/1745907/0/en/RANK-Software-to-Help-MSSPs-Scale-Cybersecurity-Offerings.html&#34;&gt;RANK VASA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dstaulcu/TA-Sigma-Searches&#34;&gt;TA-Sigma-Searches&lt;/a&gt; (Splunk App)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/timesketch/commit/0c6c4b65a6c0f2051d074e87bbb2da2424fa6c35&#34;&gt;TimeSketch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/3CORESec/SIEGMA&#34;&gt;SIΣGMA&lt;/a&gt; - SIEM consumable generator that utilizes Sigma for query conversion&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nextron-systems.com/2021/11/13/aurora-sigma-based-edr-agent-preview/&#34;&gt;Aurora Agent&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/confluentinc/cyber/tree/master/confluent-sigma&#34;&gt;Confluent Sigma&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sigma is available in some Linux distribution repositories:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/sigma/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/sigma.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contribution&lt;/h1&gt; &#xA;&lt;p&gt;If you want to contribute, you are more then welcome. There are numerous ways to help this project.&lt;/p&gt; &#xA;&lt;h2&gt;Use it and provide feedback&lt;/h2&gt; &#xA;&lt;p&gt;If you use it, let us know what works and what does not work.&lt;/p&gt; &#xA;&lt;p&gt;E.g.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tell us about false positives (issues section)&lt;/li&gt; &#xA; &lt;li&gt;Try to provide an improved rule (new filter) via &lt;a href=&#34;https://help.github.com/en/articles/editing-files-in-another-users-repository&#34;&gt;pull request&lt;/a&gt; on that rule&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Work on open issues&lt;/h2&gt; &#xA;&lt;p&gt;The github issue tracker is a good place to start tackling some issues others raised to the project. It could be as easy as a review of the documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Provide Backends / Backend Features / Bugfixes&lt;/h2&gt; &#xA;&lt;p&gt;Please don&#39;t provide backends for the old code base (sigmac) anymore. Please use the new &lt;a href=&#34;https://github.com/SigmaHQ/pySigma&#34;&gt;pySigma&lt;/a&gt;. We are working on a documentation on how to write new backends for that new code base. An example backend for Splunk can be found &lt;a href=&#34;https://github.com/SigmaHQ/pySigma-backend-splunk&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Spread the word&lt;/h2&gt; &#xA;&lt;p&gt;Last but not least, the more people use Sigma, the better, so help promote it by sharing it via social media. If you are using it, consider giving a talk about your journey and tell us about it.&lt;/p&gt; &#xA;&lt;h1&gt;Licenses&lt;/h1&gt; &#xA;&lt;p&gt;The content of this repository is released under the following licenses:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The toolchain (everything under &lt;code&gt;tools/&lt;/code&gt;) is licensed under the &lt;a href=&#34;https://www.gnu.org/licenses/lgpl-3.0.en.html&#34;&gt;GNU Lesser General Public License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/Neo23x0/sigma/wiki&#34;&gt;Sigma specification&lt;/a&gt; is public domain&lt;/li&gt; &#xA; &lt;li&gt;The rules contained in the &lt;code&gt;rules/&lt;/code&gt; directory are released under the &lt;a href=&#34;https://github.com/Neo23x0/sigma/raw/master/LICENSE.Detection.Rules.md&#34;&gt;Detection Rule License (DRL) 1.1&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;p&gt;This is a private project mainly developed by Florian Roth and Thomas Patzke with feedback from many fellow analysts and friends. Rules are our own or have been drived from blog posts, tweets or other public sources that are referenced in the rules.&lt;/p&gt; &#xA;&lt;h1&gt;Info Graphic&lt;/h1&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SigmaHQ/sigma/master/images/sigma_infographic_lq.png&#34; alt=&#34;sigmac_info_graphic&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Coverage Illustration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SigmaHQ/sigma/master/images/Sigma_Coverage.png&#34; alt=&#34;sigmac_coverage&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>volkandindar/agartha</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/volkandindar/agartha</id>
    <link href="https://github.com/volkandindar/agartha" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a burp extension for dynamic payload generation to detect injection flaws (RCE, LFI, SQLi), creates access matrix based user sessions to spot authentication/authorization issues, and converts Http requests to Javascript for further XSS exploitation and more.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Agartha { LFI | RCE | Auth | SQLi | Http-Js }&lt;/h1&gt; &#xA;&lt;p&gt;Agartha is a penetration testing tool which creates dynamic payload lists and user access matrix to reveal injection flaws and authentication/authorization issues. There are many different attack payloads exists, but Agartha creates run-time, systematic and vendor-neutral payloads with many different possibilities and bypassing methods. It also draws attention to user session and URL relationships, which makes easy to find user access violations. And additionally, it converts Http requests to JavaScript to help digging up XSS issues. In summary:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Payload Generator&lt;/strong&gt;: It creates payloads/wordlists for different attacks. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Directory Traversal/Local File Inclusion&lt;/strong&gt;: It creates file dictionary lists with various encoding and escaping characters.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Remote Code Execution&lt;/strong&gt;: It creates command dictionary lists for both unix and windows environments with different combinations.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;SQL Injection&lt;/strong&gt;: It creates Stacked Queries, Boolean-Based, Union-Based, Time-Based and Order-Based SQLi wordlist for various databases to help finding vulnerable spots.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Authorization Matrix&lt;/strong&gt;: It creates an access role matrix based on user sessions and URL lists to determine authorization/authentication related access violation issues.&lt;/li&gt; &#xA; &lt;li&gt;And &lt;strong&gt;Http Request to JavaScript Converter&lt;/strong&gt;: It converts Http requests to JavaScript code to be useful for further XSS exploitation and more.&lt;br&gt;&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here is a small tutorial how to use.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;!--You can install Agartha through official Burp Store automatically, from Burp menu &#39;Extender &gt; BApp Store&#39;.--&gt; &#xA;&lt;p&gt;For manual installation, you should download &#39;jython&#39; file first, and then:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Burp Menu &amp;gt; Extender &amp;gt; Options &amp;gt; Python Environment &amp;gt; Locate jython standalone jar file&lt;/li&gt; &#xA; &lt;li&gt;Burp Menu &amp;gt; Extender &amp;gt; Extensions &amp;gt; Add &amp;gt; Extension Type: Python &amp;gt; Select file: &#39;agartha.py&#39;&lt;/li&gt; &#xA; &lt;li&gt;After, you will see &#39;Agartha&#39; tab in the main window and it will be also registered the right click, under &#39;Extensions &amp;gt; Agartha {LFI|RCE|Auth|SQLi|Http-Js}&#39;.&lt;br&gt;&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Directory Traversal/Local File Inclusion&lt;/h2&gt; &#xA;&lt;p&gt;It both supports unix and windows file systems. You can generate any wordlists dynamically for the path you want. You just need to supply a file path and that&#39;s all.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&#39;Depth&#39;&lt;/strong&gt; is representation of how deep the wordlist should be. You can generate wordlists &#39;till&#39; or &#39;equal to&#39; this value.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&#39;Waf Bypass&#39;&lt;/strong&gt; asks for if you want to include all bypass features; like null bytes, different encoding, etc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img width=&#34;1000&#34; alt=&#34;Directory Traversal/Local File Inclusion wordlist&#34; src=&#34;https://user-images.githubusercontent.com/50321735/152050458-84c29e84-6e12-486b-99d2-fcf220791798.png&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Remote Code Execution&lt;/h2&gt; &#xA;&lt;p&gt;It creates command execution dynamic wordlists for the command you supply. It combines different separators and terminators for unix and windows environments together.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&#39;URL Encoding&#39;&lt;/strong&gt; encodes dictionary output.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img width=&#34;1000&#34; alt=&#34;Remote Code Execution wordlist&#34; src=&#34;https://user-images.githubusercontent.com/50321735/161567724-f73bfea2-1386-447d-b81b-7b811e13e426.png&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;SQL Injection&lt;/h2&gt; &#xA;&lt;p&gt;It generates payloads for Stacked Queries, Boolean-Based, Union-Based, Time-Based, Order-Based SQLi attacks, and you do not need to supply any inputs. You just pick what type of SQLi attacks and databases you want, then it will generate a wordlist with different combinations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&#39;URL Encoding&#39;&lt;/strong&gt; encodes dictionary output.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&#39;Waf Bypass&#39;&lt;/strong&gt; asks for if you want to include all bypass features; like null bytes, different encoding, etc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&#39;Union-Based&#39;&lt;/strong&gt; and &lt;strong&gt;&#39;Order-Based&#39;&lt;/strong&gt; ask for how deep the payload should be. The default value is 5.&lt;/p&gt; &#xA;&lt;p&gt;And the rest is related with database and attack types.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img width=&#34;1000&#34; alt=&#34;SQL Injection wordlist&#34; src=&#34;https://user-images.githubusercontent.com/50321735/161572348-eb5d610d-cb81-45c7-a9a3-796f823b0032.png&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Authorization Matrix&lt;/h2&gt; &#xA;&lt;p&gt;This part focuses on user session and URLs relationships to determine access violations. The tool will visit all URLs from pre-defined user sessions and fill the table with all Http responses. It is a kind of access matrix and helps to find out authentication/authorization issues. Afterwards we will see what user can access what page contents.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;User session name&lt;/strong&gt;: You can right click on any request and send it &#39;Agartha Panel&#39; to define user sessions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;URL Addresses&lt;/strong&gt; user can visit: You can use Burp&#39;s spider feature or any sitemap generators. You may need to provide different URLs for different users.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;1000&#34; alt=&#34;Authorization Matrix, sending http req&#34; src=&#34;https://user-images.githubusercontent.com/50321735/152217672-353b42a8-bb06-4e92-b9af-3f4e487ab1fd.png&#34;&gt; &#xA;&lt;p&gt;After sending Http request to Agartha, the panel will fill some fields in the tool.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;What&#39;s username for the session you provide. You can add up to 4 different users and each user will have a different color to make it more readable.&lt;/li&gt; &#xA; &lt;li&gt;User&#39;s request header and all user related URL visits will be based on it.&lt;/li&gt; &#xA; &lt;li&gt;URL addresses the user can visit. You can create this list with manual effort or automatic tools, like spiders, sitemap generators, etc, and do not forget to remove logout links.&lt;/li&gt; &#xA; &lt;li&gt;All URLs you supply will be in here. Also user cells will be colored, if the URL belongs to her/him.&lt;/li&gt; &#xA; &lt;li&gt;Http requests and responses without authentication. All session cookies, tokens and parameters will be removed form Http calls.&lt;/li&gt; &#xA; &lt;li&gt;Http requests and responses with the user session you define in the first step. Cell titles show Http response codes and response lengths.&lt;/li&gt; &#xA; &lt;li&gt;Just click the cell you want to examine and Http details will be shown in here.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;1000&#34; alt=&#34;Role Matrix&#34; src=&#34;https://user-images.githubusercontent.com/50321735/152227189-9e4b93df-de26-438e-ac1c-1aabcaf1ff56.png&#34;&gt; &#xA;&lt;p&gt;After clicking &#39;RUN&#39;, the tool will fill user and URL matrix with different colors. Besides the user colors, you will see orange, yellow and red cells. The URL address does not belong to the user and the cell color is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Yellow, because the response returns &#39;HTTP 302&#39; with authentication/authorization concerns&lt;/li&gt; &#xA; &lt;li&gt;Orange, because the response returns &#39;HTTP 200&#39; but different content length, with authentication/authorization concerns&lt;/li&gt; &#xA; &lt;li&gt;Red, because the response returns &#39;HTTP 200&#39; and same content length, with authentication/authorization concerns&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It will be quite similar, even if we add more users and any authorization concerns will be highlighted in the same way.&lt;/p&gt; &#xA;&lt;p&gt;You may also notice, it support only one Http request method and user session at the same time, because it processes bulk requests and it is not possible to provide different header options for each calls. But you may play with &#39;GET/POST&#39; methods to see response differences.&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Http Request to JavaScript Converter&lt;/h2&gt; &#xA;&lt;p&gt;The feature is for converting Http requests to JavaScript code. It can be useful to dig up further XSS issues and bypass header restrictions, like CSP, CORS.&lt;/p&gt; &#xA;&lt;p&gt;To access it, right click any Http Request, Extensions, &#39;Agartha&#39;, and &#39;Copy as JavaScript&#39;.&lt;/p&gt; &#xA;&lt;img width=&#34;1000&#34; alt=&#34;Http Request to JavaScript Converter&#34; src=&#34;https://user-images.githubusercontent.com/50321735/152224405-d10b78a2-9b18-44a9-a991-5b9c451c7253.png&#34;&gt; &#xA;&lt;p&gt;It will automatically save it to your clipboard with some remarks. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Http request with minimum header paramaters in JavaScript:&#xA;&#x9;&amp;lt;script&amp;gt;var xhr=new XMLHttpRequest();xhr.open(&#39;POST&#39;,&#39;http://vm:80/dvwa/login.php&#39;);xhr.withCredentials=true;xhr.setRequestHeader(&#39;Content-type&#39;,&#39;application/x-www-form-urlencoded&#39;);xhr.send(&#39;username=admin&amp;amp;password=password&amp;amp;Login=Login&#39;);&amp;lt;/script&amp;gt;&#xA;&#xA;Http request with all header paramaters in JavaScript:&#xA;&#x9;&amp;lt;script&amp;gt;var xhr=new XMLHttpRequest();xhr.open(&#39;POST&#39;,&#39;http://vm:80/dvwa/login.php&#39;);xhr.withCredentials=true;xhr.setRequestHeader(&#39;Host&#39;,&#39; vm&#39;);xhr.setRequestHeader(&#39;User-Agent&#39;,&#39; Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:97.0) Gecko/20100101 Firefox/97.0&#39;);xhr.setRequestHeader(&#39;Accept&#39;,&#39; */*&#39;);xhr.setRequestHeader(&#39;Accept-Language&#39;,&#39; en-US,en;q=0.5&#39;);xhr.setRequestHeader(&#39;Accept-Encoding&#39;,&#39; gzip, deflate&#39;);xhr.setRequestHeader(&#39;Content-type&#39;,&#39; application/x-www-form-urlencoded&#39;);xhr.setRequestHeader(&#39;Content-Length&#39;,&#39; 44&#39;);xhr.setRequestHeader(&#39;Origin&#39;,&#39; http://vm&#39;);xhr.setRequestHeader(&#39;Connection&#39;,&#39; close&#39;);xhr.setRequestHeader(&#39;Referer&#39;,&#39; http://vm/dvwa/login.php&#39;);xhr.send(&#39;username=admin&amp;amp;password=password&amp;amp;Login=Login&#39;);&amp;lt;/script&amp;gt;&#xA;&#xA;For redirection, please also add this code before &#39;&amp;lt;/script&amp;gt;&#39; tag:&#xA;&#x9;xhr.onreadystatechange=function(){if (this.status===302){var location=this.getResponseHeader(&#39;Location&#39;);return ajax.call(this,location);}};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note that, the JavaScript code will be called over original user session and many header fields will be filled automatically. In some cases, the server may require some header field mandatory, and therefore you may need to modify the code for an adjustment.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gto76/python-cheatsheet</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/gto76/python-cheatsheet</id>
    <link href="https://github.com/gto76/python-cheatsheet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Comprehensive Python Cheatsheet&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Comprehensive Python Cheatsheet&lt;/h1&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/README.md&#34;&gt;Download text file&lt;/a&gt;, &lt;a href=&#34;https://transactions.sendowl.com/products/78175486/4422834F/view&#34;&gt;Buy PDF&lt;/a&gt;, &lt;a href=&#34;https://github.com/gto76/python-cheatsheet&#34;&gt;Fork me on GitHub&lt;/a&gt; or &lt;a href=&#34;https://github.com/gto76/python-cheatsheet/wiki/Frequently-Asked-Questions&#34;&gt;Check out FAQ&lt;/a&gt;. &lt;/sup&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/web/image_888.jpeg&#34; alt=&#34;Monty Python&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;1. Collections:&lt;/strong&gt; &lt;strong&gt;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#list&#34;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#dictionary&#34;&gt;&lt;code&gt;Dictionary&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#set&#34;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#tuple&#34;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#range&#34;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#enumerate&#34;&gt;&lt;code&gt;Enumerate&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#iterator&#34;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#generator&#34;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;2. Types:&lt;/strong&gt; &lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#type&#34;&gt;&lt;code&gt;Type&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#string&#34;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#regex&#34;&gt;&lt;code&gt;Regular_Exp&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#format&#34;&gt;&lt;code&gt;Format&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#numbers-1&#34;&gt;&lt;code&gt;Numbers&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#combinatorics&#34;&gt;&lt;code&gt;Combinatorics&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#datetime&#34;&gt;&lt;code&gt;Datetime&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;3. Syntax:&lt;/strong&gt; &lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#arguments&#34;&gt;&lt;code&gt;Args&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#inline&#34;&gt;&lt;code&gt;Inline&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#imports&#34;&gt;&lt;code&gt;Import&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#decorator&#34;&gt;&lt;code&gt;Decorator&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#class&#34;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#duck-types&#34;&gt;&lt;code&gt;Duck_Types&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#enum&#34;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#exceptions&#34;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;4. System:&lt;/strong&gt; &lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#exit&#34;&gt;&lt;code&gt;Exit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#print&#34;&gt;&lt;code&gt;Print&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#input&#34;&gt;&lt;code&gt;Input&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#command-line-arguments&#34;&gt;&lt;code&gt;Command_Line_Arguments&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#open&#34;&gt;&lt;code&gt;Open&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#paths&#34;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#os-commands&#34;&gt;&lt;code&gt;OS_Commands&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;5. Data:&lt;/strong&gt; &lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#json&#34;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#pickle&#34;&gt;&lt;code&gt;Pickle&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#csv&#34;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#sqlite&#34;&gt;&lt;code&gt;SQLite&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#bytes&#34;&gt;&lt;code&gt;Bytes&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#struct&#34;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#array&#34;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#memory-view&#34;&gt;&lt;code&gt;Memory_View&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#deque&#34;&gt;&lt;code&gt;Deque&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;6. Advanced:&lt;/strong&gt; &lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#threading&#34;&gt;&lt;code&gt;Threading&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#operator&#34;&gt;&lt;code&gt;Operator&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#introspection&#34;&gt;&lt;code&gt;Introspection&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#metaprogramming&#34;&gt;&lt;code&gt;Metaprograming&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#eval&#34;&gt;&lt;code&gt;Eval&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#coroutines&#34;&gt;&lt;code&gt;Coroutines&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;7. Libraries:&lt;/strong&gt; &lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#progress-bar&#34;&gt;&lt;code&gt;Progress_Bar&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#plot&#34;&gt;&lt;code&gt;Plot&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#table&#34;&gt;&lt;code&gt;Table&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#curses&#34;&gt;&lt;code&gt;Curses&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#logging&#34;&gt;&lt;code&gt;Logging&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#scraping&#34;&gt;&lt;code&gt;Scraping&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#web&#34;&gt;&lt;code&gt;Web&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#profiling&#34;&gt;&lt;code&gt;Profile&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#numpy&#34;&gt;&lt;code&gt;NumPy&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#image&#34;&gt;&lt;code&gt;Image&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#audio&#34;&gt;&lt;code&gt;Audio&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#pygame&#34;&gt;&lt;code&gt;Games&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#pandas&#34;&gt;&lt;code&gt;Data&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Main&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;if __name__ == &#39;__main__&#39;:     # Runs main() if file wasn&#39;t imported.&#xA;    main()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;List&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;list&amp;gt; = &amp;lt;list&amp;gt;[&amp;lt;slice&amp;gt;]       # Or: &amp;lt;list&amp;gt;[from_inclusive : to_exclusive : ±step]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;list&amp;gt;.append(&amp;lt;el&amp;gt;)            # Or: &amp;lt;list&amp;gt; += [&amp;lt;el&amp;gt;]&#xA;&amp;lt;list&amp;gt;.extend(&amp;lt;collection&amp;gt;)    # Or: &amp;lt;list&amp;gt; += &amp;lt;collection&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;list&amp;gt;.sort()                  # Sorts in ascending order.&#xA;&amp;lt;list&amp;gt;.reverse()               # Reverses the list in-place.&#xA;&amp;lt;list&amp;gt; = sorted(&amp;lt;collection&amp;gt;)  # Returns a new sorted list.&#xA;&amp;lt;iter&amp;gt; = reversed(&amp;lt;list&amp;gt;)      # Returns reversed iterator.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;sum_of_elements  = sum(&amp;lt;collection&amp;gt;)&#xA;elementwise_sum  = [sum(pair) for pair in zip(list_a, list_b)]&#xA;sorted_by_second = sorted(&amp;lt;collection&amp;gt;, key=lambda el: el[1])&#xA;sorted_by_both   = sorted(&amp;lt;collection&amp;gt;, key=lambda el: (el[1], el[0]))&#xA;flatter_list     = list(itertools.chain.from_iterable(&amp;lt;list&amp;gt;))&#xA;product_of_elems = functools.reduce(lambda out, el: out * el, &amp;lt;collection&amp;gt;)&#xA;list_of_chars    = list(&amp;lt;str&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;For details about sorted(), min() and max() see &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#sortable&#34;&gt;sortable&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Module &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#operator&#34;&gt;operator&lt;/a&gt; provides functions itemgetter() and mul() that offer the same functionality as &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#lambda&#34;&gt;lambda&lt;/a&gt; expressions above.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;list&amp;gt;.insert(&amp;lt;int&amp;gt;, &amp;lt;el&amp;gt;)     # Inserts item at index and moves the rest to the right.&#xA;&amp;lt;el&amp;gt;  = &amp;lt;list&amp;gt;.pop([&amp;lt;int&amp;gt;])    # Removes and returns item at index or from the end.&#xA;&amp;lt;int&amp;gt; = &amp;lt;list&amp;gt;.count(&amp;lt;el&amp;gt;)     # Returns number of occurrences. Also works on strings.&#xA;&amp;lt;int&amp;gt; = &amp;lt;list&amp;gt;.index(&amp;lt;el&amp;gt;)     # Returns index of the first occurrence or raises ValueError.&#xA;&amp;lt;list&amp;gt;.remove(&amp;lt;el&amp;gt;)            # Removes first occurrence of the item or raises ValueError.&#xA;&amp;lt;list&amp;gt;.clear()                 # Removes all items. Also works on dictionary and set.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Dictionary&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;view&amp;gt; = &amp;lt;dict&amp;gt;.keys()                          # Coll. of keys that reflects changes.&#xA;&amp;lt;view&amp;gt; = &amp;lt;dict&amp;gt;.values()                        # Coll. of values that reflects changes.&#xA;&amp;lt;view&amp;gt; = &amp;lt;dict&amp;gt;.items()                         # Coll. of key-value tuples that reflects chgs.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;value  = &amp;lt;dict&amp;gt;.get(key, default=None)          # Returns default if key is missing.&#xA;value  = &amp;lt;dict&amp;gt;.setdefault(key, default=None)   # Returns and writes default if key is missing.&#xA;&amp;lt;dict&amp;gt; = collections.defaultdict(&amp;lt;type&amp;gt;)        # Creates a dict with default value of type.&#xA;&amp;lt;dict&amp;gt; = collections.defaultdict(lambda: 1)     # Creates a dict with default value 1.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;dict&amp;gt; = dict(&amp;lt;collection&amp;gt;)                     # Creates a dict from coll. of key-value pairs.&#xA;&amp;lt;dict&amp;gt; = dict(zip(keys, values))                # Creates a dict from two collections.&#xA;&amp;lt;dict&amp;gt; = dict.fromkeys(keys [, value])          # Creates a dict from collection of keys.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;dict&amp;gt;.update(&amp;lt;dict&amp;gt;)                           # Adds items. Replaces ones with matching keys.&#xA;value = &amp;lt;dict&amp;gt;.pop(key)                         # Removes item or raises KeyError.&#xA;{k for k, v in &amp;lt;dict&amp;gt;.items() if v == value}    # Returns set of keys that point to the value.&#xA;{k: v for k, v in &amp;lt;dict&amp;gt;.items() if k in keys}  # Returns a dictionary, filtered by keys.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Counter&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from collections import Counter&#xA;&amp;gt;&amp;gt;&amp;gt; colors = [&#39;blue&#39;, &#39;blue&#39;, &#39;blue&#39;, &#39;red&#39;, &#39;red&#39;]&#xA;&amp;gt;&amp;gt;&amp;gt; counter = Counter(colors)&#xA;&amp;gt;&amp;gt;&amp;gt; counter[&#39;yellow&#39;] += 1&#xA;Counter({&#39;blue&#39;: 3, &#39;red&#39;: 2, &#39;yellow&#39;: 1})&#xA;&amp;gt;&amp;gt;&amp;gt; counter.most_common()[0]&#xA;(&#39;blue&#39;, 3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Set&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;set&amp;gt; = set()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;set&amp;gt;.add(&amp;lt;el&amp;gt;)                                 # Or: &amp;lt;set&amp;gt; |= {&amp;lt;el&amp;gt;}&#xA;&amp;lt;set&amp;gt;.update(&amp;lt;collection&amp;gt; [, ...])              # Or: &amp;lt;set&amp;gt; |= &amp;lt;set&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;set&amp;gt;  = &amp;lt;set&amp;gt;.union(&amp;lt;coll.&amp;gt;)                   # Or: &amp;lt;set&amp;gt; | &amp;lt;set&amp;gt;&#xA;&amp;lt;set&amp;gt;  = &amp;lt;set&amp;gt;.intersection(&amp;lt;coll.&amp;gt;)            # Or: &amp;lt;set&amp;gt; &amp;amp; &amp;lt;set&amp;gt;&#xA;&amp;lt;set&amp;gt;  = &amp;lt;set&amp;gt;.difference(&amp;lt;coll.&amp;gt;)              # Or: &amp;lt;set&amp;gt; - &amp;lt;set&amp;gt;&#xA;&amp;lt;set&amp;gt;  = &amp;lt;set&amp;gt;.symmetric_difference(&amp;lt;coll.&amp;gt;)    # Or: &amp;lt;set&amp;gt; ^ &amp;lt;set&amp;gt;&#xA;&amp;lt;bool&amp;gt; = &amp;lt;set&amp;gt;.issubset(&amp;lt;coll.&amp;gt;)                # Or: &amp;lt;set&amp;gt; &amp;lt;= &amp;lt;set&amp;gt;&#xA;&amp;lt;bool&amp;gt; = &amp;lt;set&amp;gt;.issuperset(&amp;lt;coll.&amp;gt;)              # Or: &amp;lt;set&amp;gt; &amp;gt;= &amp;lt;set&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;el&amp;gt; = &amp;lt;set&amp;gt;.pop()                              # Raises KeyError if empty.&#xA;&amp;lt;set&amp;gt;.remove(&amp;lt;el&amp;gt;)                              # Raises KeyError if missing.&#xA;&amp;lt;set&amp;gt;.discard(&amp;lt;el&amp;gt;)                             # Doesn&#39;t raise an error.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Frozen Set&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Is immutable and hashable.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;That means it can be used as a key in a dictionary or as an element in a set.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;frozenset&amp;gt; = frozenset(&amp;lt;collection&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tuple&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tuple is an immutable and hashable list.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;tuple&amp;gt; = ()&#xA;&amp;lt;tuple&amp;gt; = (&amp;lt;el&amp;gt;,)                           # Or: &amp;lt;el&amp;gt;,&#xA;&amp;lt;tuple&amp;gt; = (&amp;lt;el_1&amp;gt;, &amp;lt;el_2&amp;gt; [, ...])          # Or: &amp;lt;el_1&amp;gt;, &amp;lt;el_2&amp;gt; [, ...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Named Tuple&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tuple&#39;s subclass with named elements.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from collections import namedtuple&#xA;&amp;gt;&amp;gt;&amp;gt; Point = namedtuple(&#39;Point&#39;, &#39;x y&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; p = Point(1, y=2)&#xA;Point(x=1, y=2)&#xA;&amp;gt;&amp;gt;&amp;gt; p[0]&#xA;1&#xA;&amp;gt;&amp;gt;&amp;gt; p.x&#xA;1&#xA;&amp;gt;&amp;gt;&amp;gt; getattr(p, &#39;y&#39;)&#xA;2&#xA;&amp;gt;&amp;gt;&amp;gt; p._fields  # Or: Point._fields&#xA;(&#39;x&#39;, &#39;y&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Range&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;range&amp;gt; = range(to_exclusive)&#xA;&amp;lt;range&amp;gt; = range(from_inclusive, to_exclusive)&#xA;&amp;lt;range&amp;gt; = range(from_inclusive, to_exclusive, ±step_size)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from_inclusive = &amp;lt;range&amp;gt;.start&#xA;to_exclusive   = &amp;lt;range&amp;gt;.stop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Enumerate&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for i, el in enumerate(&amp;lt;collection&amp;gt; [, i_start]):&#xA;    ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Iterator&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;iter&amp;gt; = iter(&amp;lt;collection&amp;gt;)                 # `iter(&amp;lt;iter&amp;gt;)` returns unmodified iterator.&#xA;&amp;lt;iter&amp;gt; = iter(&amp;lt;function&amp;gt;, to_exclusive)     # A sequence of return values until &#39;to_exclusive&#39;.&#xA;&amp;lt;el&amp;gt;   = next(&amp;lt;iter&amp;gt; [, default])           # Raises StopIteration or returns &#39;default&#39; on end.&#xA;&amp;lt;list&amp;gt; = list(&amp;lt;iter&amp;gt;)                       # Returns a list of iterator&#39;s remaining elements.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Itertools&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from itertools import count, repeat, cycle, chain, islice&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;iter&amp;gt; = count(start=0, step=1)             # Returns updated value endlessly. Accepts floats.&#xA;&amp;lt;iter&amp;gt; = repeat(&amp;lt;el&amp;gt; [, times])             # Returns element endlessly or &#39;times&#39; times.&#xA;&amp;lt;iter&amp;gt; = cycle(&amp;lt;collection&amp;gt;)                # Repeats the sequence endlessly.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;iter&amp;gt; = chain(&amp;lt;coll_1&amp;gt;, &amp;lt;coll_2&amp;gt; [, ...])  # Empties collections in order (figuratively).&#xA;&amp;lt;iter&amp;gt; = chain.from_iterable(&amp;lt;collection&amp;gt;)  # Empties collections inside a collection in order.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;iter&amp;gt; = islice(&amp;lt;coll&amp;gt;, to_exclusive)       # Only returns first &#39;to_exclusive&#39; elements.&#xA;&amp;lt;iter&amp;gt; = islice(&amp;lt;coll&amp;gt;, from_inclusive, …)  # `to_exclusive, step_size`.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Generator&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Any function that contains a yield statement returns a generator.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Generators and iterators are interchangeable.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def count(start, step):&#xA;    while True:&#xA;        yield start&#xA;        start += step&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; counter = count(10, 2)&#xA;&amp;gt;&amp;gt;&amp;gt; next(counter), next(counter), next(counter)&#xA;(10, 12, 14)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Type&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Everything is an object.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Every object has a type.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Type and class are synonymous.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;type&amp;gt; = type(&amp;lt;el&amp;gt;)                          # Or: &amp;lt;el&amp;gt;.__class__&#xA;&amp;lt;bool&amp;gt; = isinstance(&amp;lt;el&amp;gt;, &amp;lt;type&amp;gt;)            # Or: issubclass(type(&amp;lt;el&amp;gt;), &amp;lt;type&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; type(&#39;a&#39;), &#39;a&#39;.__class__, str&#xA;(&amp;lt;class &#39;str&#39;&amp;gt;, &amp;lt;class &#39;str&#39;&amp;gt;, &amp;lt;class &#39;str&#39;&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Some types do not have built-in names, so they must be imported:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from types import FunctionType, MethodType, LambdaType, GeneratorType, ModuleType&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Abstract Base Classes&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Each abstract base class specifies a set of virtual subclasses. These classes are then recognized by isinstance() and issubclass() as subclasses of the ABC, although they are really not. ABC can also manually decide whether or not a specific class is its virtual subclass, usually based on which methods the class has implemented. For instance, Iterable ABC looks for method iter(), while Collection ABC looks for iter(), contains() and len().&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from collections.abc import Iterable, Collection, Sequence&#xA;&amp;gt;&amp;gt;&amp;gt; isinstance([1, 2, 3], Iterable)&#xA;True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;+------------------+------------+------------+------------+&#xA;|                  |  Iterable  | Collection |  Sequence  |&#xA;+------------------+------------+------------+------------+&#xA;| list, range, str |    yes     |    yes     |    yes     |&#xA;| dict, set        |    yes     |    yes     |            |&#xA;| iter             |    yes     |            |            |&#xA;+------------------+------------+------------+------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from numbers import Number, Complex, Real, Rational, Integral&#xA;&amp;gt;&amp;gt;&amp;gt; isinstance(123, Number)&#xA;True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;+--------------------+----------+----------+----------+----------+----------+&#xA;|                    |  Number  |  Complex |   Real   | Rational | Integral |&#xA;+--------------------+----------+----------+----------+----------+----------+&#xA;| int                |   yes    |   yes    |   yes    |   yes    |   yes    |&#xA;| fractions.Fraction |   yes    |   yes    |   yes    |   yes    |          |&#xA;| float              |   yes    |   yes    |   yes    |          |          |&#xA;| complex            |   yes    |   yes    |          |          |          |&#xA;| decimal.Decimal    |   yes    |          |          |          |          |&#xA;+--------------------+----------+----------+----------+----------+----------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;String&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;str&amp;gt;  = &amp;lt;str&amp;gt;.strip()                       # Strips all whitespace characters from both ends.&#xA;&amp;lt;str&amp;gt;  = &amp;lt;str&amp;gt;.strip(&#39;&amp;lt;chars&amp;gt;&#39;)              # Strips all passed characters from both ends.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;list&amp;gt; = &amp;lt;str&amp;gt;.split()                       # Splits on one or more whitespace characters.&#xA;&amp;lt;list&amp;gt; = &amp;lt;str&amp;gt;.split(sep=None, maxsplit=-1)  # Splits on &#39;sep&#39; str at most &#39;maxsplit&#39; times.&#xA;&amp;lt;list&amp;gt; = &amp;lt;str&amp;gt;.splitlines(keepends=False)    # On [\n\r\f\v\x1c-\x1e\x85\u2028\u2029] and \r\n.&#xA;&amp;lt;str&amp;gt;  = &amp;lt;str&amp;gt;.join(&amp;lt;coll_of_strings&amp;gt;)       # Joins elements using string as a separator.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;bool&amp;gt; = &amp;lt;sub_str&amp;gt; in &amp;lt;str&amp;gt;                  # Checks if string contains a substring.&#xA;&amp;lt;bool&amp;gt; = &amp;lt;str&amp;gt;.startswith(&amp;lt;sub_str&amp;gt;)         # Pass tuple of strings for multiple options.&#xA;&amp;lt;bool&amp;gt; = &amp;lt;str&amp;gt;.endswith(&amp;lt;sub_str&amp;gt;)           # Pass tuple of strings for multiple options.&#xA;&amp;lt;int&amp;gt;  = &amp;lt;str&amp;gt;.find(&amp;lt;sub_str&amp;gt;)               # Returns start index of the first match or -1.&#xA;&amp;lt;int&amp;gt;  = &amp;lt;str&amp;gt;.index(&amp;lt;sub_str&amp;gt;)              # Same, but raises ValueError if missing.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;str&amp;gt;  = &amp;lt;str&amp;gt;.replace(old, new [, count])   # Replaces &#39;old&#39; with &#39;new&#39; at most &#39;count&#39; times.&#xA;&amp;lt;str&amp;gt;  = &amp;lt;str&amp;gt;.translate(&amp;lt;table&amp;gt;)            # Use `str.maketrans(&amp;lt;dict&amp;gt;)` to generate table.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;str&amp;gt;  = chr(&amp;lt;int&amp;gt;)                          # Converts int to Unicode character.&#xA;&amp;lt;int&amp;gt;  = ord(&amp;lt;str&amp;gt;)                          # Converts Unicode character to int.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Also: &lt;code&gt;&#39;lstrip()&#39;&lt;/code&gt;, &lt;code&gt;&#39;rstrip()&#39;&lt;/code&gt; and &lt;code&gt;&#39;rsplit()&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Also: &lt;code&gt;&#39;lower()&#39;&lt;/code&gt;, &lt;code&gt;&#39;upper()&#39;&lt;/code&gt;, &lt;code&gt;&#39;capitalize()&#39;&lt;/code&gt; and &lt;code&gt;&#39;title()&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Property Methods&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;+---------------+----------+----------+----------+----------+----------+&#xA;|               | [ !#$%…] | [a-zA-Z] |  [¼½¾]   |  [²³¹]   |  [0-9]   |&#xA;+---------------+----------+----------+----------+----------+----------+&#xA;| isprintable() |   yes    |   yes    |   yes    |   yes    |   yes    |&#xA;| isalnum()     |          |   yes    |   yes    |   yes    |   yes    |&#xA;| isnumeric()   |          |          |   yes    |   yes    |   yes    |&#xA;| isdigit()     |          |          |          |   yes    |   yes    |&#xA;| isdecimal()   |          |          |          |          |   yes    |&#xA;+---------------+----------+----------+----------+----------+----------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Also: &lt;code&gt;&#39;isspace()&#39;&lt;/code&gt; checks for &lt;code&gt;&#39;[ \t\n\r\f\v\x1c-\x1f\x85…]&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Regex&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import re&#xA;&amp;lt;str&amp;gt;   = re.sub(&amp;lt;regex&amp;gt;, new, text, count=0)  # Substitutes all occurrences with &#39;new&#39;.&#xA;&amp;lt;list&amp;gt;  = re.findall(&amp;lt;regex&amp;gt;, text)            # Returns all occurrences as strings.&#xA;&amp;lt;list&amp;gt;  = re.split(&amp;lt;regex&amp;gt;, text, maxsplit=0)  # Use brackets in regex to include the matches.&#xA;&amp;lt;Match&amp;gt; = re.search(&amp;lt;regex&amp;gt;, text)             # Searches for first occurrence of the pattern.&#xA;&amp;lt;Match&amp;gt; = re.match(&amp;lt;regex&amp;gt;, text)              # Searches only at the beginning of the text.&#xA;&amp;lt;iter&amp;gt;  = re.finditer(&amp;lt;regex&amp;gt;, text)           # Returns all occurrences as match objects.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Argument &#39;new&#39; can be a function that accepts a match object and returns a string.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Search() and match() return None if they can&#39;t find a match.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Argument &lt;code&gt;&#39;flags=re.IGNORECASE&#39;&lt;/code&gt; can be used with all functions.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Argument &lt;code&gt;&#39;flags=re.MULTILINE&#39;&lt;/code&gt; makes &lt;code&gt;&#39;^&#39;&lt;/code&gt; and &lt;code&gt;&#39;$&#39;&lt;/code&gt; match the start/end of each line.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Argument &lt;code&gt;&#39;flags=re.DOTALL&#39;&lt;/code&gt; makes dot also accept the &lt;code&gt;&#39;\n&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use &lt;code&gt;r&#39;\1&#39;&lt;/code&gt; or &lt;code&gt;&#39;\\1&#39;&lt;/code&gt; for backreference (&lt;code&gt;&#39;\1&#39;&lt;/code&gt; returns a character with octal code 1).&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Add &lt;code&gt;&#39;?&#39;&lt;/code&gt; after &lt;code&gt;&#39;*&#39;&lt;/code&gt; and &lt;code&gt;&#39;+&#39;&lt;/code&gt; to make them non-greedy.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Match Object&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;str&amp;gt;   = &amp;lt;Match&amp;gt;.group()                      # Returns the whole match. Also group(0).&#xA;&amp;lt;str&amp;gt;   = &amp;lt;Match&amp;gt;.group(1)                     # Returns part in the first bracket.&#xA;&amp;lt;tuple&amp;gt; = &amp;lt;Match&amp;gt;.groups()                     # Returns all bracketed parts.&#xA;&amp;lt;int&amp;gt;   = &amp;lt;Match&amp;gt;.start()                      # Returns start index of the match.&#xA;&amp;lt;int&amp;gt;   = &amp;lt;Match&amp;gt;.end()                        # Returns exclusive end index of the match.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Special Sequences&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#39;\d&#39; == &#39;[0-9]&#39;                                # Matches decimal characters.&#xA;&#39;\w&#39; == &#39;[a-zA-Z0-9_]&#39;                         # Matches alphanumerics and underscore.&#xA;&#39;\s&#39; == &#39;[ \t\n\r\f\v]&#39;                        # Matches whitespaces.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;By default, decimal characters, alphanumerics and whitespaces from all alphabets are matched unless &lt;code&gt;&#39;flags=re.ASCII&#39;&lt;/code&gt; argument is used.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;As shown above, it restricts special sequence matches to the first 128 characters and prevents &lt;code&gt;&#39;\s&#39;&lt;/code&gt; from accepting &lt;code&gt;&#39;[\x1c-\x1f]&#39;&lt;/code&gt; (the so-called separator characters).&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use a capital letter for negation (all non-ASCII characters will be matched when used in combination with ASCII flag).&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Format&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;str&amp;gt; = f&#39;{&amp;lt;el_1&amp;gt;}, {&amp;lt;el_2&amp;gt;}&#39;&#xA;&amp;lt;str&amp;gt; = &#39;{}, {}&#39;.format(&amp;lt;el_1&amp;gt;, &amp;lt;el_2&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Attributes&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from collections import namedtuple&#xA;&amp;gt;&amp;gt;&amp;gt; Person = namedtuple(&#39;Person&#39;, &#39;name height&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; person = Person(&#39;Jean-Luc&#39;, 187)&#xA;&amp;gt;&amp;gt;&amp;gt; f&#39;{person.height}&#39;&#xA;&#39;187&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; &#39;{p.height}&#39;.format(p=person)&#xA;&#39;187&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;General Options&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;{&amp;lt;el&amp;gt;:&amp;lt;10}                                     # &#39;&amp;lt;el&amp;gt;      &#39;&#xA;{&amp;lt;el&amp;gt;:^10}                                     # &#39;   &amp;lt;el&amp;gt;   &#39;&#xA;{&amp;lt;el&amp;gt;:&amp;gt;10}                                     # &#39;      &amp;lt;el&amp;gt;&#39;&#xA;{&amp;lt;el&amp;gt;:.&amp;lt;10}                                    # &#39;&amp;lt;el&amp;gt;......&#39;&#xA;{&amp;lt;el&amp;gt;:0}                                       # &#39;&amp;lt;el&amp;gt;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Options can be generated dynamically: &lt;code&gt;f&#39;{&amp;lt;el&amp;gt;:{&amp;lt;str/int&amp;gt;}[…]}&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Adding &lt;code&gt;&#39;!r&#39;&lt;/code&gt; before the colon converts object to string by calling its &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#class&#34;&gt;repr()&lt;/a&gt; method.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Strings&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;{&#39;abcde&#39;:10}                                   # &#39;abcde     &#39;&#xA;{&#39;abcde&#39;:10.3}                                 # &#39;abc       &#39;&#xA;{&#39;abcde&#39;:.3}                                   # &#39;abc&#39;&#xA;{&#39;abcde&#39;!r:10}                                 # &#34;&#39;abcde&#39;   &#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Numbers&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;{123456:10}                                    # &#39;    123456&#39;&#xA;{123456:10,}                                   # &#39;   123,456&#39;&#xA;{123456:10_}                                   # &#39;   123_456&#39;&#xA;{123456:+10}                                   # &#39;   +123456&#39;&#xA;{123456:=+10}                                  # &#39;+   123456&#39;&#xA;{123456: }                                     # &#39; 123456&#39;&#xA;{-123456: }                                    # &#39;-123456&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Floats&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;{1.23456:10.3}                                 # &#39;      1.23&#39;&#xA;{1.23456:10.3f}                                # &#39;     1.235&#39;&#xA;{1.23456:10.3e}                                # &#39; 1.235e+00&#39;&#xA;{1.23456:10.3%}                                # &#39;  123.456%&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Comparison of presentation types:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;+--------------+----------------+----------------+----------------+----------------+&#xA;|              |    {&amp;lt;float&amp;gt;}   |   {&amp;lt;float&amp;gt;:f}  |   {&amp;lt;float&amp;gt;:e}  |   {&amp;lt;float&amp;gt;:%}  |&#xA;+--------------+----------------+----------------+----------------+----------------+&#xA;|  0.000056789 |   &#39;5.6789e-05&#39; |    &#39;0.000057&#39;  | &#39;5.678900e-05&#39; |    &#39;0.005679%&#39; |&#xA;|  0.00056789  |   &#39;0.00056789&#39; |    &#39;0.000568&#39;  | &#39;5.678900e-04&#39; |    &#39;0.056789%&#39; |&#xA;|  0.0056789   |   &#39;0.0056789&#39;  |    &#39;0.005679&#39;  | &#39;5.678900e-03&#39; |    &#39;0.567890%&#39; |&#xA;|  0.056789    |   &#39;0.056789&#39;   |    &#39;0.056789&#39;  | &#39;5.678900e-02&#39; |    &#39;5.678900%&#39; |&#xA;|  0.56789     |   &#39;0.56789&#39;    |    &#39;0.567890&#39;  | &#39;5.678900e-01&#39; |   &#39;56.789000%&#39; |&#xA;|  5.6789      |   &#39;5.6789&#39;     |    &#39;5.678900&#39;  | &#39;5.678900e+00&#39; |  &#39;567.890000%&#39; |&#xA;| 56.789       |  &#39;56.789&#39;      |   &#39;56.789000&#39;  | &#39;5.678900e+01&#39; | &#39;5678.900000%&#39; |&#xA;+--------------+----------------+----------------+----------------+----------------+&#xA;&#xA;+--------------+----------------+----------------+----------------+----------------+&#xA;|              |  {&amp;lt;float&amp;gt;:.2}  |  {&amp;lt;float&amp;gt;:.2f} |  {&amp;lt;float&amp;gt;:.2e} |  {&amp;lt;float&amp;gt;:.2%} |&#xA;+--------------+----------------+----------------+----------------+----------------+&#xA;|  0.000056789 |    &#39;5.7e-05&#39;   |      &#39;0.00&#39;    |   &#39;5.68e-05&#39;   |      &#39;0.01%&#39;   |&#xA;|  0.00056789  |    &#39;0.00057&#39;   |      &#39;0.00&#39;    |   &#39;5.68e-04&#39;   |      &#39;0.06%&#39;   |&#xA;|  0.0056789   |    &#39;0.0057&#39;    |      &#39;0.01&#39;    |   &#39;5.68e-03&#39;   |      &#39;0.57%&#39;   |&#xA;|  0.056789    |    &#39;0.057&#39;     |      &#39;0.06&#39;    |   &#39;5.68e-02&#39;   |      &#39;5.68%&#39;   |&#xA;|  0.56789     |    &#39;0.57&#39;      |      &#39;0.57&#39;    |   &#39;5.68e-01&#39;   |     &#39;56.79%&#39;   |&#xA;|  5.6789      |    &#39;5.7&#39;       |      &#39;5.68&#39;    |   &#39;5.68e+00&#39;   |    &#39;567.89%&#39;   |&#xA;| 56.789       |    &#39;5.7e+01&#39;   |     &#39;56.79&#39;    |   &#39;5.68e+01&#39;   |   &#39;5678.90%&#39;   |&#xA;+--------------+----------------+----------------+----------------+----------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;When both rounding up and rounding down are possible, the one that returns result with even last digit is chosen. That makes &lt;code&gt;&#39;{6.5:.0f}&#39;&lt;/code&gt; a &lt;code&gt;&#39;6&#39;&lt;/code&gt; and &lt;code&gt;&#39;{7.5:.0f}&#39;&lt;/code&gt; an &lt;code&gt;&#39;8&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;This rule only effects numbers that can be represented exactly by a float (&lt;code&gt;.5&lt;/code&gt;, &lt;code&gt;.25&lt;/code&gt;, …).&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Ints&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;{90:c}                                   # &#39;Z&#39;&#xA;{90:b}                                   # &#39;1011010&#39;&#xA;{90:X}                                   # &#39;5A&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Numbers&lt;/h2&gt; &#xA;&lt;h3&gt;Types&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;int&amp;gt;      = int(&amp;lt;float/str/bool&amp;gt;)       # Or: math.floor(&amp;lt;float&amp;gt;)&#xA;&amp;lt;float&amp;gt;    = float(&amp;lt;int/str/bool&amp;gt;)       # Or: &amp;lt;real&amp;gt;e±&amp;lt;int&amp;gt;&#xA;&amp;lt;complex&amp;gt;  = complex(real=0, imag=0)     # Or: &amp;lt;real&amp;gt; ± &amp;lt;real&amp;gt;j&#xA;&amp;lt;Fraction&amp;gt; = fractions.Fraction(0, 1)    # Or: Fraction(numerator=0, denominator=1)&#xA;&amp;lt;Decimal&amp;gt;  = decimal.Decimal(&amp;lt;str/int&amp;gt;)  # Or: Decimal((sign, digits, exponent))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;int(&amp;lt;str&amp;gt;)&#39;&lt;/code&gt; and &lt;code&gt;&#39;float(&amp;lt;str&amp;gt;)&#39;&lt;/code&gt; raise ValueError on malformed strings.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Decimal numbers are stored exactly, unlike most floats where &lt;code&gt;&#39;1.1 + 2.2 != 3.3&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Precision of decimal operations is set with: &lt;code&gt;&#39;decimal.getcontext().prec = &amp;lt;int&amp;gt;&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Basic Functions&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;num&amp;gt; = pow(&amp;lt;num&amp;gt;, &amp;lt;num&amp;gt;)                # Or: &amp;lt;num&amp;gt; ** &amp;lt;num&amp;gt;&#xA;&amp;lt;num&amp;gt; = abs(&amp;lt;num&amp;gt;)                       # &amp;lt;float&amp;gt; = abs(&amp;lt;complex&amp;gt;)&#xA;&amp;lt;num&amp;gt; = round(&amp;lt;num&amp;gt; [, ±ndigits])        # `round(126, -1) == 130`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Math&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from math import e, pi, inf, nan, isinf, isnan&#xA;from math import sin, cos, tan, asin, acos, atan, degrees, radians&#xA;from math import log, log10, log2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Statistics&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from statistics import mean, median, variance, stdev, quantiles, groupby&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Random&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from random import random, randint, choice, shuffle, gauss, seed&#xA;&#xA;&amp;lt;float&amp;gt; = random()                       # A float inside [0, 1).&#xA;&amp;lt;int&amp;gt;   = randint(from_inc, to_inc)      # An int inside [from_inc, to_inc].&#xA;&amp;lt;el&amp;gt;    = choice(&amp;lt;sequence&amp;gt;)             # Keeps the sequence intact.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Bin, Hex&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;int&amp;gt; = ±0b&amp;lt;bin&amp;gt;                         # Or: ±0x&amp;lt;hex&amp;gt;&#xA;&amp;lt;int&amp;gt; = int(&#39;±&amp;lt;bin&amp;gt;&#39;, 2)                 # Or: int(&#39;±&amp;lt;hex&amp;gt;&#39;, 16)&#xA;&amp;lt;int&amp;gt; = int(&#39;±0b&amp;lt;bin&amp;gt;&#39;, 0)               # Or: int(&#39;±0x&amp;lt;hex&amp;gt;&#39;, 0)&#xA;&amp;lt;str&amp;gt; = bin(&amp;lt;int&amp;gt;)                       # Returns &#39;[-]0b&amp;lt;bin&amp;gt;&#39;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Bitwise Operators&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;int&amp;gt; = &amp;lt;int&amp;gt; &amp;amp; &amp;lt;int&amp;gt;                    # And (0b1100 &amp;amp; 0b1010 == 0b1000).&#xA;&amp;lt;int&amp;gt; = &amp;lt;int&amp;gt; | &amp;lt;int&amp;gt;                    # Or  (0b1100 | 0b1010 == 0b1110).&#xA;&amp;lt;int&amp;gt; = &amp;lt;int&amp;gt; ^ &amp;lt;int&amp;gt;                    # Xor (0b1100 ^ 0b1010 == 0b0110).&#xA;&amp;lt;int&amp;gt; = &amp;lt;int&amp;gt; &amp;lt;&amp;lt; n_bits                  # Left shift. Use &amp;gt;&amp;gt; for right.&#xA;&amp;lt;int&amp;gt; = ~&amp;lt;int&amp;gt;                           # Not. Also -&amp;lt;int&amp;gt; - 1.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Combinatorics&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Every function returns an iterator.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;If you want to print the iterator, you need to pass it to the list() function first!&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from itertools import product, combinations, combinations_with_replacement, permutations&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; product([0, 1], repeat=3)&#xA;[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), ..., (1, 1, 1)]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; product(&#39;abc&#39;, &#39;abc&#39;)                    #   a  b  c&#xA;[(&#39;a&#39;, &#39;a&#39;), (&#39;a&#39;, &#39;b&#39;), (&#39;a&#39;, &#39;c&#39;),         # a x  x  x&#xA; (&#39;b&#39;, &#39;a&#39;), (&#39;b&#39;, &#39;b&#39;), (&#39;b&#39;, &#39;c&#39;),         # b x  x  x&#xA; (&#39;c&#39;, &#39;a&#39;), (&#39;c&#39;, &#39;b&#39;), (&#39;c&#39;, &#39;c&#39;)]         # c x  x  x&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; combinations(&#39;abc&#39;, 2)                   #   a  b  c&#xA;[(&#39;a&#39;, &#39;b&#39;), (&#39;a&#39;, &#39;c&#39;),                     # a .  x  x&#xA; (&#39;b&#39;, &#39;c&#39;)]                                 # b .  .  x&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; combinations_with_replacement(&#39;abc&#39;, 2)  #   a  b  c&#xA;[(&#39;a&#39;, &#39;a&#39;), (&#39;a&#39;, &#39;b&#39;), (&#39;a&#39;, &#39;c&#39;),         # a x  x  x&#xA; (&#39;b&#39;, &#39;b&#39;), (&#39;b&#39;, &#39;c&#39;),                     # b .  x  x&#xA; (&#39;c&#39;, &#39;c&#39;)]                                 # c .  .  x&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; permutations(&#39;abc&#39;, 2)                   #   a  b  c&#xA;[(&#39;a&#39;, &#39;b&#39;), (&#39;a&#39;, &#39;c&#39;),                     # a .  x  x&#xA; (&#39;b&#39;, &#39;a&#39;), (&#39;b&#39;, &#39;c&#39;),                     # b x  .  x&#xA; (&#39;c&#39;, &#39;a&#39;), (&#39;c&#39;, &#39;b&#39;)]                     # c x  x  .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Datetime&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Module &#39;datetime&#39; provides &#39;date&#39; &lt;code&gt;&amp;lt;D&amp;gt;&lt;/code&gt;, &#39;time&#39; &lt;code&gt;&amp;lt;T&amp;gt;&lt;/code&gt;, &#39;datetime&#39; &lt;code&gt;&amp;lt;DT&amp;gt;&lt;/code&gt; and &#39;timedelta&#39; &lt;code&gt;&amp;lt;TD&amp;gt;&lt;/code&gt; classes. All are immutable and hashable.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Time and datetime objects can be &#39;aware&#39; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;, meaning they have defined timezone, or &#39;naive&#39; &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt;, meaning they don&#39;t.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;If object is naive, it is presumed to be in the system&#39;s timezone.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from datetime import date, time, datetime, timedelta&#xA;from dateutil.tz import UTC, tzlocal, gettz, datetime_exists, resolve_imaginary&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Constructors&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;D&amp;gt;  = date(year, month, day)&#xA;&amp;lt;T&amp;gt;  = time(hour=0, minute=0, second=0, microsecond=0, tzinfo=None, fold=0)&#xA;&amp;lt;DT&amp;gt; = datetime(year, month, day, hour=0, minute=0, second=0, ...)&#xA;&amp;lt;TD&amp;gt; = timedelta(weeks=0, days=0, hours=0, minutes=0, seconds=0, ...)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use &lt;code&gt;&#39;&amp;lt;D/DT&amp;gt;.weekday()&#39;&lt;/code&gt; to get the day of the week (Mon == 0).&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;fold=1&#39;&lt;/code&gt; means the second pass in case of time jumping back for one hour.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Timedelta normalizes arguments to ±days, seconds (&amp;lt; 86 400) and microseconds (&amp;lt; 1M).&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Now&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;D/DTn&amp;gt;  = D/DT.today()                     # Current local date or naive datetime.&#xA;&amp;lt;DTn&amp;gt;    = DT.utcnow()                      # Naive datetime from current UTC time.&#xA;&amp;lt;DTa&amp;gt;    = DT.now(&amp;lt;tzinfo&amp;gt;)                 # Aware datetime from current tz time.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;To extract time use &lt;code&gt;&#39;&amp;lt;DTn&amp;gt;.time()&#39;&lt;/code&gt;, &lt;code&gt;&#39;&amp;lt;DTa&amp;gt;.time()&#39;&lt;/code&gt; or &lt;code&gt;&#39;&amp;lt;DTa&amp;gt;.timetz()&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Timezone&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;tzinfo&amp;gt; = UTC                              # UTC timezone. London without DST.&#xA;&amp;lt;tzinfo&amp;gt; = tzlocal()                        # Local timezone. Also gettz().&#xA;&amp;lt;tzinfo&amp;gt; = gettz(&#39;&amp;lt;Continent&amp;gt;/&amp;lt;City&amp;gt;&#39;)      # &#39;Continent/City_Name&#39; timezone or None.&#xA;&amp;lt;DTa&amp;gt;    = &amp;lt;DT&amp;gt;.astimezone(&amp;lt;tzinfo&amp;gt;)        # Datetime, converted to the passed timezone.&#xA;&amp;lt;Ta/DTa&amp;gt; = &amp;lt;T/DT&amp;gt;.replace(tzinfo=&amp;lt;tzinfo&amp;gt;)  # Unconverted object with a new timezone.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Encode&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;D/T/DT&amp;gt; = D/T/DT.fromisoformat(&#39;&amp;lt;iso&amp;gt;&#39;)    # Object from ISO string. Raises ValueError.&#xA;&amp;lt;DT&amp;gt;     = DT.strptime(&amp;lt;str&amp;gt;, &#39;&amp;lt;format&amp;gt;&#39;)   # Datetime from str, according to format.&#xA;&amp;lt;D/DTn&amp;gt;  = D/DT.fromordinal(&amp;lt;int&amp;gt;)          # D/DTn from days since the Gregorian NYE 1.&#xA;&amp;lt;DTn&amp;gt;    = DT.fromtimestamp(&amp;lt;real&amp;gt;)         # Local time DTn from seconds since the Epoch.&#xA;&amp;lt;DTa&amp;gt;    = DT.fromtimestamp(&amp;lt;real&amp;gt;, &amp;lt;tz.&amp;gt;)  # Aware datetime from seconds since the Epoch.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ISO strings come in following forms: &lt;code&gt;&#39;YYYY-MM-DD&#39;&lt;/code&gt;, &lt;code&gt;&#39;HH:MM:SS.ffffff[±&amp;lt;offset&amp;gt;]&#39;&lt;/code&gt;, or both separated by an arbitrary character. Offset is formatted as: &lt;code&gt;&#39;HH:MM&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Python uses the Unix Epoch: &lt;code&gt;&#39;1970-01-01 00:00 UTC&#39;&lt;/code&gt;, &lt;code&gt;&#39;1970-01-01 01:00 CET&#39;&lt;/code&gt;, ...&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Decode&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;str&amp;gt;    = &amp;lt;D/T/DT&amp;gt;.isoformat(sep=&#39;T&#39;)      # Also timespec=&#39;auto/hours/minutes/seconds&#39;.&#xA;&amp;lt;str&amp;gt;    = &amp;lt;D/T/DT&amp;gt;.strftime(&#39;&amp;lt;format&amp;gt;&#39;)    # Custom string representation.&#xA;&amp;lt;int&amp;gt;    = &amp;lt;D/DT&amp;gt;.toordinal()               # Days since Gregorian NYE 1, ignoring time and tz.&#xA;&amp;lt;float&amp;gt;  = &amp;lt;DTn&amp;gt;.timestamp()                # Seconds since the Epoch, from DTn in local tz.&#xA;&amp;lt;float&amp;gt;  = &amp;lt;DTa&amp;gt;.timestamp()                # Seconds since the Epoch, from DTa.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Format&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; dt = datetime.strptime(&#39;2015-05-14 23:39:00.00 +2000&#39;, &#39;%Y-%m-%d %H:%M:%S.%f %z&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; dt.strftime(&#34;%A, %dth of %B &#39;%y, %I:%M%p %Z&#34;)&#xA;&#34;Thursday, 14th of May &#39;15, 11:39PM UTC+02:00&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;%Z&#39;&lt;/code&gt; only accepts &lt;code&gt;&#39;UTC/GMT&#39;&lt;/code&gt; and local timezone&#39;s code. &lt;code&gt;&#39;%z&#39;&lt;/code&gt; also accepts &lt;code&gt;&#39;±HH:MM&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;For abbreviated weekday and month use &lt;code&gt;&#39;%a&#39;&lt;/code&gt; and &lt;code&gt;&#39;%b&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Arithmetics&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;D/DT&amp;gt;   = &amp;lt;D/DT&amp;gt;  ± &amp;lt;TD&amp;gt;                   # Returned datetime can fall into missing hour.&#xA;&amp;lt;TD&amp;gt;     = &amp;lt;D/DTn&amp;gt; - &amp;lt;D/DTn&amp;gt;                # Returns the difference, ignoring time jumps.&#xA;&amp;lt;TD&amp;gt;     = &amp;lt;DTa&amp;gt;   - &amp;lt;DTa&amp;gt;                  # Ignores time jumps if they share tzinfo object.&#xA;&amp;lt;TD&amp;gt;     = &amp;lt;TD&amp;gt;    * &amp;lt;real&amp;gt;                 # Also: &amp;lt;TD&amp;gt; = abs(&amp;lt;TD&amp;gt;) and &amp;lt;TD&amp;gt; = &amp;lt;TD&amp;gt; ±% &amp;lt;TD&amp;gt;.&#xA;&amp;lt;float&amp;gt;  = &amp;lt;TD&amp;gt;    / &amp;lt;TD&amp;gt;                   # How many weeks/years there are in TD. Also //.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Arguments&lt;/h2&gt; &#xA;&lt;h3&gt;Inside Function Call&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;function&amp;gt;(&amp;lt;positional_args&amp;gt;)                  # f(0, 0)&#xA;&amp;lt;function&amp;gt;(&amp;lt;keyword_args&amp;gt;)                     # f(x=0, y=0)&#xA;&amp;lt;function&amp;gt;(&amp;lt;positional_args&amp;gt;, &amp;lt;keyword_args&amp;gt;)  # f(0, y=0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Inside Function Definition&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def f(&amp;lt;nondefault_args&amp;gt;):                      # def f(x, y):&#xA;def f(&amp;lt;default_args&amp;gt;):                         # def f(x=0, y=0):&#xA;def f(&amp;lt;nondefault_args&amp;gt;, &amp;lt;default_args&amp;gt;):      # def f(x, y=0):&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;A function has its default values evaluated when it&#39;s first encountered in the scope.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Any changes to default values that are mutable will persist between invocations.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Splat Operator&lt;/h2&gt; &#xA;&lt;h3&gt;Inside Function Call&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Splat expands a collection into positional arguments, while splatty-splat expands a dictionary into keyword arguments.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;args   = (1, 2)&#xA;kwargs = {&#39;x&#39;: 3, &#39;y&#39;: 4, &#39;z&#39;: 5}&#xA;func(*args, **kwargs)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Is the same as:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;func(1, 2, x=3, y=4, z=5)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Inside Function Definition&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Splat combines zero or more positional arguments into a tuple, while splatty-splat combines zero or more keyword arguments into a dictionary.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def add(*a):&#xA;    return sum(a)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; add(1, 2, 3)&#xA;6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Legal argument combinations:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def f(*, x, y, z):          # f(x=1, y=2, z=3)&#xA;def f(x, *, y, z):          # f(x=1, y=2, z=3) | f(1, y=2, z=3)&#xA;def f(x, y, *, z):          # f(x=1, y=2, z=3) | f(1, y=2, z=3) | f(1, 2, z=3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def f(*args):               # f(1, 2, 3)&#xA;def f(x, *args):            # f(1, 2, 3)&#xA;def f(*args, z):            # f(1, 2, z=3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def f(**kwargs):            # f(x=1, y=2, z=3)&#xA;def f(x, **kwargs):         # f(x=1, y=2, z=3) | f(1, y=2, z=3)&#xA;def f(*, x, **kwargs):      # f(x=1, y=2, z=3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def f(*args, **kwargs):     # f(x=1, y=2, z=3) | f(1, y=2, z=3) | f(1, 2, z=3) | f(1, 2, 3)&#xA;def f(x, *args, **kwargs):  # f(x=1, y=2, z=3) | f(1, y=2, z=3) | f(1, 2, z=3) | f(1, 2, 3)&#xA;def f(*args, y, **kwargs):  # f(x=1, y=2, z=3) | f(1, y=2, z=3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Other Uses&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;list&amp;gt;  = [*&amp;lt;collection&amp;gt; [, ...]]&#xA;&amp;lt;set&amp;gt;   = {*&amp;lt;collection&amp;gt; [, ...]}&#xA;&amp;lt;tuple&amp;gt; = (*&amp;lt;collection&amp;gt;, [...])&#xA;&amp;lt;dict&amp;gt;  = {**&amp;lt;dict&amp;gt; [, ...]}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;head, *body, tail = &amp;lt;collection&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Inline&lt;/h2&gt; &#xA;&lt;h3&gt;Lambda&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;func&amp;gt; = lambda: &amp;lt;return_value&amp;gt;&#xA;&amp;lt;func&amp;gt; = lambda &amp;lt;arg_1&amp;gt;, &amp;lt;arg_2&amp;gt;: &amp;lt;return_value&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Comprehensions&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;list&amp;gt; = [i+1 for i in range(10)]                         # [1, 2, ..., 10]&#xA;&amp;lt;set&amp;gt;  = {i for i in range(10) if i &amp;gt; 5}                  # {6, 7, 8, 9}&#xA;&amp;lt;iter&amp;gt; = (i+5 for i in range(10))                         # (5, 6, ..., 14)&#xA;&amp;lt;dict&amp;gt; = {i: i*2 for i in range(10)}                      # {0: 0, 1: 2, ..., 9: 18}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; [l+r for l in &#39;abc&#39; for r in &#39;abc&#39;]&#xA;[&#39;aa&#39;, &#39;ab&#39;, &#39;ac&#39;, ..., &#39;cc&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Map, Filter, Reduce&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;iter&amp;gt; = map(lambda x: x + 1, range(10))                  # (1, 2, ..., 10)&#xA;&amp;lt;iter&amp;gt; = filter(lambda x: x &amp;gt; 5, range(10))               # (6, 7, 8, 9)&#xA;&amp;lt;obj&amp;gt;  = reduce(lambda out, x: out + x, range(10))        # 45&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reduce must be imported from the functools module.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Any, All&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;bool&amp;gt; = any(&amp;lt;collection&amp;gt;)                                # Is `bool(el)` True for any element.&#xA;&amp;lt;bool&amp;gt; = all(&amp;lt;collection&amp;gt;)                                # Is True for all elements or empty.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Conditional Expression&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;obj&amp;gt; = &amp;lt;exp_if_true&amp;gt; if &amp;lt;condition&amp;gt; else &amp;lt;exp_if_false&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; [a if a else &#39;zero&#39; for a in (0, 1, 2, 3)]&#xA;[&#39;zero&#39;, 1, 2, 3]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Named Tuple, Enum, Dataclass&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from collections import namedtuple&#xA;Point = namedtuple(&#39;Point&#39;, &#39;x y&#39;)&#xA;point = Point(0, 0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from enum import Enum&#xA;Direction = Enum(&#39;Direction&#39;, &#39;n e s w&#39;)&#xA;direction = Direction.n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from dataclasses import make_dataclass&#xA;Creature = make_dataclass(&#39;Creature&#39;, [&#39;loc&#39;, &#39;dir&#39;])&#xA;creature = Creature(point, direction)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Imports&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import &amp;lt;module&amp;gt;            # Imports a built-in or &#39;&amp;lt;module&amp;gt;.py&#39;.&#xA;import &amp;lt;package&amp;gt;           # Imports a built-in or &#39;&amp;lt;package&amp;gt;/__init__.py&#39;.&#xA;import &amp;lt;package&amp;gt;.&amp;lt;module&amp;gt;  # Imports a built-in or &#39;&amp;lt;package&amp;gt;/&amp;lt;module&amp;gt;.py&#39;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Package is a collection of modules, but it can also define its own objects.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;On a filesystem this corresponds to a directory of Python files with an optional init script.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Running &lt;code&gt;&#39;import &amp;lt;package&amp;gt;&#39;&lt;/code&gt; does not automatically provide access to the package&#39;s modules unless they are explicitly imported in its init script.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Closure&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;We have/get a closure in Python when:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;A nested function references a value of its enclosing function and then&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;the enclosing function returns the nested function.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def get_multiplier(a):&#xA;    def out(b):&#xA;        return a * b&#xA;    return out&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; multiply_by_3 = get_multiplier(3)&#xA;&amp;gt;&amp;gt;&amp;gt; multiply_by_3(10)&#xA;30&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;If multiple nested functions within enclosing function reference the same value, that value gets shared.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;To dynamically access function&#39;s first free variable use &lt;code&gt;&#39;&amp;lt;function&amp;gt;.__closure__[0].cell_contents&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Partial&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from functools import partial&#xA;&amp;lt;function&amp;gt; = partial(&amp;lt;function&amp;gt; [, &amp;lt;arg_1&amp;gt;, &amp;lt;arg_2&amp;gt;, ...])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; import operator as op&#xA;&amp;gt;&amp;gt;&amp;gt; multiply_by_3 = partial(op.mul, 3)&#xA;&amp;gt;&amp;gt;&amp;gt; multiply_by_3(10)&#xA;30&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Partial is also useful in cases when function needs to be passed as an argument because it enables us to set its arguments beforehand.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;A few examples being: &lt;code&gt;&#39;defaultdict(&amp;lt;function&amp;gt;)&#39;&lt;/code&gt;, &lt;code&gt;&#39;iter(&amp;lt;function&amp;gt;, to_exclusive)&#39;&lt;/code&gt; and dataclass&#39;s &lt;code&gt;&#39;field(default_factory=&amp;lt;function&amp;gt;)&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Non-Local&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;If variable is being assigned to anywhere in the scope, it is regarded as a local variable, unless it is declared as a &#39;global&#39; or a &#39;nonlocal&#39;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def get_counter():&#xA;    i = 0&#xA;    def out():&#xA;        nonlocal i&#xA;        i += 1&#xA;        return i&#xA;    return out&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; counter = get_counter()&#xA;&amp;gt;&amp;gt;&amp;gt; counter(), counter(), counter()&#xA;(1, 2, 3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Decorator&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;A decorator takes a function, adds some functionality and returns it.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;It can be any &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#callable&#34;&gt;callable&lt;/a&gt;, but is usually implemented as a function that returns a &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#closure&#34;&gt;closure&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;@decorator_name&#xA;def function_that_gets_passed_to_decorator():&#xA;    ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Debugger Example&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Decorator that prints function&#39;s name every time it gets called.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from functools import wraps&#xA;&#xA;def debug(func):&#xA;    @wraps(func)&#xA;    def out(*args, **kwargs):&#xA;        print(func.__name__)&#xA;        return func(*args, **kwargs)&#xA;    return out&#xA;&#xA;@debug&#xA;def add(x, y):&#xA;    return x + y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Wraps is a helper decorator that copies the metadata of the passed function (func) to the function it is wrapping (out).&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Without it &lt;code&gt;&#39;add.__name__&#39;&lt;/code&gt; would return &lt;code&gt;&#39;out&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;LRU Cache&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Decorator that caches function&#39;s return values. All function&#39;s arguments must be hashable.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from functools import lru_cache&#xA;&#xA;@lru_cache(maxsize=None)&#xA;def fib(n):&#xA;    return n if n &amp;lt; 2 else fib(n-2) + fib(n-1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Default size of the cache is 128 values. Passing &lt;code&gt;&#39;maxsize=None&#39;&lt;/code&gt; makes it unbounded.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CPython interpreter limits recursion depth to 1000 by default. To increase it use &lt;code&gt;&#39;sys.setrecursionlimit(&amp;lt;depth&amp;gt;)&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Parametrized Decorator&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;A decorator that accepts arguments and returns a normal decorator that accepts a function.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from functools import wraps&#xA;&#xA;def debug(print_result=False):&#xA;    def decorator(func):&#xA;        @wraps(func)&#xA;        def out(*args, **kwargs):&#xA;            result = func(*args, **kwargs)&#xA;            print(func.__name__, result if print_result else &#39;&#39;)&#xA;            return result&#xA;        return out&#xA;    return decorator&#xA;&#xA;@debug(print_result=True)&#xA;def add(x, y):&#xA;    return x + y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Using only &lt;code&gt;&#39;@debug&#39;&lt;/code&gt; to decorate the add() function would not work here, because debug would then receive the add() function as a &#39;print_result&#39; argument. Decorators can however manually check if the argument they received is a function and act accordingly.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Class&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class &amp;lt;name&amp;gt;:&#xA;    def __init__(self, a):&#xA;        self.a = a&#xA;    def __repr__(self):&#xA;        class_name = self.__class__.__name__&#xA;        return f&#39;{class_name}({self.a!r})&#39;&#xA;    def __str__(self):&#xA;        return str(self.a)&#xA;&#xA;    @classmethod&#xA;    def get_class_name(cls):&#xA;        return cls.__name__&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Return value of repr() should be unambiguous and of str() readable.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;If only repr() is defined, it will also be used for str().&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Str() use cases:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&amp;lt;el&amp;gt;)&#xA;f&#39;{&amp;lt;el&amp;gt;}&#39;&#xA;logging.warning(&amp;lt;el&amp;gt;)&#xA;csv.writer(&amp;lt;file&amp;gt;).writerow([&amp;lt;el&amp;gt;])&#xA;raise Exception(&amp;lt;el&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Repr() use cases:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print/str/repr([&amp;lt;el&amp;gt;])&#xA;f&#39;{&amp;lt;el&amp;gt;!r}&#39;&#xA;Z = dataclasses.make_dataclass(&#39;Z&#39;, [&#39;a&#39;]); print/str/repr(Z(&amp;lt;el&amp;gt;))&#xA;&amp;gt;&amp;gt;&amp;gt; &amp;lt;el&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Constructor Overloading&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class &amp;lt;name&amp;gt;:&#xA;    def __init__(self, a=None):&#xA;        self.a = a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Inheritance&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class Person:&#xA;    def __init__(self, name, age):&#xA;        self.name = name&#xA;        self.age  = age&#xA;&#xA;class Employee(Person):&#xA;    def __init__(self, name, age, staff_num):&#xA;        super().__init__(name, age)&#xA;        self.staff_num = staff_num&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Multiple Inheritance&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class A: pass&#xA;class B: pass&#xA;class C(A, B): pass&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;MRO determines the order in which parent classes are traversed when searching for a method:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; C.mro()&#xA;[&amp;lt;class &#39;C&#39;&amp;gt;, &amp;lt;class &#39;A&#39;&amp;gt;, &amp;lt;class &#39;B&#39;&amp;gt;, &amp;lt;class &#39;object&#39;&amp;gt;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Property&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pythonic way of implementing getters and setters.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class Person:&#xA;    @property&#xA;    def name(self):&#xA;        return &#39; &#39;.join(self._name)&#xA;&#xA;    @name.setter&#xA;    def name(self, value):&#xA;        self._name = value.split()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; person = Person()&#xA;&amp;gt;&amp;gt;&amp;gt; person.name = &#39;\t Guido  van Rossum \n&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; person.name&#xA;&#39;Guido van Rossum&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dataclass&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Decorator that automatically generates init(), repr() and eq() special methods.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from dataclasses import dataclass, field&#xA;&#xA;@dataclass(order=False, frozen=False)&#xA;class &amp;lt;class_name&amp;gt;:&#xA;    &amp;lt;attr_name_1&amp;gt;: &amp;lt;type&amp;gt;&#xA;    &amp;lt;attr_name_2&amp;gt;: &amp;lt;type&amp;gt; = &amp;lt;default_value&amp;gt;&#xA;    &amp;lt;attr_name_3&amp;gt;: list/dict/set = field(default_factory=list/dict/set)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Objects can be made sortable with &lt;code&gt;&#39;order=True&#39;&lt;/code&gt; and immutable with &lt;code&gt;&#39;frozen=True&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;For object to be hashable, all attributes must be hashable and &#39;frozen&#39; must be True.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Function field() is needed because &lt;code&gt;&#39;&amp;lt;attr_name&amp;gt;: list = []&#39;&lt;/code&gt; would make a list that is shared among all instances. Its &#39;default_factory&#39; argument can be any &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#callable&#34;&gt;callable&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;For attributes of arbitrary type use &lt;code&gt;&#39;typing.Any&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Inline:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from dataclasses import make_dataclass&#xA;&amp;lt;class&amp;gt; = make_dataclass(&#39;&amp;lt;class_name&amp;gt;&#39;, &amp;lt;coll_of_attribute_names&amp;gt;)&#xA;&amp;lt;class&amp;gt; = make_dataclass(&#39;&amp;lt;class_name&amp;gt;&#39;, &amp;lt;coll_of_tuples&amp;gt;)&#xA;&amp;lt;tuple&amp;gt; = (&#39;&amp;lt;attr_name&amp;gt;&#39;, &amp;lt;type&amp;gt; [, &amp;lt;default_value&amp;gt;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Rest of type annotations (CPython interpreter ignores them all):&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def func(&amp;lt;arg_name&amp;gt;: &amp;lt;type&amp;gt; [= &amp;lt;obj&amp;gt;]) -&amp;gt; &amp;lt;type&amp;gt;:&#xA;&amp;lt;var_name&amp;gt;: typing.List/Set/Iterable/Sequence/Optional[&amp;lt;type&amp;gt;]&#xA;&amp;lt;var_name&amp;gt;: typing.Dict/Tuple/Union[&amp;lt;type&amp;gt;, ...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Slots&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Mechanism that restricts objects to attributes listed in &#39;slots&#39; and significantly reduces their memory footprint.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class MyClassWithSlots:&#xA;    __slots__ = [&#39;a&#39;]&#xA;    def __init__(self):&#xA;        self.a = 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Copy&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from copy import copy, deepcopy&#xA;&amp;lt;object&amp;gt; = copy(&amp;lt;object&amp;gt;)&#xA;&amp;lt;object&amp;gt; = deepcopy(&amp;lt;object&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Duck Types&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;A duck type is an implicit type that prescribes a set of special methods. Any object that has those methods defined is considered a member of that duck type.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Comparable&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;If eq() method is not overridden, it returns &lt;code&gt;&#39;id(self) == id(other)&#39;&lt;/code&gt;, which is the same as &lt;code&gt;&#39;self is other&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;That means all objects compare not equal by default.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Only the left side object has eq() method called, unless it returns NotImplemented, in which case the right object is consulted.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ne() automatically works on any object that has eq() defined.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class MyComparable:&#xA;    def __init__(self, a):&#xA;        self.a = a&#xA;    def __eq__(self, other):&#xA;        if isinstance(other, type(self)):&#xA;            return self.a == other.a&#xA;        return NotImplemented&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Hashable&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hashable object needs both hash() and eq() methods and its hash value should never change.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hashable objects that compare equal must have the same hash value, meaning default hash() that returns &lt;code&gt;&#39;id(self)&#39;&lt;/code&gt; will not do.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;That is why Python automatically makes classes unhashable if you only implement eq().&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class MyHashable:&#xA;    def __init__(self, a):&#xA;        self._a = a&#xA;    @property&#xA;    def a(self):&#xA;        return self._a&#xA;    def __eq__(self, other):&#xA;        if isinstance(other, type(self)):&#xA;            return self.a == other.a&#xA;        return NotImplemented&#xA;    def __hash__(self):&#xA;        return hash(self.a)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sortable&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;With &#39;total_ordering&#39; decorator, you only need to provide eq() and one of lt(), gt(), le() or ge() special methods and the rest will be automatically generated.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Functions sorted() and min() only require lt() method, while max() only requires gt(). However, it is best to define them all so that confusion doesn&#39;t arise in other contexts.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;When two lists, strings or dataclasses are compared, their values get compared in order until a pair of unequal values is found. The comparison of this two values is then returned. The shorter sequence is considered smaller in case of all values being equal.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from functools import total_ordering&#xA;&#xA;@total_ordering&#xA;class MySortable:&#xA;    def __init__(self, a):&#xA;        self.a = a&#xA;    def __eq__(self, other):&#xA;        if isinstance(other, type(self)):&#xA;            return self.a == other.a&#xA;        return NotImplemented&#xA;    def __lt__(self, other):&#xA;        if isinstance(other, type(self)):&#xA;            return self.a &amp;lt; other.a&#xA;        return NotImplemented&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Iterator&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Any object that has methods next() and iter() is an iterator.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Next() should return next item or raise StopIteration.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Iter() should return &#39;self&#39;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class Counter:&#xA;    def __init__(self):&#xA;        self.i = 0&#xA;    def __next__(self):&#xA;        self.i += 1&#xA;        return self.i&#xA;    def __iter__(self):&#xA;        return self&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; counter = Counter()&#xA;&amp;gt;&amp;gt;&amp;gt; next(counter), next(counter), next(counter)&#xA;(1, 2, 3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Python has many different iterator objects:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sequence iterators returned by the &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#iterator&#34;&gt;iter()&lt;/a&gt; function, such as list_iterator and set_iterator.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Objects returned by the &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#itertools&#34;&gt;itertools&lt;/a&gt; module, such as count, repeat and cycle.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Generators returned by the &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#generator&#34;&gt;generator functions&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#comprehensions&#34;&gt;generator expressions&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;File objects returned by the &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#open&#34;&gt;open()&lt;/a&gt; function, etc.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Callable&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;All functions and classes have a call() method, hence are callable.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;When this cheatsheet uses &lt;code&gt;&#39;&amp;lt;function&amp;gt;&#39;&lt;/code&gt; as an argument, it actually means &lt;code&gt;&#39;&amp;lt;callable&amp;gt;&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class Counter:&#xA;    def __init__(self):&#xA;        self.i = 0&#xA;    def __call__(self):&#xA;        self.i += 1&#xA;        return self.i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; counter = Counter()&#xA;&amp;gt;&amp;gt;&amp;gt; counter(), counter(), counter()&#xA;(1, 2, 3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Context Manager&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enter() should lock the resources and optionally return an object.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Exit() should release the resources.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Any exception that happens inside the with block is passed to the exit() method.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;If it wishes to suppress the exception it must return a true value.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class MyOpen:&#xA;    def __init__(self, filename):&#xA;        self.filename = filename&#xA;    def __enter__(self):&#xA;        self.file = open(self.filename)&#xA;        return self.file&#xA;    def __exit__(self, exc_type, exception, traceback):&#xA;        self.file.close()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; with open(&#39;test.txt&#39;, &#39;w&#39;) as file:&#xA;...     file.write(&#39;Hello World!&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; with MyOpen(&#39;test.txt&#39;) as file:&#xA;...     print(file.read())&#xA;Hello World!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Iterable Duck Types&lt;/h2&gt; &#xA;&lt;h3&gt;Iterable&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Only required method is iter(). It should return an iterator of object&#39;s items.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Contains() automatically works on any object that has iter() defined.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class MyIterable:&#xA;    def __init__(self, a):&#xA;        self.a = a&#xA;    def __iter__(self):&#xA;        return iter(self.a)&#xA;    def __contains__(self, el):&#xA;        return el in self.a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; obj = MyIterable([1, 2, 3])&#xA;&amp;gt;&amp;gt;&amp;gt; [el for el in obj]&#xA;[1, 2, 3]&#xA;&amp;gt;&amp;gt;&amp;gt; 1 in obj&#xA;True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Collection&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Only required methods are iter() and len().&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;This cheatsheet actually means &lt;code&gt;&#39;&amp;lt;iterable&amp;gt;&#39;&lt;/code&gt; when it uses &lt;code&gt;&#39;&amp;lt;collection&amp;gt;&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;I chose not to use the name &#39;iterable&#39; because it sounds scarier and more vague than &#39;collection&#39;. The only drawback of this decision is that a reader could think a certain function doesn&#39;t accept iterators when it does, since iterators are the only built-in objects that are iterable but are not collections.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class MyCollection:&#xA;    def __init__(self, a):&#xA;        self.a = a&#xA;    def __iter__(self):&#xA;        return iter(self.a)&#xA;    def __contains__(self, el):&#xA;        return el in self.a&#xA;    def __len__(self):&#xA;        return len(self.a)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sequence&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Only required methods are len() and getitem().&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Getitem() should return an item at the passed index or raise IndexError.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Iter() and contains() automatically work on any object that has getitem() defined.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reversed() automatically works on any object that has len() and getitem() defined.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class MySequence:&#xA;    def __init__(self, a):&#xA;        self.a = a&#xA;    def __iter__(self):&#xA;        return iter(self.a)&#xA;    def __contains__(self, el):&#xA;        return el in self.a&#xA;    def __len__(self):&#xA;        return len(self.a)&#xA;    def __getitem__(self, i):&#xA;        return self.a[i]&#xA;    def __reversed__(self):&#xA;        return reversed(self.a)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Discrepancies between glossary definitions and abstract base classes:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Glossary defines iterable as any object with iter() or getitem() and sequence as any object with len() and getitem(). It does not define collection.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Passing ABC Iterable to isinstance() or issubclass() checks whether object/class has method iter(), while ABC Collection checks for iter(), contains() and len().&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ABC Sequence&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;It&#39;s a richer interface than the basic sequence.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extending it generates iter(), contains(), reversed(), index() and count().&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unlike &lt;code&gt;&#39;abc.Iterable&#39;&lt;/code&gt; and &lt;code&gt;&#39;abc.Collection&#39;&lt;/code&gt;, it is not a duck type. That is why &lt;code&gt;&#39;issubclass(MySequence, abc.Sequence)&#39;&lt;/code&gt; would return False even if MySequence had all the methods defined.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from collections import abc&#xA;&#xA;class MyAbcSequence(abc.Sequence):&#xA;    def __init__(self, a):&#xA;        self.a = a&#xA;    def __len__(self):&#xA;        return len(self.a)&#xA;    def __getitem__(self, i):&#xA;        return self.a[i]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Table of required and automatically available special methods:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;+------------+------------+------------+------------+--------------+&#xA;|            |  Iterable  | Collection |  Sequence  | abc.Sequence |&#xA;+------------+------------+------------+------------+--------------+&#xA;| iter()     |    REQ     |    REQ     |    Yes     |     Yes      |&#xA;| contains() |    Yes     |    Yes     |    Yes     |     Yes      |&#xA;| len()      |            |    REQ     |    REQ     |     REQ      |&#xA;| getitem()  |            |            |    REQ     |     REQ      |&#xA;| reversed() |            |            |    Yes     |     Yes      |&#xA;| index()    |            |            |            |     Yes      |&#xA;| count()    |            |            |            |     Yes      |&#xA;+------------+------------+------------+------------+--------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Other ABCs that generate missing methods are: MutableSequence, Set, MutableSet, Mapping and MutableMapping.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Names of their required methods are stored in &lt;code&gt;&#39;&amp;lt;abc&amp;gt;.__abstractmethods__&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Enum&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from enum import Enum, auto&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class &amp;lt;enum_name&amp;gt;(Enum):&#xA;    &amp;lt;member_name_1&amp;gt; = &amp;lt;value_1&amp;gt;&#xA;    &amp;lt;member_name_2&amp;gt; = &amp;lt;value_2_a&amp;gt;, &amp;lt;value_2_b&amp;gt;&#xA;    &amp;lt;member_name_3&amp;gt; = auto()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;If there are no numeric values before auto(), it returns 1.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Otherwise it returns an increment of the last numeric value.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;member&amp;gt; = &amp;lt;enum&amp;gt;.&amp;lt;member_name&amp;gt;                 # Returns a member.&#xA;&amp;lt;member&amp;gt; = &amp;lt;enum&amp;gt;[&#39;&amp;lt;member_name&amp;gt;&#39;]              # Returns a member or raises KeyError.&#xA;&amp;lt;member&amp;gt; = &amp;lt;enum&amp;gt;(&amp;lt;value&amp;gt;)                      # Returns a member or raises ValueError.&#xA;&amp;lt;str&amp;gt;    = &amp;lt;member&amp;gt;.name                        # Returns member&#39;s name.&#xA;&amp;lt;obj&amp;gt;    = &amp;lt;member&amp;gt;.value                       # Returns member&#39;s value.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;list_of_members = list(&amp;lt;enum&amp;gt;)&#xA;member_names    = [a.name for a in &amp;lt;enum&amp;gt;]&#xA;member_values   = [a.value for a in &amp;lt;enum&amp;gt;]&#xA;random_member   = random.choice(list(&amp;lt;enum&amp;gt;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def get_next_member(member):&#xA;    members = list(member.__class__)&#xA;    index   = (members.index(member) + 1) % len(members)&#xA;    return members[index]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Inline&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;Cutlery = Enum(&#39;Cutlery&#39;, &#39;fork knife spoon&#39;)&#xA;Cutlery = Enum(&#39;Cutlery&#39;, [&#39;fork&#39;, &#39;knife&#39;, &#39;spoon&#39;])&#xA;Cutlery = Enum(&#39;Cutlery&#39;, {&#39;fork&#39;: 1, &#39;knife&#39;: 2, &#39;spoon&#39;: 3})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;User-defined functions cannot be values, so they must be wrapped:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from functools import partial&#xA;LogicOp = Enum(&#39;LogicOp&#39;, {&#39;AND&#39;: partial(lambda l, r: l and r),&#xA;                           &#39;OR&#39;:  partial(lambda l, r: l or r)})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Member names are in all caps because trying to access a member that is named after a reserved keyword raises SyntaxError.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Exceptions&lt;/h2&gt; &#xA;&lt;h3&gt;Basic Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;try:&#xA;    &amp;lt;code&amp;gt;&#xA;except &amp;lt;exception&amp;gt;:&#xA;    &amp;lt;code&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Complex Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;try:&#xA;    &amp;lt;code_1&amp;gt;&#xA;except &amp;lt;exception_a&amp;gt;:&#xA;    &amp;lt;code_2_a&amp;gt;&#xA;except &amp;lt;exception_b&amp;gt;:&#xA;    &amp;lt;code_2_b&amp;gt;&#xA;else:&#xA;    &amp;lt;code_2_c&amp;gt;&#xA;finally:&#xA;    &amp;lt;code_3&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Code inside the &lt;code&gt;&#39;else&#39;&lt;/code&gt; block will only be executed if &lt;code&gt;&#39;try&#39;&lt;/code&gt; block had no exceptions.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Code inside the &lt;code&gt;&#39;finally&#39;&lt;/code&gt; block will always be executed (unless a signal is received).&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Catching Exceptions&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;except &amp;lt;exception&amp;gt;:&#xA;except &amp;lt;exception&amp;gt; as &amp;lt;name&amp;gt;:&#xA;except (&amp;lt;exception&amp;gt;, [...]):&#xA;except (&amp;lt;exception&amp;gt;, [...]) as &amp;lt;name&amp;gt;:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Also catches subclasses of the exception.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use &lt;code&gt;&#39;traceback.print_exc()&#39;&lt;/code&gt; to print the error message to stderr.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use &lt;code&gt;&#39;print(&amp;lt;name&amp;gt;)&#39;&lt;/code&gt; to print just the cause of the exception (its arguments).&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Raising Exceptions&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;raise &amp;lt;exception&amp;gt;&#xA;raise &amp;lt;exception&amp;gt;()&#xA;raise &amp;lt;exception&amp;gt;(&amp;lt;el&amp;gt; [, ...])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Re-raising caught exception:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;except &amp;lt;exception&amp;gt; as &amp;lt;name&amp;gt;:&#xA;    ...&#xA;    raise&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Exception Object&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;arguments = &amp;lt;name&amp;gt;.args&#xA;exc_type  = &amp;lt;name&amp;gt;.__class__&#xA;filename  = &amp;lt;name&amp;gt;.__traceback__.tb_frame.f_code.co_filename&#xA;func_name = &amp;lt;name&amp;gt;.__traceback__.tb_frame.f_code.co_name&#xA;line      = linecache.getline(filename, &amp;lt;name&amp;gt;.__traceback__.tb_lineno)&#xA;error_msg = &#39;&#39;.join(traceback.format_exception(exc_type, &amp;lt;name&amp;gt;, &amp;lt;name&amp;gt;.__traceback__))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Built-in Exceptions&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;BaseException&#xA; +-- SystemExit                   # Raised by the sys.exit() function.&#xA; +-- KeyboardInterrupt            # Raised when the user hits the interrupt key (ctrl-c).&#xA; +-- Exception                    # User-defined exceptions should be derived from this class.&#xA;      +-- ArithmeticError         # Base class for arithmetic errors.&#xA;      |    +-- ZeroDivisionError  # Raised when dividing by zero.&#xA;      +-- AttributeError          # Raised when an attribute is missing.&#xA;      +-- EOFError                # Raised by input() when it hits end-of-file condition.&#xA;      +-- LookupError             # Raised when a look-up on a collection fails.&#xA;      |    +-- IndexError         # Raised when a sequence index is out of range.&#xA;      |    +-- KeyError           # Raised when a dictionary key or set element is missing.&#xA;      +-- NameError               # Raised when an object is missing.&#xA;      +-- OSError                 # Errors such as “file not found” or “disk full” (see Open).&#xA;      |    +-- FileNotFoundError  # When a file or directory is requested but doesn&#39;t exist.&#xA;      +-- RuntimeError            # Raised by errors that don&#39;t fall into other categories.&#xA;      |    +-- RecursionError     # Raised when the maximum recursion depth is exceeded.&#xA;      +-- StopIteration           # Raised by next() when run on an empty iterator.&#xA;      +-- TypeError               # Raised when an argument is of wrong type.&#xA;      +-- ValueError              # When an argument is of right type but inappropriate value.&#xA;           +-- UnicodeError       # Raised when encoding/decoding strings to/from bytes fails.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Collections and their exceptions:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;+-----------+------------+------------+------------+&#xA;|           |    List    |    Set     |    Dict    |&#xA;+-----------+------------+------------+------------+&#xA;| getitem() | IndexError |            |  KeyError  |&#xA;| pop()     | IndexError |  KeyError  |  KeyError  |&#xA;| remove()  | ValueError |  KeyError  |            |&#xA;| index()   | ValueError |            |            |&#xA;+-----------+------------+------------+------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Useful built-in exceptions:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;raise TypeError(&#39;Argument is of wrong type!&#39;)&#xA;raise ValueError(&#39;Argument is of right type but inappropriate value!&#39;)&#xA;raise RuntimeError(&#39;None of above!&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;User-defined Exceptions&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class MyError(Exception):&#xA;    pass&#xA;&#xA;class MyInputError(MyError):&#xA;    pass&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Exit&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Exits the interpreter by raising SystemExit exception.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import sys&#xA;sys.exit()                        # Exits with exit code 0 (success).&#xA;sys.exit(&amp;lt;el&amp;gt;)                    # Prints to stderr and exits with 1.&#xA;sys.exit(&amp;lt;int&amp;gt;)                   # Exits with passed exit code.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Print&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&amp;lt;el_1&amp;gt;, ..., sep=&#39; &#39;, end=&#39;\n&#39;, file=sys.stdout, flush=False)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use &lt;code&gt;&#39;file=sys.stderr&#39;&lt;/code&gt; for messages about errors.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use &lt;code&gt;&#39;flush=True&#39;&lt;/code&gt; to forcibly flush the stream.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Pretty Print&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pprint import pprint&#xA;pprint(&amp;lt;collection&amp;gt;, width=80, depth=None, compact=False, sort_dicts=True)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Levels deeper than &#39;depth&#39; get replaced by &#39;...&#39;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Input&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Reads a line from user input or pipe if present.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;str&amp;gt; = input(prompt=None)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Trailing newline gets stripped.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Prompt string is printed to the standard output before reading input.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Raises EOFError when user hits EOF (ctrl-d/ctrl-z⏎) or input stream gets exhausted.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Command Line Arguments&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import sys&#xA;scripts_path = sys.argv[0]&#xA;arguments    = sys.argv[1:]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Argument Parser&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from argparse import ArgumentParser, FileType&#xA;p = ArgumentParser(description=&amp;lt;str&amp;gt;)&#xA;p.add_argument(&#39;-&amp;lt;short_name&amp;gt;&#39;, &#39;--&amp;lt;name&amp;gt;&#39;, action=&#39;store_true&#39;)  # Flag.&#xA;p.add_argument(&#39;-&amp;lt;short_name&amp;gt;&#39;, &#39;--&amp;lt;name&amp;gt;&#39;, type=&amp;lt;type&amp;gt;)          # Option.&#xA;p.add_argument(&#39;&amp;lt;name&amp;gt;&#39;, type=&amp;lt;type&amp;gt;, nargs=1)                    # First argument.&#xA;p.add_argument(&#39;&amp;lt;name&amp;gt;&#39;, type=&amp;lt;type&amp;gt;, nargs=&#39;+&#39;)                  # Remaining arguments.&#xA;p.add_argument(&#39;&amp;lt;name&amp;gt;&#39;, type=&amp;lt;type&amp;gt;, nargs=&#39;*&#39;)                  # Optional arguments.&#xA;args  = p.parse_args()                                            # Exits on error.&#xA;value = args.&amp;lt;name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use &lt;code&gt;&#39;help=&amp;lt;str&amp;gt;&#39;&lt;/code&gt; to set argument description.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use &lt;code&gt;&#39;default=&amp;lt;el&amp;gt;&#39;&lt;/code&gt; to set the default value.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use &lt;code&gt;&#39;type=FileType(&amp;lt;mode&amp;gt;)&#39;&lt;/code&gt; for files.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Open&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Opens the file and returns a corresponding file object.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;file&amp;gt; = open(&amp;lt;path&amp;gt;, mode=&#39;r&#39;, encoding=None, newline=None)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;encoding=None&#39;&lt;/code&gt; means that the default encoding is used, which is platform dependent. Best practice is to use &lt;code&gt;&#39;encoding=&#34;utf-8&#34;&#39;&lt;/code&gt; whenever possible.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;newline=None&#39;&lt;/code&gt; means all different end of line combinations are converted to &#39;\n&#39; on read, while on write all &#39;\n&#39; characters are converted to system&#39;s default line separator.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;newline=&#34;&#34;&#39;&lt;/code&gt; means no conversions take place, but input is still broken into chunks by readline() and readlines() on every &#39;\n&#39;, &#39;\r&#39; and &#39;\r\n&#39;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Modes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;r&#39;&lt;/code&gt; - Read (default).&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;w&#39;&lt;/code&gt; - Write (truncate).&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;x&#39;&lt;/code&gt; - Write or fail if the file already exists.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;a&#39;&lt;/code&gt; - Append.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;w+&#39;&lt;/code&gt; - Read and write (truncate).&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;r+&#39;&lt;/code&gt; - Read and write from the start.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;a+&#39;&lt;/code&gt; - Read and write from the end.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;t&#39;&lt;/code&gt; - Text mode (default).&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;b&#39;&lt;/code&gt; - Binary mode (&lt;code&gt;&#39;br&#39;&lt;/code&gt;, &lt;code&gt;&#39;bw&#39;&lt;/code&gt;, &lt;code&gt;&#39;bx&#39;&lt;/code&gt;, …).&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Exceptions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;FileNotFoundError&#39;&lt;/code&gt; can be raised when reading with &lt;code&gt;&#39;r&#39;&lt;/code&gt; or &lt;code&gt;&#39;r+&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;FileExistsError&#39;&lt;/code&gt; can be raised when writing with &lt;code&gt;&#39;x&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;IsADirectoryError&#39;&lt;/code&gt; and &lt;code&gt;&#39;PermissionError&#39;&lt;/code&gt; can be raised by any.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;OSError&#39;&lt;/code&gt; is the parent class of all listed exceptions.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;File Object&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;file&amp;gt;.seek(0)                      # Moves to the start of the file.&#xA;&amp;lt;file&amp;gt;.seek(offset)                 # Moves &#39;offset&#39; chars/bytes from the start.&#xA;&amp;lt;file&amp;gt;.seek(0, 2)                   # Moves to the end of the file.&#xA;&amp;lt;bin_file&amp;gt;.seek(±offset, &amp;lt;anchor&amp;gt;)  # Anchor: 0 start, 1 current position, 2 end.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;str/bytes&amp;gt; = &amp;lt;file&amp;gt;.read(size=-1)  # Reads &#39;size&#39; chars/bytes or until EOF.&#xA;&amp;lt;str/bytes&amp;gt; = &amp;lt;file&amp;gt;.readline()     # Returns a line or empty string/bytes on EOF.&#xA;&amp;lt;list&amp;gt;      = &amp;lt;file&amp;gt;.readlines()    # Returns a list of remaining lines.&#xA;&amp;lt;str/bytes&amp;gt; = next(&amp;lt;file&amp;gt;)          # Returns a line using buffer. Do not mix.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;file&amp;gt;.write(&amp;lt;str/bytes&amp;gt;)           # Writes a string or bytes object.&#xA;&amp;lt;file&amp;gt;.writelines(&amp;lt;collection&amp;gt;)     # Writes a coll. of strings or bytes objects.&#xA;&amp;lt;file&amp;gt;.flush()                      # Flushes write buffer. Runs every 4096/8192 B.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Methods do not add or strip trailing newlines, even writelines().&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Read Text from File&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def read_file(filename):&#xA;    with open(filename, encoding=&#39;utf-8&#39;) as file:&#xA;        return file.readlines()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Write Text to File&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def write_to_file(filename, text):&#xA;    with open(filename, &#39;w&#39;, encoding=&#39;utf-8&#39;) as file:&#xA;        file.write(text)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Paths&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from os import getcwd, path, listdir, scandir&#xA;from glob import glob&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;str&amp;gt;  = getcwd()                   # Returns the current working directory.&#xA;&amp;lt;str&amp;gt;  = path.join(&amp;lt;path&amp;gt;, ...)     # Joins two or more pathname components.&#xA;&amp;lt;str&amp;gt;  = path.abspath(&amp;lt;path&amp;gt;)       # Returns absolute path.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;str&amp;gt;  = path.basename(&amp;lt;path&amp;gt;)      # Returns final component of the path.&#xA;&amp;lt;str&amp;gt;  = path.dirname(&amp;lt;path&amp;gt;)       # Returns path without the final component.&#xA;&amp;lt;tup.&amp;gt; = path.splitext(&amp;lt;path&amp;gt;)      # Splits on last period of the final component.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;list&amp;gt; = listdir(path=&#39;.&#39;)          # Returns filenames located at path.&#xA;&amp;lt;list&amp;gt; = glob(&#39;&amp;lt;pattern&amp;gt;&#39;)          # Returns paths matching the wildcard pattern.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;bool&amp;gt; = path.exists(&amp;lt;path&amp;gt;)        # Or: &amp;lt;Path&amp;gt;.exists()&#xA;&amp;lt;bool&amp;gt; = path.isfile(&amp;lt;path&amp;gt;)        # Or: &amp;lt;DirEntry/Path&amp;gt;.is_file()&#xA;&amp;lt;bool&amp;gt; = path.isdir(&amp;lt;path&amp;gt;)         # Or: &amp;lt;DirEntry/Path&amp;gt;.is_dir()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;stat&amp;gt; = os.stat(&amp;lt;path&amp;gt;)            # Or: &amp;lt;DirEntry/Path&amp;gt;.stat()&#xA;&amp;lt;real&amp;gt; = &amp;lt;stat&amp;gt;.st_mtime/st_size/…  # Modification time, size in bytes, …&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;DirEntry&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Unlike listdir(), scandir() returns DirEntry objects that cache isfile, isdir and on Windows also stat information, thus significantly increasing the performance of code that requires it.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;iter&amp;gt; = scandir(path=&#39;.&#39;)          # Returns DirEntry objects located at path.&#xA;&amp;lt;str&amp;gt;  = &amp;lt;DirEntry&amp;gt;.path            # Returns whole path as a string.&#xA;&amp;lt;str&amp;gt;  = &amp;lt;DirEntry&amp;gt;.name            # Returns final component as a string.&#xA;&amp;lt;file&amp;gt; = open(&amp;lt;DirEntry&amp;gt;)           # Opens the file and returns a file object.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Path Object&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pathlib import Path&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Path&amp;gt; = Path(&amp;lt;path&amp;gt; [, ...])       # Accepts strings, Paths and DirEntry objects.&#xA;&amp;lt;Path&amp;gt; = &amp;lt;path&amp;gt; / &amp;lt;path&amp;gt; [/ ...]    # First or second path must be a Path object.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Path&amp;gt; = Path()                     # Returns relative cwd. Also Path(&#39;.&#39;).&#xA;&amp;lt;Path&amp;gt; = Path.cwd()                 # Returns absolute cwd. Also Path().resolve().&#xA;&amp;lt;Path&amp;gt; = Path.home()                # Returns user&#39;s home directory.&#xA;&amp;lt;Path&amp;gt; = Path(__file__).resolve()   # Returns script&#39;s path if cwd wasn&#39;t changed.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Path&amp;gt; = &amp;lt;Path&amp;gt;.parent              # Returns Path without the final component.&#xA;&amp;lt;str&amp;gt;  = &amp;lt;Path&amp;gt;.name                # Returns final component as a string.&#xA;&amp;lt;str&amp;gt;  = &amp;lt;Path&amp;gt;.stem                # Returns final component without extension.&#xA;&amp;lt;str&amp;gt;  = &amp;lt;Path&amp;gt;.suffix              # Returns final component&#39;s extension.&#xA;&amp;lt;tup.&amp;gt; = &amp;lt;Path&amp;gt;.parts               # Returns all components as strings.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;iter&amp;gt; = &amp;lt;Path&amp;gt;.iterdir()           # Returns directory contents as Path objects.&#xA;&amp;lt;iter&amp;gt; = &amp;lt;Path&amp;gt;.glob(&#39;&amp;lt;pattern&amp;gt;&#39;)   # Returns Paths matching the wildcard pattern.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;str&amp;gt;  = str(&amp;lt;Path&amp;gt;)                # Returns path as a string.&#xA;&amp;lt;file&amp;gt; = open(&amp;lt;Path&amp;gt;)               # Opens the file and returns a file object.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;OS Commands&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import os, shutil, subprocess&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Files and Directories&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Paths can be either strings, Paths or DirEntry objects.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Functions report OS related errors by raising either OSError or one of its &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#exceptions-1&#34;&gt;subclasses&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;os.chdir(&amp;lt;path&amp;gt;)                 # Changes the current working directory.&#xA;os.mkdir(&amp;lt;path&amp;gt;, mode=0o777)     # Creates a directory. Mode is in octal.&#xA;os.makedirs(&amp;lt;path&amp;gt;, mode=0o777)  # Creates dirs in path. Also: `exist_ok=False`.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;shutil.copy(from, to)            # Copies the file. &#39;to&#39; can exist or be a dir.&#xA;shutil.copytree(from, to)        # Copies the directory. &#39;to&#39; must not exist.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;os.rename(from, to)              # Renames/moves the file or directory.&#xA;os.replace(from, to)             # Same, but overwrites &#39;to&#39; if it exists.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;os.remove(&amp;lt;path&amp;gt;)                # Deletes the file.&#xA;os.rmdir(&amp;lt;path&amp;gt;)                 # Deletes the empty directory.&#xA;shutil.rmtree(&amp;lt;path&amp;gt;)            # Deletes the directory.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Shell Commands&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;pipe&amp;gt; = os.popen(&#39;&amp;lt;command&amp;gt;&#39;)   # Executes command in sh/cmd and returns its stdout pipe.&#xA;&amp;lt;str&amp;gt;  = &amp;lt;pipe&amp;gt;.read(size=-1)    # Reads &#39;size&#39; chars or until EOF. Also readline/s().&#xA;&amp;lt;int&amp;gt;  = &amp;lt;pipe&amp;gt;.close()          # Closes the pipe. Returns None on success, int on error.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Sends &#39;1 + 1&#39; to the basic calculator and captures its output:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; subprocess.run(&#39;bc&#39;, input=&#39;1 + 1\n&#39;, capture_output=True, text=True)&#xA;CompletedProcess(args=&#39;bc&#39;, returncode=0, stdout=&#39;2\n&#39;, stderr=&#39;&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Sends test.in to the basic calculator running in standard mode and saves its output to test.out:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from shlex import split&#xA;&amp;gt;&amp;gt;&amp;gt; os.popen(&#39;echo 1 + 1 &amp;gt; test.in&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; subprocess.run(split(&#39;bc -s&#39;), stdin=open(&#39;test.in&#39;), stdout=open(&#39;test.out&#39;, &#39;w&#39;))&#xA;CompletedProcess(args=[&#39;bc&#39;, &#39;-s&#39;], returncode=0)&#xA;&amp;gt;&amp;gt;&amp;gt; open(&#39;test.out&#39;).read()&#xA;&#39;2\n&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;JSON&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Text file format for storing collections of strings and numbers.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import json&#xA;&amp;lt;str&amp;gt;    = json.dumps(&amp;lt;object&amp;gt;, ensure_ascii=True, indent=None)&#xA;&amp;lt;object&amp;gt; = json.loads(&amp;lt;str&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Read Object from JSON File&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def read_json_file(filename):&#xA;    with open(filename, encoding=&#39;utf-8&#39;) as file:&#xA;        return json.load(file)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Write Object to JSON File&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def write_to_json_file(filename, an_object):&#xA;    with open(filename, &#39;w&#39;, encoding=&#39;utf-8&#39;) as file:&#xA;        json.dump(an_object, file, ensure_ascii=False, indent=2)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Pickle&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Binary file format for storing objects.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pickle&#xA;&amp;lt;bytes&amp;gt;  = pickle.dumps(&amp;lt;object&amp;gt;)&#xA;&amp;lt;object&amp;gt; = pickle.loads(&amp;lt;bytes&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Read Object from File&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def read_pickle_file(filename):&#xA;    with open(filename, &#39;rb&#39;) as file:&#xA;        return pickle.load(file)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Write Object to File&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def write_to_pickle_file(filename, an_object):&#xA;    with open(filename, &#39;wb&#39;) as file:&#xA;        pickle.dump(an_object, file)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CSV&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Text file format for storing spreadsheets.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Read&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;reader&amp;gt; = csv.reader(&amp;lt;file&amp;gt;)       # Also: `dialect=&#39;excel&#39;, delimiter=&#39;,&#39;`.&#xA;&amp;lt;list&amp;gt;   = next(&amp;lt;reader&amp;gt;)           # Returns next row as a list of strings.&#xA;&amp;lt;list&amp;gt;   = list(&amp;lt;reader&amp;gt;)           # Returns a list of remaining rows.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;For XML and binary Excel files (xlsx, xlsm and xlsb) use &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#dataframe-plot-encode-decode&#34;&gt;Pandas&lt;/a&gt; library.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;File must be opened with a &lt;code&gt;&#39;newline=&#34;&#34;&#39;&lt;/code&gt; argument, or newlines embedded inside quoted fields will not be interpreted correctly!&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Write&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;writer&amp;gt; = csv.writer(&amp;lt;file&amp;gt;)       # Also: `dialect=&#39;excel&#39;, delimiter=&#39;,&#39;`.&#xA;&amp;lt;writer&amp;gt;.writerow(&amp;lt;collection&amp;gt;)     # Encodes objects using `str(&amp;lt;el&amp;gt;)`.&#xA;&amp;lt;writer&amp;gt;.writerows(&amp;lt;coll_of_coll&amp;gt;)  # Appends multiple rows.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;File must be opened with a &lt;code&gt;&#39;newline=&#34;&#34;&#39;&lt;/code&gt; argument, or &#39;\r&#39; will be added in front of every &#39;\n&#39; on platforms that use &#39;\r\n&#39; line endings!&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Parameters&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;dialect&#39;&lt;/code&gt; - Master parameter that sets the default values. String or a dialect object.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;delimiter&#39;&lt;/code&gt; - A one-character string used to separate fields.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;quotechar&#39;&lt;/code&gt; - Character for quoting fields that contain special characters.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;doublequote&#39;&lt;/code&gt; - Whether quotechars inside fields are/get doubled or escaped.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;skipinitialspace&#39;&lt;/code&gt; - Whether whitespace after delimiter gets stripped by reader.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;lineterminator&#39;&lt;/code&gt; - How writer terminates rows. Reader is hardcoded to &#39;\r&#39;, &#39;\n&#39;, &#39;\r\n&#39;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;quoting&#39;&lt;/code&gt; - Controls the amount of quoting: 0 - as necessary, 1 - all.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;escapechar&#39;&lt;/code&gt; - Character for escaping quotechars if doublequote is False.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Dialects&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;+------------------+--------------+--------------+--------------+&#xA;|                  |     excel    |   excel-tab  |     unix     |&#xA;+------------------+--------------+--------------+--------------+&#xA;| delimiter        |       &#39;,&#39;    |      &#39;\t&#39;    |       &#39;,&#39;    |&#xA;| quotechar        |       &#39;&#34;&#39;    |       &#39;&#34;&#39;    |       &#39;&#34;&#39;    |&#xA;| doublequote      |      True    |      True    |      True    |&#xA;| skipinitialspace |     False    |     False    |     False    |&#xA;| lineterminator   |    &#39;\r\n&#39;    |    &#39;\r\n&#39;    |      &#39;\n&#39;    |&#xA;| quoting          |         0    |         0    |         1    |&#xA;| escapechar       |      None    |      None    |      None    |&#xA;+------------------+--------------+--------------+--------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Read Rows from CSV File&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def read_csv_file(filename, dialect=&#39;excel&#39;):&#xA;    with open(filename, encoding=&#39;utf-8&#39;, newline=&#39;&#39;) as file:&#xA;        return list(csv.reader(file, dialect))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Write Rows to CSV File&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def write_to_csv_file(filename, rows, dialect=&#39;excel&#39;):&#xA;    with open(filename, &#39;w&#39;, encoding=&#39;utf-8&#39;, newline=&#39;&#39;) as file:&#xA;        writer = csv.writer(file, dialect)&#xA;        writer.writerows(rows)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;SQLite&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Server-less database engine that stores each database into a separate file.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Connect&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Opens a connection to the database file. Creates a new file if path doesn&#39;t exist.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import sqlite3&#xA;&amp;lt;conn&amp;gt; = sqlite3.connect(&amp;lt;path&amp;gt;)                # Also &#39;:memory:&#39;.&#xA;&amp;lt;conn&amp;gt;.close()                                  # Closes the connection.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Read&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Returned values can be of type str, int, float, bytes or None.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;cursor&amp;gt; = &amp;lt;conn&amp;gt;.execute(&#39;&amp;lt;query&amp;gt;&#39;)            # Can raise a subclass of sqlite3.Error.&#xA;&amp;lt;tuple&amp;gt;  = &amp;lt;cursor&amp;gt;.fetchone()                  # Returns next row. Also next(&amp;lt;cursor&amp;gt;).&#xA;&amp;lt;list&amp;gt;   = &amp;lt;cursor&amp;gt;.fetchall()                  # Returns remaining rows. Also list(&amp;lt;cursor&amp;gt;).&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Write&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;conn&amp;gt;.execute(&#39;&amp;lt;query&amp;gt;&#39;)                       # Can raise a subclass of sqlite3.Error.&#xA;&amp;lt;conn&amp;gt;.commit()                                 # Saves all changes since the last commit.&#xA;&amp;lt;conn&amp;gt;.rollback()                               # Discards all changes since the last commit.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Or:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;with &amp;lt;conn&amp;gt;:                                    # Exits the block with commit() or rollback(),&#xA;    &amp;lt;conn&amp;gt;.execute(&#39;&amp;lt;query&amp;gt;&#39;)                   # depending on whether any exception occurred.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Placeholders&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Passed values can be of type str, int, float, bytes, None, bool, datetime.date or datetime.datetime.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bools will be stored and returned as ints and dates as &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#encode&#34;&gt;ISO formatted strings&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;conn&amp;gt;.execute(&#39;&amp;lt;query&amp;gt;&#39;, &amp;lt;list/tuple&amp;gt;)         # Replaces &#39;?&#39;s in query with values.&#xA;&amp;lt;conn&amp;gt;.execute(&#39;&amp;lt;query&amp;gt;&#39;, &amp;lt;dict/namedtuple&amp;gt;)    # Replaces &#39;:&amp;lt;key&amp;gt;&#39;s with values.&#xA;&amp;lt;conn&amp;gt;.executemany(&#39;&amp;lt;query&amp;gt;&#39;, &amp;lt;coll_of_above&amp;gt;)  # Runs execute() multiple times.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Values are not actually saved in this example because &lt;code&gt;&#39;conn.commit()&#39;&lt;/code&gt; is omitted!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; conn = sqlite3.connect(&#39;test.db&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; conn.execute(&#39;CREATE TABLE person (person_id INTEGER PRIMARY KEY, name, height)&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; conn.execute(&#39;INSERT INTO person VALUES (NULL, ?, ?)&#39;, (&#39;Jean-Luc&#39;, 187)).lastrowid&#xA;1&#xA;&amp;gt;&amp;gt;&amp;gt; conn.execute(&#39;SELECT * FROM person&#39;).fetchall()&#xA;[(1, &#39;Jean-Luc&#39;, 187)]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;MySQL&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Has a very similar interface, with differences listed below.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install mysql-connector&#xA;from mysql import connector&#xA;&amp;lt;conn&amp;gt;   = connector.connect(host=&amp;lt;str&amp;gt;, …)     # `user=&amp;lt;str&amp;gt;, password=&amp;lt;str&amp;gt;, database=&amp;lt;str&amp;gt;`.&#xA;&amp;lt;cursor&amp;gt; = &amp;lt;conn&amp;gt;.cursor()                      # Only cursor has execute() method.&#xA;&amp;lt;cursor&amp;gt;.execute(&#39;&amp;lt;query&amp;gt;&#39;)                     # Can raise a subclass of connector.Error.&#xA;&amp;lt;cursor&amp;gt;.execute(&#39;&amp;lt;query&amp;gt;&#39;, &amp;lt;list/tuple&amp;gt;)       # Replaces &#39;%s&#39;s in query with values.&#xA;&amp;lt;cursor&amp;gt;.execute(&#39;&amp;lt;query&amp;gt;&#39;, &amp;lt;dict/namedtuple&amp;gt;)  # Replaces &#39;%(&amp;lt;key&amp;gt;)s&#39;s with values.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Bytes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bytes object is an immutable sequence of single bytes. Mutable version is called bytearray.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;bytes&amp;gt; = b&#39;&amp;lt;str&amp;gt;&#39;                       # Only accepts ASCII characters and \x00-\xff.&#xA;&amp;lt;int&amp;gt;   = &amp;lt;bytes&amp;gt;[&amp;lt;index&amp;gt;]               # Returns an int in range from 0 to 255.&#xA;&amp;lt;bytes&amp;gt; = &amp;lt;bytes&amp;gt;[&amp;lt;slice&amp;gt;]               # Returns bytes even if it has only one element.&#xA;&amp;lt;bytes&amp;gt; = &amp;lt;bytes&amp;gt;.join(&amp;lt;coll_of_bytes&amp;gt;)  # Joins elements using bytes as a separator.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Encode&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;bytes&amp;gt; = bytes(&amp;lt;coll_of_ints&amp;gt;)          # Ints must be in range from 0 to 255.&#xA;&amp;lt;bytes&amp;gt; = bytes(&amp;lt;str&amp;gt;, &#39;utf-8&#39;)          # Or: &amp;lt;str&amp;gt;.encode(&#39;utf-8&#39;)&#xA;&amp;lt;bytes&amp;gt; = &amp;lt;int&amp;gt;.to_bytes(n_bytes, …)     # `byteorder=&#39;big/little&#39;, signed=False`.&#xA;&amp;lt;bytes&amp;gt; = bytes.fromhex(&#39;&amp;lt;hex&amp;gt;&#39;)         # Hex pairs can be separated by whitespaces.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Decode&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;list&amp;gt;  = list(&amp;lt;bytes&amp;gt;)                  # Returns ints in range from 0 to 255.&#xA;&amp;lt;str&amp;gt;   = str(&amp;lt;bytes&amp;gt;, &#39;utf-8&#39;)          # Or: &amp;lt;bytes&amp;gt;.decode(&#39;utf-8&#39;)&#xA;&amp;lt;int&amp;gt;   = int.from_bytes(&amp;lt;bytes&amp;gt;, …)     # `byteorder=&#39;big/little&#39;, signed=False`.&#xA;&#39;&amp;lt;hex&amp;gt;&#39; = &amp;lt;bytes&amp;gt;.hex()                  # Returns hex pairs. Accepts `sep=&amp;lt;str&amp;gt;`.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Read Bytes from File&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def read_bytes(filename):&#xA;    with open(filename, &#39;rb&#39;) as file:&#xA;        return file.read()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Write Bytes to File&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def write_bytes(filename, bytes_obj):&#xA;    with open(filename, &#39;wb&#39;) as file:&#xA;        file.write(bytes_obj)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Struct&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Module that performs conversions between a sequence of numbers and a bytes object.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;System’s type sizes and byte order are used by default.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from struct import pack, unpack, iter_unpack&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;bytes&amp;gt;  = pack(&#39;&amp;lt;format&amp;gt;&#39;, &amp;lt;num_1&amp;gt; [, &amp;lt;num_2&amp;gt;, ...])&#xA;&amp;lt;tuple&amp;gt;  = unpack(&#39;&amp;lt;format&amp;gt;&#39;, &amp;lt;bytes&amp;gt;)&#xA;&amp;lt;tuples&amp;gt; = iter_unpack(&#39;&amp;lt;format&amp;gt;&#39;, &amp;lt;bytes&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; pack(&#39;&amp;gt;hhl&#39;, 1, 2, 3)&#xA;b&#39;\x00\x01\x00\x02\x00\x00\x00\x03&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; unpack(&#39;&amp;gt;hhl&#39;, b&#39;\x00\x01\x00\x02\x00\x00\x00\x03&#39;)&#xA;(1, 2, 3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Format&lt;/h3&gt; &#xA;&lt;h4&gt;For standard type sizes start format string with:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;=&#39;&lt;/code&gt; - system&#39;s byte order (usually little-endian)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;&amp;lt;&#39;&lt;/code&gt; - little-endian&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;&amp;gt;&#39;&lt;/code&gt; - big-endian (also &lt;code&gt;&#39;!&#39;&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Integer types. Use a capital letter for unsigned type. Minimum and standard sizes are in brackets:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;x&#39;&lt;/code&gt; - pad byte&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;b&#39;&lt;/code&gt; - char (1/1)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;h&#39;&lt;/code&gt; - short (2/2)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;i&#39;&lt;/code&gt; - int (2/4)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;l&#39;&lt;/code&gt; - long (4/4)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;q&#39;&lt;/code&gt; - long long (8/8)&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Floating point types:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;f&#39;&lt;/code&gt; - float (4/4)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;d&#39;&lt;/code&gt; - double (8/8)&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Array&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;List that can only hold numbers of a predefined type. Available types and their minimum sizes in bytes are listed above. Sizes and byte order are always determined by the system.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from array import array&#xA;&amp;lt;array&amp;gt; = array(&#39;&amp;lt;typecode&amp;gt;&#39;, &amp;lt;collection&amp;gt;)    # Array from collection of numbers.&#xA;&amp;lt;array&amp;gt; = array(&#39;&amp;lt;typecode&amp;gt;&#39;, &amp;lt;bytes&amp;gt;)         # Array from bytes object.&#xA;&amp;lt;array&amp;gt; = array(&#39;&amp;lt;typecode&amp;gt;&#39;, &amp;lt;array&amp;gt;)         # Treats array as a sequence of numbers.&#xA;&amp;lt;bytes&amp;gt; = bytes(&amp;lt;array&amp;gt;)                       # Or: &amp;lt;array&amp;gt;.tobytes()&#xA;&amp;lt;file&amp;gt;.write(&amp;lt;array&amp;gt;)                          # Writes array to the binary file.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Memory View&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;A sequence object that points to the memory of another object.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Each element can reference a single or multiple consecutive bytes, depending on format.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Order and number of elements can be changed with slicing.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Casting only works between char and other types and uses system&#39;s sizes and byte order.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;mview&amp;gt; = memoryview(&amp;lt;bytes/bytearray/array&amp;gt;)  # Immutable if bytes, else mutable.&#xA;&amp;lt;real&amp;gt;  = &amp;lt;mview&amp;gt;[&amp;lt;index&amp;gt;]                     # Returns an int or a float.&#xA;&amp;lt;mview&amp;gt; = &amp;lt;mview&amp;gt;[&amp;lt;slice&amp;gt;]                     # Mview with rearranged elements.&#xA;&amp;lt;mview&amp;gt; = &amp;lt;mview&amp;gt;.cast(&#39;&amp;lt;typecode&amp;gt;&#39;)           # Casts memoryview to the new format.&#xA;&amp;lt;mview&amp;gt;.release()                              # Releases the object&#39;s memory buffer.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Decode&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;bytes&amp;gt; = bytes(&amp;lt;mview&amp;gt;)                       # Creates a new bytes object.&#xA;&amp;lt;bytes&amp;gt; = &amp;lt;bytes&amp;gt;.join(&amp;lt;coll_of_mviews&amp;gt;)       # Joins mviews using bytes object as sep.&#xA;&amp;lt;array&amp;gt; = array(&#39;&amp;lt;typecode&amp;gt;&#39;, &amp;lt;mview&amp;gt;)         # Treats mview as a sequence of numbers.&#xA;&amp;lt;file&amp;gt;.write(&amp;lt;mview&amp;gt;)                          # Writes mview to the binary file.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;list&amp;gt;  = list(&amp;lt;mview&amp;gt;)                        # Returns a list of ints or floats.&#xA;&amp;lt;str&amp;gt;   = str(&amp;lt;mview&amp;gt;, &#39;utf-8&#39;)                # Treats mview as a bytes object.&#xA;&amp;lt;int&amp;gt;   = int.from_bytes(&amp;lt;mview&amp;gt;, …)           # `byteorder=&#39;big/little&#39;, signed=False`.&#xA;&#39;&amp;lt;hex&amp;gt;&#39; = &amp;lt;mview&amp;gt;.hex()                        # Treats mview as a bytes object.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deque&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;A thread-safe list with efficient appends and pops from either side. Pronounced &#34;deck&#34;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from collections import deque&#xA;&amp;lt;deque&amp;gt; = deque(&amp;lt;collection&amp;gt;, maxlen=None)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;deque&amp;gt;.appendleft(&amp;lt;el&amp;gt;)                       # Opposite element is dropped if full.&#xA;&amp;lt;deque&amp;gt;.extendleft(&amp;lt;collection&amp;gt;)               # Collection gets reversed.&#xA;&amp;lt;el&amp;gt; = &amp;lt;deque&amp;gt;.popleft()                       # Raises IndexError if empty.&#xA;&amp;lt;deque&amp;gt;.rotate(n=1)                            # Rotates elements to the right.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Threading&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;CPython interpreter can only run a single thread at a time.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;That is why using multiple threads won&#39;t result in a faster execution, unless at least one of the threads contains an I/O operation.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from threading import Thread, RLock, Semaphore, Event, Barrier&#xA;from concurrent.futures import ThreadPoolExecutor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Thread&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Thread&amp;gt; = Thread(target=&amp;lt;function&amp;gt;)           # Use `args=&amp;lt;collection&amp;gt;` to set the arguments.&#xA;&amp;lt;Thread&amp;gt;.start()                               # Starts the thread.&#xA;&amp;lt;bool&amp;gt; = &amp;lt;Thread&amp;gt;.is_alive()                   # Checks if the thread has finished executing.&#xA;&amp;lt;Thread&amp;gt;.join()                                # Waits for the thread to finish.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use &lt;code&gt;&#39;kwargs=&amp;lt;dict&amp;gt;&#39;&lt;/code&gt; to pass keyword arguments to the function.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use &lt;code&gt;&#39;daemon=True&#39;&lt;/code&gt;, or the program will not be able to exit while the thread is alive.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Lock&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;lock&amp;gt; = RLock()                               # Lock that can only be released by the owner.&#xA;&amp;lt;lock&amp;gt;.acquire()                               # Waits for the lock to be available.&#xA;&amp;lt;lock&amp;gt;.release()                               # Makes the lock available again.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Or:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;with &amp;lt;lock&amp;gt;:                                   # Enters the block by calling acquire(),&#xA;    ...                                        # and exits it with release().&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Semaphore, Event, Barrier&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Semaphore&amp;gt; = Semaphore(value=1)               # Lock that can be acquired by &#39;value&#39; threads.&#xA;&amp;lt;Event&amp;gt;     = Event()                          # Method wait() blocks until set() is called.&#xA;&amp;lt;Barrier&amp;gt;   = Barrier(n_times)                 # Wait() blocks until it&#39;s called n_times.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Thread Pool Executor&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Object that manages thread execution.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;An object with the same interface called ProcessPoolExecutor provides true parallelism by running a separate interpreter in each process. All arguments must be &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#pickle&#34;&gt;pickable&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Exec&amp;gt; = ThreadPoolExecutor(max_workers=None)  # Or: `with ThreadPoolExecutor() as &amp;lt;name&amp;gt;: …`&#xA;&amp;lt;Exec&amp;gt;.shutdown(wait=True)                     # Blocks until all threads finish executing.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;iter&amp;gt; = &amp;lt;Exec&amp;gt;.map(&amp;lt;func&amp;gt;, &amp;lt;args_1&amp;gt;, ...)     # A multithreaded and non-lazy map().&#xA;&amp;lt;Futr&amp;gt; = &amp;lt;Exec&amp;gt;.submit(&amp;lt;func&amp;gt;, &amp;lt;arg_1&amp;gt;, ...)   # Starts a thread and returns its Future object.&#xA;&amp;lt;bool&amp;gt; = &amp;lt;Futr&amp;gt;.done()                         # Checks if the thread has finished executing.&#xA;&amp;lt;obj&amp;gt;  = &amp;lt;Futr&amp;gt;.result()                       # Waits for thread to finish and returns result.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Queue&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;A thread-safe FIFO queue. For LIFO queue use LifoQueue.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from queue import Queue&#xA;&amp;lt;Queue&amp;gt; = Queue(maxsize=0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Queue&amp;gt;.put(&amp;lt;el&amp;gt;)                              # Blocks until queue stops being full.&#xA;&amp;lt;Queue&amp;gt;.put_nowait(&amp;lt;el&amp;gt;)                       # Raises queue.Full exception if full.&#xA;&amp;lt;el&amp;gt; = &amp;lt;Queue&amp;gt;.get()                           # Blocks until queue stops being empty.&#xA;&amp;lt;el&amp;gt; = &amp;lt;Queue&amp;gt;.get_nowait()                    # Raises queue.Empty exception if empty.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Operator&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Module of functions that provide the functionality of operators.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import operator as op&#xA;&amp;lt;el&amp;gt;      = op.add/sub/mul/truediv/floordiv/mod(&amp;lt;el&amp;gt;, &amp;lt;el&amp;gt;)  # +, -, *, /, //, %&#xA;&amp;lt;int/set&amp;gt; = op.and_/or_/xor(&amp;lt;int/set&amp;gt;, &amp;lt;int/set&amp;gt;)            # &amp;amp;, |, ^&#xA;&amp;lt;bool&amp;gt;    = op.eq/ne/lt/le/gt/ge(&amp;lt;sortable&amp;gt;, &amp;lt;sortable&amp;gt;)     # ==, !=, &amp;lt;, &amp;lt;=, &amp;gt;, &amp;gt;=&#xA;&amp;lt;func&amp;gt;    = op.itemgetter/attrgetter/methodcaller(&amp;lt;obj&amp;gt;)     # [index/key], .name, .name()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;elementwise_sum  = map(op.add, list_a, list_b)&#xA;sorted_by_second = sorted(&amp;lt;collection&amp;gt;, key=op.itemgetter(1))&#xA;sorted_by_both   = sorted(&amp;lt;collection&amp;gt;, key=op.itemgetter(1, 0))&#xA;product_of_elems = functools.reduce(op.mul, &amp;lt;collection&amp;gt;)&#xA;union_of_sets    = functools.reduce(op.or_, &amp;lt;coll_of_sets&amp;gt;)&#xA;first_element    = op.methodcaller(&#39;pop&#39;, 0)(&amp;lt;list&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Binary operators require objects to have and(), or(), xor() and invert() special methods, unlike logical operators that work on all types of objects.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Also: &lt;code&gt;&#39;&amp;lt;bool&amp;gt; = &amp;lt;bool&amp;gt; &amp;amp;|^ &amp;lt;bool&amp;gt;&#39;&lt;/code&gt; and &lt;code&gt;&#39;&amp;lt;int&amp;gt; = &amp;lt;bool&amp;gt; &amp;amp;|^ &amp;lt;int&amp;gt;&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introspection&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Inspecting code at runtime.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Variables&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;list&amp;gt; = dir()                             # Names of local variables (incl. functions).&#xA;&amp;lt;dict&amp;gt; = vars()                            # Dict of local variables. Also locals().&#xA;&amp;lt;dict&amp;gt; = globals()                         # Dict of global variables.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Attributes&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;list&amp;gt; = dir(&amp;lt;object&amp;gt;)                     # Names of object&#39;s attributes (incl. methods).&#xA;&amp;lt;dict&amp;gt; = vars(&amp;lt;object&amp;gt;)                    # Dict of writable attributes. Also &amp;lt;obj&amp;gt;.__dict__.&#xA;&amp;lt;bool&amp;gt; = hasattr(&amp;lt;object&amp;gt;, &#39;&amp;lt;attr_name&amp;gt;&#39;)  # Checks if getattr() raises an AttributeError.&#xA;value  = getattr(&amp;lt;object&amp;gt;, &#39;&amp;lt;attr_name&amp;gt;&#39;)  # Raises AttributeError if attribute is missing.&#xA;setattr(&amp;lt;object&amp;gt;, &#39;&amp;lt;attr_name&amp;gt;&#39;, value)    # Only works on objects with &#39;__dict__&#39; attribute.&#xA;delattr(&amp;lt;object&amp;gt;, &#39;&amp;lt;attr_name&amp;gt;&#39;)           # Same. Also `del &amp;lt;object&amp;gt;.&amp;lt;attr_name&amp;gt;`.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Parameters&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from inspect import signature&#xA;&amp;lt;Sig&amp;gt;  = signature(&amp;lt;function&amp;gt;)             # Function&#39;s Signature object.&#xA;&amp;lt;dict&amp;gt; = &amp;lt;Sig&amp;gt;.parameters                  # Dict of function&#39;s Parameter objects.&#xA;&amp;lt;str&amp;gt;  = &amp;lt;Param&amp;gt;.name                      # Parameter&#39;s name.&#xA;&amp;lt;memb&amp;gt; = &amp;lt;Param&amp;gt;.kind                      # Member of ParameterKind enum.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Metaprogramming&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Code that generates code.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Type&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Type is the root class. If only passed an object it returns its type (class). Otherwise it creates a new class.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;class&amp;gt; = type(&#39;&amp;lt;class_name&amp;gt;&#39;, &amp;lt;tuple_of_parents&amp;gt;, &amp;lt;dict_of_class_attributes&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; Z = type(&#39;Z&#39;, (), {&#39;a&#39;: &#39;abcde&#39;, &#39;b&#39;: 12345})&#xA;&amp;gt;&amp;gt;&amp;gt; z = Z()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Meta Class&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;A class that creates classes.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def my_meta_class(name, parents, attrs):&#xA;    attrs[&#39;a&#39;] = &#39;abcde&#39;&#xA;    return type(name, parents, attrs)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Or:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class MyMetaClass(type):&#xA;    def __new__(cls, name, parents, attrs):&#xA;        attrs[&#39;a&#39;] = &#39;abcde&#39;&#xA;        return type.__new__(cls, name, parents, attrs)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;New() is a class method that gets called before init(). If it returns an instance of its class, then that instance gets passed to init() as a &#39;self&#39; argument.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;It receives the same arguments as init(), except for the first one that specifies the desired type of the returned instance (MyMetaClass in our case).&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Like in our case, new() can also be called directly, usually from a new() method of a child class (&lt;/strong&gt;&lt;code&gt;def __new__(cls): return super().__new__(cls)&lt;/code&gt;&lt;strong&gt;).&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;The only difference between the examples above is that my_meta_class() returns a class of type type, while MyMetaClass() returns a class of type MyMetaClass.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Metaclass Attribute&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Right before a class is created it checks if it has the &#39;metaclass&#39; attribute defined. If not, it recursively checks if any of his parents has it defined and eventually comes to type().&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class MyClass(metaclass=MyMetaClass):&#xA;    b = 12345&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; MyClass.a, MyClass.b&#xA;(&#39;abcde&#39;, 12345)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Type Diagram&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;type(MyClass)     == MyMetaClass     # MyClass is an instance of MyMetaClass.&#xA;type(MyMetaClass) == type            # MyMetaClass is an instance of type.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;+-------------+-------------+&#xA;|   Classes   | Metaclasses |&#xA;+-------------+-------------|&#xA;|   MyClass --&amp;gt; MyMetaClass |&#xA;|             |     v       |&#xA;|    object -----&amp;gt; type &amp;lt;+  |&#xA;|             |     ^ +--+  |&#xA;|     str ----------+       |&#xA;+-------------+-------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Inheritance Diagram&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;MyClass.__base__     == object       # MyClass is a subclass of object.&#xA;MyMetaClass.__base__ == type         # MyMetaClass is a subclass of type.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;+-------------+-------------+&#xA;|   Classes   | Metaclasses |&#xA;+-------------+-------------|&#xA;|   MyClass   | MyMetaClass |&#xA;|      v      |     v       |&#xA;|    object &amp;lt;----- type     |&#xA;|      ^      |             |&#xA;|     str     |             |&#xA;+-------------+-------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Eval&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from ast import literal_eval&#xA;&amp;gt;&amp;gt;&amp;gt; literal_eval(&#39;[1, 2, 3]&#39;)&#xA;[1, 2, 3]&#xA;&amp;gt;&amp;gt;&amp;gt; literal_eval(&#39;1 + 2&#39;)&#xA;ValueError: malformed node or string&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Coroutines&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Coroutines have a lot in common with threads, but unlike threads, they only give up control when they call another coroutine and they don’t use as much memory.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Coroutine definition starts with &lt;code&gt;&#39;async&#39;&lt;/code&gt; and its call with &lt;code&gt;&#39;await&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;asyncio.run(&amp;lt;coroutine&amp;gt;)&#39;&lt;/code&gt; is the main entry point for asynchronous programs.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Functions wait(), gather() and as_completed() can be used when multiple coroutines need to be started at the same time.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Asyncio module also provides its own &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#queue&#34;&gt;Queue&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#semaphore-event-barrier&#34;&gt;Event&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#lock&#34;&gt;Lock&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/#semaphore-event-barrier&#34;&gt;Semaphore&lt;/a&gt; classes.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Runs a terminal game where you control an asterisk that must avoid numbers:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import asyncio, collections, curses, curses.textpad, enum, random&#xA;&#xA;P = collections.namedtuple(&#39;P&#39;, &#39;x y&#39;)         # Position&#xA;D = enum.Enum(&#39;D&#39;, &#39;n e s w&#39;)                  # Direction&#xA;W, H = 15, 7                                   # Width, Height&#xA;&#xA;def main(screen):&#xA;    curses.curs_set(0)                         # Makes cursor invisible.&#xA;    screen.nodelay(True)                       # Makes getch() non-blocking.&#xA;    asyncio.run(main_coroutine(screen))        # Starts running asyncio code.&#xA;&#xA;async def main_coroutine(screen):&#xA;    state = {&#39;*&#39;: P(0, 0), **{id_: P(W//2, H//2) for id_ in range(10)}}&#xA;    moves = asyncio.Queue()&#xA;    coros = (*(random_controller(id_, moves) for id_ in range(10)),&#xA;             human_controller(screen, moves), model(moves, state), view(state, screen))&#xA;    await asyncio.wait(coros, return_when=asyncio.FIRST_COMPLETED)&#xA;&#xA;async def random_controller(id_, moves):&#xA;    while True:&#xA;        d = random.choice(list(D))&#xA;        moves.put_nowait((id_, d))&#xA;        await asyncio.sleep(random.triangular(0.01, 0.65))&#xA;&#xA;async def human_controller(screen, moves):&#xA;    while True:&#xA;        ch = screen.getch()&#xA;        key_mappings = {258: D.s, 259: D.n, 260: D.w, 261: D.e}&#xA;        if ch in key_mappings:&#xA;            moves.put_nowait((&#39;*&#39;, key_mappings[ch]))&#xA;        await asyncio.sleep(0.005)&#xA;&#xA;async def model(moves, state):&#xA;    while state[&#39;*&#39;] not in (state[id_] for id_ in range(10)):&#xA;        id_, d = await moves.get()&#xA;        x, y   = state[id_]&#xA;        deltas = {D.n: P(0, -1), D.e: P(1, 0), D.s: P(0, 1), D.w: P(-1, 0)}&#xA;        state[id_] = P((x + deltas[d].x) % W, (y + deltas[d].y) % H)&#xA;&#xA;async def view(state, screen):&#xA;    offset = P(curses.COLS//2 - W//2, curses.LINES//2 - H//2)&#xA;    while True:&#xA;        screen.erase()&#xA;        curses.textpad.rectangle(screen, offset.y-1, offset.x-1, offset.y+H, offset.x+W)&#xA;        for id_, p in state.items():&#xA;            screen.addstr(offset.y + (p.y - state[&#39;*&#39;].y + H//2) % H,&#xA;                          offset.x + (p.x - state[&#39;*&#39;].x + W//2) % W, str(id_))&#xA;        await asyncio.sleep(0.005)&#xA;&#xA;if __name__ == &#39;__main__&#39;:&#xA;    curses.wrapper(main)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Libraries&lt;/h1&gt; &#xA;&lt;h2&gt;Progress Bar&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install tqdm&#xA;&amp;gt;&amp;gt;&amp;gt; from tqdm import tqdm&#xA;&amp;gt;&amp;gt;&amp;gt; from time import sleep&#xA;&amp;gt;&amp;gt;&amp;gt; for el in tqdm([1, 2, 3], desc=&#39;Processing&#39;):&#xA;...     sleep(1)&#xA;Processing: 100%|████████████████████| 3/3 [00:03&amp;lt;00:00,  1.00s/it]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Plot&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install matplotlib&#xA;import matplotlib.pyplot as plt&#xA;plt.plot(&amp;lt;x_data&amp;gt;, &amp;lt;y_data&amp;gt; [, label=&amp;lt;str&amp;gt;])   # Or: plt.plot(&amp;lt;y_data&amp;gt;)&#xA;plt.legend()                                   # Adds a legend.&#xA;plt.savefig(&amp;lt;path&amp;gt;)                            # Saves the figure.&#xA;plt.show()                                     # Displays the figure.&#xA;plt.clf()                                      # Clears the figure.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Table&lt;/h2&gt; &#xA;&lt;h4&gt;Prints a CSV file as an ASCII table:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install tabulate&#xA;import csv, tabulate&#xA;with open(&#39;test.csv&#39;, encoding=&#39;utf-8&#39;, newline=&#39;&#39;) as file:&#xA;    rows   = csv.reader(file)&#xA;    header = [a.title() for a in next(rows)]&#xA;    table  = tabulate.tabulate(rows, header)&#xA;print(table)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Curses&lt;/h2&gt; &#xA;&lt;h4&gt;Runs a basic file explorer in the terminal:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from curses import wrapper, ascii, A_REVERSE, KEY_DOWN, KEY_UP, KEY_LEFT, KEY_RIGHT, KEY_ENTER&#xA;from os import listdir, path, chdir&#xA;&#xA;def main(screen):&#xA;    ch, first, selected, paths = 0, 0, 0, listdir()&#xA;    while ch != ascii.ESC:&#xA;        height, _ = screen.getmaxyx()&#xA;        screen.erase()&#xA;        for y, filename in enumerate(paths[first : first+height]):&#xA;            screen.addstr(y, 0, filename, A_REVERSE * (selected == first + y))&#xA;        ch = screen.getch()&#xA;        selected += (ch == KEY_DOWN) - (ch == KEY_UP)&#xA;        selected = max(0, min(len(paths)-1, selected))&#xA;        first += (first &amp;lt;= selected - height) - (first &amp;gt; selected)&#xA;        if ch in [KEY_LEFT, KEY_RIGHT, KEY_ENTER, 10, 13]:&#xA;            new_dir = &#39;..&#39; if ch == KEY_LEFT else paths[selected]&#xA;            if path.isdir(new_dir):&#xA;                chdir(new_dir)&#xA;                first, selected, paths = 0, 0, listdir()&#xA;&#xA;if __name__ == &#39;__main__&#39;:&#xA;    wrapper(main)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Logging&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install loguru&#xA;from loguru import logger&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;logger.add(&#39;debug_{time}.log&#39;, colorize=True)  # Connects a log file.&#xA;logger.add(&#39;error_{time}.log&#39;, level=&#39;ERROR&#39;)  # Another file for errors or higher.&#xA;logger.&amp;lt;level&amp;gt;(&#39;A logging message.&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Levels: &lt;code&gt;&#39;debug&#39;&lt;/code&gt;, &lt;code&gt;&#39;info&#39;&lt;/code&gt;, &lt;code&gt;&#39;success&#39;&lt;/code&gt;, &lt;code&gt;&#39;warning&#39;&lt;/code&gt;, &lt;code&gt;&#39;error&#39;&lt;/code&gt;, &lt;code&gt;&#39;critical&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Exceptions&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Exception description, stack trace and values of variables are appended automatically.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;try:&#xA;    ...&#xA;except &amp;lt;exception&amp;gt;:&#xA;    logger.exception(&#39;An error happened.&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rotation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Argument that sets a condition when a new log file is created.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;rotation=&amp;lt;int&amp;gt;|&amp;lt;datetime.timedelta&amp;gt;|&amp;lt;datetime.time&amp;gt;|&amp;lt;str&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;&amp;lt;int&amp;gt;&#39;&lt;/code&gt; - Max file size in bytes.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;&amp;lt;timedelta&amp;gt;&#39;&lt;/code&gt; - Max age of a file.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;&amp;lt;time&amp;gt;&#39;&lt;/code&gt; - Time of day.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;&amp;lt;str&amp;gt;&#39;&lt;/code&gt; - Any of above as a string: &lt;code&gt;&#39;100 MB&#39;&lt;/code&gt;, &lt;code&gt;&#39;1 month&#39;&lt;/code&gt;, &lt;code&gt;&#39;monday at 12:00&#39;&lt;/code&gt;, ...&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Retention&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Sets a condition which old log files get deleted.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;retention=&amp;lt;int&amp;gt;|&amp;lt;datetime.timedelta&amp;gt;|&amp;lt;str&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;&amp;lt;int&amp;gt;&#39;&lt;/code&gt; - Max number of files.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;&amp;lt;timedelta&amp;gt;&#39;&lt;/code&gt; - Max age of a file.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;&amp;lt;str&amp;gt;&#39;&lt;/code&gt; - Max age as a string: &lt;code&gt;&#39;1 week, 3 days&#39;&lt;/code&gt;, &lt;code&gt;&#39;2 months&#39;&lt;/code&gt;, ...&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Scraping&lt;/h2&gt; &#xA;&lt;h4&gt;Scrapes Python&#39;s URL, version number and logo from its Wikipedia page:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install requests beautifulsoup4&#xA;import requests, bs4, os, sys&#xA;&#xA;WIKI_URL = &#39;https://en.wikipedia.org/wiki/Python_(programming_language)&#39;&#xA;try:&#xA;    html       = requests.get(WIKI_URL).text&#xA;    document   = bs4.BeautifulSoup(html, &#39;html.parser&#39;)&#xA;    table      = document.find(&#39;table&#39;, class_=&#39;infobox vevent&#39;)&#xA;    python_url = table.find(&#39;th&#39;, text=&#39;Website&#39;).next_sibling.a[&#39;href&#39;]&#xA;    version    = table.find(&#39;th&#39;, text=&#39;Stable release&#39;).next_sibling.strings.__next__()&#xA;    logo_url   = table.find(&#39;img&#39;)[&#39;src&#39;]&#xA;    logo       = requests.get(f&#39;https:{logo_url}&#39;).content&#xA;    filename   = os.path.basename(logo_url)&#xA;    with open(filename, &#39;wb&#39;) as file:&#xA;        file.write(logo)&#xA;    print(f&#39;{python_url}, {version}, file://{os.path.abspath(filename)}&#39;)&#xA;except requests.exceptions.ConnectionError:&#xA;    print(&#34;You&#39;ve got problems with connection.&#34;, file=sys.stderr)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Web&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install bottle&#xA;from bottle import run, route, static_file, template, post, request, response&#xA;import json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;run(host=&#39;localhost&#39;, port=8080)        # Runs locally.&#xA;run(host=&#39;0.0.0.0&#39;, port=80)            # Runs globally.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Static Request&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;@route(&#39;/img/&amp;lt;filename&amp;gt;&#39;)&#xA;def send_file(filename):&#xA;    return static_file(filename, root=&#39;img_dir/&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dynamic Request&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;@route(&#39;/&amp;lt;sport&amp;gt;&#39;)&#xA;def send_html(sport):&#xA;    return template(&#39;&amp;lt;h1&amp;gt;{{title}}&amp;lt;/h1&amp;gt;&#39;, title=sport)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;REST Request&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;@post(&#39;/&amp;lt;sport&amp;gt;/odds&#39;)&#xA;def send_json(sport):&#xA;    team = request.forms.get(&#39;team&#39;)&#xA;    response.headers[&#39;Content-Type&#39;] = &#39;application/json&#39;&#xA;    response.headers[&#39;Cache-Control&#39;] = &#39;no-cache&#39;&#xA;    return json.dumps({&#39;team&#39;: team, &#39;odds&#39;: [2.09, 3.74, 3.68]})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Test:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install requests&#xA;&amp;gt;&amp;gt;&amp;gt; import threading, requests&#xA;&amp;gt;&amp;gt;&amp;gt; threading.Thread(target=run, daemon=True).start()&#xA;&amp;gt;&amp;gt;&amp;gt; url = &#39;http://localhost:8080/football/odds&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; data = {&#39;team&#39;: &#39;arsenal f.c.&#39;}&#xA;&amp;gt;&amp;gt;&amp;gt; response = requests.post(url, data=data)&#xA;&amp;gt;&amp;gt;&amp;gt; response.json()&#xA;{&#39;team&#39;: &#39;arsenal f.c.&#39;, &#39;odds&#39;: [2.09, 3.74, 3.68]}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Profiling&lt;/h2&gt; &#xA;&lt;h3&gt;Stopwatch&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from time import time&#xA;start_time = time()                     # Seconds since the Epoch.&#xA;...&#xA;duration = time() - start_time&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;High performance:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from time import perf_counter&#xA;start_time = perf_counter()             # Seconds since the restart.&#xA;...&#xA;duration = perf_counter() - start_time&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Timing a Snippet&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from timeit import timeit&#xA;&amp;gt;&amp;gt;&amp;gt; timeit(&#34;&#39;&#39;.join(str(i) for i in range(100))&#34;,&#xA;...        number=10000, globals=globals(), setup=&#39;pass&#39;)&#xA;0.34986&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Profiling by Line&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install line_profiler memory_profiler&#xA;@profile&#xA;def main():&#xA;    a = [*range(10000)]&#xA;    b = {*range(10000)}&#xA;main()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;$ kernprof -lv test.py&#xA;Line #   Hits     Time  Per Hit   % Time  Line Contents&#xA;=======================================================&#xA;     1                                    @profile&#xA;     2                                    def main():&#xA;     3      1    955.0    955.0     43.7      a = [*range(10000)]&#xA;     4      1   1231.0   1231.0     56.3      b = {*range(10000)}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;$ python3 -m memory_profiler test.py&#xA;Line #         Mem usage      Increment   Line Contents&#xA;=======================================================&#xA;     1        37.668 MiB     37.668 MiB   @profile&#xA;     2                                    def main():&#xA;     3        38.012 MiB      0.344 MiB       a = [*range(10000)]&#xA;     4        38.477 MiB      0.465 MiB       b = {*range(10000)}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Call Graph&lt;/h3&gt; &#xA;&lt;h4&gt;Generates a PNG image of the call graph with highlighted bottlenecks:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install pycallgraph2&#xA;# $ apt install graphviz&#xA;import pycallgraph2 as cg, datetime&#xA;filename = f&#39;profile-{datetime.datetime.now():%Y%m%d%H%M%S}.png&#39;&#xA;drawer = cg.output.GraphvizOutput(output_file=filename)&#xA;with cg.PyCallGraph(drawer):&#xA;    &amp;lt;code_to_be_profiled&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;NumPy&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Array manipulation mini-language. It can run up to one hundred times faster than the equivalent Python code. An even faster alternative that runs on a GPU is called CuPy.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install numpy&#xA;import numpy as np&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;array&amp;gt; = np.array(&amp;lt;list/list_of_lists&amp;gt;)&#xA;&amp;lt;array&amp;gt; = np.arange(from_inclusive, to_exclusive, ±step_size)&#xA;&amp;lt;array&amp;gt; = np.ones(&amp;lt;shape&amp;gt;)&#xA;&amp;lt;array&amp;gt; = np.random.randint(from_inclusive, to_exclusive, &amp;lt;shape&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;array&amp;gt;.shape = &amp;lt;shape&amp;gt;&#xA;&amp;lt;view&amp;gt;  = &amp;lt;array&amp;gt;.reshape(&amp;lt;shape&amp;gt;)&#xA;&amp;lt;view&amp;gt;  = np.broadcast_to(&amp;lt;array&amp;gt;, &amp;lt;shape&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;array&amp;gt; = &amp;lt;array&amp;gt;.sum(axis)&#xA;indexes = &amp;lt;array&amp;gt;.argmin(axis)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Shape is a tuple of dimension sizes.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Axis is an index of the dimension that gets collapsed. Leftmost dimension has index 0.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Indexing&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;lt;el&amp;gt;       = &amp;lt;2d_array&amp;gt;[row_index, column_index]&#xA;&amp;lt;1d_view&amp;gt;  = &amp;lt;2d_array&amp;gt;[row_index]&#xA;&amp;lt;1d_view&amp;gt;  = &amp;lt;2d_array&amp;gt;[:, column_index]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;lt;1d_array&amp;gt; = &amp;lt;2d_array&amp;gt;[row_indexes, column_indexes]&#xA;&amp;lt;2d_array&amp;gt; = &amp;lt;2d_array&amp;gt;[row_indexes]&#xA;&amp;lt;2d_array&amp;gt; = &amp;lt;2d_array&amp;gt;[:, column_indexes]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;lt;2d_bools&amp;gt; = &amp;lt;2d_array&amp;gt; &amp;gt;&amp;lt;== &amp;lt;el&amp;gt;&#xA;&amp;lt;1d_array&amp;gt; = &amp;lt;2d_array&amp;gt;[&amp;lt;2d_bools&amp;gt;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Broadcasting&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Broadcasting is a set of rules by which NumPy functions operate on arrays of different sizes and/or dimensions.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;left  = [[0.1], [0.6], [0.8]]        # Shape: (3, 1)&#xA;right = [ 0.1 ,  0.6 ,  0.8 ]        # Shape: (3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;1. If array shapes differ in length, left-pad the shorter shape with ones:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;left  = [[0.1], [0.6], [0.8]]        # Shape: (3, 1)&#xA;right = [[0.1 ,  0.6 ,  0.8]]        # Shape: (1, 3) &amp;lt;- !&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. If any dimensions differ in size, expand the ones that have size 1 by duplicating their elements:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;left  = [[0.1, 0.1, 0.1], [0.6, 0.6, 0.6], [0.8, 0.8, 0.8]]  # Shape: (3, 3) &amp;lt;- !&#xA;right = [[0.1, 0.6, 0.8], [0.1, 0.6, 0.8], [0.1, 0.6, 0.8]]  # Shape: (3, 3) &amp;lt;- !&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. If neither non-matching dimension has size 1, raise an error.&lt;/h4&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;h4&gt;For each point returns index of its nearest point (&lt;code&gt;[0.1, 0.6, 0.8] =&amp;gt; [1, 2, 1]&lt;/code&gt;):&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; points = np.array([0.1, 0.6, 0.8])&#xA; [ 0.1,  0.6,  0.8]&#xA;&amp;gt;&amp;gt;&amp;gt; wrapped_points = points.reshape(3, 1)&#xA;[[ 0.1],&#xA; [ 0.6],&#xA; [ 0.8]]&#xA;&amp;gt;&amp;gt;&amp;gt; distances = wrapped_points - points&#xA;[[ 0. , -0.5, -0.7],&#xA; [ 0.5,  0. , -0.2],&#xA; [ 0.7,  0.2,  0. ]]&#xA;&amp;gt;&amp;gt;&amp;gt; distances = np.abs(distances)&#xA;[[ 0. ,  0.5,  0.7],&#xA; [ 0.5,  0. ,  0.2],&#xA; [ 0.7,  0.2,  0. ]]&#xA;&amp;gt;&amp;gt;&amp;gt; i = np.arange(3)&#xA;[0, 1, 2]&#xA;&amp;gt;&amp;gt;&amp;gt; distances[i, i] = np.inf&#xA;[[ inf,  0.5,  0.7],&#xA; [ 0.5,  inf,  0.2],&#xA; [ 0.7,  0.2,  inf]]&#xA;&amp;gt;&amp;gt;&amp;gt; distances.argmin(1)&#xA;[1, 2, 1]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Image&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install pillow&#xA;from PIL import Image&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Image&amp;gt; = Image.new(&#39;&amp;lt;mode&amp;gt;&#39;, (width, height))  # Also: `color=&amp;lt;int/tuple/str&amp;gt;`.&#xA;&amp;lt;Image&amp;gt; = Image.open(&amp;lt;path&amp;gt;)                    # Identifies format based on file contents.&#xA;&amp;lt;Image&amp;gt; = &amp;lt;Image&amp;gt;.convert(&#39;&amp;lt;mode&amp;gt;&#39;)             # Converts image to the new mode.&#xA;&amp;lt;Image&amp;gt;.save(&amp;lt;path&amp;gt;)                            # Selects format based on the path extension.&#xA;&amp;lt;Image&amp;gt;.show()                                  # Opens image in default preview app.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;int/tuple&amp;gt; = &amp;lt;Image&amp;gt;.getpixel((x, y))          # Returns a pixel.&#xA;&amp;lt;Image&amp;gt;.putpixel((x, y), &amp;lt;int/tuple&amp;gt;)           # Writes a pixel to the image.&#xA;&amp;lt;ImagingCore&amp;gt; = &amp;lt;Image&amp;gt;.getdata()               # Returns a sequence of pixels.&#xA;&amp;lt;Image&amp;gt;.putdata(&amp;lt;list/ImagingCore&amp;gt;)             # Writes a sequence of pixels.&#xA;&amp;lt;Image&amp;gt;.paste(&amp;lt;Image&amp;gt;, (x, y))                  # Writes an image to the image.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;lt;2d_array&amp;gt; = np.array(&amp;lt;Image_L&amp;gt;)                # Creates NumPy array from greyscale image.&#xA;&amp;lt;3d_array&amp;gt; = np.array(&amp;lt;Image_RGB&amp;gt;)              # Creates NumPy array from color image.&#xA;&amp;lt;Image&amp;gt;    = Image.fromarray(&amp;lt;array&amp;gt;)           # Creates image from NumPy array of floats.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Modes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;1&#39;&lt;/code&gt; - 1-bit pixels, black and white, stored with one pixel per byte.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;L&#39;&lt;/code&gt; - 8-bit pixels, greyscale.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;RGB&#39;&lt;/code&gt; - 3x8-bit pixels, true color.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;RGBA&#39;&lt;/code&gt; - 4x8-bit pixels, true color with transparency mask.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;HSV&#39;&lt;/code&gt; - 3x8-bit pixels, Hue, Saturation, Value color space.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;h4&gt;Creates a PNG image of a rainbow gradient:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;WIDTH, HEIGHT = 100, 100&#xA;n_pixels = WIDTH * HEIGHT&#xA;hues = (255 * i/n_pixels for i in range(n_pixels))&#xA;img = Image.new(&#39;HSV&#39;, (WIDTH, HEIGHT))&#xA;img.putdata([(int(h), 255, 255) for h in hues])&#xA;img.convert(&#39;RGB&#39;).save(&#39;test.png&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Adds noise to a PNG image:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from random import randint&#xA;add_noise = lambda value: max(0, min(255, value + randint(-20, 20)))&#xA;img = Image.open(&#39;test.png&#39;).convert(&#39;HSV&#39;)&#xA;img.putdata([(add_noise(h), s, v) for h, s, v in img.getdata()])&#xA;img.convert(&#39;RGB&#39;).save(&#39;test.png&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Image Draw&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from PIL import ImageDraw&#xA;&amp;lt;ImageDraw&amp;gt; = ImageDraw.Draw(&amp;lt;Image&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;ImageDraw&amp;gt;.point((x, y))&#xA;&amp;lt;ImageDraw&amp;gt;.line((x1, y1, x2, y2 [, ...]))&#xA;&amp;lt;ImageDraw&amp;gt;.arc((x1, y1, x2, y2), from_deg, to_deg)&#xA;&amp;lt;ImageDraw&amp;gt;.rectangle((x1, y1, x2, y2))&#xA;&amp;lt;ImageDraw&amp;gt;.polygon((x1, y1, x2, y2 [, ...]))&#xA;&amp;lt;ImageDraw&amp;gt;.ellipse((x1, y1, x2, y2))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use &lt;code&gt;&#39;fill=&amp;lt;color&amp;gt;&#39;&lt;/code&gt; to set the primary color.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use &lt;code&gt;&#39;width=&amp;lt;int&amp;gt;&#39;&lt;/code&gt; to set the width of lines or contours.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use &lt;code&gt;&#39;outline=&amp;lt;color&amp;gt;&#39;&lt;/code&gt; to set the color of the contours.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Colors can be specified as an int, tuple, &lt;code&gt;&#39;#rrggbb[aa]&#39;&lt;/code&gt; string or a color name.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Animation&lt;/h2&gt; &#xA;&lt;h4&gt;Creates a GIF of a bouncing ball:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install imageio&#xA;from PIL import Image, ImageDraw&#xA;import imageio&#xA;WIDTH, R = 126, 10&#xA;frames = []&#xA;for velocity in range(1, 16):&#xA;    y = sum(range(velocity))&#xA;    frame = Image.new(&#39;L&#39;, (WIDTH, WIDTH))&#xA;    draw  = ImageDraw.Draw(frame)&#xA;    draw.ellipse((WIDTH/2-R, y, WIDTH/2+R, y+R*2), fill=&#39;white&#39;)&#xA;    frames.append(frame)&#xA;frames += reversed(frames[1:-1])&#xA;imageio.mimsave(&#39;test.gif&#39;, frames, duration=0.03)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Audio&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import wave&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Wave_read&amp;gt;  = wave.open(&#39;&amp;lt;path&amp;gt;&#39;, &#39;rb&#39;)        # Opens the WAV file.&#xA;framerate    = &amp;lt;Wave_read&amp;gt;.getframerate()       # Number of frames per second.&#xA;nchannels    = &amp;lt;Wave_read&amp;gt;.getnchannels()       # Number of samples per frame.&#xA;sampwidth    = &amp;lt;Wave_read&amp;gt;.getsampwidth()       # Sample size in bytes.&#xA;nframes      = &amp;lt;Wave_read&amp;gt;.getnframes()         # Number of frames.&#xA;&amp;lt;params&amp;gt;     = &amp;lt;Wave_read&amp;gt;.getparams()          # Immutable collection of above.&#xA;&amp;lt;bytes&amp;gt;      = &amp;lt;Wave_read&amp;gt;.readframes(nframes)  # Returns next &#39;nframes&#39; frames.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Wave_write&amp;gt; = wave.open(&#39;&amp;lt;path&amp;gt;&#39;, &#39;wb&#39;)        # Truncates existing file.&#xA;&amp;lt;Wave_write&amp;gt;.setframerate(&amp;lt;int&amp;gt;)                # 44100 for CD, 48000 for video.&#xA;&amp;lt;Wave_write&amp;gt;.setnchannels(&amp;lt;int&amp;gt;)                # 1 for mono, 2 for stereo.&#xA;&amp;lt;Wave_write&amp;gt;.setsampwidth(&amp;lt;int&amp;gt;)                # 2 for CD quality sound.&#xA;&amp;lt;Wave_write&amp;gt;.setparams(&amp;lt;params&amp;gt;)                # Sets all parameters.&#xA;&amp;lt;Wave_write&amp;gt;.writeframes(&amp;lt;bytes&amp;gt;)               # Appends frames to the file.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bytes object contains a sequence of frames, each consisting of one or more samples.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;In a stereo signal, the first sample of a frame belongs to the left channel.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Each sample consists of one or more bytes that, when converted to an integer, indicate the displacement of a speaker membrane at a given moment.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;If sample width is one byte, then the integer should be encoded unsigned.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;For all other sizes, the integer should be encoded signed with little-endian byte order.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Sample Values&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;+-----------+-------------+------+-------------+&#xA;| sampwidth |     min     | zero |     max     |&#xA;+-----------+-------------+------+-------------+&#xA;|     1     |           0 |  128 |         255 |&#xA;|     2     |      -32768 |    0 |       32767 |&#xA;|     3     |    -8388608 |    0 |     8388607 |&#xA;|     4     | -2147483648 |    0 |  2147483647 |&#xA;+-----------+-------------+------+-------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Read Float Samples from WAV File&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def read_wav_file(filename):&#xA;    def get_int(bytes_obj):&#xA;        an_int = int.from_bytes(bytes_obj, &#39;little&#39;, signed=(sampwidth != 1))&#xA;        return an_int - 128 * (sampwidth == 1)&#xA;    with wave.open(filename, &#39;rb&#39;) as file:&#xA;        sampwidth = file.getsampwidth()&#xA;        frames = file.readframes(-1)&#xA;    bytes_samples = (frames[i : i+sampwidth] for i in range(0, len(frames), sampwidth))&#xA;    return [get_int(b) / pow(2, sampwidth * 8 - 1) for b in bytes_samples]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Write Float Samples to WAV File&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def write_to_wav_file(filename, float_samples, nchannels=1, sampwidth=2, framerate=44100):&#xA;    def get_bytes(a_float):&#xA;        a_float = max(-1, min(1 - 2e-16, a_float))&#xA;        a_float += sampwidth == 1&#xA;        a_float *= pow(2, sampwidth * 8 - 1)&#xA;        return int(a_float).to_bytes(sampwidth, &#39;little&#39;, signed=(sampwidth != 1))&#xA;    with wave.open(filename, &#39;wb&#39;) as file:&#xA;        file.setnchannels(nchannels)&#xA;        file.setsampwidth(sampwidth)&#xA;        file.setframerate(framerate)&#xA;        file.writeframes(b&#39;&#39;.join(get_bytes(f) for f in float_samples))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;h4&gt;Saves a sine wave to a mono WAV file:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from math import pi, sin&#xA;samples_f = (sin(i * 2 * pi * 440 / 44100) for i in range(100000))&#xA;write_to_wav_file(&#39;test.wav&#39;, samples_f)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Adds noise to a mono WAV file:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from random import random&#xA;add_noise = lambda value: value + (random() - 0.5) * 0.03&#xA;samples_f = (add_noise(f) for f in read_wav_file(&#39;test.wav&#39;))&#xA;write_to_wav_file(&#39;test.wav&#39;, samples_f)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Plays a WAV file:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install simpleaudio&#xA;from simpleaudio import play_buffer&#xA;with wave.open(&#39;test.wav&#39;, &#39;rb&#39;) as file:&#xA;    p = file.getparams()&#xA;    frames = file.readframes(-1)&#xA;    play_buffer(frames, p.nchannels, p.sampwidth, p.framerate)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Text to Speech&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install pyttsx3&#xA;import pyttsx3&#xA;engine = pyttsx3.init()&#xA;engine.say(&#39;Sally sells seashells by the seashore.&#39;)&#xA;engine.runAndWait()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Synthesizer&lt;/h2&gt; &#xA;&lt;h4&gt;Plays Popcorn by Gershon Kingsley:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install simpleaudio&#xA;import math, struct, simpleaudio&#xA;from itertools import repeat, chain&#xA;F  = 44100&#xA;P1 = &#39;71♩,69♪,,71♩,66♪,,62♩,66♪,,59♩,,&#39;&#xA;P2 = &#39;71♩,73♪,,74♩,73♪,,74♪,,71♪,,73♩,71♪,,73♪,,69♪,,71♩,69♪,,71♪,,67♪,,71♩,,&#39;&#xA;get_pause   = lambda seconds: repeat(0, int(seconds * F))&#xA;sin_f       = lambda i, hz: math.sin(i * 2 * math.pi * hz / F)&#xA;get_wave    = lambda hz, seconds: (sin_f(i, hz) for i in range(int(seconds * F)))&#xA;get_hz      = lambda key: 8.176 * 2 ** (int(key) / 12)&#xA;parse_note  = lambda note: (get_hz(note[:2]), 1/4 if &#39;♩&#39; in note else 1/8)&#xA;get_samples = lambda note: get_wave(*parse_note(note)) if note else get_pause(1/8)&#xA;samples_f   = chain.from_iterable(get_samples(n) for n in f&#39;{P1},{P1},{P2}&#39;.split(&#39;,&#39;))&#xA;samples_b   = b&#39;&#39;.join(struct.pack(&#39;&amp;lt;h&#39;, int(f * 30000)) for f in samples_f)&#xA;simpleaudio.play_buffer(samples_b, 1, 2, F)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Pygame&lt;/h2&gt; &#xA;&lt;h3&gt;Basic Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install pygame&#xA;import pygame as pg&#xA;pg.init()&#xA;screen = pg.display.set_mode((500, 500))&#xA;rect = pg.Rect(240, 240, 20, 20)&#xA;while all(event.type != pg.QUIT for event in pg.event.get()):&#xA;    deltas = {pg.K_UP: (0, -1), pg.K_RIGHT: (1, 0), pg.K_DOWN: (0, 1), pg.K_LEFT: (-1, 0)}&#xA;    for ch, is_pressed in enumerate(pg.key.get_pressed()):&#xA;        rect = rect.move(deltas[ch]) if ch in deltas and is_pressed else rect&#xA;    screen.fill((0, 0, 0))&#xA;    pg.draw.rect(screen, (255, 255, 255), rect)&#xA;    pg.display.flip()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rectangle&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Object for storing rectangular coordinates.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Rect&amp;gt; = pg.Rect(x, y, width, height)           # Floats get truncated into ints.&#xA;&amp;lt;int&amp;gt;  = &amp;lt;Rect&amp;gt;.x/y/centerx/centery/…           # Top, right, bottom, left. Allows assignments.&#xA;&amp;lt;tup.&amp;gt; = &amp;lt;Rect&amp;gt;.topleft/center/…                # Topright, bottomright, bottomleft. Same.&#xA;&amp;lt;Rect&amp;gt; = &amp;lt;Rect&amp;gt;.move((x, y))                    # Use move_ip() to move in-place.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;bool&amp;gt; = &amp;lt;Rect&amp;gt;.collidepoint((x, y))            # Checks if rectangle contains a point.&#xA;&amp;lt;bool&amp;gt; = &amp;lt;Rect&amp;gt;.colliderect(&amp;lt;Rect&amp;gt;)             # Checks if two rectangles overlap.&#xA;&amp;lt;int&amp;gt;  = &amp;lt;Rect&amp;gt;.collidelist(&amp;lt;list_of_Rect&amp;gt;)     # Returns index of first colliding Rect or -1.&#xA;&amp;lt;list&amp;gt; = &amp;lt;Rect&amp;gt;.collidelistall(&amp;lt;list_of_Rect&amp;gt;)  # Returns indexes of all colliding Rects.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Surface&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Object for representing images.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Surf&amp;gt; = pg.display.set_mode((width, height))   # Returns display surface.&#xA;&amp;lt;Surf&amp;gt; = pg.Surface((width, height), flags=0)   # New RGB surface. RGBA if `flags=pg.SRCALPHA`.&#xA;&amp;lt;Surf&amp;gt; = pg.image.load(&#39;&amp;lt;path&amp;gt;&#39;)                # Loads the image. Format depends on source.&#xA;&amp;lt;Surf&amp;gt; = &amp;lt;Surf&amp;gt;.subsurface(&amp;lt;Rect&amp;gt;)              # Returns a subsurface.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Surf&amp;gt;.fill(color)                              # Tuple, Color(&#39;#rrggbb[aa]&#39;) or Color(&amp;lt;name&amp;gt;).&#xA;&amp;lt;Surf&amp;gt;.set_at((x, y), color)                    # Updates pixel.&#xA;&amp;lt;Surf&amp;gt;.blit(&amp;lt;Surf&amp;gt;, (x, y))                     # Draws passed surface to the surface.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pygame.transform import scale, ...&#xA;&amp;lt;Surf&amp;gt; = scale(&amp;lt;Surf&amp;gt;, (width, height))         # Returns scaled surface.&#xA;&amp;lt;Surf&amp;gt; = rotate(&amp;lt;Surf&amp;gt;, degrees)                # Returns rotated and scaled surface.&#xA;&amp;lt;Surf&amp;gt; = flip(&amp;lt;Surf&amp;gt;, x_bool, y_bool)           # Returns flipped surface.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pygame.draw import line, ...&#xA;line(&amp;lt;Surf&amp;gt;, color, (x1, y1), (x2, y2), width)  # Draws a line to the surface.&#xA;arc(&amp;lt;Surf&amp;gt;, color, &amp;lt;Rect&amp;gt;, from_rad, to_rad)    # Also: ellipse(&amp;lt;Surf&amp;gt;, color, &amp;lt;Rect&amp;gt;)&#xA;rect(&amp;lt;Surf&amp;gt;, color, &amp;lt;Rect&amp;gt;)                     # Also: polygon(&amp;lt;Surf&amp;gt;, color, points)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Font&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Font&amp;gt; = pg.font.SysFont(&#39;&amp;lt;name&amp;gt;&#39;, size)        # Loads the system font or default if missing.&#xA;&amp;lt;Font&amp;gt; = pg.font.Font(&#39;&amp;lt;path&amp;gt;&#39;, size)           # Loads the TTF file. Pass None for default.&#xA;&amp;lt;Surf&amp;gt; = &amp;lt;Font&amp;gt;.render(text, antialias, color)  # Background color can be specified at the end.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sound&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Sound&amp;gt; = pg.mixer.Sound(&#39;&amp;lt;path&amp;gt;&#39;)              # Loads the WAV file.&#xA;&amp;lt;Sound&amp;gt;.play()                                  # Starts playing the sound.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Basic Mario Brothers Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import collections, dataclasses, enum, io, itertools as it, pygame as pg, urllib.request&#xA;from random import randint&#xA;&#xA;P = collections.namedtuple(&#39;P&#39;, &#39;x y&#39;)          # Position&#xA;D = enum.Enum(&#39;D&#39;, &#39;n e s w&#39;)                   # Direction&#xA;SIZE, MAX_SPEED = 50, P(5, 10)                  # Screen size, Speed limit&#xA;&#xA;def main():&#xA;    def get_screen():&#xA;        pg.init()&#xA;        return pg.display.set_mode((SIZE*16, SIZE*16))&#xA;    def get_images():&#xA;        url = &#39;https://gto76.github.io/python-cheatsheet/web/mario_bros.png&#39;&#xA;        img = pg.image.load(io.BytesIO(urllib.request.urlopen(url).read()))&#xA;        return [img.subsurface(get_rect(x, 0)) for x in range(img.get_width() // 16)]&#xA;    def get_mario():&#xA;        Mario = dataclasses.make_dataclass(&#39;Mario&#39;, &#39;rect spd facing_left frame_cycle&#39;.split())&#xA;        return Mario(get_rect(1, 1), P(0, 0), False, it.cycle(range(3)))&#xA;    def get_tiles():&#xA;        positions = [p for p in it.product(range(SIZE), repeat=2) if {*p} &amp;amp; {0, SIZE-1}] + \&#xA;            [(randint(1, SIZE-2), randint(2, SIZE-2)) for _ in range(SIZE**2 // 10)]&#xA;        return [get_rect(*p) for p in positions]&#xA;    def get_rect(x, y):&#xA;        return pg.Rect(x*16, y*16, 16, 16)&#xA;    run(get_screen(), get_images(), get_mario(), get_tiles())&#xA;&#xA;def run(screen, images, mario, tiles):&#xA;    clock = pg.time.Clock()&#xA;    while all(event.type != pg.QUIT for event in pg.event.get()):&#xA;        keys = {pg.K_UP: D.n, pg.K_RIGHT: D.e, pg.K_DOWN: D.s, pg.K_LEFT: D.w}&#xA;        pressed = {keys.get(ch) for ch, is_prsd in enumerate(pg.key.get_pressed()) if is_prsd}&#xA;        update_speed(mario, tiles, pressed)&#xA;        update_position(mario, tiles)&#xA;        draw(screen, images, mario, tiles, pressed)&#xA;        clock.tick(28)&#xA;&#xA;def update_speed(mario, tiles, pressed):&#xA;    x, y = mario.spd&#xA;    x += 2 * ((D.e in pressed) - (D.w in pressed))&#xA;    x -= (x &amp;gt; 0) - (x &amp;lt; 0)&#xA;    y += 1 if D.s not in get_boundaries(mario.rect, tiles) else (D.n in pressed) * -10&#xA;    mario.spd = P(*[max(-limit, min(limit, s)) for limit, s in zip(MAX_SPEED, P(x, y))])&#xA;&#xA;def update_position(mario, tiles):&#xA;    x, y = mario.rect.topleft&#xA;    n_steps = max(abs(s) for s in mario.spd)&#xA;    for _ in range(n_steps):&#xA;        mario.spd = stop_on_collision(mario.spd, get_boundaries(mario.rect, tiles))&#xA;        x, y = x + mario.spd.x / n_steps, y + mario.spd.y / n_steps&#xA;        mario.rect.topleft = x, y&#xA;&#xA;def get_boundaries(rect, tiles):&#xA;    deltas = {D.n: P(0, -1), D.e: P(1, 0), D.s: P(0, 1), D.w: P(-1, 0)}&#xA;    return {d for d, delta in deltas.items() if rect.move(delta).collidelist(tiles) != -1}&#xA;&#xA;def stop_on_collision(spd, bounds):&#xA;    return P(x=0 if (D.w in bounds and spd.x &amp;lt; 0) or (D.e in bounds and spd.x &amp;gt; 0) else spd.x,&#xA;             y=0 if (D.n in bounds and spd.y &amp;lt; 0) or (D.s in bounds and spd.y &amp;gt; 0) else spd.y)&#xA;&#xA;def draw(screen, images, mario, tiles, pressed):&#xA;    def get_marios_image_index():&#xA;        if D.s not in get_boundaries(mario.rect, tiles):&#xA;            return 4&#xA;        return next(mario.frame_cycle) if {D.w, D.e} &amp;amp; pressed else 6&#xA;    screen.fill((85, 168, 255))&#xA;    mario.facing_left = (D.w in pressed) if {D.w, D.e} &amp;amp; pressed else mario.facing_left&#xA;    screen.blit(images[get_marios_image_index() + mario.facing_left * 9], mario.rect)&#xA;    for rect in tiles:&#xA;        screen.blit(images[18 if {*rect.topleft} &amp;amp; {0, (SIZE-1)*16} else 19], rect)&#xA;    pg.display.flip()&#xA;&#xA;if __name__ == &#39;__main__&#39;:&#xA;    main()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Pandas&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install pandas&#xA;import pandas as pd&#xA;from pandas import Series, DataFrame&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Series&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ordered dictionary with a name.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; Series([1, 2], index=[&#39;x&#39;, &#39;y&#39;], name=&#39;a&#39;)&#xA;x    1&#xA;y    2&#xA;Name: a, dtype: int64&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Sr&amp;gt; = Series(&amp;lt;list&amp;gt;)                         # Assigns RangeIndex starting at 0.&#xA;&amp;lt;Sr&amp;gt; = Series(&amp;lt;dict&amp;gt;)                         # Takes dictionary&#39;s keys for index.&#xA;&amp;lt;Sr&amp;gt; = Series(&amp;lt;dict/Series&amp;gt;, index=&amp;lt;list&amp;gt;)    # Only keeps items with keys specified in index.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;el&amp;gt; = &amp;lt;Sr&amp;gt;.loc[key]                          # Or: &amp;lt;Sr&amp;gt;.iloc[index]&#xA;&amp;lt;Sr&amp;gt; = &amp;lt;Sr&amp;gt;.loc[keys]                         # Or: &amp;lt;Sr&amp;gt;.iloc[indexes]&#xA;&amp;lt;Sr&amp;gt; = &amp;lt;Sr&amp;gt;.loc[from_key : to_key_inclusive]  # Or: &amp;lt;Sr&amp;gt;.iloc[from_i : to_i_exclusive]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;el&amp;gt; = &amp;lt;Sr&amp;gt;[key/index]                        # Or: &amp;lt;Sr&amp;gt;.key&#xA;&amp;lt;Sr&amp;gt; = &amp;lt;Sr&amp;gt;[keys/indexes]                     # Or: &amp;lt;Sr&amp;gt;[&amp;lt;key_range/range&amp;gt;]&#xA;&amp;lt;Sr&amp;gt; = &amp;lt;Sr&amp;gt;[bools]                            # Or: &amp;lt;Sr&amp;gt;.i/loc[bools]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Sr&amp;gt; = &amp;lt;Sr&amp;gt; &amp;gt;&amp;lt;== &amp;lt;el/Sr&amp;gt;                      # Returns a Series of bools.&#xA;&amp;lt;Sr&amp;gt; = &amp;lt;Sr&amp;gt; +-*/ &amp;lt;el/Sr&amp;gt;                      # Items with non-matching keys get value NaN.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Sr&amp;gt; = &amp;lt;Sr&amp;gt;.append(&amp;lt;Sr&amp;gt;)                      # Or: pd.concat(&amp;lt;coll_of_Sr&amp;gt;)&#xA;&amp;lt;Sr&amp;gt; = &amp;lt;Sr&amp;gt;.combine_first(&amp;lt;Sr&amp;gt;)               # Adds items that are not yet present.&#xA;&amp;lt;Sr&amp;gt;.update(&amp;lt;Sr&amp;gt;)                             # Updates items that are already present.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Sr&amp;gt;.plot.line/area/bar/pie/hist()            # Generates a Matplotlib plot.&#xA;matplotlib.pyplot.show()                      # Displays the plot. Also savefig(&amp;lt;path&amp;gt;).&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Series — Aggregate, Transform, Map:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;el&amp;gt; = &amp;lt;Sr&amp;gt;.sum/max/mean/idxmax/all()         # Or: &amp;lt;Sr&amp;gt;.agg(lambda &amp;lt;Sr&amp;gt;: &amp;lt;el&amp;gt;)&#xA;&amp;lt;Sr&amp;gt; = &amp;lt;Sr&amp;gt;.rank/diff/cumsum/ffill/interpl()  # Or: &amp;lt;Sr&amp;gt;.agg/transform(lambda &amp;lt;Sr&amp;gt;: &amp;lt;Sr&amp;gt;)&#xA;&amp;lt;Sr&amp;gt; = &amp;lt;Sr&amp;gt;.fillna(&amp;lt;el&amp;gt;)                      # Or: &amp;lt;Sr&amp;gt;.agg/transform/map(lambda &amp;lt;el&amp;gt;: &amp;lt;el&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; sr = Series([1, 2], index=[&#39;x&#39;, &#39;y&#39;])&#xA;x    1&#xA;y    2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;+-----------------+-------------+-------------+---------------+&#xA;|                 |    &#39;sum&#39;    |   [&#39;sum&#39;]   | {&#39;s&#39;: &#39;sum&#39;}  |&#xA;+-----------------+-------------+-------------+---------------+&#xA;| sr.apply(…)     |      3      |    sum  3   |     s  3      |&#xA;| sr.agg(…)       |             |             |               |&#xA;+-----------------+-------------+-------------+---------------+&#xA;&#xA;+-----------------+-------------+-------------+---------------+&#xA;|                 |    &#39;rank&#39;   |   [&#39;rank&#39;]  | {&#39;r&#39;: &#39;rank&#39;} |&#xA;+-----------------+-------------+-------------+---------------+&#xA;| sr.apply(…)     |             |      rank   |               |&#xA;| sr.agg(…)       |     x  1    |   x     1   |    r  x  1    |&#xA;| sr.transform(…) |     y  2    |   y     2   |       y  2    |&#xA;+-----------------+-------------+-------------+---------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Last result has a hierarchical index. Use &lt;code&gt;&#39;&amp;lt;Sr&amp;gt;[key_1, key_2]&#39;&lt;/code&gt; to get its values.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;DataFrame&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Table with labeled rows and columns.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; DataFrame([[1, 2], [3, 4]], index=[&#39;a&#39;, &#39;b&#39;], columns=[&#39;x&#39;, &#39;y&#39;])&#xA;   x  y&#xA;a  1  2&#xA;b  3  4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;DF&amp;gt;    = DataFrame(&amp;lt;list_of_rows&amp;gt;)           # Rows can be either lists, dicts or series.&#xA;&amp;lt;DF&amp;gt;    = DataFrame(&amp;lt;dict_of_columns&amp;gt;)        # Columns can be either lists, dicts or series.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;el&amp;gt;    = &amp;lt;DF&amp;gt;.loc[row_key, column_key]       # Or: &amp;lt;DF&amp;gt;.iloc[row_index, column_index]&#xA;&amp;lt;Sr/DF&amp;gt; = &amp;lt;DF&amp;gt;.loc[row_key/s]                 # Or: &amp;lt;DF&amp;gt;.iloc[row_index/es]&#xA;&amp;lt;Sr/DF&amp;gt; = &amp;lt;DF&amp;gt;.loc[:, column_key/s]           # Or: &amp;lt;DF&amp;gt;.iloc[:, column_index/es]&#xA;&amp;lt;DF&amp;gt;    = &amp;lt;DF&amp;gt;.loc[row_bools, column_bools]   # Or: &amp;lt;DF&amp;gt;.iloc[row_bools, column_bools]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Sr/DF&amp;gt; = &amp;lt;DF&amp;gt;[column_key/s]                  # Or: &amp;lt;DF&amp;gt;.column_key&#xA;&amp;lt;DF&amp;gt;    = &amp;lt;DF&amp;gt;[row_bools]                     # Keeps rows as specified by bools.&#xA;&amp;lt;DF&amp;gt;    = &amp;lt;DF&amp;gt;[&amp;lt;DF_of_bools&amp;gt;]                 # Assigns NaN to False values.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;DF&amp;gt;    = &amp;lt;DF&amp;gt; &amp;gt;&amp;lt;== &amp;lt;el/Sr/DF&amp;gt;                # Returns DF of bools. Sr is treated as a row.&#xA;&amp;lt;DF&amp;gt;    = &amp;lt;DF&amp;gt; +-*/ &amp;lt;el/Sr/DF&amp;gt;                # Items with non-matching keys get value NaN.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;DF&amp;gt;    = &amp;lt;DF&amp;gt;.set_index(column_key)          # Replaces row keys with values from a column.&#xA;&amp;lt;DF&amp;gt;    = &amp;lt;DF&amp;gt;.reset_index()                  # Moves row keys to a column named index.&#xA;&amp;lt;DF&amp;gt;    = &amp;lt;DF&amp;gt;.sort_index(ascending=True)     # Sorts rows by row keys.&#xA;&amp;lt;DF&amp;gt;    = &amp;lt;DF&amp;gt;.sort_values(column_key/s)      # Sorts rows by the passed column/s.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;DataFrame — Merge, Join, Concat:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; l = DataFrame([[1, 2], [3, 4]], index=[&#39;a&#39;, &#39;b&#39;], columns=[&#39;x&#39;, &#39;y&#39;])&#xA;   x  y&#xA;a  1  2&#xA;b  3  4&#xA;&amp;gt;&amp;gt;&amp;gt; r = DataFrame([[4, 5], [6, 7]], index=[&#39;b&#39;, &#39;c&#39;], columns=[&#39;y&#39;, &#39;z&#39;])&#xA;   y  z&#xA;b  4  5&#xA;c  6  7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;+------------------------+---------------+------------+------------+--------------------------+&#xA;|                        |    &#39;outer&#39;    |   &#39;inner&#39;  |   &#39;left&#39;   |       Description        |&#xA;+------------------------+---------------+------------+------------+--------------------------+&#xA;| l.merge(r, on=&#39;y&#39;,     |    x   y   z  | x   y   z  | x   y   z  | Joins/merges on column.  |&#xA;|            how=…)      | 0  1   2   .  | 3   4   5  | 1   2   .  | Also accepts left_on and |&#xA;|                        | 1  3   4   5  |            | 3   4   5  | right_on parameters.     |&#xA;|                        | 2  .   6   7  |            |            | Uses &#39;inner&#39; by default. |&#xA;+------------------------+---------------+------------+------------+--------------------------+&#xA;| l.join(r, lsuffix=&#39;l&#39;, |    x yl yr  z |            | x yl yr  z | Joins/merges on row keys.|&#xA;|           rsuffix=&#39;r&#39;, | a  1  2  .  . | x yl yr  z | 1  2  .  . | Uses &#39;left&#39; by default.  |&#xA;|           how=…)       | b  3  4  4  5 | 3  4  4  5 | 3  4  4  5 | If r is a series, it is  |&#xA;|                        | c  .  .  6  7 |            |            | treated as a column.     |&#xA;+------------------------+---------------+------------+------------+--------------------------+&#xA;| pd.concat([l, r],      |    x   y   z  |     y      |            | Adds rows at the bottom. |&#xA;|           axis=0,      | a  1   2   .  |     2      |            | Uses &#39;outer&#39; by default. |&#xA;|           join=…)      | b  3   4   .  |     4      |            | A series is treated as a |&#xA;|                        | b  .   4   5  |     4      |            | column. Use l.append(sr) |&#xA;|                        | c  .   6   7  |     6      |            | to add a row instead.    |&#xA;+------------------------+---------------+------------+------------+--------------------------+&#xA;| pd.concat([l, r],      |    x  y  y  z |            |            | Adds columns at the      |&#xA;|           axis=1,      | a  1  2  .  . | x  y  y  z |            | right end. Uses &#39;outer&#39;  |&#xA;|           join=…)      | b  3  4  4  5 | 3  4  4  5 |            | by default. A series is  |&#xA;|                        | c  .  .  6  7 |            |            | treated as a column.     |&#xA;+------------------------+---------------+------------+------------+--------------------------+&#xA;| l.combine_first(r)     |    x   y   z  |            |            | Adds missing rows and    |&#xA;|                        | a  1   2   .  |            |            | columns. Also updates    |&#xA;|                        | b  3   4   5  |            |            | items that contain NaN.  |&#xA;|                        | c  .   6   7  |            |            | R must be a DataFrame.   |&#xA;+------------------------+---------------+------------+------------+--------------------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;DataFrame — Aggregate, Transform, Map:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;Sr&amp;gt; = &amp;lt;DF&amp;gt;.sum/max/mean/idxmax/all()         # Or: &amp;lt;DF&amp;gt;.apply/agg(lambda &amp;lt;Sr&amp;gt;: &amp;lt;el&amp;gt;)&#xA;&amp;lt;DF&amp;gt; = &amp;lt;DF&amp;gt;.rank/diff/cumsum/ffill/interpl()  # Or: &amp;lt;DF&amp;gt;.apply/agg/transform(lambda &amp;lt;Sr&amp;gt;: &amp;lt;Sr&amp;gt;)&#xA;&amp;lt;DF&amp;gt; = &amp;lt;DF&amp;gt;.fillna(&amp;lt;el&amp;gt;)                      # Or: &amp;lt;DF&amp;gt;.applymap(lambda &amp;lt;el&amp;gt;: &amp;lt;el&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;All operations operate on columns by default. Pass &lt;code&gt;&#39;axis=1&#39;&lt;/code&gt; to process the rows instead.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; df = DataFrame([[1, 2], [3, 4]], index=[&#39;a&#39;, &#39;b&#39;], columns=[&#39;x&#39;, &#39;y&#39;])&#xA;   x  y&#xA;a  1  2&#xA;b  3  4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;+-----------------+-------------+-------------+---------------+&#xA;|                 |    &#39;sum&#39;    |   [&#39;sum&#39;]   | {&#39;x&#39;: &#39;sum&#39;}  |&#xA;+-----------------+-------------+-------------+---------------+&#xA;| df.apply(…)     |             |       x  y  |               |&#xA;| df.agg(…)       |     x  4    |  sum  4  6  |     x  4      |&#xA;|                 |     y  6    |             |               |&#xA;+-----------------+-------------+-------------+---------------+&#xA;&#xA;+-----------------+-------------+-------------+---------------+&#xA;|                 |    &#39;rank&#39;   |   [&#39;rank&#39;]  | {&#39;x&#39;: &#39;rank&#39;} |&#xA;+-----------------+-------------+-------------+---------------+&#xA;| df.apply(…)     |      x  y   |      x    y |        x      |&#xA;| df.agg(…)       |   a  1  1   |   rank rank |     a  1      |&#xA;| df.transform(…) |   b  2  2   | a    1    1 |     b  2      |&#xA;|                 |             | b    2    2 |               |&#xA;+-----------------+-------------+-------------+---------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use &lt;code&gt;&#39;&amp;lt;DF&amp;gt;[col_key_1, col_key_2][row_key]&#39;&lt;/code&gt; to get the fifth result&#39;s values.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;DataFrame — Plot, Encode, Decode:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import matplotlib.pyplot as plt&#xA;&amp;lt;DF&amp;gt;.plot.line/bar/hist/scatter([x=column_key, y=column_key/s]); plt.show()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;DF&amp;gt; = pd.read_json/html(&#39;&amp;lt;str/path/url&amp;gt;&#39;)&#xA;&amp;lt;DF&amp;gt; = pd.read_csv/pickle/excel(&#39;&amp;lt;path/url&amp;gt;&#39;)&#xA;&amp;lt;DF&amp;gt; = pd.read_sql(&#39;&amp;lt;table_name/query&amp;gt;&#39;, &amp;lt;connection&amp;gt;)&#xA;&amp;lt;DF&amp;gt; = pd.read_clipboard()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;dict&amp;gt; = &amp;lt;DF&amp;gt;.to_dict([&#39;d/l/s/sp/r/i&#39;])&#xA;&amp;lt;str&amp;gt;  = &amp;lt;DF&amp;gt;.to_json/html/csv/markdown/latex([&amp;lt;path&amp;gt;])&#xA;&amp;lt;DF&amp;gt;.to_pickle/excel(&amp;lt;path&amp;gt;)&#xA;&amp;lt;DF&amp;gt;.to_sql(&#39;&amp;lt;table_name&amp;gt;&#39;, &amp;lt;connection&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GroupBy&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Object that groups together rows of a dataframe based on the value of the passed column.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; df = DataFrame([[1, 2, 3], [4, 5, 6], [7, 8, 6]], index=list(&#39;abc&#39;), columns=list(&#39;xyz&#39;))&#xA;&amp;gt;&amp;gt;&amp;gt; df.groupby(&#39;z&#39;).get_group(6)&#xA;   x  y&#xA;b  4  5&#xA;c  7  8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;GB&amp;gt; = &amp;lt;DF&amp;gt;.groupby(column_key/s)             # DF is split into groups based on passed column.&#xA;&amp;lt;DF&amp;gt; = &amp;lt;GB&amp;gt;.apply(&amp;lt;func&amp;gt;)                     # Maps each group. Func can return DF, Sr or el.&#xA;&amp;lt;GB&amp;gt; = &amp;lt;GB&amp;gt;[column_key]                       # A single column GB. All operations return a Sr.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;GroupBy — Aggregate, Transform, Map:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;DF&amp;gt; = &amp;lt;GB&amp;gt;.sum/max/mean/idxmax/all()         # Or: &amp;lt;GB&amp;gt;.agg(lambda &amp;lt;Sr&amp;gt;: &amp;lt;el&amp;gt;)&#xA;&amp;lt;DF&amp;gt; = &amp;lt;GB&amp;gt;.rank/diff/cumsum/ffill()          # Or: &amp;lt;GB&amp;gt;.transform(lambda &amp;lt;Sr&amp;gt;: &amp;lt;Sr&amp;gt;)&#xA;&amp;lt;DF&amp;gt; = &amp;lt;GB&amp;gt;.fillna(&amp;lt;el&amp;gt;)                      # Or: &amp;lt;GB&amp;gt;.transform(lambda &amp;lt;Sr&amp;gt;: &amp;lt;Sr&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; gb = df.groupby(&#39;z&#39;)&#xA;      x  y  z&#xA;3: a  1  2  3&#xA;6: b  4  5  6&#xA;   c  7  8  6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;+-----------------+-------------+-------------+-------------+---------------+&#xA;|                 |    &#39;sum&#39;    |    &#39;rank&#39;   |   [&#39;rank&#39;]  | {&#39;x&#39;: &#39;rank&#39;} |&#xA;+-----------------+-------------+-------------+-------------+---------------+&#xA;| gb.agg(…)       |      x   y  |      x  y   |      x    y |        x      |&#xA;|                 |  z          |   a  1  1   |   rank rank |     a  1      |&#xA;|                 |  3   1   2  |   b  1  1   | a    1    1 |     b  1      |&#xA;|                 |  6  11  13  |   c  2  2   | b    1    1 |     c  2      |&#xA;|                 |             |             | c    2    2 |               |&#xA;+-----------------+-------------+-------------+-------------+---------------+&#xA;| gb.transform(…) |      x   y  |      x  y   |             |               |&#xA;|                 |  a   1   2  |   a  1  1   |             |               |&#xA;|                 |  b  11  13  |   b  1  1   |             |               |&#xA;|                 |  c  11  13  |   c  2  2   |             |               |&#xA;+-----------------+-------------+-------------+-------------+---------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rolling&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Object for rolling window calculations.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;R_Sr/R_DF/R_GB&amp;gt; = &amp;lt;Sr/DF/GB&amp;gt;.rolling(window_size)  # Also: `min_periods=None, center=False`.&#xA;&amp;lt;R_Sr/R_DF&amp;gt;      = &amp;lt;R_DF/R_GB&amp;gt;[column_key/s]        # Or: &amp;lt;R&amp;gt;.column_key&#xA;&amp;lt;Sr/DF/DF&amp;gt;       = &amp;lt;R_Sr/R_DF/R_GB&amp;gt;.sum/max/mean()  # Or: &amp;lt;R&amp;gt;.apply/agg(&amp;lt;agg_func/str&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Plotly&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install plotly kaleido&#xA;from plotly.express import line&#xA;&amp;lt;Figure&amp;gt; = line(&amp;lt;DF&amp;gt;, x=&amp;lt;col_name&amp;gt;, y=&amp;lt;col_name&amp;gt;)        # Or: line(x=&amp;lt;list&amp;gt;, y=&amp;lt;list&amp;gt;)&#xA;&amp;lt;Figure&amp;gt;.update_layout(margin=dict(t=0, r=0, b=0, l=0))  # Or: paper_bgcolor=&#39;rgba(0, 0, 0, 0)&#39;&#xA;&amp;lt;Figure&amp;gt;.write_html/json/image(&#39;&amp;lt;path&amp;gt;&#39;)                 # Also: &amp;lt;Figure&amp;gt;.show()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Covid deaths by continent:&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/web/covid_deaths.png&#34; alt=&#34;Covid Deaths&#34;&gt;&lt;/p&gt; &#xA;&lt;div id=&#34;2a950764-39fc-416d-97fe-0a6226a3095f&#34; class=&#34;plotly-graph-div&#34; style=&#34;height:340px; width:100%;&#34;&gt;&lt;/div&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;covid = pd.read_csv(&#39;https://covid.ourworldindata.org/data/owid-covid-data.csv&#39;,&#xA;                    usecols=[&#39;iso_code&#39;, &#39;date&#39;, &#39;total_deaths&#39;, &#39;population&#39;])&#xA;continents = pd.read_csv(&#39;https://gist.githubusercontent.com/stevewithington/20a69c0b6d2ff&#39;&#xA;                         &#39;846ea5d35e5fc47f26c/raw/country-and-continent-codes-list-csv.csv&#39;,&#xA;                         usecols=[&#39;Three_Letter_Country_Code&#39;, &#39;Continent_Name&#39;])&#xA;df = pd.merge(covid, continents, left_on=&#39;iso_code&#39;, right_on=&#39;Three_Letter_Country_Code&#39;)&#xA;df = df.groupby([&#39;Continent_Name&#39;, &#39;date&#39;]).sum().reset_index()&#xA;df[&#39;Total Deaths per Million&#39;] = df.total_deaths * 1e6 / df.population&#xA;df = df[df.date &amp;gt; &#39;2020-03-14&#39;]&#xA;df = df.rename({&#39;date&#39;: &#39;Date&#39;, &#39;Continent_Name&#39;: &#39;Continent&#39;}, axis=&#39;columns&#39;)&#xA;line(df, x=&#39;Date&#39;, y=&#39;Total Deaths per Million&#39;, color=&#39;Continent&#39;).show()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Confirmed covid cases, Dow Jones, Gold, and Bitcoin price:&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gto76/python-cheatsheet/main/web/covid_cases.png&#34; alt=&#34;Covid Cases&#34;&gt;&lt;/p&gt; &#xA;&lt;div id=&#34;e23ccacc-a456-478b-b467-7282a2165921&#34; class=&#34;plotly-graph-div&#34; style=&#34;height:315px; width:100%;&#34;&gt;&lt;/div&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd&#xA;import plotly.graph_objects as go&#xA;&#xA;def main():&#xA;    display_data(wrangle_data(*scrape_data()))&#xA;&#xA;def scrape_data():&#xA;    def scrape_covid():&#xA;        url = &#39;https://covid.ourworldindata.org/data/owid-covid-data.csv&#39;&#xA;        df = pd.read_csv(url, usecols=[&#39;location&#39;, &#39;date&#39;, &#39;total_cases&#39;])&#xA;        return df[df.location == &#39;World&#39;].set_index(&#39;date&#39;).total_cases&#xA;    def scrape_yahoo(slug):&#xA;        url = f&#39;https://query1.finance.yahoo.com/v7/finance/download/{slug}&#39; + \&#xA;              &#39;?period1=1579651200&amp;amp;period2=9999999999&amp;amp;interval=1d&amp;amp;events=history&#39;&#xA;        df = pd.read_csv(url, usecols=[&#39;Date&#39;, &#39;Close&#39;])&#xA;        return df.set_index(&#39;Date&#39;).Close&#xA;    out = scrape_covid(), scrape_yahoo(&#39;BTC-USD&#39;), scrape_yahoo(&#39;GC=F&#39;), scrape_yahoo(&#39;^DJI&#39;)&#xA;    return map(pd.Series.rename, out, [&#39;Total Cases&#39;, &#39;Bitcoin&#39;, &#39;Gold&#39;, &#39;Dow Jones&#39;])&#xA;&#xA;def wrangle_data(covid, bitcoin, gold, dow):&#xA;    df = pd.concat([bitcoin, gold, dow], axis=1)  # Joins columns on dates.&#xA;    df = df.sort_index().interpolate()            # Sorts by date and interpolates NaN-s.&#xA;    df = df.loc[&#39;2020-02-23&#39;:]                    # Discards rows before &#39;2020-02-23&#39;.&#xA;    df = (df / df.iloc[0]) * 100                  # Calculates percentages relative to day 1.&#xA;    df = df.join(covid)                           # Adds column with covid cases.&#xA;    return df.sort_values(df.index[-1], axis=1)   # Sorts columns by last day&#39;s value.&#xA;&#xA;def display_data(df):&#xA;    figure = go.Figure()&#xA;    for col_name in reversed(df.columns):&#xA;        yaxis = &#39;y1&#39; if col_name == &#39;Total Cases&#39; else &#39;y2&#39;&#xA;        trace = go.Scatter(x=df.index, y=df[col_name], name=col_name, yaxis=yaxis)&#xA;        figure.add_trace(trace)&#xA;    figure.update_layout(&#xA;        yaxis1=dict(title=&#39;Total Cases&#39;, rangemode=&#39;tozero&#39;),&#xA;        yaxis2=dict(title=&#39;%&#39;, rangemode=&#39;tozero&#39;, overlaying=&#39;y&#39;, side=&#39;right&#39;),&#xA;        legend=dict(x=1.1),&#xA;        height=450&#xA;    ).show()&#xA;&#xA;if __name__ == &#39;__main__&#39;:&#xA;    main()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;PySimpleGUI&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install PySimpleGUI&#xA;import PySimpleGUI as sg&#xA;layout = [[sg.Text(&#34;What&#39;s your name?&#34;)], [sg.Input()], [sg.Button(&#39;Ok&#39;)]]&#xA;window = sg.Window(&#39;Window Title&#39;, layout)&#xA;event, values = window.read()&#xA;print(f&#39;Hello {values[0]}!&#39; if event == &#39;Ok&#39; else &#39;&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Appendix&lt;/h2&gt; &#xA;&lt;h3&gt;Cython&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Library that compiles Python code into C.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# $ pip3 install cython&#xA;import pyximport; pyximport.install()&#xA;import &amp;lt;cython_script&amp;gt;&#xA;&amp;lt;cython_script&amp;gt;.main()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Definitions:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;All &lt;code&gt;&#39;cdef&#39;&lt;/code&gt; definitions are optional, but they contribute to the speed-up.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Script needs to be saved with a &lt;code&gt;&#39;pyx&#39;&lt;/code&gt; extension.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cdef &amp;lt;ctype&amp;gt; &amp;lt;var_name&amp;gt; = &amp;lt;el&amp;gt;&#xA;cdef &amp;lt;ctype&amp;gt;[n_elements] &amp;lt;var_name&amp;gt; = [&amp;lt;el_1&amp;gt;, &amp;lt;el_2&amp;gt;, ...]&#xA;cdef &amp;lt;ctype/void&amp;gt; &amp;lt;func_name&amp;gt;(&amp;lt;ctype&amp;gt; &amp;lt;arg_name_1&amp;gt;, ...):&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cdef class &amp;lt;class_name&amp;gt;:&#xA;    cdef public &amp;lt;ctype&amp;gt; &amp;lt;attr_name&amp;gt;&#xA;    def __init__(self, &amp;lt;ctype&amp;gt; &amp;lt;arg_name&amp;gt;):&#xA;        self.&amp;lt;attr_name&amp;gt; = &amp;lt;arg_name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cdef enum &amp;lt;enum_name&amp;gt;: &amp;lt;member_name_1&amp;gt;, &amp;lt;member_name_2&amp;gt;, ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;PyInstaller&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pip3 install pyinstaller&#xA;$ pyinstaller script.py                        # Compiles into &#39;./dist/script&#39; directory.&#xA;$ pyinstaller script.py --onefile              # Compiles into &#39;./dist/script&#39; console app.&#xA;$ pyinstaller script.py --windowed             # Compiles into &#39;./dist/script&#39; windowed app.&#xA;$ pyinstaller script.py --add-data &#39;&amp;lt;path&amp;gt;:.&#39;  # Adds file to the root of the executable.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;File paths need to be updated to &lt;code&gt;&#39;os.path.join(sys._MEIPASS, &amp;lt;path&amp;gt;)&#39;&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Basic Script Template&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#!/usr/bin/env python3&#xA;#&#xA;# Usage: .py&#xA;#&#xA;&#xA;from sys import argv, exit&#xA;from collections import defaultdict, namedtuple&#xA;from dataclasses import make_dataclass&#xA;from enum import Enum&#xA;import functools as ft, itertools as it, operator as op, re&#xA;&#xA;&#xA;def main():&#xA;    pass&#xA;&#xA;&#xA;###&#xA;##  UTIL&#xA;#&#xA;&#xA;def read_file(filename):&#xA;    with open(filename, encoding=&#39;utf-8&#39;) as file:&#xA;        return file.readlines()&#xA;&#xA;&#xA;if __name__ == &#39;__main__&#39;:&#xA;    main()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Index&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Only available in the &lt;a href=&#34;https://transactions.sendowl.com/products/78175486/4422834F/view&#34;&gt;PDF&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ctrl+F / ⌘F is usually sufficient.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Searching &lt;code&gt;&#39;#&amp;lt;title&amp;gt;&#39;&lt;/code&gt; on the &lt;a href=&#34;https://gto76.github.io/python-cheatsheet/&#34;&gt;webpage&lt;/a&gt; will limit the search to the titles.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>mlflow/mlflow</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/mlflow/mlflow</id>
    <link href="https://github.com/mlflow/mlflow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open source platform for the machine learning lifecycle&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;============================================= MLflow: A Machine Learning Lifecycle Platform&lt;/h1&gt; &#xA;&lt;p&gt;MLflow is a platform to streamline machine learning development, including tracking experiments, packaging code into reproducible runs, and sharing and deploying models. MLflow offers a set of lightweight APIs that can be used with any existing machine learning application or library (TensorFlow, PyTorch, XGBoost, etc), wherever you currently run ML code (e.g. in notebooks, standalone applications or the cloud). MLflow&#39;s current components are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;MLflow Tracking &amp;lt;https://mlflow.org/docs/latest/tracking.html&amp;gt;&lt;/code&gt;_: An API to log parameters, code, and results in machine learning experiments and compare them using an interactive UI.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MLflow Projects &amp;lt;https://mlflow.org/docs/latest/projects.html&amp;gt;&lt;/code&gt;_: A code packaging format for reproducible runs using Conda and Docker, so you can share your ML code with others.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MLflow Models &amp;lt;https://mlflow.org/docs/latest/models.html&amp;gt;&lt;/code&gt;_: A model packaging format and tools that let you easily deploy the same model (from any ML library) to batch and real-time scoring on platforms such as Docker, Apache Spark, Azure ML and AWS SageMaker.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MLflow Model Registry &amp;lt;https://mlflow.org/docs/latest/model-registry.html&amp;gt;&lt;/code&gt;_: A centralized model store, set of APIs, and UI, to collaboratively manage the full lifecycle of MLflow Models.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;|docs| |labeling| |examples| |cross-version-tests| |r-devel| |pypi| |conda-forge| |cran| |maven| |license| |downloads| |slack| |twitter|&lt;/p&gt; &#xA;&lt;p&gt;.. |docs| image:: &lt;a href=&#34;https://img.shields.io/badge/docs-latest-success.svg?style=for-the-badge&#34;&gt;https://img.shields.io/badge/docs-latest-success.svg?style=for-the-badge&lt;/a&gt; :target: &lt;a href=&#34;https://mlflow.org/docs/latest/index.html&#34;&gt;https://mlflow.org/docs/latest/index.html&lt;/a&gt; :alt: Latest Docs .. |labeling| image:: &lt;a href=&#34;https://img.shields.io/github/workflow/status/mlflow/mlflow/Labeling?label=Labeling&amp;amp;style=for-the-badge&amp;amp;logo=github&#34;&gt;https://img.shields.io/github/workflow/status/mlflow/mlflow/Labeling?label=Labeling&amp;amp;style=for-the-badge&amp;amp;logo=github&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/mlflow/mlflow/actions?query=workflow%3ALabeling&#34;&gt;https://github.com/mlflow/mlflow/actions?query=workflow%3ALabeling&lt;/a&gt; :alt: Labeling Action Status .. |examples| image:: &lt;a href=&#34;https://img.shields.io/github/workflow/status/mlflow/mlflow/Examples?event=schedule&amp;amp;label=Examples&amp;amp;style=for-the-badge&amp;amp;logo=github&#34;&gt;https://img.shields.io/github/workflow/status/mlflow/mlflow/Examples?event=schedule&amp;amp;label=Examples&amp;amp;style=for-the-badge&amp;amp;logo=github&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/mlflow/mlflow/actions?query=workflow%3AExamples+event%3Aschedule&#34;&gt;https://github.com/mlflow/mlflow/actions?query=workflow%3AExamples+event%3Aschedule&lt;/a&gt; :alt: Examples Action Status .. |cross-version-tests| image:: &lt;a href=&#34;https://img.shields.io/github/workflow/status/mlflow/mlflow/Cross%20version%20tests?event=schedule&amp;amp;label=Cross%20version%20tests&amp;amp;style=for-the-badge&amp;amp;logo=github&#34;&gt;https://img.shields.io/github/workflow/status/mlflow/mlflow/Cross%20version%20tests?event=schedule&amp;amp;label=Cross%20version%20tests&amp;amp;style=for-the-badge&amp;amp;logo=github&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/mlflow/mlflow/actions?query=workflow%3ACross%2Bversion%2Btests+event%3Aschedule&#34;&gt;https://github.com/mlflow/mlflow/actions?query=workflow%3ACross%2Bversion%2Btests+event%3Aschedule&lt;/a&gt; .. |r-devel| image:: &lt;a href=&#34;https://img.shields.io/github/workflow/status/mlflow/mlflow/R?event=schedule&amp;amp;label=r-devel&amp;amp;style=for-the-badge&amp;amp;logo=github&#34;&gt;https://img.shields.io/github/workflow/status/mlflow/mlflow/R?event=schedule&amp;amp;label=r-devel&amp;amp;style=for-the-badge&amp;amp;logo=github&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/mlflow/mlflow/actions?query=workflow%3AR+event%3Aschedule&#34;&gt;https://github.com/mlflow/mlflow/actions?query=workflow%3AR+event%3Aschedule&lt;/a&gt; :alt: Examples Action Status .. |pypi| image:: &lt;a href=&#34;https://img.shields.io/pypi/v/mlflow.svg?style=for-the-badge&amp;amp;logo=pypi&amp;amp;logoColor=white&#34;&gt;https://img.shields.io/pypi/v/mlflow.svg?style=for-the-badge&amp;amp;logo=pypi&amp;amp;logoColor=white&lt;/a&gt; :target: &lt;a href=&#34;https://pypi.org/project/mlflow/&#34;&gt;https://pypi.org/project/mlflow/&lt;/a&gt; :alt: Latest Python Release .. |conda-forge| image:: &lt;a href=&#34;https://img.shields.io/conda/vn/conda-forge/mlflow.svg?style=for-the-badge&amp;amp;logo=anaconda&#34;&gt;https://img.shields.io/conda/vn/conda-forge/mlflow.svg?style=for-the-badge&amp;amp;logo=anaconda&lt;/a&gt; :target: &lt;a href=&#34;https://anaconda.org/conda-forge/mlflow&#34;&gt;https://anaconda.org/conda-forge/mlflow&lt;/a&gt; :alt: Latest Conda Release .. |cran| image:: &lt;a href=&#34;https://img.shields.io/cran/v/mlflow.svg?style=for-the-badge&amp;amp;logo=r&#34;&gt;https://img.shields.io/cran/v/mlflow.svg?style=for-the-badge&amp;amp;logo=r&lt;/a&gt; :target: &lt;a href=&#34;https://cran.r-project.org/package=mlflow&#34;&gt;https://cran.r-project.org/package=mlflow&lt;/a&gt; :alt: Latest CRAN Release .. |maven| image:: &lt;a href=&#34;https://img.shields.io/maven-central/v/org.mlflow/mlflow-parent.svg?style=for-the-badge&amp;amp;logo=apache-maven&#34;&gt;https://img.shields.io/maven-central/v/org.mlflow/mlflow-parent.svg?style=for-the-badge&amp;amp;logo=apache-maven&lt;/a&gt; :target: &lt;a href=&#34;https://mvnrepository.com/artifact/org.mlflow&#34;&gt;https://mvnrepository.com/artifact/org.mlflow&lt;/a&gt; :alt: Maven Central .. |license| image:: &lt;a href=&#34;https://img.shields.io/badge/license-Apache%202-brightgreen.svg?style=for-the-badge&amp;amp;logo=apache&#34;&gt;https://img.shields.io/badge/license-Apache%202-brightgreen.svg?style=for-the-badge&amp;amp;logo=apache&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/mlflow/mlflow/raw/master/LICENSE.txt&#34;&gt;https://github.com/mlflow/mlflow/blob/master/LICENSE.txt&lt;/a&gt; :alt: Apache 2 License .. |downloads| image:: &lt;a href=&#34;https://img.shields.io/pypi/dw/mlflow?style=for-the-badge&amp;amp;logo=pypi&amp;amp;logoColor=white&#34;&gt;https://img.shields.io/pypi/dw/mlflow?style=for-the-badge&amp;amp;logo=pypi&amp;amp;logoColor=white&lt;/a&gt; :target: &lt;a href=&#34;https://pepy.tech/project/mlflow&#34;&gt;https://pepy.tech/project/mlflow&lt;/a&gt; :alt: Total Downloads .. |slack| image:: &lt;a href=&#34;https://img.shields.io/badge/slack-@mlflow--users-CF0E5B.svg?logo=slack&amp;amp;logoColor=white&amp;amp;labelColor=3F0E40&amp;amp;style=for-the-badge&#34;&gt;https://img.shields.io/badge/slack-@mlflow--users-CF0E5B.svg?logo=slack&amp;amp;logoColor=white&amp;amp;labelColor=3F0E40&amp;amp;style=for-the-badge&lt;/a&gt; :target: &lt;code&gt;Slack&lt;/code&gt;_ :alt: Slack .. |twitter| image:: &lt;a href=&#34;https://img.shields.io/twitter/follow/MLflow?style=for-the-badge&amp;amp;labelColor=00ACEE&amp;amp;logo=twitter&amp;amp;logoColor=white&#34;&gt;https://img.shields.io/twitter/follow/MLflow?style=for-the-badge&amp;amp;labelColor=00ACEE&amp;amp;logo=twitter&amp;amp;logoColor=white&lt;/a&gt; :target: &lt;a href=&#34;https://twitter.com/MLflow&#34;&gt;https://twitter.com/MLflow&lt;/a&gt; :alt: Account Twitter&lt;/p&gt; &#xA;&lt;p&gt;.. _Slack: &lt;a href=&#34;https://join.slack.com/t/mlflow-users/shared_invite/zt-g6qwro5u-odM7pRnZxNX_w56mcsHp8g&#34;&gt;https://join.slack.com/t/mlflow-users/shared_invite/zt-g6qwro5u-odM7pRnZxNX_w56mcsHp8g&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;Install MLflow from PyPI via &lt;code&gt;pip install mlflow&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;MLflow requires &lt;code&gt;conda&lt;/code&gt; to be on the &lt;code&gt;PATH&lt;/code&gt; for the projects feature.&lt;/p&gt; &#xA;&lt;p&gt;Nightly snapshots of MLflow master are also available &lt;code&gt;here &amp;lt;https://mlflow-snapshots.s3-us-west-2.amazonaws.com/&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;Install a lower dependency subset of MLflow from PyPI via &lt;code&gt;pip install mlflow-skinny&lt;/code&gt; Extra dependencies can be added per desired scenario. For example, &lt;code&gt;pip install mlflow-skinny pandas numpy&lt;/code&gt; allows for mlflow.pyfunc.log_model support.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Official documentation for MLflow can be found at &lt;a href=&#34;https://mlflow.org/docs/latest/index.html&#34;&gt;https://mlflow.org/docs/latest/index.html&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;The current MLflow Roadmap is available at &lt;a href=&#34;https://github.com/mlflow/mlflow/milestone/3&#34;&gt;https://github.com/mlflow/mlflow/milestone/3&lt;/a&gt;. We are seeking contributions to all of our roadmap items with the &lt;code&gt;help wanted&lt;/code&gt; label. Please see the &lt;code&gt;Contributing&lt;/code&gt;_ section for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;For help or questions about MLflow usage (e.g. &#34;how do I do X?&#34;) see the &lt;code&gt;docs &amp;lt;https://mlflow.org/docs/latest/index.html&amp;gt;&lt;/code&gt;_ or &lt;code&gt;Stack Overflow &amp;lt;https://stackoverflow.com/questions/tagged/mlflow&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;To report a bug, file a documentation issue, or submit a feature request, please open a GitHub issue.&lt;/p&gt; &#xA;&lt;p&gt;For release announcements and other discussions, please subscribe to our mailing list (&lt;a href=&#34;mailto:mlflow-users@googlegroups.com&#34;&gt;mlflow-users@googlegroups.com&lt;/a&gt;) or join us on &lt;code&gt;Slack&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;h2&gt;Running a Sample App With the Tracking API&lt;/h2&gt; &#xA;&lt;p&gt;The programs in &lt;code&gt;examples&lt;/code&gt; use the MLflow Tracking API. For instance, run::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python examples/quickstart/mlflow_tracking.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This program will use &lt;code&gt;MLflow Tracking API &amp;lt;https://mlflow.org/docs/latest/tracking.html&amp;gt;&lt;/code&gt;_, which logs tracking data in &lt;code&gt;./mlruns&lt;/code&gt;. This can then be viewed with the Tracking UI.&lt;/p&gt; &#xA;&lt;h2&gt;Launching the Tracking UI&lt;/h2&gt; &#xA;&lt;p&gt;The MLflow Tracking UI will show runs logged in &lt;code&gt;./mlruns&lt;/code&gt; at &lt;code&gt;&amp;lt;http://localhost:5000&amp;gt;&lt;/code&gt;_. Start it with::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mlflow ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Running &lt;code&gt;mlflow ui&lt;/code&gt; from within a clone of MLflow is not recommended - doing so will run the dev UI from source. We recommend running the UI from a different working directory, specifying a backend store via the &lt;code&gt;--backend-store-uri&lt;/code&gt; option. Alternatively, see instructions for running the dev UI in the &lt;code&gt;contributor guide &amp;lt;CONTRIBUTING.rst&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;h2&gt;Running a Project from a URI&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;mlflow run&lt;/code&gt; command lets you run a project packaged with a MLproject file from a local path or a Git URI::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mlflow run examples/sklearn_elasticnet_wine -P alpha=0.4&#xA;&#xA;mlflow run https://github.com/mlflow/mlflow-example.git -P alpha=0.4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;code&gt;examples/sklearn_elasticnet_wine&lt;/code&gt; for a sample project with an MLproject file.&lt;/p&gt; &#xA;&lt;h2&gt;Saving and Serving Models&lt;/h2&gt; &#xA;&lt;p&gt;To illustrate managing models, the &lt;code&gt;mlflow.sklearn&lt;/code&gt; package can log scikit-learn models as MLflow artifacts and then load them again for serving. There is an example training application in &lt;code&gt;examples/sklearn_logistic_regression/train.py&lt;/code&gt; that you can run as follows::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ python examples/sklearn_logistic_regression/train.py&#xA;Score: 0.666&#xA;Model saved in run &amp;lt;run-id&amp;gt;&#xA;&#xA;$ mlflow models serve --model-uri runs:/&amp;lt;run-id&amp;gt;/model&#xA;&#xA;$ curl -d &#39;{&#34;columns&#34;:[0],&#34;index&#34;:[0,1],&#34;data&#34;:[[1],[-1]]}&#39; -H &#39;Content-Type: application/json&#39;  localhost:5000/invocations&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We happily welcome contributions to MLflow. We are also seeking contributions to items on the &lt;code&gt;MLflow Roadmap &amp;lt;https://github.com/mlflow/mlflow/milestone/3&amp;gt;&lt;/code&gt;&lt;em&gt;. Please see our &lt;code&gt;contribution guide &amp;lt;CONTRIBUTING.rst&amp;gt;&lt;/code&gt;&lt;/em&gt; to learn more about contributing to MLflow.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>thuml/Transfer-Learning-Library</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/thuml/Transfer-Learning-Library</id>
    <link href="https://github.com/thuml/Transfer-Learning-Library" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Transfer Learning Library for Domain Adaptation, Task Adaptation, and Domain Generalization&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://github.com/thuml/Transfer-Learning-Library/raw/master/TransLearn.png&#34;&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;TLlib&lt;/em&gt; is an open-source and well-documented library for Transfer Learning. It is based on pure PyTorch with high performance and friendly API. Our code is pythonic, and the design is consistent with torchvision. You can easily develop new algorithms, or readily apply existing algorithms.&lt;/p&gt; &#xA;&lt;p&gt;The currently supported algorithms include:&lt;/p&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thuml/Transfer-Learning-Library/master/examples/domain_adaptation/image_classification&#34;&gt;Domain Adaptation for Classification&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1505.07818&#34;&gt;Domain Adversarial Neural Network (DANN)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/pdf/1502.02791&#34;&gt;Deep Adaptation Network (DAN)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1605.06636&#34;&gt;Joint Adaptation Network (JAN)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/pdf/1702.05464.pdf&#34;&gt;Adversarial Discriminative Domain Adaptation (ADDA)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1705.10667&#34;&gt;Conditional Domain Adversarial Network (CDAN)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1712.02560&#34;&gt;Maximum Classifier Discrepancy (MCD)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/pdf/1811.07456v2.pdf&#34;&gt;Adaptive Feature Norm (AFN)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1904.05801&#34;&gt;Margin Disparity Discrepancy (MDD)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ise.thss.tsinghua.edu.cn/~mlong/doc/batch-spectral-penalization-icml19.pdf&#34;&gt;Batch Spectral Penalization (BSP)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1912.03699&#34;&gt;Minimum Class Confusion (MCC)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thuml/Transfer-Learning-Library/master/examples/domain_adaptation/partial_domain_adaptation/&#34;&gt;Partial Domain Adaptation&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1505.07818&#34;&gt;Domain Adversarial Neural Network (DANN)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1808.04205&#34;&gt;Partial Adversarial Domain Adaptation (PADA)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1803.09210&#34;&gt;Importance Weighted Adversarial Nets (IWAN)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/pdf/1811.07456v2.pdf&#34;&gt;Adaptive Feature Norm (AFN)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thuml/Transfer-Learning-Library/master/examples/domain_adaptation/openset_domain_adaptation/&#34;&gt;Open-set Domain Adaptation&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1804.10427&#34;&gt;Open Set Domain Adaptation (OSBP)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thuml/Transfer-Learning-Library/master/examples/domain_adaptation/semantic_segmentation/&#34;&gt;Domain Adaptation for Semantic Segmentation&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/pdf/1703.10593.pdf&#34;&gt;Cycle-Consistent Adversarial Networks (CycleGAN)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1711.03213&#34;&gt;CyCADA: Cycle-Consistent Adversarial Domain Adaptation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1811.12833&#34;&gt;Adversarial Entropy Minimization (ADVENT)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2004.05498&#34;&gt;Fourier Domain Adaptation (FDA)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thuml/Transfer-Learning-Library/master/examples/domain_adaptation/keypoint_detection&#34;&gt;Domain Adaptation for Keypoint Detection&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ise.thss.tsinghua.edu.cn/~mlong/doc/regressive-domain-adaptation-cvpr21.pdf&#34;&gt;Regressive Domain Adaptation for Unsupervised Keypoint Detection (RegDA, CVPR 2021)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thuml/Transfer-Learning-Library/master/examples/domain_adaptation/re_identification/&#34;&gt;Domain Adaptation for Person Re-identification&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openaccess.thecvf.com/content_ECCV_2018/papers/Xingang_Pan_Two_at_Once_ECCV_2018_paper.pdf&#34;&gt;Two at Once: Enhancing Learning and Generalization Capacities via IBN-Net (IBN-Net, ECCV 2018)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2001.01526&#34;&gt;Mutual Mean-Teaching: Pseudo Label Refinery for Unsupervised Domain Adaptation on Person Re-identification (MMT, ICLR 2020)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/pdf/1811.10551.pdf&#34;&gt;Similarity Preserving Generative Adversarial Network (SPGAN, CVPR 2018)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thuml/Transfer-Learning-Library/master/examples/task_adaptation/image_classification/&#34;&gt;Task Adaptation for Image Classification&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1802.01483&#34;&gt;Explicit inductive bias for transfer learning with convolutional networks (L2-SP, ICML 2018)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://proceedings.neurips.cc/paper/2019/file/c6bff625bdb0393992c9d4db0c6bbe45-Paper.pdf&#34;&gt;Catastrophic Forgetting Meets Negative Transfer: Batch Spectral Shrinkage for Safe Transfer Learning (BSS, NIPS 2019)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openreview.net/pdf?id=rkgbwsAcYm&#34;&gt;DEep Learning Transfer using Fea- ture Map with Attention for convolutional networks (DELTA, ICLR 2019)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ise.thss.tsinghua.edu.cn/~mlong/doc/co-tuning-for-transfer-learning-nips20.pdf&#34;&gt;Co-Tuning for Transfer Learning (Co-Tuning, NIPS 2020)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://papers.nips.cc/paper/2020/file/bc573864331a9e42e4511de6f678aa83-Paper.pdf&#34;&gt;Stochastic Normalization (StochNorm, NIPS 2020)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1606.09282&#34;&gt;Learning Without Forgetting (LWF, ECCV 2016)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2011.06182?utm_source=feedburner&amp;amp;utm_medium=feed&amp;amp;utm_campaign=Feed%3A+arxiv%2FQSXk+%28ExcitingAds%21+cs+updates+on+arXiv.org%29&#34;&gt;Bi-tuning of Pre-trained Representations (Bi-Tuning)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thuml/Transfer-Learning-Library/master/examples/domain_generalization/image_classification/&#34;&gt;Domain Generalization for Classification&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openaccess.thecvf.com/content_ECCV_2018/papers/Xingang_Pan_Two_at_Once_ECCV_2018_paper.pdf&#34;&gt;Two at Once: Enhancing Learning and Generalization Capacities via IBN-Net (IBN-Net, ECCV 2018)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2104.02008&#34;&gt;Domain Generalization with MixStyle (MixStyle, ICLR 2021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/pdf/1710.03463.pdf&#34;&gt;Learning to Generalize: Meta-Learning for Domain Generalization (MLDG, AAAI 2018)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1907.02893&#34;&gt;Invariant Risk Minimization (IRM)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2003.00688&#34;&gt;Out-of-Distribution Generalization via Risk Extrapolation (VREx, ICML 2021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1911.08731&#34;&gt;Distributionally Robust Neural Networks for Group Shifts: On the Importance of Regularization for Worst-Case Generalization(GroupDRO)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1607.01719&#34;&gt;Deep CORAL: Correlation Alignment for Deep Domain Adaptation (Deep Coral, ECCV 2016)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thuml/Transfer-Learning-Library/master/examples/domain_generalization/re_identification/&#34;&gt;Domain Generalization for Person Re-identification&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openaccess.thecvf.com/content_ECCV_2018/papers/Xingang_Pan_Two_at_Once_ECCV_2018_paper.pdf&#34;&gt;Two at Once: Enhancing Learning and Generalization Capacities via IBN-Net (IBN-Net, ECCV 2018)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2104.02008&#34;&gt;Domain Generalization with MixStyle (MixStyle, ICLR 2021)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We are planning to add&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DA for Object Detection&lt;/li&gt; &#xA; &lt;li&gt;TA for text classification&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To use &lt;code&gt;dalib&lt;/code&gt;, &lt;code&gt;talib&lt;/code&gt;, &lt;code&gt;dglib&lt;/code&gt;, and &lt;code&gt;common&lt;/code&gt; in other places, you need to install Transfer-Learn,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python setup.py install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that we do not support &lt;em&gt;pip install&lt;/em&gt; currently.&lt;/p&gt; &#xA;&lt;p&gt;For flexible use and modification of Transfer-Learn, please git clone the library.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find the tutorial and API documentation on the website: &lt;a href=&#34;http://tl.thuml.ai/&#34;&gt;Documentation&lt;/a&gt;. You can also build the doc by yourself following the instructions in &lt;a href=&#34;http://tl.thuml.ai/get_started/faq.html&#34;&gt;http://tl.thuml.ai/get_started/faq.html&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also, we have examples in the directory &lt;code&gt;examples&lt;/code&gt;. A typical usage is&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Train a DANN on Office-31 Amazon -&amp;gt; Webcam task using ResNet 50.&#xA;# Assume you have put the datasets under the path `data/office-31`, &#xA;# or you are glad to download the datasets automatically from the Internet to this path&#xA;python dann.py data/office31 -d Office31 -s A -t W -a resnet50  --epochs 20&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the directory &lt;code&gt;examples&lt;/code&gt;, you can find all the necessary running scripts to reproduce the benchmarks with specified hyper-parameters.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We appreciate all contributions. If you are planning to contribute back bug-fixes, please do so without any further discussion. If you plan to contribute new features, utility functions or extensions, please first open an issue and discuss the feature with us.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer on Datasets&lt;/h2&gt; &#xA;&lt;p&gt;This is a utility library that downloads and prepares public datasets. We do not host or distribute these datasets, vouch for their quality or fairness, or claim that you have licenses to use the dataset. It is your responsibility to determine whether you have permission to use the dataset under the dataset&#39;s license.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re a dataset owner and wish to update any part of it (description, citation, etc.), or do not want your dataset to be included in this library, please get in touch through a GitHub issue. Thanks for your contribution to the ML community!&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;If you have any problem with our code or have some suggestions, including the future feature, feel free to contact&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Junguang Jiang (&lt;a href=&#34;mailto:JiangJunguang1123@outlook.com&#34;&gt;JiangJunguang1123@outlook.com&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Baixu Chen (&lt;a href=&#34;mailto:cbx_99_hasta@outlook.com&#34;&gt;cbx_99_hasta@outlook.com&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Mingsheng Long (&lt;a href=&#34;mailto:longmingsheng@gmail.com&#34;&gt;longmingsheng@gmail.com&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;or describe it in Issues.&lt;/p&gt; &#xA;&lt;p&gt;For Q&amp;amp;A in Chinese, you can choose to ask questions here before sending an email. &lt;a href=&#34;https://zhuanlan.zhihu.com/p/248104070&#34;&gt;迁移学习算法库答疑专区&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you use this toolbox or benchmark in your research, please cite this project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-latex&#34;&gt;@misc{dalib,&#xA;  author = {Junguang Jiang, Baixu Chen, Bo Fu, Mingsheng Long},&#xA;  title = {Transfer-Learning-library},&#xA;  year = {2020},&#xA;  publisher = {GitHub},&#xA;  journal = {GitHub repository},&#xA;  howpublished = {\url{https://github.com/thuml/Transfer-Learning-Library}},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgment&lt;/h2&gt; &#xA;&lt;p&gt;We would like to thank School of Software, Tsinghua University and The National Engineering Laboratory for Big Data Software for providing such an excellent ML research platform.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>django/django</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/django/django</id>
    <link href="https://github.com/django/django" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Web framework for perfectionists with deadlines.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;====== Django&lt;/h1&gt; &#xA;&lt;p&gt;Django is a high-level Python web framework that encourages rapid development and clean, pragmatic design. Thanks for checking it out.&lt;/p&gt; &#xA;&lt;p&gt;All documentation is in the &#34;&lt;code&gt;docs&lt;/code&gt;&#34; directory and online at &lt;a href=&#34;https://docs.djangoproject.com/en/stable/&#34;&gt;https://docs.djangoproject.com/en/stable/&lt;/a&gt;. If you&#39;re just getting started, here&#39;s how we recommend you read the docs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;First, read &lt;code&gt;docs/intro/install.txt&lt;/code&gt; for instructions on installing Django.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Next, work through the tutorials in order (&lt;code&gt;docs/intro/tutorial01.txt&lt;/code&gt;, &lt;code&gt;docs/intro/tutorial02.txt&lt;/code&gt;, etc.).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to set up an actual deployment server, read &lt;code&gt;docs/howto/deployment/index.txt&lt;/code&gt; for instructions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You&#39;ll probably want to read through the topical guides (in &lt;code&gt;docs/topics&lt;/code&gt;) next; from there you can jump to the HOWTOs (in &lt;code&gt;docs/howto&lt;/code&gt;) for specific problems, and check out the reference (&lt;code&gt;docs/ref&lt;/code&gt;) for gory details.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;See &lt;code&gt;docs/README&lt;/code&gt; for instructions on building an HTML version of the docs.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Docs are updated rigorously. If you find any problems in the docs, or think they should be clarified in any way, please take 30 seconds to fill out a ticket here: &lt;a href=&#34;https://code.djangoproject.com/newticket&#34;&gt;https://code.djangoproject.com/newticket&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To get more help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Join the &lt;code&gt;#django&lt;/code&gt; channel on &lt;code&gt;irc.libera.chat&lt;/code&gt;. Lots of helpful people hang out there. See &lt;a href=&#34;https://web.libera.chat&#34;&gt;https://web.libera.chat&lt;/a&gt; if you&#39;re new to IRC.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Join the django-users mailing list, or read the archives, at &lt;a href=&#34;https://groups.google.com/group/django-users&#34;&gt;https://groups.google.com/group/django-users&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To contribute to Django:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check out &lt;a href=&#34;https://docs.djangoproject.com/en/dev/internals/contributing/&#34;&gt;https://docs.djangoproject.com/en/dev/internals/contributing/&lt;/a&gt; for information about getting involved.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To run Django&#39;s test suite:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow the instructions in the &#34;Unit tests&#34; section of &lt;code&gt;docs/internals/contributing/writing-code/unit-tests.txt&lt;/code&gt;, published online at &lt;a href=&#34;https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/unit-tests/#running-the-unit-tests&#34;&gt;https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/unit-tests/#running-the-unit-tests&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Supporting the Development of Django&lt;/h1&gt; &#xA;&lt;p&gt;Django&#39;s development depends on your contributions.&lt;/p&gt; &#xA;&lt;p&gt;If you depend on Django, remember to support the Django Software Foundation: &lt;a href=&#34;https://www.djangoproject.com/fundraising/&#34;&gt;https://www.djangoproject.com/fundraising/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>open-mmlab/mmocr</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/open-mmlab/mmocr</id>
    <link href="https://github.com/open-mmlab/mmocr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenMMLab Text Detection, Recognition and Understanding Toolbox&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/resources/mmocr-logo.png&#34; width=&#34;500px&#34;&gt; &#xA; &lt;div&gt;&#xA;  &amp;nbsp;&#xA; &lt;/div&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;b&gt;&lt;font size=&#34;5&#34;&gt;OpenMMLab website&lt;/font&gt;&lt;/b&gt; &#xA;  &lt;sup&gt; &lt;a href=&#34;https://openmmlab.com&#34;&gt; &lt;i&gt;&lt;font size=&#34;4&#34;&gt;HOT&lt;/font&gt;&lt;/i&gt; &lt;/a&gt; &lt;/sup&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &#xA;  &lt;b&gt;&lt;font size=&#34;5&#34;&gt;OpenMMLab platform&lt;/font&gt;&lt;/b&gt; &#xA;  &lt;sup&gt; &lt;a href=&#34;https://platform.openmmlab.com&#34;&gt; &lt;i&gt;&lt;font size=&#34;4&#34;&gt;TRY IT OUT&lt;/font&gt;&lt;/i&gt; &lt;/a&gt; &lt;/sup&gt; &#xA; &lt;/div&gt; &#xA; &lt;div&gt;&#xA;  &amp;nbsp;&#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/README_zh-CN.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmocr/actions&#34;&gt;&lt;img src=&#34;https://github.com/open-mmlab/mmocr/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mmocr.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/mmocr/badge/?version=latest&#34; alt=&#34;docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/open-mmlab/mmocr&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/open-mmlab/mmocr/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/open-mmlab/mmocr/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/open-mmlab/mmocr.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/mmocr/&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/mmocr.svg?sanitize=true&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/open-mmlab/mmocr/issues&#34;&gt;&lt;img src=&#34;https://isitmaintained.com/badge/resolution/open-mmlab/mmocr.svg?sanitize=true&#34; alt=&#34;Average time to resolve an issue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/open-mmlab/mmocr/issues&#34;&gt;&lt;img src=&#34;https://isitmaintained.com/badge/open/open-mmlab/mmocr.svg?sanitize=true&#34; alt=&#34;Percentage of issues still open&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;MMOCR is an open-source toolbox based on PyTorch and mmdetection for text detection, text recognition, and the corresponding downstream tasks including key information extraction. It is part of the &lt;a href=&#34;https://openmmlab.com/&#34;&gt;OpenMMLab&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;p&gt;The main branch works with &lt;strong&gt;PyTorch 1.6+&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Documentation: &lt;a href=&#34;https://mmocr.readthedocs.io/en/latest/&#34;&gt;https://mmocr.readthedocs.io/en/latest/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/resources/illustration.jpg&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Major Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Comprehensive Pipeline&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The toolbox supports not only text detection and text recognition, but also their downstream tasks such as key information extraction.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multiple Models&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The toolbox supports a wide variety of state-of-the-art models for text detection, text recognition and key information extraction.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Modular Design&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The modular design of MMOCR enables users to define their own optimizers, data preprocessors, and model components such as backbones, necks and heads as well as losses. Please refer to &lt;a href=&#34;https://mmocr.readthedocs.io/en/latest/getting_started.html&#34;&gt;Getting Started&lt;/a&gt; for how to construct a customized model.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Numerous Utilities&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The toolbox provides a comprehensive set of utilities which can help users assess the performance of models. It includes visualizers which allow visualization of images, ground truths as well as predicted bounding boxes, and a validation tool for evaluating checkpoints during training. It also includes data converters to demonstrate how to convert your own data to the annotation files which the toolbox supports.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://mmocr.readthedocs.io/en/latest/modelzoo.html&#34;&gt;Model Zoo&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Supported algorithms:&lt;/p&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;Text Detection&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/configs/textdet/dbnet/README.md&#34;&gt;DBNet&lt;/a&gt; (AAAI&#39;2020) / &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/configs/textdet/dbnetpp/README.md&#34;&gt;DBNet++&lt;/a&gt; (TPAMI&#39;2022)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/configs/textdet/maskrcnn/README.md&#34;&gt;Mask R-CNN&lt;/a&gt; (ICCV&#39;2017)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/configs/textdet/panet/README.md&#34;&gt;PANet&lt;/a&gt; (ICCV&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/configs/textdet/psenet/README.md&#34;&gt;PSENet&lt;/a&gt; (CVPR&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/configs/textdet/textsnake/README.md&#34;&gt;TextSnake&lt;/a&gt; (ECCV&#39;2018)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/configs/textdet/drrg/README.md&#34;&gt;DRRG&lt;/a&gt; (CVPR&#39;2020)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/configs/textdet/fcenet/README.md&#34;&gt;FCENet&lt;/a&gt; (CVPR&#39;2021)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;Text Recognition&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/configs/textrecog/abinet/README.md&#34;&gt;ABINet&lt;/a&gt; (CVPR&#39;2021)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/configs/textrecog/crnn/README.md&#34;&gt;CRNN&lt;/a&gt; (TPAMI&#39;2016)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/configs/textrecog/master/README.md&#34;&gt;MASTER&lt;/a&gt; (PR&#39;2021)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/configs/textrecog/nrtr/README.md&#34;&gt;NRTR&lt;/a&gt; (ICDAR&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/configs/textrecog/robust_scanner/README.md&#34;&gt;RobustScanner&lt;/a&gt; (ECCV&#39;2020)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/configs/textrecog/sar/README.md&#34;&gt;SAR&lt;/a&gt; (AAAI&#39;2019)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/configs/textrecog/satrn/README.md&#34;&gt;SATRN&lt;/a&gt; (CVPR&#39;2020 Workshop on Text and Documents in the Deep Learning Era)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/configs/textrecog/seg/README.md&#34;&gt;SegOCR&lt;/a&gt; (Manuscript&#39;2021)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;Key Information Extraction&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/configs/kie/sdmgr/README.md&#34;&gt;SDMG-R&lt;/a&gt; (ArXiv&#39;2021)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;Named Entity Recognition&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/configs/ner/bert_softmax/README.md&#34;&gt;Bert-Softmax&lt;/a&gt; (NAACL&#39;2019)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://mmocr.readthedocs.io/en/latest/modelzoo.html&#34;&gt;model_zoo&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is released under the &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/LICENSE&#34;&gt;Apache 2.0 license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find this project useful in your research, please consider cite:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{mmocr2021,&#xA;    title={MMOCR:  A Comprehensive Toolbox for Text Detection, Recognition and Understanding},&#xA;    author={Kuang, Zhanghui and Sun, Hongbin and Li, Zhizhong and Yue, Xiaoyu and Lin, Tsui Hin and Chen, Jianyong and Wei, Huaqiang and Zhu, Yiqin and Gao, Tong and Zhang, Wenwei and Chen, Kai and Zhang, Wayne and Lin, Dahua},&#xA;    journal= {arXiv preprint arXiv:2108.06543},&#xA;    year={2021}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;v0.6.0 was released in 2022-05-05.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;MMOCR depends on &lt;a href=&#34;https://pytorch.org/&#34;&gt;PyTorch&lt;/a&gt;, &lt;a href=&#34;https://github.com/open-mmlab/mmcv&#34;&gt;MMCV&lt;/a&gt; and &lt;a href=&#34;https://github.com/open-mmlab/mmdetection&#34;&gt;MMDetection&lt;/a&gt;. Below are quick steps for installation. Please refer to &lt;a href=&#34;https://mmocr.readthedocs.io/en/latest/install.html&#34;&gt;Install Guide&lt;/a&gt; for more detailed instruction.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;conda create -n open-mmlab python=3.8 pytorch=1.10 cudatoolkit=11.3 torchvision -c pytorch -y&#xA;conda activate open-mmlab&#xA;pip3 install openmim&#xA;mim install mmcv-full&#xA;mim install mmdet&#xA;git clone https://github.com/open-mmlab/mmocr.git&#xA;cd mmocr&#xA;pip3 install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://mmocr.readthedocs.io/en/latest/getting_started.html&#34;&gt;Getting Started&lt;/a&gt; for the basic usage of MMOCR.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We appreciate all contributions to improve MMOCR. Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/open-mmlab/mmocr/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for the contributing guidelines.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;MMOCR is an open-source project that is contributed by researchers and engineers from various colleges and companies. We appreciate all the contributors who implement their methods or add new features, as well as users who give valuable feedbacks. We hope the toolbox and benchmark could serve the growing research community by providing a flexible toolkit to reimplement existing methods and develop their own new OCR methods.&lt;/p&gt; &#xA;&lt;h2&gt;Projects in OpenMMLab&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmcv&#34;&gt;MMCV&lt;/a&gt;: OpenMMLab foundational library for computer vision.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mim&#34;&gt;MIM&lt;/a&gt;: MIM installs OpenMMLab packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmclassification&#34;&gt;MMClassification&lt;/a&gt;: OpenMMLab image classification toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmdetection&#34;&gt;MMDetection&lt;/a&gt;: OpenMMLab detection toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmdetection3d&#34;&gt;MMDetection3D&lt;/a&gt;: OpenMMLab&#39;s next-generation platform for general 3D object detection.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmrotate&#34;&gt;MMRotate&lt;/a&gt;: OpenMMLab rotated object detection toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmsegmentation&#34;&gt;MMSegmentation&lt;/a&gt;: OpenMMLab semantic segmentation toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmocr&#34;&gt;MMOCR&lt;/a&gt;: OpenMMLab text detection, recognition, and understanding toolbox.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmpose&#34;&gt;MMPose&lt;/a&gt;: OpenMMLab pose estimation toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmhuman3d&#34;&gt;MMHuman3D&lt;/a&gt;: OpenMMLab 3D human parametric model toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmselfsup&#34;&gt;MMSelfSup&lt;/a&gt;: OpenMMLab self-supervised learning toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmrazor&#34;&gt;MMRazor&lt;/a&gt;: OpenMMLab model compression toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmfewshot&#34;&gt;MMFewShot&lt;/a&gt;: OpenMMLab fewshot learning toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmaction2&#34;&gt;MMAction2&lt;/a&gt;: OpenMMLab&#39;s next-generation action understanding toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmtracking&#34;&gt;MMTracking&lt;/a&gt;: OpenMMLab video perception toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmflow&#34;&gt;MMFlow&lt;/a&gt;: OpenMMLab optical flow toolbox and benchmark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmediting&#34;&gt;MMEditing&lt;/a&gt;: OpenMMLab image and video editing toolbox.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmgeneration&#34;&gt;MMGeneration&lt;/a&gt;: OpenMMLab image and video generative models toolbox.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmdeploy&#34;&gt;MMDeploy&lt;/a&gt;: OpenMMLab model deployment framework.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>cookiecutter/cookiecutter</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/cookiecutter/cookiecutter</id>
    <link href="https://github.com/cookiecutter/cookiecutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A cross-platform command-line utility that creates projects from cookiecutters (project templates), e.g. Python package projects, C projects.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cookiecutter&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cookiecutter/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/cookiecutter.svg?sanitize=true&#34; alt=&#34;pypi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/cookiecutter/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/cookiecutter.svg?sanitize=true&#34; alt=&#34;python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cookiecutter/cookiecutter/actions&#34;&gt;&lt;img src=&#34;https://github.com/cookiecutter/cookiecutter/actions/workflows/main.yml/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/cookiecutter/cookiecutter?branch=master&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/cookiecutter/cookiecutter/branch/master/graphs/badge.svg?branch=master&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/9BrxzPKuEW&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-cookiecutter-5865F2?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://readthedocs.org/projects/cookiecutter/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/cookiecutter/badge/?version=latest&#34; alt=&#34;docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scrutinizer-ci.com/g/cookiecutter/cookiecutter/?branch=master&#34;&gt;&lt;img src=&#34;https://img.shields.io/scrutinizer/g/cookiecutter/cookiecutter.svg?sanitize=true&#34; alt=&#34;Code Quality&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A command-line utility that creates projects from &lt;strong&gt;cookiecutters&lt;/strong&gt; (project templates), e.g. creating a Python package project from a Python package project template.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Documentation: &lt;a href=&#34;https://cookiecutter.readthedocs.io&#34;&gt;https://cookiecutter.readthedocs.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GitHub: &lt;a href=&#34;https://github.com/cookiecutter/cookiecutter&#34;&gt;https://github.com/cookiecutter/cookiecutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PyPI: &lt;a href=&#34;https://pypi.org/project/cookiecutter/&#34;&gt;https://pypi.org/project/cookiecutter/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Free and open source software: &lt;a href=&#34;https://github.com/cookiecutter/cookiecutter/raw/master/LICENSE&#34;&gt;BSD license&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cookiecutter/cookiecutter/3ac078356adf5a1a72042dfe72ebfa4a9cd5ef38/logo/cookiecutter_medium.png&#34; alt=&#34;Cookiecutter&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Cross-platform: Windows, Mac, and Linux are officially supported.&lt;/li&gt; &#xA; &lt;li&gt;You don&#39;t have to know/write Python code to use Cookiecutter.&lt;/li&gt; &#xA; &lt;li&gt;Works with Python 3.7, 3.8, 3.9., 3.10&lt;/li&gt; &#xA; &lt;li&gt;Project templates can be in any programming language or markup format: Python, JavaScript, Ruby, CoffeeScript, RST, Markdown, CSS, HTML, you name it. You can use multiple languages in the same project template.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;For users of existing templates&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Simple command line usage:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create project from the cookiecutter-pypackage.git repo template&#xA;# You&#39;ll be prompted to enter values.&#xA;# Then it&#39;ll create your Python package in the current working directory,&#xA;# based on those values.&#xA;$ cookiecutter https://github.com/audreyfeldroy/cookiecutter-pypackage&#xA;# For the sake of brevity, repos on GitHub can just use the &#39;gh&#39; prefix&#xA;$ cookiecutter gh:audreyfeldroy/cookiecutter-pypackage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use it at the command line with a local template:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create project in the current working directory, from the local&#xA;# cookiecutter-pypackage/ template&#xA;$ cookiecutter cookiecutter-pypackage/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Or use it from Python:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;from cookiecutter.main import cookiecutter&#xA;&#xA;# Create project from the cookiecutter-pypackage/ template&#xA;cookiecutter(&#39;cookiecutter-pypackage/&#39;)&#xA;&#xA;# Create project from the cookiecutter-pypackage.git repo template&#xA;cookiecutter(&#39;https://github.com/audreyfeldroy/cookiecutter-pypackage.git&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Unless you suppress it with &lt;code&gt;--no-input&lt;/code&gt;, you are prompted for input:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Prompts are the keys in &lt;code&gt;cookiecutter.json&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Default responses are the values in &lt;code&gt;cookiecutter.json&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Prompts are shown in order.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Cross-platform support for &lt;code&gt;~/.cookiecutterrc&lt;/code&gt; files:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;default_context:&#xA;  full_name: &#34;Audrey Roy Greenfeld&#34;&#xA;  email: &#34;audreyr@gmail.com&#34;&#xA;  github_username: &#34;audreyfeldroy&#34;&#xA;cookiecutters_dir: &#34;~/.cookiecutters/&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Cookiecutters (cloned Cookiecutter project templates) are put into &lt;code&gt;~/.cookiecutters/&lt;/code&gt; by default, or cookiecutters_dir if specified.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you have already cloned a cookiecutter into &lt;code&gt;~/.cookiecutters/&lt;/code&gt;, you can reference it by directory name:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Clone cookiecutter-pypackage&#xA;$ cookiecutter gh:audreyfeldroy/cookiecutter-pypackage&#xA;# Now you can use the already cloned cookiecutter by name&#xA;$ cookiecutter cookiecutter-pypackage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can use local cookiecutters, or remote cookiecutters directly from Git repos or from Mercurial repos on Bitbucket.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Default context: specify key/value pairs that you want used as defaults whenever you generate a project.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Inject extra context with command-line arguments:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cookiecutter --no-input gh:msabramo/cookiecutter-supervisor program_name=foobar startsecs=10&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Direct access to the Cookiecutter API allows for injection of extra context.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Paths to local projects can be specified as absolute or relative.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Projects generated to your current directory or to target directory if specified with &lt;code&gt;-o&lt;/code&gt; option.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;For template creators&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Supports unlimited levels of directory nesting.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;100% of templating is done with Jinja2.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Both, directory names and filenames can be templated. For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;{{cookiecutter.repo_name}}/{{cookiecutter.repo_name}}/{{cookiecutter.repo_name}}.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Simply define your template variables in a &lt;code&gt;cookiecutter.json&lt;/code&gt; file. For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;full_name&#34;: &#34;Audrey Roy Greenfeld&#34;,&#xA;  &#34;email&#34;: &#34;audreyr@gmail.com&#34;,&#xA;  &#34;project_name&#34;: &#34;Complexity&#34;,&#xA;  &#34;repo_name&#34;: &#34;complexity&#34;,&#xA;  &#34;project_short_description&#34;: &#34;Refreshingly simple static site generator.&#34;,&#xA;  &#34;release_date&#34;: &#34;2013-07-10&#34;,&#xA;  &#34;year&#34;: &#34;2013&#34;,&#xA;  &#34;version&#34;: &#34;0.1.1&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pre- and post-generate hooks: Python or shell scripts to run before or after generating a project.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Available Cookiecutters&lt;/h2&gt; &#xA;&lt;p&gt;Making great cookies takes a lot of cookiecutters and contributors. We&#39;re so pleased that there are many Cookiecutter project templates to choose from. We hope you find a cookiecutter that is just right for your needs.&lt;/p&gt; &#xA;&lt;h3&gt;A Pantry Full of Cookiecutters&lt;/h3&gt; &#xA;&lt;p&gt;The best place to start searching for specific and ready to use cookiecutter template is &lt;a href=&#34;https://github.com/search?q=cookiecutter&amp;amp;type=Repositories&#34;&gt;Github search&lt;/a&gt;. Just type &lt;code&gt;cookiecutter&lt;/code&gt; and you will discover over 4000 related repositories.&lt;/p&gt; &#xA;&lt;p&gt;We also recommend you to check related GitHub topics. For general search use &lt;a href=&#34;https://github.com/topics/cookiecutter-template&#34;&gt;cookiecutter-template&lt;/a&gt;. For specific topics try to use &lt;code&gt;cookiecutter-yourtopic&lt;/code&gt;, like &lt;code&gt;cookiecutter-python&lt;/code&gt; or &lt;code&gt;cookiecutter-datascience&lt;/code&gt;. This is a new GitHub feature, so not all active repositories use it at the moment.&lt;/p&gt; &#xA;&lt;p&gt;If you are template developer please add related &lt;a href=&#34;https://help.github.com/en/github/administering-a-repository/classifying-your-repository-with-topics&#34;&gt;topics&lt;/a&gt; with &lt;code&gt;cookiecutter&lt;/code&gt; prefix to you repository. We believe it will make it more discoverable. You are almost not limited in topics amount, use it!&lt;/p&gt; &#xA;&lt;h3&gt;Cookiecutter Specials&lt;/h3&gt; &#xA;&lt;p&gt;These Cookiecutters are maintained by the cookiecutter team:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/audreyfeldroy/cookiecutter-pypackage&#34;&gt;cookiecutter-pypackage&lt;/a&gt;: ultimate Python package project template by &lt;a href=&#34;https://github.com/audreyfeldroy&#34;&gt;@audreyfeldroy&#39;s&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pydanny/cookiecutter-django&#34;&gt;cookiecutter-django&lt;/a&gt;: a framework for jumpstarting production-ready Django projects quickly. It is bleeding edge with Bootstrap 5, customizable users app, starter templates, working user registration, celery setup, and much more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pytest-dev/cookiecutter-pytest-plugin&#34;&gt;cookiecutter-pytest-plugin&lt;/a&gt;: Minimal Cookiecutter template for authoring &lt;a href=&#34;https://docs.pytest.org/&#34;&gt;pytest&lt;/a&gt; plugins that help you to write better programs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;The core committer team can be found in &lt;a href=&#34;https://raw.githubusercontent.com/cookiecutter/cookiecutter/master/AUTHORS.md&#34;&gt;authors section&lt;/a&gt;. We are always welcome and invite you to participate.&lt;/p&gt; &#xA;&lt;p&gt;Stuck? Try one of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See the &lt;a href=&#34;https://cookiecutter.readthedocs.io/en/latest/troubleshooting.html&#34;&gt;Troubleshooting&lt;/a&gt; page.&lt;/li&gt; &#xA; &lt;li&gt;Ask for help on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/cookiecutter&#34;&gt;Stack Overflow&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You are strongly encouraged to &lt;a href=&#34;https://github.com/cookiecutter/cookiecutter/issues?q=is%3Aopen&#34;&gt;file an issue&lt;/a&gt; about the problem. Do it even if it&#39;s just &#34;I can&#39;t get it to work on this cookiecutter&#34; with a link to your cookiecutter. Don&#39;t worry about naming/pinpointing the issue properly.&lt;/li&gt; &#xA; &lt;li&gt;Ask for help on &lt;a href=&#34;https://discord.gg/9BrxzPKuEW&#34;&gt;Discord&lt;/a&gt; if you must (but please try one of the other options first, so that others can benefit from the discussion).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Development on Cookiecutter is community-driven:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Huge thanks to all the &lt;a href=&#34;https://raw.githubusercontent.com/cookiecutter/cookiecutter/master/AUTHORS.md&#34;&gt;contributors&lt;/a&gt; who have pitched in to help make Cookiecutter an even better tool.&lt;/li&gt; &#xA; &lt;li&gt;Everyone is invited to contribute. Read the &lt;a href=&#34;https://raw.githubusercontent.com/cookiecutter/cookiecutter/master/CONTRIBUTING.md&#34;&gt;contributing instructions&lt;/a&gt;, then get started.&lt;/li&gt; &#xA; &lt;li&gt;Connect with other Cookiecutter contributors and users on &lt;a href=&#34;https://discord.gg/9BrxzPKuEW&#34;&gt;Discord&lt;/a&gt; (note: due to work and other commitments, a core committer might not always be available)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Encouragement is unbelievably motivating. If you want more work done on Cookiecutter, show support:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Thank a core committer for their efforts.&lt;/li&gt; &#xA; &lt;li&gt;Star &lt;a href=&#34;https://github.com/cookiecutter/cookiecutter&#34;&gt;Cookiecutter on GitHub&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cookiecutter/cookiecutter/master/#support-this-project&#34;&gt;Support this project&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Got criticism or complaints?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cookiecutter/cookiecutter/issues?q=is%3Aopen&#34;&gt;File an issue&lt;/a&gt; so that Cookiecutter can be improved. Be friendly and constructive about what could be better. Make detailed suggestions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Keep us in the loop so that we can help.&lt;/strong&gt; For example, if you are discussing problems with Cookiecutter on a mailing list, &lt;a href=&#34;https://github.com/cookiecutter/cookiecutter/issues?q=is%3Aopen&#34;&gt;file an issue&lt;/a&gt; where you link to the discussion thread and/or cc at least 1 core committer on the email.&lt;/li&gt; &#xA; &lt;li&gt;Be encouraging. A comment like &#34;This function ought to be rewritten like this&#34; is much more likely to result in action than a comment like &#34;Eww, look how bad this function is.&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Waiting for a response to an issue/question?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Be patient and persistent. All issues are on the core committer team&#39;s radar and will be considered thoughtfully, but we have a lot of issues to work through. If urgent, it&#39;s fine to ping a core committer in the issue with a reminder.&lt;/li&gt; &#xA; &lt;li&gt;Ask others to comment, discuss, review, etc.&lt;/li&gt; &#xA; &lt;li&gt;Search the Cookiecutter repo for issues related to yours.&lt;/li&gt; &#xA; &lt;li&gt;Need a fix/feature/release/help urgently, and can&#39;t wait? &lt;a href=&#34;https://github.com/audreyfeldroy&#34;&gt;@audreyfeldroy&lt;/a&gt; is available for hire for consultation or custom development.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support This Project&lt;/h2&gt; &#xA;&lt;p&gt;This project is run by volunteers. Shortly we will be providing means for organizations and individuals to support the project.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Everyone interacting in the Cookiecutter project&#39;s codebases and documentation is expected to follow the &lt;a href=&#34;https://www.pypa.io/en/latest/code-of-conduct/&#34;&gt;PyPA Code of Conduct&lt;/a&gt;. This includes, but is not limited to, issue trackers, chat rooms, mailing lists, and other virtual or in real life communication.&lt;/p&gt; &#xA;&lt;h2&gt;Creator / Leader&lt;/h2&gt; &#xA;&lt;p&gt;This project was created and is led by &lt;a href=&#34;https://github.com/audreyfeldroy&#34;&gt;Audrey Roy Greenfeld&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;She is supported by a team of maintainers.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>keras-team/keras</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/keras-team/keras</id>
    <link href="https://github.com/keras-team/keras" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Deep Learning for humans&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Keras: Deep Learning for humans&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s3.amazonaws.com/keras.io/img/keras-logo-2018-large-1200.png&#34; alt=&#34;Keras logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository hosts the development of the Keras library. Read the documentation at &lt;a href=&#34;https://keras.io/&#34;&gt;keras.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;About Keras&lt;/h2&gt; &#xA;&lt;p&gt;Keras is a deep learning API written in Python, running on top of the machine learning platform &lt;a href=&#34;https://github.com/tensorflow/tensorflow&#34;&gt;TensorFlow&lt;/a&gt;. It was developed with a focus on enabling fast experimentation. &lt;em&gt;Being able to go from idea to result as fast as possible is key to doing good research.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Keras is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simple&lt;/strong&gt; -- but not simplistic. Keras reduces developer &lt;em&gt;cognitive load&lt;/em&gt; to free you to focus on the parts of the problem that really matter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Flexible&lt;/strong&gt; -- Keras adopts the principle of &lt;em&gt;progressive disclosure of complexity&lt;/em&gt;: simple workflows should be quick and easy, while arbitrarily advanced workflows should be &lt;em&gt;possible&lt;/em&gt; via a clear path that builds upon what you&#39;ve already learned.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Powerful&lt;/strong&gt; -- Keras provides industry-strength performance and scalability: it is used by organizations and companies including NASA, YouTube, and Waymo.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Keras &amp;amp; TensorFlow 2&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.tensorflow.org/&#34;&gt;TensorFlow 2&lt;/a&gt; is an end-to-end, open-source machine learning platform. You can think of it as an infrastructure layer for &lt;a href=&#34;https://en.wikipedia.org/wiki/Differentiable_programming&#34;&gt;differentiable programming&lt;/a&gt;. It combines four key abilities:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Efficiently executing low-level tensor operations on CPU, GPU, or TPU.&lt;/li&gt; &#xA; &lt;li&gt;Computing the gradient of arbitrary differentiable expressions.&lt;/li&gt; &#xA; &lt;li&gt;Scaling computation to many devices, such as clusters of hundreds of GPUs.&lt;/li&gt; &#xA; &lt;li&gt;Exporting programs (&#34;graphs&#34;) to external runtimes such as servers, browsers, mobile and embedded devices.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Keras is the high-level API of TensorFlow 2: an approachable, highly-productive interface for solving machine learning problems, with a focus on modern deep learning. It provides essential abstractions and building blocks for developing and shipping machine learning solutions with high iteration velocity.&lt;/p&gt; &#xA;&lt;p&gt;Keras empowers engineers and researchers to take full advantage of the scalability and cross-platform capabilities of TensorFlow 2: you can run Keras on TPU or on large clusters of GPUs, and you can export your Keras models to run in the browser or on a mobile device.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;First contact with Keras&lt;/h2&gt; &#xA;&lt;p&gt;The core data structures of Keras are &lt;strong&gt;layers&lt;/strong&gt; and &lt;strong&gt;models&lt;/strong&gt;. The simplest type of model is the &lt;a href=&#34;https://raw.githubusercontent.com/keras-team/keras/master/guides/sequential_model/&#34;&gt;&lt;code&gt;Sequential&lt;/code&gt; model&lt;/a&gt;, a linear stack of layers. For more complex architectures, you should use the &lt;a href=&#34;https://raw.githubusercontent.com/keras-team/keras/master/guides/functional_api/&#34;&gt;Keras functional API&lt;/a&gt;, which allows to build arbitrary graphs of layers, or &lt;a href=&#34;https://raw.githubusercontent.com/keras-team/keras/master/guides/making_new_layers_and_models_via_subclassing/&#34;&gt;write models entirely from scratch via subclasssing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is the &lt;code&gt;Sequential&lt;/code&gt; model:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from tensorflow.keras.models import Sequential&#xA;&#xA;model = Sequential()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Stacking layers is as easy as &lt;code&gt;.add()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from tensorflow.keras.layers import Dense&#xA;&#xA;model.add(Dense(units=64, activation=&#39;relu&#39;))&#xA;model.add(Dense(units=10, activation=&#39;softmax&#39;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once your model looks good, configure its learning process with &lt;code&gt;.compile()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;model.compile(loss=&#39;categorical_crossentropy&#39;,&#xA;              optimizer=&#39;sgd&#39;,&#xA;              metrics=[&#39;accuracy&#39;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need to, you can further configure your optimizer. The Keras philosophy is to keep simple things simple, while allowing the user to be fully in control when they need to (the ultimate control being the easy extensibility of the source code via subclassing).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;model.compile(loss=tf.keras.losses.categorical_crossentropy,&#xA;              optimizer=tf.keras.optimizers.SGD(&#xA;                  learning_rate=0.01, momentum=0.9, nesterov=True))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can now iterate on your training data in batches:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# x_train and y_train are Numpy arrays.&#xA;model.fit(x_train, y_train, epochs=5, batch_size=32)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Evaluate your test loss and metrics in one line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;loss_and_metrics = model.evaluate(x_test, y_test, batch_size=128)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or generate predictions on new data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;classes = model.predict(x_test, batch_size=128)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;What you just saw is the most elementary way to use Keras.&lt;/p&gt; &#xA;&lt;p&gt;However, Keras is also a highly-flexible framework suitable to iterate on state-of-the-art research ideas. Keras follows the principle of &lt;strong&gt;progressive disclosure of complexity&lt;/strong&gt;: it makes it easy to get started, yet it makes it possible to handle arbitrarily advanced use cases, only requiring incremental learning at each step.&lt;/p&gt; &#xA;&lt;p&gt;In much the same way that you were able to train &amp;amp; evaluate a simple neural network above in a few lines, you can use Keras to quickly develop new training procedures or exotic model architectures. Here&#39;s a low-level training loop example, combining Keras functionality with the TensorFlow &lt;code&gt;GradientTape&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import tensorflow as tf&#xA;&#xA;# Prepare an optimizer.&#xA;optimizer = tf.keras.optimizers.Adam()&#xA;# Prepare a loss function.&#xA;loss_fn = tf.keras.losses.kl_divergence&#xA;&#xA;# Iterate over the batches of a dataset.&#xA;for inputs, targets in dataset:&#xA;    # Open a GradientTape.&#xA;    with tf.GradientTape() as tape:&#xA;        # Forward pass.&#xA;        predictions = model(inputs)&#xA;        # Compute the loss value for this batch.&#xA;        loss_value = loss_fn(targets, predictions)&#xA;&#xA;    # Get gradients of loss wrt the weights.&#xA;    gradients = tape.gradient(loss_value, model.trainable_weights)&#xA;    # Update the weights of the model.&#xA;    optimizer.apply_gradients(zip(gradients, model.trainable_weights))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more in-depth tutorials about Keras, you can check out:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://keras.io/getting_started/intro_to_keras_for_engineers/&#34;&gt;Introduction to Keras for engineers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://keras.io/getting_started/intro_to_keras_for_researchers/&#34;&gt;Introduction to Keras for researchers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://keras.io/guides/&#34;&gt;Developer guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://keras.io/getting_started/learning_resources/&#34;&gt;Other learning resources&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Keras comes packaged with TensorFlow 2 as &lt;code&gt;tensorflow.keras&lt;/code&gt;. To start using Keras, simply &lt;a href=&#34;https://www.tensorflow.org/install&#34;&gt;install TensorFlow 2&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Release and compatibility&lt;/h2&gt; &#xA;&lt;p&gt;Keras has &lt;strong&gt;nightly releases&lt;/strong&gt; (&lt;code&gt;keras-nightly&lt;/code&gt; on PyPI) and &lt;strong&gt;stable releases&lt;/strong&gt; (&lt;code&gt;keras&lt;/code&gt; on PyPI). The nightly Keras releases are usually compatible with the corresponding version of the &lt;code&gt;tf-nightly&lt;/code&gt; releases (e.g. &lt;code&gt;keras-nightly==2.7.0.dev2021100607&lt;/code&gt; should be used with &lt;code&gt;tf-nightly==2.7.0.dev2021100607&lt;/code&gt;). We don&#39;t maintain backward compatibility for nightly releases. For stable releases, each Keras version maps to a specific stable version of TensorFlow.&lt;/p&gt; &#xA;&lt;p&gt;The table below shows the compatibility version mapping between TensorFlow versions and Keras versions.&lt;/p&gt; &#xA;&lt;p&gt;All the release branches can be found on &lt;a href=&#34;https://github.com/keras-team/keras/releases&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All the release binaries can be found on &lt;a href=&#34;https://pypi.org/project/keras/#history&#34;&gt;Pypi&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Keras release&lt;/th&gt; &#xA;   &lt;th&gt;Note&lt;/th&gt; &#xA;   &lt;th&gt;Compatible Tensorflow version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/keras-team/keras/releases/tag/2.4.0&#34;&gt;2.4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Last stable release of multi-backend Keras&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt; 2.5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.5-pre&lt;/td&gt; &#xA;   &lt;td&gt;Pre-release (not formal) for standalone Keras repo&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 2.5 &amp;lt; 2.6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/keras-team/keras/releases/tag/v2.6.0&#34;&gt;2.6&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;First formal release of standalone Keras.&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 2.6 &amp;lt; 2.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/keras-team/keras/releases/tag/v2.7.0-rc0&#34;&gt;2.7&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(Upcoming release)&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 2.7 &amp;lt; 2.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nightly&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;tf-nightly&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;You can ask questions and join the development discussion:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In the &lt;a href=&#34;https://discuss.tensorflow.org/&#34;&gt;TensorFlow forum&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;On the &lt;a href=&#34;https://groups.google.com/forum/#!forum/keras-users&#34;&gt;Keras Google group&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;On the &lt;a href=&#34;https://kerasteam.slack.com&#34;&gt;Keras Slack channel&lt;/a&gt;. Use &lt;a href=&#34;https://keras-slack-autojoin.herokuapp.com/&#34;&gt;this link&lt;/a&gt; to request an invitation to the channel.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Opening an issue&lt;/h2&gt; &#xA;&lt;p&gt;You can also post &lt;strong&gt;bug reports and feature requests&lt;/strong&gt; (only) in &lt;a href=&#34;https://github.com/keras-team/keras/issues&#34;&gt;GitHub issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Opening a PR&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions! Before opening a PR, please read &lt;a href=&#34;https://github.com/keras-team/keras/raw/master/CONTRIBUTING.md&#34;&gt;our contributor guide&lt;/a&gt;, and the &lt;a href=&#34;https://github.com/keras-team/governance/raw/master/keras_api_design_guidelines.md&#34;&gt;API design guideline&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bregman-arie/devops-exercises</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/bregman-arie/devops-exercises</id>
    <link href="https://github.com/bregman-arie/devops-exercises" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Linux, Jenkins, AWS, SRE, Prometheus, Docker, Python, Ansible, Git, Kubernetes, Terraform, OpenStack, SQL, NoSQL, Azure, GCP, DNS, Elastic, Network, Virtualization. DevOps Interview Questions&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/devops_exercises.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; &amp;nbsp;This repo contains questions and exercises on various technical topics, sometimes related to DevOps and SRE&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;📊&lt;/span&gt; &amp;nbsp;There are currently &lt;strong&gt;2292&lt;/strong&gt; exercises and questions&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;📚&lt;/span&gt; &amp;nbsp;To learn more about DevOps and SRE, check the resources in &lt;a href=&#34;https://github.com/bregman-arie/devops-resources&#34;&gt;devops-resources&lt;/a&gt; repository&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &amp;nbsp;You can use these for preparing for an interview but most of the questions and exercises don&#39;t represent an actual interview. Please read &lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/faq.md&#34;&gt;FAQ page&lt;/a&gt; for more details&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;👥&lt;/span&gt; &amp;nbsp;Join our &lt;a href=&#34;https://www.facebook.com/groups/538897960007080&#34;&gt;DevOps community&lt;/a&gt; where we have discussions and share resources on DevOps&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;📝&lt;/span&gt; &amp;nbsp;You can add more exercises by submitting pull requests :) Read about contribution guidelines &lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- ALL-TOPICS-LIST:START --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;center&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/devops/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/devops.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;DevOps&#34;&gt;&lt;br&gt;&lt;b&gt;DevOps&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/cicd/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/cicd.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;cicd&#34;&gt;&lt;br&gt;&lt;b&gt;CI/CD&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/git/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/git.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Git&#34;&gt;&lt;br&gt;&lt;b&gt;Git&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/ansible/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/ansible.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;ansible&#34;&gt;&lt;br&gt;&lt;b&gt;Ansible&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#Network&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/network.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Network&#34;&gt;&lt;br&gt;&lt;b&gt;Network&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#linux&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/linux.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Linux&#34;&gt;&lt;br&gt;&lt;b&gt;Linux&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/software_development/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/programming.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;programming&#34;&gt;&lt;br&gt;&lt;b&gt;Software Development&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/python-exercises&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/python.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Python&#34;&gt;&lt;br&gt;&lt;b&gt;Python&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#go&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/Go.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;go&#34;&gt;&lt;br&gt;&lt;b&gt;Go&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/shell/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/bash.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Bash&#34;&gt;&lt;br&gt;&lt;b&gt;Shell Scripting&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/kubernetes/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/kubernetes.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;kubernetes&#34;&gt;&lt;br&gt;&lt;b&gt;Kubernetes&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#prometheus&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/prometheus.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Prometheus&#34;&gt;&lt;br&gt;&lt;b&gt;Prometheus&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/cloud/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/cloud.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Cloud&#34;&gt;&lt;br&gt;&lt;b&gt;Cloud&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/aws/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/aws.png&#34; width=&#34;100px;&#34; height=&#34;75px;&#34; alt=&#34;aws&#34;&gt;&lt;br&gt;&lt;b&gt;AWS&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/azure/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/azure.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;azure&#34;&gt;&lt;br&gt;&lt;b&gt;Azure&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#gcp&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/googlecloud.png&#34; width=&#34;70px;&#34; height=&#34;70px;&#34; alt=&#34;Google Cloud Platform&#34;&gt;&lt;br&gt;&lt;b&gt;Google Cloud Platform&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#openstack&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/openstack.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;openstack&#34;&gt;&lt;br&gt;&lt;b&gt;OpenStack&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/security/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/security.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;security&#34;&gt;&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#operating-system&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/os.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Operating System&#34;&gt;&lt;br&gt;&lt;b&gt;Operating System&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#monitoring&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/monitoring.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Monitoring&#34;&gt;&lt;br&gt;&lt;b&gt;Monitoring&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#elastic&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/elastic.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Elastic&#34;&gt;&lt;br&gt;&lt;b&gt;Elastic&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#virtualization&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/virtualization.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Virtualization&#34;&gt;&lt;br&gt;&lt;b&gt;Virtualization&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/dns/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/dns.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;DNS&#34;&gt;&lt;br&gt;&lt;b&gt;DNS&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#Misc&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/general.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Misc&#34;&gt;&lt;br&gt;&lt;b&gt;Misc&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#testing&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/testing.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Testing&#34;&gt;&lt;br&gt;&lt;b&gt;Testing&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#databases&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/databases.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Databases&#34;&gt;&lt;br&gt;&lt;b&gt;Databases&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#regex&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/regex.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;RegEx&#34;&gt;&lt;br&gt;&lt;b&gt;Regex&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#system-design&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Design&#34;&gt;&lt;br&gt;&lt;b&gt;System Design&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#hardware&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/hardware.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Hardware&#34;&gt;&lt;br&gt;&lt;b&gt;Hardware&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#big-data&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/big-data.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Big Data&#34;&gt;&lt;br&gt;&lt;b&gt;Big Data&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#certificates&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/certificates.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Certificates&#34;&gt;&lt;br&gt;&lt;b&gt;Certificates&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/containers/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/containers.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Containers&#34;&gt;&lt;br&gt;&lt;b&gt;Containers&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#sql&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/sql.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;sql&#34;&gt;&lt;br&gt;&lt;b&gt;SQL&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/openshift/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/openshift.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;OpenShift&#34;&gt;&lt;br&gt;&lt;b&gt;OpenShift&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#storage&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/storage.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Storage&#34;&gt;&lt;br&gt;&lt;b&gt;Storage&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/soft_skills/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/HR.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;HR&#34;&gt;&lt;br&gt;&lt;b&gt;Soft Skills&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/terraform/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/terraform.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Terraform&#34;&gt;&lt;br&gt;&lt;b&gt;Terraform&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#mongo&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/mongo.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Mongo&#34;&gt;&lt;br&gt;&lt;b&gt;Mongo&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#puppet&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/puppet.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;puppet&#34;&gt;&lt;br&gt;&lt;b&gt;Puppet&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#distributed&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/distributed.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Distributed&#34;&gt;&lt;br&gt;&lt;b&gt;Distributed&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#questions-you-ask&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/you.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;you&#34;&gt;&lt;br&gt;&lt;b&gt;Questions you can ask&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/perl/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/perl.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;perl&#34;&gt;&lt;br&gt;&lt;b&gt;Perl&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/center&gt; &#xA;&lt;!-- markdownlint-enable --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-TOPICS-LIST:END --&gt; &#xA;&lt;h2&gt;Network&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you need in order to communicate?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A common language (for the two ends to understand)&lt;/li&gt; &lt;li&gt;A way to address who do you want to communicate with&lt;/li&gt; &lt;li&gt;A Connection (so the content of of the communication can reach the recipients) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is TCP/IP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A set of protocols that define how two or more devices can communicate with each other. To learn more about TCP/IP, read &lt;a href=&#34;http://www.penguintutor.com/linux/basic-network-reference&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is APIPA?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; APIPA is a set of it addresses that devices are allocated when the main DHCP server is not reachable &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What ip range does APIPA use?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; APIPA uses the ip range: 169.254.0.1 - 169.254.255.254. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Ethernet?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Ethernet simply refers to the most common type of Local Area Network (LAN) used today. A LAN—in contrast to a WAN (Wide Area Network), which spans a larger geographical area—is a connected network of computers in a small area, like your office, college campus, or even home. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a MAC address? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A MAC address is a unique identification number or code used to identify individual devices on the network.&lt;/p&gt; &lt;p&gt;Packets that are sent on the ethernet are always coming from a MAC address and sent to a MAC address. If a network adapter is receiving a packet, it is comparing the packet’s destination MAC address to the adapter’s own MAC address.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When is this MAC address used?: ff:ff:ff:ff:ff:ff&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;When a device sends a packet to the broadcast MAC address (FF:FF:FF:FF:FF:FF​), it is delivered to all stations on the local network. Ethernet broadcasts are used to resolve IP addresses to MAC addresses (by ARP) at the datalink layer . &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an IP address?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An Internet Protocol address (IP address) is a numerical label assigned to each device connected to a computer network that uses the Internet Protocol for communication.An IP address serves two main functions: host or network interface identification and location addressing. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain subnet mask and given an example&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A Subnet mask is a 32-bit number that masks an IP address, and divides the IP address into network address and host address. Subnet Mask is made by setting network bits to all &#34;1&#34;s and setting host bits to all &#34;0&#34;s. Within a given network, two host addresses are reserved for special purpose, and cannot be assigned to hosts. The &#34;0&#34; address is assigned a network address and &#34;255&#34; is assigned to a broadcast address, and they cannot be assigned to hosts.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;For Example&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;| Address Class | No of Network Bits | No of Host Bits | Subnet mask     | CIDR notation |&#xA;| ------------- | ------------------ | --------------- | --------------- | ------------- |&#xA;| A             | 8                  | 24              | 255.0.0.0       | /8            |&#xA;| A             | 9                  | 23              | 255.128.0.0     | /9            |&#xA;| A             | 12                 | 20              | 255.240.0.0     | /12           |&#xA;| A             | 14                 | 18              | 255.252.0.0     | /14           |&#xA;| B             | 16                 | 16              | 255.255.0.0     | /16           |&#xA;| B             | 17                 | 15              | 255.255.128.0   | /17           |&#xA;| B             | 20                 | 12              | 255.255.240.0   | /20           |&#xA;| B             | 22                 | 10              | 255.255.252.0   | /22           |&#xA;| C             | 24                 | 8               | 255.255.255.0   | /24           |&#xA;| C             | 25                 | 7               | 255.255.255.128 | /25           |&#xA;| C             | 28                 | 4               | 255.255.255.240 | /28           |&#xA;| C             | 30                 | 2               | 255.255.255.252 | /30           |&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a private IP address? In which scenarios/system designs, one should use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Private IP addresses are assigned to the hosts in the same network to communicate among one another. As the name &#34;private&#34; suggests, the devices having the priate IP addresses assigned can&#39;t be reached by the devices from any external network. For example, if I am living in a hostel and I want my hostelmates to join the game server I have hosted, I will ask them to join via my server&#39;s private IP address, since the network is local to the hostel. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a public IP address? In which scenarios/system designs, one should use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; A public IP address is the public facing IP address. In the event that you was hosting a game server that you want your friends to join, you will give your friends your public IP address to allow their computers to identify and locate your network and server in order for the connection to take place. One time that you would not need to use a public facing IP address is in the event that you was playing with friends who was connected to the same network as you, in that case, you would use a private ip address. In order for someone to be able to connect to your server that is located internally, you will have to setup a port forward to tell your router to allow traffic from the public domain into your network and vice versa. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the OSI model. What layers there are? What each layer is responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Application: user end (HTTP is here)&lt;/li&gt; &#xA;   &lt;li&gt;Presentation: establishes context between application-layer entities (Encryption is here)&lt;/li&gt; &#xA;   &lt;li&gt;Session: establishes, manages and terminates the connections&lt;/li&gt; &#xA;   &lt;li&gt;Transport: transfers variable-length data sequences from a source to a destination host (TCP &amp;amp; UDP are here)&lt;/li&gt; &#xA;   &lt;li&gt;Network: transfers datagrams from one network to another (IP is here)&lt;/li&gt; &#xA;   &lt;li&gt;Data link: provides a link between two directly connected nodes (MAC is here)&lt;/li&gt; &#xA;   &lt;li&gt;Physical: the electrical and physical spec the data connection (Bits are here)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can read more about the OSI model in &lt;a href=&#34;http://www.penguintutor.com/linux/basic-network-reference&#34;&gt;penguintutor.com&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;For each of the following determine to which OSI layer it belongs: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Error correction&lt;/li&gt; &#xA;   &lt;li&gt;Packets routing&lt;/li&gt; &#xA;   &lt;li&gt;Cables and electrical signals&lt;/li&gt; &#xA;   &lt;li&gt;MAC address&lt;/li&gt; &#xA;   &lt;li&gt;IP address&lt;/li&gt; &#xA;   &lt;li&gt;Terminate connections&lt;/li&gt; &#xA;   &lt;li&gt;3 way handshake&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;li&gt;Error correction - Data link&lt;/li&gt; &lt;li&gt;Packets routing - Network&lt;/li&gt; &lt;li&gt;Cables and electrical signals - Physical&lt;/li&gt; &lt;li&gt;MAC address - Data link&lt;/li&gt; &lt;li&gt;IP address - Network&lt;/li&gt; &lt;li&gt;Terminate connections - Session&lt;/li&gt; &lt;/b&gt;&#xA; &lt;li&gt;&lt;b&gt;3 way handshake - Transport &lt;/b&gt;&lt;/li&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What delivery schemes are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Unitcast: One to one communication where there is one sender and one receiver.&lt;/p&gt; &lt;p&gt;Broadcast: Sending a message to everyone in the network. The address ff:ff:ff:ff:ff:ff is used for broadcasting. Two common protocols which use broadcast are ARP and DHCP.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Multicast: Sending a message to a group of subscribers. It can be one-to-many or many-to-many. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is CSMA/CD? Is it used in modern ethernet networks?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;CSMA/CD stands for Carrier Sense Multiple Access / Collision Detection. Its primarily focus it to manage access to shared medium/bus where only one host can transmit at a given point of time.&lt;/p&gt; &lt;p&gt;CSMA/CD algorithm:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Before sending a frame, it checks whether another host already transmitting a frame.&lt;/li&gt; &lt;li&gt;If no one transmitting, it starts transmitting the frame.&lt;/li&gt; &lt;li&gt;If two hosts transmitted at the same time, we have a collision.&lt;/li&gt; &lt;li&gt;Both hosts stop sending the frame and they send to everyone a &#39;jam signal&#39; notifying everyone that a collision occurred&lt;/li&gt; &lt;li&gt;They are waiting for a random time before sending again&lt;/li&gt; &lt;li&gt;Once each host waited for a random time, they try to send the frame again and so the &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the following network devices and the difference between them: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;router&lt;/li&gt; &#xA;   &lt;li&gt;switch&lt;/li&gt; &#xA;   &lt;li&gt;hub&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does a router works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A router is a physical or virtual appliance that passes information between two or more packet-switched computer networks. A router inspects a given data packet&#39;s destination Internet Protocol address (IP address), calculates the best way for it to reach its destination and then forwards it accordingly.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NAT?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Network Address Translation (NAT) is a process in which one or more local IP address is translated into one or more Global IP address and vice versa in order to provide Internet access to the local hosts.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a proxy? How does it works? What do we need it for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A proxy server acts as a gateway between you and the internet. It’s an intermediary server separating end users from the websites they browse.&lt;/p&gt; &lt;p&gt;If you’re using a proxy server, internet traffic flows through the proxy server on its way to the address you requested. The request then comes back through that same proxy server (there are exceptions to this rule), and then the proxy server forwards the data received from the website to you.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;roxy servers provide varying levels of functionality, security, and privacy depending on your use case, needs, or company policy. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is TCP? How does it works? What is the 3 way handshake?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;TCP 3-way handshake or three-way handshake is a process which is used in a TCP/IP network to make a connection between server and client.&lt;/p&gt; &lt;p&gt;A three-way handshake is primarily used to create a TCP socket connection. It works when:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A client node sends a SYN data packet over an IP network to a server on the same or an external network. The objective of this packet is to ask/infer if the server is open for new connections.&lt;/li&gt; &lt;li&gt;The target server must have open ports that can accept and initiate new connections. When the server receives the SYN packet from the client node, it responds and returns a confirmation receipt – the ACK packet or SYN/ACK packet.&lt;/li&gt; &lt;li&gt;The client node receives the SYN/ACK from the server and responds with an ACK packet. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is round-trip delay or round-trip time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Round-trip_delay&#34;&gt;wikipedia&lt;/a&gt;: &#34;the length of time it takes for a signal to be sent plus the length of time it takes for an acknowledgement of that signal to be received&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bonus question: what is the RTT of LAN? &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does SSL handshake work?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between TCP and UDP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;TCP establishes a connection between the client and the server to guarantee the order of the packages, on the other hand, UDP does not establish a connection between client and server and doesn&#39;t handle package order. This makes UDP more lightweight than TCP and a perfect candidate for services like streaming.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;http://www.penguintutor.com/linux/basic-network-reference&#34;&gt;Penguintutor.com&lt;/a&gt; provides a good explanation. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What TCP/IP protocols are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;default gateway&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A default gateway serves as an access point or IP router that a networked computer uses to send information to a computer in another network or the internet. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ARP? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;ARP stands for Address Resolution Protocol. When you try to ping an IP address on your local network, say 192.168.1.1, your system has to turn the IP address 192.168.1.1 into a MAC address. This involves using ARP to resolve the address, hence its name.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Systems keep an ARP look-up table where they store information about what IP addresses are associated with what MAC addresses. When trying to send a packet to an IP address, the system will first consult this table to see if it already knows the MAC address. If there is a value cached, ARP is not used. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is TTL? What does it helps to prevent?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DHCP? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It stands for Dynamic Host Configuration Protocol, and allocates IP addresses, subnet masks and gateways to hosts. This is how it works:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A host upon entering a network, broadcasts a message in search of a DHCP server (DHCP DISCOVER)&lt;/li&gt; &#xA;   &lt;li&gt;An offer message is sent back by the DHCP server as a packet containing lease time, subnet mask, IP addresses, etc (DHCP OFFER)&lt;/li&gt; &#xA;   &lt;li&gt;Depending on which offer accepted, the client sends back a reply broadcast letting all DHCP servers know (DHCP REQUEST)&lt;/li&gt; &#xA;   &lt;li&gt;Server sends an acknowledgment (DHCP ACK)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read more &lt;a href=&#34;https://linuxjourney.com/lesson/dhcp-overview&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you have two DHCP servers in the same network? How it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SSL tunneling? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a socket? Where can you see the list of sockets in your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is IPv6? Why should we consider using it if we have IPv4?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is VLAN?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is MTU?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens if you send a packet that is bigger than the MTU?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False?. Ping is using UDP because it doesn&#39;t care about reliable connection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SDN?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ICMP? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NAT? How does it work?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;NAT stands for network address translation. It’s a way to map multiple local private addresses to a public one before transferring the information. Organizations that want multiple devices to employ a single IP address use NAT, as do most home routers. For example, your computer&#39;s private IP could be 192.168.1.100, but your router maps the traffic to it&#39;s public IP (e.g. 1.1.1.1). Any device on the internet would see the traffic coming from your public IP (1.1.1.1) instead of your private IP (192.168.1.100). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which factors affect network performances&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which port number is used in each of the following protocols?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;SSH&lt;/li&gt; &#xA;   &lt;li&gt;SMTP&lt;/li&gt; &#xA;   &lt;li&gt;HTTP&lt;/li&gt; &#xA;   &lt;li&gt;DNS&lt;/li&gt; &#xA;   &lt;li&gt;HTTPS&lt;/li&gt; &#xA;   &lt;li&gt;FTP&lt;/li&gt; &#xA;   &lt;li&gt;SFTP&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;SSH - 22&lt;/li&gt; &lt;li&gt;SMTP - 25&lt;/li&gt; &lt;li&gt;HTTP - 80&lt;/li&gt; &lt;li&gt;DNS - 53&lt;/li&gt; &lt;li&gt;HTTPS - 443&lt;/li&gt; &lt;li&gt;FTP - 21&lt;/li&gt; &lt;li&gt;SFTP - 22 &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Network - Data and Control planes&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;control plane&#34; refers to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The control plane is the part of the network that decides how to route and forward packets to a different location. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;data plane&#34; refers to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The data plane is the part of the network that actually forwards the data/packets. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;management plane&#34; refers to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Refers to monitoring and management functions. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;To which plane (data, control, ...) is creating routing tables belongs to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Control Plane. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Spanning Tree Protocol (STP)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is link aggregation? Why is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Asymmetric Routing? How do deal with it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What overlay (tunnel) protocols are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is GRE? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is VXLAN? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SNAT?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain OSPF&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is latency?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Latency is the time taken for an information to reach its destination from the source. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is bandwidth?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bandwidth is the capacity of a communication channel to measure how much data the latter can handle over a specific time period. More bandwidth would imply more traffic handling and thus more data transfer. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is throughput?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Throughput refers to the measurement of the real amount of data transferred over a certain period of time across any transmission channel. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When performing a search query, what is more important, latency or throughput? And how to assure that what managing global infrastructure?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Latency. To have a good latency, a search query should be forwarded to the closest datacenter. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When uploading a video, what is more important, latency or throughput? And how to assure that?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Throughput. To have a good throughput, the upload stream should be routed to an underutilized link. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What other considerations (except latency and throughput) are there when forwarding requests?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Keep caches updated (which means the request could be forwarded not to the closest datacenter) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Spine &amp;amp; Leaf&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Network Congestion? What can cause it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you tell me about UDP packet format? What about TCP packet format? How is it different?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the exponential backoff algorithm? Where is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using Hamming code, what would be the code word for the following data word 100111010001101?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;00110011110100011101 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Give examples of protocols found in the application layer&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Hypertext Transfer Protocol (HTTP) - used for the webpages on the internet&lt;/li&gt; &lt;li&gt;Simple Mail Transfer Protocol (SMTP) - email transmission&lt;/li&gt; &lt;li&gt;Telecommunications Network - (TELNET) - terminal emulation to allow client access to telnet server&lt;/li&gt; &lt;li&gt;File Transfer Protocol (FTP) - facilitates transfer of files between any two machines&lt;/li&gt; &lt;li&gt;Domain Name System (DNS) - domain name translation&lt;/li&gt; &lt;li&gt;Dynamic Host Configuration Protocol (DHCP) - allocates IP addresses, subnet masks and gateways to hosts&lt;/li&gt; &lt;li&gt;Simple Network Management Protocol (SNMP) - gathers data of devices on the network &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Give examples of protocols found in the network Layer&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Internet Protocol (IP) - assists in routing packets from one machine to another&lt;/li&gt; &lt;li&gt;Internet Control Message Protocol (ICMP) - lets one know what is going such as error messages and debugging information &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HSTS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; HTTP Strict Transport Security is a web server directive that informs user agents and web browsers how to handle its connection through a response header sent at the very beginning and back to the browser. This forces connections over HTTPS encryption, disregarding any script&#39;s call to load any resource in that domain over HTTP. &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read more [here](&lt;a href=&#34;https://www.globalsign.com/en/blog/what-is-hsts-and-how-do-i-use-it#:~:text=HTTP%20Strict%20Transport%20Security%20(HSTS,and%20back%20to%20the%20browser.)&#34;&gt;https://www.globalsign.com/en/blog/what-is-hsts-and-how-do-i-use-it#:~:text=HTTP%20Strict%20Transport%20Security%20(HSTS,and%20back%20to%20the%20browser.)&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Network - Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Internet? Is it the same as the World Wide Web?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The internet refers to network of networks, transferring huge amounts of data around the globe.&lt;br&gt; The World Wide Web is an application running on millions of server, on top of the internet, accessed through what is know as the web browser &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the ISP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;ISP (Internet Service Provider) is the local internet company provider. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Linux&lt;/h2&gt; &#xA;&lt;h4&gt;Linux Master Application&lt;/h4&gt; &#xA;&lt;p&gt;A completely free application for testing your knowledge on Linux&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.codingshell.linuxmaster&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/linux_master.jpeg&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Linux Self Assessment&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is your experience with Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Only you know :)&lt;/p&gt; &lt;p&gt;For example:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Administration&lt;/li&gt; &lt;li&gt;Troubleshooting &amp;amp; Debugging&lt;/li&gt; &lt;li&gt;Storage&lt;/li&gt; &lt;li&gt;Networking&lt;/li&gt; &lt;li&gt;Development&lt;/li&gt; &lt;li&gt;Deployments &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what each of the following commands does and give an example on how to use it: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;touch&lt;/li&gt; &#xA;   &lt;li&gt;ls&lt;/li&gt; &#xA;   &lt;li&gt;rm&lt;/li&gt; &#xA;   &lt;li&gt;cat&lt;/li&gt; &#xA;   &lt;li&gt;cp&lt;/li&gt; &#xA;   &lt;li&gt;mkdir&lt;/li&gt; &#xA;   &lt;li&gt;pwd&lt;/li&gt; &#xA;   &lt;li&gt;cd&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;touch - update file&#39;s timestamp. More commonly used for creating files&lt;/li&gt; &lt;li&gt;ls - listing files and directories&lt;/li&gt; &lt;li&gt;rm - remove files and directories&lt;/li&gt; &lt;li&gt;cat - create, view and concatenate files&lt;/li&gt; &lt;li&gt;cp - copy files and directories&lt;/li&gt; &lt;li&gt;mkdir - create directories&lt;/li&gt; &lt;li&gt;pwd - print current working directory (= at what path the user currently located)&lt;/li&gt; &lt;li&gt;cd - change directory &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What each of the following commands does? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;cd /&lt;/li&gt; &#xA;   &lt;li&gt;cd ~&lt;/li&gt; &#xA;   &lt;li&gt;cd&lt;/li&gt; &#xA;   &lt;li&gt;cd ..&lt;/li&gt; &#xA;   &lt;li&gt;cd .&lt;/li&gt; &#xA;   &lt;li&gt;cd -&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;cd / -&amp;gt; change to the root directory&lt;/li&gt; &lt;li&gt;cd ~ -&amp;gt; change to your home directory&lt;/li&gt; &lt;li&gt;cd -&amp;gt; change to your home directory&lt;/li&gt; &lt;li&gt;cd .. -&amp;gt; change to the directory above your current i.e parent directory&lt;/li&gt; &lt;li&gt;cd . -&amp;gt; change to the directory you currently in&lt;/li&gt; &lt;li&gt;cd - -&amp;gt; change to the last visited path &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Some of the commands in the previous question can be run with the -r/-R flag. What does it do? Give an example to when you would use it&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The -r (or -R in some commands) flag allows the user to run a certain command recursively. For example, listing all the files under the following tree is possible when done recursively (&lt;code&gt;ls -R&lt;/code&gt;):&lt;/p&gt; &lt;p&gt;/dir1/ dir2/ file1 file2 dir3/ file3&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;To list all the files, one can run &lt;code&gt;ls -R /dir1&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain each field in the output of `ls -l` command&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It shows a detailed list of files in a long format. From the left: &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;file permissions, number of links, owner name, owner group, file size, timestamp of last modification and directory/file name &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are hidden files/directories? How to list them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;These are files directly not displayed after performing a standard ls direct listing. An example of these files are .bashrc which are used to execute some scripts. Some also store configuration about services on your host like .KUBECONFIG. The command used to list them is, &lt;code&gt;ls -a&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do &amp;gt; and &amp;lt; do in terms of input and output for programs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; They take in input (&amp;lt;) and output for a given file (&amp;gt;) using stdin and stdout. &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;myProgram &amp;lt; input.txt &amp;gt; executionOutput.txt&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what each of the following commands does and give an example on how to use it: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;sed&lt;/li&gt; &#xA;   &lt;li&gt;grep&lt;/li&gt; &#xA;   &lt;li&gt;cut&lt;/li&gt; &#xA;   &lt;li&gt;awk&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;sed: a stream editor. Can be used for various purposes like replacing a word in a file: &lt;code&gt;sed -i s/salad/burger/g&lt;/code&gt;&lt;/li&gt; &lt;li&gt;grep: a search tool. Used to search, count or match a text in a file: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;searching for any line that contains a word in a file: &lt;code&gt;grep &#39;word&#39; file.md&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;or displaying the total number of times a string appears in a file: &lt;code&gt;grep -c &#39;This is a string&#39; file.md&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;cut: a tool for cutting out selected portions of each line of a file: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;syntax: &lt;code&gt;cut OPTION [FILE]&lt;/code&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;cutting first two bytes from a word in a file: &lt;code&gt;cut -b 1-2 file.md&lt;/code&gt;, output: &lt;code&gt;wo&lt;/code&gt; &lt;/li&gt;&#xA;      &lt;/ul&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;      &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to rename the name of a file or a directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the &lt;code&gt;mv&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Specify which command would you use (and how) for each of the following scenarios &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Remove a directory with files&lt;/li&gt; &#xA;   &lt;li&gt;Display the content of a file&lt;/li&gt; &#xA;   &lt;li&gt;Provides access to the file /tmp/x for everyone&lt;/li&gt; &#xA;   &lt;li&gt;Change working directory to user home directory&lt;/li&gt; &#xA;   &lt;li&gt;Replace every occurrence of the word &#34;good&#34; with &#34;great&#34; in the file /tmp/y&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;code&gt;rm -rf dir&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;cat or less&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;chmod 777 /tmp/x&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;cd ~&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;sed -i s/good/great/g /tmp/y&lt;/code&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you check what is the path of a certain command?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;whereis&lt;/li&gt; &lt;li&gt;which &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between these two commands? Will it result in the same output? &lt;pre&gt;&lt;code&gt;echo hello world&#xA;echo &#34;hello world&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The echo command receives two separate arguments in the first execution and in the second execution it gets one argument which is the string &#34;hello world&#34;. The output will be the same. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain piping. How do you perform piping?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using a pipe in Linux, allows you to send the output of one command to the input of another command. For example: &lt;code&gt;cat /etc/services | wc -l&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Fix the following commands: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;sed &#34;s/1/2/g&#39; /tmp/myFile&lt;/li&gt; &#xA;   &lt;li&gt;find . -iname *.yaml -exec sed -i &#34;s/1/2/g&#34; {} ;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;sed &#39;s/1/2/g&#39; /tmp/myFile  # sed &#34;s/1/2/g&#34; is also fine&#xA;find . -iname &#34;*.yaml&#34; -exec sed -i &#34;s/1/2/g&#34; {} \;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check which commands you executed in the past?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;history command or .bash_history file &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Running the command &lt;code&gt;df&lt;/code&gt; you get &#34;command not found&#34;. What could be wrong and how to fix it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;p&gt;&lt;b&gt; Most likely the default/generated $PATH was somehow modified or overridden thus not containing &lt;code&gt;/bin/&lt;/code&gt; where df would normally go. This issue could also happen if bash_profile or any configuration file of your interpreter was wrongly modified, causing erratics behaviours. You would solve this by fixing your $PATH variable: &lt;/b&gt;&lt;/p&gt;&#xA; &lt;p&gt;&lt;b&gt;As to fix it there are several options:&lt;/b&gt;&lt;/p&gt;&#xA; &lt;b&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Manually adding what you need to your $PATH &lt;code&gt;PATH=&#34;$PATH&#34;:/user/bin:/..etc&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;You have your weird env variables backed up.&lt;/li&gt; &#xA;   &lt;li&gt;You would look for your distro default $PATH variable, copy paste using method #1&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Note: There are many ways of getting errors like this: if bash_profile or any configuration file of your interpreter was wrongly modified; causing erratics behaviours, permissions issues, bad compiled software (if you compiled it by yourself)... there is no answer that will be true 100% of the time. &lt;/b&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you schedule tasks periodically?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can use the commands &lt;code&gt;cron&lt;/code&gt; and &lt;code&gt;at&lt;/code&gt;. With cron, tasks are scheduled using the following format:&lt;/p&gt; &lt;p&gt;&lt;code&gt;*/30 * * * * bash myscript.sh&lt;/code&gt; Executes the script every 30 minutes.&lt;/p&gt; &lt;p&gt;&#xA;   &lt;minute&gt; &#xA;    &lt;hour&gt; &#xA;     &lt;day of month&gt; &#xA;      &lt;month&gt; &#xA;       &lt;day of week&gt; &#xA;        &lt;command to execute&gt;&#xA;       &lt;/day&gt;&#xA;      &lt;/month&gt;&#xA;     &lt;/day&gt;&#xA;    &lt;/hour&gt;&#xA;   &lt;/minute&gt;&lt;/p&gt; &lt;p&gt;The tasks are stored in a cron file, you can write in it using &lt;code&gt;crontab -e&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Alternatively if you are using a distro with systemd it&#39;s recommended to use systemd timers. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - I/O Redirection&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Linux I/O redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Demonstrate Linux output redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;ls &amp;gt; ls_output.txt &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Demonstrate Linux stderr output redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;yippiekaiyay 2&amp;gt; ls_output.txt &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Demonstrate Linux stderr to stdout redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;yippiekaiyay 1&amp;gt;&amp;amp;2 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of running the following command? &lt;code&gt;yippiekaiyay 1&amp;gt;&amp;amp;2 die_hard&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An output similar to: &lt;code&gt;yippikaiyay: command not found...&lt;/code&gt;&lt;br&gt; The file &lt;code&gt;die_hard&lt;/code&gt; will not be created &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux FHS&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In Linux FHS (Filesystem Hierarchy Standard) what is the &lt;code&gt;/&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The root of the filesystem. The beginning of the tree. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is stored in each of the following paths? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;/bin, /sbin, /usr/bin and /usr/sbin&lt;/li&gt; &#xA;   &lt;li&gt;/etc&lt;/li&gt; &#xA;   &lt;li&gt;/home&lt;/li&gt; &#xA;   &lt;li&gt;/var&lt;/li&gt; &#xA;   &lt;li&gt;/tmp&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;binaries&lt;/li&gt; &lt;li&gt;configuration files&lt;/li&gt; &lt;li&gt;home directories of the different users&lt;/li&gt; &lt;li&gt;files that tend to change and be modified like logs&lt;/li&gt; &lt;li&gt;temporary files &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is special about the /tmp directory when compared to other directories?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;/tmp&lt;/code&gt; folder is cleaned automatically, usually upon reboot. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What kind of information one can find in /proc?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What makes /proc different from other filesystems?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? only root can create files in /proc&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. No one can create file in /proc directly (certain operations can lead to files being created in /proc by the kernel). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can be found in /proc/cmdline?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The command passed to the boot loader to run the kernel &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In which path can you find the system devices (e.g. block storage)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux - Permissions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to change the permissions of a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the &lt;code&gt;chmod&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What does the following permissions mean?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;777&lt;/li&gt; &#xA;   &lt;li&gt;644&lt;/li&gt; &#xA;   &lt;li&gt;750&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;pre&gt;&#xA;777 - You give the owner, group and other: Execute (1), Write (2) and Read (4); 4+2+1 = 7.&#xA;644 - Owner has Read (4), Write (2), 4+2 = 6; Group and Other have Read (4).&#xA;750 - Owner has x+r+w, Group has Read (4) and Execute (1); 4+1 = 5. Other have no permissions.&#xA;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What this command does? &lt;code&gt;chmod +x some_file&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It adds execute permissions to all sets i.e user, group and others &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is setgid and setuid&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;setuid is a linux file permission that permits a user to run a file or program with the permissions of the owner of that file. This is possible by elevation of current user privileges.&lt;/li&gt; &lt;li&gt;setgid is a process when executed will run as the group that owns the file. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the purpose of sticky bit?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Its a bit that only allows the owner or the root user to delete or modify the file. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the following commands do? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;chmod&lt;/li&gt; &#xA;   &lt;li&gt;chown&lt;/li&gt; &#xA;   &lt;li&gt;chgrp&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;chmod - changes access permissions to files system objects&lt;/li&gt; &lt;li&gt;chown - changes the owner of file system files and directories&lt;/li&gt; &lt;li&gt;chgrp - changes the group associated with a file system object &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is sudo? How do you set it up?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In order to install packages on the system one must be the root user or use the sudo command&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what are ACLs. For what use cases would you recommend to use them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You try to create a file but it fails. Name at least three different reason as to why it could happen&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;No more disk space&lt;/li&gt; &lt;li&gt;No more inodes&lt;/li&gt; &lt;li&gt;No permissions &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A user accidentally executed the following &lt;code&gt;chmod -x $(which chmod)&lt;/code&gt;. How to fix it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using &lt;code&gt;sudo setfacl -m u::rx /usr/bin/chmod&lt;/code&gt; will set the execute permissions on &lt;code&gt;chmod&lt;/code&gt; for all the users. Post this, the &lt;code&gt;chmod&lt;/code&gt; binary can be used as usual. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - systemd&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is systemd?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;b&gt; Systemd is a daemon (System &#39;d&#39;, d stands for daemon). &lt;p&gt;A daemon is a program that runs in the background without direct control of the user, although the user can at any time talk to the daemon.&lt;/p&gt; &lt;p&gt;systemd has many features such as user processes control/tracking, snapshot support, inhibitor locks..&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;If we visualize the unix/linux system in layers, systemd would fall directly after the linux kernel.&lt;br&gt; Hardware -&amp;gt; Kernel -&amp;gt; &lt;u&gt;Daemons&lt;/u&gt;, System Libraries, Server Display. &lt;/b&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to start or stop a service?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;To start a service: &lt;code&gt;systemctl start &amp;lt;service name&amp;gt;&lt;/code&gt; To stop a service: &lt;code&gt;systemctl stop &amp;lt;service name&amp;gt;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check the status of a service?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;systemctl status &amp;lt;service name&amp;gt;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;On a system which uses systemd, how would you display the logs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;journalctl&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe how to make a certain process/app a service&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux - Troubleshooting &amp;amp; Debugging&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where system logs are located?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;/var/log &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to follow file&#39;s content as it being appended without opening the file every time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;tail -f &amp;lt;file_name&amp;gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for troubleshooting and debugging &lt;b&gt;network&lt;/b&gt; issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;dstat -t&lt;/code&gt; is great for identifying network and disk issues. &lt;code&gt;netstat -tnlaup&lt;/code&gt; can be used to see which processes are running on which ports. &lt;code&gt;lsof -i -P&lt;/code&gt; can be used for the same purpose as netstat. &lt;code&gt;ngrep -d any metafilter&lt;/code&gt; for matching regex against payloads of packets. &lt;code&gt;tcpdump&lt;/code&gt; for capturing packets &lt;code&gt;wireshark&lt;/code&gt; same concept as tcpdump but with GUI (optional). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for troubleshooting and debugging &lt;b&gt;disk &amp;amp; file system&lt;/b&gt; issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;dstat -t&lt;/code&gt; is great for identifying network and disk issues. &lt;code&gt;opensnoop&lt;/code&gt; can be used to see which files are being opened on the system (in real time). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for troubleshooting and debugging &lt;b&gt;process&lt;/b&gt; issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;strace&lt;/code&gt; is great for understanding what your program does. It prints every system call your program executed. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for debugging CPU related issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;top&lt;/code&gt; will show you how much CPU percentage each process consumes &lt;code&gt;perf&lt;/code&gt; is a great choice for sampling profiler and in general, figuring out what your CPU cycles are &#34;wasted&#34; on &lt;code&gt;flamegraphs&lt;/code&gt; is great for CPU consumption visualization (&lt;a href=&#34;http://www.brendangregg.com/flamegraphs.html&#34;&gt;http://www.brendangregg.com/flamegraphs.html&lt;/a&gt;) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You get a call from someone claiming &#34;my system is SLOW&#34;. What do you do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Check with &lt;code&gt;top&lt;/code&gt; for anything unusual&lt;/li&gt; &lt;li&gt;Run &lt;code&gt;dstat -t&lt;/code&gt; to check if it&#39;s related to disk or network.&lt;/li&gt; &lt;li&gt;Check if it&#39;s network related with &lt;code&gt;sar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Check I/O stats with &lt;code&gt;iostat&lt;/code&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain iostat output&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to debug binaries?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between CPU load and utilization?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How you measure time execution of a program?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux - Kernel&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a kernel, and what does it do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The kernel is part of the operating system and is responsible for tasks like:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Allocating memory&lt;/li&gt; &lt;li&gt;Schedule processes&lt;/li&gt; &lt;li&gt;Control CPU &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you find out which Kernel version your system is using?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;uname -a&lt;/code&gt; command &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Linux kernel module and how do you load a new module?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain user space vs. kernel space&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The operating system executes the kernel in protected memory to prevent anyone from changing (and risking it crashing). This is what is known as &#34;Kernel space&#34;. &#34;User space&#34; is where users executes their commands or applications. It&#39;s important to create this separation since we can&#39;t rely on user applications to not tamper with the kernel, causing it to crash.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Applications can access system resources and indirectly the kernel space by making what is called &#34;system calls&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In what phases of kernel lifecycle, can you change its configuration?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Build time (when it&#39;s compiled)&lt;/li&gt; &lt;li&gt;Boot time (when it starts)&lt;/li&gt; &lt;li&gt;Runtime (once it&#39;s already running) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where can you find kernel&#39;s configuration?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Usually it will reside in &lt;code&gt;/boot/config-&amp;lt;kernel version&amp;gt;.&amp;lt;os release&amp;gt;.&amp;lt;arch&amp;gt;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where can you find the file that contains the command passed to the boot loader to run the kernel?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;/proc/cmdline&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to list kernel&#39;s runtime parameters?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;sysctl -a&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Will running &lt;code&gt;sysctl -a&lt;/code&gt; as a regular user vs. root, produce different result?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Yes, you might notice that in most systems, when running &lt;code&gt;systctl -a&lt;/code&gt; with root, you&#39;ll get more runtime parameters compared to executing the same command with a regular user. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You would like to enable IPv4 forwarding in the kernel, how would you do it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;sudo sysctl net.ipv4.ip_forward=1&lt;/code&gt;&lt;/p&gt; &lt;p&gt;To make it persistent (applied after reboot for example): insert &lt;code&gt;net.ipv4.ip_forward = 1&lt;/code&gt; into &lt;code&gt;/etc/sysctl.conf&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another way to is to run &lt;code&gt;echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How &lt;code&gt;sysctl&lt;/code&gt; applies the changes to kernel&#39;s runtime parameters the moment you run sysctl command?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;If you &lt;code&gt;strace&lt;/code&gt; the sysctl command you can see it does it by changing the file under /proc/sys/...&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In the past it was done with sysctl system call, but it was deprecated at some point. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How changes to kernel runtime parameters persist? (applied even after reboot to the system for example)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;There is a service called &lt;code&gt;systemd-sysctl&lt;/code&gt; that takes the content of /etc/sysctl.conf and applies it. This is how changes persist, even after reboot, when they are written in /etc/sysctl.conf &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are the changes you make to kernel parameters in a container, affects also the kernel parameters of the host on which the container runs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;No. Containers have their own /proc filesystem so any change to kernel parameters inside a container, are not affecting the host or other containers running on that host. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - SSH&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SSH? How to check if a Linux server is running SSH?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/SSH_(Secure_Shell)&#34;&gt;Wikipedia Definition&lt;/a&gt;: &#34;SSH or Secure Shell is a cryptographic network protocol for operating network services securely over an unsecured network.&#34;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.hostinger.com/tutorials/ssh-tutorial-how-does-ssh-work&#34;&gt;Hostinger.com Definition&lt;/a&gt;: &#34;SSH, or Secure Shell, is a remote administration protocol that allows users to control and modify their remote servers over the Internet.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An SSH server will have SSH daemon running. Depends on the distribution, you should be able to check whether the service is running (e.g. systemctl status sshd). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why SSH is considered better than telnet?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Telnet also allows you to connect to a remote host but as opposed to SSH where the communication is encrypted, in telnet, the data is sent in clear text, so it doesn&#39;t considered to be secured because anyone on the network can see what exactly is sent, including passwords. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is stored in &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The file stores the key fingerprints for the clients connecting to the SSH server. This fingerprint creates a trust between the client and the server for future SSH connections. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You try to ssh to a server and you get &#34;Host key verification failed&#34;. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It means that the key of the remote host was changed and doesn&#39;t match the one that stored on the machine (in ~/.ssh/known_hosts). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between SSH and SSL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;ssh-keygen&lt;/code&gt; is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;ssh-keygen&lt;/code&gt; is a tool to generate an authentication key pair for SSH, that consists of a private and a public key. It supports a number of algorithms to generate authentication keys :&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;dsa&lt;/li&gt; &#xA;   &lt;li&gt;ecdsa&lt;/li&gt; &#xA;   &lt;li&gt;ecdsa-sk&lt;/li&gt; &#xA;   &lt;li&gt;ed25519&lt;/li&gt; &#xA;   &lt;li&gt;ed25519-sk&lt;/li&gt; &#xA;   &lt;li&gt;rsa (default)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;One can also specify number of bits in key. Command below generates an SSH key pair with RSA 4096-bits :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ ssh-keygen -t rsa -b 4096&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The output looks like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Generating public/private rsa key pair.&#xA;Enter file in which to save the key (/home/user/.ssh/id_rsa): &#xA;Enter passphrase (empty for no passphrase): &#xA;Enter same passphrase again: &#xA;Your identification has been saved in /home/user/.ssh/id_rsa&#xA;Your public key has been saved in /home/user/.ssh/id_rsa.pub&#xA;The key fingerprint is:&#xA;SHA256:f5MOGnhzYfC0ZCHvbSXXiRiNVYETjxpHcXD5xSojx+M user@mac-book-pro&#xA;The key&#39;s randomart image is:&#xA;+---[RSA 4096]----+&#xA;|        . ..+***o|&#xA;|         o o++*o+|&#xA;|        . =+.++++|&#xA;|         B.oX+. .|&#xA;|        S *=o+   |&#xA;|       . o oE.   |&#xA;|      . + + +    |&#xA;|       . = + .   |&#xA;|        .   .    |&#xA;+----[SHA256]-----+&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;One can check how many bits an SSH key has with :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ ssh-keygen -l -f /home/user/.ssh/id_rsa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Output should look like this :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;4096 SHA256:f5MOGnhzYfC0ZCHvbSXXiRiNVYETjxpHcXD5xSojx+M user@mac-book-pro (RSA)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It shows the key is RSA 4096-bits.&lt;/p&gt; &lt;p&gt;&lt;code&gt;-l&lt;/code&gt; and &lt;code&gt;-f&lt;/code&gt; parameters usage explanation :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;-l          Show the fingerprint of the key file.&#xA;-f filename Filename of the key file.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Learn more : &lt;a href=&#34;https://superuser.com/a/139311&#34;&gt;How can I tell how many bits my ssh key is? - Superuser&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SSH port forwarding?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux - Globbing, Wildcards&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Globbing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are wildcards? Can you give an example of how to use them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what will &lt;code&gt;ls [XYZ]&lt;/code&gt; match&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what will &lt;code&gt;ls [^XYZ]&lt;/code&gt; match&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what will &lt;code&gt;ls [0-5]&lt;/code&gt; match&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What each of the following matches &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;?&lt;/li&gt; &#xA;   &lt;li&gt;*&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;The ? matches any single character&lt;/li&gt; &lt;li&gt;The * matches zero or more characters &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do we grep for in each of the following commands?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;grep &#39;[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}&#39; some_file&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;grep -E &#34;error|failure&#34; some_file&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;grep &#39;[0-9]$&#39; some_file&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;An IP address&lt;/li&gt; &lt;li&gt;The word &#34;error&#34; or &#34;failure&#34;&lt;/li&gt; &lt;li&gt;Lines which end with a number &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which line numbers will be printed when running `grep &#39;\baaa\b&#39;` on the following content: &lt;p&gt;aaa bbb ccc.aaa aaaaaa&lt;/p&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;&lt;p&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;lines 1 and 3. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference single and double quotes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is escaping? What escape character is used for escaping?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an exit code? What exit codes are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;An exit code (or return code) represents the code returned by a child process to its parent process.&lt;/p&gt; &lt;p&gt;0 is an exit code which represents success while anything higher than 1 represents error. Each number has different meaning, based on how the application was developed.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;I consider this as a good blog post to read more about it: &lt;a href=&#34;https://shapeshed.com/unix-exit-codes&#34;&gt;https://shapeshed.com/unix-exit-codes&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Boot Process&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me everything you know about the Linux boot process&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another way to ask this: what happens from the moment you turned on the server until you get a prompt &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is GRUB2?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Secure Boot?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find in /boot?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux Disk &amp;amp; Filesystem&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s an inode?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;For each file (and directory) in Linux there is an inode, a data structure which stores meta data related to the file like its size, owner, permissions, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which of the following is not included in inode: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Link count&lt;/li&gt; &#xA;   &lt;li&gt;File size&lt;/li&gt; &#xA;   &lt;li&gt;File name&lt;/li&gt; &#xA;   &lt;li&gt;File timestamp&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;File name (it&#39;s part of the directory file) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check which disks are currently mounted?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Run &lt;code&gt;mount&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run the &lt;code&gt;mount&lt;/code&gt; command but you get no output. How would you check what mounts you have on your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;cat /proc/mounts&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between a soft link and hard link?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Hard link is the same file, using the same inode. Soft link is a shortcut to another file, using a different inode. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? You can create an hard link for a directory&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? You can create a soft link between different filesystems&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Directories always have by minimum 2 links&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you delete the original file in case of soft link and hard link?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you check what type of filesystem is used in /home?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;There are many answers for this question. One way is running &lt;code&gt;df -T&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a swap partition? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create a &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;new empty file&lt;/li&gt; &#xA;   &lt;li&gt;a file with text (without using text editor)&lt;/li&gt; &#xA;   &lt;li&gt;a file with given size&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You are trying to create a new file but you get &#34;File system is full&#34;. You check with df for free space and you see you used only 20% of the space. What could be the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you check what is the size of a certain directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;du -sh&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is LVM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following in regards to LVM: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;PV&lt;/li&gt; &#xA;   &lt;li&gt;VG&lt;/li&gt; &#xA;   &lt;li&gt;LV&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NFS? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What RAID is used for? Can you explain the differences between RAID 0, 1, 5 and 10?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the process of extending a filesystem disk space&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is lazy umount?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is tmpfs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is stored in each of the following logs? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;/var/log/messages&lt;/li&gt; &#xA;   &lt;li&gt;/var/log/boot.log&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? both /tmp and /var/tmp cleared upon system boot&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. /tmp is cleared upon system boot while /var/tmp is cleared every a couple of days or not cleared at all (depends on distro). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Performance Analysis&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check what is the current load average?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One can use &lt;code&gt;uptime&lt;/code&gt; or &lt;code&gt;top&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You know how to see the load average, great. but what each part of it means? for example 1.43, 2.34, 2.78&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;http://www.brendangregg.com/blog/2017-08-08/linux-load-averages.html&#34;&gt;This article&lt;/a&gt; summarizes the load average topic in a great way &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check process usage?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;pidstat &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check disk I/O?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;iostat -xz 1&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check how much free memory a system has? How to check memory consumption by each process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can use the commands &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;free&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check TCP stats?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;sar -n TCP,ETCP 1 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Processes&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;how to list all the processes running in your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;ps -ef&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to run a process in the background and why to do that in the first place?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can achieve that by specifying &amp;amp; at the end of the command. As to why, since some commands/processes can take a lot of time to finish execution or run forever, you may want to run them in the background instead of waiting for them to finish before gaining control again in current session. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you find how much memory a specific process consumes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;code&gt; mem() { ps -eo rss,pid,euser,args:100 --sort %mem | grep -v grep | grep -i $@ | awk &#39;{printf $1/1024 &#34;MB&#34;; $1=&#34;&#34;; print }&#39; } &lt;/code&gt; [Source](https://stackoverflow.com/questions/3853655/in-linux-how-to-tell-how-much-memory-processes-are-using) &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What signal is used by default when you run &#39;kill *process id*&#39;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&#xA;The default signal is SIGTERM (15). This signal kills&#xA;process gracefully which means it allows it to save current&#xA;state configuration.&#xA;&lt;/pre&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What signals are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;SIGTERM - default signal for terminating a process SIGHUP - common usage is for reloading configuration SIGKILL - a signal which cannot caught or ignored&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;To view all available signals run &lt;code&gt;kill -l&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;kill 0&lt;/code&gt; does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;kill -0 &#xA;   &lt;pid&gt;&lt;/pid&gt;&lt;/code&gt; does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a trap?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Every couple of days, a certain process stops running. How can you look into why it&#39;s happening?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you press ctrl + c?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Daemon in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A background process. Most of these processes are waiting for requests or set of conditions to be met before actually running anything. Some examples: sshd, crond, rpcbind. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the possible states of a process in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&#xA;Running (R)&#xA;Uninterruptible Sleep (D) - The process is waiting for I/O&#xA;Interruptible Sleep (S)&#xA;Stopped (T)&#xA;Dead (x)&#xA;Zombie (z)&#xA;&lt;/pre&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you kill a process in D state?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a zombie process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A process which has finished to run but has not exited.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One reason it happens is when a parent process is programmed incorrectly. Every parent process should execute wait() to get the exit code from the child process which finished to run. But when the parent isn&#39;t checking for the child exit code, the child process can still exists although it finished to run. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to get rid of zombie processes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can&#39;t kill a zombie process the regular way with &lt;code&gt;kill -9&lt;/code&gt; for example as it&#39;s already dead.&lt;/p&gt; &lt;p&gt;One way to kill zombie process is by sending SIGCHLD to the parent process telling it to terminate its child processes. This might not work if the parent process wasn&#39;t programmed properly. The invocation is &lt;code&gt;kill -s SIGCHLD [parent_pid]&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can also try closing/terminating the parent process. This will make the zombie process a child of init (1) which does periodic cleanups and will at some point clean up the zombie process. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to find all the &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Processes executed/owned by a certain user&lt;/li&gt; &#xA;   &lt;li&gt;Process which are Java processes&lt;/li&gt; &#xA;   &lt;li&gt;Zombie Processes&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;If you mention at any point ps command with arugments, be familiar with what these arguments does exactly. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the init process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is the first process executed by the kernel during the booting of a system. It is a daemon process which runs till the system is shutdown. That is why, it is the parent of all the processes &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe how processes are being created?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to change the priority of a process? Why would you want to do that?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain how network process/connection is established and how it&#39;s terminated?&amp;gt;&lt;/summary&gt;&#xA; &lt;br&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;strace&lt;/code&gt; does? What about &lt;code&gt;ltrace&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find all the files which end with &#39;.yml&#39; and replace the number 1 in 2 in each file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;find /some_dir -iname *.yml -print0 | xargs -0 -r sed -i &#34;s/1/2/g&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run ls and you get &#34;/lib/ld-linux-armhf.so.3 no such file or directory&#34;. What is the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The ls executable is built for an incompatible architecture. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you split a 50 lines file into 2 files of 25 lines each?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can use the &lt;code&gt;split&lt;/code&gt; command this way: &lt;code&gt;split -l 25 some_file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a file descriptor? What file descriptors are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Kerberos File descriptor, also known as file handler, is a unique number which identifies an open file in the operating system. &lt;p&gt;In Linux (and Unix) the first three file descriptors are:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0 - the default data stream for input&lt;/li&gt; &#xA;   &lt;li&gt;1 - the default data stream for output&lt;/li&gt; &#xA;   &lt;li&gt;2 - the default data stream for output related to errors&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a great article on the topic: &lt;a href=&#34;https://www.computerhope.com/jargon/f/file-descriptor.htm&#34;&gt;https://www.computerhope.com/jargon/f/file-descriptor.htm&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NTP? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Kernel OOM&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux Security&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is chroot? In what scenarios would you consider using it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SELiunx?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Kerberos?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is nftables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What firewalld daemon is responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with hardening servers? Can you describe the process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux - Networking&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to list all the interfaces?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;ip link show&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the loopback (lo) interface?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The loopback interface is a special, virtual network interface that your computer uses to communicate with itself. It is used mainly for diagnostics and troubleshooting, and to connect to servers running on the local machine. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the following commands are used for? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ip addr&lt;/li&gt; &#xA;   &lt;li&gt;ip route&lt;/li&gt; &#xA;   &lt;li&gt;ip link&lt;/li&gt; &#xA;   &lt;li&gt;ping&lt;/li&gt; &#xA;   &lt;li&gt;netstat&lt;/li&gt; &#xA;   &lt;li&gt;traceroute&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a network namespace? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check if a certain port is being used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;One of the following would work:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;netstat -tnlp | grep &amp;lt;port_number&amp;gt;&#xA;lsof -i -n -P | grep &amp;lt;port_number&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you turn your Linux server into a router?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a virtual IP? In what situation would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? The MAC address of an interface is assigned/set by the OS&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you have more than one default gateway in a given system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Technically, yes. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is telnet and why is it a bad idea to use it in production? (or at all)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Telnet is a type of client-server protocol that can be used to open a command line on a remote computer, typically a server. By default, all the data sent and received via telnet is transmitted in clear/plain text, therefore it should not be used as it does not encrypt any data between the client and the server. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the routing table? How do you view it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you send an HTTP request from your shell?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;br&gt; Using nc is one way&lt;br&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are packet sniffers? Have you used one in the past? If yes, which packet sniffers have you used and for what purpose?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is a network utility that analyses and may inject tasks into the data-stream travelling over the targeted network. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to list active connections?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to trigger neighbor discovery in IPv6?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One way would be &lt;code&gt;ping6 ff02::1&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is network interface bonding and do you know how it&#39;s performed in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What network bonding modes are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;There a couple of modes:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;balance-rr: round robing bonding&lt;/li&gt; &lt;li&gt;active-backup: a fault tolerance mode where only one is active&lt;/li&gt; &lt;li&gt;balance-tlb: Adaptive transmit load balancing&lt;/li&gt; &lt;li&gt;balance-alb: Adaptive load balancing &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a bridge? How it&#39;s added in Linux OS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux - DNS&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check what is the hostname of the system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;cat /etc/hostname&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can also run &lt;code&gt;hostnamectl&lt;/code&gt; or &lt;code&gt;hostname&lt;/code&gt; but that might print only a temporary hostname. The one in the file is the permanent one. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the file &lt;code&gt;/etc/resolv.conf&lt;/code&gt; is used for? What does it include?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What commands are you using for performing DNS queries (or troubleshoot DNS related issues)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can specify one or more of the following:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;code&gt;dig&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;host&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;nslookup&lt;/code&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run &lt;code&gt;dig codingshell.com&lt;/code&gt; and get the following result: &lt;pre&gt;&lt;code&gt;ANSWER SECTION:&#xA;codingshell.com.&#x9;3515&#x9;IN&#x9;A&#x9;185.199.109.153&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;What is the meaning of the number 3515?&lt;/p&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is the TTL. When you lookup for an address using a domain/host name, your OS is performing DNS resolution by contacting DNS name servers to get the IP address of the host/domain you are looking for.&lt;br&gt; When you get a reply, this reply in cached in your OS for a certain period of time. This is period of time is also known as TTL and this is the meaning of 3515 number - it will be cached for 3515 seconds before removed from the cache and during that period of time, you&#39;ll get the value from the cache instead of asking DNS name servers for the address again. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Linux - Packaging&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with packaging? (as in building packages) Can you explain how does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How packages installation/removal is performed on the distribution you are using?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The answer depends on the distribution being used.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In Fedora/CentOS/RHEL/Rocky it can be done with &lt;code&gt;rpm&lt;/code&gt; or &lt;code&gt;dnf&lt;/code&gt; commands. In Ubuntu it can be done with the &lt;code&gt;apt&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;RPM: explain the spec format (what it should and can include)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you list the content of a package without actually installing it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to know to which package a file on the system belongs to? Is it a problem if it doesn&#39;t belongs to any package?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where repositories are stored? (based on the distribution you are using)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an archive? How do you create one in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to extract the content of an archive?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why do we need package managers? Why not simply creating archives and publish them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Package managers allow you to manage packages lifecycle as in installing, removing and updating the packages.&lt;br&gt; In addition, you can specify in a spec how a certain package will be installed - where to copy the files, which commands to run prior to the installation, post the installation, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux DNF&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DNF?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the &lt;a href=&#34;https://github.com/rpm-software-management/dnf&#34;&gt;repo&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&#34;Dandified YUM (DNF) is the next upcoming major version of YUM. It does package management using RPM, libsolv and hawkey libraries.&#34;&lt;/p&gt; &lt;p&gt;Official &lt;a href=&#34;https://dnf.readthedocs.io/en/latest/&#34;&gt;docs&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to look for a package that provides the command /usr/bin/git? (the package isn&#39;t necessarily installed)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;dnf provides /usr/bin/git &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Linux Applications and Services&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find in /etc/services?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to make sure a Service starts automatically after a reboot or crash?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Depends on the init system.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Systemd: &lt;code&gt; systemctl enable [service_name] &lt;/code&gt; System V: &lt;code&gt; update-rc.d [service_name] &lt;/code&gt; and add this line &lt;code&gt; id:5678:respawn:/bin/sh /path/to/app &lt;/code&gt; to /etc/inittab Upstart: add Upstart init script at /etc/init/service.conf &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run &lt;code&gt;ssh 127.0.0.1&lt;/code&gt; but it fails with &#34;connection refused&#34;. What could be the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;SSH server is not installed&lt;/li&gt; &lt;li&gt;SSH server is not running &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print the shared libraries required by a certain program? What is it useful for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is CUPS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of web servers are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Nginx, Apache httpd. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Linux Users and Groups&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a &#34;superuser&#34; (or root user)? How is it different from regular users?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you create users? Where user information is stored?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;Command to create users is &lt;code&gt;useradd&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Syntax: &lt;code&gt;useradd [options] Username&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;There are 2 configuration files, which stores users information&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;/etc/passwd&lt;/code&gt; - Users information like, username, shell etc is stored in this file&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;/etc/shadow&lt;/code&gt; - Users password is stored in encrypted format&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which file stores information about groups?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/groups&lt;/code&gt; file stores the group name, group ID, usernames which are in secondary group.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you change/set the password of a user?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;passwd &amp;lt;username&amp;gt;&lt;/code&gt; is the command to set/change password of a user.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which file stores users passwords? Is it visible for everyone?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/shadow&lt;/code&gt; file holds the passwords of the users in encryted format. NO, it is only visble to the &lt;code&gt;root&lt;/code&gt; user&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you know how to create a new user without using adduser/useradd command?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;YES, we can create new user by manually adding an entry in the &lt;code&gt;/etc/passwd&lt;/code&gt; file.&lt;/p&gt; &#xA; &lt;p&gt;For example, if we need to create a user called &lt;code&gt;john&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Step 1: Add an entry to &lt;code&gt;/etc/passwd&lt;/code&gt; file, so user gets created.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;echo &#34;john&lt;span&gt;❌&lt;/span&gt;2001:2001::/home/john:/bin/bash&#34; &amp;gt;&amp;gt; /etc/passwd&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Step 2: Add an entry to &lt;code&gt;/etc/group&lt;/code&gt; file, because every user belong to the primary group that has same name as the username.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;echo &#34;john&lt;span&gt;❌&lt;/span&gt;2001:&#34; &amp;gt;&amp;gt; /etc/group&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Step 3: Verify if the user got created&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;id john&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What information is stored in /etc/passwd? explain each field&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/passwd&lt;/code&gt; is a configuration file, which contains users information. Each entry in this file has, 7 fields,&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;username:password:UID:GID:Comment:home directory:shell&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;username&lt;/code&gt; - The name of the user.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;password&lt;/code&gt; - This field is actually a placeholder of the password field. Due to security concerns, this field does not contain the password, just a placeholder (x) to the encrypted password stored in &lt;code&gt;/etc/shadow&lt;/code&gt; file.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;UID&lt;/code&gt; - User ID of the user.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;GID&lt;/code&gt; - Group ID&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;Comment&lt;/code&gt; - This field is to provide description about the user.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;home directory&lt;/code&gt; - Abousulte path of the user&#39;s home directory. This directory gets created once the user is added.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;shell&lt;/code&gt; - This field contains the absolute path of the shell that will be used by the respective user.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to add a new user to the system without providing him the ability to log-in into the system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;adduser user_name --shell=/bin/false --no-create-home&lt;/code&gt; You can also add a user and then edit /etc/passwd. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to switch to another user? How to switch to the root user?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;su command. Use su - to switch to root &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the UID the root user? What about a regular user?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;UID of root user is 0&lt;/p&gt; &#xA; &lt;p&gt;Default values of UID_MIN and UID_MAX in &lt;code&gt;/etc/login.defs&lt;/code&gt; &lt;code&gt;UID_MIN&lt;/code&gt; is &lt;code&gt;1000&lt;/code&gt; &lt;code&gt;UID_MAX&lt;/code&gt; is &lt;code&gt;60000&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Actually, we can change this value. But UID &amp;lt; 1000 are reserved for system accounts. Therefore, as per the default configuration, for regular user UID starts from &lt;code&gt;1000&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you do if you lost/forogt the root password?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Re-install the OS IS NOT the right answer :) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is /etc/skel?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/skel&lt;/code&gt; is a directory, that contains files or directories, so when a new user is created, these files/directories created under &lt;code&gt;/etc/skel&lt;/code&gt; will be copied to user&#39;s home directory.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to see a list of who logged-in to the system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the &lt;code&gt;last&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what each of the following commands does: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;useradd&lt;/li&gt; &#xA;   &lt;li&gt;usermod&lt;/li&gt; &#xA;   &lt;li&gt;whoami&lt;/li&gt; &#xA;   &lt;li&gt;id&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;useradd&lt;/code&gt; - Command for creating new users &lt;code&gt;usermod&lt;/code&gt; - Modify the users setting &lt;code&gt;whoami&lt;/code&gt; - Outputs, the username that we are currently logged in &lt;code&gt;id&lt;/code&gt; - Prints the&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run &lt;code&gt;grep $(whoami) /etc/passwd&lt;/code&gt; but the output is empty. What might be a possible reason for that?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The user you are using isn&#39;t defined locally but originates from services like LDAP.&lt;br&gt; You can verify with: &lt;code&gt;getent passwd&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Hardware&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where can you find information on the processor (like number of CPUs)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;/proc/cpuinfo&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can also use &lt;code&gt;nproc&lt;/code&gt; for number of processors &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you print information on the BIOS, motherboard, processor and RAM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;dmidecoode &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you print all the information on connected block devices in your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;lsblk &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In user space, applications don&#39;t have full access to hardware resources&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. Only in kernel space they have full access to hardware resources. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Security&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you create a private key for a CA (certificate authority)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;One way is using openssl this way:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;openssl genrsa -aes256 -out ca-private-key.pem 4096&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you create a public key for a CA (certificate authority)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;openssl req -new -x509 -days 730 -key [private key file name] -sha256 -out ca.pem&lt;/code&gt;&lt;/p&gt; &lt;p&gt;If using the private key from the previous question then the command would be:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;openssl req -new -x509 -days 730 -key ca-private-key.pem -sha256 -out ca.pem&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Namespaces&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of namespaces are there in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Process ID namespaces: these namespaces include independent set of process IDs&lt;/li&gt; &lt;li&gt;Mount namespaces: Isolation and control of mountpoints&lt;/li&gt; &lt;li&gt;Network namespaces: Isolates system networking resources such as routing table, interfaces, ARP table, etc.&lt;/li&gt; &lt;li&gt;UTS namespaces: Isolate host and domains&lt;/li&gt; &lt;li&gt;IPC namespaces: Isolates interprocess communications&lt;/li&gt; &lt;li&gt;User namespaces: Isolate user and group IDs&lt;/li&gt; &lt;li&gt;Time namespaces: Isolates time machine &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In every PID (Process ID) namespace the first process assigned with the process id number 1&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. Inside the namespace it&#39;s PID 1 while to the parent namespace the PID is a different one. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In a child PID namespace all processes are aware of parent PID namespace and processes and the parent PID namespace has no visibility of child PID namespace processes&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. The opposite is true. Parent PID namespace is aware and has visibility of processes in child PID namespace and child PID namespace has no visibility as to what is going on in the parent PID namespace. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? By default, when creating two separate network namespaces, a ping from one namespace to another will work fine&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. Network namespace has its own interfaces and routing table. There is no way (without creating a bridge for example) for one network namespace to reach another. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? With UTS namespaces, processes may appear as if they run on different hosts and domains while running on the same host&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? It&#39;s not possible to have a root user with ID 0 in child user namespaces&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. In every child user namespace, it&#39;s possible to have a separate root user with uid of 0. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What time namespaces are used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In time namespaces processes can use different system time. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Virtualization&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What virtualization solutions are available for Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;a href=&#34;https://www.linux-kvm.org/page/Main_Page&#34;&gt;KVM&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;http://www.xen.org/&#34;&gt;XEN&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.virtualbox.org/&#34;&gt;VirtualBox&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;http://linux-vserver.org/Welcome_to_Linux-VServer.org&#34;&gt;Linux-VServer&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;http://user-mode-linux.sourceforge.net/&#34;&gt;User-mode Linux&lt;/a&gt;&lt;/li&gt; &lt;li&gt;... &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is KVM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Is an open source virtualization technology used to operate on x86 hardware.&lt;/p&gt; &lt;p&gt;From the official &lt;a href=&#34;https://www.linux-kvm.org/page/Main_Page&#34;&gt;docs&lt;/a&gt; Recommended read:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;a href=&#34;https://www.redhat.com/en/topics/virtualization/what-is-KVM&#34;&gt;Red Hat Article - What is KVM?&lt;/a&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Libvirt?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It&#39;s an open source collection of software used to manage virtual machines. It can be used with: KVM, Xen, LXC and others. It&#39;s also called Libvirt Virtualization API.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From the official &lt;a href=&#34;https://libvirt.org/&#34;&gt;docs&lt;/a&gt; Hypervisor supported &lt;a href=&#34;https://libvirt.org/drivers.html&#34;&gt;docs&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - AWK&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the &lt;code&gt;awk&lt;/code&gt; command does? Have you used it? What for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From Wikipedia: &#34;AWK is domain-specific language designed for text processing and typically used as a data extraction and reporting tool&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print the 4th column in a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;awk &#39;{print $4}&#39; file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print every line that is longer than 79 characters?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;awk &#39;length($0) &amp;gt; 79&#39; file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the &lt;code&gt;lsof&lt;/code&gt; command does? Have you used it? What for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between find and locate?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a user process performs a privileged operation, such as reading from the disk?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using system calls &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - System Calls&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a system call? What system calls are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a program executes a system call?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A program executes a trap instruction. The instruction jump into the kernel while raising the privileged level to kernel space.&lt;/li&gt; &lt;li&gt;Once in kernel space, it can perform any privileged operation&lt;/li&gt; &lt;li&gt;Once it&#39;s finished, it calls a &#34;return-from-trap&#34; instruction which returns to user space while reducing back the privilege level to user space. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the fork() system call&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;fork() is used for creating a new process. It does so by cloning the calling process but the child process has its own PID and any memory locks, I/O operations and semaphores are not inherited. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the return value of fork()?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;On success, the PID of the child process in parent and 0 in child process&lt;/li&gt; &lt;li&gt;On error, -1 in the parent &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Name one reason for fork() to fail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not enough memory to create a new process &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why do we need the wait() system call?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;wait() is used by a parent process to wait for the child process to finish execution. If wait is not used by a parent process then a child process might become a zombie process. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How the kernel notifies the parent process about child process termination?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The kernel notifies the parent by sending the SIGCHLD to the parent. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How the waitpid() is different from wait()?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The waitpid() is a non-blocking version of the wait() function.&lt;br&gt; It also supports using library routine (e.g. system()) to wait a child process without messing up with other children processes for which the process has not waited. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? The wait() system call won&#39;t return until the child process has run and exited&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True in most cases though there are cases where wait() returns before the child exits. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the exec() system call&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It transforms the current running program into another program.&lt;br&gt; Given the name of an executable and some arguments, it loads the code and static data from the specified executable and overwrites its current code segment and current static code data. After initializing its memory space (like stack and heap) the OS runs the program passing any arguments as the argv of that process. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? A successful call to exec() never returns&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True&lt;br&gt; Since a succesful exec replace the current process, it can&#39;t return anything to the process that made the call. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What system call is used for listing files?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What system calls are used for creating a new process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;fork(), exec() and the wait() system call is also included in this workflow. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What execve() does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Executes a program. The program is passed as a filename (or path) and must be a binary executable or a script. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the return value of malloc?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the pipe() system call. What does it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;https://toroid.org/unix-pipe-implementation&#34;&gt;Unix pipe implementation&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Pipes provide a unidirectional interprocess communication channel. A pipe has a read end and a write end. Data written to the write end of a pipe can be read from the read end of the pipe. A pipe is created using pipe(2), which returns two file descriptors, one referring to the read end of the pipe, the other referring to the write end.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you execute &lt;code&gt;ls -l&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Shell reads the input using getline() which reads the input file stream and stores into a buffer as a string&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;The buffer is broken down into tokens and stored in an array this way: {&#34;ls&#34;, &#34;-l&#34;, &#34;NULL&#34;}&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Shell checks if an expansion is required (in case of ls *.c)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Once the program in memory, its execution starts. First by calling readdir()&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Notes:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;getline() originates in GNU C library and used to read lines from input stream and stores those lines in the buffer &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you execute &lt;code&gt;ls -l *.log&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What readdir() system call does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What exactly the command &lt;code&gt;alias x=y&lt;/code&gt; does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why running a new program is done using the fork() and exec() system calls? why a different API wasn&#39;t developed where there is one call to run a new program?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This way provides a lot of flexibility. It allows the shell for example, to run code after the call to fork() but before the call to exec(). Such code can be used to alter the environment of the program it about to run. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe shortly what happens when you execute a command in the shell&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The shell figures out, using the PATH variable, where the executable of the command resides in the filesystem. It then calls fork() to create a new child process for running the command. Once the fork was executed successfully, it calls a variant of exec() to execute the command and finally, waits the command to finish using wait(). When the child completes, the shell returns from wait() and prints out the prompt again. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Filesystem &amp;amp; Files&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create a file of a certain size?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;There are a couple of ways to do that:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;dd if=/dev/urandom of=new_file.txt bs=2MB count=1&lt;/li&gt; &lt;li&gt;truncate -s 2M new_file.txt&lt;/li&gt; &lt;li&gt;fallocate -l 2097152 new_file.txt &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What does the following block do?: &lt;pre&gt;&lt;code&gt;open(&#34;/my/file&#34;) = 5&#xA;read(5, &#34;file content&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;These system calls are reading the file &lt;code&gt;/my/file&lt;/code&gt; and 5 is the file descriptor number. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe three different ways to remove a file (or its content)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between a process and a thread?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is context switch?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Context_switch&#34;&gt;wikipedia&lt;/a&gt;: a context switch is the process of storing the state of a process or thread, so that it can be restored and resume execution at a later point &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You found there is a server with high CPU load but you didn&#39;t find a process with high CPU. How is that possible?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux Advanced - Networking&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When you run &lt;code&gt;ip a&lt;/code&gt; you see there is a device called &#39;lo&#39;. What is it and why do we need it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the &lt;code&gt;traceroute&lt;/code&gt; command does? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another common way to task this questions is &#34;what part of the tcp header does traceroute modify?&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is network bonding? What types are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to link two separate network namespaces so you can ping an interface on one namespace from the second one?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are cgroups?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Process Descriptor and Task Structure&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the differences between threads and processes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Kernel Threads&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when socket system call is used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a good article about the topic: &lt;a href=&#34;https://ops.tips/blog/how-linux-creates-sockets&#34;&gt;https://ops.tips/blog/how-linux-creates-sockets&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You executed a script and while still running, it got accidentally removed. Is it possible to restore the script while it&#39;s still running?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux Memory&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between MemFree and MemAvailable in /proc/meminfo?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;MemFree - The amount of unused physical RAM in your system MemAvailable - The amount of available memory for new workloads (without pushing system to use swap) based on MemFree, Active(file), Inactive(file), and SReclaimable. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between paging and swapping?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is OOM killer&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Distribution&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Linux distribution?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What Linux distributions are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the components of a Linux distribution?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Kernel&lt;/li&gt; &lt;li&gt;Utilities&lt;/li&gt; &lt;li&gt;Services&lt;/li&gt; &lt;li&gt;Software/Packages Management &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Linux - Sed&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using sed, extract the date from the following line: &lt;code&gt;201.7.19.90 - - [05/Jun/1985:13:42:99 +0000] &#34;GET /site HTTP/1.1&#34; 200 32421&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;echo $line | sed &#39;s/.*\[//g;s/].*//g;s/:.*//g&#39;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a random string?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One way is to run the following: &lt;code&gt;cat /proc/sys/kernel/random/uuid&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Linux distribution?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A collection of packages - kernel, GNU, third party apps, ...&lt;/li&gt; &lt;li&gt;Sometimes distributions store some information on the distribution in &lt;code&gt;/etc/*-release&lt;/code&gt; file &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;For example for Red Hat distribution it will be &lt;code&gt;/etc/redhat-release&lt;/code&gt; and for Amazon it will be &lt;code&gt;/etc/os-release&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;lsb_release&lt;/code&gt; is a common command you can use in multiple different distributions &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Name 5 commands which are two letters long&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;ls, wc, dd, df, du, ps, ip, cp, cd ... &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What ways are there for creating a new empty file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;touch new_file&lt;/li&gt; &lt;li&gt;echo &#34;&#34; &amp;gt; new_file &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How `cd -` works? How does it knows the previous location?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;$OLDPWD &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List three ways to print all the files in the current directory&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;ls&lt;/li&gt; &lt;li&gt;find .&lt;/li&gt; &lt;li&gt;echo * &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to count the number of lines in a file? What about words?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You define x=2 in /etc/bashrc and x=6 ~/.bashrc you then login to the system. What would be the value of x?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between man and info?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A good answer can be found &lt;a href=&#34;https://askubuntu.com/questions/9325/what-is-the-difference-between-man-and-info-documentation&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;environment variables&#34;. How do you list all environment variables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a TTY device?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create your own environment variables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;X=2&lt;/code&gt; for example. But this will persist to new shells. To have it in new shells as well, use &lt;code&gt;export X=2&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What a double dash (--) mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It&#39;s used in commands to mark the end of commands options. One common example is when used with git to discard local changes: &lt;code&gt;git checkout -- some_file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Wildcards are implemented on user or kernel space?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If I plug a new device into a Linux machine, where on the system, a new device entry/file will be created?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;/dev &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why there are different sections in man? What is the difference between the sections?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is User-mode Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Under which license Linux is distributed? &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;GPL v2 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Operating System&lt;/h2&gt; &#xA;&lt;h3&gt;Operating System Exercises&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fork 101&lt;/td&gt; &#xA;   &lt;td&gt;Fork&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/fork_101.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/solutions/fork_101_solution.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fork 102&lt;/td&gt; &#xA;   &lt;td&gt;Fork&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/fork_102.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/solutions/fork_102_solution.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Operating System - Self Assessment&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an operating system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the book &#34;Operating Systems: Three Easy Pieces&#34;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;responsible for making it easy to run programs (even allowing you to seemingly run many at the same time), allowing programs to share memory, enabling programs to interact with devices, and other fun stuff like that&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Operating System - Process&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain what is a process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A process is a running program. A program is one or more instructions and the program (or process) is executed by the operating system. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If you had to design an API for processes in an operating system, what would this API look like?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It would support the following:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Create - allow to create new processes&lt;/li&gt; &lt;li&gt;Delete - allow to remove/destroy processes&lt;/li&gt; &lt;li&gt;State - allow to check the state of the process, whether it&#39;s running, stopped, waiting, etc.&lt;/li&gt; &lt;li&gt;Stop - allow to stop a running process &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a process is created?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;The OS is reading program&#39;s code and any additional relevant data&lt;/li&gt; &lt;li&gt;Program&#39;s code is loaded into the memory or more specifically, into the address space of the process.&lt;/li&gt; &lt;li&gt;Memory is allocated for program&#39;s stack (aka run-time stack). The stack also initialized by the OS with data like argv, argc and parameters to main()&lt;/li&gt; &lt;li&gt;Memory is allocated for program&#39;s heap which is required for dynamically allocated data like the data structures linked lists and hash tables&lt;/li&gt; &lt;li&gt;I/O initialization tasks are performed, like in Unix/Linux based systems where each process has 3 file descriptors (input, output and error)&lt;/li&gt; &lt;li&gt;OS is running the program, starting from main() &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? The loading of the program into the memory is done eagerly (all at once)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. It was true in the past but today&#39;s operating systems perform lazy loading which means only the relevant pieces required for the process to run are loaded first. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are different states of a process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Running - it&#39;s executing instructions&lt;/li&gt; &lt;li&gt;Ready - it&#39;s ready to run but for different reasons it&#39;s on hold&lt;/li&gt; &lt;li&gt;Blocked - it&#39;s waiting for some operation to complete. For example I/O disk request &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are some reasons for a process to become blocked?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;I/O operations (e.g. Reading from a disk)&lt;/li&gt; &lt;li&gt;Waiting for a packet from a network &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Inter Process Communication (IPC)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;time sharing&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Even when using a system with one physical CPU, it&#39;s possible to allow multiple users to work on it and run programs. This is possible with time sharing where computing resources are shared in a way it seems to the user the system has multiple CPUs but in fact it&#39;s simply one CPU shared by applying multiprogramming and multi-tasking. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;space sharing&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Somewhat the opposite of time sharing. While in time sharing a resource is used for a while by one entity and then the same resource can be used by another resource, in space sharing the space is shared by multiple entities but in a way where it&#39;s not being transferred between them.&lt;br&gt; It&#39;s used by one entity until this entity decides to get rid of it. Take for example storage. In storage, a file is yours until you decide to delete it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What component determines which process runs at a given moment in time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;CPU scheduler &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Operating System - Memory&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;virtual memory&#34; and what purpose it serves?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is demand paging?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is copy-on-write or shadowing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a kernel, and what does it do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The kernel is part of the operating system and is responsible for tasks like:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Allocating memory&lt;/li&gt; &lt;li&gt;Schedule processes&lt;/li&gt; &lt;li&gt;Control CPU &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Some pieces of the code in the kernel are loaded into protected areas of the memory so applications can&#39;t overwritten them&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is POSIX?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Semaphore and what its role in operating systems&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is cache? What is buffer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Buffer: Reserved place in RAM which is used to hold data for temporary purposes Cache: Cache is usually used when processes reading and writing to the disk to make the process faster by making similar data used by different programs easily accessible. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Virtualization&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Virtualization?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Virtualization uses software to create an abstraction layer over computer hardware that allows the hardware elements of a single computer—processors, memory, storage and more - to be divided into multiple virtual computers, commonly called virtual machines (VMs). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a hypervisor?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Red Hat: &#34;A hypervisor is software that creates and runs virtual machines (VMs). A hypervisor, sometimes called a virtual machine monitor (VMM), isolates the hypervisor operating system and resources from the virtual machines and enables the creation and management of those VMs.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read more &lt;a href=&#34;https://www.redhat.com/en/topics/virtualization/what-is-a-hypervisor&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of hypervisors are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Hosted hypervisors and bare-metal hypervisors. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages and disadvantges of bare-metal hypervisor over a hosted hypervisor?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Due to having its own drivers and a direct access to hardware components, a baremetal hypervisor will often have better performances along with stability and scalability.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;On the other hand, there will probably be some limitation regarding loading (any) drivers so a hosted hypervisor will usually benefit from having a better hardware compatibility. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of virtualization are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Operating system virtualization Network functions virtualization Desktop virtualization &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Is containerization is a type of Virtualization?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Yes, it&#39;s a operating-system-level virtualization, where the kernel is shared and allows to use multiple isolated user-spaces instances. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How the introduction of virtual machines changed the industry and the way applications were deployed?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The introduction of virtual machines allowed companies to deploy multiple business applications on the same hardware while each application is separated from each other in secured way, where each is running on its own separate operating system. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - OOP&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain inheritance and how to use it in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;By definition inheritance is the mechanism where an object acts as a base of another object, retaining all its&#xA;properties.&#xA;&#xA;So if Class B inherits from Class A, every characteristics from class A will be also available in class B.&#xA;Class A would be the &#39;Base class&#39; and B class would be the &#39;derived class&#39;.&#xA;&#xA;This comes handy when you have several classes that share the same functionalities.&#xA;&#xA;The basic syntax is:&#xA;&#xA;class Base: pass&#xA;&#xA;class Derived(Base): pass&#xA;&#xA;A more forged example:&#xA;&#xA;class Animal:&#xA;    def __init__(self):&#xA;        print(&#34;and I&#39;m alive!&#34;)&#xA;&#xA;    def eat(self, food):&#xA;        print(&#34;ñom ñom ñom&#34;, food)&#xA;&#xA;class Human(Animal):&#xA;    def __init__(self, name):&#xA;        print(&#39;My name is &#39;, name)&#xA;        super().__init__()&#xA;&#xA;    def write_poem(self):&#xA;        print(&#39;Foo bar bar foo foo bar!&#39;)&#xA;&#xA;class Dog(Animal):&#xA;    def __init__(self, name):&#xA;        print(&#39;My name is&#39;, name)&#xA;        super().__init__()&#xA;&#xA;    def bark(self):&#xA;        print(&#39;woof woof&#39;)&#xA;&#xA;&#xA;michael = Human(&#39;Michael&#39;)&#xA;michael.eat(&#39;Spam&#39;)&#xA;michael.write_poem()&#xA;&#xA;bruno = Dog(&#39;Bruno&#39;)&#xA;bruno.eat(&#39;bone&#39;)&#xA;bruno.bark()&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; My name is  Michael&#xA;&amp;gt;&amp;gt;&amp;gt; and I&#39;m alive!&#xA;&amp;gt;&amp;gt;&amp;gt; ñom ñom ñom Spam&#xA;&amp;gt;&amp;gt;&amp;gt; Foo bar bar foo foo bar!&#xA;&amp;gt;&amp;gt;&amp;gt; My name is Bruno&#xA;&amp;gt;&amp;gt;&amp;gt; and I&#39;m alive!&#xA;&amp;gt;&amp;gt;&amp;gt; ñom ñom ñom bone&#xA;&amp;gt;&amp;gt;&amp;gt; woof woof&#xA;&#xA;Calling super() calls the Base method, thus, calling super().__init__() we called the Animal __init__.&#xA;&#xA;There is a more advanced python feature called MetaClasses that aid the programmer to directly control class creation.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain and demonstrate class attributes &amp;amp; instance attributes&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;In the following block of code &lt;code&gt;x&lt;/code&gt; is a class attribute while &lt;code&gt;self.y&lt;/code&gt; is a instance attribute&lt;/p&gt; &lt;pre&gt;&lt;code&gt;class MyClass(object):&#xA;    x = 1&#xA;&#xA;    def __init__(self, y):&#xA;        self.y = y&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Exceptions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an error? What is an exception? What types of exceptions are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;#  Note that you generally don&#39;t need to know the compiling process but knowing where everything comes from&#xA;#  and giving complete answers shows that you truly know what you are talking about.&#xA;&#xA;Generally, every compiling process have a two steps.&#xA;    - Analysis&#xA;    - Code Generation.&#xA;&#xA;    Analysis can be broken into:&#xA;        1. Lexical analysis   (Tokenizes source code)&#xA;        2. Syntactic analysis (Check whether the tokens are legal or not, tldr, if syntax is correct)&#xA;&#xA;               for i in &#39;foo&#39;&#xA;                          ^&#xA;             SyntaxError: invalid syntax&#xA;&#xA;        We missed &#39;:&#39;&#xA;&#xA;&#xA;        3. Semantic analysis  (Contextual analysis, legal syntax can still trigger errors, did you try to divide by 0,&#xA;          hash a mutable object or use an undeclared function?)&#xA;&#xA;                 1/0&#xA;                ZeroDivisionError: division by zero&#xA;&#xA;    These three analysis steps are the responsible for error handlings.&#xA;&#xA;    The second step would be responsible for errors, mostly syntax errors, the most common error.&#xA;    The third step would be responsible for Exceptions.&#xA;&#xA;    As we have seen, Exceptions are semantic errors, there are many builtin Exceptions:&#xA;&#xA;        ImportError&#xA;        ValueError&#xA;        KeyError&#xA;        FileNotFoundError&#xA;        IndentationError&#xA;        IndexError&#xA;        ...&#xA;&#xA;    You can also have user defined Exceptions that have to inherit from the `Exception` class, directly or indirectly.&#xA;&#xA;    Basic example:&#xA;&#xA;    class DividedBy2Error(Exception):&#xA;        def __init__(self, message):&#xA;            self.message = message&#xA;&#xA;&#xA;    def division(dividend,divisor):&#xA;        if divisor == 2:&#xA;            raise DividedBy2Error(&#39;I dont want you to divide by 2!&#39;)&#xA;        return dividend / divisor&#xA;&#xA;    division(100, 2)&#xA;&#xA;    &amp;gt;&amp;gt;&amp;gt; __main__.DividedBy2Error: I dont want you to divide by 2!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Exception Handling and how to use it in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;strong&gt;Exceptions:&lt;/strong&gt; Errors detected during execution are called Exceptions.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Handling Exception:&lt;/strong&gt; When an error occurs, or exception as we call it, Python will normally stop and generate an error message.&lt;br&gt; Exceptions can be handled using &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;except&lt;/code&gt; statement in python.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; Following example asks the user for input until a valid integer has been entered. &lt;br&gt; If user enter a non-integer value it will raise exception and using except it will catch that exception and ask the user to enter valid integer again.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;while True:&#xA;    try:&#xA;        a = int(input(&#34;please enter an integer value: &#34;))&#xA;        break&#xA;    except ValueError:&#xA;        print(&#34;Ops! Please enter a valid integer value.&#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more details about errors and exceptions follow this &lt;a href=&#34;https://docs.python.org/3/tutorial/errors.html&#34;&gt;https://docs.python.org/3/tutorial/errors.html&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of running the following function? &lt;pre&gt;&lt;code&gt;def true_or_false():&#xA;    try:&#xA;        return True&#xA;    finally:&#xA;        return False&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; False &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Built-in functions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following built-in functions (their purpose + use case example): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;repr&lt;/li&gt; &#xA;   &lt;li&gt;any&lt;/li&gt; &#xA;   &lt;li&gt;all&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between repr function and str?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the __call__ method?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It is used to emulate callable objects. It allows a class instance to be called as a function.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example code:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;class Foo:&#xA;    def __init__(self: object) -&amp;gt;  None:&#xA;        pass&#xA;    def __call__(self: object) -&amp;gt; None:&#xA;        print(&#34;Called!&#34;)&#xA;&#xA;f = Foo()&#xA;f()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Result:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;Called!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do classes has the __call__ method as well? What for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What _ is used for in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Translation lookup in i18n&lt;/li&gt; &lt;li&gt;Hold the result of the last executed expression or statement in the interactive interpreter.&lt;/li&gt; &lt;li&gt;As a general purpose &#34;throwaway&#34; variable name. For example: x, y, _ = get_data() (x and y are used but since we don&#39;t care about third variable, we &#34;threw it away&#34;). &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is GIL&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Python Global Interpreter Lock (GIL) is a type of process lock which is used by python whenever it deals with processes. Generally, Python only uses only one thread to execute the set of written statements. This means that in python only one thread will be executed at a time &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Lambda? How is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A &lt;code&gt;lambda&lt;/code&gt; expression is an &#39;anonymous&#39; function, the difference from a normal defined function using the keyword `def`` is the syntax and usage.&lt;/p&gt; &lt;p&gt;The syntax is:&lt;/p&gt; &lt;p&gt;&lt;code&gt;lambda[parameters]: [expresion]&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A lambda function add 10 with any argument passed.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;x = lambda a: a + 10&#xA;print(x(10))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;An addition function&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;addition = lambda x, y: x + y&#xA;print(addition(10, 20))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Squaring function&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;square = lambda x : x ** 2&#xA;print(square(5))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Generally it is considered a bad practice under PEP 8 to assign a lambda expresion, they are meant to be used as parameters and inside of other defined functions.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Properties&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are there private variables in Python? How would you make an attribute of a class, private?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;getter&lt;/li&gt; &#xA;   &lt;li&gt;setter&lt;/li&gt; &#xA;   &lt;li&gt;deleter&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is @property&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you swap values between two variables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;x, y = y, x&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following object&#39;s magic variables: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;dict&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a function to return the sum of one or more numbers. The user will decide how many numbers to use&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;First you ask the user for the amount of numbers that will be use. Use a while loop that runs until amount_of_numbers becomes 0 through subtracting amount_of_numbers by one each loop. In the while loop you want ask the user for a number which will be added a variable each time the loop runs.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def return_sum():&#xA;&#x9;amount_of_numbers = int(input(&#34;How many numbers? &#34;))&#xA;&#x9;total_sum = 0&#xA;&#x9;while amount_of_numbers != 0:&#xA;&#x9;&#x9;num = int(input(&#34;Input a number. &#34;))&#xA;&#x9;&#x9;total_sum += num&#xA;&#x9;&#x9;amount_of_numbers -= 1&#xA;&#x9;return total_sum&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print the average of [2, 5, 6]. It should be rounded to 3 decimal places&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;li = [2, 5, 6]&#xA;print(&#34;{0:.3f}&#34;.format(sum(li)/len(li)))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Lists&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a tuple in Python? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A tuple is a built-in data type in Python. It&#39;s used for storing multiple items in a single variable. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List, like a tuple, is also used for storing multiple items. What is then, the difference between a tuple and a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;List, as opposed to a tuple, is a mutable data type. It means we can modify it and at items to it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to add the number 2 to the list &lt;code&gt;x = [1, 2, 3]&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;x.append(2)&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to get the last element of a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;some_list[-1]&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to add the items of [1, 2, 3] to the list [4, 5, 6]?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; x = [4, 5, 6] x.extend([1, 2, 3]) &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Don&#39;t use &lt;code&gt;append&lt;/code&gt; unless you would like the list as one item. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to remove the first 3 items from a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;my_list[0:3] = []&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to insert an item to the beginning of a list? What about two items?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;One item:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;numbers = [1, 2, 3, 4, 5]&#xA;numbers.insert(0, 0)&#xA;print(numbers)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Multiple items or list:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;numbers_1 = [2, 3, 4, 5]&#xA;numbers_2 = [0, 1]&#xA;numbers_1 = numbers_2 + numbers_1&#xA;print(numbers_1)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to sort list by the length of items?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;sorted_li = sorted(li, key=len)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or without creating a new list:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;li.sort(key=len)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you know what is the difference between list.sort() and sorted(list)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt; &lt;p&gt;sorted(list) will return a new list (original list doesn&#39;t change)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;list.sort() will return None but the list is change in-place&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;sorted() works on any iterable (Dictionaries, Strings, ...)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;list.sort() is faster than sorted(list) in case of Lists &lt;/p&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt;   &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Convert every string to an integer: &lt;code&gt;[[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;], [&#39;4&#39;, &#39;5&#39;, &#39;6&#39;]]&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;nested_li = [[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;], [&#39;4&#39;, &#39;5&#39;, &#39;6&#39;]]&#xA;[[int(x) for x in li] for li in nested_li]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to merge two sorted lists into one sorted list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;sorted(li1 + li2)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Another way:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;i, j = 0&#xA;merged_li = []&#xA;&#xA;while i &amp;lt; len(li1) and j &amp;lt; len(li2):&#xA;    if li1[i] &amp;lt; li2[j]:&#xA;        merged_li.append(li1[i])&#xA;        i += 1&#xA;    else:&#xA;        merged_li.append(li2[j])&#xA;        j += 1&#xA;&#xA;merged_li = merged_li + merged_li[i:] + merged_li[j:]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check if all the elements in a given lists are unique? so [1, 2, 3] is unique but [1, 1, 2, 3] is not unique because 1 exists twice&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;p&gt;There are many ways of solving this problem:&lt;br&gt; &lt;code&gt;# Note: :list and -&amp;gt; bool are just python typings, they are not needed for the correct execution of the algorithm. &lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Taking advantage of sets and len:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique(l:list) -&amp;gt; bool:&#xA;    return len(set(l)) == len(l)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This one is can be seen used in other programming languages.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique2(l:list) -&amp;gt; bool:&#xA;    seen = []&#xA;&#xA;    for i in l:&#xA;        if i in seen:&#xA;            return False&#xA;        seen.append(i)&#xA;    return True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Here we just count and make sure every element is just repeated once.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique3(l:list) -&amp;gt; bool:&#xA;    for i in l:&#xA;        if l.count(i) &amp;gt; 1:&#xA;            return False&#xA;    return True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This one might look more convulated but hey, one liners.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique4(l:list) -&amp;gt; bool:&#xA;    return all(map(lambda x: l.count(x) &amp;lt; 2, l))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have the following function &lt;pre&gt;&lt;code&gt;def my_func(li = []):&#xA;    li.append(&#34;hmm&#34;)&#xA;    print(li)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If we call it 3 times, what would be the result each call?&lt;/p&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[&#39;hmm&#39;]&#xA;[&#39;hmm&#39;, &#39;hmm&#39;]&#xA;[&#39;hmm&#39;, &#39;hmm&#39;, &#39;hmm&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to iterate over a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;for item in some_list:&#xA;    print(item)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to iterate over a list with indexes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;for i, item in enumerate(some_list):&#xA;    print(i)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to start list iteration from 2nd index?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Using range like this&lt;/p&gt; &lt;pre&gt;&lt;code&gt;for i in range(1, len(some_list)):&#xA;    some_list[i]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Another way is using slicing&lt;/p&gt; &lt;pre&gt;&lt;code&gt;for i in some_list[1:]:&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to iterate over a list in reverse order?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Method 1&lt;/p&gt; &lt;pre&gt;&lt;code&gt;for i in reversed(li):&#xA;    ...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Method 2&lt;/p&gt; &lt;pre&gt;&lt;code&gt;n = len(li) - 1&#xA;while n &amp;gt; 0:&#xA;    ...&#xA;    n -= 1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Sort a list of lists by the second item of each nested list&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;li = [[1, 4], [2, 1], [3, 9], [4, 2], [4, 5]]&#xA;&#xA;sorted(li, key=lambda l: l[1])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;pre&gt;&lt;code&gt;li.sort(key=lambda l: l[1)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Combine [1, 2, 3] and [&#39;x&#39;, &#39;y&#39;, &#39;z&#39;] so the result is [(1, &#39;x&#39;), (2, &#39;y&#39;), (3, &#39;z&#39;)]&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;nums = [1, 2, 3]&#xA;letters = [&#39;x&#39;, &#39;y&#39;, &#39;z&#39;]&#xA;&#xA;list(zip(nums, letters))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is List Comprehension? Is it better than a typical loop? Why? Can you demonstrate how to use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From &lt;a href=&#34;https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions&#34;&gt;Docs&lt;/a&gt;: &#34;List comprehensions provide a concise way to create lists. Common applications are to make new lists where each element is the result of some operations applied to each member of another sequence or iterable, or to create a subsequence of those elements that satisfy a certain condition.&#34;.&lt;/p&gt; &lt;p&gt;It&#39;s better because they&#39;re compact, faster and have better readability.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For loop:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;number_lists = [[1, 7, 3, 1], [13, 93, 23, 12], [123, 423, 456, 653, 124]]&#xA;odd_numbers = []&#xA;for number_list in number_lists:&#xA;    for number in number_list:&#xA;        if number % 2 == 0:&#xA;            odd_numbers.append(number)&#xA;print(odd_numbers)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;List comprehesion:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;number_lists = [[1, 7, 3, 1], [13, 93, 23, 12], [123, 423, 456, 653, 124]]&#xA;odd_numbers = [number for number_list in number_lists for number in number_list if number % 2 == 0]&#xA;print(odd_numbers)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have the following list: &lt;code&gt;[{&#39;name&#39;: &#39;Mario&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;goombas&#39;]}, {&#39;name&#39;: &#39;Luigi&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;turtles&#39;]}]&lt;/code&gt; Extract all type of foods. Final output should be: {&#39;mushrooms&#39;, &#39;goombas&#39;, &#39;turtles&#39;}&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;brothers_menu =  \&#xA;[{&#39;name&#39;: &#39;Mario&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;goombas&#39;]}, {&#39;name&#39;: &#39;Luigi&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;turtles&#39;]}]&#xA;&#xA;# &#34;Classic&#34; Way&#xA;def get_food(brothers_menu) -&amp;gt; set:&#xA;    temp = []&#xA;&#xA;    for brother in brothers_menu:&#xA;        for food in brother[&#39;food&#39;]:&#xA;            temp.append(food)&#xA;&#xA;    return set(temp)&#xA;&#xA;# One liner way (Using list comprehension)&#xA;set([food for bro in x for food in bro[&#39;food&#39;]])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Dictionaries&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create a dictionary?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;my_dict = dict(x=1, y=2) OR my_dict = {&#39;x&#39;: 1, &#39;y&#39;: 2} OR my_dict = dict([(&#39;x&#39;, 1), (&#39;y&#39;, 2)]) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to remove a key from a dictionary?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;del my_dict[&#39;some_key&#39;] you can also use &lt;code&gt;my_dict.pop(&#39;some_key&#39;)&lt;/code&gt; which returns the value of the key. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to sort a dictionary by values?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;{k: v for k, v in sorted(x.items(), key=lambda item: item[1])}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to sort a dictionary by keys?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;dict(sorted(some_dictionary.items()))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to merge two dictionaries?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;some_dict1.update(some_dict2)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Convert the string &#34;a.b.c&#34; to the dictionary &lt;code&gt;{&#39;a&#39;: {&#39;b&#39;: {&#39;c&#39;: 1}}}&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;output = {}&#xA;string = &#34;a.b.c&#34;&#xA;path = string.split(&#39;.&#39;)&#xA;target = reduce(lambda d, k: d.setdefault(k, {}), path[:-1], output)&#xA;target[path[-1]] = 1&#xA;print(output)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Common Algorithms Implementation&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you implement &#34;binary search&#34; in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/coding/python/binary_search.py&#34;&gt;Solution&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python Files&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to write to a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;with open(&#39;file.txt&#39;, &#39;w&#39;) as file:&#xA;    file.write(&#34;My insightful comment&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Sum all the integers in a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print a random line of a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print every 3rd line of a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print the number of lines in a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print the number of of words in a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you write a function which will print all the file in a given directory? including sub-directories&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a dictionary (variable) to a file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import json&#xA;&#xA;with open(&#39;file.json&#39;, &#39;w&#39;) as f:&#xA;    f.write(json.dumps(dict_var))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python OS&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print current working directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import os&#xA;&#xA;print(os.getcwd())&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the path &lt;code&gt;/dir1/dir2/file1&lt;/code&gt; print the file name (file1)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import os&#xA;&#xA;print(os.path.basename(&#39;/dir1/dir2/file1&#39;))&#xA;&#xA;# Another way&#xA;print(os.path.split(&#39;/dir1/dir2/file1&#39;)[1])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the path &lt;code&gt;/dir1/dir2/file1&lt;/code&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Print the path without the file name (/dir1/dir2)&lt;/li&gt; &#xA;   &lt;li&gt;Print the name of the directory where the file resides (dir2)&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import os&#xA;&#xA;## Part 1.&#xA;# os.path.dirname gives path removing the end component&#xA;dirpath = os.path.dirname(&#39;/dir1/dir2/file1&#39;)&#xA;print(dirpath)&#xA;&#xA;## Part 2.&#xA;print(os.path.basename(dirpath))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you execute shell commands using Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you join path components? for example &lt;code&gt;/home&lt;/code&gt; and &lt;code&gt;luig&lt;/code&gt; will result in &lt;code&gt;/home/luigi&lt;/code&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you remove non-empty directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Regex&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you perform regular expressions related operations in Python? (match patterns, substitute strings, etc.)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the re module &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to find all the IP addresses in a variable? How to find them in a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Strings&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find the first repeated character in a string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;While you iterate through the characters, store them in a dictionary and check for every character whether it&#39;s already in the dictionary.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def firstRepeatedCharacter(str):&#xA;    chars = {}&#xA;    for ch in str:&#xA;        if ch in chars:&#xA;            return ch&#xA;        else:&#xA;            chars[ch] = 0&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to extract the unique characters from a string? for example given the input &#34;itssssssameeeemarioooooo&#34; the output will be &#34;mrtisaoe&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;x = &#34;itssssssameeeemarioooooo&#34;&#xA;y = &#39;&#39;.join(set(x))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find all the permutations of a given string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;def permute_string(string):&#xA;&#xA;    if len(string) == 1:&#xA;        return [string]&#xA;&#xA;    permutations = []&#xA;    for i in range(len(string)):&#xA;        swaps = permute_string(string[:i] + string[(i+1):])&#xA;        for swap in swaps:&#xA;            permutations.append(string[i] + swap)&#xA;&#xA;    return permutations&#xA;&#xA;print(permute_string(&#34;abc&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Short way (but probably not acceptable in interviews):&lt;/p&gt; &lt;pre&gt;&lt;code&gt;from itertools import permutations&#xA;&#xA;[&#39;&#39;.join(p) for p in permutations(&#34;abc&#34;)]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Detailed answer can be found here: &lt;a href=&#34;http://codingshell.com/python-all-string-permutations&#34;&gt;http://codingshell.com/python-all-string-permutations&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check if a string contains a sub string?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find the frequency of each character in string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Count the number of spaces in a string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can use the &#34;count&#34; method like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#xA;ImAString.count(&#34; &#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given a string, find the N most repeated words&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the string (which represents a matrix) &#34;1 2 3\n4 5 6\n7 8 9&#34; create rows and colums variables (should contain integers, not strings)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of each of the following? &lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; &#39;, &#39;.join([&#34;One&#34;, &#34;Two&#34;, &#34;Three&#34;])&#xA;&amp;gt;&amp;gt; &#34; &#34;.join(&#34;welladsadgadoneadsadga&#34;.split(&#34;adsadga&#34;)[:2])&#xA;&amp;gt;&amp;gt; &#34;&#34;.join([&#34;c&#34;, &#34;t&#34;, &#34;o&#34;, &#34;a&#34;, &#34;o&#34;, &#34;q&#34;, &#34;l&#34;])[0::2]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; &#39;One, Two, Three&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; &#39;well done&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; &#39;cool&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If &lt;code&gt;x = &#34;pizza&#34;&lt;/code&gt;, what would be the result of &lt;code&gt;x[::-1]&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It will reverse the string, so x would be equal to &lt;code&gt;azzip&lt;/code&gt;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Reverse each word in a string (while keeping the order)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the output of the following code: &lt;code&gt;&#34;&#34;.join([&#34;a&#34;, &#34;h&#34;, &#34;m&#34;, &#34;a&#34;, &#34;h&#34;, &#34;a&#34;, &#34;n&#34;, &#34;q&#34;, &#34;r&#34;, &#34;l&#34;, &#34;o&#34;, &#34;i&#34;, &#34;f&#34;, &#34;o&#34;, &#34;o&#34;])[2::3]&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;mario &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python Iterators&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an iterator?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain data serialization and how do you perform it with Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you handle argument parsing in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a generator? Why using generators?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What would be the output of the following block? &lt;pre&gt;&lt;code&gt;for i in range(3, 3):&#xA;   print(i)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;No output :) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &lt;code&gt;yeild&lt;/code&gt;? When would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following types of methods and how to use them: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Static method&lt;/li&gt; &#xA;   &lt;li&gt;Class method&lt;/li&gt; &#xA;   &lt;li&gt;instance method&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to reverse a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to combine list of strings into one string with spaces between the strings&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have the following list of nested lists: &lt;code&gt;[[&#39;Mario&#39;, 90], [&#39;Geralt&#39;, 82], [&#39;Gordon&#39;, 88]]&lt;/code&gt; How to sort the list by the numbers in the nested lists?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;One way is:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;the_list.sort(key=lambda x: x[1]) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;zip()&lt;/li&gt; &#xA;   &lt;li&gt;map()&lt;/li&gt; &#xA;   &lt;li&gt;filter()&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Python - Slicing&lt;/h4&gt; &#xA;&lt;p&gt;For the following slicing exercises, assume you have the following list: &lt;code&gt;my_list = [8, 2, 1, 10, 5, 4, 3, 9]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[0:4]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[5:6]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[5:5]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[::-1]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[::3]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[2:]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[:3]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Debugging&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug Python code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;pdb :D &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check how much time it took to execute a certain script or block of code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What empty &lt;code&gt;return&lt;/code&gt; returns?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;p&gt;Short answer is: It returns a None object.&lt;/p&gt; &#xA; &lt;p&gt;We could go a bit deeper and explain the difference between&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def a ():&#xA;    return&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;And&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def a ():&#xA;    pass&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Or we could be asked this as a following question, since they both give the same result.&lt;/p&gt; &#xA; &lt;p&gt;We could use the dis module to see what&#39;s going on:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;  2           0 LOAD_CONST               0 (&amp;lt;code object a at 0x0000029C4D3C2DB0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 2&amp;gt;)&#xA;              2 LOAD_CONST               1 (&#39;a&#39;)&#xA;              4 MAKE_FUNCTION            0&#xA;              6 STORE_NAME               0 (a)&#xA;&#xA;  5           8 LOAD_CONST               2 (&amp;lt;code object b at 0x0000029C4D3C2ED0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 5&amp;gt;)&#xA;             10 LOAD_CONST               3 (&#39;b&#39;)&#xA;             12 MAKE_FUNCTION            0&#xA;             14 STORE_NAME               1 (b)&#xA;             16 LOAD_CONST               4 (None)&#xA;             18 RETURN_VALUE&#xA;&#xA;Disassembly of &amp;lt;code object a at 0x0000029C4D3C2DB0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 2&amp;gt;:&#xA;  3           0 LOAD_CONST               0 (None)&#xA;              2 RETURN_VALUE&#xA;&#xA;Disassembly of &amp;lt;code object b at 0x0000029C4D3C2ED0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 5&amp;gt;:&#xA;  6           0 LOAD_CONST               0 (None)&#xA;              2 RETURN_VALUE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;An empty &lt;code&gt; return&lt;/code&gt; is exactly the same as &lt;code&gt;return None&lt;/code&gt; and functions without any explicit return will always return None regardless of the operations, therefore&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def sum(a, b):&#xA;    global c&#xA;    c = a + b&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to improve the following block of code? &lt;pre&gt;&lt;code&gt;li = []&#xA;for i in range(1, 10):&#xA;    li.append(i)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[i for i in range(1, 10)]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the following function &lt;pre&gt;&lt;code&gt;def is_int(num):&#xA;    if isinstance(num, int):&#xA;        print(&#39;Yes&#39;)&#xA;    else:&#xA;        print(&#39;No&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;What would be the result of is_int(2) and is_int(False)?&lt;/p&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python - Linked List&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you implement a linked list in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The reason we need to implement in the first place, it&#39;s because a linked list isn&#39;t part of Python standard library.&lt;br&gt; To implement a linked list, we have to implement two structures: The linked list itself and a node which is used by the linked list.&lt;/p&gt; &lt;p&gt;Let&#39;s start with a node. A node has some value (the data it holds) and a pointer to the next node&lt;/p&gt; &lt;pre&gt;&lt;code&gt;class Node(object):&#xA;    def __init__(self, data):&#xA;        self.data = data&#xA;        self.next = None&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now the linked list. An empty linked list has nothing but an empty head.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;class LinkedList(object):&#xA;    def __init__(self):&#xA;        self.head = None&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now we can start using the linked list&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ll = Linkedlist()&#xA;ll.head = Node(1)&#xA;ll.head.next = Node(2)&#xA;ll.head.next.next = Node(3)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;What we have is:&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;p&gt;| 1 | -&amp;gt; | 2 | -&amp;gt; | 3 |&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;p&gt;Usually, more methods are implemented, like a push_head() method where you insert a node at the beginning of the linked list&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def push_head(self, value):&#xA;    new_node = Node(value)&#xA;    new_node.next = self.head&#xA;    self.head = new_node&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Add a method to the Linked List class to traverse (print every node&#39;s data) the linked list&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;def print_list(self): node = self.head while(node): print(node.data) node = node.next &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a method to that will return a boolean based on whether there is a loop in a linked list or not&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Let&#39;s use the Floyd&#39;s Cycle-Finding algorithm:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def loop_exists(self):&#xA;    one_step_p = self.head&#xA;    two_steps_p = self.head&#xA;    while(one_step_p and two_steps_p and two_steps_p.next):&#xA;        one_step_p = self.head.next&#xA;        two_step_p = self.head.next.next&#xA;        if (one_step_p == two_steps_p):&#xA;            return True &#xA;    return False&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Stack&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Implement Stack in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Testing&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is your experience with writing tests in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is PEP8? Give an example of 3 style guidelines&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;PEP8 is a list of coding conventions and style guidelines for Python&lt;/p&gt; &lt;p&gt;5 style guidelines:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1. Limit all lines to a maximum of 79 characters.&#xA;2. Surround top-level function and class definitions with two blank lines.&#xA;3. Use commas when making a tuple of one element&#xA;4. Use spaces (and not tabs) for indentation&#xA;5. Use 4 spaces per indentation level&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to test if an exception was raised?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;assert&lt;/code&gt; does in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain mocks&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you measure execution time of small code snippets?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why one shouldn&#39;t use &lt;code&gt;assert&lt;/code&gt; in non-test/production code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Flask&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe what is Django/Flask and how you have used it? Why Flask and not Django? (or vice versa)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a route?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; As every web framework, Flask provides a route functionality that lets you serve a content of a given URL. &lt;p&gt;There are multiple ways to map a URL with a function in Python.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Decorator: you can use python decorators. In this case we&#39;re using &lt;code&gt;app&lt;/code&gt;. This &lt;code&gt;app&lt;/code&gt; decorator is the instance of the &lt;code&gt;Flask&lt;/code&gt; class. And route it&#39;s a method of this class.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;@app.route(&#39;/&#39;)&#xA;def home():&#xA;  return &#39;main website&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;add_url_rule&lt;/code&gt; method: This is a method of the Flask class. We can also use it for map the URL with a function.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;def home():&#xA;  return &#39;main website&#39;&#xA;&#xA;app.add_url_rule(&#39;/&#39;, view_func=home)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a blueprint in Flask?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a template?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;zip&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given &lt;code&gt;x = [1, 2, 3]&lt;/code&gt;, what is the result of list(zip(x))?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[(1,), (2,), (3,)]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of each of the following: &lt;pre&gt;&lt;code&gt;list(zip(range(5), range(50), range(50)))&#xA;list(zip(range(5), range(50), range(-2)))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[(0, 0, 0), (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4)]&#xA;[]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python Descriptors&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Descriptors&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read about descriptors &lt;a href=&#34;https://docs.python.org/3/howto/descriptor.html&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What would be the result of running &lt;code&gt;a.num2&lt;/code&gt; assuming the following code &lt;pre&gt;&lt;code&gt;class B:&#xA;    def __get__(self, obj, objtype=None):&#xA;        reuturn 10&#xA;&#xA;class A:&#xA;    num1 = 2&#xA;    num2 = Five()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; 10 &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What would be the result of running &lt;code&gt;some_car = Car(&#34;Red&#34;, 4)&lt;/code&gt; assuming the following code &lt;pre&gt;&lt;code&gt;class Print:&#xA;&#xA;    def __get__(self, obj, objtype=None):&#xA;        value = obj._color&#xA;        print(&#34;Color was set to {}&#34;.format(valie))&#xA;        return value&#xA;&#xA;    def __set__(self, obj, value):&#xA;        print(&#34;The color of the car is {}&#34;.format(value))&#xA;        obj._color = value&#xA;&#xA;class Car:&#xA;&#xA;    color = Print()&#xA;&#xA;    def __ini__(self, color, age):&#xA;        self.color = color&#xA;        self.age = age&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; An instance of Car class will be created and the following will be printed: &#34;The color of the car is Red&#34; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you spawn multiple processes with Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Implement simple calculator for two numbers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;def add(num1, num2):&#xA;    return num1 + num2&#xA;&#xA;&#xA;def sub(num1, num2):&#xA;    return num1 - num2&#xA;&#xA;&#xA;def mul(num1, num2):&#xA;    return num1*num2&#xA;&#xA;&#xA;def div(num1, num2):&#xA;    return num1 / num2&#xA;&#xA;operators = {&#xA;    &#39;+&#39;: add,&#xA;    &#39;-&#39;: sub,&#xA;    &#39;*&#39;: mul,&#xA;    &#39;/&#39;: div&#xA;}&#xA;&#xA;if __name__ == &#39;__main__&#39;:&#xA;    operator = str(input(&#34;Operator: &#34;))&#xA;    num1 = int(input(&#34;1st number: &#34;))&#xA;    num2 = int(input(&#34;2nd number: &#34;))&#xA;    print(operators[operator](num1, num2))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What data types are you familiar with that are not Python built-in types but still provided by modules which are part of the standard library?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a good reference &lt;a href=&#34;https://docs.python.org/3/library/datatypes.html&#34;&gt;https://docs.python.org/3/library/datatypes.html&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a decorator&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;b&gt;In python, everything is an object, even functions themselves. Therefore you could pass functions as arguments for another function eg; &lt;pre&gt;&lt;code&gt;def wee(word):&#xA;    return word&#xA;&#xA;def oh(f):&#xA;    return f + &#34;Ohh&#34;&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; oh(wee(&#34;Wee&#34;))&#xA;&amp;lt;&amp;lt;&amp;lt; Wee Ohh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This allows us to control the before execution of any given function and if we added another function as wrapper, (a function receiving another function that receives a function as parameter) we could also control the after execution.&lt;/p&gt; &lt;p&gt;Sometimes we want to control the before-after execution of many functions and it would get tedious to write&lt;/p&gt; &lt;p&gt;&lt;code&gt; f = function(function_1())&lt;/code&gt; &lt;code&gt; f = function(function_1(function_2(*args)))&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;every time, that&#39;s what decorators do, they introduce syntax to write all of this on the go, using the keyword &#39;@&#39;. &lt;/b&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you show how to write and use decorators?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;code&gt; These two decorators (ntimes and timer) are usually used to display decorators functionalities, you can find them in lots of tutorials/reviews. I first saw these examples two years ago in pyData 2017. https://www.youtube.com/watch?v=7lmCu8wz8ro&amp;amp;t=3731s&lt;/code&gt; &lt;pre&gt;&lt;code&gt;Simple decorator:&#xA;&#xA;def deco(f):&#xA;    print(f&#34;Hi I am the {f.__name__}() function!&#34;)&#xA;    return f&#xA;&#xA;@deco&#xA;def hello_world():&#xA;    return &#34;Hi, I&#39;m in!&#34;&#xA;&#xA;a = hello_world()&#xA;print(a)&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; Hi I am the hello_world() function!&#xA;    Hi, I&#39;m in!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is the simplest decorator version, it basically saves us from writting &lt;code&gt;a = deco(hello_world())&lt;/code&gt;. But at this point we can only control the before execution, let&#39;s take on the after:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def deco(f):&#xA;    def wrapper(*args, **kwargs):&#xA;        print(&#34;Rick Sanchez!&#34;)&#xA;        func = f(*args, **kwargs)&#xA;        print(&#34;I&#39;m in!&#34;)&#xA;        return func&#xA;    return wrapper&#xA;&#xA;@deco&#xA;def f(word):&#xA;    print(word)&#xA;&#xA;a = f(&#34;************&#34;)&#xA;&amp;gt;&amp;gt;&amp;gt; Rick Sanchez!&#xA;    ************&#xA;    I&#39;m in!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;deco receives a function -&amp;gt; f wrapper receives the arguments -&amp;gt; *args, **kwargs&lt;/p&gt; &lt;p&gt;wrapper returns the function plus the arguments -&amp;gt; f(*args, **kwargs) deco returns wrapper.&lt;/p&gt; &lt;p&gt;As you can see we conveniently do things before and after the execution of a given function.&lt;/p&gt; &lt;p&gt;For example, we could write a decorator that calculates the execution time of a function.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;import time&#xA;def deco(f):&#xA;    def wrapper(*args, **kwargs):&#xA;        before = time.time()&#xA;        func = f(*args, **kwargs)&#xA;        after = time.time()&#xA;        print(after-before)&#xA;        return func&#xA;    return wrapper&#xA;&#xA;@deco&#xA;def f():&#xA;    time.sleep(2)&#xA;    print(&#34;************&#34;)&#xA;&#xA;a = f()&#xA;&amp;gt;&amp;gt;&amp;gt; 2.0008859634399414&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or create a decorator that executes a function n times.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def n_times(n):&#xA;    def wrapper(f):&#xA;        def inner(*args, **kwargs):&#xA;            for _ in range(n):&#xA;                func = f(*args, **kwargs)&#xA;            return func&#xA;        return inner&#xA;    return wrapper&#xA;&#xA;@n_times(4)&#xA;def f():&#xA;    print(&#34;************&#34;)&#xA;&#xA;a = f()&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt;************&#xA;   ************&#xA;   ************&#xA;   ************&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a decorator that calculates the execution time of a function&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a script which will determine if a given host is accessible on a given port&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are you familiar with Dataclasses? Can you explain what are they used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You wrote a class to represent a car. How would you compare two cars instances if two cars are equal if they have the same model and color?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;class Car:&#xA;    def __init__(self, model, color):&#xA;        self.model = model&#xA;        self.color = color&#xA;&#xA;    def __eq__(self, other):&#xA;        if not isinstance(other, Car):&#xA;            return NotImplemented&#xA;        return self.model == other.model and self.color == other.color&#xA;&#xA;&amp;gt;&amp;gt; a = Car(&#39;model_1&#39;, &#39;red&#39;)&#xA;&amp;gt;&amp;gt; b = Car(&#39;model_2&#39;, &#39;green&#39;)&#xA;&amp;gt;&amp;gt; c = Car(&#39;model_1&#39;, &#39;red&#39;)&#xA;&amp;gt;&amp;gt; a == b&#xA;False&#xA;&amp;gt;&amp;gt; a == c&#xA;True&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Context Manager&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me everything you know about concurrency in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the Buffer Protocol&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with web scraping? Can you describe what have you used and for what?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you implement Linux&#39;s &lt;code&gt;tail&lt;/code&gt; command in Python? Bonus: implement &lt;code&gt;head&lt;/code&gt; as well&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have created a web page where a user can upload a document. But the function which reads the uploaded files, runs for a long time, based on the document size and user has to wait for the read operation to complete before he/she can continue using the web site. How can you overcome this?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How yield works exactly?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Monitoring&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain monitoring. What is it? What its goal?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Google: &#34;Monitoring is one of the primary means by which service owners keep track of a system’s health and availability&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is wrong with the old approach of watching for a specific value and trigger an email/phone alert while value is exceeded?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This approach require from a human to always check why the value exceeded and how to handle it while today, it is more effective to notify people only when they need to take an actual action. If the issue doesn&#39;t require any human intervention, then the problem can be fixed by some processes running in the relevant environment. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of monitoring outputs are you familiar with and/or used in the past?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Alerts&lt;br&gt; Tickets&lt;br&gt; Logging&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between infrastructure monitoring and application monitoring? (methods, tools, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Prometheus&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Prometheus? What are some of Prometheus&#39;s main features?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In what scenarios it might be better to NOT use Prometheus?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From Prometheus documentation: &#34;if you need 100% accuracy, such as for per-request billing&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Prometheus architecture and components&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you compare Prometheus to other solutions like InfluxDB for example?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Alert?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the following Prometheus components: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Prometheus server&lt;/li&gt; &#xA;   &lt;li&gt;Push Gateway&lt;/li&gt; &#xA;   &lt;li&gt;Alert Manager&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Prometheus server is responsible for scraping and storing the data&lt;br&gt; Push gateway is used for short-lived jobs&lt;br&gt; Alert manager is responsible for alerts ;) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Instance? What is a Job?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What core metrics types Prometheus supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an exporter? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which Prometheus best practices are you familiar with?. Name at least three&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to get total requests in a given period of time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What HA in Prometheus means?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you join two metrics?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to write a query that returns the value of a label?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you convert cpu_user_seconds to cpu usage in percentage?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Go&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are some characteristics of the Go programming language?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Strong and static typing - the type of the variables can&#39;t be changed over time and they have to be defined at compile time&lt;/li&gt; &#xA;   &lt;li&gt;Simplicity&lt;/li&gt; &#xA;   &lt;li&gt;Fast compile times&lt;/li&gt; &#xA;   &lt;li&gt;Built-in concurrency&lt;/li&gt; &#xA;   &lt;li&gt;Garbage collected&lt;/li&gt; &#xA;   &lt;li&gt;Platform independent&lt;/li&gt; &#xA;   &lt;li&gt;Compile to standalone binary - anything you need to run your app will be compiled into one binary. Very useful for version management in run-time.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Go also has good community. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between &lt;code&gt;var x int = 2&lt;/code&gt; and &lt;code&gt;x := 2&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The result is the same, a variable with the value 2.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;With &lt;code&gt;var x int = 2&lt;/code&gt; we are setting the variable type to integer while with &lt;code&gt;x := 2&lt;/code&gt; we are letting Go figure out by itself the type. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In Go we can redeclare variables and once declared we must use it.&lt;/summary&gt; &#xA; &lt;p&gt;False. We can&#39;t redeclare variables but yes, we must used declared variables. &lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What libraries of Go have you used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;This should be answered based on your usage but some examples are:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;fmt - formatted I/O &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the problem with the following block of code? How to fix it? &lt;pre&gt;&lt;code&gt;func main() {&#xA;    var x float32 = 13.5&#xA;    var y int&#xA;    y = x&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;The following block of code tries to convert the integer 101 to a string but instead we get &#34;e&#34;. Why is that? How to fix it? &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;func main() {&#xA;    var x int = 101&#xA;    var y string&#xA;    y = string(x)&#xA;    fmt.Println(y)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It looks what unicode value is set at 101 and uses it for converting the integer to a string. If you want to get &#34;101&#34; you should use the package &#34;strconv&#34; and replace &lt;code&gt;y = string(x)&lt;/code&gt; with &lt;code&gt;y = strconv.Itoa(x)&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is wrong with the following code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;func main() {&#xA;    var x = 2&#xA;    var y = 3&#xA;    const someConst = x + y&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Constants in Go can only be declared using constant expressions. But &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and their sum is variable. &lt;br&gt; &lt;code&gt;const initializer x + y is not a constant&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;const (&#xA;&#x9;x = iota&#xA;&#x9;y = iota&#xA;)&#xA;const z = iota&#xA;&#xA;func main() {&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, x)&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, y)&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, z)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Go&#39;s iota identifier is used in const declarations to simplify definitions of incrementing numbers. Because it can be used in expressions, it provides a generality beyond that of simple enumerations. &lt;br&gt; &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; in the first iota group, &lt;code&gt;z&lt;/code&gt; in the second. &lt;br&gt; &lt;a href=&#34;https://github.com/golang/go/wiki/Iota&#34;&gt;Iota page in Go Wiki&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What _ is used for in Go?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It avoids having to declare all the variables for the returns values. It is called the &lt;a href=&#34;https://golang.org/doc/effective_go.html#blank&#34;&gt;blank identifier&lt;/a&gt;. &lt;br&gt; &lt;a href=&#34;https://stackoverflow.com/questions/27764421/what-is-underscore-comma-in-a-go-declaration#answer-27764432&#34;&gt;answer in SO&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;const (&#xA;&#x9;_ = iota + 3&#xA;&#x9;x&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, x)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Since the first iota is declared with the value &lt;code&gt;3&lt;/code&gt; (&lt;code&gt; + 3&lt;/code&gt;), the next one has the value &lt;code&gt;4&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;&#x9;&#34;sync&#34;&#xA;&#x9;&#34;time&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;var wg sync.WaitGroup&#xA;&#xA;&#x9;wg.Add(1)&#xA;&#x9;go func() {&#xA;&#x9;&#x9;time.Sleep(time.Second * 2)&#xA;&#x9;&#x9;fmt.Println(&#34;1&#34;)&#xA;&#x9;&#x9;wg.Done()&#xA;&#x9;}()&#xA;&#xA;&#x9;go func() {&#xA;&#x9;&#x9;fmt.Println(&#34;2&#34;)&#xA;&#x9;}()&#xA;&#xA;&#x9;wg.Wait()&#xA;&#x9;fmt.Println(&#34;3&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Output: 2 1 3&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://tutorialedge.net/golang/go-waitgroup-tutorial/&#34;&gt;Aritcle about sync/waitgroup&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://golang.org/pkg/sync/&#34;&gt;Golang package sync&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;)&#xA;&#xA;func mod1(a []int) {&#xA;&#x9;for i := range a {&#xA;&#x9;&#x9;a[i] = 5&#xA;&#x9;}&#xA;&#xA;&#x9;fmt.Println(&#34;1:&#34;, a)&#xA;}&#xA;&#xA;func mod2(a []int) {&#xA;&#x9;a = append(a, 125) // !&#xA;&#xA;&#x9;for i := range a {&#xA;&#x9;&#x9;a[i] = 5&#xA;&#x9;}&#xA;&#xA;&#x9;fmt.Println(&#34;2:&#34;, a)&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;s1 := []int{1, 2, 3, 4}&#xA;&#x9;mod1(s1)&#xA;&#x9;fmt.Println(&#34;1:&#34;, s1)&#xA;&#xA;&#x9;s2 := []int{1, 2, 3, 4}&#xA;&#x9;mod2(s2)&#xA;&#x9;fmt.Println(&#34;2:&#34;, s2)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Output: &lt;code&gt;&lt;br&gt; 1 [5 5 5 5]&lt;br&gt; 1 [5 5 5 5]&lt;br&gt; 2 [5 5 5 5 5]&lt;br&gt; 2 [1 2 3 4]&lt;br&gt; &lt;/code&gt;&lt;/p&gt; &lt;p&gt;In &lt;code&gt;mod1&lt;/code&gt; a is link, and when we&#39;re using &lt;code&gt;a[i]&lt;/code&gt;, we&#39;re changing &lt;code&gt;s1&lt;/code&gt; value to. But in &lt;code&gt;mod2&lt;/code&gt;, &lt;code&gt;append&lt;/code&gt; creats new slice, and we&#39;re changing only &lt;code&gt;a&lt;/code&gt; value, not &lt;code&gt;s2&lt;/code&gt;.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://golangbot.com/arrays-and-slices/&#34;&gt;Aritcle about arrays&lt;/a&gt;, &lt;a href=&#34;https://blog.golang.org/slices&#34;&gt;Blog post about &lt;code&gt;append&lt;/code&gt;&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;container/heap&#34;&#xA;&#x9;&#34;fmt&#34;&#xA;)&#xA;&#xA;// An IntHeap is a min-heap of ints.&#xA;type IntHeap []int&#xA;&#xA;func (h IntHeap) Len() int           { return len(h) }&#xA;func (h IntHeap) Less(i, j int) bool { return h[i] &amp;lt; h[j] }&#xA;func (h IntHeap) Swap(i, j int)      { h[i], h[j] = h[j], h[i] }&#xA;&#xA;func (h *IntHeap) Push(x interface{}) {&#xA;&#x9;// Push and Pop use pointer receivers because they modify the slice&#39;s length,&#xA;&#x9;// not just its contents.&#xA;&#x9;*h = append(*h, x.(int))&#xA;}&#xA;&#xA;func (h *IntHeap) Pop() interface{} {&#xA;&#x9;old := *h&#xA;&#x9;n := len(old)&#xA;&#x9;x := old[n-1]&#xA;&#x9;*h = old[0 : n-1]&#xA;&#x9;return x&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;h := &amp;amp;IntHeap{4, 8, 3, 6}&#xA;&#x9;heap.Init(h)&#xA;&#x9;heap.Push(h, 7)&#xA;&#xA;  fmt.Println((*h)[0])&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Output: 3&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://golang.org/pkg/container/heap/&#34;&gt;Golang container/heap package&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Mongo&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages of MongoDB? Or in other words, why choosing MongoDB and not other implementation of NoSQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;MongoDB advantages are as followings:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Schemaless&lt;/li&gt; &#xA;   &lt;li&gt;Easy to scale-out&lt;/li&gt; &#xA;   &lt;li&gt;No complex joins&lt;/li&gt; &#xA;   &lt;li&gt;Structure of a single object is clear&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between SQL and NoSQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The main difference is that SQL databases are structured (data is stored in the form of tables with rows and columns - like an excel spreadsheet table) while NoSQL is unstructured, and the data storage can vary depending on how the NoSQL DB is set up, such as key-value pair, document-oriented, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In what scenarios would you prefer to use NoSQL/Mongo over SQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Heterogeneous data which changes often&lt;/li&gt; &lt;li&gt;Data consistency and integrity is not top priority&lt;/li&gt; &lt;li&gt;Best if the database needs to scale rapidly &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a document? What is a collection?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an aggregator?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is better? Embedded documents or referenced?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Have you performed data retrieval optimizations in Mongo? If not, can you think about ways to optimize a slow data retrieval?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Queries&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain this query: &lt;code&gt;db.books.find({&#34;name&#34;: /abc/})&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain this query: &lt;code&gt;db.books.find().sort({x:1})&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between find() and find_one()?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you export data from Mongo DB?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;mongoexport&lt;/li&gt; &lt;li&gt;programming languages &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;SQL&lt;/h2&gt; &#xA;&lt;h3&gt;SQL Exercises&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Functions vs. Comparisons&lt;/td&gt; &#xA;   &lt;td&gt;Query Improvements&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/sql/improve_query.md&#34;&gt;Exercise&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/sql/solutions/improve_query.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;SQL Self Assessment&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;SQL (Structured Query Language) is a standard language for relational databases (like MySQL, MariaDB, ...).&lt;br&gt; It&#39;s used for reading, updating, removing and creating data in a relational database. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How is SQL Different from NoSQL&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The main difference is that SQL databases are structured (data is stored in the form of tables with rows and columns - like an excel spreadsheet table) while NoSQL is unstructured, and the data storage can vary depending on how the NoSQL DB is set up, such as key-value pair, document-oriented, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When is it best to use SQL? NoSQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;SQL - Best used when data integrity is crucial. SQL is typically implemented with many businesses and areas within the finance field due to it&#39;s ACID compliance.&lt;/p&gt; &lt;p&gt;NoSQL - Great if you need to scale things quickly. NoSQL was designed with web applications in mind, so it works great if you need to quickly spread the same information around to multiple servers&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Additionally, since NoSQL does not adhere to the strict table with columns and rows structure that Relational Databases require, you can store different data types together. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Practical SQL - Basics&lt;/h5&gt; &#xA;&lt;p&gt;For these questions, we will be using the Customers and Orders tables shown below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Customers&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Customer_ID&lt;/th&gt; &#xA;   &lt;th&gt;Customer_Name&lt;/th&gt; &#xA;   &lt;th&gt;Items_in_cart&lt;/th&gt; &#xA;   &lt;th&gt;Cash_spent_to_Date&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100204&lt;/td&gt; &#xA;   &lt;td&gt;John Smith&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;20.00&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Jane Smith&lt;/td&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;40.00&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;Bobby Frank&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;100.20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;ORDERS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Customer_ID&lt;/th&gt; &#xA;   &lt;th&gt;Order_ID&lt;/th&gt; &#xA;   &lt;th&gt;Item&lt;/th&gt; &#xA;   &lt;th&gt;Price&lt;/th&gt; &#xA;   &lt;th&gt;Date_sold&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;A123&lt;/td&gt; &#xA;   &lt;td&gt;Rubber Ducky&lt;/td&gt; &#xA;   &lt;td&gt;2.20&lt;/td&gt; &#xA;   &lt;td&gt;2019-09-18&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;A123&lt;/td&gt; &#xA;   &lt;td&gt;Bubble Bath&lt;/td&gt; &#xA;   &lt;td&gt;8.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-09-18&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;Q987&lt;/td&gt; &#xA;   &lt;td&gt;80-Pack TP&lt;/td&gt; &#xA;   &lt;td&gt;90.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-09-20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Tuna Fish&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Chicken&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Beef&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Kitty quesadilla&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100204&lt;/td&gt; &#xA;   &lt;td&gt;X202&lt;/td&gt; &#xA;   &lt;td&gt;Coffee&lt;/td&gt; &#xA;   &lt;td&gt;20.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-04-29&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would I select all fields from this table?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select * &lt;br&gt; From Customers; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How many items are in John&#39;s cart?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select Items_in_cart &lt;br&gt; From Customers &lt;br&gt; Where Customer_Name = &#34;John Smith&#34;; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the sum of all the cash spent across all customers?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select SUM(Cash_spent_to_Date) as SUM_CASH &lt;br&gt; From Customers; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How many people have items in their cart?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select count(1) as Number_of_People_w_items &lt;br&gt; From Customers &lt;br&gt; where Items_in_cart &amp;gt; 0; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you join the customer table to the order table?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You would join them on the unique key. In this case, the unique key is Customer_ID in both the Customers table and Orders table &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you show which customer ordered which items?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Select c.Customer_Name, o.Item &lt;br&gt; From Customers c &lt;br&gt; Left Join Orders o &lt;br&gt; On c.Customer_ID = o.Customer_ID;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using a with statement, how would you show who ordered cat food, and the total amount of money spent?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;with cat_food as ( &lt;br&gt; Select Customer_ID, SUM(Price) as TOTAL_PRICE &lt;br&gt; From Orders &lt;br&gt; Where Item like &#34;%Cat Food%&#34; &lt;br&gt; Group by Customer_ID &lt;br&gt; ) &lt;br&gt; Select Customer_name, TOTAL_PRICE &lt;br&gt; From Customers c &lt;br&gt; Inner JOIN cat_food f &lt;br&gt; ON c.Customer_ID = f.Customer_ID &lt;br&gt; where c.Customer_ID in (Select Customer_ID from cat_food);&lt;/p&gt; &lt;p&gt;Although this was a simple statement, the &#34;with&#34; clause really shines when a complex query needs to be run on a table before joining to another. With statements are nice, because you create a pseudo temp when running your query, instead of creating a whole new table.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The Sum of all the purchases of cat food weren&#39;t readily available, so we used a with statement to create the pseudo table to retrieve the sum of the prices spent by each customer, then join the table normally. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which of the following queries would you use? &lt;pre&gt;&lt;code&gt;SELECT count(*)                             SELECT count(*)&#xA;FROM shawarma_purchases                     FROM shawarma_purchases&#xA;WHERE                               vs.     WHERE&#xA;  YEAR(purchased_at) == &#39;2017&#39;              purchased_at &amp;gt;= &#39;2017-01-01&#39; AND&#xA;                                            purchased_at &amp;lt;= &#39;2017-31-12&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;SELECT count(*)&#xA;FROM shawarma_purchases&#xA;WHERE&#xA;  purchased_at &amp;gt;= &#39;2017-01-01&#39; AND&#xA;  purchased_at &amp;lt;= &#39;2017-31-12&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;When you use a function (&lt;code&gt;YEAR(purchased_at)&lt;/code&gt;) it has to scan the whole database as opposed to using indexes and basically the column as it is, in its natural state. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;GCP&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain GCP&#39;s architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the main components and services of GCP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;Components&lt;/th&gt; &#xA;     &lt;th&gt;Services&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Compute&lt;/td&gt; &#xA;     &lt;td&gt;Compute Engine&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;App Engine&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Kubernetes Engine&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Function&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Run&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Storage &amp;amp;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Storage&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Database&lt;/td&gt; &#xA;     &lt;td&gt;Cloud SQL&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud BigTable&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Spanner&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Datastore&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Networking&lt;/td&gt; &#xA;     &lt;td&gt;VPC&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Load Balancing&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Armor&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud CDN&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud DNS&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Interconnect&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Big Data&lt;/td&gt; &#xA;     &lt;td&gt;Big Query&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Dataproc&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Datalab&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Data Studio&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;DevOps&lt;/td&gt; &#xA;     &lt;td&gt;Container Registry&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Build&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Source Repository&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Identity &amp;amp;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Identity&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Security&lt;/td&gt; &#xA;     &lt;td&gt;Cloud IAM&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud KMS&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Cloud AI&lt;/td&gt; &#xA;     &lt;td&gt;Cloud AutoML&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Vision API&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Natural Language&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Speech-to-Text&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Text-to-Speech&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Translation API&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Video Intelligence&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;API Platform&lt;/td&gt; &#xA;     &lt;td&gt;Maps Platform&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;API Analytics&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Apigee Sense&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Cloud Endpoints&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What GCP management tools are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me what do you know about GCP networking&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Virtual Private Cloud(VPC) network is a virtual version of physical network, implemented in Google&#39;s internal Network. VPC is a gloabal resource in GCP. Subnetworks(subnets) are regional resources, ie., subnets can be created withinin regions.&lt;/p&gt; &lt;p&gt;VPC are created in 2 modes,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;Auto mode VPC - One subnet in each region is created automatically by GCP while creating VPC&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Custom mode VPC - No subnets are automatically created. This type of network provides complete control over the subnets creation to the users.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Cloud Functions&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Google Cloud Functions is a serverless execution environment for building and connecting cloud services. With Cloud Functions you write simple, single-purpose functions that are attached to events emitted from your cloud infrastructure and services. Your function is triggered when an event being watched is fired.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cloud Datastore?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Cloud Datastore is a schemaless NoSQL datastore in Google&#39;s cloud. Applications can use Datastore to query your data with SQL-like queries that support filtering and sorting. Datastore replicates data across multiple datacenters, which provides a high level of read/write availability.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What network tags are used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Network tags allow you to apply firewall rules and routes to a specific instance or set of instances: You make a firewall rule applicable to specific instances by using target tags and source tags.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are flow logs? Where are they enabled?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;VPC Flow Logs records a sample of network flows sent from and received by VM instances, including instances used as Google Kubernetes Engine nodes. These logs can be used for network monitoring, forensics, real-time security analysis, and expense optimization.&lt;/p&gt; &lt;p&gt;Enable Flow Logs&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;Open VPC Network in GCP Console&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Click the name of the subnet&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Click EDIT button&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Set Flow Logs to On&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Click Save&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you list buckets?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Two ways to do that: &lt;p&gt;$ gsutil ls&lt;/p&gt; &lt;p&gt;$ gcloud alpha storage ls&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What Compute metadata key allows you to run code at startup?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;startap-script &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the following commands does? `gcloud deployment-manager deployments create`&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Deployment Manager creates a new deployment.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cloud Code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is a set of tools to help developers write, run and debug GCP kubernetes based applications. It provides built-in support for rapid iteration, debugging and running applications in development and production K8s environments. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Google Kubernetes Engine (GKE)&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is GKE&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;It is the managed kubernetes service on GCP for deploying, managing and scaling containerised applications using Google infrastructure. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h3&gt;Anthos&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Anthos&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is a managed application platform for organisations like enterprises that require quick modernisation and certain levels of consistency for their legacy applications in a hybrid or multicloud world. From this explanation the core ideas can be drawn from these statements; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Managed -&amp;gt; the customer does not need to worry about the underlying software intergrations, they just enable the API.&lt;/li&gt; &#xA;   &lt;li&gt;application platform -&amp;gt; It consists of open source tools like K8s, Knative, Istio and Tekton&lt;/li&gt; &#xA;   &lt;li&gt;Enterprises -&amp;gt; these are usually organisations with complex needs&lt;/li&gt; &#xA;   &lt;li&gt;Consistency -&amp;gt; to have the same policies declaratively initiated to be run anywhere securely e.g on-prem, GCP or other-clouds (AWS or Azure)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;fun fact: Anthos is flower in greek, they grow in the ground (earth) but need rain from the clouds to flourish. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List the technical components that make up Anthos&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Infrastructure management - Google Kubernetes Engine (GKE)&lt;/li&gt; &lt;li&gt;Cluster management - GKE, Ingress for Anthos&lt;/li&gt; &lt;li&gt;Service management - Anthos Service Mesh&lt;/li&gt; &lt;li&gt;Policy enforcement - Anthos Config Management, Anthos Enterprise Data Protection, Policy Controller&lt;/li&gt; &lt;li&gt;Application deployment - CI/CD tools like Cloud Build, GitLab&lt;/li&gt; &lt;li&gt;Application development - Cloud Code &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the primary computing environment for Anthos to easily manage workload deployment?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Google Kubernetes Engine (GKE) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Anthos handle the control plane and node components for GKE?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;On GCP the kubernetes api-server is the only control plane component exposed to customers whilst compute engine manages instances in the project. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which load balancing options are available?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Networking load balancing for L4 and HTTP(S) Load Balancing for L7 which are both managed services that do not require additional configuration.&lt;/li&gt; &lt;li&gt;Ingress for Anthos which allows the ability to deploy a load balancer that serves an application across multiple clusters on GKE &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you deploy Anthos on AWS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Yes, Anthos on AWS is now GA. For more read &lt;a href=&#34;https://cloud.google.com/anthos/gke/docs/aws&#34;&gt;here&lt;/a&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List and explain the enterprise security capabilities provided by Anthos&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Control plane security - GCP manages and maintains the K8s control plane out of the box. The user can secure the api-server by using master authorized networks and private clusters. These allow the user to disable access on the public IP address by assigning a private IP address to the master.&lt;/li&gt; &lt;li&gt;Node security - By default workloads are provisioned on Compute engine instances that use Google&#39;s Container Optimised OS. This operating system implements a locked-down firewall, limited user accounts with root disabled and a read-only filesystem. There is a further option to enable GKE Sandbox for stronger isolation in multi-tenant deployment scenarios.&lt;/li&gt; &lt;li&gt;Network security - Within a created cluster VPC, Anthos GKE leverages a powerful software-defined network that enables simple Pod-to-Pod communications. Network policies allow locking down ingress and egress connections in a given namespace. Filtering can also be implemented to incoming load-balanced traffic for services that require external access, by supplying whitelisted CIDR IP ranges.&lt;/li&gt; &lt;li&gt;Workload security - Running workloads run with limited privileges, default Docker AppArmor security policies are applied to all Kubernetes Pods. Workload identity for Anthos GKE aligns with the open source kubernetes service accounts with GCP service account permissions.&lt;/li&gt; &lt;li&gt;Audit logging - Adminstrators are given a way to retain, query, process and alert on events of the deployed environments. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can workloads deployed on Anthos GKE on-prem clusters securely connect to Google Cloud services?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Google Cloud Virtual Private Network (Cloud VPN) - this is for secure networking&lt;/li&gt; &lt;li&gt;Google Cloud Key Management Service (Cloud KMS) - for key management &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Island Mode configuration with regards to networking in Anthos GKE deployed on-prem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;This is when pods can directly talk to each other within a cluster, but cannot be reached from outside the cluster thus forming an &#34;island&#34; within the network that is not connected to the external network. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Anthos Config Management&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It is a core component of the Anthos stack which provides platform, service and security operators with a single, unified approach to multi-cluster management that spans both on-premises and cloud environments. It closely follows K8s best practices, favoring declarative approaches over imperative operations, and actively monitors cluster state and applies the desired state as defined in Git. It includes three key components as follows:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;An importer that reads from a central Git repository&lt;/li&gt; &lt;li&gt;A component that synchronises stored configuration data into K8s objects&lt;/li&gt; &lt;li&gt;A component that monitors drift between desired and actual cluster configurations with a capability of reconciliation when need rises. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Anthos Config Management help?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It follows common modern software development practices which makes cluster configuration, management and policy changes auditable, revertable, and versionable easily enforcing IT governance and unifying resource management in an organisation. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Anthos Service Mesh?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;It is a suite of tools that assist in monitoring and managing deployed services on Anthos of all shapes and sizes whether running in cloud, hybrid or multi-cloud environments. It leverages the APIs and core components from Istio, a highly configurable and open-source service mesh platform. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the two main components of Anthos Service Mesh&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Data plane - it consists of a set of distributed proxies that mediate all inbound and outbound network traffic between individual services which are configured using a centralised control plane and an open API&lt;/li&gt; &lt;li&gt;Control plane - is a fully managed offering outside of Anthos GKE clusters to simplify management overhead and ensure highest possible availability. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the components of the managed control plane of Anthos Service Mesh?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Traffic Director - it is GCP&#39;s fully managed service mesh traffic control plane, responsible for translating Istio API objects into configuration information for the distributed proxies, as well as directing service mesh ingress and egress traffic&lt;/li&gt; &lt;li&gt;Managed CA - is a centralised certificate authority responsible for providing SSL certificates to each of the distributed proxies, authentication information and distributing secrets&lt;/li&gt; &lt;li&gt;Operations tooling - formerly stackdriver, provides a managed ingestion point for observability and telemetry, specifically monitoring, tracing and logging data generated by each of the proxies. This powers the observability dashboard for operators to visually inspect their services and service dependencies assisting in the implementation of SRE best practices for monitoring SLIs and establishing SLOs. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Anthos Service Mesh help?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Tool and technology integration that makes up Anthos service mesh delivers signficant operational benefits to Anthos environments, with minimal additional overhead such as follows: &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Uniform observability - the data plane reports service to service communication back to the control plane generating a service dependency graph. Traffic inspection by the proxy inserts headers to facilitate distributed tracing, capturing and reporting service logs together with service-level metrics (i.e latency, errors, availability).&lt;/li&gt; &lt;li&gt;Operational agility - fine-grained controls for managing the flow of inter-mesh (north-south) and intra-mesh (east-west) traffic are provided.&lt;/li&gt; &lt;li&gt;Policy-driven security - policies can be enforced consistently across diverse protocols and runtimes as service communications are secured by default. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List possible use cases of traffic controls that can be implemented within Anthos Service Mesh&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Traffic splitting across differing service versions for canary or A/B testing&lt;/li&gt; &lt;li&gt;Circuit breaking to prevent cascading failures&lt;/li&gt; &lt;li&gt;Fault injection to help build resilient and fault-tolerant deployments&lt;/li&gt; &lt;li&gt;HTTP header-based traffic steering between individual services or versions &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cloud Run for Anthos?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It is part of the Anthos stack that brings a serverless container experience to Anthos, offering a high-level platform experience on top of K8s clusters. It is built with Knative, an open-source operator for K8s that brings serverless application serving and eventing capabilities. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Cloud Run for Anthos simplify operations?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Platform teams in organisations that wish to offer developers additional tools to test, deploy and run applications can use Knative to enhance this experience on Anthos as Cloud Run. Below are some of the benefits;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Easy migration from K8s deployments - Without Cloud Run, platform engineers have to configure deployment, service, and HorizontalPodAutoscalers(HPA) objects to a loadbalancer and autoscaling. If application is already serving traffic it becomes hard to change configurations or roll back efficiently. Using Cloud Run all this is managed thus the Knative service manifest describes the application to be autoscaled and loadbalanced&lt;/li&gt; &lt;li&gt;Autoscaling - a sudden traffic spike may cause application containers in K8s to crash due to overload thus an efficient automated autoscaling is executed to serve the high volume of traffic&lt;/li&gt; &lt;li&gt;Networking - it has built-in load balancing capabilities and policies for traffic splitting between multiple versions of an application.&lt;/li&gt; &lt;li&gt;Releases and rollouts - supports the notion of the Knatibe API&#39;s revisions which describe new versions or different configurations of your application and canary deployments by splitting traffic.&lt;/li&gt; &lt;li&gt;Monitoring - observing and recording metrics such as latency, error rate and requests per second. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List and explain three high-level out of the box autoscaling primitives offered by Cloud Run for Anthos that do not exist in K8s natively&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Rapid, request-based autoscaling - default autoscalers monitor request metrics which allows Cloud Run for Anthos to handle spiky traffic patterns smoothly&lt;/li&gt; &lt;li&gt;Concurrency controls - limits such as max in-flight requests per container are enforced to ensure the container does not become overloaded and crash. More containers are added to handle the spiky traffic, buffering the requests.&lt;/li&gt; &lt;li&gt;Scale to zero - if an application is inactive for a while Cloud Run scales it down to zero to reduce its footprint. Alternatively one can turn off scale-to-zero to prevent cold starts. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List some Cloud Run for Anthos use cases&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;As it does not support stateful applications or sticky sessions, it is suitable for running stateless applications such as:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Machine learning model predictions e.g Tensorflow serving containers&lt;/li&gt; &lt;li&gt;API gateways, API middleware, web front ends and Microservices&lt;/li&gt; &lt;li&gt;Event handlers, ETL &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;OpenStack&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What components/projects of OpenStack are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you tell me what each of the following services/projects is responsible for?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Nova&lt;/li&gt; &#xA;   &lt;li&gt;Neutron&lt;/li&gt; &#xA;   &lt;li&gt;Cinder&lt;/li&gt; &#xA;   &lt;li&gt;Glance&lt;/li&gt; &#xA;   &lt;li&gt;Keystone&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Nova - Manage virtual instances&lt;/li&gt; &lt;li&gt;Cinder - Block Storage&lt;/li&gt; &lt;li&gt;Keystone - Authentication service across the cloud &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Identify the service/project used for each of the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Copy or snapshot instances&lt;/li&gt; &#xA;   &lt;li&gt;GUI for viewing and modifying resources&lt;/li&gt; &#xA;   &lt;li&gt;Block Storage&lt;/li&gt; &#xA;   &lt;li&gt;Manage virtual instances&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Glance - Images Service. Also used for copying or snapshot instances&lt;/li&gt; &lt;li&gt;Horizon - GUI for viewing and modifying resources&lt;/li&gt; &lt;li&gt;Cinder - Block Storage&lt;/li&gt; &lt;li&gt;Nova - Manage virtual instances &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a tenant/project?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Determine true or false: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;OpenStack is free to use&lt;/li&gt; &#xA;   &lt;li&gt;The service responsible for networking is Glance&lt;/li&gt; &#xA;   &lt;li&gt;The purpose of tenant/project is to share resources between different projects and users of OpenStack&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe in detail how you bring up an instance with a floating IP&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You get a call from a customer saying: &#34;I can ping my instance but can&#39;t connect (ssh) it&#34;. What might be the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of networks OpenStack supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug OpenStack storage issues? (tools, logs, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug OpenStack compute issues? (tools, logs, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;OpenStack Deployment &amp;amp; TripleO&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Have you deployed OpenStack in the past? If yes, can you describe how you did it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are you familiar with TripleO? How is it different from Devstack or Packstack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can read about TripleO right &lt;a href=&#34;https://docs.openstack.org/tripleo-docs/latest&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;OpenStack Compute&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe Nova in detail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Used to provision and manage virtual instances&lt;/li&gt; &lt;li&gt;It supports Multi-Tenancy in different levels - logging, end-user control, auditing, etc.&lt;/li&gt; &lt;li&gt;Highly scalable&lt;/li&gt; &lt;li&gt;Authentication can be done using internal system or LDAP&lt;/li&gt; &lt;li&gt;Supports multiple types of block storage&lt;/li&gt; &lt;li&gt;Tries to be hardware and hypervisor agnostice &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you know about Nova architecture and components?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;nova-api - the server which serves metadata and compute APIs&lt;/li&gt; &lt;li&gt;the different Nova components communicate by using a queue (Rabbitmq usually) and a database&lt;/li&gt; &lt;li&gt;a request for creating an instance is inspected by nova-scheduler which determines where the instance will be created and running&lt;/li&gt; &lt;li&gt;nova-compute is the component responsible for communicating with the hypervisor for creating the instance and manage its lifecycle &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Networking (Neutron)&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Neutron in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;One of the core component of OpenStack and a standalone project&lt;/li&gt; &lt;li&gt;Neutron focused on delivering networking as a service&lt;/li&gt; &lt;li&gt;With Neutron, users can set up networks in the cloud and configure and manage a variety of network services&lt;/li&gt; &lt;li&gt;Neutron interacts with: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Keystone - authorize API calls&lt;/li&gt; &#xA;     &lt;li&gt;Nova - nova communicates with neutron to plug NICs into a network&lt;/li&gt; &#xA;     &lt;li&gt;Horizon - supports networking entities in the dashboard and also provides topology view which includes networking details &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain each of the following components: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;neutron-dhcp-agent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-l3-agent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-metering-agent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-*-agtent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-server&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;neutron-l3-agent - L3/NAT forwarding (provides external network access for VMs for example)&lt;/li&gt; &lt;li&gt;neutron-dhcp-agent - DHCP services&lt;/li&gt; &lt;li&gt;neutron-metering-agent - L3 traffic metering&lt;/li&gt; &lt;li&gt;neutron-*-agtent - manages local vSwitch configuration on each compute (based on chosen plugin)&lt;/li&gt; &lt;li&gt;neutron-server - exposes networking API and passes requests to other plugins if required &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain these network types: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Management Network&lt;/li&gt; &#xA;   &lt;li&gt;Guest Network&lt;/li&gt; &#xA;   &lt;li&gt;API Network&lt;/li&gt; &#xA;   &lt;li&gt;External Network&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Management Network - used for internal communication between OpenStack components. Any IP address in this network is accessible only within the datacetner&lt;/li&gt; &lt;li&gt;Guest Network - used for communication between instances/VMs&lt;/li&gt; &lt;li&gt;API Network - used for services API communication. Any IP address in this network is publicly accessible&lt;/li&gt; &lt;li&gt;External Network - used for public communication. Any IP address in this network is accessible by anyone on the internet &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In which order should you remove the following entities: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Network&lt;/li&gt; &#xA;   &lt;li&gt;Port&lt;/li&gt; &#xA;   &lt;li&gt;Router&lt;/li&gt; &#xA;   &lt;li&gt;Subnet&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Port&lt;/li&gt; &#xA;   &lt;li&gt;Subnet&lt;/li&gt; &#xA;   &lt;li&gt;Router&lt;/li&gt; &#xA;   &lt;li&gt;Network&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;There are many reasons for that. One for example: you can&#39;t remove router if there are active ports assigned to it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a provider network?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What components and services exist for L2 and L3?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the ML2 plug-in? Explain its architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the L2 agent? How does it works and what is it responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the L3 agent? How does it works and what is it responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what the Metadata agent is responsible for&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What networking entities Neutron supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug OpenStack networking issues? (tools, logs, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;OpenStack - Glance&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Glance in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Glance is the OpenStack image service&lt;/li&gt; &lt;li&gt;It handles requests related to instances disks and images&lt;/li&gt; &lt;li&gt;Glance also used for creating snapshots for quick instances backups&lt;/li&gt; &lt;li&gt;Users can use Glance to create new images or upload existing ones &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Glance architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;glance-api - responsible for handling image API calls such as retrieval and storage. It consists of two APIs: 1. registry-api - responsible for internal requests 2. user API - can be accessed publicly&lt;/li&gt; &lt;li&gt;glance-registry - responsible for handling image metadata requests (e.g. size, type, etc). This component is private which means it&#39;s not available publicly&lt;/li&gt; &lt;li&gt;metadata definition service - API for custom metadata&lt;/li&gt; &lt;li&gt;database - for storing images metadata&lt;/li&gt; &lt;li&gt;image repository - for storing images. This can be a filesystem, swift object storage, HTTP, etc. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack - Swift&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Swift in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Swift is Object Store service and is an highly available, distributed and consistent store designed for storing a lot of data&lt;/li&gt; &lt;li&gt;Swift is distributing data across multiple servers while writing it to multiple disks&lt;/li&gt; &lt;li&gt;One can choose to add additional servers to scale the cluster. All while swift maintaining integrity of the information and data replications. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can users store by default an object of 100GB in size?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not by default. Object Storage API limits the maximum to 5GB per object but it can be adjusted. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following in regards to Swift: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Container&lt;/li&gt; &#xA;   &lt;li&gt;Account&lt;/li&gt; &#xA;   &lt;li&gt;Object&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Container - Defines a namespace for objects.&lt;/li&gt; &lt;li&gt;Account - Defines a namespace for containers&lt;/li&gt; &lt;li&gt;Object - Data content (e.g. image, document, ...) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? there can be two objects with the same name in the same container but not in two different containers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. Two objects can have the same name if they are in different containers. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;OpenStack - Cinder&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Cinder in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Cinder is OpenStack Block Storage service&lt;/li&gt; &lt;li&gt;It basically provides used with storage resources they can consume with other services such as Nova&lt;/li&gt; &lt;li&gt;One of the most used implementations of storage supported by Cinder is LVM&lt;/li&gt; &lt;li&gt;From user perspective this is transparent which means the user doesn&#39;t know where, behind the scenes, the storage is located or what type of storage is used &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Cinder&#39;s components&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;cinder-api - receives API requests&lt;/li&gt; &lt;li&gt;cinder-volume - manages attached block devices&lt;/li&gt; &lt;li&gt;cinder-scheduler - responsible for storing volumes &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack - Keystone&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe the following concepts in regards to Keystone? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Role&lt;/li&gt; &#xA;   &lt;li&gt;Tenant/Project&lt;/li&gt; &#xA;   &lt;li&gt;Service&lt;/li&gt; &#xA;   &lt;li&gt;Endpoint&lt;/li&gt; &#xA;   &lt;li&gt;Token&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Role - A list of rights and privileges determining what a user or a project can perform&lt;/li&gt; &lt;li&gt;Tenant/Project - Logical representation of a group of resources isolated from other groups of resources. It can be an account, organization, ...&lt;/li&gt; &lt;li&gt;Service - An endpoint which the user can use for accessing different resources&lt;/li&gt; &lt;li&gt;Endpoint - a network address which can be used to access a certain OpenStack service&lt;/li&gt; &lt;li&gt;Token - Used for access resources while describing which resources can be accessed by using a scope &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the properties of a service? In other words, how a service is identified?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Using:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Name&lt;/li&gt; &lt;li&gt;ID number&lt;/li&gt; &lt;li&gt;Type&lt;/li&gt; &lt;li&gt;Description &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: - PublicURL - InternalURL - AdminURL&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;PublicURL - Publicly accessible through public internet&lt;/li&gt; &lt;li&gt;InternalURL - Used for communication between services&lt;/li&gt; &lt;li&gt;AdminURL - Used for administrative management &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a service catalog?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A list of services and their endpoints &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;OpenStack Advanced - Services&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe each of the following services &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Swift&lt;/li&gt; &#xA;   &lt;li&gt;Sahara&lt;/li&gt; &#xA;   &lt;li&gt;Ironic&lt;/li&gt; &#xA;   &lt;li&gt;Trove&lt;/li&gt; &#xA;   &lt;li&gt;Aodh&lt;/li&gt; &#xA;   &lt;li&gt;Ceilometer&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Swift - highly available, distributed, eventually consistent object/blob store&lt;/li&gt; &lt;li&gt;Sahara - Manage Hadoop Clusters&lt;/li&gt; &lt;li&gt;Ironic - Bare Metal Provisioning&lt;/li&gt; &lt;li&gt;Trove - Database as a service that runs on OpenStack&lt;/li&gt; &lt;li&gt;Aodh - Alarms Service&lt;/li&gt; &lt;li&gt;Ceilometer - Track and monitor usage &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Identify the service/project used for each of the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Database as a service which runs on OpenStack&lt;/li&gt; &#xA;   &lt;li&gt;Bare Metal Provisioning&lt;/li&gt; &#xA;   &lt;li&gt;Track and monitor usage&lt;/li&gt; &#xA;   &lt;li&gt;Alarms Service&lt;/li&gt; &#xA;   &lt;li&gt;Manage Hadoop Clusters&lt;/li&gt; &#xA;   &lt;li&gt;highly available, distributed, eventually consistent object/blob store&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Database as a service which runs on OpenStack - Trove&lt;/li&gt; &lt;li&gt;Bare Metal Provisioning - Ironic&lt;/li&gt; &lt;li&gt;Track and monitor usage - Ceilometer&lt;/li&gt; &lt;li&gt;Alarms Service - Aodh&lt;/li&gt; &lt;li&gt;Manage Hadoop Clusters&lt;/li&gt; &lt;li&gt;Manage Hadoop Clusters - Sahara&lt;/li&gt; &lt;li&gt;highly available, distributed, eventually consistent object/blob store - Swift &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Advanced - Keystone&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe Keystone service in detail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;You can&#39;t have OpenStack deployed without Keystone&lt;/li&gt; &lt;li&gt;It Provides identity, policy and token services &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;The authentication provided is for both users and services&lt;/li&gt; &#xA;     &lt;li&gt;The authorization supported is token-based and user-based.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;There is a policy defined based on RBAC stored in a JSON file and each line in that file defines the level of access to apply &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Keystone architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;There is a service API and admin API through which Keystone gets requests&lt;/li&gt; &lt;li&gt;Keystone has four backends: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Token Backend - Temporary Tokens for users and services&lt;/li&gt; &#xA;     &lt;li&gt;Policy Backend - Rules management and authorization&lt;/li&gt; &#xA;     &lt;li&gt;Identity Backend - users and groups (either standalone DB, LDAP, ...)&lt;/li&gt; &#xA;     &lt;li&gt;Catalog Backend - Endpoints&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;It has pluggable environment where you can integrate with: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;LDAP&lt;/li&gt; &#xA;     &lt;li&gt;KVS (Key Value Store)&lt;/li&gt; &#xA;     &lt;li&gt;SQL&lt;/li&gt; &#xA;     &lt;li&gt;PAM&lt;/li&gt; &#xA;     &lt;li&gt;Memcached &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the Keystone authentication process&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Keystone gets a call/request and checks whether it&#39;s from an authorized user, using username, password and authURL&lt;/li&gt; &lt;li&gt;Once confirmed, Keystone provides a token.&lt;/li&gt; &lt;li&gt;A token contains a list of user&#39;s projects so there is no to authenticate every time and a token can submitted instead &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Advanced - Compute (Nova)&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What each of the following does?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;nova-api&lt;/li&gt; &#xA;   &lt;li&gt;nova-compuate&lt;/li&gt; &#xA;   &lt;li&gt;nova-conductor&lt;/li&gt; &#xA;   &lt;li&gt;nova-cert&lt;/li&gt; &#xA;   &lt;li&gt;nova-consoleauth&lt;/li&gt; &#xA;   &lt;li&gt;nova-scheduler&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;nova-api - responsible for managing requests/calls&lt;/li&gt; &lt;li&gt;nova-compute - responsible for managing instance lifecycle&lt;/li&gt; &lt;li&gt;nova-conductor - Mediates between nova-compute and the database so nova-compute doesn&#39;t access it directly &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of Nova proxies are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Nova-novncproxy - Access through VNC connections&lt;/li&gt; &lt;li&gt;Nova-spicehtml5proxy - Access through SPICE&lt;/li&gt; &lt;li&gt;Nova-xvpvncproxy - Access through a VNC connection &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Advanced - Networking (Neutron)&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain BGP dynamic routing&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the role of network namespaces in OpenStack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;OpenStack Advanced - Horizon&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe Horizon in detail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Django-based project focusing on providing an OpenStack dashboard and the ability to create additional customized dashboards&lt;/li&gt; &lt;li&gt;You can use it to access the different OpenStack services resources - instances, images, networks, ... &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;By accessing the dashboard, users can use it to list, create, remove and modify the different resources&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;It&#39;s also highly customizable and you can modify or add to it based on your needs &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you tell about Horizon architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;API is backward compatible&lt;/li&gt; &lt;li&gt;There are three type of dashboards: user, system and settings&lt;/li&gt; &lt;li&gt;It provides core support for all OpenStack core projects such as Neutron, Nova, etc. (out of the box, no need to install extra packages or plugins)&lt;/li&gt; &lt;li&gt;Anyone can extend the dashboards and add new components&lt;/li&gt; &lt;li&gt;Horizon provides templates and core classes from which one can build its own dashboard &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;Puppet&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Puppet? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Puppet architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you compare Puppet to other configuration management tools? Why did you chose to use Puppet?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Module&lt;/li&gt; &#xA;   &lt;li&gt;Manifest&lt;/li&gt; &#xA;   &lt;li&gt;Node&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Facter&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is MCollective?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with writing modules? Which module have you created and for what?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Hiera&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Elastic&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Elastic Stack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The Elastic Stack consists of:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Elasticsearch&lt;/li&gt; &#xA;   &lt;li&gt;Kibana&lt;/li&gt; &#xA;   &lt;li&gt;Logstash&lt;/li&gt; &#xA;   &lt;li&gt;Beats&lt;/li&gt; &#xA;   &lt;li&gt;Elastic Hadoop&lt;/li&gt; &#xA;   &lt;li&gt;APM Server&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Elasticserach, Logstash and Kibana are also known as the ELK stack. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Elasticsearch&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/documents-indices.html&#34;&gt;docs&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Elasticsearch is a distributed document store. Instead of storing information as rows of columnar data, Elasticsearch stores complex data structures that have been serialized as JSON documents&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Logstash?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the &lt;a href=&#34;https://logit.io/blog/post/the-top-50-elk-stack-and-elasticsearch-interview-questions&#34;&gt;blog&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Logstash is a powerful, flexible pipeline that collects, enriches and transports data. It works as an extract, transform &amp;amp; load (ETL) tool for collecting log messages.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what beats are&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Beats are lightweight data shippers. These data shippers installed on the client where the data resides. Examples of beats: Filebeat, Metricbeat, Auditbeat. There are much more.&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Kibana?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official docs:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Kibana is an open source analytics and visualization platform designed to work with Elasticsearch. You use Kibana to search, view, and interact with data stored in Elasticsearch indices. You can easily perform advanced data analysis and visualize your data in a variety of charts, tables, and maps.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe what happens from the moment an app logged some information until it&#39;s displayed to the user in a dashboard when the Elastic stack is used&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The process may vary based on the chosen architecture and the processing you may want to apply to the logs. One possible workflow is:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;The data logged by the application is picked by filebeat and sent to logstash&lt;/li&gt; &lt;li&gt;Logstash process the log based on the defined filters. Once done, the output is sent to Elasticsearch&lt;/li&gt; &lt;li&gt;Elasticsearch stores the document it got and the document is indexed for quick future access&lt;/li&gt; &lt;li&gt;The user creates visualizations in Kibana which based on the indexed data&lt;/li&gt; &lt;li&gt;The user creates a dashboard which composed out of the visualization created in the previous step &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h5&gt;Elasticsearch&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a data node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is where data is stored and also where different processing takes place (e.g. when you search for a data). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a master node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Par of a master node responsibilites:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Track the status of all the nodes in the cluster&lt;/li&gt; &#xA;   &lt;li&gt;Verify replicas are working and the data is available from every data node.&lt;/li&gt; &#xA;   &lt;li&gt;No hot nodes (no data node that works much harder than other nodes)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;While there can be multiple master nodes in reality only of them is the elected master node. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an ingest node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A node which responsible for parsing the data. In case you don&#39;t use logstash then this node can recieve data from beats and parse it, similarly to how it can be parsed in Logstash. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Coordinating node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A Coordinating node responsible for routing requests out and in to the cluser (data nodes). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How data is stored in elasticsearch?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Data is stored in an index&lt;/li&gt; &lt;li&gt;The index is spread across the cluster using shards &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Index?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Index in Elastic is in most cases compared to a whole database from the SQL/NoSQL world.&lt;br&gt; You can choose to have one index to hold all the data of your app or have multiple indices where each index holds different type of your app (e.g. index for each service your app is running).&lt;/p&gt; &lt;p&gt;The official docs also offer a great explanation (in general, it&#39;s really good documentation, as every project should have):&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An index can be thought of as an optimized collection of documents and each document is a collection of fields, which are the key-value pairs that contain your data&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Shards&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An index is split into shards and documents are hashed to a particular shard. Each shard may be on a different node in a cluster and each one of the shards is a self contained index.&lt;br&gt; This allows Elasticsearch to scale to an entire cluster of servers. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Inverted Index?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official docs:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An inverted index lists every unique word that appears in any document and identifies all of the documents each word occurs in.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Document?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Continuing with the comparison to SQL/NoSQL a Document in Elastic is a row in table in the case of SQL or a document in a collection in the case of NoSQL. As in NoSQL a Document is a JSON object which holds data on a unit in your app. What is this unit depends on the your app. If your app related to book then each document describes a book. If you are app is about shirts then each document is a shirt. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You check the health of your elasticsearch cluster and it&#39;s red. What does it mean? What can cause the status to be yellow instead of green?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Red means some data is unavailable. Yellow can be caused by running single node cluster instead of multi-node. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Elasticsearch indexes all data in every field and each indexed field has the same data structure for unified and quick query ability&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;False. From the official docs:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Each indexed field has a dedicated, optimized data structure. For example, text fields are stored in inverted indices, and numeric and geo fields are stored in BKD trees.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What reserved fields a document has?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;_index&lt;/li&gt; &lt;li&gt;_id&lt;/li&gt; &lt;li&gt;_type &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Mapping&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages of defining your own mapping? (or: when would you use your own mapping?)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;You can optimize fields for partial matching&lt;/li&gt; &lt;li&gt;You can define custom formats of known fields (e.g. date)&lt;/li&gt; &lt;li&gt;You can perform language-specific analysis &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Replicas&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In a network/cloud environment where failures can be expected any time, it is very useful and highly recommended to have a failover mechanism in case a shard/node somehow goes offline or disappears for whatever reason. To this end, Elasticsearch allows you to make one or more copies of your index’s shards into what are called replica shards, or replicas for short. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain Term Frequency &amp;amp; Document Frequency?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Term Frequency is how often a term appears in a given document and Document Frequency is how often a term appears in all documents. They both are used for determining the relevance of a term by calculating Term Frequency / Document Frequency. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You check &#34;Current Phase&#34; under &#34;Index lifecycle management&#34; and you see it&#39;s set to &#34;hot&#34;. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;The index is actively being written to&#34;. More about the phases &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/7.6/ilm-policy-definition.html&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What this command does? &lt;code&gt;curl -X PUT &#34;localhost:9200/customer/_doc/1?pretty&#34; -H &#39;Content-Type: application/json&#39; -d&#39;{ &#34;name&#34;: &#34;John Doe&#34; }&#39;&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It creates customer index if it doesn&#39;t exists and adds a new document with the field name which is set to &#34;John Dow&#34;. Also, if it&#39;s the first document it will get the ID 1. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will happen if you run the previous command twice? What about running it 100 times?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;If name value was different then it would update &#34;name&#34; to the new value&lt;/li&gt; &lt;li&gt;In any case, it bumps version field by one &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Bulk API? What would you use it for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bulk API is used when you need to index multiple documents. For high number of documents it would be significantly faster to use rather than individual requests since there are less network roundtrips. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Query DSL&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Elasticsearch query syntax (Booleans, Fields, Ranges)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Relevance Score&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Query Context and Filter Context&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official docs:&lt;/p&gt; &lt;p&gt;&#34;In the query context, a query clause answers the question “How well does this document match this query clause?” Besides deciding whether or not the document matches, the query clause also calculates a relevance score in the _score meta-field.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;In a filter context, a query clause answers the question “Does this document match this query clause?” The answer is a simple Yes or No — no scores are calculated. Filter context is mostly used for filtering structured data&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe how would an architecture of production environment with large amounts of data would be different from a small-scale environment&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;There are several possible answers for this question. One of them is as follows:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A small-scale architecture of elastic will consist of the elastic stack as it is. This means we will have beats, logstash, elastcsearch and kibana.&lt;br&gt; A production environment with large amounts of data can include some kind of buffering component (e.g. Reddis or RabbitMQ) and also security component such as Nginx. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Logstash&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are Logstash plugins? What plugins types are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Input Plugins - how to collect data from different sources&lt;/li&gt; &lt;li&gt;Filter Plugins - processing data&lt;/li&gt; &lt;li&gt;Output Plugins - push data to different outputs/services/platforms &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is grok?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A logstash plugin which modifies information in one format and immerse it in another. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How grok works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What grok patterns are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is `_grokparsefailure?`&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you test or debug grok patterns?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are Logstash Codecs? What codecs are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Kibana&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find under &#34;Discover&#34; in Kibana?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The raw data as it is stored in the index. You can search and filter it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You see in Kibana, after clicking on Discover, &#34;561 hits&#34;. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Total number of documents matching the search results. If not query used then simply the total number of documents. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find under &#34;Visualize&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Visualize&#34; is where you can create visual representations for your data (pie charts, graphs, ...) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What visualization types are supported/included in Kibana?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What visualization type would you use for statistical outliers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe in detail how do you create a dashboard in Kibana&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Filebeat&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Filebeat?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If one is using ELK, is it a must to also use filebeat? In what scenarios it&#39;s useful to use filebeat?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a harvester?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read &lt;a href=&#34;https://www.elastic.co/guide/en/beats/filebeat/current/how-filebeat-works.html#harvester&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? a single harvester harvest multiple files, according to the limits set in filebeat.yml&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. One harvester harvests one file. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are filebeat modules?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Elastic Stack&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you secure an Elastic Stack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can generate certificates with the provided elastic utils and change configuration to enable security using certificates model. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Distributed&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Distributed Computing (or Distributed System)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;According to Martin Kleppmann:&lt;/p&gt; &lt;p&gt;&#34;Many processes running on many machines...only message-passing via an unreliable network with variable delays, and the system may suffer from partial failures, unreliable clocks, and process pauses.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another definition: &#34;Systems that are physically separated, but logically connected&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can cause a system to fail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Network&lt;/li&gt; &lt;li&gt;CPU&lt;/li&gt; &lt;li&gt;Memory&lt;/li&gt; &lt;li&gt;Disk &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you know what is &#34;CAP theorem&#34;? (aka as Brewer&#39;s theorem)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;According to the CAP theorem, it&#39;s not possible for a distributed data store to provide more than two of the following at the same time:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Availability: Every request receives a response (it doesn&#39;t has to be the most recent data)&lt;/li&gt; &lt;li&gt;Consistency: Every request receives a response with the latest/most recent data&lt;/li&gt; &lt;li&gt;Partition tolerance: Even if some the data is lost/dropped, the system keeps running &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the problems with the following design? How to improve it?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/distributed/distributed_design_standby.png&#34; width=&#34;500x;&#34; height=&#34;350px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; 1. The transition can take time. In other words, noticeable downtime. 2. Standby server is a waste of resources - if first application server is running then the standby does nothing &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the problems with the following design? How to improve it?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/distributed/distributed_design_lb.png&#34; width=&#34;700x;&#34; height=&#34;350px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Issues: If load balancer dies , we lose the ability to communicate with the application. &lt;p&gt;Ways to improve:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Add another load balancer&lt;/li&gt; &lt;li&gt;Use DNS A record for both load balancers&lt;/li&gt; &lt;li&gt;Use message queue &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;Shared-Nothing&#34; architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It&#39;s an architecture in which data is and retrieved from a single, non-shared, source usually exclusively connected to one node as opposed to architectures where the request can get to one of many nodes and the data will be retrieved from one shared location (storage, memory, ...). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the Sidecar Pattern (Or sidecar proxy)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Misc&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Highly Available &#34;Hello World&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/devops/ha_hello_world.md&#34;&gt;Exercise&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/devops/solutions/ha_hello_world.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you type in a URL in an address bar in a browser?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;The browser searches for the record of the domain name IP address in the DNS in the following order:&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Browser cache&lt;/li&gt; &#xA;   &lt;li&gt;Operating system cache&lt;/li&gt; &#xA;   &lt;li&gt;The DNS server configured on the user&#39;s system (can be ISP DNS, public DNS, ...)&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ol start=&#34;2&#34;&gt; &#xA;   &lt;li&gt;If it couldn&#39;t find a DNS record locally, a full DNS resolution is started.&lt;/li&gt; &#xA;   &lt;li&gt;It connects to the server using the TCP protocol&lt;/li&gt; &#xA;   &lt;li&gt;The browser sends an HTTP request to the server&lt;/li&gt; &#xA;   &lt;li&gt;The server sends an HTTP response back to the browser&lt;/li&gt; &#xA;   &lt;li&gt;The browser renders the response (e.g. HTML)&lt;/li&gt; &#xA;   &lt;li&gt;The browser then sends subsequent requests as needed to the server to get the embedded links, javascript, images in the HTML and then steps 3 to 5 are repeated.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;TODO: add more details! &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;API&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is an API&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;I like this definition from &lt;a href=&#34;https://blog.christianposta.com/microservices/api-gateways-are-going-through-an-identity-crisis&#34;&gt;blog.christianposta.com&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An explicitly and purposefully defined interface designed to be invoked over a network that enables software developers to get programmatic access to data and functionality within an organization in a controlled and comfortable way.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an API specification?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From &lt;a href=&#34;https://swagger.io/resources/articles/difference-between-api-documentation-specification&#34;&gt;swagger.io&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An API specification provides a broad understanding of how an API behaves and how the API links with other APIs. It explains how the API functions and the results to expect when using the API&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? API Definition is the same as API Specification&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;False. From &lt;a href=&#34;https://swagger.io/resources/articles/difference-between-api-documentation-specification&#34;&gt;swagger.io&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An API definition is similar to an API specification in that it provides an understanding of how an API is organized and how the API functions. But the API definition is aimed at machine consumption instead of human consumption of APIs.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Payload in API?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Automation? How it&#39;s related or different from Orchestration?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Automation is the act of automating tasks to reduce human intervention or interaction in regards to IT technology and systems.&lt;br&gt; While automation focuses on a task level, Orchestration is the process of automating processes and/or workflows which consists of multiple tasks that usually across multiple systems. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me about interesting bugs you&#39;ve found and also fixed&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Debuggger and how it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What services an application might have?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Authorization&lt;/li&gt; &lt;li&gt;Logging&lt;/li&gt; &lt;li&gt;Authentication&lt;/li&gt; &lt;li&gt;Ordering&lt;/li&gt; &lt;li&gt;Front-end&lt;/li&gt; &lt;li&gt;Back-end ... &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Metadata?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Data about data. Basically, it describes the type of information that an underlying data will hold. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You can use one of the following formats: JSON, YAML, XML. Which one would you use? Why?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;I can&#39;t answer this for you :) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s KPI?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s OKR?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s DSL (Domain Specific Language)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Domain Specific Language (DSLs) are used to create a customised language that represents the domain such that domain experts can easily interpret it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s the difference between KPI and OKR?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;YAML&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is YAML?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Data serialization language used by many technologies today like Kubernetes, Ansible, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Any valid JSON file is also a valid YAML file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. Because YAML is superset of JSON. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the format of the following data? &lt;pre&gt;&lt;code&gt;{&#xA;    applications: [&#xA;        {&#xA;            name: &#34;my_app&#34;,&#xA;            language: &#34;python&#34;,&#xA;            version: 20.17&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; JSON &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the format of the following data? &lt;pre&gt;&lt;code&gt;applications:&#xA;  - app: &#34;my_app&#34;&#xA;    language: &#34;python&#34;&#xA;    version: 20.17&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; YAML &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to write a multi-line string with YAML? What use cases is it good for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;someMultiLineString: |&#xA;  look mama&#xA;  I can write a multi-line string&#xA;  I love YAML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It&#39;s good for use cases like writing a shell script where each line of the script is a different command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between &lt;code&gt;someMultiLineString: |&lt;/code&gt; to &lt;code&gt;someMultiLineString: &amp;gt;&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;using &lt;code&gt;&amp;gt;&lt;/code&gt; will make the multi-line string to fold into a single line&lt;/p&gt; &lt;pre&gt;&lt;code&gt;someMultiLineString: &amp;gt;&#xA;  This is actually&#xA;  a single line&#xA;  do not let appearances fool you&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are placeholders in YAML?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;They allow you reference values instead of directly writing them and it is used like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;username: {{ my.user_name }}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you define multiple YAML components in one file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Using this: &lt;code&gt;---&lt;/code&gt; For Examples:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;document_number: 1&#xA;---&#xA;document_number: 2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Firmware&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a firmware&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Firmware&#34;&gt;Wikipedia&lt;/a&gt;: &#34;In computing, firmware is a specific class of computer software that provides the low-level control for a device&#39;s specific hardware. Firmware, such as the BIOS of a personal computer, may contain basic functions of a device, and may provide hardware abstraction services to higher-level software such as operating systems.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Customers and Service Providers&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SLO (service-level objective)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SLA (service-level agreement)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Jira&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain/Demonstrate the following types in Jira: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Epic&lt;/li&gt; &#xA;   &lt;li&gt;Story&lt;/li&gt; &#xA;   &lt;li&gt;Task&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a project in Jira?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Kafka&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Kafka?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In Kafka, how to automatically balance brokers leadership of partitions in a cluster? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Enable auto leader election and reduce the imbalance percentage ratio&lt;/li&gt; &#xA;   &lt;li&gt;Manually rebalance by using kafkat&lt;/li&gt; &#xA;   &lt;li&gt;Configure group.initial.rebalance.delay.ms to 3000&lt;/li&gt; &#xA;   &lt;li&gt;All of the above&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Cassandra&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When running a cassandra cluster, how often do you need to run nodetool repair in order to keep the cluster consistent? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Within the columnFamily GC-grace Once a week&lt;/li&gt; &#xA;   &lt;li&gt;Less than the compacted partition minimum bytes&lt;/li&gt; &#xA;   &lt;li&gt;Depended on the compaction strategy&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;HTTP&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HTTP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe HTTP request lifecycle&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Resolve host by request to DNS resolver&lt;/li&gt; &lt;li&gt;Client SYN&lt;/li&gt; &lt;li&gt;Server SYN+ACK&lt;/li&gt; &lt;li&gt;Client SYN&lt;/li&gt; &lt;li&gt;HTTP request&lt;/li&gt; &lt;li&gt;HTTP response &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? HTTP is stateful&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. It doesn&#39;t maintain state for incoming request. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How HTTP request looks like?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It consists of:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Request line - request type&lt;/li&gt; &lt;li&gt;Headers - content info like length, enconding, etc.&lt;/li&gt; &lt;li&gt;Body (not always included) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What HTTP method types are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;GET&lt;/li&gt; &lt;li&gt;POST&lt;/li&gt; &lt;li&gt;HEAD&lt;/li&gt; &lt;li&gt;PUT&lt;/li&gt; &lt;li&gt;DELETE&lt;/li&gt; &lt;li&gt;CONNECT&lt;/li&gt; &lt;li&gt;OPTIONS&lt;/li&gt; &lt;li&gt;TRACE &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What HTTP response codes are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;1xx - informational&lt;/li&gt; &lt;li&gt;2xx - Success&lt;/li&gt; &lt;li&gt;3xx - Redirect&lt;/li&gt; &lt;li&gt;4xx - Error, client fault&lt;/li&gt; &lt;li&gt;5xx - Error, server fault &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HTTPS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain HTTP Cookies&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;HTTP is stateless. To share state, we can use Cookies.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;TODO: explain what is actually a Cookie &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HTTP Pipelining?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You get &#34;504 Gateway Timeout&#34; error from an HTTP server. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The server didn&#39;t receive a response from another server it communicates with in a timely manner. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a proxy?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a reverse proxy?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is CDN?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When you publish a project, you usually publish it with a license. What types of licenses are you familiar with and which one do you prefer to use?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is &#34;X-Forwarded-For&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/X-Forwarded-For&#34;&gt;Wikipedia&lt;/a&gt;: &#34;The X-Forwarded-For (XFF) HTTP header field is a common method for identifying the originating IP address of a client connecting to a web server through an HTTP proxy or load balancer.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Load Balancers&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a load balancer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A load balancer accepts (or denies) incoming network traffic from a client, and based on some criteria (application related, network, etc.) it distributes those communications out to servers (at least one). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why to used a load balancer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Scalability - using a load balancer, you can possibly add more servers in the backend to handle more requests/traffic from the clients, as opposed to using one server.&lt;/li&gt; &lt;li&gt;Redundancy - if one server in the backend dies, the load balancer will keep forwarding the traffic/requests to the second server so users won&#39;t even notice one of the servers in the backend is down. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What load balancer techniques/algorithms are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Round Robin&lt;/li&gt; &lt;li&gt;Weighted Round Robin&lt;/li&gt; &lt;li&gt;Least Connection&lt;/li&gt; &lt;li&gt;Weighted Least Connection&lt;/li&gt; &lt;li&gt;Resource Based&lt;/li&gt; &lt;li&gt;Fixed Weighting&lt;/li&gt; &lt;li&gt;Weighted Response Time&lt;/li&gt; &lt;li&gt;Source IP Hash&lt;/li&gt; &lt;li&gt;URL Hash &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the drawbacks of round robin algorithm in load balancing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A simple round robin algorithm knows nothing about the load and the spec of each server it forwards the requests to. It is possible, that multiple heavy workloads requests will get to the same server while other servers will got only lightweight requests which will result in one server doing most of the work, maybe even crashing at some point because it unable to handle all the heavy workloads requests by its own.&lt;/li&gt; &lt;li&gt;Each request from the client creates a whole new session. This might be a problem for certain scenarios where you would like to perform multiple operations where the server has to know about the result of operation so basically, being sort of aware of the history it has with the client. In round robin, first request might hit server X, while second request might hit server Y and ask to continue processing the data that was processed on server X already. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Application Load Balancer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In which scenarios would you use ALB?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;At what layers a load balancer can operate?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;L4 and L7 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you perform load balancing without using a dedicated load balancer instance?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Yes, you can use DNS for performing load balancing. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DNS load balancing? What its advantages? When would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Load Balancers - Sticky Sessions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are sticky sessions? What are their pros and cons?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Recommended read:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://access.redhat.com/solutions/900933&#34;&gt;Red Hat Article&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Cons:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Can cause uneven load on instance (since requests routed to the same instances) Pros:&lt;/li&gt; &lt;li&gt;Ensures in-proc sessions are not lost when a new request is created &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Name one use case for using sticky sessions&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You would like to make sure the user doesn&#39;t lose the current session data. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What sticky sessions use for enabling the &#34;stickiness&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Cookies. There are application based cookies and duration based cookies. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain application-based cookies&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Generated by the application and/or the load balancer&lt;/li&gt; &lt;li&gt;Usually allows to include custom data &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain duration-based cookies&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Generated by the load balancer&lt;/li&gt; &lt;li&gt;Session is not sticky anymore once the duration elapsed &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Load Balancers - Load Balancing Algorithms&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain each of the following load balancing techniques &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Round Robin&lt;/li&gt; &#xA;   &lt;li&gt;Weighted Round Robin&lt;/li&gt; &#xA;   &lt;li&gt;Least Connection&lt;/li&gt; &#xA;   &lt;li&gt;Weighted Least Connection&lt;/li&gt; &#xA;   &lt;li&gt;Resource Based&lt;/li&gt; &#xA;   &lt;li&gt;Fixed Weighting&lt;/li&gt; &#xA;   &lt;li&gt;Weighted Response Time&lt;/li&gt; &#xA;   &lt;li&gt;Source IP Hash&lt;/li&gt; &#xA;   &lt;li&gt;URL Hash&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain use case for connection draining?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; To ensure that a Classic Load Balancer stops sending requests to instances that are de-registering or unhealthy, while keeping the existing connections open, use connection draining. This enables the load balancer to complete in-flight requests made to instances that are de-registering or unhealthy. &lt;p&gt;The maximum timeout value can be set between 1 and 3,600 seconds on both GCP and AWS.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Licenses&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are you familiar with &#34;Creative Commons&#34;? What do you know about it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the differences between copyleft and permissive licenses&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In Copyleft, any derivative work must use the same licensing while in permissive licensing there are no such condition. GPL-3 is an example of copyleft license while BSD is an example of permissive license. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Random&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a search engine works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How auto completion works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is faster than RAM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;CPU cache. &lt;a href=&#34;https://www.enterprisestorageforum.com/hardware/cache-memory/&#34;&gt;Source&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a memory leak?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is your favorite protocol?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;SSH HTTP DHCP DNS ... &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cache API?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the C10K problem? Is it relevant today?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://idiallo.com/blog/c10k-2016&#34;&gt;https://idiallo.com/blog/c10k-2016&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Storage&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of storage formats are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;File&lt;/li&gt; &lt;li&gt;Block&lt;/li&gt; &lt;li&gt;Object &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of storage devices are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain IOPS&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain storage throughput&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a filesystem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Dark Data&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Questions you CAN ask&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;questions-you-ask&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A list of questions you as a candidate can ask the interviewer during or after the interview. These are only a suggestion, use them carefully. Not every interviewer will be able to answer these (or happy to) which should be perhaps a red flag warning for your regarding working in such place but that&#39;s really up to you.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you like about working here?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does the company promote personal growth?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the current level of technical debt you are dealing with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Be careful when asking this question - all companies, regardless of size, have some level of tech debt. Phrase the question in the light that all companies have the deal with this, but you want to see the current pain points they are dealing with &lt;br&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a great way to figure how managers deal with unplanned work, and how good they are at setting expectations with projects. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why I should NOT join you? (or &#39;what you don&#39;t like about working here?&#39;)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What was your favorite project you&#39;ve worked on?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This can give you insights in some of the cool projects a company is working on, and if you would enjoy working on projects like these. This is also a good way to see if the managers are allowing employees to learn and grow with projects outside of the normal work you&#39;d do. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If you could change one thing about your day to day, what would it be?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Similar to the tech debt question, this helps you identify any pain points with the company. Additionally, it can be a great way to show how you&#39;d be an asset to the team.&lt;br&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;For Example, if they mention they have problem X, and you&#39;ve solved that in the past, you can show how you&#39;d be able to mitigate that problem. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Let&#39;s say that we agree and you hire me to this position, after X months, what do you expect that I have achieved?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not only this will tell you what is expected from you, it will also provide big hint on the type of work you are going to do in the first months of your job. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain white-box testing&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain black-box testing&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are unit tests?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of tests would you run to test a web application?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain test harness?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is A/B testing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is network simulation and how do you perform it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of performances tests are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following types of tests: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Load Testing&lt;/li&gt; &#xA;   &lt;li&gt;Stress Testing&lt;/li&gt; &#xA;   &lt;li&gt;Capacity Testing&lt;/li&gt; &#xA;   &lt;li&gt;Volume Testing&lt;/li&gt; &#xA;   &lt;li&gt;Endurance Testing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Databases&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Message Board Tables&lt;/td&gt; &#xA;   &lt;td&gt;Relational DB Tables&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/databases/table_for_message_board_system.md&#34;&gt;Exercise&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/databases/solutions/table_for_message_board_system.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a relational database?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Data Storage: system to store data in tables&lt;/li&gt; &lt;li&gt;SQL: programming language to manage relational databases&lt;/li&gt; &lt;li&gt;Data Definition Language: a standard syntax to create, alter and delete tables &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What does it mean when a database is ACID compliant?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;ACID stands for Atomicity, Consistency, Isolation, Durability. In order to be ACID compliant, the database must meet each of the four criteria&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Atomicity&lt;/strong&gt; - When a change occurs to the database, it should either succeed or fail as a whole.&lt;/p&gt; &#xA; &lt;p&gt;For example, if you were to update a table, the update should completely execute. If it only partially executes, the update is considered failed as a whole, and will not go through - the DB will revert back to it&#39;s original state before the update occurred. It should also be mentioned that Atomicity ensures that each transaction is completed as it&#39;s own stand alone &#34;unit&#34; - if any part fails, the whole statement fails.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Consistency&lt;/strong&gt; - any change made to the database should bring it from one valid state into the next.&lt;/p&gt; &#xA; &lt;p&gt;For example, if you make a change to the DB, it shouldn&#39;t corrupt it. Consistency is upheld by checks and constraints that are pre-defined in the DB. For example, if you tried to change a value from a string to an int when the column should be of datatype string, a consistent DB would not allow this transaction to go through, and the action would not be executed&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Isolation&lt;/strong&gt; - this ensures that a database will never be seen &#34;mid-update&#34; - as multiple transactions are running at the same time, it should still leave the DB in the same state as if the transactions were being run sequentially.&lt;/p&gt; &#xA; &lt;p&gt;For example, let&#39;s say that 20 other people were making changes to the database at the same time. At the time you executed your query, 15 of the 20 changes had gone through, but 5 were still in progress. You should only see the 15 changes that had completed - you wouldn&#39;t see the database mid-update as the change goes through.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Durability&lt;/strong&gt; - Once a change is committed, it will remain committed regardless of what happens (power failure, system crash, etc.). This means that all completed transactions must be recorded in non-volatile memory.&lt;/p&gt; &#xA; &lt;p&gt;Note that SQL is by nature ACID compliant. Certain NoSQL DB&#39;s can be ACID compliant depending on how they operate, but as a general rule of thumb, NoSQL DB&#39;s are not considered ACID compliant&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is sharding?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Sharding is a horizontal partitioning.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Are you able to explain what is it good for? &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You find out your database became a bottleneck and users experience issues accessing data. How can you deal with such situation?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not much information provided as to why it became a bottleneck and what is current architecture, so one general approach could be&lt;br&gt; to reduce the load on your database by moving frequently-accessed data to in-memory structure. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a connection pool?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Connection Pool is a cache of database connections and the reason it&#39;s used is to avoid an overhead of establishing a connection for every query done to a database. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a connection leak?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A connection leak is a situation where database connection isn&#39;t closed after being created and is no longer needed. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Table Lock?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Your database performs slowly than usual. More specifically, your queries are taking a lot of time. What would you do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Query for running queries and cancel the irrelevant queries&lt;/li&gt; &lt;li&gt;Check for connection leaks (query for running connections and include their IP)&lt;/li&gt; &lt;li&gt;Check for table locks and kill irrelevant locking sessions &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Data Warehouse?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;A data warehouse is a subject-oriented, integrated, time-variant and non-volatile collection of data in support of organisation&#39;s decision-making process&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a time-series database&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is OLTP (Online transaction processing)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is OLAP (Online Analytical Processing)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an index in a database?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A database index is a data structure that improves the speed of operations in a table. Indexes can be created using one or more columns, providing the basis for both rapid random lookups and efficient ordering of access to records. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What data types are there in relational databases?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Normalization&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Data that is used multiple times in a database should be stored once and referenced with a foreign key.&lt;br&gt; This has the clear benefit of ease of maintenance where you need to change a value only in a single place to change it everywhere. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Primary Key and Foreign Key&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Primary Key: each row in every table should a unique identifier that represents the row.&lt;br&gt; Foreign Key: a reference to another table&#39;s primary key. This allows you to join table together to retrieve all the information you need without duplicating data. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of data tables have you used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Primary data table: main data you care about&lt;/li&gt; &lt;li&gt;Details table: includes a foreign key and has one to many relationship&lt;/li&gt; &lt;li&gt;Lookup values table: can be one table per lookup or a table containing all the lookups and has one to many relationship&lt;/li&gt; &lt;li&gt;Multi reference table &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ORM? What benefits it provides in regards to relational databases usage?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping&#34;&gt;Wikipedia&lt;/a&gt;: &#34;is a programming technique for converting data between incompatible type systems using object-oriented programming languages&#34;&lt;/p&gt; &lt;p&gt;In regards to the relational databases:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Database as code&lt;/li&gt; &lt;li&gt;Database abstraction&lt;/li&gt; &lt;li&gt;Encapsulates SQL complexity&lt;/li&gt; &lt;li&gt;Enables code review process&lt;/li&gt; &lt;li&gt;Enables usage as a native OOP structure &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DDL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_definition_language&#34;&gt;Wikipedia&lt;/a&gt;: &#34;In the context of SQL, data definition or data description language (DDL) is a syntax for creating and modifying database objects such as tables, indices, and users.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Regex&lt;/h2&gt; &#xA;&lt;p&gt;Given a text file, perform the following exercises&lt;/p&gt; &#xA;&lt;h4&gt;Extract&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract all the numbers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract the first word of each line&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bonus: extract the last word of each line &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract all the IP addresses&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract dates in the format of yyyy-mm-dd or yyyy-dd-mm&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract email addresses&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Replace&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Replace tabs with four spaces&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Replace &#39;red&#39; with &#39;green&#39;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;System Design&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a &#34;Single point of failure&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;3-Tier Architecture&#34; (including pros and cons)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the drawbacks of monolithic architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Not suitable for frequent code changes and the ability to deploy new features&lt;/li&gt; &lt;li&gt;Not designed for today&#39;s infrastructure (like public clouds)&lt;/li&gt; &lt;li&gt;Scaling a team to work monolithic architecture is more challenging &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages of microoservices architecture over a monolithic architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Each of the services individually fail without escalating into an application-wide outage.&lt;/li&gt; &lt;li&gt;Each service can be developed and maintained by a separate team and this team can choose its own tools and coding language &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s a service mesh?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://www.redhat.com/en/topics/microservices/what-is-a-service-mesh&#34;&gt;This article&lt;/a&gt; provides a great explanation. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;Loose Coupling&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a message queue? When is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Scalability&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Scalability&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The ability easily grow in size and capacity based on demand and usage. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Elasticity&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The ability to grow but also to reduce based on what is required &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Disaster Recovery&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Fault Tolerance and High Availability&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Fault Tolerance - The ability to self-heal and return to normal capacity. Also the ability to withstand a failure and remain functional.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;High Availability - Being able to access a resource (in some use cases, using different platforms) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between high availability and Disaster Recovery?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://www.wintellect.com/high-availability-vs-disaster-recovery&#34;&gt;wintellect.com&lt;/a&gt;: &#34;High availability, simply put, is eliminating single points of failure and disaster recovery is the process of getting a system back to an operational state when a system is rendered inoperative. In essence, disaster recovery picks up when high availability fails, so HA first.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Vertical Scaling&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Vertical Scaling is the process of adding resources to increase power of existing servers. For example, adding more CPUs, adding more RAM, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the disadvantages of Vertical Scaling?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;With vertical scaling alone, the component still remains a single point of failure. In addition, it has hardware limit where if you don&#39;t have more resources, you might not be able to scale vertically. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which type of cloud services usually support vertical scaling?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Databases, cache. It&#39;s common mostly for non-distributed systems. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Horizontal Scaling&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Horizontal Scaling is the process of adding more resources that will be able handle requests as one unit &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the disadvantage of Horizontal Scaling? What is often required in order to perform Horizontal Scaling?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A load balancer. You can add more resources, but if you would like them to be part of the process, you have to serve them the requests/responses. Also, data inconsistency is a concern with horizontal scaling. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain in which use cases will you use vertical scaling and in which use cases you will use horizontal scaling&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Resiliency and what ways are there to make a system more resilient&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;Consistent Hashing&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you update each of the services in the following drawing without having app (foo.com) downtime?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/cdn-no-downtime.png&#34; width=&#34;300x;&#34; height=&#34;400px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the problem with the following architecture and how would you fix it?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/producers_consumers_issue.png&#34; width=&#34;400x;&#34; height=&#34;300px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The load on the producers or consumers may be high which will then cause them to hang or crash.&lt;br&gt; Instead of working in &#34;push mode&#34;, the consumers can pull tasks only when they are ready to handle them. It can be fixed by using a streaming platform like Kafka, Kinesis, etc. This platform will make sure to handle the high load/traffic and pass tasks/messages to consumers only when the ready to get them.&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/producers_consumers_fix.png&#34; width=&#34;300x;&#34; height=&#34;200px;&#34;&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Users report that there is huge spike in process time when adding little bit more data to process as an input. What might be the problem?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/input-process-output.png&#34; width=&#34;300x;&#34; height=&#34;200px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you scale the architecture from the previous question to hundreds of users?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Cache&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;cache&#34;? In which cases would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;distributed cache&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a &#34;cache replacement policy&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Take a look &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_replacement_policies&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which cache replacement policies are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can find a list &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_replacement_policies&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following cache policies: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;FIFO&lt;/li&gt; &#xA;   &lt;li&gt;LIFO&lt;/li&gt; &#xA;   &lt;li&gt;LRU&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read about it &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_replacement_policies&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why not writing everything to cache instead of a database/datastore?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Migrations&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How you prepare for a migration? (or plan a migration)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can mention:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;roll-back &amp;amp; roll-forward cut over dress rehearsals DNS redirection &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;Branch by Abstraction&#34; technique&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Design a system&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you design a video streaming website?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you design a photo upload website?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you build a URL shortener?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;More System Design Questions&lt;/h4&gt; &#xA;&lt;p&gt;Additional exercises can be found in &lt;a href=&#34;https://github.com/bregman-arie/system-design-notebook&#34;&gt;system-design-notebook repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/system-design-notebook&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/system_design_notebook.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Hardware&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a CPU?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A central processing unit (CPU) performs basic arithmetic, logic, controlling, and input/output (I/O) operations specified by the instructions in the program. This contrasts with external components such as main memory and I/O circuitry, and specialized processors such as graphics processing units (GPUs). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is RAM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;RAM (Random Access Memory) is the hardware in a computing device where the operating system (OS), application programs and data in current use are kept so they can be quickly reached by the device&#39;s processor. RAM is the main memory in a computer. It is much faster to read from and write to than other kinds of storage, such as a hard disk drive (HDD), solid-state drive (SSD) or optical drive. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an embedded system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An embedded system is a computer system - a combination of a computer processor, computer memory, and input/output peripheral devices—that has a dedicated function within a larger mechanical or electronic system. It is embedded as part of a complete device often including electrical or electronic hardware and mechanical parts. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you give an example of an embedded system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Raspberry Pi &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of storage are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Big Data&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is exactly Big Data&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;As defined by Doug Laney:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Volume: Extremely large volumes of data&lt;/li&gt; &lt;li&gt;Velocity: Real time, batch, streams of data&lt;/li&gt; &lt;li&gt;Variety: Various forms of data, structured, semi-structured and unstructured&lt;/li&gt; &lt;li&gt;Veracity or Variability: Inconsistent, sometimes inaccurate, varying data &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DataOps? How is it related to DevOps?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;DataOps seeks to reduce the end-to-end cycle time of data analytics, from the origin of ideas to the literal creation of charts, graphs and models that create value. DataOps combines Agile development, DevOps and statistical process controls and applies them to data analytics. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Data Architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;An answer from &lt;a href=&#34;https://www.talend.com/resources/what-is-data-architecture&#34;&gt;talend.com&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Data architecture is the process of standardizing how organizations collect, store, transform, distribute, and use data. The goal is to deliver relevant data to people who need it, when they need it, and help them make sense of it.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the different formats of data&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Structured - data that has defined format and length (e.g. numbers, words)&lt;/li&gt; &lt;li&gt;Semi-structured - Doesn&#39;t conform to a specific format but is self-describing (e.g. XML, SWIFT)&lt;/li&gt; &lt;li&gt;Unstructured - does not follow a specific format (e.g. images, test messages) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Data Warehouse?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_warehouse&#34;&gt;Wikipedia&#39;s explanation on Data Warehouse&lt;/a&gt; &lt;a href=&#34;https://aws.amazon.com/data-warehouse&#34;&gt;Amazon&#39;s explanation on Data Warehouse&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Data Lake?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_lake&#34;&gt;Data Lake - Wikipedia&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain the difference between a data lake and a data warehouse?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;Data Versioning&#34;? What models of &#34;Data Versioning&#34; are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ETL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Apache Hadoop&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Hadoop&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Apache_Hadoop&#34;&gt;Apache Hadoop - Wikipedia&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Hadoop YARN&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Responsible for managing the compute resources in clusters and scheduling users&#39; applications &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Hadoop MapReduce&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A programming model for large-scale data processing &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Hadoop Distributed File Systems (HDFS)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Distributed file system providing high aggregate bandwidth across the cluster.&lt;/li&gt; &lt;li&gt;For a user it looks like a regular file system structure but behind the scenes it&#39;s distributed across multiple machines in a cluster&lt;/li&gt; &lt;li&gt;Typical file size is TB and it can scale and supports millions of files&lt;/li&gt; &lt;li&gt;It&#39;s fault tolerant which means it provides automatic recovery from faults&lt;/li&gt; &lt;li&gt;It&#39;s best suited for running long batch operations rather than live analysis &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you know about HDFS architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;http://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html&#34;&gt;HDFS Architecture&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Master-slave architecture&lt;/li&gt; &lt;li&gt;Namenode - master, Datanodes - slaves&lt;/li&gt; &lt;li&gt;Files split into blocks&lt;/li&gt; &lt;li&gt;Blocks stored on datanodes&lt;/li&gt; &lt;li&gt;Namenode controls all metadata &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;Ceph&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Ceph&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Ceph favor consistency and correctness over performances&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; True &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which services or types of storage Ceph supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Object (RGW)&lt;/li&gt; &lt;li&gt;Block (RBD)&lt;/li&gt; &lt;li&gt;File (CephFS) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is RADOS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Reliable Autonomic Distributed Object Storage&lt;/li&gt; &lt;li&gt;Provides low-level data object storage service&lt;/li&gt; &lt;li&gt;Strong Consistency&lt;/li&gt; &lt;li&gt;Simplifies design and implementation of higher layers (block, file, object) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe RADOS software components&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Monitor &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Central authority for authentication, data placement, policy&lt;/li&gt; &#xA;     &lt;li&gt;Coordination point for all other cluster components&lt;/li&gt; &#xA;     &lt;li&gt;Protect critical cluster state with Paxos&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Manager &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Aggregates real-time metrics (throughput, disk usage, etc.)&lt;/li&gt; &#xA;     &lt;li&gt;Host for pluggable management functions&lt;/li&gt; &#xA;     &lt;li&gt;1 active, 1+ standby per cluster&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;OSD (Object Storage Daemon) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Stores data on an HDD or SSD&lt;/li&gt; &#xA;     &lt;li&gt;Services client IO requests &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the workflow of retrieving data from Ceph?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the workflow of retrieving data from Ceph?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are &#34;Placement Groups&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe in the detail the following: Objects -&amp;gt; Pool -&amp;gt; Placement Groups -&amp;gt; OSDs&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is OMAP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a metadata server? How it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Packer&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Packer? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In general, Packer automates machine images creation. It allows you to focus on configuration prior to deployment while making the images. This allows you start the instances much faster in most cases. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Packer follows a &#34;configuration-&amp;gt;deployment&#34; model or &#34;deployment-&amp;gt;configuration&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A configuration-&amp;gt;deployment which has some advantages like:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Deployment Speed - you configure once prior to deployment instead of configuring every time you deploy. This allows you to start instances/services much quicker.&lt;/li&gt; &lt;li&gt;More immutable infrastructure - with configuration-&amp;gt;deployment it&#39;s not likely to have very different deployments since most of the configuration is done prior to the deployment. Issues like dependencies errors are handled/discovered prior to deployment in this model. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;Certificates&lt;/h2&gt; &#xA;&lt;p&gt;If you are looking for a way to prepare for a certain exam this is the section for you. Here you&#39;ll find a list of certificates, each references to a separate file with focused questions that will help you to prepare to the exam. Good luck :)&lt;/p&gt; &#xA;&lt;h4&gt;AWS&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/aws-cloud-practitioner.md&#34;&gt;Cloud Practitioner&lt;/a&gt; (Latest update: 2020)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/aws-solutions-architect-associate.md&#34;&gt;Solutions Architect Associate&lt;/a&gt; (Latest update: 2021)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Azure&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/azure-fundamentals-az-900.md&#34;&gt;AZ-900&lt;/a&gt; (Latest update: 2021)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Kubernetes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/cka.md&#34;&gt;Certified Kubernetes Administrator (CKA)&lt;/a&gt; (Latest update: 2020)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other DevOps Projects&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/howtheydevops&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/how_they_devops.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/devops-resources&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/devops_resources.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/infraverse&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/infraverse.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all of our amazing &lt;a href=&#34;https://github.com/bregman-arie/devops-exercises/graphs/contributors&#34;&gt;contributors&lt;/a&gt; who make it easy for everyone to learn new things :)&lt;/p&gt; &#xA;&lt;p&gt;Logos credits can be found &lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/credits.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/3.0/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-CC%20BY--NC--ND%203.0-lightgrey.svg?sanitize=true&#34; alt=&#34;License: CC BY-NC-ND 3.0&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>redis/redis-py</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/redis/redis-py</id>
    <link href="https://github.com/redis/redis-py" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Redis Python Client&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;redis-py&lt;/h1&gt; &#xA;&lt;p&gt;The Python interface to the Redis key-value store.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/redis/redis-py/actions?query=workflow%3ACI+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/redis/redis-py/workflows/CI/badge.svg?branch=master&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://redis-py.readthedocs.io/en/stable/&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/redis/badge/?version=stable&amp;amp;style=flat&#34; alt=&#34;docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/redis/redis-py/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;MIT licensed&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/redis/&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/redis.svg?sanitize=true&#34; alt=&#34;pypi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/redis/redis-py&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/redis/redis-py/branch/master/graph/badge.svg?token=yenl5fzxxr&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/redis/redis-py/alerts/&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/alerts/g/redis/redis-py.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Total alerts&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/redis/redis-py/master/#installation&#34;&gt;Installation&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/redis/redis-py/master/#contributing&#34;&gt;Contributing&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/redis/redis-py/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/redis/redis-py/master/#connecting-to-redis&#34;&gt;Connecting To Redis&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Python Notice&lt;/h2&gt; &#xA;&lt;p&gt;redis-py 4.2.x will be the last generation of redis-py to support python 3.6 as it has been &lt;a href=&#34;https://www.python.org/dev/peps/pep-0494/#schedule-last-security-only-release&#34;&gt;End of Life&#39;d&lt;/a&gt;. Async support was introduced in redis-py 4.2.x thanks to &lt;a href=&#34;https://github.com/aio-libs/aioredis-py&#34;&gt;aioredis&lt;/a&gt;, which necessitates this change. We will continue to maintain 3.6 support as long as possible - but the plan is for redis-py version 5+ to offically remove 3.6.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;redis-py requires a running Redis server. See &lt;a href=&#34;https://redis.io/topics/quickstart&#34;&gt;Redis&#39;s quickstart&lt;/a&gt; for installation instructions.&lt;/p&gt; &#xA;&lt;p&gt;redis-py can be installed using pip similar to other Python packages. Do not use sudo with pip. It is usually good to work in a &lt;a href=&#34;https://virtualenv.pypa.io/en/latest/&#34;&gt;virtualenv&lt;/a&gt; or &lt;a href=&#34;https://docs.python.org/3/library/venv.html&#34;&gt;venv&lt;/a&gt; to avoid conflicts with other package managers and Python projects. For a quick introduction see &lt;a href=&#34;https://bit.ly/py-env&#34;&gt;Python Virtual Environments in Five Minutes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To install redis-py, simply:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pip install redis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or from source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ python setup.py install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View the current documentation &lt;a href=&#34;https://readthedocs.org/projects/redis/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Want to contribute a feature, bug fix, or report an issue? Check out our &lt;a href=&#34;https://github.com/redis/redis-py/raw/master/CONTRIBUTING.md&#34;&gt;guide to contributing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;redis-py supports Python 3.7+.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; import redis&#xA;&amp;gt;&amp;gt;&amp;gt; r = redis.Redis(host=&#39;localhost&#39;, port=6379, db=0)&#xA;&amp;gt;&amp;gt;&amp;gt; r.set(&#39;foo&#39;, &#39;bar&#39;)&#xA;True&#xA;&amp;gt;&amp;gt;&amp;gt; r.get(&#39;foo&#39;)&#xA;b&#39;bar&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, all responses are returned as bytes in Python 3.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;strong&gt;all&lt;/strong&gt; string responses from a client should be decoded, the user can specify &lt;em&gt;decode_responses=True&lt;/em&gt; in &lt;code&gt;Redis.__init__&lt;/code&gt;. In this case, any Redis command that returns a string type will be decoded with the encoding specified.&lt;/p&gt; &#xA;&lt;p&gt;The default encoding is utf-8, but this can be customized by specifiying the encoding argument for the redis.Redis class. The encoding will be used to automatically encode any strings passed to commands, such as key names and values.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;MSET, MSETNX and ZADD&lt;/h3&gt; &#xA;&lt;p&gt;These commands all accept a mapping of key/value pairs. In redis-py 2.X this mapping could be specified as *&lt;em&gt;args&lt;/em&gt; or as &lt;code&gt;**kwargs&lt;/code&gt;. Both of these styles caused issues when Redis introduced optional flags to ZADD. Relying on &lt;code&gt;*args&lt;/code&gt; caused issues with the optional argument order, especially in Python 2.7. Relying on &lt;code&gt;**kwargs&lt;/code&gt; caused potential collision issues of user keys with the argument names in the method signature.&lt;/p&gt; &#xA;&lt;p&gt;To resolve this, redis-py 3.0 has changed these three commands to all accept a single positional argument named mapping that is expected to be a dict. For MSET and MSETNX, the dict is a mapping of key-names -&amp;gt; values. For ZADD, the dict is a mapping of element-names -&amp;gt; score.&lt;/p&gt; &#xA;&lt;p&gt;MSET, MSETNX and ZADD now look like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;def mset(self, mapping):&#xA;def msetnx(self, mapping):&#xA;def zadd(self, name, mapping, nx=False, xx=False, ch=False, incr=False):&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All 2.X users that use these commands must modify their code to supply keys and values as a dict to these commands.&lt;/p&gt; &#xA;&lt;h3&gt;ZINCRBY&lt;/h3&gt; &#xA;&lt;p&gt;redis-py 2.X accidentally modified the argument order of ZINCRBY, swapping the order of value and amount. ZINCRBY now looks like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def zincrby(self, name, amount, value):&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All 2.X users that rely on ZINCRBY must swap the order of amount and value for the command to continue to work as intended.&lt;/p&gt; &#xA;&lt;h3&gt;Encoding of User Input&lt;/h3&gt; &#xA;&lt;p&gt;redis-py 3.0 only accepts user data as bytes, strings or numbers (ints, longs and floats). Attempting to specify a key or a value as any other type will raise a DataError exception.&lt;/p&gt; &#xA;&lt;p&gt;redis-py 2.X attempted to coerce any type of input into a string. While occasionally convenient, this caused all sorts of hidden errors when users passed boolean values (which were coerced to &#39;True&#39; or &#39;False&#39;), a None value (which was coerced to &#39;None&#39;) or other values, such as user defined types.&lt;/p&gt; &#xA;&lt;p&gt;All 2.X users should make sure that the keys and values they pass into redis-py are either bytes, strings or numbers.&lt;/p&gt; &#xA;&lt;h3&gt;Locks&lt;/h3&gt; &#xA;&lt;p&gt;redis-py 3.0 drops support for the pipeline-based Lock and now only supports the Lua-based lock. In doing so, LuaLock has been renamed to Lock. This also means that redis-py Lock objects require Redis server 2.6 or greater.&lt;/p&gt; &#xA;&lt;p&gt;2.X users that were explicitly referring to &lt;em&gt;LuaLock&lt;/em&gt; will have to now refer to &lt;em&gt;Lock&lt;/em&gt; instead.&lt;/p&gt; &#xA;&lt;h3&gt;Locks as Context Managers&lt;/h3&gt; &#xA;&lt;p&gt;redis-py 3.0 now raises a LockError when using a lock as a context manager and the lock cannot be acquired within the specified timeout. This is more of a bug fix than a backwards incompatible change. However, given an error is now raised where none was before, this might alarm some users.&lt;/p&gt; &#xA;&lt;p&gt;2.X users should make sure they&#39;re wrapping their lock code in a try/catch like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;try:&#xA;    with r.lock(&#39;my-lock-key&#39;, blocking_timeout=5) as lock:&#xA;        # code you want executed only after the lock has been acquired&#xA;except LockError:&#xA;    # the lock wasn&#39;t acquired&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;API Reference&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://redis.io/commands&#34;&gt;official Redis command documentation&lt;/a&gt; does a great job of explaining each command in detail. redis-py attempts to adhere to the official command syntax. There are a few exceptions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;SELECT&lt;/strong&gt;: Not implemented. See the explanation in the Thread Safety section below.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DEL&lt;/strong&gt;: &lt;em&gt;del&lt;/em&gt; is a reserved keyword in the Python syntax. Therefore redis-py uses &lt;em&gt;delete&lt;/em&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MULTI/EXEC&lt;/strong&gt;: These are implemented as part of the Pipeline class. The pipeline is wrapped with the MULTI and EXEC statements by default when it is executed, which can be disabled by specifying transaction=False. See more about Pipelines below.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SUBSCRIBE/LISTEN&lt;/strong&gt;: Similar to pipelines, PubSub is implemented as a separate class as it places the underlying connection in a state where it can&#39;t execute non-pubsub commands. Calling the pubsub method from the Redis client will return a PubSub instance where you can subscribe to channels and listen for messages. You can only call PUBLISH from the Redis client (see &lt;a href=&#34;https://github.com/redis/redis-py/issues/151#issuecomment-1545015&#34;&gt;this comment on issue #151&lt;/a&gt; for details).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SCAN/SSCAN/HSCAN/ZSCAN&lt;/strong&gt;: The *SCAN commands are implemented as they exist in the Redis documentation. In addition, each command has an equivalent iterator method. These are purely for convenience so the user doesn&#39;t have to keep track of the cursor while iterating. Use the scan_iter/sscan_iter/hscan_iter/zscan_iter methods for this behavior.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Connecting to Redis&lt;/h2&gt; &#xA;&lt;h3&gt;Client Classes: Redis and StrictRedis&lt;/h3&gt; &#xA;&lt;p&gt;redis-py 3.0 drops support for the legacy &lt;em&gt;Redis&lt;/em&gt; client class. &lt;em&gt;StrictRedis&lt;/em&gt; has been renamed to &lt;em&gt;Redis&lt;/em&gt; and an alias named &lt;em&gt;StrictRedis&lt;/em&gt; is provided so that users previously using &lt;em&gt;StrictRedis&lt;/em&gt; can continue to run unchanged.&lt;/p&gt; &#xA;&lt;p&gt;The 2.X &lt;em&gt;Redis&lt;/em&gt; class provided alternative implementations of a few commands. This confused users (rightfully so) and caused a number of support issues. To make things easier going forward, it was decided to drop support for these alternate implementations and instead focus on a single client class.&lt;/p&gt; &#xA;&lt;p&gt;2.X users that are already using StrictRedis don&#39;t have to change the class name. StrictRedis will continue to work for the foreseeable future.&lt;/p&gt; &#xA;&lt;p&gt;2.X users that are using the Redis class will have to make changes if they use any of the following commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SETEX: The argument order has changed. The new order is (name, time, value).&lt;/li&gt; &#xA; &lt;li&gt;LREM: The argument order has changed. The new order is (name, num, value).&lt;/li&gt; &#xA; &lt;li&gt;TTL and PTTL: The return value is now always an int and matches the official Redis command (&amp;gt;0 indicates the timeout, -1 indicates that the key exists but that it has no expire time set, -2 indicates that the key does not exist)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Connection Pools&lt;/h3&gt; &#xA;&lt;p&gt;Behind the scenes, redis-py uses a connection pool to manage connections to a Redis server. By default, each Redis instance you create will in turn create its own connection pool. You can override this behavior and use an existing connection pool by passing an already created connection pool instance to the connection_pool argument of the Redis class. You may choose to do this in order to implement client side sharding or have fine-grain control of how connections are managed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; pool = redis.ConnectionPool(host=&#39;localhost&#39;, port=6379, db=0)&#xA;&amp;gt;&amp;gt;&amp;gt; r = redis.Redis(connection_pool=pool)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Connections&lt;/h3&gt; &#xA;&lt;p&gt;ConnectionPools manage a set of Connection instances. redis-py ships with two types of Connections. The default, Connection, is a normal TCP socket based connection. The UnixDomainSocketConnection allows for clients running on the same device as the server to connect via a unix domain socket. To use a UnixDomainSocketConnection connection, simply pass the unix_socket_path argument, which is a string to the unix domain socket file. Additionally, make sure the unixsocket parameter is defined in your redis.conf file. It&#39;s commented out by default.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; r = redis.Redis(unix_socket_path=&#39;/tmp/redis.sock&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can create your own Connection subclasses as well. This may be useful if you want to control the socket behavior within an async framework. To instantiate a client class using your own connection, you need to create a connection pool, passing your class to the connection_class argument. Other keyword parameters you pass to the pool will be passed to the class specified during initialization.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; pool = redis.ConnectionPool(connection_class=YourConnectionClass,&#xA;                                your_arg=&#39;...&#39;, ...)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Connections maintain an open socket to the Redis server. Sometimes these sockets are interrupted or disconnected for a variety of reasons. For example, network appliances, load balancers and other services that sit between clients and servers are often configured to kill connections that remain idle for a given threshold.&lt;/p&gt; &#xA;&lt;p&gt;When a connection becomes disconnected, the next command issued on that connection will fail and redis-py will raise a ConnectionError to the caller. This allows each application that uses redis-py to handle errors in a way that&#39;s fitting for that specific application. However, constant error handling can be verbose and cumbersome, especially when socket disconnections happen frequently in many production environments.&lt;/p&gt; &#xA;&lt;p&gt;To combat this, redis-py can issue regular health checks to assess the liveliness of a connection just before issuing a command. Users can pass &lt;code&gt;health_check_interval=N&lt;/code&gt; to the Redis or ConnectionPool classes or as a query argument within a Redis URL. The value of &lt;code&gt;health_check_interval&lt;/code&gt; must be an integer. A value of &lt;code&gt;0&lt;/code&gt;, the default, disables health checks. Any positive integer will enable health checks. Health checks are performed just before a command is executed if the underlying connection has been idle for more than &lt;code&gt;health_check_interval&lt;/code&gt; seconds. For example, &lt;code&gt;health_check_interval=30&lt;/code&gt; will ensure that a health check is run on any connection that has been idle for 30 or more seconds just before a command is executed on that connection.&lt;/p&gt; &#xA;&lt;p&gt;If your application is running in an environment that disconnects idle connections after 30 seconds you should set the &lt;code&gt;health_check_interval&lt;/code&gt; option to a value less than 30.&lt;/p&gt; &#xA;&lt;p&gt;This option also works on any PubSub connection that is created from a client with &lt;code&gt;health_check_interval&lt;/code&gt; enabled. PubSub users need to ensure that &lt;em&gt;get_message()&lt;/em&gt; or &lt;code&gt;listen()&lt;/code&gt; are called more frequently than &lt;code&gt;health_check_interval&lt;/code&gt; seconds. It is assumed that most workloads already do this.&lt;/p&gt; &#xA;&lt;p&gt;If your PubSub use case doesn&#39;t call &lt;code&gt;get_message()&lt;/code&gt; or &lt;code&gt;listen()&lt;/code&gt; frequently, you should call &lt;code&gt;pubsub.check_health()&lt;/code&gt; explicitly on a regularly basis.&lt;/p&gt; &#xA;&lt;h3&gt;SSL Connections&lt;/h3&gt; &#xA;&lt;p&gt;redis-py 3.0 changes the default value of the ssl_cert_reqs option from None to &#39;required&#39;. See &lt;a href=&#34;https://github.com/redis/redis-py/issues/1016&#34;&gt;Issue 1016&lt;/a&gt;. This change enforces hostname validation when accepting a cert from a remote SSL terminator. If the terminator doesn&#39;t properly set the hostname on the cert this will cause redis-py 3.0 to raise a ConnectionError.&lt;/p&gt; &#xA;&lt;p&gt;This check can be disabled by setting ssl_cert_reqs to None. Note that doing so removes the security check. Do so at your own risk.&lt;/p&gt; &#xA;&lt;p&gt;Example with hostname verification using a local certificate bundle (linux):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; import redis&#xA;&amp;gt;&amp;gt;&amp;gt; r = redis.Redis(host=&#39;xxxxxx.cache.amazonaws.com&#39;, port=6379, db=0,&#xA;                    ssl=True,&#xA;                    ssl_ca_certs=&#39;/etc/ssl/certs/ca-certificates.crt&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; r.set(&#39;foo&#39;, &#39;bar&#39;)&#xA;True&#xA;&amp;gt;&amp;gt;&amp;gt; r.get(&#39;foo&#39;)&#xA;b&#39;bar&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example with hostname verification using &lt;a href=&#34;https://pypi.org/project/certifi/&#34;&gt;certifi&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; import redis, certifi&#xA;&amp;gt;&amp;gt;&amp;gt; r = redis.Redis(host=&#39;xxxxxx.cache.amazonaws.com&#39;, port=6379, db=0,&#xA;                    ssl=True, ssl_ca_certs=certifi.where())&#xA;&amp;gt;&amp;gt;&amp;gt; r.set(&#39;foo&#39;, &#39;bar&#39;)&#xA;True&#xA;&amp;gt;&amp;gt;&amp;gt; r.get(&#39;foo&#39;)&#xA;b&#39;bar&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example turning off hostname verification (not recommended):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; import redis&#xA;&amp;gt;&amp;gt;&amp;gt; r = redis.Redis(host=&#39;xxxxxx.cache.amazonaws.com&#39;, port=6379, db=0,&#xA;                    ssl=True, ssl_cert_reqs=None)&#xA;&amp;gt;&amp;gt;&amp;gt; r.set(&#39;foo&#39;, &#39;bar&#39;)&#xA;True&#xA;&amp;gt;&amp;gt;&amp;gt; r.get(&#39;foo&#39;)&#xA;b&#39;bar&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sentinel support&lt;/h3&gt; &#xA;&lt;p&gt;redis-py can be used together with &lt;a href=&#34;https://redis.io/topics/sentinel&#34;&gt;Redis Sentinel&lt;/a&gt; to discover Redis nodes. You need to have at least one Sentinel daemon running in order to use redis-py&#39;s Sentinel support.&lt;/p&gt; &#xA;&lt;p&gt;Connecting redis-py to the Sentinel instance(s) is easy. You can use a Sentinel connection to discover the master and slaves network addresses:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from redis import Sentinel&#xA;&amp;gt;&amp;gt;&amp;gt; sentinel = Sentinel([(&#39;localhost&#39;, 26379)], socket_timeout=0.1)&#xA;&amp;gt;&amp;gt;&amp;gt; sentinel.discover_master(&#39;mymaster&#39;)&#xA;(&#39;127.0.0.1&#39;, 6379)&#xA;&amp;gt;&amp;gt;&amp;gt; sentinel.discover_slaves(&#39;mymaster&#39;)&#xA;[(&#39;127.0.0.1&#39;, 6380)]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To connect to a sentinel which uses SSL (&lt;a href=&#34;https://raw.githubusercontent.com/redis/redis-py/master/#ssl-connections&#34;&gt;see SSL connections&lt;/a&gt; for more examples of SSL configurations):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from redis import Sentinel&#xA;&amp;gt;&amp;gt;&amp;gt; sentinel = Sentinel([(&#39;localhost&#39;, 26379)],&#xA;                        ssl=True,&#xA;                        ssl_ca_certs=&#39;/etc/ssl/certs/ca-certificates.crt&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; sentinel.discover_master(&#39;mymaster&#39;)&#xA;(&#39;127.0.0.1&#39;, 6379)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also create Redis client connections from a Sentinel instance. You can connect to either the master (for write operations) or a slave (for read-only operations).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; master = sentinel.master_for(&#39;mymaster&#39;, socket_timeout=0.1)&#xA;&amp;gt;&amp;gt;&amp;gt; slave = sentinel.slave_for(&#39;mymaster&#39;, socket_timeout=0.1)&#xA;&amp;gt;&amp;gt;&amp;gt; master.set(&#39;foo&#39;, &#39;bar&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; slave.get(&#39;foo&#39;)&#xA;b&#39;bar&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The master and slave objects are normal Redis instances with their connection pool bound to the Sentinel instance. When a Sentinel backed client attempts to establish a connection, it first queries the Sentinel servers to determine an appropriate host to connect to. If no server is found, a MasterNotFoundError or SlaveNotFoundError is raised. Both exceptions are subclasses of ConnectionError.&lt;/p&gt; &#xA;&lt;p&gt;When trying to connect to a slave client, the Sentinel connection pool will iterate over the list of slaves until it finds one that can be connected to. If no slaves can be connected to, a connection will be established with the master.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://redis.io/topics/sentinel-clients&#34;&gt;Guidelines for Redis clients with support for Redis Sentinel&lt;/a&gt; to learn more about Redis Sentinel.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Parsers&lt;/h3&gt; &#xA;&lt;p&gt;Parser classes provide a way to control how responses from the Redis server are parsed. redis-py ships with two parser classes, the PythonParser and the HiredisParser. By default, redis-py will attempt to use the HiredisParser if you have the hiredis module installed and will fallback to the PythonParser otherwise.&lt;/p&gt; &#xA;&lt;p&gt;Hiredis is a C library maintained by the core Redis team. Pieter Noordhuis was kind enough to create Python bindings. Using Hiredis can provide up to a 10x speed improvement in parsing responses from the Redis server. The performance increase is most noticeable when retrieving many pieces of data, such as from LRANGE or SMEMBERS operations.&lt;/p&gt; &#xA;&lt;p&gt;Hiredis is available on PyPI, and can be installed via pip just like redis-py.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pip install hiredis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Response Callbacks&lt;/h3&gt; &#xA;&lt;p&gt;The client class uses a set of callbacks to cast Redis responses to the appropriate Python type. There are a number of these callbacks defined on the Redis client class in a dictionary called RESPONSE_CALLBACKS.&lt;/p&gt; &#xA;&lt;p&gt;Custom callbacks can be added on a per-instance basis using the set_response_callback method. This method accepts two arguments: a command name and the callback. Callbacks added in this manner are only valid on the instance the callback is added to. If you want to define or override a callback globally, you should make a subclass of the Redis client and add your callback to its RESPONSE_CALLBACKS class dictionary.&lt;/p&gt; &#xA;&lt;p&gt;Response callbacks take at least one parameter: the response from the Redis server. Keyword arguments may also be accepted in order to further control how to interpret the response. These keyword arguments are specified during the command&#39;s call to execute_command. The ZRANGE implementation demonstrates the use of response callback keyword arguments with its &#34;withscores&#34; argument.&lt;/p&gt; &#xA;&lt;h3&gt;Thread Safety&lt;/h3&gt; &#xA;&lt;p&gt;Redis client instances can safely be shared between threads. Internally, connection instances are only retrieved from the connection pool during command execution, and returned to the pool directly after. Command execution never modifies state on the client instance.&lt;/p&gt; &#xA;&lt;p&gt;However, there is one caveat: the Redis SELECT command. The SELECT command allows you to switch the database currently in use by the connection. That database remains selected until another is selected or until the connection is closed. This creates an issue in that connections could be returned to the pool that are connected to a different database.&lt;/p&gt; &#xA;&lt;p&gt;As a result, redis-py does not implement the SELECT command on client instances. If you use multiple Redis databases within the same application, you should create a separate client instance (and possibly a separate connection pool) for each database.&lt;/p&gt; &#xA;&lt;p&gt;It is not safe to pass PubSub or Pipeline objects between threads.&lt;/p&gt; &#xA;&lt;h3&gt;Pipelines&lt;/h3&gt; &#xA;&lt;p&gt;Pipelines are a subclass of the base Redis class that provide support for buffering multiple commands to the server in a single request. They can be used to dramatically increase the performance of groups of commands by reducing the number of back-and-forth TCP packets between the client and server.&lt;/p&gt; &#xA;&lt;p&gt;Pipelines are quite simple to use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; r = redis.Redis(...)&#xA;&amp;gt;&amp;gt;&amp;gt; r.set(&#39;bing&#39;, &#39;baz&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; # Use the pipeline() method to create a pipeline instance&#xA;&amp;gt;&amp;gt;&amp;gt; pipe = r.pipeline()&#xA;&amp;gt;&amp;gt;&amp;gt; # The following SET commands are buffered&#xA;&amp;gt;&amp;gt;&amp;gt; pipe.set(&#39;foo&#39;, &#39;bar&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; pipe.get(&#39;bing&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; # the EXECUTE call sends all buffered commands to the server, returning&#xA;&amp;gt;&amp;gt;&amp;gt; # a list of responses, one for each command.&#xA;&amp;gt;&amp;gt;&amp;gt; pipe.execute()&#xA;[True, b&#39;baz&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For ease of use, all commands being buffered into the pipeline return the pipeline object itself. Therefore calls can be chained like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; pipe.set(&#39;foo&#39;, &#39;bar&#39;).sadd(&#39;faz&#39;, &#39;baz&#39;).incr(&#39;auto_number&#39;).execute()&#xA;[True, True, 6]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In addition, pipelines can also ensure the buffered commands are executed atomically as a group. This happens by default. If you want to disable the atomic nature of a pipeline but still want to buffer commands, you can turn off transactions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; pipe = r.pipeline(transaction=False)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A common issue occurs when requiring atomic transactions but needing to retrieve values in Redis prior for use within the transaction. For instance, let&#39;s assume that the INCR command didn&#39;t exist and we need to build an atomic version of INCR in Python.&lt;/p&gt; &#xA;&lt;p&gt;The completely naive implementation could GET the value, increment it in Python, and SET the new value back. However, this is not atomic because multiple clients could be doing this at the same time, each getting the same value from GET.&lt;/p&gt; &#xA;&lt;p&gt;Enter the WATCH command. WATCH provides the ability to monitor one or more keys prior to starting a transaction. If any of those keys change prior the execution of that transaction, the entire transaction will be canceled and a WatchError will be raised. To implement our own client-side INCR command, we could do something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; with r.pipeline() as pipe:&#xA;...     while True:&#xA;...         try:&#xA;...             # put a WATCH on the key that holds our sequence value&#xA;...             pipe.watch(&#39;OUR-SEQUENCE-KEY&#39;)&#xA;...             # after WATCHing, the pipeline is put into immediate execution&#xA;...             # mode until we tell it to start buffering commands again.&#xA;...             # this allows us to get the current value of our sequence&#xA;...             current_value = pipe.get(&#39;OUR-SEQUENCE-KEY&#39;)&#xA;...             next_value = int(current_value) + 1&#xA;...             # now we can put the pipeline back into buffered mode with MULTI&#xA;...             pipe.multi()&#xA;...             pipe.set(&#39;OUR-SEQUENCE-KEY&#39;, next_value)&#xA;...             # and finally, execute the pipeline (the set command)&#xA;...             pipe.execute()&#xA;...             # if a WatchError wasn&#39;t raised during execution, everything&#xA;...             # we just did happened atomically.&#xA;...             break&#xA;...        except WatchError:&#xA;...             # another client must have changed &#39;OUR-SEQUENCE-KEY&#39; between&#xA;...             # the time we started WATCHing it and the pipeline&#39;s execution.&#xA;...             # our best bet is to just retry.&#xA;...             continue&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that, because the Pipeline must bind to a single connection for the duration of a WATCH, care must be taken to ensure that the connection is returned to the connection pool by calling the reset() method. If the Pipeline is used as a context manager (as in the example above) reset() will be called automatically. Of course you can do this the manual way by explicitly calling reset():&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; pipe = r.pipeline()&#xA;&amp;gt;&amp;gt;&amp;gt; while True:&#xA;...     try:&#xA;...         pipe.watch(&#39;OUR-SEQUENCE-KEY&#39;)&#xA;...         ...&#xA;...         pipe.execute()&#xA;...         break&#xA;...     except WatchError:&#xA;...         continue&#xA;...     finally:&#xA;...         pipe.reset()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A convenience method named &#34;transaction&#34; exists for handling all the boilerplate of handling and retrying watch errors. It takes a callable that should expect a single parameter, a pipeline object, and any number of keys to be WATCHed. Our client-side INCR command above can be written like this, which is much easier to read:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; def client_side_incr(pipe):&#xA;...     current_value = pipe.get(&#39;OUR-SEQUENCE-KEY&#39;)&#xA;...     next_value = int(current_value) + 1&#xA;...     pipe.multi()&#xA;...     pipe.set(&#39;OUR-SEQUENCE-KEY&#39;, next_value)&#xA;&amp;gt;&amp;gt;&amp;gt;&#xA;&amp;gt;&amp;gt;&amp;gt; r.transaction(client_side_incr, &#39;OUR-SEQUENCE-KEY&#39;)&#xA;[True]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Be sure to call pipe.multi() in the callable passed to Redis.transaction prior to any write commands.&lt;/p&gt; &#xA;&lt;h3&gt;Publish / Subscribe&lt;/h3&gt; &#xA;&lt;p&gt;redis-py includes a PubSub object that subscribes to channels and listens for new messages. Creating a PubSub object is easy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; r = redis.Redis(...)&#xA;&amp;gt;&amp;gt;&amp;gt; p = r.pubsub()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once a PubSub instance is created, channels and patterns can be subscribed to.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; p.subscribe(&#39;my-first-channel&#39;, &#39;my-second-channel&#39;, ...)&#xA;&amp;gt;&amp;gt;&amp;gt; p.psubscribe(&#39;my-*&#39;, ...)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The PubSub instance is now subscribed to those channels/patterns. The subscription confirmations can be seen by reading messages from the PubSub instance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; p.get_message()&#xA;{&#39;pattern&#39;: None, &#39;type&#39;: &#39;subscribe&#39;, &#39;channel&#39;: b&#39;my-second-channel&#39;, &#39;data&#39;: 1}&#xA;&amp;gt;&amp;gt;&amp;gt; p.get_message()&#xA;{&#39;pattern&#39;: None, &#39;type&#39;: &#39;subscribe&#39;, &#39;channel&#39;: b&#39;my-first-channel&#39;, &#39;data&#39;: 2}&#xA;&amp;gt;&amp;gt;&amp;gt; p.get_message()&#xA;{&#39;pattern&#39;: None, &#39;type&#39;: &#39;psubscribe&#39;, &#39;channel&#39;: b&#39;my-*&#39;, &#39;data&#39;: 3}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Every message read from a PubSub instance will be a dictionary with the following keys.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;: One of the following: &#39;subscribe&#39;, &#39;unsubscribe&#39;, &#39;psubscribe&#39;, &#39;punsubscribe&#39;, &#39;message&#39;, &#39;pmessage&#39;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;channel&lt;/strong&gt;: The channel [un]subscribed to or the channel a message was published to&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;pattern&lt;/strong&gt;: The pattern that matched a published message&#39;s channel. Will be None in all cases except for &#39;pmessage&#39; types.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;data&lt;/strong&gt;: The message data. With [un]subscribe messages, this value will be the number of channels and patterns the connection is currently subscribed to. With [p]message messages, this value will be the actual published message.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Let&#39;s send a message now.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;# the publish method returns the number matching channel and pattern&#xA;# subscriptions. &#39;my-first-channel&#39; matches both the &#39;my-first-channel&#39;&#xA;# subscription and the &#39;my-*&#39; pattern subscription, so this message will&#xA;# be delivered to 2 channels/patterns&#xA;&amp;gt;&amp;gt;&amp;gt; r.publish(&#39;my-first-channel&#39;, &#39;some data&#39;)&#xA;2&#xA;&amp;gt;&amp;gt;&amp;gt; p.get_message()&#xA;{&#39;channel&#39;: b&#39;my-first-channel&#39;, &#39;data&#39;: b&#39;some data&#39;, &#39;pattern&#39;: None, &#39;type&#39;: &#39;message&#39;}&#xA;&amp;gt;&amp;gt;&amp;gt; p.get_message()&#xA;{&#39;channel&#39;: b&#39;my-first-channel&#39;, &#39;data&#39;: b&#39;some data&#39;, &#39;pattern&#39;: b&#39;my-*&#39;, &#39;type&#39;: &#39;pmessage&#39;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unsubscribing works just like subscribing. If no arguments are passed to [p]unsubscribe, all channels or patterns will be unsubscribed from.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; p.unsubscribe()&#xA;&amp;gt;&amp;gt;&amp;gt; p.punsubscribe(&#39;my-*&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; p.get_message()&#xA;{&#39;channel&#39;: b&#39;my-second-channel&#39;, &#39;data&#39;: 2, &#39;pattern&#39;: None, &#39;type&#39;: &#39;unsubscribe&#39;}&#xA;&amp;gt;&amp;gt;&amp;gt; p.get_message()&#xA;{&#39;channel&#39;: b&#39;my-first-channel&#39;, &#39;data&#39;: 1, &#39;pattern&#39;: None, &#39;type&#39;: &#39;unsubscribe&#39;}&#xA;&amp;gt;&amp;gt;&amp;gt; p.get_message()&#xA;{&#39;channel&#39;: b&#39;my-*&#39;, &#39;data&#39;: 0, &#39;pattern&#39;: None, &#39;type&#39;: &#39;punsubscribe&#39;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;redis-py also allows you to register callback functions to handle published messages. Message handlers take a single argument, the message, which is a dictionary just like the examples above. To subscribe to a channel or pattern with a message handler, pass the channel or pattern name as a keyword argument with its value being the callback function.&lt;/p&gt; &#xA;&lt;p&gt;When a message is read on a channel or pattern with a message handler, the message dictionary is created and passed to the message handler. In this case, a None value is returned from get_message() since the message was already handled.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; def my_handler(message):&#xA;...     print(&#39;MY HANDLER: &#39;, message[&#39;data&#39;])&#xA;&amp;gt;&amp;gt;&amp;gt; p.subscribe(**{&#39;my-channel&#39;: my_handler})&#xA;# read the subscribe confirmation message&#xA;&amp;gt;&amp;gt;&amp;gt; p.get_message()&#xA;{&#39;pattern&#39;: None, &#39;type&#39;: &#39;subscribe&#39;, &#39;channel&#39;: b&#39;my-channel&#39;, &#39;data&#39;: 1}&#xA;&amp;gt;&amp;gt;&amp;gt; r.publish(&#39;my-channel&#39;, &#39;awesome data&#39;)&#xA;1&#xA;# for the message handler to work, we need tell the instance to read data.&#xA;# this can be done in several ways (read more below). we&#39;ll just use&#xA;# the familiar get_message() function for now&#xA;&amp;gt;&amp;gt;&amp;gt; message = p.get_message()&#xA;MY HANDLER:  awesome data&#xA;# note here that the my_handler callback printed the string above.&#xA;# `message` is None because the message was handled by our handler.&#xA;&amp;gt;&amp;gt;&amp;gt; print(message)&#xA;None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If your application is not interested in the (sometimes noisy) subscribe/unsubscribe confirmation messages, you can ignore them by passing ignore_subscribe_messages=True to r.pubsub(). This will cause all subscribe/unsubscribe messages to be read, but they won&#39;t bubble up to your application.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; p = r.pubsub(ignore_subscribe_messages=True)&#xA;&amp;gt;&amp;gt;&amp;gt; p.subscribe(&#39;my-channel&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; p.get_message()  # hides the subscribe message and returns None&#xA;&amp;gt;&amp;gt;&amp;gt; r.publish(&#39;my-channel&#39;, &#39;my data&#39;)&#xA;1&#xA;&amp;gt;&amp;gt;&amp;gt; p.get_message()&#xA;{&#39;channel&#39;: b&#39;my-channel&#39;, &#39;data&#39;: b&#39;my data&#39;, &#39;pattern&#39;: None, &#39;type&#39;: &#39;message&#39;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are three different strategies for reading messages.&lt;/p&gt; &#xA;&lt;p&gt;The examples above have been using pubsub.get_message(). Behind the scenes, get_message() uses the system&#39;s &#39;select&#39; module to quickly poll the connection&#39;s socket. If there&#39;s data available to be read, get_message() will read it, format the message and return it or pass it to a message handler. If there&#39;s no data to be read, get_message() will immediately return None. This makes it trivial to integrate into an existing event loop inside your application.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; while True:&#xA;&amp;gt;&amp;gt;&amp;gt;     message = p.get_message()&#xA;&amp;gt;&amp;gt;&amp;gt;     if message:&#xA;&amp;gt;&amp;gt;&amp;gt;         # do something with the message&#xA;&amp;gt;&amp;gt;&amp;gt;     time.sleep(0.001)  # be nice to the system :)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Older versions of redis-py only read messages with pubsub.listen(). listen() is a generator that blocks until a message is available. If your application doesn&#39;t need to do anything else but receive and act on messages received from redis, listen() is an easy way to get up an running.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; for message in p.listen():&#xA;...     # do something with the message&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The third option runs an event loop in a separate thread. pubsub.run_in_thread() creates a new thread and starts the event loop. The thread object is returned to the caller of [un_in_thread(). The caller can use the thread.stop() method to shut down the event loop and thread. Behind the scenes, this is simply a wrapper around get_message() that runs in a separate thread, essentially creating a tiny non-blocking event loop for you. run_in_thread() takes an optional sleep_time argument. If specified, the event loop will call time.sleep() with the value in each iteration of the loop.&lt;/p&gt; &#xA;&lt;p&gt;Note: Since we&#39;re running in a separate thread, there&#39;s no way to handle messages that aren&#39;t automatically handled with registered message handlers. Therefore, redis-py prevents you from calling run_in_thread() if you&#39;re subscribed to patterns or channels that don&#39;t have message handlers attached.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; p.subscribe(**{&#39;my-channel&#39;: my_handler})&#xA;&amp;gt;&amp;gt;&amp;gt; thread = p.run_in_thread(sleep_time=0.001)&#xA;# the event loop is now running in the background processing messages&#xA;# when it&#39;s time to shut it down...&#xA;&amp;gt;&amp;gt;&amp;gt; thread.stop()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;run_in_thread also supports an optional exception handler, which lets you catch exceptions that occur within the worker thread and handle them appropriately. The exception handler will take as arguments the exception itself, the pubsub object, and the worker thread returned by run_in_thread.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; p.subscribe(**{&#39;my-channel&#39;: my_handler})&#xA;&amp;gt;&amp;gt;&amp;gt; def exception_handler(ex, pubsub, thread):&#xA;&amp;gt;&amp;gt;&amp;gt;     print(ex)&#xA;&amp;gt;&amp;gt;&amp;gt;     thread.stop()&#xA;&amp;gt;&amp;gt;&amp;gt;     thread.join(timeout=1.0)&#xA;&amp;gt;&amp;gt;&amp;gt;     pubsub.close()&#xA;&amp;gt;&amp;gt;&amp;gt; thread = p.run_in_thread(exception_handler=exception_handler)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A PubSub object adheres to the same encoding semantics as the client instance it was created from. Any channel or pattern that&#39;s unicode will be encoded using the charset specified on the client before being sent to Redis. If the client&#39;s decode_responses flag is set the False (the default), the &#39;channel&#39;, &#39;pattern&#39; and &#39;data&#39; values in message dictionaries will be byte strings (str on Python 2, bytes on Python 3). If the client&#39;s decode_responses is True, then the &#39;channel&#39;, &#39;pattern&#39; and &#39;data&#39; values will be automatically decoded to unicode strings using the client&#39;s charset.&lt;/p&gt; &#xA;&lt;p&gt;PubSub objects remember what channels and patterns they are subscribed to. In the event of a disconnection such as a network error or timeout, the PubSub object will re-subscribe to all prior channels and patterns when reconnecting. Messages that were published while the client was disconnected cannot be delivered. When you&#39;re finished with a PubSub object, call its .close() method to shutdown the connection.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; p = r.pubsub()&#xA;&amp;gt;&amp;gt;&amp;gt; ...&#xA;&amp;gt;&amp;gt;&amp;gt; p.close()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The PUBSUB set of subcommands CHANNELS, NUMSUB and NUMPAT are also supported:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; r.pubsub_channels()&#xA;[b&#39;foo&#39;, b&#39;bar&#39;]&#xA;&amp;gt;&amp;gt;&amp;gt; r.pubsub_numsub(&#39;foo&#39;, &#39;bar&#39;)&#xA;[(b&#39;foo&#39;, 9001), (b&#39;bar&#39;, 42)]&#xA;&amp;gt;&amp;gt;&amp;gt; r.pubsub_numsub(&#39;baz&#39;)&#xA;[(b&#39;baz&#39;, 0)]&#xA;&amp;gt;&amp;gt;&amp;gt; r.pubsub_numpat()&#xA;1204&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Monitor&lt;/h3&gt; &#xA;&lt;p&gt;redis-py includes a Monitor object that streams every command processed by the Redis server. Use listen() on the Monitor object to block until a command is received.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; r = redis.Redis(...)&#xA;&amp;gt;&amp;gt;&amp;gt; with r.monitor() as m:&#xA;&amp;gt;&amp;gt;&amp;gt;     for command in m.listen():&#xA;&amp;gt;&amp;gt;&amp;gt;         print(command)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Lua Scripting&lt;/h3&gt; &#xA;&lt;p&gt;redis-py supports the EVAL, EVALSHA, and SCRIPT commands. However, there are a number of edge cases that make these commands tedious to use in real world scenarios. Therefore, redis-py exposes a Script object that makes scripting much easier to use. (RedisClusters have limited support for scripting.)&lt;/p&gt; &#xA;&lt;p&gt;To create a Script instance, use the register_script function on a client instance passing the Lua code as the first argument. register_script returns a Script instance that you can use throughout your code.&lt;/p&gt; &#xA;&lt;p&gt;The following trivial Lua script accepts two parameters: the name of a key and a multiplier value. The script fetches the value stored in the key, multiplies it with the multiplier value and returns the result.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; r = redis.Redis()&#xA;&amp;gt;&amp;gt;&amp;gt; lua = &#34;&#34;&#34;&#xA;... local value = redis.call(&#39;GET&#39;, KEYS[1])&#xA;... value = tonumber(value)&#xA;... return value * ARGV[1]&#34;&#34;&#34;&#xA;&amp;gt;&amp;gt;&amp;gt; multiply = r.register_script(lua)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;multiply is now a Script instance that is invoked by calling it like a function. Script instances accept the following optional arguments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;keys&lt;/strong&gt;: A list of key names that the script will access. This becomes the KEYS list in Lua.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;args&lt;/strong&gt;: A list of argument values. This becomes the ARGV list in Lua.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;client&lt;/strong&gt;: A redis-py Client or Pipeline instance that will invoke the script. If client isn&#39;t specified, the client that initially created the Script instance (the one that register_script was invoked from) will be used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Continuing the example from above:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; r.set(&#39;foo&#39;, 2)&#xA;&amp;gt;&amp;gt;&amp;gt; multiply(keys=[&#39;foo&#39;], args=[5])&#xA;10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The value of key &#39;foo&#39; is set to 2. When multiply is invoked, the &#39;foo&#39; key is passed to the script along with the multiplier value of 5. Lua executes the script and returns the result, 10.&lt;/p&gt; &#xA;&lt;p&gt;Script instances can be executed using a different client instance, even one that points to a completely different Redis server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; r2 = redis.Redis(&#39;redis2.example.com&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; r2.set(&#39;foo&#39;, 3)&#xA;&amp;gt;&amp;gt;&amp;gt; multiply(keys=[&#39;foo&#39;], args=[5], client=r2)&#xA;15&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Script object ensures that the Lua script is loaded into Redis&#39;s script cache. In the event of a NOSCRIPT error, it will load the script and retry executing it.&lt;/p&gt; &#xA;&lt;p&gt;Script objects can also be used in pipelines. The pipeline instance should be passed as the client argument when calling the script. Care is taken to ensure that the script is registered in Redis&#39;s script cache just prior to pipeline execution.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; pipe = r.pipeline()&#xA;&amp;gt;&amp;gt;&amp;gt; pipe.set(&#39;foo&#39;, 5)&#xA;&amp;gt;&amp;gt;&amp;gt; multiply(keys=[&#39;foo&#39;], args=[5], client=pipe)&#xA;&amp;gt;&amp;gt;&amp;gt; pipe.execute()&#xA;[True, 25]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scan Iterators&lt;/h3&gt; &#xA;&lt;p&gt;The *SCAN commands introduced in Redis 2.8 can be cumbersome to use. While these commands are fully supported, redis-py also exposes the following methods that return Python iterators for convenience: scan_iter, hscan_iter, sscan_iter and zscan_iter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; for key, value in ((&#39;A&#39;, &#39;1&#39;), (&#39;B&#39;, &#39;2&#39;), (&#39;C&#39;, &#39;3&#39;)):&#xA;...     r.set(key, value)&#xA;&amp;gt;&amp;gt;&amp;gt; for key in r.scan_iter():&#xA;...     print(key, r.get(key))&#xA;A 1&#xA;B 2&#xA;C 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Cluster Mode&lt;/h3&gt; &#xA;&lt;p&gt;redis-py now supports cluster mode and provides a client for &lt;a href=&#34;https://redis.io/topics/cluster-tutorial&#34;&gt;Redis Cluster&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The cluster client is based on Grokzen&#39;s &lt;a href=&#34;https://github.com/Grokzen/redis-py-cluster&#34;&gt;redis-py-cluster&lt;/a&gt;, has added bug fixes, and now supersedes that library. Support for these changes is thanks to his contributions.&lt;/p&gt; &#xA;&lt;p&gt;To learn more about Redis Cluster, see &lt;a href=&#34;https://redis.io/topics/cluster-spec&#34;&gt;Redis Cluster specifications&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Create RedisCluster:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Connecting redis-py to a Redis Cluster instance(s) requires at a minimum a single node for cluster discovery. There are multiple ways in which a cluster instance can be created:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using &#39;host&#39; and &#39;port&#39; arguments:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from redis.cluster import RedisCluster as Redis&#xA;&amp;gt;&amp;gt;&amp;gt; rc = Redis(host=&#39;localhost&#39;, port=6379)&#xA;&amp;gt;&amp;gt;&amp;gt; print(rc.get_nodes())&#xA;    [[host=127.0.0.1,port=6379,name=127.0.0.1:6379,server_type=primary,redis_connection=Redis&amp;lt;ConnectionPool&amp;lt;Connection&amp;lt;host=127.0.0.1,port=6379,db=0&amp;gt;&amp;gt;&amp;gt;], [host=127.0.0.1,port=6378,name=127.0.0.1:6378,server_type=primary,redis_connection=Redis&amp;lt;ConnectionPool&amp;lt;Connection&amp;lt;host=127.0.0.1,port=6378,db=0&amp;gt;&amp;gt;&amp;gt;], [host=127.0.0.1,port=6377,name=127.0.0.1:6377,server_type=replica,redis_connection=Redis&amp;lt;ConnectionPool&amp;lt;Connection&amp;lt;host=127.0.0.1,port=6377,db=0&amp;gt;&amp;gt;&amp;gt;]]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using the Redis URL specification:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from redis.cluster import RedisCluster as Redis&#xA;&amp;gt;&amp;gt;&amp;gt; rc = Redis.from_url(&#34;redis://localhost:6379/0&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Directly, via the ClusterNode class:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from redis.cluster import RedisCluster as Redis&#xA;&amp;gt;&amp;gt;&amp;gt; from redis.cluster import ClusterNode&#xA;&amp;gt;&amp;gt;&amp;gt; nodes = [ClusterNode(&#39;localhost&#39;, 6379), ClusterNode(&#39;localhost&#39;, 6378)]&#xA;&amp;gt;&amp;gt;&amp;gt; rc = Redis(startup_nodes=nodes)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When a RedisCluster instance is being created it first attempts to establish a connection to one of the provided startup nodes. If none of the startup nodes are reachable, a &#39;RedisClusterException&#39; will be thrown. After a connection to the one of the cluster&#39;s nodes is established, the RedisCluster instance will be initialized with 3 caches: a slots cache which maps each of the 16384 slots to the node/s handling them, a nodes cache that contains ClusterNode objects (name, host, port, redis connection) for all of the cluster&#39;s nodes, and a commands cache contains all the server supported commands that were retrieved using the Redis &#39;COMMAND&#39; output.&lt;/p&gt; &#xA;&lt;p&gt;RedisCluster instance can be directly used to execute Redis commands. When a command is being executed through the cluster instance, the target node(s) will be internally determined. When using a key-based command, the target node will be the node that holds the key&#39;s slot. Cluster management commands and other commands that are not key-based have a parameter called &#39;target_nodes&#39; where you can specify which nodes to execute the command on. In the absence of target_nodes, the command will be executed on the default cluster node. As part of cluster instance initialization, the cluster&#39;s default node is randomly selected from the cluster&#39;s primaries, and will be updated upon reinitialization. Using r.get_default_node(), you can get the cluster&#39;s default node, or you can change it using the &#39;set_default_node&#39; method.&lt;/p&gt; &#xA;&lt;p&gt;The &#39;target_nodes&#39; parameter is explained in the following section, &#39;Specifying Target Nodes&#39;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; # target-nodes: the node that holds &#39;foo1&#39;s key slot&#xA;&amp;gt;&amp;gt;&amp;gt; rc.set(&#39;foo1&#39;, &#39;bar1&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; # target-nodes: the node that holds &#39;foo2&#39;s key slot&#xA;&amp;gt;&amp;gt;&amp;gt; rc.set(&#39;foo2&#39;, &#39;bar2&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; # target-nodes: the node that holds &#39;foo1&#39;s key slot&#xA;&amp;gt;&amp;gt;&amp;gt; print(rc.get(&#39;foo1&#39;))&#xA;b&#39;bar&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; # target-node: default-node&#xA;&amp;gt;&amp;gt;&amp;gt; print(rc.keys())&#xA;[b&#39;foo1&#39;]&#xA;&amp;gt;&amp;gt;&amp;gt; # target-node: default-node&#xA;&amp;gt;&amp;gt;&amp;gt; rc.ping()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Specifying Target Nodes:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;As mentioned above, all non key-based RedisCluster commands accept the kwarg parameter &#39;target_nodes&#39; that specifies the node/nodes that the command should be executed on. The best practice is to specify target nodes using RedisCluster class&#39;s node flags: PRIMARIES, REPLICAS, ALL_NODES, RANDOM. When a nodes flag is passed along with a command, it will be internally resolved to the relevant node/s. If the nodes topology of the cluster changes during the execution of a command, the client will be able to resolve the nodes flag again with the new topology and attempt to retry executing the command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from redis.cluster import RedisCluster as Redis&#xA;&amp;gt;&amp;gt;&amp;gt; # run cluster-meet command on all of the cluster&#39;s nodes&#xA;&amp;gt;&amp;gt;&amp;gt; rc.cluster_meet(&#39;127.0.0.1&#39;, 6379, target_nodes=Redis.ALL_NODES)&#xA;&amp;gt;&amp;gt;&amp;gt; # ping all replicas&#xA;&amp;gt;&amp;gt;&amp;gt; rc.ping(target_nodes=Redis.REPLICAS)&#xA;&amp;gt;&amp;gt;&amp;gt; # ping a random node&#xA;&amp;gt;&amp;gt;&amp;gt; rc.ping(target_nodes=Redis.RANDOM)&#xA;&amp;gt;&amp;gt;&amp;gt; # get the keys from all cluster nodes&#xA;&amp;gt;&amp;gt;&amp;gt; rc.keys(target_nodes=Redis.ALL_NODES)&#xA;[b&#39;foo1&#39;, b&#39;foo2&#39;]&#xA;&amp;gt;&amp;gt;&amp;gt; # execute bgsave in all primaries&#xA;&amp;gt;&amp;gt;&amp;gt; rc.bgsave(Redis.PRIMARIES)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You could also pass ClusterNodes directly if you want to execute a command on a specific node / node group that isn&#39;t addressed by the nodes flag. However, if the command execution fails due to cluster topology changes, a retry attempt will not be made, since the passed target node/s may no longer be valid, and the relevant cluster or connection error will be returned.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; node = rc.get_node(&#39;localhost&#39;, 6379)&#xA;&amp;gt;&amp;gt;&amp;gt; # Get the keys only for that specific node&#xA;&amp;gt;&amp;gt;&amp;gt; rc.keys(target_nodes=node)&#xA;&amp;gt;&amp;gt;&amp;gt; # get Redis info from a subset of primaries&#xA;&amp;gt;&amp;gt;&amp;gt; subset_primaries = [node for node in rc.get_primaries() if node.port &amp;gt; 6378]&#xA;&amp;gt;&amp;gt;&amp;gt; rc.info(target_nodes=subset_primaries)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In addition, the RedisCluster instance can query the Redis instance of a specific node and execute commands on that node directly. The Redis client, however, does not handle cluster failures and retries.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; cluster_node = rc.get_node(host=&#39;localhost&#39;, port=6379)&#xA;&amp;gt;&amp;gt;&amp;gt; print(cluster_node)&#xA;[host=127.0.0.1,port=6379,name=127.0.0.1:6379,server_type=primary,redis_connection=Redis&amp;lt;ConnectionPool&amp;lt;Connection&amp;lt;host=127.0.0.1,port=6379,db=0&amp;gt;&amp;gt;&amp;gt;]&#xA;&amp;gt;&amp;gt;&amp;gt; r = cluster_node.redis_connection&#xA;&amp;gt;&amp;gt;&amp;gt; r.client_list()&#xA;[{&#39;id&#39;: &#39;276&#39;, &#39;addr&#39;: &#39;127.0.0.1:64108&#39;, &#39;fd&#39;: &#39;16&#39;, &#39;name&#39;: &#39;&#39;, &#39;age&#39;: &#39;0&#39;, &#39;idle&#39;: &#39;0&#39;, &#39;flags&#39;: &#39;N&#39;, &#39;db&#39;: &#39;0&#39;, &#39;sub&#39;: &#39;0&#39;, &#39;psub&#39;: &#39;0&#39;, &#39;multi&#39;: &#39;-1&#39;, &#39;qbuf&#39;: &#39;26&#39;, &#39;qbuf-free&#39;: &#39;32742&#39;, &#39;argv-mem&#39;: &#39;10&#39;, &#39;obl&#39;: &#39;0&#39;, &#39;oll&#39;: &#39;0&#39;, &#39;omem&#39;: &#39;0&#39;, &#39;tot-mem&#39;: &#39;54298&#39;, &#39;events&#39;: &#39;r&#39;, &#39;cmd&#39;: &#39;client&#39;, &#39;user&#39;: &#39;default&#39;}]&#xA;&amp;gt;&amp;gt;&amp;gt; # Get the keys only for that specific node&#xA;&amp;gt;&amp;gt;&amp;gt; r.keys()&#xA;[b&#39;foo1&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Multi-key commands:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Redis supports multi-key commands in Cluster Mode, such as Set type unions or intersections, mset and mget, as long as the keys all hash to the same slot. By using RedisCluster client, you can use the known functions (e.g. mget, mset) to perform an atomic multi-key operation. However, you must ensure all keys are mapped to the same slot, otherwise a RedisClusterException will be thrown. Redis Cluster implements a concept called hash tags that can be used in order to force certain keys to be stored in the same hash slot, see &lt;a href=&#34;https://redis.io/topics/cluster-spec#keys-hash-tags&#34;&gt;Keys hash tag&lt;/a&gt;. You can also use nonatomic for some of the multikey operations, and pass keys that aren&#39;t mapped to the same slot. The client will then map the keys to the relevant slots, sending the commands to the slots&#39; node owners. Non-atomic operations batch the keys according to their hash value, and then each batch is sent separately to the slot&#39;s owner.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;# Atomic operations can be used when all keys are mapped to the same slot&#xA;&amp;gt;&amp;gt;&amp;gt; rc.mset({&#39;{foo}1&#39;: &#39;bar1&#39;, &#39;{foo}2&#39;: &#39;bar2&#39;})&#xA;&amp;gt;&amp;gt;&amp;gt; rc.mget(&#39;{foo}1&#39;, &#39;{foo}2&#39;)&#xA;[b&#39;bar1&#39;, b&#39;bar2&#39;]&#xA;# Non-atomic multi-key operations splits the keys into different slots&#xA;&amp;gt;&amp;gt;&amp;gt; rc.mset_nonatomic({&#39;foo&#39;: &#39;value1&#39;, &#39;bar&#39;: &#39;value2&#39;, &#39;zzz&#39;: &#39;value3&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; rc.mget_nonatomic(&#39;foo&#39;, &#39;bar&#39;, &#39;zzz&#39;)&#xA;[b&#39;value1&#39;, b&#39;value2&#39;, b&#39;value3&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Cluster PubSub:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;When a ClusterPubSub instance is created without specifying a node, a single node will be transparently chosen for the pubsub connection on the first command execution. The node will be determined by:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Hashing the channel name in the request to find its keyslot&lt;/li&gt; &#xA; &lt;li&gt;Selecting a node that handles the keyslot: If read_from_replicas is set to true, a replica can be selected.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;Known limitations with pubsub:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pattern subscribe and publish do not currently work properly due to key slots. If we hash a pattern like fo* we will receive a keyslot for that string but there are endless possibilities for channel names based on this pattern - unknowable in advance. This feature is not disabled but the commands are not currently recommended for use. See &lt;a href=&#34;https://redis-py-cluster.readthedocs.io/en/stable/pubsub.html&#34;&gt;redis-py-cluster documentation&lt;/a&gt; for more.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; p1 = rc.pubsub()&#xA;# p1 connection will be set to the node that holds &#39;foo&#39; keyslot&#xA;&amp;gt;&amp;gt;&amp;gt; p1.subscribe(&#39;foo&#39;)&#xA;# p2 connection will be set to node &#39;localhost:6379&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; p2 = rc.pubsub(rc.get_node(&#39;localhost&#39;, 6379))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Read Only Mode&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;By default, Redis Cluster always returns MOVE redirection response on accessing a replica node. You can overcome this limitation and scale read commands by triggering READONLY mode.&lt;/p&gt; &#xA;&lt;p&gt;To enable READONLY mode pass read_from_replicas=True to RedisCluster constructor. When set to true, read commands will be assigned between the primary and its replications in a Round-Robin manner.&lt;/p&gt; &#xA;&lt;p&gt;READONLY mode can be set at runtime by calling the readonly() method with target_nodes=&#39;replicas&#39;, and read-write access can be restored by calling the readwrite() method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from cluster import RedisCluster as Redis&#xA;# Use &#39;debug&#39; log level to print the node that the command is executed on&#xA;&amp;gt;&amp;gt;&amp;gt; rc_readonly = Redis(startup_nodes=startup_nodes,&#xA;...                     read_from_replicas=True)&#xA;&amp;gt;&amp;gt;&amp;gt; rc_readonly.set(&#39;{foo}1&#39;, &#39;bar1&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; for i in range(0, 4):&#xA;...     # Assigns read command to the slot&#39;s hosts in a Round-Robin manner&#xA;...     rc_readonly.get(&#39;{foo}1&#39;)&#xA;# set command would be directed only to the slot&#39;s primary node&#xA;&amp;gt;&amp;gt;&amp;gt; rc_readonly.set(&#39;{foo}2&#39;, &#39;bar2&#39;)&#xA;# reset READONLY flag&#xA;&amp;gt;&amp;gt;&amp;gt; rc_readonly.readwrite(target_nodes=&#39;replicas&#39;)&#xA;# now the get command would be directed only to the slot&#39;s primary node&#xA;&amp;gt;&amp;gt;&amp;gt; rc_readonly.get(&#39;{foo}1&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Cluster Pipeline&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;ClusterPipeline is a subclass of RedisCluster that provides support for Redis pipelines in cluster mode. When calling the execute() command, all the commands are grouped by the node on which they will be executed, and are then executed by the respective nodes in parallel. The pipeline instance will wait for all the nodes to respond before returning the result to the caller. Command responses are returned as a list sorted in the same order in which they were sent. Pipelines can be used to dramatically increase the throughput of Redis Cluster by significantly reducing the the number of network round trips between the client and the server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pycon&#34;&gt;&amp;gt;&amp;gt;&amp;gt; with rc.pipeline() as pipe:&#xA;...     pipe.set(&#39;foo&#39;, &#39;value1&#39;)&#xA;...     pipe.set(&#39;bar&#39;, &#39;value2&#39;)&#xA;...     pipe.get(&#39;foo&#39;)&#xA;...     pipe.get(&#39;bar&#39;)&#xA;...     print(pipe.execute())&#xA;[True, True, b&#39;value1&#39;, b&#39;value2&#39;]&#xA;...     pipe.set(&#39;foo1&#39;, &#39;bar1&#39;).get(&#39;foo1&#39;).execute()&#xA;[True, b&#39;bar1&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RedisCluster pipelines currently only support key-based commands.&lt;/li&gt; &#xA; &lt;li&gt;The pipeline gets its &#39;read_from_replicas&#39; value from the cluster&#39;s parameter. Thus, if read from replications is enabled in the cluster instance, the pipeline will also direct read commands to replicas.&lt;/li&gt; &#xA; &lt;li&gt;The &#39;transaction&#39; option is NOT supported in cluster-mode. In non-cluster mode, the &#39;transaction&#39; option is available when executing pipelines. This wraps the pipeline commands with MULTI/EXEC commands, and effectively turns the pipeline commands into a single transaction block. This means that all commands are executed sequentially without any interruptions from other clients. However, in cluster-mode this is not possible, because commands are partitioned according to their respective destination nodes. This means that we can not turn the pipeline commands into one transaction block, because in most cases they are split up into several smaller pipelines.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Lua Scripting in Cluster Mode&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Cluster mode has limited support for lua scripting.&lt;/p&gt; &#xA;&lt;p&gt;The following commands are supported, with caveats:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;EVAL&lt;/code&gt; and &lt;code&gt;EVALSHA&lt;/code&gt;: The command is sent to the relevant node, depending on the keys (i.e., in &lt;code&gt;EVAL &#34;&amp;lt;script&amp;gt;&#34; num_keys key_1 ... key_n ...&lt;/code&gt;). The keys &lt;em&gt;must&lt;/em&gt; all be on the same node. If the script requires 0 keys, &lt;em&gt;the command is sent to a random (primary) node&lt;/em&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SCRIPT EXISTS&lt;/code&gt;: The command is sent to all primaries. The result is a list of booleans corresponding to the input SHA hashes. Each boolean is an AND of &#34;does the script exist on each node?&#34;. In other words, each boolean is True iff the script exists on all nodes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SCRIPT FLUSH&lt;/code&gt;: The command is sent to all primaries. The result is a bool AND over all nodes&#39; responses.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SCRIPT LOAD&lt;/code&gt;: The command is sent to all primaries. The result is the SHA1 digest.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following commands are not supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;EVAL_RO&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;EVALSHA_RO&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Using scripting within pipelines in cluster mode is &lt;strong&gt;not supported&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Author&lt;/h3&gt; &#xA;&lt;p&gt;redis-py is developed and maintained by &lt;a href=&#34;https://redis.com&#34;&gt;Redis Inc&lt;/a&gt;. It can be found &lt;a href=&#34;https://github.com/redis/redis-py&#34;&gt;here&lt;/a&gt;, or downloaded from &lt;a href=&#34;https://pypi.org/project/redis/&#34;&gt;pypi&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Andy McCurdy (&lt;a href=&#34;mailto:sedrik@gmail.com&#34;&gt;sedrik@gmail.com&lt;/a&gt;) the original author of redis-py.&lt;/li&gt; &#xA; &lt;li&gt;Ludovico Magnocavallo, author of the original Python Redis client, from which some of the socket code is still used.&lt;/li&gt; &#xA; &lt;li&gt;Alexander Solovyov for ideas on the generic response callback system.&lt;/li&gt; &#xA; &lt;li&gt;Paul Hubbard for initial packaging support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.redis.com&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/redis/redis-py/master/docs/logo-redis.png&#34; alt=&#34;Redis&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aquasecurity/kube-hunter</title>
    <updated>2022-06-01T01:32:22Z</updated>
    <id>tag:github.com,2022-06-01:/aquasecurity/kube-hunter</id>
    <link href="https://github.com/aquasecurity/kube-hunter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hunt for security weaknesses in Kubernetes clusters&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/aquasecurity/kube-hunter/raw/main/kube-hunter.png&#34; alt=&#34;kube-hunter&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/aquasecurity/kube-hunter/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/aquasecurity/kube-hunter.svg?logo=github&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/aquasecurity/kube-hunter/total?logo=github&#34; alt=&#34;Downloads&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/aquasec/kube-hunter?logo=docker&amp;amp;label=docker%20pulls%20%2F%20kube-hunter&#34; alt=&#34;Docker Pulls&#34;&gt; &lt;a href=&#34;https://github.com/aquasecurity/kube-hunter/actions&#34;&gt;&lt;img src=&#34;https://github.com/aquasecurity/kube-hunter/workflows/Test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/aquasecurity/kube-hunter&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/aquasecurity/kube-hunter/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34; alt=&#34;Code style: black&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aquasecurity/kube-hunter/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/aquasecurity/kube-hunter&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://microbadger.com/images/aquasec/kube-hunter&#34; title=&#34;Get your own image badge on microbadger.com&#34;&gt;&lt;img src=&#34;https://images.microbadger.com/badges/image/aquasec/kube-hunter.svg?sanitize=true&#34; alt=&#34;Docker image&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;kube-hunter hunts for security weaknesses in Kubernetes clusters. The tool was developed to increase awareness and visibility for security issues in Kubernetes environments. &lt;strong&gt;You should NOT run kube-hunter on a Kubernetes cluster that you don&#39;t own!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run kube-hunter&lt;/strong&gt;: kube-hunter is available as a container (aquasec/kube-hunter), and we also offer a web site at &lt;a href=&#34;https://kube-hunter.aquasec.com&#34;&gt;kube-hunter.aquasec.com&lt;/a&gt; where you can register online to receive a token allowing you to see and share the results online. You can also run the Python code yourself as described below.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Explore vulnerabilities&lt;/strong&gt;: The kube-hunter knowledge base includes articles about discoverable vulnerabilities and issues. When kube-hunter reports an issue, it will show its VID (Vulnerability ID) so you can look it up in the KB at &lt;a href=&#34;https://aquasecurity.github.io/kube-hunter/&#34;&gt;https://aquasecurity.github.io/kube-hunter/&lt;/a&gt;&lt;br&gt; &lt;em&gt;If you&#39;re interested in kube-hunter&#39;s integration with the Kubernetes ATT&amp;amp;CK Matrix &lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#kuberentes-attck-matrix&#34;&gt;Continue Reading&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Contribute&lt;/strong&gt;: We welcome contributions, especially new hunter modules that perform additional tests. If you would like to develop your modules please read &lt;a href=&#34;https://github.com/aquasecurity/kube-hunter/raw/main/CONTRIBUTING.md&#34;&gt;Guidelines For Developing Your First kube-hunter Module&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/s2-6rTkH8a8?t=57s&#34;&gt;&lt;img src=&#34;https://github.com/aquasecurity/kube-hunter/raw/main/kube-hunter-screenshot.png&#34; alt=&#34;kube-hunter demo video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#kubernetes-attck-matrix&#34;&gt;Kubernetes ATT&amp;amp;CK Matrix&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#hunting&#34;&gt;Hunting&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#where-should-i-run-kube-hunter&#34;&gt;Where should I run kube-hunter?&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#scanning-options&#34;&gt;Scanning options&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#authentication&#34;&gt;Authentication&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#active-hunting&#34;&gt;Active Hunting&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#list-of-tests&#34;&gt;List of tests&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#nodes-mapping&#34;&gt;Nodes Mapping&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#output&#34;&gt;Output&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#dispatching&#34;&gt;Dispatching&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#advanced-usage&#34;&gt;Advanced Usage&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#azure-quick-scanning&#34;&gt;Azure Quick Scanning&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#custom-hunting&#34;&gt;Custom Hunting&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#deployment&#34;&gt;Deployment&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#on-machine&#34;&gt;On Machine&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt; &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#install-with-pip&#34;&gt;Install with pip&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#run-from-source&#34;&gt;Run from source&lt;/a&gt;&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#pod&#34;&gt;Pod&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#contribution&#34;&gt;Contribution&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Kubernetes ATT&amp;amp;CK Matrix&lt;/h2&gt; &#xA;&lt;p&gt;kube-hunter now supports the new format of the Kubernetes ATT&amp;amp;CK matrix. While kube-hunter&#39;s vulnerabilities are a collection of creative techniques designed to mimic an attacker in the cluster (or outside it) The Mitre&#39;s ATT&amp;amp;CK defines a more general standardised categories of techniques to do so.&lt;/p&gt; &#xA;&lt;p&gt;You can think of kube-hunter vulnerabilities as small steps for an attacker, which follows the track of a more general technique he would aim for. Most of kube-hunter&#39;s hunters and vulnerabilities can closly fall under those techniques, That&#39;s why we moved to follow the Matrix standard.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Some kube-hunter vulnerabities which we could not map to Mitre technique, are prefixed with the &lt;code&gt;General&lt;/code&gt; keyword&lt;/em&gt; &lt;img src=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/MITRE.png&#34; alt=&#34;kube-hunter&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Hunting&lt;/h2&gt; &#xA;&lt;h3&gt;Where should I run kube-hunter?&lt;/h3&gt; &#xA;&lt;p&gt;There are three different ways to run kube-hunter, each providing a different approach to detecting weaknesses in your cluster:&lt;/p&gt; &#xA;&lt;p&gt;Run kube-hunter on any machine (including your laptop), select Remote scanning and give the IP address or domain name of your Kubernetes cluster. This will give you an attackers-eye-view of your Kubernetes setup.&lt;/p&gt; &#xA;&lt;p&gt;You can run kube-hunter directly on a machine in the cluster, and select the option to probe all the local network interfaces.&lt;/p&gt; &#xA;&lt;p&gt;You can also run kube-hunter in a pod within the cluster. This indicates how exposed your cluster would be if one of your application pods is compromised (through a software vulnerability, for example). (&lt;em&gt;&lt;code&gt;--pod&lt;/code&gt; flag&lt;/em&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;Scanning options&lt;/h3&gt; &#xA;&lt;p&gt;First check for these &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aquasecurity/kube-hunter/main/#prerequisites&#34;&gt;pre-requisites&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By default, kube-hunter will open an interactive session, in which you will be able to select one of the following scan options. You can also specify the scan option manually from the command line. These are your options:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Remote scanning&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To specify remote machines for hunting, select option 1 or use the &lt;code&gt;--remote&lt;/code&gt; option. Example: &lt;code&gt;kube-hunter --remote some.node.com&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Interface scanning&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To specify interface scanning, you can use the &lt;code&gt;--interface&lt;/code&gt; option (this will scan all of the machine&#39;s network interfaces). Example: &lt;code&gt;kube-hunter --interface&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Network scanning&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To specify a specific CIDR to scan, use the &lt;code&gt;--cidr&lt;/code&gt; option. Example: &lt;code&gt;kube-hunter --cidr 192.168.0.0/24&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Kubernetes node auto-discovery&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Set &lt;code&gt;--k8s-auto-discover-nodes&lt;/code&gt; flag to query Kubernetes for all nodes in the cluster, and then attempt to scan them all. By default, it will use &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/rbac/&#34;&gt;in-cluster config&lt;/a&gt; to connect to the Kubernetes API. If you&#39;d like to use an explicit kubeconfig file, set &lt;code&gt;--kubeconfig /location/of/kubeconfig/file&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also note, that this is always done when using &lt;code&gt;--pod&lt;/code&gt; mode.&lt;/p&gt; &#xA;&lt;h3&gt;Authentication&lt;/h3&gt; &#xA;&lt;p&gt;In order to mimic an attacker in it&#39;s early stages, kube-hunter requires no authentication for the hunt.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Impersonate&lt;/strong&gt; - You can provide kube-hunter with a specific service account token to use when hunting by manually passing the JWT Bearer token of the service-account secret with the &lt;code&gt;--service-account-token&lt;/code&gt; flag.&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ kube-hunter --active --service-account-token eyJhbGciOiJSUzI1Ni...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When runing with &lt;code&gt;--pod&lt;/code&gt; flag, kube-hunter uses the service account token &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/service-accounts-admin/&#34;&gt;mounted inside the pod&lt;/a&gt; to authenticate to services it finds during the hunt.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;if specified, &lt;code&gt;--service-account-token&lt;/code&gt; flag takes priority when running as a pod&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Active Hunting&lt;/h3&gt; &#xA;&lt;p&gt;Active hunting is an option in which kube-hunter will exploit vulnerabilities it finds, to explore for further vulnerabilities. The main difference between normal and active hunting is that a normal hunt will never change the state of the cluster, while active hunting can potentially do state-changing operations on the cluster, &lt;strong&gt;which could be harmful&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By default, kube-hunter does not do active hunting. To active hunt a cluster, use the &lt;code&gt;--active&lt;/code&gt; flag. Example: &lt;code&gt;kube-hunter --remote some.domain.com --active&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;List of tests&lt;/h3&gt; &#xA;&lt;p&gt;You can see the list of tests with the &lt;code&gt;--list&lt;/code&gt; option: Example: &lt;code&gt;kube-hunter --list&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To see active hunting tests as well as passive: &lt;code&gt;kube-hunter --list --active&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Nodes Mapping&lt;/h3&gt; &#xA;&lt;p&gt;To see only a mapping of your nodes network, run with &lt;code&gt;--mapping&lt;/code&gt; option. Example: &lt;code&gt;kube-hunter --cidr 192.168.0.0/24 --mapping&lt;/code&gt; This will output all the Kubernetes nodes kube-hunter has found.&lt;/p&gt; &#xA;&lt;h3&gt;Output&lt;/h3&gt; &#xA;&lt;p&gt;To control logging, you can specify a log level, using the &lt;code&gt;--log&lt;/code&gt; option. Example: &lt;code&gt;kube-hunter --active --log WARNING&lt;/code&gt; Available log levels are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DEBUG&lt;/li&gt; &#xA; &lt;li&gt;INFO (default)&lt;/li&gt; &#xA; &lt;li&gt;WARNING&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Dispatching&lt;/h3&gt; &#xA;&lt;p&gt;By default, the report will be dispatched to &lt;code&gt;stdout&lt;/code&gt;, but you can specify different methods by using the &lt;code&gt;--dispatch&lt;/code&gt; option. Example: &lt;code&gt;kube-hunter --report json --dispatch http&lt;/code&gt; Available dispatch methods are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;stdout (default)&lt;/li&gt; &#xA; &lt;li&gt;http (to configure, set the following environment variables:) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;KUBEHUNTER_HTTP_DISPATCH_URL (defaults to: &lt;a href=&#34;https://localhost&#34;&gt;https://localhost&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;KUBEHUNTER_HTTP_DISPATCH_METHOD (defaults to: POST)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Advanced Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Azure Quick Scanning&lt;/h3&gt; &#xA;&lt;p&gt;When running &lt;strong&gt;as a Pod in an Azure or AWS environment&lt;/strong&gt;, kube-hunter will fetch subnets from the Instance Metadata Service. Naturally this makes the discovery process take longer. To hardlimit subnet scanning to a &lt;code&gt;/24&lt;/code&gt; CIDR, use the &lt;code&gt;--quick&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;h3&gt;Custom Hunting&lt;/h3&gt; &#xA;&lt;p&gt;Custom hunting enables advanced users to have control over what hunters gets registered at the start of a hunt. &lt;strong&gt;If you know what you are doing&lt;/strong&gt;, this can help if you want to adjust kube-hunter&#39;s hunting and discovery process for your needs.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kube-hunter --custom &amp;lt;HunterName1&amp;gt; &amp;lt;HunterName2&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enabling Custom hunting removes all hunters from the hunting process, except the given whitelisted hunters.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;--custom&lt;/code&gt; flag reads a list of hunters class names, in order to view all of kube-hunter&#39;s class names, you can combine the flag &lt;code&gt;--raw-hunter-names&lt;/code&gt; with the &lt;code&gt;--list&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kube-hunter --active --list --raw-hunter-names&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notice&lt;/strong&gt;: Due to kube-huner&#39;s architectural design, the following &#34;Core Hunters/Classes&#34; will always register (even when using custom hunting):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HostDiscovery &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Generates ip addresses for the hunt by given configurations&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;Automatically discovers subnets using cloud Metadata APIs&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;FromPodHostDiscovery &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Auto discover attack surface ip addresses for the hunt by using Pod based environment techniques&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;Automatically discovers subnets using cloud Metadata APIs&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;PortDiscovery &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Port scanning given ip addresses for known kubernetes services ports&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Collector &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Collects discovered vulnerabilities and open services for future report&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;StartedInfo &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Prints the start message&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;SendFullReport &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Dispatching the report based on given configurations&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;There are three methods for deploying kube-hunter:&lt;/p&gt; &#xA;&lt;h3&gt;On Machine&lt;/h3&gt; &#xA;&lt;p&gt;You can run kube-hunter directly on your machine.&lt;/p&gt; &#xA;&lt;h4&gt;Prerequisites&lt;/h4&gt; &#xA;&lt;p&gt;You will need the following installed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;python 3.x&lt;/li&gt; &#xA; &lt;li&gt;pip&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Install with pip&lt;/h5&gt; &#xA;&lt;p&gt;Install:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install kube-hunter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kube-hunter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Run from source&lt;/h5&gt; &#xA;&lt;p&gt;Clone the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/aquasecurity/kube-hunter.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install module dependencies. (You may prefer to do this within a &lt;a href=&#34;https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/&#34;&gt;Virtual Environment&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd ./kube-hunter&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 kube_hunter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;If you want to use pyinstaller/py2exe you need to first run the install_imports.py script.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Container&lt;/h3&gt; &#xA;&lt;p&gt;Aqua Security maintains a containerized version of kube-hunter at &lt;code&gt;aquasec/kube-hunter:aqua&lt;/code&gt;. This container includes this source code, plus an additional (closed source) reporting plugin for uploading results into a report that can be viewed at &lt;a href=&#34;https://kube-hunter.aquasec.com&#34;&gt;kube-hunter.aquasec.com&lt;/a&gt;. Please note, that running the &lt;code&gt;aquasec/kube-hunter&lt;/code&gt; container and uploading reports data are subject to additional &lt;a href=&#34;https://kube-hunter.aquasec.com/eula.html&#34;&gt;terms and conditions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Dockerfile in this repository allows you to build a containerized version without the reporting plugin.&lt;/p&gt; &#xA;&lt;p&gt;If you run kube-hunter container with the host network, it will be able to probe all the interfaces on the host:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;docker run -it --rm --network host aquasec/kube-hunter&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note for Docker for Mac/Windows:&lt;/em&gt; Be aware that the &#34;host&#34; for Docker for Mac or Windows is the VM that Docker runs containers within. Therefore specifying &lt;code&gt;--network host&lt;/code&gt; allows kube-hunter access to the network interfaces of that VM, rather than those of your machine. By default, kube-hunter runs in interactive mode. You can also specify the scanning option with the parameters described above e.g.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;docker run --rm aquasec/kube-hunter --cidr 192.168.0.0/24&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Pod&lt;/h3&gt; &#xA;&lt;p&gt;This option lets you discover what running a malicious container can do/discover on your cluster. This gives a perspective on what an attacker could do if they were able to compromise a pod, perhaps through a software vulnerability. This may reveal significantly more vulnerabilities.&lt;/p&gt; &#xA;&lt;p&gt;The example &lt;code&gt;job.yaml&lt;/code&gt; file defines a Job that will run kube-hunter in a pod, using default Kubernetes pod access settings. (You may wish to modify this definition, for example to run as a non-root user, or to run in a different namespace.)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the job with &lt;code&gt;kubectl create -f ./job.yaml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Find the pod name with &lt;code&gt;kubectl describe job kube-hunter&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;View the test results with &lt;code&gt;kubectl logs &amp;lt;pod name&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;To read the contribution guidelines, &lt;a href=&#34;https://github.com/aquasecurity/kube-hunter/raw/main/CONTRIBUTING.md&#34;&gt; Click here &lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This repository is available under the &lt;a href=&#34;https://github.com/aquasecurity/kube-hunter/raw/main/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>