<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-13T01:30:47Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>huggingface/parler-tts</title>
    <updated>2024-04-13T01:30:47Z</updated>
    <id>tag:github.com,2024-04-13:/huggingface/parler-tts</id>
    <link href="https://github.com/huggingface/parler-tts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Inference and training library for high-quality TTS models.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Parler-TTS&lt;/h1&gt; &#xA;&lt;p&gt;Parler-TTS is a lightweight text-to-speech (TTS) model that can generate high-quality, natural sounding speech in the style of a given speaker (gender, pitch, speaking style, etc). It is a reproduction of work from the paper &lt;a href=&#34;https://www.text-description-to-speech.com&#34;&gt;Natural language guidance of high-fidelity text-to-speech with synthetic annotations&lt;/a&gt; by Dan Lyth and Simon King, from Stability AI and Edinburgh University respectively.&lt;/p&gt; &#xA;&lt;p&gt;Contrarily to other TTS models, Parler-TTS is a &lt;strong&gt;fully open-source&lt;/strong&gt; release. All of the datasets, pre-processing, training code and weights are released publicly under permissive license, enabling the community to build on our work and develop their own powerful TTS models.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the inference and training code for Parler-TTS. It is designed to accompany the &lt;a href=&#34;https://github.com/huggingface/dataspeech&#34;&gt;Data-Speech&lt;/a&gt; repository for dataset annotation.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] We&#39;re proud to release &lt;a href=&#34;https://huggingface.co/parler-tts/parler_tts_mini_v0.1&#34;&gt;Parler-TTS Mini v0.1&lt;/a&gt;, our first 600M parameter model, trained on 10.5K hours of audio data. In the coming weeks, we&#39;ll be working on scaling up to 50k hours of data, in preparation for the v1 model.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;📖 Quick Index&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/huggingface/parler-tts/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/huggingface/parler-tts/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/huggingface/parler-tts/main/#training&#34;&gt;Training&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/spaces/parler-tts/parler_tts_mini&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/parler-tts&#34;&gt;Model weights and datasets&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Parler-TTS has light-weight dependencies and can be installed in one line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install git+https://github.com/huggingface/parler-tts.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] You can directly try it out in an interactive demo &lt;a href=&#34;https://huggingface.co/spaces/parler-tts/parler_tts_mini&#34;&gt;here&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Using Parler-TTS is as simple as &#34;bonjour&#34;. Simply use the following inference snippet.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;from parler_tts import ParlerTTSForConditionalGeneration&#xA;from transformers import AutoTokenizer&#xA;import soundfile as sf&#xA;import torch&#xA;&#xA;device = &#34;cuda:0&#34; if torch.cuda.is_available() else &#34;cpu&#34;&#xA;&#xA;model = ParlerTTSForConditionalGeneration.from_pretrained(&#34;parler-tts/parler_tts_mini_v0.1&#34;).to(device)&#xA;tokenizer = AutoTokenizer.from_pretrained(&#34;parler-tts/parler_tts_mini_v0.1&#34;)&#xA;&#xA;prompt = &#34;Hey, how are you doing today?&#34;&#xA;description = &#34;A female speaker with a slightly low-pitched voice delivers her words quite expressively, in a very confined sounding environment with clear audio quality. She speaks very fast.&#34;&#xA;&#xA;input_ids = tokenizer(description, return_tensors=&#34;pt&#34;).input_ids.to(device)&#xA;prompt_input_ids = tokenizer(prompt, return_tensors=&#34;pt&#34;).input_ids.to(device)&#xA;&#xA;generation = model.generate(input_ids=input_ids, prompt_input_ids=prompt_input_ids)&#xA;audio_arr = generation.cpu().numpy().squeeze()&#xA;sf.write(&#34;parler_tts_out.wav&#34;, audio_arr, model.config.sampling_rate)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/huggingface/parler-tts/assets/52246514/251e2488-fe6e-42c1-81cd-814c5b7795b0&#34;&gt;https://github.com/huggingface/parler-tts/assets/52246514/251e2488-fe6e-42c1-81cd-814c5b7795b0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Training&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/huggingface/parler-tts/main/training/&#34;&gt;training folder&lt;/a&gt; contains all the information to train or fine-tune your own Parler-TTS model. It consists of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/huggingface/parler-tts/main/training/README.md#1-architecture&#34;&gt;1. An introduction to the Parler-TTS architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/huggingface/parler-tts/main/training/README.md#2-getting-started&#34;&gt;2. The first steps to get started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/huggingface/parler-tts/main/training/README.md#3-training&#34;&gt;3. A training guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] &lt;strong&gt;TL;DR:&lt;/strong&gt; After having followed the &lt;a href=&#34;https://raw.githubusercontent.com/huggingface/parler-tts/main/training/README.md#requirements&#34;&gt;installation steps&lt;/a&gt;, you can reproduce the Parler-TTS Mini v0.1 training recipe with the following command line:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;accelerate launch ./training/run_parler_tts_training.py ./helpers/training_configs/starting_point_0.01.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;This library builds on top of a number of open-source giants, to whom we&#39;d like to extend our warmest thanks for providing these tools!&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dan Lyth and Simon King, from Stability AI and Edinburgh University respectively, for publishing such a promising and clear research paper: &lt;a href=&#34;https://arxiv.org/abs/2402.01912&#34;&gt;Natural language guidance of high-fidelity text-to-speech with synthetic annotations&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;the many libraries used, namely &lt;a href=&#34;https://huggingface.co/docs/datasets/v2.17.0/en/index&#34;&gt;🤗 datasets&lt;/a&gt;, &lt;a href=&#34;https://huggingface.co/docs/accelerate/en/index&#34;&gt;🤗 accelerate&lt;/a&gt;, &lt;a href=&#34;https://github.com/jitsi/jiwer&#34;&gt;jiwer&lt;/a&gt;, &lt;a href=&#34;https://wandb.ai/&#34;&gt;wandb&lt;/a&gt;, and &lt;a href=&#34;https://huggingface.co/docs/transformers/index&#34;&gt;🤗 transformers&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Descript for the &lt;a href=&#34;https://github.com/descriptinc/descript-audio-codec&#34;&gt;DAC codec model&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hugging Face 🤗 for providing compute resources and time to explore!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you found this repository useful, please consider citing this work and also the original Stability AI paper:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{lacombe-etal-2024-parler-tts,&#xA;  author = {Yoach Lacombe and Vaibhav Srivastav and Sanchit Gandhi},&#xA;  title = {Parler-TTS},&#xA;  year = {2024},&#xA;  publisher = {GitHub},&#xA;  journal = {GitHub repository},&#xA;  howpublished = {\url{https://github.com/huggingface/parler-tts}}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{lyth2024natural,&#xA;      title={Natural language guidance of high-fidelity text-to-speech with synthetic annotations},&#xA;      author={Dan Lyth and Simon King},&#xA;      year={2024},&#xA;      eprint={2402.01912},&#xA;      archivePrefix={arXiv},&#xA;      primaryClass={cs.SD}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome, as the project offers many possibilities for improvement and exploration.&lt;/p&gt; &#xA;&lt;p&gt;Namely, we&#39;re looking at ways to improve both quality and speed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Datasets: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Train on more data&lt;/li&gt; &#xA;   &lt;li&gt;Add more features such as accents&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Training: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add PEFT compatibility to do Lora fine-tuning.&lt;/li&gt; &#xA;   &lt;li&gt;Add possibility to train without description column.&lt;/li&gt; &#xA;   &lt;li&gt;Add notebook training.&lt;/li&gt; &#xA;   &lt;li&gt;Explore multilingual training.&lt;/li&gt; &#xA;   &lt;li&gt;Explore mono-speaker finetuning.&lt;/li&gt; &#xA;   &lt;li&gt;Explore more architectures.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Optimization: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Compilation and static cache&lt;/li&gt; &#xA;   &lt;li&gt;Support to FA2 and SDPA&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Evaluation: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add more evaluation metrics&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>1Panel-dev/MaxKB</title>
    <updated>2024-04-13T01:30:47Z</updated>
    <id>tag:github.com,2024-04-13:/1Panel-dev/MaxKB</id>
    <link href="https://github.com/1Panel-dev/MaxKB" rel="alternate"></link>
    <summary type="html">&lt;p&gt;💬 基于 LLM 大语言模型的知识库问答系统。开箱即用，支持快速嵌入到第三方业务系统，1Panel 官方出品。&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/1Panel-dev/maxkb/assets/52996290/c0694996-0eed-40d8-b369-322bf2a380bf&#34; alt=&#34;MaxKB&#34; width=&#34;300&#34;&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;基于 LLM 大语言模型的知识库问答系统&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.gnu.org/licenses/old-licenses/gpl-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/1Panel-dev/maxkb?color=%231890FF&#34; alt=&#34;License: GPL v3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codacy.com/gh/1Panel-dev/maxkb?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=1Panel-dev/maxkb&amp;amp;utm_campaign=Badge_Grade_Dashboard&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/da67574fd82b473992781d1386b937ef&#34; alt=&#34;Codacy&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/1Panel-dev/maxkb/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/1Panel-dev/maxkb&#34; alt=&#34;Latest release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/1Panel-dev/maxkb&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/1Panel-dev/maxkb?color=%231890FF&amp;amp;style=flat-square&#34; alt=&#34;Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/1panel/maxkb&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/1panel/maxkb?label=downloads&#34; alt=&#34;Download&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;MaxKB 是一款基于 LLM 大语言模型的知识库问答系统。MaxKB = Max Knowledge Base，旨在成为企业的最强大脑。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;开箱即用&lt;/strong&gt;：支持直接上传文档、自动爬取在线文档，支持文本自动拆分、向量化，智能问答交互体验好；&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;无缝嵌入&lt;/strong&gt;：支持零编码快速嵌入到第三方业务系统；&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;多模型支持&lt;/strong&gt;：支持对接主流的大模型，包括本地私有大模型（如 Llama 2）、Azure OpenAI 和百度千帆大模型等。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d --name=maxkb -p 8080:8080 -v ~/.maxkb:/var/lib/postgresql/data 1panel/maxkb&#xA;&#xA;# 用户名: admin&#xA;# 密码: MaxKB@123..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;你也可以通过 &lt;a href=&#34;https://apps.fit2cloud.com/1panel&#34;&gt;1Panel 应用商店&lt;/a&gt; 快速部署 MaxKB + Ollama + Llama 2，30 分钟内即可上线基于本地大模型的知识库问答系统，并嵌入到第三方业务系统中。&lt;/p&gt; &#xA;&lt;p&gt;你也可以在线体验：&lt;a href=&#34;https://dataease.io/docs/v2/&#34;&gt;DataEase 小助手&lt;/a&gt;，它是基于 MaxKB 搭建的智能问答系统，已经嵌入到 DataEase 产品及在线文档中。&lt;/p&gt; &#xA;&lt;p&gt;如你有更多问题，可以查看使用手册，或者通过论坛与我们交流。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/1Panel-dev/MaxKB/wiki/1-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2&#34;&gt;使用手册&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bbs.fit2cloud.com/c/mk/11&#34;&gt;论坛求助&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1BE421M7YM/&#34;&gt;演示视频&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;UI 展示&lt;/h2&gt; &#xA;&lt;table style=&#34;border-collapse: collapse; border: 1px solid black;&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;padding: 5px;background-color:#fff;&#34;&gt;&lt;img src=&#34;https://github.com/1Panel-dev/MaxKB/assets/80892890/2b893a25-ae46-48da-b6a1-61d23015565e&#34; alt=&#34;MaxKB Demo1&#34;&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;padding: 5px;background-color:#fff;&#34;&gt;&lt;img src=&#34;https://github.com/1Panel-dev/MaxKB/assets/80892890/3e50e7ff-cdc4-4a37-b430-d84975f11d4e&#34; alt=&#34;MaxKB Demo2&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;padding: 5px;background-color:#fff;&#34;&gt;&lt;img src=&#34;https://github.com/1Panel-dev/MaxKB/assets/80892890/dfdcc03f-ef36-4f75-bb82-797c0f9da1ad&#34; alt=&#34;MaxKB Demo3&#34;&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;padding: 5px;background-color:#fff;&#34;&gt;&lt;img src=&#34;https://github.com/1Panel-dev/MaxKB/assets/80892890/884a9db1-3f93-4013-bc8f-a3f0dbcfeb2f&#34; alt=&#34;MaxKB Demo4&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;技术栈&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;前端：&lt;a href=&#34;https://cn.vuejs.org/&#34;&gt;Vue.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;后端：&lt;a href=&#34;https://www.djangoproject.com/&#34;&gt;Python / Django&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Langchain：&lt;a href=&#34;https://www.langchain.com/&#34;&gt;Langchain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;向量数据库：&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL / pgvector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;大模型：Azure OpenAI、百度千帆大模型、&lt;a href=&#34;https://github.com/ollama/ollama&#34;&gt;Ollama&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#1Panel-dev/MaxKB&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=1Panel-dev/MaxKB&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2014-2024 飞致云 FIT2CLOUD, All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under The GNU General Public License version 3 (GPLv3) (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.html&#34;&gt;https://www.gnu.org/licenses/gpl-3.0.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PKU-YuanGroup/MagicTime</title>
    <updated>2024-04-13T01:30:47Z</updated>
    <id>tag:github.com,2024-04-13:/PKU-YuanGroup/MagicTime</id>
    <link href="https://github.com/PKU-YuanGroup/MagicTime" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MagicTime: Time-lapse Video Generation Models as Metamorphic Simulators&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/magictime_logo.png&#34; width=&#34;150px&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt; &lt;a href=&#34;https://arxiv.org/abs/2404.05014&#34;&gt;MagicTime: Time-lapse Video Generation Models &lt;/a&gt;&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2404.05014&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://arxiv.org/abs/2404.05014&#34;&gt;as Metamorphic Simulators&lt;/a&gt;&lt;/p&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5 align=&#34;center&#34;&gt; If you like our project, please give us a star ⭐ on GitHub for the latest update. &lt;/h5&gt; &#xA;&lt;h5 align=&#34;center&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://huggingface.co/spaces/BestWishYsh/MagicTime?logs=build&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97-Open%20In%20Spaces-blue.svg?sanitize=true&#34; alt=&#34;hf_space&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://arxiv.org/abs/2404.05014&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Arxiv-2404.05014-b31b1b.svg?logo=arXiv&#34; alt=&#34;arXiv&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pku-yuangroup.github.io/MagicTime/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Project-%3CWebsite%3E-blue.svg?sanitize=true&#34; alt=&#34;Home Page&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://drive.google.com/drive/folders/1WsomdkmSp3ql3ImcNsmzFuSQ9Qukuyr8?usp=sharing&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Dataset-%3CGoogle%3E-green&#34; alt=&#34;Dataset&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/_akhaliq/status/1777538468043792473&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Twitter@AK%20-black?logo=twitter&amp;amp;logoColor=1D9BF0&#34; alt=&#34;zhihu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/vhjf36495872/status/1777525817087553827?s=61&amp;amp;t=r2HzCsU2AnJKbR8yKSprKw&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Twitter@Jinfa%20Huang%20-black?logo=twitter&amp;amp;logoColor=1D9BF0&#34; alt=&#34;zhihu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://zenodo.org/doi/10.5281/zenodo.10960665&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/783303222.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PKU-YuanGroup/MagicTime/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-yellow&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/PKU-YuanGroup/MagicTime&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/p&gt; &lt;/h5&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA;  This repository is the official implementation of MagicTime, a metamorphic video generation pipeline based on the given prompts. The main idea is to enhance the capacity of video generation models to accurately depict the real world through our proposed methods and dataset. &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;details open&gt;&#xA; &lt;summary&gt;💡 We also have other video generation project that may interest you ✨. &lt;/summary&gt;&#xA; &lt;p&gt; &#xA;  &lt;!--  may --&gt; &lt;/p&gt;&#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://github.com/PKU-YuanGroup/Open-Sora-Plan&#34;&gt;&lt;strong&gt;Open-Sora-Plan&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; PKU-Yuan Lab and Tuzhan AI etc. &lt;br&gt; &lt;a href=&#34;https://github.com/PKU-YuanGroup/Open-Sora-Plan&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Github-black?logo=github&#34; alt=&#34;github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PKU-YuanGroup/Open-Sora-Plan&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/PKU-YuanGroup/Open-Sora-Plan.svg?style=social&#34; alt=&#34;github&#34;&gt;&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;📣 News&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;⏳⏳⏳ Training a stronger model with the support of &lt;a href=&#34;https://github.com/PKU-YuanGroup/Open-Sora-Plan&#34;&gt;Open-Sora-Plan&lt;/a&gt; (e.g 257 x 512 × 512).&lt;/li&gt; &#xA; &lt;li&gt;⏳⏳⏳ Release the training code of MagicTime.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;[2024.04.11]&lt;/code&gt; 🔥 We release the HuggingFace Space of MagicTime, you can &lt;a href=&#34;https://huggingface.co/spaces/BestWishYsh/MagicTime?logs=build&#34;&gt;click&lt;/a&gt; here to have a try.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;[2024.04.10]&lt;/code&gt; 🔥 We release the inference code and model weight of MagicTime.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;[2024.04.09]&lt;/code&gt; 🔥 We release the arXiv paper for MagicTime, and you can click &lt;a href=&#34;https://arxiv.org/abs/2404.05014&#34;&gt;here&lt;/a&gt; to see more details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;[2024.04.08]&lt;/code&gt; 🔥 We released the subset of ChronoMagic dataset used to train MagicTime. The dataset includes 2,265 metamorphic video-text pairs and can be downloaded at &lt;a href=&#34;https://drive.google.com/drive/folders/1WsomdkmSp3ql3ImcNsmzFuSQ9Qukuyr8?usp=sharing&#34;&gt;Google Drive&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;[2024.04.08]&lt;/code&gt; 🔥 &lt;strong&gt;All codes &amp;amp; datasets&lt;/strong&gt; are coming soon! Stay tuned 👀!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;😮 Highlights&lt;/h2&gt; &#xA;&lt;p&gt;MagicTime shows excellent performance in &lt;strong&gt;metamorphic video generation&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Metamorphic Videos vs. General Videos&lt;/h3&gt; &#xA;&lt;p&gt;Compared to general videos, metamorphic videos contain physical knowledge, long persistence, and strong variation, making them difficult to generate. We show compressed .gif on github, which loses some quality. The general videos are generated by the &lt;a href=&#34;https://github.com/guoyww/AnimateDiff&#34;&gt;Animatediff&lt;/a&gt; and &lt;strong&gt;MagicTime&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     Type&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;Bean sprouts grow and mature from seeds&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;[...] construction in a Minecraft virtual environment&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;Cupcakes baking in an oven [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;[...] transitioning from a tightly closed bud to a fully bloomed state [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;General Videos&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/C_0_0.gif&#34; alt=&#34;MakeLongVideo&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/C_0_1.gif&#34; alt=&#34;MakeLongVideo&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/C_0_2.gif&#34; alt=&#34;MakeLongVideo&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/C_0_3.gif&#34; alt=&#34;MakeLongVideo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Metamorphic Videos&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/C_1_0.gif&#34; alt=&#34;ModelScopeT2V&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/C_1_1.gif&#34; alt=&#34;ModelScopeT2V&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/C_1_2.gif&#34; alt=&#34;ModelScopeT2V&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/C_1_3.gif&#34; alt=&#34;ModelScopeT2V&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Gallery&lt;/h3&gt; &#xA;&lt;p&gt;We showcase some metamorphic videos generated by &lt;strong&gt;MagicTime&lt;/strong&gt;, &lt;a href=&#34;https://github.com/xuduo35/MakeLongVideo&#34;&gt;MakeLongVideo&lt;/a&gt;, &lt;a href=&#34;https://github.com/modelscope&#34;&gt;ModelScopeT2V&lt;/a&gt;, &lt;a href=&#34;https://github.com/AILab-CVC/VideoCrafter?tab=readme-ov-file&#34;&gt;VideoCrafter&lt;/a&gt;, &lt;a href=&#34;https://huggingface.co/cerspense/zeroscope_v2_576w&#34;&gt;ZeroScope&lt;/a&gt;, &lt;a href=&#34;https://github.com/Vchitect/LaVie&#34;&gt;LaVie&lt;/a&gt;, &lt;a href=&#34;https://github.com/Picsart-AI-Research/Text2Video-Zero&#34;&gt;T2V-Zero&lt;/a&gt;, &lt;a href=&#34;https://github.com/Vchitect/Latte&#34;&gt;Latte&lt;/a&gt; and &lt;a href=&#34;https://github.com/guoyww/AnimateDiff&#34;&gt;Animatediff&lt;/a&gt; below.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     Method&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;cherry blossoms transitioning [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;dough balls baking process [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;an ice cube is melting [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;a simple modern house&#39;s construction [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MakeLongVideo&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_0_0.gif&#34; alt=&#34;MakeLongVideo&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_0_1.gif&#34; alt=&#34;MakeLongVideo&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_0_2.gif&#34; alt=&#34;MakeLongVideo&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_0_3.gif&#34; alt=&#34;MakeLongVideo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ModelScopeT2V&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_1_0.gif&#34; alt=&#34;ModelScopeT2V&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_1_1.gif&#34; alt=&#34;ModelScopeT2V&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_1_2.gif&#34; alt=&#34;ModelScopeT2V&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_1_3.gif&#34; alt=&#34;ModelScopeT2V&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VideoCrafter&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_2_0.gif&#34; alt=&#34;VideoCrafter&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_2_1.gif&#34; alt=&#34;VideoCrafter&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_2_2.gif&#34; alt=&#34;VideoCrafter&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_2_3.gif&#34; alt=&#34;VideoCrafter&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ZeroScope&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_3_0.gif&#34; alt=&#34;ZeroScope&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_3_1.gif&#34; alt=&#34;ZeroScope&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_3_2.gif&#34; alt=&#34;ZeroScope&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_3_3.gif&#34; alt=&#34;ZeroScope&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LaVie&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_4_0.gif&#34; alt=&#34;LaVie&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_4_1.gif&#34; alt=&#34;LaVie&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_4_2.gif&#34; alt=&#34;LaVie&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_4_3.gif&#34; alt=&#34;LaVie&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;T2V-Zero&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_5_0.gif&#34; alt=&#34;T2V-Zero&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_5_1.gif&#34; alt=&#34;T2V-Zero&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_5_2.gif&#34; alt=&#34;T2V-Zero&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_5_3.gif&#34; alt=&#34;T2V-Zero&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Latte&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_6_0.gif&#34; alt=&#34;Latte&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_6_1.gif&#34; alt=&#34;Latte&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_6_2.gif&#34; alt=&#34;Latte&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_6_3.gif&#34; alt=&#34;Latte&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Animatediff&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_7_0.gif&#34; alt=&#34;Animatediff&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_7_1.gif&#34; alt=&#34;Animatediff&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_7_2.gif&#34; alt=&#34;Animatediff&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_7_3.gif&#34; alt=&#34;Animatediff&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ours&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_8_0.gif&#34; alt=&#34;Ours&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_8_1.gif&#34; alt=&#34;Ours&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_8_2.gif&#34; alt=&#34;Ours&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/A_8_3.gif&#34; alt=&#34;Ours&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;We show more metamorphic videos generated by &lt;strong&gt;MagicTime&lt;/strong&gt; with the help of &lt;a href=&#34;https://civitai.com/models/4201/realistic-vision-v20&#34;&gt;Realistic&lt;/a&gt;, &lt;a href=&#34;https://civitai.com/models/30240/toonyou&#34;&gt;ToonYou&lt;/a&gt; and &lt;a href=&#34;https://civitai.com/models/66347/rcnz-cartoon-3d&#34;&gt;RcnzCartoon&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/B_0_0.gif&#34; alt=&#34;Realistic&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/B_0_1.gif&#34; alt=&#34;Realistic&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/B_0_2.gif&#34; alt=&#34;Realistic&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;[...] bean sprouts grow and mature from seeds&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;dough [...] swells and browns in the oven [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;the construction [...] in Minecraft [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/B_1_0.gif&#34; alt=&#34;RcnzCartoon&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/B_1_1.gif&#34; alt=&#34;RcnzCartoon&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/B_1_2.gif&#34; alt=&#34;RcnzCartoon&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;a bud transforms into a yellow flower&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;time-lapse of a plant germinating [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;[...] a modern house being constructed in Minecraft [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/B_2_0.gif&#34; alt=&#34;ToonYou&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/B_2_1.gif&#34; alt=&#34;ToonYou&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/B_2_2.gif&#34; alt=&#34;ToonYou&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;an ice cube is melting&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;bean plant sprouts grow and mature from the soil&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;time-lapse of delicate pink plum blossoms [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;Prompts are trimmed for display, see &lt;a href=&#34;https://github.com/PKU-YuanGroup/MagicTime/raw/main/__assets__/promtp_unet.txt&#34;&gt;here&lt;/a&gt; for full prompts.&lt;/p&gt; &#xA;&lt;h3&gt;Integrate into DiT-based Architecture&lt;/h3&gt; &#xA;&lt;p&gt;The mission of this project is to help reproduce Sora and provide high-quality video-text data and data annotation pipelines, to support &lt;a href=&#34;https://github.com/PKU-YuanGroup/Open-Sora-Plan&#34;&gt;Open-Sora-Plan&lt;/a&gt; or other DiT-based T2V models. To this end, we take an initial step to integrate our MagicTime scheme into the DiT-based Framework. Specifically, our method supports the Open-Sora-Plan v1.0.0 for fine-tuning. We first scale up with additional metamorphic landscape time-lapse videos in the same annotation framework to get the ChronoMagic-Landscape dataset. Then, we fine-tune the Open-Sora-Plan v1.0.0 with the ChronoMagic-Landscape dataset to get the MagicTime-DiT model. The results are as follows (&lt;strong&gt;257×512×512 (10s)&lt;/strong&gt;):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/D_0_0.gif&#34; alt=&#34;OpenSora&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/D_0_1.gif&#34; alt=&#34;OpenSora&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/D_0_2.gif&#34; alt=&#34;OpenSora&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/D_0_3.gif&#34; alt=&#34;OpenSora&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;Time-lapse of a coastal landscape [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;Display the serene beauty of twilight [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;Sunrise Splendor: Capture the breathtaking moment [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;Nightfall Elegance: Embrace the tranquil beauty [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/D_0_4.gif&#34; alt=&#34;OpenSora&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/D_0_5.gif&#34; alt=&#34;OpenSora&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/D_0_6.gif&#34; alt=&#34;OpenSora&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PKU-YuanGroup/MagicTime/main/__assets__/videos/D_0_7.gif&#34; alt=&#34;OpenSora&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;The sun descending below the horizon [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;[...] daylight fades into the embrace of the night [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;Time-lapse of the dynamic formations of clouds [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;1&#34;&gt;&#xA;    &lt;center&gt;&#xA;     &#34;Capture the dynamic formations of clouds [...]&#34;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;Prompts are trimmed for display, see &lt;a href=&#34;https://github.com/PKU-YuanGroup/MagicTime/raw/main/__assets__/promtp_opensora.txt&#34;&gt;here&lt;/a&gt; for full prompts.&lt;/p&gt; &#xA;&lt;h2&gt;🤗 Demo&lt;/h2&gt; &#xA;&lt;h3&gt;Gradio Web UI&lt;/h3&gt; &#xA;&lt;p&gt;Highly recommend trying out our web demo by the following command, which incorporates all features currently supported by MagicTime. We also provide &lt;a href=&#34;https://huggingface.co/spaces/BestWishYsh/MagicTime?logs=build&#34;&gt;online demo&lt;/a&gt; in Huggingface Spaces.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python app.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CLI Inference&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# For Realistic&#xA;python inference_magictime.py --config sample_configs/RealisticVision.yaml --human&#xA;&#xA;# or you can directly run the .sh&#xA;sh inference_cli.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;warning: It is worth noting that even if we use the same seed and prompt but we change a machine, the results will be different.&lt;/p&gt; &#xA;&lt;h2&gt;⚙️ Requirements and Installation&lt;/h2&gt; &#xA;&lt;p&gt;We recommend the requirements as follows.&lt;/p&gt; &#xA;&lt;h3&gt;Environment&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/PKU-YuanGroup/MagicTime.git&#xA;cd MagicTime&#xA;conda create -n magictime python=3.10.13&#xA;conda activate magictime&#xA;pip install -r requirement.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Download Base Model and Dreambooth&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh prepare_weights/down_base_model.sh&#xA;sh prepare_weights/down_dreambooth.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Prepare MagicTime Module&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh prepare_weights/down_magictime_module.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🗝️ Training &amp;amp; Inference&lt;/h2&gt; &#xA;&lt;p&gt;The training code is coming soon! For inference, some example are shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# For Realistic&#xA;python inference_magictime.py --config sample_configs/RealisticVision.yaml&#xA;# For ToonYou&#xA;python inference_magictime.py --config sample_configs/ToonYou.yaml&#xA;# For RcnzCartoon&#xA;python inference_magictime.py --config sample_configs/RcnzCartoon.yaml&#xA;# or you can directly run the .sh&#xA;sh inference.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Community Contributions&lt;/h2&gt; &#xA;&lt;p&gt;We found some plugins created by community developers. Thanks for their efforts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ComfyUI Extension &lt;a href=&#34;https://github.com/kijai/ComfyUI-MagicTimeWrapper&#34;&gt;ComfyUI-MagicTimeWrapper&lt;/a&gt; (by &lt;a href=&#34;https://github.com/kijai&#34;&gt;@Jukka Seppänen&lt;/a&gt;). And you can click &lt;a href=&#34;https://www.bilibili.com/video/BV1wx421U7Gn/?spm_id_from=333.1007.top_right_bar_window_history.content.click&#34;&gt;here&lt;/a&gt; to view the installation tutorial.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you find related work, please let us know.&lt;/p&gt; &#xA;&lt;h2&gt;🐳 ChronoMagic Dataset&lt;/h2&gt; &#xA;&lt;p&gt;ChronoMagic with 2265 metamorphic time-lapse videos, each accompanied by a detailed caption. We released the subset of ChronoMagic used to train MagicTime. The dataset can be downloaded at &lt;a href=&#34;https://drive.google.com/drive/folders/1WsomdkmSp3ql3ImcNsmzFuSQ9Qukuyr8?usp=sharing&#34;&gt;Google Drive&lt;/a&gt;. Some samples can be found on our Project Page.&lt;/p&gt; &#xA;&lt;h2&gt;👍 Acknowledgement&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/guoyww/AnimateDiff/tree/main&#34;&gt;Animatediff&lt;/a&gt; The codebase we built upon and it is a strong U-Net-based text-to-video generation model.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PKU-YuanGroup/Open-Sora-Plan&#34;&gt;Open-Sora-Plan&lt;/a&gt; The codebase we built upon and it is a simple and scalable DiT-based text-to-video generation repo, to reproduce &lt;a href=&#34;https://openai.com/sora&#34;&gt;Sora&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔒 License&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The majority of this project is released under the Apache 2.0 license as found in the &lt;a href=&#34;https://github.com/PKU-YuanGroup/MagicTime/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;The service is a research preview. Please contact us if you find any potential violations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;✏️ Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find our paper and code useful in your research, please consider giving a star &lt;span&gt;⭐&lt;/span&gt; and citation &lt;span&gt;📝&lt;/span&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-BibTeX&#34;&gt;@misc{yuan2024magictime,&#xA;      title={MagicTime: Time-lapse Video Generation Models as Metamorphic Simulators}, &#xA;      author={Shenghai Yuan and Jinfa Huang and Yujun Shi and Yongqi Xu and Ruijie Zhu and Bin Lin and Xinhua Cheng and Li Yuan and Jiebo Luo},&#xA;      year={2024},&#xA;      eprint={2404.05014},&#xA;      archivePrefix={arXiv},&#xA;      primaryClass={cs.CV}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🤝 Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/PKU-YuanGroup/MagicTime/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=PKU-YuanGroup/MagicTime&amp;amp;anon=true&#34;&gt; &lt;/a&gt;</summary>
  </entry>
</feed>