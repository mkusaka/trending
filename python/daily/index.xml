<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-16T01:33:44Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mikf/gallery-dl</title>
    <updated>2022-08-16T01:33:44Z</updated>
    <id>tag:github.com,2022-08-16:/mikf/gallery-dl</id>
    <link href="https://github.com/mikf/gallery-dl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Command-line program to download image galleries and collections from several image hosting sites&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;========== gallery-dl&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;gallery-dl&lt;/em&gt; is a command-line program to download image galleries and collections from several image hosting sites (see &lt;code&gt;Supported Sites&lt;/code&gt;&lt;em&gt;). It is a cross-platform tool with many configuration options and powerful &lt;code&gt;filenaming capabilities &amp;lt;Formatting_&amp;gt;&lt;/code&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;|pypi| |build| |gitter|&lt;/p&gt; &#xA;&lt;p&gt;.. contents::&lt;/p&gt; &#xA;&lt;h1&gt;Dependencies&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python_ 3.4+&lt;/li&gt; &#xA; &lt;li&gt;Requests_&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Optional&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FFmpeg_: Pixiv Ugoira to WebM conversion&lt;/li&gt; &#xA; &lt;li&gt;yt-dlp_ or youtube-dl_: Video downloads&lt;/li&gt; &#xA; &lt;li&gt;PySocks_: SOCKS proxy support&lt;/li&gt; &#xA; &lt;li&gt;brotli_ or brotlicffi_: Brotli compression support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;Pip&lt;/h2&gt; &#xA;&lt;p&gt;The stable releases of &lt;em&gt;gallery-dl&lt;/em&gt; are distributed on PyPI_ and can be easily installed or upgraded using pip_:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 -m pip install -U gallery-dl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Installing the latest dev version directly from GitHub can be done with pip_ as well:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 -m pip install -U -I --no-deps --no-cache-dir https://github.com/mikf/gallery-dl/archive/master.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Windows users should use :code:&lt;code&gt;py -3&lt;/code&gt; instead of :code:&lt;code&gt;python3&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is advised to use the latest version of pip_, including the essential packages :code:&lt;code&gt;setuptools&lt;/code&gt; and :code:&lt;code&gt;wheel&lt;/code&gt;. To ensure these packages are up-to-date, run&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 -m pip install --upgrade pip setuptools wheel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Standalone Executable&lt;/h2&gt; &#xA;&lt;p&gt;Prebuilt executable files with a Python interpreter and required Python packages included are available for&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Windows &amp;lt;https://github.com/mikf/gallery-dl/releases/download/v1.22.4/gallery-dl.exe&amp;gt;&lt;/code&gt;__&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Linux &amp;lt;https://github.com/mikf/gallery-dl/releases/download/v1.22.4/gallery-dl.bin&amp;gt;&lt;/code&gt;__&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;| Executables build from the latest commit can be found at | &lt;a href=&#34;https://github.com/mikf/gallery-dl/actions/workflows/executables.yml&#34;&gt;https://github.com/mikf/gallery-dl/actions/workflows/executables.yml&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Snap&lt;/h2&gt; &#xA;&lt;p&gt;Linux users that are using a distro that is supported by Snapd_ can install &lt;em&gt;gallery-dl&lt;/em&gt; from the Snap Store:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;snap install gallery-dl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Chocolatey&lt;/h2&gt; &#xA;&lt;p&gt;Windows users that have Chocolatey_ installed can install &lt;em&gt;gallery-dl&lt;/em&gt; from the Chocolatey Community Packages repository:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: powershell&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;choco install gallery-dl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Scoop&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;gallery-dl&lt;/em&gt; is also available in the Scoop_ &#34;main&#34; bucket for Windows users:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: powershell&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;scoop install gallery-dl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;To use &lt;em&gt;gallery-dl&lt;/em&gt; simply call it with the URLs you wish to download images from:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gallery-dl [OPTION]... URL...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See also :code:&lt;code&gt;gallery-dl --help&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Download images; in this case from danbooru via tag search for &#39;bonocho&#39;:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gallery-dl &#34;https://danbooru.donmai.us/posts?tags=bonocho&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get the direct URL of an image from a site supporting authentication with username &amp;amp; password:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gallery-dl -g -u &#34;&amp;lt;username&amp;gt;&#34; -p &#34;&amp;lt;password&amp;gt;&#34; &#34;https://twitter.com/i/web/status/604341487988576256&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Filter manga chapters by language and chapter number:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gallery-dl --chapter-filter &#34;lang == &#39;fr&#39; and 10 &amp;lt;= chapter &amp;lt; 20&#34; &#34;https://mangadex.org/title/2354/&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;| Search a remote resource for URLs and download images from them: | (URLs for which no extractor can be found will be silently ignored)&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gallery-dl &#34;r:https://pastebin.com/raw/FLwrCYsT&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If a site&#39;s address is nonstandard for its extractor, you can prefix the URL with the extractor&#39;s name to force the use of a specific extractor:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gallery-dl &#34;tumblr:https://sometumblrblog.example&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Configuration&lt;/h1&gt; &#xA;&lt;p&gt;Configuration files for &lt;em&gt;gallery-dl&lt;/em&gt; use a JSON-based file format.&lt;/p&gt; &#xA;&lt;p&gt;| For a (more or less) complete example with options set to their default values, see gallery-dl.conf_. | For a configuration file example with more involved settings and options, see gallery-dl-example.conf_. | A list of all available configuration options and their descriptions can be found in configuration.rst_. |&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;gallery-dl&lt;/em&gt; searches for configuration files in the following places:&lt;/p&gt; &#xA;&lt;p&gt;Windows: * &lt;code&gt;%APPDATA%\gallery-dl\config.json&lt;/code&gt; * &lt;code&gt;%USERPROFILE%\gallery-dl\config.json&lt;/code&gt; * &lt;code&gt;%USERPROFILE%\gallery-dl.conf&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(``%USERPROFILE%`` usually refers to the user&#39;s home directory,&#xA;i.e. ``C:\Users\&amp;lt;username&amp;gt;\``)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Linux, macOS, etc.: * &lt;code&gt;/etc/gallery-dl.conf&lt;/code&gt; * &lt;code&gt;${XDG_CONFIG_HOME}/gallery-dl/config.json&lt;/code&gt; * &lt;code&gt;${HOME}/.config/gallery-dl/config.json&lt;/code&gt; * &lt;code&gt;${HOME}/.gallery-dl.conf&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Values in later configuration files will override previous ones.&lt;/p&gt; &#xA;&lt;p&gt;Command line options will override all related settings in the configuration file(s), e.g. using &lt;code&gt;--write-metadata&lt;/code&gt; will enable writing metadata using the default values for all &lt;code&gt;postprocessors.metadata.*&lt;/code&gt; settings, overriding any specific settings in configuration files.&lt;/p&gt; &#xA;&lt;h1&gt;Authentication&lt;/h1&gt; &#xA;&lt;h2&gt;Username &amp;amp; Password&lt;/h2&gt; &#xA;&lt;p&gt;Some extractors require you to provide valid login credentials in the form of a username &amp;amp; password pair. This is necessary for &lt;code&gt;nijie&lt;/code&gt; and optional for &lt;code&gt;aryion&lt;/code&gt;, &lt;code&gt;danbooru&lt;/code&gt;, &lt;code&gt;e621&lt;/code&gt;, &lt;code&gt;exhentai&lt;/code&gt;, &lt;code&gt;idolcomplex&lt;/code&gt;, &lt;code&gt;imgbb&lt;/code&gt;, &lt;code&gt;inkbunny&lt;/code&gt;, &lt;code&gt;instagram&lt;/code&gt;, &lt;code&gt;mangadex&lt;/code&gt;, &lt;code&gt;mangoxo&lt;/code&gt;, &lt;code&gt;pillowfort&lt;/code&gt;, &lt;code&gt;sankaku&lt;/code&gt;, &lt;code&gt;subscribestar&lt;/code&gt;, &lt;code&gt;tapas&lt;/code&gt;, &lt;code&gt;tsumino&lt;/code&gt;, &lt;code&gt;twitter&lt;/code&gt;, and &lt;code&gt;zerochan&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can set the necessary information in your configuration file (cf. gallery-dl.conf_)&lt;/p&gt; &#xA;&lt;p&gt;.. code:: json&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &#34;extractor&#34;: {&#xA;        &#34;twitter&#34;: {&#xA;            &#34;username&#34;: &#34;&amp;lt;username&amp;gt;&#34;,&#xA;            &#34;password&#34;: &#34;&amp;lt;password&amp;gt;&#34;&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or you can provide them directly via the :code:&lt;code&gt;-u/--username&lt;/code&gt; and :code:&lt;code&gt;-p/--password&lt;/code&gt; or via the :code:&lt;code&gt;-o/--option&lt;/code&gt; command-line options&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gallery-dl -u &amp;lt;username&amp;gt; -p &amp;lt;password&amp;gt; URL&#xA;gallery-dl -o username=&amp;lt;username&amp;gt; -o password=&amp;lt;password&amp;gt; URL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cookies&lt;/h2&gt; &#xA;&lt;p&gt;For sites where login with username &amp;amp; password is not possible due to CAPTCHA or similar, or has not been implemented yet, you can use the cookies from a browser login session and input them into &lt;em&gt;gallery-dl&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This can be done via the &lt;code&gt;cookies &amp;lt;https://github.com/mikf/gallery-dl/blob/master/docs/configuration.rst#extractorcookies&amp;gt;&lt;/code&gt;__ option in your configuration file by specifying&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;| the path to a Mozilla/Netscape format cookies.txt file exported by a browser addon | (e.g. &lt;code&gt;Get cookies.txt &amp;lt;https://chrome.google.com/webstore/detail/get-cookiestxt/bgaddhkoddajcdgocldbbfleckgcbcid/&amp;gt;&lt;/code&gt;__ for Chrome, &lt;code&gt;Export Cookies &amp;lt;https://addons.mozilla.org/en-US/firefox/addon/export-cookies-txt/&amp;gt;&lt;/code&gt;__ for Firefox)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;| a list of name-value pairs gathered from your browser&#39;s web developer tools | (in &lt;code&gt;Chrome &amp;lt;https://developers.google.com/web/tools/chrome-devtools/storage/cookies&amp;gt;&lt;/code&gt;&lt;strong&gt;, in &lt;code&gt;Firefox &amp;lt;https://developer.mozilla.org/en-US/docs/Tools/Storage_Inspector&amp;gt;&lt;/code&gt;&lt;/strong&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: json&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &#34;extractor&#34;: {&#xA;        &#34;instagram&#34;: {&#xA;            &#34;cookies&#34;: &#34;$HOME/path/to/cookies.txt&#34;&#xA;        },&#xA;        &#34;patreon&#34;: {&#xA;            &#34;cookies&#34;: {&#xA;                &#34;session_id&#34;: &#34;K1T57EKu19TR49C51CDjOJoXNQLF7VbdVOiBrC9ye0a&#34;&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also specify a cookies.txt file with the :code:&lt;code&gt;--cookies&lt;/code&gt; command-line option:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gallery-dl --cookies &#34;$HOME/path/to/cookies.txt&#34; URL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;OAuth&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;gallery-dl&lt;/em&gt; supports user authentication via OAuth_ for &lt;code&gt;deviantart&lt;/code&gt;, &lt;code&gt;flickr&lt;/code&gt;, &lt;code&gt;reddit&lt;/code&gt;, &lt;code&gt;smugmug&lt;/code&gt;, &lt;code&gt;tumblr&lt;/code&gt;, and &lt;code&gt;mastodon&lt;/code&gt; instances. This is mostly optional, but grants &lt;em&gt;gallery-dl&lt;/em&gt; the ability to issue requests on your account&#39;s behalf and enables it to access resources which would otherwise be unavailable to a public user.&lt;/p&gt; &#xA;&lt;p&gt;To link your account to &lt;em&gt;gallery-dl&lt;/em&gt;, start by invoking it with &lt;code&gt;oauth:&amp;lt;sitename&amp;gt;&lt;/code&gt; as an argument. For example:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gallery-dl oauth:flickr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will be sent to the site&#39;s authorization page and asked to grant read access to &lt;em&gt;gallery-dl&lt;/em&gt;. Authorize it and you will be shown one or more &#34;tokens&#34;, which should be added to your configuration file.&lt;/p&gt; &#xA;&lt;p&gt;To authenticate with a &lt;code&gt;mastodon&lt;/code&gt; instance, run &lt;em&gt;gallery-dl&lt;/em&gt; with &lt;code&gt;oauth:mastodon:&amp;lt;instance&amp;gt;&lt;/code&gt; as argument. For example:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gallery-dl oauth:mastodon:pawoo.net&#xA;gallery-dl oauth:mastodon:https://mastodon.social/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;.. _gallery-dl.conf: &lt;a href=&#34;https://github.com/mikf/gallery-dl/raw/master/docs/gallery-dl.conf&#34;&gt;https://github.com/mikf/gallery-dl/blob/master/docs/gallery-dl.conf&lt;/a&gt; .. _gallery-dl-example.conf: &lt;a href=&#34;https://github.com/mikf/gallery-dl/raw/master/docs/gallery-dl-example.conf&#34;&gt;https://github.com/mikf/gallery-dl/blob/master/docs/gallery-dl-example.conf&lt;/a&gt; .. _configuration.rst: &lt;a href=&#34;https://github.com/mikf/gallery-dl/raw/master/docs/configuration.rst&#34;&gt;https://github.com/mikf/gallery-dl/blob/master/docs/configuration.rst&lt;/a&gt; .. _Supported Sites: &lt;a href=&#34;https://github.com/mikf/gallery-dl/raw/master/docs/supportedsites.md&#34;&gt;https://github.com/mikf/gallery-dl/blob/master/docs/supportedsites.md&lt;/a&gt; .. _Formatting: &lt;a href=&#34;https://github.com/mikf/gallery-dl/raw/master/docs/formatting.md&#34;&gt;https://github.com/mikf/gallery-dl/blob/master/docs/formatting.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. _Python: &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;https://www.python.org/downloads/&lt;/a&gt; .. _PyPI: &lt;a href=&#34;https://pypi.org/&#34;&gt;https://pypi.org/&lt;/a&gt; .. _pip: &lt;a href=&#34;https://pip.pypa.io/en/stable/&#34;&gt;https://pip.pypa.io/en/stable/&lt;/a&gt; .. _Requests: &lt;a href=&#34;https://requests.readthedocs.io/en/master/&#34;&gt;https://requests.readthedocs.io/en/master/&lt;/a&gt; .. _FFmpeg: &lt;a href=&#34;https://www.ffmpeg.org/&#34;&gt;https://www.ffmpeg.org/&lt;/a&gt; .. _yt-dlp: &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp&#34;&gt;https://github.com/yt-dlp/yt-dlp&lt;/a&gt; .. _youtube-dl: &lt;a href=&#34;https://ytdl-org.github.io/youtube-dl/&#34;&gt;https://ytdl-org.github.io/youtube-dl/&lt;/a&gt; .. _PySocks: &lt;a href=&#34;https://pypi.org/project/PySocks/&#34;&gt;https://pypi.org/project/PySocks/&lt;/a&gt; .. _brotli: &lt;a href=&#34;https://github.com/google/brotli&#34;&gt;https://github.com/google/brotli&lt;/a&gt; .. _brotlicffi: &lt;a href=&#34;https://github.com/python-hyper/brotlicffi&#34;&gt;https://github.com/python-hyper/brotlicffi&lt;/a&gt; .. _pyOpenSSL: &lt;a href=&#34;https://pyopenssl.org/&#34;&gt;https://pyopenssl.org/&lt;/a&gt; .. _Snapd: &lt;a href=&#34;https://docs.snapcraft.io/installing-snapd&#34;&gt;https://docs.snapcraft.io/installing-snapd&lt;/a&gt; .. _OAuth: &lt;a href=&#34;https://en.wikipedia.org/wiki/OAuth&#34;&gt;https://en.wikipedia.org/wiki/OAuth&lt;/a&gt; .. _Chocolatey: &lt;a href=&#34;https://chocolatey.org/install&#34;&gt;https://chocolatey.org/install&lt;/a&gt; .. _Scoop: &lt;a href=&#34;https://scoop.sh&#34;&gt;https://scoop.sh&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |pypi| image:: &lt;a href=&#34;https://img.shields.io/pypi/v/gallery-dl.svg&#34;&gt;https://img.shields.io/pypi/v/gallery-dl.svg&lt;/a&gt; :target: &lt;a href=&#34;https://pypi.org/project/gallery-dl/&#34;&gt;https://pypi.org/project/gallery-dl/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |build| image:: &lt;a href=&#34;https://github.com/mikf/gallery-dl/workflows/tests/badge.svg&#34;&gt;https://github.com/mikf/gallery-dl/workflows/tests/badge.svg&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/mikf/gallery-dl/actions&#34;&gt;https://github.com/mikf/gallery-dl/actions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |gitter| image:: &lt;a href=&#34;https://badges.gitter.im/gallery-dl/main.svg&#34;&gt;https://badges.gitter.im/gallery-dl/main.svg&lt;/a&gt; :target: &lt;a href=&#34;https://gitter.im/gallery-dl/main&#34;&gt;https://gitter.im/gallery-dl/main&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AngelSecurityTeam/Cam-Hackers</title>
    <updated>2022-08-16T01:33:44Z</updated>
    <id>tag:github.com,2022-08-16:/AngelSecurityTeam/Cam-Hackers</id>
    <link href="https://github.com/AngelSecurityTeam/Cam-Hackers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hack Cameras CCTV FREE&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cam-Hackers&lt;/h1&gt; &#xA;&lt;p&gt;Hack Cameras&lt;/p&gt; &#xA;&lt;h3&gt; Mode Of Execution: &lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;apt-get install python3&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;apt-get install git&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;git clone &lt;a href=&#34;https://github.com/AngelSecurityTeam/Cam-Hackers&#34;&gt;https://github.com/AngelSecurityTeam/Cam-Hackers&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;cd Cam-Hackers&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;pip install -r requirements.txt&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;python3 cam-hackers.py&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;CAM-HACKERS&lt;/h1&gt; &#xA;&lt;img src=&#34;https://github.com/AngelSecurityTeam/Cam-Hackers/raw/master/camfoto.png&#34;&gt; &#xA;&lt;h1&gt;CAM-HACKERS&lt;/h1&gt; &#xA;&lt;img src=&#34;https://github.com/AngelSecurityTeam/Cam-Hackers/raw/master/camfoto2.png&#34;&gt; &#xA;&lt;h3&gt; Paypal donations: &lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.paypal.com/paypalme/AngelSecTeam&#34;&gt;https://www.paypal.com/paypalme/AngelSecTeam&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>q164749/weixin</title>
    <updated>2022-08-16T01:33:44Z</updated>
    <id>tag:github.com,2022-08-16:/q164749/weixin</id>
    <link href="https://github.com/q164749/weixin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;微信公众号推送模板消息&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;不懂看这里，文件下载直接使用&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-commandline&#34;&gt;链接：https://pan.baidu.com/s/1TzA8vGXNMcFKRTbtqdrKTw &#xA;提取码：mw5i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;前置条件&lt;/h2&gt; &#xA;&lt;p&gt;注册一个微信公众号&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login&#34;&gt;https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;扫码登录成功后，就可以生成微信公众测试号的appID和appsecret 扫描测试号二维码后会生成微信号，那个账号需要接收就扫码&lt;/p&gt; &#xA;&lt;h2&gt;新增测试模板&lt;/h2&gt; &#xA;&lt;p&gt;模板标题: 自定义，例如: 宝宝，晚上好!&lt;br&gt; 模板内容参考:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{{date.DATA}}  &#xA;城市：{{city.DATA}}  &#xA;天气：{{weather.DATA}}  &#xA;最低气温: {{min_temperature.DATA}}  &#xA;最高气温: {{max_temperature.DATA}}  &#xA;今天是我们恋爱的第{{love_day.DATA}}天  &#xA;距离小宝的生日还有{{birthday.DATA}}天  &#xA;&#xA;&#xA;{{note_en.DATA}}  &#xA;{{note_ch.DATA}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;安装python3&lt;/h2&gt; &#xA;&lt;p&gt;官方网站: &lt;a href=&#34;https://www.python.org/getit/&#34;&gt;https://www.python.org/getit/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;安装requests包&lt;/h2&gt; &#xA;&lt;p&gt;打开cmd，执行以下命令&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-commandline&#34;&gt;pip3 install requests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;修改配置文件&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;app_id&lt;/code&gt;: 测试号信息里的appID&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;app_secret&lt;/code&gt;: 测试信息里的appsecret&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;template_id&lt;/code&gt;: 模板消息接口里的模板ID&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;user&lt;/code&gt;: 测试号里的用户微信号&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;province&lt;/code&gt;: 所在省份&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;city&lt;/code&gt;: 所在城市&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;birthday&lt;/code&gt;: 生日&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;love_date&lt;/code&gt;: 纪念日&lt;/p&gt; &#xA;&lt;h2&gt;运行程序&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-commandline&#34;&gt;python3 main.py&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>