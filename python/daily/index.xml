<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-04T01:38:33Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cofactoryai/textbase</title>
    <updated>2023-09-04T01:38:33Z</updated>
    <id>tag:github.com,2023-09-04:/cofactoryai/textbase</id>
    <link href="https://github.com/cofactoryai/textbase" rel="alternate"></link>
    <summary type="html">&lt;p&gt;‚ú® Textbase is a simple framework for building AI chatbots. ‚ú®&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;img alt=&#34;Textbase python library&#34; src=&#34;https://raw.githubusercontent.com/cofactoryai/textbase/main/assets/logo.svg?sanitize=true&#34; width=&#34;352&#34; height=&#34;59&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA; &lt;/picture&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://docs.textbase.ai&#34;&gt; &lt;img alt=&#34;Documentation&#34; src=&#34;https://img.shields.io/website/http/huggingface.co/docs/transformers/index.svg?down_color=red&amp;amp;down_message=offline&amp;amp;up_message=online&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &lt;p&gt;‚ú® Textbase is a framework for building chatbots using NLP and ML. ‚ú®&lt;/p&gt; &lt;/h3&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &lt;a href=&#34;https://textbase.ai&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cofactoryai/textbase/main/assets/banner.png&#34;&gt;&lt;/a&gt; &lt;/h3&gt; &#xA;&lt;p&gt;Just implement the &lt;code&gt;on_message&lt;/code&gt; function in &lt;code&gt;main.py&lt;/code&gt; and Textbase will take care of the rest :)&lt;/p&gt; &#xA;&lt;p&gt;Since it is just Python you can use whatever models, libraries, vector databases and APIs you want.&lt;/p&gt; &#xA;&lt;p&gt;Coming soon:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://pypi.org/project/textbase-client/&#34;&gt;PyPI package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Easy web deployment via &lt;a href=&#34;https://raw.githubusercontent.com/cofactoryai/textbase/main/docs/deployment/deploy-from-cli&#34;&gt;textbase deploy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; SMS integration&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Native integration of other models (Claude, Llama, ...)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cofactoryai/textbase/main/assets/textbase-deploy.gif&#34; alt=&#34;Demo Deploy GIF&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Make sure you have &lt;code&gt;python version &amp;gt;=3.9.0&lt;/code&gt;, it&#39;s always good to follow the &lt;a href=&#34;https://docs.textbase.ai/get-started/installation&#34;&gt;docs&lt;/a&gt; üëàüèª&lt;/p&gt; &#xA;&lt;h3&gt;1. Through pip&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install textbase-client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Local installation&lt;/h3&gt; &#xA;&lt;p&gt;Clone the repository and install the dependencies using &lt;a href=&#34;https://python-poetry.org/&#34;&gt;Poetry&lt;/a&gt; (you might have to &lt;a href=&#34;https://python-poetry.org/docs/#installation&#34;&gt;install Poetry&lt;/a&gt; first).&lt;/p&gt; &#xA;&lt;p&gt;For proper details see &lt;a href=&#34;&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/cofactoryai/textbase&#xA;cd textbase&#xA;poetry shell&#xA;poetry install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Start development server&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you&#39;re using the default template, &lt;strong&gt;remember to set the OpenAI API key&lt;/strong&gt; in &lt;code&gt;main.py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Run the following command:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;if installed locally &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry run python textbase/textbase_cli.py test&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;if installed through pip &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;textbase-client test&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Response:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Path to the main.py file: examples/openai-bot/main.py # You can create a main.py by yourself and add that path here. NOTE: The path should not be in quotes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now go to the link in blue color which is shown on the CLI and you will be able to chat with your bot! &lt;img src=&#34;https://raw.githubusercontent.com/cofactoryai/textbase/main/assets/test_command.png&#34; alt=&#34;Local UI&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;Other commands have been mentioned in the documentaion website.&lt;/code&gt; &lt;a href=&#34;https://docs.textbase.ai/usage&#34;&gt;Have a look&lt;/a&gt; üòÉ!&lt;/h3&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Please open an issue or create a pull request.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>estebanpdl/osintgpt</title>
    <updated>2023-09-04T01:38:33Z</updated>
    <id>tag:github.com,2023-09-04:/estebanpdl/osintgpt</id>
    <link href="https://github.com/estebanpdl/osintgpt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source intelligence (OSINT) analysis tool leveraging GPT-powered embeddings and vector search engines for efficient data processing&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;&lt;strong&gt;OSINT GPT&lt;/strong&gt;&lt;/h1&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;osintgpt&lt;/code&gt; is a Python package for leveraging OpenAI&#39;s GPT models to analyze text data and perform tasks such as calculating text embeddings, searching for similar documents, and more. It is designed for use in open-source intelligence (OSINT) applications and research.&lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/estebanpdl/osintgpt/main/images/osintgpt.png&#34; alt=&#34;osintgpt osint gpt&#34; width=&#34;33%&#34; height=&#34;33%&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://GitHub.com/estebanpdl/osintgpt/network/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/estebanpdl/osintgpt.svg?style=social&amp;amp;label=Fork&amp;amp;maxAge=2592000&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/estebanpdl/osintgpt/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/estebanpdl/osintgpt?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/estebanpdl/osintgpt/raw/main/LICENCE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/estebanpdl&#34;&gt;&lt;img src=&#34;https://badges.frapsoft.com/os/v1/open-source.svg?v=103&#34; alt=&#34;Open Source&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.python.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Made%20with-Python-1f425f.svg?sanitize=true&#34; alt=&#34;Made-with-python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/estebanpdl&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/icon/twitter?icon=twitter&amp;amp;label&#34; alt=&#34;Twitter estebanpdl&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;You can install the &lt;code&gt;osintgpt&lt;/code&gt; package using pip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install osintgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Given the recent changes and updates, it is highly recommended to upgrade to the latest version of the package by executing the following command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -U osintgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will update your existing installation of &lt;code&gt;osintgpt&lt;/code&gt; to the most recent version available, ensuring you have access to the latest features and improvements.&lt;/p&gt; &#xA;&lt;p&gt;To access the package details and documentation on PyPI, please follow the link &lt;a href=&#34;https://pypi.org/project/osintgpt/&#34;&gt;osintgpt on PyPI&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;üöÄ &lt;strong&gt;Features&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;osintgpt&lt;/code&gt; Python package is designed to streamline the process of analyzing text data by leveraging OpenAI&#39;s GPT models. Here are some of the key features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Text Analysis&lt;/strong&gt;: Utilize OpenAI&#39;s GPT models to analyze text data, including calculating text embeddings and searching for similar documents.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Interactive Mode&lt;/strong&gt;: The package includes an interactive mode that allows users to communicate directly with the GPT model. The user can input a prompt and receive a response from the model, facilitating a more dynamic interaction.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Database Management&lt;/strong&gt;: The package integrates with SQLite database, enabling easy storage and retrieval of conversation data. The SQLDatabaseManager class creates tables, handles data insertion, and manages transactions.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please note that the development of &lt;code&gt;osintgpt&lt;/code&gt; is still in progress, and some features may still be refined or expanded.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;üíæ &lt;strong&gt;Vector store&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Qdrant&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;Qdrant&lt;/code&gt; class is an interface to Qdrant, a high-performance vector similarity search engine. It provides a variety of methods for connecting and interacting with a Qdrant server, such as creating, updating, and deleting collections, and managing vector embeddings along with their associated payloads.&lt;/p&gt; &#xA;&lt;h3&gt;Main Features:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Connection Management&lt;/strong&gt;: The class allows you to establish and manage connections to a Qdrant server. The server can be accessed remotely or locally.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Collection Management&lt;/strong&gt;: You can create, update, and delete collections in Qdrant. Each collection can contain multiple vectors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vector and Payload Management&lt;/strong&gt;: The class provides methods to add, update, and search for vector embeddings in collections. Each vector can optionally have an associated payload. The payload represents data associated with the vector, such as metadata or additional features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;High Efficiency&lt;/strong&gt;: With the ability to efficiently store and search embeddings, Qdrant can support high-dimensional data and large-scale databases.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Setting Up Qdrant:&lt;/h3&gt; &#xA;&lt;p&gt;To use the Qdrant class, you will need access to a Qdrant server, either remotely or locally:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Remote Server&lt;/strong&gt;: Register for a remote server on &lt;a href=&#34;https://cloud.qdrant.io/&#34;&gt;Qdrant Cloud&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Local Server&lt;/strong&gt;: Set up a local server following the instructions on the &lt;a href=&#34;https://qdrant.tech/documentation/quick_start/&#34;&gt;Qdrant Quick Start guide&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;osintgpt&lt;/code&gt; tool is provided for research purposes and intended to assist users in analyzing data from open-source intelligence (OSINT) tools more efficiently. It relies on third-party services, such as the OpenAI API, various database engines, and other resources that may have associated costs. By using this tool, you acknowledge that you are responsible for understanding and managing any costs related to these services. The creators and maintainers of &lt;code&gt;osintgpt&lt;/code&gt; are not liable for any expenses incurred or any misuse of the tool. Please use this tool responsibly and in compliance with all applicable laws and regulations.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt;</summary>
  </entry>
  <entry>
    <title>APT64/EternalHushFramework</title>
    <updated>2023-09-04T01:38:33Z</updated>
    <id>tag:github.com,2023-09-04:/APT64/EternalHushFramework</id>
    <link href="https://github.com/APT64/EternalHushFramework" rel="alternate"></link>
    <summary type="html">&lt;p&gt;EternalHush - new free advanced open-source c2 framework&lt;/p&gt;&lt;hr&gt;&lt;div id=&#34;header&#34; align=&#34;center&#34;&gt; &#xA; &lt;h1&gt; EternalHush Framework &lt;/h1&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/APT64/EternalHushFramework?label=Stars&#34; alt=&#34;Stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/1.0.0.0-red?label=Version&#34; alt=&#34;Version&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/windows-orange?label=Platfom&#34; alt=&#34;Platfom&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/MIT-green?label=License&#34; alt=&#34;License&#34;&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;About project&lt;/h2&gt; &#xA;&lt;p&gt;EternalHush Framework is a new open source project that is an advanced C&amp;amp;C framework. Designed specifically for Windows operating systems, it allows users to easily extend its functionality by developing plugins in Python. This is achieved through its own Python API. The EternalHush Framework also features an intuitive and user-friendly interface that simplifies the process of controlling and collecting data from infected operating systems.&lt;/p&gt; &#xA;&lt;img src=&#34;https://i.ibb.co/QbVpBY1/1.png&#34;&gt; &#xA;&lt;p&gt;I will continue this project until I get tired of updating it. This project is also being created as a universal platform for my next personal cybersecurity experiments for Windows. It is very important for me to get feedback, so please actively write what you want to add or improve in this project.&lt;/p&gt; &#xA;&lt;p&gt;The project is now in very early stages of development and is posted so that progress can be tracked.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;API for Python plugins&lt;/li&gt; &#xA; &lt;li&gt;Easy integration of external modules&lt;/li&gt; &#xA; &lt;li&gt;Intuitive GUI&lt;/li&gt; &#xA; &lt;li&gt;Automatic build script&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ git clone https://github.com/APT64/EternalHushFramework.git&#xA;$ cd EternalHushFramework&#xA;$ pip install -r requirements.txt&#xA;$ python compile.py build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This script will automatically download maven and cmake for building and build the project in the output directory &lt;code&gt;build&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cd build &amp;amp;&amp;amp; java -jar EternalHushFramework.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read more in &lt;a href=&#34;https://github.com/APT64/EternalHushFramework/wiki&#34;&gt;wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/APT64/EternalHushFramework/wiki&#34;&gt;Project wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Developers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/APT64&#34;&gt;APT64&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;EternalHush is distributed under the MIT License. CPython is distributed under the PSF License.&lt;/p&gt;</summary>
  </entry>
</feed>