<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-19T01:46:02Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Anil-matcha/ChatPDF</title>
    <updated>2023-06-19T01:46:02Z</updated>
    <id>tag:github.com,2023-06-19:/Anil-matcha/ChatPDF</id>
    <link href="https://github.com/Anil-matcha/ChatPDF" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chat with any PDF. Easily upload the PDF documents you&#39;d like to chat with. Instant answers. Ask questions, extract information, and summarize documents with AI. Sources included.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatPDF&lt;/h1&gt; &#xA;&lt;p&gt;Chat with any PDF.&lt;/p&gt; &#xA;&lt;p&gt;Easily upload the PDF documents you&#39;d like to chat with. Instant answers. Ask questions, extract information, and summarize documents with AI. Sources included.&lt;/p&gt; &#xA;&lt;p&gt;Create app like &lt;a href=&#34;https://www.chatpdf.com/&#34;&gt;ChatPDF&lt;/a&gt; or &lt;a href=&#34;https://pdf.ai/&#34;&gt;PDF.ai&lt;/a&gt; in less than 10 lines of code&lt;/p&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;p&gt;Code is up now, ‚≠ê (Star) the repo to receive updates&lt;/p&gt; &#xA;&lt;p&gt;Replit and streamlit version coming soon&lt;/p&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;https://twitter.com/matchaman11&#34;&gt;Anil Chandra Naidu Matcha&lt;/a&gt; on twitter for updates&lt;/p&gt; &#xA;&lt;p&gt;Subscribe to &lt;a href=&#34;https://www.youtube.com/@AnilChandraNaiduMatcha&#34;&gt;https://www.youtube.com/@AnilChandraNaiduMatcha&lt;/a&gt; for more such video tutorials&lt;/p&gt; &#xA;&lt;h3&gt;How to run ? (Things might change based on OS)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a virtual environment in python &lt;a href=&#34;https://docs.python.org/3/library/venv.html&#34;&gt;https://docs.python.org/3/library/venv.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &#34;pip install -r requirements.txt&#34;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set OPENAI_API_KEY environment variable with your openai key&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &#34;python main.py&#34;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Change pdf file and query in code if you want to try with any other content&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To run streamlit app, follow the steps run &#34;streamlit run streamlitui.py&#34;&lt;/p&gt; &#xA;&lt;p&gt;Parts of the streamlit code is inspired from &lt;a href=&#34;https://github.com/viniciusarruda/chatpdf&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Demo link&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heybot.thesamur.ai/&#34;&gt;https://heybot.thesamur.ai/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Also check&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Anil-matcha/Website-to-Chatbot&#34;&gt;Chat with Website code&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Anil-matcha/Chat-With-Excel&#34;&gt;Chat with CSV code&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Anil-matcha/Chat-Youtube&#34;&gt;Chat with Youtube code&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Anil-matcha/DiscordGPT&#34;&gt;ChatGPT in Discord code&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OptimalScale/LMFlow</title>
    <updated>2023-06-19T01:46:02Z</updated>
    <id>tag:github.com,2023-06-19:/OptimalScale/LMFlow</id>
    <link href="https://github.com/OptimalScale/LMFlow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An Extensible Toolkit for Finetuning and Inference of Large Foundation Models. Large Model for All.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34; width=&#34;100%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/OptimalScale/LMFlow/main/assets/logo.png&#34; alt=&#34;LMFlow&#34; style=&#34;width: 100%; min-width: 300px; display: block; margin: auto; background-color: transparent;&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;LMFlow&lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt; &lt;p&gt; &lt;b&gt;English&lt;/b&gt; | &lt;a href=&#34;https://github.com/OptimalScale/LMFlow/raw/main/readme/README_zh-hans.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | &lt;a href=&#34;https://github.com/OptimalScale/LMFlow/raw/main/readme/README_es.md&#34;&gt;Espa√±ol&lt;/a&gt; | &lt;a href=&#34;https://github.com/OptimalScale/LMFlow/raw/main/readme/README_jp.md&#34;&gt;Êó•Êú¨Ë™û&lt;/a&gt; | &lt;a href=&#34;https://github.com/OptimalScale/LMFlow/raw/main/readme/README_ko.md&#34;&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt; | &lt;a href=&#34;https://github.com/OptimalScale/LMFlow/raw/main/readme/README_hindi.md&#34;&gt;‡§π‡§ø‡§Ç‡§¶‡•Ä&lt;/a&gt; &lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lmflow.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Website-Demo-20B2AA.svg?sanitize=true&#34; alt=&#34;Website&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/OptimalScale/LMFlow/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Code%20License-Apache_2.0-green.svg?sanitize=true&#34; alt=&#34;Code License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.python.org/downloads/release/python-390/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-3.9+-blue.svg?sanitize=true&#34; alt=&#34;Python 3.9+&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://optimalscale.github.io/LMFlow/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Website-Doc-ff69b4.svg?sanitize=true&#34; alt=&#34;Doc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/u9VJNpzhvA&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-LMFlow-%237289da.svg?logo=discord&#34; alt=&#34;Embark&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/lmflow/shared_invite/zt-1s6egx12s-THlwHuCjF6~JGKmx7JoJPA&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-Join-blueviolet?logo=slack&amp;amp;amp&#34; alt=&#34;slack badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://i.imgloc.com/2023/06/14/VHJmza.jpeg&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/WeChat-Join-brightgreen?logo=wechat&amp;amp;amp&#34; alt=&#34;WeChat badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;An extensible, convenient, and efficient toolbox for finetuning large machine learning models, designed to be user-friendly, speedy and reliable, and accessible to the entire community.&lt;/p&gt; &#xA;&lt;p&gt;Large Model for All. See our &lt;a href=&#34;https://github.com/OptimalScale/LMFlow#vision&#34;&gt;vision&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34; width=&#34;100%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/OptimalScale/LMFlow/main/assets/features.png&#34; alt=&#34;LMFlow-features&#34; style=&#34;width: 100%; min-width: 300px; display: block; margin: auto;&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Latest News&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[2023-06-16] &lt;span&gt;üöÄ&lt;/span&gt; Our finetuned Robin-33B-V2 scored an impressive 64.1 on the Huggingface LLM leaderboard in our offline evaluation, outperforming major open-source LLMs! All checkpoints (7B, 13B, 33B, and 65B) are &lt;a href=&#34;https://huggingface.co/OptimalScale&#34;&gt;released&lt;/a&gt;! Checkout the performance &lt;a href=&#34;https://medium.com/@hkust.ml/robin-v2-launches-achieves-unparalleled-performance-on-openllm-4f6886e822c1&#34;&gt;here&lt;/a&gt;. &lt;span&gt;üöÄ&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;[2023-06-07] &lt;span&gt;üöÄ&lt;/span&gt; LMFlow is now officially available on PyPI! Install it with &lt;code&gt;pip install lmflow-finetune&lt;/code&gt;! &lt;span&gt;üöÄ&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;[2023-05-30] Release &lt;a href=&#34;https://huggingface.co/OptimalScale/robin-13b-v2-delta&#34;&gt;Robin-13B-v2&lt;/a&gt; and &lt;a href=&#34;https://huggingface.co/OptimalScale/robin-33b-v2-delta&#34;&gt;Robin-33B-v2&lt;/a&gt;!&lt;/li&gt; &#xA; &lt;li&gt;[2023-05-15] Release &lt;a href=&#34;http://lmflow.org:5000/lmflow_data.tar.gz&#34;&gt;LMFlow-data&lt;/a&gt;, the training dataset of Robin-7B-v2. A new &lt;a href=&#34;http://lmflow.org:5000/lmflow_chat_en_dialog_multiturn_single_nll_text2text.tar.gz&#34;&gt;test data&lt;/a&gt; is also released.&lt;/li&gt; &#xA; &lt;li&gt;[2023-05-09] Release &lt;a href=&#34;http://lmflow.org:5000/robin-7b-v2-delta.tar.gz&#34;&gt;Robin-7B-v2&lt;/a&gt;, achieving competitive performance on chitchat, commonsense reasoning and instruction-following tasks. Refer to our &lt;a href=&#34;https://medium.com/@hkust.ml/lmflow-benchmark-an-automatic-evaluation-framework-for-open-source-llms-ef5c6f142418&#34;&gt;comprehensive study&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;[2023-05-08] Release &lt;a href=&#34;https://medium.com/@hkust.ml/lmflow-benchmark-an-automatic-evaluation-framework-for-open-source-llms-ef5c6f142418&#34;&gt;LMFlow Benchmark&lt;/a&gt;, an automatic evaluation framework for open-source chat-style LLMs. &lt;a href=&#34;https://docs.google.com/spreadsheets/d/1JYh4_pxNzmNA9I0YM2epgRA7VXBIeIGS64gPJBg5NHA/edit#gid=0&#34;&gt;Benchmark results&lt;/a&gt; on 31 popular models are reported. &lt;a href=&#34;https://github.com/OptimalScale/LMFlow#33-lmflow-benchmark&#34;&gt;Participate in LMFlow Benchmark&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;[2023-04-21] Release &lt;a href=&#34;http://lmflow.org:5000/robin-7b.tar.gz&#34;&gt;Robin-7B&lt;/a&gt; (based on LLaMA-7B), and two models for commercial use: Parakeets-2.7B (based on GPT-NEO-2.7B) and Cokatoo-7B (based on StableLM-7B) &lt;a href=&#34;https://github.com/OptimalScale/LMFlow/tree/main#model-zoo&#34;&gt;Download here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[2023-04-10] We propose a new alignment algorithm: &lt;a href=&#34;https://optimalscale.github.io/LMFlow/examples/raft.html&#34;&gt;Reward rAnked FineTuning (RAFT)&lt;/a&gt;, which is more efficient than conventional (PPO-based) RLHF. [&lt;a href=&#34;https://arxiv.org/abs/2304.06767&#34;&gt;Paper&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;[2023-04-02] &lt;a href=&#34;https://lmflow.com/&#34;&gt;Web service&lt;/a&gt; is online!&lt;/li&gt; &#xA; &lt;li&gt;[2023-04-01] Release three instruction-tuned checkpoints and three medical checkpoints in &lt;a href=&#34;https://github.com/OptimalScale/LMFlow#model-zoo&#34;&gt;model zoo&lt;/a&gt;: LLaMA-7B-tuned, LLaMA-13B-tuned, LLaMA-33B-tuned, LLaMA-7B-medical, LLaMA-13B-medical, and LLaMA-33B-medical.&lt;/li&gt; &#xA; &lt;li&gt;[2023-03-27] Release code and checkpoints - &lt;a href=&#34;https://optimalscale.github.io/LMFlow/&#34;&gt;version 0.0.1&lt;/a&gt;! &lt;a href=&#34;https://github.com/OptimalScale/LMFlow#model-performance&#34;&gt;Our tasked-tuned model beats ChatGPT on medical domain&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- * [2023-03-27] Support full tuning and lora tuning for all decoder models.&#xA;* [2023-03-27] [Tasked tuned model beats ChatGPT on medical domain](https://github.com/OptimalScale/LMFlow#model-performance). --&gt; &#xA;&lt;!-- * [2023-04-15] Inference: Support streaming output and ChatGLM. --&gt; &#xA;&lt;h2&gt;Demos&lt;/h2&gt; &#xA;&lt;p&gt;We provide four kinds of demos which include&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Online Service: If you don&#39;t want to run any code and just want to try our models, we deploy our instruction-tuned LLaMA you to have a try.&lt;/li&gt; &#xA; &lt;li&gt;Colab Chatbot (shell): An interactive shell-based chatbot for you to easily deploy a chatbot on colab.&lt;/li&gt; &#xA; &lt;li&gt;Colab Chatbot (web): An interactive web-based chatbot for you to easily deploy your own chatbot on colab.&lt;/li&gt; &#xA; &lt;li&gt;Local Deploy: We also provide a way for you to deploy your model/chatbot locally, which means you can deploy much larger model than previous three methods if you have enough resource.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lmflow.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Online%20Service-Web-green.svg?sanitize=true&#34; alt=&#34;Code License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://colab.research.google.com/drive/1P9Hf6_mLE7WHH92pw73j9D5kz6GTdkow?usp=sharing&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Colab-(shell)%20%20chatbot:%20gpt--neo-orange?logo=google-colab&amp;amp;amp&#34; alt=&#34;colab badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://colab.research.google.com/drive/1LLtiiQO-ZIIFsTKxYzGWYX9BDRc-v8dq?usp=sharing&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Colab-(web)%20%20chatbot:%20gpt--neo-blue?logo=google-colab&amp;amp;amp&#34; alt=&#34;colab badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://colab.research.google.com/drive/1bQmlSiKnqFjrkijFUJ5ylbYW-zUwObqL#scrollTo=9U2P_PUN-5xX&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Colab-(demo)%20%20RAFT:%20diffusion-blueviolet?logo=google-colab&amp;amp;amp&#34; alt=&#34;colab badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Online Service&lt;/h3&gt; &#xA;&lt;p&gt;Welcome to visit our &lt;a href=&#34;https://lmflow.com/&#34;&gt;web service&lt;/a&gt;. We deploy LLaMA-7B-tuned model online for preview. Due to the high website traffic, sometimes the website may fail to respond. You can also deploy the chatbot following &lt;code&gt;Local Deploy&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Colab chatbot (shell)&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34; width=&#34;100%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/OptimalScale/LMFlow/main/assets/colab-shell-chatbot-demo.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;We provide a simple shell demo of chatbot with Google Colab&#39;s T4/P100/V100 GPU. Notice that the provided gpt-neo-2.7b model is &lt;strong&gt;a rather weak model&lt;/strong&gt;, which only supports English and may sometimes generate unsatisfactory responses. To improve the performance, users can use their own dataset to finetune and obtain a better model with LMFlow. One can also try other available decoder-only models provided in ü§ó &lt;a href=&#34;https://huggingface.co/models?pipeline_tag=text-generation&amp;amp;sort=downloads&#34;&gt;Hugging Face&lt;/a&gt;, by&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./scripts/run_chatbot.sh {another-model-name}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Colab chatbot (web)&lt;/h3&gt; &#xA;&lt;p&gt;We provide a simple web demo of chatbot with Google Colab&#39;s T4/P100/V100 GPU. Notice that the provided gpt-neo-2.7b model is &lt;strong&gt;a rather weak model&lt;/strong&gt;, which only supports English and may sometimes generate unsatisfactory responses.&lt;/p&gt; &#xA;&lt;h3&gt;Local Deploy&lt;/h3&gt; &#xA;&lt;p&gt;If you have resources and want to deploy your own model locally. We provide you an easy way to run a flask server to launch a backend (to further provide services to other frontend) and an interactive web frontend (to let you communicate directly) by&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./scripts/run_app.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We also provide a gradio-based UI for building chatbots. Running the following command will launch the demo for robin-7b:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install gradio&#xA;python ./examples/chatbot_gradio.py --deepspeed configs/ds_config_chatbot.json --model_name_or_path YOUR-LLAMA  --lora_model_path ./robin-7b --prompt_structure &#34;A chat between a curious human and an artificial intelligence assistant. The assistant gives helpful, detailed, and polite answers to the human&#39;s questions.###Human: {input_text}###Assistant:&#34;       --end_string &#34;#&#34; --max_new_tokens 200&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We also hosted it on Hugging Face &lt;a href=&#34;https://huggingface.co/spaces/OptimalScale/Robin-7b&#34;&gt;Space&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Colab RAFT-diffusion&lt;/h3&gt; &#xA;&lt;p&gt;We also provide a simple demo to display the effectiveness of RAFT algorithm on diffusion models. You can refer to either &lt;a href=&#34;https://colab.research.google.com/drive/1bQmlSiKnqFjrkijFUJ5ylbYW-zUwObqL#scrollTo=9U2P_PUN-5xX&#34;&gt;Colab link&lt;/a&gt; or &lt;code&gt;experimental/RAFT-diffusion/SD256-RAFT.ipynb&lt;/code&gt;. The support of multi-modal training of LMFlow is under development.&lt;/p&gt; &#xA;&lt;h2&gt;Medical Performance&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;PubMedQA (ID)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MedQA-USMLE (OOD)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MedMCQA (ID)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Average&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Human (pass)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;60.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;50.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Human (expert)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;78.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;87.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;90.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;85.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;InstructGPT 175B&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;73.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;46.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;44.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;54.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ChatGPT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;63.9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;57.0&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;44.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;55.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;LLaMA 7B&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;5.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;27.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;24.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;18.9&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;LLaMA 33B&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;43.4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;30.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;25.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Task-tuned LLaMA 7B (Full)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;75.1&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;44.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;49.9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;56.5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Task-tuned LLaMA 33B (LoRA)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;74.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;51.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;50.2&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;58.5&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The LLaMA 33B (LoRA) performance is achieved with only &lt;strong&gt;~16h&lt;/strong&gt; finetuning on the training split of PubMedQA and MedMCQA with a single 8 * A100 server. For more performance, including instruction tuning results, please refer to our &lt;a href=&#34;https://optimalscale.github.io/LMFlow/&#34;&gt;Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Model Zoo&lt;/h2&gt; &#xA;&lt;p&gt;We open-sourced the trained checkpoints to everyone for further training and inference.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://lmflow.org:10001/robin-7b.tar.gz&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OptimalScale/LMFlow/main/assets/robin7b.jpg&#34; width=&#34;300&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://lmflow.org:10001/llama13b-lora-380k.tar.gz&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OptimalScale/LMFlow/main/assets/robin13b.png&#34; width=&#34;300&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://lmflow.org:10001/llama30b-lora-170k.tar.gz&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OptimalScale/LMFlow/main/assets/robin33b.png&#34; width=&#34;300&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OptimalScale/LMFlow/main/assets/robin65b.png&#34; width=&#34;300&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;160&#34; align=&#34;center&#34;&gt;Model&lt;br&gt;Base Model&lt;/td&gt; &#xA;   &lt;td width=&#34;160&#34; align=&#34;center&#34;&gt;&lt;a href=&#34;https://lmflow.org:10001/robin-7b.tar.gz&#34;&gt;Robin-7B &lt;span&gt;‚≠ê&lt;/span&gt; &lt;/a&gt;&lt;br&gt;LLaMA-7B&lt;/td&gt; &#xA;   &lt;td width=&#34;160&#34; align=&#34;center&#34;&gt;&lt;a href=&#34;https://lmflow.org:10001/llama13b-lora-380k.tar.gz&#34;&gt;Robin-13B&lt;/a&gt;&lt;br&gt;LLaMA-13B&lt;/td&gt; &#xA;   &lt;td width=&#34;160&#34; align=&#34;center&#34;&gt;&lt;a href=&#34;https://lmflow.org:10001/llama30b-lora-170k.tar.gz&#34;&gt;Robin-33B&lt;/a&gt;&lt;br&gt;LLaMA-33B&lt;/td&gt; &#xA;   &lt;td width=&#34;160&#34; align=&#34;center&#34;&gt;&lt;a href=&#34;&#34;&gt;Robin-65B&lt;/a&gt;&lt;br&gt;LLaMA-65B&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://lmflow.org:10001/llama7b-lora-medical.tar.gz&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OptimalScale/LMFlow/main/assets/robin7b_.png&#34; width=&#34;300&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://lmflow.org:10001/llama13b-lora-medical.tar.gz&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OptimalScale/LMFlow/main/assets/robin13b_.jpg&#34; width=&#34;300&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://lmflow.org:10001/llama30b-lora-medical.tar.gz&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OptimalScale/LMFlow/main/assets/robin33b_.png&#34; width=&#34;300&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OptimalScale/LMFlow/main/assets/robin65b_.png&#34; width=&#34;300&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;160&#34; align=&#34;center&#34;&gt;Model&lt;br&gt;Base Model&lt;/td&gt; &#xA;   &lt;td width=&#34;160&#34; align=&#34;center&#34;&gt;&lt;a href=&#34;https://lmflow.org:10001/llama7b-lora-medical.tar.gz&#34;&gt;Robin-7B-medical&lt;/a&gt;&lt;br&gt;LLaMA-7B&lt;/td&gt; &#xA;   &lt;td width=&#34;160&#34; align=&#34;center&#34;&gt;&lt;a href=&#34;https://lmflow.org:10001/llama13b-lora-medical.tar.gz&#34;&gt;Robin-13B-medical&lt;/a&gt;&lt;br&gt;LLaMA-13B&lt;/td&gt; &#xA;   &lt;td width=&#34;160&#34; align=&#34;center&#34;&gt;&lt;a href=&#34;https://lmflow.org:10001/llama30b-lora-medical.tar.gz&#34;&gt;Robin-33B-medical&lt;/a&gt;&lt;br&gt;LLaMA-33B&lt;/td&gt; &#xA;   &lt;td width=&#34;160&#34; align=&#34;center&#34;&gt;&lt;a href=&#34;&#34;&gt;Robin-65B-medical&lt;/a&gt;&lt;br&gt;LLaMA-65B&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://lmflow.org:10001/parakeets-2.7b.tar.gz&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OptimalScale/LMFlow/main/assets/Parakeets.png&#34; width=&#34;300&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OptimalScale/LMFlow/main/assets/Cockatoo3b.png&#34; width=&#34;300&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://lmflow.org:10001/cockatoo-7b.tar.gz&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OptimalScale/LMFlow/main/assets/Cockatoo7b.png&#34; width=&#34;300&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;160&#34; align=&#34;center&#34;&gt;Model&lt;br&gt;Base Model&lt;/td&gt; &#xA;   &lt;td width=&#34;160&#34; align=&#34;center&#34;&gt;&lt;a href=&#34;https://lmflow.org:10001/parakeets-2.7b.tar.gz&#34;&gt;Parakeets-2.7B &lt;span&gt;‚≠ê&lt;/span&gt; &lt;/a&gt;&lt;br&gt;GPT-NEO-2.7B&lt;/td&gt; &#xA;   &lt;td width=&#34;160&#34; align=&#34;center&#34;&gt;&lt;a href=&#34;&#34;&gt;Cockatoo-3B&lt;/a&gt;&lt;br&gt;StableLM-3B&lt;/td&gt; &#xA;   &lt;td width=&#34;160&#34; align=&#34;center&#34;&gt;&lt;a href=&#34;https://lmflow.org:10001/cockatoo-7b.tar.gz&#34;&gt;Cockatoo-7B &lt;span&gt;‚≠ê&lt;/span&gt; &lt;/a&gt;&lt;br&gt;StableLM-7B&lt;/td&gt; &#xA;   &lt;td width=&#34;160&#34; align=&#34;center&#34;&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Supported Pipelines&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Pipelines&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Task Tuning&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;‚úÖ&lt;/span&gt; Supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Instruction Tuning&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;‚úÖ&lt;/span&gt; Supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Parameter-Efficient Tuning&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;‚úÖ&lt;/span&gt; Supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Alignment Tuning&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;‚úÖ&lt;/span&gt; Supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Large Model Inference&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;‚úÖ&lt;/span&gt; Supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Supported Models&lt;/h2&gt; &#xA;&lt;p&gt;Seamlessly supported all the &lt;a href=&#34;https://huggingface.co/models?pipeline_tag=text-generation&amp;amp;sort=downloads&#34;&gt;decoder models&lt;/a&gt; in ü§ó Hugging Face. LLaMA, GPT2, GPT-Neo, Galactica, have been fully tested. We will support encoder models soon.&lt;/p&gt; &#xA;&lt;h2&gt;1.Setup&lt;/h2&gt; &#xA;&lt;p&gt;Our package has been fully tested on Linux OS (Ubuntu 20.04). Other OS platforms (MacOS, Windows) are not fully tested. You may encounter some unexpected errors. You may try it first on a Linux machine or use Google Colab to experience it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/OptimalScale/LMFlow.git&#xA;cd LMFlow&#xA;conda create -n lmflow python=3.9 -y&#xA;conda activate lmflow&#xA;conda install mpi4py&#xA;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;2.Prepare Dataset&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to our &lt;a href=&#34;https://optimalscale.github.io/LMFlow/examples/DATASETS.html&#34;&gt;doc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;3. Running Scripts&lt;/h2&gt; &#xA;&lt;h3&gt;3.1 Finetuning&lt;/h3&gt; &#xA;&lt;p&gt;You can run &lt;code&gt;scripts/run_finetune.sh&lt;/code&gt; to finetune a GPT-2 base model&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./scripts/run_finetune.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you would like to provide arguments for deepspeed to reflect your machine settings, you may pass the corresponding deepspeed arguments to the script. For example,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./scripts/run_finetune.sh &#34;--num_gpus=8 --master_port 10001&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To enable LoRA finetuning, you may refer to&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./scripts/run_finetune_with_lora.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which can be run in similar manner.&lt;/p&gt; &#xA;&lt;p&gt;For detailed configurations, one may modify these scripts directly. These scripts actually just call python script &lt;code&gt;examples/finetune.py&lt;/code&gt;, which can be run in following manner,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;deepspeed ${deepspeed_args} \&#xA;  examples/finetune.py \&#xA;    --deepspeed configs/ds_config_zero3.json \&#xA;    --bf16 \&#xA;    --run_name finetune_with_lora \&#xA;    --model_name_or_path facebook/galactica-1.3b \&#xA;    --num_train_epochs 0.01 \&#xA;    --learning_rate 2e-5 \&#xA;    --dataset_path ${dataset_path} \&#xA;    --per_device_train_batch_size 1 \&#xA;    --per_device_eval_batch_size 1 \&#xA;    --validation_split_percentage 0 \&#xA;    --logging_steps 20 \&#xA;    --block_size 512 \&#xA;    --do_train \&#xA;    --output_dir output_models/finetune \&#xA;    --overwrite_output_dir \&#xA;    --ddp_timeout 72000 \&#xA;    --save_steps 5000 \&#xA;    --dataloader_num_workers 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here we set number of epochs &lt;code&gt;--num_train_epochs&lt;/code&gt; to &lt;code&gt;0.01&lt;/code&gt; so that the finetuning process can be finished quickly. If you wish to obtain a model with better performance, feel free to adjust those hyperparameters. You may run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python examples/finetune.py -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: In the case of a small training data set, the value of &lt;code&gt;block_size&lt;/code&gt; needs to be reduced, otherwise there will be no samples available in the Epoch iterator.&lt;/p&gt; &#xA;&lt;p&gt;to view all possible finetuning arguments. The finetuned model checkpoint will be saved in the argument specified by &lt;code&gt;--output_dir&lt;/code&gt;, which is &lt;code&gt;output_models/finetune&lt;/code&gt; in the above example. We follow &lt;a href=&#34;https://github.com/tatsu-lab/stanford_alpaca&#34;&gt;Alpaca&lt;/a&gt; and &lt;a href=&#34;https://github.com/lm-sys/FastChat&#34;&gt;Vicuna&lt;/a&gt; in the model tuning process and serve the model in our web service.&lt;/p&gt; &#xA;&lt;h3&gt;3.2 Evaluation&lt;/h3&gt; &#xA;&lt;p&gt;One can directly run evaluation with an existing Hugging Face model, e.g. to run GPT2 large, one may execute&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./scripts/run_evaluation.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or run the corresponding python script&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;CUDA_VISIBLE_DEVICES=0 \&#xA;    deepspeed examples/evaluate.py \&#xA;    --answer_type medmcqa \&#xA;    --model_name_or_path gpt2-large \&#xA;    --dataset_path data/MedQA-USMLE/validation \&#xA;    --deepspeed examples/ds_config.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To load the finetuned model, specify &lt;code&gt;--model_name_or_path&lt;/code&gt; with the saved model checkpoint directory path.&lt;/p&gt; &#xA;&lt;p&gt;For LoRA finetuned models, one may refer to&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./scripts/run_evaluation_with_lora.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Those scripts invoke the examples &lt;code&gt;examples/*.py&lt;/code&gt; built based on our APIs. For more API-related examples, one may refer to the methods in the unittest &lt;code&gt;tests&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;3.3 LMFlow Benchmark&lt;/h3&gt; &#xA;&lt;p&gt;LMFlow Benchmark is an automatic evaluation framework for open-source large language models. We use negative log likelihood (NLL) as the metric to evaluate different aspects of a language model: chitchat, commonsense reasoning, and instruction following abilities.&lt;/p&gt; &#xA;&lt;p&gt;You can directly run the LMFlow benchmark evaluation to obtain the results to participate in the &lt;a href=&#34;https://docs.google.com/spreadsheets/d/1JYh4_pxNzmNA9I0YM2epgRA7VXBIeIGS64gPJBg5NHA/edit?usp=sharing&#34;&gt;LLM comparision&lt;/a&gt;. For example, to run GPT2 XL, one may execute&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./scripts/run_benchmark.sh --model_name_or_path gpt2-xl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;--model_name_or_path&lt;/code&gt; is required, you may fill in huggingface model name or local model path here.&lt;/p&gt; &#xA;&lt;p&gt;To check the evaluation results, you may check &lt;code&gt;benchmark.log&lt;/code&gt; in &lt;code&gt;./output_dir/gpt2-xl_lmflow_chat_nll_eval&lt;/code&gt;, &lt;code&gt;./output_dir/gpt2-xl_all_nll_eval&lt;/code&gt; and &lt;code&gt;./output_dir/gpt2-xl_commonsense_qa_eval&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;4. Additional Notes&lt;/h2&gt; &#xA;&lt;h3&gt;4.1 LLaMA Checkpoint&lt;/h3&gt; &#xA;&lt;p&gt;Please refer to our &lt;a href=&#34;https://optimalscale.github.io/LMFlow/examples/checkpoints.html&#34;&gt;doc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;4.2 DeepSpeed Config&lt;/h3&gt; &#xA;&lt;p&gt;You can config the deepspeed under configs. Details can be referred at &lt;a href=&#34;https://www.deepspeed.ai/docs/config-json/&#34;&gt;DeepSpeed Configuration&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;4.3 LLaMA Inference on CPU&lt;/h3&gt; &#xA;&lt;p&gt;Thanks to the great efforts of &lt;a href=&#34;https://github.com/ggerganov/llama.cpp&#34;&gt;llama.cpp&lt;/a&gt;. It is possible for everyone to run their LLaMA models on CPU by 4-bit quantization. We provide a script to convert LLaMA LoRA weights to &lt;code&gt;.pt&lt;/code&gt; files. You only need to use &lt;code&gt;convert-pth-to-ggml.py&lt;/code&gt; in llama.cpp to perform quantization.&lt;/p&gt; &#xA;&lt;h2&gt;5. Model Release&lt;/h2&gt; &#xA;&lt;h3&gt;5.1 Medical Model Checkpoints&lt;/h3&gt; &#xA;&lt;p&gt;You can run following script to download our medical model checkpoints :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd output_models&#xA;bash download.sh medical_ckpt&#xA;cd -&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also directly download our model via google drive link : &lt;a href=&#34;https://drive.google.com/file/d/1bnsQGNGNYchsOfiNyRAmL2fNiowbmFNw/view?usp=share_link&#34;&gt;medical_ckpt.tar.gz&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;5.2 Instruction Model Checkpoints&lt;/h3&gt; &#xA;&lt;p&gt;Similarly, you can run following script to download our instruction model checkpoints :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd output_models&#xA;bash download.sh instruction_ckpt&#xA;cd -&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also directly download our model via google drive link : &lt;a href=&#34;https://drive.google.com/file/d/1d_ioQ-ViVweeifbsFSO4pczc3UORFHZO/view?usp=share_link&#34;&gt;instruction_ckpt.tar.gz&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;5.3 Reproduce the result&lt;/h3&gt; &#xA;&lt;p&gt;After downloading the model checkpoints, you can merge the lora model into the base model via&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python examples/merge_lora.py \&#xA;    --model_name_or_path {huggingface-model-name-or-path-to-base-model} \&#xA;    --lora_model_path {path-to-lora-model} \&#xA;    --output_model_path {path-to-merged-model}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can replace the &lt;code&gt;--lora_model_path&lt;/code&gt; with &lt;code&gt;output_models/instruction_ckpt/llama7b-lora&lt;/code&gt; (example for llama-7b for instruction) and replace &lt;code&gt;--model_name_or_path&lt;/code&gt; with your converted llama model inside &lt;code&gt;LMFlow/scripts/run_evaluation_with_lora.sh&lt;/code&gt; and run this shell script to reproduce the result.&lt;/p&gt; &#xA;&lt;p&gt;For full model deltas, such as robin-7b-v2-delta, you may use the delta merge script to obtain the full model,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python utils/apply_delta.py \&#xA;    --base-model-path {huggingface-model-name-or-path-to-base-model} \&#xA;    --delta-path {path-to-delta-model} \&#xA;    --target-model-path {path-to-merged-model}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can check the model performance at our &lt;a href=&#34;https://optimalscale.github.io/LMFlow/&#34;&gt;Doc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to our &lt;a href=&#34;https://optimalscale.github.io/LMFlow/&#34;&gt;Documentation&lt;/a&gt; for more API reference and experimental results.&lt;/p&gt; &#xA;&lt;h2&gt;Vision&lt;/h2&gt; &#xA;&lt;p&gt;Hello there! We are excited to announce the upcoming release of our code repository that includes a complete LLM training process, enabling users to quickly build their own language models and train them effectively.&lt;/p&gt; &#xA;&lt;p&gt;Our code repository is not just a simple model; it includes the complete training workflow, model optimization, and testing tools. You can use it to build various types of language models, including conversation models, question-answering models, and text generation models, among others.&lt;/p&gt; &#xA;&lt;p&gt;Moreover, we aim to create an open and democratic LLM sharing platform where people can share their checkpoints and experiences to collectively improve the skills of the community. We welcome anyone who is interested in LLM to participate and join us in building an open and friendly community!&lt;/p&gt; &#xA;&lt;p&gt;Whether you are a beginner or an expert, we believe that you can benefit from this platform. Let&#39;s work together to build a vibrant and innovative LLM community!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/u9VJNpzhvA&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discord-LMFlow-%237289da.svg?logo=discord&#34; alt=&#34;Embark&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/lmflow/shared_invite/zt-1s6egx12s-THlwHuCjF6~JGKmx7JoJPA&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-join-blueviolet?logo=slack&amp;amp;amp&#34; alt=&#34;slack badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://i.imgloc.com/2023/06/14/VHJmza.jpeg&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/WeChat-Join-brightgreen?logo=wechat&amp;amp;amp&#34; alt=&#34;WeChat badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;LMFlow draws inspiration from various studies, including but not limited to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Alpaca: &lt;a href=&#34;https://github.com/tatsu-lab/stanford_alpaca&#34;&gt;https://github.com/tatsu-lab/stanford_alpaca&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Vicuna: &lt;a href=&#34;https://github.com/lm-sys/FastChat&#34;&gt;https://github.com/lm-sys/FastChat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you need any help, please submit a &lt;a href=&#34;https://github.com/OptimalScale/LMFlow&#34;&gt;Github&lt;/a&gt; issue.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The code included in this project is licensed under the &lt;a href=&#34;https://github.com/OptimalScale/LMFlow/raw/main/LICENSE&#34;&gt;Apache 2.0 license&lt;/a&gt;. If you wish to use the codes and models included in this project for commercial purposes, please sign this &lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSfJYcci6cbgpIvx_Fh1xDL6pNkzsjGDH1QIcm4cYk88K2tqkw/viewform?usp=pp_url&#34;&gt;document&lt;/a&gt; to obtain authorization.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/OptimalScale/LMFlow/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=OptimalScale/LMFlow&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find this repository useful, please consider giving ‚≠ê and citing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{lmflow,&#xA;  author = {Shizhe Diao and Rui Pan and Hanze Dong and KaShun Shum and Jipeng Zhang and Wei Xiong and Tong Zhang},&#xA;  title = {LMFlow: An Extensible Toolkit for Finetuning and Inference of Large Foundation Models},&#xA;  year = {2023},&#xA;  publisher = {GitHub},&#xA;  journal = {GitHub repository},&#xA;  howpublished = {\url{https://optimalscale.github.io/LMFlow/}},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>shibing624/MedicalGPT</title>
    <updated>2023-06-19T01:46:02Z</updated>
    <id>tag:github.com,2023-06-19:/shibing624/MedicalGPT</id>
    <link href="https://github.com/shibing624/MedicalGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MedicalGPT: Training Your Own Medical GPT Model with ChatGPT Training Pipeline. ËÆ≠ÁªÉÂåªÁñóÂ§ßÊ®°ÂûãÔºåÂÆûÁé∞ÂåÖÊã¨‰∫åÊ¨°È¢ÑËÆ≠ÁªÉ„ÄÅÊúâÁõëÁù£ÂæÆË∞É„ÄÅÂ•ñÂä±Âª∫Ê®°„ÄÅÂº∫ÂåñÂ≠¶‰π†ËÆ≠ÁªÉ„ÄÇ&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/shibing624/MedicalGPT/raw/main/README.md&#34;&gt;&lt;strong&gt;üá®üá≥‰∏≠Êñá&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://github.com/shibing624/MedicalGPT/raw/main/README_EN.md&#34;&gt;&lt;strong&gt;üåêEnglish&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://github.com/shibing624/MedicalGPT/wiki&#34;&gt;&lt;strong&gt;üìñÊñáÊ°£/Docs&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://huggingface.co/shibing624&#34;&gt;&lt;strong&gt;ü§ñÊ®°Âûã/Models&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/shibing624/MedicalGPT&#34;&gt; &lt;img src=&#34;https://github.com/shibing624/MedicalGPT/raw/main/docs/logo.png&#34; height=&#34;100&#34; alt=&#34;Logo&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;MedicalGPT: Training Medical GPT Model&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://huggingface.co/shibing624&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Hugging%20Face-shibing624-green&#34; alt=&#34;HF Models&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://star-history.com/#shibing624/MedicalGPT&amp;amp;Timeline&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/shibing624/MedicalGPT?color=yellow&#34; alt=&#34;Github Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/shibing624/MedicalGPT/main/CONTRIBUTING.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;Contributions welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/shibing624/MedicalGPT/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License Apache 2.0&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/shibing624/MedicalGPT/main/requirements.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-3.8%2B-green.svg?sanitize=true&#34; alt=&#34;python_version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/shibing624/MedicalGPT/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/shibing624/MedicalGPT.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/shibing624/MedicalGPT/main/#Contact&#34;&gt;&lt;img src=&#34;http://vlog.sfyc.ltd/wechat_everyday/wxgroup_logo.png?imageView2/0/w/60/h/20&#34; alt=&#34;Wechat Group&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üìñ Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;MedicalGPT&lt;/strong&gt; training medical GPT model with ChatGPT training pipeline, implemantation of Pretraining, Supervised Finetuning, Reward Modeling and Reinforcement Learning.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;MedicalGPT&lt;/strong&gt; ËÆ≠ÁªÉÂåªÁñóÂ§ßÊ®°ÂûãÔºåÂÆûÁé∞ÂåÖÊã¨‰∫åÊ¨°È¢ÑËÆ≠ÁªÉ„ÄÅÊúâÁõëÁù£ÂæÆË∞É„ÄÅÂ•ñÂä±Âª∫Ê®°„ÄÅÂº∫ÂåñÂ≠¶‰π†ËÆ≠ÁªÉ„ÄÇ&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/shibing624/MedicalGPT/raw/main/docs/GPT_Training.jpg&#34; width=&#34;860&#34;&gt; &#xA;&lt;p&gt;ÂàÜÂõõÈò∂ÊÆµËÆ≠ÁªÉGPTÊ®°ÂûãÔºåÊù•Ëá™Andrej KarpathyÁöÑÊºîËÆ≤PDF &lt;a href=&#34;https://karpathy.ai/stateofgpt.pdf&#34;&gt;State of GPT&lt;/a&gt;ÔºåËßÜÈ¢ë &lt;a href=&#34;https://build.microsoft.com/en-US/sessions/db3f4859-cd30-4445-a0cd-553c3304f8e2&#34;&gt;Video&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üî• News&lt;/h2&gt; &#xA;&lt;p&gt;[2023/06/15] v1.0ÁâàÊú¨: ÂèëÂ∏É‰∏≠ÊñáÂåªÁñóLoRAÊ®°Âûã&lt;a href=&#34;https://huggingface.co/shibing624/ziya-llama-13b-medical-lora&#34;&gt;shibing624/ziya-llama-13b-medical-lora&lt;/a&gt;ÔºåÂü∫‰∫éZiya-LLaMA-13B-v1Ê®°ÂûãÔºåSFTÂæÆË∞É‰∫Ü‰∏ÄÁâàÂåªÁñóÊ®°ÂûãÔºåÂåªÁñóÈóÆÁ≠îÊïàÊûúÊúâÊèêÂçáÔºåÂèëÂ∏ÉÂæÆË∞ÉÂêéÁöÑLoRAÊùÉÈáçÔºåËØ¶ËßÅ&lt;a href=&#34;https://github.com/shibing624/MedicalGPT/releases/tag/1.0.0&#34;&gt;Release-v1.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;[2023/06/05] v0.2ÁâàÊú¨: ‰ª•ÂåªÁñó‰∏∫‰æãÔºåËÆ≠ÁªÉÈ¢ÜÂüüÂ§ßÊ®°ÂûãÔºåÂÆûÁé∞‰∫ÜÂõõÈò∂ÊÆµËÆ≠ÁªÉÔºöÂåÖÊã¨‰∫åÊ¨°È¢ÑËÆ≠ÁªÉ„ÄÅÊúâÁõëÁù£ÂæÆË∞É„ÄÅÂ•ñÂä±Âª∫Ê®°„ÄÅÂº∫ÂåñÂ≠¶‰π†ËÆ≠ÁªÉ„ÄÇËØ¶ËßÅ&lt;a href=&#34;https://github.com/shibing624/MedicalGPT/releases/tag/0.2.0&#34;&gt;Release-v0.2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üòä Feature&lt;/h2&gt; &#xA;&lt;p&gt;Âü∫‰∫éChatGPT Training PipelineÔºåÊú¨È°πÁõÆÂÆûÁé∞‰∫ÜÈ¢ÜÂüüÊ®°Âûã--ÂåªÁñóÊ®°ÂûãÁöÑÂõõÈò∂ÊÆµËÆ≠ÁªÉÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Á¨¨‰∏ÄÈò∂ÊÆµÔºöPT(Continue PreTraining)Â¢ûÈáèÈ¢ÑËÆ≠ÁªÉÔºåÂú®Êµ∑ÈáèÈ¢ÜÂüüÊñáÊ°£Êï∞ÊçÆ‰∏ä‰∫åÊ¨°È¢ÑËÆ≠ÁªÉGPTÊ®°ÂûãÔºå‰ª•Ê≥®ÂÖ•È¢ÜÂüüÁü•ËØÜ&lt;/li&gt; &#xA; &lt;li&gt;Á¨¨‰∫åÈò∂ÊÆµÔºöSFT(Supervised Fine-tuning)ÊúâÁõëÁù£ÂæÆË∞ÉÔºåÊûÑÈÄ†Êåá‰ª§ÂæÆË∞ÉÊï∞ÊçÆÈõÜÔºåÂú®È¢ÑËÆ≠ÁªÉÊ®°ÂûãÂü∫Á°Ä‰∏äÂÅöÊåá‰ª§Á≤æË∞ÉÔºå‰ª•ÂØπÈΩêÊåá‰ª§ÊÑèÂõæ&lt;/li&gt; &#xA; &lt;li&gt;Á¨¨‰∏âÈò∂ÊÆµÔºöRM(Reward Model)Â•ñÂä±Ê®°ÂûãÂª∫Ê®°ÔºåÊûÑÈÄ†‰∫∫Á±ªÂÅèÂ•ΩÊéíÂ∫èÊï∞ÊçÆÈõÜÔºåËÆ≠ÁªÉÂ•ñÂä±Ê®°ÂûãÔºåÁî®Êù•ÂØπÈΩê‰∫∫Á±ªÂÅèÂ•ΩÔºå‰∏ªË¶ÅÊòØ&#34;HHH&#34;ÂéüÂàôÔºåÂÖ∑‰ΩìÊòØ&#34;helpful, honest, harmless&#34;&lt;/li&gt; &#xA; &lt;li&gt;Á¨¨ÂõõÈò∂ÊÆµÔºöRL(Reinforcement Learning)Âü∫‰∫é‰∫∫Á±ªÂèçÈ¶àÁöÑÂº∫ÂåñÂ≠¶‰π†(RLHF)ÔºåÁî®Â•ñÂä±Ê®°ÂûãÊù•ËÆ≠ÁªÉSFTÊ®°ÂûãÔºåÁîüÊàêÊ®°Âûã‰ΩøÁî®Â•ñÂä±ÊàñÊÉ©ÁΩöÊù•Êõ¥Êñ∞ÂÖ∂Á≠ñÁï•Ôºå‰ª•‰æøÁîüÊàêÊõ¥È´òË¥®Èáè„ÄÅÊõ¥Á¨¶Âêà‰∫∫Á±ªÂÅèÂ•ΩÁöÑÊñáÊú¨&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Release Models&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Model&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Base Model&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Introduction&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://huggingface.co/shibing624/ziya-llama-13b-medical-lora&#34;&gt;shibing624/ziya-llama-13b-medical-lora&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://huggingface.co/IDEA-CCNL/Ziya-LLaMA-13B-v1&#34;&gt;IDEA-CCNL/Ziya-LLaMA-13B-v1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Âú®240‰∏áÊù°‰∏≠Ëã±ÊñáÂåªÁñóÊï∞ÊçÆÈõÜ&lt;a href=&#34;https://huggingface.co/datasets/shibing624/medical&#34;&gt;shibing624/medical&lt;/a&gt;‰∏äSFTÂæÆË∞É‰∫Ü‰∏ÄÁâàZiya-LLaMA-13BÊ®°ÂûãÔºåÂåªÁñóÈóÆÁ≠îÊïàÊûúÊúâÊèêÂçáÔºåÂèëÂ∏ÉÂæÆË∞ÉÂêéÁöÑLoRAÊùÉÈáç&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;‚ñ∂Ô∏è Demo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hugging Face Demo: doing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Êàë‰ª¨Êèê‰æõ‰∫Ü‰∏Ä‰∏™ÁÆÄÊ¥ÅÁöÑÂü∫‰∫égradioÁöÑ‰∫§‰∫íÂºèwebÁïåÈù¢ÔºåÂêØÂä®ÊúçÂä°ÂêéÔºåÂèØÈÄöËøáÊµèËßàÂô®ËÆøÈóÆÔºåËæìÂÖ•ÈóÆÈ¢òÔºåÊ®°Âûã‰ºöËøîÂõûÁ≠îÊ°à„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ÂêØÂä®ÊúçÂä°ÔºåÂëΩ‰ª§Â¶Ç‰∏ãÔºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python gradio_demo.py --model_type base_model_type --base_model path_to_llama_hf_dir --lora_model path_to_lora_dir&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÂèÇÊï∞ËØ¥ÊòéÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--model_type {base_model_type}&lt;/code&gt;ÔºöÈ¢ÑËÆ≠ÁªÉÊ®°ÂûãÁ±ªÂûãÔºåÂ¶Çllama„ÄÅbloom„ÄÅchatglmÁ≠â&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--base_model {base_model}&lt;/code&gt;ÔºöÂ≠òÊîæHFÊ†ºÂºèÁöÑLLaMAÊ®°ÂûãÊùÉÈáçÂíåÈÖçÁΩÆÊñá‰ª∂ÁöÑÁõÆÂΩïÔºå‰πüÂèØ‰ΩøÁî®HF Model HubÊ®°ÂûãË∞ÉÁî®ÂêçÁß∞&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--lora_model {lora_model}&lt;/code&gt;ÔºöLoRAÊñá‰ª∂ÊâÄÂú®ÁõÆÂΩïÔºå‰πüÂèØ‰ΩøÁî®HF Model HubÊ®°ÂûãË∞ÉÁî®ÂêçÁß∞„ÄÇËã•loraÊùÉÈáçÂ∑≤ÁªèÂêàÂπ∂Âà∞È¢ÑËÆ≠ÁªÉÊ®°ÂûãÔºåÂàôÂà†Èô§--lora_modelÂèÇÊï∞&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--tokenizer_path {tokenizer_path}&lt;/code&gt;ÔºöÂ≠òÊîæÂØπÂ∫îtokenizerÁöÑÁõÆÂΩï„ÄÇËã•‰∏çÊèê‰æõÊ≠§ÂèÇÊï∞ÔºåÂàôÂÖ∂ÈªòËÆ§ÂÄº‰∏é--base_modelÁõ∏Âêå&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--use_cpu&lt;/code&gt;: ‰ªÖ‰ΩøÁî®CPUËøõË°åÊé®ÁêÜ&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--gpus {gpu_ids}&lt;/code&gt;: ÊåáÂÆö‰ΩøÁî®ÁöÑGPUËÆæÂ§áÁºñÂè∑ÔºåÈªòËÆ§‰∏∫0„ÄÇÂ¶Ç‰ΩøÁî®Â§öÂº†GPUÔºå‰ª•ÈÄóÂè∑ÂàÜÈöîÔºåÂ¶Ç0,1,2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üöÄ Training Pipeline&lt;/h2&gt; &#xA;&lt;p&gt;Training Stage:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Stage&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Introduction&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Python script&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Shell script&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Stage 1: Continue Pretraining&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Â¢ûÈáèÈ¢ÑËÆ≠ÁªÉ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/shibing624/MedicalGPT/raw/main/pretraining.py&#34;&gt;pretraining.py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/shibing624/MedicalGPT/raw/main/run_pt.sh&#34;&gt;run_pt.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Stage 2: Supervised Fine-tuning&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ÊúâÁõëÁù£ÂæÆË∞É&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/shibing624/MedicalGPT/raw/main/supervised_finetuning.py&#34;&gt;supervised_finetuning.py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/shibing624/MedicalGPT/raw/main/run_sft.sh&#34;&gt;run_sft.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Stage 3: Reward Modeling&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Â•ñÂä±Ê®°ÂûãÂª∫Ê®°&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/shibing624/MedicalGPT/raw/main/reward_modeling.py&#34;&gt;reward_modeling.py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/shibing624/MedicalGPT/raw/main/run_rm.sh&#34;&gt;run_rm.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Stage 4: Reinforcement Learning&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Âº∫ÂåñÂ≠¶‰π†&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/shibing624/MedicalGPT/raw/main/rl_training.py&#34;&gt;rl_training.py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/shibing624/MedicalGPT/raw/main/run_rl.sh&#34;&gt;run_rl.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Êèê‰æõÂÆåÊï¥ÂõõÈò∂ÊÆµ‰∏≤Ëµ∑Êù•ËÆ≠ÁªÉÁöÑpipelineÔºö&lt;a href=&#34;https://github.com/shibing624/MedicalGPT/raw/main/run_training_pipeline.ipynb&#34;&gt;run_training_pipeline.ipynb&lt;/a&gt; ÔºåÂÖ∂ÂØπÂ∫îÁöÑcolabÔºö &lt;a href=&#34;https://colab.research.google.com/github/shibing624/MedicalGPT/blob/main/run_training_pipeline.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt; ÔºåËøêË°åÂÆåÂ§ßÊ¶ÇÈúÄË¶Å15ÂàÜÈíüÔºåÊàëËøêË°åÊàêÂäüÂêéÁöÑÂâØÊú¨colabÔºö&lt;a href=&#34;https://colab.research.google.com/drive/1RGkbev8D85gR33HJYxqNdnEThODvGUsS?usp=sharing&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shibing624/MedicalGPT/wiki/%E8%AE%AD%E7%BB%83%E7%BB%86%E8%8A%82%E8%AF%B4%E6%98%8E&#34;&gt;ËÆ≠ÁªÉÁªÜËäÇËØ¥Êòéwiki&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Supported Models&lt;/h4&gt; &#xA;&lt;p&gt;The following models are tested:&lt;/p&gt; &#xA;&lt;p&gt;bloom:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/bigscience/bloomz-560m&#34;&gt;bigscience/bloomz-560m&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/bigscience/bloomz-1b7&#34;&gt;bigscience/bloomz-1b7&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/bigscience/bloomz-7b1&#34;&gt;bigscience/bloomz-7b1&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;llama:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/shibing624/chinese-alpaca-plus-7b-hf&#34;&gt;shibing624/chinese-alpaca-plus-7b-hf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/shibing624/chinese-alpaca-plus-13b-hf&#34;&gt;shibing624/chinese-alpaca-plus-13b-hf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/minlik/chinese-llama-plus-7b-merged&#34;&gt;minlik/chinese-llama-plus-7b-merged&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/shibing624/chinese-llama-plus-13b-hf&#34;&gt;shibing624/chinese-llama-plus-13b-hf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/decapoda-research/llama-7b-hf&#34;&gt;decapoda-research/llama-7b-hf&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;chatglm:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/THUDM/chatglm-6b&#34;&gt;THUDM/chatglm-6b&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;baichuan:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/baichuan-inc/baichuan-7B&#34;&gt;baichuan-inc/baichuan-7B&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üíª Inference&lt;/h2&gt; &#xA;&lt;p&gt;ËÆ≠ÁªÉÂÆåÊàêÂêéÔºåÁé∞Âú®Êàë‰ª¨Âä†ËΩΩËÆ≠ÁªÉÂ•ΩÁöÑÊ®°ÂûãÔºåÈ™åËØÅÊ®°ÂûãÁîüÊàêÊñáÊú¨ÁöÑÊïàÊûú„ÄÇ&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python inference.py \&#xA;    --model_type base_model_type \&#xA;    --base_model path_to_llama_hf_dir \&#xA;    --lora_model path_to_lora \&#xA;    --with_prompt \&#xA;    --interactive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÂèÇÊï∞ËØ¥ÊòéÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--model_type {base_model_type}&lt;/code&gt;ÔºöÈ¢ÑËÆ≠ÁªÉÊ®°ÂûãÁ±ªÂûãÔºåÂ¶Çllama„ÄÅbloom„ÄÅchatglmÁ≠â&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--base_model {base_model}&lt;/code&gt;ÔºöÂ≠òÊîæHFÊ†ºÂºèÁöÑLLaMAÊ®°ÂûãÊùÉÈáçÂíåÈÖçÁΩÆÊñá‰ª∂ÁöÑÁõÆÂΩï&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--lora_model {lora_model}&lt;/code&gt;ÔºöLoRAËß£ÂéãÂêéÊñá‰ª∂ÊâÄÂú®ÁõÆÂΩïÔºå‰πüÂèØ‰ΩøÁî®HF Model HubÊ®°ÂûãË∞ÉÁî®ÂêçÁß∞„ÄÇÂ¶ÇÊûúÂ∑≤ÁªèÂêàÂπ∂‰∫ÜLoRAÊùÉÈáçÂà∞È¢ÑËÆ≠ÁªÉÊ®°ÂûãÔºåÂàôÂèØ‰ª•‰∏çÊèê‰æõÊ≠§ÂèÇÊï∞&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--tokenizer_path {tokenizer_path}&lt;/code&gt;ÔºöÂ≠òÊîæÂØπÂ∫îtokenizerÁöÑÁõÆÂΩï„ÄÇËã•‰∏çÊèê‰æõÊ≠§ÂèÇÊï∞ÔºåÂàôÂÖ∂ÈªòËÆ§ÂÄº‰∏é--base_modelÁõ∏Âêå&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--with_prompt&lt;/code&gt;ÔºöÊòØÂê¶Â∞ÜËæìÂÖ•‰∏épromptÊ®°ÁâàËøõË°åÂêàÂπ∂„ÄÇÂ¶ÇÊûúÂä†ËΩΩAlpacaÊ®°ÂûãÔºåËØ∑Âä°ÂøÖÂêØÁî®Ê≠§ÈÄâÈ°πÔºÅ&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--interactive&lt;/code&gt;Ôºö‰ª•‰∫§‰∫íÊñπÂºèÂêØÂä®Ôºå‰ª•‰æøËøõË°åÂ§öÊ¨°ÂçïËΩÆÈóÆÁ≠î&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--data_file {file_name}&lt;/code&gt;ÔºöÈùû‰∫§‰∫íÊñπÂºèÂêØÂä®‰∏ãÔºåÊåâË°åËØªÂèñfile_name‰∏≠ÁöÑÁöÑÂÜÖÂÆπËøõË°åÈ¢ÑÊµã&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--predictions_file {file_name}&lt;/code&gt;ÔºöÈùû‰∫§‰∫íÂºèÊñπÂºè‰∏ãÔºåÂ∞ÜÈ¢ÑÊµãÁöÑÁªìÊûú‰ª•jsonÊ†ºÂºèÂÜôÂÖ•file_name&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--use_cpu&lt;/code&gt;: ‰ªÖ‰ΩøÁî®CPUËøõË°åÊé®ÁêÜ&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--gpus {gpu_ids}&lt;/code&gt;: ÊåáÂÆö‰ΩøÁî®ÁöÑGPUËÆæÂ§áÁºñÂè∑ÔºåÈªòËÆ§‰∏∫0„ÄÇÂ¶Ç‰ΩøÁî®Â§öÂº†GPUÔºå‰ª•ÈÄóÂè∑ÂàÜÈöîÔºåÂ¶Ç0,1,2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Inference Examples&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://huggingface.co/shibing624/ziya-llama-13b-medical-lora&#34;&gt;shibing624/ziya-llama-13b-medical-lora&lt;/a&gt; inference examples:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Human&lt;/th&gt; &#xA;   &lt;th&gt;Assitant&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Â∞èÂ≠©ÂèëÁÉßÊÄé‰πàÂäû&lt;/td&gt; &#xA;   &lt;td&gt;ÂÆùÂÆùÁöÑÊäµÊäóÂäõÊòØÊØîËæÉÂ∑ÆÁöÑÔºåÊâÄ‰ª•ÂæàÂÆπÊòìÂ∞±‰ºöÂá∫Áé∞ÊÑüÂÜíÊàñËÄÖÂÖ∂‰ªñÁñæÁóÖ„ÄÇÂ¶ÇÊûúÂÆùÂÆùÂú®Âπ≥Êó∂Ê≤°ÊúâÊ≥®ÊÑè‰øùÊöñÔºåÈÇ£‰πà‰πüÂèØËÉΩÂØºËá¥Ë∫´‰ΩìÂèóÂáâËÄåÂºïËµ∑‰∫ÜÊÑüÂÜíÁ≠âÁóáÁä∂ÔºåËøôÊ†∑‰∏ç‰ªÖÂØπ‰∫éÂÅ•Â∫∑ÈÄ†ÊàêÂΩ±ÂìçÔºåËøòÂèØËÉΩËÆ©ÂÆùÂÆùÂá∫Áé∞È´òÁÉ≠ÁöÑÊÉÖÂÜµ„ÄÇÂõ†Ê≠§ÂΩìÂÆ∂Èïø‰ª¨ÂèëÁé∞Ëá™Â∑±ÁöÑÂÆùÂÆùÂá∫Áé∞‰∫ÜÈ´òÁÉ≠ÁöÑÈóÆÈ¢ò‰πãÂêé‰∏ÄÂÆöË¶ÅÂèäÊó©ËøõË°åÊ≤ªÁñóÂíåÊä§ÁêÜÊâçÂ•Ω„ÄÇ&lt;br&gt;1„ÄÅÈ¶ñÂÖàÊàë‰ª¨Â∫îËØ•ÁªôÂÆùÂÆùÊúçÁî®ÈÄÄÁÉßËçØÁâ©Êù•Â∏ÆÂä©ÈôçÊ∏©Ôºå‰ΩÜÊòØÂçÉ‰∏á‰∏çË¶ÅÁõ≤ÁõÆ‰ΩøÁî®ÈÄÄÁÉßËçØÁâ©ÔºåÂê¶ÂàôÂè™‰ºöÂä†ÈáçÂÆùÂÆùÁöÑÁóÖÊÉÖÔºåÊúÄÂ•ΩÂ∏¶ÁùÄÂÆùÂÆùÂà∞ÂåªÈô¢ÂéªÊ£ÄÊü•Ê∏ÖÊ•öÂÖ∑‰ΩìÂéüÂõ†‰πãÂêéÂÜçÈíàÂØπÊÄßÂú∞ÈááÂèñÊé™ÊñΩÂ§ÑÁêÜ„ÄÇ&lt;br&gt;2„ÄÅÂè¶Â§ñÂ§ß‰∫∫‰ª¨‰πüÈúÄË¶ÅÂÅöÂ•ΩÈ¢ÑÈò≤Â∑•‰ΩúÔºåÂ∞§ÂÖ∂ÊòØÂ§©Ê∞îÂèòÂåñÁöÑÊó∂ÂÄôÊõ¥Â∫îËØ•Â§öÂÖ≥ÂøÉ‰∏ãÂÆùÂÆùÁöÑË∫´‰ΩìÁä∂ÊÄÅÔºåÈÅøÂÖçÂÆùÂÆùÂèóÂØíÂèóÂáâ‰ªéËÄåËØ±ÂèëÂêÑÁßçÁñæÁóÖÔºåÂêåÊó∂‰πüË¶ÅÂ∞ΩÈáèÂáèÂ∞ëÂÆùÂÆùÊé•Ëß¶ÁªÜËèåÁóÖÊØíÁöÑÊú∫‰ºöÔºåÂ¢ûÂº∫ÂÆùÂÆùÁöÑÂÖçÁñ´Âäõ„ÄÇ&lt;br&gt;3„ÄÅÈô§‰∫Ü‰∏äÈù¢‰∏§ÁÇπ‰πãÂ§ñÔºåÂ§ß‰∫∫‰ª¨ËøòÂèØ‰ª•ÈÄöËøáÊåâÊë©Êé®ÊãøÁ©¥‰ΩçÁöÑÊñπÂºèÊù•ÁºìËß£ÂÆùÂÆùÁöÑÁóÖÁóõÔºå‰øÉËøõË°ÄÊ∂≤Âæ™ÁéØÔºåÊèêÂçáÊñ∞Èôà‰ª£Ë∞¢ÈÄüÂ∫¶ÔºåËææÂà∞Âø´ÈÄüÊ∂àÁÇéÊ≠¢ÁñºÁöÑÊïàÊûú&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;‰∏ÄÂ≤ÅÂÆùÂÆùÂèëÁÉßËÉΩÂêÉÂï•ËçØÔºü&lt;/td&gt; &#xA;   &lt;td&gt;Â≠©Â≠êÁöÑË∫´‰ΩìÊòØÂæàËÑÜÂº±ÁöÑÔºåÂ¶ÇÊûú‰∏çÊ≥®ÊÑè‰øùÊä§Â•ΩËá™Â∑±Â∞±‰ºöÂá∫Áé∞ÂêÑÁßçÁñæÁóÖ„ÄÇÊúâ‰∫õÂÆ∂ÈïøÂú®ÁúãÂà∞Â≠©Â≠êÁîüÁóÖÂêéÈÉΩÈùûÂ∏∏ÁùÄÊÄ•ÔºåÊÉ≥Ë¶ÅÁ´ãÂàªÁªô‰ªñ‰ª¨Áî®ËçØÊ≤ªÁñóÔºå‰ΩÜÂÖ∂ÂÆûÂπ∂Ê≤°ÊúâÈÇ£‰πàÁÆÄÂçïÔºåÂõ†‰∏∫ÊØè‰∏™‰∫∫ÂØπ‰∫éËçØÁâ©ÁöÑÊïèÊÑüÂ∫¶ÂíåËÄêÂèóÊÄßÈÉΩÊòØ‰∏çÂêåÁöÑÔºåÊâÄ‰ª•Êàë‰ª¨ÈúÄË¶ÅÊ†πÊçÆÂÖ∑‰ΩìÊÉÖÂÜµÊù•ÈÄâÊã©ÂêàÈÄÇÁöÑÊñπÊ≥ïËøõË°åÊ≤ªÁñóÊâçÂèØ‰ª•ËææÂà∞ÊúÄ‰Ω≥ÊïàÊûú„ÄÇ&lt;br&gt;1„ÄÅÈ¶ñÂÖàÂ§ßÂ§öÊï∞Â∞èÂÑøÈÄÄÁÉ≠ËçØ‰∏≠Âê´ÊúâËß£ÁÉ≠ÈïáÁóõÊàêÂàÜÈòøÂè∏ÂåπÊûóÊàñÂ∏ÉÊ¥õËä¨Á≠âÔºåËøôÁ±ªËçØÂìÅËôΩÁÑ∂ÂâØ‰ΩúÁî®ËæÉÂ∞ëÔºå‰ΩÜ‰πüÂ≠òÂú®ËøáÈáè‰ΩøÁî®ÂºïËµ∑ËÉÉËÇ†ÈÅìÊçü‰º§ÁîöËá≥Ê∂àÂåñÈÅìÊ∫ÉÁñ°Âá∫Ë°ÄÁöÑÈ£éÈô©Ôºõ&lt;br&gt;2„ÄÅËøòÊúâÈÉ®ÂàÜÂ∞èÂÑøÈÄÄÁÉ≠ËçØ‰∏≠Âê´ÊúâÊâëÂ∞îÊïèÁ≠âÊäóÁªÑËÉ∫ËçØÔºåÂÆÉ‰ª¨Êú¨Ë∫´Â±û‰∫éÂ§ÑÊñπËçØÔºåÂ∫îËØ•‰∏•Ê†ºÊåâÁÖßÂåªÂò±ÊúçÁî®ÔºåÂàáÂãøÊìÖËá™Âä†ÂáèÂâÇÈáèÊàñËÄÖÂª∂ÈïøÁî®ËçØÊó∂Èó¥;&lt;br&gt;3„ÄÅÊ≠§Â§ñÔºåÊüê‰∫õÂ∞èÂÑøÈÄÄÁÉ≠ËçØ‰∏≠Âê´ÊúâÁª¥ÁîüÁ¥†CÂèäËë°ËêÑÁ≥ñÈÖ∏ÈíôÁ≠âËê•ÂÖªË°•ÂÖÖÂâÇÔºåÂè™ÊúâÂΩìÊÇ£ÂÑø‰º¥ÈöèËÑ±Ê∞¥ÁóáÁä∂ÔºàÂ¶ÇÂè£Ê∏¥„ÄÅÂ∞øËâ≤Ê∑±ÔºâÊó∂ÊâçËÄÉËôëÊ∑ªÂä†ÔºåÂê¶ÂàôÂÆπÊòìÈÄ†ÊàêÁîµËß£Ë¥®Á¥ä‰π±„ÄÇ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ËÇõÈó®ÁóÖÂèòÂèØËÉΩÊòØ‰ªÄ‰πàÁñæÁóÖÁöÑÁóáÁä∂&lt;/td&gt; &#xA;   &lt;td&gt;ÁóîÁñÆ„ÄÅÁõ¥ËÇ†ÊÅØËÇâÁ≠â„ÄÇ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ÂåªÁîüÔºåÊÇ®Â•ΩÁôΩÂ∏¶Â¢ûÂ§öÊ≥õÈªÑÊÄé‰πàÂõû‰∫ãÔºü&lt;/td&gt; &#xA;   &lt;td&gt;‰Ω†ËøôÁßçÊÉÖÂÜµËÄÉËôëÂèØËÉΩ‰ºöÊòØÈò¥ÈÅìÁÇéÁóáÂºïËµ∑ÁöÑÂª∫ËÆÆÂπ≥Êó∂ÁïôÊÑèÂç´ÁîüÊ∏ÖÊ¥ÅÔºåÂã§Êç¢Ê¥óË°£Áâ©ÂÜÖË£§ÔºåÂøÖË¶ÅÊó∂ÂéªÊ≠£ËßÑÂÖ¨Á´ãÂåªÈô¢Â¶áÁßëÂ§çËØäÂÅöÂàÜÊ≥åÁâ©Â∏∏ËßÑÁ≠âÁõ∏ÂÖ≥Ê£ÄÊü•ÊòéÁ°ÆÁóÖÂõ†ÂêéÂØπÁóáÊ≤ªÁñóÔºå‰∏çÂêåÂéüÂõ†ÊâÄËá¥ÁöÑÁñæÁóÖÂú®‰∏¥Â∫äË°®Áé∞‰∏ä‰πüÂ≠òÂú®Â∑ÆÂºÇÊÄßÔºåÂ¶ÇÊûúÊÇ£ËÄÖÂá∫Áé∞‰∫ÜÁ±ª‰ºº‰∫éÁöÑÁóáÁä∂Â∫îÂΩìÂèäÊó©Âà∞‰∏ì‰∏ö„ÄÅÊùÉÂ®ÅÁöÑÂåªÈô¢ËøõË°åËØ¶ÁªÜÁöÑÊ£ÄÈ™åÂíåÊïëÊ≤ª&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ËçØÊµÅÂêéÊúâÂ∑ßÂÖãÂäõÁôΩÂ∏¶ÊòØÊ≤°ÊµÅÂπ≤ÂáÄÂêó&lt;/td&gt; &#xA;   &lt;td&gt;Âú®Êó•Â∏∏ÁîüÊ¥ª‰∏≠ÔºåÊàë‰ª¨Ë¶ÅÊàñÂ§öÊàñÂ∞ë‰∫ÜËß£‰∏Ä‰∫õÂ∏∏ËßÅÁñæÁóÖÁöÑÁõ∏ÂÖ≥Áü•ËØÜÔºå‰∏ç‰ªÖËÉΩËµ∑Âà∞Â¢ûÂä†Áü•ËØÜÊ∞¥Âπ≥ÁöÑ‰ΩúÁî®ÔºåÊõ¥ËÉΩËÆ©Ëá™Â∑±Êõ¥Â•ΩÂú∞È¢ÑÈò≤Ê≠§Á±ªÁñæÁóÖÁöÑ‰∫ßÁîü„ÄÇÂæàÂ§öÂ•≥ÊÄßÈÉΩ‰ºöÂá∫Áé∞ÊúàÁªèÁ¥ä‰π±„ÄÅËÖπÁóõÁ≠âÁóáÁä∂ÔºåËøôÊó∂ÂÄôÂ∞±ÈúÄË¶ÅËÄÉËôëÂ¶áÁßëÁÇéÁóáÂèØËÉΩÔºåÊØîÂ¶ÇËØ¥ÂÆ´È¢àÁ≥úÁÉÇÂíåÁõÜËÖîÁßØÊ∂≤„ÄÇÈÇ£‰πà‰∏ãÈù¢Â∞èÁºñÊù•ÁªôÂ§ßÂÆ∂‰ªãÁªç‰∏ÄÁßçÊÉÖÂÜµÔºöËçØÁâ©ÊµÅ‰∫ßÂêéÁôΩÂ∏¶ÂëàÂ∑ßÂÖãÂäõËâ≤ÊÄé‰πàÂõû‰∫ãÔºü&lt;br&gt;1„ÄÅÈ¶ñÂÖàÔºåÂØπ‰∫éËçØÁâ©ÊµÅ‰∫ß‰πãÂêéÂèëÁé∞Èò¥ÈÅìÂàÜÊ≥åÁâ©ÂºÇÂ∏∏ÔºåÂ∫îËØ•ÂèäÊó∂ÂéªÂåªÈô¢ÂÅöÊ£ÄÊü•Á°ÆËØäÂÖ∑‰ΩìÂéüÂõ†ÔºåÁÑ∂ÂêéÂÜçÊ†πÊçÆÁªìÊûúËøõË°åÊ≤ªÁñóË∞ÉÁêÜ„ÄÇ&lt;br&gt;2„ÄÅÂÖ∂Ê¨°ÔºåÁî±‰∫éÊØè‰∏™‰∫∫Ë∫´‰ΩìÁ¥†Ë¥®‰ª•ÂèäÊÇ£ÁóÖÁ®ãÂ∫¶Â≠òÂú®Â∑ÆÂà´ÔºåÊâÄ‰ª•ÈááÂèñÁöÑÊé™ÊñΩ‰πü‰∏çÂ∞ΩÁõ∏ÂêåÔºå‰ΩÜÊó†ËÆ∫ÈÄâÊã©Âì™ÁßçÊñπÂºèÂ§ÑÁêÜÔºåÈÉΩÂøÖÈ°ª‰∏•Ê†ºÊåâÁÖßËßÑÂÆöÂâÇÈáèÊúçÁî®ÔºåÂπ∂‰∏îÊ≥®ÊÑèËßÇÂØüÂâØ‰ΩúÁî®ÂèçÊò†ÊÉÖÂÜµÔºåËã•Âá∫Áé∞ÊòéÊòæ‰∏çÈÄÇÊÑüËßâÔºåÂàôÂ∫îÁ´ãÂç≥ÂÅúÊ≠¢‰ΩøÁî®„ÄÇ&lt;br&gt;3„ÄÅÊúÄÂêéÔºåÂª∫ËÆÆ‰Ω†‰øùÊåÅÂ§ñÈò¥Ê∏ÖÊ¥ÅÂç´ÁîüÔºåÂã§Êç¢ÂÜÖË£§ÔºåÈÅøÂÖçÂêÉËæõËæ£Âà∫ÊøÄÈ£üÂìÅÔºåËÄå‰∏îËøòË¶ÅÁ¶ÅÂøåÊàø‰∫ãÔºåÂê¶ÂàôÂÆπÊòìÂºïËµ∑‰∫§ÂèâÊÑüÊüìÂΩ±ÂìçÊÅ¢Â§çÂÅ•Â∫∑„ÄÇ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Áª¥ËÉ∫ÈÖØÁª¥E‰π≥ËÜèËÉΩÊ≤ªÁêÜ‰ªÄ‰πàÁñæÁóÖ&lt;/td&gt; &#xA;   &lt;td&gt;ÁöÆËÇ§Ê∑ÄÁ≤âÊ†∑ÂèòÊÄßÔºõËÑÇÊ∫¢ÊÄßËßíÂåñÁóá&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Áó§ÁñÆÊòØ‰ªÄ‰πàÂéüÂõ†ÂØºËá¥ÁöÑ?&lt;/td&gt; &#xA;   &lt;td&gt;Áó§ÁñÆÔºåÂèàÁß∞ÈùíÊò•Áóò„ÄÅÁ≤âÂà∫„ÄÇÂÆÉ‰∏ªË¶ÅÂèëÁîüÂú®Èù¢ÈÉ®ÂíåËÉ∏ËÉåÈÉ®‰ΩçÔºåË°®Áé∞‰∏∫ÈªëÂ§¥Á≤âÂà∫„ÄÅÁôΩÂ§¥Á≤âÂà∫„ÄÅ‰∏òÁñπ„ÄÅËÑìÁñ±„ÄÅÁªìËäÇÁ≠âÂ§öÁßçÂΩ¢Âºè„ÄÇÂÖ∂‰∏≠‰ª•ÈªëÂ§¥Á≤âÂà∫ÊúÄÂ∏∏ËßÅÔºåÁ∫¶Âç†ÂÖ®Ë∫´ÁöÆËÇ§ÁóÖÊÇ£ËÄÖÁöÑ70%Â∑¶Âè≥„ÄÇÈÇ£‰πàÔºåÁó§ÁñÆÊòØ‰ªÄ‰πàÂéüÂõ†ÂºïËµ∑ÁöÑÂë¢Ôºü‰∏ãÈù¢Â∞±ÁªôÂ§ßÂÆ∂‰ªãÁªç‰∏Ä‰∫õÁõ∏ÂÖ≥ÂÜÖÂÆπ„ÄÇ&lt;br&gt;1„ÄÅÈõÑÊÄßÊøÄÁ¥†ÂàÜÊ≥åËøáÊó∫ÔºöÁî∑Â•≥ÈÉΩ‰ºöÈïøÁóòÁóòÔºå‰ΩÜÊòØÂ•≥Â≠©Â≠êÊØîËæÉÂñúÊ¨¢Áî®ÂåñÂ¶ÜÂìÅÊù•Êé©ÁõñËÑ∏‰∏äÁöÑÈóÆÈ¢òÔºåËÄå‰∏îÂæàÂ§ö‰∫∫‰∏çÁü•ÈÅìËøôÊ†∑ÂÅöÂèçËÄåÂä†Èáç‰∫ÜËá™Â∑±ÁöÑÊØõÂõäÁÇéÁóáÁä∂ÔºåÊâÄ‰ª•ËØ¥Âπ≥Êó∂Â∫îËØ•Â∞ë‰ΩøÁî®Âê´ÊúâÈõåÊøÄÁ¥†Á±ªÁöÑ‰∫ßÂìÅ„ÄÇ&lt;br&gt;2„ÄÅÈ•ÆÈ£ü‰π†ÊÉØÂ∑ÆÔºöÁªèÂ∏∏ÂêÉËæõËæ£Ê≤πËÖªÁöÑ‰∏úË•øÊàñËÄÖÁîúÈ£ü‰πüÂèØËÉΩÈÄ†Êàê‰ΩìÂÜÖÊØíÁ¥†Â†ÜÁßØÔºå‰ªéËÄåËØ±ÂèëÁó§ÁñÆ„ÄÇ&lt;br&gt;3„ÄÅÂéãÂäõÂ§™Â§ßÔºöÂ¶ÇÊûú‰Ω†ÊÄªÊòØÂ§Ñ‰∫éÁ¥ßÂº†ÁÑ¶ËôëÁöÑÊÉÖÁª™‰πã‰∏≠ÔºåÂêåÊó∂ËøòÊ≤°ÊúâÂèäÊó∂Ë∞ÉÊï¥Â•ΩÂøÉÊÄÅÔºåÈÇ£‰πàÂæàÂÆπÊòìÂá∫Áé∞ÂÜÖÂàÜÊ≥åÂ§±Ë∞ÉÁöÑÊÉÖÂÜµÔºåËøõËÄåÂΩ±ÂìçÂà∞ËÇåËÇ§ÂÅ•Â∫∑„ÄÇ&lt;br&gt;4„ÄÅÁù°Áú†Ë¥®ÈáèÂ∑ÆÔºöÁÜ¨Â§úÂØπÊàë‰ª¨ÁöÑË∫´‰Ωì‰º§ÂÆ≥ÈùûÂ∏∏‰∏•ÈáçÔºåÂ∞§ÂÖ∂ÊòØÂØπ‰∫éÂπ¥ËΩª‰∫∫Áæ§Êõ¥ÁîöÔºå‰ªñ‰ª¨ÈúÄË¶Å‰øùËØÅÂÖÖË∂≥ÁöÑÁù°Áú†ÊâçË°åÔºåÂê¶ÂàôÂæàÂÆπÊòìËÆ©ËÇåËÇ§ÂèòÂæóÊöóÊ≤âÊó†ÂÖâÊ≥Ω„ÄÇ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ËÑ∏‰∏äÈïøÈùíÊò•ÁóòÊÄé‰πàÂäû,ËÉΩÂêÉÂï•ËçØ,ÈúÄË¶ÅÊ≥®ÊÑèÂï•&lt;/td&gt; &#xA;   &lt;td&gt;‰Ω†Â•ΩÔºåÊ†πÊçÆÊÇ®ÁöÑÊèèËø∞ËÄÉËôëÊòØÁó§ÁñÆ„ÄÇÂª∫ËÆÆÂ§ñÁî®Áª¥ËÉ∫ÈÖØ‰π≥ËÜèÊàñËÄÖÈòøËææÂ∏ïÊûóÂáùËÉ∂ËøõË°åÊ≤ªÁñóÁúãÁúãÔºåÂπ≥Êó∂Á¶ÅÂøåËæõËæ£ÂíåÂà∫ÊøÄÊÄßÈ£üÁâ©ÔºåÂ¶ÇÊµ∑È≤ú„ÄÅÁãóËÇâ„ÄÅÁæäËÇâÁ≠â‚ÄúÂèë‚ÄùÂä®ÂìÅÔºå‰ª•ÂèäËë±ËíúÈü≠ÂßúÁ≠âÂà∫ÊøÄÊÄßË∞ÉÊñô„ÄÇÂ§öÂñùÊ∞¥ÔºåÂ∞ëÂêÉÊ≤πËÖªÈ´òÁÉ≠ÈáèÈ£üÁâ©„ÄÇ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Áî±‰∫éËæìÁ≤æÁÆ°Â†µÂ°û‰ºö‰∏ç‰ºöÂØºËá¥Áî∑ÊÄß‰∏çËÇ≤ÔºüÔºåÂåªÁîüÊÇ®Â•ΩÔºåÊàëÂêå‰∫ãËøôÂá†Â§©‰∏çÂºÄÂøÉÔºåÊàëÈóÆÂ•πÊÄé‰πà‰∫ÜÔºåÂ•πËØ¥Â•πËÄÅÂÖ¨ËæìÁ≤æÁÆ°Â†µÂ°ûÔºåÊâÄ‰ª•‰∏ÄÁõ¥Ê≤°Â≠©Â≠êÔºå‰∏çÊòØ‰∏çÊÉ≥Ë¶ÅÔºåËØ∑ÈóÆËæìÁ≤æÁÆ°Â†µÂ°û‰ºö‰∏ç‰ºöÂØºËá¥Áî∑ÊÄß‰∏çËÇ≤Ôºü&lt;/td&gt; &#xA;   &lt;td&gt;‰Ω†Â•ΩÔºÅÊ†πÊçÆ‰Ω†ÁöÑÂèôËø∞ÂèäÁóáÁä∂Êé®ÊµãÔºöÂ¶ÇÊûúÊúâËæìÁ≤æÁÆ°ÈòªÂ°ûÊàñËÄÖÁã≠Á™ÑÁ≠âÊÉÖÂÜµÈÉΩÂèØËÉΩ‰ºöÂºïÊù•Êó†Ê≥ïÊéíÂá∫Êù•Á≤æÊ∂≤ËÄåÂΩ±ÂìçÊÄÄ‰∏ä„ÄÇÂª∫ËÆÆÂà∞Ê≠£ËßÑ‰∏ì‰∏öÁöÑÂø´Â≠ïÂåªÈô¢ÂÆûÊñΩËøõË°åÂí®ËØ¢ÂíåÊ≤ªÁñó‰∏∫ÂÆú„ÄÇÂØπ‰∫éËæìÁ≤æÁÆ°ÊÇ£ËÄÖÊù•ËØ¥ÔºåÂèäÊó∂ÊïëÊ≤ªÊòØÂèØ‰ª•Âáè‰ΩéÁóÖÂèëÔºåÂ¶ÇÊûú‰∏çÂèäÊó∂ÊïëÊ≤ª‰ºöÂΩ±ÂìçÂà∞ÂèóÂ≠ïÊÉÖÂÜµ„ÄÇÂõ†Ê≠§ÊÇ£ËÄÖË¶ÅÂèäÊó∂ËçØÁâ©ÊïëÊ≤ªÔºåÂπ∂‰∏îÊó•Â∏∏ÁîüÊ¥ª‰∏≠Ë¶ÅÂ§öÁúãÈáçËá™Ë∫´Êä§ÁêÜ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ÂøÉËÇåÊ¢óÂ°ûËÉΩÊ≤ªÁñóÂêóÔºü&lt;/td&gt; &#xA;   &lt;td&gt;ÂøÉËÑèÁóÖÊòØ‰∏ÄÁßçÂç±ÂÆ≥ÊÄßÊûÅÂ§ßÁöÑÁñæÁóÖÔºåÊàë‰ª¨Ë¶ÅÂØπÂÆÉÊúâË∂≥Â§üÂ§öÁöÑ‰∫ÜËß£„ÄÇÂú®ÁîüÊ¥ª‰∏≠ÂæàÂ§ö‰∫∫ÈÉΩ‰ºöÊÇ£‰∏äËøô‰∏™ÁñæÁóÖÔºåËÄå‰∏îËøò‰∏çÁü•ÈÅìÊÄé‰πàÂéªÈ¢ÑÈò≤ÂíåÊä§ÁêÜÔºåÊâÄ‰ª•Â∞±ÂØºËá¥Ëá™Â∑±ÁöÑË∫´‰ΩìË∂äÊù•Ë∂äÂ∑ÆÔºåÈÇ£‰πà‰∏ãÈù¢Â∞èÁºñÁªô‰Ω†‰ªãÁªçÂá†ÁÇπÂÖ≥‰∫éÂøÉËÑèÁóÖÁöÑÂ∏∏ËØÜÂêßÔºÅ&lt;br&gt;1„ÄÅÂÜ†Áä∂Âä®ËÑâÁ≤•Ê†∑Á°¨ÂåñÊÄßÂøÉËÑèÁóÖÔºöÂèàÁß∞‰∏∫ÂÜ†ÂøÉÁóÖÊàñÁº∫Ë°ÄÂûãÂøÉËÑèÁóÖÔºàIHDÔºâ,ÊòØ‰∏ñÁïåÂêÑÂú∞ÊúÄÈáçË¶ÅÁöÑÊ≠ª‰∫°ÂéüÂõ†‰πã‰∏Ä„ÄÇ&lt;br&gt;2„ÄÅÈ£éÊπøÁÉ≠Ôºö‰∏ªË¶Å‰æµÁäØÂøÉËÑèÁì£ËÜúÔºåÂèØÂºïËµ∑‰∫åÂ∞ñÁì£Áã≠Á™ÑÂèäÂÖ∂‰ªñÁ±ªÂûãÁöÑÂøÉËÑèÁì£ËÜúÁóÖÂèòÔºõ&lt;br&gt;3„ÄÅÂÖàÂ§©ÊÄßÂøÉËÑèÁóÖÔºöÂåÖÊã¨ÊàøÈó¥ÈöîÁº∫Êçü„ÄÅÂÆ§Èó¥ÈöîÁº∫ÊçüÁ≠âÔºõ&lt;br&gt;4„ÄÅÈ´òËÑÇËõãÁôΩË°ÄÁóáÔºöÁî±‰∫éËÉÜÂõ∫ÈÜá‰∏é‰ΩéÂØÜÂ∫¶ËÑÇËõãÁôΩÂçáÈ´òÔºå‰ΩøÂæóÂä®ËÑâÂ£ÅÂ¢ûÂéöÔºåÁÆ°ËÖîÁº©Â∞èÔºåÊòìÂΩ¢ÊàêÊñëÂùóÂπ∂ËÑ±ËêΩÈÄ†ÊàêÊÄ•ÊÄßÊ†ìÂ°ûÔºõ&lt;br&gt;5„ÄÅËÇ•ËÉñÔºöËøáÈáèÊëÑÂÖ•È£üÁâ©ÔºåÁâπÂà´ÊòØÂê´Á≥ñÈ•ÆÊñôÔºåÂä†ÈÄüËÑÇËÇ™Â†ÜÁßØÔºå‰øÉËøõÂä®ËÑâÁ≤•Ê†∑Á°¨ÂåñÂèëÂ±ïÔºõ&lt;br&gt;6„ÄÅÂê∏ÁÉüÔºöÂ∞ºÂè§‰∏ÅÂà∫ÊøÄ‰∫§ÊÑüÁ•ûÁªèÂÖ¥Â•ãÔºå‰ΩøÂ§ñÂë®ÈòªÂäõÂ¢ûÂº∫ÔºåÊî∂Áº©ÂéãÂçáÈ´òÔºåËàíÂº†ÊúüÂáèÁü≠Ôºå‰ªéËÄåÈôç‰ΩéÂ∑¶Âè≥ÂøÉÂÆ§Â∞ÑË°ÄÂàÜÊï∞ÔºåËØ±ÂèëÂøÉÂæãÂ§±Â∏∏Ôºõ&lt;br&gt;7„ÄÅÈÖóÈÖíÔºöÈïøÊúüÂóúÈÖíËÄÖÔºåËÇùÂäüÂèóÂà∞ÂΩ±ÂìçÔºå‰ª£Ë∞¢Á¥ä‰π±ÔºåÂÆπÊòìÂá∫Áé∞ËÑÇË¥®‰ª£Ë∞¢ÂºÇÂ∏∏„ÄÇ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ÊÄé‰πàËÆ©Ëá™Â∑±Á≤æÂäõÂÖÖÊ≤õÔºåÂàó5ÁÇπÂª∫ËÆÆ&lt;/td&gt; &#xA;   &lt;td&gt;1„ÄÅ‰øùËØÅÁù°Áú†Ë¥®ÈáèÔºöÊØèÂ§©Êôö‰∏ä7-8Â∞èÊó∂ÁöÑÈ´òË¥®ÈáèÁù°Áú†ÊòØÊèêÂçáË∫´‰ΩìÂíåÂ§ßËÑëÊ¥ªË∑ÉÂ∫¶ÊúÄÊúâÊïàÁöÑÊñπÊ≥ï„ÄÇ&lt;br&gt;2„ÄÅÂêàÁêÜÈ•ÆÈ£üÔºöÂùáË°°Ëê•ÂÖªÊëÑÂÖ•ÂØπ‰∫éÁª¥ÊåÅ‰∫∫‰ΩìÊ≠£Â∏∏ËøêËΩ¨Ëá≥ÂÖ≥ÈáçË¶ÅÔºåÂ§öÂêÉËî¨ËèúÊ∞¥ÊûúÔºåÂ∞ëÊ≤πËÖªËæõËæ£Âà∫ÊøÄÊÄßÈ£üÁâ©„ÄÇ&lt;br&gt;3„ÄÅÈÄÇÂΩìÈîªÁÇºÔºöÂùöÊåÅ‰∏ÄÂÆöÂº∫Â∫¶ÁöÑÈîªÁÇºÂèØ‰ª•‰øÉËøõË°ÄÊ∂≤Âæ™ÁéØÔºåÂ¢ûÂä†ËÇåËÇâËÄêÂäõÔºåÊîπÂñÑÂøÉËÇ∫ÂäüËÉΩÁ≠â„ÄÇ&lt;br&gt;4„ÄÅÂ≠¶‰π†Êñ∞Áü•ËØÜÔºö‰∏çÊñ≠Êé•Ëß¶Êñ∞‰∫ãÁâ©ÔºåÂºÄÊãìËßÜÈáéÔºåÊÄùËÄÉÈóÆÈ¢òÔºåÈÉΩ‰ºö‰ΩøÂæóÊàë‰ª¨Êõ¥ÂÖ∑ÂàõÈÄ†Âäõ‰∏éÁÅµÊÑü„ÄÇ&lt;br&gt;5„ÄÅÊîæÊùæÂøÉÊÉÖÔºöÈÄöËøáÂÜ•ÊÉ≥ÊàñËÄÖÁëú‰ºΩÊù•ÁºìËß£ÂéãÂäõÔºå‰πüÂèØ‰ª•Âê¨Èü≥‰πêÊàñÁúãÁîµÂΩ±Êù•Ë∞ÉËäÇÊÉÖÁª™„ÄÇ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ÂÜô‰∏™Êò•Â§©ÁöÑËØó&lt;/td&gt; &#xA;   &lt;td&gt;Êò•È£éÂêπÊãÇÔºåËä±ÂÑøÁªΩÊîæ„ÄÇ&lt;br&gt;Èò≥ÂÖâÊòéÂ™öÔºåÈ∏üËØ≠È∏£Âè´„ÄÇ&lt;br&gt;Ê†ëÊú®ÊäΩËäΩÔºåËçâÂú∞ÂèòÁªø„ÄÇ&lt;br&gt;‰∏áÁâ©Â§çËãèÔºåÁîüÊú∫ÂãÉÂèë„ÄÇ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ÂçóÊûÅÊ¥≤‰∏∫Âï•Ê≤°ÊúâÂåóÊûÅÁÜä?&lt;/td&gt; &#xA;   &lt;td&gt;ÂçóÊûÅÊòØ‰∏ñÁïå‰∏äÊúÄÂ§ßÁöÑÂÜ∞ÁõñÔºåË¶ÜÁõñÁùÄ98ÔºÖ‰ª•‰∏äÁöÑÂú∞ÁêÉË°®Èù¢ÁßØ„ÄÇÂÆÉ‰Ωç‰∫éÂçóÁ∫¨60Â∫¶Ëá≥74Â∫¶‰πãÈó¥ÔºåÁéØÁªïÂú®Êµ∑Ê¥ã‰∏≠ÂøÉÂë®Âõ¥„ÄÇÁî±‰∫éÂÖ∂Áã¨ÁâπÁöÑÊ∞îÂÄôÊù°‰ª∂ÂíåÁîüÊÄÅÁ≥ªÁªüÔºåÂçóÊûÅË¢´Áß∞‰∏∫‚ÄúÁúüÊ≠£ÁöÑËçíÈáé‚Äù„ÄÇÂçóÊûÅÊ¥≤Êã•Êúâ‰∏∞ÂØåÂ§öÊ†∑ÁöÑÂä®Ê§çÁâ©ËµÑÊ∫êÔºå‰ΩÜËøôÈáåÂπ∂‰∏çÂ≠òÂú®ÂåóÊûÅÁÜä„ÄÇ &lt;br&gt;ÈÇ£‰πàÔºå‰∏∫‰ªÄ‰πàÂçóÊûÅÊ¥≤Ê≤°ÊúâÂåóÊûÅÁÜäÂë¢Ôºü&lt;br&gt;È¶ñÂÖàÔºåÊàë‰ª¨ÈúÄË¶Å‰∫ÜËß£‰∏Ä‰∏ã‰∏§ËÄÖÊ†ñÊÅØÂú∞ÁöÑÂ∑ÆÂºÇ„ÄÇÂåóÊûÅÁÜä‰∏ªË¶ÅÂàÜÂ∏ÉÂú®ÂåóÂçäÁêÉÂØíÂÜ∑ÁöÑÈ´òÁ∫¨Â∫¶Âú∞Âå∫ÔºåÂ¶ÇÂä†ÊãøÂ§ß„ÄÅÊ†ºÈôµÂÖ∞Â≤õÁ≠âÂú∞„ÄÇËÄåÂçóÊûÅÊ¥≤ÂàôÂ§Ñ‰∫éÂçóÂçäÁêÉÔºåÂ±û‰∫éÊ∏©Â∏¶ÊàñÂØíÂ∏¶Ê∞îÂÄôÁ±ªÂûã„ÄÇËôΩÁÑ∂ÂçóÊûÅÊ¥≤‰πüÊúâÂæà‰ΩéÁöÑÂπ≥ÂùáÊ∞îÊ∏©Ôºà-25‚ÑÉÂ∑¶Âè≥ÔºâÔºå‰ΩÜ‰∏éÂåóÊûÅÁõ∏ÊØîËøòÊòØÂ§™ÁÉ≠‰∫Ü„ÄÇÂõ†Ê≠§ÔºåÂç≥‰ΩøÂåóÊûÅÁÜäËÉΩÂ§üÈÄÇÂ∫îÊõ¥‰∏•ÈÖ∑ÁöÑÊ∞îÂÄôÊù°‰ª∂ÔºåÂÆÉ‰ª¨‰πüÊó†Ê≥ïÂú®ÂçóÊûÅÊâæÂà∞ÂêàÈÄÇÁöÑÊ†ñÊÅØÂú∞„ÄÇ&lt;br&gt;Âè¶Â§ñÔºåÂçóÊûÅÊ¥≤Áº∫‰πèÈôÜÂú∞Âì∫‰π≥Âä®Áâ©È£üÁâ©Êù•Ê∫êÔºåÂåÖÊã¨È±ºÁ±ª„ÄÅÈ≤∏È±ºÂíå‰ºÅÈπÖÁ≠â„ÄÇÂ∞ΩÁÆ°ÂçóÊûÅÊ¥≤ÁöÑÊ∞¥Âüü‰∏≠‰πüÊúâÂêÑÁßçÈ±ºÁ±ªÔºå‰ΩÜÊï∞ÈáèËøúÂ∞ë‰∫éÂåóÊûÅÂúàÂÜÖ„ÄÇ&lt;br&gt;ÂêåÊó∂ÔºåÂçóÊûÅÊ¥≤ÁöÑÂúüËëóÂ±ÖÊ∞ë‚Äî‚Äî‰ºÅÈπÖÁæ§‰ΩìÁπÅÊÆñÂ≠£ËäÇÊúüÈó¥‰ºöÊ∂àËÄóÊéâÂ§ßÈÉ®ÂàÜÂèØÁî®ÁöÑÈ£üÁâ©ËµÑÊ∫êÔºåÂØºËá¥ÂΩìÂú∞ÁöÑÈ±ºÁ±ªÊï∞ÈáèÂáèÂ∞ëÁîöËá≥ÊûØÁ´≠„ÄÇ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;üìö Dataset&lt;/h2&gt; &#xA;&lt;h3&gt;ÂåªÁñóÊï∞ÊçÆÈõÜ&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;240‰∏áÊù°‰∏≠ÊñáÂåªÁñóÊï∞ÊçÆÈõÜ(ÂåÖÊã¨È¢ÑËÆ≠ÁªÉ„ÄÅÊåá‰ª§ÂæÆË∞ÉÂíåÂ•ñÂä±Êï∞ÊçÆÈõÜ)Ôºö&lt;a href=&#34;https://huggingface.co/datasets/shibing624/medical&#34;&gt;shibing624/medical&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;22‰∏áÊù°‰∏≠ÊñáÂåªÁñóÂØπËØùÊï∞ÊçÆÈõÜ(Âçé‰ΩóÈ°πÁõÆ)Ôºö&lt;a href=&#34;https://huggingface.co/datasets/FreedomIntelligence/HuatuoGPT-sft-data-v1&#34;&gt;FreedomIntelligence/HuatuoGPT-sft-data-v1&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ÈÄöÁî®Êï∞ÊçÆÈõÜ&lt;/h3&gt; &#xA;&lt;h4&gt;SFT datasets&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;50‰∏áÊù°‰∏≠ÊñáChatGPTÊåá‰ª§BelleÊï∞ÊçÆÈõÜÔºö&lt;a href=&#34;https://huggingface.co/datasets/BelleGroup/train_0.5M_CN&#34;&gt;BelleGroup/train_0.5M_CN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;100‰∏áÊù°‰∏≠ÊñáChatGPTÊåá‰ª§BelleÊï∞ÊçÆÈõÜÔºö&lt;a href=&#34;https://huggingface.co/datasets/BelleGroup/train_1M_CN&#34;&gt;BelleGroup/train_1M_CN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;5‰∏áÊù°Ëã±ÊñáChatGPTÊåá‰ª§AlpacaÊï∞ÊçÆÈõÜÔºö&lt;a href=&#34;https://github.com/tatsu-lab/stanford_alpaca#data-release&#34;&gt;50k English Stanford Alpaca dataset&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;2‰∏áÊù°‰∏≠ÊñáChatGPTÊåá‰ª§AlpacaÊï∞ÊçÆÈõÜÔºö&lt;a href=&#34;https://huggingface.co/datasets/shibing624/alpaca-zh&#34;&gt;shibing624/alpaca-zh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;69‰∏áÊù°‰∏≠ÊñáÊåá‰ª§GuanacoÊï∞ÊçÆÈõÜ(Belle50‰∏áÊù°+Guanaco19‰∏áÊù°)Ôºö&lt;a href=&#34;https://huggingface.co/datasets/Chinese-Vicuna/guanaco_belle_merge_v1.0&#34;&gt;Chinese-Vicuna/guanaco_belle_merge_v1.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;5‰∏áÊù°Ëã±ÊñáChatGPTÂ§öËΩÆÂØπËØùÊï∞ÊçÆÈõÜÔºö&lt;a href=&#34;https://huggingface.co/datasets/RyokoAI/ShareGPT52K&#34;&gt;RyokoAI/ShareGPT52K&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;80‰∏áÊù°‰∏≠ÊñáChatGPTÂ§öËΩÆÂØπËØùÊï∞ÊçÆÈõÜÔºö&lt;a href=&#34;https://huggingface.co/datasets/BelleGroup/multiturn_chat_0.8M&#34;&gt;BelleGroup/multiturn_chat_0.8M&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;116‰∏áÊù°‰∏≠ÊñáChatGPTÂ§öËΩÆÂØπËØùÊï∞ÊçÆÈõÜÔºö&lt;a href=&#34;https://huggingface.co/datasets/fnlp/moss-002-sft-data&#34;&gt;fnlp/moss-002-sft-data&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Reward Model datasets&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÂéüÁâàÁöÑoasst1Êï∞ÊçÆÈõÜÔºö&lt;a href=&#34;https://huggingface.co/datasets/OpenAssistant/oasst1&#34;&gt;OpenAssistant/oasst1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;2‰∏áÊù°Â§öËØ≠Ë®Äoasst1ÁöÑrewardÊï∞ÊçÆÈõÜÔºö&lt;a href=&#34;https://huggingface.co/datasets/tasksource/oasst1_pairwise_rlhf_reward&#34;&gt;tasksource/oasst1_pairwise_rlhf_reward&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;11‰∏áÊù°Ëã±Êñáhh-rlhfÁöÑrewardÊï∞ÊçÆÈõÜÔºö&lt;a href=&#34;https://huggingface.co/datasets/Dahoas/full-hh-rlhf&#34;&gt;Dahoas/full-hh-rlhf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;9‰∏áÊù°Ëã±ÊñárewardÊï∞ÊçÆÈõÜ(Êù•Ëá™Anthropic&#39;s Helpful Harmless dataset)Ôºö&lt;a href=&#34;https://huggingface.co/datasets/Dahoas/static-hh&#34;&gt;Dahoas/static-hh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;7‰∏áÊù°Ëã±ÊñárewardÊï∞ÊçÆÈõÜÔºàÊù•Ê∫êÂêå‰∏äÔºâÔºö&lt;a href=&#34;https://huggingface.co/datasets/Dahoas/rm-static&#34;&gt;Dahoas/rm-static&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;7‰∏áÊù°ÁπÅ‰Ωì‰∏≠ÊñáÁöÑrewardÊï∞ÊçÆÈõÜÔºàÁøªËØëËá™rm-staticÔºâ&lt;a href=&#34;https://huggingface.co/datasets/liswei/rm-static-m2m100-zh&#34;&gt;liswei/rm-static-m2m100-zh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;7‰∏áÊù°Ëã±ÊñáRewardÊï∞ÊçÆÈõÜÔºö&lt;a href=&#34;https://huggingface.co/datasets/yitingxie/rlhf-reward-datasets&#34;&gt;yitingxie/rlhf-reward-datasets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;3ÂçÉÊù°‰∏≠ÊñáÁü•‰πéÈóÆÁ≠îÂÅèÂ•ΩÊï∞ÊçÆÈõÜÔºö&lt;a href=&#34;https://huggingface.co/datasets/liyucheng/zhihu_rlhf_3k&#34;&gt;liyucheng/zhihu_rlhf_3k&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚úÖ Todo&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; add multi-round dialogue data fine-tuning method&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add reward model fine-tuning&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add rl fine-tuning&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add medical reward dataset&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add llama in8/int4 training&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add all training and predict demo in colab&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;‚òéÔ∏è Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Issue(Âª∫ËÆÆ) Ôºö&lt;a href=&#34;https://github.com/shibing624/MedicalGPT/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/shibing624/MedicalGPT.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ÈÇÆ‰ª∂ÊàëÔºöxuming: &lt;a href=&#34;mailto:xuming624@qq.com&#34;&gt;xuming624@qq.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ÂæÆ‰ø°ÊàëÔºö Âä†Êàë&lt;em&gt;ÂæÆ‰ø°Âè∑Ôºöxuming624, Â§áÊ≥®ÔºöÂßìÂêç-ÂÖ¨Âè∏Âêç-NLP&lt;/em&gt; ËøõNLP‰∫§ÊµÅÁæ§„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://github.com/shibing624/MedicalGPT/raw/main/docs/wechat.jpeg&#34; width=&#34;200&#34;&gt; &#xA;&lt;h2&gt;‚ö†Ô∏è Â±ÄÈôêÊÄß„ÄÅ‰ΩøÁî®ÈôêÂà∂‰∏éÂÖçË¥£Â£∞Êòé&lt;/h2&gt; &#xA;&lt;p&gt;Âü∫‰∫éÂΩìÂâçÊï∞ÊçÆÂíåÂü∫Á°ÄÊ®°ÂûãËÆ≠ÁªÉÂæóÂà∞ÁöÑSFTÊ®°ÂûãÔºåÂú®ÊïàÊûú‰∏ä‰ªçÂ≠òÂú®‰ª•‰∏ãÈóÆÈ¢òÔºö&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Âú®Ê∂âÂèä‰∫ãÂÆûÊÄßÁöÑÊåá‰ª§‰∏äÂèØËÉΩ‰ºö‰∫ßÁîüËøùËÉå‰∫ãÂÆûÁöÑÈîôËØØÂõûÁ≠î„ÄÇ&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ÂØπ‰∫éÂÖ∑Â§áÂç±ÂÆ≥ÊÄßÁöÑÊåá‰ª§Êó†Ê≥ïÂæàÂ•ΩÁöÑÈâ¥Âà´ÔºåÁî±Ê≠§‰ºö‰∫ßÁîüÂç±ÂÆ≥ÊÄßË®ÄËÆ∫„ÄÇ&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Âú®‰∏Ä‰∫õÊ∂âÂèäÊé®ÁêÜ„ÄÅ‰ª£Á†Å„ÄÅÂ§öËΩÆÂØπËØùÁ≠âÂú∫ÊôØ‰∏ãÊ®°ÂûãÁöÑËÉΩÂäõ‰ªçÊúâÂæÖÊèêÈ´ò„ÄÇ&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Âü∫‰∫é‰ª•‰∏äÊ®°ÂûãÂ±ÄÈôêÊÄßÔºåÊàë‰ª¨Ë¶ÅÊ±ÇÂºÄÂèëËÄÖ‰ªÖÂ∞ÜÊàë‰ª¨ÂºÄÊ∫êÁöÑÊ®°ÂûãÊùÉÈáçÂèäÂêéÁª≠Áî®Ê≠§È°πÁõÆÁîüÊàêÁöÑË°çÁîüÁâ©Áî®‰∫éÁ†îÁ©∂ÁõÆÁöÑÔºå‰∏çÂæóÁî®‰∫éÂïÜ‰∏öÔºå‰ª•ÂèäÂÖ∂‰ªñ‰ºöÂØπÁ§æ‰ºöÂ∏¶Êù•Âç±ÂÆ≥ÁöÑÁî®ÈÄî„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Êú¨È°πÁõÆ‰ªÖÂèØÂ∫îÁî®‰∫éÁ†îÁ©∂ÁõÆÁöÑÔºåÈ°πÁõÆÂºÄÂèëËÄÖ‰∏çÊâøÊãÖ‰ªª‰ΩïÂõ†‰ΩøÁî®Êú¨È°πÁõÆÔºàÂåÖÂê´‰ΩÜ‰∏çÈôê‰∫éÊï∞ÊçÆ„ÄÅÊ®°Âûã„ÄÅ‰ª£Á†ÅÁ≠âÔºâÂØºËá¥ÁöÑÂç±ÂÆ≥ÊàñÊçüÂ§±„ÄÇËØ¶ÁªÜËØ∑ÂèÇËÄÉ&lt;a href=&#34;https://github.com/shibing624/MedicalGPT/raw/main/DISCLAIMER&#34;&gt;ÂÖçË¥£Â£∞Êòé&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;È°πÁõÆ‰ª£Á†ÅÁöÑÊéàÊùÉÂçèËÆÆ‰∏∫ &lt;a href=&#34;https://raw.githubusercontent.com/shibing624/MedicalGPT/main/LICENSE&#34;&gt;The Apache License 2.0&lt;/a&gt;Ôºå‰ª£Á†ÅÂèØÂÖçË¥πÁî®ÂÅöÂïÜ‰∏öÁî®ÈÄîÔºåÊ®°ÂûãÊùÉÈáçÂíåÊï∞ÊçÆÂè™ËÉΩÁî®‰∫éÁ†îÁ©∂ÁõÆÁöÑ„ÄÇËØ∑Âú®‰∫ßÂìÅËØ¥Êòé‰∏≠ÈôÑÂä†MedicalGPTÁöÑÈìæÊé•ÂíåÊéàÊùÉÂçèËÆÆ„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;üòá Citation&lt;/h2&gt; &#xA;&lt;p&gt;Â¶ÇÊûú‰Ω†Âú®Á†îÁ©∂‰∏≠‰ΩøÁî®‰∫ÜMedicalGPTÔºåËØ∑ÊåâÂ¶Ç‰∏ãÊ†ºÂºèÂºïÁî®Ôºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-latex&#34;&gt;@misc{MedicalGPT,&#xA;  title={MedicalGPT: Training Medical GPT Model},&#xA;  author={Ming Xu},&#xA;  year={2023},&#xA;  howpublished={\url{https://github.com/shibing624/MedicalGPT}},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üòç Contribute&lt;/h2&gt; &#xA;&lt;p&gt;È°πÁõÆ‰ª£Á†ÅËøòÂæàÁ≤óÁ≥ôÔºåÂ¶ÇÊûúÂ§ßÂÆ∂ÂØπ‰ª£Á†ÅÊúâÊâÄÊîπËøõÔºåÊ¨¢ËøéÊèê‰∫§ÂõûÊú¨È°πÁõÆÔºåÂú®Êèê‰∫§‰πãÂâçÔºåÊ≥®ÊÑè‰ª•‰∏ã‰∏§ÁÇπÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Âú®&lt;code&gt;tests&lt;/code&gt;Ê∑ªÂä†Áõ∏Â∫îÁöÑÂçïÂÖÉÊµãËØï&lt;/li&gt; &#xA; &lt;li&gt;‰ΩøÁî®&lt;code&gt;python -m pytest&lt;/code&gt;Êù•ËøêË°åÊâÄÊúâÂçïÂÖÉÊµãËØïÔºåÁ°Æ‰øùÊâÄÊúâÂçïÊµãÈÉΩÊòØÈÄöËøáÁöÑ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;‰πãÂêéÂç≥ÂèØÊèê‰∫§PR„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;üíï Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tloen/alpaca-lora/raw/main/finetune.py&#34;&gt;tloen/alpaca-lora&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ymcui/Chinese-LLaMA-Alpaca&#34;&gt;ymcui/Chinese-LLaMA-Alpaca&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks for their great work!&lt;/p&gt;</summary>
  </entry>
</feed>