<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-21T01:45:01Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nicolargo/glances</title>
    <updated>2022-08-21T01:45:01Z</updated>
    <id>tag:github.com,2022-08-21:/nicolargo/glances</id>
    <link href="https://github.com/nicolargo/glances" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Glances an Eye on your system. A top/htop alternative for GNU/Linux, BSD, Mac OS and Windows operating systems.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;=============================== Glances - An eye on your system&lt;/h1&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/pypi/v/glances.svg&#34;&gt;https://img.shields.io/pypi/v/glances.svg&lt;/a&gt; :target: &lt;a href=&#34;https://pypi.python.org/pypi/Glances&#34;&gt;https://pypi.python.org/pypi/Glances&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/github/stars/nicolargo/glances.svg&#34;&gt;https://img.shields.io/github/stars/nicolargo/glances.svg&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/nicolargo/glances/&#34;&gt;https://github.com/nicolargo/glances/&lt;/a&gt; :alt: Github stars&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/docker/pulls/nicolargo/glances&#34;&gt;https://img.shields.io/docker/pulls/nicolargo/glances&lt;/a&gt; :target: &lt;a href=&#34;https://hub.docker.com/r/nicolargo/glances/&#34;&gt;https://hub.docker.com/r/nicolargo/glances/&lt;/a&gt; :alt: Docker pull&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://pepy.tech/badge/glances/month&#34;&gt;https://pepy.tech/badge/glances/month&lt;/a&gt; :target: &lt;a href=&#34;https://pepy.tech/project/glances&#34;&gt;https://pepy.tech/project/glances&lt;/a&gt; :alt: Pypi downloads&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://github.com/nicolargo/glances/actions/workflows/test.yml/badge.svg&#34;&gt;https://github.com/nicolargo/glances/actions/workflows/test.yml/badge.svg&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/nicolargo/glances/actions&#34;&gt;https://github.com/nicolargo/glances/actions&lt;/a&gt; :alt: Linux tests (GitHub Actions)&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/github/contributors/nicolargo/glances&#34;&gt;https://img.shields.io/github/contributors/nicolargo/glances&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/nicolargo/glances/issues?q=is%3Aissue+is%3Aopen+label%3A%22needs+contributor%22&#34;&gt;https://github.com/nicolargo/glances/issues?q=is%3Aissue+is%3Aopen+label%3A%22needs+contributor%22&lt;/a&gt; :alt: Contibutors&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://scrutinizer-ci.com/g/nicolargo/glances/badges/quality-score.png?b=develop&#34;&gt;https://scrutinizer-ci.com/g/nicolargo/glances/badges/quality-score.png?b=develop&lt;/a&gt; :target: &lt;a href=&#34;https://scrutinizer-ci.com/g/nicolargo/glances/?branch=develop&#34;&gt;https://scrutinizer-ci.com/g/nicolargo/glances/?branch=develop&lt;/a&gt; :alt: Code quality&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/github/sponsors/nicolargo&#34;&gt;https://img.shields.io/github/sponsors/nicolargo&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/sponsors/nicolargo&#34;&gt;https://github.com/sponsors/nicolargo&lt;/a&gt; :alt: Sponsors&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/twitter/url/https/twitter.com/cloudposse.svg?style=social&amp;amp;label=Follow%20%40nicolargo&#34;&gt;https://img.shields.io/twitter/url/https/twitter.com/cloudposse.svg?style=social&amp;amp;label=Follow%20%40nicolargo&lt;/a&gt; :target: &lt;a href=&#34;https://twitter.com/nicolargo&#34;&gt;https://twitter.com/nicolargo&lt;/a&gt; :alt: @nicolargo&lt;/p&gt; &#xA;&lt;h1&gt;Summary&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Glances&lt;/strong&gt; is a cross-platform monitoring tool which aims to present a large amount of monitoring information through a curses or Web based interface. The information dynamically adapts depending on the size of the user interface.&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://raw.githubusercontent.com/nicolargo/glances/develop/docs/_static/glances-summary.png&#34;&gt;https://raw.githubusercontent.com/nicolargo/glances/develop/docs/_static/glances-summary.png&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;It can also work in client/server mode. Remote monitoring could be done via terminal, Web interface or API (XML-RPC and RESTful). Stats can also be exported to files or external time/value databases.&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://raw.githubusercontent.com/nicolargo/glances/develop/docs/_static/glances-responsive-webdesign.png&#34;&gt;https://raw.githubusercontent.com/nicolargo/glances/develop/docs/_static/glances-responsive-webdesign.png&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Glances is written in Python and uses libraries to grab information from your system. It is based on an open architecture where developers can add new plugins or exports modules.&lt;/p&gt; &#xA;&lt;h1&gt;Social networks&lt;/h1&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://raw.githubusercontent.com/nicolargo/glances/develop/docs/_static/twitter-icon.png&#34;&gt;https://raw.githubusercontent.com/nicolargo/glances/develop/docs/_static/twitter-icon.png&lt;/a&gt; :target: &lt;a href=&#34;https://twitter.com/nicolargo&#34;&gt;https://twitter.com/nicolargo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://raw.githubusercontent.com/nicolargo/glances/develop/docs/_static/reddit.png&#34;&gt;https://raw.githubusercontent.com/nicolargo/glances/develop/docs/_static/reddit.png&lt;/a&gt; :target: &lt;a href=&#34;https://www.reddit.com/r/glances/&#34;&gt;https://www.reddit.com/r/glances/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;python&amp;gt;=2.7&lt;/code&gt; or &lt;code&gt;python&amp;gt;=3.4&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;psutil&amp;gt;=5.3.0&lt;/code&gt; (better with latest version)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;defusedxml&lt;/code&gt; (in order to monkey patch xmlrpc)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;future&lt;/code&gt; (for Python 2 support)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Note for Python 2.6 users&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Glances no longer supports Python 2.6. Please upgrade to a minimum Python version of 2.7/3.4+ or downgrade to Glances 2.6.2 (last version with Python 2.6 support).&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Deprecation warning note for Python 2.x users&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Glances version 4.0 will no longer supports Python 2.x.&lt;/p&gt; &#xA;&lt;p&gt;Optional dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;bernhard&lt;/code&gt; (for the Riemann export module)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bottle&lt;/code&gt; (for Web server mode)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cassandra-driver&lt;/code&gt; (for the Cassandra export module)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;chevron&lt;/code&gt; (for the action script feature)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;couchdb&lt;/code&gt; (for the CouchDB export module)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker&lt;/code&gt; (for the Docker monitoring support) [Linux/macOS-only]&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;elasticsearch&lt;/code&gt; (for the Elastic Search export module)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;graphitesender&lt;/code&gt; (For the Graphite export module)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hddtemp&lt;/code&gt; (for HDD temperature monitoring support) [Linux-only]&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;influxdb&lt;/code&gt; (for the InfluxDB version 1 export module)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;influxdb-client&lt;/code&gt; (for the InfluxDB version 2 export module) [Only for Python &amp;gt;= 3.6]&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kafka-python&lt;/code&gt; (for the Kafka export module)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;netifaces&lt;/code&gt; (for the IP plugin)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;py3nvml&lt;/code&gt; (for the GPU plugin) [Only for Python 3]&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pika&lt;/code&gt; (for the RabbitMQ/ActiveMQ export module)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;potsdb&lt;/code&gt; (for the OpenTSDB export module)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;prometheus_client&lt;/code&gt; (for the Prometheus export module)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;py-cpuinfo&lt;/code&gt; (for the Quicklook CPU info module)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pygal&lt;/code&gt; (for the graph export module)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pymdstat&lt;/code&gt; (for RAID support) [Linux-only]&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pysnmp&lt;/code&gt; (for SNMP support)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pySMART.smartx&lt;/code&gt; (for HDD Smart support) [Linux-only]&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pyzmq&lt;/code&gt; (for the ZeroMQ export module)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;requests&lt;/code&gt; (for the Ports, Cloud plugins and RESTful export module)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scandir&lt;/code&gt; (for the Folders plugin) [Only for Python &amp;lt; 3.5]&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sparklines&lt;/code&gt; (for the Quick Plugin sparklines option)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;statsd&lt;/code&gt; (for the StatsD export module)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;wifi&lt;/code&gt; (for the wifi plugin) [Linux-only]&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;zeroconf&lt;/code&gt; (for the autodiscover mode)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;There are several methods to test/install Glances on your system. Choose your weapon!&lt;/p&gt; &#xA;&lt;h2&gt;PyPI: The standard way&lt;/h2&gt; &#xA;&lt;p&gt;Glances is on &lt;code&gt;PyPI&lt;/code&gt;. By using PyPI, you will be using the latest stable version.&lt;/p&gt; &#xA;&lt;p&gt;To install Glances, simply use &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install --user glances&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: Python headers are required to install &lt;code&gt;psutil&lt;/code&gt;_, a Glances dependency. For example, on Debian/Ubuntu you need to install first the &lt;em&gt;python-dev&lt;/em&gt; package (&lt;em&gt;python-devel&lt;/em&gt; on Fedora/CentOS/RHEL). For Windows, just install psutil from the binary installation file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note 2 (for the Wifi plugin)&lt;/em&gt;: If you want to use the Wifi plugin, you need to install the &lt;em&gt;wireless-tools&lt;/em&gt; package on your system.&lt;/p&gt; &#xA;&lt;p&gt;By default, Glances is installed without the Web interface dependencies. To install it, use the following command:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install --user &#39;glances[web]&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a full installation (with all features:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install --user &#39;glances[action,browser,cloud,cpuinfo,docker,export,folders,gpu,graph,ip,raid,snmp,web,wifi]&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To upgrade Glances to the latest version:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install --user --upgrade glances&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The current develop branch is published to the test.pypi.org package index. If you want to test the develop version (could be instable), enter:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install --user -i https://test.pypi.org/simple/ Glances&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Glances Auto Install script: the easy way&lt;/h2&gt; &#xA;&lt;p&gt;To install both dependencies and the latest Glances production ready version (aka &lt;em&gt;master&lt;/em&gt; branch), just enter the following command line:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -L https://bit.ly/glances | /bin/bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget -O- https://bit.ly/glances | /bin/bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: This is only supported on some GNU/Linux distributions and Mac OS X. If you want to support other distributions, please contribute to &lt;code&gt;glancesautoinstall&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;h2&gt;Docker: the fun way&lt;/h2&gt; &#xA;&lt;p&gt;Glances containers are availables. You can use it to monitor your server and all your other containers!&lt;/p&gt; &#xA;&lt;p&gt;Get the Glances container:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull nicolargo/glances:&amp;lt;version&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Available versions on the Docker Hub repository:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;nicolargo/glances:latest&lt;/em&gt; for a basic Debian Glances image version with minimal dependencies&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;nicolargo/glances:alpine-latest&lt;/em&gt; for a basic Alpine Glances image version with minimal dependencies&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;nicolargo/glances:latest-full&lt;/em&gt; for a full Debian Glances image version with all dependencies&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;nicolargo/glances:alpine-latest-full&lt;/em&gt; for a full Alpine Glances image version with all dependencies&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also specify a version by replacing latest by 3.2.6.4 (for example).&lt;/p&gt; &#xA;&lt;p&gt;Run last version of Glances container in &lt;em&gt;console mode&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --rm -v /var/run/docker.sock:/var/run/docker.sock:ro --pid host --network host -it nicolargo/glances:latest-full&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally, if you want to use your own glances.conf file, you can create your own Dockerfile:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM nicolargo/glances:latest&#xA;COPY glances.conf /etc/glances.conf&#xA;CMD python -m glances -C /etc/glances.conf $GLANCES_OPT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can specify something along the same lines with docker run options (notice the &lt;code&gt;GLANCES_OPT&lt;/code&gt; environment variable setting parameters for the glances startup command):&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -v `pwd`/glances.conf:/etc/glances.conf -v /var/run/docker.sock:/var/run/docker.sock:ro --pid host -e GLANCES_OPT=&#34;-C /etc/glances.conf&#34; -it nicolargo/glances:latest-full&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where `pwd`/glances.conf is a local directory containing your glances.conf file.&lt;/p&gt; &#xA;&lt;p&gt;Run the container in &lt;em&gt;Web server mode&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d --restart=&#34;always&#34; -p 61208-61209:61208-61209 -e GLANCES_OPT=&#34;-w&#34; -v /var/run/docker.sock:/var/run/docker.sock:ro --pid host nicolargo/glances:latest-full&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GNU/Linux&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Glances&lt;/code&gt; is available on many Linux distributions, so you should be able to install it using your favorite package manager. Be aware that when you use this method the operating system &lt;code&gt;package&lt;/code&gt;_ for &lt;code&gt;Glances&lt;/code&gt; may not be the latest version.&lt;/p&gt; &#xA;&lt;p&gt;Note: The Debian package (and all other Debian-based distributions) do not include anymore the JS statics files used by the Web interface (see &lt;code&gt;issue2021&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;FreeBSD&lt;/h2&gt; &#xA;&lt;p&gt;To install the binary package:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# pkg install py38-glances&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install Glances from ports:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# cd /usr/ports/sysutils/py-glances/&#xA;# make install clean&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;macOS&lt;/h2&gt; &#xA;&lt;p&gt;If you do not want to use the glancesautoinstall script, follow this procedure.&lt;/p&gt; &#xA;&lt;p&gt;macOS users can install Glances using &lt;code&gt;Homebrew&lt;/code&gt; or &lt;code&gt;MacPorts&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Homebrew&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;.. code-block:: console&#xA;&#xA;    $ brew install glances&#xA;&#xA;MacPorts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo port install glances&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Windows&lt;/h2&gt; &#xA;&lt;p&gt;Install &lt;code&gt;Python&lt;/code&gt;_ for Windows (Python 2.7.9+ and 3.4+ ship with pip) and then run the following command:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pip install glances&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Android&lt;/h2&gt; &#xA;&lt;p&gt;You need a rooted device and the &lt;code&gt;Termux&lt;/code&gt;_ application (available on the Google Play Store).&lt;/p&gt; &#xA;&lt;p&gt;Start Termux on your device and enter:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ apt update&#xA;$ apt upgrade&#xA;$ apt install clang python&#xA;$ pip install bottle&#xA;$ pip install glances&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And start Glances:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ glances&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also run Glances in server mode (-s or -w) in order to remotely monitor your Android device.&lt;/p&gt; &#xA;&lt;h2&gt;Source&lt;/h2&gt; &#xA;&lt;p&gt;To install Glances from source:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ wget https://github.com/nicolargo/glances/archive/vX.Y.tar.gz -O - | tar xz&#xA;$ cd glances-*&#xA;# python setup.py install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: Python headers are required to install psutil.&lt;/p&gt; &#xA;&lt;h2&gt;Chef&lt;/h2&gt; &#xA;&lt;p&gt;An awesome &lt;code&gt;Chef&lt;/code&gt; cookbook is available to monitor your infrastructure: &lt;a href=&#34;https://supermarket.chef.io/cookbooks/glances&#34;&gt;https://supermarket.chef.io/cookbooks/glances&lt;/a&gt; (thanks to Antoine Rouyer)&lt;/p&gt; &#xA;&lt;h2&gt;Puppet&lt;/h2&gt; &#xA;&lt;p&gt;You can install Glances using &lt;code&gt;Puppet&lt;/code&gt;: &lt;a href=&#34;https://github.com/rverchere/puppet-glances&#34;&gt;https://github.com/rverchere/puppet-glances&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ansible&lt;/h2&gt; &#xA;&lt;p&gt;A Glances &lt;code&gt;Ansible&lt;/code&gt; role is available: &lt;a href=&#34;https://galaxy.ansible.com/zaxos/glances-ansible-role/&#34;&gt;https://galaxy.ansible.com/zaxos/glances-ansible-role/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;For the standalone mode, just run:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ glances&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the Web server mode, run:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ glances -w&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and enter the URL &lt;code&gt;http://&amp;lt;ip&amp;gt;:61208&lt;/code&gt; in your favorite web browser.&lt;/p&gt; &#xA;&lt;p&gt;For the client/server mode, run:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ glances -s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;on the server side and run:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ glances -c &amp;lt;ip&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;on the client one.&lt;/p&gt; &#xA;&lt;p&gt;You can also detect and display all Glances servers available on your network or defined in the configuration file:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ glances --browser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also display raw stats on stdout:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ glances --stdout cpu.user,mem.used,load&#xA;cpu.user: 30.7&#xA;mem.used: 3278204928&#xA;load: {&#39;cpucore&#39;: 4, &#39;min1&#39;: 0.21, &#39;min5&#39;: 0.4, &#39;min15&#39;: 0.27}&#xA;cpu.user: 3.4&#xA;mem.used: 3275251712&#xA;load: {&#39;cpucore&#39;: 4, &#39;min1&#39;: 0.19, &#39;min5&#39;: 0.39, &#39;min15&#39;: 0.27}&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or in a CSV format thanks to the stdout-csv option:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ glances --stdout-csv now,cpu.user,mem.used,load&#xA;now,cpu.user,mem.used,load.cpucore,load.min1,load.min5,load.min15&#xA;2018-12-08 22:04:20 CEST,7.3,5948149760,4,1.04,0.99,1.04&#xA;2018-12-08 22:04:23 CEST,5.4,5949136896,4,1.04,0.99,1.04&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or in a JSON format thanks to the stdout-json option (attibute not supported in this mode in order to have a real JSON object in output):&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: console&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ glances --stdout-json cpu,mem&#xA;cpu: {&#34;total&#34;: 29.0, &#34;user&#34;: 24.7, &#34;nice&#34;: 0.0, &#34;system&#34;: 3.8, &#34;idle&#34;: 71.4, &#34;iowait&#34;: 0.0, &#34;irq&#34;: 0.0, &#34;softirq&#34;: 0.0, &#34;steal&#34;: 0.0, &#34;guest&#34;: 0.0, &#34;guest_nice&#34;: 0.0, &#34;time_since_update&#34;: 1, &#34;cpucore&#34;: 4, &#34;ctx_switches&#34;: 0, &#34;interrupts&#34;: 0, &#34;soft_interrupts&#34;: 0, &#34;syscalls&#34;: 0}&#xA;mem: {&#34;total&#34;: 7837949952, &#34;available&#34;: 2919079936, &#34;percent&#34;: 62.8, &#34;used&#34;: 4918870016, &#34;free&#34;: 2919079936, &#34;active&#34;: 2841214976, &#34;inactive&#34;: 3340550144, &#34;buffers&#34;: 546799616, &#34;cached&#34;: 3068141568, &#34;shared&#34;: 788156416}&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and RTFM, always.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;For complete documentation have a look at the readthedocs_ website.&lt;/p&gt; &#xA;&lt;p&gt;If you have any question (after RTFM!), please post it on the official Q&amp;amp;A &lt;code&gt;forum&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;h1&gt;Gateway to other services&lt;/h1&gt; &#xA;&lt;p&gt;Glances can export stats to: &lt;code&gt;CSV&lt;/code&gt; file, &lt;code&gt;JSON&lt;/code&gt; file, &lt;code&gt;InfluxDB&lt;/code&gt;, &lt;code&gt;Cassandra&lt;/code&gt;, &lt;code&gt;CouchDB&lt;/code&gt;, &lt;code&gt;OpenTSDB&lt;/code&gt;, &lt;code&gt;Prometheus&lt;/code&gt;, &lt;code&gt;StatsD&lt;/code&gt;, &lt;code&gt;ElasticSearch&lt;/code&gt;, &lt;code&gt;RabbitMQ/ActiveMQ&lt;/code&gt;, &lt;code&gt;ZeroMQ&lt;/code&gt;, &lt;code&gt;Kafka&lt;/code&gt;, &lt;code&gt;Riemann&lt;/code&gt;, &lt;code&gt;Graphite&lt;/code&gt; and &lt;code&gt;RESTful&lt;/code&gt; server.&lt;/p&gt; &#xA;&lt;h1&gt;How to contribute ?&lt;/h1&gt; &#xA;&lt;p&gt;If you want to contribute to the Glances project, read this &lt;code&gt;wiki&lt;/code&gt;_ page.&lt;/p&gt; &#xA;&lt;p&gt;There is also a chat dedicated to the Glances developers:&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://badges.gitter.im/Join%20Chat.svg&#34;&gt;https://badges.gitter.im/Join%20Chat.svg&lt;/a&gt; :target: &lt;a href=&#34;https://gitter.im/nicolargo/glances?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;https://gitter.im/nicolargo/glances?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Donation&lt;/h1&gt; &#xA;&lt;p&gt;If you like this open-source project, you can become a sponsor.&lt;/p&gt; &#xA;&lt;p&gt;See the sponsors_ page (one-time or monthly tier available).&lt;/p&gt; &#xA;&lt;h1&gt;Author&lt;/h1&gt; &#xA;&lt;p&gt;Nicolas Hennion (@nicolargo) &lt;a href=&#34;mailto:nicolas@nicolargo.com&#34;&gt;nicolas@nicolargo.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/twitter/url/https/twitter.com/cloudposse.svg?style=social&amp;amp;label=Follow%20%40nicolargo&#34;&gt;https://img.shields.io/twitter/url/https/twitter.com/cloudposse.svg?style=social&amp;amp;label=Follow%20%40nicolargo&lt;/a&gt; :target: &lt;a href=&#34;https://twitter.com/nicolargo&#34;&gt;https://twitter.com/nicolargo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Glances is distributed under the LGPL version 3 license. See &lt;code&gt;COPYING&lt;/code&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;.. _psutil: &lt;a href=&#34;https://github.com/giampaolo/psutil&#34;&gt;https://github.com/giampaolo/psutil&lt;/a&gt; .. _glancesautoinstall: &lt;a href=&#34;https://github.com/nicolargo/glancesautoinstall&#34;&gt;https://github.com/nicolargo/glancesautoinstall&lt;/a&gt; .. _Python: &lt;a href=&#34;https://www.python.org/getit/&#34;&gt;https://www.python.org/getit/&lt;/a&gt; .. _Termux: &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.termux&#34;&gt;https://play.google.com/store/apps/details?id=com.termux&lt;/a&gt; .. _readthedocs: &lt;a href=&#34;https://glances.readthedocs.io/&#34;&gt;https://glances.readthedocs.io/&lt;/a&gt; .. _forum: &lt;a href=&#34;https://groups.google.com/forum/?hl=en#!forum/glances-users&#34;&gt;https://groups.google.com/forum/?hl=en#!forum/glances-users&lt;/a&gt; .. _wiki: &lt;a href=&#34;https://github.com/nicolargo/glances/wiki/How-to-contribute-to-Glances-%3F&#34;&gt;https://github.com/nicolargo/glances/wiki/How-to-contribute-to-Glances-%3F&lt;/a&gt; .. _package: &lt;a href=&#34;https://repology.org/metapackage/glances/packages&#34;&gt;https://repology.org/metapackage/glances/packages&lt;/a&gt; .. _sponsors: &lt;a href=&#34;https://github.com/sponsors/nicolargo&#34;&gt;https://github.com/sponsors/nicolargo&lt;/a&gt; .. _issue2021: &lt;a href=&#34;https://github.com/nicolargo/glances/issues/2021#issuecomment-1197831157&#34;&gt;https://github.com/nicolargo/glances/issues/2021#issuecomment-1197831157&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apple/ml-neuman</title>
    <updated>2022-08-21T01:45:01Z</updated>
    <id>tag:github.com,2022-08-21:/apple/ml-neuman</id>
    <link href="https://github.com/apple/ml-neuman" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official repository of NeuMan: Neural Human Radiance Field from a Single Video (ECCV 2022)&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;NeuMan: Neural Human Radiance Field from a Single Video&lt;/h2&gt; &#xA;&lt;p&gt;This repository is a reference implementation for NeuMan. NeuMan reconstructs both the background scene and an animatable human from a single video using neural radiance fields.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2203.12575&#34;&gt;[Paper]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/apple/ml-neuman/main/resources/teaser.gif&#34; height=&#34;260&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Video demos&lt;/h3&gt; &#xA;&lt;p&gt;Novel view and novel pose synthesis&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs-assets.developer.apple.com/ml-research/datasets/neuman/bike.mp4&#34;&gt;[Bike]&lt;/a&gt; &lt;a href=&#34;https://docs-assets.developer.apple.com/ml-research/datasets/neuman/citron.mp4&#34;&gt;[Citron]&lt;/a&gt; &lt;a href=&#34;https://docs-assets.developer.apple.com/ml-research/datasets/neuman/demo3.mp4&#34;&gt;[Parking lot]&lt;/a&gt; &lt;a href=&#34;https://docs-assets.developer.apple.com/ml-research/datasets/neuman/jogging.mp4&#34;&gt;[Jogging]&lt;/a&gt; &lt;a href=&#34;https://docs-assets.developer.apple.com/ml-research/datasets/neuman/lab.mp4&#34;&gt;[Lab]&lt;/a&gt; &lt;a href=&#34;https://docs-assets.developer.apple.com/ml-research/datasets/neuman/seattle.mp4&#34;&gt;[Seattle]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Compositional Synthesis&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs-assets.developer.apple.com/ml-research/datasets/neuman/handshake.mp4&#34;&gt;[Handshake]&lt;/a&gt; &lt;a href=&#34;https://docs-assets.developer.apple.com/ml-research/datasets/neuman/dance.mp4&#34;&gt;[Dance]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Environment&lt;/h3&gt; &#xA;&lt;p&gt;To create the environment using Conda:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;conda env create -f environment.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternately, you can create the environment by executing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;conda create -n neuman_env python=3.7 -y;&#xA;conda activate neuman_env;&#xA;conda install pytorch==1.8.0 torchvision==0.9.0 cudatoolkit=10.2 -c pytorch;&#xA;conda install -c fvcore -c iopath -c conda-forge fvcore iopath;&#xA;conda install -c bottler nvidiacub;&#xA;conda install pytorch3d -c pytorch3d;&#xA;conda install -c conda-forge igl;&#xA;pip install opencv-python joblib open3d imageio tensorboardX chumpy lpips scikit-image ipython matplotlib;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notice that &lt;code&gt;pytorch3d&lt;/code&gt; requires a specific version of pytorch, in our case &lt;code&gt;pytorch=1.8.0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Activate the environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;conda activate neuman_env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Demo&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Download SMPL weights:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Registration is required to download the UV map(Download UV map in OBJ format) from &lt;a href=&#34;https://smpl.is.tue.mpg.de/download.php&#34;&gt;SMPL&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Download neutral SMPL weights(SMPLIFY_CODE_V2.ZIP) from &lt;a href=&#34;https://smplify.is.tue.mpg.de/download.php&#34;&gt;SMPLify&lt;/a&gt;, extract &lt;code&gt;basicModel_neutral_lbs_10_207_0_v1.0.0.pkl&lt;/code&gt; and rename it to &lt;code&gt;SMPL_NEUTRAL.pkl&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Put the all the downloaded files into &lt;code&gt;./data/smplx&lt;/code&gt; folder with following structure:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; .&#xA; └── data&#xA;  &amp;nbsp;&amp;nbsp; └── smplx&#xA;  &amp;nbsp;&amp;nbsp;     ├── smpl&#xA;  &amp;nbsp;&amp;nbsp;     │&amp;nbsp;&amp;nbsp; └── SMPL_NEUTRAL.pkl&#xA;  &amp;nbsp;&amp;nbsp;     └── smpl_uv.obj&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download NeuMan dataset and pretrained models:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Data (&lt;a href=&#34;https://docs-assets.developer.apple.com/ml-research/datasets/neuman/dataset.zip&#34;&gt;download&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Pretrained models (&lt;a href=&#34;https://docs-assets.developer.apple.com/ml-research/datasets/neuman/pretrained.zip&#34;&gt;download&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Alternately, run the following script to set up data and pretrained models.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bash setup_data_and_models.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(&lt;em&gt;Optional&lt;/em&gt;) Download AMASS dataset for reposing:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;AMASS dataset is used for rendering novel poses, specifically &lt;code&gt;render_reposing.py&lt;/code&gt; and &lt;code&gt;render_gathering.py&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;We used SFU mocap(SMPL+H G) subset, please download from &lt;a href=&#34;https://amass.is.tue.mpg.de/download.php&#34;&gt;AMASS&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Put the downloaded mocap data in to &lt;code&gt;./data/SFU&lt;/code&gt; folder.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; .&#xA; └── data&#xA;  &amp;nbsp;&amp;nbsp; └── SFU&#xA;  &amp;nbsp;&amp;nbsp;     ├── 0005&#xA;  &amp;nbsp;&amp;nbsp;     ├── 0007&#xA;  &amp;nbsp;&amp;nbsp;     │   ...&#xA;  &amp;nbsp;&amp;nbsp;     └── 0018&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Render using pretrained model&lt;/p&gt; &lt;p&gt;Render 360 views of a human:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python render_360.py --scene_dir ./data/bike --weights_path ./out/bike_human/checkpoint.pth.tar --mode canonical_360&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Render test views of a sequence, and evaluate the metrics:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python render_test_views.py --scene_dir ./data/bike --weights_path ./out/bike_human/checkpoint.pth.tar&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Render novel poses with the background:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python render_reposing.py --scene_dir ./data/bike --weights_path ./out/bike_human/checkpoint.pth.tar --motion_name=jumpandroll&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Render telegathering:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python render_gathering.py --actors parkinglot seattle citron --scene_dir ./data/seattle --weights_path ./out/seattle_human/checkpoint.pth.tar&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Training&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Download NeuMan dataset&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Train scene NeRF&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python train.py --scene_dir ./data/bike/ --name=bike_background --train_mode=bkg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Train human NeRF&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python train.py --scene_dir ./data/bike  --name=bike_human --load_background=bike_background --train_mode=smpl_and_offset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use your own video&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Preprocess: Check &lt;a href=&#34;https://raw.githubusercontent.com/apple/ml-neuman/main/preprocess/README.md&#34;&gt;preprocess&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Citation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;@inproceedings{jiang2022neuman,&#xA;  title={NeuMan: Neural Human Radiance Field from a Single Video},&#xA;  author={Jiang, Wei and Yi, Kwang Moo and Samei, Golnoosh and Tuzel, Oncel and Ranjan, Anurag},&#xA;  booktitle={Proceedings of the European conference on computer vision (ECCV)},&#xA;  year={2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;The code is released under the &lt;a href=&#34;https://raw.githubusercontent.com/apple/ml-neuman/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; terms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/tvm</title>
    <updated>2022-08-21T01:45:01Z</updated>
    <id>tag:github.com,2022-08-21:/apache/tvm</id>
    <link href="https://github.com/apache/tvm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open deep learning compiler stack for cpu, gpu and specialized accelerators&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/tvm-site/main/images/logo/tvm-logo-small.png&#34; width=&#34;128/&#34;&gt; Open Deep Learning Compiler Stack&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tvm.apache.org/docs&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/apache/tvm/main/CONTRIBUTORS.md&#34;&gt;Contributors&lt;/a&gt; | &lt;a href=&#34;https://tvm.apache.org/community&#34;&gt;Community&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/apache/tvm/main/NEWS.md&#34;&gt;Release Notes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.tlcpack.ai/job/tvm/job/main/&#34;&gt;&lt;img src=&#34;https://ci.tlcpack.ai/buildStatus/icon?job=tvm/main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/tvm/actions?query=workflow%3AWinMacBuild&#34;&gt;&lt;img src=&#34;https://github.com/apache/tvm/workflows/WinMacBuild/badge.svg?sanitize=true&#34; alt=&#34;WinMacBuild&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Apache TVM is a compiler stack for deep learning systems. It is designed to close the gap between the productivity-focused deep learning frameworks, and the performance- and efficiency-focused hardware backends. TVM works with deep learning frameworks to provide end to end compilation to different backends.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;TVM is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/apache/tvm/main/LICENSE&#34;&gt;Apache-2.0&lt;/a&gt; license.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://tvm.apache.org/docs/&#34;&gt;TVM Documentation&lt;/a&gt; site for installation instructions, tutorials, examples, and more. The &lt;a href=&#34;https://tvm.apache.org/docs/tutorial/introduction.html&#34;&gt;Getting Started with TVM&lt;/a&gt; tutorial is a great place to start.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute to TVM&lt;/h2&gt; &#xA;&lt;p&gt;TVM adopts apache committer model, we aim to create an open source project that is maintained and owned by the community. Check out the &lt;a href=&#34;https://tvm.apache.org/docs/contribute/&#34;&gt;Contributor Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;We learned a lot from the following projects when building TVM.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/halide/Halide&#34;&gt;Halide&lt;/a&gt;: Part of TVM&#39;s TIR and arithmetic simplification module originates from Halide. We also learned and adapted some part of lowering pipeline from Halide.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/inducer/loopy&#34;&gt;Loopy&lt;/a&gt;: use of integer set analysis and its loop transformation primitives.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Theano/Theano&#34;&gt;Theano&lt;/a&gt;: the design inspiration of symbolic scan operator for recurrence.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>