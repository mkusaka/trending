<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-24T01:37:38Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>great-expectations/great_expectations</title>
    <updated>2022-09-24T01:37:38Z</updated>
    <id>tag:github.com,2022-09-24:/great-expectations/great_expectations</id>
    <link href="https://github.com/great-expectations/great_expectations" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Always know what to expect from your data.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/great-expectations/great_expectations/_build/latest?definitionId=1&amp;amp;branchName=develop&#34;&gt;&lt;img src=&#34;https://dev.azure.com/great-expectations/great_expectations/_apis/build/status/great_expectations?branchName=develop&amp;amp;stageName=required&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/azure-devops/coverage/great-expectations/great_expectations/1/main&#34; alt=&#34;Coverage&#34;&gt; &lt;a href=&#34;http://great-expectations.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/great-expectations/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doi.org/10.5281/zenodo.5683574&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/DOI/10.5281/zenodo.5683574.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- &lt;&lt;&lt;Super-quickstart links go here&gt;&gt;&gt; --&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://raw.githubusercontent.com/great-expectations/great_expectations/develop/generic_dickens_protagonist.png&#34;&gt; &#xA;&lt;h1&gt;Great Expectations&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Always know what to expect from your data.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Great Expectations helps data teams eliminate pipeline debt, through data testing, documentation, and profiling.&lt;/p&gt; &#xA;&lt;p&gt;Software developers have long known that testing and documentation are essential for managing complex codebases. Great Expectations brings the same confidence, integrity, and acceleration to data science and data engineering teams.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://greatexpectations.io/blog/down-with-pipeline-debt-introducing-great-expectations/&#34;&gt;Down with Pipeline Debt!&lt;/a&gt; for an introduction to the philosophy of pipeline testing.&lt;/p&gt; &#xA;&lt;!--&#xA;--------------------------------------------------&#xA;&lt;&lt;&lt;A bunch of logos go here for social proof&gt;&gt;&gt;&#xA;&#xA;--------------------------------------------------&#xA;--&gt; &#xA;&lt;h2&gt;Key features&lt;/h2&gt; &#xA;&lt;h3&gt;Expectations&lt;/h3&gt; &#xA;&lt;p&gt;Expectations are assertions for data. They are the workhorse abstraction in Great Expectations, covering all kinds of common data issues, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;expect_column_values_to_not_be_null&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;expect_column_values_to_match_regex&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;expect_column_values_to_be_unique&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;expect_column_values_to_match_strftime_format&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;expect_table_row_count_to_be_between&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;expect_column_median_to_be_between&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;...and &lt;a href=&#34;https://greatexpectations.io/expectations&#34;&gt;many more&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Expectations are &#xA; &lt;!--[declarative, flexible and extensible]()--&gt; declarative, flexible and extensible.&lt;/p&gt; &#xA;&lt;!--To test out Expectations on your own data, check out the [&lt;&lt;step-1 tutorial&gt;&gt;]().--&gt; &#xA;&lt;!--&#xA;&lt;&lt;animated gif showing typing an Expectation in a notebook cell, running it, and getting an informative result&gt;&gt;&#xA;--&gt; &#xA;&lt;h3&gt;Batteries-included data validation&lt;/h3&gt; &#xA;&lt;p&gt;Expectations are a great start, but it takes more to get to production-ready data validation. Where are Expectations stored? How do they get updated? How do you securely connect to production data systems? How do you notify team members and triage when data validation fails?&lt;/p&gt; &#xA;&lt;p&gt;Great Expectations supports all of these use cases out of the box. Instead of building these components for yourself over weeks or months, you will be able to add production-ready validation to your pipeline in a day. This “Expectations on rails” framework plays nice with other data engineering tools, respects your existing name spaces, and is designed for extensibility.&lt;/p&gt; &#xA;&lt;!--&#xA;Check out [The Era of DIY Data Validation is Over]() for more details.&#xA;--&gt; &#xA;&lt;!--&#xA;&lt;&lt;animated gif showing slack message, plus click through to validation results, a la: https://docs.google.com/presentation/d/1ZqFXsoOyW2KIkMBNij3c7KOM0RhajhAHKesdCL_BKHw/edit#slide=id.g6b0ff79464_0_183&gt;&gt;&#xA;--&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/great-expectations/great_expectations/develop/readme_assets/terminal.gif&#34; alt=&#34;ooooo ahhhh&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tests are docs and docs are tests&lt;/h3&gt; &#xA;&lt;p&gt;Many data teams struggle to maintain up-to-date data documentation. Great Expectations solves this problem by rendering Expectations directly into clean, human-readable documentation.&lt;/p&gt; &#xA;&lt;p&gt;Since docs are rendered from tests, and tests are run against new data as it arrives, your documentation is guaranteed to never go stale. Additional renderers allow Great Expectations to generate other type of &#34;documentation&#34;, including &#xA; &lt;!--[slack notifications](), [data dictionaries](), [customized notebooks]()--&gt; slack notifications, data dictionaries, customized notebooks, etc.&lt;/p&gt; &#xA;&lt;!--&#xA;&lt;&lt;Pic, similar to slide 32: https://docs.google.com/presentation/d/1ZqFXsoOyW2KIkMBNij3c7KOM0RhajhAHKesdCL_BKHw/edit#slide=id.g6af8c4cd70_0_38&gt;&gt;&#xA;&#xA;&lt;&lt;Pic, showing an Expectation that renders a graph&gt;&gt;&#xA;&#xA;Check out [Down with Documentation Rot!]() for more details.&#xA;--&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/great-expectations/great_expectations/develop/readme_assets/test-are-docs.jpg&#34; alt=&#34;Your tests are your docs and your docs are your tests&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Automated data profiling&lt;/h3&gt; &#xA;&lt;p&gt;Wouldn&#39;t it be great if your tests could write themselves? Run your data through one of Great Expectations&#39; data profilers and it will automatically generate Expectations and data documentation. Profiling, a beta feature of Great Expectations, provides the double benefit of helping you explore data faster, and capturing knowledge for future documentation and testing.&lt;/p&gt; &#xA;&lt;!--&#xA;&lt;&lt;&lt;pretty pics of profiled data&gt;&gt;&gt;&#xA;&lt;&lt;&lt;esp. multi-batch profiling&gt;&gt;&gt;&#xA;--&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/great-expectations/great_expectations/develop/readme_assets/datadocs.gif&#34; alt=&#34;ooooo ahhhh&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Automated profiling doesn&#39;t replace domain expertise—you will almost certainly tune and augment your auto-generated Expectations over time—but it&#39;s a great way to jump start the process of capturing and sharing domain knowledge across your team.&lt;/p&gt; &#xA;&lt;!--&#xA;&lt;&lt;&lt;Note: this feature is still in early beta. Expect changes.&gt;&gt;&gt;&#xA;&#xA;Visit our gallery of expectations and documentation generated via automatic data profiling [here]().&#xA;&#xA;You can also test out profiling on your own data [here]().&#xA;--&gt; &#xA;&lt;h3&gt;Pluggable and extensible&lt;/h3&gt; &#xA;&lt;p&gt;Every component of the framework is designed to be extensible: Expectations, storage, profilers, renderers for documentation, actions taken after validation, etc. This design choice gives a lot of creative freedom to developers working with Great Expectations.&lt;/p&gt; &#xA;&lt;p&gt;Recent extensions include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://greatexpectations.io/blog/20200731_data_dictionary_plugin/&#34;&gt;Renderers for data dictionaries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/great-expectations/great_expectations/pull/841&#34;&gt;BigQuery and GCS integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/great-expectations/great_expectations/issues/902&#34;&gt;Notifications to MatterMost&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;New deployment patterns include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.greatexpectations.io/docs/deployment_patterns/how_to_use_great_expectations_with_google_cloud_platform_and_bigquery&#34;&gt;How to Use Great Expectations with Google Cloud Platform and BigQuery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.greatexpectations.io/docs/deployment_patterns/how_to_use_great_expectations_in_databricks/&#34;&gt;How to Use Great Expectations in Databricks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.greatexpectations.io/docs/deployment_patterns/how_to_use_great_expectations_in_flyte&#34;&gt;How to Use Great Expectations in Flyte&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We&#39;re very excited to see what other plugins the data community comes up with!&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;To see Great Expectations in action on your own data:&lt;/p&gt; &#xA;&lt;p&gt;You can install it using pip&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install great_expectations&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or conda&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda install -c conda-forge great-expectations&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and then run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;great_expectations init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(We recommend deploying within a virtual environment. If you’re not familiar with pip, virtual environments, notebooks, or git, you may want to check out the &lt;a href=&#34;https://docs.greatexpectations.io/docs/reference/supporting_resources&#34;&gt;Supporting Resources&lt;/a&gt;, which will teach you how to get up and running in minutes.)&lt;/p&gt; &#xA;&lt;p&gt;For full documentation, visit &lt;a href=&#34;https://docs.greatexpectations.io/&#34;&gt;https://docs.greatexpectations.io/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you need help, hop into our &lt;a href=&#34;https://greatexpectations.io/slack&#34;&gt;Slack channel&lt;/a&gt;—there are always contributors and other users there. You can also use our &lt;a href=&#34;https://github.com/great-expectations/great_expectations/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!--&#xA;-------------------------------------------------------------&#xA;&lt;&lt;&lt;More social proof: pics and quotes of power users&gt;&gt;&gt;&#xA;&#xA;-------------------------------------------------------------&#xA;--&gt; &#xA;&lt;h2&gt;Integrations&lt;/h2&gt; &#xA;&lt;p&gt;Great Expectations works with the tools and systems that you&#39;re already using with your data, including:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th colspan=&#34;2&#34;&gt;Integration&lt;/th&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td style=&#34;text-align: center; height=40px;&#34;&gt;&lt;img height=&#34;40&#34; src=&#34;https://pandas.pydata.org/static/img/pandas.svg?sanitize=true&#34;&gt; &lt;/td&gt;&#xA;   &lt;td style=&#34;width: 200px;&#34;&gt;Pandas &lt;/td&gt;&#xA;   &lt;td&gt;Great for in-memory machine learning pipelines!&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td style=&#34;text-align: center; height=40px;&#34;&gt;&lt;img height=&#34;40&#34; src=&#34;https://spark.apache.org/images/spark-logo-trademark.png&#34;&gt; &lt;/td&gt;&#xA;   &lt;td style=&#34;width: 200px;&#34;&gt;Spark &lt;/td&gt;&#xA;   &lt;td&gt;Good for really big data.&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td style=&#34;text-align: center; height=40px;&#34;&gt;&lt;img height=&#34;40&#34; src=&#34;https://wiki.postgresql.org/images/3/30/PostgreSQL_logo.3colors.120x120.png&#34;&gt; &lt;/td&gt;&#xA;   &lt;td style=&#34;width: 200px;&#34;&gt;Postgres &lt;/td&gt;&#xA;   &lt;td&gt;Leading open source database&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td style=&#34;text-align: center; height=40px;&#34;&gt;&lt;img height=&#34;40&#34; src=&#34;https://raw.githubusercontent.com/gist/nelsonauner/be8160f2e576a327bfcde085b334f622/raw/b4ec25dd4d698abdc37e6c1887ec69ddcca1d27d/google_bigquery_logo.svg?sanitize=true&#34;&gt;&lt;/td&gt;&#xA;   &lt;td style=&#34;width: 200px;&#34;&gt;BigQuery&lt;/td&gt;&#xA;   &lt;td&gt;Google serverless massive-scale SQL analytics platform&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td style=&#34;text-align: center; height=40px;&#34;&gt;&lt;img height=&#34;40&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/6/63/Databricks_Logo.png&#34;&gt;&lt;/td&gt;&#xA;   &lt;td style=&#34;width: 200px;&#34;&gt;Databricks&lt;/td&gt;&#xA;   &lt;td&gt;Managed Spark Analytics Platform&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td style=&#34;text-align: center; height=40px;&#34;&gt;&lt;img height=&#34;40&#34; src=&#34;https://www.mysql.com/common/logos/powered-by-mysql-167x86.png&#34;&gt; &lt;/td&gt;&#xA;   &lt;td style=&#34;width: 200px;&#34;&gt;MySQL &lt;/td&gt;&#xA;   &lt;td&gt;Leading open source database&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td style=&#34;text-align: center; height=40px;&#34;&gt;&lt;img height=&#34;40&#34; src=&#34;https://www.blazeclan.com/wp-content/uploads/2013/08/Amazon-Redshift-%E2%80%93-11-Key-Points-to-Remember.png&#34;&gt; &lt;/td&gt;&#xA;   &lt;td style=&#34;width: 200px;&#34;&gt;AWS Redshift &lt;/td&gt;&#xA;   &lt;td&gt;Cloud-based data warehouse&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td style=&#34;text-align: center; height=40px;&#34;&gt;&lt;img height=&#34;40&#34; src=&#34;https://braze-marketing-assets.s3.amazonaws.com/images/partner_logos/amazon-s3.png&#34;&gt; &lt;/td&gt;&#xA;   &lt;td style=&#34;width: 200px;&#34;&gt;AWS S3 &lt;/td&gt;&#xA;   &lt;td&gt;Cloud based blob storage&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td style=&#34;text-align: center; height=40px;&#34;&gt;&lt;img height=&#34;40&#34; src=&#34;https://www.snowflake.com/wp-content/themes/snowflake/img/snowflake-logo-blue@2x.png&#34;&gt; &lt;/td&gt;&#xA;   &lt;td style=&#34;width: 200px;&#34;&gt;Snowflake &lt;/td&gt;&#xA;   &lt;td&gt;Cloud-based data warehouse&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td style=&#34;text-align: center; height=40px;&#34;&gt;&lt;img height=&#34;40&#34; src=&#34;https://raw.githubusercontent.com/apache/airflow/master/docs/apache-airflow/img/logos/wordmark_1.png&#34;&gt;&lt;/td&gt;&#xA;   &lt;td style=&#34;width: 200px;&#34;&gt;Apache Airflow &lt;/td&gt;&#xA;   &lt;td&gt;An open source orchestration engine&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td style=&#34;text-align: center; height=40px;&#34;&gt;&lt;img height=&#34;40&#34; src=&#34;https://camo.githubusercontent.com/abeb8916a5c054f02e5b50bc10ba50717d56ad882e2ec1e5a8be93258e702204/68747470733a2f2f696d616765732e6374666173736574732e6e65742f676d3938777a716f746d6e782f335566636237795971635842446c41684a33306763652f63323337626233323534313930373935623330626637333466336362633164342f707265666563742d6c6f676f2d66756c6c2d6772616469656e742e737667&#34;&gt;&lt;/td&gt;&#xA;   &lt;td style=&#34;width: 200px;&#34;&gt;Prefect &lt;/td&gt;&#xA;   &lt;td&gt;An open source workflow management system&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td style=&#34;text-align: center; height=40px;&#34;&gt;&lt;img height=&#34;40&#34; src=&#34;https://www.sqlalchemy.org/img/sqla_logo.png&#34;&gt; &lt;/td&gt;&#xA;   &lt;td style=&#34;width: 200px;&#34;&gt;Other SQL Relational DBs &lt;/td&gt;&#xA;   &lt;td&gt;Most RDBMS are supported via SQLalchemy&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td style=&#34;text-align: center; height=40px;&#34;&gt;&lt;img height=&#34;40&#34; src=&#34;https://jupyter.org/assets/logos/rectanglelogo-greytext-orangebody-greymoons.svg?sanitize=true&#34;&gt; &lt;/td&gt;&#xA;   &lt;td style=&#34;width: 200px;&#34;&gt;Jupyter Notebooks &lt;/td&gt;&#xA;   &lt;td&gt;The best way to build Expectations&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td style=&#34;text-align: center; height=40px;&#34;&gt;&lt;img height=&#34;40&#34; src=&#34;https://cdn.brandfolder.io/5H442O3W/as/pl546j-7le8zk-5guop3/Slack_RGB.png&#34;&gt; &lt;/td&gt;&#xA;   &lt;td style=&#34;width: 200px;&#34;&gt;Slack &lt;/td&gt;&#xA;   &lt;td&gt; Get automatic data quality notifications!&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!--&#xA;Quick start&#xA;-------------------------------------------------------------&#xA;&#xA;Still getting comfortable with the concept of Expectations? Try [our online browser]()&#xA;&#xA;Ready to start working with Great Expectations?&#xA;&#xA;`great expectations init`&#xA;&#xA;Looking at production deployment? [Go here]()&#xA;&#xA;-------------------------------------------------------------&#xA;&lt;&lt;&lt;More social proof: pics and quotes of power users&gt;&gt;&gt;&#xA;&#xA;-------------------------------------------------------------&#xA;Liking what you see? Show some love and give us a star!&#xA;--&gt; &#xA;&lt;h2&gt;What does Great Expectations &lt;em&gt;not&lt;/em&gt; do?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Great Expectations is &lt;em&gt;not&lt;/em&gt; a pipeline execution framework.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;We aim to integrate seamlessly with DAG execution tools like &lt;a href=&#34;https://spark.apache.org/&#34;&gt;Spark&lt;/a&gt;, &lt;a href=&#34;https://airflow.apache.org/&#34;&gt;Airflow&lt;/a&gt;, &lt;a href=&#34;https://www.getdbt.com/&#34;&gt;dbt&lt;/a&gt;, &lt;a href=&#34;https://www.prefect.io/&#34;&gt;prefect&lt;/a&gt;, &lt;a href=&#34;https://github.com/dagster-io/dagster&#34;&gt;dagster&lt;/a&gt;, &lt;a href=&#34;https://github.com/quantumblacklabs/kedro&#34;&gt;Kedro&lt;/a&gt;, &lt;a href=&#34;https://flyte.org/&#34;&gt;Flyte&lt;/a&gt;, etc. We DON&#39;T execute your pipelines for you.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Great Expectations is &lt;em&gt;not&lt;/em&gt; a data versioning tool.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Great Expectations does not store data itself. Instead, it deals in metadata about data: Expectations, validation results, etc. If you want to bring your data itself under version control, check out tools like: &lt;a href=&#34;https://dvc.org/&#34;&gt;DVC&lt;/a&gt; and &lt;a href=&#34;https://github.com/quiltdata/quilt&#34;&gt;Quilt&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Great Expectations currently works best in a python/bash environment.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Following the philosophy of &#34;take the compute to the data,&#34; Great Expectations currently supports native execution of Expectations in three environments: pandas, SQL (through the SQLAlchemy core), and Spark. That said, all orchestration in Great Expectations is python-based. You can invoke it from the command line without using a python programming environment, but if you&#39;re working in another ecosystem, other tools might be a better choice. If you&#39;re running in a pure R environment, you might consider &lt;a href=&#34;https://github.com/ropensci/assertr&#34;&gt;assertR&lt;/a&gt; as an alternative. Within the Tensorflow ecosystem, &lt;a href=&#34;https://www.tensorflow.org/tfx/guide/tfdv&#34;&gt;TFDV&lt;/a&gt; fulfills a similar function as Great Expectations.&lt;/p&gt; &#xA;&lt;h2&gt;Who maintains Great Expectations?&lt;/h2&gt; &#xA;&lt;p&gt;Great Expectations is under active development by James Campbell, Abe Gong, Eugene Mandel, Rob Lim, Taylor Miller, with help from many others.&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s the best way to get in touch with the Great Expectations team?&lt;/h2&gt; &#xA;&lt;p&gt;If you have questions, comments, or just want to have a good old-fashioned chat about data pipelines, please hop on our public &lt;a href=&#34;https://greatexpectations.io/slack&#34;&gt;Slack channel&lt;/a&gt; or post in our &lt;a href=&#34;https://docs.greatexpectations.io/docs/contributing/index&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Can I contribute to the library?&lt;/h2&gt; &#xA;&lt;p&gt;Absolutely. Yes, please. Start &lt;a href=&#34;https://docs.greatexpectations.io/docs/contributing/index&#34;&gt;here&lt;/a&gt; and please don&#39;t be shy with questions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lxwily/yanglegeyang</title>
    <updated>2022-09-24T01:37:38Z</updated>
    <id>tag:github.com,2022-09-24:/lxwily/yanglegeyang</id>
    <link href="https://github.com/lxwily/yanglegeyang" rel="alternate"></link>
    <summary type="html">&lt;p&gt;羊了个羊通关助手（更新2022-09-21 22:50:00分）全网唯一，禁止盗版！羊了个羊助手，羊了个羊一键闯关。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;yanglegeyang&lt;/h1&gt; &#xA;&lt;p&gt;羊了个羊助手，更新至：&lt;code&gt;2022/09/21 12:00:00&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;一些想说的话&lt;/h2&gt; &#xA;&lt;p&gt;本项目旨在为你快速通关羊了个羊，上手需要一定动手能力以及门槛，请勿使用本程序恶意对游戏服务器持续造成压力，一切后果自负！！！&lt;code&gt;t 参数包含个人信息，任何情况请勿泄漏&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;项目仍在，欢迎PR，并未跑路，请切换 &lt;code&gt;main&lt;/code&gt; 分支查看，懂的都懂，点击右上角 Star 关注更新不迷路&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;本项目初衷是针对算法变态的官方介绍宣传只有 0.1% 的通关率羊了个羊给出快速通关方案，交流获取通关经验技巧，&lt;strong&gt;而不是用来暴力刷次数，便捷提供多线程批量提交数据恶意对游戏接口造成压力甚至导致不可用状态&lt;/strong&gt;，也并非恶意篡改计算机数据，所有接口均来自官方；&lt;/p&gt; &#xA;&lt;h2&gt;感谢贡献&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/20919526/191451862-8008b48e-d577-4bc9-a21a-523a6ae8cd03.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;列表按时间顺序:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新增map_md5获取&lt;/li&gt; &#xA; &lt;li&gt;新增MatchPlayInfo获取&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;免责声明&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;本仓库发布的 &lt;code&gt;yanglegeyang&lt;/code&gt; (下文均用本项目代替) 项目中涉及的任何脚本，仅用于测试和学习研究，禁止用于商业用途，不能保证其合法性，准确性，完整性和有效性，请根据情况自行判断。&lt;/li&gt; &#xA; &lt;li&gt;本项目内所有资源文件，禁止任何公众号、自媒体进行任何形式的转载、发布，禁止直接改项目名二次发布。&lt;/li&gt; &#xA; &lt;li&gt;作者对任何脚本问题概不负责，包括但不限于由任何脚本错误导致的任何损失或损害.&lt;/li&gt; &#xA; &lt;li&gt;请勿将本项目的任何内容用于商业或非法目的，否则后果自负。&lt;/li&gt; &#xA; &lt;li&gt;如果任何单位或个人认为该项目的脚本可能涉嫌侵犯其权利，则应及时通知并提供身份证明，所有权证明，我们将在收到认证文件后删除相关脚本。&lt;/li&gt; &#xA; &lt;li&gt;以任何方式查看此项目的人或直接或间接使用本项目的任何脚本的使用者都应仔细阅读此声明。作者保留随时更改或补充此免责声明的权利。一旦使用并复制了任何相关脚本或本项目，则视为您已接受此免责声明。&lt;/li&gt; &#xA; &lt;li&gt;您必须在下载后的24个小时之内，从您的电脑或手机中彻底删除上述内容。&lt;/li&gt; &#xA; &lt;li&gt;本项目遵循GPL-3.0 License协议，如果本特别声明与GPL-3.0 License协议有冲突之处，以本特别声明为准。&lt;/li&gt; &#xA; &lt;li&gt;任何擅自改变计算机信息网络数据属于违法行为，本项目不提供成品可运行程序，仅做学习研究使用。 &lt;code&gt;您使用或者复制了本仓库且本人制作的任何代码或项目，则视为已接受此声明，请仔细阅读。&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>dagster-io/dagster</title>
    <updated>2022-09-24T01:37:38Z</updated>
    <id>tag:github.com,2022-09-24:/dagster-io/dagster</id>
    <link href="https://github.com/dagster-io/dagster" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An orchestration platform for the development, production, and observation of data assets.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://dagster.io&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/dagster-io/dagster/master/.github/dagster-logo-dark.svg&#34;&gt; &#xA;   &lt;img alt=&#34;dagster logo&#34; src=&#34;https://raw.githubusercontent.com/dagster-io/dagster/master/.github/dagster-logo-light.svg?sanitize=true&#34; width=&#34;auto&#34; height=&#34;120&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://twitter.com/dagsterio&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/dagsterio?labelColor=4F43DD&amp;amp;color=163B36&amp;amp;logo=twitter&amp;amp;style=flat&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://dagster.io/slack&#34;&gt; &lt;img src=&#34;https://dagster-slackin.herokuapp.com/badge.svg?bg=163B36&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/dagster-io/dagster&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/dagster-io/dagster?labelColor=4F43DD&amp;amp;color=163B36&amp;amp;logo=github&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/dagster-io/dagster/raw/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-Apache_2.0-blue.svg?label=license&amp;amp;labelColor=4F43DD&amp;amp;color=163B36&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://pypi.org/project/dagster/&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/dagster?labelColor=4F43DD&amp;amp;color=163B36&#34;&gt; &lt;/a&gt; &lt;img src=&#34;https://img.shields.io/pypi/pyversions/dagster?labelColor=4F43DD&amp;amp;color=163B36&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Dagster is an orchestrator that&#39;s designed for developing and maintaining data assets, such as tables, data sets, machine learning models, and reports.&lt;/p&gt; &#xA;&lt;p&gt;You declare functions that you want to run and the data assets that those functions produce or update. Dagster then helps you run your functions at the right time and keep your assets up-to-date.&lt;/p&gt; &#xA;&lt;p&gt;Dagster is built to be used at every stage of the data development lifecycle - local development, unit tests, integration tests, staging environments, all the way up to production.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re new to Dagster, we recommend reading about its &lt;a href=&#34;https://docs.dagster.io/concepts&#34;&gt;core concepts&lt;/a&gt; or learning with the hands-on &lt;a href=&#34;https://docs.dagster.io/tutorial&#34;&gt;tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;An asset graph defined in Python:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from dagster import asset&#xA;from pandas import DataFrame, read_html, get_dummies&#xA;from sklearn.linear_model import LinearRegression&#xA;&#xA;@asset&#xA;def country_populations() -&amp;gt; DataFrame:&#xA;    df = read_html(&#34;https://tinyurl.com/mry64ebh&#34;)[0]&#xA;    df.columns = [&#34;country&#34;, &#34;continent&#34;, &#34;rg&#34;, &#34;pop2018&#34;, &#34;pop2019&#34;, &#34;change&#34;]&#xA;    df[&#34;change&#34;] = df[&#34;change&#34;].str.rstrip(&#34;%&#34;).str.replace(&#34;−&#34;, &#34;-&#34;).astype(&#34;float&#34;)&#xA;    return df&#xA;&#xA;@asset&#xA;def continent_change_model(country_populations: DataFrame) -&amp;gt; LinearRegression:&#xA;    data = country_populations.dropna(subset=[&#34;change&#34;])&#xA;    return LinearRegression().fit(&#xA;        get_dummies(data[[&#34;continent&#34;]]), data[&#34;change&#34;]&#xA;    )&#xA;&#xA;@asset&#xA;def continent_stats(&#xA;    country_populations: DataFrame, continent_change_model: LinearRegression&#xA;) -&amp;gt; DataFrame:&#xA;    result = country_populations.groupby(&#34;continent&#34;).sum()&#xA;    result[&#34;pop_change_factor&#34;] = continent_change_model.coef_&#xA;    return result&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The graph loaded into Dagster&#39;s web UI:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;478&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/654855/183537484-48dde394-91f2-4de0-9b17-a70b3e9a3823.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Dagster is available on PyPI and officially supports Python 3.7+.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install dagster dagit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This installs two modules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dagster&lt;/strong&gt;: The core programming model.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dagit&lt;/strong&gt;: The web interface for developing and operating Dagster jobs and assets.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find the full Dagster documentation &lt;a href=&#34;https://docs.dagster.io&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Connect with thousands of other data practitioners building with Dagster. Share knowledge, get help, and contribute to the open-source project. To see featured material and upcoming events, check out our &lt;a href=&#34;https://dagster.io/community&#34;&gt;Dagster Community&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;Join our community here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🌟 &lt;a href=&#34;https://github.com/dagster-io/dagster&#34;&gt;Star us on Github&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🐦 &lt;a href=&#34;https://twitter.com/dagsterio&#34;&gt;Follow us on Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;📺 &lt;a href=&#34;https://www.youtube.com/channel/UCfLnv9X8jyHTe6gJ4hVBo9Q&#34;&gt;Subscribe to our YouTube channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;📚 &lt;a href=&#34;https://dagster.io/blog&#34;&gt;Read our blog posts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;👋 &lt;a href=&#34;https://dagster.io/slack&#34;&gt;Join us on Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;✏️ &lt;a href=&#34;https://github.com/dagster-io/dagster/discussions&#34;&gt;Start a Github Discussion&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;For details on contributing or running the project for development, check out our &lt;a href=&#34;https://docs.dagster.io/community/contributing/&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Dagster is &lt;a href=&#34;https://github.com/dagster-io/dagster/raw/master/LICENSE&#34;&gt;Apache 2.0 licensed&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>