<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-13T01:36:04Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mohammadpz/pytorch_forward_forward</title>
    <updated>2022-12-13T01:36:04Z</updated>
    <id>tag:github.com,2022-12-13:/mohammadpz/pytorch_forward_forward</id>
    <link href="https://github.com/mohammadpz/pytorch_forward_forward" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implementation of Hinton&#39;s forward-forward (FF) algorithm - an alternative to back-propagation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pytorch_forward_forward&lt;/h1&gt; &#xA;&lt;h2&gt;Implementation of forward-forward (FF) training algorithm - an alternative to back-propagation&lt;/h2&gt; &#xA;&lt;p&gt;Below is my understanding of the FF algorithm presented at &lt;a href=&#34;https://www.cs.toronto.edu/~hinton/FFA13.pdf&#34;&gt;Geoffrey Hinton&#39;s talk at NeurIPS 2022&lt;/a&gt;.&lt;br&gt; The conventional backprop computes the gradients by successive applications of the chain rule, from the objective function to the parameters. FF, however, computes the gradients locally with a local objective function, so there is no need to backpropagate the errors.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mohammadpz/pytorch_forward_forward/main/imgs/BP_vs_FF.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The local objective function is designed to push a layer&#39;s output to values larger than a threshold for positive samples and to values smaller than a threshold for negative samples.&lt;/p&gt; &#xA;&lt;p&gt;A positive sample $s$ is a real datapoint with a large $P(s)$ under the training distribution.&lt;br&gt; A negative sample $s&#39;$ is a fake datapoint with a small $P(s&#39;)$ under the training distribution.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mohammadpz/pytorch_forward_forward/main/imgs/layer.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Among the many ways of generating the positive/negative samples, for MNIST, we have:&lt;br&gt; Positive sample $s = merge(x, y)$, the image and its label&lt;br&gt; Negative sample $s&#39; = merge(x, y_{random})$, the image and a random label&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mohammadpz/pytorch_forward_forward/main/imgs/pos_neg.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After training all the layers, to make a prediction for a test image $x$, we find the pair $s = (x, y)$ for all $0 \leq y &amp;lt; 10$ that maximizes the network&#39;s overall activation.&lt;/p&gt; &#xA;&lt;p&gt;With this implementation, the training and test accuracy on MNIST are:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt; python main.py&#xA;train error: 0.06754004955291748&#xA;test error: 0.06840002536773682&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>A-kirami/nonebot-plugin-chatgpt</title>
    <updated>2022-12-13T01:36:04Z</updated>
    <id>tag:github.com,2022-12-13:/A-kirami/nonebot-plugin-chatgpt</id>
    <link href="https://github.com/A-kirami/nonebot-plugin-chatgpt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://v2.nonebot.dev/store&#34;&gt;&lt;img src=&#34;https://github.com/A-kirami/nonebot-plugin-template/raw/resources/nbp_logo.png&#34; width=&#34;180&#34; height=&#34;180&#34; alt=&#34;NoneBotPluginLogo&#34;&gt;&lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/A-kirami/nonebot-plugin-template/raw/resources/NoneBotPlugin.svg?sanitize=true&#34; width=&#34;240&#34; alt=&#34;NoneBotPluginText&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;nonebot-plugin-chatgpt&lt;/h1&gt; &#xA; &lt;p&gt;&lt;em&gt;✨ ChatGPT AI 对话 ✨&lt;/em&gt;&lt;/p&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/A-kirami/nonebot-plugin-chatgpt/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/A-kirami/nonebot-plugin-chatgpt.svg?sanitize=true&#34; alt=&#34;license&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://pypi.python.org/pypi/nonebot-plugin-chatgpt&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/nonebot-plugin-chatgpt.svg?sanitize=true&#34; alt=&#34;pypi&#34;&gt; &lt;/a&gt; &#xA; &lt;img src=&#34;https://img.shields.io/badge/python-3.8+-blue.svg?sanitize=true&#34; alt=&#34;python&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;📖 介绍&lt;/h2&gt; &#xA;&lt;p&gt;智能对话聊天插件，核心部分参考 &lt;a href=&#34;https://github.com/acheong08/ChatGPT&#34;&gt;acheong08/ChatGPT&lt;/a&gt; 实现。&lt;/p&gt; &#xA;&lt;h2&gt;💿 安装&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;使用 nb-cli 安装&lt;/summary&gt; 在 nonebot2 项目的根目录下打开命令行, 输入以下指令即可安装 &#xA; &lt;pre&gt;&lt;code&gt;nb plugin install nonebot-plugin-chatgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;使用包管理器安装&lt;/summary&gt; 在 nonebot2 项目的插件目录下, 打开命令行, 根据你使用的包管理器, 输入相应的安装命令 &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;pip&lt;/summary&gt; &#xA;  &lt;pre&gt;&lt;code&gt;pip install nonebot-plugin-chatgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;/details&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;pdm&lt;/summary&gt; &#xA;  &lt;pre&gt;&lt;code&gt;pdm add nonebot-plugin-chatgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;/details&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;poetry&lt;/summary&gt; &#xA;  &lt;pre&gt;&lt;code&gt;poetry add nonebot-plugin-chatgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;/details&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;conda&lt;/summary&gt; &#xA;  &lt;pre&gt;&lt;code&gt;conda install nonebot-plugin-chatgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;/details&gt; &#xA; &lt;p&gt;打开 nonebot2 项目的 &lt;code&gt;bot.py&lt;/code&gt; 文件, 在其中写入&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;nonebot.load_plugin(&#39;nonebot_plugin_chatgpt&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;⚙️ 配置&lt;/h2&gt; &#xA;&lt;p&gt;在 nonebot2 项目的&lt;code&gt;.env&lt;/code&gt;文件中添加下表中的必填配置（在arm平台，可能必须使用CHATGPT_SESSION_TOKEN登录）&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;配置项&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;必填&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;默认值&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CHATGPT_SESSION_TOKEN&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;空字符串&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ChatGPT 的 session_token，如配置则优先使用&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CHATGPT_ACCOUNT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;空字符串&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ChatGPT 登陆邮箱，未配置则使用 session_token&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CHATGPT_PASSWORD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;空字符串&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ChatGPT 登陆密码，未配置则使用 session_token&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CHATGPT_CD_TIME&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;60&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;冷却时间，单位：秒&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CHATGPT_PROXIES&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;None&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;代理地址，格式为： &lt;code&gt;http://ip:port&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CHATGPT_REFRESH_INTERVAL&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;30&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;session_token 自动刷新间隔，单位：分钟&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CHATGPT_COMMAND&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;空字符串&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;触发聊天的命令，可以是 &lt;code&gt;字符串&lt;/code&gt; 或者 &lt;code&gt;字符串列表&lt;/code&gt;。&lt;br&gt;如果为空字符串或者空列表，则默认响应全部消息&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CHATGPT_TO_ME&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;True&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;是否需要@机器人&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CHATGPT_TIMEOUT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;30&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;请求服务器的超时时间，单位：秒&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CHATGPT_API&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://chat.openai.com/&#34;&gt;https://chat.openai.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;API 地址，可配置反代&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CHATGPT_IMAGE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;False&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;是否以图片形式发送。&lt;br&gt;如果启动时出现 &lt;code&gt;NotImplementedError&lt;/code&gt; 错误，请在 &lt;code&gt;.env.dev&lt;/code&gt; 中将 &lt;code&gt;fastapi_reload&lt;/code&gt; 设置为 &lt;code&gt;False&lt;/code&gt;&lt;br&gt;如果无法显示文字，请&lt;a href=&#34;https://github.com/kexue-z/nonebot-plugin-htmlrender#%E5%B8%B8%E8%A7%81%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87&#34;&gt;点击此处&lt;/a&gt;查看解决办法&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CHATGPT_IMAGE_WIDTH&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;500&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;消息图片宽度，单位：像素&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CHATGPT_PRIORITY&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;999&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;事件响应器优先级&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CHATGPT_BLOCK&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;True&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;是否阻断消息传播&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CHATGPT_PRIVATE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;True&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;是否允许私聊使用&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CHATGPT_SCOPE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;private&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;设置公共会话或私有会话&lt;br&gt;private：私有会话，群内成员会话各自独立&lt;br&gt;public：公共对话，群内成员共用同一会话&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;获取 session_token&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;登录 &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;https://chat.openai.com/chat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;按 &lt;code&gt;F12&lt;/code&gt; 打开控制台&lt;/li&gt; &#xA; &lt;li&gt;切换到 &lt;code&gt;Application/应用&lt;/code&gt; 选项卡，找到 &lt;code&gt;Cookies&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;复制 &lt;code&gt;__Secure-next-auth.session-token&lt;/code&gt; 的值，配置到 &lt;code&gt;CHATGPT_SESSION_TOKEN&lt;/code&gt; 即可&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/36258159/205494773-32ef651a-994d-435a-9f76-a26699935dac.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🎉 使用&lt;/h2&gt; &#xA;&lt;p&gt;默认配置下，@机器人加任意文本即可。&lt;/p&gt; &#xA;&lt;p&gt;如果需要修改插件的触发方式，自定义 &lt;code&gt;CHATGPT_COMMAND&lt;/code&gt; 和 &lt;code&gt;CHATGPT_TO_ME&lt;/code&gt; 配置项即可。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;指令&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;需要@&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;范围&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;刷新会话/刷新对话&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;群聊/私聊&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;重置会话记录，开始新的对话&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;导出会话/导出对话&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;群聊/私聊&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;导出当前会话记录&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;导入会话/导入对话 + 会话ID + 父消息ID(可选)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;群聊/私聊&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;将会话记录导入，这会替换当前的会话&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;保存会话/保存对话 + 会话名称&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;群聊/私聊&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;将当前会话保存&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;查看会话/查看对话&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;群聊/私聊&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;查看已保存的所有会话&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;切换会话/切换对话 + 会话名称&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;群聊/私聊&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;切换到指定的会话&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>jonathanpaulson/AdventOfCode</title>
    <updated>2022-12-13T01:36:04Z</updated>
    <id>tag:github.com,2022-12-13:/jonathanpaulson/AdventOfCode</id>
    <link href="https://github.com/jonathanpaulson/AdventOfCode" rel="alternate"></link>
    <summary type="html">&lt;p&gt;My Advent of Code solutions. I also upload videos of my solves: https://www.youtube.com/channel/UCuWLIm0l4sDpEe28t41WITA&lt;/p&gt;&lt;hr&gt;&lt;p&gt;My solutions to adventofcode.com puzzles.&lt;/p&gt; &#xA;&lt;p&gt;I post videos of me solving the puzzles in real-time at &lt;a href=&#34;https://www.youtube.com/channel/UCuWLIm0l4sDpEe28t41WITA&#34;&gt;https://www.youtube.com/channel/UCuWLIm0l4sDpEe28t41WITA&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Run with (where 13.in contains the input for that day):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pypy 13.py 13.in&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Each solution should print two lines - the answer for part1 and the answer for part2.&lt;/p&gt;</summary>
  </entry>
</feed>