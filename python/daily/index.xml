<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-04T01:43:13Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mishalhossin/Discord-Chatbot-Gpt4Free</title>
    <updated>2023-05-04T01:43:13Z</updated>
    <id>tag:github.com,2023-05-04:/mishalhossin/Discord-Chatbot-Gpt4Free</id>
    <link href="https://github.com/mishalhossin/Discord-Chatbot-Gpt4Free" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is a Python-based Discord bot. This is all free due to the GPT4FREE project&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gpt4Free-Chat-bot ü§ñ&lt;/h1&gt; &#xA;&lt;p&gt;This is a &lt;a href=&#34;https://www.python.org&#34;&gt;Python&lt;/a&gt;-based Discord bot using the &lt;code&gt;discord.py&lt;/code&gt; library. The bot responds to messages, can change its profile picture, and provide latency information. Additionally, it uses the &lt;code&gt;theb&lt;/code&gt; library from &lt;a href=&#34;https://github.com/xtekky/gpt4free&#34;&gt;GPT4FREE&lt;/a&gt; for generating responses based on conversation history.&lt;/p&gt; &#xA;&lt;h1&gt;Preview üëÄ&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/91066601/235470838-cad26039-c843-4497-8ba7-fc88c66dab49.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Commands ‚öôÔ∏è‚öôÔ∏è&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Toggle active channel for a server by using &lt;code&gt;!toggleactive&lt;/code&gt; command. ‚ö†Ô∏è&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/91066601/235982560-d7c068d6-d35f-4153-9723-923a8c31546d.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Toggle if dm should be active or not by using &lt;code&gt;!toggledm&lt;/code&gt; ‚ö†Ô∏è&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/91066601/235982180-d9926bb6-b6f9-44de-a0f7-045fce0dbda1.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Changes its profile picture with the &lt;code&gt;!pfp [url or attachment]&lt;/code&gt; command.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Provides latency information with the &lt;code&gt;!ping&lt;/code&gt; command.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Changes its username with the &lt;code&gt;!changeusr [New username]&lt;/code&gt; command.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If anything gose wrong use &lt;code&gt;!bonk&lt;/code&gt; to clear history&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Steps to install and run üö© :&lt;/h1&gt; &#xA;&lt;h3&gt;Step 1. üé¨ Git clone repository&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/mishalhossin/Discord-Chatbot-Gpt4Free&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 2. üìÅ Changing directory to cloned directory&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd Discord-Chatbot-Gpt4Free&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 3. üîë Getting discord bot token and enabling intents from &lt;a href=&#34;https://discord.com/developers/applications&#34;&gt;here&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h5&gt;Select application&lt;/h5&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/91066601/235554871-a5f98345-4197-4b55-91d7-1aef0d0680f0.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Enable intents&lt;/h5&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/91066601/235555012-e8427bfe-cffc-4761-bbc0-d1467ca1ff4d.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Get the token !!! by clicking copy&lt;/h5&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/91066601/235555065-6b51844d-dfbd-4b11-a14b-f65dd6de20d9.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Step 4. üîê Create a &lt;code&gt;.env&lt;/code&gt; file. It will look like this:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;DISCORD_TOKEN=token_from_step_3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/91066601/235554576-74e9e1e5-40ed-49d8-b815-dfecf890892d.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Step 5. ‚öôÔ∏è Install all the dependencies&lt;/h3&gt; &#xA;&lt;h4&gt;Windows:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you dont have pip already. Run &lt;code&gt;python get-pip.py&lt;/code&gt; on windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Linux :&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip3 install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 6. üöÄ Run the bot&lt;/h3&gt; &#xA;&lt;h4&gt;Windows :&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;py main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Linux :&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;python main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;üèÅ Finally talk to the bot&lt;/h3&gt; &#xA;&lt;h4&gt;There are 2 ways to talk to the ai&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Invite your bot and DM (Direct message) it | ‚ö†Ô∏è Make sure you have DM enabled&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;if you want it in server channel use !toggleactive&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;For more awesome commands use &lt;strong&gt;!welp&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/91066601/235474066-d805b10b-168b-4965-b623-6b37470ca6bb.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;‚ú®‚ú®‚ú® Other ways to run ‚ú®‚ú®‚ú®&lt;/h1&gt; &#xA;&lt;h3&gt;Using docker to run &lt;span&gt;üê≥&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Have a working bot token&lt;/li&gt; &#xA; &lt;li&gt;Follow up-to step 4&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Install docker compose on linux machine :&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt update -y ; sudo apt upgrade -y; sudo apt autoremove -y; sudo apt install docker-compose -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Start the bot in docker container :&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker-compose up --build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using replit to run ‚òÅÔ∏è&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow all the steps except &lt;code&gt;step 1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Have a replit account&lt;/li&gt; &#xA; &lt;li&gt;Please note &lt;code&gt;.env&lt;/code&gt; is found in secrets tab of replit :&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/91066601/235810871-5d4c1469-35fd-42d2-a3a2-3382002877cb.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Config &lt;code&gt;.env&lt;/code&gt; in replit like this :&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/91066601/235811115-689c40e8-660a-448d-83dd-194631324436.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://repl.it/github/mishalhossin/Discord-Chatbot-Gpt4Free&#34;&gt;&lt;img src=&#34;https://repl-badge.jajoosam.repl.co/try.png&#34; alt=&#34;Try on repl.it&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h6&gt;Want something nsfw ? then check this out: &lt;a href=&#34;https://github.com/mishalhossin/Gpt3-sexbot-discord&#34;&gt;SEX-GPT&lt;/a&gt;&lt;/h6&gt;</summary>
  </entry>
  <entry>
    <title>georgia-tech-db/eva</title>
    <updated>2023-05-04T01:43:13Z</updated>
    <id>tag:github.com,2023-05-04:/georgia-tech-db/eva</id>
    <link href="https://github.com/georgia-tech-db/eva" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AI-Relational Database System | SQL meets Deep Learning&lt;/p&gt;&lt;hr&gt;&lt;div&gt; &#xA; &lt;a href=&#34;https://evadb.readthedocs.io/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/georgia-tech-db/eva/master/docs/images/eva/eva-banner.png&#34; alt=&#34;EVA&#34; width=&#34;1000px&#34; margin-left=&#34;-5px&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;EVA AI-Relational Database System&lt;/h1&gt; &#xA;&lt;div&gt; &#xA; &lt;a href=&#34;https://colab.research.google.com/github/georgia-tech-db/eva/blob/master/tutorials/03-emotion-analysis.ipynb&#34;&gt; &lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open EVA on Colab&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://join.slack.com/t/eva-db/shared_invite/zt-1i10zyddy-PlJ4iawLdurDv~aIAq90Dg&#34;&gt; &lt;img alt=&#34;Slack&#34; src=&#34;https://img.shields.io/badge/slack-eva-ff69b4.svg?logo=slack&#34;&gt; &lt;/a&gt; &#xA; &lt;img alt=&#34;PyPI&#34; src=&#34;https://img.shields.io/pypi/v/evadb.svg?sanitize=true&#34;&gt; &#xA; &lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/badge/license-Apache%202-brightgreen.svg?logo=apache&#34;&gt; &#xA; &lt;img alt=&#34;Coverage Status&#34; src=&#34;https://coveralls.io/repos/github/georgia-tech-db/eva/badge.svg?branch=master&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/orgs/georgia-tech-db/projects/3&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/eva-roadmap-ff3423&#34; alt=&#34;Roadmap&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://pepy.tech/project/evadb&#34;&gt; &lt;img alt=&#34;Downloads&#34; src=&#34;https://static.pepy.tech/badge/evadb/month&#34;&gt; &lt;/a&gt; &#xA; &lt;img alt=&#34;Python Versions&#34; src=&#34;https://img.shields.io/badge/Python--versions-3.7%20|%203.8%20|%203.9%20|%203.10-brightgreen&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;h3&gt;&lt;b&gt;EVA is a database system for building simpler and faster AI-powered applications.&lt;/b&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;EVA is designed for supporting database applications that operate on both structured (tables, feature vectors) and unstructured data (videos, podcasts, PDFs, etc.) using deep learning models. It accelerates AI pipelines by 10-100x using a collection of optimizations inspired by time-tested relational database systems, including function caching, sampling, and cost-based predicate reordering. EVA supports an AI-oriented SQL-like query language tailored for analyzing unstructured data. It comes with a wide range of models for analyzing unstructured data, including models for image classification, object detection, OCR, text sentiment classification, face detection, etc. It is fully implemented in Python and licensed under the Apache license.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/georgia-tech-db/eva/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/georgia-tech-db/eva/master/#quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/georgia-tech-db/eva/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/orgs/georgia-tech-db/projects/3&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/georgia-tech-db/eva/master/#demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/georgia-tech-db/eva/master/#illustrative-applications&#34;&gt;Illustrative Applications&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/georgia-tech-db/eva/master/#community-and-support&#34;&gt;Community and Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/georgia-tech-db/eva/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/georgia-tech-db/eva/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üîÆ Build simpler AI-powered applications using short SQL-like queries&lt;/li&gt; &#xA; &lt;li&gt;‚ö°Ô∏è 10-100x faster AI pipelines using AI-centric query optimization&lt;/li&gt; &#xA; &lt;li&gt;üí∞ Save money spent on GPU-driven inference&lt;/li&gt; &#xA; &lt;li&gt;üöÄ First-class support for your custom deep learning models through user-defined functions&lt;/li&gt; &#xA; &lt;li&gt;üì¶ Built-in caching to eliminate redundant model invocations across queries&lt;/li&gt; &#xA; &lt;li&gt;‚å®Ô∏è First-class support for PyTorch and HuggingFace models&lt;/li&gt; &#xA; &lt;li&gt;üêç Installable via pip and fully implemented in Python&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;Here are some illustrative EVA-backed applications (all of them are Jupyter notebooks that can be opened in Google Colab):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üîÆ &lt;a href=&#34;https://evadb.readthedocs.io/en/stable/source/tutorials/02-object-detection.html&#34;&gt;Analysing traffic flow at an intersection &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üîÆ &lt;a href=&#34;https://evadb.readthedocs.io/en/stable/source/tutorials/03-emotion-analysis.html&#34;&gt;Examining the emotion palette of actors in a movie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üîÆ &lt;a href=&#34;https://evadb.readthedocs.io/en/stable/source/tutorials/01-mnist.html&#34;&gt;Classifying images based on their content&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üîÆ &lt;a href=&#34;https://evadb.readthedocs.io/en/latest/source/tutorials/07-object-segmentation-huggingface.html&#34;&gt;Image Segmentation using Hugging Face&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üîÆ &lt;a href=&#34;https://github.com/georgia-tech-db/license-plate-recognition&#34;&gt;Recognizing license plates &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üîÆ &lt;a href=&#34;https://github.com/georgia-tech-db/toxicity-classification&#34;&gt;Analysing toxicity of social media memes &lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://evadb.readthedocs.io/&#34;&gt;Detailed Documentation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you are wondering why you might need an AI-relational database system, start with the page on &lt;a href=&#34;https://evadb.readthedocs.io/en/stable/source/overview/video.html#&#34;&gt;Video Database Systems&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;The &lt;a href=&#34;https://evadb.readthedocs.io/en/stable/source/overview/installation.html&#34;&gt;Getting Started&lt;/a&gt; page shows how you can use EVA for different AI pipelines, and how you can easily extend EVA by defining an user-defined function that wraps around your custom deep learning model.&lt;/li&gt; &#xA;   &lt;li&gt;The &lt;a href=&#34;https://evadb.readthedocs.io/en/stable/source/tutorials/index.html&#34;&gt;User Guides&lt;/a&gt; section contains Jupyter Notebooks that demonstrate how to use various features of EVA. Each notebook includes a link to Google Colab to run the code.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/georgia-tech-db/eva/raw/master/tutorials/03-emotion-analysis.ipynb&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/eva-db/shared_invite/zt-1i10zyddy-PlJ4iawLdurDv~aIAq90Dg&#34;&gt;Join us on Slack!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/orgs/georgia-tech-db/projects/3&#34;&gt;Medium-Term Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/georgia-tech-db/eva/raw/master/tutorials/03-emotion-analysis.ipynb&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install EVA using the pip package manager. EVA supports Python versions &amp;gt;= 3.7.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install evadb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To launch and connect to an EVA server in a Jupyter notebook, check out this &lt;a href=&#34;https://github.com/georgia-tech-db/eva/raw/master/tutorials/03-emotion-analysis.ipynb&#34;&gt;illustrative emotion analysis notebook&lt;/a&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cursor = connect_to_server()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Load a video onto the EVA server (we use &lt;a href=&#34;https://raw.githubusercontent.com/georgia-tech-db/eva/master/data/ua_detrac/ua_detrac.mp4&#34;&gt;ua_detrac.mp4&lt;/a&gt; for illustration):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;LOAD VIDEO &#34;data/ua_detrac/ua_detrac.mp4&#34; INTO TrafficVideo;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;That&#39;s it! You can now run queries over the loaded video:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;SELECT id, data FROM TrafficVideo WHERE id &amp;lt; 5;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Search for frames in the video that contain a car&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;SELECT id, data FROM TrafficVideo WHERE [&#39;car&#39;] &amp;lt;@ YoloV5(data).labels;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Source Video&lt;/th&gt; &#xA;   &lt;th&gt;Query Result&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;Source Video&#34; src=&#34;https://github.com/georgia-tech-db/eva/releases/download/v0.1.0/traffic-input.webp&#34; width=&#34;300&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;Query Result&#34; src=&#34;https://github.com/georgia-tech-db/eva/releases/download/v0.1.0/traffic-output.webp&#34; width=&#34;300&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Search for frames in the video that contain a pedestrian and a car&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;SELECT id, data FROM TrafficVideo WHERE [&#39;pedestrian&#39;, &#39;car&#39;] &amp;lt;@ YoloV5(data).labels;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Search for frames with more than three cars&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;SELECT id, data FROM TrafficVideo WHERE ArrayCount(YoloV5(data).labels, &#39;car&#39;) &amp;gt; 3;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use your custom deep learning model in queries&lt;/strong&gt; with a user-defined function (UDF):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;CREATE UDF IF NOT EXISTS MyUDF&#xA;INPUT  (frame NDARRAY UINT8(3, ANYDIM, ANYDIM))&#xA;OUTPUT (labels NDARRAY STR(ANYDIM), bboxes NDARRAY FLOAT32(ANYDIM, 4),&#xA;        scores NDARRAY FLOAT32(ANYDIM))&#xA;TYPE  Classification&#xA;IMPL  &#39;eva/udfs/fastrcnn_object_detector.py&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Compose multiple models in a single query&lt;/strong&gt; to set up useful AI pipelines.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;   -- Analyse emotions of faces in a video&#xA;   SELECT id, bbox, EmotionDetector(Crop(data, bbox)) &#xA;   FROM MovieVideo JOIN LATERAL UNNEST(FaceDetector(data)) AS Face(bbox, conf)  &#xA;   WHERE id &amp;lt; 15;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;EVA runs queries faster using its AI-centric query optimizer&lt;/strong&gt;. Two key optimizations are:&lt;/p&gt; &lt;p&gt;üíæ &lt;strong&gt;Caching&lt;/strong&gt;: EVA automatically caches and reuses previous query results (especially model inference results), eliminating redundant computation and reducing query processing time.&lt;/p&gt; &lt;p&gt;üéØ &lt;strong&gt;Predicate Reordering&lt;/strong&gt;: EVA optimizes the order in which the query predicates are evaluated (e.g., runs the faster, more selective model first), leading to faster queries and lower inference costs.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Consider these two exploratory queries on a dataset of üêï images: &lt;img align=&#34;right&#34; style=&#34;display:inline;&#34; width=&#34;40%&#34; src=&#34;https://github.com/georgia-tech-db/eva/raw/master/data/assets/eva_performance_comparison.png?raw=true&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;  -- Query 1: Find all images of black-colored dogs&#xA;  SELECT id, bbox FROM dogs &#xA;  JOIN LATERAL UNNEST(YoloV5(data)) AS Obj(label, bbox, score) &#xA;  WHERE Obj.label = &#39;dog&#39; &#xA;    AND Color(Crop(data, bbox)) = &#39;black&#39;; &#xA;&#xA;  -- Query 2: Find all Great Danes that are black-colored&#xA;  SELECT id, bbox FROM dogs &#xA;  JOIN LATERAL UNNEST(YoloV5(data)) AS Obj(label, bbox, score) &#xA;  WHERE Obj.label = &#39;dog&#39; &#xA;    AND DogBreedClassifier(Crop(data, bbox)) = &#39;great dane&#39; &#xA;    AND Color(Crop(data, bbox)) = &#39;black&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By reusing the results of the first query and reordering the predicates based on the available cached inference results, EVA runs the second query &lt;strong&gt;10x faster&lt;/strong&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Illustrative Applications&lt;/h2&gt; &#xA;&lt;h3&gt;üîÆ &lt;a href=&#34;https://evadb.readthedocs.io/en/stable/source/tutorials/02-object-detection.html&#34;&gt;Traffic Analysis&lt;/a&gt; (Object Detection Model)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Source Video&lt;/th&gt; &#xA;   &lt;th&gt;Query Result&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;Source Video&#34; src=&#34;https://github.com/georgia-tech-db/eva/releases/download/v0.1.0/traffic-input.webp&#34; width=&#34;300&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;Query Result&#34; src=&#34;https://github.com/georgia-tech-db/eva/releases/download/v0.1.0/traffic-output.webp&#34; width=&#34;300&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;üîÆ &lt;a href=&#34;https://evadb.readthedocs.io/en/stable/source/tutorials/01-mnist.html&#34;&gt;MNIST Digit Recognition&lt;/a&gt; (Image Classification Model)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Source Video&lt;/th&gt; &#xA;   &lt;th&gt;Query Result&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;Source Video&#34; src=&#34;https://github.com/georgia-tech-db/eva/releases/download/v0.1.0/mnist-input.webp&#34; width=&#34;150&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;Query Result&#34; src=&#34;https://github.com/georgia-tech-db/eva/releases/download/v0.1.0/mnist-output.webp&#34; width=&#34;150&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;üîÆ &lt;a href=&#34;https://evadb.readthedocs.io/en/stable/source/tutorials/03-emotion-analysis.html&#34;&gt;Movie Emotion Analysis&lt;/a&gt; (Face Detection + Emotion Classfication Models)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Source Video&lt;/th&gt; &#xA;   &lt;th&gt;Query Result&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;Source Video&#34; src=&#34;https://github.com/georgia-tech-db/eva/releases/download/v0.1.0/gangubai-input.webp&#34; width=&#34;400&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;Query Result&#34; src=&#34;https://github.com/georgia-tech-db/eva/releases/download/v0.1.0/gangubai-output.webp&#34; width=&#34;400&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;üîÆ &lt;a href=&#34;https://github.com/georgia-tech-db/eva-application-template&#34;&gt;License Plate Recognition&lt;/a&gt; (Plate Detection + OCR Extraction Models)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Query Result&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;Query Result&#34; src=&#34;https://github.com/georgia-tech-db/license-plate-recognition/raw/main/README_files/README_12_3.png&#34; width=&#34;300&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;üîÆ &lt;a href=&#34;https://github.com/georgia-tech-db/toxicity-classification&#34;&gt;Meme Toxicity Classification&lt;/a&gt; (OCR Extraction + Toxicity Classification Models)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Query Result&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;Query Result&#34; src=&#34;https://raw.githubusercontent.com/georgia-tech-db/toxicity-classification/main/README_files/README_16_2.png&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Community and Support&lt;/h2&gt; &#xA;&lt;p&gt;üëã If you have general questions about EVA, want to say hello or just follow along, we&#39;d like to invite you to join our &lt;a href=&#34;https://join.slack.com/t/eva-db/shared_invite/zt-1i10zyddy-PlJ4iawLdurDv~aIAq90Dg&#34;&gt;Slack Community&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;a href=&#34;https://join.slack.com/t/eva-db/shared_invite/zt-1i10zyddy-PlJ4iawLdurDv~aIAq90Dg&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/georgia-tech-db/eva/master/docs/images/eva/eva-slack.png&#34; alt=&#34;EVA Slack Channel&#34; width=&#34;500&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;If you run into any problems or issues, please create a Github issue and we&#39;ll try our best to help.&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t see a feature in the list? Search our issue tracker if someone has already requested it and add a comment to it explaining your use-case, or open a new issue if not. We prioritize our roadmap based on user feedback, so we&#39;d love to hear from you.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.org/project/evadb&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/evadb.svg?sanitize=true&#34; alt=&#34;PyPI Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/georgia-tech-db/eva&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/georgia-tech-db/eva.svg?style=svg&#34; alt=&#34;CI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://evadb.readthedocs.io/en/stable/index.html&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/evadb/badge/?version=stable&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;EVA is the beneficiary of many &lt;a href=&#34;https://github.com/georgia-tech-db/eva/graphs/contributors&#34;&gt;contributors&lt;/a&gt;. All kinds of contributions to EVA are appreciated. To file a bug or to request a feature, please use &lt;a href=&#34;https://github.com/georgia-tech-db/eva/issues&#34;&gt;GitHub issues&lt;/a&gt;. &lt;a href=&#34;https://github.com/georgia-tech-db/eva/pulls&#34;&gt;Pull requests&lt;/a&gt; are welcome.&lt;/p&gt; &#xA;&lt;p&gt;For more information, see our &lt;a href=&#34;https://evadb.readthedocs.io/en/stable/source/contribute/index.html&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2018-present &lt;a href=&#34;http://db.cc.gatech.edu/&#34;&gt;Georgia Tech Database Group&lt;/a&gt;. Licensed under &lt;a href=&#34;https://raw.githubusercontent.com/georgia-tech-db/eva/master/LICENSE&#34;&gt;Apache License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>adieyal/sd-dynamic-prompts</title>
    <updated>2023-05-04T01:43:13Z</updated>
    <id>tag:github.com,2023-05-04:/adieyal/sd-dynamic-prompts</id>
    <link href="https://github.com/adieyal/sd-dynamic-prompts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A custom script for AUTOMATIC1111/stable-diffusion-webui to implement a tiny template language for random prompt generation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stable Diffusion Dynamic Prompts extension&lt;/h1&gt; &#xA;&lt;p&gt;A custom extension for &lt;a href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui&#34;&gt;AUTOMATIC1111/stable-diffusion-webui&lt;/a&gt; that implements an expressive template language for random or combinatorial prompt generation along with features to support deep wildcard directory structures.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/docs/SYNTAX.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/icon-syntax.png&#34; valign=&#34;middle&#34; style=&#34;height:60px;margin-right:10px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/docs/tutorial.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/icon-tutorial.png&#34; valign=&#34;middle&#34; style=&#34;height:60px;margin-right:10px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/docs/CHANGELOG.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/icon-changelog.png&#34; valign=&#34;middle&#34; style=&#34;height:60px&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/extension.png&#34;&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#basic-usage&#34;&gt;Basic Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#online-resources&#34;&gt;Online resources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#compatible-scripts&#34;&gt;Compatible Scripts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#template-syntax&#34;&gt;Template syntax&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#fuzzy-globrecursive-wildcard-filedirectory-matching&#34;&gt;Fuzzy Glob/recursive wildcard file/directory matching&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#combinatorial-generation&#34;&gt;Combinatorial Generation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#combinatorial-batches&#34;&gt;Combinatorial Batches&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#increasing-the-maximum-number-of-generations&#34;&gt;Increasing the maximum number of generations&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#fixed-seed&#34;&gt;Fixed seed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#magic-prompt&#34;&gt;Magic Prompt&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#other-models&#34;&gt;Other models&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#im-feeling-lucky&#34;&gt;I&#39;m feeling lucky&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#attention-grabber&#34;&gt;Attention grabber&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#write-prompts-to-file&#34;&gt;Write prompts to file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#jinja2-templates&#34;&gt;Jinja2 templates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#wildcard_dir&#34;&gt;WILDCARD_DIR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#collections&#34;&gt;Collections&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#dynamic-prompts-and-random-seeds&#34;&gt;Dynamic Prompts and Random Seeds&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#without-dynamic-prompts-enabled&#34;&gt;Without Dynamic Prompts Enabled&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#with-dynamic-prompts-enabled-in-randomstandard-mode&#34;&gt;With Dynamic Prompts Enabled in Random/Standard Mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#variation-seeds-with-dynamic-prompts&#34;&gt;Variation Seeds with Dynamic Prompts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#combinatorial-mode-with-variation-strength--0&#34;&gt;Combinatorial Mode with Variation Strength &amp;gt; 0&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basic Usage&lt;/h2&gt; &#xA;&lt;p&gt;Using this script, the prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;A {house|apartment|lodge|cottage} in {summer|winter|autumn|spring} by {2$$artist1|artist2|artist3}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will produce any of the following prompts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;strong&gt;house&lt;/strong&gt; in &lt;strong&gt;summer&lt;/strong&gt; by &lt;strong&gt;artist1&lt;/strong&gt;, &lt;strong&gt;artist2&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;A &lt;strong&gt;lodge&lt;/strong&gt; in &lt;strong&gt;autumn&lt;/strong&gt; by &lt;strong&gt;artist3&lt;/strong&gt;, &lt;strong&gt;artist1&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;A &lt;strong&gt;cottage&lt;/strong&gt; in &lt;strong&gt;winter&lt;/strong&gt; by &lt;strong&gt;artist2&lt;/strong&gt;, &lt;strong&gt;artist3&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This is especially useful if you are searching for interesting combinations of artists and styles.&lt;/p&gt; &#xA;&lt;p&gt;You can also pick a random string from a file. Assuming you have the file seasons.txt in WILDCARD_DIR (see below), then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;__seasons__ is coming&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Might generate the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Winter is coming&lt;/li&gt; &#xA; &lt;li&gt;Spring is coming&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also use the same wildcard twice&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;I love __seasons__ better than __seasons__&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I love Winter better than Summer&lt;/li&gt; &#xA; &lt;li&gt;I love Spring better than Spring&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More complete documentation can be found &lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/docs/SYNTAX.md&#34;&gt;here&lt;/a&gt;.&lt;br&gt; Prefer a tutorial? &lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/docs/tutorial.md&#34;&gt;Click here&lt;/a&gt;&lt;br&gt; Need a wildcard library? We&#39;ve got you &lt;a href=&#34;https://github.com/adieyal/sd-dynamic-prompts#collections&#34;&gt;covered&lt;/a&gt;.&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Online resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìΩÔ∏è &lt;a href=&#34;https://www.youtube.com/watch?v=5wH7zioje4w&#34;&gt;ÏïÑÎ¨¥Í≤ÉÎèÑ ÏÉùÍ∞Å Ïïà ÌïòÍ≥† Í∑∏Î¶º ÎΩëÎäî Î∞©Î≤ï (stable diffusion Dynamic Prompts extension)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üìΩÔ∏è &lt;a href=&#34;https://www.youtube.com/watch?v=5wH7zioje4w&#34;&gt;Dynamic Prompt Tutorial: How to Create Multiple Art Variations with just 1 Prompt Stable Diffusion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üìΩÔ∏è &lt;a href=&#34;https://www.youtube.com/watch?v=5ZiL4iG0FJk&#34;&gt;Experiment with Prompts FAST in Stable Diffusion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/115t0pi/having_a_blast_with_controlnet_dynamic_prompts/&#34;&gt;Having a blast with ControlNet + Dynamic Prompts (Wildcards)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/10xqwjm/i_come_bearing_gifts_infinite_random_rpg/&#34;&gt;Infinite Random RPG Character Portraits with Dynamic Prompts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/106hxm1/256_unique_characters_created_with_dynamic/&#34;&gt;256 unique characters created with dynamic prompts &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/10m6b4a/use_chatgpt_to_create_powerful_and_useful/&#34;&gt;Use ChatGPT to create powerful and useful wildcards with the Dynamic Prompts extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/1080xyy/200_characteroutfit_designs_from_a_single_prompt/&#34;&gt;200 Character/outfit designs from a single prompt using Dynamic Prompts and Prompt Editing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/10jgmtk/dynamic_prompts_and_jinja2_templates_in_automatic/&#34;&gt;Dynamic Prompts and Jinja2 templates in Automatic 1111&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/10gkm1c/testing_dynamic_prompts_extension_to_mix_and/&#34;&gt;Testing Dynamic Prompts extension to mix and match elements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/ynztiz/how_to_turbocharge_your_prompts_using/&#34;&gt;How to Turbocharge your prompts using AUTOMATIC1111 WebUI dynamic prompts extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/StableDiffusion/comments/zacjhk/dynamic_prompts_for_automatic1111_is_so/&#34;&gt;Dynamic prompts for Automatic1111 is so incredibly powerful, these are all from the same prompt!&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The extension can be installed directly from within the &lt;strong&gt;Extensions&lt;/strong&gt; tab within the Webui &lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/installation.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also install it manually by running the following command from within the webui directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/adieyal/sd-dynamic-prompting/ extensions/dynamic-prompts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;In case of a syntax clash with another extension, Dynamic Prompts allows you to change the definition of variant start and variant end. By default these are set to &lt;code&gt;{&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt; respectively. , e.g. &lt;code&gt;{red|green|blue}&lt;/code&gt;. In the settings tab, you can change these two any string, e.g. &lt;code&gt;&amp;lt;red|green|blue&amp;gt;&lt;/code&gt; or even &lt;code&gt;::red|green|blue::&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/config_brackets.png&#34;&gt; &#xA;&lt;p&gt;By default, wildcards start with &lt;code&gt;__&lt;/code&gt;(double underscore) and end with &lt;code&gt;__&lt;/code&gt;. You can change this in the settings tab under wildcard wrap.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter an issue with Dynamic Prompts, follow these steps to resolve the problem:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Check that you have installed the latest version of both the Dynamic Prompts extension and library. To check the installed versions, open the &lt;strong&gt;Need Help? accordion&lt;/strong&gt; in the Dynamic Prompts section of txt2image. You can find the latest version number of the extension &lt;a href=&#34;https://github.com/adieyal/sd-dynamic-prompts/raw/main/docs/CHANGELOG.md&#34;&gt;here&lt;/a&gt; and the library &lt;a href=&#34;https://github.com/adieyal/dynamicprompts/raw/main/CHANGELOG.md?plain=1&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If the versions do not match, update the extension in the extensions tab and restart the webui. The extension should automatically update the library.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If the above step does not work, you might need to manually update the library using the following command:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python -m pip install -U dynamicprompts[attentiongrabber,magicprompt]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Restart the webui and check. If the webui uses a different python binary, find the correct path to the python binary and run:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;/path/to/python/binary/python -m pip install -U dynamicprompts[attentiongrabber,magicprompt]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;If the Wildcard UI does not show, it could be due to an outdated library version. Check for errors in the terminal and update the library as described in step 3.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you get an error message saying &#34;No values found for wildcard some/wildcard&#34;, ensure that the file wildcard.txt is in extensions/sd-dynamic-prompts/wildcards/some/. The full path is required, as relative paths are not currently supported.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If the issue persists, search for solutions in the &lt;a href=&#34;https://github.com/adieyal/sd-dynamic-prompts/issues?q=is%3Aissue&#34;&gt;issues section&lt;/a&gt; on Github and the &lt;a href=&#34;https://github.com/adieyal/sd-dynamic-prompts/discussions&#34;&gt;discussion forum&lt;/a&gt;. If you cannot find a solution, create a new issue and give it a descriptive name, such as &#34;Wildcard values are being ignored in prompt templates&#34;. Provide the necessary context, including the versions of the Dynamic Prompts extension and library, and mention the operating system or colab being used. If there is an error in the terminal, copy and paste the entire text or take a screenshot.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Finally, it is essential to test and apply any fixes we release. Your feedback is valuable, as an issue that works in our environment may not work in yours.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Compatible Scripts&lt;/h2&gt; &#xA;&lt;p&gt;Dynamic Prompts works particularly well with X/Y Plot - setting Dynamic Prompts to &lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/#combinatorial-generation&#34;&gt;combinatorial mode&lt;/a&gt; while using X/Y Plot, lets you exhaustively test prompt and paramter variations simultaneously.&lt;/p&gt; &#xA;&lt;h2&gt;Template syntax&lt;/h2&gt; &#xA;&lt;p&gt;Documentation can be found &lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/docs/SYNTAX.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fuzzy Glob/recursive wildcard file/directory matching&lt;/h3&gt; &#xA;&lt;p&gt;In addition to standard wildcard tokens such as &lt;code&gt;__times__&lt;/code&gt; -&amp;gt; &lt;code&gt;times.txt&lt;/code&gt;, you can also use globbing to match against multiple files at once. For instance:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;__colors*__&lt;/code&gt; will match any of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WILDCARD_DIR/colors.txt&lt;/li&gt; &#xA; &lt;li&gt;WILDCARD_DIR/colors1.txt&lt;/li&gt; &#xA; &lt;li&gt;WILDCARD_DIR/nested/folder/colors1.txt&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;__light/**/*__&lt;/code&gt; will match:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WILDCARD_DIR/nested/folder/light/a.txt&lt;/li&gt; &#xA; &lt;li&gt;WILDCARD_DIR/nested/folder/light/b.txt&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;but won&#39;t match&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WILDCARD_DIR/nested/folder/dark/a.txt&lt;/li&gt; &#xA; &lt;li&gt;WILDCARD_DIR/a.txt&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also used character ranges &lt;code&gt;[0-9]&lt;/code&gt; and &lt;code&gt;[a-z]&lt;/code&gt; and single wildcard characters &lt;code&gt;?&lt;/code&gt;. For more examples see &lt;a href=&#34;http://pymotw.com/2/glob/&#34;&gt;this article&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Combinatorial Generation&lt;/h2&gt; &#xA;&lt;p&gt;Instead of generating random prompts from a template, combinatorial generation produced every possible prompt from the given string. For example: &lt;code&gt;I {love|hate} {New York|Chicago} in {June|July|August}&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;will produce:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I love New York in June&lt;/li&gt; &#xA; &lt;li&gt;I love New York in July&lt;/li&gt; &#xA; &lt;li&gt;I love New York in August&lt;/li&gt; &#xA; &lt;li&gt;I love Chicago in June&lt;/li&gt; &#xA; &lt;li&gt;I love Chicago in July&lt;/li&gt; &#xA; &lt;li&gt;I love Chicago in August&lt;/li&gt; &#xA; &lt;li&gt;I hate New York in June&lt;/li&gt; &#xA; &lt;li&gt;I hate New York in July&lt;/li&gt; &#xA; &lt;li&gt;I hate New York in August&lt;/li&gt; &#xA; &lt;li&gt;I hate Chicago in June&lt;/li&gt; &#xA; &lt;li&gt;I hate Chicago in July&lt;/li&gt; &#xA; &lt;li&gt;I hate Chicago in August&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If a &lt;code&gt;__wildcard__&lt;/code&gt; is provided, then a new prompt will be produced for every value in the wildcard file. For example: &lt;code&gt;My favourite season is __seasons__&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;will produce:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;My favourite season is Summer&lt;/li&gt; &#xA; &lt;li&gt;My favourite season is August&lt;/li&gt; &#xA; &lt;li&gt;My favourite season is Winter&lt;/li&gt; &#xA; &lt;li&gt;My favourite season is Sprint&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/combinatorial_generation.png&#34;&gt; &#xA;&lt;p&gt;You also arbitrarily nest combinations inside wildcards and wildcards in combinations.&lt;/p&gt; &#xA;&lt;p&gt;Combinatorial generation can be useful if you want to create an image for every artist in a file. It can be enabled by checking the &lt;strong&gt;Combinatorial generation&lt;/strong&gt; checkbox in the ui. In order to prevent accidentially producing thousands of images, you can limit the total number of prompts generated using the &lt;strong&gt;Max Generations&lt;/strong&gt; slider. A value of 0 (the default) will not set any limit.&lt;/p&gt; &#xA;&lt;h3&gt;Combinatorial Batches&lt;/h3&gt; &#xA;&lt;p&gt;The combinatorial batches slider lets you repeat the same set of prompts a number of times with different seeds. The default number of batches is 1.&lt;/p&gt; &#xA;&lt;h3&gt;Increasing the maximum number of generations&lt;/h3&gt; &#xA;&lt;p&gt;By default, the &lt;strong&gt;Batch count&lt;/strong&gt; silder of automatic1111 has a maximum value of 100. This can limit the maximum number of generations when using combinatorial generation. You can change the maximum value of this slider by editing ui-config.json and change:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;txt2img/Batch count/maximum&#34;: 100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to something larger like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;txt2img/Batch count/maximum&#34;: 1000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Fixed seed&lt;/h2&gt; &#xA;&lt;p&gt;Select this if you want to use the same seed for every generated image. If there are no wildcards then all the images will be identical. It is useful if you want to test the effect of a particular modifier. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;A beautiful day at the beach __medium/photography/filmtypes__&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That way you can isolate the effect of each film type on a particular scene. Here are some of the results: &lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/filmtypes.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Magic Prompt&lt;/h2&gt; &#xA;&lt;p&gt;Use one of a number of prompt generation models to spice up your prompt.&lt;/p&gt; &#xA;&lt;p&gt;Using &lt;a href=&#34;https://huggingface.co/Gustavosta/MagicPrompt-Stable-Diffusion&#34;&gt;Gustavosta&lt;/a&gt;&#39;s MagicPrompt model, Trained on 80,000 prompts from &lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/lexica.art&#34;&gt;Lexica.art&lt;/a&gt;, it can help give you interesting new prompts on a given subject. Here are some automatically generated variations for &#34;dogs playing football&#34;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;dogs playing football, in the streets of a japanese town at night, with people watching in wonder, in the style of studio ghibli and makoto shinkai, highly detailed digital art, trending on artstation&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;dogs playing football, in the background is a nuclear explosion. photorealism. hq. hyper. realistic. 4 k. award winning.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;dogs playing football, in the background is a nuclear explosion. photorealistic. realism. 4 k wideshot. cinematic. unreal engine. artgerm. marc simonetti. jc leyendecker&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This is compatible with the wildcard syntax described above.&lt;/p&gt; &#xA;&lt;h3&gt;Other models&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/daspartho/prompt-extend&#34;&gt;daspartho/prompt-extend (~500mb)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/succinctly/text2image-prompt-generator&#34;&gt;succinctly/text2image-prompt-generator (~600mb)&lt;/a&gt; - Trained on Midjourney prompts&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/microsoft/Promptist&#34;&gt;microsoft/Promptist (~500mb)&lt;/a&gt; - Read the paper &lt;a href=&#34;https://arxiv.org/abs/2212.09611&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/AUTOMATIC/promptgen-lexart&#34;&gt;AUTOMATIC/promptgen-lexart (~300mb)&lt;/a&gt; - Finetuned using 134,819 prompts from lexica.art&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/AUTOMATIC/promptgen-majinai-safe&#34;&gt;AUTOMATIC/promptgen-majinai-safe (~300mb)&lt;/a&gt; - 1,654 prompts from majinai.art&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/AUTOMATIC/promptgen-majinai-unsafe&#34;&gt;AUTOMATIC/promptgen-majinai-unsafe (~300mb)&lt;/a&gt; - 825 prompts from majinai.art (NSFW)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/Gustavosta/MagicPrompt-Dalle&#34;&gt;Gustavosta/MagicPrompt-Dalle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/kmewhort/stable-diffusion-prompt-bolster&#34;&gt;kmewhort/stable-diffusion-prompt-bolster (~500mb)&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/Ar4ikov/gpt2-650k-stable-diffusion-prompt-generator&#34;&gt;Ar4ikov/gpt2-650k-stable-diffusion-prompt-generator (~500mb)&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/Ar4ikov/gpt2-medium-650k-stable-diffusion-prompt-generator&#34;&gt;Ar4ikov/gpt2-medium-650k-stable-diffusion-prompt-generator (~1.4gb)&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/crumb/bloom-560m-RLHF-SD2-prompter-aesthetic&#34;&gt;crumb/bloom-560m-RLHF-SD2-prompter-aesthetic (~1.1gb)&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/Meli/GPT2-Prompt&#34;&gt;Meli/GPT2-Prompt (~500mb)&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/DrishtiSharma/StableDiffusion-Prompt-Generator-GPT-Neo-125M&#34;&gt;DrishtiSharma/StableDiffusion-Prompt-Generator-GPT-Neo-125M (~550mb)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The first time you use a model, it is downloaded. It is approximately 500mb and so will take some time depending on how fast your connection is. It will also take a few seconds on first activation as the model is loaded into memory. Note, if you&#39;re low in VRAM, you might get a Cuda error. My GPU uses less than 8GB but YMMV.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/magic_prompt.png&#34;&gt; &#xA;&lt;p&gt;You can control the maximum prompt length with the &lt;strong&gt;Max magic prompt length&lt;/strong&gt; slider. &lt;strong&gt;Magic prompt creativity&lt;/strong&gt; can adjust the generated prompt but you will need to experiment with this setting.&lt;/p&gt; &#xA;&lt;p&gt;Use the &lt;strong&gt;Magic prompt blocklist regex&lt;/strong&gt; to filter out keywords. For example, if you want to avoid prompts containing Greg Rutkowski, add his name to this field.&lt;/p&gt; &#xA;&lt;p&gt;If you are generating many prompts using Magic Prompt, then increasing the &lt;strong&gt;Magic Prompt batch size&lt;/strong&gt; can improve significantly improve prompt generation speed. This may only be noticeable if you are not generating images as well since image generation is much slower than prompt generation.&lt;/p&gt; &#xA;&lt;h2&gt;I&#39;m feeling lucky&lt;/h2&gt; &#xA;&lt;p&gt;Use the &lt;a href=&#34;https://lexica.art&#34;&gt;lexica.art&lt;/a&gt; API to create random prompts. Useful if you&#39;re looking for inspiration, or are simply too lazy to think of your own prompts. When this option is selected, the prompt in the main prompt box is used as a search string. For example, prompt &#34;Mech warrior&#34; might return:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A large robot stone statue in the middle of a forest by Greg Rutkowski, Sung Choi, Mitchell Mohrhauser, Maciej Kuciara, Johnson Ting, Maxim Verehin, Peter Konig, final fantasy , 8k photorealistic, cinematic lighting, HD, high details, atmospheric,&lt;/li&gt; &#xA; &lt;li&gt;a beautiful portrait painting of a ( ( ( cyberpunk ) ) ) armor by simon stalenhag and pascal blanche and alphonse mucha and nekro. in style of digital art. colorful comic, film noirs, symmetry, brush stroke, vibrating colors, hyper detailed. octane render. trending on artstation&lt;/li&gt; &#xA; &lt;li&gt;symmetry!! portrait of a robot astronaut, floral! horizon zero dawn machine, intricate, elegant, highly detailed, digital painting, artstation, concept art, smooth, sharp focus, illustration, art by artgerm and greg rutkowski and alphonse mucha, 8 k&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/feeling-lucky.png&#34;&gt; &#xA;&lt;p&gt;Leaving the prompt box blank returns a list of completely randomly chosen prompts.&lt;/p&gt; &#xA;&lt;h2&gt;Attention grabber&lt;/h2&gt; &#xA;&lt;p&gt;This option randomly selects a keyword in your prompt and adds a random amount of emphasis. Below is an example of how this affects the prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;a portrait an anthropomorphic panda mage casting a spell, wearing mage robes, landscape in background, cute, dnd character art portrait, by jason felix and peter mohrbacher, cinematic lighting&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/emphasis.png&#34;&gt; &#xA;&lt;p&gt;Tick the &lt;strong&gt;Fixed seed&lt;/strong&gt; checkbox under &lt;strong&gt;Advanced options&lt;/strong&gt; to see how emphasis changes your image without changing seed.&lt;/p&gt; &#xA;&lt;h2&gt;Write prompts to file&lt;/h2&gt; &#xA;&lt;p&gt;Check the write prompts to file checkbox in order to create a file with all generated prompts. The generated file is a slugified version of the prompt and can be found in the same directory as the generated images, e.g. outputs/txt2img-images &lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/write_prompts.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Jinja2 templates&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://jinja.palletsprojects.com/en/3.1.x/templates/&#34;&gt;Jinja2 templates&lt;/a&gt; is an experimental feature that enables you to define prompts imperatively. This is an advanced feature and is only recommended for users who are comfortable writing scripts.&lt;/p&gt; &#xA;&lt;p&gt;To enable, open the advanced accordion and select &lt;strong&gt;Enable Jinja2 templates&lt;/strong&gt;. &lt;img src=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/images/jinja_templates.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can read about them in more detail &lt;a href=&#34;https://raw.githubusercontent.com/adieyal/sd-dynamic-prompts/main/jinja2.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;WILDCARD_DIR&lt;/h2&gt; &#xA;&lt;p&gt;The extension looks for wildcard files in WILDCARD_DIR. The default location is /path/to/stable-diffusion-webui/extensions/sd-dynamic-prompts/wildcards. It can also be manually defined in the main webui config.json under wildcard_dir. When in doubt, the help text for the extension in the webui lists the full path to WILDCARD_DIR&lt;/p&gt; &#xA;&lt;h2&gt;Collections&lt;/h2&gt; &#xA;&lt;p&gt;The collections directory contains modifier libraries that you can use as is or to bootstrap your own. To get started, either use the Wildcard Manager tab to copy a one or more collections to your wildcards folder, or you can manually copy the files across. Three collections are bundled with the dynamic prompts extension.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adieyal/sd-dynamic-prompts/tree/main/collections/jumbo&#34;&gt;jumbo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adieyal/sd-dynamic-prompts/tree/main/collections/parrotzone&#34;&gt;parrotzone&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adieyal/sd-dynamic-prompts/tree/main/collections/devilkkw&#34;&gt;devilkkw&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Jumbo is a very large collection of wildcards across many categories including aesthetics, appearance, artists, medium, style, and time. It is a work in progress, but aims to provide good coverage of various modifier categories.&lt;/p&gt; &#xA;&lt;p&gt;Parrotzone is a far smaller and more manageable collection sourced from &lt;a href=&#34;https://proximacentaurib.notion.site/e28a4f8d97724f14a784a538b8589e7d?v=42948fd8f45c4d47a0edfc4b78937474&#34;&gt;https://proximacentaurib.notion.site/e28a4f8d97724f14a784a538b8589e7d?v=42948fd8f45c4d47a0edfc4b78937474&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Devilkkw focuses more on character building, clothes, gestures, food, etc&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using a Unix/Linux O/S, you can easily create a symlink to the relevant collection rather than copying it across if you don&#39;t plan to alter it. E.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ln -sr collections/parrotzone wildcards/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also download additional extensions by running &lt;code&gt;python _tools/download_collections.py&lt;/code&gt; from within the extension&#39;s root directory, i.e. &lt;code&gt;extensions/sd-dynamic-prompts/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dynamic Prompts and Random Seeds&lt;/h2&gt; &#xA;&lt;p&gt;Random seeds play an important role in controlling the randomness of the generated outputs. Let&#39;s discuss how Dynamic Prompts works with random seeds in different scenarios.&lt;/p&gt; &#xA;&lt;h3&gt;Without Dynamic Prompts Enabled&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Seed set to -1: A random seed is selected, the first image is generated using that seed, the next image is generated with that seed + 1, and so on.&lt;/li&gt; &#xA; &lt;li&gt;Seed set to a number &amp;gt; -1: The process is the same as above, but the seed used is the one chosen.&lt;/li&gt; &#xA; &lt;li&gt;Variation seed set but variation strength is set to zero: The situation is the same as the previous two scenarios.&lt;/li&gt; &#xA; &lt;li&gt;Variation seed set to a number &amp;gt; 0: All images are created using the same seed (either randomly chosen or set by the user). The variation seed is either chosen at random (if set to -1) or the value selected by the user. The first image is generated using the variation seed, the next with the variation seed + 1, and so on.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;With Dynamic Prompts Enabled in Random/Standard Mode&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Seed set to -1: The situation is the same as the first item above, but the prompt is chosen using the same seed (if using the random prompt generator).&lt;/li&gt; &#xA; &lt;li&gt;Seed set to a number &amp;gt; -1: The situation is the same as the second item above, except that a random prompt is generated using the given seed (if using the prompt generator).&lt;/li&gt; &#xA; &lt;li&gt;Fixed seed checkbox checked: Instead of incrementing the seed, the same seed is used for all images and prompts, i.e., you generate the same image (not very useful).&lt;/li&gt; &#xA; &lt;li&gt;Fixed seed and unlink seed from prompt checkboxes checked: A random seed is used for the prompt, and the same seed is used for images. This is useful if you want to test how different prompts affect the same image.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Variation Seeds with Dynamic Prompts&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Variation strength set to 0: Variations are ignored.&lt;/li&gt; &#xA; &lt;li&gt;Variation set to a number &amp;gt; 0: A variation seed is assigned to every image, incrementing by one each time. However, only 1 prompt is generated since you are looking for variations of the same image.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Combinatorial Mode with Variation Strength &amp;gt; 0&lt;/h3&gt; &#xA;&lt;p&gt;In this case, it only generates the first image for you, which is probably not what you want. To get the desired results, you might need to adjust the settings or use a different mode.&lt;/p&gt;</summary>
  </entry>
</feed>