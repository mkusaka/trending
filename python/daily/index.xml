<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-17T01:35:42Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>WeChatAPIs/WeChatMsgHistory_real</title>
    <updated>2024-04-17T01:35:42Z</updated>
    <id>tag:github.com,2024-04-17:/WeChatAPIs/WeChatMsgHistory_real</id>
    <link href="https://github.com/WeChatAPIs/WeChatMsgHistory_real" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Real-time Chat-重现微信群组和个人聊天记录查询项目，本项目为开发者和研究者提供一种深入查看微信聊天内容的解决方案，允许用户在特定条件下获取特定群组或私聊的聊天记录，并通过我们提供的API进行控制&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;微信Real-time Chat 🤖&lt;/h1&gt; &#xA;&lt;p&gt;Real-time Chat项目为开发者和研究者提供一种深入查看聊天内容的解决方案，允许用户在特定条件下获取特定群组或私聊的聊天记录，并通过我们提供的API进行控制。&lt;/p&gt; &#xA;&lt;h3&gt;核心特性：&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;聊天记录查询&lt;/strong&gt; - 在微信环境下，重现群组或个人聊天的内容&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;API访问&lt;/strong&gt; - 我们提供灵活且易用的RESTful API接口以方便开发者和研究者进行深度利用。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;可扩展性设计&lt;/strong&gt; ： 未来可扩展的能力包括但不仅限于： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;允许未付费用户访问付费群的聊天记录以体验系统功能&lt;/li&gt; &#xA;   &lt;li&gt;利用AI技术对聊天内容进行分析以追踪热门话题和动态。&lt;/li&gt; &#xA;   &lt;li&gt;轻松将聊天内容上报至云端。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;隐私政策及个人隐私：&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;重视用户隐私，遵守相关的隐私法律和规定，不公开任何个人或敏感信息，一切聊天记录查询分析与展示都将在满足所有相关规定的前提下进行&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;用途限制：&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本系统的初始设计意图是为了合法查询和研究工作，请遵守法律规定，严禁用于任何非法用途。每行代码的创建都是为了推动聊天内容研究的发展及对社区的贡献。&lt;/li&gt; &#xA; &lt;li&gt;项目的使用只供个人开发，不可泄露任何信息，高度尊重每一位用户的隐私及源于此的数据。&lt;/li&gt; &#xA; &lt;li&gt;设计的核心是面向开发者友好的API接口和可扩展性，在秘密保护用户隐私及数据的同时，依然保证易用性和便利性&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;安装 🔧&lt;/h2&gt; &#xA;&lt;h3&gt;微信启动&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wechatsdk.com&#34;&gt;API启动器来源&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;启动程序&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;打开cmd，并进入 &lt;code&gt;WechatMsgHistory_real&lt;/code&gt; 目录，运行 &lt;code&gt;python -m venv venv&lt;/code&gt; 并开启虚拟环境 &lt;code&gt;venv/Scripts/activate&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;运行 &lt;code&gt;pip install -r requirements.txt&lt;/code&gt; 安装所有依赖。&lt;/li&gt; &#xA; &lt;li&gt;修改内容 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;修改 &lt;code&gt;server/ChatHistory.py&lt;/code&gt; 中的 &lt;code&gt;baseUrl&lt;/code&gt; 字段为你的启动器的地址。&lt;/li&gt; &#xA;   &lt;li&gt;修改 &lt;code&gt;server/HttpServer.py&lt;/code&gt; 中的 &lt;code&gt;accessKey&lt;/code&gt; 为你的接口秘钥。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;运行 &lt;code&gt;python httpMain.py&lt;/code&gt; 启动服务。&lt;/li&gt; &#xA; &lt;li&gt;请求API&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl --location --request POST &#34;http://127.0.0.1:18000/historyMsgData&#34; ^&#xA;--header &#34;Content-Type: application/json&#34; ^&#xA;--data-raw &#34;{\&#34;userName\&#34;:\&#34;xxxxx@chatroom\&#34;,\&#34;accessKey\&#34;:\&#34;WeChatAPIs/wechatSDK\&#34;}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;依赖 📦&lt;/h2&gt; &#xA;&lt;p&gt;项目依赖于 &lt;a href=&#34;https://wechatsdk.com&#34;&gt;wechatAPI&lt;/a&gt;。请确保安装所有必要的依赖。&lt;/p&gt; &#xA;&lt;h2&gt;如何贡献 🤝&lt;/h2&gt; &#xA;&lt;p&gt;欢迎通过Pull Requests来贡献代码。请确保您的代码符合项目的编码标准并通过所有测试。&lt;/p&gt; &#xA;&lt;h2&gt;效果展示 🖼️&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WeChatAPIs/WeChatMsgHistory_real/main/img%2Fimg.png&#34; alt=&#34;img.png&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/WeChatAPIs/WeChatMsgHistory_real/main/img%2Fimg_2.png&#34; alt=&#34;img.png&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/WeChatAPIs/WeChatMsgHistory_real/main/img%2Fimg_1.png&#34; alt=&#34;img.png&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>intuitem/ciso-assistant-community</title>
    <updated>2024-04-17T01:35:42Z</updated>
    <id>tag:github.com,2024-04-17:/intuitem/ciso-assistant-community</id>
    <link href="https://github.com/intuitem/ciso-assistant-community" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CISO Assistant is an open-source one-stop-shop for GRC - Risk and Audit Management supporting multiple standards: NIST CSF, ISO 27001, NIS2, SOC2, PCI DSS, CMMC, PSPF, GDPR, HIPAA, Essential Eight, DFS-500, DORA, NIST AI RMF, CyFun, AirCyber and more&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://intuitem.com&#34;&gt;intuitem.com&lt;/a&gt; · &lt;a href=&#34;https://intuitem.com/trial&#34;&gt;SaaS Free trial&lt;/a&gt; · &lt;a href=&#34;https://intuitem.gitbook.io/ciso-assistant&#34; target=&#34;_blank&#34;&gt;Docs&lt;/a&gt; · &lt;a href=&#34;https://discord.gg/qvkaMdQ8da&#34;&gt;Discord&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/intuitem/ciso-assistant-community/main/#supported-frameworks-&#34;&gt;Frameworks&lt;/a&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/intuitem/ciso-assistant-community/main/gh_banner.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/intuitem/ciso-assistant-community/actions/workflows/backend-coverage.yaml&#34;&gt;&lt;img src=&#34;https://github.com/intuitem/ciso-assistant-community/actions/workflows/backend-coverage.yaml/badge.svg?sanitize=true&#34; alt=&#34;Backend code coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/intuitem/ciso-assistant-community/actions/workflows/backend-api-tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/intuitem/ciso-assistant-community/actions/workflows/backend-api-tests.yml/badge.svg?sanitize=true&#34; alt=&#34;API Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/intuitem/ciso-assistant-community/actions/workflows/functional-tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/intuitem/ciso-assistant-community/actions/workflows/functional-tests.yml/badge.svg?branch=main&#34; alt=&#34;Functional Tests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;CISO Assistant brings a different take to &lt;strong&gt;GRC&lt;/strong&gt; and Cyber Security Posture Management:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;by explicitly decoupling compliance from cybersecurity controls implementation&lt;/li&gt; &#xA; &lt;li&gt;has built-in standards, security controls and threats&lt;/li&gt; &#xA; &lt;li&gt;risk assessment and remediation plan follow-up&lt;/li&gt; &#xA; &lt;li&gt;allows to manage a catalog for security controls and threats&lt;/li&gt; &#xA; &lt;li&gt;you can bring your own framework as well using a simple syntax&lt;/li&gt; &#xA; &lt;li&gt;manage audit, evidences collection and report generation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Our vision is to provide a one stop shop for cyber security posture management and cover the layers of &lt;strong&gt;GRC&lt;/strong&gt; (Governance, Risk and Compliance). As practionners interacting with multiple cybersecurity and IT professionals, we have struggled with fragmentation and lack of efficient tooling. We keep improving CISO Assistant with anything that could bring clarity and productivity to cybersecurity teams and reduce the effort of research, audit management and paperwork.&lt;/p&gt; &#xA;&lt;p&gt;CyberSecurity teams need to use GRC as a foundation to structure their program and implement the right tools and processes to mitigate the risks, and leave the rest to CISO Assistant 🐙&lt;/p&gt; &#xA;&lt;p&gt;The vision of the tool is based on this model:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/intuitem/ciso-assistant-community/main/posture.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The full details are available in the &lt;a href=&#34;https://raw.githubusercontent.com/intuitem/ciso-assistant-community/main/documentation/architecture/data-model.md&#34;&gt;data model&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The decoupling allows you to save a considerable amount of time:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;reuse previous assessments,&lt;/li&gt; &#xA; &lt;li&gt;assess a scope against multiple frameworks at the same time,&lt;/li&gt; &#xA; &lt;li&gt;leave the reporting formatting and sanity check to CISO assistant and focus on your remediations&lt;/li&gt; &#xA; &lt;li&gt;balance controls implementation and compliance follow-up&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start 🚀&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] The easiest way to get started is through the &lt;a href=&#34;https://intuitem.com/trial&#34;&gt;free trial of cloud instance available here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Alternatively, once you have &lt;em&gt;Docker&lt;/em&gt; and &lt;em&gt;Docker-compose&lt;/em&gt; installed, on your workstation or server, &lt;em&gt;clone&lt;/em&gt; the repo and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./docker-compose.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] The docker-compose script uses prebuilt Docker images supporting most of the standard hardware architecture. If you&#39;re using &lt;strong&gt;Windows&lt;/strong&gt;, Make sure to have &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/wsl/install&#34;&gt;WSL&lt;/a&gt; installed and trigger the script within a WSL command line. It will feed Docker Desktop on your behalf.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] If you&#39;re getting warnings or errors about image&#39;s platform not matching host platform, raise an issue with the details and we&#39;ll add it shortly after. You can also use &lt;code&gt;docker-compose-build.sh&lt;/code&gt; instead (see below) to build for your specific architecture.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;End-user Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Check out the online documentation on &lt;a href=&#34;https://intuitem.gitbook.io/ciso-assistant&#34;&gt;https://intuitem.gitbook.io/ciso-assistant&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported frameworks 🐙&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;ISO 27001:2022 🌐&lt;/li&gt; &#xA; &lt;li&gt;NIST Cyber Security Framework (CSF) v1.1 🇺🇸&lt;/li&gt; &#xA; &lt;li&gt;NIST Cyber Security Framework (CSF) v2.0 🇺🇸&lt;/li&gt; &#xA; &lt;li&gt;NIS2 🇪🇺&lt;/li&gt; &#xA; &lt;li&gt;SOC2 🇺🇸&lt;/li&gt; &#xA; &lt;li&gt;PCI DSS 4.0 💳&lt;/li&gt; &#xA; &lt;li&gt;CMMC v2 🇺🇸&lt;/li&gt; &#xA; &lt;li&gt;PSPF 🇦🇺&lt;/li&gt; &#xA; &lt;li&gt;GDPR checklist from GDPR.EU 🇪🇺&lt;/li&gt; &#xA; &lt;li&gt;Essential Eight 🇦🇺&lt;/li&gt; &#xA; &lt;li&gt;NYDFS 500 with 2023-11 amendments 🇺🇸&lt;/li&gt; &#xA; &lt;li&gt;DORA 🇪🇺&lt;/li&gt; &#xA; &lt;li&gt;NIST AI Risk Management Framework 🇺🇸&lt;/li&gt; &#xA; &lt;li&gt;NIST SP 800-53 rev5 🇺🇸&lt;/li&gt; &#xA; &lt;li&gt;France LPM/OIV rules 🇫🇷&lt;/li&gt; &#xA; &lt;li&gt;CCB CyberFundamentals Framework 🇧🇪&lt;/li&gt; &#xA; &lt;li&gt;NIST SP-800-66 (HIPAA) 🏥&lt;/li&gt; &#xA; &lt;li&gt;HDS/HDH 🇫🇷&lt;/li&gt; &#xA; &lt;li&gt;OWASP Application Security Verification Standard (ASVS) 🐝&lt;/li&gt; &#xA; &lt;li&gt;RGS v2.0 🇫🇷&lt;/li&gt; &#xA; &lt;li&gt;AirCyber ✈️&lt;/li&gt; &#xA; &lt;li&gt;Cyber Resilience Act (CRA) 🇪🇺&lt;/li&gt; &#xA; &lt;li&gt;TIBER-EU 🇪🇺&lt;/li&gt; &#xA; &lt;li&gt;NIST Privacy Framework 🇺🇸&lt;/li&gt; &#xA; &lt;li&gt;Tisax 🚘&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Checkout the &lt;a href=&#34;https://raw.githubusercontent.com/intuitem/ciso-assistant-community/main/backend/library/libraries/&#34;&gt;library&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/intuitem/ciso-assistant-community/main/tools/&#34;&gt;tools&lt;/a&gt; for the Domain Specific Language used and how you can define your own.&lt;/p&gt; &#xA;&lt;h3&gt;Coming soon&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ANSSI hygiene guide&lt;/li&gt; &#xA; &lt;li&gt;CIS&lt;/li&gt; &#xA; &lt;li&gt;CCM&lt;/li&gt; &#xA; &lt;li&gt;CCPA&lt;/li&gt; &#xA; &lt;li&gt;AI Act&lt;/li&gt; &#xA; &lt;li&gt;Part-IS&lt;/li&gt; &#xA; &lt;li&gt;SecNumCloud&lt;/li&gt; &#xA; &lt;li&gt;SOX&lt;/li&gt; &#xA; &lt;li&gt;MASVS&lt;/li&gt; &#xA; &lt;li&gt;and much more: just ask on &lt;a href=&#34;https://discord.gg/qvkaMdQ8da&#34;&gt;Discord&lt;/a&gt;. If it&#39;s an open standard, we&#39;ll do it for you, &lt;em&gt;free of charge&lt;/em&gt; 😉&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Add your own framework&lt;/h3&gt; &#xA;&lt;p&gt;Have a look in the tools directory and its dedicated readme. The convert_framework.py script will help you create your library from a simple Excel file. A typical framework can be ingested in a few hours.&lt;/p&gt; &#xA;&lt;p&gt;You will also find some specific converters in the tools directory (e.g. for CIS or CCM Controls).&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Join our &lt;a href=&#34;https://discord.gg/qvkaMdQ8da&#34;&gt;open Discord community&lt;/a&gt; to interact with the team and other GRC experts.&lt;/p&gt; &#xA;&lt;h2&gt;Testing the cloud version&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The fastest and easiest way to get started is through the &lt;a href=&#34;https://intuitem.com/trial&#34;&gt;free trial of cloud instance available here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Testing locally 🚀&lt;/h2&gt; &#xA;&lt;p&gt;To run CISO Assistant locally in a straightforward way, you can use Docker compose.&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;Update docker&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Make sure you have a recent version of docker (&amp;gt;= 25.0).&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone git@github.com:intuitem/ciso-assistant-community.git&#xA;cd ciso-assistant-community&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Launch docker-compose script for prebuilt images:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./docker-compose.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Alternatively&lt;/em&gt;, you can use this variant to build the docker images for your specific architecture:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./docker-compose-build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When asked for, enter your email and password for your superuser.&lt;/p&gt; &#xA;&lt;p&gt;You can then reach CISO Assistant using your web brower at &lt;a href=&#34;https://localhost:8443/&#34;&gt;https://localhost:8443/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For the following executions, use &#34;docker compose up&#34; directly.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] If you want a fresh install, simply delete the &lt;code&gt;db&lt;/code&gt; directory, (default: backend/db) where the database is stored.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Setting up CISO Assistant for development&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.11+&lt;/li&gt; &#xA; &lt;li&gt;pip 20.3+&lt;/li&gt; &#xA; &lt;li&gt;node 18+&lt;/li&gt; &#xA; &lt;li&gt;npm 10.2+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running the backend&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone git@github.com:intuitem/ciso-assistant-community.git&#xA;cd ciso-assistant-community&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Create a file in the parent folder (e.g. ../myvars) and store your environment variables within it by copying and modifying the following code and replace &lt;code&gt;&#34;&amp;lt;XXX&amp;gt;&#34;&lt;/code&gt; by your private values. Take care not to commit this file in your git repo.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Mandatory variables&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;All variables in the backend have handy default values.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Recommended variables&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export DJANGO_DEBUG=True&#xA;&#xA;# Default url is set to http://localhost:5173 but you can change it, e.g. to use https with a caddy proxy&#xA;export CISO_ASSISTANT_URL=https://localhost:8443&#xA;&#xA;# Setup a development mailer with Mailhog for example&#xA;export EMAIL_HOST_USER=&#39;&#39;&#xA;export EMAIL_HOST_PASSWORD=&#39;&#39;&#xA;export DEFAULT_FROM_EMAIL=ciso-assistant@ciso-assistantcloud.com&#xA;export EMAIL_HOST=localhost&#xA;export EMAIL_PORT=1025&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Other variables&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# CISO Assistant will use SQLite by default, but you can setup PostgreSQL by declaring these variables&#xA;export POSTGRES_NAME=ciso-assistant&#xA;export POSTGRES_USER=ciso-assistantuser&#xA;export POSTGRES_PASSWORD=&amp;lt;XXX&amp;gt;&#xA;export POSTGRES_PASSWORD_FILE=&amp;lt;XXX&amp;gt;  # alternative way to specify password&#xA;export DB_HOST=localhost&#xA;export DB_PORT=5432  # optional, default value is 5432&#xA;&#xA;# Add a second backup mailer&#xA;export EMAIL_HOST_RESCUE=&amp;lt;XXX&amp;gt;&#xA;export EMAIL_PORT_RESCUE=587&#xA;export EMAIL_HOST_USER_RESCUE=&amp;lt;XXX&amp;gt;&#xA;export EMAIL_HOST_PASSWORD_RESCUE=&amp;lt;XXX&amp;gt;&#xA;export EMAIL_USE_TLS_RESCUE=True&#xA;&#xA;# You can define the email of the first superuser, useful for automation. A mail is sent to the superuser for password initlization&#xA;export CISO_SUPERUSER_EMAIL=&amp;lt;XXX&amp;gt;&#xA;&#xA;# By default, Django secret key is generated randomly at each start of CISO Assistant. This is convenient for quick test,&#xA;# but not recommended for production, as it can break the sessions (see&#xA;# this [topic](https://stackoverflow.com/questions/15170637/effects-of-changing-djangos-secret-key) for more information).&#xA;# To set a fixed secret key, use the environment variable DJANGO_SECRET_KEY.&#xA;export DJANGO_SECRET_KEY=...&#xA;&#xA;# Logging configuration&#xA;export LOG_LEVEL=INFO # optional, default value is INFO. Available options: DEBUG, INFO, WARNING, ERROR, CRITICAL&#xA;export LOG_FORMAT=plain # optional, default value is plain. Available options: json, plain&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Choose the tool of your choice, either python-venv or virtualenv. For example:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Install python-venv&#xA;sudo apt install python-venv # or python3-venv&#xA;# Create the virtual environment venv&#xA;python -m venv venv # or python3 -m venv venv&#xA;# To enter inside the virtual environment&#xA;source venv/bin/activate&#xA;# If you want to exit the virtual environment once finished&#xA;deactivate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Install required dependencies.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;If you want to setup Postgres:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Launch one of these commands to enter in Postgres: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;psql as superadmin&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;sudo su postgres&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;psql&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create the database &#34;ciso-assistant&#34; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;create database ciso-assistant;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create user &#34;ciso-assistantuser&#34; and grant it access &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;create user ciso-assistantuser with password &#39;&amp;lt;POSTGRES_PASSWORD&amp;gt;&#39;;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;grant all privileges on database ciso-assistant to ciso-assistantuser;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Apply migrations.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python manage.py migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Create a Django superuser, that will be CISO Assistant administrator.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you have set a mailer and CISO_SUPERUSER_EMAIL variable, there&#39;s no need to create a Django superuser with createsuperuser, as it will be created automatically on first start. You should receive an email with a link to setup your password.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python manage.py createsuperuser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;8&#34;&gt; &#xA; &lt;li&gt;Run development server.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python manage.py runserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;9&#34;&gt; &#xA; &lt;li&gt;Configure the git hooks for generating the build name.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd .git/hooks&#xA;ln -fs ../../git_hooks/post-commit .&#xA;ln -fs ../../git_hooks/post-merge .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running the frontend&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;cd into the frontend directory&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd frontend&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Declare the PUBLIC_BACKEND_API_URL environment variable.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;EITHER&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;PUBLIC_BACKEND_API_URL=http://localhost:8000/api&#34; &amp;gt; .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OR&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export PUBLIC_BACKEND_API_URL=http://localhost:8000/api&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: for docker compose, or if you use a proxy like caddy, the ORIGIN variable has to be declared too (see &lt;a href=&#34;https://kit.svelte.dev/docs/configuration#csrf&#34;&gt;https://kit.svelte.dev/docs/configuration#csrf&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Install dependencies&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Start a development server (make sure that the django app is running)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Reach the frontend on &lt;a href=&#34;http://localhost:5173&#34;&gt;http://localhost:5173&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Safari will not properly work in this setup, as it requires https for secure cookies. The simplest solution is to use Chrome or Firefox. An alternative is to use a caddy proxy. This is the solution used in docker-compose, so you can use it as an example.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Managing migrations&lt;/h3&gt; &#xA;&lt;p&gt;The migrations are tracked by version control, &lt;a href=&#34;https://docs.djangoproject.com/en/4.2/topics/migrations/#version-control&#34;&gt;https://docs.djangoproject.com/en/4.2/topics/migrations/#version-control&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For the first version of the product, it is recommended to start from a clean migration.&lt;/p&gt; &#xA;&lt;p&gt;Note: to clean existing migrations, type:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;find . -path &#34;*/migrations/*.py&#34; -not -name &#34;__init__.py&#34; -delete&#xA;find . -path &#34;*/migrations/*.pyc&#34;  -delete&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After a change (or a clean), it is necessary to re-generate migration files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python manage.py makemigrations&#xA;python manage.py migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These migration files should be tracked by version control.&lt;/p&gt; &#xA;&lt;h3&gt;Test suite&lt;/h3&gt; &#xA;&lt;p&gt;To run API tests on the backend, simply type &#34;pytest&#34; in a shell in the backend folder.&lt;/p&gt; &#xA;&lt;p&gt;To run functional tests on the frontend, do the following actions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;in the frontend folder, launch the following command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;tests/e2e-tests.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The goal of the test harness is to prevent any regression, i.e. all the tests shall be successful, both for backend and frontend.&lt;/p&gt; &#xA;&lt;h2&gt;Built With 💜&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.djangoproject.com/&#34;&gt;Django&lt;/a&gt; - Python Web Development Framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kit.svelte.dev/&#34;&gt;SvelteKit&lt;/a&gt; - Frontend framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gunicorn.org/&#34;&gt;Gunicorn&lt;/a&gt; - Python WSGI HTTP Server for UNIX&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gitbook.com&#34;&gt;Gitbook&lt;/a&gt; - Documentation platform&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; - Open Source RDBMS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sqlite.org/index.html&#34;&gt;SQLite&lt;/a&gt; - Open Source RDBMS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; - Container Engine&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inlang.com/&#34;&gt;inlang&lt;/a&gt; - The ecosystem to globalize your software&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;Great care has been taken to follow security best practices. Please report any issue to &lt;a href=&#34;mailto:security@intuitem.com&#34;&gt;security@intuitem.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://choosealicense.com/licenses/agpl-3.0/&#34;&gt;AGPLv3&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tech-shrimp/WechatMoments</title>
    <updated>2024-04-17T01:35:42Z</updated>
    <id>tag:github.com,2024-04-17:/tech-shrimp/WechatMoments</id>
    <link href="https://github.com/tech-shrimp/WechatMoments" rel="alternate"></link>
    <summary type="html">&lt;p&gt;微信朋友圈导出工具-技术爬爬虾&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&#xA; &lt;center&gt;&#xA;  WechatMoments&#xA; &lt;/center&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;微信朋友圈导出工具&lt;/h1&gt; &#xA;&lt;h1&gt;一、项目介绍&lt;/h1&gt; &#xA;&lt;h2&gt;1. 项目简介&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tech-shrimp/WechatMoments&#34;&gt;WechatMoments&lt;/a&gt;是一款运行在Windows上的，备份导出朋友圈为html的工具&lt;/li&gt; &#xA; &lt;li&gt;作者：&lt;a href=&#34;https://space.bilibili.com/316183842&#34;&gt;技术爬爬虾&lt;/a&gt;（B站 抖音 Youtube同名）更多有趣实用项目请关注&lt;/li&gt; &#xA; &lt;li&gt;开源许可: Apache License&lt;/li&gt; &#xA; &lt;li&gt;分发，宣传，二次开发等请注明原作者&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2. 使用说明&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1qq421A7aF/&#34;&gt;视频演示-Bilibili&lt;/a&gt;&lt;/h3&gt; &lt;/li&gt; &#xA; &lt;li&gt;(1) 安装&lt;a href=&#34;https://pc.weixin.qq.com/&#34;&gt;Windows版微信&lt;/a&gt;，并且登陆&lt;/li&gt; &#xA; &lt;li&gt;(2) 在&lt;a href=&#34;https://github.com/tech-shrimp/WechatMoments/releases&#34;&gt;Releases&lt;/a&gt;下载压缩包wechat_moments.zip&lt;/li&gt; &#xA; &lt;li&gt;(3) 解压文件夹（路径不要包含中文）&lt;/li&gt; &#xA; &lt;li&gt;(4) 管理员身份运行wechat_moments.exe，并按提示操作&lt;/li&gt; &#xA; &lt;li&gt;(5) 如发生异常，重启微信，重启软件&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;二. 详细介绍&lt;/h1&gt; &#xA;&lt;h2&gt;1. 核心功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;导出微信朋友圈数据为HTML&lt;/li&gt; &#xA; &lt;li&gt;可以下载图片/视频离线查看，永久保存&lt;/li&gt; &#xA; &lt;li&gt;可以根据联系人，朋友圈时间进行过滤导出&lt;/li&gt; &#xA; &lt;li&gt;强依赖微信Windows客户端，只提供windows版本&lt;/li&gt; &#xA; &lt;li&gt;只测试过python3.11+Win10/Win11，其他环境随缘&lt;/li&gt; &#xA; &lt;li&gt;软件只能导出在电脑微信&lt;strong&gt;浏览过&lt;/strong&gt;的朋友圈记录&lt;/li&gt; &#xA; &lt;li&gt;浏览朋友圈方法，参考&lt;a href=&#34;https://raw.githubusercontent.com/tech-shrimp/WechatMoments/main/doc/manual_guide.md&#34;&gt;电脑微信浏览朋友圈&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tech-shrimp/WechatMoments/main/doc/pic/%E4%B8%BB%E7%95%8C%E9%9D%A2.png&#34; alt=&#34;主界面.png&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2. 已知问题&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;视频下载不稳定，视频可能不全（如有解决方案欢迎PR）&lt;/li&gt; &#xA; &lt;li&gt;只能开小号导出自己朋友圈（如有解决方案欢迎PR）&lt;/li&gt; &#xA; &lt;li&gt;HTML页面比较原始&lt;/li&gt; &#xA; &lt;li&gt;自动浏览朋友圈的功能不稳定（如有解决方案欢迎PR）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;3. 常见问题与解决方法&lt;/h2&gt; &#xA;&lt;p&gt;问：怎么导出自己朋友圈&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;答：登陆另外一个账户搜自己，详见&lt;a href=&#34;https://raw.githubusercontent.com/tech-shrimp/WechatMoments/main/doc/manual_guide.md&#34;&gt;电脑微信浏览朋友圈&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;目前没有其他方案，主要我不知道怎么在电脑端查看自己的朋友圈，如有解决方案欢迎PR&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;问：为什么导出的数据不全？&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;答：软件只能导出在电脑微信&lt;strong&gt;浏览过&lt;/strong&gt;的朋友圈记录，未浏览过的无法导出。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;问：怎么在电脑微信浏览朋友圈？&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;答：软件提供了两种自动浏览朋友圈的方法，第一种浏览全部，缺点是最多只能刷到前100天。第二种浏览单个朋友，没有时间限制。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;问：自动浏览单个朋友功能失效！&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;答：可以手动操作，也可以替换图片提高成功率，详见文档&lt;a href=&#34;https://raw.githubusercontent.com/tech-shrimp/WechatMoments/main/doc/manual_guide.md&#34;&gt;电脑微信浏览朋友圈&lt;/a&gt;&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;问：为什么视频没法播放？&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;答：请使用Chrome浏览器打开html文件。或者勾选视频转码，获得更多浏览器的兼容性。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;问：能不能导出聊天记录？&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;答：导出聊天记录请使用这个软件&lt;a href=&#34;https://github.com/LC044/WeChatMsg&#34;&gt;https://github.com/LC044/WeChatMsg&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;4. 更新计划&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;导出点赞，评论等&lt;/li&gt; &#xA; &lt;li&gt;HTML网页功能增强，过滤排序等功能&lt;/li&gt; &#xA; &lt;li&gt;支持更多的朋友圈格式（音乐分享等）&lt;/li&gt; &#xA; &lt;li&gt;其他导出格式（Word, PDF等）&lt;/li&gt; &#xA; &lt;li&gt;佛系开发 随缘更新&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;5. 问题反馈&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;请直接提issue，或发送邮箱&lt;a href=&#34;mailto:techshrimp@163.com&#34;&gt;techshrimp@163.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;请附上日志与软件截图，日志地址log\xxxx-xx-xx-output.log&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;6. 二次开发&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python环境: Python3.11&lt;/li&gt; &#xA; &lt;li&gt;安装依赖: pip install requirements.txt&lt;/li&gt; &#xA; &lt;li&gt;启动: python main.py&lt;/li&gt; &#xA; &lt;li&gt;编译为可执行文件: 使用Github Action(.github/workflows/main.yml)&lt;/li&gt; &#xA; &lt;li&gt;微信数据库解密见项目:&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump&#34;&gt;https://github.com/xaoyaoo/PyWxDump&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;三、免责声明&lt;/h1&gt; &#xA;&lt;h3&gt;1. 使用目的&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本项目仅供学习交流使用，无收费项目，不用于盈利，&lt;strong&gt;请勿用于非法用途&lt;/strong&gt;，否则后果自负。&lt;/li&gt; &#xA; &lt;li&gt;本项目只能导出&lt;strong&gt;自己有权查看&lt;/strong&gt;的朋友圈数据，无其他越权功能。&lt;/li&gt; &#xA; &lt;li&gt;用户理解并同意，任何违反法律法规、侵犯他人合法权益的行为，均与本项目及其开发者无关，后果由用户自行承担。&lt;/li&gt; &#xA; &lt;li&gt;禁止利用本项目的相关技术从事非法测试或渗透，禁止利用本项目的相关代码或相关技术从事任何非法工作&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. 操作规范&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本项目仅允许在授权情况下对朋友圈进行备份与查看，严禁用于非法目的，否则自行承担所有相关责任；用户如因违反此规定而引发的任何法律责任，将由用户自行承担，与本项目及其开发者无关。&lt;/li&gt; &#xA; &lt;li&gt;严禁用于窃取他人隐私，否则自行承担所有相关责任。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3. 免责声明接受&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;下载、保存、进一步浏览源代码或者下载安装、编译使用本程序，表示你同意本警告，并承诺遵守它。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;四、致谢&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PC微信工具:&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump&#34;&gt;https://github.com/xaoyaoo/PyWxDump&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;留痕（聊天导出工具）:&lt;a href=&#34;https://github.com/LC044/WeChatMsg&#34;&gt;https://github.com/LC044/WeChatMsg&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;五、捐赠&lt;/h1&gt; &#xA;&lt;p&gt;如有帮助，请帮忙给B站视频点赞充电 &lt;a href=&#34;https://space.bilibili.com/316183842&#34;&gt;技术爬爬虾&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>