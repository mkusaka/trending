<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-16T01:43:57Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>seanpixel/Teenage-AGI</title>
    <updated>2023-04-16T01:43:57Z</updated>
    <id>tag:github.com,2023-04-16:/seanpixel/Teenage-AGI</id>
    <link href="https://github.com/seanpixel/Teenage-AGI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Teenage-AGI&lt;/h1&gt; &#xA;&lt;h2&gt;Objective&lt;/h2&gt; &#xA;&lt;p&gt;Inspired by the several Auto-GPT related Projects (predominently BabyAGI) and the Paper &lt;a href=&#34;https://arxiv.org/abs/2304.03442&#34;&gt;&#34;Generative Agents: Interactive Simulacra of Human Behavior&#34;&lt;/a&gt;, this python project uses OpenAI and Pinecone to Give memory to an AI agent and also allows it to &#34;think&#34; before making an action (outputting text). Also, just by shutting down the AI, it doesn&#39;t forget its memories since it lives on Pinecone and its memory_counter saves the index that its on.&lt;/p&gt; &#xA;&lt;h2&gt;Updates&lt;/h2&gt; &#xA;&lt;p&gt;April 12: Added &#34;read&#34; and &#34;think&#34; commands. Add &#34;read: &#34; or &#34;think: &#34; in front of a query to feed it information using read (any length works) or insert a memory into agent.&lt;/p&gt; &#xA;&lt;h3&gt;Sections&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/seanpixel/Teenage-AGI/raw/main/README.md#how-it-works&#34;&gt;How it Works&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/seanpixel/Teenage-AGI/raw/main/README.md#how-to-use&#34;&gt;How to Use&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/seanpixel/Teenage-AGI/raw/main/README.md#experiments&#34;&gt;Experiments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/seanpixel/Teenage-AGI/raw/main/README.md#how-to-use&#34;&gt;More About Project &amp;amp; Me&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/seanpixel/Teenage-AGI/raw/main/README.md#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How it Works&lt;/h2&gt; &#xA;&lt;p&gt;Here is what happens everytime the AI is queried by the user:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;AI vectorizes the query and stores it in a Pinecone Vector Database&lt;/li&gt; &#xA; &lt;li&gt;AI looks inside its memory and finds memories and past queries that are relevant to the current query&lt;/li&gt; &#xA; &lt;li&gt;AI thinks about what action to take&lt;/li&gt; &#xA; &lt;li&gt;AI stores the thought from Step 3&lt;/li&gt; &#xA; &lt;li&gt;Based on the thought from Step 3 and relevant memories from Step 2, AI generates an output&lt;/li&gt; &#xA; &lt;li&gt;AI stores the current query and its answer in its Pinecone vector database memory&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to Use&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository via &lt;code&gt;git clone https://github.com/seanpixel/Teenage-AGI.git&lt;/code&gt; and cd into the cloned repository.&lt;/li&gt; &#xA; &lt;li&gt;Install required packages by doing: pip install -r requirements.txt&lt;/li&gt; &#xA; &lt;li&gt;Create a .env file from the template &lt;code&gt;cp .env.template .env&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;open .env&lt;/code&gt; and set your OpenAI and Pinecone API info.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;python main.py&lt;/code&gt; and talk to the AI in the terminal&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Running in a docker container&lt;/h2&gt; &#xA;&lt;p&gt;You can run the system isolated in a container using docker-compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose run teenage-agi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Experiments&lt;/h2&gt; &#xA;&lt;p&gt;Currently, using GPT-4, I found that it can remember its name and other characteristics. It also carries on the conversation quite well without a context window (although I might add it soon). I will update this section as I keep playing with it.&lt;/p&gt; &#xA;&lt;h2&gt;More about the Project &amp;amp; Me&lt;/h2&gt; &#xA;&lt;p&gt;After reading the Simulcra paper, I made this project in my college dorm. I realized that most of the &#34;language&#34; that I generate are inside my head, so I thought maybe it would make sense if AGI does as well. I&#39;m a founder currently runing a startup called &lt;a href=&#34;https://raw.githubusercontent.com/seanpixel/Teenage-AGI/main/%5Burl%5D(https://www.dsnr.ai/)&#34;&gt;DSNR&lt;/a&gt; and also a first-year at USC. Contact me on &lt;a href=&#34;https://twitter.com/sean_pixel&#34;&gt;twitter&lt;/a&gt; about anything would love to chat.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Thank you to &lt;a href=&#34;https://twitter.com/yoheinakajima&#34;&gt;@yoheinakajima&lt;/a&gt; and the team behind &lt;a href=&#34;https://arxiv.org/abs/2304.03442&#34;&gt;&#34;Generative Agents: Interactive Simulacra of Human Behavior&#34;&lt;/a&gt; for the idea!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lightaime/camel</title>
    <updated>2023-04-16T01:43:57Z</updated>
    <id>tag:github.com,2023-04-16:/lightaime/camel</id>
    <link href="https://github.com/lightaime/camel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üê´ CAMEL: Communicative Agents for ‚ÄúMind‚Äù Exploration of Large Scale Language Model Society&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/drive/1AzP33O8rnMW__7ocWJhVBXjKziJXPtim?usp=sharing&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/camel-ai&#34;&gt;&lt;img src=&#34;https://huggingface.co/datasets/huggingface/brand-assets/resolve/main/hf-logo-with-title.png&#34; alt=&#34;Hugging Face&#34; width=&#34;100&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;CAMEL: Communicative Agents for ‚ÄúMind‚Äù Exploration of Large Scale Language Model Society&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://www.camel-ai.org/&#34;&gt;[Project Website]&lt;/a&gt; &lt;a href=&#34;https://ghli.org/camel.pdf&#34;&gt;[Preprint]&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lightaime/camel/master/misc/logo.png&#34; width=&#34;800&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;The rapid advancement of conversational and chat-based language models has led to remarkable progress in complex task-solving. However, their success heavily relies on human input to guide the conversation, which can be challenging and time-consuming. This paper explores the potential of building scalable techniques to facilitate autonomous cooperation among communicative agents and provide insight into their &#34;cognitive&#34; processes. To address the challenges of achieving autonomous cooperation, we propose a novel communicative agent framework named &lt;em&gt;role-playing&lt;/em&gt;. Our approach involves using &lt;em&gt;inception prompting&lt;/em&gt; to guide chat agents toward task completion while maintaining consistency with human intentions. We showcase how role-playing can be used to generate conversational data for studying the behaviors and capabilities of chat agents, providing a valuable resource for investigating conversational language models. Our contributions include introducing a novel communicative agent framework, offering a scalable approach for studying the cooperative behaviors and capabilities of multi-agent systems, and open-sourcing our library to support research on communicative agents and beyond. The GitHub repository of this project is made publicly available on: &lt;a href=&#34;https://github.com/lightaime/camel&#34;&gt;https://github.com/lightaime/camel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Try it yourself&lt;/h2&gt; &#xA;&lt;p&gt;We provide a &lt;a href=&#34;https://colab.research.google.com/drive/1AzP33O8rnMW__7ocWJhVBXjKziJXPtim?usp=sharing&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Google Colab&#34;&gt;&lt;/a&gt; demo showcasing a conversation between two ChatGPT agents playing roles as a python programmer and a stock trader collaborating on developing a trading bot for stock market.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lightaime/camel/master/misc/framework.png&#34; width=&#34;800&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Environment Setup&lt;/h2&gt; &#xA;&lt;p&gt;Install &lt;code&gt;CAMEL&lt;/code&gt; from source with conda:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# create a conda virtual environment&#xA;conda create --name camel python=3.10&#xA;# actiavte camel conda environment&#xA;conda activate camel&#xA;# clone github repo&#xA;git clone https://github.com/lightaime/camel.git&#xA;# change directory into project directory&#xA;cd camel&#xA;# install camel from source&#xA;pre-commit install&#xA;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;You can find a list of tasks for different set of assistant and user role pairs &lt;a href=&#34;https://drive.google.com/file/d/194PPaSTBR07m-PzjS-Ty6KlPLdFIPQDd/view?usp=share_link&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run the &lt;code&gt;role_playing.py&lt;/code&gt; script.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# export your OpenAI API key&#xA;export OPENAI_API_KEY=&amp;lt;insert your OpenAI API key&amp;gt;&#xA;# You can change the role pair and initial prompt in role_playing.py&#xA;python examples/ai_society/role_playing.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Data (Hosted on Hugging Face)&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Dataset&lt;/th&gt; &#xA;   &lt;th&gt;Chat format&lt;/th&gt; &#xA;   &lt;th&gt;Instruction format&lt;/th&gt; &#xA;   &lt;th&gt;Chat format (translated)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AI Society&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/datasets/camel-ai/ai_society/blob/main/ai_society_chat.tar.gz&#34;&gt;Chat format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/datasets/camel-ai/ai_society/blob/main/ai_society_instructions.json&#34;&gt;Instruction format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/datasets/camel-ai/ai_society_translated&#34;&gt;Chat format (translated)&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Code&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/datasets/camel-ai/code/blob/main/code_chat.tar.gz&#34;&gt;Chat format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/datasets/camel-ai/code/blob/main/code_instructions.json&#34;&gt;Instruction format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Math&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/datasets/camel-ai/math/blob/main/math50k.zip&#34;&gt;Chat format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Physics&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/datasets/camel-ai/physics&#34;&gt;Chat format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Chemistry&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/datasets/camel-ai/chemistry&#34;&gt;Chat format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Biology&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/datasets/camel-ai/biology&#34;&gt;Chat format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Visualizations of Instructions and Tasks&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Dataset&lt;/th&gt; &#xA;   &lt;th&gt;Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Tasks&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AI Society&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://atlas.nomic.ai/map/3a559a06-87d0-4476-a879-962656242452/db961915-b254-48e8-8e5c-917f827b74c6&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://atlas.nomic.ai/map/cb96f41b-a6fd-4fe4-ac40-08e101714483/ae06156c-a572-46e9-8345-ebe18586d02b&#34;&gt;Tasks&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Code&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://atlas.nomic.ai/map/902d6ccb-0bbb-4294-83a8-1c7d2dae03c8/ace2e146-e49f-41db-a1f4-25a2c4be2457&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://atlas.nomic.ai/map/efc38617-9180-490a-8630-43a05b35d22d/2576addf-a133-45d5-89a9-6b067b6652dd&#34;&gt;Tasks&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Misalignment&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://atlas.nomic.ai/map/5c491035-a26e-4a05-9593-82ffb2c3ab40/2bd98896-894e-4807-9ed8-a203ccb14d5e&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://atlas.nomic.ai/map/abc357dd-9c04-4913-9541-63e259d7ac1f/825139a4-af66-427c-9d0e-f36b5492ab3f&#34;&gt;Tasks&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Released AI Society and Code dataset (April 2, 2023)&lt;/li&gt; &#xA; &lt;li&gt;Initial release of &lt;code&gt;CAMEL&lt;/code&gt; python library (March 21, 2023)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{camel,&#xA;  author = {Guohao Li, Hasan Abed Al Kader Hammoud, Hani Itani, Dmitrii Khizbullin, Bernard Ghanem},&#xA;  title = {CAMEL: Communicative Agents for ‚ÄúMind‚Äù Exploration of Large Scale Language Model Society},&#xA;  year = {2023},&#xA;  journal={arXiv preprint},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;Special thanks to &lt;a href=&#34;https://home.nomic.ai/&#34;&gt;Nomic AI&lt;/a&gt; for giving us extended access to their data set exploration tool (Atlas).&lt;/p&gt; &#xA;&lt;p&gt;We would also like to thank Haya Hammoud for designing the logo of our project.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The intended purpose and licensing of CAMEL is solely for research use.&lt;/p&gt; &#xA;&lt;p&gt;The source code is licensed under Apache 2.0.&lt;/p&gt; &#xA;&lt;p&gt;The datasets are licensed under CC BY NC 4.0, which permits only non-commercial usage. It is advised that any models trained using the dataset should not be utilized for anything other than research purposes.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;For more information please contact &lt;a href=&#34;https://ghli.org/&#34;&gt;Guohao Li&lt;/a&gt;, &lt;a href=&#34;https://cemse.kaust.edu.sa/ece/people/person/hasan-abed-al-kader-hammoud&#34;&gt;Hasan Abed Al Kader Hammoud&lt;/a&gt;, &lt;a href=&#34;https://github.com/HaniItani&#34;&gt;Hani Itani&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>efenatuyo/ugc-sniper</title>
    <updated>2023-04-16T01:43:57Z</updated>
    <id>tag:github.com,2023-04-16:/efenatuyo/ugc-sniper</id>
    <link href="https://github.com/efenatuyo/ugc-sniper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;the best one out there (yet again)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ugc-sniper&lt;/h1&gt; &#xA;&lt;p&gt;the best one out there (yet again)&lt;/p&gt; &#xA;&lt;p&gt;bored to explain how it works on github join my serv instead &lt;a href=&#34;https://discord.gg/n2xfSuf7p8&#34;&gt;https://discord.gg/n2xfSuf7p8&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;tutorial (not by me) - &lt;a href=&#34;https://docs.google.com/document/d/16VK4WM39sgjrkdN-u2dIzzL6wGgD89g4pQ-N-w3emOY/edit&#34;&gt;https://docs.google.com/document/d/16VK4WM39sgjrkdN-u2dIzzL6wGgD89g4pQ-N-w3emOY/edit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;functions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;supports multi ids&lt;/li&gt; &#xA; &lt;li&gt;supports multi cookies&lt;/li&gt; &#xA; &lt;li&gt;is asynchronous that makes it able to mass buy items&lt;/li&gt; &#xA; &lt;li&gt;uses aiohttp&lt;/li&gt; &#xA; &lt;li&gt;supports every device (linux, windows, mac)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;format of multiple ids:&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;new line for every new id&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;format of multiple Cookies:&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;new line for every new cookie&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;you don&#39;t need multiple ids and cookies one also works&lt;/p&gt; &#xA;&lt;p&gt;next update 160 stars (suggestions)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nd/4.0/&#34;&gt;&lt;img alt=&#34;Creative Commons License&#34; style=&#34;border-width:0&#34; src=&#34;https://i.creativecommons.org/l/by-nd/4.0/88x31.png&#34;&gt;&lt;/a&gt;&lt;br&gt;This work is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nd/4.0/&#34;&gt;Creative Commons Attribution-NoDerivatives 4.0 International License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>