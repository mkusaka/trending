<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-12T01:31:53Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>huggingface/transformers</title>
    <updated>2022-08-12T01:31:53Z</updated>
    <id>tag:github.com,2022-08-12:/huggingface/transformers</id>
    <link href="https://github.com/huggingface/transformers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ü§ó Transformers: State-of-the-art Machine Learning for Pytorch, TensorFlow, and JAX.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/transformers_logo_name.png&#34; width=&#34;400&#34;&gt; &lt;br&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://circleci.com/gh/huggingface/transformers&#34;&gt; &lt;img alt=&#34;Build&#34; src=&#34;https://img.shields.io/circleci/build/github/huggingface/transformers/main&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/huggingface/transformers/raw/main/LICENSE&#34;&gt; &lt;img alt=&#34;GitHub&#34; src=&#34;https://img.shields.io/github/license/huggingface/transformers.svg?color=blue&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://huggingface.co/docs/transformers/index&#34;&gt; &lt;img alt=&#34;Documentation&#34; src=&#34;https://img.shields.io/website/http/huggingface.co/docs/transformers/index.svg?down_color=red&amp;amp;down_message=offline&amp;amp;up_message=online&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/huggingface/transformers/releases&#34;&gt; &lt;img alt=&#34;GitHub release&#34; src=&#34;https://img.shields.io/github/release/huggingface/transformers.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/huggingface/transformers/raw/main/CODE_OF_CONDUCT.md&#34;&gt; &lt;img alt=&#34;Contributor Covenant&#34; src=&#34;https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://zenodo.org/badge/latestdoi/155220641&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/155220641.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt; &lt;p&gt; &lt;b&gt;English&lt;/b&gt; | &lt;a href=&#34;https://github.com/huggingface/transformers/raw/main/README_zh-hans.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | &lt;a href=&#34;https://github.com/huggingface/transformers/raw/main/README_zh-hant.md&#34;&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/a&gt; | &lt;a href=&#34;https://github.com/huggingface/transformers/raw/main/README_ko.md&#34;&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt; &lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;/h4&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &lt;p&gt;State-of-the-art Machine Learning for JAX, PyTorch and TensorFlow&lt;/p&gt; &lt;/h3&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &lt;a href=&#34;https://hf.co/course&#34;&gt;&lt;img src=&#34;https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/course_banner.png&#34;&gt;&lt;/a&gt; &lt;/h3&gt; &#xA;&lt;p&gt;ü§ó Transformers provides thousands of pretrained models to perform tasks on different modalities such as text, vision, and audio.&lt;/p&gt; &#xA;&lt;p&gt;These models can be applied on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìù Text, for tasks like text classification, information extraction, question answering, summarization, translation, text generation, in over 100 languages.&lt;/li&gt; &#xA; &lt;li&gt;üñºÔ∏è Images, for tasks like image classification, object detection, and segmentation.&lt;/li&gt; &#xA; &lt;li&gt;üó£Ô∏è Audio, for tasks like speech recognition and audio classification.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Transformer models can also perform tasks on &lt;strong&gt;several modalities combined&lt;/strong&gt;, such as table question answering, optical character recognition, information extraction from scanned documents, video classification, and visual question answering.&lt;/p&gt; &#xA;&lt;p&gt;ü§ó Transformers provides APIs to quickly download and use those pretrained models on a given text, fine-tune them on your own datasets and then share them with the community on our &lt;a href=&#34;https://huggingface.co/models&#34;&gt;model hub&lt;/a&gt;. At the same time, each python module defining an architecture is fully standalone and can be modified to enable quick research experiments.&lt;/p&gt; &#xA;&lt;p&gt;ü§ó Transformers is backed by the three most popular deep learning libraries ‚Äî &lt;a href=&#34;https://jax.readthedocs.io/en/latest/&#34;&gt;Jax&lt;/a&gt;, &lt;a href=&#34;https://pytorch.org/&#34;&gt;PyTorch&lt;/a&gt; and &lt;a href=&#34;https://www.tensorflow.org/&#34;&gt;TensorFlow&lt;/a&gt; ‚Äî with a seamless integration between them. It&#39;s straightforward to train your models with one before loading them for inference with the other.&lt;/p&gt; &#xA;&lt;h2&gt;Online demos&lt;/h2&gt; &#xA;&lt;p&gt;You can test most of our models directly on their pages from the &lt;a href=&#34;https://huggingface.co/models&#34;&gt;model hub&lt;/a&gt;. We also offer &lt;a href=&#34;https://huggingface.co/pricing&#34;&gt;private model hosting, versioning, &amp;amp; an inference API&lt;/a&gt; for public and private models.&lt;/p&gt; &#xA;&lt;p&gt;Here are a few examples:&lt;/p&gt; &#xA;&lt;p&gt;In Natural Language Processing:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/bert-base-uncased?text=Paris+is+the+%5BMASK%5D+of+France&#34;&gt;Masked word completion with BERT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/dbmdz/electra-large-discriminator-finetuned-conll03-english?text=My+name+is+Sarah+and+I+live+in+London+city&#34;&gt;Name Entity Recognition with Electra&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/gpt2?text=A+long+time+ago%2C+&#34;&gt;Text generation with GPT-2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/roberta-large-mnli?text=The+dog+was+lost.+Nobody+lost+any+animal&#34;&gt;Natural Language Inference with RoBERTa&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/facebook/bart-large-cnn?text=The+tower+is+324+metres+%281%2C063+ft%29+tall%2C+about+the+same+height+as+an+81-storey+building%2C+and+the+tallest+structure+in+Paris.+Its+base+is+square%2C+measuring+125+metres+%28410+ft%29+on+each+side.+During+its+construction%2C+the+Eiffel+Tower+surpassed+the+Washington+Monument+to+become+the+tallest+man-made+structure+in+the+world%2C+a+title+it+held+for+41+years+until+the+Chrysler+Building+in+New+York+City+was+finished+in+1930.+It+was+the+first+structure+to+reach+a+height+of+300+metres.+Due+to+the+addition+of+a+broadcasting+aerial+at+the+top+of+the+tower+in+1957%2C+it+is+now+taller+than+the+Chrysler+Building+by+5.2+metres+%2817+ft%29.+Excluding+transmitters%2C+the+Eiffel+Tower+is+the+second+tallest+free-standing+structure+in+France+after+the+Millau+Viaduct&#34;&gt;Summarization with BART&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/distilbert-base-uncased-distilled-squad?text=Which+name+is+also+used+to+describe+the+Amazon+rainforest+in+English%3F&amp;amp;context=The+Amazon+rainforest+%28Portuguese%3A+Floresta+Amaz%C3%B4nica+or+Amaz%C3%B4nia%3B+Spanish%3A+Selva+Amaz%C3%B3nica%2C+Amazon%C3%ADa+or+usually+Amazonia%3B+French%3A+For%C3%AAt+amazonienne%3B+Dutch%3A+Amazoneregenwoud%29%2C+also+known+in+English+as+Amazonia+or+the+Amazon+Jungle%2C+is+a+moist+broadleaf+forest+that+covers+most+of+the+Amazon+basin+of+South+America.+This+basin+encompasses+7%2C000%2C000+square+kilometres+%282%2C700%2C000+sq+mi%29%2C+of+which+5%2C500%2C000+square+kilometres+%282%2C100%2C000+sq+mi%29+are+covered+by+the+rainforest.+This+region+includes+territory+belonging+to+nine+nations.+The+majority+of+the+forest+is+contained+within+Brazil%2C+with+60%25+of+the+rainforest%2C+followed+by+Peru+with+13%25%2C+Colombia+with+10%25%2C+and+with+minor+amounts+in+Venezuela%2C+Ecuador%2C+Bolivia%2C+Guyana%2C+Suriname+and+French+Guiana.+States+or+departments+in+four+nations+contain+%22Amazonas%22+in+their+names.+The+Amazon+represents+over+half+of+the+planet%27s+remaining+rainforests%2C+and+comprises+the+largest+and+most+biodiverse+tract+of+tropical+rainforest+in+the+world%2C+with+an+estimated+390+billion+individual+trees+divided+into+16%2C000+species&#34;&gt;Question answering with DistilBERT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/t5-base?text=My+name+is+Wolfgang+and+I+live+in+Berlin&#34;&gt;Translation with T5&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In Computer Vision:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/google/vit-base-patch16-224&#34;&gt;Image classification with ViT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/facebook/detr-resnet-50&#34;&gt;Object Detection with DETR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/facebook/detr-resnet-50-panoptic&#34;&gt;Image Segmentation with DETR&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In Audio:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/facebook/wav2vec2-base-960h&#34;&gt;Automatic Speech Recognition with Wav2Vec2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/superb/wav2vec2-base-superb-ks&#34;&gt;Keyword Spotting with Wav2Vec2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://transformer.huggingface.co&#34;&gt;Write With Transformer&lt;/a&gt;&lt;/strong&gt;, built by the Hugging Face team, is the official demo of this repo‚Äôs text generation capabilities.&lt;/p&gt; &#xA;&lt;h2&gt;If you are looking for custom support from the Hugging Face team&lt;/h2&gt; &#xA;&lt;a target=&#34;_blank&#34; href=&#34;https://huggingface.co/support&#34;&gt; &lt;img alt=&#34;HuggingFace Expert Acceleration Program&#34; src=&#34;https://cdn-media.huggingface.co/marketing/transformers/new-support-improved.png&#34; style=&#34;max-width: 600px; border: 1px solid #eee; border-radius: 4px; box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);&#34;&gt; &lt;/a&gt;&#xA;&lt;br&gt; &#xA;&lt;h2&gt;Quick tour&lt;/h2&gt; &#xA;&lt;p&gt;To immediately use a model on a given input (text, image, audio, ...), we provide the &lt;code&gt;pipeline&lt;/code&gt; API. Pipelines group together a pretrained model with the preprocessing that was used during that model&#39;s training. Here is how to quickly use a pipeline to classify positive versus negative texts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from transformers import pipeline&#xA;&#xA;# Allocate a pipeline for sentiment-analysis&#xA;&amp;gt;&amp;gt;&amp;gt; classifier = pipeline(&#39;sentiment-analysis&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; classifier(&#39;We are very happy to introduce pipeline to the transformers repository.&#39;)&#xA;[{&#39;label&#39;: &#39;POSITIVE&#39;, &#39;score&#39;: 0.9996980428695679}]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The second line of code downloads and caches the pretrained model used by the pipeline, while the third evaluates it on the given text. Here the answer is &#34;positive&#34; with a confidence of 99.97%.&lt;/p&gt; &#xA;&lt;p&gt;Many tasks have a pre-trained &lt;code&gt;pipeline&lt;/code&gt; ready to go, in NLP but also in computer vision and speech. For example, we can easily extract detected objects in an image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; import requests&#xA;&amp;gt;&amp;gt;&amp;gt; from PIL import Image&#xA;&amp;gt;&amp;gt;&amp;gt; from transformers import pipeline&#xA;&#xA;# Download an image with cute cats&#xA;&amp;gt;&amp;gt;&amp;gt; url = &#34;https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/coco_sample.png&#34;&#xA;&amp;gt;&amp;gt;&amp;gt; image_data = requests.get(url, stream=True).raw&#xA;&amp;gt;&amp;gt;&amp;gt; image = Image.open(image_data)&#xA;&#xA;# Allocate a pipeline for object detection&#xA;&amp;gt;&amp;gt;&amp;gt; object_detector = pipeline(&#39;object_detection&#39;)&#xA;&amp;gt;&amp;gt;&amp;gt; object_detector(image)&#xA;[{&#39;score&#39;: 0.9982201457023621,&#xA;  &#39;label&#39;: &#39;remote&#39;,&#xA;  &#39;box&#39;: {&#39;xmin&#39;: 40, &#39;ymin&#39;: 70, &#39;xmax&#39;: 175, &#39;ymax&#39;: 117}},&#xA; {&#39;score&#39;: 0.9960021376609802,&#xA;  &#39;label&#39;: &#39;remote&#39;,&#xA;  &#39;box&#39;: {&#39;xmin&#39;: 333, &#39;ymin&#39;: 72, &#39;xmax&#39;: 368, &#39;ymax&#39;: 187}},&#xA; {&#39;score&#39;: 0.9954745173454285,&#xA;  &#39;label&#39;: &#39;couch&#39;,&#xA;  &#39;box&#39;: {&#39;xmin&#39;: 0, &#39;ymin&#39;: 1, &#39;xmax&#39;: 639, &#39;ymax&#39;: 473}},&#xA; {&#39;score&#39;: 0.9988006353378296,&#xA;  &#39;label&#39;: &#39;cat&#39;,&#xA;  &#39;box&#39;: {&#39;xmin&#39;: 13, &#39;ymin&#39;: 52, &#39;xmax&#39;: 314, &#39;ymax&#39;: 470}},&#xA; {&#39;score&#39;: 0.9986783862113953,&#xA;  &#39;label&#39;: &#39;cat&#39;,&#xA;  &#39;box&#39;: {&#39;xmin&#39;: 345, &#39;ymin&#39;: 23, &#39;xmax&#39;: 640, &#39;ymax&#39;: 368}}]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here we get a list of objects detected in the image, with a box surrounding the object and a confidence score. Here is the original image on the right, with the predictions displayed on the left:&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &lt;a&gt;&lt;img src=&#34;https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/coco_sample.png&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a&gt;&lt;img src=&#34;https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/coco_sample_post_processed.png&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;/h3&gt; &#xA;&lt;p&gt;You can learn more about the tasks supported by the &lt;code&gt;pipeline&lt;/code&gt; API in &lt;a href=&#34;https://huggingface.co/docs/transformers/task_summary&#34;&gt;this tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In addition to &lt;code&gt;pipeline&lt;/code&gt;, to download and use any of the pretrained models on your given task, all it takes is three lines of code. Here is the PyTorch version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from transformers import AutoTokenizer, AutoModel&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; tokenizer = AutoTokenizer.from_pretrained(&#34;bert-base-uncased&#34;)&#xA;&amp;gt;&amp;gt;&amp;gt; model = AutoModel.from_pretrained(&#34;bert-base-uncased&#34;)&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; inputs = tokenizer(&#34;Hello world!&#34;, return_tensors=&#34;pt&#34;)&#xA;&amp;gt;&amp;gt;&amp;gt; outputs = model(**inputs)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And here is the equivalent code for TensorFlow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from transformers import AutoTokenizer, TFAutoModel&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; tokenizer = AutoTokenizer.from_pretrained(&#34;bert-base-uncased&#34;)&#xA;&amp;gt;&amp;gt;&amp;gt; model = TFAutoModel.from_pretrained(&#34;bert-base-uncased&#34;)&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; inputs = tokenizer(&#34;Hello world!&#34;, return_tensors=&#34;tf&#34;)&#xA;&amp;gt;&amp;gt;&amp;gt; outputs = model(**inputs)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The tokenizer is responsible for all the preprocessing the pretrained model expects, and can be called directly on a single string (as in the above examples) or a list. It will output a dictionary that you can use in downstream code or simply directly pass to your model using the ** argument unpacking operator.&lt;/p&gt; &#xA;&lt;p&gt;The model itself is a regular &lt;a href=&#34;https://pytorch.org/docs/stable/nn.html#torch.nn.Module&#34;&gt;Pytorch &lt;code&gt;nn.Module&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/keras/Model&#34;&gt;TensorFlow &lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt; (depending on your backend) which you can use as usual. &lt;a href=&#34;https://huggingface.co/docs/transformers/training&#34;&gt;This tutorial&lt;/a&gt; explains how to integrate such a model into a classic PyTorch or TensorFlow training loop, or how to use our &lt;code&gt;Trainer&lt;/code&gt; API to quickly fine-tune on a new dataset.&lt;/p&gt; &#xA;&lt;h2&gt;Why should I use transformers?&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Easy-to-use state-of-the-art models:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;High performance on natural language understanding &amp;amp; generation, computer vision, and audio tasks.&lt;/li&gt; &#xA;   &lt;li&gt;Low barrier to entry for educators and practitioners.&lt;/li&gt; &#xA;   &lt;li&gt;Few user-facing abstractions with just three classes to learn.&lt;/li&gt; &#xA;   &lt;li&gt;A unified API for using all our pretrained models.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Lower compute costs, smaller carbon footprint:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Researchers can share trained models instead of always retraining.&lt;/li&gt; &#xA;   &lt;li&gt;Practitioners can reduce compute time and production costs.&lt;/li&gt; &#xA;   &lt;li&gt;Dozens of architectures with over 60,000 pretrained models across all modalities.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Choose the right framework for every part of a model&#39;s lifetime:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Train state-of-the-art models in 3 lines of code.&lt;/li&gt; &#xA;   &lt;li&gt;Move a single model between TF2.0/PyTorch/JAX frameworks at will.&lt;/li&gt; &#xA;   &lt;li&gt;Seamlessly pick the right framework for training, evaluation and production.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Easily customize a model or an example to your needs:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;We provide examples for each architecture to reproduce the results published by its original authors.&lt;/li&gt; &#xA;   &lt;li&gt;Model internals are exposed as consistently as possible.&lt;/li&gt; &#xA;   &lt;li&gt;Model files can be used independently of the library for quick experiments.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Why shouldn&#39;t I use transformers?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This library is not a modular toolbox of building blocks for neural nets. The code in the model files is not refactored with additional abstractions on purpose, so that researchers can quickly iterate on each of the models without diving into additional abstractions/files.&lt;/li&gt; &#xA; &lt;li&gt;The training API is not intended to work on any model but is optimized to work with the models provided by the library. For generic machine learning loops, you should use another library (possibly, &lt;a href=&#34;https://huggingface.co/docs/accelerate&#34;&gt;Accelerate&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;While we strive to present as many use cases as possible, the scripts in our &lt;a href=&#34;https://github.com/huggingface/transformers/tree/main/examples&#34;&gt;examples folder&lt;/a&gt; are just that: examples. It is expected that they won&#39;t work out-of-the box on your specific problem and that you will be required to change a few lines of code to adapt them to your needs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;With pip&lt;/h3&gt; &#xA;&lt;p&gt;This repository is tested on Python 3.6+, Flax 0.3.2+, PyTorch 1.3.1+ and TensorFlow 2.3+.&lt;/p&gt; &#xA;&lt;p&gt;You should install ü§ó Transformers in a &lt;a href=&#34;https://docs.python.org/3/library/venv.html&#34;&gt;virtual environment&lt;/a&gt;. If you&#39;re unfamiliar with Python virtual environments, check out the &lt;a href=&#34;https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/&#34;&gt;user guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;First, create a virtual environment with the version of Python you&#39;re going to use and activate it.&lt;/p&gt; &#xA;&lt;p&gt;Then, you will need to install at least one of Flax, PyTorch or TensorFlow. Please refer to &lt;a href=&#34;https://www.tensorflow.org/install/&#34;&gt;TensorFlow installation page&lt;/a&gt;, &lt;a href=&#34;https://pytorch.org/get-started/locally/#start-locally&#34;&gt;PyTorch installation page&lt;/a&gt; and/or &lt;a href=&#34;https://github.com/google/flax#quick-install&#34;&gt;Flax&lt;/a&gt; and &lt;a href=&#34;https://github.com/google/jax#installation&#34;&gt;Jax&lt;/a&gt; installation pages regarding the specific install command for your platform.&lt;/p&gt; &#xA;&lt;p&gt;When one of those backends has been installed, ü§ó Transformers can be installed using pip as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;d like to play with the examples or need the bleeding edge of the code and can&#39;t wait for a new release, you must &lt;a href=&#34;https://huggingface.co/docs/transformers/installation#installing-from-source&#34;&gt;install the library from source&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;With conda&lt;/h3&gt; &#xA;&lt;p&gt;Since Transformers version v4.0.0, we now have a conda channel: &lt;code&gt;huggingface&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;ü§ó Transformers can be installed using conda as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;conda install -c huggingface transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Follow the installation pages of Flax, PyTorch or TensorFlow to see how to install them with conda.&lt;/p&gt; &#xA;&lt;h2&gt;Model architectures&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/models&#34;&gt;All the model checkpoints&lt;/a&gt;&lt;/strong&gt; provided by ü§ó Transformers are seamlessly integrated from the huggingface.co &lt;a href=&#34;https://huggingface.co&#34;&gt;model hub&lt;/a&gt; where they are uploaded directly by &lt;a href=&#34;https://huggingface.co/users&#34;&gt;users&lt;/a&gt; and &lt;a href=&#34;https://huggingface.co/organizations&#34;&gt;organizations&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Current number of checkpoints: &lt;img src=&#34;https://img.shields.io/endpoint?url=https://huggingface.co/api/shields/models&amp;amp;color=brightgreen&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;ü§ó Transformers currently provides the following architectures (see &lt;a href=&#34;https://huggingface.co/docs/transformers/model_summary&#34;&gt;here&lt;/a&gt; for a high-level summary of each them):&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/albert&#34;&gt;ALBERT&lt;/a&gt;&lt;/strong&gt; (from Google Research and the Toyota Technological Institute at Chicago) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1909.11942&#34;&gt;ALBERT: A Lite BERT for Self-supervised Learning of Language Representations&lt;/a&gt;, by Zhenzhong Lan, Mingda Chen, Sebastian Goodman, Kevin Gimpel, Piyush Sharma, Radu Soricut.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/bart&#34;&gt;BART&lt;/a&gt;&lt;/strong&gt; (from Facebook) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1910.13461&#34;&gt;BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension&lt;/a&gt; by Mike Lewis, Yinhan Liu, Naman Goyal, Marjan Ghazvininejad, Abdelrahman Mohamed, Omer Levy, Ves Stoyanov and Luke Zettlemoyer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/barthez&#34;&gt;BARThez&lt;/a&gt;&lt;/strong&gt; (from √âcole polytechnique) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2010.12321&#34;&gt;BARThez: a Skilled Pretrained French Sequence-to-Sequence Model&lt;/a&gt; by Moussa Kamal Eddine, Antoine J.-P. Tixier, Michalis Vazirgiannis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/bartpho&#34;&gt;BARTpho&lt;/a&gt;&lt;/strong&gt; (from VinAI Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2109.09701&#34;&gt;BARTpho: Pre-trained Sequence-to-Sequence Models for Vietnamese&lt;/a&gt; by Nguyen Luong Tran, Duong Minh Le and Dat Quoc Nguyen.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/beit&#34;&gt;BEiT&lt;/a&gt;&lt;/strong&gt; (from Microsoft) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2106.08254&#34;&gt;BEiT: BERT Pre-Training of Image Transformers&lt;/a&gt; by Hangbo Bao, Li Dong, Furu Wei.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/bert&#34;&gt;BERT&lt;/a&gt;&lt;/strong&gt; (from Google) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1810.04805&#34;&gt;BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding&lt;/a&gt; by Jacob Devlin, Ming-Wei Chang, Kenton Lee and Kristina Toutanova.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/bert-generation&#34;&gt;BERT For Sequence Generation&lt;/a&gt;&lt;/strong&gt; (from Google) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1907.12461&#34;&gt;Leveraging Pre-trained Checkpoints for Sequence Generation Tasks&lt;/a&gt; by Sascha Rothe, Shashi Narayan, Aliaksei Severyn.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/bertweet&#34;&gt;BERTweet&lt;/a&gt;&lt;/strong&gt; (from VinAI Research) released with the paper &lt;a href=&#34;https://aclanthology.org/2020.emnlp-demos.2/&#34;&gt;BERTweet: A pre-trained language model for English Tweets&lt;/a&gt; by Dat Quoc Nguyen, Thanh Vu and Anh Tuan Nguyen.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/bigbird_pegasus&#34;&gt;BigBird-Pegasus&lt;/a&gt;&lt;/strong&gt; (from Google Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2007.14062&#34;&gt;Big Bird: Transformers for Longer Sequences&lt;/a&gt; by Manzil Zaheer, Guru Guruganesh, Avinava Dubey, Joshua Ainslie, Chris Alberti, Santiago Ontanon, Philip Pham, Anirudh Ravula, Qifan Wang, Li Yang, Amr Ahmed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/big_bird&#34;&gt;BigBird-RoBERTa&lt;/a&gt;&lt;/strong&gt; (from Google Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2007.14062&#34;&gt;Big Bird: Transformers for Longer Sequences&lt;/a&gt; by Manzil Zaheer, Guru Guruganesh, Avinava Dubey, Joshua Ainslie, Chris Alberti, Santiago Ontanon, Philip Pham, Anirudh Ravula, Qifan Wang, Li Yang, Amr Ahmed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/blenderbot&#34;&gt;Blenderbot&lt;/a&gt;&lt;/strong&gt; (from Facebook) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2004.13637&#34;&gt;Recipes for building an open-domain chatbot&lt;/a&gt; by Stephen Roller, Emily Dinan, Naman Goyal, Da Ju, Mary Williamson, Yinhan Liu, Jing Xu, Myle Ott, Kurt Shuster, Eric M. Smith, Y-Lan Boureau, Jason Weston.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/blenderbot-small&#34;&gt;BlenderbotSmall&lt;/a&gt;&lt;/strong&gt; (from Facebook) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2004.13637&#34;&gt;Recipes for building an open-domain chatbot&lt;/a&gt; by Stephen Roller, Emily Dinan, Naman Goyal, Da Ju, Mary Williamson, Yinhan Liu, Jing Xu, Myle Ott, Kurt Shuster, Eric M. Smith, Y-Lan Boureau, Jason Weston.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/bloom&#34;&gt;BLOOM&lt;/a&gt;&lt;/strong&gt; (from BigScience workshop) released by the &lt;a href=&#34;https://bigscience.huggingface.co/&#34;&gt;BigSicence Workshop&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/bort&#34;&gt;BORT&lt;/a&gt;&lt;/strong&gt; (from Alexa) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2010.10499&#34;&gt;Optimal Subarchitecture Extraction For BERT&lt;/a&gt; by Adrian de Wynter and Daniel J. Perry.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/byt5&#34;&gt;ByT5&lt;/a&gt;&lt;/strong&gt; (from Google Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2105.13626&#34;&gt;ByT5: Towards a token-free future with pre-trained byte-to-byte models&lt;/a&gt; by Linting Xue, Aditya Barua, Noah Constant, Rami Al-Rfou, Sharan Narang, Mihir Kale, Adam Roberts, Colin Raffel.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/camembert&#34;&gt;CamemBERT&lt;/a&gt;&lt;/strong&gt; (from Inria/Facebook/Sorbonne) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1911.03894&#34;&gt;CamemBERT: a Tasty French Language Model&lt;/a&gt; by Louis Martin*, Benjamin Muller*, Pedro Javier Ortiz Su√°rez*, Yoann Dupont, Laurent Romary, √âric Villemonte de la Clergerie, Djam√© Seddah and Beno√Æt Sagot.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/canine&#34;&gt;CANINE&lt;/a&gt;&lt;/strong&gt; (from Google Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2103.06874&#34;&gt;CANINE: Pre-training an Efficient Tokenization-Free Encoder for Language Representation&lt;/a&gt; by Jonathan H. Clark, Dan Garrette, Iulia Turc, John Wieting.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/clip&#34;&gt;CLIP&lt;/a&gt;&lt;/strong&gt; (from OpenAI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2103.00020&#34;&gt;Learning Transferable Visual Models From Natural Language Supervision&lt;/a&gt; by Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal, Girish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, Gretchen Krueger, Ilya Sutskever.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/codegen&#34;&gt;CodeGen&lt;/a&gt;&lt;/strong&gt; (from Salesforce) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2203.13474&#34;&gt;A Conversational Paradigm for Program Synthesis&lt;/a&gt; by Erik Nijkamp, Bo Pang, Hiroaki Hayashi, Lifu Tu, Huan Wang, Yingbo Zhou, Silvio Savarese, Caiming Xiong.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/convbert&#34;&gt;ConvBERT&lt;/a&gt;&lt;/strong&gt; (from YituTech) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2008.02496&#34;&gt;ConvBERT: Improving BERT with Span-based Dynamic Convolution&lt;/a&gt; by Zihang Jiang, Weihao Yu, Daquan Zhou, Yunpeng Chen, Jiashi Feng, Shuicheng Yan.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/convnext&#34;&gt;ConvNeXT&lt;/a&gt;&lt;/strong&gt; (from Facebook AI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2201.03545&#34;&gt;A ConvNet for the 2020s&lt;/a&gt; by Zhuang Liu, Hanzi Mao, Chao-Yuan Wu, Christoph Feichtenhofer, Trevor Darrell, Saining Xie.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/cpm&#34;&gt;CPM&lt;/a&gt;&lt;/strong&gt; (from Tsinghua University) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2012.00413&#34;&gt;CPM: A Large-scale Generative Chinese Pre-trained Language Model&lt;/a&gt; by Zhengyan Zhang, Xu Han, Hao Zhou, Pei Ke, Yuxian Gu, Deming Ye, Yujia Qin, Yusheng Su, Haozhe Ji, Jian Guan, Fanchao Qi, Xiaozhi Wang, Yanan Zheng, Guoyang Zeng, Huanqi Cao, Shengqi Chen, Daixuan Li, Zhenbo Sun, Zhiyuan Liu, Minlie Huang, Wentao Han, Jie Tang, Juanzi Li, Xiaoyan Zhu, Maosong Sun.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/ctrl&#34;&gt;CTRL&lt;/a&gt;&lt;/strong&gt; (from Salesforce) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1909.05858&#34;&gt;CTRL: A Conditional Transformer Language Model for Controllable Generation&lt;/a&gt; by Nitish Shirish Keskar*, Bryan McCann*, Lav R. Varshney, Caiming Xiong and Richard Socher.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/cvt&#34;&gt;CvT&lt;/a&gt;&lt;/strong&gt; (from Microsoft) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2103.15808&#34;&gt;CvT: Introducing Convolutions to Vision Transformers&lt;/a&gt; by Haiping Wu, Bin Xiao, Noel Codella, Mengchen Liu, Xiyang Dai, Lu Yuan, Lei Zhang.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/data2vec&#34;&gt;Data2Vec&lt;/a&gt;&lt;/strong&gt; (from Facebook) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2202.03555&#34;&gt;Data2Vec: A General Framework for Self-supervised Learning in Speech, Vision and Language&lt;/a&gt; by Alexei Baevski, Wei-Ning Hsu, Qiantong Xu, Arun Babu, Jiatao Gu, Michael Auli.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/deberta&#34;&gt;DeBERTa&lt;/a&gt;&lt;/strong&gt; (from Microsoft) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2006.03654&#34;&gt;DeBERTa: Decoding-enhanced BERT with Disentangled Attention&lt;/a&gt; by Pengcheng He, Xiaodong Liu, Jianfeng Gao, Weizhu Chen.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/deberta-v2&#34;&gt;DeBERTa-v2&lt;/a&gt;&lt;/strong&gt; (from Microsoft) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2006.03654&#34;&gt;DeBERTa: Decoding-enhanced BERT with Disentangled Attention&lt;/a&gt; by Pengcheng He, Xiaodong Liu, Jianfeng Gao, Weizhu Chen.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/decision_transformer&#34;&gt;Decision Transformer&lt;/a&gt;&lt;/strong&gt; (from Berkeley/Facebook/Google) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2106.01345&#34;&gt;Decision Transformer: Reinforcement Learning via Sequence Modeling&lt;/a&gt; by Lili Chen, Kevin Lu, Aravind Rajeswaran, Kimin Lee, Aditya Grover, Michael Laskin, Pieter Abbeel, Aravind Srinivas, Igor Mordatch.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/deit&#34;&gt;DeiT&lt;/a&gt;&lt;/strong&gt; (from Facebook) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2012.12877&#34;&gt;Training data-efficient image transformers &amp;amp; distillation through attention&lt;/a&gt; by Hugo Touvron, Matthieu Cord, Matthijs Douze, Francisco Massa, Alexandre Sablayrolles, Herv√© J√©gou.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/detr&#34;&gt;DETR&lt;/a&gt;&lt;/strong&gt; (from Facebook) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2005.12872&#34;&gt;End-to-End Object Detection with Transformers&lt;/a&gt; by Nicolas Carion, Francisco Massa, Gabriel Synnaeve, Nicolas Usunier, Alexander Kirillov, Sergey Zagoruyko.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/dialogpt&#34;&gt;DialoGPT&lt;/a&gt;&lt;/strong&gt; (from Microsoft Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1911.00536&#34;&gt;DialoGPT: Large-Scale Generative Pre-training for Conversational Response Generation&lt;/a&gt; by Yizhe Zhang, Siqi Sun, Michel Galley, Yen-Chun Chen, Chris Brockett, Xiang Gao, Jianfeng Gao, Jingjing Liu, Bill Dolan.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/distilbert&#34;&gt;DistilBERT&lt;/a&gt;&lt;/strong&gt; (from HuggingFace), released together with the paper &lt;a href=&#34;https://arxiv.org/abs/1910.01108&#34;&gt;DistilBERT, a distilled version of BERT: smaller, faster, cheaper and lighter&lt;/a&gt; by Victor Sanh, Lysandre Debut and Thomas Wolf. The same method has been applied to compress GPT2 into &lt;a href=&#34;https://github.com/huggingface/transformers/tree/main/examples/research_projects/distillation&#34;&gt;DistilGPT2&lt;/a&gt;, RoBERTa into &lt;a href=&#34;https://github.com/huggingface/transformers/tree/main/examples/research_projects/distillation&#34;&gt;DistilRoBERTa&lt;/a&gt;, Multilingual BERT into &lt;a href=&#34;https://github.com/huggingface/transformers/tree/main/examples/research_projects/distillation&#34;&gt;DistilmBERT&lt;/a&gt; and a German version of DistilBERT.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/dit&#34;&gt;DiT&lt;/a&gt;&lt;/strong&gt; (from Microsoft Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2203.02378&#34;&gt;DiT: Self-supervised Pre-training for Document Image Transformer&lt;/a&gt; by Junlong Li, Yiheng Xu, Tengchao Lv, Lei Cui, Cha Zhang, Furu Wei.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/dpr&#34;&gt;DPR&lt;/a&gt;&lt;/strong&gt; (from Facebook) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2004.04906&#34;&gt;Dense Passage Retrieval for Open-Domain Question Answering&lt;/a&gt; by Vladimir Karpukhin, Barlas Oƒüuz, Sewon Min, Patrick Lewis, Ledell Wu, Sergey Edunov, Danqi Chen, and Wen-tau Yih.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/master/model_doc/dpt&#34;&gt;DPT&lt;/a&gt;&lt;/strong&gt; (from Intel Labs) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2103.13413&#34;&gt;Vision Transformers for Dense Prediction&lt;/a&gt; by Ren√© Ranftl, Alexey Bochkovskiy, Vladlen Koltun.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/electra&#34;&gt;ELECTRA&lt;/a&gt;&lt;/strong&gt; (from Google Research/Stanford University) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2003.10555&#34;&gt;ELECTRA: Pre-training text encoders as discriminators rather than generators&lt;/a&gt; by Kevin Clark, Minh-Thang Luong, Quoc V. Le, Christopher D. Manning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/encoder-decoder&#34;&gt;EncoderDecoder&lt;/a&gt;&lt;/strong&gt; (from Google Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1907.12461&#34;&gt;Leveraging Pre-trained Checkpoints for Sequence Generation Tasks&lt;/a&gt; by Sascha Rothe, Shashi Narayan, Aliaksei Severyn.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/flaubert&#34;&gt;FlauBERT&lt;/a&gt;&lt;/strong&gt; (from CNRS) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1912.05372&#34;&gt;FlauBERT: Unsupervised Language Model Pre-training for French&lt;/a&gt; by Hang Le, Lo√Øc Vial, Jibril Frej, Vincent Segonne, Maximin Coavoux, Benjamin Lecouteux, Alexandre Allauzen, Beno√Æt Crabb√©, Laurent Besacier, Didier Schwab.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/flava&#34;&gt;FLAVA&lt;/a&gt;&lt;/strong&gt; (from Facebook AI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2112.04482&#34;&gt;FLAVA: A Foundational Language And Vision Alignment Model&lt;/a&gt; by Amanpreet Singh, Ronghang Hu, Vedanuj Goswami, Guillaume Couairon, Wojciech Galuba, Marcus Rohrbach, and Douwe Kiela.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/fnet&#34;&gt;FNet&lt;/a&gt;&lt;/strong&gt; (from Google Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2105.03824&#34;&gt;FNet: Mixing Tokens with Fourier Transforms&lt;/a&gt; by James Lee-Thorp, Joshua Ainslie, Ilya Eckstein, Santiago Ontanon.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/funnel&#34;&gt;Funnel Transformer&lt;/a&gt;&lt;/strong&gt; (from CMU/Google Brain) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2006.03236&#34;&gt;Funnel-Transformer: Filtering out Sequential Redundancy for Efficient Language Processing&lt;/a&gt; by Zihang Dai, Guokun Lai, Yiming Yang, Quoc V. Le.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/glpn&#34;&gt;GLPN&lt;/a&gt;&lt;/strong&gt; (from KAIST) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2201.07436&#34;&gt;Global-Local Path Networks for Monocular Depth Estimation with Vertical CutDepth&lt;/a&gt; by Doyeon Kim, Woonghyun Ga, Pyungwhan Ahn, Donggyu Joo, Sehwan Chun, Junmo Kim.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/openai-gpt&#34;&gt;GPT&lt;/a&gt;&lt;/strong&gt; (from OpenAI) released with the paper &lt;a href=&#34;https://blog.openai.com/language-unsupervised/&#34;&gt;Improving Language Understanding by Generative Pre-Training&lt;/a&gt; by Alec Radford, Karthik Narasimhan, Tim Salimans and Ilya Sutskever.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/gpt_neo&#34;&gt;GPT Neo&lt;/a&gt;&lt;/strong&gt; (from EleutherAI) released in the repository &lt;a href=&#34;https://github.com/EleutherAI/gpt-neo&#34;&gt;EleutherAI/gpt-neo&lt;/a&gt; by Sid Black, Stella Biderman, Leo Gao, Phil Wang and Connor Leahy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/gpt_neox&#34;&gt;GPT NeoX&lt;/a&gt;&lt;/strong&gt; (from EleutherAI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2204.06745&#34;&gt;GPT-NeoX-20B: An Open-Source Autoregressive Language Model&lt;/a&gt; by Sid Black, Stella Biderman, Eric Hallahan, Quentin Anthony, Leo Gao, Laurence Golding, Horace He, Connor Leahy, Kyle McDonell, Jason Phang, Michael Pieler, USVSN Sai Prashanth, Shivanshu Purohit, Laria Reynolds, Jonathan Tow, Ben Wang, Samuel Weinbach&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/gpt2&#34;&gt;GPT-2&lt;/a&gt;&lt;/strong&gt; (from OpenAI) released with the paper &lt;a href=&#34;https://blog.openai.com/better-language-models/&#34;&gt;Language Models are Unsupervised Multitask Learners&lt;/a&gt; by Alec Radford*, Jeffrey Wu*, Rewon Child, David Luan, Dario Amodei** and Ilya Sutskever**.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/gptj&#34;&gt;GPT-J&lt;/a&gt;&lt;/strong&gt; (from EleutherAI) released in the repository &lt;a href=&#34;https://github.com/kingoflolz/mesh-transformer-jax/&#34;&gt;kingoflolz/mesh-transformer-jax&lt;/a&gt; by Ben Wang and Aran Komatsuzaki.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/groupvit&#34;&gt;GroupViT&lt;/a&gt;&lt;/strong&gt; (from UCSD, NVIDIA) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2202.11094&#34;&gt;GroupViT: Semantic Segmentation Emerges from Text Supervision&lt;/a&gt; by Jiarui Xu, Shalini De Mello, Sifei Liu, Wonmin Byeon, Thomas Breuel, Jan Kautz, Xiaolong Wang.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/hubert&#34;&gt;Hubert&lt;/a&gt;&lt;/strong&gt; (from Facebook) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2106.07447&#34;&gt;HuBERT: Self-Supervised Speech Representation Learning by Masked Prediction of Hidden Units&lt;/a&gt; by Wei-Ning Hsu, Benjamin Bolte, Yao-Hung Hubert Tsai, Kushal Lakhotia, Ruslan Salakhutdinov, Abdelrahman Mohamed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/ibert&#34;&gt;I-BERT&lt;/a&gt;&lt;/strong&gt; (from Berkeley) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2101.01321&#34;&gt;I-BERT: Integer-only BERT Quantization&lt;/a&gt; by Sehoon Kim, Amir Gholami, Zhewei Yao, Michael W. Mahoney, Kurt Keutzer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/imagegpt&#34;&gt;ImageGPT&lt;/a&gt;&lt;/strong&gt; (from OpenAI) released with the paper &lt;a href=&#34;https://openai.com/blog/image-gpt/&#34;&gt;Generative Pretraining from Pixels&lt;/a&gt; by Mark Chen, Alec Radford, Rewon Child, Jeffrey Wu, Heewoo Jun, David Luan, Ilya Sutskever.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/layoutlm&#34;&gt;LayoutLM&lt;/a&gt;&lt;/strong&gt; (from Microsoft Research Asia) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1912.13318&#34;&gt;LayoutLM: Pre-training of Text and Layout for Document Image Understanding&lt;/a&gt; by Yiheng Xu, Minghao Li, Lei Cui, Shaohan Huang, Furu Wei, Ming Zhou.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/layoutlmv2&#34;&gt;LayoutLMv2&lt;/a&gt;&lt;/strong&gt; (from Microsoft Research Asia) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2012.14740&#34;&gt;LayoutLMv2: Multi-modal Pre-training for Visually-Rich Document Understanding&lt;/a&gt; by Yang Xu, Yiheng Xu, Tengchao Lv, Lei Cui, Furu Wei, Guoxin Wang, Yijuan Lu, Dinei Florencio, Cha Zhang, Wanxiang Che, Min Zhang, Lidong Zhou.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/layoutlmv3&#34;&gt;LayoutLMv3&lt;/a&gt;&lt;/strong&gt; (from Microsoft Research Asia) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2204.08387&#34;&gt;LayoutLMv3: Pre-training for Document AI with Unified Text and Image Masking&lt;/a&gt; by Yupan Huang, Tengchao Lv, Lei Cui, Yutong Lu, Furu Wei.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/layoutlmv2&#34;&gt;LayoutXLM&lt;/a&gt;&lt;/strong&gt; (from Microsoft Research Asia) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2104.08836&#34;&gt;LayoutXLM: Multimodal Pre-training for Multilingual Visually-rich Document Understanding&lt;/a&gt; by Yiheng Xu, Tengchao Lv, Lei Cui, Guoxin Wang, Yijuan Lu, Dinei Florencio, Cha Zhang, Furu Wei.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/led&#34;&gt;LED&lt;/a&gt;&lt;/strong&gt; (from AllenAI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2004.05150&#34;&gt;Longformer: The Long-Document Transformer&lt;/a&gt; by Iz Beltagy, Matthew E. Peters, Arman Cohan.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/levit&#34;&gt;LeViT&lt;/a&gt;&lt;/strong&gt; (from Meta AI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2104.01136&#34;&gt;LeViT: A Vision Transformer in ConvNet&#39;s Clothing for Faster Inference&lt;/a&gt; by Ben Graham, Alaaeldin El-Nouby, Hugo Touvron, Pierre Stock, Armand Joulin, Herv√© J√©gou, Matthijs Douze.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/longformer&#34;&gt;Longformer&lt;/a&gt;&lt;/strong&gt; (from AllenAI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2004.05150&#34;&gt;Longformer: The Long-Document Transformer&lt;/a&gt; by Iz Beltagy, Matthew E. Peters, Arman Cohan.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/longt5&#34;&gt;LongT5&lt;/a&gt;&lt;/strong&gt; (from Google AI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2112.07916&#34;&gt;LongT5: Efficient Text-To-Text Transformer for Long Sequences&lt;/a&gt; by Mandy Guo, Joshua Ainslie, David Uthus, Santiago Ontanon, Jianmo Ni, Yun-Hsuan Sung, Yinfei Yang.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/luke&#34;&gt;LUKE&lt;/a&gt;&lt;/strong&gt; (from Studio Ousia) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2010.01057&#34;&gt;LUKE: Deep Contextualized Entity Representations with Entity-aware Self-attention&lt;/a&gt; by Ikuya Yamada, Akari Asai, Hiroyuki Shindo, Hideaki Takeda, Yuji Matsumoto.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/lxmert&#34;&gt;LXMERT&lt;/a&gt;&lt;/strong&gt; (from UNC Chapel Hill) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1908.07490&#34;&gt;LXMERT: Learning Cross-Modality Encoder Representations from Transformers for Open-Domain Question Answering&lt;/a&gt; by Hao Tan and Mohit Bansal.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/mctct&#34;&gt;M-CTC-T&lt;/a&gt;&lt;/strong&gt; (from Facebook) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2111.00161&#34;&gt;Pseudo-Labeling For Massively Multilingual Speech Recognition&lt;/a&gt; by Loren Lugosch, Tatiana Likhomanenko, Gabriel Synnaeve, and Ronan Collobert.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/m2m_100&#34;&gt;M2M100&lt;/a&gt;&lt;/strong&gt; (from Facebook) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2010.11125&#34;&gt;Beyond English-Centric Multilingual Machine Translation&lt;/a&gt; by Angela Fan, Shruti Bhosale, Holger Schwenk, Zhiyi Ma, Ahmed El-Kishky, Siddharth Goyal, Mandeep Baines, Onur Celebi, Guillaume Wenzek, Vishrav Chaudhary, Naman Goyal, Tom Birch, Vitaliy Liptchinsky, Sergey Edunov, Edouard Grave, Michael Auli, Armand Joulin.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/marian&#34;&gt;MarianMT&lt;/a&gt;&lt;/strong&gt; Machine translation models trained using &lt;a href=&#34;http://opus.nlpl.eu/&#34;&gt;OPUS&lt;/a&gt; data by J√∂rg Tiedemann. The &lt;a href=&#34;https://marian-nmt.github.io/&#34;&gt;Marian Framework&lt;/a&gt; is being developed by the Microsoft Translator Team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/maskformer&#34;&gt;MaskFormer&lt;/a&gt;&lt;/strong&gt; (from Meta and UIUC) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2107.06278&#34;&gt;Per-Pixel Classification is Not All You Need for Semantic Segmentation&lt;/a&gt; by Bowen Cheng, Alexander G. Schwing, Alexander Kirillov.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/mbart&#34;&gt;mBART&lt;/a&gt;&lt;/strong&gt; (from Facebook) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2001.08210&#34;&gt;Multilingual Denoising Pre-training for Neural Machine Translation&lt;/a&gt; by Yinhan Liu, Jiatao Gu, Naman Goyal, Xian Li, Sergey Edunov, Marjan Ghazvininejad, Mike Lewis, Luke Zettlemoyer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/mbart&#34;&gt;mBART-50&lt;/a&gt;&lt;/strong&gt; (from Facebook) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2008.00401&#34;&gt;Multilingual Translation with Extensible Multilingual Pretraining and Finetuning&lt;/a&gt; by Yuqing Tang, Chau Tran, Xian Li, Peng-Jen Chen, Naman Goyal, Vishrav Chaudhary, Jiatao Gu, Angela Fan.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/megatron-bert&#34;&gt;Megatron-BERT&lt;/a&gt;&lt;/strong&gt; (from NVIDIA) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1909.08053&#34;&gt;Megatron-LM: Training Multi-Billion Parameter Language Models Using Model Parallelism&lt;/a&gt; by Mohammad Shoeybi, Mostofa Patwary, Raul Puri, Patrick LeGresley, Jared Casper and Bryan Catanzaro.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/megatron_gpt2&#34;&gt;Megatron-GPT2&lt;/a&gt;&lt;/strong&gt; (from NVIDIA) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1909.08053&#34;&gt;Megatron-LM: Training Multi-Billion Parameter Language Models Using Model Parallelism&lt;/a&gt; by Mohammad Shoeybi, Mostofa Patwary, Raul Puri, Patrick LeGresley, Jared Casper and Bryan Catanzaro.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/mluke&#34;&gt;mLUKE&lt;/a&gt;&lt;/strong&gt; (from Studio Ousia) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2110.08151&#34;&gt;mLUKE: The Power of Entity Representations in Multilingual Pretrained Language Models&lt;/a&gt; by Ryokan Ri, Ikuya Yamada, and Yoshimasa Tsuruoka.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/mobilebert&#34;&gt;MobileBERT&lt;/a&gt;&lt;/strong&gt; (from CMU/Google Brain) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2004.02984&#34;&gt;MobileBERT: a Compact Task-Agnostic BERT for Resource-Limited Devices&lt;/a&gt; by Zhiqing Sun, Hongkun Yu, Xiaodan Song, Renjie Liu, Yiming Yang, and Denny Zhou.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/mobilevit&#34;&gt;MobileViT&lt;/a&gt;&lt;/strong&gt; (from Apple) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2110.02178&#34;&gt;MobileViT: Light-weight, General-purpose, and Mobile-friendly Vision Transformer&lt;/a&gt; by Sachin Mehta and Mohammad Rastegari.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/mpnet&#34;&gt;MPNet&lt;/a&gt;&lt;/strong&gt; (from Microsoft Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2004.09297&#34;&gt;MPNet: Masked and Permuted Pre-training for Language Understanding&lt;/a&gt; by Kaitao Song, Xu Tan, Tao Qin, Jianfeng Lu, Tie-Yan Liu.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/mt5&#34;&gt;MT5&lt;/a&gt;&lt;/strong&gt; (from Google AI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2010.11934&#34;&gt;mT5: A massively multilingual pre-trained text-to-text transformer&lt;/a&gt; by Linting Xue, Noah Constant, Adam Roberts, Mihir Kale, Rami Al-Rfou, Aditya Siddhant, Aditya Barua, Colin Raffel.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/mvp&#34;&gt;MVP&lt;/a&gt;&lt;/strong&gt; (from RUC AI Box) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2206.12131&#34;&gt;MVP: Multi-task Supervised Pre-training for Natural Language Generation&lt;/a&gt; by Tianyi Tang, Junyi Li, Wayne Xin Zhao and Ji-Rong Wen.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/nezha&#34;&gt;Nezha&lt;/a&gt;&lt;/strong&gt; (from Huawei Noah‚Äôs Ark Lab) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1909.00204&#34;&gt;NEZHA: Neural Contextualized Representation for Chinese Language Understanding&lt;/a&gt; by Junqiu Wei, Xiaozhe Ren, Xiaoguang Li, Wenyong Huang, Yi Liao, Yasheng Wang, Jiashu Lin, Xin Jiang, Xiao Chen and Qun Liu.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/nllb&#34;&gt;NLLB&lt;/a&gt;&lt;/strong&gt; (from Meta) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2207.04672&#34;&gt;No Language Left Behind: Scaling Human-Centered Machine Translation&lt;/a&gt; by the NLLB team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/nystromformer&#34;&gt;Nystr√∂mformer&lt;/a&gt;&lt;/strong&gt; (from the University of Wisconsin - Madison) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2102.03902&#34;&gt;Nystr√∂mformer: A Nystr√∂m-Based Algorithm for Approximating Self-Attention&lt;/a&gt; by Yunyang Xiong, Zhanpeng Zeng, Rudrasis Chakraborty, Mingxing Tan, Glenn Fung, Yin Li, Vikas Singh.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/master/model_doc/opt&#34;&gt;OPT&lt;/a&gt;&lt;/strong&gt; (from Meta AI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2205.01068&#34;&gt;OPT: Open Pre-trained Transformer Language Models&lt;/a&gt; by Susan Zhang, Stephen Roller, Naman Goyal, Mikel Artetxe, Moya Chen, Shuohui Chen et al.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/owlvit&#34;&gt;OWL-ViT&lt;/a&gt;&lt;/strong&gt; (from Google AI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2205.06230&#34;&gt;Simple Open-Vocabulary Object Detection with Vision Transformers&lt;/a&gt; by Matthias Minderer, Alexey Gritsenko, Austin Stone, Maxim Neumann, Dirk Weissenborn, Alexey Dosovitskiy, Aravindh Mahendran, Anurag Arnab, Mostafa Dehghani, Zhuoran Shen, Xiao Wang, Xiaohua Zhai, Thomas Kipf, and Neil Houlsby.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/pegasus&#34;&gt;Pegasus&lt;/a&gt;&lt;/strong&gt; (from Google) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1912.08777&#34;&gt;PEGASUS: Pre-training with Extracted Gap-sentences for Abstractive Summarization&lt;/a&gt; by Jingqing Zhang, Yao Zhao, Mohammad Saleh and Peter J. Liu.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/perceiver&#34;&gt;Perceiver IO&lt;/a&gt;&lt;/strong&gt; (from Deepmind) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2107.14795&#34;&gt;Perceiver IO: A General Architecture for Structured Inputs &amp;amp; Outputs&lt;/a&gt; by Andrew Jaegle, Sebastian Borgeaud, Jean-Baptiste Alayrac, Carl Doersch, Catalin Ionescu, David Ding, Skanda Koppula, Daniel Zoran, Andrew Brock, Evan Shelhamer, Olivier H√©naff, Matthew M. Botvinick, Andrew Zisserman, Oriol Vinyals, Jo√£o Carreira.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/phobert&#34;&gt;PhoBERT&lt;/a&gt;&lt;/strong&gt; (from VinAI Research) released with the paper &lt;a href=&#34;https://www.aclweb.org/anthology/2020.findings-emnlp.92/&#34;&gt;PhoBERT: Pre-trained language models for Vietnamese&lt;/a&gt; by Dat Quoc Nguyen and Anh Tuan Nguyen.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/plbart&#34;&gt;PLBart&lt;/a&gt;&lt;/strong&gt; (from UCLA NLP) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2103.06333&#34;&gt;Unified Pre-training for Program Understanding and Generation&lt;/a&gt; by Wasi Uddin Ahmad, Saikat Chakraborty, Baishakhi Ray, Kai-Wei Chang.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/poolformer&#34;&gt;PoolFormer&lt;/a&gt;&lt;/strong&gt; (from Sea AI Labs) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2111.11418&#34;&gt;MetaFormer is Actually What You Need for Vision&lt;/a&gt; by Yu, Weihao and Luo, Mi and Zhou, Pan and Si, Chenyang and Zhou, Yichen and Wang, Xinchao and Feng, Jiashi and Yan, Shuicheng.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/prophetnet&#34;&gt;ProphetNet&lt;/a&gt;&lt;/strong&gt; (from Microsoft Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2001.04063&#34;&gt;ProphetNet: Predicting Future N-gram for Sequence-to-Sequence Pre-training&lt;/a&gt; by Yu Yan, Weizhen Qi, Yeyun Gong, Dayiheng Liu, Nan Duan, Jiusheng Chen, Ruofei Zhang and Ming Zhou.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/qdqbert&#34;&gt;QDQBert&lt;/a&gt;&lt;/strong&gt; (from NVIDIA) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2004.09602&#34;&gt;Integer Quantization for Deep Learning Inference: Principles and Empirical Evaluation&lt;/a&gt; by Hao Wu, Patrick Judd, Xiaojie Zhang, Mikhail Isaev and Paulius Micikevicius.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/rag&#34;&gt;RAG&lt;/a&gt;&lt;/strong&gt; (from Facebook) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2005.11401&#34;&gt;Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks&lt;/a&gt; by Patrick Lewis, Ethan Perez, Aleksandara Piktus, Fabio Petroni, Vladimir Karpukhin, Naman Goyal, Heinrich K√ºttler, Mike Lewis, Wen-tau Yih, Tim Rockt√§schel, Sebastian Riedel, Douwe Kiela.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/realm.html&#34;&gt;REALM&lt;/a&gt;&lt;/strong&gt; (from Google Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2002.08909&#34;&gt;REALM: Retrieval-Augmented Language Model Pre-Training&lt;/a&gt; by Kelvin Guu, Kenton Lee, Zora Tung, Panupong Pasupat and Ming-Wei Chang.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/reformer&#34;&gt;Reformer&lt;/a&gt;&lt;/strong&gt; (from Google Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2001.04451&#34;&gt;Reformer: The Efficient Transformer&lt;/a&gt; by Nikita Kitaev, ≈Åukasz Kaiser, Anselm Levskaya.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/regnet&#34;&gt;RegNet&lt;/a&gt;&lt;/strong&gt; (from META Platforms) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2003.13678&#34;&gt;Designing Network Design Space&lt;/a&gt; by Ilija Radosavovic, Raj Prateek Kosaraju, Ross Girshick, Kaiming He, Piotr Doll√°r.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/rembert&#34;&gt;RemBERT&lt;/a&gt;&lt;/strong&gt; (from Google Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2010.12821&#34;&gt;Rethinking embedding coupling in pre-trained language models&lt;/a&gt; by Hyung Won Chung, Thibault F√©vry, Henry Tsai, M. Johnson, Sebastian Ruder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/resnet&#34;&gt;ResNet&lt;/a&gt;&lt;/strong&gt; (from Microsoft Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1512.03385&#34;&gt;Deep Residual Learning for Image Recognition&lt;/a&gt; by Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/roberta&#34;&gt;RoBERTa&lt;/a&gt;&lt;/strong&gt; (from Facebook), released together with the paper &lt;a href=&#34;https://arxiv.org/abs/1907.11692&#34;&gt;RoBERTa: A Robustly Optimized BERT Pretraining Approach&lt;/a&gt; by Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, Omer Levy, Mike Lewis, Luke Zettlemoyer, Veselin Stoyanov.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/roformer&#34;&gt;RoFormer&lt;/a&gt;&lt;/strong&gt; (from ZhuiyiTechnology), released together with the paper &lt;a href=&#34;https://arxiv.org/abs/2104.09864&#34;&gt;RoFormer: Enhanced Transformer with Rotary Position Embedding&lt;/a&gt; by Jianlin Su and Yu Lu and Shengfeng Pan and Bo Wen and Yunfeng Liu.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/segformer&#34;&gt;SegFormer&lt;/a&gt;&lt;/strong&gt; (from NVIDIA) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2105.15203&#34;&gt;SegFormer: Simple and Efficient Design for Semantic Segmentation with Transformers&lt;/a&gt; by Enze Xie, Wenhai Wang, Zhiding Yu, Anima Anandkumar, Jose M. Alvarez, Ping Luo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/sew&#34;&gt;SEW&lt;/a&gt;&lt;/strong&gt; (from ASAPP) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2109.06870&#34;&gt;Performance-Efficiency Trade-offs in Unsupervised Pre-training for Speech Recognition&lt;/a&gt; by Felix Wu, Kwangyoun Kim, Jing Pan, Kyu Han, Kilian Q. Weinberger, Yoav Artzi.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/sew_d&#34;&gt;SEW-D&lt;/a&gt;&lt;/strong&gt; (from ASAPP) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2109.06870&#34;&gt;Performance-Efficiency Trade-offs in Unsupervised Pre-training for Speech Recognition&lt;/a&gt; by Felix Wu, Kwangyoun Kim, Jing Pan, Kyu Han, Kilian Q. Weinberger, Yoav Artzi.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/speech_to_text&#34;&gt;SpeechToTextTransformer&lt;/a&gt;&lt;/strong&gt; (from Facebook), released together with the paper &lt;a href=&#34;https://arxiv.org/abs/2010.05171&#34;&gt;fairseq S2T: Fast Speech-to-Text Modeling with fairseq&lt;/a&gt; by Changhan Wang, Yun Tang, Xutai Ma, Anne Wu, Dmytro Okhonko, Juan Pino.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/speech_to_text_2&#34;&gt;SpeechToTextTransformer2&lt;/a&gt;&lt;/strong&gt; (from Facebook), released together with the paper &lt;a href=&#34;https://arxiv.org/abs/2104.06678&#34;&gt;Large-Scale Self- and Semi-Supervised Learning for Speech Translation&lt;/a&gt; by Changhan Wang, Anne Wu, Juan Pino, Alexei Baevski, Michael Auli, Alexis Conneau.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/splinter&#34;&gt;Splinter&lt;/a&gt;&lt;/strong&gt; (from Tel Aviv University), released together with the paper &lt;a href=&#34;https://arxiv.org/abs/2101.00438&#34;&gt;Few-Shot Question Answering by Pretraining Span Selection&lt;/a&gt; by Ori Ram, Yuval Kirstain, Jonathan Berant, Amir Globerson, Omer Levy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/squeezebert&#34;&gt;SqueezeBERT&lt;/a&gt;&lt;/strong&gt; (from Berkeley) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2006.11316&#34;&gt;SqueezeBERT: What can computer vision teach NLP about efficient neural networks?&lt;/a&gt; by Forrest N. Iandola, Albert E. Shaw, Ravi Krishna, and Kurt W. Keutzer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/swin&#34;&gt;Swin Transformer&lt;/a&gt;&lt;/strong&gt; (from Microsoft) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2103.14030&#34;&gt;Swin Transformer: Hierarchical Vision Transformer using Shifted Windows&lt;/a&gt; by Ze Liu, Yutong Lin, Yue Cao, Han Hu, Yixuan Wei, Zheng Zhang, Stephen Lin, Baining Guo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/main/model_doc/swinv2&#34;&gt;Swin Transformer V2&lt;/a&gt;&lt;/strong&gt; (from Microsoft) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2111.09883&#34;&gt;Swin Transformer V2: Scaling Up Capacity and Resolution&lt;/a&gt; by Ze Liu, Han Hu, Yutong Lin, Zhuliang Yao, Zhenda Xie, Yixuan Wei, Jia Ning, Yue Cao, Zheng Zhang, Li Dong, Furu Wei, Baining Guo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/t5&#34;&gt;T5&lt;/a&gt;&lt;/strong&gt; (from Google AI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1910.10683&#34;&gt;Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer&lt;/a&gt; by Colin Raffel and Noam Shazeer and Adam Roberts and Katherine Lee and Sharan Narang and Michael Matena and Yanqi Zhou and Wei Li and Peter J. Liu.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/t5v1.1&#34;&gt;T5v1.1&lt;/a&gt;&lt;/strong&gt; (from Google AI) released in the repository &lt;a href=&#34;https://github.com/google-research/text-to-text-transfer-transformer/raw/main/released_checkpoints.md#t511&#34;&gt;google-research/text-to-text-transfer-transformer&lt;/a&gt; by Colin Raffel and Noam Shazeer and Adam Roberts and Katherine Lee and Sharan Narang and Michael Matena and Yanqi Zhou and Wei Li and Peter J. Liu.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/tapas&#34;&gt;TAPAS&lt;/a&gt;&lt;/strong&gt; (from Google AI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2004.02349&#34;&gt;TAPAS: Weakly Supervised Table Parsing via Pre-training&lt;/a&gt; by Jonathan Herzig, Pawe≈Ç Krzysztof Nowak, Thomas M√ºller, Francesco Piccinno and Julian Martin Eisenschlos.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/tapex&#34;&gt;TAPEX&lt;/a&gt;&lt;/strong&gt; (from Microsoft Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2107.07653&#34;&gt;TAPEX: Table Pre-training via Learning a Neural SQL Executor&lt;/a&gt; by Qian Liu, Bei Chen, Jiaqi Guo, Morteza Ziyadi, Zeqi Lin, Weizhu Chen, Jian-Guang Lou.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/trajectory_transformers&#34;&gt;Trajectory Transformer&lt;/a&gt;&lt;/strong&gt; (from the University of California at Berkeley) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2106.02039&#34;&gt;Offline Reinforcement Learning as One Big Sequence Modeling Problem&lt;/a&gt; by Michael Janner, Qiyang Li, Sergey Levine&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/transfo-xl&#34;&gt;Transformer-XL&lt;/a&gt;&lt;/strong&gt; (from Google/CMU) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1901.02860&#34;&gt;Transformer-XL: Attentive Language Models Beyond a Fixed-Length Context&lt;/a&gt; by Zihang Dai*, Zhilin Yang*, Yiming Yang, Jaime Carbonell, Quoc V. Le, Ruslan Salakhutdinov.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/trocr&#34;&gt;TrOCR&lt;/a&gt;&lt;/strong&gt; (from Microsoft), released together with the paper &lt;a href=&#34;https://arxiv.org/abs/2109.10282&#34;&gt;TrOCR: Transformer-based Optical Character Recognition with Pre-trained Models&lt;/a&gt; by Minghao Li, Tengchao Lv, Lei Cui, Yijuan Lu, Dinei Florencio, Cha Zhang, Zhoujun Li, Furu Wei.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/ul2&#34;&gt;UL2&lt;/a&gt;&lt;/strong&gt; (from Google Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2205.05131v1&#34;&gt;Unifying Language Learning Paradigms&lt;/a&gt; by Yi Tay, Mostafa Dehghani, Vinh Q. Tran, Xavier Garcia, Dara Bahri, Tal Schuster, Huaixiu Steven Zheng, Neil Houlsby, Donald Metzler&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/unispeech&#34;&gt;UniSpeech&lt;/a&gt;&lt;/strong&gt; (from Microsoft Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2101.07597&#34;&gt;UniSpeech: Unified Speech Representation Learning with Labeled and Unlabeled Data&lt;/a&gt; by Chengyi Wang, Yu Wu, Yao Qian, Kenichi Kumatani, Shujie Liu, Furu Wei, Michael Zeng, Xuedong Huang.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/unispeech-sat&#34;&gt;UniSpeechSat&lt;/a&gt;&lt;/strong&gt; (from Microsoft Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2110.05752&#34;&gt;UNISPEECH-SAT: UNIVERSAL SPEECH REPRESENTATION LEARNING WITH SPEAKER AWARE PRE-TRAINING&lt;/a&gt; by Sanyuan Chen, Yu Wu, Chengyi Wang, Zhengyang Chen, Zhuo Chen, Shujie Liu, Jian Wu, Yao Qian, Furu Wei, Jinyu Li, Xiangzhan Yu.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/van&#34;&gt;VAN&lt;/a&gt;&lt;/strong&gt; (from Tsinghua University and Nankai University) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2202.09741&#34;&gt;Visual Attention Network&lt;/a&gt; by Meng-Hao Guo, Cheng-Ze Lu, Zheng-Ning Liu, Ming-Ming Cheng, Shi-Min Hu.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/main/model_doc/videomae&#34;&gt;VideoMAE&lt;/a&gt;&lt;/strong&gt; (from Multimedia Computing Group, Nanjing University) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2203.12602&#34;&gt;VideoMAE: Masked Autoencoders are Data-Efficient Learners for Self-Supervised Video Pre-Training&lt;/a&gt; by Zhan Tong, Yibing Song, Jue Wang, Limin Wang.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/vilt&#34;&gt;ViLT&lt;/a&gt;&lt;/strong&gt; (from NAVER AI Lab/Kakao Enterprise/Kakao Brain) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2102.03334&#34;&gt;ViLT: Vision-and-Language Transformer Without Convolution or Region Supervision&lt;/a&gt; by Wonjae Kim, Bokyung Son, Ildoo Kim.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/vit&#34;&gt;Vision Transformer (ViT)&lt;/a&gt;&lt;/strong&gt; (from Google AI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2010.11929&#34;&gt;An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale&lt;/a&gt; by Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, Jakob Uszkoreit, Neil Houlsby.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/visual_bert&#34;&gt;VisualBERT&lt;/a&gt;&lt;/strong&gt; (from UCLA NLP) released with the paper &lt;a href=&#34;https://arxiv.org/pdf/1908.03557&#34;&gt;VisualBERT: A Simple and Performant Baseline for Vision and Language&lt;/a&gt; by Liunian Harold Li, Mark Yatskar, Da Yin, Cho-Jui Hsieh, Kai-Wei Chang.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/vit_mae&#34;&gt;ViTMAE&lt;/a&gt;&lt;/strong&gt; (from Meta AI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2111.06377&#34;&gt;Masked Autoencoders Are Scalable Vision Learners&lt;/a&gt; by Kaiming He, Xinlei Chen, Saining Xie, Yanghao Li, Piotr Doll√°r, Ross Girshick.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/wav2vec2&#34;&gt;Wav2Vec2&lt;/a&gt;&lt;/strong&gt; (from Facebook AI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2006.11477&#34;&gt;wav2vec 2.0: A Framework for Self-Supervised Learning of Speech Representations&lt;/a&gt; by Alexei Baevski, Henry Zhou, Abdelrahman Mohamed, Michael Auli.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/wav2vec2-conformer&#34;&gt;Wav2Vec2-Conformer&lt;/a&gt;&lt;/strong&gt; (from Facebook AI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2010.05171&#34;&gt;FAIRSEQ S2T: Fast Speech-to-Text Modeling with FAIRSEQ&lt;/a&gt; by Changhan Wang, Yun Tang, Xutai Ma, Anne Wu, Sravya Popuri, Dmytro Okhonko, Juan Pino.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/wav2vec2_phoneme&#34;&gt;Wav2Vec2Phoneme&lt;/a&gt;&lt;/strong&gt; (from Facebook AI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2109.11680&#34;&gt;Simple and Effective Zero-shot Cross-lingual Phoneme Recognition&lt;/a&gt; by Qiantong Xu, Alexei Baevski, Michael Auli.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/wavlm&#34;&gt;WavLM&lt;/a&gt;&lt;/strong&gt; (from Microsoft Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2110.13900&#34;&gt;WavLM: Large-Scale Self-Supervised Pre-Training for Full Stack Speech Processing&lt;/a&gt; by Sanyuan Chen, Chengyi Wang, Zhengyang Chen, Yu Wu, Shujie Liu, Zhuo Chen, Jinyu Li, Naoyuki Kanda, Takuya Yoshioka, Xiong Xiao, Jian Wu, Long Zhou, Shuo Ren, Yanmin Qian, Yao Qian, Jian Wu, Michael Zeng, Furu Wei.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/xglm&#34;&gt;XGLM&lt;/a&gt;&lt;/strong&gt; (From Facebook AI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2112.10668&#34;&gt;Few-shot Learning with Multilingual Language Models&lt;/a&gt; by Xi Victoria Lin, Todor Mihaylov, Mikel Artetxe, Tianlu Wang, Shuohui Chen, Daniel Simig, Myle Ott, Naman Goyal, Shruti Bhosale, Jingfei Du, Ramakanth Pasunuru, Sam Shleifer, Punit Singh Koura, Vishrav Chaudhary, Brian O&#39;Horo, Jeff Wang, Luke Zettlemoyer, Zornitsa Kozareva, Mona Diab, Veselin Stoyanov, Xian Li.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/xlm&#34;&gt;XLM&lt;/a&gt;&lt;/strong&gt; (from Facebook) released together with the paper &lt;a href=&#34;https://arxiv.org/abs/1901.07291&#34;&gt;Cross-lingual Language Model Pretraining&lt;/a&gt; by Guillaume Lample and Alexis Conneau.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/xlm-prophetnet&#34;&gt;XLM-ProphetNet&lt;/a&gt;&lt;/strong&gt; (from Microsoft Research) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2001.04063&#34;&gt;ProphetNet: Predicting Future N-gram for Sequence-to-Sequence Pre-training&lt;/a&gt; by Yu Yan, Weizhen Qi, Yeyun Gong, Dayiheng Liu, Nan Duan, Jiusheng Chen, Ruofei Zhang and Ming Zhou.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/xlm-roberta&#34;&gt;XLM-RoBERTa&lt;/a&gt;&lt;/strong&gt; (from Facebook AI), released together with the paper &lt;a href=&#34;https://arxiv.org/abs/1911.02116&#34;&gt;Unsupervised Cross-lingual Representation Learning at Scale&lt;/a&gt; by Alexis Conneau*, Kartikay Khandelwal*, Naman Goyal, Vishrav Chaudhary, Guillaume Wenzek, Francisco Guzm√°n, Edouard Grave, Myle Ott, Luke Zettlemoyer and Veselin Stoyanov.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/xlm-roberta-xl&#34;&gt;XLM-RoBERTa-XL&lt;/a&gt;&lt;/strong&gt; (from Facebook AI), released together with the paper &lt;a href=&#34;https://arxiv.org/abs/2105.00572&#34;&gt;Larger-Scale Transformers for Multilingual Masked Language Modeling&lt;/a&gt; by Naman Goyal, Jingfei Du, Myle Ott, Giri Anantharaman, Alexis Conneau.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/xlnet&#34;&gt;XLNet&lt;/a&gt;&lt;/strong&gt; (from Google/CMU) released with the paper &lt;a href=&#34;https://arxiv.org/abs/1906.08237&#34;&gt;‚ÄãXLNet: Generalized Autoregressive Pretraining for Language Understanding&lt;/a&gt; by Zhilin Yang*, Zihang Dai*, Yiming Yang, Jaime Carbonell, Ruslan Salakhutdinov, Quoc V. Le.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/xls_r&#34;&gt;XLS-R&lt;/a&gt;&lt;/strong&gt; (from Facebook AI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2111.09296&#34;&gt;XLS-R: Self-supervised Cross-lingual Speech Representation Learning at Scale&lt;/a&gt; by Arun Babu, Changhan Wang, Andros Tjandra, Kushal Lakhotia, Qiantong Xu, Naman Goyal, Kritika Singh, Patrick von Platen, Yatharth Saraf, Juan Pino, Alexei Baevski, Alexis Conneau, Michael Auli.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/xlsr_wav2vec2&#34;&gt;XLSR-Wav2Vec2&lt;/a&gt;&lt;/strong&gt; (from Facebook AI) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2006.13979&#34;&gt;Unsupervised Cross-Lingual Representation Learning For Speech Recognition&lt;/a&gt; by Alexis Conneau, Alexei Baevski, Ronan Collobert, Abdelrahman Mohamed, Michael Auli.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/yolos&#34;&gt;YOLOS&lt;/a&gt;&lt;/strong&gt; (from Huazhong University of Science &amp;amp; Technology) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2106.00666&#34;&gt;You Only Look at One Sequence: Rethinking Transformer in Vision through Object Detection&lt;/a&gt; by Yuxin Fang, Bencheng Liao, Xinggang Wang, Jiemin Fang, Jiyang Qi, Rui Wu, Jianwei Niu, Wenyu Liu.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_doc/yoso&#34;&gt;YOSO&lt;/a&gt;&lt;/strong&gt; (from the University of Wisconsin - Madison) released with the paper &lt;a href=&#34;https://arxiv.org/abs/2111.09714&#34;&gt;You Only Sample (Almost) Once: Linear Cost Self-Attention Via Bernoulli Sampling&lt;/a&gt; by Zhanpeng Zeng, Yunyang Xiong, Sathya N. Ravi, Shailesh Acharya, Glenn Fung, Vikas Singh.&lt;/li&gt; &#xA; &lt;li&gt;Want to contribute a new model? We have added a &lt;strong&gt;detailed guide and templates&lt;/strong&gt; to guide you in the process of adding a new model. You can find them in the &lt;a href=&#34;https://raw.githubusercontent.com/huggingface/transformers/main/templates&#34;&gt;&lt;code&gt;templates&lt;/code&gt;&lt;/a&gt; folder of the repository. Be sure to check the &lt;a href=&#34;https://raw.githubusercontent.com/huggingface/transformers/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; and contact the maintainers or open an issue to collect feedbacks before starting your PR.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To check if each model has an implementation in Flax, PyTorch or TensorFlow, or has an associated tokenizer backed by the ü§ó Tokenizers library, refer to &lt;a href=&#34;https://huggingface.co/docs/transformers/index#supported-frameworks&#34;&gt;this table&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;These implementations have been tested on several datasets (see the example scripts) and should match the performance of the original implementations. You can find more details on performance in the Examples section of the &lt;a href=&#34;https://huggingface.co/docs/transformers/examples&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Learn more&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Section&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/&#34;&gt;Documentation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Full API documentation and tutorials&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/task_summary&#34;&gt;Task summary&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tasks supported by ü§ó Transformers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/preprocessing&#34;&gt;Preprocessing tutorial&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Using the &lt;code&gt;Tokenizer&lt;/code&gt; class to prepare data for the models&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/training&#34;&gt;Training and fine-tuning&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Using the models provided by ü§ó Transformers in a PyTorch/TensorFlow training loop and the &lt;code&gt;Trainer&lt;/code&gt; API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/huggingface/transformers/tree/main/examples&#34;&gt;Quick tour: Fine-tuning/usage scripts&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Example scripts for fine-tuning models on a wide range of tasks&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/model_sharing&#34;&gt;Model sharing and uploading&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Upload and share your fine-tuned models with the community&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/docs/transformers/migration&#34;&gt;Migration&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Migrate to ü§ó Transformers from &lt;code&gt;pytorch-transformers&lt;/code&gt; or &lt;code&gt;pytorch-pretrained-bert&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;We now have a &lt;a href=&#34;https://www.aclweb.org/anthology/2020.emnlp-demos.6/&#34;&gt;paper&lt;/a&gt; you can cite for the ü§ó Transformers library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{wolf-etal-2020-transformers,&#xA;    title = &#34;Transformers: State-of-the-Art Natural Language Processing&#34;,&#xA;    author = &#34;Thomas Wolf and Lysandre Debut and Victor Sanh and Julien Chaumond and Clement Delangue and Anthony Moi and Pierric Cistac and Tim Rault and R√©mi Louf and Morgan Funtowicz and Joe Davison and Sam Shleifer and Patrick von Platen and Clara Ma and Yacine Jernite and Julien Plu and Canwen Xu and Teven Le Scao and Sylvain Gugger and Mariama Drame and Quentin Lhoest and Alexander M. Rush&#34;,&#xA;    booktitle = &#34;Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing: System Demonstrations&#34;,&#xA;    month = oct,&#xA;    year = &#34;2020&#34;,&#xA;    address = &#34;Online&#34;,&#xA;    publisher = &#34;Association for Computational Linguistics&#34;,&#xA;    url = &#34;https://www.aclweb.org/anthology/2020.emnlp-demos.6&#34;,&#xA;    pages = &#34;38--45&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>jxxghp/nas-tools</title>
    <updated>2022-08-12T01:31:53Z</updated>
    <id>tag:github.com,2022-08-12:/jxxghp/nas-tools</id>
    <link href="https://github.com/jxxghp/nas-tools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NASÂ™í‰ΩìÂ∫ìËµÑÊ∫êÂΩíÈõÜ„ÄÅÊï¥ÁêÜËá™Âä®ÂåñÂ∑•ÂÖ∑&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NASÂ™í‰ΩìÂ∫ìËµÑÊ∫êÂΩíÈõÜÊï¥ÁêÜÂ∑•ÂÖ∑&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jxxghp/nas-tools/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/jxxghp/nas-tools?style=plastic&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jxxghp/nas-tools/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/jxxghp/nas-tools?style=plastic&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jxxghp/nas-tools/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/jxxghp/nas-tools?style=plastic&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jxxghp/nas-tools/raw/master/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/jxxghp/nas-tools?style=plastic&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;DockerÔºö&lt;a href=&#34;https://hub.docker.com/repository/docker/jxxghp/nas-tools&#34;&gt;https://hub.docker.com/repository/docker/jxxghp/nas-tools&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Áæ§ÊôñÂ•ó‰ª∂Ôºö&lt;a href=&#34;https://github.com/jxxghp/nas-tools/releases&#34;&gt;https://github.com/jxxghp/nas-tools/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;TGÈ¢ëÈÅìÔºö&lt;a href=&#34;https://t.me/nastool&#34;&gt;https://t.me/nastool&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;WIKIÔºö&lt;a href=&#34;https://github.com/jxxghp/nas-tools/wiki&#34;&gt;https://github.com/jxxghp/nas-tools/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ÈÖçÁΩÆÊñá‰ª∂Ê®°ÊùøÔºö&lt;a href=&#34;https://github.com/jxxghp/nas-tools/raw/master/config/config.yaml&#34;&gt;https://github.com/jxxghp/nas-tools/blob/master/config/config.yaml&lt;/a&gt; ÔºàÁé∞Â∑≤ÂèØÈÄöËøáWEBÁïåÈù¢ÈÖçÁΩÆÔºå‰ΩÜÈáåÈù¢ÁöÑÊ≥®ÈáäÂèØ‰ª•ÂèÇËÄÉÔºâ&lt;/p&gt; &#xA;&lt;h2&gt;ÂäüËÉΩÔºö&lt;/h2&gt; &#xA;&lt;h3&gt;1„ÄÅËµÑÊ∫êÊ£ÄÁ¥¢ÂíåËÆ¢ÈòÖ&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Á´ôÁÇπRSSËÅöÂêàÔºåÊÉ≥ÁúãÁöÑÂä†ÂÖ•ËÆ¢ÈòÖÔºåËµÑÊ∫êËá™Âä®ÂÆûÊó∂ËøΩÊñ∞„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;ÈÄöËøáÂæÆ‰ø°„ÄÅTelegramÊàñËÄÖWEBÁïåÈù¢ËÅöÂêàËµÑÊ∫êÊêúÁ¥¢‰∏ãËΩΩÔºåÊúÄÊñ∞ÁÉ≠Èó®ËµÑÊ∫ê‰∏ÄÈîÆÊêúÁ¥¢ÊàñËÄÖËÆ¢ÈòÖ„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;‰∏éË±ÜÁì£ËÅîÂä®ÔºåÂú®Ë±ÜÁì£‰∏≠Ê†áËÆ∞ÊÉ≥ÁúãÂêéÂè∞Ëá™Âä®Ê£ÄÁ¥¢‰∏ãËΩΩÔºåÊú™Âá∫ÂÖ®ÁöÑËá™Âä®Âä†ÂÖ•ËÆ¢ÈòÖ„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2„ÄÅÂ™í‰ΩìÂ∫ìÊï¥ÁêÜ&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÁõëÊéß‰∏ãËΩΩËΩØ‰ª∂Ôºå‰∏ãËΩΩÂÆåÊàêÂêéËá™Âä®ËØÜÂà´ÁúüÂÆûÂêçÁß∞ÔºåÁ°¨ÈìæÊé•Âà∞Â™í‰ΩìÂ∫ìÂπ∂ÈáçÂëΩÂêç„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;ÂØπÁõÆÂΩïËøõË°åÁõëÊéßÔºåÊñá‰ª∂ÂèòÂåñÊó∂Ëá™Âä®ËØÜÂà´Â™í‰Ωì‰ø°ÊÅØÁ°¨ÈìæÊé•Âà∞Â™í‰ΩìÂ∫ìÂπ∂ÈáçÂëΩÂêç„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;Ëß£ÂÜ≥‰øùÁßç‰∏éÂ™í‰ΩìÂ∫ìÊï¥ÁêÜÂÜ≤Á™ÅÁöÑÈóÆÈ¢òÔºå‰∏ì‰∏∫‰∏≠ÊñáÁéØÂ¢É‰ºòÂåñÔºåÊîØÊåÅÂõΩ‰∫ßÂâßÈõÜÂíåÂä®Êº´ÔºåÈáçÂëΩÂêçÂáÜÁ°ÆÁéáÈ´òÔºåÊîπÂêçÂêéEmby/Jellyfin/Plex 100%ÊêúÂàÆ„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3„ÄÅÁ´ôÁÇπÂÖªÊä§&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÂÖ®Èù¢ÁöÑÁ´ôÁÇπÊï∞ÊçÆÁªüËÆ°ÔºåÂÆûÊó∂ÁõëÊµã‰Ω†ÁöÑÁ´ôÁÇπÊµÅÈáèÊÉÖÂÜµ„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;ÂÖ®Ëá™Âä®ÂåñÊâòÁÆ°ÂÖªÁ´ôÔºåÊîØÊåÅËøúÁ®ã‰∏ãËΩΩÂô®„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;Á´ôÁÇπÊØèÊó•Ëá™Âä®ÁôªÂΩï‰øùÂè∑„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4„ÄÅÊ∂àÊÅØÊúçÂä°&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÊîØÊåÅServerChan„ÄÅÂæÆ‰ø°„ÄÅTelegram„ÄÅBarkÁ≠âÂõæÊñáÊ∂àÊÅØÈÄöÁü•&lt;/li&gt; &#xA; &lt;li&gt;ÊîØÊåÅÈÄöËøáÂæÆ‰ø°„ÄÅTelegramËøúÁ®ãÊéßÂà∂ËÆ¢ÈòÖÂíå‰∏ãËΩΩ„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;Emby/Jellyfin/PlexÊí≠ÊîæÁä∂ÊÄÅÈÄöÁü•„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Êõ¥Êñ∞Êó•Âøó&lt;/h2&gt; &#xA;&lt;p&gt;2022.7.11&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÂæÆ‰ø°Ê∂àÊÅØÊé®ÈÄÅÊîØÊåÅËÆæÁΩÆ‰ª£ÁêÜÊúçÂä°ÔºåÊõ¥Âä†Âº∫Â§ßÁöÑËøáÊª§ËßÑÂàôËÆæÁΩÆ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.7.8&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Êñ∞Â¢ûËá™Âä®ÂåñÊâòÁÆ°Âà∑ÊµÅÂäüËÉΩ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.6.11&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Êñ∞Â¢ûËÆ¢ÈòÖÊó•ÂéÜ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.6.1&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Êñ∞Â¢ûËøëÊúü‰∏ãËΩΩ&lt;/li&gt; &#xA; &lt;li&gt;Êñ∞Â¢ûTMDBÁºìÂ≠òÁÆ°ÁêÜ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.5.24&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Êñ∞Â¢ûÁ´ôÁÇπÊï∞ÊçÆÁªüËÆ°&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.5.18&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÊîØÊåÅOpensubtitles.org„ÄÅChineseSubFinder‰∏ãËΩΩÂ≠óÂπï&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.5.4&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÊîØÊåÅPlex&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.5.1&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÊîØÊåÅ‰∏çËØÜÂà´ÈáçÂëΩÂêçÁõ¥Êé•ÂØπÁõÆÂΩïËøõË°åÁ°¨ÈìæÊé•ÂêåÊ≠•&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.4.27&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RSSÊîØÊåÅÂÖ®Â±Ä‰ºòÂÖàËßÑÂàô&lt;/li&gt; &#xA; &lt;li&gt;Á®ãÂ∫èÊâÄÊúâËÆæÁΩÆÂèØÈÄöËøáWEBËøõË°åÈÖçÁΩÆ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.4.23&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÊîØÊåÅËÆæÂÆö‰ºòÂÖàËßÑÂàôÊ£ÄÁ¥¢Âíå‰∏ãËΩΩËµÑÊ∫êÔºåÂÆûÁé∞Â≠óÂπï„ÄÅÈÖçÈü≥Á≠âÊã©‰ºò&lt;/li&gt; &#xA; &lt;li&gt;RSSÂèäËµÑÊ∫êÊ£ÄÁ¥¢ÁöÑËøáÊª§ËßÑÂàôÁé∞Âú®ÈÄöËøáWEBÈ°µÈù¢ËÆæÁΩÆ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.4.19&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÊîØÊåÅprowlarrÂÅö‰∏∫Ê£ÄÁ¥¢Âô®&lt;/li&gt; &#xA; &lt;li&gt;ÊîØÊåÅJellyfinÂÅö‰∏∫Â™í‰ΩìÊúçÂä°Âô®&lt;/li&gt; &#xA; &lt;li&gt;ÊîØÊåÅTelegram BotËøúÁ®ãËøêË°åÊúçÂä°ÂèäPTÊ£ÄÁ¥¢‰∏ãËΩΩ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.4.17&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÊîØÊåÅWindowsËøêË°å&lt;/li&gt; &#xA; &lt;li&gt;‰ºòÂåñÂ™í‰Ωì‰ø°ÊÅØÊ£ÄÁ¥¢ÂåπÈÖç&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.4.14&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Â™í‰ΩìÂ∫ìÊîØÊåÅÂ§öÁõÆÂΩïÔºåÊîØÊåÅÂ§öÁ°¨Áõò/Â≠òÂÇ®Á©∫Èó¥ÁªÑÂ™í‰ΩìÂ∫ì&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.4.12&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÊîØÊåÅÈÖçÁΩÆ‰ª£ÁêÜ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.4.8&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RSSËÆ¢ÈòÖÂèäPTËµÑÊ∫êÊ£ÄÁ¥¢ÊîØÊåÅÊåâÂÖ≥ÈîÆÂ≠óÂíåÊñá‰ª∂Â§ßÂ∞èÁÅµÊ¥ªËøáÊª§&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.4.2&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÊîØÊåÅÂØπËØÜÂà´ÈîôËØØÁöÑËÆ∞ÂΩïÊâãÂ∑•ÈáçÊñ∞ËØÜÂà´ËΩ¨Áßª&lt;/li&gt; &#xA; &lt;li&gt;ÊîØÊåÅËá™ÂÆö‰πâÂàÜÁ±ª&lt;/li&gt; &#xA; &lt;li&gt;ÊîØÊåÅÂä®Êº´ËØÜÂà´Ôºà‰ΩøÁî® &lt;a href=&#34;https://github.com/igorcmoura/anitopy&#34; target=&#34;_blank&#34;&gt;anitopy&lt;/a&gt;Ôºâ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.3.27&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÊîØÊåÅÊü•ËØ¢ËØÜÂà´ËΩ¨ÁßªÂéÜÂè≤ËÆ∞ÂΩï&lt;/li&gt; &#xA; &lt;li&gt;ÂØπ‰∫éËá™Âä®ËØÜÂà´Â§±Ë¥•ÁöÑËÆ∞ÂΩïÔºåÊîØÊåÅÊâãÂ∑•ËØÜÂà´ËΩ¨Áßª&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.3.18&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÂÖ®Êñ∞ÁöÑWEB UIÔºåÂ™í‰ΩìÂ∫ì„ÄÅÊêúÁ¥¢„ÄÅÊé®Ëçê„ÄÅ‰∏ãËΩΩ„ÄÅÊúçÂä°Á≠âÂäüËÉΩ‰∏äÁ∫ø&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.3.13&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Êï¥Âêà &lt;a href=&#34;https://github.com/Qliangw/notion_sync_data&#34; target=&#34;_blank&#34;&gt;Qliangw&lt;/a&gt; Êèê‰æõÁöÑË±ÜÁì£ÂêåÊ≠•ÈÉ®ÂàÜ‰ª£Á†ÅÔºåÊîØÊåÅÂêåÊ≠•Ë±ÜÁì£Êî∂ËóèËÆ∞ÂΩïÔºåÂêéÂè∞Ëá™Âä®‰∏ãËΩΩ„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.3.9&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÊîØÊåÅWEBËµÑÊ∫êÊ£ÄÁ¥¢ÔºåÊâãÂä®ÈÄâÁßç‰∏ãËΩΩ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.3.4&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÊîØÊåÅJackettËÅöÂêàÊ£ÄÁ¥¢ÔºåÂæÆ‰ø°ÂèëÈÄÅÂÖ≥ÈîÆÂ≠óÁõ¥Êé•Ê£ÄÁ¥¢‰∏ãËΩΩ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.3.3&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‰ºòÂåñÊñá‰ª∂ÂêçËØÜÂà´Á≠ñÁï•&lt;/li&gt; &#xA; &lt;li&gt;RSSËÆ¢ÈòÖÊú∫Âà∂‰ºòÂåñ&lt;/li&gt; &#xA; &lt;li&gt;DockerÂêØÂä®Êó∂Ëá™Âä®Ê£ÄÊü•ÂçáÁ∫ß&lt;/li&gt; &#xA; &lt;li&gt;ÈÄöÁü•Êé®ÈÄÅÊîØÊåÅBark&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.2.28&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÊîØÊåÅRSSÁÆÄÂçïÁ≠ñÁï•ÈÄâÁßç&lt;/li&gt; &#xA; &lt;li&gt;‰ºòÂåñÂõæÊñáÊ∂àÊÅØÊé®ÈÄÅÂèäÂ™í‰ΩìÊï¥ÁêÜ&lt;/li&gt; &#xA; &lt;li&gt;Âà†Èô§‰∫ÜÂéüÊù•ÊâìÁÆóÊï¥ÂêàÁöÑÂéüÂºÄÊ∫ê‰ª£Á†Å&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.2.26&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Êñ∞Â¢ûÁâàÊú¨Âè∑ÁÆ°ÁêÜ&lt;/li&gt; &#xA; &lt;li&gt;‰ºòÂåñÁõÆÂΩïÂêåÊ≠•„ÄÅÊñá‰ª∂ËØÜÂà´„ÄÅÊ∂àÊÅØÊé®ÈÄÅÂ§ÑÁêÜÈÄªËæë&lt;/li&gt; &#xA; &lt;li&gt;‰ºòÂåñWEBUI RSSÂÖ≥ÈîÆÂ≠óËÆæÁΩÆÊìç‰Ωú‰ΩìÈ™å&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.2.24&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Êñ∞Â¢û‰∏ãËΩΩ„ÄÅËΩ¨ÁßªÂÆåÊàêÊîØÊåÅÂõæÊñáÊ∂àÊÅØÔºàÂæÆ‰ø°„ÄÅtelegramÔºâ&lt;/li&gt; &#xA; &lt;li&gt;ÁõÆÂΩïÂêåÊ≠•Á°¨ÈìæÊé•ÊîØÊåÅÂ§öÂØπÂ§öÔºåËØ¶ÊÉÖÂèÇËÄÉÈÖçÁΩÆÊñá‰ª∂Ê®°ÊùøÊ≥®Èáä&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2022.2.19&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Â¢ûÂä†Â≠òÈáèËµÑÊ∫êÊï¥ÁêÜÂ∑•ÂÖ∑ÂèäËØ¥ÊòéÔºåÂ∞ÜÂ∑≤ÊúâÁöÑÂ≠òÈáèËµÑÊ∫êÊâπÈáèÊï¥ÁêÜÊàêÂ™í‰ΩìÂ∫ì&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ÂÆâË£Ö&lt;/h2&gt; &#xA;&lt;h3&gt;1„ÄÅDocker&lt;/h3&gt; &#xA;&lt;p&gt;ÊïôÁ®ãËßÅ &lt;a href=&#34;https://raw.githubusercontent.com/jxxghp/nas-tools/master/docker/readme.md&#34;&gt;ËøôÈáå&lt;/a&gt; „ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;2„ÄÅÊú¨Âú∞ËøêË°å&lt;/h3&gt; &#xA;&lt;p&gt;python3ÁâàÊú¨&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 -m pip install -r requirements.txt&#xA;export NASTOOL_CONFIG=&#34;/xxx/config/config.yaml&#34;&#xA;nohup python3 run.py &amp;amp; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3„ÄÅÁæ§ÊôñÂ•ó‰ª∂&lt;/h3&gt; &#xA;&lt;p&gt;‰ªÖÈÄÇÁî®‰∫édsm6Ôºå‰æùËµñpython3Â•ó‰ª∂„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Â•ó‰ª∂ÁâàÊú¨‰∏çÊîØÊåÅËá™Âä®ÂçáÁ∫ß‰∏îÈÉ®ÂàÜÂäüËÉΩÊó†Ê≥ï‰ΩøÁî®ÔºàÊØîÂ¶ÇWEBÈ°µÈù¢ÈáçÂêØÂíåÊõ¥Êñ∞ÔºâÔºåÊé®Ëçê‰ΩøÁî®DockerÁâàÊú¨„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jxxghp/nas-tools/releases&#34;&gt;https://github.com/jxxghp/nas-tools/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ÈÖçÁΩÆ&lt;/h2&gt; &#xA;&lt;h3&gt;1„ÄÅÁî≥ËØ∑Áõ∏ÂÖ≥API KEY&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Áî≥ËØ∑TMDBÁî®Êà∑ÔºåÂú® &lt;a href=&#34;https://www.themoviedb.org/&#34;&gt;https://www.themoviedb.org/&lt;/a&gt; Áî≥ËØ∑Áî®Êà∑ÔºåÂæóÂà∞API KEY„ÄÇ&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Áî≥ËØ∑Ê∂àÊÅØÈÄöÁü•ÊúçÂä°&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;ÂæÆ‰ø°ÔºàÊé®ËçêÔºâÔºöÂú® &lt;a href=&#34;https://work.weixin.qq.com/&#34;&gt;https://work.weixin.qq.com/&lt;/a&gt; Áî≥ËØ∑‰ºÅ‰∏öÂæÆ‰ø°Ëá™Âª∫Â∫îÁî®ÔºåËé∑Âæó‰ºÅ‰∏öID„ÄÅËá™Âª∫Â∫îÁî®secret„ÄÅagentidÔºõÂæÆ‰ø°Êâ´ÊèèËá™Âª∫Â∫îÁî®‰∫åÁª¥Á†ÅÂèØÂÆûÁé∞Âú®ÂæÆ‰ø°‰∏≠‰ΩøÁî®Ê∂àÊÅØÊúçÂä°ÔºåÊó†ÈúÄÊâìÂºÄ‰ºÅ‰∏öÂæÆ‰ø°„ÄÇ&lt;/li&gt; &#xA;   &lt;li&gt;ServerÈÖ±ÔºöÊàñËÄÖÂú® &lt;a href=&#34;https://sct.ftqq.com/&#34;&gt;https://sct.ftqq.com/&lt;/a&gt; Áî≥ËØ∑SendKey„ÄÇ&lt;/li&gt; &#xA;   &lt;li&gt;TelegramÔºöÂÖ≥Ê≥®BotFatherÁî≥ËØ∑Êú∫Âô®‰∫∫Ëé∑ÂèñtokenÔºåÂÖ≥Ê≥®getuserIDÊãøÂà∞chat_id„ÄÇ&lt;/li&gt; &#xA;   &lt;li&gt;BarkÔºöÂÆâË£ÖBarkÂÆ¢Êà∑Á´ØËé∑ÂæóKEYÔºåÂèØ‰ª•Ëá™Âª∫BarkÊúçÂä°Âô®ÊàñËÄÖ‰ΩøÁî®ÈªòËÆ§ÁöÑÊúçÂä°Âô®„ÄÇ&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2„ÄÅÂü∫Á°ÄÈÖçÁΩÆ&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Êñá‰ª∂ËΩ¨ÁßªÊ®°ÂºèËØ¥ÊòéÔºöÁõÆÂâçÊîØÊåÅ‰∫îÁßçÊ®°ÂºèÔºöÂ§çÂà∂„ÄÅÁ°¨ÈìæÊé•„ÄÅËΩØÈìæÊé•„ÄÅÁßªÂä®„ÄÅRCLONE„ÄÇÂ§çÂà∂Ê®°Âºè‰∏ãËΩΩÂÅöÁßçÂíåÂ™í‰ΩìÂ∫ìÊòØ‰∏§‰ªΩÔºåÂ§öÂç†Áî®Â≠òÂÇ®Ôºà‰∏ãËΩΩÁõòÂ§ßÂ∞èÂÜ≥ÂÆöËÉΩ‰øùÂ§öÂ∞ëÁßçÔºâÔºåÂ•ΩÂ§ÑÊòØÂ™í‰ΩìÂ∫ìÁöÑÁõò‰∏çÁî®24Â∞èÊó∂ËøêË°åÂèØ‰ª•‰ºëÁú†ÔºõÁ°¨ÈìæÊé•Ê®°Âºè‰∏çÁî®È¢ùÂ§ñÂ¢ûÂä†Â≠òÂÇ®Á©∫Èó¥Ôºå‰∏Ä‰ªΩÊñá‰ª∂‰∏§‰ªΩÁõÆÂΩïÔºå‰ΩÜÈúÄË¶Å‰∏ãËΩΩÁõÆÂΩïÂíåÂ™í‰ΩìÂ∫ìÁõÆÂΩïÂú®‰∏Ä‰∏™Á£ÅÁõòÂàÜÂå∫ÊàñËÄÖÂ≠òÂÇ®Á©∫Èó¥ÔºõËΩØÈìæÊé•Ê®°ÂºèÂ∞±ÊòØÂø´Êç∑ÊñπÂºèÔºåÈúÄË¶ÅÂÆπÂô®ÂÜÖË∑ØÂæÑ‰∏éÁúüÂÆûË∑ØÂæÑ‰∏ÄËá¥ÊâçËÉΩÊ≠£Â∏∏‰ΩøÁî®ÔºõÁßªÂä®Ê®°Âºè‰ºöÁßªÂä®ÂíåÂà†Èô§ÂéüÊñá‰ª∂ÂèäÁõÆÂΩïÔºõRCLONEÊ®°ÂºèÂè™ÈíàÂØπRCLONEÁΩëÁõò‰ΩøÁî®Âú∫ÊôØ„ÄÇ&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ÂêØÂä®Á®ãÂ∫èÂπ∂ÈÖçÁΩÆÔºöDockerÈªòËÆ§‰ΩøÁî®3000Á´ØÂè£ÂêØÂä®ÔºàÁæ§ÊôñÂ•ó‰ª∂ÈªòËÆ§3003Á´ØÂè£ÔºâÔºåÈªòËÆ§Áî®Êà∑ÂØÜÁ†ÅÔºöadmin/passwordÔºàdockerÈúÄË¶ÅÂèÇËÄÉÊïôÁ®ãÊèêÂâçÊò†Â∞ÑÂ•ΩÁ´ØÂè£„ÄÅ‰∏ãËΩΩÁõÆÂΩï„ÄÅÂ™í‰ΩìÂ∫ìÁõÆÂΩïÔºâÔºåÁôªÂΩïÁÆ°ÁêÜÁïåÈù¢ÂêéÔºåÂú®ËÆæÁΩÆ‰∏≠Ê†πÊçÆÊØè‰∏™ÈÖçÁΩÆÈ°πÁöÑÊèêÁ§∫Âú®WEBÈ°µÈù¢‰øÆÊîπÂ•ΩÈÖçÁΩÆÂπ∂ÈáçÂêØÁîüÊïàÔºàÂü∫Á°ÄËÆæÁΩÆ‰∏≠ÊúâÊ†áÁ∫¢ÊòüÁöÑÊòØÂøÖÈ°ªË¶ÅÈÖçÁΩÆÁöÑÔºåÂ¶ÇTMDB APIKEYÁ≠âÔºâ„ÄÇËØ¶ÁªÜÈÖçÁΩÆÊñπÊ≥ïÂèØÂèÇËÄÉÈªòËÆ§ÈÖçÁΩÆÊñá‰ª∂ÁöÑÊ≥®ÈáäÂèäWIKI‰∏≠ÁöÑÊïôÁ®ã„ÄÇ&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3„ÄÅËÆæÁΩÆEmby/Jellyfin/PlexÂ™í‰ΩìÂ∫ìÔºàÊé®ËçêÔºâ&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Âú®Emby/Jellyfin/PlexÁöÑWebhookÊèí‰ª∂‰∏≠ÔºåËÆæÁΩÆÂú∞ÂùÄ‰∏∫Ôºöhttp(s)://IP:PORT/emby„ÄÅjellyfin„ÄÅplexÔºåÁî®‰∫éÊé•Êî∂Êí≠ÊîæÈÄöÁü•&lt;/li&gt; &#xA; &lt;li&gt;Â∞ÜEmby/Jellyfin/PlexÁöÑÁõ∏ÂÖ≥‰ø°ÊÅØÈÖçÁΩÆÂà∞Á®ãÂ∫è‰∏≠Ôºå‰ºöÁî®‰∫éËµÑÊ∫ê‰∏ãËΩΩÂíåÊ£ÄÁ¥¢ÊéßÈáçÔºåÊèêÂçá‰ΩøÁî®‰ΩìÈ™å„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;Â¶ÇÊûúÂêØÁî®‰∫ÜÈªòËÆ§ÂàÜÁ±ªÔºåÈúÄÊåâÂ¶Ç‰∏ãÁöÑÁõÆÂΩïÁªìÊûÑÂàÜÂà´ËÆæÁΩÆÂ•ΩÂ™í‰ΩìÂ∫ìÔºõÂ¶ÇÊòØËá™ÂÆö‰πâÂàÜÁ±ªÔºåËØ∑ÊåâËá™Â∑±ÁöÑÂÆö‰πâÂª∫Á´ãÂ•ΩÂ™í‰ΩìÂ∫ìÁõÆÂΩïÔºåÂàÜÁ±ªÂÆö‰πâËØ∑ÂèÇËÄÉdefault-category.yamlÂàÜÁ±ªÈÖçÁΩÆÊñá‰ª∂Ê®°Êùø„ÄÇÊ≥®ÊÑèÔºåÂºÄÂêØ‰∫åÁ∫ßÂàÜÁ±ªÊó∂ÔºåÂ™í‰ΩìÂ∫ìÈúÄË¶ÅÂ∞ÜÁõÆÂΩïËÆæÁΩÆÂà∞‰∫åÁ∫ßÂàÜÁ±ªÂ≠êÁõÆÂΩï‰∏≠ÔºàÂèØÊ∑ªÂä†Â§ö‰∏™Â≠êÁõÆÂΩïÂà∞‰∏Ä‰∏™Â™í‰ΩìÂ∫ìÔºå‰πüÂèØ‰ª•‰∏Ä‰∏™Â≠êÁõÆÂΩïËÆæÁΩÆ‰∏Ä‰∏™Â™í‰ΩìÂ∫ìÔºâÔºåÂê¶ÂàôÂ™í‰ΩìÂ∫ìÁÆ°ÁêÜËΩØ‰ª∂ÂèØËÉΩÊó†Ê≥ïÊ≠£Â∏∏ÊêúÂàÆËØÜÂà´„ÄÇ &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;ÁîµÂΩ±&lt;/p&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;Á≤æÈÄâ ÂçéËØ≠ÁîµÂΩ± Â§ñËØ≠ÁîµÂΩ±&lt;/p&gt; &#xA;   &lt;/blockquote&gt; &#xA;   &lt;p&gt;ÁîµËßÜÂâß&lt;/p&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;ÂõΩ‰∫ßÂâß Ê¨ßÁæéÂâß Êó•Èü©Ââß Âä®Êº´ Á∫™ÂΩïÁâá ÁªºËâ∫ ÂÑøÁ´•&lt;/p&gt; &#xA;   &lt;/blockquote&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4„ÄÅÈÖçÁΩÆÂêåÊ≠•ÁõÆÂΩïÔºàÂèØÈÄâÔºâ&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÁõÆÂΩïÂêåÊ≠•ÂèØ‰ª•ÂØπÂ§ö‰∏™ÂàÜÊï£ÁöÑÊñá‰ª∂Â§πËøõË°åÁõëÊéßÔºåÊñá‰ª∂Â§π‰∏≠ÊúâÊñ∞Â¢ûÂ™í‰ΩìÊñá‰ª∂Êó∂‰ºöËá™Âä®ËøõË°åËØÜÂà´ÈáçÂëΩÂêçÔºåÂπ∂ÊåâÈÖçÁΩÆÁöÑËΩ¨ÁßªÊñπÂºèËΩ¨ÁßªÂà∞Â™í‰ΩìÂ∫ìÁõÆÂΩïÊàñÊåáÂÆöÁöÑÁõÆÂΩï‰∏≠„ÄÇÂ¶ÇÂ∞ÜPT‰∏ãËΩΩËΩØ‰ª∂ÁöÑ‰∏ãËΩΩÁõÆÂΩï‰πüÁ∫≥ÂÖ•ÁõÆÂΩïÂêåÊ≠•ËåÉÂõ¥ÁöÑÔºåÂª∫ËÆÆÂÖ≥Èó≠‰∏ãËΩΩËΩØ‰ª∂ÁõëÊéßÂäüËÉΩÔºåÂê¶Âàô‰ºöËß¶ÂèëÈáçÂ§çÂ§ÑÁêÜ„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;5„ÄÅÈÖçÁΩÆÂæÆ‰ø°ËèúÂçï/TelegramÊú∫Âô®‰∫∫ÔºàÊé®ËçêÔºâ&lt;/h3&gt; &#xA;&lt;p&gt;ÈÖçÁΩÆÂ•ΩÂæÆ‰ø°ÊàñTelegramÊú∫Âô®‰∫∫ÂêéÔºåÂèØ‰ª•Áõ¥Êé•ÈÄöËøáÂæÆ‰ø°/TelegramÊú∫Âô®‰∫∫ÂèëÈÄÅÂêçÂ≠óÂÆûÁé∞Ëá™Âä®Ê£ÄÁ¥¢‰∏ãËΩΩÔºå‰ª•ÂèäÊéßÂà∂Á®ãÂ∫èËøêË°å„ÄÇ&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;ÂæÆ‰ø°Ê∂àÊÅØÊé®ÈÄÅÂèäÂõûË∞É&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;ÈÖçÁΩÆÊ∂àÊÅØÊé®ÈÄÅ‰ª£ÁêÜÔºöÁî±‰∫éÂæÆ‰ø°ÂÆòÊñπÈôêÂà∂Ôºå2022Âπ¥6Êúà20Êó•ÂêéÂàõÂª∫ÁöÑ‰ºÅ‰∏öÂæÆ‰ø°Â∫îÁî®ÈúÄË¶ÅÊúâÂõ∫ÂÆöÁöÑÂÖ¨ÁΩëIPÂú∞ÂùÄÂπ∂Âä†ÂÖ•IPÁôΩÂêçÂçïÂêéÊâçËÉΩÊé•Êî∂Âà∞Ê∂àÊÅØÔºå‰ΩøÁî®ÊúâÂõ∫ÂÆöÂÖ¨ÁΩëIPÁöÑ‰ª£ÁêÜÊúçÂä°Âô®ËΩ¨ÂèëÂèØËß£ÂÜ≥ËØ•ÈóÆÈ¢ò&lt;/p&gt; &lt;p&gt;Â¶Ç‰ΩøÁî®nginxÊê≠Âª∫‰ª£ÁêÜÊúçÂä°ÔºåÈúÄÂú®ÈÖçÁΩÆ‰∏≠Â¢ûÂä†‰ª•‰∏ã‰ª£ÁêÜÈÖçÁΩÆÔºö&lt;/p&gt; &lt;pre&gt;&lt;code&gt;location /cgi-bin/gettoken {&#xA;  proxy_pass https://qyapi.weixin.qq.com;&#xA;}&#xA;location /cgi-bin/message/send {&#xA;  proxy_pass https://qyapi.weixin.qq.com; &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Â¶Ç‰ΩøÁî®CaddyÊê≠Âª∫‰ª£ÁêÜÊúçÂä°ÔºåÈúÄÂú®ÈÖçÁΩÆ‰∏≠Â¢ûÂä†‰ª•‰∏ã‰ª£ÁêÜÈÖçÁΩÆÔºà&lt;code&gt;{upstream_hostport}&lt;/code&gt; ÈÉ®ÂàÜ‰∏çÊòØÂèòÈáèÔºå‰∏çË¶ÅÊîπÔºåÂéüÂ∞Å‰∏çÂä®Â§çÂà∂Á≤òË¥¥ËøáÂéªÂç≥ÂèØÔºâ„ÄÇ&lt;/p&gt; &lt;pre&gt;&lt;code&gt;reverse_proxy https://qyapi.weixin.qq.com {&#xA;  header_up Host {upstream_hostport}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Ê≥®ÊÑèÔºö‰ª£ÁêÜÊúçÂä°Âô®‰ªÖÈÄÇÁî®‰∫éÂú®ÂæÆ‰ø°‰∏≠Êé•Êî∂Â∑•ÂÖ∑Êé®ÈÄÅÁöÑÊ∂àÊÅØÔºåÊ∂àÊÅØÂõûË∞É‰∏é‰ª£ÁêÜÊúçÂä°Âô®Êó†ÂÖ≥„ÄÇ&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ÈÖçÁΩÆÂæÆ‰ø°Ê∂àÊÅØÊé•Êî∂ÊúçÂä°ÔºöÂú®‰ºÅ‰∏öÂæÆ‰ø°Ëá™Âª∫Â∫îÁî®ÁÆ°ÁêÜÈ°µÈù¢-„ÄãAPIÊé•Êî∂Ê∂àÊÅØ ÂºÄÂêØÊ∂àÊÅØÊé•Êî∂ÊúçÂä°Ôºö1„ÄÅÂú®ÂæÆ‰ø°È°µÈù¢ÁîüÊàêTokenÂíåEncodingAESKeyÔºåÂπ∂Âú®NASToolËÆæÁΩÆ-&amp;gt;Ê∂àÊÅØÈÄöÁü•-&amp;gt;ÂæÆ‰ø°‰∏≠Â°´ÂÖ•ÂØπÂ∫îÁöÑËæìÂÖ•È°πÂπ∂‰øùÂ≠ò„ÄÇ2„ÄÅÈáçÂêØNASTool„ÄÇ3„ÄÅÂæÆ‰ø°È°µÈù¢Âú∞ÂùÄURLÂ°´ÂÜôÔºöhttp(s)://IP:PORT/wechatÔºåÁÇπÁ°ÆÂÆöËøõË°åËÆ§ËØÅ„ÄÇ *ÈÖçÁΩÆÂæÆ‰ø°ËèúÂçïÊéßÂà∂Ôºö1„ÄÅÂú®&lt;a href=&#34;https://work.weixin.qq.com/wework_admin/frame#apps&#34;&gt;https://work.weixin.qq.com/wework_admin/frame#apps&lt;/a&gt; Â∫îÁî®Ëá™ÂÆö‰πâËèúÂçïÈ°µÈù¢ÊåâÂ¶Ç‰∏ãÂõæÊâÄÁ§∫Áª¥Êä§Â•ΩËèúÂçïÔºåËèúÂçïÂÜÖÂÆπ‰∏∫ÂèëÈÄÅÊ∂àÊÅØÔºåÊ∂àÊÅØÂÜÖÂÆπÈöèÊÑèÔºà‰∏ÄÁ∫ßËèúÂçïÂèä‰∏ÄÁ∫ßËèúÂçï‰∏ãÁöÑÂâçÂá†‰∏™Â≠êËèúÂçïÈ°∫Â∫èÈúÄË¶Å‰∏ÄÊ®°‰∏ÄÊ†∑ÔºåÂú®Á¨¶ÂêàÊà™ÂõæÁöÑÁ§∫‰æãÈ°πÂêéÂèØ‰ª•Ëá™Â∑±Â¢ûÂä†Âà´ÁöÑ‰∫åÁ∫ßËèúÂçïÈ°πÔºâÔºåÈÄöËøáËèúÂçïËøúÁ®ãÊéßÂà∂Â∑•ÂÖ∑ËøêË°å„ÄÇ2„ÄÅÈÄöËøáÂæÆ‰ø°ÂèëÈÄÅÁîµÂΩ±ÁîµËßÜÂâßÂêçÁß∞ÔºåÊàñËÄÖ‚ÄúËÆ¢ÈòÖ‚ÄùÂä†ÁîµÂΩ±ÁîµËßÜÂâßÂêçÁß∞ÔºåÂèØ‰ª•ÂÆûÁé∞ËøúÁ®ãÊêúÁ¥¢ÂíåËÆ¢ÈòÖÔºåËØ¶ÁªÜ‰ΩøÁî®ÊñπÊ≥ïÂèÇËÄÉWIKIËØ¥Êòé„ÄÇ&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/51039935/170855173-cca62553-4f5d-49dd-a255-e132bc0d8c3e.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Telegram BotÊú∫Âô®‰∫∫&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Âú®NASToolËÆæÁΩÆ‰∏≠ËÆæÁΩÆÂ•ΩÊú¨Á®ãÂ∫èÁöÑÂ§ñÁΩëËÆøÈóÆÂú∞ÂùÄ‰ª•ÂèäÊâìÂºÄTelegram WebhookÂºÄÂÖ≥„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;Âú®Telegram BotFatherÊú∫Âô®‰∫∫‰∏≠Êåâ‰∏ãË°®Áª¥Êä§Â•ΩbotÂëΩ‰ª§ËèúÂçïÔºà‰πüÂèØ‰ª•‰∏çÁª¥Êä§ÔºâÔºåÈÄâÊã©ËèúÂçïÊàñËæìÂÖ•ÂëΩ‰ª§ËøêË°åÂØπÂ∫îÊúçÂä°ÔºåËæìÂÖ•ÂÖ∂ÂÆÉÂÜÖÂÆπÂàôÂêØÂä®PTËÅöÂêàÊ£ÄÁ¥¢„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;Ê≥®ÊÑèÔºöÂèóTelegramÈôêÂà∂ÔºåÁ®ãÂ∫èËøêË°åÁ´ØÂè£ÈúÄË¶ÅËÆæÁΩÆ‰∏∫‰ª•‰∏ãÁ´ØÂè£‰πã‰∏ÄÔºö443, 80, 88, 8443Ôºå‰∏îÈúÄË¶ÅÊúâ‰ª•ÁΩëËÆ§ËØÅÁöÑHttpsËØÅ‰π¶„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;ÂëΩ‰ª§‰∏éÂäüËÉΩÂØπÂ∫îÂÖ≥Á≥ªÔºö&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;ÂëΩ‰ª§&lt;/th&gt; &#xA;   &lt;th&gt;ÂäüËÉΩ&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/rss&lt;/td&gt; &#xA;   &lt;td&gt;RSSËÆ¢ÈòÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/ptt&lt;/td&gt; &#xA;   &lt;td&gt;PT‰∏ãËΩΩËΩ¨Áßª&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/ptr&lt;/td&gt; &#xA;   &lt;td&gt;PTÂà†Áßç&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/pts&lt;/td&gt; &#xA;   &lt;td&gt;PTÁ´ôÁ≠æÂà∞&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/rst&lt;/td&gt; &#xA;   &lt;td&gt;ÁõÆÂΩïÂêåÊ≠•&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/db&lt;/td&gt; &#xA;   &lt;td&gt;Ë±ÜÁì£ÊÉ≥Áúã&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;6„ÄÅÈÖçÁΩÆJackett/ProwlarrÔºàÊé®ËçêÔºâ&lt;/h3&gt; &#xA;&lt;p&gt;Â¶ÇÊûú‰Ω†ÊÉ≥ÈÄöËøáÂæÆ‰ø°„ÄÅTelegramÂèëÈÄÅÂêçÁß∞ÂêéÂ∞±Ëá™Âä®Ê£ÄÁ¥¢ÔºåÊàñËÄÖ‰ΩøÁî®WEBÈ°µÈù¢ÁöÑËÅöÂêàËµÑÊ∫êÊ£ÄÁ¥¢ÂäüËÉΩÔºåÂàôÈúÄË¶ÅËé∑ÂèñAPI Key‰ª•ÂèäTorznab Feed/Âú∞ÂùÄÁ≠âÔºåÈÖçÁΩÆÂà∞ËÆæÁΩÆ-&amp;gt;Á¥¢ÂºïÂô®-&amp;gt;Jackett/Prowlarr‰∏≠„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Jackett/Prowlarr‰∫åÈÄâ‰∏ÄÔºå‰ΩÜÊé®Ëçê‰ΩøÁî®JackettÔºåÊîØÊåÅÂπ∂Âèë‰∏îÊîØÊåÅÂâØÊ†áÈ¢òËØÜÂà´„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;7„ÄÅÈÖçÁΩÆÁ´ôÁÇπÔºàÊé®ËçêÔºâ&lt;/h3&gt; &#xA;&lt;p&gt;Êú¨Â∑•ÂÖ∑ÁöÑÁîµÂΩ±ÁîµËßÜÂâßËÆ¢ÈòÖ„ÄÅÁ´ôÁÇπÊï∞ÊçÆÁªüËÆ°„ÄÅÂà∑ÊµÅÁ≠âÂäüËÉΩÂùá‰æùËµñ‰∫éÊ≠£Á°ÆÈÖçÁΩÆÁ´ôÁÇπ‰ø°ÊÅØÔºåÈúÄË¶ÅÂú®‚ÄúÁ´ôÁÇπÁÆ°ÁêÜ-&amp;gt;Á´ôÁÇπÁª¥Êä§‚Äù‰∏≠Áª¥Êä§Â•ΩÁ´ôÁÇπRSSÈìæÊé•‰ª•ÂèäCookieÁ≠â„ÄÇÂÖ∂‰∏≠Á´ôÁÇπRSSÈìæÊé•ÁîüÊàêÊó∂ËØ∑Â∞ΩÈáèÈÄâÊã©ÂΩ±ËßÜÁ±ªËµÑÊ∫êÂàÜÁ±ªÔºå‰∏îÂãæÈÄâÂâØÊ†áÈ¢ò„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;8„ÄÅÊï¥ÁêÜÂ≠òÈáèÂ™í‰ΩìËµÑÊ∫êÔºàÂèØÈÄâÔºâ&lt;/h3&gt; &#xA;&lt;p&gt;Â¶ÇÊûú‰Ω†ÁöÑÂ≠òÈáèËµÑÊ∫êÊâÄÂú®ÁöÑÁõÆÂΩï‰∏é‰Ω†ÁõÆÂΩïÂêåÊ≠•‰∏≠ÈÖçÁΩÆÁöÑÊ∫êË∑ØÂæÑÁõÆÁöÑË∑ØÂæÑÁõ∏ÂêåÔºåÂàôÂèØ‰ª•ÈÄöËøáWEBUIÊàñÂæÆ‰ø°/TelegramÁöÑ‚ÄúÁõÆÂΩïÂêåÊ≠•‚ÄùÊåâÈíÆËß¶ÂèëÂÖ®ÈáèÂêåÊ≠•„ÄÇ Â¶ÇÊûú‰∏çÁõ∏ÂêåÂàôÂèØ‰ª•Êåâ‰ª•‰∏ãËØ¥ÊòéÊìç‰ΩúÔºåÊâãÂ∑•ËæìÂÖ•ÂëΩ‰ª§Êï¥ÁêÜÁâπÂÆöÁõÆÂΩï‰∏ãÁöÑÂ™í‰ΩìËµÑÊ∫ê„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ÈáçË¶ÅËØ¥ÊòéÔºö-d ÂèÇÊï∞‰∏∫ÂèØÈÄâÔºåÂ¶Ç‰∏çËæìÂÖ•Âàô‰ºöËá™Âä®Âå∫ÂàÜÁîµÂΩ±/ÁîµËßÜÂâß/Âä®Êº´ÂàÜÂà´Â≠òÂÇ®Âà∞ÂØπÂ∫îÁöÑÂ™í‰ΩìÂ∫ìÁõÆÂΩï‰∏≠Ôºõ-d ÂèÇÊï∞ÊúâËæìÂÖ•Êó∂Âàô‰∏çÁÆ°Á±ªÂûãÔºåÈÉΩÂæÄ-dÁõÆÂΩï‰∏≠ËΩ¨Áßª„ÄÇ&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DockerÁâàÊú¨ÔºåÂÆø‰∏ªÊú∫‰∏äËøêË°å‰ª•‰∏ãÂëΩ‰ª§Ôºånas-tools‰øÆÊîπ‰∏∫‰Ω†ÁöÑdockerÂêçÁß∞Ôºå‰øÆÊîπÊ∫êÁõÆÂΩïÂíåÁõÆÁöÑÁõÆÂΩïÂèÇÊï∞„ÄÇ &lt;pre&gt;&lt;code&gt;docker exec -it nas-tools sh&#xA;python3 /nas-tools/rmt/filetransfer.py -s /from/path -d /to/path&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Áæ§ÊôñÂ•ó‰ª∂ÁâàÊú¨ÔºåsshÂà∞ÂêéÂè∞ËøêË°å‰ª•‰∏ãÂëΩ‰ª§ÔºåÂêåÊ†∑‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂Ë∑ØÂæÑ‰ª•ÂèäÊ∫êÁõÆÂΩï„ÄÅÁõÆÁöÑÁõÆÂΩïÂèÇÊï∞„ÄÇ &lt;pre&gt;&lt;code&gt;export NASTOOL_CONFIG=/volume1/NASTOOL/config.yaml&#xA;/var/packages/py3k/target/usr/local/bin/python3 /var/packages/nastool/target/rmt/filetransfer.py -s /from/path -d /to/path&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Êú¨Âú∞Áõ¥Êé•ËøêË°åÁöÑÔºåcd Âà∞Á®ãÂ∫èÊ†πÁõÆÂΩïÔºåÊâßË°å‰ª•‰∏ãÂëΩ‰ª§Ôºå‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂„ÄÅÊ∫êÁõÆÂΩïÂíåÁõÆÁöÑÁõÆÂΩïÂèÇÊï∞„ÄÇ &lt;pre&gt;&lt;code&gt;export NASTOOL_CONFIG=/xxx/config.yaml&#xA;python3 rmt/filetransfer.py -s /from/path -d /to/path&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;È∏£Ë∞¢&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Á®ãÂ∫èUIÊ®°ÊùøÂèäÂõæÊ†áÊù•Ê∫ê‰∫éÂºÄÊ∫êÈ°πÁõÆ&lt;a href=&#34;https://github.com/tabler/tabler&#34;&gt;tabler&lt;/a&gt;ÔºåÊ≠§Â§ñÈ°πÁõÆ‰∏≠Ëøò‰ΩøÁî®Âà∞‰∫ÜÂºÄÊ∫êÊ®°ÂùóÔºö&lt;a href=&#34;https://github.com/igorcmoura/anitopy&#34; target=&#34;_blank&#34;&gt;anitopy&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://github.com/AnthonyBloomer/tmdbv3api&#34; target=&#34;_blank&#34;&gt;tmdbv3api&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://github.com/pkkid/python-plexapi&#34; target=&#34;_blank&#34;&gt;python-plexapi&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://github.com/rmartin16/qbittorrent-api&#34;&gt;qbittorrent-api&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://github.com/Trim21/transmission-rpc&#34;&gt;transmission-rpc&lt;/a&gt;Á≠â&lt;/li&gt; &#xA; &lt;li&gt;ÊÑüË∞¢ &lt;a href=&#34;https://github.com/devome&#34; target=&#34;_blank&#34;&gt;nevinee&lt;/a&gt; ÂÆåÂñÑdockerÊûÑÂª∫&lt;/li&gt; &#xA; &lt;li&gt;ÊÑüË∞¢ &lt;a href=&#34;https://github.com/tbc0309&#34; target=&#34;_blank&#34;&gt;tbc0309&lt;/a&gt; ÈÄÇÈÖçÁæ§ÊôñÂ•ó‰ª∂&lt;/li&gt; &#xA; &lt;li&gt;ÊÑüË∞¢ PR ‰ª£Á†Å„ÄÅÂÆåÂñÑWIKI„ÄÅÂèëÂ∏ÉÊïôÁ®ãÁöÑÊâÄÊúâÂ§ß‰Ω¨&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>mgsweet/Apex-NoRecoil-2021</title>
    <updated>2022-08-12T01:31:53Z</updated>
    <id>tag:github.com,2022-08-12:/mgsweet/Apex-NoRecoil-2021</id>
    <link href="https://github.com/mgsweet/Apex-NoRecoil-2021" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Scripts to reduce recoil for Apex Legends. (auto weapon detection, support multiple resolutions)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apex-NoRecoil-2021&lt;/h1&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mgsweet/Apex-NoRecoil-2021/main/#contributors-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-9-orange.svg?style=flat-square&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; &#xA;&lt;p&gt;An AutoHotKey script (works on multiple resolutions) and Python CLI (works on 1080p) to minimize recoil with auto weapon detection for Apex Legends.&lt;/p&gt; &#xA;&lt;p&gt;Apex Legends ÂéãÊû™ÂÆèÔºåÂ∏¶Ê≠¶Âô®Ëá™Âä®Ê£ÄÊµãÔºåÂåÖÂê´‰∫Ü‰∏Ä‰∏™ahkÁöÑÁâàÊú¨ (ÊîØÊåÅÂ§öÂàÜËæ®Áéá) Âíå‰∏Ä‰∏™pythonÁöÑÁâàÊú¨ (Âè™ÊîØÊåÅ 1080p) „ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;AHK Script - Description ‰ªãÁªç&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains an Autohotkey script to help you minimize weapon recoil. Your weapon is auto-detected by the script (no need to press the F key anymore! XD). The detection is based on a straightforward and naive strategy (I call it three-pixel-detection). It is pretty safe because all it does is just capture some pixels and then use mouse DllCall to move your mouse. Run the compiled version if you want more protection.&lt;/p&gt; &#xA;&lt;p&gt;ËØ•Â∫ìÂåÖÂê´‰∫Ü‰∏Ä‰∏™Â∏¶Ëá™Âä®Ê≠¶Âô®Ê£ÄÊµãÁöÑ Apex Legends ÂéãÊû™ÂÆèÔºå‰∏çËØªÂÜÖÂ≠òÔºå‰∏çÊ≥®ÂÖ•Ê∏∏ÊàèÊñá‰ª∂ÔºåÁ∫ØÁ≤πÂ∞±ÊòØËØÜÂà´ÂÉèÁ¥†È¢úËâ≤Âπ∂Â∏ÆÂä©‰Ω†ÁßªÂä®Èº†Ê†áÔºàËøôÂ∞±Á±ª‰ºº‰∫éÈÇ£‰∫õÊ∑òÂÆùÂçñÂ•ΩÂá†ÁôæÁöÑ‰∏ªÊí≠‰∏ìÁî®ÂéãÊû™ÂÆèÔºâ„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/mgsweet/Apex-NoRecoil-2021/tree/main/AHK&#34;&gt;AHK Script - Details and Usage ËØ¶ÁªÜ‰ΩøÁî®ÊåáÂçó&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pros &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;comes with GUI ÊúâÂúñÂΩ¢ÁïåÈù¢&lt;/li&gt; &#xA;   &lt;li&gt;support multiple resolution settings ÊîØÊåÅÂ§öÁ®ÆÂàÜËæ®Áéá&lt;/li&gt; &#xA;   &lt;li&gt;simple ÁÆÄÂçï&lt;/li&gt; &#xA;   &lt;li&gt;out of the box ÂºÄÁÆ±Âç≥Áî®&lt;/li&gt; &#xA;   &lt;li&gt;support different language setting in game ÊîØÊåÅ‰∏çÂêåÁöÑÊ∏∏ÊàèËØ≠Ë®ÄËÆæÁΩÆ&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Cons &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;too many magic pixel position Â§™Â§öÁ•ûÂ•áÁöÑÂÉèÁ¥†‰ΩçÁΩÆËÆæÂÆö&lt;/li&gt; &#xA;   &lt;li&gt;need lots of modification to support other resolution ÂæàÈöæÂéªÊîØÊåÅÂà´ÁöÑÂàÜËæ®Áéá&lt;/li&gt; &#xA;   &lt;li&gt;not many people know how to code with AHK, not DIY friendly ËÑöÊú¨ÁºñÁ®ãËØ≠Ë®ÄÂ∞è‰ºó&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Python CLI - Description ‰ªãÁªç&lt;/h2&gt; &#xA;&lt;p&gt;The repository also contains a Python version of the AHK script. It uses the Google Tesseract OCR and OpenCV to detect the weapon being used via key listener. The recoil-patterns are applied via win32api mouse_event. The program was built to be consumed as a CLI. The Python dir also contains a recoil-pattern creation tool which can be found in the modules dir. For more info please read the README in the python dir.&lt;/p&gt; &#xA;&lt;p&gt;ËØ•Â∫ì‰πüÂåÖÂê´‰∫Ü‰∏Ä‰∏™ÊúâÁùÄÁõ∏‰ººÂäüËÉΩÁöÑ Python ËÑöÊú¨„ÄÇËøô‰∏™ËÑöÊú¨‰ΩøÁî®Âà∞‰∫Ü Google Tesseract OCR Âíå OpenCV ÊäÄÊúØÂπ∂ÈÄöËøáÁõëÊµãÈîÆÁõòËæìÂÖ•ÂéªËøõË°åÊ≠¶Âô®Ê£ÄÊµã„ÄÇËøô‰∏™ËÑöÊú¨‰∏ªË¶ÅÈÄöËøáÂëΩ‰ª§Ë°å‰∫§‰∫íÁïåÈù¢ËøõË°åÊìç‰Ωú„ÄÇ&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/mgsweet/Apex-NoRecoil-2021/tree/main/python&#34;&gt;Python CLI - Details and Usage ËØ¶ÁªÜ‰ΩøÁî®ÊåáÂçó&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pros &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;DIY friendly ÂÆ¢Âà∂ÂåñÂÆπÊòì&lt;/li&gt; &#xA;   &lt;li&gt;Cool CLI Â•ΩÁúãÁöÑÂëΩ‰ª§Ë°åÁïåÈù¢&lt;/li&gt; &#xA;   &lt;li&gt;Smart detection strategy Êõ¥‰∏∫Êô∫ËÉΩÁöÑÊ≠¶Âô®Ê£ÄÊµãÁ≠ñÁï•&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Cons &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;detection based on OCR, only support English charactor Âè™ÊîØÊåÅËã±ÊñáÊ∏∏ÊàèÁïåÈù¢&lt;/li&gt; &#xA;   &lt;li&gt;currently don&#39;t have as much as features as the AHK one ÁõÆÂâçÂäüËÉΩÊ≤°ÊúâahkÁâàÊú¨ÈÇ£‰πàÂ§ö&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Unknown Cheat thread&lt;/h2&gt; &#xA;&lt;p&gt;I post a &lt;a href=&#34;https://www.unknowncheats.me/forum/apex-legends/476508-apex-norecoil-2021-official-post-auto-detect-multiple-resolution-supported.html&#34;&gt;thread&lt;/a&gt; there too, to let more people know the script.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull Request is always welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;   &lt;!-- prettier-ignore-start --&gt; &#xA;   &lt;!-- markdownlint-disable --&gt; &#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://mgsweet.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/15327389?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aaron Yau&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/mgsweet/Apex-NoRecoil-2021/commits?author=mgsweet&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.wemakeart.co.za&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/21266436?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Brandon Williams&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/mgsweet/Apex-NoRecoil-2021/commits?author=krampus-nuggets&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/filen1&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/88589472?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;filen1&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mgsweet/Apex-NoRecoil-2021/main/#data-filen1&#34; title=&#34;Data&#34;&gt;üî£&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/sayoui001&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/89756686?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sayoui001&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/mgsweet/Apex-NoRecoil-2021/commits?author=sayoui001&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/SiLeNT-Sooul&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/72454428?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;SiLeNT-Sooul&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mgsweet/Apex-NoRecoil-2021/main/#data-SiLeNT-Sooul&#34; title=&#34;Data&#34;&gt;üî£&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ThirdPetros&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/60510041?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Petros&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mgsweet/Apex-NoRecoil-2021/main/#data-thirdpetros&#34; title=&#34;Data&#34;&gt;üî£&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/VStorm001&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/79291809?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;VStorm001&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/mgsweet/Apex-NoRecoil-2021/commits?author=VStorm001&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/VerTox&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5575681?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;VerTox&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/mgsweet/Apex-NoRecoil-2021/commits?author=VerTox&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jayking999&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/67616183?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;jayking999&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/mgsweet/Apex-NoRecoil-2021/commits?author=jayking999&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</summary>
  </entry>
</feed>