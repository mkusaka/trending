<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-26T01:42:05Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>psf/requests</title>
    <updated>2023-05-26T01:42:05Z</updated>
    <id>tag:github.com,2023-05-26:/psf/requests</id>
    <link href="https://github.com/psf/requests" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple, yet elegant, HTTP library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Requests&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Requests&lt;/strong&gt; is a simple, yet elegant, HTTP library.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; import requests&#xA;&amp;gt;&amp;gt;&amp;gt; r = requests.get(&#39;https://httpbin.org/basic-auth/user/pass&#39;, auth=(&#39;user&#39;, &#39;pass&#39;))&#xA;&amp;gt;&amp;gt;&amp;gt; r.status_code&#xA;200&#xA;&amp;gt;&amp;gt;&amp;gt; r.headers[&#39;content-type&#39;]&#xA;&#39;application/json; charset=utf8&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; r.encoding&#xA;&#39;utf-8&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; r.text&#xA;&#39;{&#34;authenticated&#34;: true, ...&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; r.json()&#xA;{&#39;authenticated&#39;: True, ...}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Requests allows you to send HTTP/1.1 requests extremely easily. There’s no need to manually add query strings to your URLs, or to form-encode your &lt;code&gt;PUT&lt;/code&gt; &amp;amp; &lt;code&gt;POST&lt;/code&gt; data — but nowadays, just use the &lt;code&gt;json&lt;/code&gt; method!&lt;/p&gt; &#xA;&lt;p&gt;Requests is one of the most downloaded Python packages today, pulling in around &lt;code&gt;30M downloads / week&lt;/code&gt;— according to GitHub, Requests is currently &lt;a href=&#34;https://github.com/psf/requests/network/dependents?package_id=UGFja2FnZS01NzA4OTExNg%3D%3D&#34;&gt;depended upon&lt;/a&gt; by &lt;code&gt;1,000,000+&lt;/code&gt; repositories. You may certainly put your trust in this code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pepy.tech/project/requests&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/requests/month&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/requests&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/requests.svg?sanitize=true&#34; alt=&#34;Supported Versions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/psf/requests/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/psf/requests.svg?sanitize=true&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing Requests and Supported Versions&lt;/h2&gt; &#xA;&lt;p&gt;Requests is available on PyPI:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ python -m pip install requests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Requests officially supports Python 3.7+.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Features &amp;amp; Best–Practices&lt;/h2&gt; &#xA;&lt;p&gt;Requests is ready for the demands of building robust and reliable HTTP–speaking applications, for the needs of today.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Keep-Alive &amp;amp; Connection Pooling&lt;/li&gt; &#xA; &lt;li&gt;International Domains and URLs&lt;/li&gt; &#xA; &lt;li&gt;Sessions with Cookie Persistence&lt;/li&gt; &#xA; &lt;li&gt;Browser-style TLS/SSL Verification&lt;/li&gt; &#xA; &lt;li&gt;Basic &amp;amp; Digest Authentication&lt;/li&gt; &#xA; &lt;li&gt;Familiar &lt;code&gt;dict&lt;/code&gt;–like Cookies&lt;/li&gt; &#xA; &lt;li&gt;Automatic Content Decompression and Decoding&lt;/li&gt; &#xA; &lt;li&gt;Multi-part File Uploads&lt;/li&gt; &#xA; &lt;li&gt;SOCKS Proxy Support&lt;/li&gt; &#xA; &lt;li&gt;Connection Timeouts&lt;/li&gt; &#xA; &lt;li&gt;Streaming Downloads&lt;/li&gt; &#xA; &lt;li&gt;Automatic honoring of &lt;code&gt;.netrc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chunked HTTP Requests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API Reference and User Guide available on &lt;a href=&#34;https://requests.readthedocs.io&#34;&gt;Read the Docs&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://requests.readthedocs.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/psf/requests/main/ext/ss.png&#34; alt=&#34;Read the Docs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Cloning the repository&lt;/h2&gt; &#xA;&lt;p&gt;When cloning the Requests repository, you may need to add the &lt;code&gt;-c fetch.fsck.badTimezone=ignore&lt;/code&gt; flag to avoid an error about a bad commit (see &lt;a href=&#34;https://github.com/psf/requests/issues/2690&#34;&gt;this issue&lt;/a&gt; for more background):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone -c fetch.fsck.badTimezone=ignore https://github.com/psf/requests.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also apply this setting to your global Git config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --global fetch.fsck.badTimezone ignore&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kennethreitz.org&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/psf/requests/main/ext/kr.png&#34; alt=&#34;Kenneth Reitz&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.python.org/psf&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/psf/requests/main/ext/psf.png&#34; alt=&#34;Python Software Foundation&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Casualtek/Ransomchats</title>
    <updated>2023-05-26T01:42:05Z</updated>
    <id>tag:github.com,2023-05-26:/Casualtek/Ransomchats</id>
    <link href="https://github.com/Casualtek/Ransomchats" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ransomchats&lt;/h1&gt; &#xA;&lt;p&gt;Here you&#39;ll find ransomware negotiations normalised as JSON files. Ransomware negotiations are usually not shared widely, limiting the understanding of the process. This project aims at changing that, in a respectful manner for the victims of cyberattacks: chats are anonymized as long as the victim hasn&#39;t been publicly disclosed, either by the attackers or in the media.&lt;/p&gt; &#xA;&lt;p&gt;You have copies of negotiations? You&#39;re more than welcome to contibute. You can find some parsers ready to use to help you with that.&lt;/p&gt; &#xA;&lt;p&gt;Thanks &lt;strong&gt;&lt;a href=&#34;https://twitter.com/thomfredev&#34;&gt;@thomfredev&lt;/a&gt;&lt;/strong&gt; for the &lt;a href=&#34;https://github.com/thomfre/ransomchats-viewer&#34;&gt;reading app&lt;/a&gt; that&#39;s running here : &lt;strong&gt;&lt;a href=&#34;https://ransomch.at/&#34;&gt;ransomch.at&lt;/a&gt;&lt;/strong&gt; (thanks as well for the help getting it built properly)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>LmeSzinc/StarRailCopilot</title>
    <updated>2023-05-26T01:42:05Z</updated>
    <id>tag:github.com,2023-05-26:/LmeSzinc/StarRailCopilot</id>
    <link href="https://github.com/LmeSzinc/StarRailCopilot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Star Rail auto script, bot | 星铁副驾驶，崩坏：星穹铁道脚本，基于下一代Alas框架&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;StarRailCopilot&lt;/h1&gt; &#xA;&lt;p&gt;Star Rail auto script, bot | 星铁副驾驶，崩坏：星穹铁道脚本，基于下一代Alas框架&lt;/p&gt; &#xA;&lt;h2&gt;安装&lt;/h2&gt; &#xA;&lt;p&gt;SRC 还在开发中，暂时不提供自动安装包，需要以正常流程安装。&lt;/p&gt; &#xA;&lt;p&gt;Clone 这个项目。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/LmeSzinc/StarRailCopilot&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;进入项目目录。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd StarRailCopilot&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;使用 conda 新建 python 3.10.10 环境，假设新环境的名字叫 &lt;code&gt;src&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;注意：我们不维护更高或者更低版本的依赖，建议使用 3.10.10&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create -n src python==3.10.10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;安装 requirements.txt 中的依赖。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;使用&lt;/h2&gt; &#xA;&lt;p&gt;阿巴阿巴，没写完怎么用（&lt;/p&gt; &#xA;&lt;p&gt;QQ群 SRC使用与开发 752620927&lt;/p&gt; &#xA;&lt;h2&gt;关于 Alas&lt;/h2&gt; &#xA;&lt;p&gt;SRC 将基于碧蓝航线脚本 &lt;a href=&#34;https://github.com/LmeSzinc/AzurLaneAutoScript&#34;&gt;AzurLaneAutoScript&lt;/a&gt; 开发，Alas 经过三年的发展现在已经达到一个高完成度，但也累积了不少屎山难以改动，我们希望在新项目上解决这些问题：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;更新 OCR 库。Alas 在 cnocr==1.2.2 上训练了多个模型，但依赖的 &lt;a href=&#34;https://github.com/apache/mxnet&#34;&gt;mxnet&lt;/a&gt; 已经不怎么活跃了，机器学习发展迅速，新模型的速度和正确率都碾压旧模型。&lt;/li&gt; &#xA; &lt;li&gt;配置文件 &lt;a href=&#34;https://github.com/pydantic/pydantic&#34;&gt;pydantic&lt;/a&gt; 化。自任务和调度器的概念加入后用户设置数量倍增，Alas 土制了一个代码生成器来完成配置文件的更新和访问，pydantic 将让这部分更加简洁。&lt;/li&gt; &#xA; &lt;li&gt;更好的 Assets 管理。button_extract 帮助 Alas 轻易维护了 4000+ 模板图片，但它有严重的性能问题，对外服缺失 Assets 的提示也淹没在了大量垃圾 log 中。&lt;/li&gt; &#xA; &lt;li&gt;减少对于碧蓝的耦合。Alas 框架和 Alas GUI 有对接其他游戏及其脚本的能力，但已经完成的明日方舟 &lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAssistantArknights&#34;&gt;MAA&lt;/a&gt; 插件和正在开发的 &lt;a href=&#34;https://github.com/hgjazhgj/FGO-py&#34;&gt;fgo-py&lt;/a&gt; 插件都发现了 Alas 与碧蓝航线游戏本身耦合严重的问题。&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>