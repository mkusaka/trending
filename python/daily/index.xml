<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-08T01:43:00Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kevingduck/ChatGPT-phone</title>
    <updated>2024-02-08T01:43:00Z</updated>
    <id>tag:github.com,2024-02-08:/kevingduck/ChatGPT-phone</id>
    <link href="https://github.com/kevingduck/ChatGPT-phone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Demo of twilio&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cold Call Genius AKA ChatGPT Phone&lt;/h1&gt; &#xA;&lt;h3&gt;Practice realistic cold calls with an AI bot&lt;/h3&gt; &#xA;&lt;p&gt;&lt;del&gt;‚ñ∂Ô∏è &lt;em&gt;Try it now! call 864-387-2800 and test out your best pitch!&lt;/em&gt;&lt;/del&gt; This is offline now but the code is available for you to run yourself üëÄ&lt;/p&gt; &#xA;&lt;p&gt;üì≤ This app uses a twilio number to point to a python script running on ngrok server&lt;/p&gt; &#xA;&lt;p&gt;üì± Twilio configuration for phone number, ngrok URL endpoint&lt;/p&gt; &#xA;&lt;p&gt;üíª python script &#39;start.py&#39; runs as system service&lt;/p&gt; &#xA;&lt;p&gt;üï∏Ô∏è ngrok starts server pointing to coldcallgenius.ngrok.io&lt;/p&gt; &#xA;&lt;p&gt;üèÉ Services restart and run while server is up&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Cold Call Genius Setup Playbook&lt;/h1&gt; &#xA;&lt;h3&gt;Overview&lt;/h3&gt; &#xA;&lt;p&gt;This playbook guides you through the setup process of the Cold Call Genius application, a voice chatbot that leverages Twilio, Deepgram, and OpenAI (GPT-4) to conduct phone conversations. Follow these steps to replicate the setup for future instances.&lt;/p&gt; &#xA;&lt;p&gt;The source code and necessary files for the setup can be found in the &lt;a href=&#34;https://github.com/kevingduck/ColdCallGenius&#34;&gt;GitHub repository&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Before you start, make sure you have &lt;em&gt;Python 3.10+&lt;/em&gt; installed on your system.&lt;/p&gt; &#xA;&lt;h4&gt;Necessary API keys:&lt;/h4&gt; &#xA;&lt;p&gt;Twilio API Key OpenAI API Key (for GPT-4) Deepgram API Key&lt;/p&gt; &#xA;&lt;h2&gt;Steps&lt;/h2&gt; &#xA;&lt;h3&gt;Clone the Repository&lt;/h3&gt; &#xA;&lt;p&gt;Clone the &lt;a href=&#34;https://github.com/kevingduck/ColdCallGenius&#34;&gt;Cold Call Genius GitHub repository&lt;/a&gt; to your local system or server.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;git clone https://github.com/kevingduck/ColdCallGenius.git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Install Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Navigate to the cloned repository and install the necessary Python packages. You can find these in the requirements.txt file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd ColdCallGenius&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configure Environment Variables&lt;/h3&gt; &#xA;&lt;p&gt;Create a .env file in the repository folder and set the following environment variables with your API keys:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;OPENAI_API_KEY=your_openai_api_key&#xA;CONSOLE_API_KEY=your_deepgram_api_key&#xA;TWILIO_ACCOUNT_SID=your_twilio_account_sid&#xA;TWILIO_AUTH_TOKEN=your_twilio_auth_token&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setup Twilio&lt;/h3&gt; &#xA;&lt;p&gt;Set up a Twilio account and obtain a Twilio phone number.&lt;/p&gt; &#xA;&lt;p&gt;In the Twilio console, configure the webhook endpoint to point to the URL generated by ngrok (detailed in the next step) followed by /twilio/twiml/start. For instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://your-ngrok-subdomain.ngrok.io/twilio/twiml/start.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setup ngrok&lt;/h3&gt; &#xA;&lt;p&gt;Install ngrok on your system or server.&lt;/p&gt; &#xA;&lt;p&gt;Authenticate following the &lt;a href=&#34;https://dashboard.ngrok.com/get-started/setup&#34;&gt;steps here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Run the following command to create a publicly accessible URL that forwards to your local server on port 8080 (reserve your own domain in ngrok settings):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ngrok http --hostname=coldcallgenius.ngrok.io 8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;At this point you should be able to run &lt;code&gt;python3 start.py&lt;/code&gt; in one terminal and &lt;code&gt;ngrok http 8080&lt;/code&gt; in another. In the Twilio console, set the endpoint as the ngrok URL, e.g., http://&amp;lt;ngrok-url.io&amp;gt;/twilio/twiml/start. You should be able to call the number and see it register on the ngrok terminal and also see the python script responding.&lt;/p&gt; &#xA;&lt;p&gt;Continue on to make it more resilient with system services. A $10/mo subscription to ngrok is recommended as it gets you a static domain that doesn&#39;t go down (otherwise setup an apahce/ nginx server).&lt;/p&gt; &#xA;&lt;h3&gt;Create System Services&lt;/h3&gt; &#xA;&lt;p&gt;Create system services to manage the Python script (start.py) and the ngrok script. Pre-created files are available in the system_config directory. These services will ensure that the scripts run continuously and restart in case of failures or system restarts.&lt;/p&gt; &#xA;&lt;p&gt;Before we begin, ensure you have necessary packages installed. You might require systemd and python3 (along with pip to install dependencies from the repository).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt update&#xA;sudo apt install systemd python3 python3-pip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Navigate to the project directory&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd ColdCallGenius&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Inside the repository folder, install the necessary Python dependencies using pip. It&#39;s recommended to do this in a virtual environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 -m venv venv&#xA;source venv/bin/activate&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, create a systemd service file to manage the start.py script. Open a new file in the /etc/systemd/system directory (you&#39;ll need root permissions):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo nano /etc/systemd/system/coldcallgenius.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the editor, fill out the service file with the following details:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Unit]&#xA;Description=Cold Call Genius Service&#xA;After=network.target&#xA;&#xA;[Service]&#xA;User=yourusername&#xA;WorkingDirectory=/path/to/your/repository/ColdCallGenius&#xA;ExecStart=/path/to/your/repository/ColdCallGenius/venv/bin/python /path/to/your/repository/ColdCallGenius/start.py&#xA;Restart=always&#xA;&#xA;[Install]&#xA;WantedBy=multi-user.target&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace /path/to/your/repository with the actual path where the repository is cloned and yourusername with your Linux username.&lt;/p&gt; &#xA;&lt;p&gt;Now, enable and start the service to make it run on boot:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo systemctl enable coldcallgenius.service&#xA;sudo systemctl start coldcallgenius.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can verify if the service is running successfully by checking its status:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo systemctl status coldcallgenius.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Repeat the steps for the ngrok service. This is the service file coldcallgenius-ngrok.service:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo nano /etc/systemd/system/coldcallgenius-ngrok.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Unit]&#xA;Description=ngrok HTTP Tunnel Service&#xA;After=network.target&#xA;&#xA;[Service]&#xA;ExecStart=/usr/local/bin/ngrok http --hostname=coldcallgenius.ngrok.io 8080&#xA;Restart=always&#xA;User=admin&#xA;&#xA;&#xA;[Install]&#xA;WantedBy=multi-user.target&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then run this to enable it at startup and run it now:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo systemctl enable coldcallgenius-ngrok.service&#xA;sudo systemctl start coldcallgenius-ngrok.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;p&gt;Once the script and ngrok are running, call the twilio number to test it out.&lt;/p&gt; &#xA;&lt;h3&gt;Logs&lt;/h3&gt; &#xA;&lt;p&gt;You can use the journalctl command to view the logs of your service. To watch the logs in real time, use the -f flag, which tells journalctl to follow the log output, similar to tail -f:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo journalctl -u coldcallgenius.service -f&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>atopile/atopile</title>
    <updated>2024-02-08T01:43:00Z</updated>
    <id>tag:github.com,2024-02-08:/atopile/atopile</id>
    <link href="https://github.com/atopile/atopile" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool to create electronic circuit boards with code. Find our docs here: https://atopile.io/getting-started/&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://github.com/atopile/atopile/assets/9785003/00f19584-18a2-4b5f-9ce4-1248798974dd&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; src=&#34;https://github.com/atopile/atopile/assets/9785003/d38941c1-d7c1-42e6-9b94-a62a0996bc19&#34;&gt; &#xA;  &lt;img alt=&#34;Shows a black logo in light color mode and a white one in dark color mode.&#34; src=&#34;https://github.com/atopile/atopile/assets/9785003/d38941c1-d7c1-42e6-9b94-a62a0996bc19&#34;&gt; &#xA; &lt;/picture&gt; &lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/atopile/atopile/main/#&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/atopile.svg?sanitize=true&#34; alt=&#34;Version&#34; style=&#34;vertical-align:top; margin:6px 4px&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/atopile/atopile/main/#&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/atopile/atopile.svg?sanitize=true&#34; alt=&#34;License&#34; style=&#34;vertical-align:top; margin:6px 4px&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/atopile/atopile/main/#&#34;&gt; &lt;img src=&#34;https://github.com/atopile/atopile/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34; style=&#34;vertical-align:top; margin:6px 4px&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/atopile/atopile/main/docs/assets/images/code-layout-pcb.png&#34; alt=&#34;Logo atopile&#34; title=&#34;Logo atopile&#34;&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;h2&gt;üìñ What Is &lt;code&gt;atopile&lt;/code&gt;?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;atopile&lt;/code&gt; is a tool to build electronic circuit boards with code.&lt;/p&gt; &#xA;&lt;h2&gt;üó£Ô∏è Join Us On Discord&lt;/h2&gt; &#xA;&lt;p&gt;What&#39;s your story in electronics? What would you like us to build? Come talk on discord.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/nr5V3QRUd3&#34;&gt;&lt;img src=&#34;https://discordapp.com/api/guilds/1022538123915300865/widget.png?style=banner2&#34; alt=&#34;Discord Banner 3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ö°Ô∏è&lt;code&gt;ato&lt;/code&gt; Code Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Simple Examples:&lt;/h3&gt; &#xA;&lt;h4&gt;Voltage Divider&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import Resistor from &#34;generics/resistors.ato&#34;&#xA;&#xA;module VoltageDivider:&#xA;    signal top&#xA;    signal out&#xA;    signal bottom&#xA;&#xA;    r_top = new Resistor&#xA;    r_top.footprint = &#34;R0402&#34;&#xA;    r_top.value = 100kohm +/- 10%&#xA;&#xA;    r_bottom = new Resistor&#xA;    r_bottom.footprint = &#34;R0402&#34;&#xA;    r_bottom.value = 200kohm +/- 10%&#xA;&#xA;    top ~ r_top.p1; r_top.p2 ~ out&#xA;    out ~ r_bottom.p1; r_bottom.p2 ~ bottom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;RP2040 Blinky Circuit&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import RP2040Kit from &#34;rp2040/rp2040_kit.ato&#34;&#xA;import LEDIndicator from &#34;generics/leds.ato&#34;&#xA;import LDOReg3V3 from &#34;regulators/regulators.ato&#34;&#xA;import USBCConn from &#34;usb-connectors/usb-connectors.ato&#34;&#xA;&#xA;module Blinky:&#xA;    micro_controller = new RP2040Kit&#xA;    led_indicator = new LEDIndicator&#xA;    voltage_regulator = new LDOReg3V3&#xA;    usb_c_connector = new USBCConn&#xA;&#xA;    usb_c_connector.power ~ voltage_regulator.power_in&#xA;    voltage_regulator.power_out ~ micro_controller.power&#xA;    micro_controller.gpio13 ~ led_indicator.input&#xA;    micro_controller.power.gnd ~ led_indicator.gnd&#xA;&#xA;    led_indicator.resistor.value = 100ohm +/- 10%&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Full Projects&lt;/h3&gt; &#xA;&lt;p&gt;Checkout out the &lt;a href=&#34;https://github.com/atopile/spin-servo-drive&#34;&gt;servo drive project&lt;/a&gt; of the &lt;a href=&#34;https://github.com/timot05/logic-card&#34;&gt;logic card project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üî® Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Find our &lt;a href=&#34;https://atopile.io/getting-started/&#34;&gt;documentation&lt;/a&gt; and getting started &lt;a href=&#34;https://www.youtube.com/watch?v=7aeZLlA_VYA&#34;&gt;video&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;atopile&lt;/code&gt; is on pypi.org: &lt;a href=&#34;https://pypi.org/project/atopile/&#34;&gt;https://pypi.org/project/atopile/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Most Basic Installation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;atopile&lt;/code&gt; requires &lt;em&gt;python3.11&lt;/em&gt; or later, which you can install using your package manager or from &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;python.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then just &lt;code&gt;pip install atopile&lt;/code&gt; and you&#39;re good to go!&lt;/p&gt; &#xA;&lt;h2&gt;‚ùì Why Atopile?&lt;/h2&gt; &#xA;&lt;p&gt;The objective of atopile is to help push forward these pardiagrams from the software world to hardware, mainly these points:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Intelligent Design Capture&lt;/strong&gt;: Define hardware specifications like ratios and tolerances in code, enabling precise control and easy reuse of designs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Version Control Integration&lt;/strong&gt;: Use git to manage design changes, facilitating collaboration and ensuring each iteration is thoroughly reviewed and validated.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Continuous Integration (CI)&lt;/strong&gt;: Implement CI to guarantee high-quality, compliant designs with every commit, represented by a green checkmark for assurance.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Describing hardware with code might seem odd at first glance. But once you realize it introduces software development paradigms and toolchains to hardware design, you&#39;ll be hooked, just like we&#39;ve become.&lt;/p&gt; &#xA;&lt;p&gt;Code can &lt;strong&gt;capture the intelligence&lt;/strong&gt; you put into your work. Imagine configuring not the resistance values of a voltage divider, but its ratio and total resistance, all using &lt;strong&gt;physical units&lt;/strong&gt; and &lt;strong&gt;tolerances&lt;/strong&gt;. You can do this because someone before you described precisely what this module is and described the relationships between the values of the components and the function you care about. Now instead imagine what you can gain from &lt;strong&gt;reusing&lt;/strong&gt; a buck design you can merely &lt;strong&gt;configure&lt;/strong&gt; the target voltage and ripple of. Now imagine &lt;strong&gt;installing&lt;/strong&gt; a &lt;a href=&#34;https://github.com/atopile/spin-servo-drive&#34;&gt;servo drive&lt;/a&gt; the same way you might numpy.&lt;/p&gt; &#xA;&lt;p&gt;Version controlling your designs using &lt;strong&gt;git&lt;/strong&gt; means you can deeply &lt;strong&gt;validate&lt;/strong&gt; and &lt;strong&gt;review&lt;/strong&gt; changes a feature at a time, &lt;strong&gt;isolated&lt;/strong&gt; from impacting others&#39; work. It means you can detangle your organisation and &lt;strong&gt;collaborate&lt;/strong&gt; on an unprecedented scale. We can forgo half-baked &#34;releases&#34; in favor of stamping a simple git-hash on our prototypes, providing an anchor off which to &lt;strong&gt;associate test data&lt;/strong&gt; and expectations.&lt;/p&gt; &#xA;&lt;p&gt;Implementing CI to &lt;strong&gt;test&lt;/strong&gt; our work ensures both &lt;strong&gt;high-quality&lt;/strong&gt; and &lt;strong&gt;compliance&lt;/strong&gt;, all summarised in a green check mark, emboldening teams to target excellence.&lt;/p&gt; &#xA;&lt;h2&gt;üîç Discover what people build&lt;/h2&gt; &#xA;&lt;p&gt;Browse and submit your modules at &lt;a href=&#34;https://packages.atopile.io&#34;&gt;packages.atopile.io&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>airbytehq/airbyte</title>
    <updated>2024-02-08T01:43:00Z</updated>
    <id>tag:github.com,2024-02-08:/airbytehq/airbyte</id>
    <link href="https://github.com/airbytehq/airbyte" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The leading data integration platform for ETL / ELT data pipelines from APIs, databases &amp; files to data warehouses, data lakes &amp; data lakehouses. Both self-hosted and Cloud-hosted.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://airbyte.com&#34;&gt;&lt;img src=&#34;https://assets.website-files.com/605e01bc25f7e19a82e74788/624d9c4a375a55100be6b257_Airbyte_logo_color_dark.svg?sanitize=true&#34; alt=&#34;Airbyte&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;em&gt;Data integration platform for ELT pipelines from APIs, databases &amp;amp; files to databases, warehouses &amp;amp; lakes&lt;/em&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/airbytehq/airbyte/stargazers/&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/airbytehq/airbyte?style=social&amp;amp;label=Star&amp;amp;maxAge=2592000&#34; alt=&#34;Test&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/airbytehq/airbyte/releases&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/airbytehq/airbyte?color=white&#34; alt=&#34;Release&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://airbytehq.slack.com/&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/slack-join-white.svg?logo=slack&#34; alt=&#34;Slack&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/c/AirbyteHQ/?sub_confirmation=1&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;YouTube Channel Views&#34; src=&#34;https://img.shields.io/youtube/channel/views/UCQ_JWEFzs1_INqdhIO3kmrw?style=social&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/airbytehq/airbyte/actions/workflows/gradle.yml&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/airbytehq/airbyte/gradle.yml?branch=master&#34; alt=&#34;Build&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/airbytehq/airbyte/tree/master/docs/project-overview/licenses&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/static/v1?label=license&amp;amp;message=MIT&amp;amp;color=white&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/airbytehq/airbyte/tree/master/docs/project-overview/licenses&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/static/v1?label=license&amp;amp;message=ELv2&amp;amp;color=white&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;We believe that only an &lt;strong&gt;open-source solution to data movement&lt;/strong&gt; can cover the long tail of data sources while empowering data engineers to customize existing connectors. Our ultimate vision is to help you move data from any source to any destination. Airbyte already provides the largest &lt;a href=&#34;https://docs.airbyte.com/integrations/&#34;&gt;catalog&lt;/a&gt; of 300+ connectors for APIs, databases, data warehouses, and data lakes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/airbytehq/airbyte/assets/10663571/870d0479-2765-4ecb-abd5-a5bb877dae37&#34; alt=&#34;Airbyte OSS Connections UI&#34;&gt; &lt;em&gt;Screenshot taken from &lt;a href=&#34;https://cloud.airbyte.com/signup&#34;&gt;Airbyte Cloud&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.airbyte.com/quickstart/deploy-airbyte&#34;&gt;Deploy Airbyte Open Source&lt;/a&gt; or set up &lt;a href=&#34;https://docs.airbyte.com/cloud/getting-started-with-airbyte-cloud&#34;&gt;Airbyte Cloud&lt;/a&gt; to start centralizing your data.&lt;/li&gt; &#xA; &lt;li&gt;Create connectors in minutes with our &lt;a href=&#34;https://docs.airbyte.com/connector-development/connector-builder-ui/overview&#34;&gt;no-code Connector Builder&lt;/a&gt; or &lt;a href=&#34;https://docs.airbyte.com/connector-development/config-based/low-code-cdk-overview&#34;&gt;low-code CDK&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Explore popular use cases in our &lt;a href=&#34;https://airbyte.com/tutorials&#34;&gt;tutorials&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Orchestrate Airbyte syncs with &lt;a href=&#34;https://docs.airbyte.com/operator-guides/using-the-airflow-airbyte-operator&#34;&gt;Airflow&lt;/a&gt;, &lt;a href=&#34;https://docs.airbyte.com/operator-guides/using-prefect-task&#34;&gt;Prefect&lt;/a&gt;, &lt;a href=&#34;https://docs.airbyte.com/operator-guides/using-dagster-integration&#34;&gt;Dagster&lt;/a&gt;, &lt;a href=&#34;https://docs.airbyte.com/operator-guides/using-kestra-plugin&#34;&gt;Kestra&lt;/a&gt; or the &lt;a href=&#34;https://reference.airbyte.com/reference/start&#34;&gt;Airbyte API&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Easily transform loaded data with &lt;a href=&#34;https://docs.airbyte.com/operator-guides/transformation-and-normalization/transformations-with-sql&#34;&gt;SQL&lt;/a&gt; or &lt;a href=&#34;https://docs.airbyte.com/operator-guides/transformation-and-normalization/transformations-with-dbt&#34;&gt;dbt&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Try it out yourself with our &lt;a href=&#34;https://demo.airbyte.io/&#34;&gt;demo app&lt;/a&gt;, visit our &lt;a href=&#34;https://docs.airbyte.com/&#34;&gt;full documentation&lt;/a&gt; and learn more about &lt;a href=&#34;https://airbyte.com/blog-categories/company-updates&#34;&gt;recent announcements&lt;/a&gt;. See our &lt;a href=&#34;https://connectors.airbyte.com/files/generated_reports/connector_registry_report.html&#34;&gt;registry&lt;/a&gt; for a full list of connectors already available in Airbyte or Airbyte Cloud.&lt;/p&gt; &#xA;&lt;h3&gt;Join the Airbyte Community&lt;/h3&gt; &#xA;&lt;p&gt;The Airbyte community can be found in the &lt;a href=&#34;https://airbyte.com/community&#34;&gt;Airbyte Community Slack&lt;/a&gt;, where you can ask questions and voice ideas. You can also ask for help in our &lt;a href=&#34;https://github.com/airbytehq/airbyte/discussions&#34;&gt;Airbyte Forum&lt;/a&gt;, or join our &lt;a href=&#34;https://airbyte.io/daily-office-hours/&#34;&gt;Office Hours&lt;/a&gt;. Airbyte&#39;s roadmap is publicly viewable on &lt;a href=&#34;https://github.com/orgs/airbytehq/projects/37/views/1?pane=issue&amp;amp;itemId=26937554&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For videos and blogs on data engineering and building your data stack, check out Airbyte&#39;s &lt;a href=&#34;https://airbyte.com/content-hub&#34;&gt;Content Hub&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/c/AirbyteHQ&#34;&gt;Youtube&lt;/a&gt;, and sign up for our &lt;a href=&#34;https://airbyte.com/newsletter&#34;&gt;newsletter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Dedicated support with direct access to our team is also available for Open Source users. If you are interested, please fill out this &lt;a href=&#34;https://airbyte.com/talk-to-sales-premium-support&#34;&gt;form&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;ve found a problem with Airbyte, please open a &lt;a href=&#34;https://github.com/airbytehq/airbyte/issues/new/choose&#34;&gt;GitHub issue&lt;/a&gt;. To contribute to Airbyte and see our Code of Conduct, please see the &lt;a href=&#34;https://docs.airbyte.com/contributing-to-airbyte/&#34;&gt;contributing guide&lt;/a&gt;. We have a list of &lt;a href=&#34;https://github.com/airbytehq/airbyte/labels/contributor-program&#34;&gt;good first issues&lt;/a&gt; that contain bugs that have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.&lt;/p&gt; &#xA;&lt;h3&gt;Security&lt;/h3&gt; &#xA;&lt;p&gt;Airbyte takes security issues very seriously. &lt;strong&gt;Please do not file GitHub issues or post on our public forum for security vulnerabilities&lt;/strong&gt;. Email &lt;code&gt;security@airbyte.io&lt;/code&gt; if you believe you have uncovered a vulnerability. In the message, try to provide a description of the issue and ideally a way of reproducing it. The security team will get back to you as soon as possible.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://airbyte.com/airbyte-enterprise&#34;&gt;Airbyte Enterprise&lt;/a&gt; also offers additional security features (among others) on top of Airbyte Open Source.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/airbytehq/airbyte/master/docs/project-overview/licenses/&#34;&gt;LICENSE&lt;/a&gt; file for licensing information, and our &lt;a href=&#34;https://raw.githubusercontent.com/airbytehq/airbyte/master/docs/project-overview/licenses/license-faq.md&#34;&gt;FAQ&lt;/a&gt; for any questions you may have on that topic.&lt;/p&gt; &#xA;&lt;h3&gt;Thank You&lt;/h3&gt; &#xA;&lt;p&gt;Airbyte would not be possible without the support and assistance of other open-source tools and companies. Visit our &lt;a href=&#34;https://raw.githubusercontent.com/airbytehq/airbyte/master/THANK-YOU.md&#34;&gt;thank you page&lt;/a&gt; to learn more about how we build Airbyte.&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/airbytehq/airbyte/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=airbytehq/airbyte&#34;&gt; &lt;/a&gt;</summary>
  </entry>
</feed>