<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-12T01:36:39Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lllyasviel/stable-diffusion-webui-forge</title>
    <updated>2024-02-12T01:36:39Z</updated>
    <id>tag:github.com,2024-02-12:/lllyasviel/stable-diffusion-webui-forge</id>
    <link href="https://github.com/lllyasviel/stable-diffusion-webui-forge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stable Diffusion WebUI Forge&lt;/h1&gt; &#xA;&lt;p&gt;Stable Diffusion WebUI Forge is a platform on top of &lt;a href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui&#34;&gt;Stable Diffusion WebUI&lt;/a&gt; (based on &lt;a href=&#34;https://www.gradio.app/&#34;&gt;Gradio&lt;/a&gt;) to make development easier, optimize resource management, and speed up inference.&lt;/p&gt; &#xA;&lt;p&gt;The name &#34;Forge&#34; is inspired from &#34;Minecraft Forge&#34;. This project is aimed at becoming SD WebUI&#39;s Forge.&lt;/p&gt; &#xA;&lt;p&gt;Compared to original WebUI (for SDXL inference at 1024px), you can expect the below speed-ups:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If you use common GPU like 8GB vram, you can expect to get about &lt;strong&gt;30~45% speed up&lt;/strong&gt; in inference speed (it/s), the GPU memory peak (in task manager) will drop about 700MB to 1.3GB, the maximum diffusion resolution (that will not OOM) will increase about 2x to 3x, and the maximum diffusion batch size (that will not OOM) will increase about 4x to 6x.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you use less powerful GPU like 6GB vram, you can expect to get about &lt;strong&gt;60~75% speed up&lt;/strong&gt; in inference speed (it/s), the GPU memory peak (in task manager) will drop about 800MB to 1.5GB, the maximum diffusion resolution (that will not OOM) will increase about 3x, and the maximum diffusion batch size (that will not OOM) will increase about 4x.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you use powerful GPU like 4090 with 24GB vram, you can expect to get about &lt;strong&gt;3~6% speed up&lt;/strong&gt; in inference speed (it/s), the GPU memory peak (in task manager) will drop about 1GB to 1.4GB, the maximum diffusion resolution (that will not OOM) will increase about 1.6x, and the maximum diffusion batch size (that will not OOM) will increase about 2x.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you use ControlNet for SDXL, the maximum ControlNet count (that will not OOM) will increase about 2x, the speed with SDXL+ControlNet will &lt;strong&gt;speed up about 30~45%&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Another very important change that Forge brings is &lt;strong&gt;Unet Patcher&lt;/strong&gt;. Using Unet Patcher, methods like Self-Attention Guidance, Kohya High Res Fix, FreeU, StyleAlign, Hypertile can all be implemented in about 100 lines of codes.&lt;/p&gt; &#xA;&lt;p&gt;Thanks to Unet Patcher, many new things are possible now and supported in Forge, including SVD, Z123, masked Ip-adapter, masked controlnet, photomaker, etc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;No need to monkeypatch UNet and conflict other extensions anymore!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Forge also adds a few samplers, including but not limited to DDPM, DDPM Karras, DPM++ 2M Turbo, DPM++ 2M SDE Turbo, LCM Karras, Euler A Turbo, etc. (LCM is already in original webui since 1.7.0).&lt;/p&gt; &#xA;&lt;p&gt;Finally, Forge promise that we will only do our jobs. Forge will never add unnecessary opinioned changes to the user interface. You are still using 100% Automatic1111 WebUI.&lt;/p&gt; &#xA;&lt;h1&gt;Installing Forge&lt;/h1&gt; &#xA;&lt;p&gt;If you are proficient in Git and you want to install Forge as another branch of SD-WebUI, please see &lt;a href=&#34;https://github.com/continue-revolution/sd-webui-animatediff/raw/forge/master/docs/how-to-use.md#you-have-a1111-and-you-know-git&#34;&gt;here&lt;/a&gt;. In this way, you can reuse all SD checkpoints and all extensions you installed previously in your OG SD-WebUI, but you should know what you are doing.&lt;/p&gt; &#xA;&lt;p&gt;If you know what you are doing, you can install Forge using same method as SD-WebUI. (Install Git, Python, Git Clone the forge repo &lt;code&gt;https://github.com/lllyasviel/stable-diffusion-webui-forge.git&lt;/code&gt; and then run webui-user.bat).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Or you can just use this one-click installation package (with git and python included).&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/releases/download/latest/webui_forge_cu121_torch21.7z&#34;&gt;&amp;gt;&amp;gt;&amp;gt; Click Here to Download One-Click Package&amp;lt;&amp;lt;&amp;lt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;After you download, you uncompress, use &lt;code&gt;update.bat&lt;/code&gt; to update, and use &lt;code&gt;run.bat&lt;/code&gt; to run.&lt;/p&gt; &#xA;&lt;p&gt;Note that running &lt;code&gt;update.bat&lt;/code&gt; is important, otherwise you may be using a previous version with potential bugs unfixed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/c49bd60d-82bd-4086-9859-88d472582b94&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Screenshots of Comparison&lt;/h1&gt; &#xA;&lt;p&gt;I tested with several devices, and this is a typical result from 8GB VRAM (3070ti laptop) with SDXL.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is original WebUI:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/16893937-9ed9-4f8e-b960-70cd5d1e288f&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/7bbc16fe-64ef-49e2-a595-d91bb658bd94&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/de1747fd-47bc-482d-a5c6-0728dd475943&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/96e5e171-2d74-41ba-9dcc-11bf68be7e16&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;(average about 7.4GB/8GB, peak at about 7.9GB/8GB)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is WebUI Forge:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/ca5e05ed-bd86-4ced-8662-f41034648e8c&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/3629ee36-4a99-4d9b-b371-12efb260a283&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/6d13ebb7-c30d-4aa8-9242-c0b5a1af8c95&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/c4f723c3-6ea7-4539-980b-0708ed2a69aa&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;(average and peak are all 6.3GB/8GB)&lt;/p&gt; &#xA;&lt;p&gt;You can see that Forge does not change WebUI results. Installing Forge is not a seed breaking change.&lt;/p&gt; &#xA;&lt;p&gt;Forge can perfectly keep WebUI unchanged even for most complicated prompts like &lt;code&gt;fantasy landscape with a [mountain:lake:0.25] and [an oak:a christmas tree:0.75][ in foreground::0.6][ in background:0.25] [shoddy:masterful:0.5]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All your previous works still work in Forge!&lt;/p&gt; &#xA;&lt;h1&gt;Forge Backend&lt;/h1&gt; &#xA;&lt;p&gt;Forge backend removes all WebUI&#39;s codes related to resource management and reworked everything. All previous CMD flags like &lt;code&gt;medvram, lowvram, medvram-sdxl, precision full, no half, no half vae, attention_xxx, upcast unet&lt;/code&gt;, ... are all &lt;strong&gt;REMOVED&lt;/strong&gt;. Adding these flags will not cause error but they will not do anything now. &lt;strong&gt;We highly encourage Forge users to remove all cmd flags and let Forge to decide how to load models.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Without any cmd flag, Forge can run SDXL with 4GB vram and SD1.5 with 2GB vram.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The only one flag that you may still need&lt;/strong&gt; is &lt;code&gt;--always-offload-from-vram&lt;/code&gt; (This flag will make things &lt;strong&gt;slower&lt;/strong&gt;). This option will let Forge always unload models from VRAM. This can be useful if you use multiple software together and want Forge to use less VRAM and give some vram to other software, or when you are using some old extensions that will compete vram with Forge, or (very rarely) when you get OOM.&lt;/p&gt; &#xA;&lt;p&gt;If you really want to play with cmd flags, you can additionally control the GPU with:&lt;/p&gt; &#xA;&lt;p&gt;(extreme VRAM cases)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--always-gpu&#xA;--always-cpu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(rare attention cases)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--attention-split&#xA;--attention-quad&#xA;--attention-pytorch&#xA;--disable-xformers&#xA;--disable-attention-upcast&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(float point type)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--all-in-fp32&#xA;--all-in-fp16&#xA;--unet-in-bf16&#xA;--unet-in-fp16&#xA;--unet-in-fp8-e4m3fn&#xA;--unet-in-fp8-e5m2&#xA;--vae-in-fp16&#xA;--vae-in-fp32&#xA;--vae-in-bf16&#xA;--clip-in-fp8-e4m3fn&#xA;--clip-in-fp8-e5m2&#xA;--clip-in-fp16&#xA;--clip-in-fp32&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(rare platforms)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--directml&#xA;--disable-ipex-hijack&#xA;--pytorch-deterministic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Again, Forge do not recommend users to use any cmd flags unless you are very sure that you really need these.&lt;/p&gt; &#xA;&lt;h1&gt;UNet Patcher&lt;/h1&gt; &#xA;&lt;p&gt;Note that &lt;a href=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/discussions/169&#34;&gt;Forge does not use any other software as backend&lt;/a&gt;. The full name of the backend is &lt;code&gt;Stable Diffusion WebUI with Forge backend&lt;/code&gt;, or for simplicity, the &lt;code&gt;Forge backend&lt;/code&gt;. The API and python symbols are made similar to previous software only for reducing the learning cost of developers.&lt;/p&gt; &#xA;&lt;p&gt;Now developing an extension is super simple. We finally have a patchable UNet.&lt;/p&gt; &#xA;&lt;p&gt;Below is using one single file with 80 lines of codes to support FreeU:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;extensions-builtin/sd_forge_freeu/scripts/forge_freeu.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;import gradio as gr&#xA;from modules import scripts&#xA;&#xA;&#xA;def Fourier_filter(x, threshold, scale):&#xA;    x_freq = torch.fft.fftn(x.float(), dim=(-2, -1))&#xA;    x_freq = torch.fft.fftshift(x_freq, dim=(-2, -1))&#xA;    B, C, H, W = x_freq.shape&#xA;    mask = torch.ones((B, C, H, W), device=x.device)&#xA;    crow, ccol = H // 2, W //2&#xA;    mask[..., crow - threshold:crow + threshold, ccol - threshold:ccol + threshold] = scale&#xA;    x_freq = x_freq * mask&#xA;    x_freq = torch.fft.ifftshift(x_freq, dim=(-2, -1))&#xA;    x_filtered = torch.fft.ifftn(x_freq, dim=(-2, -1)).real&#xA;    return x_filtered.to(x.dtype)&#xA;&#xA;&#xA;def set_freeu_v2_patch(model, b1, b2, s1, s2):&#xA;    model_channels = model.model.model_config.unet_config[&#34;model_channels&#34;]&#xA;    scale_dict = {model_channels * 4: (b1, s1), model_channels * 2: (b2, s2)}&#xA;&#xA;    def output_block_patch(h, hsp, *args, **kwargs):&#xA;        scale = scale_dict.get(h.shape[1], None)&#xA;        if scale is not None:&#xA;            hidden_mean = h.mean(1).unsqueeze(1)&#xA;            B = hidden_mean.shape[0]&#xA;            hidden_max, _ = torch.max(hidden_mean.view(B, -1), dim=-1, keepdim=True)&#xA;            hidden_min, _ = torch.min(hidden_mean.view(B, -1), dim=-1, keepdim=True)&#xA;            hidden_mean = (hidden_mean - hidden_min.unsqueeze(2).unsqueeze(3)) / \&#xA;                          (hidden_max - hidden_min).unsqueeze(2).unsqueeze(3)&#xA;            h[:, :h.shape[1] // 2] = h[:, :h.shape[1] // 2] * ((scale[0] - 1) * hidden_mean + 1)&#xA;            hsp = Fourier_filter(hsp, threshold=1, scale=scale[1])&#xA;        return h, hsp&#xA;&#xA;    m = model.clone()&#xA;    m.set_model_output_block_patch(output_block_patch)&#xA;    return m&#xA;&#xA;&#xA;class FreeUForForge(scripts.Script):&#xA;    def title(self):&#xA;        return &#34;FreeU Integrated&#34;&#xA;&#xA;    def show(self, is_img2img):&#xA;        # make this extension visible in both txt2img and img2img tab.&#xA;        return scripts.AlwaysVisible&#xA;&#xA;    def ui(self, *args, **kwargs):&#xA;        with gr.Accordion(open=False, label=self.title()):&#xA;            freeu_enabled = gr.Checkbox(label=&#39;Enabled&#39;, value=False)&#xA;            freeu_b1 = gr.Slider(label=&#39;B1&#39;, minimum=0, maximum=2, step=0.01, value=1.01)&#xA;            freeu_b2 = gr.Slider(label=&#39;B2&#39;, minimum=0, maximum=2, step=0.01, value=1.02)&#xA;            freeu_s1 = gr.Slider(label=&#39;S1&#39;, minimum=0, maximum=4, step=0.01, value=0.99)&#xA;            freeu_s2 = gr.Slider(label=&#39;S2&#39;, minimum=0, maximum=4, step=0.01, value=0.95)&#xA;&#xA;        return freeu_enabled, freeu_b1, freeu_b2, freeu_s1, freeu_s2&#xA;&#xA;    def process_before_every_sampling(self, p, *script_args, **kwargs):&#xA;        # This will be called before every sampling.&#xA;        # If you use highres fix, this will be called twice.&#xA;        &#xA;        freeu_enabled, freeu_b1, freeu_b2, freeu_s1, freeu_s2 = script_args&#xA;&#xA;        if not freeu_enabled:&#xA;            return&#xA;&#xA;        unet = p.sd_model.forge_objects.unet&#xA;&#xA;        unet = set_freeu_v2_patch(unet, freeu_b1, freeu_b2, freeu_s1, freeu_s2)&#xA;&#xA;        p.sd_model.forge_objects.unet = unet&#xA;&#xA;        # Below codes will add some logs to the texts below the image outputs on UI.&#xA;        # The extra_generation_params does not influence results.&#xA;        p.extra_generation_params.update(dict(&#xA;            freeu_enabled=freeu_enabled,&#xA;            freeu_b1=freeu_b1,&#xA;            freeu_b2=freeu_b2,&#xA;            freeu_s1=freeu_s1,&#xA;            freeu_s2=freeu_s2,&#xA;        ))&#xA;&#xA;        return&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It looks like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/277bac6e-5ea7-4bff-b71a-e55a60cfc03c&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Similar components like HyperTile, KohyaHighResFix, SAG, can all be implemented within 100 lines of codes (see also the codes).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/06472b03-b833-4816-ab47-70712ac024d3&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;ControlNets can finally be called by different extensions.&lt;/p&gt; &#xA;&lt;p&gt;Implementing Stable Video Diffusion and Zero123 are also super simple now (see also the codes).&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Stable Video Diffusion:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;extensions-builtin/sd_forge_svd/scripts/forge_svd.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;import gradio as gr&#xA;import os&#xA;import pathlib&#xA;&#xA;from modules import script_callbacks&#xA;from modules.paths import models_path&#xA;from modules.ui_common import ToolButton, refresh_symbol&#xA;from modules import shared&#xA;&#xA;from modules_forge.forge_util import numpy_to_pytorch, pytorch_to_numpy&#xA;from ldm_patched.modules.sd import load_checkpoint_guess_config&#xA;from ldm_patched.contrib.external_video_model import VideoLinearCFGGuidance, SVD_img2vid_Conditioning&#xA;from ldm_patched.contrib.external import KSampler, VAEDecode&#xA;&#xA;&#xA;opVideoLinearCFGGuidance = VideoLinearCFGGuidance()&#xA;opSVD_img2vid_Conditioning = SVD_img2vid_Conditioning()&#xA;opKSampler = KSampler()&#xA;opVAEDecode = VAEDecode()&#xA;&#xA;svd_root = os.path.join(models_path, &#39;svd&#39;)&#xA;os.makedirs(svd_root, exist_ok=True)&#xA;svd_filenames = []&#xA;&#xA;&#xA;def update_svd_filenames():&#xA;    global svd_filenames&#xA;    svd_filenames = [&#xA;        pathlib.Path(x).name for x in&#xA;        shared.walk_files(svd_root, allowed_extensions=[&#34;.pt&#34;, &#34;.ckpt&#34;, &#34;.safetensors&#34;])&#xA;    ]&#xA;    return svd_filenames&#xA;&#xA;&#xA;@torch.inference_mode()&#xA;@torch.no_grad()&#xA;def predict(filename, width, height, video_frames, motion_bucket_id, fps, augmentation_level,&#xA;            sampling_seed, sampling_steps, sampling_cfg, sampling_sampler_name, sampling_scheduler,&#xA;            sampling_denoise, guidance_min_cfg, input_image):&#xA;    filename = os.path.join(svd_root, filename)&#xA;    model_raw, _, vae, clip_vision = \&#xA;        load_checkpoint_guess_config(filename, output_vae=True, output_clip=False, output_clipvision=True)&#xA;    model = opVideoLinearCFGGuidance.patch(model_raw, guidance_min_cfg)[0]&#xA;    init_image = numpy_to_pytorch(input_image)&#xA;    positive, negative, latent_image = opSVD_img2vid_Conditioning.encode(&#xA;        clip_vision, init_image, vae, width, height, video_frames, motion_bucket_id, fps, augmentation_level)&#xA;    output_latent = opKSampler.sample(model, sampling_seed, sampling_steps, sampling_cfg,&#xA;                                      sampling_sampler_name, sampling_scheduler, positive,&#xA;                                      negative, latent_image, sampling_denoise)[0]&#xA;    output_pixels = opVAEDecode.decode(vae, output_latent)[0]&#xA;    outputs = pytorch_to_numpy(output_pixels)&#xA;    return outputs&#xA;&#xA;&#xA;def on_ui_tabs():&#xA;    with gr.Blocks() as svd_block:&#xA;        with gr.Row():&#xA;            with gr.Column():&#xA;                input_image = gr.Image(label=&#39;Input Image&#39;, source=&#39;upload&#39;, type=&#39;numpy&#39;, height=400)&#xA;&#xA;                with gr.Row():&#xA;                    filename = gr.Dropdown(label=&#34;SVD Checkpoint Filename&#34;,&#xA;                                           choices=svd_filenames,&#xA;                                           value=svd_filenames[0] if len(svd_filenames) &amp;gt; 0 else None)&#xA;                    refresh_button = ToolButton(value=refresh_symbol, tooltip=&#34;Refresh&#34;)&#xA;                    refresh_button.click(&#xA;                        fn=lambda: gr.update(choices=update_svd_filenames),&#xA;                        inputs=[], outputs=filename)&#xA;&#xA;                width = gr.Slider(label=&#39;Width&#39;, minimum=16, maximum=8192, step=8, value=1024)&#xA;                height = gr.Slider(label=&#39;Height&#39;, minimum=16, maximum=8192, step=8, value=576)&#xA;                video_frames = gr.Slider(label=&#39;Video Frames&#39;, minimum=1, maximum=4096, step=1, value=14)&#xA;                motion_bucket_id = gr.Slider(label=&#39;Motion Bucket Id&#39;, minimum=1, maximum=1023, step=1, value=127)&#xA;                fps = gr.Slider(label=&#39;Fps&#39;, minimum=1, maximum=1024, step=1, value=6)&#xA;                augmentation_level = gr.Slider(label=&#39;Augmentation Level&#39;, minimum=0.0, maximum=10.0, step=0.01,&#xA;                                               value=0.0)&#xA;                sampling_steps = gr.Slider(label=&#39;Sampling Steps&#39;, minimum=1, maximum=200, step=1, value=20)&#xA;                sampling_cfg = gr.Slider(label=&#39;CFG Scale&#39;, minimum=0.0, maximum=50.0, step=0.1, value=2.5)&#xA;                sampling_denoise = gr.Slider(label=&#39;Sampling Denoise&#39;, minimum=0.0, maximum=1.0, step=0.01, value=1.0)&#xA;                guidance_min_cfg = gr.Slider(label=&#39;Guidance Min Cfg&#39;, minimum=0.0, maximum=100.0, step=0.5, value=1.0)&#xA;                sampling_sampler_name = gr.Radio(label=&#39;Sampler Name&#39;,&#xA;                                                 choices=[&#39;euler&#39;, &#39;euler_ancestral&#39;, &#39;heun&#39;, &#39;heunpp2&#39;, &#39;dpm_2&#39;,&#xA;                                                          &#39;dpm_2_ancestral&#39;, &#39;lms&#39;, &#39;dpm_fast&#39;, &#39;dpm_adaptive&#39;,&#xA;                                                          &#39;dpmpp_2s_ancestral&#39;, &#39;dpmpp_sde&#39;, &#39;dpmpp_sde_gpu&#39;,&#xA;                                                          &#39;dpmpp_2m&#39;, &#39;dpmpp_2m_sde&#39;, &#39;dpmpp_2m_sde_gpu&#39;,&#xA;                                                          &#39;dpmpp_3m_sde&#39;, &#39;dpmpp_3m_sde_gpu&#39;, &#39;ddpm&#39;, &#39;lcm&#39;, &#39;ddim&#39;,&#xA;                                                          &#39;uni_pc&#39;, &#39;uni_pc_bh2&#39;], value=&#39;euler&#39;)&#xA;                sampling_scheduler = gr.Radio(label=&#39;Scheduler&#39;,&#xA;                                              choices=[&#39;normal&#39;, &#39;karras&#39;, &#39;exponential&#39;, &#39;sgm_uniform&#39;, &#39;simple&#39;,&#xA;                                                       &#39;ddim_uniform&#39;], value=&#39;karras&#39;)&#xA;                sampling_seed = gr.Number(label=&#39;Seed&#39;, value=12345, precision=0)&#xA;&#xA;                generate_button = gr.Button(value=&#34;Generate&#34;)&#xA;&#xA;                ctrls = [filename, width, height, video_frames, motion_bucket_id, fps, augmentation_level,&#xA;                         sampling_seed, sampling_steps, sampling_cfg, sampling_sampler_name, sampling_scheduler,&#xA;                         sampling_denoise, guidance_min_cfg, input_image]&#xA;&#xA;            with gr.Column():&#xA;                output_gallery = gr.Gallery(label=&#39;Gallery&#39;, show_label=False, object_fit=&#39;contain&#39;,&#xA;                                            visible=True, height=1024, columns=4)&#xA;&#xA;        generate_button.click(predict, inputs=ctrls, outputs=[output_gallery])&#xA;    return [(svd_block, &#34;SVD&#34;, &#34;svd&#34;)]&#xA;&#xA;&#xA;update_svd_filenames()&#xA;script_callbacks.on_ui_tabs(on_ui_tabs)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that although the above codes look like independent codes, they actually will automatically offload/unload any other models. For example, below is me opening webui, load SDXL, generated an image, then go to SVD, then generated image frames. You can see that the GPU memory is perfectly managed and the SDXL is moved to RAM then SVD is moved to GPU.&lt;/p&gt; &#xA;&lt;p&gt;Note that this management is fully automatic. This makes writing extensions super simple.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/de1a2d05-344a-44d7-bab8-9ecc0a58a8d3&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/14bcefcf-599f-42c3-bce9-3fd5e428dd91&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Similarly, Zero123:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/7685019c-7239-47fb-9cb5-2b7b33943285&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Write a simple ControlNet:&lt;/h3&gt; &#xA;&lt;p&gt;Below is a simple extension to have a completely independent pass of ControlNet that never conflicts any other extensions:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;extensions-builtin/sd_forge_controlnet_example/scripts/sd_forge_controlnet_example.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note that this extension is hidden because it is only for developers. To see it in UI, use &lt;code&gt;--show-controlnet-example&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The memory optimization in this example is fully automatic. You do not need to care about memory and inference speed, but you may want to cache objects if you wish.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Use --show-controlnet-example to see this extension.&#xA;&#xA;import cv2&#xA;import gradio as gr&#xA;import torch&#xA;&#xA;from modules import scripts&#xA;from modules.shared_cmd_options import cmd_opts&#xA;from modules_forge.shared import supported_preprocessors&#xA;from modules.modelloader import load_file_from_url&#xA;from ldm_patched.modules.controlnet import load_controlnet&#xA;from modules_forge.controlnet import apply_controlnet_advanced&#xA;from modules_forge.forge_util import numpy_to_pytorch&#xA;from modules_forge.shared import controlnet_dir&#xA;&#xA;&#xA;class ControlNetExampleForge(scripts.Script):&#xA;    model = None&#xA;&#xA;    def title(self):&#xA;        return &#34;ControlNet Example for Developers&#34;&#xA;&#xA;    def show(self, is_img2img):&#xA;        # make this extension visible in both txt2img and img2img tab.&#xA;        return scripts.AlwaysVisible&#xA;&#xA;    def ui(self, *args, **kwargs):&#xA;        with gr.Accordion(open=False, label=self.title()):&#xA;            gr.HTML(&#39;This is an example controlnet extension for developers.&#39;)&#xA;            gr.HTML(&#39;You see this extension because you used --show-controlnet-example&#39;)&#xA;            input_image = gr.Image(source=&#39;upload&#39;, type=&#39;numpy&#39;)&#xA;            funny_slider = gr.Slider(label=&#39;This slider does nothing. It just shows you how to transfer parameters.&#39;,&#xA;                                     minimum=0.0, maximum=1.0, value=0.5)&#xA;&#xA;        return input_image, funny_slider&#xA;&#xA;    def process(self, p, *script_args, **kwargs):&#xA;        input_image, funny_slider = script_args&#xA;&#xA;        # This slider does nothing. It just shows you how to transfer parameters.&#xA;        del funny_slider&#xA;&#xA;        if input_image is None:&#xA;            return&#xA;&#xA;        # controlnet_canny_path = load_file_from_url(&#xA;        #     url=&#39;https://huggingface.co/lllyasviel/sd_control_collection/resolve/main/sai_xl_canny_256lora.safetensors&#39;,&#xA;        #     model_dir=model_dir,&#xA;        #     file_name=&#39;sai_xl_canny_256lora.safetensors&#39;&#xA;        # )&#xA;        controlnet_canny_path = load_file_from_url(&#xA;            url=&#39;https://huggingface.co/lllyasviel/fav_models/resolve/main/fav/control_v11p_sd15_canny_fp16.safetensors&#39;,&#xA;            model_dir=controlnet_dir,&#xA;            file_name=&#39;control_v11p_sd15_canny_fp16.safetensors&#39;&#xA;        )&#xA;        print(&#39;The model [control_v11p_sd15_canny_fp16.safetensors] download finished.&#39;)&#xA;&#xA;        self.model = load_controlnet(controlnet_canny_path)&#xA;        print(&#39;Controlnet loaded.&#39;)&#xA;&#xA;        return&#xA;&#xA;    def process_before_every_sampling(self, p, *script_args, **kwargs):&#xA;        # This will be called before every sampling.&#xA;        # If you use highres fix, this will be called twice.&#xA;&#xA;        input_image, funny_slider = script_args&#xA;&#xA;        if input_image is None or self.model is None:&#xA;            return&#xA;&#xA;        B, C, H, W = kwargs[&#39;noise&#39;].shape  # latent_shape&#xA;        height = H * 8&#xA;        width = W * 8&#xA;        batch_size = p.batch_size&#xA;&#xA;        preprocessor = supported_preprocessors[&#39;canny&#39;]&#xA;&#xA;        # detect control at certain resolution&#xA;        control_image = preprocessor(&#xA;            input_image, resolution=512, slider_1=100, slider_2=200, slider_3=None)&#xA;&#xA;        # here we just use nearest neighbour to align input shape.&#xA;        # You may want crop and resize, or crop and fill, or others.&#xA;        control_image = cv2.resize(&#xA;            control_image, (width, height), interpolation=cv2.INTER_NEAREST)&#xA;&#xA;        # Output preprocessor result. Now called every sampling. Cache in your own way.&#xA;        p.extra_result_images.append(control_image)&#xA;&#xA;        print(&#39;Preprocessor Canny finished.&#39;)&#xA;&#xA;        control_image_bchw = numpy_to_pytorch(control_image).movedim(-1, 1)&#xA;&#xA;        unet = p.sd_model.forge_objects.unet&#xA;&#xA;        # Unet has input, middle, output blocks, and we can give different weights&#xA;        # to each layers in all blocks.&#xA;        # Below is an example for stronger control in middle block.&#xA;        # This is helpful for some high-res fix passes. (p.is_hr_pass)&#xA;        positive_advanced_weighting = {&#xA;            &#39;input&#39;: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2],&#xA;            &#39;middle&#39;: [1.0],&#xA;            &#39;output&#39;: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2]&#xA;        }&#xA;        negative_advanced_weighting = {&#xA;            &#39;input&#39;: [0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95, 1.05, 1.15, 1.25],&#xA;            &#39;middle&#39;: [1.05],&#xA;            &#39;output&#39;: [0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95, 1.05, 1.15, 1.25]&#xA;        }&#xA;&#xA;        # The advanced_frame_weighting is a weight applied to each image in a batch.&#xA;        # The length of this list must be same with batch size&#xA;        # For example, if batch size is 5, the below list is [0.2, 0.4, 0.6, 0.8, 1.0]&#xA;        # If you view the 5 images as 5 frames in a video, this will lead to&#xA;        # progressively stronger control over time.&#xA;        advanced_frame_weighting = [float(i + 1) / float(batch_size) for i in range(batch_size)]&#xA;&#xA;        # The advanced_sigma_weighting allows you to dynamically compute control&#xA;        # weights given diffusion timestep (sigma).&#xA;        # For example below code can softly make beginning steps stronger than ending steps.&#xA;        sigma_max = unet.model.model_sampling.sigma_max&#xA;        sigma_min = unet.model.model_sampling.sigma_min&#xA;        advanced_sigma_weighting = lambda s: (s - sigma_min) / (sigma_max - sigma_min)&#xA;&#xA;        # You can even input a tensor to mask all control injections&#xA;        # The mask will be automatically resized during inference in UNet.&#xA;        # The size should be B 1 H W and the H and W are not important&#xA;        # because they will be resized automatically&#xA;        advanced_mask_weighting = torch.ones(size=(1, 1, 512, 512))&#xA;&#xA;        # But in this simple example we do not use them&#xA;        positive_advanced_weighting = None&#xA;        negative_advanced_weighting = None&#xA;        advanced_frame_weighting = None&#xA;        advanced_sigma_weighting = None&#xA;        advanced_mask_weighting = None&#xA;&#xA;        unet = apply_controlnet_advanced(unet=unet, controlnet=self.model, image_bchw=control_image_bchw,&#xA;                                         strength=0.6, start_percent=0.0, end_percent=0.8,&#xA;                                         positive_advanced_weighting=positive_advanced_weighting,&#xA;                                         negative_advanced_weighting=negative_advanced_weighting,&#xA;                                         advanced_frame_weighting=advanced_frame_weighting,&#xA;                                         advanced_sigma_weighting=advanced_sigma_weighting,&#xA;                                         advanced_mask_weighting=advanced_mask_weighting)&#xA;&#xA;        p.sd_model.forge_objects.unet = unet&#xA;&#xA;        # Below codes will add some logs to the texts below the image outputs on UI.&#xA;        # The extra_generation_params does not influence results.&#xA;        p.extra_generation_params.update(dict(&#xA;            controlnet_info=&#39;You should see these texts below output images!&#39;,&#xA;        ))&#xA;&#xA;        return&#xA;&#xA;&#xA;# Use --show-controlnet-example to see this extension.&#xA;if not cmd_opts.show_controlnet_example:&#xA;    del ControlNetExampleForge&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/822fa2fc-c9f4-4f58-8669-4b6680b91063&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Add a preprocessor&lt;/h3&gt; &#xA;&lt;p&gt;Below is the full codes to add a normalbae preprocessor with perfect memory managements.&lt;/p&gt; &#xA;&lt;p&gt;You can use arbitrary independent extensions to add a preprocessor.&lt;/p&gt; &#xA;&lt;p&gt;Your preprocessor will be read by all other extensions using &lt;code&gt;modules_forge.shared.preprocessors&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Below codes are in &lt;code&gt;extensions-builtin\forge_preprocessor_normalbae\scripts\preprocessor_normalbae.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from modules_forge.supported_preprocessor import Preprocessor, PreprocessorParameter&#xA;from modules_forge.shared import preprocessor_dir, add_supported_preprocessor&#xA;from modules_forge.forge_util import resize_image_with_pad&#xA;from modules.modelloader import load_file_from_url&#xA;&#xA;import types&#xA;import torch&#xA;import numpy as np&#xA;&#xA;from einops import rearrange&#xA;from annotator.normalbae.models.NNET import NNET&#xA;from annotator.normalbae import load_checkpoint&#xA;from torchvision import transforms&#xA;&#xA;&#xA;class PreprocessorNormalBae(Preprocessor):&#xA;    def __init__(self):&#xA;        super().__init__()&#xA;        self.name = &#39;normalbae&#39;&#xA;        self.tags = [&#39;NormalMap&#39;]&#xA;        self.model_filename_filters = [&#39;normal&#39;]&#xA;        self.slider_resolution = PreprocessorParameter(&#xA;            label=&#39;Resolution&#39;, minimum=128, maximum=2048, value=512, step=8, visible=True)&#xA;        self.slider_1 = PreprocessorParameter(visible=False)&#xA;        self.slider_2 = PreprocessorParameter(visible=False)&#xA;        self.slider_3 = PreprocessorParameter(visible=False)&#xA;        self.show_control_mode = True&#xA;        self.do_not_need_model = False&#xA;        self.sorting_priority = 100  # higher goes to top in the list&#xA;&#xA;    def load_model(self):&#xA;        if self.model_patcher is not None:&#xA;            return&#xA;&#xA;        model_path = load_file_from_url(&#xA;            &#34;https://huggingface.co/lllyasviel/Annotators/resolve/main/scannet.pt&#34;,&#xA;            model_dir=preprocessor_dir)&#xA;&#xA;        args = types.SimpleNamespace()&#xA;        args.mode = &#39;client&#39;&#xA;        args.architecture = &#39;BN&#39;&#xA;        args.pretrained = &#39;scannet&#39;&#xA;        args.sampling_ratio = 0.4&#xA;        args.importance_ratio = 0.7&#xA;        model = NNET(args)&#xA;        model = load_checkpoint(model_path, model)&#xA;        self.norm = transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])&#xA;&#xA;        self.model_patcher = self.setup_model_patcher(model)&#xA;&#xA;    def __call__(self, input_image, resolution, slider_1=None, slider_2=None, slider_3=None, **kwargs):&#xA;        input_image, remove_pad = resize_image_with_pad(input_image, resolution)&#xA;&#xA;        self.load_model()&#xA;&#xA;        self.move_all_model_patchers_to_gpu()&#xA;&#xA;        assert input_image.ndim == 3&#xA;        image_normal = input_image&#xA;&#xA;        with torch.no_grad():&#xA;            image_normal = self.send_tensor_to_model_device(torch.from_numpy(image_normal))&#xA;            image_normal = image_normal / 255.0&#xA;            image_normal = rearrange(image_normal, &#39;h w c -&amp;gt; 1 c h w&#39;)&#xA;            image_normal = self.norm(image_normal)&#xA;&#xA;            normal = self.model_patcher.model(image_normal)&#xA;            normal = normal[0][-1][:, :3]&#xA;            normal = ((normal + 1) * 0.5).clip(0, 1)&#xA;&#xA;            normal = rearrange(normal[0], &#39;c h w -&amp;gt; h w c&#39;).cpu().numpy()&#xA;            normal_image = (normal * 255.0).clip(0, 255).astype(np.uint8)&#xA;&#xA;        return remove_pad(normal_image)&#xA;&#xA;&#xA;add_supported_preprocessor(PreprocessorNormalBae())&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;New features (that are not available in original WebUI)&lt;/h1&gt; &#xA;&lt;p&gt;Thanks to Unet Patcher, many new things are possible now and supported in Forge, including SVD, Z123, masked Ip-adapter, masked controlnet, photomaker, etc.&lt;/p&gt; &#xA;&lt;p&gt;Masked Ip-Adapter&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/d26630f9-922d-4483-8bf9-f364dca5fd50&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/03580ef7-235c-4b03-9ca6-a27677a5a175&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/d9ed4a01-70d4-45b4-a6a7-2f765f158fae&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Masked ControlNet&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/872d4785-60e4-4431-85c7-665c781dddaa&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/335a3b33-1ef8-46ff-a462-9f1b4f2c49fc&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/b3684a15-8895-414e-8188-487269dfcada&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;PhotoMaker&lt;/p&gt; &#xA;&lt;p&gt;(Note that photomaker is a special control that need you to add the trigger word &#34;photomaker&#34;. Your prompt should be like &#34;a photo of photomaker&#34;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/07b0b626-05b5-473b-9d69-3657624d59be&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Marigold Depth&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lllyasviel/stable-diffusion-webui-forge/assets/19834515/bdf54148-892d-410d-8ed9-70b4b121b6e7&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;New Samplers (that are not in origin)&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;DDPM&#xA;DDPM Karras&#xA;DPM++ 2M Turbo&#xA;DPM++ 2M SDE Turbo&#xA;LCM Karras&#xA;Euler A Turbo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;About Extensions&lt;/h1&gt; &#xA;&lt;p&gt;ControlNet and TiledVAE are integrated, and you should uninstall these two extensions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sd-webui-controlnet&#xA;multidiffusion-upscaler-for-automatic1111&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that &lt;strong&gt;AnimateDiff&lt;/strong&gt; is under construction by &lt;a href=&#34;https://github.com/continue-revolution&#34;&gt;continue-revolution&lt;/a&gt; at &lt;a href=&#34;https://github.com/continue-revolution/sd-webui-animatediff/tree/forge/master&#34;&gt;sd-webui-animatediff forge/master branch&lt;/a&gt; and &lt;a href=&#34;https://github.com/continue-revolution/sd-forge-animatediff&#34;&gt;sd-forge-animatediff&lt;/a&gt; (they are in sync). (continue-revolution original words: prompt travel, inf t2v, controlnet v2v have been proven to work well; motion lora, i2i batch still under construction and may be finished in a week&#34;)&lt;/p&gt; &#xA;&lt;p&gt;Other extensions should work without problems, like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;canvas-zoom&#xA;translations/localizations&#xA;Dynamic Prompts&#xA;Adetailer&#xA;Ultimate SD Upscale&#xA;Reactor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;However, if newer extensions use Forge, their codes can be much shorter.&lt;/p&gt; &#xA;&lt;p&gt;Usually if an old extension rework using Forge&#39;s unet patcher, 80% codes can be removed, especially when they need to call controlnet.&lt;/p&gt; &#xA;&lt;h1&gt;Contribution&lt;/h1&gt; &#xA;&lt;p&gt;Forge uses a bot to get commits and codes from &lt;a href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui/tree/dev&#34;&gt;https://github.com/AUTOMATIC1111/stable-diffusion-webui/tree/dev&lt;/a&gt; every afternoon (if merge is automatically successful by a git bot, or by my compiler, or by my ChatGPT bot) or mid-night (if my compiler and my ChatGPT bot both failed to merge and I review it manually).&lt;/p&gt; &#xA;&lt;p&gt;All PRs that can be implemented in &lt;a href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui/tree/dev&#34;&gt;https://github.com/AUTOMATIC1111/stable-diffusion-webui/tree/dev&lt;/a&gt; should submit PRs there.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to submit PRs related to the functionality of Forge here.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ndleah/python-mini-project</title>
    <updated>2024-02-12T01:36:39Z</updated>
    <id>tag:github.com,2024-02-12:/ndleah/python-mini-project</id>
    <link href="https://github.com/ndleah/python-mini-project" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🙌 Welcome open-source Python mini-project contributions!&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=%F0%9F%8C%9F&amp;amp;message=If%20Useful&amp;amp;style=style=flat&amp;amp;color=BC4E99&#34; alt=&#34;Star Badge&#34;&gt; &lt;img src=&#34;https://badges.frapsoft.com/os/v1/open-source.svg?v=103&#34; alt=&#34;Open Source Love&#34;&gt; &lt;a href=&#34;https://github.com/ndleah&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/View-My_Profile-green?logo=GitHub&#34; alt=&#34;View My Profile&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ndleah?tab=repositories&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/View-My_Repositories-blue?logo=GitHub&#34; alt=&#34;View Repositories&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://forthebadge.com&#34;&gt;&lt;img src=&#34;https://forthebadge.com/images/badges/powered-by-coffee.svg?sanitize=true&#34; alt=&#34;forthebadge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://forthebadge.com&#34;&gt;&lt;img src=&#34;https://forthebadge.com/images/badges/built-with-love.svg?sanitize=true&#34; alt=&#34;forthebadge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://forthebadge.com&#34;&gt;&lt;img src=&#34;https://forthebadge.com/images/badges/powered-by-black-magic.svg?sanitize=true&#34; alt=&#34;forthebadge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://forthebadge.com&#34;&gt;&lt;img src=&#34;https://forthebadge.com/images/badges/made-with-python.svg?sanitize=true&#34; alt=&#34;forthebadge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Python Mini Projects &lt;img src=&#34;https://i.pinimg.com/originals/d8/5d/f0/d85df08df1212c0f8b219e779c5ebc46.gif&#34; align=&#34;right&#34; width=&#34;120&#34;&gt;&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A collection of easy Python small projects to help you improve your programming skills.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/issues/ndleah/python-mini-project?style=social&amp;amp;logo=github&#34; alt=&#34;Issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr/ndleah/python-mini-project?style=social&amp;amp;logo=github&#34; alt=&#34;Pull Requests&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/ndleah/python-mini-project?style=social&amp;amp;logo=github&#34; alt=&#34;Forks&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/ndleah/python-mini-project?style=social&amp;amp;logo=github&#34; alt=&#34;Stars&#34;&gt; &lt;a href=&#34;https://github.com/ndleah/python-mini-project/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/ndleah/python-mini-project?style=social&amp;amp;logo=github&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- omit in toc --&gt; &#xA;&lt;h2&gt;Table Of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ndleah/python-mini-project/main/#-aim-of-the-project&#34;&gt;Aim Of The Project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ndleah/python-mini-project/main/#-contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ndleah/python-mini-project/main/#-readme-template-for-scripts&#34;&gt;README Template for scripts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ndleah/python-mini-project/main/#-projects&#34;&gt;Projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ndleah/python-mini-project/main/#-feedback&#34;&gt;Feedback&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ndleah/python-mini-project/main/IMG/aiming.svg?sanitize=true&#34; alt=&#34;image&#34;&gt; Aim Of The Project&lt;/h2&gt; &#xA;&lt;p&gt;As a Python newbie, I understand the problems that people face when they first begin studying and attempting to understand various Data Science concepts, particularly Python. This project is designed for folks who are just getting started with Python principles and exploring GitHub as &#34;contributors.&#34;&lt;/p&gt; &#xA;&lt;p&gt;My goal is to build a common playground where everyone, from beginners to experts, can learn and share knowledge, and I hope you enjoy your stay here!&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s &#34;folk-ing&#34; create amazing things together! 👉&lt;/p&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ndleah/python-mini-project/main/IMG/game-ps.svg?sanitize=true&#34; alt=&#34;image&#34;&gt; Contributing&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Step 1: Star The Repo &lt;/summary&gt; &#xA; &lt;p&gt;Star the repo by pressing the topmost-right button to start your wonderful journey&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://docs.github.com/assets/images/help/stars/starring-a-repository.png&#34; alt=&#34;star repo&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Step 2: Fork it &lt;/summary&gt; &#xA; &lt;p&gt;On the &lt;a href=&#34;https://github.com/ndleah/python-mini-project&#34;&gt;GitHub page for this repository&lt;/a&gt;, click on the Button &#34;&lt;strong&gt;Fork&lt;/strong&gt;&#34;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/3/38/GitHub_Fork_Button.png&#34; alt=&#34;fork image&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Step 3: Clone it &lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Method 1:&lt;/strong&gt; GitHub Desktop&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;⚠️ &lt;strong&gt;NOTE:&lt;/strong&gt; If you&#39;re not familiar with Git, using &lt;strong&gt;GitHub Desktop Application&lt;/strong&gt; is a better start. If you choose this method, make sure to download it before continuing reading.&lt;/p&gt; &#xA;  &lt;p&gt;❗❗ Access link to download &lt;a href=&#34;https://desktop.github.com&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;p&gt;Learn more about how to clone the remote respository on your local machine using &lt;strong&gt;GitHub Desktop&lt;/strong&gt; &lt;a href=&#34;https://docs.github.com/en/desktop/contributing-and-collaborating-using-github-desktop/adding-and-cloning-repositories/cloning-and-forking-repositories-from-github-desktop#cloning-a-repository&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Method 2:&lt;/strong&gt; Git&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;Clone the forked repository. Open git bash and type:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/&amp;lt;your-github-username&amp;gt;/python-mini-project.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;This makes a local copy of the repository in your machine.&lt;/p&gt; &#xA;  &lt;p&gt;⚠️ &lt;strong&gt;Replace &amp;lt;your-github-username&amp;gt;!&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;p&gt;Learn more about &lt;a href=&#34;https://help.github.com/en/github/getting-started-with-github/fork-a-repo&#34;&gt;forking&lt;/a&gt; and &lt;a href=&#34;https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository&#34;&gt;cloning a repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Step 4: Create your feature branch &lt;/summary&gt; &#xA; &lt;p&gt;Always keep your local copy of the repository updated with the original repository. Before making any changes and/or in an appropriate interval, follow the following steps:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Method 1:&lt;/strong&gt; GitHub Desktop&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;Learn more about how to create new branch &lt;a href=&#34;https://docs.github.com/en/desktop/contributing-and-collaborating-using-github-desktop/making-changes-in-a-branch/managing-branches#creating-a-branch&#34;&gt;here&lt;/a&gt; and how to fetch and pull origin from/to your local machine &lt;a href=&#34;https://docs.github.com/en/desktop/contributing-and-collaborating-using-github-desktop/keeping-your-local-repository-in-sync-with-github/syncing-your-branch&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Learn more about how to fetch and pull origin from/to your local machine using &lt;strong&gt;GitHub Desktop&lt;/strong&gt; &lt;a href=&#34;https://docs.github.com/en/desktop/contributing-and-collaborating-using-github-desktop/keeping-your-local-repository-in-sync-with-github/syncing-your-branch&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Method 2:&lt;/strong&gt; Git&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;Run the following commands &lt;strong&gt;&lt;em&gt;carefully&lt;/em&gt;&lt;/strong&gt; to update your local repository&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# If you cloned a while ago, get the latest changes from upstream&#xA;git checkout &amp;lt;master&amp;gt;&#xA;git pull upstream &amp;lt;master&amp;gt;&#xA;&#xA;# Make a feature branch (Always check your current branch is up to date before creating a new branch from it to avoid merge conflicts)&#xA;git checkout -b &amp;lt;branch-name&amp;gt;&#xA;&#xA;#&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Step 5: Ready, Set, Go... &lt;/summary&gt; &#xA; &lt;p&gt;Once you have completed these steps, you are ready to start contributing to the project and creating &lt;strong&gt;pull requests&lt;/strong&gt;.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Create a folder in &lt;a href=&#34;https://github.com/ndleah/python-mini-project&#34;&gt;projects directory&lt;/a&gt; according to your project name. &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;The folder name should follow the following format &#34;Your_Project_Name_Here&#34;. For example: Dice_Stimulator&lt;/p&gt; &#xA;   &lt;/blockquote&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Write your code and add to the respective folder in the projects directory, locally.&lt;/li&gt; &#xA;  &lt;li&gt;Don&#39;t forget to add a &lt;code&gt;README.md&lt;/code&gt; in your folder, according to the &lt;a href=&#34;https://github.com/Python-World/python-mini-projects/raw/master/README_TEMPLATE.md&#34;&gt;README_TEMPLATE.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Method 1:&lt;/strong&gt; GitHub Desktop&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;Learn more how to pull request from your local machine using &lt;strong&gt;GitHub Desktop&lt;/strong&gt; to the main repo &lt;a href=&#34;https://docs.github.com/en/desktop/contributing-and-collaborating-using-github-desktop/working-with-your-remote-repository-on-github-or-github-enterprise/viewing-a-pull-request-in-github-desktop&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Method 2:&lt;/strong&gt; Git&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;Add the changes with &lt;code&gt;git add&lt;/code&gt;, &lt;code&gt;git commit&lt;/code&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add -A&#xA;git commit -m &#34;&amp;lt;your message&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Push the code &lt;em&gt;to your repository&lt;/em&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push origin &amp;lt;branch-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Step 6: Pull Request &lt;/summary&gt; &#xA; &lt;p&gt;Go to the GitHub page of &lt;em&gt;your fork&lt;/em&gt;, and &lt;strong&gt;make a pull request&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://i.ytimg.com/vi/rgbCcBNZcdQ/maxresdefault.jpg&#34; alt=&#34;pull request image&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;Read more about pull requests on the &lt;a href=&#34;https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request&#34;&gt;GitHub help pages&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Now wait, until &lt;em&gt;your Pull Request&lt;/em&gt; is approved! If there are any conflicts, you will get a notification.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ndleah/python-mini-project/main/IMG/bookmark.svg?sanitize=true&#34; alt=&#34;image&#34;&gt; README Template for scripts&lt;/h2&gt; &#xA;&lt;p&gt;please make sure to add a &lt;code&gt;README.md&lt;/code&gt; file that follow the same construction as this template for consistency.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/raw/master/README_TEMPLATE.md&#34;&gt;README Template&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ndleah/python-mini-project/main/IMG/like.svg?sanitize=true&#34; alt=&#34;image&#34;&gt; Projects&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;SR No&lt;/th&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Author&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Dice_Rolling_Stimulator&#34;&gt;Dice Rolling Stimulator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This is a simple dice stimulator made using Python.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah&#34;&gt;Leah Nguyen&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Dictionary&#34;&gt;Dictionary&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A dictionary stimulator by Python in which you can enter any words and you will get the definition of it as the output.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah&#34;&gt;Leah Nguyen&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Hangman_Game&#34;&gt;Hangman Game&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A hangman game stimulator using Python in which the player have 10 attempts to guess the phrase before the men is hung.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah&#34;&gt;Leah Nguyen&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Tic_Tac_Toe&#34;&gt;Tic Tac Toe&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A simple game of tic tac toe, built in python.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah&#34;&gt;Leah Nguyen&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Plotter&#34;&gt;Plotter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;An automation program to plot data with different visualisations by user selections.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah&#34;&gt;Leah Nguyen&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Geo_Plot_Using_Folium&#34;&gt;Geographical Plot Using Folium&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Using Folium library to create different map data visualization.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah&#34;&gt;Leah Nguyen&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Caterpillar_Game&#34;&gt;Caterpillar Game&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A simple Caterpillar game built in python.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah&#34;&gt;Leah Nguyen&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Matchmaker&#34;&gt;Matchmaker Game&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A simple Matchmaker game built by using python.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah&#34;&gt;Leah Nguyen&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Smart_Calculator&#34;&gt;Smart Calculator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A smart calculator using for basic math equations, built by using python.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah&#34;&gt;Leah Nguyen&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Screenpet&#34;&gt;Screenpet&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A cute screenpet having different reactions when interact on desktop.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah&#34;&gt;Leah Nguyen&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Egg_Catcher&#34;&gt;Egg Catcher&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Egg catcher game built in using Python.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah&#34;&gt;Leah Nguyen&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Number%20Guessing&#34;&gt;Number Guessing&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Number Guessing Game&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ShrutiSolani&#34;&gt;Shruti Solani&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;13&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Madlibs&#34;&gt;Mad Libs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mad Libs Game&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ShrutiSolani&#34;&gt;Shruti Solani&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Caesar_Cipher&#34;&gt;Caesar Cipher&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Simple Caesar Cipher encryptor and decryptor bulit with python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/FH089&#34;&gt;FH089&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Email%20Slicer&#34;&gt;Email Slicer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Email Slicer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ShrutiSolani&#34;&gt;Shruti Solani&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Speaking_Dictionary&#34;&gt;Speaking Dictionary&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python program that allows the user to find the meaning of an English word by speaking it directly to the device&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/19lyaejin&#34;&gt;19lyaejin&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;17&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Cat_command&#34;&gt;Cat Command&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;this project is a basic implementation of the linux cat command&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Alex108-lab&#34;&gt;Alexander Monterrosa&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Sqlite-crud&#34;&gt;Sqlite-crud&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A simple crud implemented in python using sqlite.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Alex108-lab&#34;&gt;Alexander Monterrosa&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;19&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Binary_tree&#34;&gt;Binary Tree&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Implementation of a binary tree in python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Alex108-lab&#34;&gt;Alexander Monterrosa&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;20&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Socket_example&#34;&gt;Socket&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Implementation of a socket in python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Alex108-lab&#34;&gt;Alexander Monterrosa&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;21&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Stack_structure&#34;&gt;Stack Structure&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Implementation of a stack structure in python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Alex108-lab&#34;&gt;Alexander Monterrosa&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;22&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Math_Game&#34;&gt;Math Game&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;It&#39;s just a simple math game. Improve your math skills&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/xNewz&#34;&gt;Pargorn Ruasijan (xNewz)&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;23&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Password%20Generator&#34;&gt;Password Generator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create secure passwords that are impossible to crack.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/xNewz&#34;&gt;Pargorn Ruasijan (xNewz)&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;24&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Demerge_pdfs&#34;&gt;Demerging PDF&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python program to convert a large pdf file to number of different sized pdf files without any change in the large file.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Darpan-Balar&#34;&gt;Darpan-Balar&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;25&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vivekthedev/python-mini-project/tree/main/QR%20Code%20Genrator&#34;&gt;QR Code Generator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GUI with Tkinter to get convert text to a PNG QR Code.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vivekthedev&#34;&gt;Vivek Kumar Singh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;26&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Crud_in_flask&#34;&gt;Flask Crud&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Crud using flask and sqlite3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Alex108-lab&#34;&gt;Alexander Monterrosa&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;27&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Sudoku_solver&#34;&gt;Sudoku solver&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This program can generate and solve Sudoku boards.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/DMeurer&#34;&gt;Dominik Meurer&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;28&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Mail_Checker&#34;&gt;Mail Checker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mail-Checker is a python script that lets you read your gmail subjects from particular gmail accounts directly from the terminal without having to login each time!&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/thirt33n&#34;&gt;Siddharth Pradeep&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;29&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Whatsapp_Bot&#34;&gt;Whatsapp Bot&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Whatsapp Bot is a simple bot made using Python to send a WhatsApp message.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/AnishLohiya&#34;&gt;Anish Lohiya&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;30&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Youtube_video_download&#34;&gt;YouTube Video Downloader&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;YouTube Video Downloader lets you download videos from YouTube.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Alex108-lab&#34;&gt;Alexander Monterrosa&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;31&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Face_Recognition&#34;&gt;Face Recognition&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A Face Recognition Project developed using OpenCV Module in Python that displays a Blue Reactangle Frame around Faces.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/AnishLohiya&#34;&gt;Anish Lohiya&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;32&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vivekthedev/python-mini-project/tree/main/Slideshare%20to%20PDF&#34;&gt;Slideshare to PDF&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Download any presentation from slideshare to a PDF form without any signup or login&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vivekthedev&#34;&gt;Vivek&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;33&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Rock_Paper_Scissors_Spock&#34;&gt;Rock Paper Scissors Spock&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Rock Paper Scissors Spock has extra steps to it which add a little spice and creativity over the generic Rock Paper Scissors game we all know and love. The player gets to choose between Rock, Paper, Scissor, Lizard or Spock. If they choose correctly, then the player wins. Have fun and good luck!&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Anokh1&#34;&gt;Anokh1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;34&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Port%20Scanner&#34;&gt;Port Scanner&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;It&#39;s a simple port scanner.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/AniYengibaryan&#34;&gt;AniYengibaryan&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;35&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/TEXTVENTURE&#34;&gt;TextVenture&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TextVenture is a short for Text Adventure. It is a game where you can play as a character and explore a world.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RAOexe&#34;&gt;RAO.exe&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;36&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Lazy_Pong&#34;&gt;Lazy pong&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This is a very simple Pong game made with python. It&#39;s so simple it doesnt even keep track of scores&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Ben-Sicat&#34;&gt;Ben-Sicat&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;37&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Minesweeper_game&#34;&gt;Minesweeper Game&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The classic Minesweeper game in python.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Raven1233&#34;&gt;&lt;code&gt;Subhadeep Das(Raven1233)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;38&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Zombie_Game&#34;&gt;Zombie Game&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Simple Zombie Survival Quiz Game bulit with python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jmeyu&#34;&gt;jmeyu&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;39&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Music-Player&#34;&gt;Music Player&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A simple music player in python which enables you to play, next, back, pause, resume the music&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mr-shitij&#34;&gt;mr-shitij&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;40&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Wordle_Aid&#34;&gt;Wordle Aid!&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use this to give you all the possible options for today&#39;s wordle based on the information available.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Timmy-Churchill&#34;&gt;Timmy Churchill&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;41&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Diff_Utility&#34;&gt;Diff Utility&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A Diff Utility that takes in two file names as commandline arguments and compares them. The comparison is then shown as the output indication which file has changed where.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/KILLinefficiency&#34;&gt;Shreyas Sable&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;42&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Automated_Mailing&#34;&gt;Automated Mailing&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A python script that reads email addresses from CSV file and automatically sends email.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/pradhyumanarora&#34;&gt;Pradhyuman Arora&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;43&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Chinese_FlashCard&#34;&gt;Chinese Flashcard&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A tkinter application which displays chinese characters.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/CMagnac&#34;&gt;CMagnac&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;44&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Finding_Lanes&#34;&gt;Finding Lanes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Detect road lanes using Python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zmdlw&#34;&gt;zmdlw&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;45&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Star_Pyramid&#34;&gt;Star Pyramid Generator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This is a simple code made with while loop and you can also use for loop fot this.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/hasalaonline&#34;&gt;Hasala Abhilasha&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;46&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Clip_Organizer&#34;&gt;Clip Organizer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This script takes in a directory of video clips, and outputs one video clip featuring all of the input clips.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sethtrei&#34;&gt;Seth Treiman&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;47&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/infix_postfix_calculator&#34;&gt;Infix Postfix Calculator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Infix Postfix Calculator&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/xNewz&#34;&gt;xNewz&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;48&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Speaking_Wikipedia&#34;&gt;Speaking Wikipedia&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This tool enables users to convert summaries of Wikipedia pages into a speaking version.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/yamtimor&#34;&gt;Yam Timor&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;49&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Face_Recognition&#34;&gt;Face Recognition&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Face Recognition&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BlockmasterPlayz&#34;&gt;BlockmasterPlayz&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;50&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Url_Shortener&#34;&gt;URL Shortener&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A cli url shortener.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dongjin2008&#34;&gt;dongjin2008&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;51&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Simple_dice&#34;&gt;Simple Dice&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This is a simple dice rolling application written in Python using the Tkinter library.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tusuii&#34;&gt;tusuii&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;52&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Encode_Morse.py&#34;&gt;Encode Morse&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A program that allows the user to convert the text he/she inputs into the program into a voice audio that is played in real time.Morse encoder is a tool or program that converts text into Morse code, a system of representing letters and numbers using a combination of dots (.) and dashes (-). Morse Encoder is responsible for encrypting English into Morse code.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/JohnN310&#34;&gt;John Nguyen&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;53&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/image_comparator&#34;&gt;Image Comparator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This is a tool for coparing two Images and getting their difference image as output&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Rajit99&#34;&gt;Rajit99&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;54&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Currency_Converter&#34;&gt;Currency Converter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A program that converts currencies using CLI&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/YehudaElyasaf&#34;&gt;Yehuda Elyasaf&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;55&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/linked_lists&#34;&gt;Linked Lists&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Implementation of various data structures using linked list.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/AlenSenson&#34;&gt;Alen Senson&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;56&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Converter&#34;&gt;Converter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A simple converter app built in python.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/AlenSenson&#34;&gt;Alen Senson&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;57&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Spinning%20Donut&#34;&gt;Spinning Donut&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This project uses the Pygame library to create an animation of a spinning donut on a black background.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gideon-ogunbanjo&#34;&gt;Gideon Ogunbanjo&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;58&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Firebase_Authentication_Using_Flask&#34;&gt;Firebase Authentication&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This project enables developers to implement secure user authentication features in their Flask applications with ease using Firebase Authentication&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MBSA-INFINITY&#34;&gt;MBSA INFINITY&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;59&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/tree/main/Finance_Tracker&#34;&gt;Finance Tracker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A finance tracker application allows the user to keep track of their income and expenses, and visualize their balance through a pie chart.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/otahina&#34;&gt;Hina Ota&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;60&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/spam_bot/&#34;&gt;Spam bot&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Python Script that uses Pyautogui library to create a spam to that can be used to prank you friends&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/prafuel&#34;&gt;Prafull Sonawane&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;61&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/lorem_in_python/&#34;&gt;Lorem Generator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Python Script that used to create random paragraph based on how much you want like number of rows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/prafuel&#34;&gt;Prafull Sonawane&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;62&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/minionGame/&#34;&gt;Minion Game&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Terminal playable sub string game that deal with count of vowel and constituent, score will be based on some rules given in scrip file.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/prafuel&#34;&gt;Prafull Sonawane&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;63&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/Chess_Game/&#34;&gt;Chess Game&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A simple chess game that you can play with your friend&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/prafuel&#34;&gt;Prafull Sonawane&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;64&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/IP_Tools/&#34;&gt;IP Tools&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;IP Locater extracts data of an IP address. IP Finder gets the IP of a domain name.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BazarganDev&#34;&gt;Mohammad Bazargan&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;65&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/Othello-Reversi-Game/&#34;&gt; Othello/Reversi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Othello is a board-game played on a 8x8 board, with 64 discs that are black on one side and white on the other.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.github.com/TERNION-1121&#34;&gt;Vikrant Singh Bhadouriya&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;66&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/Image_compressor/&#34;&gt;Image_compressor&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The image resizer takes in an image and reduces it&#39;s disk size according to the quality you choose, the compressed image is saved in the folder of the orignal image&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.github.com/Yuv-glitch&#34;&gt;Yuv-glitch&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;67&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/csv_to_json/&#34;&gt;CSV To JSON&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This script helps to convert a csv file to a json file.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.github.com/Rajit99&#34;&gt;Rajit Gupta&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;68&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/images_to_pdf_converter/&#34;&gt;Images To Pdf Converter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Multiple images in Folder being converted in one pdf&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.github.com/guptanik9&#34;&gt;Nikhil Gupta&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;69&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/Download%20Audio/&#34;&gt;Download Audio&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This is a python script that downloads audio files directly from youtube videos.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ndleah/python-mini-project/main/(https://github.com/Muhammad-Abdullah3)&#34;&gt;Muhammad Abdullah&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;70&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/Expense_Tracker/&#34;&gt;Expense Tracker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Expense Tracker is a Python application designed to help users keep track of their daily expenses&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/darshan8850&#34;&gt;Darshan Patil&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;71&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/Lazy_Pong/&#34;&gt;Lazy Pong&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This is a simple implementation of the classic Pong game in Python using the Pygame library&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dar8900&#34;&gt;dar8900&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ndleah/python-mini-project/main/IMG/like.svg?sanitize=true&#34; alt=&#34;image&#34;&gt; Our Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/ndleah/python-mini-project/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=ndleah/python-mini-project&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ndleah/python-mini-project/main/IMG/muscle.svg?sanitize=true&#34; alt=&#34;image&#34;&gt; Feedback&lt;/h2&gt; &#xA;&lt;p&gt;If you have any feedback or ideas to improve this project, feel free to contact me via&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.linkedin.com/in/ndleah/&#34;&gt; &lt;img align=&#34;left&#34; alt=&#34;Reeha&#39;s Linkdein&#34; width=&#34;22px&#34; src=&#34;https://cdn.jsdelivr.net/npm/simple-icons@v3/icons/linkedin.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/ndleah&#34;&gt; &lt;img align=&#34;left&#34; alt=&#34;Reeha&#39;s Github&#34; width=&#34;22px&#34; src=&#34;https://cdn.jsdelivr.net/npm/simple-icons@v3/icons/github.svg?sanitize=true&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>magicbear/palworld-server-toolkit</title>
    <updated>2024-02-12T01:36:39Z</updated>
    <id>tag:github.com,2024-02-12:/magicbear/palworld-server-toolkit</id>
    <link href="https://github.com/magicbear/palworld-server-toolkit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PalWorld Server Toolkits - For Save file modify, list the players, repair sav file, etc...&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Palworld Server Toolkit&lt;/h1&gt; &#xA;&lt;h3&gt;幻兽帕鲁服务端工具包&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;简体中文&lt;/strong&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/magicbear/palworld-server-toolkit/master/README.en.md&#34;&gt;English&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;GitHub Repo stars&#34; src=&#34;https://img.shields.io/github/stars/magicbear/palworld-server-toolkit?style=for-the-badge&#34;&gt;&amp;nbsp;&amp;nbsp; &lt;img alt=&#34;Python&#34; src=&#34;https://img.shields.io/badge/Python-FFD43B?style=for-the-badge&amp;amp;logo=python&amp;amp;logoColor=blue&#34;&gt;&amp;nbsp;&amp;nbsp; &lt;/p&gt; &#xA;&lt;p&gt;世界上最高速的帕鲁服务器存档编辑器, 1.1秒打开对应转换时间1分40秒的约1.5GB的JSON。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;这个工具包可用于在 Palworld 世界间转移角色，允许朋友们将他们的角色转移到彼此的服务器上，而不会失去任何进度。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;亦可以用于编辑玩家所持有的帕鲁、参数、持有物品、金钱等等数据。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;亦可以移动玩家的公会、删除营地、删除玩家&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/magicbear/palworld-server-toolkit/master/#palworld-server-toolkit&#34;&gt;Palworld Server Toolkit&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/magicbear/palworld-server-toolkit/master/#%E7%9B%B4%E6%8E%A5%E8%BF%90%E8%A1%8C&#34;&gt;如何安装&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/magicbear/palworld-server-toolkit/master/#faq&#34;&gt;找到存档文件&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/magicbear/palworld-server-toolkit/master/#%E6%93%8D%E4%BD%9C%E7%A4%BA%E4%BE%8B&#34;&gt;操作示例&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/magicbear/palworld-server-toolkit/master/#%E8%B7%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%81%E7%A7%BB%E7%8E%A9%E5%AE%B6%E6%95%B0%E6%8D%AE&#34;&gt;跨服务器迁移玩家数据&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/magicbear/palworld-server-toolkit/master/#%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AD%98%E6%A1%A3%E8%BD%AC%E6%9C%AC%E5%9C%B0&#34;&gt;服务器存档转本地&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/magicbear/palworld-server-toolkit/master/#%E6%84%9F%E8%B0%A2&#34;&gt;感谢&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1s2421A7jX/&#34;&gt;视频操作教程 - 哔哩哔哩&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;GUI&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/magicbear/palworld-server-toolkit/master/docs/img/GUI.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;直接运行&lt;/h2&gt; &#xA;&lt;p&gt;访问 &lt;a href=&#34;https://github.com/magicbear/palworld-server-toolkit/releases&#34;&gt;Release Pages&lt;/a&gt; 下载运行即可。&lt;/p&gt; &#xA;&lt;h2&gt;手动安装&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Python 3.9或以上版本.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Windows用户: 可从 &lt;a href=&#34;https://apps.microsoft.com/detail/9NCVDN91XZQP&#34;&gt;Microsoft Store下载Python 3.12&lt;/a&gt; or &lt;a href=&#34;https://www.python.org/&#34;&gt;python.org&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装 &lt;code&gt;pip&lt;/code&gt; 包管理器&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For Linux users: &lt;code&gt;python -m ensurepip --upgrade&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;For Windows users: &lt;code&gt;py -m ensurepip --upgrade&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装包&lt;/p&gt; &lt;pre&gt;&lt;code&gt;pip3 install palworld-server-toolkit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;运行&lt;/p&gt; &lt;pre&gt;&lt;code&gt;python3 -m palworld_server_toolkit.editor [options] &amp;lt;Level.sav&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;使用源码前置安装需求&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Python 3.9或以上版本.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Windows用户: 可从 &lt;a href=&#34;https://apps.microsoft.com/detail/9NCVDN91XZQP&#34;&gt;Microsoft Store下载Python 3.12&lt;/a&gt; or &lt;a href=&#34;https://www.python.org/&#34;&gt;python.org&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;通过 &lt;code&gt;git clone https://github.com/magicbear/palworld-server-toolkit.git&lt;/code&gt; 下载源码&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;执行 &lt;code&gt;git submodule update --init --recursive&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;问题交流&lt;/h2&gt; &#xA;&lt;p&gt;QQ群 139107098&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;palworld-save-editor&lt;/h2&gt; &#xA;&lt;p&gt;清理捕捉日志，改名，合并不同服务器玩家，删除玩家，迁移坏档等工具包&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION]&lt;/p&gt; &#xA; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; 此工具是实验性的。 小心数据丢失并 &lt;em&gt;&lt;strong&gt;务必&lt;/strong&gt;&lt;/em&gt; 进行备份。&lt;/p&gt; &#xA; &lt;p&gt;选择的 &lt;code&gt;Level.sav&lt;/code&gt; 需要在游戏原存档目录下、或者连同 &lt;code&gt;Players&lt;/code&gt; 一起复制的完整存档、程序会对 &lt;code&gt;Players&lt;/code&gt; 下的存档文件同时进行操作，否则可能损坏存档。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;/p&gt; &#xA; &lt;p&gt;删除用户、删除营地、清理未引用的物品库均为测试功能，有导致服务端闪退可能性，请 &lt;em&gt;&lt;strong&gt;务必&lt;/strong&gt;&lt;/em&gt; 进行备份，如碰到问题请提交您的存档到Issues。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;未加-o参数默认保存文件为&lt;code&gt;Level_fixed.sav&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;使用源码版本 以下命令 &lt;code&gt; -m palworld_server_toolkit.editor&lt;/code&gt; 部份 修改为 &lt;code&gt;palworld_server_toolkit/editor.py&lt;/code&gt; 运行即可&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;清理捕捉日志及不存在玩家数据 - &lt;code&gt;python -m palworld_server_toolkit.editor --fix-missing --fix-capture Level.sav&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;使用GUI修改 &lt;code&gt;Level.sav&lt;/code&gt; 文件 - &lt;code&gt;python -i -m palworld_server_toolkit.editor -g -o Level.sav Level.sav&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修改 &lt;code&gt;Level.sav&lt;/code&gt; 文件 - &lt;code&gt;python -m palworld_server_toolkit.editor -i -o Level.sav Level.sav&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;ShowPlayers()&lt;/code&gt; - 列出玩家&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;FixMissing()&lt;/code&gt; - 删除未引用玩家数据&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;FixCaptureLog()&lt;/code&gt; - 删除多余捕捉日志&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;FixDuplicateUser()&lt;/code&gt; - 删除多余用户数据&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ShowGuild()&lt;/code&gt; - 列出公会及成员列表&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;BindGuildInstanceId(uid,instance_id)&lt;/code&gt; - 修改公会成员绑定ID&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;RenamePlayer(uid,new_name)&lt;/code&gt; - 修改玩家名字为 &lt;code&gt;new_name&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;DeletePlayer(uid,InstanceId=None, dry_run=False)&lt;/code&gt; - 删除玩家数据 &lt;code&gt;InstanceId: 删除指定InstanceId&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;DeleteGuild(group_id)&lt;/code&gt; - 删除公会&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;DeleteBaseCamp(base_id)&lt;/code&gt; - 删除基地&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;EditPlayer(uid)&lt;/code&gt; - 快速指定玩家数据至变量&lt;code&gt;player&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MoveToGuild(uid,guild_id)&lt;/code&gt; - 移动玩家至公会&lt;code&gt;guild_id&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;OpenBackup(filename)&lt;/code&gt; - 打开备份&lt;code&gt;Level.sav&lt;/code&gt;文件并指向变量&lt;code&gt;backup_wsd&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MigratePlayer(old_uid,new_uid)&lt;/code&gt; - 从&lt;code&gt;old_uid&lt;/code&gt;向&lt;code&gt;new_uid&lt;/code&gt;迁移玩家数据&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;CopyPlayer(old_uid,new_uid, backup_wsd)&lt;/code&gt; - 复制玩家数据 &lt;code&gt;backup_wsd&lt;/code&gt; 为OpenBackup备份文件 &lt;code&gt;wsd&lt;/code&gt;为当前主文件&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;BatchDeleteUnreferencedItemContainers()&lt;/code&gt; - 删除未引用的物品库&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;FixBrokenDamageRefItemContainer()&lt;/code&gt; - 删除损坏对象&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Save()&lt;/code&gt; - 保存修改并退出&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;操作示例&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;p&gt;以下操作均需先退出服务端&lt;/p&gt; &#xA; &lt;p&gt;最后均为把 &lt;code&gt;Level_fixed.sav&lt;/code&gt; 替换至 &lt;code&gt;Level.sav&lt;/code&gt; 并启动服务端&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;跨服务器迁移玩家数据&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;提前工作&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;复制旧服务器 &lt;code&gt;Level.sav&lt;/code&gt; 至 &lt;code&gt;SaveGames/0/&amp;lt;Server ID&amp;gt;/Old-Level.sav&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;复制旧服务器所有需迁移玩家 &lt;code&gt;Players/xxxxxxxx000000000000000000000000.sav&lt;/code&gt; 至 &lt;code&gt;SaveGames/0/&amp;lt;Server ID&amp;gt;/Players/xxxxxxxx000000000000000000000000.sav&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GUI模式操作&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;Source Player Data Source&lt;/code&gt; 选择 &lt;code&gt;Backup File&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;点击 &lt;code&gt;Open File&lt;/code&gt; 选择旧服务器存档 &lt;code&gt;Old-Level.sav&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Source Player&lt;/code&gt; 选择要迁移的旧玩家&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Target Player&lt;/code&gt; 选择要被替换的玩家（如果目标玩家ID不变，可从&lt;code&gt;Source Player&lt;/code&gt;拷贝UUID)&lt;/li&gt; &#xA;   &lt;li&gt;点击 &lt;code&gt;Copy Player&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;点击 &lt;code&gt;Save &amp;amp; Exit&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;替换文件 &lt;code&gt;Level_fixed.sav&lt;/code&gt; 到 &lt;code&gt;Level.sav&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;命令模式操作&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;使用编辑模式运行 &lt;code&gt;python -i -m palworld_server_toolkit.editor Level.sav&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;使用以下命令 并所有需迁移玩家执行&lt;code&gt;CopyPlayer&lt;/code&gt; &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; UUID 可相同，数据自&lt;code&gt;backup_wsd&lt;/code&gt;拷贝&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;pre&gt;&lt;code&gt;OpenBackup(&#34;Old-Level.sav&#34;)&#xA;CopyPlayer(&#34;xxxxxxxx-0000-0000-0000-000000000000&#34;, &#34;xxxxxxxx-0000-0000-0000-000000000000&#34;, backup_wsd)&#xA;Save()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;(Optional) 最后删除旧 &lt;code&gt;xxxxxxxx000000000000000000000001.sav&lt;/code&gt;,&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;服务器存档转本地&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;GUI模式操作&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;Source Player&lt;/code&gt; 选择要迁移的旧玩家&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Target Player&lt;/code&gt; 输入 &lt;code&gt;00000000-0000-0000-0000-000000000001&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;点击 &lt;code&gt;Migrate Player&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;点击 &lt;code&gt;Save &amp;amp; Exit&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;替换文件 &lt;code&gt;Level_fixed.sav&lt;/code&gt; 到 &lt;code&gt;Level.sav&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;其他迁移示例&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;本地存档迁移至服务器示例&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;复制本地 &lt;code&gt;Level.sav&lt;/code&gt; 至 &lt;code&gt;SaveGames/0/&amp;lt;Server ID&amp;gt;/Old-Level.sav&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;本地存档通常在 &lt;code&gt;C:\Users\&amp;lt;username&amp;gt;\AppData\Local\Pal\Saved\SaveGames\&amp;lt;SteamID&amp;gt;\&amp;lt;World Folder&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;ol start=&#34;2&#34;&gt; &#xA;   &lt;li&gt;复制本地 &lt;code&gt;Players/00000000000000000000000000000001.sav&lt;/code&gt; 至 &lt;code&gt;SaveGames/0/&amp;lt;Server ID&amp;gt;/Players/00000000000000000000000000000001.sav&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;使用编辑模式运行 &lt;code&gt;python -i -m palworld_server_toolkit.editor Level.sav&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;使用以下命令 &lt;pre&gt;&lt;code&gt;OpenBackup(&#34;Old-Level.sav&#34;)&#xA;CopyPlayer(&#34;00000000-0000-0000-0000-000000000001&#34;, &#34;xxxxxxxx-0000-0000-0000-000000000000&#34;, backup_wsd)&#xA;Save()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;(Optional) 最后删除旧 &lt;code&gt;00000000000000000000000000000001.sav&lt;/code&gt; 和 &lt;code&gt;Old-Level.sav&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;迁移用户示例&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;使用编辑模式运行 &lt;code&gt;python -i -m palworld_server_toolkit.editor Level.sav&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;使用以下命令 &lt;pre&gt;&lt;code&gt;MigratePlayer(&#34;xxxxxxxx-0000-0000-0000-000000000000&#34;,&#34;yyyyyyyy-0000-0000-0000-000000000000&#34;)&#xA;Save()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;palworld-player-list&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;usage: palworld-playey-list [-h] [--host HOST] [--port PORT] [--password PASSWORD] [filename]&#xA;&#xA;用于列出服务器Players目录中的玩家名字，PlayerUId，Steam ID&#xA;&#xA;positional arguments:&#xA;  filename              Filename of the player sav&#xA;&#xA;options:&#xA;  -h, --help            show this help message and exit&#xA;  --host HOST, -H HOST  Host for PalWorld Server RCON&#xA;  --port PORT, -P PORT  PalWorld Server RCON Port&#xA;  --password PASSWORD, -p PASSWORD  RCON密码&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;列出玩家 - 在工作目录 &lt;code&gt;/PalSaved/SaveGames/0/&amp;lt;server id&amp;gt;/Players&lt;/code&gt; 中运行 &lt;code&gt;python3 list.py&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;玩家详细 - &lt;code&gt;python3 list.py &amp;lt;PLAYER HEX UID&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;palworld-server-taskset&lt;/h2&gt; &#xA;&lt;p&gt;把服务端绑定至CPU性能核 (Linux only)&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;复制玩家为将角色及其所有队伍和终端中的伙伴、角色身上的物品以及进度转移，但不会转移任何地图对象、原世界中箱子里的物品以及基地中工作的伙伴。（如果你想将它们一起转移，请将它们移动到身上/终端中）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;对于合作模式的存档，存档文件通常位于 &lt;code&gt;C:\Users¥&amp;lt;用户名&amp;gt;\AppData\Local\Pal\Saved\SaveGames&amp;lt;SteamID&amp;gt;&amp;lt;世界文件夹&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;对于Xbox Game Pass玩家的存档，存档文件通常位于 &lt;code&gt;C:\Users\&amp;lt;用户名&amp;gt;\AppData\Packages\ PocketpairInc.Palworld_ad4psfrxyesvt\SystemAppData\wgs&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;对于服务器存档，请通过 Steam 进入服务器的文件位置。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;你需要至少 3 个文件来完成转移：源玩家角色存档文件（在 Players/中），源世界的 level.sav 文件，以及目标世界的 Level.sav 文件&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;对于本地合作模式的存档，如果你是主机，角色文件始终是 &lt;code&gt;000000...001.sav&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;对于其他玩家的存档，只需知道他们的 &lt;code&gt;ID&lt;/code&gt; 在不同世界间不会改变，因此他们在你的合作世界和服务器世界的角色文件名是相同的。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Windows 用户建议使用 &lt;code&gt;Windows Terminal&lt;/code&gt; 取代 &lt;code&gt;cmd&lt;/code&gt;，否则不显示色彩&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;存档结构如下&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;源世界&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt; SaveGames&#xA; └── &amp;lt;steam-id&amp;gt;&#xA;     └── &amp;lt;source-world-id&amp;gt;&#xA;         ├── backup&#xA;         ├── Level.sav  ----------  &amp;lt;- The source world save-file&#xA;         ├── LevelMeta.sav&#xA;         ├── Players&#xA;         │   ├── 00000...0001.sav&#xA;         │   └── 12345...6789.sav   &amp;lt;- character save-file we want to transfer&#xA;         └── WorldOption.sav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;目标世界&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt; SaveGames&#xA; └── &amp;lt;steam-id&amp;gt;&#xA;     └── &amp;lt;destination-world-id&amp;gt;&#xA;         ├── backup&#xA;         ├── Level.sav  ----------  &amp;lt;- The target world save-file&#xA;         ├── LevelMeta.sav&#xA;         ├── Players&#xA;         │   ├── 00000...0001.sav   &amp;lt;- the target player-placeholder save-file&#xA;         │   └── 98765...4321.sav&#xA;         └── WorldOption.sav&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&lt;strong&gt;TODO&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Cleanup the data on &lt;code&gt;FoliageGridSaveDataMap&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Cleanup more deep data on &lt;code&gt;MapObjectSpawnerInStageSaveData&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;感谢&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cheahjs/palworld-save-tools&#34;&gt;palworld-save-tools&lt;/a&gt; 提供了存档解析工具实现&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EternalWraith/PalEdit&#34;&gt;PalEdit&lt;/a&gt; - 提供了帕鲁编辑器&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jmkl009/PalworldCharacterTransfer&#34;&gt;PalworldCharacterTransfer&lt;/a&gt; - 参考了其中的动态物品数据迁移引用概念&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xNul/palworld-host-save-fix&#34;&gt;Palworld Host Save Fix&lt;/a&gt; - 提供了最早期迁移玩家数据的概念&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>