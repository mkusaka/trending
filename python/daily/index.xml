<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-31T01:42:27Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Lightning-AI/lit-llama</title>
    <updated>2023-03-31T01:42:27Z</updated>
    <id>tag:github.com,2023-03-31:/Lightning-AI/lit-llama</id>
    <link href="https://github.com/Lightning-AI/lit-llama" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implementation of the LLaMA language model based on nanoGPT. Supports quantization, LoRA fine-tuning, pre-training. Apache 2.0-licensed.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://pl-public-data.s3.amazonaws.com/assets_lightning/Lit_LLaMA_Badge3x.png&#34; alt=&#34;Lit-LLaMA&#34; width=&#34;128&#34;&gt; &#xA; &lt;h1&gt;‚ö° Lit-LLaMA Ô∏è&lt;/h1&gt; &#xA; &lt;!--&#xA;&lt;p align=&#34;center&#34;&gt;&#xA;  &lt;a href=&#34;https://www.lightning.ai/&#34;&gt;Lightning.ai&lt;/a&gt; ‚Ä¢&#xA;  &lt;a href=&#34;https://lightning.ai/docs/pytorch/stable/&#34;&gt;PyTorch Lightning&lt;/a&gt; ‚Ä¢&#xA;  &lt;a href=&#34;https://lightning.ai/docs/fabric/stable/&#34;&gt;Fabric&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;--&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/lightning-AI/lit-llama/actions/workflows/cpu-tests.yml/badge.svg?sanitize=true&#34; alt=&#34;cpu-tests&#34;&gt; &lt;a href=&#34;https://github.com/Lightning-AI/lit-llama/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/VptPCZkGNa&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1077906959069626439?style=plastic&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;img src=&#34;https://pl-public-data.s3.amazonaws.com/assets_lightning/Llama_pineapple.gif&#34; alt=&#34;Lit-LLaMA and pineapple pizza&#34; width=&#34;500px&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;‚ö° Lit-LLaMA Ô∏è&lt;/h1&gt; &#xA;&lt;p&gt;Independent implementation of &lt;a href=&#34;https://github.com/facebookresearch/llama&#34;&gt;LLaMA&lt;/a&gt; that is fully open source under the &lt;strong&gt;Apache 2.0 license.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This implementation builds on &lt;a href=&#34;https://github.com/karpathy/nanoGPT&#34;&gt;nanoGPT&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Why?&lt;/h2&gt; &#xA;&lt;p&gt;We believe that AI should be fully open source and part of the collective knowledge.&lt;/p&gt; &#xA;&lt;p&gt;The original &lt;a href=&#34;https://github.com/facebookresearch/llama&#34;&gt;LLaMA code&lt;/a&gt; is &lt;a href=&#34;https://github.com/facebookresearch/llama/raw/main/LICENSE&#34;&gt;GPL licensed&lt;/a&gt; which means any project using it must also be released under GPL.&lt;/p&gt; &#xA;&lt;p&gt;This &#34;taints&#34; any other code and prevents meaningful academic and commercial use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Lit-LLaMA solves that for good.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;Design principles&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Lit-LLaMA&lt;/strong&gt; is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simple:&lt;/strong&gt; Single-file implementation without boilerplate.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Correct:&lt;/strong&gt; Numerically equivalent to the original model.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Optimized:&lt;/strong&gt; Runs on consumer hardware or at scale.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open-source:&lt;/strong&gt; No strings attached.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get involved!&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/VptPCZkGNa&#34;&gt;Join our Discord&lt;/a&gt; to build high-performance, truly open-source models for the common benefit of the community.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;Clone the repo&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Lightning-AI/lit-llama&#xA;cd lit-llama&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;install dependencies&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You are all set! üéâ&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;Use the model&lt;/h2&gt; &#xA;&lt;p&gt;To generate text predictions, download the model weights following the instructions on the official &lt;a href=&#34;https://github.com/facebookresearch/llama&#34;&gt;LLaMA repository&lt;/a&gt;. Note that currently the weights are still under a &lt;a href=&#34;https://github.com/facebookresearch/llama/raw/main/MODEL_CARD.md#model-details&#34;&gt;research-only license&lt;/a&gt;, there&#39;s no change to that (yet ü§ì).&lt;/p&gt; &#xA;&lt;p&gt;Once downloaded, you should have a folder like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;checkpoints/llama&#xA;‚îú‚îÄ‚îÄ 7B&#xA;‚îÇ   ‚îú‚îÄ‚îÄ checklist.chk&#xA;‚îÇ   ‚îú‚îÄ‚îÄ consolidated.00.pth&#xA;‚îÇ   ‚îî‚îÄ‚îÄ params.json&#xA;‚îú‚îÄ‚îÄ 13B&#xA;‚îÇ   ...&#xA;‚îú‚îÄ‚îÄ tokenizer_checklist.chk&#xA;‚îî‚îÄ‚îÄ tokenizer.model&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Convert the weights to the Lit-LLaMA format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/convert_checkpoint.py \&#xA;    --output_dir checkpoints/lit-llama \&#xA;    --ckpt_dir checkpoints/llama \&#xA;    --tokenizer_path checkpoints/llama/tokenizer.model \&#xA;    --model_size 7B&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run inference:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python generate.py --prompt &#34;Hello, my name is&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will run the 7B model and require ~26 GB of GPU memory (A100 GPU).&lt;/p&gt; &#xA;&lt;h3&gt;Run Lit-LLaMA on consumer devices&lt;/h3&gt; &#xA;&lt;p&gt;For GPUs with less memory, enable quantization (&lt;code&gt;--quantize true&lt;/code&gt;). This will take longer to load but require ~8GB of memory. This can run on any consumer GPU.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python generate.py --quantize true --prompt &#34;Hello, my name is&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;code&gt;python generate.py --help&lt;/code&gt; for more options.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;Finetune the model&lt;/h2&gt; &#xA;&lt;p&gt;We provide a simple training script in &lt;code&gt;finetune.py&lt;/code&gt; that instruction-tunes a pretrained model on the &lt;a href=&#34;https://github.com/tatsu-lab/stanford_alpaca&#34;&gt;Alpaca&lt;/a&gt; dataset and also integrates &lt;a href=&#34;https://arxiv.org/abs/2106.09685&#34;&gt;LoRA&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the data and generate a instruction tuning dataset:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/prepare_alpaca.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the finetuning script&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python finetune.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;It is expected that you have downloaded the pretrained weights as described above. The finetuning requires a GPU with 40 GB memory (A100). Coming soon: LoRA + quantization for training on a consumer-grade GPU!&lt;/p&gt; &#xA;&lt;h2&gt;Get involved!&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re in a quest towards fully open source AI.&lt;/p&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://pl-public-data.s3.amazonaws.com/assets_lightning/Lit_LLaMA_Illustration3x.png&#34; alt=&#34;Lit-LLaMA&#34; width=&#34;128&#34;&gt; &#xA;&lt;p&gt;Join us and start contributing, especially on the following areas:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/Lightning-AI/lit-llama/labels/pre-training&#34;&gt;Pre-training&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/Lightning-AI/lit-llama/labels/fine-tuning&#34;&gt;Fine-tuning (full and LoRA)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/Lightning-AI/lit-llama/labels/quantization&#34;&gt;Quantization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/Lightning-AI/lit-llama/labels/sparsification&#34;&gt;Sparsification&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Look at &lt;code&gt;train.py&lt;/code&gt; for a starting point towards pre-training / fine-tuning using &lt;a href=&#34;https://lightning.ai/docs/fabric/stable/&#34;&gt;Lightning Fabric&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t forget to &lt;a href=&#34;https://discord.gg/VptPCZkGNa&#34;&gt;join our Discord&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/karpathy&#34;&gt;@karpathy&lt;/a&gt; for &lt;a href=&#34;https://github.com/karpathy/nanoGPT&#34;&gt;nanoGPT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facebookresearch&#34;&gt;@FacebookResearch&lt;/a&gt; for the original &lt;a href=&#34;https://github.com/facebookresearch/llama&#34;&gt;LLaMA implementation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TimDettmers&#34;&gt;@TimDettmers&lt;/a&gt; for &lt;a href=&#34;https://github.com/TimDettmers/bitsandbytes&#34;&gt;bitsandbytes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft&#34;&gt;@Microsoft&lt;/a&gt; for &lt;a href=&#34;https://github.com/microsoft/LoRA&#34;&gt;LoRA&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Lit-LLaMA is released under the &lt;a href=&#34;https://github.com/Lightning-AI/lightning-llama/raw/main/LICENSE&#34;&gt;Apache 2.0&lt;/a&gt; license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Picsart-AI-Research/Text2Video-Zero</title>
    <updated>2023-03-31T01:42:27Z</updated>
    <id>tag:github.com,2023-03-31:/Picsart-AI-Research/Text2Video-Zero</id>
    <link href="https://github.com/Picsart-AI-Research/Text2Video-Zero" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Text-to-Image Diffusion Models are Zero-Shot Video Generators&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Text2Video-Zero&lt;/h1&gt; &#xA;&lt;p&gt;This repository is the official implementation of &lt;a href=&#34;https://arxiv.org/abs/2303.13439&#34;&gt;Text2Video-Zero&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://arxiv.org/abs/2303.13439&#34;&gt;Text2Video-Zero: Text-to-Image Diffusion Models are Zero-Shot Video Generators&lt;/a&gt;&lt;/strong&gt; &lt;br&gt; Levon Khachatryan, Andranik Movsisyan, Vahram Tadevosyan, Roberto Henschel, &lt;a href=&#34;https://www.ece.utexas.edu/people/faculty/atlas-wang&#34;&gt;Zhangyang Wang&lt;/a&gt;, Shant Navasardyan, &lt;a href=&#34;https://www.humphreyshi.com&#34;&gt;Humphrey Shi&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2303.13439&#34;&gt;Paper&lt;/a&gt; | &lt;a href=&#34;https://www.dropbox.com/s/uv90mi2z598olsq/Text2Video-Zero.MP4?dl=0&#34;&gt;Video&lt;/a&gt; | &lt;a href=&#34;https://huggingface.co/spaces/PAIR/Text2Video-Zero&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue&#34; alt=&#34;Hugging Face Spaces&#34;&gt;&lt;/a&gt; | &lt;a href=&#34;https://text2video-zero.github.io/&#34;&gt;Project&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/teaser/teaser_final.png&#34; width=&#34;800px&#34;&gt; &lt;br&gt; &lt;em&gt;Our method Text2Video-Zero enables zero-shot video generation using (i) a textual prompt (see rows 1, 2), (ii) a prompt combined with guidance from poses or edges (see lower right), and (iii) Video Instruct-Pix2Pix, i.e., instruction-guided video editing (see lower left). Results are temporally consistent and follow closely the guidance and textual prompts.&lt;/em&gt; &lt;/p&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[03/23/2023] Paper &lt;a href=&#34;https://arxiv.org/abs/2303.13439&#34;&gt;Text2Video-Zero&lt;/a&gt; released!&lt;/li&gt; &#xA; &lt;li&gt;[03/25/2023] The &lt;a href=&#34;https://huggingface.co/spaces/PAIR/Text2Video-Zero&#34;&gt;first version&lt;/a&gt; of our huggingface demo (containing &lt;code&gt;zero-shot text-to-video generation&lt;/code&gt; and &lt;code&gt;Video Instruct Pix2Pix&lt;/code&gt;) released!&lt;/li&gt; &#xA; &lt;li&gt;[03/27/2023] The &lt;a href=&#34;https://huggingface.co/spaces/PAIR/Text2Video-Zero&#34;&gt;full version&lt;/a&gt; of our huggingface demo released! Now also included: &lt;code&gt;text and pose conditional video generation&lt;/code&gt;, &lt;code&gt;text and canny-edge conditional video generation&lt;/code&gt;, and &lt;code&gt;text, canny-edge and dreambooth conditional video generation&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;[03/28/2023] Code for all our generation methods released! We added a new low-memory setup. Minimum required GPU VRAM is currently &lt;strong&gt;12 GB&lt;/strong&gt;. It will be further reduced in the upcoming releases.&lt;/li&gt; &#xA; &lt;li&gt;[03/29/2023] Improved &lt;a href=&#34;https://huggingface.co/spaces/PAIR/Text2Video-Zero&#34;&gt;Huggingface demo&lt;/a&gt;! (i) For text-to-video generation, &lt;strong&gt;any base model for stable diffusion&lt;/strong&gt; and &lt;strong&gt;any dreambooth model&lt;/strong&gt; hosted on huggingface can now be loaded! (ii) The generated videos (text-to-video) can have arbitrary length. (iii) We improved the quality of Video Instruct-Pix2Pix. (iv) We added two longer examples for Video Instruct-Pix2Pix.&lt;/li&gt; &#xA; &lt;li&gt;[03/30/2023] New code released! It includes all improvements of our latest huggingface iteration. See the news update from &lt;code&gt;03/29/2023&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;We are on a journey to democratize AI and empower the creativity of everyone, and we believe Text2Video-Zero is a great research direction to unleash the zero-shot video generation and editing capacity of the amazing text-to-image models!&lt;/p&gt; &#xA;&lt;p&gt;To achieve this goal, all contributions are welcome. Please check out these external implementations and extensions of Text2Video-Zero. We thank the authors for their efforts and contributions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JiauZhang/Text2Video-Zero&#34;&gt;https://github.com/JiauZhang/Text2Video-Zero&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/camenduru/text2video-zero-colab&#34;&gt;https://github.com/camenduru/text2video-zero-colab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SHI-Labs/Text2Video-Zero-sd-webui&#34;&gt;https://github.com/SHI-Labs/Text2Video-Zero-sd-webui&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repository and enter:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/Picsart-AI-Research/Text2Video-Zero.git&#xA;cd Text2Video-Zero/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install requirements using Python 3.9&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;virtualenv --system-site-packages -p python3.9 venv&#xA;source venv/bin/activate&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- Installing [xformers](https://github.com/facebookresearch/xformers) is highly recommended for more efficiency and speed on GPUs. &#xA;&#xA;### Weights&#xA;&#xA;#### Text-To-Video with Pose Guidance&#xA;&#xA;Download the pose model weights used in [ControlNet](https://arxiv.org/abs/2302.05543):&#xA;```shell&#xA;wget -P annotator/ckpts https://huggingface.co/lllyasviel/ControlNet/resolve/main/annotator/ckpts/hand_pose_model.pth&#xA;wget -P annotator/ckpts https://huggingface.co/lllyasviel/ControlNet/resolve/main/annotator/ckpts/body_pose_model.pth&#xA;```&#xA;&#xA;&#xA;&lt;!---&#xA;#### Text-To-Video&#xA;Any [Stable Diffusion](https://arxiv.org/abs/2112.10752) v1.4 model weights in huggingface format can be used and must be placed in `models/text-to-video`.&#xA;For instance:&#xA;&#xA;```shell&#xA;git lfs install&#xA;git clone https://huggingface.co/CompVis/stable-diffusion-v1-4 model_weights&#xA;mv model_weights models/text-to-video&#xA;```&#xA;&#xA;#### Video Instruct-Pix2Pix&#xA;From [Instruct-Pix2Pix](https://arxiv.org/pdf/2211.09800.pdf) download pretrained model files:&#xA;```shell&#xA;git lfs install&#xA;git clone https://huggingface.co/timbrooks/instruct-pix2pix models/instruct-pix2pix&#xA;``` &#xA;&#xA;#### Text-To-Video with Pose Guidance&#xA;From [ControlNet](https://arxiv.org/abs/2302.05543), download the open pose model file:&#xA;```shell&#xA;mkdir -p models/control&#xA;wget -P models/control https://huggingface.co/lllyasviel/ControlNet/resolve/main/models/control_sd15_openpose.pth&#xA;```&#xA;#### Text-To-Video with Edge Guidance&#xA;From [ControlNet](https://arxiv.org/abs/2302.05543), download the Canny edge model file:&#xA;```shell&#xA;mkdir -p models/control&#xA;wget -P models/control https://huggingface.co/lllyasviel/ControlNet/resolve/main/models/control_sd15_canny.pth &#xA;```&#xA;&#xA;---&gt; &#xA;&lt;h4&gt;Text-To-Video with Edge Guidance and Dreambooth&lt;/h4&gt; &#xA;&lt;p&gt;Integrate a &lt;code&gt;SD1.4&lt;/code&gt; Dreambooth model into ControlNet using &lt;a href=&#34;https://github.com/lllyasviel/ControlNet/discussions/12&#34;&gt;this&lt;/a&gt; procedure. Load the model into &lt;code&gt;models/control_db/&lt;/code&gt;. Dreambooth models can be obtained, for instance, from &lt;a href=&#34;https://civitai.com&#34;&gt;CIVITAI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We provide already prepared model files derived from CIVITAI for &lt;code&gt;anime&lt;/code&gt; (keyword &lt;code&gt;1girl&lt;/code&gt;), &lt;code&gt;arcane style&lt;/code&gt; (keyword &lt;code&gt;arcane style&lt;/code&gt;) &lt;code&gt;avatar&lt;/code&gt; (keyword &lt;code&gt;avatar style&lt;/code&gt;) and &lt;code&gt;gta-5 style&lt;/code&gt; (keyword &lt;code&gt;gtav style&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;!--&#xA;To this end, download the model files from [google drive](https://drive.google.com/drive/folders/1uwXNjJ-4Ws6pqyjrIWyVPWu_u4aJrqt8?usp=share_link) and extract them into `models/control_db/`.&#xA;---&gt; &#xA;&lt;h2&gt;Inference API&lt;/h2&gt; &#xA;&lt;p&gt;To run inferences create an instance of &lt;code&gt;Model&lt;/code&gt; class&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from model import Model&#xA;&#xA;model = Model(device = &#34;cuda&#34;, dtype = torch.float16)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Text-To-Video&lt;/h3&gt; &#xA;&lt;p&gt;To directly call our text-to-video generator, run this python command which stores the result in &lt;code&gt;tmp/text2video/A_horse_galloping_on_a_street.mp4&lt;/code&gt; :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;prompt = &#34;A horse galloping on a street&#34;&#xA;params = {&#34;t0&#34;: 44, &#34;t1&#34;: 47 , &#34;motion_field_strength_x&#34; : 12, &#34;motion_field_strength_y&#34; : 12, &#34;video_length&#34;: 8}&#xA;&#xA;out_path, fps = f&#34;./text2video_{prompt.replace(&#39; &#39;,&#39;_&#39;)}.mp4&#34;, 4&#xA;model.process_text2video(prompt, fps = fps, path = out_path, **params)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use a different stable diffusion base model run this python command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from hf_utils import get_model_list&#xA;model_list = get_model_list()&#xA;for idx, name in enumerate(model_list):&#xA;  print(idx, name)&#xA;idx = int(input(&#34;Select the model by the listed number: &#34;)) # select the model of your choice&#xA;model.process_text2video(prompt, model_name = model_list[idx], fps = fps, path = out_path, **params)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Hyperparameters (Optional)&lt;/h4&gt; &#xA;&lt;p&gt;You can define the following hyperparameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Motion field strength&lt;/strong&gt;: &lt;code&gt;motion_field_strength_x&lt;/code&gt; = $\delta_x$ and &lt;code&gt;motion_field_strength_y&lt;/code&gt; = $\delta_x$ (see our paper, Sect. 3.3.1). Default: &lt;code&gt;motion_field_strength_x=motion_field_strength_y= 12&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;$T$ and $T&#39;$ (see our paper, Sect. 3.3.1). Define values &lt;code&gt;t0&lt;/code&gt; and &lt;code&gt;t1&lt;/code&gt; in the range &lt;code&gt;{0,...,50}&lt;/code&gt;. Default: &lt;code&gt;t0=44&lt;/code&gt;, &lt;code&gt;t1=47&lt;/code&gt; (DDIM steps). Corresponds to timesteps &lt;code&gt;881&lt;/code&gt; and &lt;code&gt;941&lt;/code&gt;, respectively.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Video length&lt;/strong&gt;: Define the number of frames &lt;code&gt;video_length&lt;/code&gt; to be generated. Default: &lt;code&gt;video_length=8&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Text-To-Video with Pose Control&lt;/h3&gt; &#xA;&lt;p&gt;To directly call our text-to-video generator with pose control, run this python command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;prompt = &#39;an astronaut dancing in outer space&#39;&#xA;motion_path = &#39;__assets__/poses_skeleton_gifs/dance1_corr.mp4&#39;&#xA;out_path = f&#34;./text2video_pose_guidance_{prompt.replace(&#39; &#39;,&#39;_&#39;)}.gif&#34;&#xA;model.process_controlnet_pose(motion_path, prompt=prompt, save_path=out_path)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Text-To-Video with Edge Control&lt;/h3&gt; &#xA;&lt;p&gt;To directly call our text-to-video generator with edge control, run this python command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;prompt = &#39;oil painting of a deer, a high-quality, detailed, and professional photo&#39;&#xA;video_path = &#39;__assets__/canny_videos_mp4/deer.mp4&#39;&#xA;out_path = f&#39;./text2video_edge_guidance_{prompt}.mp4&#39;&#xA;model.process_controlnet_canny(video_path, prompt=prompt, save_path=out_path)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Hyperparameters&lt;/h4&gt; &#xA;&lt;p&gt;You can define the following hyperparameters for Canny edge detection:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;low threshold&lt;/strong&gt;. Define value &lt;code&gt;low_threshold&lt;/code&gt; in the range $(0, 255)$. Default: &lt;code&gt;low_threshold=100&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;high threshold&lt;/strong&gt;. Define value &lt;code&gt;high_threshold&lt;/code&gt; in the range $(0, 255)$. Default: &lt;code&gt;high_threshold=200&lt;/code&gt;. Make sure that &lt;code&gt;high_threshold&lt;/code&gt; &amp;gt; &lt;code&gt;low_threshold&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can give hyperparameters as arguments to &lt;code&gt;model.process_controlnet_canny&lt;/code&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Text-To-Video with Edge Guidance and Dreambooth specialization&lt;/h3&gt; &#xA;&lt;p&gt;Load a dreambooth model then proceed as described in &lt;code&gt;Text-To-Video with Edge Guidance&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#xA;prompt = &#39;your prompt&#39;&#xA;video_path = &#39;path/to/your/video&#39;&#xA;dreambooth_model_path = &#39;path/to/your/dreambooth/model&#39;&#xA;out_path = f&#39;./text2video_edge_db_{prompt}.gif&#39;&#xA;model.process_controlnet_canny_db(dreambooth_model_path, video_path, prompt=prompt, save_path=out_path)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The value &lt;code&gt;video_path&lt;/code&gt; can be the path to a &lt;code&gt;mp4&lt;/code&gt; file. To use one of the example videos provided, set &lt;code&gt;video_path=&#34;woman1&#34;&lt;/code&gt;, &lt;code&gt;video_path=&#34;woman2&#34;&lt;/code&gt;, &lt;code&gt;video_path=&#34;woman3&#34;&lt;/code&gt;, or &lt;code&gt;video_path=&#34;man1&#34;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The value &lt;code&gt;dreambooth_model_path&lt;/code&gt; can either be a link to a diffuser model file, or the name of one of the dreambooth models provided. To this end, set &lt;code&gt;dreambooth_model_path = &#34;Anime DB&#34;&lt;/code&gt;, &lt;code&gt;dreambooth_model_path = &#34;Avatar DB&#34;&lt;/code&gt;, &lt;code&gt;dreambooth_model_path = &#34;GTA-5 DB&#34;&lt;/code&gt;, or &lt;code&gt;dreambooth_model_path = &#34;Arcane DB&#34;&lt;/code&gt;. The corresponding keywords are: &lt;code&gt;1girl&lt;/code&gt; (for &lt;code&gt;Anime DB&lt;/code&gt;), &lt;code&gt;arcane style&lt;/code&gt; (for &lt;code&gt;Arcane DB&lt;/code&gt;) &lt;code&gt;avatar style&lt;/code&gt; (for &lt;code&gt;Avatar DB&lt;/code&gt;) and &lt;code&gt;gta-5 style&lt;/code&gt; (for &lt;code&gt;GTA-5 DB&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;If the model file is not in diffuser format, it must be &lt;a href=&#34;https://github.com/huggingface/diffusers/raw/main/scripts/convert_original_stable_diffusion_to_diffusers.py&#34;&gt;converted&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Video Instruct-Pix2Pix&lt;/h3&gt; &#xA;&lt;p&gt;To perform pix2pix video editing, run this python command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;prompt = &#39;make it Van Gogh Starry Night&#39;&#xA;video_path = &#39;__assets__/pix2pix video/camel.mp4&#39;&#xA;out_path = f&#39;./video_instruct_pix2pix_{prompt}.mp4&#39;&#xA;model.process_pix2pix(video_path, prompt=prompt, save_path=out_path)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Low Memory Inference&lt;/h3&gt; &#xA;&lt;p&gt;Each of the above introduced interface can be run in a low memory setup. In the minimal setup, a GPU with &lt;strong&gt;12 GB VRAM&lt;/strong&gt; is sufficient.&lt;/p&gt; &#xA;&lt;p&gt;To reduce the memory usage, add &lt;code&gt;chunk_size=k&lt;/code&gt; as additional parameter when calling one of the above defined inference APIs. The integer value &lt;code&gt;k&lt;/code&gt; must be in the range &lt;code&gt;{2,...,video_length}&lt;/code&gt;. It defines the number of frames that are processed at once (without any loss in quality). The lower the value the less memory is needed.&lt;/p&gt; &#xA;&lt;p&gt;When using the gradio app, set &lt;code&gt;chunk_size&lt;/code&gt; in the &lt;code&gt;Advanced options&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We plan to release soon a new version that further reduces the memory usage.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Ablation Study&lt;/h3&gt; &#xA;&lt;p&gt;To replicate the ablation study, add additional parameters when calling the above defined inference APIs.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To deactivate &lt;code&gt;cross-frame attention&lt;/code&gt;: Add &lt;code&gt;use_cf_attn=False&lt;/code&gt; to the parameter list.&lt;/li&gt; &#xA; &lt;li&gt;To deactivate enriching latent codes with &lt;code&gt;motion dynamics&lt;/code&gt;: Add &lt;code&gt;use_motion_field=False&lt;/code&gt; to the parameter list.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note: Adding &lt;code&gt;smooth_bg=True&lt;/code&gt; activates background smoothing. However, our code does not include the salient object detector necessary to run that code.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Inference using Gradio&lt;/h2&gt; &#xA;&lt;p&gt;From the project root folder, run this shell command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python app.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then access the app &lt;a href=&#34;http://127.0.0.1:7860&#34;&gt;locally&lt;/a&gt; with a browser.&lt;/p&gt; &#xA;&lt;p&gt;To access the app remotely, run this shell command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python app.py --public_access&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For security information about public access we refer to the documentation of &lt;a href=&#34;https://gradio.app/sharing-your-app/#security-and-file-access&#34;&gt;gradio&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Results&lt;/h2&gt; &#xA;&lt;h3&gt;Text-To-Video&lt;/h3&gt; &#xA;&lt;table class=&#34;center&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/t2v/cat_running.gif&#34; raw=&#34;true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/t2v/playing.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/t2v/running.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/t2v/skii.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A cat is running on the grass&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A panda is playing guitar on times square&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A man is running in the snow&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;An astronaut is skiing down the hill&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/t2v/panda_surfing.gif&#34; raw=&#34;true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/t2v/bear_dancing.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/t2v/bicycle.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/t2v/horse_galloping.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A panda surfing on a wakeboard&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A bear dancing on times square&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A man is riding a bicycle in the sunshine&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A horse galloping on a street&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/t2v/tiger_walking.gif&#34; raw=&#34;true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/t2v/panda_surfing_2.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/t2v/horse_galloping_2.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/t2v/cat_walking.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A tiger walking alone down the street&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A panda surfing on a wakeboard&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A horse galloping on a street&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A cute cat running in a beatiful meadow&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/t2v/horse_galloping_3.gif&#34; raw=&#34;true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/t2v/panda_walking.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/t2v/dog_walking.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/t2v/astronaut.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A horse galloping on a street&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A panda walking alone down the street&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A dog is walking down the street&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;An astronaut is waving his hands on the moon&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Text-To-Video with Pose Guidance&lt;/h3&gt; &#xA;&lt;table class=&#34;center&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/pose2v/img_bot_left.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/pose2v/pose_bot_left.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/pose2v/img_bot_right.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/pose2v/pose_bot_right.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/pose2v/img_top_left.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/pose2v/pose_top_left.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/pose2v/img_top_right.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/pose2v/pose_top_right.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A bear dancing on the concrete&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;An alien dancing under a flying saucer&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A panda dancing in Antarctica&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;An astronaut dancing in the outer space&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Text-To-Video with Edge Guidance&lt;/h3&gt; &#xA;&lt;table class=&#34;center&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/edge2v/butterfly.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/edge2v/butterfly_edge.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/edge2v/head.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/edge2v/head_edge.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/edge2v/jelly.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/edge2v/jelly_edge.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/edge2v/mask.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/edge2v/mask_edge.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;White butterfly&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;Beautiful girl&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A jellyfish&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;beautiful girl halloween style&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/edge2v/fox.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/edge2v/fix_edge.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/edge2v/head_2.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/edge2v/head_2_edge.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/edge2v/santa.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/edge2v/santa_edge.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/edge2v/dear.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/edge2v/dear_edge.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;Wild fox is walking&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;Oil painting of a beautiful girl close-up&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A santa claus&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;A deer&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Text-To-Video with Edge Guidance and Dreambooth specialization&lt;/h3&gt; &#xA;&lt;table class=&#34;center&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/canny_db/anime_style.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/canny_db/anime_edge.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/canny_db/arcane_style.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/canny_db/arcane_edge.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/canny_db/gta-5_man_style.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/canny_db/gta-5_man_edge.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/canny_db/img_bot_right.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/canny_db/edge_bot_right.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;anime style&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;arcane style&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;gta-5 man&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;avatar style&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Video Instruct Pix2Pix&lt;/h2&gt; &#xA;&lt;table class=&#34;center&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/Video_InstructPix2Pix/frame_1/up_left.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/Video_InstructPix2Pix/frame_1/bot_left.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/Video_InstructPix2Pix/frame_1/up_mid.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/Video_InstructPix2Pix/frame_1/bot_mid.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/Video_InstructPix2Pix/frame_1/up_right.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/Video_InstructPix2Pix/frame_1/bot_right.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;Replace man with chimpanze&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;Make it Van Gogh Starry Night style&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;Make it Picasso style&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/Video_InstructPix2Pix/frame_2/up_left.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/Video_InstructPix2Pix/frame_2/bot_left.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/Video_InstructPix2Pix/frame_2/up_mid.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/Video_InstructPix2Pix/frame_2/bot_mid.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/Video_InstructPix2Pix/frame_2/up_right.gif&#34; raw=&#34;true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Picsart-AI-Research/Text2Video-Zero/main/__assets__/github/results/Video_InstructPix2Pix/frame_2/bot_right.gif&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;Make it Expressionism style&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;Make it night&#34;&lt;/td&gt; &#xA;   &lt;td width=&#34;25%&#34; align=&#34;center&#34;&gt;&#34;Make it autumn&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Related Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ommer-lab.com/research/latent-diffusion-models/&#34;&gt;High-Resolution Image Synthesis with Latent Diffusion Models (a.k.a. LDM &amp;amp; Stable Diffusion)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.timothybrooks.com/instruct-pix2pix/&#34;&gt;InstructPix2Pix: Learning to Follow Image Editing Instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lllyasviel/ControlNet&#34;&gt;Adding Conditional Control to Text-to-Image Diffusion Models (a.k.a ControlNet)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/huggingface/diffusers&#34;&gt;Diffusers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Our code is published under the CreativeML Open RAIL-M license. The license provided in this repository applies to all additions and contributions we make upon the original stable diffusion code. The original stable diffusion code is under the CreativeML Open RAIL-M license, which can found &lt;a href=&#34;https://github.com/CompVis/stable-diffusion/raw/main/LICENSE&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;BibTeX&lt;/h2&gt; &#xA;&lt;p&gt;If you use our work in your research, please cite our publication:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{text2video-zero,&#xA;    title={Text2Video-Zero: Text-to-Image Diffusion Models are Zero-Shot Video Generators},&#xA;    author={Khachatryan, Levon and Movsisyan, Andranik and Tadevosyan, Vahram and Henschel, Roberto and Wang, Zhangyang and Navasardyan, Shant and Shi, Humphrey},&#xA;    journal={arXiv preprint arXiv:2303.13439},&#xA;    year={2023}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>nomic-ai/gpt4all</title>
    <updated>2023-03-31T01:42:27Z</updated>
    <id>tag:github.com,2023-03-31:/nomic-ai/gpt4all</id>
    <link href="https://github.com/nomic-ai/gpt4all" rel="alternate"></link>
    <summary type="html">&lt;p&gt;gpt4all: a chatbot trained on a massive collection of clean assistant data including code, stories and dialogue&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;GPT4All&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Demo, data and code to train an assistant-style large language model with ~800k GPT-3.5-Turbo Generations based on LLaMa&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://s3.amazonaws.com/static.nomic.ai/gpt4all/2023_GPT4All_Technical_Report.pdf&#34;&gt;&lt;span&gt;üìó&lt;/span&gt; Technical Report&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/kvmy6dQB&#34;&gt;Discord&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13879686/228352356-de66ca7a-df70-474e-b929-2e3656165051.gif&#34; alt=&#34;gpt4all-lora-demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run on M1 Mac (not sped up!)&lt;/p&gt; &#xA;&lt;h1&gt;Try it yourself&lt;/h1&gt; &#xA;&lt;p&gt;Here&#39;s how to get started with the CPU quantized gpt4all model checkpoint:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the &lt;code&gt;gpt4all-lora-quantized.bin&lt;/code&gt; file from &lt;a href=&#34;https://the-eye.eu/public/AI/models/nomic-ai/gpt4all/gpt4all-lora-quantized.bin&#34;&gt;Direct Link&lt;/a&gt; or &lt;a href=&#34;https://tinyurl.com/gpt4all-lora-quantized&#34;&gt;[Torrent-Magnet]&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Clone this repository, navigate to &lt;code&gt;chat&lt;/code&gt;, and place the downloaded file there.&lt;/li&gt; &#xA; &lt;li&gt;Run the appropriate command for your OS: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;M1 Mac/OSX: &lt;code&gt;cd chat;./gpt4all-lora-quantized-OSX-m1&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Linux: &lt;code&gt;cd chat;./gpt4all-lora-quantized-linux-x86&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Windows (PowerShell): &lt;code&gt;cd chat;./gpt4all-lora-quantized-win64.exe&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Intel Mac/OSX: &lt;code&gt;cd chat;./gpt4all-lora-quantized-OSX-intel&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For custom hardware compilation, see our &lt;a href=&#34;https://github.com/zanussbaum/gpt4all.cpp&#34;&gt;Alpaca C++&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://the-eye.eu/public/AI/models/nomic-ai/gpt4all/gpt4all-lora-unfiltered-quantized.bin&#34;&gt;Secret Unfiltered Checkpoint&lt;/a&gt; - &lt;a href=&#34;https://the-eye.eu/public/AI/models/nomic-ai/gpt4all/gpt4all-lora-unfiltered-quantized.bin.torrent&#34;&gt;[Torrent]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This model had all refusal to answer responses removed from training. Try it with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cd chat;./gpt4all-lora-quantized-OSX-m1 -m gpt4all-lora-unfiltered-quantized.bin&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Note: the full model on GPU (16GB of RAM required) performs much better in our qualitative evaluations.&lt;/p&gt; &#xA;&lt;h1&gt;Python Client&lt;/h1&gt; &#xA;&lt;h2&gt;CPU Interface&lt;/h2&gt; &#xA;&lt;p&gt;To get running using the python client with the CPU interface, first install the &lt;a href=&#34;https://github.com/nomic-ai/nomic&#34;&gt;nomic client&lt;/a&gt; using &lt;code&gt;pip install nomic&lt;/code&gt; Then, you can use the following script to interact with GPT4All:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;from nomic.gpt4all import GPT4All&#xA;m = GPT4All()&#xA;m.open()&#xA;m.prompt(&#39;write me a story about a lonely computer&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GPU Interface&lt;/h2&gt; &#xA;&lt;p&gt;There are two ways to get up and running with this model on GPU. The setup here is slightly more involved than the CPU model.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;clone the nomic client &lt;a href=&#34;https://github.com/nomic-ai/nomic&#34;&gt;repo&lt;/a&gt; and run &lt;code&gt;pip install .[GPT4All]&lt;/code&gt; in the home dir.&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;pip install nomic&lt;/code&gt; and install the additional deps from the wheels built &lt;a href=&#34;https://github.com/nomic-ai/nomic/tree/main/bin&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Once this is done, you can run the model on GPU with a script like the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;from nomic.gpt4all import GPT4AllGPU&#xA;m = GPT4AllGPU(LLAMA_PATH)&#xA;config = {&#39;num_beams&#39;: 2,&#xA;          &#39;min_new_tokens&#39;: 10,&#xA;          &#39;max_length&#39;: 100,&#xA;          &#39;repetition_penalty&#39;: 2.0}&#xA;out = m.generate(&#39;write me a story about a lonely computer&#39;, config)&#xA;print(out)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where LLAMA_PATH is the path to a Huggingface Automodel compliant LLAMA model. Nomic is unable to distribute this file at this time. We are working on a GPT4All that does not have this limitation right now.&lt;/p&gt; &#xA;&lt;p&gt;You can pass any of the &lt;a href=&#34;https://huggingface.co/docs/transformers/main_classes/text_generation#transformers.GenerationConfig&#34;&gt;huggingface generation config params&lt;/a&gt; in the config.&lt;/p&gt; &#xA;&lt;h1&gt;Roadmap&lt;/h1&gt; &#xA;&lt;h2&gt;Short Term&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span style=&#34;color:green&#34;&gt;(IN PROGRESS)&lt;/span&gt; Train a GPT4All model based on GPTJ to alleviate llama distribution issues.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span style=&#34;color:green&#34;&gt;(IN PROGRESS)&lt;/span&gt; Create improved CPU and GPU interfaces for this model.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span style=&#34;color:red&#34;&gt;(NOT STARTED)&lt;/span&gt; Integrate llama.cpp bindings&lt;/li&gt; &#xA; &lt;li&gt;&lt;span style=&#34;color:red&#34;&gt;(NOT STARTED)&lt;/span&gt; Create a good conversational chat interface for the model.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span style=&#34;color:red&#34;&gt;(NOT STARTED)&lt;/span&gt; Allow users to opt in and submit their chats for subsequent training runs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Medium Term&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span style=&#34;color:red&#34;&gt;(NOT STARTED)&lt;/span&gt; Integrate GPT4All with &lt;a href=&#34;https://atlas.nomic.ai&#34;&gt;Atlas&lt;/a&gt; to allow for document retrieval. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;BLOCKED by GPT4All based on GPTJ&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;span style=&#34;color:red&#34;&gt;(NOT STARTED)&lt;/span&gt; Integrate GPT4All with Langchain.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span style=&#34;color:green&#34;&gt;(IN PROGRESS)&lt;/span&gt; Build easy custom training scripts to allow users to fine tune models.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Long Term&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span style=&#34;color:red&#34;&gt;(NOT STARTED)&lt;/span&gt; Allow anyone to curate training data for subsequent GPT4All releases using Atlas.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span style=&#34;color:green&#34;&gt;(IN PROGRESS)&lt;/span&gt; Democratize AI.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Reproducibility&lt;/h1&gt; &#xA;&lt;p&gt;Trained LoRa Weights:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gpt4all-lora (four full epochs of training): &lt;a href=&#34;https://huggingface.co/nomic-ai/gpt4all-lora&#34;&gt;https://huggingface.co/nomic-ai/gpt4all-lora&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;gpt4all-lora-epoch-2 (three full epochs of training) &lt;a href=&#34;https://huggingface.co/nomic-ai/gpt4all-lora-epoch-2&#34;&gt;https://huggingface.co/nomic-ai/gpt4all-lora-epoch-2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Raw Data:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/datasets/nomic-ai/gpt4all_prompt_generations&#34;&gt;Training Data Without P3&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Explorer: &lt;a href=&#34;https://atlas.nomic.ai/map/gpt4all_data_clean_without_p3&#34;&gt;https://atlas.nomic.ai/map/gpt4all_data_clean_without_p3&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/datasets/nomic-ai/gpt4all_prompt_generations_with_p3&#34;&gt;Full Dataset with P3&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Explorer: &lt;a href=&#34;https://atlas.nomic.ai/map/gpt4all_data_clean&#34;&gt;https://atlas.nomic.ai/map/gpt4all_data_clean&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We are not distributing a LLaMa 7B checkpoint.&lt;/p&gt; &#xA;&lt;p&gt;You can reproduce our trained model by doing the following:&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;Clone the repo&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;git clone --recurse-submodules https://github.com/nomic-ai/gpt4all.git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;git submodule configure &amp;amp;&amp;amp; git submodule update&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Setup the environment&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -m pip install -r requirements.txt&#xA;&#xA;cd transformers&#xA;pip install -e . &#xA;&#xA;cd ../peft&#xA;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Training&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;accelerate launch --dynamo_backend=inductor --num_processes=8 --num_machines=1 --machine_rank=0 --deepspeed_multinode_launcher standard --mixed_precision=bf16  --use_deepspeed --deepspeed_config_file=configs/deepspeed/ds_config.json train.py --config configs/train/finetune-7b.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Generate&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python generate.py --config configs/generate/generate.yaml --prompt &#34;Write a script to reverse a string in Python&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Need Help?&lt;/h2&gt; &#xA;&lt;p&gt;Join the &lt;a href=&#34;https://discord.gg/kvmy6dQB&#34;&gt; Discord &lt;/a&gt; and ask for help in &lt;code&gt;#gpt4all-help&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Sample Generations&lt;/h1&gt; &#xA;&lt;h3&gt;Provide instructions for the given exercise. Leg Raises&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Leg Raises&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Stand with your feet shoulder-width apart and your knees slightly bent.&lt;/li&gt; &#xA;  &lt;li&gt;Raise your arms straight out in front of you.&lt;/li&gt; &#xA;  &lt;li&gt;Slowly bend your knees and raise your heels off the ground.&lt;/li&gt; &#xA;  &lt;li&gt;Hold this position for a count of 3, then slowly lower your heels back to the ground.&lt;/li&gt; &#xA;  &lt;li&gt;Repeat the exercise 10 times.&lt;/li&gt; &#xA;  &lt;li&gt;Do not let your knees go beyond your toes.&lt;/li&gt; &#xA;  &lt;li&gt;Keep your back straight and your abdominal muscles engaged.&lt;/li&gt; &#xA;  &lt;li&gt;Do not let your hips sag or your back arch.&lt;/li&gt; &#xA;  &lt;li&gt;Keep your arms straight and your elbows locked.&lt;/li&gt; &#xA;  &lt;li&gt;Do not let your head drop or your shoulders rise.&lt;/li&gt; &#xA;  &lt;li&gt;Breathe normally throughout the exercise.&lt;/li&gt; &#xA;  &lt;li&gt;Rest for 30 seconds before repeating the exercise.&lt;/li&gt; &#xA;  &lt;li&gt;Gradually increase the number of repetitions as you become stronger.&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;A color description has been provided. Find the CSS code associated with that color. A light red color with a medium light shade of pink&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The CSS code associated with the color provided is: #FF6347&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Come up with an interesting idea for a new movie plot. Your plot should be described with a title and a summary.&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;The title of your movie plot should be &#34;The Last Stand&#34;. 2. The summary of your movie plot should be: A group of mercenaries are hired to protect a small town from a dangerous criminal who is on the run. However, the town&#39;s sheriff is not willing to let them take over and decides to take matters into his own hands.&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Reverse a string in python.&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;In Python, you can reverse a list or tuple by using the reversed() function on it. Here&#39;s an example of how to use this method with strings:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;my_string = &#34;Hello World&#34; # Define your original string here&#xA;reversed_str = my_string[::-1]   # Use a slice and negative index for reverse order&#xA;print(reversed_str)     # Output will be reversed version of the inputted string.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;List 10 dogs.&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Labrador Retriever&lt;/li&gt; &#xA;  &lt;li&gt;Golden Retriever&lt;/li&gt; &#xA;  &lt;li&gt;Beagle&lt;/li&gt; &#xA;  &lt;li&gt;Poodle&lt;/li&gt; &#xA;  &lt;li&gt;German Shepherd&lt;/li&gt; &#xA;  &lt;li&gt;Bulldog&lt;/li&gt; &#xA;  &lt;li&gt;Rottweiler&lt;/li&gt; &#xA;  &lt;li&gt;Boxer&lt;/li&gt; &#xA;  &lt;li&gt;Shih Tzu&lt;/li&gt; &#xA;  &lt;li&gt;Pug&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Write me a poem about the fall of Julius Ceasar into a ceasar salad in iambic pentameter.&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The fall of Julius Ceasar into a ceasar salad In iambic pentameter, The mighty Roman emperor Fell into a salad of lettuce and croutons, His empire crumbling around him, As he was devoured by the hungry diners. The once mighty emperor Was now just a salad topping, His legacy reduced to a mere garnish, As he was consumed by the masses. The fall of Julius Ceasar into a ceasar salad, In iambic pentameter, Was a tragic end to a great man, Who had once ruled the world with an iron fist. But now, he was just a salad topping, His legacy reduced to a mere garnish, As he was consumed by the masses.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;What is a three word topic describing the following keywords: baseball, football, soccer:&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Sports, athletics, games&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you utilize this reposistory, models or data in a downstream project, please consider citing it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{gpt4all,&#xA;  author = {Yuvanesh Anand and Zach Nussbaum and Brandon Duderstadt and Benjamin Schmidt and Andriy Mulyar},&#xA;  title = {GPT4All: Training an Assistant-style Chatbot with Large Scale Data Distillation from GPT-3.5-Turbo},&#xA;  year = {2023},&#xA;  publisher = {GitHub},&#xA;  journal = {GitHub repository},&#xA;  howpublished = {\url{https://github.com/nomic-ai/gpt4all}},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>