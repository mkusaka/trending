<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-16T01:35:17Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>skypilot-org/skypilot</title>
    <updated>2022-12-16T01:35:17Z</updated>
    <id>tag:github.com,2022-12-16:/skypilot-org/skypilot</id>
    <link href="https://github.com/skypilot-org/skypilot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SkyPilot is a framework for easily running machine learning workloads on any cloud through a unified interface.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/docs/source/images/skypilot-wide-dark-1k.png&#34;&gt; &#xA;  &lt;img alt=&#34;SkyPilot&#34; src=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/docs/source/images/skypilot-wide-light-1k.png&#34; width=&#34;55%&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://skypilot.readthedocs.io/en/latest/&#34;&gt; &lt;img alt=&#34;Documentation&#34; src=&#34;https://readthedocs.org/projects/skypilot/badge/?version=latest&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/skypilot-org/skypilot/releases&#34;&gt; &lt;img alt=&#34;GitHub Release&#34; src=&#34;https://img.shields.io/github/release/skypilot-org/skypilot.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/skypilot-org/shared_invite/zt-1i4pa7lyc-g6Lo4_rqqCFWOSXdvwTs3Q&#34;&gt; &lt;img alt=&#34;Join Slack&#34; src=&#34;https://img.shields.io/badge/SkyPilot-Join%20Slack-blue?logo=slack&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; Run jobs on any cloud, easily and cost effectively &lt;/h3&gt; &#xA;&lt;p&gt;SkyPilot is a framework for easily and cost effectively running ML workloads[^1] on any cloud.&lt;/p&gt; &#xA;&lt;p&gt;SkyPilot abstracts away the cloud infra burden:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Launch jobs &amp;amp; clusters on any cloud (AWS, Azure, GCP)&lt;/li&gt; &#xA; &lt;li&gt;Find scarce resources across zones/regions/clouds&lt;/li&gt; &#xA; &lt;li&gt;Queue jobs &amp;amp; use cloud object stores&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;SkyPilot cuts your cloud costs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://skypilot.readthedocs.io/en/latest/examples/spot-jobs.html&#34;&gt;Managed Spot&lt;/a&gt;: &lt;strong&gt;3x cost savings&lt;/strong&gt; using spot VMs, with auto-recovery from preemptions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://skypilot.readthedocs.io/en/latest/reference/auto-stop.html&#34;&gt;Autostop&lt;/a&gt;: hands-free cleanup of idle clusters&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://skypilot.readthedocs.io/en/latest/reference/benchmark/index.html&#34;&gt;Benchmark&lt;/a&gt;: find best VM types for your jobs&lt;/li&gt; &#xA; &lt;li&gt;Optimizer: &lt;strong&gt;2x cost savings&lt;/strong&gt; by auto-picking best prices across zones/regions/clouds&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;SkyPilot supports your existing GPU, TPU, and CPU workloads, with no code changes.&lt;/p&gt; &#xA;&lt;p&gt;Install with pip (choose your clouds) or &lt;a href=&#34;https://skypilot.readthedocs.io/en/latest/getting-started/installation.html&#34;&gt;from source&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install &#34;skypilot[aws,gcp,azure]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You can find our documentation &lt;a href=&#34;https://skypilot.readthedocs.io/en/latest/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://skypilot.readthedocs.io/en/latest/getting-started/installation.html&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://skypilot.readthedocs.io/en/latest/getting-started/quickstart.html&#34;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://skypilot.readthedocs.io/en/latest/reference/cli.html&#34;&gt;CLI reference&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;SkyPilot in 1 minute&lt;/h2&gt; &#xA;&lt;p&gt;A SkyPilot task specifies: resource requirements, data to be synced, setup commands, and the task commands.&lt;/p&gt; &#xA;&lt;p&gt;Once written in this &lt;a href=&#34;https://skypilot.readthedocs.io/en/latest/reference/yaml-spec.html&#34;&gt;&lt;strong&gt;unified interface&lt;/strong&gt;&lt;/a&gt; (YAML or Python API), the task can be launched on any available cloud. This avoids vendor lock-in, and allows easily moving jobs to a different provider.&lt;/p&gt; &#xA;&lt;p&gt;Paste the following into a file &lt;code&gt;my_task.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;resources:&#xA;  accelerators: V100:1  # 1x NVIDIA V100 GPU&#xA;&#xA;num_nodes: 1  # Number of VMs to launch&#xA;&#xA;# Working directory (optional) containing the project codebase.&#xA;# Its contents are synced to ~/sky_workdir/ on the cluster.&#xA;workdir: ~/torch_examples&#xA;&#xA;# Commands to be run before executing the job.&#xA;# Typical use: pip install -r requirements.txt, git clone, etc.&#xA;setup: |&#xA;  pip install torch torchvision&#xA;&#xA;# Commands to run as a job.&#xA;# Typical use: launch the main program.&#xA;run: |&#xA;  cd mnist&#xA;  python main.py --epochs 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Prepare the workdir by cloning:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/pytorch/examples.git ~/torch_examples&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Launch with &lt;code&gt;sky launch&lt;/code&gt; (note: &lt;a href=&#34;https://skypilot.readthedocs.io/en/latest/reference/quota.html&#34;&gt;access to GPU instances&lt;/a&gt; is needed for this example):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sky launch my_task.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;SkyPilot then performs the heavy-lifting for you, including:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Find the lowest priced VM instance type across different clouds&lt;/li&gt; &#xA; &lt;li&gt;Provision the VM, with auto-failover if the cloud returned capacity errors&lt;/li&gt; &#xA; &lt;li&gt;Sync the local &lt;code&gt;workdir&lt;/code&gt; to the VM&lt;/li&gt; &#xA; &lt;li&gt;Run the task&#39;s &lt;code&gt;setup&lt;/code&gt; commands to prepare the VM for running the task&lt;/li&gt; &#xA; &lt;li&gt;Run the task&#39;s &lt;code&gt;run&lt;/code&gt; commands&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://i.imgur.com/TgamzZ2.gif&#34; alt=&#34;SkyPilot Demo&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://skypilot.readthedocs.io/en/latest/getting-started/quickstart.html&#34;&gt;Quickstart&lt;/a&gt; to get started with SkyPilot.&lt;/p&gt; &#xA;&lt;h2&gt;Learn more&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://skypilot.readthedocs.io/en/latest/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://skypilot.readthedocs.io/en/latest/getting-started/tutorial.html&#34;&gt;Example: HuggingFace&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skypilot-org/skypilot-tutorial&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://skypilot.readthedocs.io/en/latest/reference/yaml-spec.html&#34;&gt;YAML reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Framework examples: &lt;a href=&#34;https://github.com/skypilot-org/skypilot/raw/master/examples/resnet_distributed_torch.yaml&#34;&gt;PyTorch DDP&lt;/a&gt;, &lt;a href=&#34;https://github.com/skypilot-org/skypilot/raw/master/examples/resnet_distributed_tf_app.py&#34;&gt;Distributed&lt;/a&gt; &lt;a href=&#34;https://github.com/skypilot-org/skypilot/raw/master/examples/resnet_app_storage.yaml&#34;&gt;TensorFlow&lt;/a&gt;, &lt;a href=&#34;https://github.com/skypilot-org/skypilot/raw/master/examples/tpu/tpuvm_mnist.yaml&#34;&gt;JAX/Flax on TPU&lt;/a&gt;, &lt;a href=&#34;https://github.com/skypilot-org/skypilot/tree/master/examples/stable_diffusion&#34;&gt;Stable Diffusion&lt;/a&gt;, &lt;a href=&#34;https://github.com/skypilot-org/skypilot/raw/master/examples/detectron2_docker.yaml&#34;&gt;Detectron2&lt;/a&gt;, &lt;a href=&#34;https://github.com/skypilot-org/skypilot/raw/master/examples/huggingface_glue_imdb_grid_search_app.py&#34;&gt;programmatic grid search&lt;/a&gt;, &lt;a href=&#34;https://github.com/skypilot-org/skypilot/raw/master/examples/docker/echo_app.yaml&#34;&gt;Docker&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/examples&#34;&gt;many more&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More information:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@zongheng_yang/skypilot-ml-and-data-science-on-any-cloud-with-massive-cost-savings-244189cc7c0f&#34;&gt;Introductory blog post&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Issues, feature requests, and questions&lt;/h2&gt; &#xA;&lt;p&gt;We are excited to hear your feedback!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For issues and feature requests, please &lt;a href=&#34;https://github.com/skypilot-org/skypilot/issues/new&#34;&gt;open a GitHub issue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For questions, please use &lt;a href=&#34;https://github.com/skypilot-org/skypilot/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For general discussions, join us on the &lt;a href=&#34;https://join.slack.com/t/skypilot-org/shared_invite/zt-1i4pa7lyc-g6Lo4_rqqCFWOSXdvwTs3Q&#34;&gt;SkyPilot Slack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome and value all contributions to the project! Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/skypilot-org/skypilot/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for how to get involved.&lt;/p&gt; &#xA;&lt;!-- Footnote --&gt; &#xA;&lt;p&gt;[^1]: While SkyPilot is currently targeted at machine learning workloads, it supports and has been used for other general batch workloads. We&#39;re excited to hear about your use case and how we can better support your requirements; please join us in &lt;a href=&#34;https://github.com/skypilot-org/skypilot/discussions/1016&#34;&gt;this discussion&lt;/a&gt;!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hyper-neutrino/advent-of-code</title>
    <updated>2022-12-16T01:35:17Z</updated>
    <id>tag:github.com,2022-12-16:/hyper-neutrino/advent-of-code</id>
    <link href="https://github.com/hyper-neutrino/advent-of-code" rel="alternate"></link>
    <summary type="html">&lt;p&gt;My Advent of Code submissions. For 2021 and before, these are the original code I used, without any modifications after-the-fact. As such, they are probably not as efficient or short as they should be, because I want a working solution faster, not a better solution. For 2022 and after, these are the solutions uploaded to my YouTube channel.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;advent-of-code&lt;/h1&gt; &#xA;&lt;p&gt;These are my Advent of Code submissions. They are not necessarily the best or fastest solutions but just the unmodified versions of what I wrote during the contest itself.&lt;/p&gt; &#xA;&lt;p&gt;You can join my discord server, &lt;a href=&#34;https://discord.gg/j9uunTRRJm&#34;&gt;The Particle Collider&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;I upload my solutions and walk-throughs on my YouTube channel: &lt;a href=&#34;https://youtube.com/@hyper-neutrino&#34;&gt;https://youtube.com/@hyper-neutrino&lt;/a&gt;. Feel free to follow me on Twitch too; I might stream in the future! &lt;a href=&#34;https://twitch.tv/HyperNeutrino&#34;&gt;https://twitch.tv/HyperNeutrino&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Methexis-Inc/terminal-copilot</title>
    <updated>2022-12-16T01:35:17Z</updated>
    <id>tag:github.com,2022-12-16:/Methexis-Inc/terminal-copilot</id>
    <link href="https://github.com/Methexis-Inc/terminal-copilot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A smart terminal assistant that helps you find the right command.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/py/terminal-copilot&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/terminal-copilot.svg?sanitize=true&#34; alt=&#34;PyPI version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Terminal-copilot&lt;/h1&gt; &#xA;&lt;p&gt;Are you tired of Googling basic terminal commands every time you forget the syntax?&lt;br&gt; Look no further! terminal-copilot is here to help.&lt;/p&gt; &#xA;&lt;p&gt;With terminal-copilot, you can quickly and easily access commonly used terminal commands right from the command line. Simply type copilot followed by your desired command in natural language and let terminal-copilot do the rest.&lt;/p&gt; &#xA;&lt;p&gt;For example, if you want to find a file ending in .txt, simply type: &lt;code&gt;copilot find a file ending in .txt&lt;/code&gt; terminal-copilot will then display the correct syntax for the command you need: &lt;code&gt;find . -name &#34;*.txt&#34;&lt;/code&gt; With options to execute, copy, or explain the proposed terminal command.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;To use terminal-copilot, you must first install it on your system. The easiest way to do this is using pip: &lt;code&gt;pip install terminal-copilot&lt;/code&gt; Once terminal-copilot is installed, you can access it from the command line by typing copilot followed by your question.&lt;/p&gt; &#xA;&lt;h3&gt;Example Usage&lt;/h3&gt; &#xA;&lt;p&gt;terminal-copilot is designed to be simple and intuitive to use. Simply type copilot followed by your question and terminal-copilot will display the correct syntax for the command you need.&lt;/p&gt; &#xA;&lt;p&gt;Here are some examples of how you can use terminal-copilot:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;copilot list the compute instances in gcloud&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;copilot find all mp3 files in my home directory&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;copilot install the openai package for python&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;copilot clean up my docker images&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;Python 3.7+&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;We welcome contributions to terminal-copilot! If you have an idea for a new feature or have found a bug, please open an issue. If you would like to contribute code, please open a pull request!&lt;/p&gt; &#xA;&lt;p&gt;Thank you for considering contributing to terminal-copilot! Together, we can make it an even better tool for accessing terminal commands.&lt;/p&gt; &#xA;&lt;h3&gt;Local Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repo&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;python -m venv .venv &amp;amp;&amp;amp; source .venv/bin/activate &amp;amp;&amp;amp; pip install -r requirements.txt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;python setup.py install&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Packaging for PyPi&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;python setup.py sdist bdist_wheel&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;twine upload dist/*&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>