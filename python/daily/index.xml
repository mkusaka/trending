<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-01T01:34:01Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>google/langfun</title>
    <updated>2024-10-01T01:34:01Z</updated>
    <id>tag:github.com,2024-10-01:/google/langfun</id>
    <link href="https://github.com/google/langfun" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OO for LLMs&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/google/langfun/main/docs/_static/logo.svg?sanitize=true&#34; width=&#34;520px&#34; alt=&#34;logo&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;Langfun&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/py/langfun&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/langfun.svg?sanitize=true&#34; alt=&#34;PyPI version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/google/langfun&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/google/langfun/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/google/langfun/actions/workflows/ci.yaml/badge.svg?sanitize=true&#34; alt=&#34;pytest&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/langfun/main/#install&#34;&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/google/langfun/main/#hello-langfun&#34;&gt;&lt;strong&gt;Getting started&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://colab.research.google.com/github/google/langfun/blob/main/docs/notebooks/langfun101.ipynb&#34;&gt;&lt;strong&gt;Tutorial&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://discord.gg/U6wPN9R68k&#34;&gt;&lt;strong&gt;Discord community&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Langfun is a &lt;a href=&#34;https://github.com/google/pyglove&#34;&gt;PyGlove&lt;/a&gt; powered library that aims to &lt;em&gt;make language models (LM) fun to work with&lt;/em&gt;. Its central principle is to enable seamless integration between natural language and programming by treating language as functions. Through the introduction of &lt;em&gt;Object-Oriented Prompting&lt;/em&gt;, Langfun empowers users to prompt LLMs using objects and types, offering enhanced control and simplifying agent development.&lt;/p&gt; &#xA;&lt;p&gt;To unlock the magic of Langfun, you can start with &lt;a href=&#34;https://colab.research.google.com/github/google/langfun/blob/main/docs/notebooks/langfun101.ipynb&#34;&gt;Langfun 101&lt;/a&gt;. Notably, Langfun is compatible with popular LLMs such as Gemini, GPT, Claude, all without the need for additional fine-tuning.&lt;/p&gt; &#xA;&lt;h2&gt;Why Langfun?&lt;/h2&gt; &#xA;&lt;p&gt;Langfun is &lt;em&gt;powerful and scalable&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Seamless integration between natural language and computer programs.&lt;/li&gt; &#xA; &lt;li&gt;Modular prompts, which allows a natural blend of texts and modalities;&lt;/li&gt; &#xA; &lt;li&gt;Efficient for both request-based workflows and batch jobs;&lt;/li&gt; &#xA; &lt;li&gt;A powerful eval framework that thrives dimension explosions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Langfun is &lt;em&gt;simple and elegant&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An intuitive programming model, graspable in 5 minutes;&lt;/li&gt; &#xA; &lt;li&gt;Plug-and-play into any Python codebase, making an immediate difference;&lt;/li&gt; &#xA; &lt;li&gt;Comprehensive LLMs under a unified API: Gemini, GPT, Claude, Llama3, and more.&lt;/li&gt; &#xA; &lt;li&gt;Designed for agile developement: offering intellisense, easy debugging, with minimal overhead;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hello, Langfun&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import langfun as lf&#xA;import pyglove as pg&#xA;&#xA;from IPython import display&#xA;&#xA;class Item(pg.Object):&#xA;  name: str&#xA;  color: str&#xA;&#xA;class ImageDescription(pg.Object):&#xA;  items: list[Item]&#xA;&#xA;image = lf.Image.from_uri(&#39;https://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Solar_system.jpg/1646px-Solar_system.jpg&#39;)&#xA;display.display(image)&#xA;&#xA;desc = lf.query(&#xA;    &#39;Describe objects in {{my_image}} from top to bottom.&#39;,&#xA;    ImageDescription,&#xA;    lm=lf.llms.Gpt4o(api_key=&#39;&amp;lt;your-openai-api-key&amp;gt;&#39;),&#xA;    my_image=image,&#xA;)&#xA;print(desc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Output:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Solar_system.jpg/1646px-Solar_system.jpg&#34; width=&#34;520px&#34; alt=&#34;my_image&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ImageDescription(&#xA;  items = [&#xA;    0 : Item(&#xA;      name = &#39;Mercury&#39;,&#xA;      color = &#39;Gray&#39;&#xA;    ),&#xA;    1 : Item(&#xA;      name = &#39;Venus&#39;,&#xA;      color = &#39;Yellow&#39;&#xA;    ),&#xA;    2 : Item(&#xA;      name = &#39;Earth&#39;,&#xA;      color = &#39;Blue and white&#39;&#xA;    ),&#xA;    3 : Item(&#xA;      name = &#39;Moon&#39;,&#xA;      color = &#39;Gray&#39;&#xA;    ),&#xA;    4 : Item(&#xA;      name = &#39;Mars&#39;,&#xA;      color = &#39;Red&#39;&#xA;    ),&#xA;    5 : Item(&#xA;      name = &#39;Jupiter&#39;,&#xA;      color = &#39;Brown and white&#39;&#xA;    ),&#xA;    6 : Item(&#xA;      name = &#39;Saturn&#39;,&#xA;      color = &#39;Yellowish-brown with rings&#39;&#xA;    ),&#xA;    7 : Item(&#xA;      name = &#39;Uranus&#39;,&#xA;      color = &#39;Light blue&#39;&#xA;    ),&#xA;    8 : Item(&#xA;      name = &#39;Neptune&#39;,&#xA;      color = &#39;Dark blue&#39;&#xA;    )&#xA;  ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://colab.research.google.com/github/google/langfun/blob/main/docs/notebooks/langfun101.ipynb&#34;&gt;Langfun 101&lt;/a&gt; for more examples.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Langfun offers a range of features through &lt;a href=&#34;https://packaging.python.org/en/latest/tutorials/installing-packages/#installing-extras&#34;&gt;Extras&lt;/a&gt;, allowing users to install only what they need. The minimal installation of Langfun requires only &lt;a href=&#34;https://github.com/google/pyglove&#34;&gt;PyGlove&lt;/a&gt;, &lt;a href=&#34;https://github.com/pallets/jinja/&#34;&gt;Jinja2&lt;/a&gt;, and &lt;a href=&#34;https://github.com/psf/requests&#34;&gt;requests&lt;/a&gt;. To install Langfun with its minimal dependencies, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install langfun&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a complete installation with all dependencies, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install langfun[all]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install a nightly build, include the &lt;code&gt;--pre&lt;/code&gt; flag, like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install langfun[all] --pre&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to customize your installation, you can select specific features using package names like &lt;code&gt;langfun[X1, X2, ..., Xn]&lt;/code&gt;, where &lt;code&gt;Xi&lt;/code&gt; corresponds to a tag from the list below:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Tag&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;all&lt;/td&gt; &#xA;   &lt;td&gt;All Langfun features.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;llm&lt;/td&gt; &#xA;   &lt;td&gt;All supported LLMs.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;llm-google&lt;/td&gt; &#xA;   &lt;td&gt;All supported Google-powered LLMs.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;llm-google-vertexai&lt;/td&gt; &#xA;   &lt;td&gt;LLMs powered by Google Cloud VertexAI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;llm-google-genai&lt;/td&gt; &#xA;   &lt;td&gt;LLMs powered by Google Generative AI API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;llm-openai&lt;/td&gt; &#xA;   &lt;td&gt;LLMs powered by OpenAI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mime&lt;/td&gt; &#xA;   &lt;td&gt;All MIME supports.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mime-auto&lt;/td&gt; &#xA;   &lt;td&gt;Automatic MIME type detection.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mime-docx&lt;/td&gt; &#xA;   &lt;td&gt;DocX format support.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mime-pil&lt;/td&gt; &#xA;   &lt;td&gt;Image support for PIL.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mime-xlsx&lt;/td&gt; &#xA;   &lt;td&gt;XlsX format support.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ui&lt;/td&gt; &#xA;   &lt;td&gt;UI enhancements&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For example, to install a nightly build that includes Google-powered LLMs, full modality support, and UI enhancements, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install langfun[llm-google,mime,ui] --pre&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Disclaimer: this is not an officially supported Google product.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
</feed>