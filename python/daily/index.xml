<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-01T01:48:56Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>secdev/scapy</title>
    <updated>2023-12-01T01:48:56Z</updated>
    <id>tag:github.com,2023-12-01:/secdev/scapy</id>
    <link href="https://github.com/secdev/scapy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Scapy: the Python-based interactive packet manipulation program &amp; library. Supports Python 2 &amp; Python 3.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://github.com/secdev/scapy/raw/master/doc/scapy/graphics/scapy_logo.png&#34; width=&#34;64&#34; valign=&#34;middle&#34; alt=&#34;Scapy&#34;&gt;&amp;nbsp;&amp;nbsp; Scapy&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/secdev/scapy/actions/workflows/unittests.yml?query=event%3Apush&#34;&gt;&lt;img src=&#34;https://github.com/secdev/scapy/actions/workflows/unittests.yml/badge.svg?branch=master&amp;amp;event=push&#34; alt=&#34;Scapy unit tests&#34;&gt;&lt;/a&gt; &#xA; &lt;!-- ignore_ppi --&gt; &lt;a href=&#34;https://ci.appveyor.com/project/secdev/scapy/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/os03daotfja0wtp7/branch/master?svg=true&#34; alt=&#34;AppVeyor Build status&#34;&gt;&lt;/a&gt; &#xA; &lt;!-- ignore_ppi --&gt; &lt;a href=&#34;https://codecov.io/gh/secdev/scapy&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/secdev/scapy/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov Status&#34;&gt;&lt;/a&gt; &#xA; &lt;!-- ignore_ppi --&gt; &lt;a href=&#34;https://www.codacy.com/app/secdev/scapy&#34;&gt;&lt;img src=&#34;https://api.codacy.com/project/badge/Grade/30ee6772bb264a689a2604f5cdb0437b&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &#xA; &lt;!-- ignore_ppi --&gt; &lt;a href=&#34;https://pypi.python.org/pypi/scapy/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/scapy.svg?sanitize=true&#34; alt=&#34;PyPI Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/secdev/scapy/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPL%20v2-blue.svg?sanitize=true&#34; alt=&#34;License: GPL v2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/secdev/scapy&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/secdev/scapy.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/secdev/scapy&#34;&gt;&lt;/a&gt; &#xA; &lt;!-- ignore_ppi --&gt;&lt;/p&gt; &#xA;&lt;p&gt;Scapy is a powerful Python-based interactive packet manipulation program and library.&lt;/p&gt; &#xA;&lt;p&gt;It is able to forge or decode packets of a wide number of protocols, send them on the wire, capture them, store or read them using pcap files, match requests and replies, and much more. It is designed to allow fast packet prototyping by using default values that work.&lt;/p&gt; &#xA;&lt;p&gt;It can easily handle most classical tasks like scanning, tracerouting, probing, unit tests, attacks or network discovery (it can replace &lt;code&gt;hping&lt;/code&gt;, 85% of &lt;code&gt;nmap&lt;/code&gt;, &lt;code&gt;arpspoof&lt;/code&gt;, &lt;code&gt;arp-sk&lt;/code&gt;, &lt;code&gt;arping&lt;/code&gt;, &lt;code&gt;tcpdump&lt;/code&gt;, &lt;code&gt;wireshark&lt;/code&gt;, &lt;code&gt;p0f&lt;/code&gt;, etc.). It also performs very well at a lot of other specific tasks that most other tools can&#39;t handle, like sending invalid frames, injecting your own 802.11 frames, combining techniques (VLAN hopping+ARP cache poisoning, VoIP decoding on WEP protected channel, ...), etc.&lt;/p&gt; &#xA;&lt;p&gt;Scapy supports Python 2.7 and Python 3 (3.4 to 3.9). It&#39;s intended to be cross platform, and runs on many different platforms (Linux, OSX, *BSD, and Windows).&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Scapy is usable either as a &lt;strong&gt;shell&lt;/strong&gt; or as a &lt;strong&gt;library&lt;/strong&gt;. For further details, please head over to &lt;a href=&#34;https://scapy.readthedocs.io/en/latest/introduction.html&#34;&gt;Getting started with Scapy&lt;/a&gt;, which is part of the documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Shell demo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://secdev.github.io/files/doc/animation-scapy-install.svg?sanitize=true&#34; alt=&#34;Scapy install demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Scapy can easily be used as an interactive shell to interact with the network. The following example shows how to send an ICMP Echo Request message to &lt;code&gt;github.com&lt;/code&gt;, then display the reply source IP address:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;sudo ./run_scapy&#xA;Welcome to Scapy&#xA;&amp;gt;&amp;gt;&amp;gt; p = IP(dst=&#34;github.com&#34;)/ICMP()&#xA;&amp;gt;&amp;gt;&amp;gt; r = sr1(p)&#xA;Begin emission:&#xA;.Finished to send 1 packets.&#xA;*&#xA;Received 2 packets, got 1 answers, remaining 0 packets&#xA;&amp;gt;&amp;gt;&amp;gt; r[IP].src&#xA;&#39;192.30.253.113&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Resources&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://scapy.readthedocs.io/en/latest/&#34;&gt;documentation&lt;/a&gt; contains more advanced use cases, and examples.&lt;/p&gt; &#xA;&lt;p&gt;Other useful resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/secdev/scapy/raw/master/doc/notebooks/Scapy%20in%2015%20minutes.ipynb&#34;&gt;Scapy in 20 minutes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://scapy.readthedocs.io/en/latest/usage.html#interactive-tutorial&#34;&gt;Interactive tutorial&lt;/a&gt; (part of the documentation)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://scapy.readthedocs.io/en/latest/introduction.html#quick-demo&#34;&gt;The quick demo: an interactive session&lt;/a&gt; (some examples may be outdated)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/secdev/scapy/raw/master/doc/notebooks/HTTP_2_Tuto.ipynb&#34;&gt;HTTP/2 notebook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/secdev/scapy/raw/master/doc/notebooks/tls&#34;&gt;TLS notebooks&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://scapy.readthedocs.io/en/latest/installation.html&#34;&gt;Installation&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Scapy works without any external Python modules on Linux and BSD like operating systems. On Windows, you need to install some mandatory dependencies as described in &lt;a href=&#34;http://scapy.readthedocs.io/en/latest/installation.html#windows&#34;&gt;the documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On most systems, using Scapy is as simple as running the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/secdev/scapy&#xA;cd scapy&#xA;./run_scapy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To benefit from all Scapy features, such as plotting, you might want to install Python modules, such as &lt;code&gt;matplotlib&lt;/code&gt; or &lt;code&gt;cryptography&lt;/code&gt;. See the &lt;a href=&#34;http://scapy.readthedocs.io/en/latest/installation.html&#34;&gt;documentation&lt;/a&gt; and follow the instructions to install them.&lt;/p&gt; &#xA;&lt;!-- stop_ppi_description --&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Want to contribute? Great! Please take a few minutes to &lt;a href=&#34;https://raw.githubusercontent.com/secdev/scapy/master/CONTRIBUTING.md&#34;&gt;read this&lt;/a&gt;!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>plenumlab/rce-finder</title>
    <updated>2023-12-01T01:48:56Z</updated>
    <id>tag:github.com,2023-12-01:/plenumlab/rce-finder</id>
    <link href="https://github.com/plenumlab/rce-finder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool to find good RCE&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RCE-finder-extension&lt;/h1&gt; &#xA;&lt;p&gt;A tool to find good RCE From my series: A powerful Burp extension to make bounties rain&lt;/p&gt; &#xA;&lt;h1&gt;Are you sad ?&lt;/h1&gt; &#xA;&lt;h1&gt;Do you have trouble populating you burp dashboard with fancy issues?&lt;/h1&gt; &#xA;&lt;h1&gt;Well ...&lt;/h1&gt; &#xA;&lt;p&gt;Well i got exactly what you need this burpsuite extension powered by a powerful AI engine, find good RCE and report it, all you need is to install it and browse sites like normal unsuspecting users (how cool is that).&lt;/p&gt; &#xA;&lt;p&gt;Download and install&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>roboflow/multimodal-maestro</title>
    <updated>2023-12-01T01:48:56Z</updated>
    <id>tag:github.com,2023-12-01:/roboflow/multimodal-maestro</id>
    <link href="https://github.com/roboflow/multimodal-maestro" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Effective prompting for Large Multimodal Models like GPT-4 Vision or LLaVA. 🔥&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;multimodal-maestro&lt;/h1&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://badge.fury.io/py/maestro&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/maestro.svg?sanitize=true&#34; alt=&#34;version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/roboflow/multimodal-maestro/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/l/maestro&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/py/maestro&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/maestro&#34; alt=&#34;python-version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/spaces/Roboflow/SoM&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue&#34; alt=&#34;Gradio&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://colab.research.google.com/github/roboflow/multimodal-maestro/blob/develop/cookbooks/multimodal_maestro_gpt_4_vision.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;👋 hello&lt;/h2&gt; &#xA;&lt;p&gt;Multimodal-Maestro gives you more control over large multimodal models to get the outputs you want. With more effective prompting tactics, you can get multimodal models to do tasks you didn&#39;t know (or think!) were possible. Curious how it works? Try our HF &lt;a href=&#34;https://huggingface.co/spaces/Roboflow/SoM&#34;&gt;space&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;🚧 The project is still under construction, and the API is prone to change.&lt;/p&gt; &#xA;&lt;h2&gt;💻 install&lt;/h2&gt; &#xA;&lt;p&gt;⚠️ Our package has been renamed to &lt;code&gt;maestro&lt;/code&gt;. Install the package in a &lt;a href=&#34;https://www.python.org/&#34;&gt;&lt;strong&gt;3.11&amp;gt;=Python&amp;gt;=3.8&lt;/strong&gt;&lt;/a&gt; environment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install maestro&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🚀 examples&lt;/h2&gt; &#xA;&lt;h3&gt;GPT-4 Vision&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Find dog.&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; The dog is prominently featured in the center of the image with the label [9].&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;👉 read more&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;load image&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import cv2&#xA;&#xA;image = cv2.imread(&#34;...&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;create and refine marks&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import maestro&#xA;&#xA;generator = maestro.SegmentAnythingMarkGenerator(device=&#39;cuda&#39;)&#xA;marks = generator.generate(image=image)&#xA;marks = maestro.refine_marks(marks=marks)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;visualize marks&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;mark_visualizer = maestro.MarkVisualizer()&#xA;marked_image = mark_visualizer.visualize(image=image, marks=marks)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/roboflow/multimodal-maestro/assets/26109316/92951ed2-65c0-475a-9279-6fd344757092&#34; alt=&#34;image-vs-marked-image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;prompt&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;prompt = &#34;Find dog.&#34;&#xA;&#xA;response = maestro.prompt_image(api_key=api_key, image=marked_image, prompt=prompt)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; &#34;The dog is prominently featured in the center of the image with the label [9].&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;extract related marks&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;masks = maestro.extract_relevant_masks(text=response, detections=refined_marks)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; {&#39;6&#39;: array([&#xA;...     [False, False, False, ..., False, False, False],&#xA;...     [False, False, False, ..., False, False, False],&#xA;...     [False, False, False, ..., False, False, False],&#xA;...     ...,&#xA;...     [ True,  True,  True, ..., False, False, False],&#xA;...     [ True,  True,  True, ..., False, False, False],&#xA;...     [ True,  True,  True, ..., False, False, False]])&#xA;... }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/roboflow/multimodal-maestro/assets/26109316/c04f2b18-2a1d-4535-9582-e5d3ec0a926e&#34; alt=&#34;multimodal-maestro&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🚧 roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Rewriting the &lt;code&gt;maestro&lt;/code&gt; API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Documentation page.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add GroundingDINO prompting strategy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Segment Anything guided marks generation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Non-Max Suppression marks refinement.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; CovVLM demo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Qwen-VL demo.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;💜 acknowledgement&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2310.11441&#34;&gt;Set-of-Mark Prompting Unleashes Extraordinary Visual Grounding in GPT-4V&lt;/a&gt; by Jianwei Yang, Hao Zhang, Feng Li, Xueyan Zou, Chunyuan Li, Jianfeng Gao.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2309.17421&#34;&gt;The Dawn of LMMs: Preliminary Explorations with GPT-4V(ision)&lt;/a&gt; by Zhengyuan Yang, Linjie Li, Kevin Lin, Jianfeng Wang, Chung-Ching Lin, Zicheng Liu, Lijuan Wang&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🦸 contribution&lt;/h2&gt; &#xA;&lt;p&gt;We would love your help in making this repository even better! If you noticed any bug, or if you have any suggestions for improvement, feel free to open an &lt;a href=&#34;https://github.com/roboflow/multimodal-maestro/issues&#34;&gt;issue&lt;/a&gt; or submit a &lt;a href=&#34;https://github.com/roboflow/multimodal-maestro/pulls&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>