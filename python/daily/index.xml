<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-10T01:34:36Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>AiGptCode/Iphone-14-15-IRAN-Anten</title>
    <updated>2024-04-10T01:34:36Z</updated>
    <id>tag:github.com,2024-04-10:/AiGptCode/Iphone-14-15-IRAN-Anten</id>
    <link href="https://github.com/AiGptCode/Iphone-14-15-IRAN-Anten" rel="alternate"></link>
    <summary type="html">&lt;p&gt;آموزش رایگان و دائمی فعال‌سازی آنتن در آیفون ۱۴ و ۱۵ بدون ردگیری و بسته شدن با دو روش مختلف، به همراه سورس کد و فایل ساخت UUID یکتا&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;آموزش رایگان و دائمی فعال‌سازی آنتن در آیفون ۱۴ و ۱۵ بدون ردگیری و بسته شدن با دو روش مختلف، به همراه سورس کد و فایل ساخت UUID یکتا📡.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ibb.co/whDY2tw&#34;&gt;&lt;img src=&#34;https://i.ibb.co/Ld4vsKJ/IMG-5707.jpg&#34; alt=&#34;IMG-5707&#34; border=&#34;0&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;اموزش ساخت پروفایل یکتا&lt;/h2&gt; &#xA;&lt;p&gt;کد ها به صورت template یا پوسته با توجه به همه اوپراتورها گذاشته شده فقط با uuid Generator که با زبان پایتون نوشته شده کدهای همتا جدید بسازید و با قبلی ها عوض کنید و فایل سیو کنید&lt;/p&gt; &#xA;&lt;p&gt;(فایل پایتون به راحتی exe تبدیل کنید)&lt;/p&gt; &#xA;&lt;p&gt;pip install pyinstaller&lt;/p&gt; &#xA;&lt;p&gt;pyinstaller --onefile --windowed uuid-genarator.py&lt;/p&gt; &#xA;&lt;p&gt;در template ها برای UUID این قسمت و جای کد جدید بگذارید&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;key&amp;gt;PayloadType&amp;lt;/key&amp;gt;&#xA;&#x9;&#x9;&amp;lt;string&amp;gt;com.apple.cellular&amp;lt;/string&amp;gt;&#xA;&#x9;&#x9;&amp;lt;key&amp;gt;PayloadUUID&amp;lt;/key&amp;gt;&#xA;&#x9;&#x9;&amp;lt;string&amp;gt;کد جدید&amp;lt;/string&amp;gt;&#xA;&#x9;&#x9;&amp;lt;key&amp;gt;PayloadVersion&amp;lt;/key&amp;gt;&#xA;&#x9;&#x9;&amp;lt;integer&amp;gt;1&amp;lt;/integer&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;علت بسته شدن کانفیگ ها بدلیل استفاده تعداد افراد زیاد از یک UUID هست&lt;/p&gt; &#xA;&lt;p&gt;برای هر گوشی سعی کنید با uuid اختصاصی ساخته شود&lt;/p&gt; &#xA;&lt;p&gt;زمانی که چند دستگاه از یک کد استفاده میکنند شناسایی و بسته میشه&lt;/p&gt; &#xA;&lt;p&gt;هپچنین در کد قابلیت شخصی سازی پروکسی یا ایپی اختصاصی برای ساخت پروفایل و دسترسی اینترنت فراهم شده&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ibb.co/Zf3P4D7&#34;&gt;&lt;img src=&#34;https://i.ibb.co/yND1vj7/IMG-5664.jpg&#34; alt=&#34;IMG-5664&#34; border=&#34;0&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;روش دوم&lt;/h1&gt; &#xA;&lt;h2&gt;مراحل&lt;/h2&gt; &#xA;&lt;h2&gt;** دانلود Apple Configurator یا Imazing profile editor ** :&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/us/app/apple-configurator/id1037126344?mt=12&#34;&gt;Apple Configurator برای macOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apps.microsoft.com/detail/9PHS9QLCQ5S4?hl=en-us&amp;amp;gl=US&#34;&gt;Imazing Profile Editor برای ویندوز&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ایجاد پروفایل جدید&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;اجرای برنامه Apple Configurator&lt;/li&gt; &#xA;   &lt;li&gt;رفتن به منوی &#34;File&#34; و انتخاب &#34;New Profile&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;تنظیمات پروفایل&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;در بخش &#34;Name&#34; نام دلخواه خود را وارد کنید.&lt;/li&gt; &#xA;   &lt;li&gt;در بخش &#34;Identifier&#34;، می‌توانید خالی بگذارید یا از فایل &lt;code&gt;uuid-genarator.py&lt;/code&gt; یک کد یکتا بسازید و وارد کنید.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;تنظیمات APN&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;در منوی سمت چپ به دنبال گزینه &#34;cellular&#34; بگردید.&lt;/li&gt; &#xA;   &lt;li&gt;در بخش &#34;Configured APN Type&#34;، مقدار &#34;mcinet&#34; یا &#34;mtnirancell&#34; را وارد کنید.&lt;/li&gt; &#xA;   &lt;li&gt;در بخش &#34;Data VPN Authentication Type&#34; حتماً مقدار &#34;CHAP&#34; را انتخاب کنید.&lt;/li&gt; &#xA;   &lt;li&gt;در انتهای صفحه، از IP4 استفاده کنید. اگر متوجه مشکل اینترنت شدید، می‌توانید تستی با IP6 انجام دهید.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;تست و ذخیره&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;پیکربندی را ذخیره کنید.&lt;/li&gt; &#xA;   &lt;li&gt;اگر پیکربندی کار نکرد، می‌توانید یک پیکربندی جدید با یک UUID جدید بسازید و تست کنید.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;قبل از آپلود پروفایل‌ها این کارها را انجام دهید:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;ابتدا ریست نتورک را انجام دهید 🔄.&lt;/li&gt; &#xA; &lt;li&gt;فایل کانفیگ ساخته شده با هر روشی به گوشی ارسال کنید و آن را دانلود کنید و سپس بر روی آن کلیک کنید تا باز شود، سپس آن را در فایل ذخیره کنید 💾.&lt;/li&gt; &#xA; &lt;li&gt;سپس به فایل منیجر بروید و روی کانفیگ کلیک کنید تا یک پیام بالا بیاید و اماده نصب شود 📂.&lt;/li&gt; &#xA; &lt;li&gt;سپس وارد تنظیمات بخش VPN و Device Management شوید، پروفایل را انتخاب کرده و نصب کنید 📲.&lt;/li&gt; &#xA; &lt;li&gt;بعد از نصب، به بخش Cellular Data بروید، تیک Data Roaming و VoLTE را بر روی 5G یا LTE بزنید، سپس گوشی را روشن و خاموش کنید تا آنتن برگردد 📶.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;حالا بر روی &lt;a href=&#34;https://www.icloud.com/shortcuts/9b2f6b908fb74058b2b1bf3ed4d08451&#34;&gt;لینک شورتکات&lt;/a&gt; کلیک کنید 📌: 6. از توی شورتکات روی Anten کلیک کرده و نصبش کنید 📱.&lt;/p&gt; &#xA;&lt;p&gt;و اگه انتن قطع شد با فعال کردن Shortcut میتونید مجدد راه اندازی کنید 🔄.&lt;/p&gt; &#xA;&lt;p&gt;تمام شما آنتن دارید 📶.&lt;/p&gt; &#xA;&lt;h2&gt;چند نکته مهم:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;روی شبکه همراه اول تنظیم کنید تا آنتن بهتر بازگردد 📡.&lt;/li&gt; &#xA; &lt;li&gt;از دو سیم کارت همزمان در گوشی استفاده نکنید 🚫.&lt;/li&gt; &#xA; &lt;li&gt;در صورت کار نکردن پروفایل با uuid جدید بسازید و تست کنید همچنین برای دسترسی اینترنت مخصوصا برای ایرانسل میتونید تنظیمات ip رو ip6 بذارید 🌐.&lt;/li&gt; &#xA; &lt;li&gt;حتماً نت را روی 5G تنظیم کنید 📶.&lt;/li&gt; &#xA; &lt;li&gt;اگر از ساعت ۱۲ شب آنتن ندارید، نت را روی 2G تنظیم کنید، زیرا در برخی موارد آنتن به طور اتوماتیک تا صبح ۸ برگردد 🌙.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;همچنین به یاد داشته باشید که هر پروفایل جدیدی که می‌خواهید تست کنید، قبل از آن باید پروفایل قبلی را پاک کنید ❌.&lt;/p&gt; &#xA;&lt;h2&gt;توجه&lt;/h2&gt; &#xA;&lt;p&gt;این راهنما برای تنظیم تلفن همراه برای دسترسی به اینترنت از طریق اتصال 4G مناسب است. به یاد داشته باشید که اطلاعات APN و دیگر تنظیمات ممکن است برای هر شبکه مختلف یا دستگاه متفاوت تغییر کند&lt;/p&gt; &#xA;&lt;p&gt;💞️ Feel free to support my endeavors through donations at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ethereum: 0xc177e861fD9a9F598236C7183e105b9CCec9cb3e&lt;/li&gt; &#xA; &lt;li&gt;Bitcoin: bc1q3230gkphdk5qzsxtj079mz5w35svwrpwq6wh8c&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>budtmo/docker-android</title>
    <updated>2024-04-10T01:34:36Z</updated>
    <id>tag:github.com,2024-04-10:/budtmo/docker-android</id>
    <link href="https://github.com/budtmo/docker-android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Android in docker solution with noVNC supported and video recording&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img id=&#34;header&#34; src=&#34;https://raw.githubusercontent.com/budtmo/docker-android/master/images/logo_docker-android.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://paypal.me/budtmo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/paypal-donate-blue.svg?sanitize=true&#34; alt=&#34;Paypal Donate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://makeapullrequest.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/budtmo/docker-android&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/budtmo/docker-android/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/budtmo/docker-android?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/budtmo/docker-android.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/budtmo/docker-android&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/budtmo/docker-android/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/budtmo/docker-android.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Docker-Android is a docker image built to be used for everything related to Android. It can be used for Application development and testing (native, web and hybrid-app).&lt;/p&gt; &#xA;&lt;h2&gt;Advantages of using this projects&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Emulator with different device profile and skins, such as Samsung Galaxy S6, LG Nexus 4, HTC Nexus One and more.&lt;/li&gt; &#xA; &lt;li&gt;Support vnc to be able to see what happen inside docker container&lt;/li&gt; &#xA; &lt;li&gt;Support log sharing feature where all logs can be accessed from web-UI&lt;/li&gt; &#xA; &lt;li&gt;Ability to control emulator from outside container by using adb connect&lt;/li&gt; &#xA; &lt;li&gt;Integrated with other cloud solutions, e.g. &lt;a href=&#34;https://www.genymotion.com/cloud/&#34;&gt;Genymotion Cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;It can be used to build Android project&lt;/li&gt; &#xA; &lt;li&gt;It can be used to run unit and UI-Test with different test-frameworks, e.g. Appium, Espresso, etc.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;List of Docker-Images&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Android&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;API&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Image with latest release version&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Image with specific release version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;9.0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;28&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;budtmo/docker-android:emulator_9.0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;budtmo/docker-android:emulator_9.0_&amp;lt;release_version&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;10.0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;29&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;budtmo/docker-android:emulator_10.0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;budtmo/docker-android:emulator_10.0_&amp;lt;release_version&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;11.0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;30&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;budtmo/docker-android:emulator_11.0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;budtmo/docker-android:emulator_11.0_&amp;lt;release_version&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;12.0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;32&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;budtmo/docker-android:emulator_12.0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;budtmo/docker-android:emulator_12.0_&amp;lt;release_version&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;13.0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;33&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;budtmo/docker-android:emulator_13.0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;budtmo/docker-android:emulator_13.0_&amp;lt;release_version&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;14.0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;34&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;budtmo/docker-android:emulator_14.0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;budtmo/docker-android:emulator_14.0_&amp;lt;release_version&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;budtmo/docker-android:genymotion&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;budtmo/docker-android:genymotion_&amp;lt;release_version&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;List of Devices&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Device Name&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Phone&lt;/td&gt; &#xA;   &lt;td&gt;Samsung Galaxy S10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Phone&lt;/td&gt; &#xA;   &lt;td&gt;Samsung Galaxy S9&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Phone&lt;/td&gt; &#xA;   &lt;td&gt;Samsung Galaxy S8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Phone&lt;/td&gt; &#xA;   &lt;td&gt;Samsung Galaxy S7 Edge&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Phone&lt;/td&gt; &#xA;   &lt;td&gt;Samsung Galaxy S7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Phone&lt;/td&gt; &#xA;   &lt;td&gt;Samsung Galaxy S6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Phone&lt;/td&gt; &#xA;   &lt;td&gt;Nexus 4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Phone&lt;/td&gt; &#xA;   &lt;td&gt;Nexus 5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Phone&lt;/td&gt; &#xA;   &lt;td&gt;Nexus One&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Phone&lt;/td&gt; &#xA;   &lt;td&gt;Nexus S&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tablet&lt;/td&gt; &#xA;   &lt;td&gt;Nexus 7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Docker is installed on your system.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If you use &lt;em&gt;&lt;strong&gt;Ubuntu OS&lt;/strong&gt;&lt;/em&gt; on your host machine, you can skip this step. For &lt;em&gt;&lt;strong&gt;OSX&lt;/strong&gt;&lt;/em&gt; and &lt;em&gt;&lt;strong&gt;Windows OS&lt;/strong&gt;&lt;/em&gt; user, you need to use Virtual Machine that support Virtualization with Ubuntu OS because the image can be run under &lt;em&gt;&lt;strong&gt;Ubuntu OS only&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Your machine should support virtualization. To check if the virtualization is enabled is:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo apt install cpu-checker&#xA;kvm-ok&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run Docker-Android container&lt;/p&gt; &lt;pre&gt;&lt;code&gt;docker run -d -p 6080:6080 -e EMULATOR_DEVICE=&#34;Samsung Galaxy S10&#34; -e WEB_VNC=true --device /dev/kvm --name android-container budtmo/docker-android:emulator_11.0&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;em&gt;&lt;strong&gt;&lt;a href=&#34;http://localhost:6080&#34;&gt;http://localhost:6080&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt; to see inside running container.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To check the status of the emulator&lt;/p&gt; &lt;pre&gt;&lt;code&gt;docker exec -it android-container cat device_status&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;WSL2 Hardware acceleration (Windows 11 only)&lt;/h2&gt; &#xA;&lt;p&gt;Credit goes to &lt;a href=&#34;https://www.paralint.com/2022/11/find-new-modified-and-unversioned-subversion-files-on-windows&#34;&gt;Guillaume - The Parallel Interface blog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/windows/wsl/wsl-config&#34;&gt;Microsoft - Advanced settings configuration in WSL&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Add yourself to the &lt;code&gt;kvm&lt;/code&gt; usergroup.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo usermod -a -G kvm ${USER}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add necessary flags to &lt;code&gt;/etc/wsl2.conf&lt;/code&gt; to their respective sections.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;[boot]&#xA;command = /bin/bash -c &#39;chown -v root:kvm /dev/kvm &amp;amp;&amp;amp; chmod 660 /dev/kvm&#39;&#xA;&#xA;[wsl2]&#xA;nestedVirtualization=true&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Restart WSL2 via CMD prompt or Powershell&lt;/p&gt; &lt;pre&gt;&lt;code&gt;wsl --shutdown&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;command = /bin/bash -c &#39;chown -v root:kvm /dev/kvm &amp;amp;&amp;amp; chmod 660 /dev/kvm&#39;&lt;/code&gt; sets &lt;code&gt;/dev/kvm&lt;/code&gt; to &lt;code&gt;kvm&lt;/code&gt; usergroup rather than the default &lt;code&gt;root&lt;/code&gt; usergroup on WSL2 startup.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;nestedVirtualization&lt;/code&gt; flag is only available to Windows 11.&lt;/p&gt; &#xA;&lt;h2&gt;Use-Cases&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/budtmo/docker-android/master/documentations/USE_CASE_BUILD_ANDROID_PROJECT.md&#34;&gt;Build Android project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/budtmo/docker-android/master/documentations/USE_CASE_APPIUM.md&#34;&gt;UI-Test with Appium&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/budtmo/docker-android/master/documentations/USE_CASE_CONTROL_EMULATOR.md&#34;&gt;Control Android emulator on host machine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/budtmo/docker-android/master/documentations/USE_CASE_SMS.md&#34;&gt;SMS Simulation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/budtmo/docker-android/master/documentations/USE_CASE_JENKINS.md&#34;&gt;Jenkins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/budtmo/docker-android/master/documentations/USE_CASE_CLOUD.md&#34;&gt;Deploying on cloud (Azure, AWS, GCP)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Custom-Configurations&lt;/h2&gt; &#xA;&lt;p&gt;This &lt;a href=&#34;https://raw.githubusercontent.com/budtmo/docker-android/master/documentations/CUSTOM_CONFIGURATIONS.md&#34;&gt;document&lt;/a&gt; contains information about configurations that can be used to enable some features, e.g. log-sharing, etc.&lt;/p&gt; &#xA;&lt;h2&gt;Genymotion&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img id=&#34;geny&#34; src=&#34;https://raw.githubusercontent.com/budtmo/docker-android/master/images/logo_genymotion_and_dockerandroid.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;For you who do not have ressources to maintain the simulator or to buy machines or need different device profiles, you can give a try by using &lt;a href=&#34;https://cloud.geny.io/&#34;&gt;Genymotion SAAS&lt;/a&gt;. Docker-Android is &lt;a href=&#34;https://www.genymotion.com/blog/partner_tag/docker/&#34;&gt;integrated with Genymotion&lt;/a&gt; on different cloud services, e.g. Genymotion SAAS, AWS, GCP, Alibaba Cloud. Please follow &lt;a href=&#34;https://raw.githubusercontent.com/budtmo/docker-android/master/documentations/THIRD_PARTY_GENYMOTION.md&#34;&gt;this document&lt;/a&gt; for more detail.&lt;/p&gt; &#xA;&lt;h2&gt;Emulator Skins&lt;/h2&gt; &#xA;&lt;p&gt;The Emulator skins are taken from &lt;a href=&#34;https://developer.android.com/studio&#34;&gt;Android Studio IDE&lt;/a&gt; and &lt;a href=&#34;https://developer.samsung.com/&#34;&gt;Samsung Developer Website&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;USERS&lt;/h2&gt; &#xA;&lt;a href=&#34;https://lookerstudio.google.com/s/iGaemHJqQvg&#34;&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/budtmo/docker-android/master/images/docker-android_users.png&#34; alt=&#34;docker-android-users&#34; width=&#34;800&#34; height=&#34;600&#34;&gt; &lt;/p&gt; &lt;/a&gt; &#xA;&lt;h2&gt;PRO VERSION&lt;/h2&gt; &#xA;&lt;p&gt;Due to high requests for help and to be able to actively maintain the projects, the creator has decided to create docker-android-pro. Docker-Android-Pro is a sponsor based project which mean that the docker image of pro-version can be pulled only by &lt;a href=&#34;https://github.com/sponsors/budtmo&#34;&gt;active sponsor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The differences between normal version and pro version are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Feature&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Normal&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Pro&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Comment&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;user-behavior-analytics&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;proxy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Set up company proxy on Android emulator on fly&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;language&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Set up language on Android emulator on fly&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;root-privileged&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Able to run command with security privileged&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;headless-mode&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Save resources by using headless mode&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Selenium 4.x integration&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Running Appium UI-Tests againt one (Selenium Hub) endpoint for Android- and iOS emulator(s) / device(s)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;multiple Android-Simulators&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Yes (soon)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Save resources by having multiple Android-Simulators on one docker-container&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Google Play Store&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Yes (soon)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Video Recording&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Yes (soon)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Helpful for debugging&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;This &lt;a href=&#34;https://raw.githubusercontent.com/budtmo/docker-android/master/documentations/DOCKER-ANDROID-PRO.md&#34;&gt;document&lt;/a&gt; contains detail information about how to use docker-android-pro.&lt;/p&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/budtmo/docker-android/master/LICENSE.md&#34;&gt;License&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>myshell-ai/JetMoE</title>
    <updated>2024-04-10T01:34:36Z</updated>
    <id>tag:github.com,2024-04-10:/myshell-ai/JetMoE</id>
    <link href="https://github.com/myshell-ai/JetMoE" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Reaching LLaMA2 Performance with 0.1M Dollars&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JetMoE: Reaching LLaMA2 Performance with 0.1M Dollars&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;div&gt;&#xA;  &amp;nbsp;&#xA; &lt;/div&gt; &#xA; &lt;img src=&#34;https://github.com/myshell-ai/JetMoE/assets/40556743/202f61a4-f2fa-4983-bcda-027478139e00&#34; width=&#34;500&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/myshell-ai/JetMoE/main/resources/2-performance.png&#34; width=&#34;530&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Key Messages&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;JetMoE-8B is &lt;strong&gt;trained with less than $ 0.1 million&lt;/strong&gt;&lt;sup&gt;1&lt;/sup&gt; &lt;strong&gt;cost but outperforms LLaMA2-7B from Meta AI&lt;/strong&gt;, who has multi-billion-dollar training resources. LLM training can be &lt;strong&gt;much cheaper than people previously thought&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;JetMoE-8B is &lt;strong&gt;fully open-sourced and academia-friendly&lt;/strong&gt; because:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It &lt;strong&gt;only uses public datasets&lt;/strong&gt; for training, and the code is open-sourced. No proprietary resource is needed.&lt;/li&gt; &#xA;   &lt;li&gt;It &lt;strong&gt;can be finetuned with very limited compute budget&lt;/strong&gt; (e.g., consumer-grade GPU) that most labs can afford.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;JetMoE-8B &lt;strong&gt;only has 2.2B active parameters&lt;/strong&gt; during inference, which drastically lowers the computational cost. Compared to a model with similar inference computation, like Gemma-2B, JetMoE-8B achieves constantly better performance.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt; We used a 96×H100 GPU cluster for 2 weeks, which cost ~$0.08 million.&lt;/p&gt; &#xA;&lt;p&gt;Website: &lt;a href=&#34;https://research.myshell.ai/jetmoe&#34;&gt;https://research.myshell.ai/jetmoe&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;HuggingFace: &lt;a href=&#34;https://huggingface.co/jetmoe/jetmoe-8b&#34;&gt;https://huggingface.co/jetmoe/jetmoe-8b&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Online Demo on Lepton AI: &lt;a href=&#34;https://www.lepton.ai/playground/chat?model=jetmoe-8b-chat&#34;&gt;https://www.lepton.ai/playground/chat?model=jetmoe-8b-chat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;The project is contributed by &lt;a href=&#34;https://scholar.google.com.hk/citations?user=qff5rRYAAAAJ&#34;&gt;Yikang Shen&lt;/a&gt;, &lt;a href=&#34;https://zguo0525.github.io/&#34;&gt;Zhen Guo&lt;/a&gt;, &lt;a href=&#34;https://www.tianle.website/#/&#34;&gt;Tianle Cai&lt;/a&gt; and &lt;a href=&#34;https://www.qinzy.tech/&#34;&gt;Zengyi Qin&lt;/a&gt;. For technical inquiries, please contact &lt;a href=&#34;https://scholar.google.com.hk/citations?user=qff5rRYAAAAJ&#34;&gt;Yikang Shen&lt;/a&gt;. For media and collaboration inquiries, please contact &lt;a href=&#34;https://www.qinzy.tech/&#34;&gt;Zengyi Qin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Collaboration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you have great ideas but need more resources (GPU, data, funding, etc.)&lt;/strong&gt;, welcome to contact &lt;strong&gt;MyShell.ai&lt;/strong&gt; via &lt;a href=&#34;https://www.qinzy.tech/&#34;&gt;Zengyi Qin&lt;/a&gt;. &lt;strong&gt;MyShell.ai&lt;/strong&gt; is open to collaborations and are actively supporting high-quality open-source projects.&lt;/p&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;We use the same evaluation methodology as in the&amp;nbsp;Open LLM leaderboard. For MBPP code benchmark, we use the same evaluation methodology as in the LLaMA2 and Deepseek-MoE paper. The results are shown below:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;/th&gt; &#xA;   &lt;th&gt;Activate Params&lt;/th&gt; &#xA;   &lt;th&gt;Training Tokens&lt;/th&gt; &#xA;   &lt;th&gt;Open LLM Leaderboard Avg&lt;/th&gt; &#xA;   &lt;th&gt;ARC&lt;/th&gt; &#xA;   &lt;th&gt;Hellaswag&lt;/th&gt; &#xA;   &lt;th&gt;MMLU&lt;/th&gt; &#xA;   &lt;th&gt;TruthfulQA&lt;/th&gt; &#xA;   &lt;th&gt;WinoGrande&lt;/th&gt; &#xA;   &lt;th&gt;GSM8k&lt;/th&gt; &#xA;   &lt;th&gt;MBPP&lt;/th&gt; &#xA;   &lt;th&gt;HumanEval&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shot&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;25&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Metric&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;acc_norm&lt;/td&gt; &#xA;   &lt;td&gt;acc_norm&lt;/td&gt; &#xA;   &lt;td&gt;acc&lt;/td&gt; &#xA;   &lt;td&gt;mc2&lt;/td&gt; &#xA;   &lt;td&gt;acc&lt;/td&gt; &#xA;   &lt;td&gt;acc&lt;/td&gt; &#xA;   &lt;td&gt;Pass@1&lt;/td&gt; &#xA;   &lt;td&gt;Pass@1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LLaMA2-7B&lt;/td&gt; &#xA;   &lt;td&gt;7B&lt;/td&gt; &#xA;   &lt;td&gt;2T&lt;/td&gt; &#xA;   &lt;td&gt;51.0&lt;/td&gt; &#xA;   &lt;td&gt;53.1&lt;/td&gt; &#xA;   &lt;td&gt;78.6&lt;/td&gt; &#xA;   &lt;td&gt;46.9&lt;/td&gt; &#xA;   &lt;td&gt;38.8&lt;/td&gt; &#xA;   &lt;td&gt;74&lt;/td&gt; &#xA;   &lt;td&gt;14.5&lt;/td&gt; &#xA;   &lt;td&gt;20.8&lt;/td&gt; &#xA;   &lt;td&gt;12.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LLaMA-13B&lt;/td&gt; &#xA;   &lt;td&gt;13B&lt;/td&gt; &#xA;   &lt;td&gt;1T&lt;/td&gt; &#xA;   &lt;td&gt;51.4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;56.2&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;80.9&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;47.7&lt;/td&gt; &#xA;   &lt;td&gt;39.5&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;76.2&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;7.6&lt;/td&gt; &#xA;   &lt;td&gt;22.0&lt;/td&gt; &#xA;   &lt;td&gt;15.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DeepseekMoE-16B&lt;/td&gt; &#xA;   &lt;td&gt;2.8B&lt;/td&gt; &#xA;   &lt;td&gt;2T&lt;/td&gt; &#xA;   &lt;td&gt;51.1&lt;/td&gt; &#xA;   &lt;td&gt;53.2&lt;/td&gt; &#xA;   &lt;td&gt;79.8&lt;/td&gt; &#xA;   &lt;td&gt;46.3&lt;/td&gt; &#xA;   &lt;td&gt;36.1&lt;/td&gt; &#xA;   &lt;td&gt;73.7&lt;/td&gt; &#xA;   &lt;td&gt;17.3&lt;/td&gt; &#xA;   &lt;td&gt;34.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;25.0&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Gemma-2B&lt;/td&gt; &#xA;   &lt;td&gt;2B&lt;/td&gt; &#xA;   &lt;td&gt;2T&lt;/td&gt; &#xA;   &lt;td&gt;46.4&lt;/td&gt; &#xA;   &lt;td&gt;48.4&lt;/td&gt; &#xA;   &lt;td&gt;71.8&lt;/td&gt; &#xA;   &lt;td&gt;41.8&lt;/td&gt; &#xA;   &lt;td&gt;33.1&lt;/td&gt; &#xA;   &lt;td&gt;66.3&lt;/td&gt; &#xA;   &lt;td&gt;16.9&lt;/td&gt; &#xA;   &lt;td&gt;28.0&lt;/td&gt; &#xA;   &lt;td&gt;24.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JetMoE-8B&lt;/td&gt; &#xA;   &lt;td&gt;2.2B&lt;/td&gt; &#xA;   &lt;td&gt;1.25T&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;53.0&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;48.7&lt;/td&gt; &#xA;   &lt;td&gt;80.5&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;49.2&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;41.7&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;70.2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;27.8&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;34.2&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;14.6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;/th&gt; &#xA;   &lt;th&gt;MT-Bench Score&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GPT-4&lt;/td&gt; &#xA;   &lt;td&gt;9.014&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GPT-3.5-turbo&lt;/td&gt; &#xA;   &lt;td&gt;7.995&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Claude-v1&lt;/td&gt; &#xA;   &lt;td&gt;7.923&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JetMoE-8B-chat&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;6.681&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Llama-2-13b-chat&lt;/td&gt; &#xA;   &lt;td&gt;6.650&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Vicuna-13b-v1.3&lt;/td&gt; &#xA;   &lt;td&gt;6.413&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Wizardlm-13b&lt;/td&gt; &#xA;   &lt;td&gt;6.353&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Llama-2-7b-chat&lt;/td&gt; &#xA;   &lt;td&gt;6.269&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;To our surprise, despite the lower training cost and computation, JetMoE-8B performs even better than LLaMA2-7B, LLaMA-13B, and DeepseekMoE-16B. Compared to a model with similar training and inference computation, like Gemma-2B, JetMoE-8B achieves better performance.&lt;/p&gt; &#xA;&lt;h2&gt;Model Usage&lt;/h2&gt; &#xA;&lt;p&gt;To load the models, you need install this package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can load the model with the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from transformers import AutoTokenizer, AutoModelForCausalLM, AutoConfig, AutoModelForSequenceClassification&#xA;from jetmoe import JetMoEForCausalLM, JetMoEConfig, JetMoEForSequenceClassification&#xA;&#xA;AutoConfig.register(&#34;jetmoe&#34;, JetMoEConfig)&#xA;AutoModelForCausalLM.register(JetMoEConfig, JetMoEForCausalLM)&#xA;AutoModelForSequenceClassification.register(JetMoEConfig, JetMoEForSequenceClassification)&#xA;&#xA;tokenizer = AutoTokenizer.from_pretrained(&#39;jetmoe/jetmoe-8b&#39;)&#xA;model = AutoModelForCausalLM.from_pretrained(&#39;jetmoe/jetmoe-8b&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Model Details&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://research.myshell.ai/jetmoe&#34;&gt;https://research.myshell.ai/jetmoe&lt;/a&gt; for model details and training details. We will also release the &lt;strong&gt;technical report&lt;/strong&gt; soon.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;We express our gratitude to &lt;a href=&#34;https://shengdinghu.github.io/&#34;&gt;Shengding Hu&lt;/a&gt; for his valuable advice on the Phase 2 data mixture. We also express our gratitude to &lt;a href=&#34;https://www.exabits.ai/&#34;&gt;Exabits&lt;/a&gt; for their assistance in setting up the GPU clusters.&lt;/p&gt;</summary>
  </entry>
</feed>