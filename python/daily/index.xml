<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-25T01:35:52Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>feast-dev/feast</title>
    <updated>2024-02-25T01:35:52Z</updated>
    <id>tag:github.com,2024-02-25:/feast-dev/feast</id>
    <link href="https://github.com/feast-dev/feast" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Feature Store for Machine Learning&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://feast.dev/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/feast-dev/feast/master/docs/assets/feast_logo.png&#34; width=&#34;550&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/feast-dev/feast/actions/workflows/unit_tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/feast-dev/feast/actions/workflows/unit_tests.yml/badge.svg?branch=master&amp;amp;event=push&#34; alt=&#34;unit-tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/feast-dev/feast/actions/workflows/master_only.yml&#34;&gt;&lt;img src=&#34;https://github.com/feast-dev/feast/actions/workflows/master_only.yml/badge.svg?branch=master&amp;amp;event=push&#34; alt=&#34;integration-tests-and-build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/feast-dev/feast/actions/workflows/java_master_only.yml&#34;&gt;&lt;img src=&#34;https://github.com/feast-dev/feast/actions/workflows/java_master_only.yml/badge.svg?branch=master&amp;amp;event=push&#34; alt=&#34;java-integration-tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/feast-dev/feast/actions/workflows/linter.yml&#34;&gt;&lt;img src=&#34;https://github.com/feast-dev/feast/actions/workflows/linter.yml/badge.svg?branch=master&amp;amp;event=push&#34; alt=&#34;linter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.feast.dev/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-latest-blue.svg?sanitize=true&#34; alt=&#34;Docs Latest&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://rtd.feast.dev/&#34;&gt;&lt;img src=&#34;https://img.shields.io/readthedocs/feast/master?label=Python%20API&#34; alt=&#34;Python API&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/feast-dev/feast/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/feast-dev/feast/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/feast-dev/feast.svg?style=flat&amp;amp;sort=semver&amp;amp;color=blue&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Feast (&lt;strong&gt;Fea&lt;/strong&gt;ture &lt;strong&gt;St&lt;/strong&gt;ore) is an open source feature store for machine learning. Feast is the fastest path to manage existing infrastructure to productionize analytic data for model training and online inference.&lt;/p&gt; &#xA;&lt;p&gt;Feast allows ML platform teams to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Make features consistently available for training and serving&lt;/strong&gt; by managing an &lt;em&gt;offline store&lt;/em&gt; (to process historical data for scale-out batch scoring or model training), a low-latency &lt;em&gt;online store&lt;/em&gt; (to power real-time prediction)&lt;em&gt;,&lt;/em&gt; and a battle-tested &lt;em&gt;feature server&lt;/em&gt; (to serve pre-computed features online).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Avoid data leakage&lt;/strong&gt; by generating point-in-time correct feature sets so data scientists can focus on feature engineering rather than debugging error-prone dataset joining logic. This ensure that future feature values do not leak to models during training.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Decouple ML from data infrastructure&lt;/strong&gt; by providing a single data access layer that abstracts feature storage from feature retrieval, ensuring models remain portable as you move from training models to serving models, from batch models to realtime models, and from one data infra system to another.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://docs.feast.dev/&#34;&gt;documentation&lt;/a&gt; for more information about the project.&lt;/p&gt; &#xA;&lt;h2&gt;üìê Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/feast-dev/feast/master/docs/assets/feast_marchitecture.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The above architecture is the minimal Feast deployment. Want to run the full Feast on Snowflake/GCP/AWS? Click &lt;a href=&#34;https://docs.feast.dev/how-to-guides/feast-snowflake-gcp-aws&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üê£ Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;1. Install Feast&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-commandline&#34;&gt;pip install feast&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Create a feature repository&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-commandline&#34;&gt;feast init my_feature_repo&#xA;cd my_feature_repo/feature_repo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Register your feature definitions and set up your feature store&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-commandline&#34;&gt;feast apply&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4. Explore your data in the web UI (experimental)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/feast-dev/feast/master/ui/sample.png&#34; alt=&#34;Web UI&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-commandline&#34;&gt;feast ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;5. Build a training dataset&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from feast import FeatureStore&#xA;import pandas as pd&#xA;from datetime import datetime&#xA;&#xA;entity_df = pd.DataFrame.from_dict({&#xA;    &#34;driver_id&#34;: [1001, 1002, 1003, 1004],&#xA;    &#34;event_timestamp&#34;: [&#xA;        datetime(2021, 4, 12, 10, 59, 42),&#xA;        datetime(2021, 4, 12, 8,  12, 10),&#xA;        datetime(2021, 4, 12, 16, 40, 26),&#xA;        datetime(2021, 4, 12, 15, 1 , 12)&#xA;    ]&#xA;})&#xA;&#xA;store = FeatureStore(repo_path=&#34;.&#34;)&#xA;&#xA;training_df = store.get_historical_features(&#xA;    entity_df=entity_df,&#xA;    features = [&#xA;        &#39;driver_hourly_stats:conv_rate&#39;,&#xA;        &#39;driver_hourly_stats:acc_rate&#39;,&#xA;        &#39;driver_hourly_stats:avg_daily_trips&#39;&#xA;    ],&#xA;).to_df()&#xA;&#xA;print(training_df.head())&#xA;&#xA;# Train model&#xA;# model = ml.fit(training_df)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-commandline&#34;&gt;            event_timestamp  driver_id  conv_rate  acc_rate  avg_daily_trips&#xA;0 2021-04-12 08:12:10+00:00       1002   0.713465  0.597095              531&#xA;1 2021-04-12 10:59:42+00:00       1001   0.072752  0.044344               11&#xA;2 2021-04-12 15:01:12+00:00       1004   0.658182  0.079150              220&#xA;3 2021-04-12 16:40:26+00:00       1003   0.162092  0.309035              959&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;6. Load feature values into your online store&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-commandline&#34;&gt;CURRENT_TIME=$(date -u +&#34;%Y-%m-%dT%H:%M:%S&#34;)&#xA;feast materialize-incremental $CURRENT_TIME&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-commandline&#34;&gt;Materializing feature view driver_hourly_stats from 2021-04-14 to 2021-04-15 done!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;7. Read online features at low latency&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pprint import pprint&#xA;from feast import FeatureStore&#xA;&#xA;store = FeatureStore(repo_path=&#34;.&#34;)&#xA;&#xA;feature_vector = store.get_online_features(&#xA;    features=[&#xA;        &#39;driver_hourly_stats:conv_rate&#39;,&#xA;        &#39;driver_hourly_stats:acc_rate&#39;,&#xA;        &#39;driver_hourly_stats:avg_daily_trips&#39;&#xA;    ],&#xA;    entity_rows=[{&#34;driver_id&#34;: 1001}]&#xA;).to_dict()&#xA;&#xA;pprint(feature_vector)&#xA;&#xA;# Make prediction&#xA;# model.predict(feature_vector)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;driver_id&#34;: [1001],&#xA;    &#34;driver_hourly_stats__conv_rate&#34;: [0.49274],&#xA;    &#34;driver_hourly_stats__acc_rate&#34;: [0.92743],&#xA;    &#34;driver_hourly_stats__avg_daily_trips&#34;: [72]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üì¶ Functionality and Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;The list below contains the functionality that contributors are planning to develop for Feast.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;We welcome contribution to all items in the roadmap!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Data Sources&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/data-sources/snowflake&#34;&gt;Snowflake source&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/data-sources/redshift&#34;&gt;Redshift source&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/data-sources/bigquery&#34;&gt;BigQuery source&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/data-sources/file&#34;&gt;Parquet file source&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/data-sources/mssql&#34;&gt;Azure Synapse + Azure SQL source (contrib plugin)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/baineng/feast-hive&#34;&gt;Hive (community plugin)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/data-sources/postgres&#34;&gt;Postgres (contrib plugin)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/data-sources/spark&#34;&gt;Spark (contrib plugin)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Kafka / Kinesis sources (via &lt;a href=&#34;https://docs.feast.dev/reference/data-sources/push&#34;&gt;push support into the online store&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Offline Stores&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/offline-stores/snowflake&#34;&gt;Snowflake&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/offline-stores/redshift&#34;&gt;Redshift&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/offline-stores/bigquery&#34;&gt;BigQuery&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/offline-stores/mssql.md&#34;&gt;Azure Synapse + Azure SQL (contrib plugin)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/baineng/feast-hive&#34;&gt;Hive (community plugin)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/offline-stores/postgres&#34;&gt;Postgres (contrib plugin)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/Shopify/feast-trino&#34;&gt;Trino (contrib plugin)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/offline-stores/spark&#34;&gt;Spark (contrib plugin)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/offline-stores/file&#34;&gt;In-memory / Pandas&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/how-to-guides/customizing-feast/adding-a-new-offline-store&#34;&gt;Custom offline store support&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Online Stores&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/online-stores/snowflake&#34;&gt;Snowflake&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/online-stores/dynamodb&#34;&gt;DynamoDB&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/online-stores/redis&#34;&gt;Redis&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/online-stores/datastore&#34;&gt;Datastore&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/online-stores/bigtable&#34;&gt;Bigtable&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/online-stores/sqlite&#34;&gt;SQLite&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/online-stores/dragonfly&#34;&gt;Dragonfly&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/Azure/feast-azure&#34;&gt;Azure Cache for Redis (community plugin)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/online-stores/postgres&#34;&gt;Postgres (contrib plugin)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/online-stores/cassandra&#34;&gt;Cassandra / AstraDB (contrib plugin)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/how-to-guides/customizing-feast/adding-support-for-a-new-online-store&#34;&gt;Custom online store support&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Feature Engineering&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; On-demand Transformations (Alpha release. See &lt;a href=&#34;https://docs.google.com/document/d/1lgfIw0Drc65LpaxbUu49RCeJgMew547meSJttnUqz7c/edit#&#34;&gt;RFC&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Streaming Transformations (Alpha release. See &lt;a href=&#34;https://docs.google.com/document/d/1UzEyETHUaGpn0ap4G82DHluiCj7zEbrQLkJJkKSv4e8/edit&#34;&gt;RFC&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Batch transformation (In progress. See &lt;a href=&#34;https://docs.google.com/document/d/1964OkzuBljifDvkV-0fakp2uaijnVzdwWNGdz7Vz50A/edit&#34;&gt;RFC&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Streaming&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/how-to-guides/customizing-feast/creating-a-custom-provider&#34;&gt;Custom streaming ingestion job support&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/data-sources/push&#34;&gt;Push based streaming data ingestion to online store&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/data-sources/push&#34;&gt;Push based streaming data ingestion to offline store&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Deployments&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; AWS Lambda (Alpha release. See &lt;a href=&#34;https://docs.google.com/document/d/1eZWKWzfBif66LDN32IajpaG-j82LSHCCOzY6R7Ax7MI/edit&#34;&gt;RFC&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Kubernetes (See &lt;a href=&#34;https://docs.feast.dev/how-to-guides/running-feast-in-production&#34;&gt;guide&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Feature Serving&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Python Client&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/feature-servers/python-feature-server&#34;&gt;Python feature server&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/feast-dev/feast/raw/master/infra/charts/feast/README.md&#34;&gt;Java feature server (alpha)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://docs.feast.dev/reference/feature-servers/go-feature-server&#34;&gt;Go feature server (alpha)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Data Quality Management (See &lt;a href=&#34;https://docs.google.com/document/d/110F72d4NTv80p35wDSONxhhPBqWRwbZXG4f9mNEMd98/edit&#34;&gt;RFC&lt;/a&gt;)&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Data profiling and validation (Great Expectations)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Feature Discovery and Governance&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Python SDK for browsing feature registry&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; CLI for browsing feature registry&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Model-centric feature tracking (feature services)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Amundsen integration (see &lt;a href=&#34;https://github.com/amundsen-io/amundsen/raw/main/databuilder/databuilder/extractor/feast_extractor.py&#34;&gt;Feast extractor&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; DataHub integration (see &lt;a href=&#34;https://datahubproject.io/docs/generated/ingestion/sources/feast/&#34;&gt;DataHub Feast docs&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Feast Web UI (Beta release. See &lt;a href=&#34;https://docs.feast.dev/reference/alpha-web-ui&#34;&gt;docs&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üéì Important Resources&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the official documentation at &lt;a href=&#34;https://docs.feast.dev/&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.feast.dev/getting-started/quickstart&#34;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.feast.dev/tutorials/tutorials-overview&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.feast.dev/how-to-guides/feast-snowflake-gcp-aws&#34;&gt;Running Feast with Snowflake/GCP/AWS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/feast-dev/feast/raw/master/CHANGELOG.md&#34;&gt;Change Log&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üëã Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Feast is a community project and is still under active development. Please have a look at our contributing and development guides if you want to contribute to the project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.feast.dev/project/contributing&#34;&gt;Contribution Process for Feast&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.feast.dev/project/development-guide&#34;&gt;Development Guide for Feast&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/feast-dev/feast/master/CONTRIBUTING.md&#34;&gt;Development Guide for the Main Feast Repository&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ú® Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these incredible people:&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/feast-dev/feast/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=feast-dev/feast&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>levihsu/OOTDiffusion</title>
    <updated>2024-02-25T01:35:52Z</updated>
    <id>tag:github.com,2024-02-25:/levihsu/OOTDiffusion</id>
    <link href="https://github.com/levihsu/OOTDiffusion" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official implementation of OOTDiffusion: Outfitting Fusion based Latent Diffusion for Controllable Virtual Try-on&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OOTDiffusion&lt;/h1&gt; &#xA;&lt;p&gt;This repository is the official implementation of OOTDiffusion&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ootd.ibot.cn&#34;&gt;Try our OOTDiffusion&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ü§© Please give me a star if you find it interesting!&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;OOTDiffusion: Outfitting Fusion based Latent Diffusion for Controllable Virtual Try-on&lt;/strong&gt;&lt;br&gt; &lt;a href=&#34;https://scholar.google.com/citations?user=FF7JVLsAAAAJ&amp;amp;hl=zh-CN&#34;&gt;Yuhao Xu&lt;/a&gt;, &lt;a href=&#34;https://github.com/T-Gu&#34;&gt;Tao Gu&lt;/a&gt;, &lt;a href=&#34;https://github.com/ShineChen1024&#34;&gt;Weifeng Chen&lt;/a&gt;, Chengcai Chen&lt;br&gt; Xiao-i Research&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Our paper is coming soon!&lt;/p&gt; &#xA;&lt;p&gt;üî•üî• Our model checkpoints trained on &lt;a href=&#34;https://github.com/shadow2496/VITON-HD&#34;&gt;VITON-HD&lt;/a&gt; (768 * 1024) have been released!&lt;/p&gt; &#xA;&lt;p&gt;Checkpoints trained on &lt;a href=&#34;https://github.com/aimagelab/dress-code&#34;&gt;Dress Code&lt;/a&gt; (768 * 1024) will be released soon. Thanks for your patience ‚ù§&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ü§ó &lt;a href=&#34;https://huggingface.co/levihsu/OOTDiffusion&#34;&gt;Hugging Face Link&lt;/a&gt;&lt;br&gt; We use checkpoints of &lt;a href=&#34;https://github.com/GoGoDuck912/Self-Correction-Human-Parsing&#34;&gt;humanparsing&lt;/a&gt; and &lt;a href=&#34;https://huggingface.co/lllyasviel/ControlNet/tree/main/annotator/ckpts&#34;&gt;openpose&lt;/a&gt; in preprocess. Please refer to their guidance if you encounter relevant environmental issues&lt;br&gt; Please download &lt;a href=&#34;https://huggingface.co/openai/clip-vit-large-patch14&#34;&gt;clip-vit-large-patch14&lt;/a&gt; into &lt;em&gt;&lt;strong&gt;checkpoints&lt;/strong&gt;&lt;/em&gt; folder&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/levihsu/OOTDiffusion/main/images/demo.png&#34; alt=&#34;demo&#34;&gt;&amp;nbsp; &lt;img src=&#34;https://raw.githubusercontent.com/levihsu/OOTDiffusion/main/images/workflow.png&#34; alt=&#34;workflow&#34;&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/levihsu/OOTDiffusion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Create a conda environment and install the required packages&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;conda create -n ootd python==3.10&#xA;conda activate ootd&#xA;pip install torch==2.0.1 torchvision==0.15.2 torchaudio==2.0.2 numpy==1.24.4 scipy==1.10.1 scikit-image==0.21.0 opencv-python==4.7.0.72 pillow==9.4.0 diffusers==0.24.0 transformers==4.36.2 accelerate==0.26.1 matplotlib==3.7.4 tqdm==4.64.1 gradio==4.16.0 config==0.5.1 einops==0.7.0 ninja==1.10.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Inference&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Half-body model&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd OOTDiffusion/run&#xA;python run_ootd.py --model_path &amp;lt;model-image-path&amp;gt; --cloth_path &amp;lt;cloth-image-path&amp;gt; --scale 2.0 --sample 4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Full-body model&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Garment category must be paired: 0 = upperbody; 1 = lowerbody; 2 = dress&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd OOTDiffusion/run&#xA;python run_ootd.py --model_path &amp;lt;model-image-path&amp;gt; --cloth_path &amp;lt;cloth-image-path&amp;gt; --model_type dc --category 2 --scale 2.0 --sample 4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;TODO List&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Paper&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Gradio demo&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Inference code&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Model weights&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Training code&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Azure/PyRIT</title>
    <updated>2024-02-25T01:35:52Z</updated>
    <id>tag:github.com,2024-02-25:/Azure/PyRIT</id>
    <link href="https://github.com/Azure/PyRIT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Python Risk Identification Tool for generative AI (PyRIT) is an open access automation framework to empower security professionals and machine learning engineers to proactively find risks in their generative AI systems.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Python Risk Identification Tool for generative AI (PyRIT)&lt;/h1&gt; &#xA;&lt;p&gt;The Python Risk Identification Tool for generative AI (PyRIT) is an open access automation framework to empower security professionals and ML engineers to red team foundation models and their applications.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;PyRIT is a library developed by the AI Red Team for researchers and engineers to help them assess the robustness of their LLM endpoints against different harm categories such as fabrication/ungrounded content (e.g., hallucination), misuse (e.g., bias), and prohibited content (e.g., harassment).&lt;/p&gt; &#xA;&lt;p&gt;PyRIT automates AI Red Teaming tasks to allow operators to focus on more complicated and time-consuming tasks and can also identify security harms such as misuse (e.g., malware generation, jailbreaking), and privacy harms (e.g., identity theft).‚Äã&lt;/p&gt; &#xA;&lt;p&gt;The goal is to allow researchers to have a baseline of how well their model and entire inference pipeline is doing against different harm categories and to be able to compare that baseline to future iterations of their model. This allows them to have empirical data on how well their model is doing today, and detect any degradation of performance based on future improvements.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, this tool allows researchers to iterate and improve their mitigations against different harms. For example, at Microsoft we are using this tool to iterate on different versions of a product (and its metaprompt) so that we can more effectively protect against prompt injection attacks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Azure/PyRIT/raw/main/assets/pyrit_architecture.png&#34; alt=&#34;PyRIT architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Where can I learn more?&lt;/h2&gt; &#xA;&lt;p&gt;Microsoft Learn has a &lt;a href=&#34;https://learn.microsoft.com/en-us/security/ai-red-team&#34;&gt;dedicated page on AI Red Teaming&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://github.com/Azure/PyRIT/raw/main/doc/README.md&#34;&gt;docs&lt;/a&gt; for more information on how to &lt;a href=&#34;https://github.com/Azure/PyRIT/raw/main/doc/setup/install_pyrit.md&#34;&gt;install PyRIT&lt;/a&gt;, our &lt;a href=&#34;https://github.com/Azure/PyRIT/raw/main/doc/how_to_guide.ipynb&#34;&gt;How to Guide&lt;/a&gt;, and more, as well as our &lt;a href=&#34;https://github.com/Azure/PyRIT/tree/main/doc/demo&#34;&gt;demos&lt;/a&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</summary>
  </entry>
</feed>