<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-06T01:35:52Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Rikorose/DeepFilterNet</title>
    <updated>2024-07-06T01:35:52Z</updated>
    <id>tag:github.com,2024-07-06:/Rikorose/DeepFilterNet</id>
    <link href="https://github.com/Rikorose/DeepFilterNet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Noise supression using deep filtering&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DeepFilterNet&lt;/h1&gt; &#xA;&lt;p&gt;A Low Complexity Speech Enhancement Framework for Full-Band Audio (48kHz) using on Deep Filtering.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16517898/225623209-a54fea75-ca00-404c-a394-c91d2d1146d2.svg?sanitize=true&#34; alt=&#34;deepfilternet3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For PipeWire integration as a virtual noise suppression microphone look &lt;a href=&#34;https://github.com/Rikorose/DeepFilterNet/raw/main/ladspa/README.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Demo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Rikorose/DeepFilterNet/assets/16517898/79679fd7-de73-4c22-948c-891927c7d2ca&#34;&gt;https://github.com/Rikorose/DeepFilterNet/assets/16517898/79679fd7-de73-4c22-948c-891927c7d2ca&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run the demo (linux only) use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo +nightly run -p df-demo --features ui --bin df-demo --release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;News&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;New DeepFilterNet Demo: &lt;em&gt;DeepFilterNet: Perceptually Motivated Real-Time Speech Enhancement&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Paper: &lt;a href=&#34;https://arxiv.org/abs/2305.08227&#34;&gt;https://arxiv.org/abs/2305.08227&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Video: &lt;a href=&#34;https://youtu.be/EO7n96YwnyE&#34;&gt;https://youtu.be/EO7n96YwnyE&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;New Multi-Frame Filtering Paper: &lt;em&gt;Deep Multi-Frame Filtering for Hearing Aids&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Paper: &lt;a href=&#34;https://arxiv.org/abs/2305.08225&#34;&gt;https://arxiv.org/abs/2305.08225&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Real-time version and a LADSPA plugin&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Rikorose/DeepFilterNet/main/#deep-filter&#34;&gt;Pre-compiled binary&lt;/a&gt;, no python dependencies. Usage: &lt;code&gt;deep-filter audio-file.wav&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Rikorose/DeepFilterNet/main/ladspa/&#34;&gt;LADSPA plugin&lt;/a&gt; with pipewire filter-chain integration for real-time noise reduction on your mic.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DeepFilterNet2 Paper: &lt;em&gt;DeepFilterNet2: Towards Real-Time Speech Enhancement on Embedded Devices for Full-Band Audio&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Paper: &lt;a href=&#34;https://arxiv.org/abs/2205.05474&#34;&gt;https://arxiv.org/abs/2205.05474&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Samples: &lt;a href=&#34;https://rikorose.github.io/DeepFilterNet2-Samples/&#34;&gt;https://rikorose.github.io/DeepFilterNet2-Samples/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Demo: &lt;a href=&#34;https://huggingface.co/spaces/hshr/DeepFilterNet2&#34;&gt;https://huggingface.co/spaces/hshr/DeepFilterNet2&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Original DeepFilterNet Paper: &lt;em&gt;DeepFilterNet: A Low Complexity Speech Enhancement Framework for Full-Band Audio based on Deep Filtering&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Paper: &lt;a href=&#34;https://arxiv.org/abs/2110.05588&#34;&gt;https://arxiv.org/abs/2110.05588&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Samples: &lt;a href=&#34;https://rikorose.github.io/DeepFilterNet-Samples/&#34;&gt;https://rikorose.github.io/DeepFilterNet-Samples/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Demo: &lt;a href=&#34;https://huggingface.co/spaces/hshr/DeepFilterNet&#34;&gt;https://huggingface.co/spaces/hshr/DeepFilterNet&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Video Lecture: &lt;a href=&#34;https://youtu.be/it90gBqkY6k&#34;&gt;https://youtu.be/it90gBqkY6k&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;deep-filter&lt;/h3&gt; &#xA;&lt;p&gt;Download a pre-compiled deep-filter binary from the &lt;a href=&#34;https://github.com/Rikorose/DeepFilterNet/releases/&#34;&gt;release page&lt;/a&gt;. You can use &lt;code&gt;deep-filter&lt;/code&gt; to suppress noise in noisy .wav audio files. Currently, only wav files with a sampling rate of 48kHz are supported.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;USAGE:&#xA;    deep-filter [OPTIONS] [FILES]...&#xA;&#xA;ARGS:&#xA;    &amp;lt;FILES&amp;gt;...&#xA;&#xA;OPTIONS:&#xA;    -D, --compensate-delay&#xA;            Compensate delay of STFT and model lookahead&#xA;    -h, --help&#xA;            Print help information&#xA;    -m, --model &amp;lt;MODEL&amp;gt;&#xA;            Path to model tar.gz. Defaults to DeepFilterNet2.&#xA;    -o, --out-dir &amp;lt;OUT_DIR&amp;gt;&#xA;            [default: out]&#xA;    --pf&#xA;            Enable postfilter&#xA;    -v, --verbose&#xA;            Logging verbosity&#xA;    -V, --version&#xA;            Print version information&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use the pytorch backend e.g. for GPU processing, see further below for the Python usage.&lt;/p&gt; &#xA;&lt;h3&gt;DeepFilterNet Framework&lt;/h3&gt; &#xA;&lt;p&gt;This framework supports Linux, MacOS and Windows. Training is only tested under Linux. The framework is structured as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;libDF&lt;/code&gt; contains Rust code used for data loading and augmentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DeepFilterNet&lt;/code&gt; contains DeepFilterNet code training, evaluation and visualization as well as pretrained model weights.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pyDF&lt;/code&gt; contains a Python wrapper of libDF STFT/ISTFT processing loop.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pyDF-data&lt;/code&gt; contains a Python wrapper of libDF dataset functionality and provides a pytorch data loader.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ladspa&lt;/code&gt; contains a LADSPA plugin for real-time noise suppression.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;models&lt;/code&gt; contains pretrained for usage in DeepFilterNet (Python) or libDF/deep-filter (Rust)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;DeepFilterNet Python: PyPI&lt;/h3&gt; &#xA;&lt;p&gt;Install the DeepFilterNet Python wheel via pip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install cpu/cuda pytorch (&amp;gt;=1.9) dependency from pytorch.org, e.g.:&#xA;pip install torch torchaudio -f https://download.pytorch.org/whl/cpu/torch_stable.html&#xA;# Install DeepFilterNet&#xA;pip install deepfilternet&#xA;# Or install DeepFilterNet including data loading functionality for training (Linux only)&#xA;pip install deepfilternet[train]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To enhance noisy audio files using DeepFilterNet run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Specify an output directory with --output-dir [OUTPUT_DIR]&#xA;deepFilter path/to/noisy_audio.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual Installation&lt;/h3&gt; &#xA;&lt;p&gt;Install cargo via &lt;a href=&#34;https://rustup.rs/&#34;&gt;rustup&lt;/a&gt;. Usage of a &lt;code&gt;conda&lt;/code&gt; or &lt;code&gt;virtualenv&lt;/code&gt; recommended. Please read the comments and only execute the commands that you need.&lt;/p&gt; &#xA;&lt;p&gt;Installation of python dependencies and libDF:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd path/to/DeepFilterNet/  # cd into repository&#xA;# Recommended: Install or activate a python env&#xA;# Mandatory: Install cpu/cuda pytorch (&amp;gt;=1.8) dependency from pytorch.org, e.g.:&#xA;pip install torch torchaudio -f https://download.pytorch.org/whl/cpu/torch_stable.html&#xA;# Install build dependencies used to compile libdf and DeepFilterNet python wheels&#xA;pip install maturin poetry&#xA;&#xA;#  Install remaining DeepFilterNet python dependencies&#xA;# *Option A:* Install DeepFilterNet python wheel globally within your environment. Do this if you want use&#xA;# this repos as is, and don&#39;t want to develop within this repository.&#xA;poetry -C DeepFilterNet install -E train -E eval&#xA;# *Option B:* If you want to develop within this repo, install only dependencies and work with the repository version&#xA;poetry -C DeepFilterNet install -E train -E eval --no-root&#xA;export PYTHONPATH=$PWD/DeepFilterNet # And set the python path correctly&#xA;&#xA;# Build and install libdf python package required for enhance.py&#xA;maturin develop --release -m pyDF/Cargo.toml&#xA;# *Optional*: Install libdfdata python package with dataset and dataloading functionality for training&#xA;# Required build dependency: HDF5 headers (e.g. ubuntu: libhdf5-dev)&#xA;maturin develop --release -m pyDF-data/Cargo.toml&#xA;# If you have troubles with hdf5 you may try to build and link hdf5 statically:&#xA;maturin develop --release --features hdf5-static -m pyDF-data/Cargo.toml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use DeepFilterNet from command line&lt;/h3&gt; &#xA;&lt;p&gt;To enhance noisy audio files using DeepFilterNet run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ python DeepFilterNet/df/enhance.py --help&#xA;usage: enhance.py [-h] [--model-base-dir MODEL_BASE_DIR] [--pf] [--output-dir OUTPUT_DIR] [--log-level LOG_LEVEL] [--compensate-delay]&#xA;                  noisy_audio_files [noisy_audio_files ...]&#xA;&#xA;positional arguments:&#xA;  noisy_audio_files     List of noise files to mix with the clean speech file.&#xA;&#xA;optional arguments:&#xA;  -h, --help            show this help message and exit&#xA;  --model-base-dir MODEL_BASE_DIR, -m MODEL_BASE_DIR&#xA;                        Model directory containing checkpoints and config.&#xA;                        To load a pretrained model, you may just provide the model name, e.g. `DeepFilterNet`.&#xA;                        By default, the pretrained DeepFilterNet2 model is loaded.&#xA;  --pf                  Post-filter that slightly over-attenuates very noisy sections.&#xA;  --output-dir OUTPUT_DIR, -o OUTPUT_DIR&#xA;                        Directory in which the enhanced audio files will be stored.&#xA;  --log-level LOG_LEVEL&#xA;                        Logger verbosity. Can be one of (debug, info, error, none)&#xA;  --compensate-delay, -D&#xA;                        Add some paddig to compensate the delay introduced by the real-time STFT/ISTFT implementation.&#xA;&#xA;# Enhance audio with original DeepFilterNet&#xA;python DeepFilterNet/df/enhance.py -m DeepFilterNet path/to/noisy_audio.wav&#xA;&#xA;# Enhance audio with DeepFilterNet2&#xA;python DeepFilterNet/df/enhance.py -m DeepFilterNet2 path/to/noisy_audio.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use DeepFilterNet within your Python script&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;from df import enhance, init_df&#xA;&#xA;model, df_state, _ = init_df()  # Load default model&#xA;enhanced_audio = enhance(model, df_state, noisy_audio)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/Rikorose/DeepFilterNet/raw/main/scripts/external_usage.py&#34;&gt;here&lt;/a&gt; for a full example.&lt;/p&gt; &#xA;&lt;h3&gt;Training&lt;/h3&gt; &#xA;&lt;p&gt;The entry point is &lt;code&gt;DeepFilterNet/df/train.py&lt;/code&gt;. It expects a data directory containing HDF5 dataset as well as a dataset configuration json file.&lt;/p&gt; &#xA;&lt;p&gt;So, you first need to create your datasets in HDF5 format. Each dataset typically only holds training, validation, or test set of noise, speech or RIRs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;# Install additional dependencies for dataset creation&#xA;pip install h5py librosa soundfile&#xA;# Go to DeepFilterNet python package&#xA;cd path/to/DeepFilterNet/DeepFilterNet&#xA;# Prepare text file (e.g. called training_set.txt) containing paths to .wav files&#xA;#&#xA;# usage: prepare_data.py [-h] [--num_workers NUM_WORKERS] [--max_freq MAX_FREQ] [--sr SR] [--dtype DTYPE]&#xA;#                        [--codec CODEC] [--mono] [--compression COMPRESSION]&#xA;#                        type audio_files hdf5_db&#xA;#&#xA;# where:&#xA;#   type: One of `speech`, `noise`, `rir`&#xA;#   audio_files: Text file containing paths to audio files to include in the dataset&#xA;#   hdf5_db: Output HDF5 dataset.&#xA;python df/scripts/prepare_data.py --sr 48000 speech training_set.txt TRAIN_SET_SPEECH.hdf5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All datasets should be made available in one dataset folder for the train script.&lt;/p&gt; &#xA;&lt;p&gt;The dataset configuration file should contain 3 entries: &#34;train&#34;, &#34;valid&#34;, &#34;test&#34;. Each of those contains a list of datasets (e.g. a speech, noise and a RIR dataset). You can use multiple speech or noise dataset. Optionally, a sampling factor may be specified that can be used to over/under-sample the dataset. Say, you have a specific dataset with transient noises and want to increase the amount of non-stationary noises by oversampling. In most cases you want to set this factor to 1.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Dataset config example:&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;&lt;code&gt;dataset.cfg&lt;/code&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;train&#34;: [&#xA;    [&#xA;      &#34;TRAIN_SET_SPEECH.hdf5&#34;,&#xA;      1.0&#xA;    ],&#xA;    [&#xA;      &#34;TRAIN_SET_NOISE.hdf5&#34;,&#xA;      1.0&#xA;    ],&#xA;    [&#xA;      &#34;TRAIN_SET_RIR.hdf5&#34;,&#xA;      1.0&#xA;    ]&#xA;  ],&#xA;  &#34;valid&#34;: [&#xA;    [&#xA;      &#34;VALID_SET_SPEECH.hdf5&#34;,&#xA;      1.0&#xA;    ],&#xA;    [&#xA;      &#34;VALID_SET_NOISE.hdf5&#34;,&#xA;      1.0&#xA;    ],&#xA;    [&#xA;      &#34;VALID_SET_RIR.hdf5&#34;,&#xA;      1.0&#xA;    ]&#xA;  ],&#xA;  &#34;test&#34;: [&#xA;    [&#xA;      &#34;TEST_SET_SPEECH.hdf5&#34;,&#xA;      1.0&#xA;    ],&#xA;    [&#xA;      &#34;TEST_SET_NOISE.hdf5&#34;,&#xA;      1.0&#xA;    ],&#xA;    [&#xA;      &#34;TEST_SET_RIR.hdf5&#34;,&#xA;      1.0&#xA;    ]&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Finally, start the training script. The training script may create a model &lt;code&gt;base_dir&lt;/code&gt; if not existing used for logging, some audio samples, model checkpoints, and config. If no config file is found, it will create a default config. See &lt;a href=&#34;https://github.com/Rikorose/DeepFilterNet/raw/main/DeepFilterNet/pretrained_models/DeepFilterNet/config.ini&#34;&gt;DeepFilterNet/pretrained_models/DeepFilterNet&lt;/a&gt; for a config file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;# usage: train.py [-h] [--debug] data_config_file data_dir base_dir&#xA;python df/train.py path/to/dataset.cfg path/to/data_dir/ path/to/base_dir/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Citation Guide&lt;/h2&gt; &#xA;&lt;p&gt;To reproduce any metrics, we recomend to use the python implementation via &lt;code&gt;pip install deepfilternet&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you use this framework, please cite: &lt;em&gt;DeepFilterNet: A Low Complexity Speech Enhancement Framework for Full-Band Audio based on Deep Filtering&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{schroeter2022deepfilternet,&#xA;  title={{DeepFilterNet}: A Low Complexity Speech Enhancement Framework for Full-Band Audio based on Deep Filtering}, &#xA;  author = {Schröter, Hendrik and Escalante-B., Alberto N. and Rosenkranz, Tobias and Maier, Andreas},&#xA;  booktitle={ICASSP 2022 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP)},&#xA;  year={2022},&#xA;  organization={IEEE}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use the DeepFilterNet2 model, please cite: &lt;em&gt;DeepFilterNet2: Towards Real-Time Speech Enhancement on Embedded Devices for Full-Band Audio&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{schroeter2022deepfilternet2,&#xA;  title = {{DeepFilterNet2}: Towards Real-Time Speech Enhancement on Embedded Devices for Full-Band Audio},&#xA;  author = {Schröter, Hendrik and Escalante-B., Alberto N. and Rosenkranz, Tobias and Maier, Andreas},&#xA;  booktitle={17th International Workshop on Acoustic Signal Enhancement (IWAENC 2022)},&#xA;  year = {2022},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use the DeepFilterNet3 model, please cite: &lt;em&gt;DeepFilterNet: Perceptually Motivated Real-Time Speech Enhancement&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{schroeter2023deepfilternet3,&#xA;  title = {{DeepFilterNet}: Perceptually Motivated Real-Time Speech Enhancement},&#xA;  author = {Schröter, Hendrik and Rosenkranz, Tobias and Escalante-B., Alberto N. and Maier, Andreas},&#xA;  booktitle={INTERSPEECH},&#xA;  year = {2023},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use the multi-frame beamforming algorithms. please cite &lt;em&gt;Deep Multi-Frame Filtering for Hearing Aids&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{schroeter2023deep_mf,&#xA;  title = {Deep Multi-Frame Filtering for Hearing Aids},&#xA;  author = {Schröter, Hendrik and Rosenkranz, Tobias and Escalante-B., Alberto N. and Maier, Andreas},&#xA;  booktitle={INTERSPEECH},&#xA;  year = {2023},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;DeepFilterNet is free and open source! All code in this repository is dual-licensed under either:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MIT License (&lt;a href=&#34;https://raw.githubusercontent.com/Rikorose/DeepFilterNet/main/LICENSE-MIT&#34;&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Apache License, Version 2.0 (&lt;a href=&#34;https://raw.githubusercontent.com/Rikorose/DeepFilterNet/main/LICENSE-APACHE&#34;&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;at your option. This means you can select the license you prefer!&lt;/p&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>smicallef/spiderfoot</title>
    <updated>2024-07-06T01:35:52Z</updated>
    <id>tag:github.com,2024-07-06:/smicallef/spiderfoot</id>
    <link href="https://github.com/smicallef/spiderfoot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SpiderFoot automates OSINT for threat intelligence and mapping your attack surface.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://www.spiderfoot.net/r.php?u=aHR0cHM6Ly93d3cuc3BpZGVyZm9vdC5uZXQv&amp;amp;s=os_gh&#34;&gt;&lt;img src=&#34;https://www.spiderfoot.net/wp-content/themes/spiderfoot/img/spiderfoot-wide.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.python.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.7+-green&#34; alt=&#34;Python Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/smicallef/spiderfoot/releases/tag/v4.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/version-4.0-blue.svg?sanitize=true&#34; alt=&#34;Stable Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/smicallef/spiderfoot/actions?query=workflow%3A%22Tests%22&#34;&gt;&lt;img src=&#34;https://github.com/smicallef/spiderfoot/workflows/Tests/badge.svg?sanitize=true&#34; alt=&#34;CI status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/smicallef/spiderfoot/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/smicallef/spiderfoot&#34; alt=&#34;Last Commit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/smicallef/spiderfoot&#34;&gt;&lt;img src=&#34;https://codecov.io/github/smicallef/spiderfoot/coverage.svg?sanitize=true&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/spiderfoot&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/spiderfoot?label=follow&amp;amp;style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/vyvztrG&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/770524432464216074&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;SpiderFoot&lt;/strong&gt; is an open source intelligence (OSINT) automation tool. It integrates with just about every data source available and utilises a range of methods for data analysis, making that data easy to navigate.&lt;/p&gt; &#xA;&lt;p&gt;SpiderFoot has an embedded web-server for providing a clean and intuitive web-based interface but can also be used completely via the command-line. It&#39;s written in &lt;strong&gt;Python 3&lt;/strong&gt; and &lt;strong&gt;MIT-licensed&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://www.spiderfoot.net/wp-content/uploads/2022/04/opensource-screenshot-v4.png&#34;&gt; &#xA;&lt;h3&gt;FEATURES&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Web based UI or CLI&lt;/li&gt; &#xA; &lt;li&gt;Over 200 modules (see below)&lt;/li&gt; &#xA; &lt;li&gt;Python 3.7+&lt;/li&gt; &#xA; &lt;li&gt;YAML-configurable &lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/correlations/README.md&#34;&gt;correlation engine&lt;/a&gt; with &lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/correlations&#34;&gt;37 pre-defined rules&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CSV/JSON/GEXF export&lt;/li&gt; &#xA; &lt;li&gt;API key export/import&lt;/li&gt; &#xA; &lt;li&gt;SQLite back-end for custom querying&lt;/li&gt; &#xA; &lt;li&gt;Highly configurable&lt;/li&gt; &#xA; &lt;li&gt;Fully documented&lt;/li&gt; &#xA; &lt;li&gt;Visualisations&lt;/li&gt; &#xA; &lt;li&gt;TOR integration for dark web searching&lt;/li&gt; &#xA; &lt;li&gt;Dockerfile for Docker-based deployments&lt;/li&gt; &#xA; &lt;li&gt;Can call other tools like DNSTwist, Whatweb, Nmap and CMSeeK&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@micallst/lessons-learned-from-my-10-year-open-source-project-4a4c8c2b4f64&#34;&gt;Actively developed since 2012!&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;WANT MORE?&lt;/h3&gt; &#xA;&lt;p&gt;Need more from SpiderFoot? Check out &lt;a href=&#34;https://www.spiderfoot.net/hx&#34;&gt;SpiderFoot HX&lt;/a&gt; for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;100% Cloud-based and managed for you&lt;/li&gt; &#xA; &lt;li&gt;Attack Surface Monitoring with change notifications by email, REST and Slack&lt;/li&gt; &#xA; &lt;li&gt;Multiple targets per scan&lt;/li&gt; &#xA; &lt;li&gt;Multi-user collaboration&lt;/li&gt; &#xA; &lt;li&gt;Authenticated and 2FA&lt;/li&gt; &#xA; &lt;li&gt;Investigations&lt;/li&gt; &#xA; &lt;li&gt;Customer support&lt;/li&gt; &#xA; &lt;li&gt;Third party tools pre-installed &amp;amp; configured&lt;/li&gt; &#xA; &lt;li&gt;Drive it with a fully RESTful API&lt;/li&gt; &#xA; &lt;li&gt;TOR integration built-in&lt;/li&gt; &#xA; &lt;li&gt;Screenshotting&lt;/li&gt; &#xA; &lt;li&gt;Bring your own Python SpiderFoot modules&lt;/li&gt; &#xA; &lt;li&gt;Feed scan data to Splunk, ElasticSearch and REST endpoints&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the full set of differences between SpiderFoot HX and the open source version &lt;a href=&#34;https://www.spiderfoot.net/open-source-vs-hx/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;USES&lt;/h3&gt; &#xA;&lt;p&gt;SpiderFoot can be used offensively (e.g. in a red team exercise or penetration test) for reconnaissance of your target or defensively to gather information about what you or your organisation might have exposed over the Internet.&lt;/p&gt; &#xA;&lt;p&gt;You can target the following entities in a SpiderFoot scan:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;IP address&lt;/li&gt; &#xA; &lt;li&gt;Domain/sub-domain name&lt;/li&gt; &#xA; &lt;li&gt;Hostname&lt;/li&gt; &#xA; &lt;li&gt;Network subnet (CIDR)&lt;/li&gt; &#xA; &lt;li&gt;ASN&lt;/li&gt; &#xA; &lt;li&gt;E-mail address&lt;/li&gt; &#xA; &lt;li&gt;Phone number&lt;/li&gt; &#xA; &lt;li&gt;Username&lt;/li&gt; &#xA; &lt;li&gt;Person&#39;s name&lt;/li&gt; &#xA; &lt;li&gt;Bitcoin address&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;SpiderFoot&#39;s 200+ modules feed each other in a publisher/subscriber model to ensure maximum data extraction to do things like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://asciinema.org/a/295912&#34;&gt;Host/sub-domain/TLD enumeration/extraction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://asciinema.org/a/295947&#34;&gt;Email address, phone number and human name extraction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://asciinema.org/a/295957&#34;&gt;Bitcoin and Ethereum address extraction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://asciinema.org/a/344377&#34;&gt;Check for susceptibility to sub-domain hijacking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DNS zone transfers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://asciinema.org/a/295949&#34;&gt;Threat intelligence and Blacklist queries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;API integration with &lt;a href=&#34;https://asciinema.org/a/127601&#34;&gt;SHODAN&lt;/a&gt;, &lt;a href=&#34;https://asciinema.org/a/128731&#34;&gt;HaveIBeenPwned&lt;/a&gt;, &lt;a href=&#34;https://asciinema.org/a/295943&#34;&gt;GreyNoise&lt;/a&gt;, AlienVault, SecurityTrails, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://asciinema.org/a/295923&#34;&gt;Social media account enumeration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://asciinema.org/a/295941&#34;&gt;S3/Azure/Digitalocean bucket enumeration/scraping&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;IP geo-location&lt;/li&gt; &#xA; &lt;li&gt;Web scraping, web content analysis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://asciinema.org/a/296274&#34;&gt;Image, document and binary file meta data analysis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dark web searches&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://asciinema.org/a/295939&#34;&gt;Port scanning and banner grabbing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://asciinema.org/a/296145&#34;&gt;Data breach searches&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;So much more...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;INSTALLING &amp;amp; RUNNING&lt;/h3&gt; &#xA;&lt;p&gt;To install and run SpiderFoot, you need at least Python 3.7 and a number of Python libraries which you can install with &lt;code&gt;pip&lt;/code&gt;. We recommend you install a packaged release since master will often have bleeding edge features and modules that aren&#39;t fully tested.&lt;/p&gt; &#xA;&lt;h4&gt;Stable build (packaged release):&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt; wget https://github.com/smicallef/spiderfoot/archive/v4.0.tar.gz&#xA; tar zxvf v4.0.tar.gz&#xA; cd spiderfoot-4.0&#xA; pip3 install -r requirements.txt&#xA; python3 ./sf.py -l 127.0.0.1:5001&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Development build (cloning git master branch):&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt; git clone https://github.com/smicallef/spiderfoot.git&#xA; cd spiderfoot&#xA; pip3 install -r requirements.txt&#xA; python3 ./sf.py -l 127.0.0.1:5001&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://www.spiderfoot.net/documentation&#34;&gt;documentation&lt;/a&gt; and our &lt;a href=&#34;https://asciinema.org/~spiderfoot&#34;&gt;asciinema videos&lt;/a&gt; for more tutorials.&lt;/p&gt; &#xA;&lt;h3&gt;COMMUNITY&lt;/h3&gt; &#xA;&lt;p&gt;Whether you&#39;re a contributor, user or just curious about SpiderFoot and OSINT in general, we&#39;d love to have you join our community! SpiderFoot now has a &lt;a href=&#34;https://discord.gg/vyvztrG&#34;&gt;Discord server&lt;/a&gt; for seeking help from the community, requesting features or just general OSINT chit-chat.&lt;/p&gt; &#xA;&lt;h3&gt;WRITING CORRELATION RULES&lt;/h3&gt; &#xA;&lt;p&gt;We have a comprehensive write-up and reference of the correlation rule-set introduced in SpiderFoot 4.0 &lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/correlations/README.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/correlations/template.yaml&#34;&gt;template.yaml&lt;/a&gt; file for a walk through. The existing &lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/correlations&#34;&gt;37 rules&lt;/a&gt; are also quite readable and good as starting points for additional rules.&lt;/p&gt; &#xA;&lt;h3&gt;MODULES / INTEGRATIONS&lt;/h3&gt; &#xA;&lt;p&gt;SpiderFoot has over 200 modules, most of which &lt;em&gt;don&#39;t require API keys&lt;/em&gt;, and many of those that do require API keys &lt;em&gt;have a free tier&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Name&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://app.abstractapi.com/&#34;&gt;AbstractAPI&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Look up domain, phone and IP address information from AbstractAPI.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.abuse.ch&#34;&gt;abuse.ch&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a host/domain, IP address or netblock is malicious according to Abuse.ch.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.abuseipdb.com&#34;&gt;AbuseIPDB&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if an IP address is malicious according to AbuseIPDB.com blacklist.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://abusix.org/&#34;&gt;Abusix Mail Intelligence&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a netblock or IP address is in the Abusix Mail Intelligence blacklist.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Account Finder&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Look for possible associated accounts on over 500 social and other websites such as Instagram, Reddit, etc.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://adblockplus.org/&#34;&gt;AdBlock Check&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if linked pages would be blocked by AdBlock Plus.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://adguard.com/&#34;&gt;AdGuard DNS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a host would be blocked by AdGuard DNS.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://ahmia.fi/&#34;&gt;Ahmia&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search Tor &#39;Ahmia&#39; search engine for mentions of the target.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://cybersecurity.att.com/&#34;&gt;AlienVault IP Reputation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if an IP or netblock is malicious according to the AlienVault IP Reputation database.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://otx.alienvault.com/&#34;&gt;AlienVault OTX&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain information from AlienVault Open Threat Exchange (OTX)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/s3/&#34;&gt;Amazon S3 Bucket Finder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search for potential Amazon S3 buckets associated with the target and attempt to list their contents.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://itunes.apple.com/&#34;&gt;Apple iTunes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search Apple iTunes for mobile apps.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://archive.org/&#34;&gt;Archive.org&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identifies historic versions of interesting files/pages from the Wayback Machine.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.arin.net/&#34;&gt;ARIN&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Queries ARIN registry for contact information.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://azure.microsoft.com/en-in/services/storage/blobs/&#34;&gt;Azure Blob Finder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search for potential Azure blobs associated with the target and attempt to list their contents.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Base64 Decoder&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify Base64-encoded strings in URLs, often revealing interesting hidden information.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://bgpview.io/&#34;&gt;BGPView&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain network information from BGPView API.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Binary String Extractor&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Attempt to identify strings in binary content.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.binaryedge.io/&#34;&gt;BinaryEdge&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain information from BinaryEdge.io Internet scanning systems, including breaches, vulnerabilities, torrents and passive DNS.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.bing.com/&#34;&gt;Bing (Shared IPs)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search Bing for hosts sharing the same IP.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.bing.com/&#34;&gt;Bing&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain information from bing to identify sub-domains and links.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Bitcoin Finder&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify bitcoin addresses in scraped webpages.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://bitcoinwhoswho.com/&#34;&gt;Bitcoin Who&#39;s Who&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check for Bitcoin addresses against the Bitcoin Who&#39;s Who database of suspect/malicious addresses.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.bitcoinabuse.com/&#34;&gt;BitcoinAbuse&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check Bitcoin addresses against the bitcoinabuse.com database of suspect/malicious addresses.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.blockchain.com/&#34;&gt;Blockchain&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Queries blockchain.info to find the balance of identified bitcoin wallet addresses.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.blocklist.de/en/index.html&#34;&gt;blocklist.de&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a netblock or IP is malicious according to blocklist.de.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://botscout.com/&#34;&gt;BotScout&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Searches BotScout.com&#39;s database of spam-bot IP addresses and e-mail addresses.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://botvrij.eu/&#34;&gt;botvrij.eu&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a domain is malicious according to botvrij.eu.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://builtwith.com/&#34;&gt;BuiltWith&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Query BuiltWith.com&#39;s Domain API for information about your target&#39;s web technology stack, e-mail addresses and more.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://api.c99.nl/&#34;&gt;C99&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Queries the C99 API which offers various data (geo location, proxy detection, phone lookup, etc).&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Commercial API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://callername.com/&#34;&gt;CallerName&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Lookup US phone number location and reputation information.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://censys.io/&#34;&gt;Censys&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain host information from Censys.io.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://crt.sh/&#34;&gt;Certificate Transparency&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Gather hostnames from historical certificates in crt.sh.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://sslmate.com/certspotter/&#34;&gt;CertSpotter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Gather information about SSL certificates from SSLMate CertSpotter API.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://cinsscore.com/&#34;&gt;CINS Army List&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a netblock or IP address is malicious according to Collective Intelligence Network Security (CINS) Army list.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.circl.lu/&#34;&gt;CIRCL.LU&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain information from CIRCL.LU&#39;s Passive DNS and Passive SSL databases.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://cleanbrowsing.org/&#34;&gt;CleanBrowsing.org&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a host would be blocked by CleanBrowsing.org DNS content filters.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://cleantalk.org&#34;&gt;CleanTalk Spam List&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a netblock or IP address is on CleanTalk.org&#39;s spam IP list.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://clearbit.com/&#34;&gt;Clearbit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check for names, addresses, domains and more based on lookups of e-mail addresses on clearbit.com.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.cloudflare.com/&#34;&gt;CloudFlare DNS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a host would be blocked by CloudFlare DNS.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://zerodot1.gitlab.io/CoinBlockerListsWeb/&#34;&gt;CoinBlocker Lists&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a domain appears on CoinBlocker lists.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://commoncrawl.org/&#34;&gt;CommonCrawl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Searches for URLs found through CommonCrawl.org.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.comodo.com/secure-dns/&#34;&gt;Comodo Secure DNS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a host would be blocked by Comodo Secure DNS.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Company Name Extractor&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify company names in any obtained data.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Cookie Extractor&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Extract Cookies from HTTP headers.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Country Name Extractor&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify country names in any obtained data.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Credit Card Number Extractor&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify Credit Card Numbers in any data&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://sonar.omnisint.io/&#34;&gt;Crobat API&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search Crobat API for subdomains.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Cross-Referencer&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify whether other domains are associated (&#39;Affiliates&#39;) of the target by looking for links back to the target site(s).&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://crxcavator.io/&#34;&gt;CRXcavator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search CRXcavator for Chrome extensions.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Custom Threat Feed&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a host/domain, netblock, ASN or IP is malicious according to your custom feed.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://cybercrime-tracker.net/&#34;&gt;CyberCrime-Tracker.net&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a host/domain or IP address is malicious according to CyberCrime-Tracker.net.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://debounce.io/&#34;&gt;Debounce&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check whether an email is disposable&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.dehashed.com/&#34;&gt;Dehashed&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Gather breach data from Dehashed API.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Commercial API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.digitalocean.com/products/spaces/&#34;&gt;Digital Ocean Space Finder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search for potential Digital Ocean Spaces associated with the target and attempt to list their contents.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DNS Brute-forcer&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Attempts to identify hostnames through brute-forcing common names and iterations.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DNS Common SRV&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Attempts to identify hostnames through brute-forcing common DNS SRV records.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://dnsforfamily.com/&#34;&gt;DNS for Family&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a host would be blocked by DNS for Family.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DNS Look-aside&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Attempt to reverse-resolve the IP addresses next to your target to see if they are related.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DNS Raw Records&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Retrieves raw DNS records such as MX, TXT and others.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DNS Resolver&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Resolves hosts and IP addresses identified, also extracted from raw content.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DNS Zone Transfer&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Attempts to perform a full DNS zone transfer.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.farsightsecurity.com&#34;&gt;DNSDB&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Query FarSight&#39;s DNSDB for historical and passive DNS data.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://dnsdumpster.com/&#34;&gt;DNSDumpster&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Passive subdomain enumeration using HackerTarget&#39;s DNSDumpster&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://opendata.rapid7.com/&#34;&gt;DNSGrep&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain Passive DNS information from Rapid7 Sonar Project using DNSGrep API.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://dronebl.org/&#34;&gt;DroneBL&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Query the DroneBL database for open relays, open proxies, vulnerable servers, etc.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://duckduckgo.com/&#34;&gt;DuckDuckGo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Query DuckDuckGo&#39;s API for descriptive information about your target.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;E-Mail Address Extractor&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify e-mail addresses in any obtained data.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://emailcrawlr.com/&#34;&gt;EmailCrawlr&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search EmailCrawlr for email addresses and phone numbers associated with a domain.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.email-format.com/&#34;&gt;EmailFormat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Look up e-mail addresses on email-format.com.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://emailrep.io/&#34;&gt;EmailRep&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search EmailRep.io for email address reputation.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://rules.emergingthreats.net/&#34;&gt;Emerging Threats&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a netblock or IP address is malicious according to EmergingThreats.net.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Error String Extractor&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify common error messages in content like SQL errors, etc.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Ethereum Address Extractor&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify ethereum addresses in scraped webpages.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://etherscan.io&#34;&gt;Etherscan&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Queries etherscan.io to find the balance of identified ethereum wallet addresses.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;File Metadata Extractor&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Extracts meta data from documents and images.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.flickr.com/&#34;&gt;Flickr&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search Flickr for domains, URLs and emails related to the specified domain.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://focsec.com/&#34;&gt;Focsec&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Look up IP address information from Focsec.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.fortiguard.com/&#34;&gt;FortiGuard Antispam&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if an IP address is malicious according to FortiGuard Antispam.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://fraudguard.io/&#34;&gt;Fraudguard&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain threat information from Fraudguard.io&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://riddler.io/&#34;&gt;F-Secure Riddler.io&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain network information from F-Secure Riddler.io API.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Commercial API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.fullcontact.com&#34;&gt;FullContact&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Gather domain and e-mail information from FullContact.com API.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://fullhunt.io/&#34;&gt;FullHunt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify domain attack surface using FullHunt API.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/&#34;&gt;Github&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify associated public code repositories on Github.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://search.gleif.org/&#34;&gt;GLEIF&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Look up company information from Global Legal Entity Identifier Foundation (GLEIF).&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://cloud.google.com/maps-platform/&#34;&gt;Google Maps&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identifies potential physical addresses and latitude/longitude coordinates.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://cloud.google.com/storage&#34;&gt;Google Object Storage Finder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search for potential Google Object Storage buckets associated with the target and attempt to list their contents.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://developers.google.com/safe-browsing/v4/lookup-api&#34;&gt;Google SafeBrowsing&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if the URL is included on any of the Safe Browsing lists.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://developers.google.com/custom-search&#34;&gt;Google&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain information from the Google Custom Search API to identify sub-domains and links.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://secure.gravatar.com/&#34;&gt;Gravatar&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Retrieve user information from Gravatar API.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://buckets.grayhatwarfare.com/&#34;&gt;Grayhat Warfare&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Find bucket names matching the keyword extracted from a domain from Grayhat API.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://greensnow.co/&#34;&gt;Greensnow&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a netblock or IP address is malicious according to greensnow.co.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://grep.app/&#34;&gt;grep.app&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search grep.app API for links and emails related to the specified domain.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://greynoise.io/&#34;&gt;GreyNoise Community&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain IP enrichment data from GreyNoise Community API&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://greynoise.io/&#34;&gt;GreyNoise&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain IP enrichment data from GreyNoise&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.nobbd.de/&#34;&gt;HackerOne (Unofficial)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check external vulnerability scanning/reporting service h1.nobbd.de to see if the target is listed.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://hackertarget.com/&#34;&gt;HackerTarget&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search HackerTarget.com for hosts sharing the same IP.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Hash Extractor&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify MD5 and SHA hashes in web content, files and more.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://haveibeenpwned.com/&#34;&gt;HaveIBeenPwned&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check HaveIBeenPwned.com for hacked e-mail addresses identified in breaches.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Commercial API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Hosting Provider Identifier&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Find out if any IP addresses identified fall within known 3rd party hosting ranges, e.g. Amazon, Azure, etc.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://host.io&#34;&gt;Host.io&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain information about domain names from host.io.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Human Name Extractor&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Attempt to identify human names in fetched content.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://hunter.io/&#34;&gt;Hunter.io&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check for e-mail addresses and names on hunter.io.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.hybrid-analysis.com&#34;&gt;Hybrid Analysis&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search Hybrid Analysis for domains and URLs related to the target.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;IBAN Number Extractor&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify International Bank Account Numbers (IBANs) in any data.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://iknowwhatyoudownload.com/en/peer/&#34;&gt;Iknowwhatyoudownload.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check iknowwhatyoudownload.com for IP addresses that have been using torrents.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://intelx.io/&#34;&gt;IntelligenceX&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain information from IntelligenceX about identified IP addresses, domains, e-mail addresses and phone numbers.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Interesting File Finder&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identifies potential files of interest, e.g. office documents, zip files.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://isc.sans.edu&#34;&gt;Internet Storm Center&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if an IP address is malicious according to SANS ISC.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://ipapi.co/&#34;&gt;ipapi.co&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Queries ipapi.co to identify geolocation of IP Addresses using ipapi.co API&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://ipapi.com/&#34;&gt;ipapi.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Queries ipapi.com to identify geolocation of IP Addresses using ipapi.com API&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://ipinfo.io&#34;&gt;IPInfo.io&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identifies the physical location of IP addresses identified using ipinfo.io.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.ipqualityscore.com/&#34;&gt;IPQualityScore&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Determine if target is malicious using IPQualityScore API&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://ipregistry.co/&#34;&gt;ipregistry&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Query the ipregistry.co database for reputation and geo-location.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://ipstack.com/&#34;&gt;ipstack&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identifies the physical location of IP addresses identified using ipstack.com.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://jsonwhois.com&#34;&gt;JsonWHOIS.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search JsonWHOIS.com for WHOIS records associated with a domain.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Junk File Finder&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Looks for old/temporary and other similar files.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://keybase.io/&#34;&gt;Keybase&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain additional information about domain names and identified usernames.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://koodous.com/apks/&#34;&gt;Koodous&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search Koodous for mobile apps.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://leakix.net/&#34;&gt;LeakIX&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search LeakIX for host data leaks, open ports, software and geoip.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://leak-lookup.com/&#34;&gt;Leak-Lookup&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Searches Leak-Lookup.com&#39;s database of breaches.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://maltiverse.com&#34;&gt;Maltiverse&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain information about any malicious activities involving IP addresses&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.malwarepatrol.net/&#34;&gt;MalwarePatrol&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Searches malwarepatrol.net&#39;s database of malicious URLs/IPs.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://metadefender.opswat.com/&#34;&gt;MetaDefender&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search MetaDefender API for IP address and domain IP reputation.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.mnemonic.no&#34;&gt;Mnemonic PassiveDNS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain Passive DNS information from PassiveDNS.mnemonic.no.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://multiproxy.org/&#34;&gt;multiproxy.org Open Proxies&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if an IP address is an open proxy according to multiproxy.org open proxy list.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://myspace.com/&#34;&gt;MySpace&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Gather username and location from MySpace.com profiles.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.nameapi.org/&#34;&gt;NameAPI&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check whether an email is disposable&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://networksdb.io/&#34;&gt;NetworksDB&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search NetworksDB.io API for IP address and domain information.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.neutrinoapi.com/&#34;&gt;NeutrinoAPI&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search NeutrinoAPI for phone location information, IP address information, and host reputation.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://numverify.com/&#34;&gt;numverify&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Lookup phone number location and carrier information from numverify.com.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://onion.link/&#34;&gt;Onion.link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search Tor &#39;Onion City&#39; search engine for mentions of the target domain using Google Custom Search.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://as.onionsearchengine.com&#34;&gt;Onionsearchengine.com&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search Tor onionsearchengine.com for mentions of the target domain.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.onyphe.io&#34;&gt;Onyphe&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check Onyphe data (threat list, geo-location, pastries, vulnerabilities) about a given IP.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.openbugbounty.org/&#34;&gt;Open Bug Bounty&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check external vulnerability scanning/reporting service openbugbounty.org to see if the target is listed.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://opencorporates.com&#34;&gt;OpenCorporates&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Look up company information from OpenCorporates.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.opendns.com/&#34;&gt;OpenDNS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a host would be blocked by OpenDNS.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.opennic.org/&#34;&gt;OpenNIC DNS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Resolves host names in the OpenNIC alternative DNS system.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://openphish.com/&#34;&gt;OpenPhish&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a host/domain is malicious according to OpenPhish.com.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.openstreetmap.org/&#34;&gt;OpenStreetMap&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Retrieves latitude/longitude coordinates for physical addresses from OpenStreetMap API.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Page Information&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain information about web pages (do they take passwords, do they contain forms, etc.)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pastebin.com/&#34;&gt;PasteBin&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PasteBin search (via Google Search API) to identify related content.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PGP Key Servers&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Look up domains and e-mail addresses in PGP public key servers.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://phishstats.info/&#34;&gt;PhishStats&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a netblock or IP address is malicious according to PhishStats.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://phishtank.com/&#34;&gt;PhishTank&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a host/domain is malicious according to PhishTank.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Phone Number Extractor&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify phone numbers in scraped webpages.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Port Scanner - TCP&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Scans for commonly open TCP ports on Internet-facing systems.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.projecthoneypot.org/&#34;&gt;Project Honey Pot&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Query the Project Honey Pot database for IP addresses.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://chaos.projectdiscovery.io&#34;&gt;ProjectDiscovery Chaos&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search for hosts/subdomains using chaos.projectdiscovery.io&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Commercial API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://psbdmp.cc/&#34;&gt;Psbdmp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check psbdmp.cc (PasteBin Dump) for potentially hacked e-mails and domains.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pulsedive.com/&#34;&gt;Pulsedive&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain information from Pulsedive&#39;s API.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://punkspider.io/&#34;&gt;PunkSpider&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check the QOMPLX punkspider.io service to see if the target is listed as vulnerable.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://quad9.net/&#34;&gt;Quad9&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a host would be blocked by Quad9 DNS.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.reversewhois.io/&#34;&gt;ReverseWhois&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Reverse Whois lookups using reversewhois.io.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.ripe.net/&#34;&gt;RIPE&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Queries the RIPE registry (includes ARIN data) to identify netblocks and other info.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://community.riskiq.com/&#34;&gt;RiskIQ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain information from RiskIQ&#39;s (formerly PassiveTotal) Passive DNS and Passive SSL databases.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.robtex.com/&#34;&gt;Robtex&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search Robtex.com for hosts sharing the same IP.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://searchcode.com/&#34;&gt;searchcode&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search searchcode for code repositories mentioning the target domain.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://securitytrails.com/&#34;&gt;SecurityTrails&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain Passive DNS and other information from SecurityTrails&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://seon.io/&#34;&gt;Seon&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Queries seon.io to gather intelligence about IP Addresses, email addresses, and phone numbers&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Commercial API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.shodan.io/&#34;&gt;SHODAN&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain information from SHODAN about identified IP addresses.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Similar Domain Finder&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search various sources to identify similar looking domain names, for instance squatted domains.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.skymem.info/&#34;&gt;Skymem&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Look up e-mail addresses on Skymem.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.slideshare.net&#34;&gt;SlideShare&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Gather name and location from SlideShare profiles.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://snov.io/&#34;&gt;Snov&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Gather available email IDs from identified domains&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://sociallinks.io/&#34;&gt;Social Links&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Queries SocialLinks.io to gather intelligence from social media platforms and dark web.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Commercial API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://developers.google.com/custom-search&#34;&gt;Social Media Profile Finder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tries to discover the social media profiles for human names identified.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Social Network Identifier&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify presence on social media networks such as LinkedIn, Twitter and others.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.sorbs.net/&#34;&gt;SORBS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Query the SORBS database for open relays, open proxies, vulnerable servers, etc.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.spamcop.net/&#34;&gt;SpamCop&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a netblock or IP address is in the SpamCop database.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.spamhaus.org/&#34;&gt;Spamhaus Zen&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a netblock or IP address is in the Spamhaus Zen database.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://spur.us/&#34;&gt;spur.us&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain information about any malicious activities involving IP addresses found&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Commercial API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://spyonweb.com/&#34;&gt;SpyOnWeb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search SpyOnWeb for hosts sharing the same IP address, Google Analytics code, or Google Adsense code.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;SSL Certificate Analyzer&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Gather information about SSL certificates used by the target&#39;s HTTPS sites.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.stackexchange.com&#34;&gt;StackOverflow&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search StackOverflow for any mentions of a target domain. Returns potentially related information.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/StevenBlack/hosts&#34;&gt;Steven Black Hosts&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a domain is malicious (malware or adware) according to Steven Black Hosts list.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Strange Header Identifier&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain non-standard HTTP headers returned by web servers.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Subdomain Takeover Checker&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if affiliated subdomains are vulnerable to takeover.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://api.sublist3r.com&#34;&gt;Sublist3r PassiveDNS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Passive subdomain enumeration using Sublist3r&#39;s API&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.surbl.org/&#34;&gt;SURBL&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a netblock, IP address or domain is in the SURBL blacklist.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://talosintelligence.com/&#34;&gt;Talos Intelligence&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a netblock or IP address is malicious according to TalosIntelligence.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.textmagic.com/&#34;&gt;TextMagic&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain phone number type from TextMagic API&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://threatjammer.com&#34;&gt;Threat Jammer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if an IP address is malicious according to ThreatJammer.com&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.threatcrowd.org&#34;&gt;ThreatCrowd&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain information from ThreatCrowd about identified IP addresses, domains and e-mail addresses.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://threatfox.abuse.ch&#34;&gt;ThreatFox&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if an IP address is malicious according to ThreatFox.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.threatminer.org/&#34;&gt;ThreatMiner&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain information from ThreatMiner&#39;s database for passive DNS and threat intelligence.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;TLD Searcher&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search all Internet TLDs for domains with the same name as the target (this can be very slow.)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/%5Bhttps://github.com/Tuhinshubhra/CMSeeK%5D(https://github.com/Tuhinshubhra/CMSeeK)&#34;&gt;Tool - CMSeeK&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify what Content Management System (CMS) might be used.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/%5Bhttps://github.com/elceef/dnstwist%5D(https://github.com/elceef/dnstwist)&#34;&gt;Tool - DNSTwist&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify bit-squatting, typo and other similar domains to the target using a local DNSTwist installation.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/%5Bhttp://www.unixwiz.net/tools/nbtscan.html%5D(http://www.unixwiz.net/tools/nbtscan.html)&#34;&gt;Tool - nbtscan&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Scans for open NETBIOS nameservers on your target&#39;s network.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/%5Bhttps://nmap.org/%5D(https://nmap.org/)&#34;&gt;Tool - Nmap&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify what Operating System might be used.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/%5Bhttps://nuclei.projectdiscovery.io/%5D(https://nuclei.projectdiscovery.io/)&#34;&gt;Tool - Nuclei&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Fast and customisable vulnerability scanner.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/%5Bhttps://github.com/trailofbits/onesixtyone%5D(https://github.com/trailofbits/onesixtyone)&#34;&gt;Tool - onesixtyone&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Fast scanner to find publicly exposed SNMP services.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/%5Bhttp://retirejs.github.io/retire.js/%5D(http://retirejs.github.io/retire.js/)&#34;&gt;Tool - Retire.js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Scanner detecting the use of JavaScript libraries with known vulnerabilities&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/%5Bhttps://github.com/hannob/snallygaster%5D(https://github.com/hannob/snallygaster)&#34;&gt;Tool - snallygaster&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Finds file leaks and other security problems on HTTP servers.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/%5Bhttps://testssl.sh%5D(https://testssl.sh)&#34;&gt;Tool - testssl.sh&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify various TLS/SSL weaknesses, including Heartbleed, CRIME and ROBOT.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/%5Bhttps://github.com/trufflesecurity/truffleHog%5D(https://github.com/trufflesecurity/truffleHog)&#34;&gt;Tool - TruffleHog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Searches through git repositories for high entropy strings and secrets, digging deep into commit history.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/%5Bhttps://github.com/EnableSecurity/wafw00f%5D(https://github.com/EnableSecurity/wafw00f)&#34;&gt;Tool - WAFW00F&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify what web application firewall (WAF) is in use on the specified website.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/%5Bhttps://www.wappalyzer.com/%5D(https://www.wappalyzer.com/)&#34;&gt;Tool - Wappalyzer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Wappalyzer indentifies technologies on websites.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/smicallef/spiderfoot/master/%5Bhttps://github.com/urbanadventurer/whatweb%5D(https://github.com/urbanadventurer/whatweb)&#34;&gt;Tool - WhatWeb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify what software is in use on the specified website.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://metrics.torproject.org/&#34;&gt;TOR Exit Nodes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if an IP adddress or netblock appears on the Tor Metrics exit node list.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://torchsearch.wordpress.com/&#34;&gt;TORCH&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search Tor &#39;TORCH&#39; search engine for mentions of the target domain.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://got-hacked.wtf&#34;&gt;Trashpanda&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Queries Trashpanda to gather intelligence about mentions of target in pastesites&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://trumail.io/&#34;&gt;Trumail&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check whether an email is disposable&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.twilio.com/&#34;&gt;Twilio&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain information from Twilio about phone numbers. Ensure you have the Caller Name add-on installed in Twilio.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://twitter.com/&#34;&gt;Twitter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Gather name and location from Twitter profiles.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.uceprotect.net/&#34;&gt;UCEPROTECT&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a netblock or IP address is in the UCEPROTECT database.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://urlscan.io/&#34;&gt;URLScan.io&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search URLScan.io cache for domain information.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://venmo.com/&#34;&gt;Venmo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Gather user information from Venmo API.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://viewdns.info/&#34;&gt;ViewDNS.info&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify co-hosted websites and perform reverse Whois lookups using ViewDNS.info.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.virustotal.com/&#34;&gt;VirusTotal&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain information from VirusTotal about identified IP addresses.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://voipbl.org/&#34;&gt;VoIP Blacklist (VoIPBL)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if an IP address or netblock is malicious according to VoIP Blacklist (VoIPBL).&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://vxvault.net/&#34;&gt;VXVault.net&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a domain or IP address is malicious according to VXVault.net.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Web Analytics Extractor&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify web analytics IDs in scraped webpages and DNS TXT records.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Web Framework Identifier&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify the usage of popular web frameworks like jQuery, YUI and others.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Web Server Identifier&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain web server banners to identify versions of web servers being used.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Web Spider&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Spidering of web-pages to extract content for searching.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://whatcms.org/&#34;&gt;WhatCMS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check web technology using WhatCMS.org API.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://whoisology.com/&#34;&gt;Whoisology&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Reverse Whois lookups using Whoisology.com.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Commercial API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Whois&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Perform a WHOIS look-up on domain names and owned netblocks.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Internal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.whoxy.com/&#34;&gt;Whoxy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Reverse Whois lookups using Whoxy.com.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Commercial API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wigle.net/&#34;&gt;WiGLE&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Query WiGLE to identify nearby WiFi access points.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wikileaks.org/&#34;&gt;Wikileaks&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search Wikileaks for mentions of domain names and e-mail addresses.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.wikipedia.org/&#34;&gt;Wikipedia Edits&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Identify edits to Wikipedia articles made from a given IP address or username.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://exchange.xforce.ibmcloud.com/&#34;&gt;XForce Exchange&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Obtain IP reputation and passive DNS information from IBM X-Force Exchange.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://yandex.com/&#34;&gt;Yandex DNS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a host would be blocked by Yandex DNS.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://zetalytics.com/&#34;&gt;Zetalytics&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Query the Zetalytics database for hosts on your target domain(s).&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://zonefiles.io&#34;&gt;ZoneFile.io&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Search ZoneFiles.io Domain query API for domain information.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tiered API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://zone-h.org/&#34;&gt;Zone-H Defacement Check&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if a hostname/domain appears on the zone-h.org &#39;special defacements&#39; RSS feed.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Free API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;DOCUMENTATION&lt;/h3&gt; &#xA;&lt;p&gt;Read more at the &lt;a href=&#34;https://www.spiderfoot.net/r.php?u=aHR0cHM6Ly93d3cuc3BpZGVyZm9vdC5uZXQv&amp;amp;s=os_gh&#34;&gt;project website&lt;/a&gt;, including more complete documentation, blog posts with tutorials/guides, plus information about &lt;a href=&#34;https://www.spiderfoot.net/r.php?u=aHR0cHM6Ly93d3cuc3BpZGVyZm9vdC5uZXQvaHgvCg==&amp;amp;s=os_gh&#34;&gt;SpiderFoot HX&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Latest updates announced on &lt;a href=&#34;https://twitter.com/spiderfoot&#34;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OpenGVLab/InternVL</title>
    <updated>2024-07-06T01:35:52Z</updated>
    <id>tag:github.com,2024-07-06:/OpenGVLab/InternVL</id>
    <link href="https://github.com/OpenGVLab/InternVL" rel="alternate"></link>
    <summary type="html">&lt;p&gt;[CVPR 2024 Oral] InternVL Family: A Pioneering Open-Source Alternative to GPT-4V. 接近GPT-4V表现的可商用开源多模态对话模型&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img width=&#34;60&#34; alt=&#34;image&#34; src=&#34;https://github.com/OpenGVLab/InternVL/assets/47669167/7037290e-f474-4d11-b90f-1d8316087bf8&#34;&gt; InternVL Family: Closing the Gap to Commercial Multimodal Models with Open-Source Suites —— A Pioneering Open-Source Alternative to GPT-4o&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/README_zh.md&#34;&gt;[📖中文版本ReadMe]&lt;/a&gt; &lt;a href=&#34;https://internvl.github.io/blog/&#34;&gt;[🆕 Blog]&lt;/a&gt; &lt;a href=&#34;https://internvl.github.io/blog/2024-07-02-InternVL-2.0/&#34;&gt;[🚀 InternVL2 Blog]&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/abs/2404.16821&#34;&gt;[📜 InternVL 1.5 Report]&lt;/a&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/699439759&#34;&gt;(中文解读)&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/abs/2312.14238&#34;&gt;[📜 InternVL 1.0 Paper]&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/#quick-start-with-huggingface&#34;&gt;[🚀 Quick Start]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://huggingface.co/spaces/OpenGVLab/InternVL&#34;&gt;[🤗 InternVL2 HF Chat Demo]&lt;/a&gt; &lt;a href=&#34;https://internvl.opengvlab.com/&#34;&gt;[🗨️ Chat Demo]&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/document/How_to_use_InternVL_API.md&#34;&gt;[🌐 API]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://trendshift.io/repositories/9803&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://trendshift.io/api/badge/repositories/9803&#34; alt=&#34;OpenGVLab%2FInternVL | Trendshift&#34; style=&#34;width: 250px; height: 55px;&#34; width=&#34;250&#34; height=&#34;55&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;img height=&#34;55&#34; alt=&#34;image&#34; src=&#34;https://github.com/OpenGVLab/InternVL/assets/23737120/354aa3b7-0129-49b7-94ae-c4deb755051f&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;News🚀🚀🚀&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/07/04&lt;/code&gt;: 🚀We are pleased to release InternVL2. It achieved a 62.0% accuracy on the MMMU Benchmark, matching the performance of leading closed-source commercial models like GPT-4o. The free API of our model can be applied by filling (&lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSfMCzhPr1OOEKau_6jwTU0EiZMSFckDo-HMlc_hUudhF_97rw/viewform?usp=sf_link&#34;&gt;English application form&lt;/a&gt;)/(&lt;a href=&#34;https://wj.qq.com/s2/14910502/25a4/&#34;&gt;中文申请表&lt;/a&gt;). Models are available at &lt;a href=&#34;https://huggingface.co/collections/OpenGVLab/internvl-20-667d3961ab5eb12c7ed1463e&#34;&gt;HF link&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/06/19&lt;/code&gt;: 🚀We release Needle In A Multimodal Haystack (&lt;a href=&#34;https://github.com/OpenGVLab/MM-NIAH&#34;&gt;MM-NIAH&lt;/a&gt;), the first benchmark designed to systematically evaluate the capability of existing MLLMs to comprehend long multimodal documents. &lt;strong&gt;Experimental results show that the performance of Gemini-1.5 on tasks involving image needles is no better than random guessing.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/06/04&lt;/code&gt;: InternVL 1.5 achieved state-of-the-art in the Image MLLM category on the &lt;a href=&#34;https://github.com/BradyFU/Video-MME&#34;&gt;Video-MME&lt;/a&gt; dataset, demonstrating strong generalization across multiple images, surpassing many specialized Video MLLMs and nearing the top open-source video model, LLaVA-Next-Video.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/05/30&lt;/code&gt;: 🚀 🚀 We release &lt;a href=&#34;https://sharegpt4o.github.io/&#34;&gt;ShareGPT-4o&lt;/a&gt;, a groundbreaking large-scale resource that we plan to open-source with 200K meticulously annotated images, 10K videos with highly descriptive captions, and 10K audio files with detailed descriptions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/05/29&lt;/code&gt;: 🚀 We release the Mini-InternVL-Chat series, which includes two models: &lt;a href=&#34;https://huggingface.co/OpenGVLab/Mini-InternVL-Chat-2B-V1-5&#34;&gt;Mini-InternVL-Chat-2B-V1-5&lt;/a&gt; and &lt;a href=&#34;https://huggingface.co/OpenGVLab/Mini-InternVL-Chat-4B-V1-5&#34;&gt;Mini-InternVL-Chat-4B-V1-5&lt;/a&gt;. Our small models achieve impressive performance with minimal size: the 2B model delivers 80% of the performance with only 8% of the model size, and the 4B model achieves 90% of the performance with just 16% of the model size. For more details, please check our &lt;a href=&#34;https://internvl.github.io/blog/2024-05-25-Mini-InternVL-1.5/&#34;&gt;blog&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/05/28&lt;/code&gt;: Thanks to the &lt;a href=&#34;https://github.com/InternLM/lmdeploy&#34;&gt;lmdeploy&lt;/a&gt; team for providing AWQ quantization support. The 4-bit model is available at &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-5-AWQ&#34;&gt;OpenGVLab/InternVL-Chat-V1-5-AWQ&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/05/13&lt;/code&gt;: 🔥 InternVL can now be used as the &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-14B-224px&#34;&gt;text encoder&lt;/a&gt; for diffusion models to support multilingual generation natively in over 110 languages worldwide. See &lt;a href=&#34;https://github.com/mulanai/MuLan&#34;&gt;MuLan&lt;/a&gt; for more details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/04/28&lt;/code&gt;: We release the INT8 version of InternVL-Chat-V1-5, see &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-5-Int8&#34;&gt;HF link&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/04/28&lt;/code&gt;: We achieve the SOTA performance (75.74) on the Infographics VQA benchmark, see &lt;a href=&#34;https://rrc.cvc.uab.es/?ch=17&amp;amp;com=evaluation&amp;amp;task=3&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/04/18&lt;/code&gt;: InternVL-Chat-V1-5 has been released at &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-5&#34;&gt;HF link&lt;/a&gt;, approaching the performance of GPT-4V and Gemini Pro on various benchmarks like MMMU, DocVQA, ChartQA, MathVista, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/02/27&lt;/code&gt;: InternVL is accepted by CVPR 2024! 🎉&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/02/24&lt;/code&gt;: InternVL-Chat models have been included in the &lt;a href=&#34;https://github.com/open-compass/VLMEvalKit&#34;&gt;VLMEvalKit&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/02/21&lt;/code&gt;: &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-2-Plus&#34;&gt;InternVL-Chat-V1-2-Plus&lt;/a&gt; achieves SOTA performance on MathVista (59.9), MMBench (83.8), and MMVP (58.7). See our &lt;a href=&#34;https://internvl.github.io/blog/2024-02-21-InternVL-1.2/&#34;&gt;blog&lt;/a&gt; for more details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/02/12&lt;/code&gt;: InternVL-Chat-V1-2 has been released. It achieves 51.6 on MMMU val and 82.3 on MMBench test. For more details, please refer to our &lt;a href=&#34;https://internvl.github.io/blog/2024-02-21-InternVL-1.2/&#34;&gt;blog&lt;/a&gt;, &lt;a href=&#34;https://github.com/OpenGVLab/InternVL/tree/main/internvl_chat#prepare-training-datasets&#34;&gt;SFT data&lt;/a&gt; or try our &lt;a href=&#34;https://internvl.opengvlab.com/&#34;&gt;demo&lt;/a&gt;. The model is now available on &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-2&#34;&gt;HuggingFace&lt;/a&gt;, and both training/evaluation data and scripts are open-sourced.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/02/04&lt;/code&gt;: &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-1&#34;&gt;InternVL-Chat-V1-1&lt;/a&gt; achieves 44.67% on &lt;a href=&#34;https://github.com/tsb0601/MMVP&#34;&gt;MMVP&lt;/a&gt;, higher than GPT-4V!&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/01/27&lt;/code&gt;: We release 448 resolution model, achieving 76.6 on MMBench dev, see &lt;a href=&#34;https://github.com/OpenGVLab/InternVL/tree/main/internvl_chat#-evaluation-chinese-models&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/01/24&lt;/code&gt;: InternVL-Chat-V1-1 is released, it supports Chinese and has stronger OCR capability, see &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-1&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2024/01/16&lt;/code&gt;: We release our &lt;a href=&#34;https://github.com/OpenGVLab/InternVL-MMDetSeg&#34;&gt;customized mmcv/mmsegmentation/mmdetection code&lt;/a&gt;, integrated with DeepSpeed, which can be used for training large-scale object detection and semantic segmentation models.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Installation&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;How to install the environment? &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/INSTALLATION.md&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Training or Fine-tuning&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;How to reproduce the SFT stage of InternVL-Chat-V1-2? &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/internvl_chat#start-training&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;How to fine-tune InternVL-Chat-V1-2 on a custom dataset? &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/document/How_to_finetune_internvl_chat_v1_2_on_a_custom_dataset.md&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;How to fine-tune the Mini-InternVL-Chat series on a custom dataset? &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/document/How_to_finetune_mini_internvl_chat_v1_5_on_a_custom_dataset.md&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Benchmark Test&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Due to minor implementation differences between this codebase and VLMEvalKit, slight discrepancies in performance metrics may occur when testing the same model.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;How to evaluate InternVL-Chat-V1-5? &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/document/How_to_evaluate_internvl_chat_v1_5.md&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;How to evaluate InternVL-Chat-V1-5 using VLMEvalKit? (Recommend) &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/document/How_to_evaluate_internvl_chat_v1_5_using_vlmevalkit.md&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;How to evaluate Mini-InternVL-Chat-2B-V1-5 using VLMEvalKit? (Recommend) &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/document/How_to_evaluate_mini_internvl_chat_2b_v1_5_using_vlmevalkit.md&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;How to evaluate Mini-InternVL-Chat-4B-V1-5 using VLMEvalKit? (Recommend) &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/document/How_to_evaluate_mini_internvl_chat_4b_v1_5_using_vlmevalkit.md&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Deployment&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;How to use InternVL API? &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/document/How_to_use_InternVL_API.md&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;How to deploy a local demo? &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/document/How_to_deploy_a_local_demo.md&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;How to run InternVL-1.5 8bit with Nvidia V100 GPU? &lt;a href=&#34;https://github.com/OpenGVLab/InternVL/issues/144&#34;&gt;[link]&lt;/a&gt; &lt;a href=&#34;https://zhuanlan.zhihu.com/p/697188143&#34;&gt;[中文教程]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;How to perform batch inference? &lt;a href=&#34;https://github.com/OpenGVLab/InternVL/raw/main/README.md?plain=1#L617&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Inference Acceleration by LMDeploy &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/#inference-acceleration-by-lmdeploy&#34;&gt;[link]&lt;/a&gt; &lt;a href=&#34;https://zhuanlan.zhihu.com/p/696955211&#34;&gt;[中文教程]&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compared with SOTA VLLMs&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img width=&#34;1000&#34; alt=&#34;image&#34; src=&#34;https://github.com/OpenGVLab/InternVL/assets/8529570/7c31c8f0-d11b-43ec-845d-70186d6c4ef3&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is InternVL?&lt;/h2&gt; &#xA;&lt;p&gt;InternVL scales up the ViT to &lt;em&gt;&lt;strong&gt;6B parameters&lt;/strong&gt;&lt;/em&gt; and aligns it with LLM.&lt;/p&gt; &#xA;&lt;h2&gt;Model Zoo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Vision Large Language Model&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;/th&gt; &#xA;   &lt;th&gt;Date&lt;/th&gt; &#xA;   &lt;th&gt;Download&lt;/th&gt; &#xA;   &lt;th&gt;Note&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL2&lt;/td&gt; &#xA;   &lt;td&gt;2024.07.04&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/collections/OpenGVLab/internvl-20-667d3961ab5eb12c7ed1463e&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;achieving performance close to GPT-4o&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mini‑InternVL‑Chat‑4B‑V1‑5&lt;/td&gt; &#xA;   &lt;td&gt;2024.05.28&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/Mini-InternVL-Chat-4B-V1-5&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;🚀🚀 16% of the model size, 90% of the performance&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mini-InternVL-Chat-2B-V1-5&lt;/td&gt; &#xA;   &lt;td&gt;2024.05.19&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/Mini-InternVL-Chat-2B-V1-5&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;🚀 8% of the model size, 80% of the performance&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL-Chat-V1-5-AWQ&lt;/td&gt; &#xA;   &lt;td&gt;2024.05.28&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-5-AWQ&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The 4-bit version of InternVL-Chat-V1-5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL-Chat-V1-5-Int8&lt;/td&gt; &#xA;   &lt;td&gt;2024.04.28&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-5-Int8&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The 8-bit version of InternVL-Chat-V1-5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL-Chat-V1-5&lt;/td&gt; &#xA;   &lt;td&gt;2024.04.18&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-5&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;support 4K image; super strong OCR; Approaching the performance of GPT-4V and Gemini Pro on various benchmarks like MMMU, DocVQA, ChartQA, MathVista, etc. (🔥new)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL-Chat-V1-2-Plus&lt;/td&gt; &#xA;   &lt;td&gt;2024.02.21&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-2-Plus&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;more SFT data and stronger&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL-Chat-V1-2&lt;/td&gt; &#xA;   &lt;td&gt;2024.02.11&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-2&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;scaling up LLM to 34B&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL-Chat-V1-1&lt;/td&gt; &#xA;   &lt;td&gt;2024.01.24&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-1&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;support Chinese and stronger OCR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL-Chat-19B-448px&lt;/td&gt; &#xA;   &lt;td&gt;2024.02.03&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-ViT-6B-Vicuna-13B-448px&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;448 resolution&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL-Chat-19B&lt;/td&gt; &#xA;   &lt;td&gt;2023.12.25&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-ViT-6B-Vicuna-13B&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;English multimodal dialogue&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL-Chat-13B&lt;/td&gt; &#xA;   &lt;td&gt;2023.12.25&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-ViT-6B-Vicuna-7B&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;English multimodal dialogue&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Vision-Language Foundation Model&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;/th&gt; &#xA;   &lt;th&gt;Date&lt;/th&gt; &#xA;   &lt;th&gt;Download&lt;/th&gt; &#xA;   &lt;th&gt;Note&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternViT-300M-448px&lt;/td&gt; &#xA;   &lt;td&gt;2024.05.25&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternViT-300M-448px&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;distilled small vision foundation model with 300M parameters (🔥new)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternViT-6B-448px-V1-5&lt;/td&gt; &#xA;   &lt;td&gt;2024.04.20&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternViT-6B-448px-V1-5&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;support dynamic resolution, super strong OCR (🔥new)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternViT-6B-448px-V1-2&lt;/td&gt; &#xA;   &lt;td&gt;2024.02.11&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternViT-6B-448px-V1-2&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;448 resolution&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternViT‑6B‑448px‑V1‑0&lt;/td&gt; &#xA;   &lt;td&gt;2024.01.30&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternViT-6B-448px-V1-0&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;448 resolution&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternViT-6B-224px&lt;/td&gt; &#xA;   &lt;td&gt;2023.12.22&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternViT-6B-224px&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;vision foundation model&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;InternVL-14B-224px&lt;/td&gt; &#xA;   &lt;td&gt;2023.12.22&lt;/td&gt; &#xA;   &lt;td&gt;🤗 &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-14B-224px&#34;&gt;HF link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;vision-language foundation model, InternViT-6B + QLLaMA, can be used for image-text retrival like CLIP&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;InternVL-2 API&lt;/strong&gt;&lt;br&gt; We encourage everyone to use our API for research. For better management, please submit (&lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSfMCzhPr1OOEKau_6jwTU0EiZMSFckDo-HMlc_hUudhF_97rw/viewform?usp=sf_link&#34;&gt;English application form&lt;/a&gt;)/(&lt;a href=&#34;https://wj.qq.com/s2/14910502/25a4/&#34;&gt;中文申请表&lt;/a&gt;) to obtain free API access.&lt;/p&gt; &#xA;&lt;h2&gt;What can InternVL do?&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Visual Perception (click to expand)&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Linear-Probe Image Classification &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/classification#-evaluation&#34;&gt;[see details]&lt;/a&gt;&lt;/p&gt; &lt;p&gt;ViT-22B uses the private JFT-3B dataset.&lt;/p&gt; &#xA;   &lt;table&gt; &#xA;    &lt;thead&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;th&gt;method&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;#param&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-1K&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-ReaL&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-V2&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-A&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-R&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-Sketch&lt;/th&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/thead&gt; &#xA;    &lt;tbody&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;OpenCLIP-G&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;1.8B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;86.2&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;89.4&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;77.2&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;63.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;87.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;66.4&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;DINOv2-g&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;1.1B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;86.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;89.6&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;78.4&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;75.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;78.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;62.5&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;EVA-01-CLIP-g&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;1.1B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;86.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;89.3&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;77.4&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;70.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;87.7&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;63.1&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;MAWS-ViT-6.5B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;6.5B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;87.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;ViT-22B*&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;21.7B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;89.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;90.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;83.2&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;83.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;87.4&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;‑&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternViT-6B (ours)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;5.9B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;88.2&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;90.4&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;79.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;77.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;89.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;69.1&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt; &#xA;   &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Semantic Segmentation &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/segmentation#-evaluation&#34;&gt;[see details]&lt;/a&gt;&lt;/p&gt; &#xA;   &lt;table&gt; &#xA;    &lt;thead&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;th&gt;method&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;decoder&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;#param (train/total)&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;crop size&lt;/th&gt; &#xA;      &lt;th&gt;mIoU&lt;/th&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/thead&gt; &#xA;    &lt;tbody&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;OpenCLIP-G (frozen)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;Linear&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;0.3M / 1.8B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;512&lt;/td&gt; &#xA;      &lt;td&gt;39.3&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;ViT-22B (frozen)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;Linear&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;0.9M / 21.7B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;504&lt;/td&gt; &#xA;      &lt;td&gt;34.6&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternViT-6B (frozen)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;Linear&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;0.5M / 5.9B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;504&lt;/td&gt; &#xA;      &lt;td&gt;47.2 (+12.6)&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;ViT-22B (frozen)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;UperNet&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;0.8B / 22.5B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;504&lt;/td&gt; &#xA;      &lt;td&gt;52.7&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternViT-6B (frozen)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;UperNet&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;0.4B / 6.3B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;504&lt;/td&gt; &#xA;      &lt;td&gt;54.9 (+2.2)&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;ViT-22B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;UperNet&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;22.5B / 22.5B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;504&lt;/td&gt; &#xA;      &lt;td&gt;55.3&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternViT-6B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;UperNet&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;6.3B / 6.3B&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;504&lt;/td&gt; &#xA;      &lt;td&gt;58.9 (+3.6)&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt; &#xA;   &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Zero-Shot Image Classification &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/clip_benchmark#imagenet-variants-and-objectnet&#34;&gt;[see details]&lt;/a&gt;&lt;/p&gt; &#xA;   &lt;table&gt; &#xA;    &lt;thead&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;th&gt;method&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-1K&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-A&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-R&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-V2&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-Sketch&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;ObjectNet&lt;/th&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/thead&gt; &#xA;    &lt;tbody&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;OpenCLIP-G&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;80.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;69.3&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;92.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;73.6&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;68.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;73.0&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;EVA-02-CLIP-E+&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;82.0&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;82.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;94.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;75.7&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;71.6&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;79.6&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;ViT-22B*&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;85.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;90.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;96.0&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;80.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;‑&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;87.6&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternVL-C (ours)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;83.2&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;83.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;95.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;77.3&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;73.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;80.6&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt; &#xA;   &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Multilingual Zero-Shot Image Classification &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/clip_benchmark#multilingual-imagenet-1k&#34;&gt;[see details]&lt;/a&gt;&lt;/p&gt; &lt;p&gt;EN: English, ZH: Chinese, JP: Japanese, Ar: Arabic, IT: Italian&lt;/p&gt; &#xA;   &lt;table&gt; &#xA;    &lt;thead&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;th&gt;method&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-1K (EN)&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-1K (ZH)&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-1K (JP)&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-1K (AR)&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IN-1K (IT)&lt;/th&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/thead&gt; &#xA;    &lt;tbody&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;Taiyi-CLIP-ViT-H&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;54.4&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;WuKong-ViT-L-G&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;57.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;CN-CLIP-ViT-H&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;59.6&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;AltCLIP-ViT-L&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;74.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;59.6&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;EVA-02-CLIP-E+&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;82.0&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;41.2&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;OpenCLIP-XLM-R-H&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;77.0&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;55.7&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;53.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;37.0&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;56.8&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternVL-C (ours)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;83.2&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;64.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;61.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;44.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;65.7&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt; &#xA;   &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Zero-Shot Video Classification [see details]&lt;/p&gt; &#xA;   &lt;table&gt; &#xA;    &lt;thead&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;th&gt;method&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;#frame&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;K400&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;K600&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;K700&lt;/th&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/thead&gt; &#xA;    &lt;tbody&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;OpenCLIP-G&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;65.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;66.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;59.2&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;EVA-02-CLIP-E+&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;69.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;69.3&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;63.4&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternVL-C (ours)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;71.0&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;71.3&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;65.7&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;ViCLIP&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;75.7&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;73.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;66.4&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternVL-C (ours)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;79.4&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;78.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;71.5&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt; &#xA;   &lt;/table&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Cross-Modal Retrieval (click to expand)&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;English Zero-Shot Image-Text Retrieval &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/clip_benchmark#flickr30k--coco&#34;&gt;[see details]&lt;/a&gt;&lt;/p&gt; &#xA;   &lt;table&gt; &#xA;    &lt;tbody&gt;&#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td rowspan=&#34;3&#34; align=&#34;left&#34;&gt;&lt;b&gt;model&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;6&#34; align=&#34;center&#34;&gt;&lt;b&gt;Flickr30K&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;6&#34; align=&#34;center&#34;&gt;&lt;b&gt;COCO&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td rowspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;avg&lt;/b&gt;&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td colspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;image-to-text&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;text-to-image&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;image-to-text&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;text-to-image&lt;/b&gt;&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;R@1&lt;/td&gt; &#xA;      &lt;td&gt;R@5&lt;/td&gt; &#xA;      &lt;td&gt;R@10&lt;/td&gt; &#xA;      &lt;td&gt;R@1&lt;/td&gt; &#xA;      &lt;td&gt;R@5&lt;/td&gt; &#xA;      &lt;td&gt;R@10&lt;/td&gt; &#xA;      &lt;td&gt;R@1&lt;/td&gt; &#xA;      &lt;td&gt;R@5&lt;/td&gt; &#xA;      &lt;td&gt;R@10&lt;/td&gt; &#xA;      &lt;td&gt;R@1&lt;/td&gt; &#xA;      &lt;td&gt;R@5&lt;/td&gt; &#xA;      &lt;td&gt;R@10&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td align=&#34;left&#34;&gt;OpenCLIP-G&lt;/td&gt; &#xA;      &lt;td&gt;92.9&lt;/td&gt; &#xA;      &lt;td&gt;99.3&lt;/td&gt; &#xA;      &lt;td&gt;99.8&lt;/td&gt; &#xA;      &lt;td&gt;79.5&lt;/td&gt; &#xA;      &lt;td&gt;95.0&lt;/td&gt; &#xA;      &lt;td&gt;97.1&lt;/td&gt; &#xA;      &lt;td&gt;67.3&lt;/td&gt; &#xA;      &lt;td&gt;86.9&lt;/td&gt; &#xA;      &lt;td&gt;92.6&lt;/td&gt; &#xA;      &lt;td&gt;51.4&lt;/td&gt; &#xA;      &lt;td&gt;74.9&lt;/td&gt; &#xA;      &lt;td&gt;83.0&lt;/td&gt; &#xA;      &lt;td&gt;85.0&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td align=&#34;left&#34;&gt;EVA-02-CLIP-E+&lt;/td&gt; &#xA;      &lt;td&gt;93.9&lt;/td&gt; &#xA;      &lt;td&gt;99.4&lt;/td&gt; &#xA;      &lt;td&gt;99.8&lt;/td&gt; &#xA;      &lt;td&gt;78.8&lt;/td&gt; &#xA;      &lt;td&gt;94.2&lt;/td&gt; &#xA;      &lt;td&gt;96.8&lt;/td&gt; &#xA;      &lt;td&gt;68.8&lt;/td&gt; &#xA;      &lt;td&gt;87.8&lt;/td&gt; &#xA;      &lt;td&gt;92.8&lt;/td&gt; &#xA;      &lt;td&gt;51.1&lt;/td&gt; &#xA;      &lt;td&gt;75.0&lt;/td&gt; &#xA;      &lt;td&gt;82.7&lt;/td&gt; &#xA;      &lt;td&gt;85.1&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td align=&#34;left&#34;&gt;EVA-CLIP-8B&lt;/td&gt; &#xA;      &lt;td&gt;95.6&lt;/td&gt; &#xA;      &lt;td&gt;99.6&lt;/td&gt; &#xA;      &lt;td&gt;99.9&lt;/td&gt; &#xA;      &lt;td&gt;80.8&lt;/td&gt; &#xA;      &lt;td&gt;95.5&lt;/td&gt; &#xA;      &lt;td&gt;97.6&lt;/td&gt; &#xA;      &lt;td&gt;70.3&lt;/td&gt; &#xA;      &lt;td&gt;89.3&lt;/td&gt; &#xA;      &lt;td&gt;93.9&lt;/td&gt; &#xA;      &lt;td&gt;53.0&lt;/td&gt; &#xA;      &lt;td&gt;76.0&lt;/td&gt; &#xA;      &lt;td&gt;83.4&lt;/td&gt; &#xA;      &lt;td&gt;86.2&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td align=&#34;left&#34;&gt;InternVL-C (ours)&lt;/td&gt; &#xA;      &lt;td&gt;94.7&lt;/td&gt; &#xA;      &lt;td&gt;99.6&lt;/td&gt; &#xA;      &lt;td&gt;99.9&lt;/td&gt; &#xA;      &lt;td&gt;81.7&lt;/td&gt; &#xA;      &lt;td&gt;96.0&lt;/td&gt; &#xA;      &lt;td&gt;98.2&lt;/td&gt; &#xA;      &lt;td&gt;70.6&lt;/td&gt; &#xA;      &lt;td&gt;89.0&lt;/td&gt; &#xA;      &lt;td&gt;93.5&lt;/td&gt; &#xA;      &lt;td&gt;54.1&lt;/td&gt; &#xA;      &lt;td&gt;77.3&lt;/td&gt; &#xA;      &lt;td&gt;84.6&lt;/td&gt; &#xA;      &lt;td&gt;86.6&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td align=&#34;left&#34;&gt;InternVL-G (ours)&lt;/td&gt; &#xA;      &lt;td&gt;95.7&lt;/td&gt; &#xA;      &lt;td&gt;99.7&lt;/td&gt; &#xA;      &lt;td&gt;99.9&lt;/td&gt; &#xA;      &lt;td&gt;85.0&lt;/td&gt; &#xA;      &lt;td&gt;97.0&lt;/td&gt; &#xA;      &lt;td&gt;98.6&lt;/td&gt; &#xA;      &lt;td&gt;74.9&lt;/td&gt; &#xA;      &lt;td&gt;91.3&lt;/td&gt; &#xA;      &lt;td&gt;95.2&lt;/td&gt; &#xA;      &lt;td&gt;58.6&lt;/td&gt; &#xA;      &lt;td&gt;81.3&lt;/td&gt; &#xA;      &lt;td&gt;88.0&lt;/td&gt; &#xA;      &lt;td&gt;88.8&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt;&#xA;   &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Chinese Zero-Shot Image-Text Retrieval &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/clip_benchmark#flickr30k-cn--coco-cn&#34;&gt;[see details]&lt;/a&gt;&lt;/p&gt; &#xA;   &lt;table&gt; &#xA;    &lt;tbody&gt;&#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td rowspan=&#34;3&#34; align=&#34;left&#34;&gt;&lt;b&gt;model&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;6&#34; align=&#34;center&#34;&gt;&lt;b&gt;Flickr30K-CN&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;6&#34; align=&#34;center&#34;&gt;&lt;b&gt;COCO-CN&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td rowspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;avg&lt;/b&gt;&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td colspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;image-to-text&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;text-to-image&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;image-to-text&lt;/b&gt;&lt;/td&gt; &#xA;      &lt;td colspan=&#34;3&#34; align=&#34;center&#34;&gt;&lt;b&gt;text-to-image&lt;/b&gt;&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;R@1&lt;/td&gt; &#xA;      &lt;td&gt;R@5&lt;/td&gt; &#xA;      &lt;td&gt;R@10&lt;/td&gt; &#xA;      &lt;td&gt;R@1&lt;/td&gt; &#xA;      &lt;td&gt;R@5&lt;/td&gt; &#xA;      &lt;td&gt;R@10&lt;/td&gt; &#xA;      &lt;td&gt;R@1&lt;/td&gt; &#xA;      &lt;td&gt;R@5&lt;/td&gt; &#xA;      &lt;td&gt;R@10&lt;/td&gt; &#xA;      &lt;td&gt;R@1&lt;/td&gt; &#xA;      &lt;td&gt;R@5&lt;/td&gt; &#xA;      &lt;td&gt;R@10&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td align=&#34;left&#34;&gt;CN-CLIP-ViT-H&lt;/td&gt; &#xA;      &lt;td&gt;81.6&lt;/td&gt; &#xA;      &lt;td&gt;97.5&lt;/td&gt; &#xA;      &lt;td&gt;98.8&lt;/td&gt; &#xA;      &lt;td&gt;71.2&lt;/td&gt; &#xA;      &lt;td&gt;91.4&lt;/td&gt; &#xA;      &lt;td&gt;95.5&lt;/td&gt; &#xA;      &lt;td&gt;63.0&lt;/td&gt; &#xA;      &lt;td&gt;86.6&lt;/td&gt; &#xA;      &lt;td&gt;92.9&lt;/td&gt; &#xA;      &lt;td&gt;69.2&lt;/td&gt; &#xA;      &lt;td&gt;89.9&lt;/td&gt; &#xA;      &lt;td&gt;96.1&lt;/td&gt; &#xA;      &lt;td&gt;86.1&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td align=&#34;left&#34;&gt;OpenCLIP-XLM-R-H&lt;/td&gt; &#xA;      &lt;td&gt;86.1&lt;/td&gt; &#xA;      &lt;td&gt;97.5&lt;/td&gt; &#xA;      &lt;td&gt;99.2&lt;/td&gt; &#xA;      &lt;td&gt;71.0&lt;/td&gt; &#xA;      &lt;td&gt;90.5&lt;/td&gt; &#xA;      &lt;td&gt;94.9&lt;/td&gt; &#xA;      &lt;td&gt;70.0&lt;/td&gt; &#xA;      &lt;td&gt;91.5&lt;/td&gt; &#xA;      &lt;td&gt;97.0&lt;/td&gt; &#xA;      &lt;td&gt;66.1&lt;/td&gt; &#xA;      &lt;td&gt;90.8&lt;/td&gt; &#xA;      &lt;td&gt;96.0&lt;/td&gt; &#xA;      &lt;td&gt;87.6&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td align=&#34;left&#34;&gt;InternVL-C (ours)&lt;/td&gt; &#xA;      &lt;td&gt;90.3&lt;/td&gt; &#xA;      &lt;td&gt;98.8&lt;/td&gt; &#xA;      &lt;td&gt;99.7&lt;/td&gt; &#xA;      &lt;td&gt;75.1&lt;/td&gt; &#xA;      &lt;td&gt;92.9&lt;/td&gt; &#xA;      &lt;td&gt;96.4&lt;/td&gt; &#xA;      &lt;td&gt;68.8&lt;/td&gt; &#xA;      &lt;td&gt;92.0&lt;/td&gt; &#xA;      &lt;td&gt;96.7&lt;/td&gt; &#xA;      &lt;td&gt;68.9&lt;/td&gt; &#xA;      &lt;td&gt;91.9&lt;/td&gt; &#xA;      &lt;td&gt;96.5&lt;/td&gt; &#xA;      &lt;td&gt;89.0&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr align=&#34;center&#34;&gt; &#xA;      &lt;td align=&#34;left&#34;&gt;InternVL-G (ours)&lt;/td&gt; &#xA;      &lt;td&gt;92.9&lt;/td&gt; &#xA;      &lt;td&gt;99.4&lt;/td&gt; &#xA;      &lt;td&gt;99.8&lt;/td&gt; &#xA;      &lt;td&gt;77.7&lt;/td&gt; &#xA;      &lt;td&gt;94.8&lt;/td&gt; &#xA;      &lt;td&gt;97.3&lt;/td&gt; &#xA;      &lt;td&gt;71.4&lt;/td&gt; &#xA;      &lt;td&gt;93.9&lt;/td&gt; &#xA;      &lt;td&gt;97.7&lt;/td&gt; &#xA;      &lt;td&gt;73.8&lt;/td&gt; &#xA;      &lt;td&gt;94.4&lt;/td&gt; &#xA;      &lt;td&gt;98.1&lt;/td&gt; &#xA;      &lt;td&gt;90.9&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt;&#xA;   &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Multilingual Zero-Shot Image-Text Retrieval on XTD &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/clip_benchmark#xtd&#34;&gt;[see details]&lt;/a&gt;&lt;/p&gt; &#xA;   &lt;table&gt; &#xA;    &lt;thead&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;th&gt;method&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;EN&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;ES&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;FR&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;ZH&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;IT&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;KO&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;RU&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;JP&lt;/th&gt; &#xA;      &lt;th align=&#34;center&#34;&gt;average&lt;/th&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/thead&gt; &#xA;    &lt;tbody&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;AltCLIP&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;95.4&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;94.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;92.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;95.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;94.2&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;94.4&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;91.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;91.7&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;93.7&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;OpenCLIP-XLM-R-H&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;97.3&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;96.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;94.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;94.7&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;96.0&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;90.2&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;93.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;94.0&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;94.6&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternVL-C (ours)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;97.3&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;95.7&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;95.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;95.6&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;96.0&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;92.2&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;93.3&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;95.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;95.1&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;     &lt;tr&gt; &#xA;      &lt;td&gt;InternVL-G (ours)&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;98.6&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;97.7&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;96.5&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;96.7&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;96.9&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;95.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;94.8&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;96.1&lt;/td&gt; &#xA;      &lt;td align=&#34;center&#34;&gt;96.6&lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt; &#xA;   &lt;/table&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Multimodal Dialogue (see &#34;Compared with SOTA VLLMs&#34;)&lt;/summary&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Quick Start with Huggingface&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;using InternViT-6B (click to expand)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from PIL import Image&#xA;from transformers import AutoModel, CLIPImageProcessor&#xA;&#xA;model = AutoModel.from_pretrained(&#xA;    &#39;OpenGVLab/InternViT-6B-224px&#39;,&#xA;    torch_dtype=torch.bfloat16,&#xA;    low_cpu_mem_usage=True,&#xA;    trust_remote_code=True).cuda().eval()&#xA;&#xA;image = Image.open(&#39;./examples/image1.jpg&#39;).convert(&#39;RGB&#39;)&#xA;&#xA;image_processor = CLIPImageProcessor.from_pretrained(&#39;OpenGVLab/InternViT-6B-224px&#39;)&#xA;&#xA;pixel_values = image_processor(images=image, return_tensors=&#39;pt&#39;).pixel_values&#xA;pixel_values = pixel_values.to(torch.bfloat16).cuda()&#xA;&#xA;outputs = model(pixel_values)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;using InternVL-C(ontrastive) and InternVL-G(enerative) (click to expand)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from PIL import Image&#xA;from transformers import AutoModel, CLIPImageProcessor&#xA;from transformers import AutoTokenizer&#xA;&#xA;&#xA;model = AutoModel.from_pretrained(&#xA;    &#39;OpenGVLab/InternVL-14B-224px&#39;,&#xA;    torch_dtype=torch.bfloat16,&#xA;    low_cpu_mem_usage=True,&#xA;    trust_remote_code=True).cuda().eval()&#xA;&#xA;image_processor = CLIPImageProcessor.from_pretrained(&#39;OpenGVLab/InternVL-14B-224px&#39;)&#xA;&#xA;tokenizer = AutoTokenizer.from_pretrained(&#xA;    &#39;OpenGVLab/InternVL-14B-224px&#39;, use_fast=False, add_eos_token=True)&#xA;tokenizer.pad_token_id = 0  # set pad_token_id to 0&#xA;&#xA;images = [&#xA;    Image.open(&#39;./examples/image1.jpg&#39;).convert(&#39;RGB&#39;),&#xA;    Image.open(&#39;./examples/image2.jpg&#39;).convert(&#39;RGB&#39;),&#xA;    Image.open(&#39;./examples/image3.jpg&#39;).convert(&#39;RGB&#39;)&#xA;]&#xA;prefix = &#39;summarize:&#39;&#xA;texts = [&#xA;    prefix + &#39;a photo of a red panda&#39;,  # English&#xA;    prefix + &#39;一张熊猫的照片&#39;,  # Chinese&#xA;    prefix + &#39;二匹の猫の写真&#39;  # Japanese&#xA;]&#xA;&#xA;pixel_values = image_processor(images=images, return_tensors=&#39;pt&#39;).pixel_values&#xA;pixel_values = pixel_values.to(torch.bfloat16).cuda()&#xA;input_ids = tokenizer(texts, return_tensors=&#39;pt&#39;, max_length=80,&#xA;                      truncation=True, padding=&#39;max_length&#39;).input_ids.cuda()&#xA;&#xA;# InternVL-C&#xA;logits_per_image, logits_per_text = model(&#xA;    image=pixel_values, text=input_ids, mode=&#39;InternVL-C&#39;)&#xA;probs = logits_per_image.softmax(dim=-1)&#xA;# tensor([[9.9609e-01, 5.2185e-03, 6.0070e-08],&#xA;#         [2.2949e-02, 9.7656e-01, 5.9903e-06],&#xA;#         [3.2932e-06, 7.4863e-05, 1.0000e+00]], device=&#39;cuda:0&#39;,&#xA;#        dtype=torch.bfloat16, grad_fn=&amp;lt;SoftmaxBackward0&amp;gt;)&#xA;&#xA;# InternVL-G&#xA;logits_per_image, logits_per_text = model(&#xA;    image=pixel_values, text=input_ids, mode=&#39;InternVL-G&#39;)&#xA;probs = logits_per_image.softmax(dim=-1)&#xA;# tensor([[9.9609e-01, 3.1738e-03, 3.6322e-08],&#xA;#         [8.6060e-03, 9.9219e-01, 2.8759e-06],&#xA;#         [1.7583e-06, 3.1233e-05, 1.0000e+00]], device=&#39;cuda:0&#39;,&#xA;#        dtype=torch.bfloat16, grad_fn=&amp;lt;SoftmaxBackward0&amp;gt;)&#xA;&#xA;# please set add_eos_token to False for generation&#xA;tokenizer.add_eos_token = False&#xA;image = Image.open(&#39;./examples/image1.jpg&#39;).convert(&#39;RGB&#39;)&#xA;pixel_values = image_processor(images=image, return_tensors=&#39;pt&#39;).pixel_values&#xA;pixel_values = pixel_values.to(torch.bfloat16).cuda()&#xA;&#xA;tokenized = tokenizer(&#34;English caption:&#34;, return_tensors=&#39;pt&#39;)&#xA;pred = model.generate(&#xA;    pixel_values=pixel_values,&#xA;    input_ids=tokenized.input_ids.cuda(),&#xA;    attention_mask=tokenized.attention_mask.cuda(),&#xA;    num_beams=5,&#xA;    min_new_tokens=8,&#xA;)&#xA;caption = tokenizer.decode(pred[0].cpu(), skip_special_tokens=True).strip()&#xA;# English caption: a red panda sitting on top of a wooden platform&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;using InternVL-Chat (click to expand)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from transformers import AutoTokenizer, AutoModel&#xA;import torch&#xA;import torchvision.transforms as T&#xA;from PIL import Image&#xA;&#xA;from torchvision.transforms.functional import InterpolationMode&#xA;&#xA;&#xA;IMAGENET_MEAN = (0.485, 0.456, 0.406)&#xA;IMAGENET_STD = (0.229, 0.224, 0.225)&#xA;&#xA;&#xA;def build_transform(input_size):&#xA;    MEAN, STD = IMAGENET_MEAN, IMAGENET_STD&#xA;    transform = T.Compose([&#xA;        T.Lambda(lambda img: img.convert(&#39;RGB&#39;) if img.mode != &#39;RGB&#39; else img),&#xA;        T.Resize((input_size, input_size), interpolation=InterpolationMode.BICUBIC),&#xA;        T.ToTensor(),&#xA;        T.Normalize(mean=MEAN, std=STD)&#xA;    ])&#xA;    return transform&#xA;&#xA;&#xA;def find_closest_aspect_ratio(aspect_ratio, target_ratios, width, height, image_size):&#xA;    best_ratio_diff = float(&#39;inf&#39;)&#xA;    best_ratio = (1, 1)&#xA;    area = width * height&#xA;    for ratio in target_ratios:&#xA;        target_aspect_ratio = ratio[0] / ratio[1]&#xA;        ratio_diff = abs(aspect_ratio - target_aspect_ratio)&#xA;        if ratio_diff &amp;lt; best_ratio_diff:&#xA;            best_ratio_diff = ratio_diff&#xA;            best_ratio = ratio&#xA;        elif ratio_diff == best_ratio_diff:&#xA;            if area &amp;gt; 0.5 * image_size * image_size * ratio[0] * ratio[1]:&#xA;                best_ratio = ratio&#xA;    return best_ratio&#xA;&#xA;&#xA;def dynamic_preprocess(image, min_num=1, max_num=6, image_size=448, use_thumbnail=False):&#xA;    orig_width, orig_height = image.size&#xA;    aspect_ratio = orig_width / orig_height&#xA;&#xA;    # calculate the existing image aspect ratio&#xA;    target_ratios = set(&#xA;        (i, j) for n in range(min_num, max_num + 1) for i in range(1, n + 1) for j in range(1, n + 1) if&#xA;        i * j &amp;lt;= max_num and i * j &amp;gt;= min_num)&#xA;    target_ratios = sorted(target_ratios, key=lambda x: x[0] * x[1])&#xA;&#xA;    # find the closest aspect ratio to the target&#xA;    target_aspect_ratio = find_closest_aspect_ratio(&#xA;        aspect_ratio, target_ratios, orig_width, orig_height, image_size)&#xA;&#xA;    # calculate the target width and height&#xA;    target_width = image_size * target_aspect_ratio[0]&#xA;    target_height = image_size * target_aspect_ratio[1]&#xA;    blocks = target_aspect_ratio[0] * target_aspect_ratio[1]&#xA;&#xA;    # resize the image&#xA;    resized_img = image.resize((target_width, target_height))&#xA;    processed_images = []&#xA;    for i in range(blocks):&#xA;        box = (&#xA;            (i % (target_width // image_size)) * image_size,&#xA;            (i // (target_width // image_size)) * image_size,&#xA;            ((i % (target_width // image_size)) + 1) * image_size,&#xA;            ((i // (target_width // image_size)) + 1) * image_size&#xA;        )&#xA;        # split the image&#xA;        split_img = resized_img.crop(box)&#xA;        processed_images.append(split_img)&#xA;    assert len(processed_images) == blocks&#xA;    if use_thumbnail and len(processed_images) != 1:&#xA;        thumbnail_img = image.resize((image_size, image_size))&#xA;        processed_images.append(thumbnail_img)&#xA;    return processed_images&#xA;&#xA;&#xA;def load_image(image_file, input_size=448, max_num=6):&#xA;    image = Image.open(image_file).convert(&#39;RGB&#39;)&#xA;    transform = build_transform(input_size=input_size)&#xA;    images = dynamic_preprocess(image, image_size=input_size, use_thumbnail=True, max_num=max_num)&#xA;    pixel_values = [transform(image) for image in images]&#xA;    pixel_values = torch.stack(pixel_values)&#xA;    return pixel_values&#xA;&#xA;&#xA;path = &#34;OpenGVLab/InternVL-Chat-V1-5&#34;&#xA;# If you have an 80G A100 GPU, you can put the entire model on a single GPU.&#xA;model = AutoModel.from_pretrained(&#xA;    path,&#xA;    torch_dtype=torch.bfloat16,&#xA;    low_cpu_mem_usage=True,&#xA;    trust_remote_code=True).eval().cuda()&#xA;# Otherwise, you need to set device_map=&#39;auto&#39; to use multiple GPUs for inference.&#xA;# model = AutoModel.from_pretrained(&#xA;#     path,&#xA;#     torch_dtype=torch.bfloat16,&#xA;#     low_cpu_mem_usage=True,&#xA;#     trust_remote_code=True,&#xA;#     device_map=&#39;auto&#39;).eval()&#xA;&#xA;tokenizer = AutoTokenizer.from_pretrained(path, trust_remote_code=True)&#xA;# set the max number of tiles in `max_num`&#xA;pixel_values = load_image(&#39;./examples/image1.jpg&#39;, max_num=6).to(torch.bfloat16).cuda()&#xA;&#xA;generation_config = dict(&#xA;    num_beams=1,&#xA;    max_new_tokens=512,&#xA;    do_sample=False,&#xA;)&#xA;&#xA;# single-round single-image conversation&#xA;question = &#34;请详细描述图片&#34; # Please describe the picture in detail&#xA;response = model.chat(tokenizer, pixel_values, question, generation_config)&#xA;print(question, response)&#xA;&#xA;# multi-round single-image conversation&#xA;question = &#34;请详细描述图片&#34; # Please describe the picture in detail&#xA;response, history = model.chat(tokenizer, pixel_values, question, generation_config, history=None, return_history=True)&#xA;print(question, response)&#xA;&#xA;question = &#34;请根据图片写一首诗&#34; # Please write a poem according to the picture&#xA;response, history = model.chat(tokenizer, pixel_values, question, generation_config, history=history, return_history=True)&#xA;print(question, response)&#xA;&#xA;# multi-round multi-image conversation&#xA;pixel_values1 = load_image(&#39;./examples/image1.jpg&#39;, max_num=6).to(torch.bfloat16).cuda()&#xA;pixel_values2 = load_image(&#39;./examples/image2.jpg&#39;, max_num=6).to(torch.bfloat16).cuda()&#xA;pixel_values = torch.cat((pixel_values1, pixel_values2), dim=0)&#xA;&#xA;question = &#34;详细描述这两张图片&#34; # Describe the two pictures in detail&#xA;response, history = model.chat(tokenizer, pixel_values, question, generation_config, history=None, return_history=True)&#xA;print(question, response)&#xA;&#xA;question = &#34;这两张图片的相同点和区别分别是什么&#34; # What are the similarities and differences between these two pictures&#xA;response, history = model.chat(tokenizer, pixel_values, question, generation_config, history=history, return_history=True)&#xA;print(question, response)&#xA;&#xA;# batch inference (single image per sample)&#xA;pixel_values1 = load_image(&#39;./examples/image1.jpg&#39;, max_num=6).to(torch.bfloat16).cuda()&#xA;pixel_values2 = load_image(&#39;./examples/image2.jpg&#39;, max_num=6).to(torch.bfloat16).cuda()&#xA;image_counts = [pixel_values1.size(0), pixel_values2.size(0)]&#xA;pixel_values = torch.cat((pixel_values1, pixel_values2), dim=0)&#xA;&#xA;questions = [&#34;Describe the image in detail.&#34;] * len(image_counts)&#xA;responses = model.batch_chat(tokenizer, pixel_values,&#xA;                             image_counts=image_counts,&#xA;                             questions=questions,&#xA;                             generation_config=generation_config)&#xA;for question, response in zip(questions, responses):&#xA;    print(question)&#xA;    print(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Inference Acceleration by LMDeploy&lt;/h2&gt; &#xA;&lt;p&gt;We recommend using &lt;a href=&#34;https://github.com/InternLM/lmdeploy&#34;&gt;LMDeploy&lt;/a&gt;, if InternVL-Chat model inference optimization is required.&lt;/p&gt; &#xA;&lt;p&gt;In the following subsections, we will introduce the usage of LMDeploy with the &lt;a href=&#34;https://huggingface.co/OpenGVLab/InternVL-Chat-V1-5&#34;&gt;InternVL-Chat-V1-5&lt;/a&gt; model as an example.&lt;/p&gt; &#xA;&lt;p&gt;First of all, please setup the inference environment as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;conda create -n internvl python=3.10 -y&#xA;conda activate internvl&#xA;&#xA;pip install timm torchvision==0.17.2&#xA;pip install lmdeploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;LMDeploy pypi package depends on CUDA 12.x by default. For a CUDA 11.x environment, please refer to the &lt;a href=&#34;https://lmdeploy.readthedocs.io/en/latest/get_started.html#installation&#34;&gt;installation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Offline Inference Pipeline&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from lmdeploy import pipeline&#xA;from lmdeploy.vl import load_image&#xA;pipe = pipeline(&#39;OpenGVLab/InternVL-Chat-V1-5&#39;)&#xA;image = load_image(&#39;examples/image2.jpg&#39;)&#xA;response = pipe((&#39;describe this image&#39;, image))&#xA;print(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more on using the VLM pipeline, including multi-image inference or multi-turn chat, please overview &lt;a href=&#34;https://lmdeploy.readthedocs.io/en/latest/inference/vl_pipeline.html&#34;&gt;this&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;h3&gt;Online Inference Service&lt;/h3&gt; &#xA;&lt;p&gt;LMDeploy supports one-click packaging of the VLM model into an OpenAI service, providing seamless integration with the OpenAI API.&lt;/p&gt; &#xA;&lt;p&gt;The service can be launched by one command as below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;lmdeploy serve api_server OpenGVLab/InternVL-Chat-V1-5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The arguments of &lt;code&gt;api_server&lt;/code&gt; can be viewed through the command &lt;code&gt;lmdeploy serve api_server -h&lt;/code&gt;, for instance, &lt;code&gt;--tp&lt;/code&gt; to set tensor parallelism, &lt;code&gt;--session-len&lt;/code&gt; to specify the max length of the context window, &lt;code&gt;--cache-max-entry-count&lt;/code&gt; to adjust the GPU mem ratio for k/v cache etc.&lt;/p&gt; &#xA;&lt;p&gt;For more details, including service startup with docker, RESTful API information, and openai integration methods, please refer to &lt;a href=&#34;https://lmdeploy.readthedocs.io/en/latest/serving/api_server_vl.html&#34;&gt;this&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is released under the &lt;a href=&#34;https://raw.githubusercontent.com/OpenGVLab/InternVL/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;. Parts of this project contain code and models from other sources, which are subject to their respective licenses.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find this project useful in your research, please consider cite:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-BibTeX&#34;&gt;@article{chen2023internvl,&#xA;  title={InternVL: Scaling up Vision Foundation Models and Aligning for Generic Visual-Linguistic Tasks},&#xA;  author={Chen, Zhe and Wu, Jiannan and Wang, Wenhai and Su, Weijie and Chen, Guo and Xing, Sen and Zhong, Muyan and Zhang, Qinglong and Zhu, Xizhou and Lu, Lewei and Li, Bin and Luo, Ping and Lu, Tong and Qiao, Yu and Dai, Jifeng},&#xA;  journal={arXiv preprint arXiv:2312.14238},&#xA;  year={2023}&#xA;}&#xA;&#xA;@article{chen2024far,&#xA;  title={How Far Are We to GPT-4V? Closing the Gap to Commercial Multimodal Models with Open-Source Suites},&#xA;  author={Chen, Zhe and Wang, Weiyun and Tian, Hao and Ye, Shenglong and Gao, Zhangwei and Cui, Erfei and Tong, Wenwen and Hu, Kongzhi and Luo, Jiapeng and Ma, Zheng and others},&#xA;  journal={arXiv preprint arXiv:2404.16821},&#xA;  year={2024}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;InternVL is built with reference to the code of the following projects: &lt;a href=&#34;https://github.com/openai/CLIP&#34;&gt;OpenAI CLIP&lt;/a&gt;, &lt;a href=&#34;https://github.com/mlfoundations/open_clip&#34;&gt;Open CLIP&lt;/a&gt;, &lt;a href=&#34;https://github.com/LAION-AI/CLIP_benchmark&#34;&gt;CLIP Benchmark&lt;/a&gt;, &lt;a href=&#34;https://github.com/baaivision/EVA/tree/master&#34;&gt;EVA&lt;/a&gt;, &lt;a href=&#34;https://github.com/OpenGVLab/InternImage&#34;&gt;InternImage&lt;/a&gt;, &lt;a href=&#34;https://github.com/czczup/ViT-Adapter&#34;&gt;ViT-Adapter&lt;/a&gt;, &lt;a href=&#34;https://github.com/open-mmlab/mmsegmentation&#34;&gt;MMSegmentation&lt;/a&gt;, &lt;a href=&#34;https://github.com/huggingface/transformers&#34;&gt;Transformers&lt;/a&gt;, &lt;a href=&#34;https://github.com/facebookresearch/dinov2&#34;&gt;DINOv2&lt;/a&gt;, &lt;a href=&#34;https://github.com/salesforce/LAVIS/tree/main/projects/blip2&#34;&gt;BLIP-2&lt;/a&gt;, &lt;a href=&#34;https://github.com/QwenLM/Qwen-VL/tree/master/eval_mm&#34;&gt;Qwen-VL&lt;/a&gt;, and &lt;a href=&#34;https://github.com/haotian-liu/LLaVA&#34;&gt;LLaVA-1.5&lt;/a&gt;. Thanks for their awesome work!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If you want to join our WeChat group, please scan the following QR Code to add our assistant as a Wechat friend:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img width=&#34;300&#34; alt=&#34;image&#34; src=&#34;https://github.com/OpenGVLab/DragGAN/assets/26198430/e3f0807f-956a-474e-8fd2-1f7c22d73997&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>