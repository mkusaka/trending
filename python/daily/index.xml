<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-24T01:45:00Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>edtechre/pybroker</title>
    <updated>2023-06-24T01:45:00Z</updated>
    <id>tag:github.com,2023-06-24:/edtechre/pybroker</id>
    <link href="https://github.com/edtechre/pybroker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Algorithmic Trading in Python with Machine Learning&lt;/p&gt;&lt;hr&gt;&lt;h1&gt; &lt;img src=&#34;https://github.com/edtechre/pybroker/raw/master/docs/_static/pybroker-logo.png?raw=true&#34; alt=&#34;PyBroker&#34;&gt; &lt;/h1&gt; &#xA;&lt;h2&gt;Algorithmic Trading in Python with Machine Learning&lt;/h2&gt; &#xA;&lt;p&gt;Are you looking to enhance your trading strategies with the power of Python and machine learning? Then you need to check out &lt;strong&gt;PyBroker&lt;/strong&gt;! This Python framework is designed for developing algorithmic trading strategies, with a focus on strategies that use machine learning. With PyBroker, you can easily create and fine-tune trading rules, build powerful models, and gain valuable insights into your strategy‚Äôs performance.&lt;/p&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A super-fast backtesting engine built in &lt;a href=&#34;https://numpy.org/&#34;&gt;NumPy&lt;/a&gt; and accelerated with &lt;a href=&#34;https://numba.pydata.org/&#34;&gt;Numba&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The ability to create and execute trading rules and models across multiple instruments with ease.&lt;/li&gt; &#xA; &lt;li&gt;Access to historical data from &lt;a href=&#34;https://alpaca.markets/&#34;&gt;Alpaca&lt;/a&gt;, &lt;a href=&#34;https://finance.yahoo.com/&#34;&gt;Yahoo Finance&lt;/a&gt;, &lt;a href=&#34;https://github.com/akfamily/akshare&#34;&gt;AKShare&lt;/a&gt;, or from &lt;a href=&#34;https://www.pybroker.com/en/latest/notebooks/7.%20Creating%20a%20Custom%20Data%20Source.html&#34;&gt;your own data provider&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The option to train and backtest models using &lt;a href=&#34;https://www.pybroker.com/en/latest/notebooks/6.%20Training%20a%20Model.html#Walkforward-Analysis&#34;&gt;Walkforward Analysis&lt;/a&gt;, which simulates how the strategy would perform during actual trading.&lt;/li&gt; &#xA; &lt;li&gt;More reliable trading metrics that use randomized &lt;a href=&#34;https://en.wikipedia.org/wiki/Bootstrapping_(statistics)&#34;&gt;bootstrapping&lt;/a&gt; to provide more accurate results.&lt;/li&gt; &#xA; &lt;li&gt;Caching of downloaded data, indicators, and models to speed up your development process.&lt;/li&gt; &#xA; &lt;li&gt;Parallelized computations that enable faster performance.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With PyBroker, you&#39;ll have all the tools you need to create winning trading strategies backed by data and machine learning. Start using PyBroker today and take your trading to the next level!&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;PyBroker supports Python 3.9+ on Windows, Mac, and Linux. You can install PyBroker using &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;   pip install -U lib-pybroker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can clone the Git repository with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;   git clone https://github.com/edtechre/pybroker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;A Quick Example&lt;/h2&gt; &#xA;&lt;p&gt;Get a glimpse of what backtesting with PyBroker looks like with these code snippets:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Rule-based Strategy&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;   from pybroker import Strategy, YFinance, highest&#xA;&#xA;   def exec_fn(ctx):&#xA;      # Get the rolling 10 day high.&#xA;      high_10d = ctx.indicator(&#39;high_10d&#39;)&#xA;      # Buy on a new 10 day high.&#xA;      if not ctx.long_pos() and high_10d[-1] &amp;gt; high_10d[-2]:&#xA;         ctx.buy_shares = 100&#xA;         # Hold the position for 5 days.&#xA;         ctx.hold_bars = 5&#xA;         # Set a stop loss of 2%.&#xA;         ctx.stop_loss_pct = 2&#xA;&#xA;   strategy = Strategy(YFinance(), start_date=&#39;1/1/2022&#39;, end_date=&#39;7/1/2022&#39;)&#xA;   strategy.add_execution(&#xA;      exec_fn, [&#39;AAPL&#39;, &#39;MSFT&#39;], indicators=highest(&#39;high_10d&#39;, &#39;close&#39;, period=10))&#xA;   # Run the backtest after 20 days have passed.&#xA;   result = strategy.backtest(warmup=20)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Model-based Strategy&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;   import pybroker&#xA;   from pybroker import Alpaca, Strategy&#xA;&#xA;   def train_fn(train_data, test_data, ticker):&#xA;      # Train the model using indicators stored in train_data.&#xA;      ...&#xA;      return trained_model&#xA;&#xA;   # Register the model and its training function with PyBroker.&#xA;   my_model = pybroker.model(&#39;my_model&#39;, train_fn, indicators=[...])&#xA;&#xA;   def exec_fn(ctx):&#xA;      preds = ctx.preds(&#39;my_model&#39;)&#xA;      # Open a long position given my_model&#39;s latest prediction.&#xA;      if not ctx.long_pos() and preds[-1] &amp;gt; buy_threshold:&#xA;         ctx.buy_shares = 100&#xA;      # Close the long position given my_model&#39;s latest prediction.&#xA;      elif ctx.long_pos() and preds[-1] &amp;lt; sell_threshold:&#xA;         ctx.sell_all_shares()&#xA;&#xA;   alpaca = Alpaca(api_key=..., api_secret=...)&#xA;   strategy = Strategy(alpaca, start_date=&#39;1/1/2022&#39;, end_date=&#39;7/1/2022&#39;)&#xA;   strategy.add_execution(exec_fn, [&#39;AAPL&#39;, &#39;MSFT&#39;], models=my_model)&#xA;   # Run Walkforward Analysis on 1 minute data using 5 windows with 50/50 train/test data.&#xA;   result = strategy.walkforward(timeframe=&#39;1m&#39;, windows=5, train_size=0.5)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;User Guide&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pybroker.com/en/latest/notebooks/1.%20Getting%20Started%20with%20Data%20Sources.html&#34;&gt;Getting Started with Data Sources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pybroker.com/en/latest/notebooks/2.%20Backtesting%20a%20Strategy.html&#34;&gt;Backtesting a Strategy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pybroker.com/en/latest/notebooks/3.%20Evaluating%20with%20Bootstrap%20Metrics.html&#34;&gt;Evaluating with Bootstrap Metrics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pybroker.com/en/latest/notebooks/4.%20Ranking%20and%20Position%20Sizing.html&#34;&gt;Ranking and Position Sizing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pybroker.com/en/latest/notebooks/5.%20Writing%20Indicators.html&#34;&gt;Writing Indicators&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pybroker.com/en/latest/notebooks/6.%20Training%20a%20Model.html&#34;&gt;Training a Model&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pybroker.com/en/latest/notebooks/7.%20Creating%20a%20Custom%20Data%20Source.html&#34;&gt;Creating a Custom Data Source&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pybroker.com/en/latest/notebooks/8.%20Applying%20Stops.html&#34;&gt;Applying Stops&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pybroker.com/en/latest/notebooks/9.%20Rebalancing%20Positions.html&#34;&gt;Rebalancing Positions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pybroker.com/en/latest/notebooks/10.%20Rotational%20Trading.html&#34;&gt;Rotational Trading&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pybroker.com/en/latest/notebooks/FAQs.html&#34;&gt;FAQs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Online Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.pybroker.com&#34;&gt;The full reference documentation is hosted at &lt;strong&gt;www.pybroker.com&lt;/strong&gt;.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;(For Chinese users: &lt;a href=&#34;https://www.pybroker.com/zh_CN/latest/&#34;&gt;‰∏≠ÊñáÊñáÊ°£&lt;/a&gt;, courtesy of &lt;a href=&#34;https://github.com/albertandking&#34;&gt;Albert King&lt;/a&gt;.)&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;img src=&#34;https://github.com/edtechre/pybroker/raw/master/docs/_static/email-image.png?raw=true&#34;&gt;</summary>
  </entry>
  <entry>
    <title>ramonvc/freegpt-webui</title>
    <updated>2023-06-24T01:45:00Z</updated>
    <id>tag:github.com,2023-06-24:/ramonvc/freegpt-webui</id>
    <link href="https://github.com/ramonvc/freegpt-webui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GPT 3.5/4 with a Chat Web UI. No API key required.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FreeGPT WebUI&lt;/h1&gt; &#xA;&lt;h2&gt;GPT 3.5/4&lt;/h2&gt; &#xA;&lt;p&gt;‚ùå &lt;strong&gt;NOT REQUIRE ANY API KEY&lt;/strong&gt; üîë&lt;/p&gt; &#xA;&lt;p&gt;This project showcases an unlocked version of ChatGPT with WebUI. &lt;br&gt; Experience the power of ChatGPT with a user-friendly interface, completely free. &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;üöß Not working correctly:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Auto Proxy&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Coding to solve as quickly as possible&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ramonvc/freegpt-webui/main/#to-do-list-%EF%B8%8F&#34;&gt;To-Do List&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ramonvc/freegpt-webui/main/#getting-started-white_check_mark&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ramonvc/freegpt-webui/main/#cloning-the-repository-inbox_tray&#34;&gt;Cloning the Repository&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ramonvc/freegpt-webui/main/#install-dependencies-wrench&#34;&gt;Install Dependencies&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ramonvc/freegpt-webui/main/#running-the-application-rocket&#34;&gt;Running the Application&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ramonvc/freegpt-webui/main/#auto-proxy-&#34;&gt;Auto Proxy&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ramonvc/freegpt-webui/main/#enable-auto-proxy&#34;&gt;Enable Auto Proxy&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ramonvc/freegpt-webui/main/#docker-&#34;&gt;Docker&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ramonvc/freegpt-webui/main/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ramonvc/freegpt-webui/main/#running-the-docker&#34;&gt;Running the Docker&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ramonvc/freegpt-webui/main/#incorporated-projects-busts_in_silhouette&#34;&gt;Incorporated Projects&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ramonvc/freegpt-webui/main/#webui&#34;&gt;WebUI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ramonvc/freegpt-webui/main/#api-g4f&#34;&gt;API FreeGPT&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ramonvc/freegpt-webui/main/#star-history&#34;&gt;Star History&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ramonvc/freegpt-webui/main/#legal-notice&#34;&gt;Legal Notice&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;To-Do List ‚úîÔ∏è&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Integrate the free GPT API into the WebUI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Create Docker support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Improve the Jailbreak functionality&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add the GPT-4 model&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Enhance the user interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Auto Proxy&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Enable editing and creating Jailbreaks/Roles in the WebUI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Migrate the interface to React.js (?)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started &lt;span&gt;‚úÖ&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;To get started with this project, you&#39;ll need to clone the repository and have &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python&lt;/a&gt; installed on your system.&lt;/p&gt; &#xA;&lt;h3&gt;Cloning the Repository &lt;span&gt;üì•&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Run the following command to clone the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/ramonvc/gptfree-jailbreak-webui.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install Dependencies &lt;span&gt;üîß&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Navigate to the project directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd gptfree-jailbreak-webui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running the Application &lt;span&gt;üöÄ&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;To run the application, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python run.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Access the application in your browser using the URL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://127.0.0.1:1338&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://localhost:1338&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Auto Proxy üîë&lt;/h2&gt; &#xA;&lt;p&gt;The application includes an auto proxy feature that allows it to work with multiple free proxy servers. The freeGPT API refuses some connections, especially when hosted in the cloud (Azure, AWS, Google Cloud). Auto proxy solves this problem automatically for you. When enabled, the application will automatically fetch and test proxy servers, updating the list of working proxies every 30 minutes.&lt;/p&gt; &#xA;&lt;h3&gt;Enable Auto Proxy&lt;/h3&gt; &#xA;&lt;p&gt;To enable it, just go to the &lt;code&gt;config.json&lt;/code&gt; file and change the value of the &#34;use_auto_proxy&#34; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;use_auto_proxy&#34;: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/ramonvc/gptfree-jailbreak-webui/assets/13617054/f83c6217-411c-404c-9f4c-8ae700a486d1&#34; alt=&#34;use-auto-proxy-gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Docker üê≥&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Before you start, make sure you have installed &lt;a href=&#34;https://www.docker.com/get-started&#34;&gt;Docker&lt;/a&gt; on your machine.&lt;/p&gt; &#xA;&lt;h3&gt;Running the Docker&lt;/h3&gt; &#xA;&lt;p&gt;Build the Docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the application using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Access the application in your browser using the URL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://127.0.0.1:1338&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://localhost:1338&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you&#39;re done using the application, stop the Docker containers using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Incorporated Projects &lt;span&gt;üë•&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;I highly recommend visiting and supporting both projects.&lt;/p&gt; &#xA;&lt;h3&gt;WebUI&lt;/h3&gt; &#xA;&lt;p&gt;The application interface was incorporated from the &lt;a href=&#34;https://github.com/xtekky/chatgpt-clone&#34;&gt;chatgpt-clone&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;h3&gt;API G4F&lt;/h3&gt; &#xA;&lt;p&gt;The free GPT-4 API was incorporated from the &lt;a href=&#34;https://github.com/xtekky/gpt4free&#34;&gt;GPT4Free&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#ramonvc/freegpt-webui&amp;amp;Timeline&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=ramonvc/freegpt-webui&amp;amp;type=Timeline&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Legal Notice&lt;/h2&gt; &#xA;&lt;p&gt;This repository is &lt;em&gt;not&lt;/em&gt; associated with or endorsed by providers of the APIs contained in this GitHub repository. This project is intended &lt;strong&gt;for educational purposes only&lt;/strong&gt;. This is just a little personal project. Sites may contact me to improve their security or request the removal of their site from this repository.&lt;/p&gt; &#xA;&lt;p&gt;Please note the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: The APIs, services, and trademarks mentioned in this repository belong to their respective owners. This project is &lt;em&gt;not&lt;/em&gt; claiming any right over them nor is it affiliated with or endorsed by any of the providers mentioned.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Responsibility&lt;/strong&gt;: The author of this repository is &lt;em&gt;not&lt;/em&gt; responsible for any consequences, damages, or losses arising from the use or misuse of this repository or the content provided by the third-party APIs. Users are solely responsible for their actions and any repercussions that may follow. We strongly recommend the users to follow the TOS of the each Website.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Educational Purposes Only&lt;/strong&gt;: This repository and its content are provided strictly for educational purposes. By using the information and code provided, users acknowledge that they are using the APIs and models at their own risk and agree to comply with any applicable laws and regulations.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Copyright&lt;/strong&gt;: All content in this repository, including but not limited to code, images, and documentation, is the intellectual property of the repository author, unless otherwise stated. Unauthorized copying, distribution, or use of any content in this repository is strictly prohibited without the express written consent of the repository author.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Indemnification&lt;/strong&gt;: Users agree to indemnify, defend, and hold harmless the author of this repository from and against any and all claims, liabilities, damages, losses, or expenses, including legal fees and costs, arising out of or in any way connected with their use or misuse of this repository, its content, or related third-party APIs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Updates and Changes&lt;/strong&gt;: The author reserves the right to modify, update, or remove any content, information, or features in this repository at any time without prior notice. Users are responsible for regularly reviewing the content and any changes made to this repository.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;By using this repository or any code related to it, you agree to these terms. The author is not responsible for any copies, forks, or reuploads made by other users. This is the author&#39;s only account and repository. To prevent impersonation or irresponsible actions, you may comply with the GNU GPL license this Repository uses.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jxnl/openai_function_call</title>
    <updated>2023-06-24T01:45:00Z</updated>
    <id>tag:github.com,2023-06-24:/jxnl/openai_function_call</id>
    <link href="https://github.com/jxnl/openai_function_call" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Helper functions to create openai function calls w/ pydantic&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pydantic is all you need: An OpenAI Function Call Pydantic Integration Module&lt;/h1&gt; &#xA;&lt;p&gt;We try to provides a powerful and efficient approach to output parsing when interacting with OpenAI&#39;s Function Call API. One that is framework agnostic and minimizes any dependencies. It leverages the data validation capabilities of the Pydantic library to handle output parsing in a more structured and reliable manner. If you have any feedback, leave an issue or hit me up on &lt;a href=&#34;https://twitter.com/jxnlco&#34;&gt;twitter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This repo also contains a range of examples I&#39;ve used in experimetnation and in production and I welcome new contributions for different types of schemas.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Follow me on twitter and consider helping pay for openai tokens!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/jxnlco&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/https/twitter.com/jxnlco.svg?style=social&amp;amp;label=Follow%20%40jxnlco&#34; alt=&#34;Twitter URL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.buymeacoffee.com/jxnl&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;&amp;quot;Buy Me A Coffee&amp;quot;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pip install openai_function_call&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;To get started, clone the repository&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/jxnl/openai_function_call.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, install the necessary Python packages from the requirements.txt file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Poetry&lt;/h3&gt; &#xA;&lt;p&gt;We also use poetry if you&#39;d like&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Your contributions are welcome! If you have great examples or find neat patterns, clone the repo and add another example. Check out the issues for any ideas if you want to learn. The goal is to find great patterns and cool examples to highlight.&lt;/p&gt; &#xA;&lt;p&gt;If you encounter any issues or want to provide feedback, you can create an issue in this repository. You can also reach out to me on Twitter at @jxnlco.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;This module simplifies the interaction with the OpenAI API, enabling a more structured and predictable conversation with the AI. Below are examples showcasing the use of function calls and schemas with OpenAI and Pydantic.&lt;/p&gt; &#xA;&lt;h3&gt;Example 1: Function Calls&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import openai&#xA;from openai_function_call import openai_function&#xA;&#xA;@openai_function&#xA;def sum(a:int, b:int) -&amp;gt; int:&#xA;    &#34;&#34;&#34;Sum description adds a + b&#34;&#34;&#34;&#xA;    return a + b&#xA;&#xA;completion = openai.ChatCompletion.create(&#xA;        model=&#34;gpt-3.5-turbo-0613&#34;,&#xA;        temperature=0,&#xA;        functions=[sum.openai_schema],&#xA;        messages=[&#xA;            {&#xA;                &#34;role&#34;: &#34;system&#34;,&#xA;                &#34;content&#34;: &#34;You must use the `sum` function instead of adding yourself.&#34;,&#xA;            },&#xA;            {&#xA;                &#34;role&#34;: &#34;user&#34;,&#xA;                &#34;content&#34;: &#34;What is 6+3 use the `sum` function&#34;,&#xA;            },&#xA;        ],&#xA;    )&#xA;&#xA;result = sum.from_response(completion)&#xA;print(result)  # 9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example 2: Schema Extraction&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import openai&#xA;from openai_function_call import OpenAISchema&#xA;&#xA;class UserDetails(OpenAISchema):&#xA;    &#34;&#34;&#34;User Details&#34;&#34;&#34;&#xA;    name: str = Field(..., description=&#34;User&#39;s name&#34;)&#xA;    age: int = Field(..., description=&#34;User&#39;s age&#34;)&#xA;&#xA;completion = openai.ChatCompletion.create(&#xA;    model=&#34;gpt-3.5-turbo-0613&#34;,&#xA;    functions=[UserDetails.openai_schema]&#xA;    messages=[&#xA;        {&#34;role&#34;: &#34;system&#34;, &#34;content&#34;: &#34;I&#39;m going to ask for user details. Use UserDetails to parse this data.&#34;},&#xA;        {&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;My name is John Doe and I&#39;m 30 years old.&#34;},&#xA;    ],&#xA;)&#xA;&#xA;user_details = UserDetails.from_response(completion)&#xA;print(user_details)  # UserDetails(name=&#34;John Doe&#34;, age=30)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Advanced Usage&lt;/h2&gt; &#xA;&lt;p&gt;If you want to see more examples checkout the examples folder!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the terms of the MIT license.&lt;/p&gt; &#xA;&lt;p&gt;For more details, refer to the LICENSE file in the repository.&lt;/p&gt;</summary>
  </entry>
</feed>