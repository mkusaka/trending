<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-30T01:39:44Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>shengqiangzhang/examples-of-web-crawlers</title>
    <updated>2022-10-30T01:39:44Z</updated>
    <id>tag:github.com,2022-10-30:/shengqiangzhang/examples-of-web-crawlers</id>
    <link href="https://github.com/shengqiangzhang/examples-of-web-crawlers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一些非常有趣的python爬虫例子,对新手比较友好,主要爬取淘宝、天猫、微信、微信读书、豆瓣、QQ等网站。(Some interesting examples of python crawlers that are friendly to beginners. )&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;p align=&#34;center&#34;&gt;一些非常有趣的python爬虫例子,对新手比较友好&lt;/p&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/shengqiangzhang/examples-of-web-crawlers&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/status-updating-brightgreen.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/python/cpython&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-3.7-FF1493.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/mit-license.php&#34;&gt;&lt;img src=&#34;https://badges.frapsoft.com/os/mit/mit.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/shengqiangzhang/examples-of-web-crawlers/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/shengqiangzhang/examples-of-web-crawlers?color=blue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/shengqiangzhang/examples-of-web-crawlers/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/shengqiangzhang/examples-of-web-crawlers.svg?logo=github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/shengqiangzhang/examples-of-web-crawlers/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/shengqiangzhang/examples-of-web-crawlers.svg?color=blue&amp;amp;logo=github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.python.org/&#34;&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/c/c3/Python-logo-notext.svg?sanitize=true&#34; align=&#34;right&#34; height=&#34;48&#34; width=&#34;48&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;项目简介&lt;/h2&gt; &#xA;&lt;p&gt;一些常见的网站爬虫例子，代码通用性较高，时效性较久。&lt;strong&gt;项目代码对新手比较友好&lt;/strong&gt;，尽量用简单的python代码，并配有大量注释。&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;如何下载&lt;/h2&gt; &#xA;&lt;p&gt;没有或不懂如何设置代理的&lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/chinese_flag.png&#34; alt=&#34;chinese_flag&#34;&gt;&lt;strong&gt;中国用户&lt;/strong&gt;, 可跳转至镜像仓库&lt;a href=&#34;https://gitee.com/shengqiangzhang/examples-of-web-crawlers&#34;&gt;码云Gitee&lt;/a&gt;进行下载, 以便获得较快的下载速度。&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/1.%E6%B7%98%E5%AE%9D%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95&#34;&gt;1.淘宝模拟登录&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;使用教程&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;点击这里下载&lt;/a&gt;下载chrome浏览器&lt;/li&gt; &#xA; &lt;li&gt;查看chrome浏览器的版本号，&lt;a href=&#34;http://chromedriver.storage.googleapis.com/index.html&#34;&gt;点击这里下载&lt;/a&gt;对应版本号的chromedriver驱动&lt;/li&gt; &#xA; &lt;li&gt;pip安装下列包 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; pip install selenium&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://account.weibo.com/set/bindsns/bindtaobao&#34;&gt;点击这里&lt;/a&gt;登录微博，并通过微博绑定淘宝账号密码&lt;/li&gt; &#xA; &lt;li&gt;在main中填写chromedriver的绝对路径&lt;/li&gt; &#xA; &lt;li&gt;在main中填写微博账号密码&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#改成你的chromedriver的完整路径地址&#xA;chromedriver_path = &#34;/Users/bird/Desktop/chromedriver.exe&#34; &#xA;#改成你的微博账号&#xA;weibo_username = &#34;改成你的微博账号&#34;&#xA;#改成你的微博密码&#xA;weibo_password = &#34;改成你的微博密码&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;演示图片&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/1.%E6%B7%98%E5%AE%9D%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95/example.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/2.%E5%A4%A9%E7%8C%AB%E5%95%86%E5%93%81%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB(%E5%B7%B2%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95)&#34;&gt;2.天猫商品数据爬虫&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;使用教程&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;点击这里下载&lt;/a&gt;下载chrome浏览器&lt;/li&gt; &#xA; &lt;li&gt;查看chrome浏览器的版本号，&lt;a href=&#34;http://chromedriver.storage.googleapis.com/index.html&#34;&gt;点击这里下载&lt;/a&gt;对应版本号的chromedriver驱动&lt;/li&gt; &#xA; &lt;li&gt;pip安装下列包 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; pip install selenium&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; pip install pyquery&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://account.weibo.com/set/bindsns/bindtaobao&#34;&gt;点击这里&lt;/a&gt;登录微博，并通过微博绑定淘宝账号密码&lt;/li&gt; &#xA; &lt;li&gt;在main中填写chromedriver的绝对路径&lt;/li&gt; &#xA; &lt;li&gt;在main中填写微博账号密码&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#改成你的chromedriver的完整路径地址&#xA;chromedriver_path = &#34;/Users/bird/Desktop/chromedriver.exe&#34; &#xA;#改成你的微博账号&#xA;weibo_username = &#34;改成你的微博账号&#34;&#xA;#改成你的微博密码&#xA;weibo_password = &#34;改成你的微博密码&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;演示图片&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/2.%E5%A4%A9%E7%8C%AB%E5%95%86%E5%93%81%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB(%E5%B7%B2%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95)/example.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/2.%E5%A4%A9%E7%8C%AB%E5%95%86%E5%93%81%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB(%E5%B7%B2%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95)/example2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/3.%E6%B7%98%E5%AE%9D%E5%B7%B2%E4%B9%B0%E5%88%B0%E7%9A%84%E5%AE%9D%E8%B4%9D%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB(%E5%B7%B2%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95)&#34;&gt;3.爬取淘宝我已购买的宝贝数据&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;使用教程&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;点击这里下载&lt;/a&gt;下载chrome浏览器&lt;/li&gt; &#xA; &lt;li&gt;查看chrome浏览器的版本号，&lt;a href=&#34;http://chromedriver.storage.googleapis.com/index.html&#34;&gt;点击这里下载&lt;/a&gt;对应版本号的chromedriver驱动&lt;/li&gt; &#xA; &lt;li&gt;pip安装下列包 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; pip install selenium&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; pip install pyquery&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://account.weibo.com/set/bindsns/bindtaobao&#34;&gt;点击这里&lt;/a&gt;登录微博，并通过微博绑定淘宝账号密码&lt;/li&gt; &#xA; &lt;li&gt;在main中填写chromedriver的绝对路径&lt;/li&gt; &#xA; &lt;li&gt;在main中填写微博账号密码&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#改成你的chromedriver的完整路径地址&#xA;chromedriver_path = &#34;/Users/bird/Desktop/chromedriver.exe&#34; &#xA;#改成你的微博账号&#xA;weibo_username = &#34;改成你的微博账号&#34;&#xA;#改成你的微博密码&#xA;weibo_password = &#34;改成你的微博密码&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;演示图片&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/3.%E6%B7%98%E5%AE%9D%E5%B7%B2%E4%B9%B0%E5%88%B0%E7%9A%84%E5%AE%9D%E8%B4%9D%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB(%E5%B7%B2%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95)/example.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/3.%E6%B7%98%E5%AE%9D%E5%B7%B2%E4%B9%B0%E5%88%B0%E7%9A%84%E5%AE%9D%E8%B4%9D%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB(%E5%B7%B2%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95)/example2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/4.%E6%AF%8F%E5%A4%A9%E4%B8%8D%E5%90%8C%E6%97%B6%E9%97%B4%E6%AE%B5%E9%80%9A%E8%BF%87%E5%BE%AE%E4%BF%A1%E5%8F%91%E6%B6%88%E6%81%AF%E6%8F%90%E9%86%92%E5%A5%B3%E5%8F%8B&#34;&gt;4.每天不同时间段通过微信发消息提醒女友&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;简介&lt;/h3&gt; &#xA;&lt;p&gt;有时候，你很想关心她，但是你太忙了，以至于她一直抱怨，觉得你不够关心她。你暗自下决心，下次一定要准时发消息给她，哪怕是几句话，可是你又忘记了。你觉得自己很委屈😭，但是她又觉得你不负责。&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;现在，再不用担心了&lt;/strong&gt;，用python就可以给女友定时发提示消息了，&lt;strong&gt;而且不会漏过每一个关键时刻&lt;/strong&gt;，每天&lt;strong&gt;早上起床、中午吃饭、晚上吃饭、晚上睡觉&lt;/strong&gt;，都会准时发消息给她了，而且还可以让她&lt;strong&gt;学习英语单词&lt;/strong&gt;哦！&lt;/p&gt; &#xA;&lt;br&gt; 在生日来临之时，自动发祝福语。在节日来临之时，比如**三八妇女节、女神节、情人节、春节、圣诞节**，自动发问候语哦，再也不用担心他说你没有仪式感了😀 &#xA;&lt;br&gt; &#xA;&lt;p&gt;最重要的时候，实时可以知道女友的&lt;strong&gt;情感情绪指数&lt;/strong&gt;哦，再也不用担心女友莫名其妙生气了。&lt;/p&gt; &#xA;&lt;h3&gt;使用教程&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;pip安装下列包&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; pip install wxpy&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; pip install requests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;设置以下内容&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 设置config.ini相关信息&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;演示图片&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;4.每天不同时间段通过微信发消息提醒女友/example1.png&#34; width=&#34;310&#34; alt=&#34;example1&#34;&gt;&lt;img src=&#34;4.每天不同时间段通过微信发消息提醒女友/example2.png&#34; width=&#34;310&#34; alt=&#34;example2&#34;&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;4.每天不同时间段通过微信发消息提醒女友/example3.png&#34; width=&#34;620&#34; alt=&#34;example3&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/5.%E7%88%AC%E5%8F%965K%E5%88%86%E8%BE%A8%E7%8E%87%E8%B6%85%E6%B8%85%E5%94%AF%E7%BE%8E%E5%A3%81%E7%BA%B8&#34;&gt;5.爬取5K分辨率超清唯美壁纸&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;简介&lt;/h3&gt; &#xA;&lt;p&gt;壁纸的选择其实很大程度上能看出电脑主人的内心世界，有的人喜欢风景，有的人喜欢星空，有的人喜欢美女，有的人喜欢动物。然而，终究有一天你已经产生审美疲劳了，但你下定决定要换壁纸的时候，又发现网上的壁纸要么分辨率低，要么带有水印。&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;这里有一款Mac下的小清新壁纸神器&lt;a href=&#34;http://paper.meiyuan.in/&#34;&gt;Pap.er&lt;/a&gt;，可能是Mac下最好的壁纸软件，&lt;strong&gt;自带5K超清分辨率壁纸&lt;/strong&gt;，富有多种类型壁纸，当我们想在Windows或者Linux下使用的时候，就可以考虑将&lt;strong&gt;5K超清分辨率壁纸&lt;/strong&gt;爬取下来。&lt;/p&gt; &#xA;&lt;h3&gt;功能截图&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/5.%E7%88%AC%E5%8F%965K%E5%88%86%E8%BE%A8%E7%8E%87%E8%B6%85%E6%B8%85%E5%94%AF%E7%BE%8E%E5%A3%81%E7%BA%B8/example1.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/5.%E7%88%AC%E5%8F%965K%E5%88%86%E8%BE%A8%E7%8E%87%E8%B6%85%E6%B8%85%E5%94%AF%E7%BE%8E%E5%A3%81%E7%BA%B8/example2.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;如何运行&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 跳转到当前目录&#xA;cd 目录名&#xA;# 先卸载依赖库&#xA;pip uninstall -y -r requirement.txt&#xA;# 再重新安装依赖库&#xA;pip install -r requirement.txt -i https://pypi.tuna.tsinghua.edu.cn/simple&#xA;# 开始运行&#xA;python main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/6.%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3%E6%8E%92%E8%A1%8C%E6%A6%9C%E7%94%B5%E5%BD%B1%E6%95%B0%E6%8D%AE(%E5%90%ABGUI%E7%95%8C%E9%9D%A2%E7%89%88)&#34;&gt;6.爬取豆瓣排行榜电影数据(含GUI界面版)&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;项目简介&lt;/h3&gt; &#xA;&lt;p&gt;这个项目源于大三某课程设计。平常经常需要搜索一些电影，但是不知道哪些评分高且评价人数多的电影。为了方便使用，就将原来的项目重新改写了。当做是对爬虫技术、可视化技术的实践了。主要是通过从排行榜和从影片关键词两种方式爬取电影数据。&lt;/p&gt; &#xA;&lt;h3&gt;功能截图&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/6.%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3%E6%8E%92%E8%A1%8C%E6%A6%9C%E7%94%B5%E5%BD%B1%E6%95%B0%E6%8D%AE(%E5%90%ABGUI%E7%95%8C%E9%9D%A2%E7%89%88)/example_rating.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;如何运行&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;打开Chrome浏览器，在网址栏输入chrome://version/查询当前Chrome版本&lt;/li&gt; &#xA; &lt;li&gt;打开&lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;http://chromedriver.storage.googleapis.com/index.html&lt;/a&gt;，下载对应版本的chromedriver驱动，&lt;strong&gt;下载完成后务必解压&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;打开当前目录下的文件&lt;code&gt;getMovieInRankingList.py&lt;/code&gt;，定位到第&lt;code&gt;107行&lt;/code&gt;，将&lt;code&gt;executable_path=./chromedriver.exe&lt;/code&gt;修改为你的chromedriver驱动路径&lt;/li&gt; &#xA; &lt;li&gt;执行命令&lt;code&gt;pip install -r requirement.txt&lt;/code&gt;安装程序所需的依赖包&lt;/li&gt; &#xA; &lt;li&gt;执行命令&lt;code&gt;python main.py&lt;/code&gt;运行程序&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;包含功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 根据关键字搜索电影&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 根据排行榜(TOP250)搜索电影&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 显示IMDB评分及其他基本信息&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 提供多个在线视频站点，无需vip&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 提供多个云盘站点搜索该视频，以便保存到云盘&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 提供多个站点下载该视频&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 等待更新&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/7.%E7%88%AC%E5%8F%96%E5%A4%A9%E5%A4%A9%E5%9F%BA%E9%87%91%E7%BD%91%E6%89%80%E6%9C%89%E5%9F%BA%E9%87%91%E6%95%B0%E6%8D%AE&#34;&gt;7.多线程+代理池爬取天天基金网、股票数据(无需使用爬虫框架)&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;简介&lt;/h3&gt; &#xA;&lt;p&gt;提到爬虫，大部分人都会想到使用Scrapy工具，但是仅仅停留在会使用的阶段。为了增加对爬虫机制的理解，我们可以手动实现多线程的爬虫过程，同时，引入IP代理池进行基本的反爬操作。&lt;/p&gt; &#xA;&lt;p&gt;本次使用天天基金网进行爬虫，该网站具有反爬机制，同时数量足够大，多线程效果较为明显。&lt;/p&gt; &#xA;&lt;h3&gt;技术路线&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;IP代理池&lt;/li&gt; &#xA; &lt;li&gt;多线程&lt;/li&gt; &#xA; &lt;li&gt;爬虫与反爬&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;数据格式&lt;/h3&gt; &#xA;&lt;p&gt;000056,建信消费升级混合,2019-03-26,1.7740,1.7914,0.98,2019-03-27 15:00&lt;/p&gt; &#xA;&lt;p&gt;000031,华夏复兴混合,2019-03-26,1.5650,1.5709,0.38,2019-03-27 15:00&lt;/p&gt; &#xA;&lt;p&gt;000048,华夏双债增强债券C,2019-03-26,1.2230,1.2236,0.05,2019-03-27 15:00&lt;/p&gt; &#xA;&lt;p&gt;000008,嘉实中证500ETF联接A,2019-03-26,1.4417,1.4552,0.93,2019-03-27 15:00&lt;/p&gt; &#xA;&lt;p&gt;000024,大摩双利增强债券A,2019-03-26,1.1670,1.1674,0.04,2019-03-27 15:00&lt;/p&gt; &#xA;&lt;p&gt;000054,鹏华双债增利债券,2019-03-26,1.1697,1.1693,-0.03,2019-03-27 15:00&lt;/p&gt; &#xA;&lt;p&gt;000016,华夏纯债债券C,2019-03-26,1.1790,1.1793,0.03,2019-03-27 15:00&lt;/p&gt; &#xA;&lt;h3&gt;功能截图&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/7.%E7%88%AC%E5%8F%96%E5%A4%A9%E5%A4%A9%E5%9F%BA%E9%87%91%E7%BD%91%E6%89%80%E6%9C%89%E5%9F%BA%E9%87%91%E6%95%B0%E6%8D%AE/example.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;配置说明&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#x9;# 确保安装以下库，如果没有，请在python3环境下执行pip install 模块名&#xA;&#x9;import requests&#xA;&#x9;import random&#xA;&#x9;import re&#xA;&#x9;import queue&#xA;&#x9;import threading&#xA;&#x9;import csv&#xA;&#x9;import json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/8.%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90%E5%BE%AE%E4%BF%A1%E4%B8%AA%E4%BA%BA%E4%B8%93%E5%B1%9E%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%91%8A(%E4%BA%86%E8%A7%A3%E4%BD%A0%E7%9A%84%E5%BE%AE%E4%BF%A1%E7%A4%BE%E4%BA%A4%E5%8E%86%E5%8F%B2)&#34;&gt;8.一键生成微信个人专属数据报告(了解你的微信社交历史))&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;简介&lt;/h3&gt; &#xA;&lt;p&gt;你是否想过生成一份属于你的微信个人数据报告，了解你的微信社交历史。现在，我们基于python对微信好友进行全方位数据分析，包括：昵称、性别、年龄、地区、备注名、个性签名、头像、群聊、公众号等。&lt;/p&gt; &#xA;&lt;p&gt;其中，在分析好友类型方面，主要统计出你的陌生人、星标好友、不让他看我的朋友圈的好友、不看他的朋友圈的好友数据。在分析地区方面，主要统计所有好友在全国的分布以及对好友数最多的省份进行进一步分析。在其他方面，统计出你的好友性别比例、猜出你最亲密的好友，分析你的特殊好友，找出与你所在共同群聊数最多的好友数据，对你的好友个性签名进行分析，对你的好友头像进行分析，并进一步检测出使用真人头像的好友数据。&lt;/p&gt; &#xA;&lt;p&gt;目前网上关于这方面的数据分析文章比较多，但是运行起来比较麻烦，&lt;strong&gt;而本程序的运行十分简单，只需要扫码登录一步操作即可。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;功能截图&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/8.%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90%E5%BE%AE%E4%BF%A1%E4%B8%AA%E4%BA%BA%E4%B8%93%E5%B1%9E%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%91%8A(%E4%BA%86%E8%A7%A3%E4%BD%A0%E7%9A%84%E5%BE%AE%E4%BF%A1%E7%A4%BE%E4%BA%A4%E5%8E%86%E5%8F%B2)/example1.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/8.%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90%E5%BE%AE%E4%BF%A1%E4%B8%AA%E4%BA%BA%E4%B8%93%E5%B1%9E%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%91%8A(%E4%BA%86%E8%A7%A3%E4%BD%A0%E7%9A%84%E5%BE%AE%E4%BF%A1%E7%A4%BE%E4%BA%A4%E5%8E%86%E5%8F%B2)/example2.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/8.%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90%E5%BE%AE%E4%BF%A1%E4%B8%AA%E4%BA%BA%E4%B8%93%E5%B1%9E%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%91%8A(%E4%BA%86%E8%A7%A3%E4%BD%A0%E7%9A%84%E5%BE%AE%E4%BF%A1%E7%A4%BE%E4%BA%A4%E5%8E%86%E5%8F%B2)/example5.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/8.%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90%E5%BE%AE%E4%BF%A1%E4%B8%AA%E4%BA%BA%E4%B8%93%E5%B1%9E%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%91%8A(%E4%BA%86%E8%A7%A3%E4%BD%A0%E7%9A%84%E5%BE%AE%E4%BF%A1%E7%A4%BE%E4%BA%A4%E5%8E%86%E5%8F%B2)/example6.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/8.%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90%E5%BE%AE%E4%BF%A1%E4%B8%AA%E4%BA%BA%E4%B8%93%E5%B1%9E%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%91%8A(%E4%BA%86%E8%A7%A3%E4%BD%A0%E7%9A%84%E5%BE%AE%E4%BF%A1%E7%A4%BE%E4%BA%A4%E5%8E%86%E5%8F%B2)/example7.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/8.%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90%E5%BE%AE%E4%BF%A1%E4%B8%AA%E4%BA%BA%E4%B8%93%E5%B1%9E%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%91%8A(%E4%BA%86%E8%A7%A3%E4%BD%A0%E7%9A%84%E5%BE%AE%E4%BF%A1%E7%A4%BE%E4%BA%A4%E5%8E%86%E5%8F%B2)/example8.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/8.%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90%E5%BE%AE%E4%BF%A1%E4%B8%AA%E4%BA%BA%E4%B8%93%E5%B1%9E%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%91%8A(%E4%BA%86%E8%A7%A3%E4%BD%A0%E7%9A%84%E5%BE%AE%E4%BF%A1%E7%A4%BE%E4%BA%A4%E5%8E%86%E5%8F%B2)/example10.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;如何运行&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 跳转到当前目录&#xA;cd 目录名&#xA;# 先卸载依赖库&#xA;pip uninstall -y -r requirement.txt&#xA;# 再重新安装依赖库&#xA;pip install -r requirement.txt&#xA;# 开始运行&#xA;python generate_wx_data.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;如何打包成二进制可执行文件&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 安装pyinstaller&#xA;pip install pyinstaller&#xA;# 跳转到当前目录&#xA;cd 目录名&#xA;# 先卸载依赖库&#xA;pip uninstall -y -r requirement.txt&#xA;# 再重新安装依赖库&#xA;pip install -r requirement.txt&#xA;# 更新 setuptools&#xA;pip install --upgrade setuptools&#xA;# 开始打包&#xA;pyinstaller generate_wx_data.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/9.%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90QQ%E4%B8%AA%E4%BA%BA%E5%8E%86%E5%8F%B2%E6%8A%A5%E5%91%8A&#34;&gt;9.一键生成QQ个人历史报告&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;简介&lt;/h3&gt; &#xA;&lt;p&gt;近几年，由于微信的流行，大部分人不再频繁使用QQ，所以我们对于自己的QQ数据并不是特别了解。我相信，如果能够生成一份属于自己的QQ历史报告，那将是无比开心的一件事。&lt;/p&gt; &#xA;&lt;p&gt;目前网上关于QQ的数据分析工具较少，原因是QQ相关接口比较复杂。&lt;strong&gt;而本程序的运行十分简单，具有良好的用户交互界面，只需要扫码登录一步操作即可。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;目前本程序获取的数据包括：QQ详细数据、手机在线时间、非隐身状态下在线时间、QQ活跃时间、单向好友数量、QQ财产分析、群聊分析、过去一年我退出的群聊数据、退去一个月我删除的好友数据、所有代付信息、我最在意的人以及最在意我的人。&lt;strong&gt;由于相关的数据接口有访问限制，所以本程序并没有对QQ好友进行分析。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;功能截图&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/9.%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90QQ%E4%B8%AA%E4%BA%BA%E5%8E%86%E5%8F%B2%E6%8A%A5%E5%91%8A/example1.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/9.%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90QQ%E4%B8%AA%E4%BA%BA%E5%8E%86%E5%8F%B2%E6%8A%A5%E5%91%8A/example2.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/9.%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90QQ%E4%B8%AA%E4%BA%BA%E5%8E%86%E5%8F%B2%E6%8A%A5%E5%91%8A/example3.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/9.%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90QQ%E4%B8%AA%E4%BA%BA%E5%8E%86%E5%8F%B2%E6%8A%A5%E5%91%8A/example4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;如何运行&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 跳转到当前目录&#xA;cd 目录名&#xA;# 先卸载依赖库&#xA;pip uninstall -y -r requirement.txt&#xA;# 再重新安装依赖库&#xA;pip install -r requirement.txt&#xA;# 开始运行&#xA;python main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/10.%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90%E4%B8%AA%E4%BA%BA%E5%BE%AE%E4%BF%A1%E6%9C%8B%E5%8F%8B%E5%9C%88%E6%95%B0%E6%8D%AE%E7%94%B5%E5%AD%90%E4%B9%A6&#34;&gt;10.一键生成个人微信朋友圈数据电子书&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;简介&lt;/h3&gt; &#xA;&lt;p&gt;微信朋友圈保留着你的数据，它留住了美好的回忆，记录了我们成长的点点滴滴。发朋友圈从某种意义上来讲是在记录生活，感受生活，并从中看到了每个人每一步的成长。&lt;/p&gt; &#xA;&lt;p&gt;这么一份珍贵的记忆，何不将它保存下来呢？只需一杯咖啡的时间，即可一键打印你的朋友圈。它可以是纸质书，也可以是电子书，可以长久保存，比洗照片好，又有时间足迹记忆。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;这本书，可以用来：&lt;/li&gt; &#xA; &lt;li&gt;送给孩子的生日礼物&lt;/li&gt; &#xA; &lt;li&gt;送给伴侣的生日礼物&lt;/li&gt; &#xA; &lt;li&gt;送给未来的自己&lt;/li&gt; &#xA; &lt;li&gt;……&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;现在，你可以选择打印电子书或者纸质书。打印纸质书的话，可以找第三方机构花钱购买；&lt;strong&gt;打印电子书的话，我们完全可以自己动手生成，这可以省下一笔不小的开支&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;功能截图&lt;/h3&gt; &#xA;&lt;p&gt;在开始写代码思路之前，我们先看看最终生成的效果。&lt;/p&gt; &#xA;&lt;h3&gt;电子书效果(图片引用自&lt;a href=&#34;https://chushu.la/&#34;&gt;出书啦&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/10.%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90%E4%B8%AA%E4%BA%BA%E5%BE%AE%E4%BF%A1%E6%9C%8B%E5%8F%8B%E5%9C%88%E6%95%B0%E6%8D%AE%E7%94%B5%E5%AD%90%E4%B9%A6/image/page1.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/10.%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90%E4%B8%AA%E4%BA%BA%E5%BE%AE%E4%BF%A1%E6%9C%8B%E5%8F%8B%E5%9C%88%E6%95%B0%E6%8D%AE%E7%94%B5%E5%AD%90%E4%B9%A6/image/page2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;纸质书效果(图片引用自&lt;a href=&#34;https://weixinshu.com/library/unboxing&#34;&gt;心书&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/10.%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90%E4%B8%AA%E4%BA%BA%E5%BE%AE%E4%BF%A1%E6%9C%8B%E5%8F%8B%E5%9C%88%E6%95%B0%E6%8D%AE%E7%94%B5%E5%AD%90%E4%B9%A6/image/page3.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;如何运行&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 跳转到当前目录&#xA;cd 目录名&#xA;# 先卸载依赖库&#xA;pip uninstall -y -r requirement.txt&#xA;# 再重新安装依赖库&#xA;pip install -r requirement.txt&#xA;# 开始运行&#xA;python main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/11.%E4%B8%80%E9%94%AE%E5%88%86%E6%9E%90%E4%BD%A0%E7%9A%84%E4%B8%8A%E7%BD%91%E8%A1%8C%E4%B8%BA(web%E9%A1%B5%E9%9D%A2%E5%8F%AF%E8%A7%86%E5%8C%96)&#34;&gt;11.一键分析你的上网行为(web页面可视化)&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;简介&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;想看看你最近一年都在干嘛？看看你平时上网是在摸鱼还是认真工作？想写年度汇报总结，但是苦于没有数据？现在，它来了。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;这是一个能让你了解自己的浏览历史的Chrome浏览历史记录分析程序，&lt;strong&gt;他适用于Chrome浏览器或者以Chromium为内核的浏览器。目前国内大部分浏览器均是以Chromium为内核的浏览器，所以基本上都可以使用。但是不支持以下浏览器：IE浏览器、Firefox浏览器、Safari浏览器。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;在该页面中你将可以查看有关自己在过去的时间里所访问浏览的域名、URL以及忙碌天数的前十排名以及相关的数据图表。&lt;/p&gt; &#xA;&lt;h3&gt;功能截图&lt;/h3&gt; &#xA;&lt;p&gt;在开始写代码思路之前，我们先看看最终生成的效果。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/11.%E4%B8%80%E9%94%AE%E5%88%86%E6%9E%90%E4%BD%A0%E7%9A%84%E4%B8%8A%E7%BD%91%E8%A1%8C%E4%B8%BA(web%E9%A1%B5%E9%9D%A2%E5%8F%AF%E8%A7%86%E5%8C%96)/demo.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;如何运行&lt;/h3&gt; &#xA;&lt;p&gt;在线演示程序:&lt;a href=&#34;http://39.106.118.77:8090&#34;&gt;http://39.106.118.77:8090&lt;/a&gt;(普通服务器，勿测压)&lt;/p&gt; &#xA;&lt;p&gt;运行本程序十分简单，只需要按照以下命令即可运行：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 跳转到当前目录&#xA;cd 目录名&#xA;# 先卸载依赖库&#xA;pip uninstall -y -r requirement.txt&#xA;# 再重新安装依赖库&#xA;pip install -r requirement.txt&#xA;# 开始运行&#xA;python app.py&#xA;&#xA;# 运行成功后，通过浏览器打开http://localhost:8090&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/12.%E4%B8%80%E9%94%AE%E5%AF%BC%E5%87%BA%E5%BE%AE%E4%BF%A1%E8%AF%BB%E4%B9%A6%E7%9A%84%E4%B9%A6%E7%B1%8D%E5%92%8C%E7%AC%94%E8%AE%B0&#34;&gt;12.一键导出微信读书的书籍和笔记&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;本项目基于&lt;a href=&#34;https://github.com/arry-lee&#34;&gt;@arry-lee&lt;/a&gt;的项目&lt;a href=&#34;https://github.com/arry-lee/wereader/issues/20&#34;&gt;wereader&lt;/a&gt;修改而来，感谢原作者提供的源代码。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;简介&lt;/h3&gt; &#xA;&lt;p&gt;全民阅读的时代已经来临，目前使用读书软件的用户数2.1亿，日活跃用户超过500万，其中19-35岁年轻用户占比超过60%，本科及以上学历用户占比高达80%，北上广深及其他省会城市/直辖市用户占比超过80%。&lt;strong&gt;本人习惯使用微信读书，为了方便整理书籍和导出笔记，便开发了这个小工具。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;功能截图&lt;/h3&gt; &#xA;&lt;p&gt;在开始写代码思路之前，我们先看看最终生成的效果。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/12.%E4%B8%80%E9%94%AE%E5%AF%BC%E5%87%BA%E5%BE%AE%E4%BF%A1%E8%AF%BB%E4%B9%A6%E7%9A%84%E4%B9%A6%E7%B1%8D%E5%92%8C%E7%AC%94%E8%AE%B0/demo1.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/shengqiangzhang/examples-of-web-crawlers/master/12.%E4%B8%80%E9%94%AE%E5%AF%BC%E5%87%BA%E5%BE%AE%E4%BF%A1%E8%AF%BB%E4%B9%A6%E7%9A%84%E4%B9%A6%E7%B1%8D%E5%92%8C%E7%AC%94%E8%AE%B0/demo2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;如何运行&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 跳转到当前目录&#xA;cd 目录名&#xA;# 先卸载依赖库&#xA;pip uninstall -y -r requirement.txt&#xA;# 再重新安装依赖库&#xA;pip install -r requirement.txt -i https://pypi.tuna.tsinghua.edu.cn/simple&#xA;# 开始运行&#xA;python pyqt_gui.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;补充&lt;/h2&gt; &#xA;&lt;p&gt;项目持续更新，欢迎您&lt;a href=&#34;https://github.com/shengqiangzhang/examples-of-web-crawlers&#34;&gt;star本项目&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;The MIT License (MIT)&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kelvinBen/AppInfoScanner</title>
    <updated>2022-10-30T01:39:44Z</updated>
    <id>tag:github.com,2022-10-30:/kelvinBen/AppInfoScanner</id>
    <link href="https://github.com/kelvinBen/AppInfoScanner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一款适用于以HW行动/红队/渗透测试团队为场景的移动端(Android、iOS、WEB、H5、静态网站)信息收集扫描工具，可以帮助渗透测试工程师、攻击队成员、红队成员快速收集到移动端或者静态WEB站点中关键的资产信息并提供基本的信息输出,如：Title、Domain、CDN、指纹信息、状态信息等。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Version-V1.0.8-red&#34; alt=&#34;License&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Language-Python3-blue&#34; alt=&#34;Language&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-GPL3.0-orange&#34; alt=&#34;License&#34;&gt; &lt;a href=&#34;http://hits.dwyl.com/kelvinBen/kelvinBen/AppInfoScanner&#34;&gt;&lt;img src=&#34;https://hits.dwyl.com/kelvinBen/kelvinBen/AppInfoScanner.svg?style=flat&amp;amp;show=unique&#34; alt=&#34;HitCount&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;该项目目前仅仅是规划项目中的冰山一角，如果您对此项目感兴趣或者想参与后继项目的开发工作或者翻译工作中，请发送邮件至&lt;a href=&#34;mailto:blsm@vip.qq.com&#34;&gt;blsm@vip.qq.com&lt;/a&gt;说明你的能力和诉求。&lt;/p&gt; &#xA;&lt;h2&gt;AppInfoScanner&lt;/h2&gt; &#xA;&lt;p&gt;一款适用于以HW行动/红队/渗透测试团队为场景的移动端(Android、iOS、WEB、H5、静态网站)信息收集扫描工具，可以帮助渗透测试工程师、攻击队成员、红队成员快速收集到移动端或者静态WEB站点中关键的资产信息并提供基本的信息输出,如：Title、Domain、CDN、指纹信息、状态信息等。&lt;/p&gt; &#xA;&lt;h2&gt;前言&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本项目的开发者目前为个人开发者同时有自己的工作，新的功能或者需求会在闲暇时间进行开发，BUG会优先进行处理。&lt;/li&gt; &#xA; &lt;li&gt;如果在使用中遇到问题或者有新的需求，请在&lt;a href=&#34;https://github.com/kelvinBen/AppInfoScanner/issues&#34;&gt;&lt;/a&gt;提交BUG反馈，提交BUG前请先阅读最后的&#34;常见问题&#34;。&lt;/li&gt; &#xA; &lt;li&gt;如果您觉得这个项目对您有用，请点击本项目右上角的&#34;star&#34;按钮。&lt;/li&gt; &#xA; &lt;li&gt;如果您想持续跟进新的版本情况，请点击本项目右上角的&#34;Watch&#34;按钮。&lt;/li&gt; &#xA; &lt;li&gt;如果您想参与本项目的开发，请点击本项目右上角的&#34;Fork&#34;按钮,否则请勿点击&#34;Fork&#34;按钮。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;免责声明&lt;/h2&gt; &#xA;&lt;p&gt;请勿将本项目技术或代码应用在恶意软件制作、软件著作权/知识产权盗取或不当牟利等&lt;strong&gt;非法用途&lt;/strong&gt;中。实施上述行为或利用本项目对非自己著作权所有的程序进行数据嗅探将涉嫌违反《中华人民共和国刑法》第二百一十七条、第二百八十六条，《中华人民共和国网络安全法》《中华人民共和国计算机软件保护条例》等法律规定。本项目提及的技术仅可用于私人学习测试等合法场景中，任何不当利用该技术所造成的刑事、民事责任均与本项目作者无关。&lt;/p&gt; &#xA;&lt;h2&gt;适用场景&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;日常渗透测试中对APP中进行关键资产信息收集，比如URL地址、IP地址、关键字等信息的采集等。&lt;/li&gt; &#xA; &lt;li&gt;大型攻防演练场景中对APP中进行关键资产信息收集，比如URL地址、IP地址、关键字等信息的采集等。&lt;/li&gt; &#xA; &lt;li&gt;对WEB网站源代码进行URL地址、IP地址、关键字等信息进行采集等(可以是开源的代码也可以是右击网页源代码另存为)。&lt;/li&gt; &#xA; &lt;li&gt;对H5页面进行进行URL地址、IP地址、关键字等信息进行采集等。&lt;/li&gt; &#xA; &lt;li&gt;对某个APP进行定相信息收集等&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;功能介绍:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持目录级别的批量扫描&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持DEX、APK、IPA、MACH-O、HTML、JS、Smali、ELF等文件的信息收集&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持APK、IPA、H5等文件自动下载并进行一键信息收集&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持自定义请求头、请求报文、请求方法&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持规则自定义，随心自定义扫描规则&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持自定义忽略资源文件&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持自定义配置Android壳规则&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持自定义配置中间件规则&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持Android加固壳、iPA官方壳的检测&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持IP地址、URL地址、中间件(json组件和xml组件)的信息采集&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持Android对应包名下内容的采集&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持网络嗅探功能，可以提供基本的信息输出&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持Windows系统、MacOS系统、*nux系列的系统&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 具备简单的AI识别功能，可以快速过滤三方URL地址&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 指纹识别模块&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 添加国际化语言包&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 一键对APK文件进行自动修复&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 识别到壳后自动进行脱壳处理&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;部分截图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kelvinBen/AppInfoScanner/master/result.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;环境说明&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apk文件解析需要使用JAVA环境,JAVA版本1.8及以下&lt;/li&gt; &#xA; &lt;li&gt;Python3的运行环境&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;目录说明&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;AppInfoScanner&#xA;    |-- libs  程序的核心代码&#xA;        |-- core&#xA;            |-- __init__.py 全局配置信息&#xA;            |-- parses.py 用于解析文件中的静态信息&#xA;            |-- download.py 用于自动下载APP或者H5页面&#xA;            |-- net.py 用于进行网络嗅探，并获取基本信息&#xA;        |-- task&#xA;            |-- __init__.py 目录初始化文件&#xA;            |-- base_task.py 统一任务调度中心&#xA; &#x9;&#x9;&#x9;|-- android_task.py 用于处理Android相关的任务&#xA;            |-- download_task.py 用于处理自动下载APP或者H5的任务            &#xA;​&#x9;&#x9;&#x9; |-- ios_task.py 用于处理iOS相关的任务&#xA;            |-- net_task.py 用于处理网络嗅探相关任务&#xA;​            |-- web_task.py 用于处理Web相关的任务，比如网页右键源代码、H5相关的静态信息&#xA;​    |-- tools 程序需要依赖的工具&#xA;​        |-- apktool.jar 用于反编译apk文件，不同平台可能需要进行自我切换&#xA;​        |-- baksmali.jar 用于反编译dex文件，不同平台可能需要进行自我切换&#xA;​        |-- strings.exe 用于windows 32下获取iPA的字符串信息&#xA;​        |-- strings64.exe 用于windows 64的系统获取iPA的字符串信息&#xA;​    |-- __init__.py 目录初始化文件 &#xA;    |-- app.py 主运行程序&#xA;​    |-- config.py 整个程序的配置文件&#xA;​    |-- README.md  程序使用说明&#xA;    |-- requirements.txt 程序中需要安装的依赖库&#xA;    |-- update.md 程序历史版本信息&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;使用说明&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;下载&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;    git clone https://github.com/kelvinBen/AppInfoScanner.git&#xA;    &#xA;    或者复制以下链接到浏览器下载最新正式版本&#xA;    &#xA;    https://github.com/kelvinBen/AppInfoScanner/releases/latest&#xA;&#xA;    国内快速下载通道:&#xA;&#xA;    git clone https://gitee.com/kelvin_ben/AppInfoScanner.git&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;安装依赖库&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;    cd AppInfoScanner&#xA;    python -m pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;运行(基础版)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;扫描Android应用的APK文件、DEX文件、需要下载的APK文件下载地址、保存需要扫描的文件的目录&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;    python app.py android -i &amp;lt;Your APK File or DEX File or APK Download Url or Save File Dir&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;扫描iOS应用的IPA文件、Mach-o文件、需要下载的IPA文件下载地址、保存需要扫描的文件目录&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;    python app.py ios -i &amp;lt;Your IPA file or Mach-o File or IPA Download Url or Save File Dir&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;扫描Web站点的文件、目录、需要缓存的站点URl&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;    python app.py web -i &amp;lt;Your Web file or Save Web Dir or Web Cache Url&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;进阶操作指南&lt;/h2&gt; &#xA;&lt;h3&gt;基本命令格式&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app.py [TYPE] [OPTIONS] &amp;lt;The URL or directory to scan&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;符号信息说明&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;&amp;gt; 代表需要扫描的文件或者目录或者URL地址&#xA;| 或的关系，只能选择一个&#xA;[] 代表需要输入的参数&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;TYPE参数详细说明&lt;/h3&gt; &#xA;&lt;p&gt;此参数类型对应基本命令格式中的[TYPE],目前仅支持[android/ios/web]三种类型形式，三种类型形式必须指定一个。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;android: 用于扫描Android应用相关的文件的内容&#xA;ios: 用于扫描iOS应用相关的文件内容&#xA;web: 用于扫描WEB站点或者H5相关的文件内容&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;支持自动根据后缀名称进行修正，即便输入的是ios，实际上-i 输入的参数的文件名为XXX.apk，则会执行android相关的扫描。&lt;/p&gt; &#xA;&lt;h3&gt;OPTIONS参数详细说明&lt;/h3&gt; &#xA;&lt;p&gt;该参数类型对应基本命令格式中的[OPTIONS]，支持多个参数共同使用&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-i 或者 --inputs: 输入需要进行扫描的文件、目录或者需要自动下载的文件URL地址，如果路径过长请加&#34;进行包裹，此参数为必填项。&#xA;-r 或者 --rules: 输入需要扫描文件内容的临时扫描规则。&#xA;-s 或者 --sniffer: 开启网络嗅探功能，默认为开启状态。&#xA;-n 或者 --no-resource: 忽略所有的资源文件，包含网络嗅探功能中的资源文件(需要先在config.py中配置sniffer_filter相关规则)，默认为不忽略资源。&#xA;-a 或者 --all: 输出所有符合扫描规则的结果集合，默认为开启状态。&#xA;-t 或者 --threads: 设置线程并发数量，默认为10个线程并发。&#xA;-o 或者 --output: 指定扫描结果和扫描过程中产生的临时文件的输出目录，默认为脚本所在的目录。&#xA;-p 或者 -- package: 指定Android的APK文件或者DEX文件需要扫描的JAVA包名信息。此参数只能在android类型下使用。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;具体使用方法&lt;/h3&gt; &#xA;&lt;h4&gt;Android相关基本操作&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;对本地APK文件进行扫描&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app.py android -i &amp;lt;Your apk file&amp;gt;  &#xA;&#xA;例:&#xA;&#xA;python app.py android -i  C:\Users\Administrator\Desktop\Demo.apk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;对本地Dex文件进行扫描&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app.py android -i &amp;lt;Your DEX file&amp;gt;  &#xA;&#xA;例:&#xA;&#xA;python app.py android -i  C:\Users\Administrator\Desktop\Demo.dex&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;对URL地址中包含的APK文件进行扫描&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app.py android -i &amp;lt;APK Download Url&amp;gt;  &#xA;&#xA;例:&#xA;&#xA;python app.py android -i &#34;https://127.0.0.1/Demo.apk&#34; &#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;需要注意此处如果URL地址过长需要使用双引号(&#34;)进行包裹&lt;/p&gt; &#xA;&lt;h4&gt;iOS相关基本操作&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;对本地IPA文件进行扫描&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app.py ios -i &amp;lt;Your ipa file&amp;gt;&#xA;&#xA;例:&#xA;&#xA;python app.py ios -i &#34;C:\Users\Administrator\Desktop\Demo.ipa&#34; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;对本地Macho文件进行扫描&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app.py ios -i &amp;lt;Your Mach-o file&amp;gt;&#xA;&#xA;例:&#xA;&#xA;python app.py ios -i &#34;C:\Users\Administrator\Desktop\Demo\Payload\Demo.app\Demo&#34; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;对URL地址中包含的IPA文件进行扫描&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app.py ios -i &amp;lt;IPA Download Url&amp;gt;  &#xA;&#xA;例:&#xA;&#xA;python app.py ios -i &#34;https://127.0.0.1/Demo.ipa&#34; &#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;需要注意此处如果URL地址过长需要使用双引号(&#34;)进行包裹,暂时不支持对Apple Store中的IPA文件进行扫描&lt;/p&gt; &#xA;&lt;h4&gt;Web相关基本操作&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;对本地WEB站点进行扫描&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app.py web -i &amp;lt;Your web file&amp;gt;&#xA;&#xA;例:&#xA;&#xA;python app.py web -i &#34;C:\Users\Administrator\Desktop\Demo.html&#34; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;对URL地址中包含的WEB站点文件进行扫描&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app.py web -i &amp;lt;Web Download Url&amp;gt;  &#xA;&#xA;例:&#xA;&#xA;python app.py web -i &#34;https://127.0.0.1/Demo.html&#34; &#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;具有共同性的操作&lt;/h4&gt; &#xA;&lt;p&gt;以下操作均以android类型为例：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;对一个本地的目录进行扫描&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app.py android -i &amp;lt;Your Dir&amp;gt;&#xA;&#xA;例：&#xA;&#xA;python app.py android -i C:\Users\Administrator\Desktop\Demo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加临时规则或者关键字&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app.py android -i &amp;lt;Your apk&amp;gt; -r &amp;lt;the keyword | the rules&amp;gt;&#xA;&#xA;例：&#xA;添加对百度域名的扫描&#xA;&#xA;python app.py android -i C:\Users\Administrator\Desktop\Demo.apk -r &#34;.*baidu.com.*&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;关闭网络嗅探功能&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app.py android -i &amp;lt;Your apk&amp;gt; -s&#xA;&#xA;例：&#xA;python app.py android -i C:\Users\Administrator\Desktop\Demo.apk -s&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;忽略所有的资源文件&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app.py android -i &amp;lt;Your apk&amp;gt; -n&#xA;&#xA;例：&#xA;python app.py android -i C:\Users\Administrator\Desktop\Demo.apk -n&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;关闭输出所有符合扫描规则内容的功能&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app.py android -i &amp;lt;Your apk&amp;gt; -a&#xA;&#xA;例：&#xA;&#xA;python app.py android -i C:\Users\Administrator\Desktop\Demo.apk -a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;设置并发数量&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app.py android -i &amp;lt;Your apk&amp;gt; -t 20&#xA;&#xA;例：&#xA;设置20个并发线程&#xA;python app.py android -i C:\Users\Administrator\Desktop\Demo.apk -t 20 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;指定结果集和缓存文件输出目录&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app.py android -i &amp;lt;Your apk&amp;gt; -o &amp;lt;output path&amp;gt;&#xA;&#xA;例：&#xA;比如输出到桌面的Temp目录&#xA;python app.py android -i C:\Users\Administrator\Desktop\Demo.apk -o C:\Users\Administrator\Desktop\Temp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;对指定包名下的文件内容进行扫描，该功能仅支持android类型&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python app.py android -i &amp;lt;Your apk&amp;gt; -p &amp;lt;Java package name&amp;gt;&#xA;&#xA;例：&#xA;比如需要过滤com.baidu包名下的内容&#xA;&#xA;python app.py android -i C:\Users\Administrator\Desktop\Demo.apk -p &#34;com.baidu&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;高级版使用说明&lt;/h2&gt; &#xA;&lt;p&gt;该项目中的程序仅作为一个基本的架子，会内置一些基本的规则，并不是每一个输入的内容都可以完成相关的扫描工作。所以可以根据自己的需要进行相关规则的配置，优秀的配置内容可以达到质的的效果。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;配置文件路径为 根目录下的config.py文件，即README.md的同级目录&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;配置项说明&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;filter_components: 此配置项用于配置相关组件内容，包括Json组件或者XML组件等&#xA;filter_strs: 用于配置需要进行扫描的文件内容，比如需要扫描端口号，则配置为：&#34;r&#39;.*://([\d{1,3}\.]{3}\d{1,3}).*&#39;&#34;&#xA;filter_no: 用于忽略扫描文件中不想要的内容&#xA;shell_list: 用于配置Android相关的壳特征&#xA;web_file_suffix: 此处配置需要进行扫描的WEB文件后缀名称&#xA;sniffer_filter: 此处用于配置需要进行忽略网络嗅探的文件后缀名称&#xA;headers: 用于配置自动下载过程中需要的请求头信息&#xA;data: 用于配置自动下载过程中需要的请求报文体&#xA;method: 用于配置自动下载过程中需要的请求方法&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;常见问题&lt;/h2&gt; &#xA;&lt;h3&gt;1. 信息检索垃圾数据过多？&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;方法1： 根据实际情况调整config.py中的规则信息&#xA;方法2： 忽略资源文件&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. 出现错误：Error: This application has shell, the retrieval results may not be accurate, Please remove the shell and try again!&lt;/h3&gt; &#xA;&lt;p&gt;说明需要扫描的应用存在壳，需要进行脱壳/砸壳以后才能进行扫描，目前可以结合以下工具进行脱壳/砸壳处理&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    &#xA;    Android:&#xA;        xposed模块： dexdump&#xA;        frida模块： FRIDA-DEXDump&#xA;        无Root脱壳：blackdex&#xA;    iOS:&#xA;        firda模块：&#xA;            windows系统使用： frida-ipa-dump&#xA;            MacOS系统使用：frida-ios-dump&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. 出现错误: File download failed! Please download the file manually and try again.&lt;/h3&gt; &#xA;&lt;p&gt;文件下载失败。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1) 请检查输入的URL地址是否正确&#xA;2）请检查网络是否存在问题或者在配置文件config.py中配置请求头信息(headers)、请求报文体(data)、请求方法(method)保存后重新再执行。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4. 出现错误：Decompilation failed, please submit error information at &lt;a href=&#34;https://github.com/kelvinBen/AppInfoScanner/issues&#34;&gt;https://github.com/kelvinBen/AppInfoScanner/issues&lt;/a&gt;&#34;&lt;/h3&gt; &#xA;&lt;p&gt;文件反编译失败。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;请将错误截图以及对应的APK文件提交至 https://github.com/kelvinBen/AppInfoScanner/issues，作者看到后会及时进行处理。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;自定义规则添加&lt;/h2&gt; &#xA;&lt;p&gt;自定义规则提交路径：&lt;/p&gt; &#xA;&lt;p&gt;[点击添加自定义规则](&lt;a href=&#34;https://github.com/kelvinBen/AppInfoScanner/issues/7%EF%BC%89&#34;&gt;https://github.com/kelvinBen/AppInfoScanner/issues/7）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;提交格式：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. APP自定义组件添加&#xA;&#xA;如： fastjson的规则如下：&#xA;APP组件: fastjson com.alibaba.fastjson&#xA;&#xA;2. 需要进行搜索的字符串&#xA;&#xA;如：查询阿里的AK规则如下:&#xA;字符串: &#xA;阿里云AK .*accessKeyId.*&#34;.*&#34;&#xA;&#xA;3. 需要搜素的web文件后缀名&#xA;&#xA;如：jsp文件的规则如下：&#xA;网站： java语言 jsp&#xA;&#xA;4. Android壳规则&#xA;如： 某数字公司的壳规则如下：&#xA;壳：某数字公司 com.stub.StubApp&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;联系作者&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;微信&lt;/strong&gt;：bromomo (添加好友请备注：GitHub)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;微信群&lt;/strong&gt;：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/19259171/177041407-66b627d7-39b5-40e7-9858-85dca5b4f958.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;如无法加入请添加微信好友后进群。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;邮箱&lt;/strong&gt;：&lt;a href=&#34;mailto:blsm@vip.qq.com&#34;&gt;blsm@vip.qq.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;提交需求、提交BUG修复、技术交流、商务合作均可添加作者好友。&lt;/p&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/kelvinBen/AppInfoScanner&#34;&gt;&lt;img src=&#34;https://starchart.cc/kelvinBen/AppInfoScanner.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;404StarLink 2.0 - Galaxy&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/knownsec/404StarLink-Project/raw/master/logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;AppInfoScanner 是 404Team &lt;a href=&#34;https://github.com/knownsec/404StarLink2.0-Galaxy&#34;&gt;星链计划2.0&lt;/a&gt;中的一环，如果对AppInfoScanner 有任何疑问又或是想要找小伙伴交流，可以参考星链计划的加群方式。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/knownsec/404StarLink2.0-Galaxy#community&#34;&gt;https://github.com/knownsec/404StarLink2.0-Galaxy#community&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>poloclub/diffusiondb</title>
    <updated>2022-10-30T01:39:44Z</updated>
    <id>tag:github.com,2022-10-30:/poloclub/diffusiondb</id>
    <link href="https://github.com/poloclub/diffusiondb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A large-scale text-to-image prompt gallery dataset based on Stable Diffusion&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DiffusionDB &lt;a href=&#34;https://huggingface.co/datasets/poloclub/diffusiondb&#34;&gt;&lt;img align=&#34;right&#34; src=&#34;https://raw.githubusercontent.com/poloclub/diffusiondb/main/favicon.ico&#34; height=&#34;40&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://huggingface.co/datasets/poloclub/diffusiondb&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Datasets-yellow&#34; alt=&#34;hugging&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/poloclub/diffusiondb/main/#licensing&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-CC0/MIT-blue&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/abs/2210.14896&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/arXiv-2210.14896-red&#34; alt=&#34;arxiv badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://poloclub.github.io/diffusiondb/datasheet.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Data%20Sheet-Available-success&#34; alt=&#34;datasheet&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- [![DOI:10.1145/3491101.3519653](https://img.shields.io/badge/DOI-10.1145/3491101.3519653-blue)](https://doi.org/10.1145/3491101.3519653) --&gt; &#xA;&lt;!-- ![](https://i.imgur.com/OJtU5zv.png) --&gt; &#xA;&lt;img width=&#34;100%&#34; src=&#34;https://user-images.githubusercontent.com/15007159/198505835-bcc3a34f-a782-4064-989b-135e32b577a7.gif&#34;&gt; &#xA;&lt;p&gt;DiffusionDB is the first large-scale text-to-image prompt dataset. It contains 2 million images generated by Stable Diffusion using prompts and hyperparameters specified by real users. The unprecedented scale and diversity of this human-actuated dataset provide exciting research opportunities in understanding the interplay between prompts and generative models, detecting deepfakes, and designing human-AI interaction tools to help users more easily use these models.&lt;/p&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;p&gt;DiffusionDB is available at &lt;a href=&#34;https://huggingface.co/datasets/poloclub/diffusiondb&#34;&gt;🤗 Hugging Face Datasets&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Dataset Structure&lt;/h2&gt; &#xA;&lt;p&gt;We use a modularized file structure to distribute DiffusionDB. The 2 million images in DiffusionDB are split into 2,000 folders, where each folder contains 1,000 images and a JSON file that links these 1,000 images to their prompts and hyperparameters.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./&#xA;├── images&#xA;│&amp;nbsp;&amp;nbsp; ├── part-000001&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── 3bfcd9cf-26ea-4303-bbe1-b095853f5360.png&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── 5f47c66c-51d4-4f2c-a872-a68518f44adb.png&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── 66b428b9-55dc-4907-b116-55aaa887de30.png&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── 99c36256-2c20-40ac-8e83-8369e9a28f32.png&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── f3501e05-aef7-4225-a9e9-f516527408ac.png&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── [...]&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; └── part-000001.json&#xA;│&amp;nbsp;&amp;nbsp; ├── part-000002&#xA;│&amp;nbsp;&amp;nbsp; ├── part-000003&#xA;│&amp;nbsp;&amp;nbsp; ├── part-000004&#xA;│&amp;nbsp;&amp;nbsp; ├── [...]&#xA;│&amp;nbsp;&amp;nbsp; └── part-002000&#xA;└── metadata.parquet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These sub-folders have names &lt;code&gt;part-00xxxx&lt;/code&gt;, and each image has a unique name generated by &lt;a href=&#34;https://en.wikipedia.org/wiki/Universally_unique_identifier&#34;&gt;UUID Version 4&lt;/a&gt;. The JSON file in a sub-folder has the same name as the sub-folder. Each image is a PNG file. The JSON file contains key-value pairs mapping image filenames to their prompts and hyperparameters. For example, below is the image of &lt;code&gt;f3501e05-aef7-4225-a9e9-f516527408ac.png&lt;/code&gt; and its key-value pair in &lt;code&gt;part-000001.json&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;img width=&#34;300&#34; src=&#34;https://i.imgur.com/gqWcRs2.png&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;f3501e05-aef7-4225-a9e9-f516527408ac.png&#34;: {&#xA;    &#34;p&#34;: &#34;geodesic landscape, john chamberlain, christopher balaskas, tadao ando, 4 k, &#34;,&#xA;    &#34;se&#34;: 38753269,&#xA;    &#34;c&#34;: 12.0,&#xA;    &#34;st&#34;: 50,&#xA;    &#34;sa&#34;: &#34;k_lms&#34;&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The data fields are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;key: Unique image name&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;p&lt;/code&gt;: Prompt&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;se&lt;/code&gt;: Random seed&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;c&lt;/code&gt;: CFG Scale (guidance scale)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;st&lt;/code&gt;: Steps&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sa&lt;/code&gt;: Sampler&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;At the top level folder of DiffusionDB, we include a metadata table in Parquet format &lt;code&gt;metadata.parquet&lt;/code&gt;. This table has seven columns: &lt;code&gt;image_name&lt;/code&gt;, &lt;code&gt;prompt&lt;/code&gt;, &lt;code&gt;part_id&lt;/code&gt;, &lt;code&gt;seed&lt;/code&gt;, &lt;code&gt;step&lt;/code&gt;, &lt;code&gt;cfg&lt;/code&gt;, and &lt;code&gt;sampler&lt;/code&gt;, and it has 2 million rows where each row represents an image. &lt;code&gt;seed&lt;/code&gt;, &lt;code&gt;step&lt;/code&gt;, and &lt;code&gt;cfg&lt;/code&gt; are We choose Parquet because it is column-based: researchers can efficiently query individual columns (e.g., prompts) without reading the entire table. Below are the five random rows from the table.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;image_name&lt;/th&gt; &#xA;   &lt;th&gt;prompt&lt;/th&gt; &#xA;   &lt;th&gt;part_id&lt;/th&gt; &#xA;   &lt;th&gt;seed&lt;/th&gt; &#xA;   &lt;th&gt;step&lt;/th&gt; &#xA;   &lt;th&gt;cfg&lt;/th&gt; &#xA;   &lt;th&gt;sampler&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;49f1e478-ade6-49a8-a672-6e06c78d45fc.png&lt;/td&gt; &#xA;   &lt;td&gt;ryan gosling in fallout 4 kneels near a nuclear bomb&lt;/td&gt; &#xA;   &lt;td&gt;1643&lt;/td&gt; &#xA;   &lt;td&gt;2220670173&lt;/td&gt; &#xA;   &lt;td&gt;50&lt;/td&gt; &#xA;   &lt;td&gt;7.0&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;b7d928b6-d065-4e81-bc0c-9d244fd65d0b.png&lt;/td&gt; &#xA;   &lt;td&gt;A beautiful robotic woman dreaming, cinematic lighting, soft bokeh, sci-fi, modern, colourful, highly detailed, digital painting, artstation, concept art, sharp focus, illustration, by greg rutkowski&lt;/td&gt; &#xA;   &lt;td&gt;87&lt;/td&gt; &#xA;   &lt;td&gt;51324658&lt;/td&gt; &#xA;   &lt;td&gt;130&lt;/td&gt; &#xA;   &lt;td&gt;6.0&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;19b1b2f1-440e-4588-ba96-1ac19888c4ba.png&lt;/td&gt; &#xA;   &lt;td&gt;bestiary of creatures from the depths of the unconscious psyche, in the style of a macro photograph with shallow dof&lt;/td&gt; &#xA;   &lt;td&gt;754&lt;/td&gt; &#xA;   &lt;td&gt;3953796708&lt;/td&gt; &#xA;   &lt;td&gt;50&lt;/td&gt; &#xA;   &lt;td&gt;7.0&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;d34afa9d-cf06-470f-9fce-2efa0e564a13.png&lt;/td&gt; &#xA;   &lt;td&gt;close up portrait of one calico cat by vermeer. black background, three - point lighting, enchanting, realistic features, realistic proportions.&lt;/td&gt; &#xA;   &lt;td&gt;1685&lt;/td&gt; &#xA;   &lt;td&gt;2007372353&lt;/td&gt; &#xA;   &lt;td&gt;50&lt;/td&gt; &#xA;   &lt;td&gt;7.0&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;c3a21f1f-8651-4a58-a4d4-7500d97651dc.png&lt;/td&gt; &#xA;   &lt;td&gt;a bottle of jack daniels with the word medicare replacing the word jack daniels&lt;/td&gt; &#xA;   &lt;td&gt;243&lt;/td&gt; &#xA;   &lt;td&gt;1617291079&lt;/td&gt; &#xA;   &lt;td&gt;50&lt;/td&gt; &#xA;   &lt;td&gt;7.0&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;To save space, we use an integer to encode the &lt;code&gt;sampler&lt;/code&gt; in the table above.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Sampler&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Integer Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ddim&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;plms&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;k_euler&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;k_euler_ancestral&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ddik_heunm&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;k_dpm_2&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;k_dpm_2_ancestral&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;k_lms&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Dataset Creation&lt;/h2&gt; &#xA;&lt;p&gt;We collected all images from the official Stable Diffusion Discord server. Please read our &lt;a href=&#34;https://arxiv.org/abs/2210.14896&#34;&gt;research paper&lt;/a&gt; for details. The code is included in &lt;a href=&#34;https://raw.githubusercontent.com/poloclub/diffusiondb/main/scripts/&#34;&gt;&lt;code&gt;./scripts/&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Data Removal&lt;/h2&gt; &#xA;&lt;p&gt;If you find any harmful images or prompts in DiffusionDB, you can use &lt;a href=&#34;https://forms.gle/GbYaSpRNYqxCafMZ9&#34;&gt;this Google Form&lt;/a&gt; to report them. Similarly, if you are a creator of an image included in this dataset, you can use the &lt;a href=&#34;https://forms.gle/GbYaSpRNYqxCafMZ9&#34;&gt;same form&lt;/a&gt; to let us know if you would like to remove your image from DiffusionDB. We will closely monitor this form and update DiffusionDB periodically.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;DiffusionDB is created by &lt;a href=&#34;https://zijie/wang&#34;&gt;Jay Wang&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/evan-montoya-b252391b4/&#34;&gt;Evan Montoya&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/dmunechika/&#34;&gt;David Munechika&lt;/a&gt;, &lt;a href=&#34;https://alexanderyang.me&#34;&gt;Alex Yang&lt;/a&gt;, &lt;a href=&#34;https://www.bhoov.com&#34;&gt;Ben Hoover&lt;/a&gt;, &lt;a href=&#34;https://faculty.cc.gatech.edu/~dchau/&#34;&gt;Polo Chau&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{wangDiffusionDBLargescalePrompt2022,&#xA;  title = {{{DiffusionDB}}: {{A}} Large-Scale Prompt Gallery Dataset for Text-to-Image Generative Models},&#xA;  author = {Wang, Zijie J. and Montoya, Evan and Munechika, David and Yang, Haoyang and Hoover, Benjamin and Chau, Duen Horng},&#xA;  year = {2022},&#xA;  journal = {arXiv:2210.14896 [cs]},&#xA;  url = {https://arxiv.org/abs/2210.14896}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;The DiffusionDB dataset is available under the &lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1.0/&#34;&gt;CC0 1.0 License&lt;/a&gt;. The Python code in this repository is available under the &lt;a href=&#34;https://raw.githubusercontent.com/poloclub/diffusiondb/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions, feel free to &lt;a href=&#34;https://github.com/poloclub/diffusiondb/issues/new&#34;&gt;open an issue&lt;/a&gt; or contact &lt;a href=&#34;https://zijie.wang&#34;&gt;Jay Wang&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>