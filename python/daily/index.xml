<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-19T01:31:15Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>taojy123/KeymouseGo</title>
    <updated>2023-08-19T01:31:15Z</updated>
    <id>tag:github.com,2023-08-19:/taojy123/KeymouseGo</id>
    <link href="https://github.com/taojy123/KeymouseGo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;类似按键精灵的鼠标键盘录制和自动化操作 模拟点击和键入 | automate mouse clicks and keyboard input&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;KeymouseGo&lt;/h1&gt; &#xA; &lt;br&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/taojy123/KeymouseGo/master/Preview.png&#34; width=&#34;50%&#34; height=&#34;50%&#34;&gt; &#xA; &lt;div&gt; &#xA;  &lt;img alt=&#34;platform&#34; src=&#34;https://img.shields.io/badge/platform-Windows%20%7C%20Linux%20%7C%20macOS-blueviolet&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;div&gt; &#xA;  &lt;img alt=&#34;license&#34; src=&#34;https://img.shields.io/github/license/taojy123/KeymouseGo&#34;&gt; &#xA;  &lt;img alt=&#34;language&#34; src=&#34;https://img.shields.io/badge/python-%3E%3D%203.7-green&#34;&gt; &#xA;  &lt;img alt=&#34;stars&#34; src=&#34;https://img.shields.io/github/stars/taojy123/KeymouseGo?style=social&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/taojy123/KeymouseGo/master/README.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/taojy123/KeymouseGo/master/README_en-US.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;功能：记录用户的鼠标键盘操作，通过触发按钮自动执行之前记录的操作，可设定执行的次数，可以理解为 &lt;code&gt;精简绿色版&lt;/code&gt; 的 &lt;code&gt;按键精灵&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;p&gt;用途：在进行某些操作简单、单调重复的工作时，使用本软件就可以很省力了。自己只要做一遍，然后接下来就让电脑来做。&lt;/p&gt; &#xA;&lt;h1&gt;目录&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/taojy123/KeymouseGo/master/#%E5%AE%89%E8%A3%85&#34;&gt;安装&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/taojy123/KeymouseGo/master/#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95&#34;&gt;使用方法&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/taojy123/KeymouseGo/master/#%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C&#34;&gt;基本操作&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/taojy123/KeymouseGo/master/#%E6%8F%90%E7%A4%BA&#34;&gt;提示&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/taojy123/KeymouseGo/master/#%E8%84%9A%E6%9C%AC%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E&#34;&gt;脚本语法说明&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/taojy123/KeymouseGo/master/#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%89%A9%E5%B1%95&#34;&gt;自定义扩展&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/taojy123/KeymouseGo/master/#%E5%85%B3%E4%BA%8E%E4%BD%9C%E8%80%85&#34;&gt;关于作者&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/taojy123/KeymouseGo/master/#%E5%BC%80%E6%BA%90%E8%B4%A1%E7%8C%AE%E8%80%85&#34;&gt;开源贡献者&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/taojy123/KeymouseGo/master/#%E6%9B%B4%E6%96%B0%E8%AF%B4%E6%98%8E&#34;&gt;更新说明&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;安装&lt;/h1&gt; &#xA;&lt;p&gt;该软件通过 &lt;code&gt;Python&lt;/code&gt; 语言编写，已打包为可执行文件，未安装 &lt;code&gt;Python&lt;/code&gt; 的用户可直接下载 &lt;a href=&#34;https://github.com/taojy123/KeymouseGo/releases&#34;&gt;release&lt;/a&gt; 版本 ，直接点击 &lt;code&gt;KeymouseGo&lt;/code&gt; 运行&lt;/p&gt; &#xA;&lt;h3&gt;源码打包可执行文件&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. 安装 Python3&#xA;2. pip install -r requirements-windows.txt&#xA;3. pip install pyinstaller&#xA;4. pyinstaller -F -w --add-data &#34;./assets;assets&#34; KeymouseGo.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux或Mac&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. 安装 Python3&#xA;2. pip3 install -r requirements-universal.txt&#xA;3. pip3 install pyinstaller&#xA;4. pyinstaller -F -w --add-data &#34;./assets:assets&#34; KeymouseGo.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;使用方法&lt;/h1&gt; &#xA;&lt;h2&gt;基本操作&lt;/h2&gt; &#xA;&lt;h3&gt;桌面模式&lt;/h3&gt; &#xA;&lt;p&gt;1、点击 &lt;code&gt;录制&lt;/code&gt; 按钮，开始录制。&lt;/p&gt; &#xA;&lt;p&gt;2、在计算机上进行任意操作，如点击鼠标、键盘输入，这部分的动作会被记录下来。&lt;/p&gt; &#xA;&lt;p&gt;3、点击 &lt;code&gt;结束&lt;/code&gt; 按钮，结束录制。&lt;/p&gt; &#xA;&lt;p&gt;4、点击 &lt;code&gt;启动&lt;/code&gt; 按钮，计算机会重复执行一遍第2步中所录制的动作。&lt;/p&gt; &#xA;&lt;h3&gt;命令行模式&lt;/h3&gt; &#xA;&lt;p&gt;直接运行指定脚本:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; ./KeymouseGo scripts/0314_1452.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;运行指定脚本3次:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; ./KeymouseGo scripts/0314_1452.txt -rt 3&#xA;&amp;gt; ./KeymouseGo scripts/0314_1452.txt --runtimes 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;以200%的速度运行指定脚本:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; ./KeymouseGo scripts/0314_1452.txt -sp 200&#xA;&amp;gt; ./KeymouseGo scripts/0314_1452.txt --speed 200&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;加载自定义扩展&lt;code&gt;MyExtension&lt;/code&gt;运行指定脚本:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; ./KeymouseGo scripts/0314_1452.txt -m MyExtension&#xA;&amp;gt; ./KeymouseGo scripts/0314_1452.txt --module MyExtension&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;提示&lt;/h2&gt; &#xA;&lt;p&gt;1、可设置脚本重复执行的次数，如果为 &lt;code&gt;0&lt;/code&gt; 即为无限循环。&lt;/p&gt; &#xA;&lt;p&gt;2、默认启动热键为 &lt;code&gt;F6&lt;/code&gt;，功能等同于 &lt;code&gt;启动&lt;/code&gt; 按钮；默认终止热键为 &lt;code&gt;F9&lt;/code&gt;，按下后将会停止正在运行的脚本。&lt;/p&gt; &#xA;&lt;p&gt;3、录制时只记录鼠标点击动作和键盘动作，不记录鼠标移动轨迹。&lt;/p&gt; &#xA;&lt;p&gt;4、每次录制结束后都会在 &lt;code&gt;scripts&lt;/code&gt; 目前下生成一个新的脚本文件。&lt;/p&gt; &#xA;&lt;p&gt;5、运行前可以在列表中选择一个需要执行的脚本。&lt;/p&gt; &#xA;&lt;p&gt;6、&lt;code&gt;scripts&lt;/code&gt; 下的脚本文件内容可以修改，修改时可参考如下所述 &lt;code&gt;脚本格式说明&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;p&gt;7、热键设置中的&lt;code&gt;Middle&lt;/code&gt;指代鼠标中键，&lt;code&gt;XButton&lt;/code&gt;指代鼠标侧键&lt;/p&gt; &#xA;&lt;p&gt;8、由于程序速度受限，当输入的鼠标速度大于一定值时脚本将无法以预期的输入速度执行&lt;/p&gt; &#xA;&lt;p&gt;部分系统环境中，可能出现无法录制完整的鼠标事件的情况，请以管理员身份/root身份运行此工具即可正常使用。&lt;/p&gt; &#xA;&lt;p&gt;使用Mac的用户，需要确保程序在辅助功能白名单，如果使用打包的exec文件，则还需要确保终端也在辅助功能白名单。 如果app程序闪退，请尝试给予&lt;code&gt;~/.qt_material&lt;/code&gt;目录下文件的写权限:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod -R 770 ~/.qt_material&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;脚本语法说明&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;演示屏幕分辨率为&lt;code&gt;1920 * 1080&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;[&#xA; [3000, &#34;EM&#34;, &#34;mouse right down&#34;, [&#34;0.05208%&#34;, &#34;0.1852%&#34;]],    // 开始运行 `3000ms` 后，在屏幕相对坐标 `(0.05208, 0.1852)`即 `(100,200)` 处 `按下鼠标右键`；&#xA; [50,   &#34;EM&#34;, &#34;mouse right up&#34;,   [&#34;0.05208%&#34;, &#34;0.1852%&#34;]],    // 等待 `50ms` 后在相同位置 `抬起鼠标右键`；&#xA; [1000, &#34;EK&#34;, &#34;key down&#34;,         [70, &#34;F&#34;, 0]],                                   // 等待 `1000ms` 后 `按下f键`；&#xA; [50,   &#34;EK&#34;, &#34;key up&#34;,           [70, &#34;F&#34;, 0]],                                   // 等待 `50ms` 后 `抬起f键`；&#xA; [100,  &#34;EM&#34;, &#34;mouse left down&#34;,  [&#34;0.2604%&#34;, &#34;0.4630%&#34;]],      // 等待 `100ms` 后，在屏幕相对坐标 `(0.2604, 0.4630)`即 `(500, 500)` 处 `按下鼠标左键`；&#xA; [100,  &#34;EM&#34;, &#34;mouse move&#34;,       [&#34;0.2604%&#34;, &#34;0.5556%&#34;]],       // 等待 `100ms` 后，鼠标移动至相对坐标 `(0.2604, 0.5556)`即 `(500, 600)` 位置；&#xA; [100,  &#34;EM&#34;, &#34;mouse left up&#34;,  [&#34;0.3125%&#34;, &#34;0.5556%&#34;]],                   // 等待 `100ms` 后，在屏幕相对坐标 `(0.3125, 0.5556)`即 `(600, 600)` 处 `抬起鼠标左键`；&#xA; [100,  &#34;EX&#34;, &#34;input&#34;,            &#34;你好 world&#34;],                                   // 等待 `100ms` 后，在当前位置输入 `你好 world` 文字。&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;脚本为 &lt;code&gt;json&lt;/code&gt; 格式，每一行代表一次动作：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;每行的第 1 个元素表示时间间隔，指的是本次动作与上一次动作之间相隔的时间，单位为毫秒。&lt;/li&gt; &#xA; &lt;li&gt;每行的第 2 个元素表示鼠标动作或是键盘动作：&lt;code&gt;EM&lt;/code&gt; 为鼠标，&lt;code&gt;EK&lt;/code&gt; 为键盘，&lt;code&gt;EX&lt;/code&gt; 为其他拓展动作。&lt;/li&gt; &#xA; &lt;li&gt;每行的第 3 个元素表示动作的类型： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;mouse left down&lt;/code&gt; 为鼠标左键按下，&lt;code&gt;mouse left up&lt;/code&gt; 为鼠标左键抬起，&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mouse right down&lt;/code&gt; 为鼠标右键按下，&lt;code&gt;mouse right up&lt;/code&gt; 为鼠标右键抬起，&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mouse middle down&lt;/code&gt; 为鼠标中键按下， &lt;code&gt;mouse middle up&lt;/code&gt; 为鼠标中键抬起，&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mouse wheel up&lt;/code&gt; 为鼠标滚轮上滑， &lt;code&gt;mouse wheel down&lt;/code&gt; 为鼠标滚轮下滑，&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;key down&lt;/code&gt; 为键盘按键按下，&lt;code&gt;key up&lt;/code&gt; 为键盘按键抬起，&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mouse move&lt;/code&gt; 为鼠标滑过，&lt;code&gt;input&lt;/code&gt; 输入文字。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;每行的第 4 个元素表示具体的动作参数 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;当为鼠标动作时，由两个子元素构成，分别为鼠标所在的屏幕位置的横纵坐标，&lt;/li&gt; &#xA;   &lt;li&gt;当为键盘动作时，由三个子元素构成，分别是（按键编号, 按键名, 拓展标记)，&lt;/li&gt; &#xA;   &lt;li&gt;当为输入文字动作时，为要输入的文字内容。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;每行 &lt;code&gt;//&lt;/code&gt; 后的部分为注释内容。&lt;/li&gt; &#xA; &lt;li&gt;修改时请严格遵守格式，否则可能导致脚本无法运行，建议修改前先备份一下。&lt;/li&gt; &#xA; &lt;li&gt;横纵坐标为[-1, -1]时，表示在鼠标当前所在位置执行操作。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;自定义扩展&lt;/h2&gt; &#xA;&lt;p&gt;功能的使用详见&lt;a href=&#34;https://github.com/taojy123/KeymouseGo/wiki/%E6%96%87%E6%A1%A3#%E6%89%A9%E5%B1%95&#34;&gt;wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;关于作者&lt;/h1&gt; &#xA;&lt;p&gt;我是陶佳元，热爱代码，怀旧，在互联网上常用的 ID 有 taojy123 、tao.py。&lt;/p&gt; &#xA;&lt;p&gt;我的个人站点 &lt;a href=&#34;https://tslow.cn&#34;&gt;tslow.cn&lt;/a&gt; 整理并罗列了一些 &lt;code&gt;个人项目&lt;/code&gt; 和 &lt;code&gt;小工具&lt;/code&gt; 合集。&lt;/p&gt; &#xA;&lt;p&gt;你可以在 &lt;a href=&#34;http://jianshu.tslow.cn&#34;&gt;简书&lt;/a&gt; 浏览我最新发布的文章，还可以在 &lt;a href=&#34;https://space.bilibili.com/145137942&#34;&gt;B站&lt;/a&gt; 观看我的技术分享和生活纪实。&lt;/p&gt; &#xA;&lt;p&gt;我的邮箱: &lt;a href=&#34;mailto:taojy123@163.com&#34;&gt;taojy123@163.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;开源贡献者&lt;/h1&gt; &#xA;&lt;p&gt;如果您是开发爱好者，并对本项目感兴趣，欢迎参与项目的共同建设，您可以通过本项目的&lt;a href=&#34;https://github.com/taojy123/KeymouseGo/tree/dev&#34;&gt;&lt;strong&gt;dev&lt;/strong&gt;&lt;/a&gt;分支查看目前的进度，并且可以向本项目的&lt;a href=&#34;https://github.com/taojy123/KeymouseGo/tree/dev&#34;&gt;&lt;strong&gt;dev&lt;/strong&gt;&lt;/a&gt;分支提交 Pull request 来贡献代码。&lt;/p&gt; &#xA;&lt;p&gt;在此，特别感谢积极贡献者：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Monomux&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/70839036?s=80&amp;amp;v=4&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ZutJoe&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/54732130?s=80&amp;amp;v=4&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;感谢 JetBrains 免费提供开发工具&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/?from=KeymouseGo&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/taojy123/KeymouseGo/master/jetbrains-variant-2.png&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;更新说明&lt;/h1&gt; &#xA;&lt;p&gt;暂时没法打包 &lt;code&gt;x86&lt;/code&gt; 版本，32 位系统的同学请自行源码编译，或 &lt;a href=&#34;https://github.com/taojy123/KeymouseGo/releases/tag/v1.5&#34;&gt;下载v1.5老版本&lt;/a&gt; 使用&lt;/p&gt; &#xA;&lt;h2&gt;v5.1&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持在Linux和Mac环境下运行&lt;/li&gt; &#xA; &lt;li&gt;支持在多屏环境下运行(仅Windows)&lt;/li&gt; &#xA; &lt;li&gt;修复程序在执行连点操作时有概率崩溃的问题&lt;/li&gt; &#xA; &lt;li&gt;修复文件选择器选择脚本后选项卡未更新的问题&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;v5.0&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;初步实现自定义扩展功能&lt;/li&gt; &#xA; &lt;li&gt;可调整提示音音量&lt;/li&gt; &#xA; &lt;li&gt;增加脚本重命名/编辑子窗口&lt;/li&gt; &#xA; &lt;li&gt;添加英文文档&lt;/li&gt; &#xA; &lt;li&gt;增加简单日志窗口&lt;/li&gt; &#xA; &lt;li&gt;适应高分辨率(在高分辨率情况下放大窗口)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;v4.1&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加 命令行运行能力&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;v4.0&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用 PySide2 重写 UI&lt;/li&gt; &#xA; &lt;li&gt;快捷键支持鼠标中键与侧键&lt;/li&gt; &#xA; &lt;li&gt;相关 issue 提出的功能需求实现&lt;/li&gt; &#xA; &lt;li&gt;4.0 代码基本由 &lt;a href=&#34;https://github.com/Monomux&#34;&gt;Monomux&lt;/a&gt; 贡献，KeymouseGo 的整体品质有了较大提升。感谢付出！&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;v3.2.2&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;修复了 input 事件无法输入内容的 bug&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;v3.2.1&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;修复了中文注释无法解析的 bug&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;v3.2&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;脚本文件中可使用 &lt;code&gt;//&lt;/code&gt; 进行内容注释&lt;/li&gt; &#xA; &lt;li&gt;可录制鼠标轨迹（&lt;code&gt;mouse move&lt;/code&gt; 事件），并可在软件中设置轨迹精度，填 0 即不录制轨迹。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;v3.1&lt;/h2&gt; &#xA;&lt;p&gt;针对这个 issue(&lt;a href=&#34;https://github.com/taojy123/KeymouseGo/issues/39&#34;&gt;https://github.com/taojy123/KeymouseGo/issues/39&lt;/a&gt;) 增加了两个功能点&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;命令行启动模式中可以随时按下 &lt;code&gt;F9&lt;/code&gt; 热键，来终止脚本运行&lt;/li&gt; &#xA; &lt;li&gt;模拟鼠标点击的脚本语句中可以设定坐标点为 &lt;code&gt;[-1, -1]&lt;/code&gt;, 用以表示在鼠标当前位置直接点击&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;v3.0&lt;/h2&gt; &#xA;&lt;p&gt;因为兼容 macOS 遇到的很大的阻碍，最终放弃跨平台，血泪史可参看这两个 issue: &lt;a href=&#34;https://github.com/taojy123/KeymouseGo/issues/24&#34;&gt;https://github.com/taojy123/KeymouseGo/issues/24&lt;/a&gt; &lt;a href=&#34;https://github.com/moses-palmer/pynput/issues/55&#34;&gt;https://github.com/moses-palmer/pynput/issues/55&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;改回使用 &lt;code&gt;win32api&lt;/code&gt; 来模拟事件，只支持 windows 系统&lt;/li&gt; &#xA; &lt;li&gt;解决了 &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;上下左右&lt;/code&gt; 的回放问题，见 &lt;a href=&#34;https://github.com/taojy123/KeymouseGo/issues/27&#34;&gt;https://github.com/taojy123/KeymouseGo/issues/27&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;增加了录制鼠标路径功能，需求来源 &lt;a href=&#34;https://github.com/taojy123/KeymouseGo/issues/33&#34;&gt;https://github.com/taojy123/KeymouseGo/issues/33&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;增加了文字输入功能，需求来源 &lt;a href=&#34;https://github.com/taojy123/KeymouseGo/issues/34&#34;&gt;https://github.com/taojy123/KeymouseGo/issues/34&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;因为使用了 &lt;code&gt;win32api&lt;/code&gt;，不需要再手动设置屏幕缩放比例了&lt;/li&gt; &#xA; &lt;li&gt;录制脚本语法有部分改动，不向前兼容&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;v2.2&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;优化了脚本格式，将动作时间间隔，放到每行脚本的首位，逻辑更加合理&lt;/li&gt; &#xA; &lt;li&gt;默认录制的第一个动作不加时间间隔，即按下启动按钮后立即执行第一个动作&lt;/li&gt; &#xA; &lt;li&gt;如果重复多次执行，可修改脚本中第一个动作的时间（单位毫秒）来决定每轮动作之间的相隔时间&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;v2.1&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加了屏幕缩放配置，兼容了修改过屏幕缩放比例的 win10 系统&lt;/li&gt; &#xA; &lt;li&gt;优化代码，兼容 &lt;code&gt;Python3&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;v2.0&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;代码优化重构&lt;/li&gt; &#xA; &lt;li&gt;使用 &lt;code&gt;pynput&lt;/code&gt; 实现动作捕捉和执行，不再需要安装 &lt;code&gt;pywin32&lt;/code&gt; 和 &lt;code&gt;pyhook&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;兼容 macOS (需要在隐私设置中允许程序控制电脑)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pynput&lt;/code&gt; 似乎不兼容 WinXP，暂时没法打包 &lt;code&gt;x86&lt;/code&gt; 版本&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;v1.5&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;修复自定义缩放后录制定位偏移 Bug&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;v1.4&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加命令行运行方式&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;v1.3&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bug 修复&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;v1.2&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;UI 更新&lt;/li&gt; &#xA; &lt;li&gt;移除了 &lt;code&gt;后台模式&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;简化了录制脚本，增强了可读性&lt;/li&gt; &#xA; &lt;li&gt;脚本文件名优化，可录制多个脚本，避免误操作覆盖了辛辛苦苦录制的脚本&lt;/li&gt; &#xA; &lt;li&gt;可自定义 &lt;code&gt;启动热键&lt;/code&gt; 和 &lt;code&gt;终止热键&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>jiran214/GPT-vup</title>
    <updated>2023-08-19T01:31:15Z</updated>
    <id>tag:github.com,2023-08-19:/jiran214/GPT-vup</id>
    <link href="https://github.com/jiran214/GPT-vup" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GPT-vup BIliBili | 抖音 | AI | 虚拟主播&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GPT-vup Live2D数字人直播&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPL-blue&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Real Virtual UP&lt;/strong&gt; 支持BiliBili和抖音直播，基于生产者-消费者模型设计，使用了openai嵌入、GPT3.5 api&lt;/p&gt; &#xA;&lt;h3&gt;功能&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;基本功能，回答弹幕和SC、欢迎入场观众、感谢礼物&lt;/li&gt; &#xA; &lt;li&gt;plugin(默认关闭) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;speech：监听ctrl+t热键，输入语音转为文本和ai数字人交互&lt;/li&gt; &#xA;   &lt;li&gt;action：根据观众的行为匹配对应人物动作&lt;/li&gt; &#xA;   &lt;li&gt;schedule：隔一段时间触发某一事件，讲故事、唱rap...&lt;/li&gt; &#xA;   &lt;li&gt;context：给问题补充上下文&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;安装&lt;/h2&gt; &#xA;&lt;h3&gt;环境&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;win 10&lt;/li&gt; &#xA; &lt;li&gt;python 3.8&lt;/li&gt; &#xA; &lt;li&gt;vpn全局代理&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;pip安装依赖&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/jiran214/GPT-vup.git&#xA;cd src&#xA;# 建议命令行或者pycharm创建虚拟环境并激活 https://blog.csdn.net/xp178171640/article/details/115950985&#xA;python -m pip install --upgrade pip pip&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;新建config.ini&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;重命名config.sample.ini为config.ini&lt;/li&gt; &#xA; &lt;li&gt;更改api_key和proxy 其它可以不用管&lt;/li&gt; &#xA; &lt;li&gt;相关配置见后&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;测试网络环境&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;src目录下运行：&amp;gt;&amp;gt;&lt;code&gt;python manager.py test_net&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;h3&gt;B站直播&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;安装依赖库：&amp;gt;&amp;gt;&lt;code&gt;pip install bilibili-api-python&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;config.ini 的 room -&amp;gt; id 更改为自己的房间号，可以先随便找个&lt;/li&gt; &#xA; &lt;li&gt;src目录下运行：&amp;gt;&amp;gt;&lt;code&gt;python manager.py run bilibili&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;抖音直播&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;参考 &lt;a href=&#34;https://gitee.com/haodong108/dy-barrage-grab/tree/V2.6.5/BarrageGrab&#34;&gt;抖音弹幕抓取数据推送: 基于系统代理抓包打造的抖音弹幕服务推送程序&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;启动该项目&lt;/li&gt; &#xA; &lt;li&gt;打开web或者桌面端抖音正在直播的直播间，数据开始抓取&lt;/li&gt; &#xA; &lt;li&gt;src目录下运行：&amp;gt;&amp;gt;&lt;code&gt;python manager.py run douyin&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Vtube Studio 安装及配置&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在steam下载Vtube Studio软件&lt;/li&gt; &#xA; &lt;li&gt;教程：&lt;a href=&#34;https://www.bilibili.com/video/BV1nV4y1X7yJ?t=426.7&#34;&gt;https://www.bilibili.com/video/BV1nV4y1X7yJ?t=426.7&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;重点！！！ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;麦克风设置：你可以不用虚拟声道，win 默认输出设备为Speaker Realtek(R) Audio，在VTS里的麦克风设置，输入设备也设置为Realtek(R) Audio即可。&lt;/li&gt; &#xA;   &lt;li&gt;嘴型同步声音，在mouthOpen的输入参数设置为声音频率、或者声音音量&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;如果需要更好的直播效果，请自行了解更多&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;进阶&lt;/h2&gt; &#xA;&lt;h3&gt;speech plugin：语音交互&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;config.ini -&amp;gt; plugin -&amp;gt; speech 设置为True&lt;/li&gt; &#xA; &lt;li&gt;运行&amp;gt;&amp;gt; &lt;code&gt;pip install pyaudio speech_recognition keyboard&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;程序启动后按住 ctrl+T 说话，自动语音转文字，vup会听到你说的话&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;schedule plugin：隔一段时间触发某一事件，讲故事、唱rap...&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;config.ini -&amp;gt; plugin -&amp;gt; schedule 设置为True&lt;/li&gt; &#xA; &lt;li&gt;utils/prompt_temple.py 的schedule_task_temple_list列表有我写好的触发事件&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;action plugin：VTS动作表情交互&lt;/h3&gt; &#xA;&lt;p&gt;实现vup根据观众的互动行为匹配动作&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;config.ini -&amp;gt; plugin -&amp;gt; action设置为True&lt;/li&gt; &#xA; &lt;li&gt;运行&amp;gt;&amp;gt;&lt;code&gt;pip install pyvts&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;打开VTS，开启VTS的API开关&lt;/li&gt; &#xA; &lt;li&gt;在VTS的表情设置里，给每一个动作重命名为体现动作表情的词，不然没有意义&lt;/li&gt; &#xA; &lt;li&gt;src目录下运行&amp;gt;&amp;gt; &lt;code&gt;python manager.py action&lt;/code&gt;，pyvts会请求vts api（注意：此时VTS会有确认弹窗）&lt;/li&gt; &#xA; &lt;li&gt;程序会自动生成 action.json&lt;/li&gt; &#xA; &lt;li&gt;如果需要更新动作，请重复上述步骤&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;实验功能：context plugin：给对话补充上下文&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;前提1：Docker&lt;a href=&#34;https://milvus.io/docs/v2.0.x/install_standalone-docker.md&#34;&gt;安装milvus2.0单机版本&lt;/a&gt;，并设置 config.ini -&amp;gt; milvus -&amp;gt; host and port&lt;/li&gt; &#xA; &lt;li&gt;前提2：Mysql环境，并设置 config.ini -&amp;gt; mysql -&amp;gt; uri&lt;/li&gt; &#xA; &lt;li&gt;config.ini -&amp;gt; plugin -&amp;gt; context 设置为True&lt;/li&gt; &#xA; &lt;li&gt;运行&amp;gt;&amp;gt; &lt;code&gt;pip install pymilvus==2.0&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;自行设置scripts/manager.py的参数，运行&amp;gt;&amp;gt; &lt;code&gt;python scripts/manager.py run&lt;/code&gt;，采集贴吧数据到MySQL，处理后推给Milvus&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;其它&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;utils/prompt_temple.py 的 system_template 可以更改vup的初始设定&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;更新日志&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;V2.0 支持context plugin，目录重构、更简单的readme，解决依赖混乱的问题&lt;/li&gt; &#xA; &lt;li&gt;V1.0 &lt;a href=&#34;https://github.com/jiran214/GPT-vup/tree/1.0&#34;&gt;旧版本内容&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact Me&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/jiran214/GPT-vup/raw/2.0/public/mm_reward_qrcode_1686025672796.png&#34; width=&#34;300&#34; height=&#34;400&#34;&gt;&#xA; &lt;br&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>rany2/edge-tts</title>
    <updated>2023-08-19T01:31:15Z</updated>
    <id>tag:github.com,2023-08-19:/rany2/edge-tts</id>
    <link href="https://github.com/rany2/edge-tts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Use Microsoft Edge&#39;s online text-to-speech service from Python WITHOUT needing Microsoft Edge or Windows or an API key&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;edge-tts&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;edge-tts&lt;/code&gt; is a Python module that allows you to use Microsoft Edge&#39;s online text-to-speech service from within your Python code or using the provided &lt;code&gt;edge-tts&lt;/code&gt; or &lt;code&gt;edge-playback&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install it, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pip install edge-tts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you only want to use the &lt;code&gt;edge-tts&lt;/code&gt; and &lt;code&gt;edge-playback&lt;/code&gt; commands, it would be better to use pipx:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pipx install edge-tts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Basic usage&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use the &lt;code&gt;edge-tts&lt;/code&gt; command, you can simply run it with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ edge-tts --text &#34;Hello, world!&#34; --write-media hello.mp3 --write-subtitles hello.vtt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you wish to play it back immediately with subtitles, you could use the &lt;code&gt;edge-playback&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ edge-playback --text &#34;Hello, world!&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note the above requires the installation of the &lt;code&gt;mpv&lt;/code&gt; command line player.&lt;/p&gt; &#xA;&lt;p&gt;All &lt;code&gt;edge-tts&lt;/code&gt; commands work in &lt;code&gt;edge-playback&lt;/code&gt; as well.&lt;/p&gt; &#xA;&lt;h3&gt;Changing the voice&lt;/h3&gt; &#xA;&lt;p&gt;If you want to change the language of the speech or more generally, the voice.&lt;/p&gt; &#xA;&lt;p&gt;You must first check the available voices with the &lt;code&gt;--list-voices&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ edge-tts --list-voices&#xA;Name: Microsoft Server Speech Text to Speech Voice (af-ZA, AdriNeural)&#xA;ShortName: af-ZA-AdriNeural&#xA;Gender: Female&#xA;Locale: af-ZA&#xA;&#xA;Name: Microsoft Server Speech Text to Speech Voice (am-ET, MekdesNeural)&#xA;ShortName: am-ET-MekdesNeural&#xA;Gender: Female&#xA;Locale: am-ET&#xA;&#xA;Name: Microsoft Server Speech Text to Speech Voice (ar-EG, SalmaNeural)&#xA;ShortName: ar-EG-SalmaNeural&#xA;Gender: Female&#xA;Locale: ar-EG&#xA;&#xA;Name: Microsoft Server Speech Text to Speech Voice (ar-SA, ZariyahNeural)&#xA;ShortName: ar-SA-ZariyahNeural&#xA;Gender: Female&#xA;Locale: ar-SA&#xA;&#xA;...&#xA;&#xA;$ edge-tts --voice ar-EG-SalmaNeural --text &#34;مرحبا كيف حالك؟&#34; --write-media hello_in_arabic.mp3 --write-subtitles hello_in_arabic.vtt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom SSML&lt;/h3&gt; &#xA;&lt;p&gt;Support for custom SSML has been removed since 5.0.0 because Microsoft has taken the initiative to prevent it from working. You cannot use custom SSML anymore.&lt;/p&gt; &#xA;&lt;h3&gt;Changing rate and volume&lt;/h3&gt; &#xA;&lt;p&gt;It is possible to make minor changes to the generated speech.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ edge-tts --rate=-50% --text &#34;Hello, world!&#34; --write-media hello_with_rate_halved.mp3 --write-subtitles hello_with_rate_halved.vtt&#xA;$ edge-tts --volume=-50% --text &#34;Hello, world!&#34; --write-media hello_with_volume_halved.mp3 --write-subtitles hello_with_volume_halved.vtt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In addition, it is required to use &lt;code&gt;--rate=-50%&lt;/code&gt; instead of &lt;code&gt;--rate -50%&lt;/code&gt; (note the lack of an equal sign) otherwise the &lt;code&gt;-50%&lt;/code&gt; would be interpreted as just another argument.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;--pitch&lt;/code&gt; was removed in 6.0.3 as it no longer appears to have any effect.&lt;/p&gt; &#xA;&lt;h3&gt;Note on the &lt;code&gt;edge-playback&lt;/code&gt; command&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;edge-playback&lt;/code&gt; is just a wrapper around &lt;code&gt;edge-tts&lt;/code&gt; that plays back the generated speech. It takes the same arguments as the &lt;code&gt;edge-tts&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;h2&gt;Python module&lt;/h2&gt; &#xA;&lt;p&gt;It is possible to use the &lt;code&gt;edge-tts&lt;/code&gt; module directly from Python. For a list of example applications:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rany2/edge-tts/raw/master/examples/basic_generation.py&#34;&gt;https://github.com/rany2/edge-tts/blob/master/examples/basic_generation.py&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rany2/edge-tts/raw/master/examples/dynamic_voice_selection.py&#34;&gt;https://github.com/rany2/edge-tts/blob/master/examples/dynamic_voice_selection.py&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rany2/edge-tts/raw/master/examples/basic_audio_streaming.py&#34;&gt;https://github.com/rany2/edge-tts/blob/master/examples/basic_audio_streaming.py&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rany2/edge-tts/raw/master/examples/streaming_with_subtitles.py&#34;&gt;https://github.com/rany2/edge-tts/blob/master/examples/streaming_with_subtitles.py&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rany2/edge-tts/raw/master/src/edge_tts/util.py&#34;&gt;https://github.com/rany2/edge-tts/blob/master/src/edge_tts/util.py&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hasscc/hass-edge-tts/raw/main/custom_components/edge_tts/tts.py&#34;&gt;https://github.com/hasscc/hass-edge-tts/blob/main/custom_components/edge_tts/tts.py&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>