<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-26T01:33:34Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pyvista/pyvista</title>
    <updated>2024-10-26T01:33:34Z</updated>
    <id>tag:github.com,2024-10-26:/pyvista/pyvista</id>
    <link href="https://github.com/pyvista/pyvista" rel="alternate"></link>
    <summary type="html">&lt;p&gt;3D plotting and mesh analysis through a streamlined interface for the Visualization Toolkit (VTK)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;####### PyVista #######&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;3D plotting and mesh analysis through a streamlined interface for the Visualization Toolkit (VTK)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://github.com/pyvista/pyvista/raw/main/doc/source/_static/pyvista_banner_small.png&#34;&gt;https://github.com/pyvista/pyvista/raw/main/doc/source/_static/pyvista_banner_small.png&lt;/a&gt; :target: &lt;a href=&#34;https://docs.pyvista.org/examples/index.html&#34;&gt;https://docs.pyvista.org/examples/index.html&lt;/a&gt; :alt: pyvista&lt;/p&gt; &#xA;&lt;p&gt;PyVista is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Pythonic VTK&lt;/em&gt;: a high-level API to the &lt;code&gt;Visualization Toolkit&lt;/code&gt;_ (VTK)&lt;/li&gt; &#xA; &lt;li&gt;mesh data structures and filtering methods for spatial datasets&lt;/li&gt; &#xA; &lt;li&gt;3D plotting made simple and built for large/complex data geometries&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;.. _Visualization Toolkit: &lt;a href=&#34;https://vtk.org&#34;&gt;https://vtk.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://github.com/pyvista/pyvista/raw/main/assets/pyvista_ipython_demo.gif&#34;&gt;https://github.com/pyvista/pyvista/raw/main/assets/pyvista_ipython_demo.gif&lt;/a&gt; :alt: pyvista ipython demo&lt;/p&gt; &#xA;&lt;p&gt;PyVista is a helper module for the Visualization Toolkit (VTK) that wraps the VTK library through NumPy and direct array access through a variety of methods and classes. This package provides a Pythonic, well-documented interface exposing VTK&#39;s powerful visualization backend to facilitate rapid prototyping, analysis, and visual integration of spatially referenced datasets.&lt;/p&gt; &#xA;&lt;p&gt;This module can be used for scientific plotting for presentations and research papers as well as a supporting module for other mesh 3D rendering dependent Python modules; see Connections for a list of projects that leverage PyVista.&lt;/p&gt; &#xA;&lt;p&gt;.. |tweet| image:: &lt;a href=&#34;https://img.shields.io/twitter/url.svg?style=social&amp;amp;url=http%3A%2F%2Fshields.io&#34;&gt;https://img.shields.io/twitter/url.svg?style=social&amp;amp;url=http%3A%2F%2Fshields.io&lt;/a&gt; :target: &lt;a href=&#34;https://twitter.com/intent/tweet?text=Check%20out%20this%20project%20for%203D%20visualization%20in%20Python&amp;amp;url=https://github.com/pyvista/pyvista&amp;amp;hashtags=3D,visualization,Python,vtk,mesh,plotting,PyVista&#34;&gt;https://twitter.com/intent/tweet?text=Check%20out%20this%20project%20for%203D%20visualization%20in%20Python&amp;amp;url=https://github.com/pyvista/pyvista&amp;amp;hashtags=3D,visualization,Python,vtk,mesh,plotting,PyVista&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Share this project on X: |tweet|&lt;/p&gt; &#xA;&lt;p&gt;PyVista is a NumFOCUS affiliated project&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://raw.githubusercontent.com/numfocus/templates/master/images/numfocus-logo.png&#34;&gt;https://raw.githubusercontent.com/numfocus/templates/master/images/numfocus-logo.png&lt;/a&gt; :target: &lt;a href=&#34;https://numfocus.org/sponsored-projects/affiliated-projects&#34;&gt;https://numfocus.org/sponsored-projects/affiliated-projects&lt;/a&gt; :alt: NumFOCUS affiliated projects :height: 60px&lt;/p&gt; &#xA;&lt;h1&gt;Status badges&lt;/h1&gt; &#xA;&lt;p&gt;.. |zenodo| image:: &lt;a href=&#34;https://zenodo.org/badge/DOI/10.5281/zenodo.8415866.svg&#34;&gt;https://zenodo.org/badge/DOI/10.5281/zenodo.8415866.svg&lt;/a&gt; :target: &lt;a href=&#34;https://zenodo.org/records/8415866&#34;&gt;https://zenodo.org/records/8415866&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |joss| image:: &lt;a href=&#34;http://joss.theoj.org/papers/10.21105/joss.01450/status.svg&#34;&gt;http://joss.theoj.org/papers/10.21105/joss.01450/status.svg&lt;/a&gt; :target: &lt;a href=&#34;https://doi.org/10.21105/joss.01450&#34;&gt;https://doi.org/10.21105/joss.01450&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |pypi| image:: &lt;a href=&#34;https://img.shields.io/pypi/v/pyvista.svg?logo=python&amp;amp;logoColor=white&#34;&gt;https://img.shields.io/pypi/v/pyvista.svg?logo=python&amp;amp;logoColor=white&lt;/a&gt; :target: &lt;a href=&#34;https://pypi.org/project/pyvista/&#34;&gt;https://pypi.org/project/pyvista/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |conda| image:: &lt;a href=&#34;https://img.shields.io/conda/vn/conda-forge/pyvista.svg?logo=conda-forge&amp;amp;logoColor=white&#34;&gt;https://img.shields.io/conda/vn/conda-forge/pyvista.svg?logo=conda-forge&amp;amp;logoColor=white&lt;/a&gt; :target: &lt;a href=&#34;https://anaconda.org/conda-forge/pyvista&#34;&gt;https://anaconda.org/conda-forge/pyvista&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |GH-CI| image:: &lt;a href=&#34;https://github.com/pyvista/pyvista/actions/workflows/testing-and-deployment.yml/badge.svg&#34;&gt;https://github.com/pyvista/pyvista/actions/workflows/testing-and-deployment.yml/badge.svg&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/pyvista/pyvista/actions/workflows/testing-and-deployment.yml&#34;&gt;https://github.com/pyvista/pyvista/actions/workflows/testing-and-deployment.yml&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |codecov| image:: &lt;a href=&#34;https://codecov.io/gh/pyvista/pyvista/branch/main/graph/badge.svg&#34;&gt;https://codecov.io/gh/pyvista/pyvista/branch/main/graph/badge.svg&lt;/a&gt; :target: &lt;a href=&#34;https://app.codecov.io/gh/pyvista/pyvista&#34;&gt;https://app.codecov.io/gh/pyvista/pyvista&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |codacy| image:: &lt;a href=&#34;https://app.codacy.com/project/badge/Grade/779ac6aed37548839384acfc0c1aab44&#34;&gt;https://app.codacy.com/project/badge/Grade/779ac6aed37548839384acfc0c1aab44&lt;/a&gt; :target: &lt;a href=&#34;https://app.codacy.com/gh/pyvista/pyvista/dashboard&#34;&gt;https://app.codacy.com/gh/pyvista/pyvista/dashboard&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |MIT| image:: &lt;a href=&#34;https://img.shields.io/badge/License-MIT-yellow.svg&#34;&gt;https://img.shields.io/badge/License-MIT-yellow.svg&lt;/a&gt; :target: &lt;a href=&#34;https://opensource.org/license/mit/&#34;&gt;https://opensource.org/license/mit/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |slack| image:: &lt;a href=&#34;https://img.shields.io/badge/Slack-pyvista-green.svg?logo=slack&#34;&gt;https://img.shields.io/badge/Slack-pyvista-green.svg?logo=slack&lt;/a&gt; :target: &lt;a href=&#34;https://communityinviter.com/apps/pyvista/pyvista&#34;&gt;https://communityinviter.com/apps/pyvista/pyvista&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |PyPIact| image:: &lt;a href=&#34;https://img.shields.io/pypi/dm/pyvista.svg?label=PyPI%20downloads&#34;&gt;https://img.shields.io/pypi/dm/pyvista.svg?label=PyPI%20downloads&lt;/a&gt; :target: &lt;a href=&#34;https://pypi.org/project/pyvista/&#34;&gt;https://pypi.org/project/pyvista/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |condaact| image:: &lt;a href=&#34;https://img.shields.io/conda/dn/conda-forge/pyvista.svg?label=Conda%20downloads&#34;&gt;https://img.shields.io/conda/dn/conda-forge/pyvista.svg?label=Conda%20downloads&lt;/a&gt; :target: &lt;a href=&#34;https://anaconda.org/conda-forge/pyvista&#34;&gt;https://anaconda.org/conda-forge/pyvista&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |discuss| image:: &lt;a href=&#34;https://img.shields.io/badge/GitHub-Discussions-green?logo=github&#34;&gt;https://img.shields.io/badge/GitHub-Discussions-green?logo=github&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/pyvista/pyvista/discussions&#34;&gt;https://github.com/pyvista/pyvista/discussions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |prettier| image:: &lt;a href=&#34;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat&#34;&gt;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/prettier/prettier&#34;&gt;https://github.com/prettier/prettier&lt;/a&gt; :alt: prettier&lt;/p&gt; &#xA;&lt;p&gt;.. |python| image:: &lt;a href=&#34;https://img.shields.io/badge/python-3.8+-blue.svg&#34;&gt;https://img.shields.io/badge/python-3.8+-blue.svg&lt;/a&gt; :target: &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;https://www.python.org/downloads/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |NumFOCUS Affiliated| image:: &lt;a href=&#34;https://img.shields.io/badge/affiliated-NumFOCUS-orange.svg?style=flat&amp;amp;colorA=E1523D&amp;amp;colorB=007D8A&#34;&gt;https://img.shields.io/badge/affiliated-NumFOCUS-orange.svg?style=flat&amp;amp;colorA=E1523D&amp;amp;colorB=007D8A&lt;/a&gt; :target: &lt;a href=&#34;https://numfocus.org/sponsored-projects/affiliated-projects&#34;&gt;https://numfocus.org/sponsored-projects/affiliated-projects&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |pre-commit.ci status| image:: &lt;a href=&#34;https://results.pre-commit.ci/badge/github/pyvista/pyvista/main.svg&#34;&gt;https://results.pre-commit.ci/badge/github/pyvista/pyvista/main.svg&lt;/a&gt; :target: &lt;a href=&#34;https://results.pre-commit.ci/latest/github/pyvista/pyvista/main&#34;&gt;https://results.pre-commit.ci/latest/github/pyvista/pyvista/main&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |Ruff| image:: &lt;a href=&#34;https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json&#34;&gt;https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/astral-sh/ruff&#34;&gt;https://github.com/astral-sh/ruff&lt;/a&gt; :alt: Ruff&lt;/p&gt; &#xA;&lt;p&gt;.. |Awesome Scientific Computing| image:: &lt;a href=&#34;https://awesome.re/mentioned-badge.svg&#34;&gt;https://awesome.re/mentioned-badge.svg&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/nschloe/awesome-scientific-computing&#34;&gt;https://github.com/nschloe/awesome-scientific-computing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |Packaging status| image:: &lt;a href=&#34;https://repology.org/badge/tiny-repos/python:pyvista.svg&#34;&gt;https://repology.org/badge/tiny-repos/python:pyvista.svg&lt;/a&gt; :target: &lt;a href=&#34;https://repology.org/project/python:pyvista/versions&#34;&gt;https://repology.org/project/python:pyvista/versions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |Good first issue| image:: &lt;a href=&#34;https://img.shields.io/github/issues/pyvista/pyvista/good%20first%20issue&#34;&gt;https://img.shields.io/github/issues/pyvista/pyvista/good%20first%20issue&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/pyvista/pyvista/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&#34;&gt;https://github.com/pyvista/pyvista/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |GitHub Repo stars| image:: &lt;a href=&#34;https://img.shields.io/github/stars/pyvista/pyvista&#34;&gt;https://img.shields.io/github/stars/pyvista/pyvista&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/pyvista/pyvista/stargazers&#34;&gt;https://github.com/pyvista/pyvista/stargazers&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;+----------------------+------------------------------------------------+ | Deployment | |pypi| |conda| |Packaging status| | +----------------------+------------------------------------------------+ | Build Status | |GH-CI| |python| |pre-commit.ci status| | +----------------------+------------------------------------------------+ | Metrics | |codacy| |codecov| | +----------------------+------------------------------------------------+ | Activity | |PyPIact| |condaact| | +----------------------+------------------------------------------------+ | Citation | |joss| |zenodo| | +----------------------+------------------------------------------------+ | License | |MIT| | +----------------------+------------------------------------------------+ | Community | |slack| |discuss| |Good first issue| | | | |GitHub Repo stars| | +----------------------+------------------------------------------------+ | Formatter | |prettier| | +----------------------+------------------------------------------------+ | Linter | |Ruff| | +----------------------+------------------------------------------------+ | Affiliated | |NumFOCUS Affiliated| | +----------------------+------------------------------------------------+ | Mentioned | |Awesome Scientific Computing| | +----------------------+------------------------------------------------+&lt;/p&gt; &#xA;&lt;h1&gt;Highlights&lt;/h1&gt; &#xA;&lt;p&gt;.. |binder| image:: &lt;a href=&#34;https://static.mybinder.org/badge_logo.svg&#34;&gt;https://static.mybinder.org/badge_logo.svg&lt;/a&gt; :target: &lt;a href=&#34;https://mybinder.org/v2/gh/pyvista/pyvista-examples/master&#34;&gt;https://mybinder.org/v2/gh/pyvista/pyvista-examples/master&lt;/a&gt; :alt: Launch on Binder&lt;/p&gt; &#xA;&lt;p&gt;Head over to the &lt;code&gt;Quick Examples&lt;/code&gt;_ page in the docs to explore our gallery of examples showcasing what PyVista can do. Want to test-drive PyVista? All of the examples from the gallery are live on MyBinder for you to test drive without installing anything locally: |binder|&lt;/p&gt; &#xA;&lt;p&gt;.. _Quick Examples: &lt;a href=&#34;http://docs.pyvista.org/examples/index.html&#34;&gt;http://docs.pyvista.org/examples/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview of Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Extensive gallery of examples (see &lt;code&gt;Quick Examples&lt;/code&gt;_)&lt;/li&gt; &#xA; &lt;li&gt;Interactive plotting in Jupyter Notebooks with server-side and client-side rendering with &lt;code&gt;trame&lt;/code&gt;_.&lt;/li&gt; &#xA; &lt;li&gt;Filtering/plotting tools built for interactivity (see &lt;code&gt;Widgets&lt;/code&gt;_)&lt;/li&gt; &#xA; &lt;li&gt;Direct access to mesh analysis and transformation routines (see Filters_)&lt;/li&gt; &#xA; &lt;li&gt;Intuitive plotting routines with &lt;code&gt;matplotlib&lt;/code&gt; similar syntax (see Plotting_)&lt;/li&gt; &#xA; &lt;li&gt;Import meshes from many common formats (use &lt;code&gt;pyvista.read()&lt;/code&gt;). Support for all formats handled by &lt;code&gt;meshio&lt;/code&gt;_ is built-in.&lt;/li&gt; &#xA; &lt;li&gt;Export meshes as VTK, STL, OBJ, or PLY (&lt;code&gt;mesh.save()&lt;/code&gt;) file types or any formats supported by meshio_ (&lt;code&gt;pyvista.save_meshio()&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;.. _trame: &lt;a href=&#34;https://github.com/Kitware/trame&#34;&gt;https://github.com/Kitware/trame&lt;/a&gt; .. _Widgets: &lt;a href=&#34;https://docs.pyvista.org/api/plotting/index.html#widget-api&#34;&gt;https://docs.pyvista.org/api/plotting/index.html#widget-api&lt;/a&gt; .. _Filters: &lt;a href=&#34;https://docs.pyvista.org/api/core/filters.html&#34;&gt;https://docs.pyvista.org/api/core/filters.html&lt;/a&gt; .. _Plotting: &lt;a href=&#34;https://docs.pyvista.org/api/plotting/index.html&#34;&gt;https://docs.pyvista.org/api/plotting/index.html&lt;/a&gt; .. _meshio: &lt;a href=&#34;https://github.com/nschloe/meshio&#34;&gt;https://github.com/nschloe/meshio&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;Refer to the &lt;code&gt;documentation &amp;lt;http://docs.pyvista.org/&amp;gt;&lt;/code&gt;_ for detailed installation and usage details.&lt;/p&gt; &#xA;&lt;p&gt;For general questions about the project, its applications, or about software usage, please create a discussion in &lt;code&gt;pyvista/discussions&lt;/code&gt;_ where the community can collectively address your questions. You are also welcome to join us on Slack_.&lt;/p&gt; &#xA;&lt;p&gt;.. _pyvista/discussions: &lt;a href=&#34;https://github.com/pyvista/pyvista/discussions&#34;&gt;https://github.com/pyvista/pyvista/discussions&lt;/a&gt; .. _Slack: &lt;a href=&#34;https://communityinviter.com/apps/pyvista/pyvista&#34;&gt;https://communityinviter.com/apps/pyvista/pyvista&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;PyVista can be installed from &lt;code&gt;PyPI &amp;lt;https://pypi.org/project/pyvista/&amp;gt;&lt;/code&gt;_ using &lt;code&gt;pip&lt;/code&gt; on Python &amp;gt;= 3.8::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install pyvista&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also visit &lt;code&gt;PyPI &amp;lt;https://pypi.org/project/pyvista/&amp;gt;&lt;/code&gt;&lt;em&gt;, &lt;code&gt;Anaconda &amp;lt;https://anaconda.org/conda-forge/pyvista&amp;gt;&lt;/code&gt;&lt;/em&gt;, or &lt;code&gt;GitHub &amp;lt;https://github.com/pyvista/pyvista&amp;gt;&lt;/code&gt;_ to download the source.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;code&gt;Installation &amp;lt;http://docs.pyvista.org/getting-started/installation.html#install-ref.&amp;gt;&lt;/code&gt;_ for more details regarding optional dependencies or if the installation through pip doesn&#39;t work out.&lt;/p&gt; &#xA;&lt;h1&gt;Connections&lt;/h1&gt; &#xA;&lt;p&gt;PyVista is a powerful tool that researchers can harness to create compelling, integrated visualizations of large datasets in an intuitive, Pythonic manner.&lt;/p&gt; &#xA;&lt;p&gt;Learn more about how PyVista is used across science and engineering disciplines by a diverse community of users on our &lt;code&gt;Connections page&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;.. _Connections page: &lt;a href=&#34;https://docs.pyvista.org/getting-started/connections.html&#34;&gt;https://docs.pyvista.org/getting-started/connections.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Authors&lt;/h1&gt; &#xA;&lt;p&gt;.. |contrib.rocks| image:: &lt;a href=&#34;https://contrib.rocks/image?repo=pyvista/pyvista&#34;&gt;https://contrib.rocks/image?repo=pyvista/pyvista&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/pyvista/pyvista/graphs/contributors&#34;&gt;https://github.com/pyvista/pyvista/graphs/contributors&lt;/a&gt; :alt: contrib.rocks&lt;/p&gt; &#xA;&lt;p&gt;Please take a look at the &lt;code&gt;contributors page&lt;/code&gt;_ and the active &lt;code&gt;list of authors&lt;/code&gt;_ to learn more about the developers of PyVista.&lt;/p&gt; &#xA;&lt;p&gt;|contrib.rocks|&lt;/p&gt; &#xA;&lt;p&gt;Made with &lt;code&gt;contrib rocks&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;.. _contributors page: &lt;a href=&#34;https://github.com/pyvista/pyvista/graphs/contributors/&#34;&gt;https://github.com/pyvista/pyvista/graphs/contributors/&lt;/a&gt; .. _list of authors: &lt;a href=&#34;https://docs.pyvista.org/getting-started/authors.html#authors&#34;&gt;https://docs.pyvista.org/getting-started/authors.html#authors&lt;/a&gt; .. _contrib rocks: &lt;a href=&#34;https://contrib.rocks&#34;&gt;https://contrib.rocks&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;.. |Contributor Covenant| image:: &lt;a href=&#34;https://img.shields.io/badge/Contributor%20Covenant-2.1-4baaaa.svg&#34;&gt;https://img.shields.io/badge/Contributor%20Covenant-2.1-4baaaa.svg&lt;/a&gt; :target: CODE_OF_CONDUCT.md&lt;/p&gt; &#xA;&lt;p&gt;.. |codetriage| image:: &lt;a href=&#34;https://www.codetriage.com/pyvista/pyvista/badges/users.svg&#34;&gt;https://www.codetriage.com/pyvista/pyvista/badges/users.svg&lt;/a&gt; :target: &lt;a href=&#34;https://www.codetriage.com/pyvista/pyvista&#34;&gt;https://www.codetriage.com/pyvista/pyvista&lt;/a&gt; :alt: Code Triage&lt;/p&gt; &#xA;&lt;p&gt;.. |Open in GitHub Codespaces| image:: &lt;a href=&#34;https://github.com/codespaces/badge.svg&#34;&gt;https://github.com/codespaces/badge.svg&lt;/a&gt; :target: &lt;a href=&#34;https://codespaces.new/pyvista/pyvista&#34;&gt;https://codespaces.new/pyvista/pyvista&lt;/a&gt; :alt: Open in GitHub Codespaces&lt;/p&gt; &#xA;&lt;p&gt;|Contributor Covenant| |codetriage| |Open in GitHub Codespaces|&lt;/p&gt; &#xA;&lt;p&gt;We absolutely welcome contributions and we hope that our &lt;code&gt;Contributing Guide&lt;/code&gt;_ will facilitate your ability to make PyVista better. PyVista is mostly maintained on a volunteer basis and thus we need to foster a community that can support user questions and develop new features to make this software a useful tool for all users while encouraging every member of the community to share their ideas. To learn more about contributing to PyVista, please see the &lt;code&gt;Contributing Guide&lt;/code&gt;_ and our &lt;code&gt;Code of Conduct&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;.. _Contributing Guide: &lt;a href=&#34;https://github.com/pyvista/pyvista/raw/main/CONTRIBUTING.rst&#34;&gt;https://github.com/pyvista/pyvista/blob/main/CONTRIBUTING.rst&lt;/a&gt; .. _Code of Conduct: &lt;a href=&#34;https://github.com/pyvista/pyvista/raw/main/CODE_OF_CONDUCT.md&#34;&gt;https://github.com/pyvista/pyvista/blob/main/CODE_OF_CONDUCT.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Star History&lt;/h1&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://api.star-history.com/svg?repos=pyvista/pyvista&amp;amp;type=Date&#34;&gt;https://api.star-history.com/svg?repos=pyvista/pyvista&amp;amp;type=Date&lt;/a&gt; :alt: Star History Chart :target: &lt;a href=&#34;https://star-history.com/#pyvista/pyvista&amp;amp;Date&#34;&gt;https://star-history.com/#pyvista/pyvista&amp;amp;Date&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Citing PyVista&lt;/h1&gt; &#xA;&lt;p&gt;There is a &lt;code&gt;paper about PyVista &amp;lt;https://doi.org/10.21105/joss.01450&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;If you are using PyVista in your scientific research, please help our scientific visibility by citing our work.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Sullivan and Kaszynski, (2019). PyVista: 3D plotting and mesh analysis through a streamlined interface for the Visualization Toolkit (VTK). Journal of Open Source Software, 4(37), 1450, https://doi.org/10.21105/joss.01450&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;BibTex:&lt;/p&gt; &#xA;&lt;p&gt;.. code::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{sullivan2019pyvista,&#xA;  doi = {10.21105/joss.01450},&#xA;  url = {https://doi.org/10.21105/joss.01450},&#xA;  year = {2019},&#xA;  month = {May},&#xA;  publisher = {The Open Journal},&#xA;  volume = {4},&#xA;  number = {37},&#xA;  pages = {1450},&#xA;  author = {Bane Sullivan and Alexander Kaszynski},&#xA;  title = {{PyVista}: {3D} plotting and mesh analysis through a streamlined interface for the {Visualization Toolkit} ({VTK})},&#xA;  journal = {Journal of Open Source Software}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Professional Support&lt;/h1&gt; &#xA;&lt;p&gt;While PyVista is an Open Source project with a big community, you might be looking for professional support. This section aims to list companies with VTK/PyVista expertise who can help you with your software project.&lt;/p&gt; &#xA;&lt;p&gt;+---------------+-----------------------------------------+ | Company Name | Kitware Inc. | +---------------+-----------------------------------------+ | Description | Kitware is dedicated to build solutions | | | for our customers based on our | | | well-established open source platforms. | +---------------+-----------------------------------------+ | Expertise | CMake, VTK, PyVista, ParaView, Trame | +---------------+-----------------------------------------+ | Contact | &lt;a href=&#34;https://www.kitware.com/contact/&#34;&gt;https://www.kitware.com/contact/&lt;/a&gt; | +---------------+-----------------------------------------+&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sergree/matchering</title>
    <updated>2024-10-26T01:33:34Z</updated>
    <id>tag:github.com,2024-10-26:/sergree/matchering</id>
    <link href="https://github.com/sergree/matchering" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🎚️ Open Source Audio Matching and Mastering&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://pip.me/sergree&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sergree/matchering/master/images/logo.png&#34; alt=&#34;Matchering 2.0&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/matchering/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/l/matchering.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/py/matchering&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/matchering.svg?sanitize=true&#34; alt=&#34;PyPI Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/matchering/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/matchering.svg?sanitize=true&#34; alt=&#34;PyPI Python Versions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/vinta/awesome-python&#34;&gt;&lt;img src=&#34;https://awesome.re/mentioned-badge.svg?sanitize=true&#34; alt=&#34;Mentioned in Awesome Python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34; alt=&#34;Code style: black&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Matching + Mastering = ❤️&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sergree/matchering&#34;&gt;Matchering 2.0&lt;/a&gt;&lt;/strong&gt; is a novel &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sergree/matchering/master/#docker-image&#34;&gt;Containerized Web Application&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href=&#34;https://pypi.org/project/matchering&#34;&gt;Python Library&lt;/a&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sergree/matchering/master/#comfyui-node&#34;&gt;ComfyUI Node&lt;/a&gt;&lt;/strong&gt; for audio matching and &lt;a href=&#34;https://en.wikipedia.org/wiki/Audio_mastering&#34;&gt;mastering&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;🔥 Also integrated in the &lt;strong&gt;&lt;a href=&#34;https://ultimatevocalremover.com/&#34;&gt;UVR5 Desktop App&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt; &#xA;&lt;p&gt;It follows a &lt;em&gt;simple idea&lt;/em&gt; - you take TWO audio files and feed them into &lt;strong&gt;Matchering&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;TARGET&lt;/strong&gt; (the track you want to master, you want it to sound like the reference)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;REFERENCE&lt;/strong&gt; (another track, like some kind of &#34;wet&#34; popular song, you want your target to sound like it)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Our algorithm matches both of these tracks and provides you the mastered &lt;strong&gt;TARGET&lt;/strong&gt; track with the same &lt;a href=&#34;https://en.wikipedia.org/wiki/Root_mean_square&#34;&gt;RMS&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Frequency_response&#34;&gt;FR&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Amplitude&#34;&gt;peak amplitude&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Stereo_imaging&#34;&gt;stereo width&lt;/a&gt; as the &lt;strong&gt;REFERENCE&lt;/strong&gt; track has.&lt;/p&gt; &#xA;&lt;p&gt;🔥 &lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=wZRV2H4PK0Q&#34; title=&#34;Benn Jordan Matchering 2.0 Review&#34;&gt;Benn Jordan Matchering review&lt;/a&gt;&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;em&gt;&lt;strong&gt;Matchering 2.0 beating all other AI&#39;s&lt;/strong&gt;! (note: by carefully selecting a proper song as reference)&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;em&gt;Ranking it no.3 (out of 12) right behind 2 professional master engineers&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;em&gt;Seems a rock-solid study with 472 judged entries&lt;/em&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;em&gt;(Thanks to &lt;a href=&#34;https://github.com/bascurtiz&#34;&gt;@bascurtiz&lt;/a&gt; for &lt;a href=&#34;https://github.com/sergree/matchering/issues/59&#34;&gt;the find&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=wZRV2H4PK0Q&#34; title=&#34;Benn Jordan Matchering 2.0 Review&#34;&gt;&lt;img src=&#34;http://i3.ytimg.com/vi/wZRV2H4PK0Q/hqdefault.jpg&#34; alt=&#34;Benn Jordan Review Video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can try out &lt;strong&gt;Matchering&lt;/strong&gt; yourself without having to install it, thanks to the hosting provided by &lt;strong&gt;&lt;a href=&#34;https://www.songmastr.com/&#34;&gt;Songmastr&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&#34;https://moises.ai/&#34;&gt;Moises&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Watch &lt;strong&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=8Su5STDYfcA&#34; title=&#34;Matchering 2.0 - Open Source Audio Matching and Mastering&#34;&gt;the video&lt;/a&gt;&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=8Su5STDYfcA&#34; title=&#34;Matchering 2.0 - Open Source Audio Matching and Mastering&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/8Su5STDYfcA/0.jpg&#34; alt=&#34;Matchering 2.0 Promo Video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;So &lt;strong&gt;Matchering 2.0&lt;/strong&gt; will make your song sound the way you want! It opens up a wide range of opportunities:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can make your music instantly sound like your favorite artist&#39;s music&lt;/li&gt; &#xA; &lt;li&gt;You can make all the tracks on your new album sound the same very quickly&lt;/li&gt; &#xA; &lt;li&gt;You can find new aspects of your sound in experiments&lt;/li&gt; &#xA; &lt;li&gt;You can do everything as you want! Because of &lt;strong&gt;&lt;a href=&#34;https://macprovideo.com/article/audio-software/sound-tools-instant-online-mastering-with-reference-matching-now-in-open-beta&#34;&gt;Your References, Your Rules.™&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;(just a little nostalgic note)&lt;/em&gt; 🤭&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sergree/matchering/master/images/animation.gif&#34; alt=&#34;Matchering WEB GIF Animation&#34; title=&#34;Matchering WEB&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Differences from the previous major version:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Completely rewritten in &lt;a href=&#34;https://www.python.org/&#34;&gt;Python 3&lt;/a&gt;, based on open source tech stack (no more &lt;a href=&#34;https://www.mathworks.com/products/matlab.html&#34;&gt;MATLAB&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;Our own open source &lt;a href=&#34;https://github.com/sergree/matchering/tree/master/matchering/limiter&#34;&gt;Hyrax&lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Dynamic_range_compression#Limiting&#34;&gt;brickwall limiter&lt;/a&gt; was implemented for it&lt;/li&gt; &#xA;  &lt;li&gt;Processing speed and accuracy have been increased&lt;/li&gt; &#xA;  &lt;li&gt;Now it is &lt;a href=&#34;https://pypi.org/project/matchering&#34;&gt;the library&lt;/a&gt; that can be connected to &lt;strong&gt;everything&lt;/strong&gt; in &lt;strong&gt;the Python world&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you are looking for a &lt;strong&gt;Matchering paper&lt;/strong&gt;, you can read &lt;strong&gt;&lt;a href=&#34;https://habr.com/ru/post/709120/&#34;&gt;this Habr article&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Installation and Usage&lt;/h1&gt; &#xA;&lt;p&gt;If you are a music producer or an audio engineer, choose the &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sergree/matchering/master/#desktop-app---the-easiest-way&#34;&gt;Desktop App&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sergree/matchering/master/#comfyui-node&#34;&gt;ComfyUI Node&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are an AI mastering startup, choose the &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sergree/matchering/master/#docker-image&#34;&gt;Docker Image&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are a developer, choose the &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sergree/matchering/master/#python-library---for-developers&#34;&gt;Python Library&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Desktop App - The Easiest Way&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://ultimatevocalremover.com/&#34;&gt;NEW! Matchering @ UVR5 Desktop App&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can find Matchering under &lt;code&gt;Choose Process Method &amp;gt; Audio Tools &amp;amp; Choose Audio Tool &amp;gt; Matchering&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Aw0nH6QqAck&#34;&gt;Or try WITHOUT Installation&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h1&gt;ComfyUI Node&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/MuziekMagie/ComfyUI-Matchering&#34;&gt;ComfyUI-Matchering&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h1&gt;Docker Image&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/sergree/matchering/raw/master/DOCKER_WINDOWS.md&#34;&gt;Windows&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/sergree/matchering/raw/master/DOCKER_MACOS.md&#34;&gt;macOS&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/sergree/matchering/raw/master/DOCKER_LINUX.md&#34;&gt;Linux&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Updating&lt;/h2&gt; &#xA;&lt;p&gt;If you need to update the version of the installed &lt;strong&gt;Docker Image&lt;/strong&gt;, follow &lt;strong&gt;&lt;a href=&#34;https://github.com/sergree/matchering/raw/master/DOCKER_UPDATING.md&#34;&gt;these instructions&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Python Library - For Developers&lt;/h1&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;4 GB RAM machine with &lt;a href=&#34;https://www.python.org/&#34;&gt;Python 3.8.0 or higher&lt;/a&gt; is required&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;libsndfile&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Matchering 2.0&lt;/strong&gt; depends on the &lt;strong&gt;&lt;a href=&#34;https://github.com/bastibe/SoundFile#installation&#34;&gt;SoundFile&lt;/a&gt;&lt;/strong&gt; library, which depends on the system library &lt;strong&gt;&lt;a href=&#34;http://www.mega-nerd.com/libsndfile/&#34;&gt;libsndfile&lt;/a&gt;&lt;/strong&gt;. On Windows and macOS, it installs automatically. On Linux, you need to install &lt;strong&gt;&lt;a href=&#34;http://www.mega-nerd.com/libsndfile/&#34;&gt;libsndfile&lt;/a&gt;&lt;/strong&gt; using your distribution&#39;s package manager, for example:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt -y install libsndfile1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;python3-pip&lt;/h3&gt; &#xA;&lt;p&gt;On some Linux distributions, &lt;strong&gt;python3-pip&lt;/strong&gt; is not installed by default. For example use this command on Ubuntu Linux to fix this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo apt -y install python3-pip&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Matchering Python Package&lt;/h3&gt; &#xA;&lt;p&gt;Finally, install our &lt;code&gt;matchering&lt;/code&gt; package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Linux / macOS&#xA;python3 -m pip install -U matchering&#xA;&#xA;# Windows&#xA;python -m pip install -U matchering&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;em&gt;(Optional) FFmpeg&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;p&gt;If you would like to enable &lt;em&gt;MP3 loading support&lt;/em&gt;, you need to install the &lt;strong&gt;&lt;a href=&#34;https://www.ffmpeg.org/download.html&#34;&gt;FFmpeg&lt;/a&gt;&lt;/strong&gt; library. For example use this command on Ubuntu Linux:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo apt -y install ffmpeg&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or follow these instructions: &lt;a href=&#34;https://video.stackexchange.com/questions/20495/how-do-i-set-up-and-use-ffmpeg-in-windows&#34;&gt;Windows&lt;/a&gt;, &lt;a href=&#34;https://superuser.com/questions/624561/install-ffmpeg-on-os-x&#34;&gt;macOS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import matchering as mg&#xA;&#xA;# Sending all log messages to the default print function&#xA;# Just delete the following line to work silently&#xA;mg.log(print)&#xA;&#xA;mg.process(&#xA;    # The track you want to master&#xA;    target=&#34;my_song.wav&#34;,&#xA;    # Some &#34;wet&#34; reference track&#xA;    reference=&#34;some_popular_song.wav&#34;,&#xA;    # Where and how to save your results&#xA;    results=[&#xA;        mg.pcm16(&#34;my_song_master_16bit.wav&#34;),&#xA;        mg.pcm24(&#34;my_song_master_24bit.wav&#34;),&#xA;    ],&#xA;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find more examples in the &lt;strong&gt;&lt;a href=&#34;https://github.com/sergree/matchering/tree/master/examples&#34;&gt;examples directory&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Or you can use premade &lt;strong&gt;Matchering 2.0 Command Line Application&lt;/strong&gt;: &lt;strong&gt;&lt;a href=&#34;https://github.com/sergree/matchering-cli&#34;&gt;matchering-cli&lt;/a&gt;&lt;/strong&gt;.&lt;/h3&gt; &#xA;&lt;h3&gt;Or its enhanced fork: &lt;strong&gt;&lt;a href=&#34;https://github.com/kubinka0505/matchering-cli&#34;&gt;kubinka0505/matchering-cli&lt;/a&gt;&lt;/strong&gt;.&lt;/h3&gt; &#xA;&lt;h2&gt;💓 WhatBPM&lt;/h2&gt; &#xA;&lt;p&gt;Looking for the perfect BPM or key for a new EDM track?&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://sergree.github.io/whatbpm&#34;&gt;Check out WhatBPM!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;A completely free open-source web service from the author of Matchering.&lt;/p&gt; &#xA;&lt;h2&gt;A Coffee&lt;/h2&gt; &#xA;&lt;p&gt;If our package saved your time or money, you may:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pip.me/sergree&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Thank you!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sergree/matchering/raw/master/PRESS.md&#34;&gt;Press About Us&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sergree/matchering/raw/master/SUPPORTERS.md&#34;&gt;Supporters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sergree/matchering/raw/master/LIMITER_TEST.md&#34;&gt;Our Limiter Quality Test&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JClones/JSFXClones/raw/master/JClones_Hyrax.md&#34;&gt;Matchering Hyrax Limiter JSFX clone by Tokyo Dawn Labs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sergree/matchering/raw/master/LOG_CODES.md&#34;&gt;Log Codes Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sergree/matchering/raw/master/THOUGHTS.md&#34;&gt;Our Thoughts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>