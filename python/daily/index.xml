<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-09T01:42:11Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>blakeblackshear/frigate</title>
    <updated>2023-01-09T01:42:11Z</updated>
    <id>tag:github.com,2023-01-09:/blakeblackshear/frigate</id>
    <link href="https://github.com/blakeblackshear/frigate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NVR with realtime local object detection for IP cameras&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;logo&#34; src=&#34;https://raw.githubusercontent.com/blakeblackshear/frigate/dev/docs/static/img/frigate.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Frigate - NVR With Realtime Object Detection for IP Cameras&lt;/h1&gt; &#xA;&lt;p&gt;A complete and local NVR designed for &lt;a href=&#34;https://www.home-assistant.io&#34;&gt;Home Assistant&lt;/a&gt; with AI object detection. Uses OpenCV and Tensorflow to perform realtime object detection locally for IP cameras.&lt;/p&gt; &#xA;&lt;p&gt;Use of a &lt;a href=&#34;https://coral.ai/products/&#34;&gt;Google Coral Accelerator&lt;/a&gt; is optional, but highly recommended. The Coral will outperform even the best CPUs and can process 100+ FPS with very little overhead.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tight integration with Home Assistant via a &lt;a href=&#34;https://github.com/blakeblackshear/frigate-hass-integration&#34;&gt;custom component&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Designed to minimize resource use and maximize performance by only looking for objects when and where it is necessary&lt;/li&gt; &#xA; &lt;li&gt;Leverages multiprocessing heavily with an emphasis on realtime over processing every frame&lt;/li&gt; &#xA; &lt;li&gt;Uses a very low overhead motion detection to determine where to run object detection&lt;/li&gt; &#xA; &lt;li&gt;Object detection with TensorFlow runs in separate processes for maximum FPS&lt;/li&gt; &#xA; &lt;li&gt;Communicates over MQTT for easy integration into other systems&lt;/li&gt; &#xA; &lt;li&gt;Records video with retention settings based on detected objects&lt;/li&gt; &#xA; &lt;li&gt;24/7 recording&lt;/li&gt; &#xA; &lt;li&gt;Re-streaming via RTMP to reduce the number of connections to your camera&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;View the documentation at &lt;a href=&#34;https://docs.frigate.video&#34;&gt;https://docs.frigate.video&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to make a donation to support development, please use &lt;a href=&#34;https://github.com/sponsors/blakeblackshear&#34;&gt;Github Sponsors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;Integration into Home Assistant&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/blakeblackshear/frigate/dev/docs/static/img/media_browser.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/blakeblackshear/frigate/dev/docs/static/img/media_browser.png&#34; height=&#34;400&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/blakeblackshear/frigate/dev/docs/static/img/notification.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/blakeblackshear/frigate/dev/docs/static/img/notification.png&#34; height=&#34;400&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Also comes with a builtin UI:&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/blakeblackshear/frigate/dev/docs/static/img/home-ui.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/blakeblackshear/frigate/dev/docs/static/img/home-ui.png&#34; height=&#34;400&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/blakeblackshear/frigate/dev/docs/static/img/camera-ui.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/blakeblackshear/frigate/dev/docs/static/img/camera-ui.png&#34; height=&#34;400&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/blakeblackshear/frigate/dev/docs/static/img/events-ui.png&#34; alt=&#34;Events&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>KMKfw/kmk_firmware</title>
    <updated>2023-01-09T01:42:11Z</updated>
    <id>tag:github.com,2023-01-09:/KMKfw/kmk_firmware</id>
    <link href="https://github.com/KMKfw/kmk_firmware" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Clackety Keyboards Powered by Python&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;KMK: Clackety Keyboards Powered by Python&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/KMKfw/kmk_firmware&#34; alt=&#34;GitHub&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/KMKfw/kmk_firmware&#34; alt=&#34;GitHub contributors&#34;&gt; &lt;img src=&#34;https://img.shields.io/tokei/lines/github/KMKfw/kmk_firmware&#34; alt=&#34;Lines of code&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-raw/KMKfw/kmk_firmware&#34; alt=&#34;GitHub issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-closed/KMKfw/kmk_firmware&#34; alt=&#34;GitHub closed issues&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;KMK is a feature-rich and beginner-friendly firmware for computer keyboards written and configured in &lt;a href=&#34;https://github.com/adafruit/circuitpython&#34;&gt;CircuitPython&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For asynchronous support and chatter about KMK, &lt;a href=&#34;https://kmkfw.zulipchat.com&#34;&gt;join our Zulip community&lt;/a&gt;! In particular, swing by the Zulip chat &lt;em&gt;before&lt;/em&gt; opening a GitHub Issue about configuration, documentation, etc. concerns.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The former Matrix and Discord rooms once linked to in this README are no longer officially supported, please do not use them!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fully configured through a single, easy to understand Python file that lives on a &#34;flash-drive&#34;-esque space on your microcontroller - edit on the go without DFU or other devtooling available!&lt;/li&gt; &#xA; &lt;li&gt;Single-piece or &lt;a href=&#34;https://raw.githubusercontent.com/KMKfw/kmk_firmware/master/docs/en/split_keyboards.md&#34;&gt;two-piece split keyboards&lt;/a&gt; are supported&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/KMKfw/kmk_firmware/master/docs/en/keys.md&#34;&gt;Chainable keys&lt;/a&gt; such as &lt;code&gt;KC.LWIN(KC.L)&lt;/code&gt; to lock the screen on a Windows PC&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/KMKfw/kmk_firmware/master/docs/en/sequences.md&#34;&gt;Built-in Unicode macros, including emojis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/KMKfw/kmk_firmware/master/docs/en/rgb.md&#34;&gt;RGB underglow&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/KMKfw/kmk_firmware/master/docs/en/led.md&#34;&gt;LED backlights&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;One key can turn into many more based on &lt;a href=&#34;https://raw.githubusercontent.com/KMKfw/kmk_firmware/master/docs/en/tapdance.md&#34;&gt;how many times you tap it&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bluetooth HID and split keyboards. No more wires.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;KMK requires &lt;a href=&#34;https://circuitpython.org/&#34;&gt;CircuitPython&lt;/a&gt; version 7.0 or higher. Our getting started guide can be found &lt;a href=&#34;https://raw.githubusercontent.com/KMKfw/kmk_firmware/master/docs/en/Getting_Started.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code Style&lt;/h2&gt; &#xA;&lt;p&gt;KMK uses &lt;a href=&#34;https://github.com/psf/black&#34;&gt;Black&lt;/a&gt; with a Python 3.6 target and, &lt;a href=&#34;https://github.com/psf/black/issues/594&#34;&gt;(controversially?)&lt;/a&gt; single quotes. Further code styling is enforced with isort and flake8 with several plugins. &lt;code&gt;make fix-isort fix-formatting&lt;/code&gt; before a commit is a good idea, and CI will fail if inbound code does not adhere to these formatting rules. Some exceptions are found in &lt;code&gt;setup.cfg&lt;/code&gt; loosening the rules in isolated cases, notably &lt;code&gt;user_keymaps&lt;/code&gt; (which is &lt;em&gt;also&lt;/em&gt; not subject to Black formatting for reasons documented in &lt;code&gt;pyproject.toml&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;p&gt;Unit tests within the &lt;code&gt;tests&lt;/code&gt; folder mock various CircuitPython modules to allow them to be executed in a desktop development environment.&lt;/p&gt; &#xA;&lt;p&gt;Execute tests using the command &lt;code&gt;python -m unittest&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License, Copyright, and Legal&lt;/h2&gt; &#xA;&lt;p&gt;All software in this repository is licensed under the &lt;a href=&#34;https://tldrlegal.com/license/gnu-general-public-license-v3-(gpl-3)&#34;&gt;GNU Public License, version 3&lt;/a&gt;. All documentation and hardware designs are licensed under the &lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;Creative Commons Attribution-ShareAlike 4.0&lt;/a&gt; license. Contributions to this repository must use these licenses unless otherwise agreed to by the Core team.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Due to ethical and legal concerns, any works derived from GitHub Copilot or similar artificial intelligence tooling are unacceptable for inclusion in any first-party KMK repository or other code collection. We further recommend not using GitHub Copilot while developing anything KMK-related, regardless of intent to submit upstream.&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Chia-Network/chia-blockchain</title>
    <updated>2023-01-09T01:42:11Z</updated>
    <id>tag:github.com,2023-01-09:/Chia-Network/chia-blockchain</id>
    <link href="https://github.com/Chia-Network/chia-blockchain" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chia blockchain python implementation (full node, farmer, harvester, timelord, and wallet)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;chia-blockchain&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://www.chia.net/wp-content/uploads/2022/09/chia-logo.svg?sanitize=true&#34; alt=&#34;Alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Current Release/main&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Development Branch/dev&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Chia-Network/chia-blockchain/actions/workflows/build-test-ubuntu-core.yml&#34;&gt;&lt;img src=&#34;https://github.com/Chia-Network/chia-blockchain/actions/workflows/build-test-ubuntu-core.yml/badge.svg?sanitize=true&#34; alt=&#34;Ubuntu Core Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Chia-Network/chia-blockchain/actions/workflows/build-test-macos-core.yml&#34;&gt;&lt;img src=&#34;https://github.com/Chia-Network/chia-blockchain/actions/workflows/build-test-macos-core.yml/badge.svg?sanitize=true&#34; alt=&#34;MacOS Core Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Chia-Network/chia-blockchain/actions/workflows/build-windows-installer.yml&#34;&gt;&lt;img src=&#34;https://github.com/Chia-Network/chia-blockchain/actions/workflows/build-windows-installer.yml/badge.svg?sanitize=true&#34; alt=&#34;Windows Installer on Windows 10 and Python 3.7&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Chia-Network/chia-blockchain/actions/workflows/build-test-ubuntu-core.yml&#34;&gt;&lt;img src=&#34;https://github.com/Chia-Network/chia-blockchain/actions/workflows/build-test-ubuntu-core.yml/badge.svg?branch=dev&#34; alt=&#34;Ubuntu Core Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Chia-Network/chia-blockchain/actions/workflows/build-test-macos-core.yml&#34;&gt;&lt;img src=&#34;https://github.com/Chia-Network/chia-blockchain/actions/workflows/build-test-macos-core.yml/badge.svg?branch=dev&#34; alt=&#34;MacOS Core Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Chia-Network/chia-blockchain/actions/workflows/build-windows-installer.yml&#34;&gt;&lt;img src=&#34;https://github.com/Chia-Network/chia-blockchain/actions/workflows/build-windows-installer.yml/badge.svg?branch=dev&#34; alt=&#34;Windows Installer on Windows 10 and Python 3.7&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/Chia-Network/chia-blockchain?logo=GitHub&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Chia is a modern cryptocurrency built from scratch, designed to be efficient, decentralized, and secure. Here are some of the features and benefits:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1tmRIb7lgi4QfKkNaxuKOBHRmwbVlGL4f7EsBDr_5xZE/edit&#34;&gt;Proof of space and time&lt;/a&gt; based consensus which allows anyone to farm with commodity hardware&lt;/li&gt; &#xA; &lt;li&gt;Very easy to use full node and farmer GUI and cli (thousands of nodes active on mainnet)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Chia-Network/chia-blockchain/wiki/Chia-Seeder-User-Guide&#34;&gt;Chia seeder&lt;/a&gt;, which maintains a list of reliable nodes within the Chia network via a built-in DNS server.&lt;/li&gt; &#xA; &lt;li&gt;Simplified UTXO based transaction model, with small on-chain state&lt;/li&gt; &#xA; &lt;li&gt;Lisp-style Turing-complete functional &lt;a href=&#34;https://chialisp.com/&#34;&gt;programming language&lt;/a&gt; for money related use cases&lt;/li&gt; &#xA; &lt;li&gt;BLS keys and aggregate signatures (only one signature per block)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Chia-Network/chia-blockchain/wiki/Pooling-User-Guide&#34;&gt;Pooling protocol&lt;/a&gt; that allows farmers to have control of making blocks&lt;/li&gt; &#xA; &lt;li&gt;Support for light clients with fast, objective syncing&lt;/li&gt; &#xA; &lt;li&gt;A growing community of farmers and developers around the world&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please check out the &lt;a href=&#34;https://github.com/Chia-Network/chia-blockchain/wiki&#34;&gt;wiki&lt;/a&gt; and &lt;a href=&#34;https://github.com/Chia-Network/chia-blockchain/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt; for information on this project.&lt;/p&gt; &#xA;&lt;p&gt;Python 3.7+ is required. Make sure your default python version is &amp;gt;=3.7 by typing &lt;code&gt;python3&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are behind a NAT, it can be difficult for peers outside your subnet to reach you when they start up. You can enable &lt;a href=&#34;https://www.homenethowto.com/ports-and-nat/upnp-automatic-port-forward/&#34;&gt;UPnP&lt;/a&gt; on your router or add a NAT (for IPv4 but not IPv6) and firewall rules to allow TCP port 8444 access to your peer. These methods tend to be router make/model specific.&lt;/p&gt; &#xA;&lt;p&gt;Most users should only install harvesters, farmers, plotter, full nodes, and wallets. Setting up a seeder is best left to more advanced users. Building Timelords and VDFs is for sophisticated users, in most environments. Chia Network and additional volunteers are running sufficient Timelords for consensus.&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;Install instructions are available in the &lt;a href=&#34;https://github.com/Chia-Network/chia-blockchain/wiki/INSTALL&#34;&gt;INSTALL&lt;/a&gt; section of the &lt;a href=&#34;https://github.com/Chia-Network/chia-blockchain/wiki&#34;&gt;chia-blockchain repository wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;Once installed, a &lt;a href=&#34;https://github.com/Chia-Network/chia-blockchain/wiki/Quick-Start-Guide&#34;&gt;Quick Start Guide&lt;/a&gt; is available from the repository &lt;a href=&#34;https://github.com/Chia-Network/chia-blockchain/wiki&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>