<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-07T01:41:13Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>stephengpope/no-code-architects-toolkit</title>
    <updated>2025-04-07T01:41:13Z</updated>
    <id>tag:github.com,2025-04-07:/stephengpope/no-code-architects-toolkit</id>
    <link href="https://github.com/stephengpope/no-code-architects-toolkit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The NCA Toolkit API eliminates monthly subscription fees by consolidating common API functionalities into a single FREE API. Designed for businesses, creators, and developers, it streamlines advanced media processing, including video editing and captioning, image transformations, cloud storage, and Python code execution.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/75173cf4-2502-4710-998b-6b81740ae1bd&#34; alt=&#34;Original Logo Symbol&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;No-Code Architects Toolkit API&lt;/h1&gt; &#xA;&lt;p&gt;Tired of wasting thousands of dollars on API subscriptions to support all your automations? What if there was a free alternative?&lt;/p&gt; &#xA;&lt;p&gt;The 100% FREE No-Code Architects Toolkit API processes different types of media. It is built in Python using Flask.&lt;/p&gt; &#xA;&lt;h2&gt;What Can It Do?&lt;/h2&gt; &#xA;&lt;p&gt;The API can convert audio files. It creates transcriptions of content. It translates content between languages. It adds captions to videos. It can do very complicated media processing for content creation. The API can also manage files across multiple cloud services like Google Drive, Amazon S3, Google Cloud Storage, and Dropbox.&lt;/p&gt; &#xA;&lt;p&gt;You can deploy this toolkit in several ways. It works with Docker. It runs on Google Cloud Platform. It functions on Digital Ocean. You can use it with any system that hosts Docker.&lt;/p&gt; &#xA;&lt;p&gt;Easily replace services like ChatGPT Whisper, Cloud Convert, Createomate, JSON2Video, PDF(dot)co, Placid and OCodeKit.&lt;/p&gt; &#xA;&lt;h2&gt;👥 No-Code Architects Community&lt;/h2&gt; &#xA;&lt;p&gt;Want help? Join a supportive community and get dedicated tech support.&lt;/p&gt; &#xA;&lt;p&gt;Join the ONLY community where you learn to leverage AI automation and content to grow your business (and streamline your biz).&lt;/p&gt; &#xA;&lt;p&gt;Who&#39;s this for?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Coaches and consultants&lt;/li&gt; &#xA; &lt;li&gt;AI Automation agencies&lt;/li&gt; &#xA; &lt;li&gt;SMMA &amp;amp; Content agencies&lt;/li&gt; &#xA; &lt;li&gt;SaaS Startup Founders&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Get courses, community, support, daily calls and more.&lt;/p&gt; &#xA;&lt;p&gt;Join the &lt;strong&gt;&lt;a href=&#34;https://www.skool.com/no-code-architects&#34;&gt;No-Code Architects Community&lt;/a&gt;&lt;/strong&gt; today!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Features of the No-Code Architects Toolkit API&lt;/h2&gt; &#xA;&lt;p&gt;Each feature is supported by robust payload validation and detailed API documentation to facilitate easy integration and usage.&lt;/p&gt; &#xA;&lt;h3&gt;Advanced Media Manipulation&lt;/h3&gt; &#xA;&lt;h4&gt;1. &lt;code&gt;/v1/ffmpeg/compose&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: Provides a flexible way to compose and manipulate media files using FFmpeg. Supports complex media operations like transcoding, concatenation, and filtering.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation Link&lt;/strong&gt;: &lt;a href=&#34;https://github.com/stephengpope/no-code-architects-toolkit/raw/main/docs/ffmpeg/ffmpeg_compose.md&#34;&gt;FFmpeg Compose Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Video Processing&lt;/h3&gt; &#xA;&lt;h4&gt;2. &lt;code&gt;/v1/video/caption&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: Adds captions to a video file, including options for font, position, and styling. It also supports automated language detection and custom replacements in captions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation Link&lt;/strong&gt;: &lt;a href=&#34;https://github.com/stephengpope/no-code-architects-toolkit/raw/main/docs/video/caption_video.md&#34;&gt;Video Caption Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;3. &lt;code&gt;/v1/video/concatenate&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: Combines multiple video files into a single video file. The input files are concatenated in the specified order, and the final video is uploaded to cloud storage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation Link&lt;/strong&gt;: &lt;a href=&#34;https://github.com/stephengpope/no-code-architects-toolkit/raw/main/docs/video/concatenate.md&#34;&gt;Video Concatenate Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Code Execution&lt;/h3&gt; &#xA;&lt;h4&gt;4. &lt;code&gt;/v1/code/execute/python&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: Executes Python code on the server in a controlled environment. Useful for scripting, prototyping, or dynamically running Python scripts with secure execution.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation Link&lt;/strong&gt;: &lt;a href=&#34;https://github.com/stephengpope/no-code-architects-toolkit/raw/main/docs/code/execute/execute_python.md&#34;&gt;Execute Python Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Image Processing&lt;/h3&gt; &#xA;&lt;h4&gt;5. &lt;code&gt;/v1/image/convert/video&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: Converts an image into a video file with configurable options like duration, frame rate, and zoom effects. Ideal for creating video slideshows or transitions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation Link&lt;/strong&gt;: &lt;a href=&#34;https://github.com/stephengpope/no-code-architects-toolkit/raw/main/docs/image/convert/image_to_video.md&#34;&gt;Image to Video Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Media Transformation&lt;/h3&gt; &#xA;&lt;h4&gt;6. &lt;code&gt;/v1/media/convert/mp3&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: Converts various media files (audio or video) to MP3 format with configurable bitrate and quality settings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation Link&lt;/strong&gt;: &lt;a href=&#34;https://github.com/stephengpope/no-code-architects-toolkit/raw/main/docs/media/convert/media_to_mp3.md&#34;&gt;Media to MP3 Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;7. &lt;code&gt;/v1/media/transcribe&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: Transcribes audio files to text using advanced speech-to-text processing. Supports various languages and audio formats.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation Link&lt;/strong&gt;: &lt;a href=&#34;https://github.com/stephengpope/no-code-architects-toolkit/raw/main/docs/media/media_transcribe.md&#34;&gt;Audio Transcribe Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Core Features&lt;/h3&gt; &#xA;&lt;h4&gt;8. &lt;code&gt;/v1/toolkit/test&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: A basic endpoint to verify the availability and functionality of the API. Useful for initial setup and connection tests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation Link&lt;/strong&gt;: &lt;a href=&#34;https://github.com/stephengpope/no-code-architects-toolkit/raw/main/docs/toolkit/test.md&#34;&gt;Test Endpoint Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;9. &lt;code&gt;/v1/toolkit/authenticate&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: Verifies the provided API key and authenticates the user. Returns a success message if the API key is valid.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation Link&lt;/strong&gt;: &lt;a href=&#34;https://github.com/stephengpope/no-code-architects-toolkit/raw/main/docs/toolkit/authenticate.md&#34;&gt;Authenticate Endpoint Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Docker Build and Run&lt;/h2&gt; &#xA;&lt;h3&gt;Build the Docker Image&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t no-code-architects-toolkit .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;General Environment Variables&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;code&gt;API_KEY&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: Used for API authentication.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Requirement&lt;/strong&gt;: Mandatory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Google Cloud Platform (GCP) Environment Variables&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;code&gt;GCP_SA_CREDENTIALS&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: The JSON credentials for the GCP Service Account.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Requirement&lt;/strong&gt;: Mandatory if using GCP storage.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;GCP_BUCKET_NAME&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: The name of the GCP storage bucket.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Requirement&lt;/strong&gt;: Mandatory if using GCP storage.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;S3-Compatible Storage Environment Variable&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;code&gt;S3_ENDPOINT_URL&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: Endpoint URL for the S3-compatible service.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Requirement&lt;/strong&gt;: Mandatory if using S3-compatible storage.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;S3_ACCESS_KEY&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: The access key for the S3-compatible storage service.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Requirement&lt;/strong&gt;: Mandatory if using S3-compatible storage.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;S3_SECRET_KEY&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: The secret key for the S3-compatible storage service.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Requirement&lt;/strong&gt;: Mandatory if using S3-compatible storage.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;S3_BUCKET_NAME&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: The bucket name for the S3-compatible storage service.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Requirement&lt;/strong&gt;: Mandatory if using S3-compatible storage.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;S3_REGION&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: The region for the S3-compatible storage service.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Requirement&lt;/strong&gt;: Mandatory if using S3-compatible storage, &#34;None&#34; is acceptible for some s3 providers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Notes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ensure all required environment variables are set based on the storage provider in use (GCP or S3-compatible).&lt;/li&gt; &#xA; &lt;li&gt;Missing any required variables will result in errors during runtime.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Run the Docker Container:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 8080:8080 \&#xA;  -e API_KEY=your_api_key \&#xA;  -e GCP_SA_CREDENTIALS=&#39;{&#34;your&#34;:&#34;service_account_json&#34;}&#39; \&#xA;  -e GCP_BUCKET_NAME=your_gcs_bucket_name \&#xA;  no-code-architects-toolkit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Installing on the Google Cloud Platform (GCP)&lt;/h1&gt; &#xA;&lt;h2&gt;🎥 Video Instructions&lt;/h2&gt; &#xA;&lt;p&gt;Watch &lt;strong&gt;&lt;a href=&#34;https://youtu.be/6bC93sek9v8&#34;&gt;Detailed Video Instructions&lt;/a&gt;&lt;/strong&gt; to set up the No-Code Architects Toolkit API.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the &lt;strong&gt;Docker Image&lt;/strong&gt; below:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;stephengpope/no-code-architects-toolkit:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Video Resources&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://bit.ly/49Gkh61&#34;&gt;Postman Template&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://bit.ly/4feDDk4&#34;&gt;NCA Toolkit API GPT&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Or use the guide below walks you through the steps to install the NCA Toolkit API on GCP.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A Google Cloud account. &lt;a href=&#34;https://cloud.google.com/&#34;&gt;Sign up here&lt;/a&gt; if you don&#39;t already have one. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;New users receive $300 in free credits.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Basic knowledge of GCP services such as Cloud Run and Cloud Storage.&lt;/li&gt; &#xA; &lt;li&gt;A terminal or code editor for managing files.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Step 1: Create a Google Cloud Project&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Log into the &lt;a href=&#34;https://console.cloud.google.com/&#34;&gt;GCP Console&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Click on the &lt;strong&gt;Project Selector&lt;/strong&gt; in the top navigation bar and select &lt;strong&gt;New Project&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Enter a project name, such as &lt;code&gt;NCA Toolkit Project&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Create&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Step 2: Enable Required APIs&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Enable the following APIs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cloud Storage API&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cloud Storage JSON API&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cloud Run API&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;How to Enable APIs:&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In the GCP Console, navigate to &lt;strong&gt;APIs &amp;amp; Services&lt;/strong&gt; &amp;gt; &lt;strong&gt;Enable APIs and Services&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Search for each API, click on it, and enable it.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Step 3: Create a Service Account&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to &lt;strong&gt;IAM &amp;amp; Admin&lt;/strong&gt; &amp;gt; &lt;strong&gt;Service Accounts&lt;/strong&gt; in the GCP Console.&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;+ Create Service Account&lt;/strong&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Enter a name (e.g., &lt;code&gt;NCA Toolkit Service Account&lt;/code&gt;).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Assign the following roles to the service account: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Storage Admin&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Viewer&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Done&lt;/strong&gt; to create the service account.&lt;/li&gt; &#xA; &lt;li&gt;Open the service account details and navigate to the &lt;strong&gt;Keys&lt;/strong&gt; tab. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Click &lt;strong&gt;Add Key&lt;/strong&gt; &amp;gt; &lt;strong&gt;Create New Key&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Choose &lt;strong&gt;JSON&lt;/strong&gt; format, download the file, and store it securely.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Step 4: Create a Cloud Storage Bucket&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to &lt;strong&gt;Storage&lt;/strong&gt; &amp;gt; &lt;strong&gt;Buckets&lt;/strong&gt; in the GCP Console.&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;+ Create Bucket&lt;/strong&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Choose a unique bucket name (e.g., &lt;code&gt;nca-toolkit-bucket&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;Leave default settings, but: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Uncheck &lt;strong&gt;Enforce public access prevention&lt;/strong&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;Set &lt;strong&gt;Access Control&lt;/strong&gt; to &lt;strong&gt;Uniform&lt;/strong&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Create&lt;/strong&gt; to finish.&lt;/li&gt; &#xA; &lt;li&gt;Go to the bucket permissions, and add &lt;strong&gt;allUsers&lt;/strong&gt; as a principal with the role: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Storage Object Viewer&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Save changes.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Step 5: Deploy on Google Cloud Run&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;1. Navigate to Cloud Run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open the &lt;strong&gt;Cloud Run&lt;/strong&gt; service in the &lt;strong&gt;Google Cloud Console&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. Create a New Service&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Click &lt;strong&gt;Create Service&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Then &lt;strong&gt;Deploy one revision from Docker Hub using the image below&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;stephengpope/no-code-architects-toolkit:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3. Allow Unauthenticated Invocations&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check the box to &lt;strong&gt;allow unauthenticated invocations&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4. Configure Resource Allocation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set &lt;strong&gt;Memory&lt;/strong&gt;: &lt;code&gt;16 GB&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Set &lt;strong&gt;CPU&lt;/strong&gt;: &lt;code&gt;4 CPUs&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Set &lt;strong&gt;CPU Allocation&lt;/strong&gt;: &lt;strong&gt;Always Allocated&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;5. Adjust Scaling Settings&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Minimum Instances&lt;/strong&gt;: &lt;code&gt;0&lt;/code&gt; (to minimize cost during idle times).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Maximum Instances&lt;/strong&gt;: &lt;code&gt;5&lt;/code&gt; (adjustable based on expected load).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;6. Use Second-Generation Servers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scroll to &lt;strong&gt;Platform Version&lt;/strong&gt; and select &lt;strong&gt;Second Generation&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Second-generation servers offer better performance and feature support for advanced use cases.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;7. Add Environment Variables&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add the following environment variables:&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;API_KEY&lt;/code&gt;: Your API key (e.g., &lt;code&gt;Test123&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GCP_BUCKET_NAME&lt;/code&gt;: The name of your Cloud Storage bucket.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GCP_SA_CREDENTIALS&lt;/code&gt;: The JSON key of your service account. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Paste the &lt;strong&gt;entire contents&lt;/strong&gt; of the downloaded JSON key file into this field.&lt;/li&gt; &#xA;   &lt;li&gt;Ensure: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Proper JSON formatting.&lt;/li&gt; &#xA;     &lt;li&gt;No leading or trailing spaces.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;8. Configure Advanced Settings&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set the &lt;strong&gt;Container Port&lt;/strong&gt;: Default to &lt;code&gt;8080&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Request Timeout&lt;/strong&gt;: &lt;code&gt;300 seconds&lt;/code&gt; (to handle long-running requests).&lt;/li&gt; &#xA; &lt;li&gt;Enable &lt;strong&gt;Startup Boost&lt;/strong&gt; to improve performance for the first request after a cold start.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;9. Deploy the Service&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Verify all settings and click &lt;strong&gt;Create&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The deployment process might take a few minutes. Once completed, a green checkmark should appear in the Cloud Run dashboard.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By following these steps, the NCA Toolkit will be successfully deployed and accessible via Google Cloud Run with second-generation servers for optimal performance.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Step 6: Test the Deployment&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install &lt;strong&gt;&lt;a href=&#34;https://bit.ly/49Gkh61&#34;&gt;Postman Template&lt;/a&gt;&lt;/strong&gt; on your computer.&lt;/li&gt; &#xA; &lt;li&gt;Import the API example requests from the NCA Toolkit GitHub repository.&lt;/li&gt; &#xA; &lt;li&gt;Configure two environment variables in Postman: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;base_url&lt;/code&gt;: Your deployed Cloud Run service URL.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;x-api-key&lt;/code&gt;: The API key you configured in &lt;strong&gt;Step 5&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Use the example requests to validate that the API is functioning correctly.&lt;/li&gt; &#xA; &lt;li&gt;Use the &lt;strong&gt;&lt;a href=&#34;https://bit.ly/4feDDk4&#34;&gt;NCA Toolkit API GPT&lt;/a&gt;&lt;/strong&gt; to learn more.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;By following these steps, your NCA Toolkit API should be successfully deployed on Google Cloud Platform.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contributing To the NCA Toolkit API&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions from the public! If you&#39;d like to contribute to this project, please follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the repository&lt;/li&gt; &#xA; &lt;li&gt;Create a new branch for your feature or bug fix&lt;/li&gt; &#xA; &lt;li&gt;Make your changes&lt;/li&gt; &#xA; &lt;li&gt;Submit a pull request to the &#34;build&#34; branch&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Pull Request Process&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Ensure any install or build dependencies are removed before the end of the layer when doing a build.&lt;/li&gt; &#xA; &lt;li&gt;Update the README.md with details of changes to the interface, this includes new environment variables, exposed ports, useful file locations and container parameters.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Thank you for your contributions!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;How To Get Support&lt;/h2&gt; &#xA;&lt;p&gt;Get courses, community, support daily calls and more.&lt;/p&gt; &#xA;&lt;p&gt;Join the &lt;strong&gt;&lt;a href=&#34;https://www.skool.com/no-code-architects&#34;&gt;No-Code Architects Community&lt;/a&gt;&lt;/strong&gt; today!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/stephengpope/no-code-architects-toolkit/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>browser-use/web-ui</title>
    <updated>2025-04-07T01:41:13Z</updated>
    <id>tag:github.com,2025-04-07:/browser-use/web-ui</id>
    <link href="https://github.com/browser-use/web-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run AI Agent in your browser.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/browser-use/web-ui/main/assets/web-ui.png&#34; alt=&#34;Browser Use Web UI&#34; width=&#34;full&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/browser-use/web-ui/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/browser-use/web-ui?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://link.browser-use.com/discord&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1303749220842340412?color=7289DA&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.browser-use.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Documentation-%F0%9F%93%95-blue&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://x.com/warmshao&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/warmshao?style=social&#34; alt=&#34;WarmShao&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project builds upon the foundation of the &lt;a href=&#34;https://github.com/browser-use/browser-use&#34;&gt;browser-use&lt;/a&gt;, which is designed to make websites accessible for AI agents.&lt;/p&gt; &#xA;&lt;p&gt;We would like to officially thank &lt;a href=&#34;https://github.com/warmshao&#34;&gt;WarmShao&lt;/a&gt; for his contribution to this project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;WebUI:&lt;/strong&gt; is built on Gradio and supports most of &lt;code&gt;browser-use&lt;/code&gt; functionalities. This UI is designed to be user-friendly and enables easy interaction with the browser agent.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Expanded LLM Support:&lt;/strong&gt; We&#39;ve integrated support for various Large Language Models (LLMs), including: Google, OpenAI, Azure OpenAI, Anthropic, DeepSeek, Ollama etc. And we plan to add support for even more models in the future.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Custom Browser Support:&lt;/strong&gt; You can use your own browser with our tool, eliminating the need to re-login to sites or deal with other authentication challenges. This feature also supports high-definition screen recording.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Persistent Browser Sessions:&lt;/strong&gt; You can choose to keep the browser window open between AI tasks, allowing you to see the complete history and state of AI interactions.&lt;/p&gt; &#xA;&lt;p&gt;&#xA; &lt;video src=&#34;https://github.com/user-attachments/assets/56bc7080-f2e3-4367-af22-6bf2245ff6cb&#34; controls=&#34;controls&#34;&gt;&#xA;  Your browser does not support playing this video!&#xA; &lt;/video&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation Guide&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.11 or higher&lt;/li&gt; &#xA; &lt;li&gt;Git (for cloning the repository)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Option 1: Local Installation&lt;/h3&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://docs.browser-use.com/quickstart#prepare-the-environment&#34;&gt;quickstart guide&lt;/a&gt; or follow the steps below to get started.&lt;/p&gt; &#xA;&lt;h4&gt;Step 1: Clone the Repository&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/browser-use/web-ui.git&#xA;cd web-ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 2: Set Up Python Environment&lt;/h4&gt; &#xA;&lt;p&gt;We recommend using &lt;a href=&#34;https://docs.astral.sh/uv/&#34;&gt;uv&lt;/a&gt; for managing the Python environment.&lt;/p&gt; &#xA;&lt;p&gt;Using uv (recommended):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;uv venv --python 3.11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Activate the virtual environment:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows (Command Prompt):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;.venv\Scripts\activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows (PowerShell):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;.\.venv\Scripts\Activate.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS/Linux:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source .venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 3: Install Dependencies&lt;/h4&gt; &#xA;&lt;p&gt;Install Python packages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;uv pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install Browsers in Playwright: You can install specific browsers by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;playwright install --with-deps chromium&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install all browsers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;playwright install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 4: Configure Environment&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a copy of the example environment file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows (Command Prompt):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;copy .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS/Linux/Windows (PowerShell):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Open &lt;code&gt;.env&lt;/code&gt; in your preferred text editor and add your API keys and other settings&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Option 2: Docker Installation&lt;/h3&gt; &#xA;&lt;h4&gt;Prerequisites&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker and Docker Compose installed &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.docker.com/products/docker-desktop/&#34;&gt;Docker Desktop&lt;/a&gt; (For Windows/macOS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Docker Engine&lt;/a&gt; and &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Docker Compose&lt;/a&gt; (For Linux)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Installation Steps&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/browser-use/web-ui.git&#xA;cd web-ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Create and configure environment file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows (Command Prompt):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;copy .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS/Linux/Windows (PowerShell):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Edit &lt;code&gt;.env&lt;/code&gt; with your preferred text editor and add your API keys&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Run with Docker:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Build and start the container with default settings (browser closes after AI tasks)&#xA;docker compose up --build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Or run with persistent browser (browser stays open between AI tasks)&#xA;CHROME_PERSISTENT_SESSION=true docker compose up --build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Access the Application:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Web Interface: Open &lt;code&gt;http://localhost:7788&lt;/code&gt; in your browser&lt;/li&gt; &#xA; &lt;li&gt;VNC Viewer (for watching browser interactions): Open &lt;code&gt;http://localhost:6080/vnc.html&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default VNC password: &#34;youvncpassword&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Can be changed by setting &lt;code&gt;VNC_PASSWORD&lt;/code&gt; in your &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Local Setup&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run the WebUI:&lt;/strong&gt; After completing the installation steps above, start the application: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python webui.py --ip 127.0.0.1 --port 7788&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;WebUI options: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;--ip&lt;/code&gt;: The IP address to bind the WebUI to. Default is &lt;code&gt;127.0.0.1&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--port&lt;/code&gt;: The port to bind the WebUI to. Default is &lt;code&gt;7788&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--theme&lt;/code&gt;: The theme for the user interface. Default is &lt;code&gt;Ocean&lt;/code&gt;. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Default&lt;/strong&gt;: The standard theme with a balanced design.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Soft&lt;/strong&gt;: A gentle, muted color scheme for a relaxed viewing experience.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Monochrome&lt;/strong&gt;: A grayscale theme with minimal color for simplicity and focus.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Glass&lt;/strong&gt;: A sleek, semi-transparent design for a modern appearance.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Origin&lt;/strong&gt;: A classic, retro-inspired theme for a nostalgic feel.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Citrus&lt;/strong&gt;: A vibrant, citrus-inspired palette with bright and fresh colors.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Ocean&lt;/strong&gt; (default): A blue, ocean-inspired theme providing a calming effect.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--dark-mode&lt;/code&gt;: Enables dark mode for the user interface.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Access the WebUI:&lt;/strong&gt; Open your web browser and navigate to &lt;code&gt;http://127.0.0.1:7788&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Using Your Own Browser(Optional):&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;CHROME_PATH&lt;/code&gt; to the executable path of your browser and &lt;code&gt;CHROME_USER_DATA&lt;/code&gt; to the user data directory of your browser. Leave &lt;code&gt;CHROME_USER_DATA&lt;/code&gt; empty if you want to use local user data. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Windows &lt;pre&gt;&lt;code class=&#34;language-env&#34;&gt; CHROME_PATH=&#34;C:\Program Files\Google\Chrome\Application\chrome.exe&#34;&#xA; CHROME_USER_DATA=&#34;C:\Users\YourUsername\AppData\Local\Google\Chrome\User Data&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;      &lt;blockquote&gt; &#xA;       &lt;p&gt;Note: Replace &lt;code&gt;YourUsername&lt;/code&gt; with your actual Windows username for Windows systems.&lt;/p&gt; &#xA;      &lt;/blockquote&gt; &lt;/li&gt; &#xA;     &lt;li&gt;Mac &lt;pre&gt;&lt;code class=&#34;language-env&#34;&gt; CHROME_PATH=&#34;/Applications/Google Chrome.app/Contents/MacOS/Google Chrome&#34;&#xA; CHROME_USER_DATA=&#34;/Users/YourUsername/Library/Application Support/Google/Chrome&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Close all Chrome windows&lt;/li&gt; &#xA;   &lt;li&gt;Open the WebUI in a non-Chrome browser, such as Firefox or Edge. This is important because the persistent browser context will use the Chrome data when running the agent.&lt;/li&gt; &#xA;   &lt;li&gt;Check the &#34;Use Own Browser&#34; option within the Browser Settings.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Keep Browser Open(Optional):&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;CHROME_PERSISTENT_SESSION=true&lt;/code&gt; in the &lt;code&gt;.env&lt;/code&gt; file.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Docker Setup&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Environment Variables:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;All configuration is done through the &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; &#xA;   &lt;li&gt;Available environment variables: &lt;pre&gt;&lt;code&gt;# LLM API Keys&#xA;OPENAI_API_KEY=your_key_here&#xA;ANTHROPIC_API_KEY=your_key_here&#xA;GOOGLE_API_KEY=your_key_here&#xA;&#xA;# Browser Settings&#xA;CHROME_PERSISTENT_SESSION=true   # Set to true to keep browser open between AI tasks&#xA;RESOLUTION=1920x1080x24         # Custom resolution format: WIDTHxHEIGHTxDEPTH&#xA;RESOLUTION_WIDTH=1920           # Custom width in pixels&#xA;RESOLUTION_HEIGHT=1080          # Custom height in pixels&#xA;&#xA;# VNC Settings&#xA;VNC_PASSWORD=your_vnc_password  # Optional, defaults to &#34;vncpassword&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Platform Support:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Supports both AMD64 and ARM64 architectures&lt;/li&gt; &#xA;   &lt;li&gt;For ARM64 systems (e.g., Apple Silicon Macs), the container will automatically use the appropriate image&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Browser Persistence Modes:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Default Mode (CHROME_PERSISTENT_SESSION=false):&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Browser opens and closes with each AI task&lt;/li&gt; &#xA;     &lt;li&gt;Clean state for each interaction&lt;/li&gt; &#xA;     &lt;li&gt;Lower resource usage&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Persistent Mode (CHROME_PERSISTENT_SESSION=true):&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Browser stays open between AI tasks&lt;/li&gt; &#xA;     &lt;li&gt;Maintains history and state&lt;/li&gt; &#xA;     &lt;li&gt;Allows viewing previous AI interactions&lt;/li&gt; &#xA;     &lt;li&gt;Set in &lt;code&gt;.env&lt;/code&gt; file or via environment variable when starting container&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Viewing Browser Interactions:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Access the noVNC viewer at &lt;code&gt;http://localhost:6080/vnc.html&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Enter the VNC password (default: &#34;vncpassword&#34; or what you set in VNC_PASSWORD)&lt;/li&gt; &#xA;   &lt;li&gt;Direct VNC access available on port 5900 (mapped to container port 5901)&lt;/li&gt; &#xA;   &lt;li&gt;You can now see all browser interactions in real-time&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Container Management:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Start with persistent browser&#xA;CHROME_PERSISTENT_SESSION=true docker compose up -d&#xA;&#xA;# Start with default mode (browser closes after tasks)&#xA;docker compose up -d&#xA;&#xA;# View logs&#xA;docker compose logs -f&#xA;&#xA;# Stop the container&#xA;docker compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;2025/01/26:&lt;/strong&gt; Thanks to @vvincent1234. Now browser-use-webui can combine with DeepSeek-r1 to engage in deep thinking!&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;2025/01/10:&lt;/strong&gt; Thanks to @casistack. Now we have Docker Setup option and also Support keep browser open between tasks.&lt;a href=&#34;https://github.com/browser-use/web-ui/issues/1#issuecomment-2582511750&#34;&gt;Video tutorial demo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;2025/01/06:&lt;/strong&gt; Thanks to @richard-devbot. A New and Well-Designed WebUI is released. &lt;a href=&#34;https://github.com/warmshao/browser-use-webui/issues/1#issuecomment-2573393113&#34;&gt;Video tutorial demo&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>camel-ai/oasis</title>
    <updated>2025-04-07T01:41:13Z</updated>
    <id>tag:github.com,2025-04-07:/camel-ai/oasis</id>
    <link href="https://github.com/camel-ai/oasis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🏝️ OASIS: Open Agent Social Interaction Simulations with One Million Agents. https://oasis.camel-ai.org&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://www.camel-ai.org/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/camel-ai/oasis/main/assets/banner.png&#34; alt=&#34;banner&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt; OASIS: Open Agent Social Interaction Simulations with One Million Agents &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://discord.camel-ai.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1082486657678311454?logo=discord&amp;amp;labelColor=%20%235462eb&amp;amp;logoColor=%20%23f5f5f5&amp;amp;color=%20%235462eb&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://x.com/CamelAIOrg&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/CamelAIOrg?style=social&#34; alt=&#34;X&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.reddit.com/r/CamelAI/&#34;&gt;&lt;img src=&#34;https://img.shields.io/reddit/subreddit-subscribers/CamelAI?style=plastic&amp;amp;logo=reddit&amp;amp;label=r%2FCAMEL&amp;amp;labelColor=white&#34; alt=&#34;Reddit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/camel-ai/oasis/main/assets/wechat.JPGwechat.jpg&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/WeChat-CamelAIOrg-brightgreen?logo=wechat&amp;amp;logoColor=white&#34; alt=&#34;Wechat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/camel-ai/oasis/main/assets/wechatgroup.png&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/WeChat-OASISProject-brightgreen?logo=wechat&amp;amp;logoColor=white&#34; alt=&#34;Wechat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/camel-ai&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-CAMEL--AI-ffc107?color=ffc107&amp;amp;logoColor=white&#34; alt=&#34;Hugging Face&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/camel-ai/oasis/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/camel-ai/oasis?label=stars&amp;amp;logo=github&amp;amp;color=brightgreen&#34; alt=&#34;Star&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/camel-ai/oasis/raw/main/licenses/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true&#34; alt=&#34;Package License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h4 align=&#34;center&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/camel-ai/camel#community&#34;&gt;Community&lt;/a&gt; | &lt;a href=&#34;https://arxiv.org/abs/2411.11581&#34;&gt;Paper&lt;/a&gt; | &lt;a href=&#34;https://github.com/camel-ai/oasis/tree/main/scripts&#34;&gt;Examples&lt;/a&gt; | &lt;a href=&#34;https://huggingface.co/datasets/oasis-agent/oasis-dataset&#34;&gt;Dataset&lt;/a&gt; | &lt;a href=&#34;https://github.com/camel-ai/oasis#-citation&#34;&gt;Citation&lt;/a&gt; | &lt;a href=&#34;https://github.com/camel-ai/oasis#-contributing-to-oasis&#34;&gt;Contributing&lt;/a&gt; | &lt;a href=&#34;https://www.camel-ai.org/&#34;&gt;CAMEL-AI&lt;/a&gt;&lt;/p&gt; &lt;/h4&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/camel-ai/oasis/main/assets/intro.png&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt;🏝️ OASIS is a scalable, open-source social media simulator that integrates large language models with rule-based agents to realistically mimic the behavior of up to one million users on platforms like Twitter and Reddit. It&#39;s designed to facilitate the study of complex social phenomena such as information spread, group polarization, and herd behavior, offering a versatile tool for exploring diverse social dynamics and user interactions in digital environments.&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA;  🌟 Star OASIS on GitHub and be instantly notified of new releases. &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/camel-ai/oasis/main/assets/star.gif&#34; alt=&#34;Star&#34; width=&#34;196&#34; height=&#34;52&#34;&gt;  &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;✨ Key Features&lt;/h2&gt; &#xA;&lt;h3&gt;📈 Scalability&lt;/h3&gt; &#xA;&lt;p&gt;OASIS supports simulations of up to &lt;em&gt;&lt;strong&gt;one million agents&lt;/strong&gt;&lt;/em&gt;, enabling studies of social media dynamics at a scale comparable to real-world platforms.&lt;/p&gt; &#xA;&lt;h3&gt;📲 Dynamic Environments&lt;/h3&gt; &#xA;&lt;p&gt;Adapts to real-time changes in social networks and content, mirroring the fluid dynamics of platforms like &lt;strong&gt;Twitter&lt;/strong&gt; and &lt;strong&gt;Reddit&lt;/strong&gt; for authentic simulation experiences.&lt;/p&gt; &#xA;&lt;h3&gt;👍🏼 Diverse Action Spaces&lt;/h3&gt; &#xA;&lt;p&gt;Agents can perform &lt;strong&gt;23 actions&lt;/strong&gt;, such as following, commenting, and reposting, allowing for rich, multi-faceted interactions.&lt;/p&gt; &#xA;&lt;h3&gt;🔥 Integrated Recommendation Systems&lt;/h3&gt; &#xA;&lt;p&gt;Features &lt;strong&gt;interest-based&lt;/strong&gt; and &lt;strong&gt;hot-score-based recommendation algorithms&lt;/strong&gt;, simulating how users discover content and interact within social media platforms.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;📺 Demo Video&lt;/h2&gt; &#xA;&lt;h3&gt;Introducing OASIS: Open Agent Social Interaction Simulations with One Million Agents&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/3bd2553c-d25d-4d8c-a739-1af51354b15a&#34;&gt;https://github.com/user-attachments/assets/3bd2553c-d25d-4d8c-a739-1af51354b15a&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;For more showcaes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Can 1,000,000 AI agents simulate social media? &lt;a href=&#34;https://www.youtube.com/watch?v=lprGHqkApus&amp;amp;t=2s&#34;&gt;→Watch demo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;🎯 Usecase&lt;/h2&gt; &#xA;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/camel-ai/oasis/main/assets/research_simulation.png&#34; alt=&#34;usecase1&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/camel-ai/oasis/main/assets/interaction.png&#34; alt=&#34;usecase2&#34;&gt; &#xA; &lt;a href=&#34;http://www.matrix.eigent.ai&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/camel-ai/oasis/main/assets/content_creation.png&#34; alt=&#34;usecase3&#34;&gt; &lt;/a&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/camel-ai/oasis/main/assets/prediction.png&#34; alt=&#34;usecase4&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;⚙️ Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;1. Clone the Repository&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/camel-ai/oasis.git&#xA;&#xA;cd oasis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Create and Activate a Virtual Environment&lt;/h3&gt; &#xA;&lt;p&gt;Please choose one of the following methods to set up your environment. You only need to follow one of these methods.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Option 1: Using Conda (Linux &amp;amp; macOS &amp;amp; windows)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create --name oasis python=3.10&#xA;conda activate oasis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Option 2: Using venv (Linux &amp;amp; macOS)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m venv oasis-venv&#xA;source oasis-venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Option 3: Using venv (Windows)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m venv oasis-venv&#xA;oasis-venv\Scripts\activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Install Necessary Packages&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install --upgrade pip setuptools&#xA;&#xA;pip install -e .  # This will install dependencies as specified in pyproject.toml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] For more detailed instructions and additional configuration options, check out the &lt;a href=&#34;https://raw.githubusercontent.com/camel-ai/oasis/main/tutorials/installation.md&#34;&gt;installation section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;More Tutorials&lt;/h3&gt; &#xA;&lt;p&gt;To discover how to create profiles for large-scale users, as well as how to visualize and analyze social simulation data once your experiment concludes, please refer to &lt;a href=&#34;https://raw.githubusercontent.com/camel-ai/oasis/main/tutorials/tutorial.md&#34;&gt;More Tutorials&lt;/a&gt; for detailed guidance.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/camel-ai/oasis/main/assets/tutorial.png&#34; alt=&#34;Tutorial Overview&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;📢 News&lt;/h2&gt; &#xA;&lt;h3&gt;Upcoming Features &amp;amp; Contributions&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;We welcome community contributions! Join us in building these exciting features.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/camel-ai/oasis/issues/57&#34;&gt;OASIS Refactor: First Release on PyPI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/camel-ai/oasis/issues/60&#34;&gt;Write More Documents for OASIS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- - Public release of our dataset on Hugging Face (November 05, 2024) --&gt; &#xA;&lt;h3&gt;Latest Updates&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support OPENAI Embedding model for Twhin-Bert Recommendation System. - 📆 March 25, 2025&lt;/li&gt; &#xA; &lt;li&gt;Updated social media links and QR codes in the README! Join OASIS &amp;amp; CAMEL on WeChat, X, Reddit, and Discord. - 📆 March 24, 2025&lt;/li&gt; &#xA; &lt;li&gt;Add multi-threading support to speed up LLM inference by 13x - 📆 March 4, 2025&lt;/li&gt; &#xA; &lt;li&gt;Slightly refactoring the database to add Quote Action and modify Repost Action - 📆 January 13, 2025&lt;/li&gt; &#xA; &lt;li&gt;Added the demo video and oasis&#39;s star history in the README - 📆 January 5, 2025&lt;/li&gt; &#xA; &lt;li&gt;Introduced an Electronic Mall on the Reddit platform - 📆 December 5, 2024&lt;/li&gt; &#xA; &lt;li&gt;OASIS initially released on arXiv - 📆 November 19, 2024&lt;/li&gt; &#xA; &lt;li&gt;OASIS GitHub repository initially launched - 📆 November 19, 2024&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🥂 Contributing to OASIS🏝️&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;We greatly appreciate your interest in contributing to our open-source initiative. To ensure a smooth collaboration and the success of contributions, we adhere to a set of contributing guidelines similar to those established by CAMEL. For a comprehensive understanding of the steps involved in contributing to our project, please refer to the CAMEL &lt;a href=&#34;https://github.com/camel-ai/camel/raw/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;. 🤝🚀&lt;/p&gt; &#xA; &lt;p&gt;An essential part of contributing involves not only submitting new features with accompanying tests (and, ideally, examples) but also ensuring that these contributions pass our automated pytest suite. This approach helps us maintain the project&#39;s quality and reliability by verifying compatibility and functionality.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;📬 Community &amp;amp; Contact&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re keen on exploring new research opportunities or discoveries with our platform and wish to dive deeper or suggest new features, we&#39;re here to talk. Feel free to get in touch for more details at &lt;a href=&#34;mailto:camel.ai.team@gmail.com&#34;&gt;camel.ai.team@gmail.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Join us (&lt;a href=&#34;https://discord.camel-ai.org/&#34;&gt;&lt;em&gt;Discord&lt;/em&gt;&lt;/a&gt; or &lt;a href=&#34;https://ghli.org/camel/wechat.png&#34;&gt;&lt;em&gt;WeChat&lt;/em&gt;&lt;/a&gt;) in pushing the boundaries of finding the scaling laws of agents.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Join WechatGroup for further discussions!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div align=&#34;&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/camel-ai/oasis/main/assets/wechatgroup.png&#34; alt=&#34;WeChat Group QR Code&#34; width=&#34;600&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🌟 Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#camel-ai/oasis&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=camel-ai/oasis&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🔗 Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{yang2024oasisopenagentsocial,&#xA;      title={OASIS: Open Agent Social Interaction Simulations with One Million Agents},&#xA;      author={Ziyi Yang and Zaibin Zhang and Zirui Zheng and Yuxian Jiang and Ziyue Gan and Zhiyu Wang and Zijian Ling and Jinsong Chen and Martz Ma and Bowen Dong and Prateek Gupta and Shuyue Hu and Zhenfei Yin and Guohao Li and Xu Jia and Lijun Wang and Bernard Ghanem and Huchuan Lu and Chaochao Lu and Wanli Ouyang and Yu Qiao and Philip Torr and Jing Shao},&#xA;      year={2024},&#xA;      eprint={2411.11581},&#xA;      archivePrefix={arXiv},&#xA;      primaryClass={cs.CL},&#xA;      url={https://arxiv.org/abs/2411.11581},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🙌 Acknowledgment&lt;/h2&gt; &#xA;&lt;p&gt;We would like to thank Douglas for designing the logo of our project.&lt;/p&gt; &#xA;&lt;h2&gt;🖺 License&lt;/h2&gt; &#xA;&lt;p&gt;The source code is licensed under Apache 2.0.&lt;/p&gt;</summary>
  </entry>
</feed>