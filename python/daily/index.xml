<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-27T01:35:58Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>alpa-projects/alpa</title>
    <updated>2022-12-27T01:35:58Z</updated>
    <id>tag:github.com,2022-12-27:/alpa-projects/alpa</id>
    <link href="https://github.com/alpa-projects/alpa" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Training and serving large-scale neural networks&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/alpa-projects/alpa/raw/main/docs/logo/alpa-logo-cropped.png&#34; alt=&#34;logo&#34; width=&#34;250&#34;&gt; &#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/alpa-projects/alpa/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/alpa-projects/alpa/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/alpa-projects/alpa/actions/workflows/build_jaxlib.yml&#34;&gt;&lt;img src=&#34;https://github.com/alpa-projects/alpa/actions/workflows/build_jaxlib.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Jaxlib&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://alpa-projects.github.io&#34;&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://forms.gle/YEZTCrtZD6EAVNBQ7&#34;&gt;&lt;strong&gt;Slack&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alpa is a system for training and serving large-scale neural networks.&lt;/p&gt; &#xA;&lt;p&gt;Scaling neural networks to hundreds of billions of parameters has enabled dramatic breakthroughs such as GPT-3, but training and serving these large-scale neural networks require complicated distributed system techniques. Alpa aims to automate large-scale distributed training and serving with just a few lines of code.&lt;/p&gt; &#xA;&lt;p&gt;The key features of Alpa include:&lt;/p&gt; &#xA;&lt;p&gt;💻 &lt;strong&gt;Automatic Parallelization&lt;/strong&gt;. Alpa automatically parallelizes users&#39; single-device code on distributed clusters with data, operator, and pipeline parallelism.&lt;/p&gt; &#xA;&lt;p&gt;🚀 &lt;strong&gt;Excellent Performance&lt;/strong&gt;. Alpa achieves linear scaling on training models with billions of parameters on distributed clusters.&lt;/p&gt; &#xA;&lt;p&gt;✨ &lt;strong&gt;Tight Integration with Machine Learning Ecosystem&lt;/strong&gt;. Alpa is backed by open-source, high-performance, and production-ready libraries such as &lt;a href=&#34;https://github.com/google/jax&#34;&gt;Jax&lt;/a&gt;, &lt;a href=&#34;https://www.tensorflow.org/xla&#34;&gt;XLA&lt;/a&gt;, and &lt;a href=&#34;https://github.com/ray-project/ray&#34;&gt;Ray&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Serving&lt;/h2&gt; &#xA;&lt;p&gt;Alpa provides a free, unlimited OPT-175B text generation service. Try the service at &lt;a href=&#34;https://opt.alpa.ai/&#34;&gt;https://opt.alpa.ai/&lt;/a&gt; and share your &lt;a href=&#34;https://raw.githubusercontent.com/alpa-projects/alpa/main/examples/llm_serving/service/img.png&#34;&gt;prompting results&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;The code below shows how to use huggingface/transformers interface and Alpa distributed backend for large model inference. Detailed documentation is in &lt;a href=&#34;https://alpa.ai/tutorials/opt_serving.html&#34;&gt;Serving OPT-175B using Alpa&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from transformers import AutoTokenizer&#xA;from llm_serving.model.wrapper import get_model&#xA;&#xA;# Load the tokenizer&#xA;tokenizer = AutoTokenizer.from_pretrained(&#34;facebook/opt-2.7b&#34;)&#xA;tokenizer.add_bos_token = False&#xA;&#xA;# Load the model. Alpa automatically downloads the weights to the specificed path&#xA;model = get_model(model_name=&#34;alpa/opt-2.7b&#34;, path=&#34;~/opt_weights/&#34;)&#xA;&#xA;# Generate&#xA;prompt = &#34;Paris is the capital city of&#34;&#xA;&#xA;input_ids = tokenizer(prompt, return_tensors=&#34;pt&#34;).input_ids&#xA;output = model.generate(input_ids=input_ids, max_length=256, do_sample=True)&#xA;generated_string = tokenizer.batch_decode(output, skip_special_tokens=True)&#xA;&#xA;print(generated_string)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Training&lt;/h2&gt; &#xA;&lt;p&gt;Use Alpa&#39;s decorator &lt;code&gt;@parallelize&lt;/code&gt; to scale your single-device training code to distributed clusters. Check out the &lt;a href=&#34;https://alpa-projects.github.io&#34;&gt;documentation&lt;/a&gt; site and &lt;a href=&#34;https://github.com/alpa-projects/alpa/tree/main/examples&#34;&gt;examples&lt;/a&gt; folder for installation instructions, tutorials, examples, and more.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import alpa&#xA;&#xA;# Parallelize the training step in Jax by simply using a decorator&#xA;@alpa.parallelize&#xA;def train_step(model_state, batch):&#xA;    def loss_func(params):&#xA;        out = model_state.forward(params, batch[&#34;x&#34;])&#xA;        return jnp.mean((out - batch[&#34;y&#34;]) ** 2)&#xA;&#xA;    grads = grad(loss_func)(model_state.params)&#xA;    new_model_state = model_state.apply_gradient(grads)&#xA;    return new_model_state&#xA;&#xA;# The training loop now automatically runs on your designated cluster&#xA;model_state = create_train_state()&#xA;for batch in data_loader:&#xA;    model_state = train_step(model_state, batch)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Learning more&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2201.12023&#34;&gt;OSDI 2022 paper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ai.googleblog.com/2022/05/alpa-automated-model-parallel-deep.html&#34;&gt;Google AI blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1CQ4S1ff8yURk9XmL5lpQOoMMlsjw4m0zPS6zYDcyp7Y/edit?usp=sharing&#34;&gt;Talk slides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sites.google.com/view/icml-2022-big-model/home&#34;&gt;ICML 2022 Big Model Tutorial slides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://icml.cc/virtual/2022/tutorial/18440&#34;&gt;ICML 2022 Big Model Tutorial video recording&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=qzYoMldlyoA&#34;&gt;Prof. Ion Stoica introduces the system&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Involved&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Connect to Alpa developers via the &lt;a href=&#34;https://forms.gle/YEZTCrtZD6EAVNBQ7&#34;&gt;Alpa slack&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Please read the &lt;a href=&#34;https://alpa-projects.github.io/developer/developer_guide.html&#34;&gt;contributor guide&lt;/a&gt; if you are interested in contributing code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Alpa is licensed under the &lt;a href=&#34;https://github.com/alpa-projects/alpa/raw/main/LICENSE&#34;&gt;Apache-2.0 license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ManimCommunity/manim</title>
    <updated>2022-12-27T01:35:58Z</updated>
    <id>tag:github.com,2022-12-27:/ManimCommunity/manim</id>
    <link href="https://github.com/ManimCommunity/manim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A community-maintained Python framework for creating mathematical animations.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.manim.community/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ManimCommunity/manim/main/logo/cropped.png&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://pypi.org/project/manim/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/manim.svg?style=flat&amp;amp;logo=pypi&#34; alt=&#34;PyPI Latest Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/manimcommunity/manim&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/v/manimcommunity/manim?color=%23099cec&amp;amp;label=docker%20image&amp;amp;logo=docker&#34; alt=&#34;Docker image&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://mybinder.org/v2/gh/ManimCommunity/jupyter_examples/HEAD?filepath=basic_example_scenes.ipynb&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://choosealicense.com/licenses/mit/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-red.svg?style=flat&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.reddit.com/r/manim/&#34;&gt;&lt;img src=&#34;https://img.shields.io/reddit/subreddit-subscribers/manim.svg?color=orange&amp;amp;label=reddit&amp;amp;logo=reddit&#34; alt=&#34;Reddit&#34; href&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/manim_community/&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/https/twitter.com/cloudposse.svg?style=social&amp;amp;label=Follow%20%40manim_community&#34; alt=&#34;Twitter&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://www.manim.community/discord/&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/581738731934056449.svg?label=discord&amp;amp;color=yellow&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34; alt=&#34;Code style: black&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://docs.manim.community/&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/manimce/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pepy.tech/project/manim&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/manim/month?&#34; alt=&#34;Downloads&#34;&gt; &lt;/a&gt; &lt;img src=&#34;https://github.com/ManimCommunity/manim/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt; &lt;br&gt; &lt;br&gt; &lt;i&gt;An animation engine for explanatory math videos&lt;/i&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Manim is an animation engine for explanatory math videos. It&#39;s used to create precise animations programmatically, as demonstrated in the videos of &lt;a href=&#34;https://www.3blue1brown.com/&#34;&gt;3Blue1Brown&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: This repository is maintained by the Manim Community and is not associated with Grant Sanderson or 3Blue1Brown in any way (although we are definitely indebted to him for providing his work to the world). If you would like to study how Grant makes his videos, head over to his repository (&lt;a href=&#34;https://github.com/3b1b/manim&#34;&gt;3b1b/manim&lt;/a&gt;). This fork is updated more frequently than his, and it&#39;s recommended to use this fork if you&#39;d like to use Manim for your own projects.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Table of Contents:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ManimCommunity/manim/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ManimCommunity/manim/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ManimCommunity/manim/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ManimCommunity/manim/main/#docker&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ManimCommunity/manim/main/#help-with-manim&#34;&gt;Help with Manim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ManimCommunity/manim/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ManimCommunity/manim/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; These instructions are for the community version &lt;em&gt;only&lt;/em&gt;. Trying to use these instructions to install &lt;a href=&#34;https://github.com/3b1b/manim&#34;&gt;3b1b/manim&lt;/a&gt; or instructions there to install this version will cause problems. Read &lt;a href=&#34;https://docs.manim.community/en/stable/faq/installation.html#why-are-there-different-versions-of-manim&#34;&gt;this&lt;/a&gt; and decide which version you wish to install, then only follow the instructions for your desired version.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Manim requires a few dependencies that must be installed prior to using it. If you want to try it out first before installing it locally, you can do so &lt;a href=&#34;https://try.manim.community/&#34;&gt;in our online Jupyter environment&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For local installation, please visit the &lt;a href=&#34;https://docs.manim.community/en/stable/installation.html&#34;&gt;Documentation&lt;/a&gt; and follow the appropriate instructions for your operating system.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Manim is an extremely versatile package. The following is an example &lt;code&gt;Scene&lt;/code&gt; you can construct:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from manim import *&#xA;&#xA;&#xA;class SquareToCircle(Scene):&#xA;    def construct(self):&#xA;        circle = Circle()&#xA;        square = Square()&#xA;        square.flip(RIGHT)&#xA;        square.rotate(-3 * TAU / 8)&#xA;        circle.set_fill(PINK, opacity=0.5)&#xA;&#xA;        self.play(Create(square))&#xA;        self.play(Transform(square, circle))&#xA;        self.play(FadeOut(square))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to view the output of this scene, save the code in a file called &lt;code&gt;example.py&lt;/code&gt;. Then, run the following in a terminal window:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;manim -p -ql example.py SquareToCircle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see your native video player program pop up and play a simple scene in which a square is transformed into a circle. You may find some more simple examples within this &lt;a href=&#34;https://raw.githubusercontent.com/ManimCommunity/manim/main/example_scenes&#34;&gt;GitHub repository&lt;/a&gt;. You can also visit the &lt;a href=&#34;https://docs.manim.community/en/stable/examples.html&#34;&gt;official gallery&lt;/a&gt; for more advanced examples.&lt;/p&gt; &#xA;&lt;p&gt;Manim also ships with a &lt;code&gt;%%manim&lt;/code&gt; IPython magic which allows to use it conveniently in JupyterLab (as well as classic Jupyter) notebooks. See the &lt;a href=&#34;https://docs.manim.community/en/stable/reference/manim.utils.ipython_magic.ManimMagic.html&#34;&gt;corresponding documentation&lt;/a&gt; for some guidance and &lt;a href=&#34;https://mybinder.org/v2/gh/ManimCommunity/jupyter_examples/HEAD?filepath=basic_example_scenes.ipynb&#34;&gt;try it out online&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Command line arguments&lt;/h2&gt; &#xA;&lt;p&gt;The general usage of Manim is as follows:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ManimCommunity/manim/main/docs/source/_static/command.png&#34; alt=&#34;manim-illustration&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;-p&lt;/code&gt; flag in the command above is for previewing, meaning the video file will automatically open when it is done rendering. The &lt;code&gt;-ql&lt;/code&gt; flag is for a faster rendering at a lower quality.&lt;/p&gt; &#xA;&lt;p&gt;Some other useful flags include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-s&lt;/code&gt; to skip to the end and just show the final frame.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-n &amp;lt;number&amp;gt;&lt;/code&gt; to skip ahead to the &lt;code&gt;n&lt;/code&gt;&#39;th animation of a scene.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-f&lt;/code&gt; show the file in the file browser.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For a thorough list of command line arguments, visit the &lt;a href=&#34;https://docs.manim.community/en/stable/guides/configuration.html&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation is in progress at &lt;a href=&#34;https://docs.manim.community/&#34;&gt;ReadTheDocs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;The community also maintains a docker image (&lt;code&gt;manimcommunity/manim&lt;/code&gt;), which can be found &lt;a href=&#34;https://hub.docker.com/r/manimcommunity/manim&#34;&gt;on DockerHub&lt;/a&gt;. Instructions on how to install and use it can be found in our &lt;a href=&#34;https://docs.manim.community/en/stable/installation/docker.html&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Help with Manim&lt;/h2&gt; &#xA;&lt;p&gt;If you need help installing or using Manim, feel free to reach out to our &lt;a href=&#34;https://www.manim.community/discord/&#34;&gt;Discord Server&lt;/a&gt; or &lt;a href=&#34;https://www.reddit.com/r/manim&#34;&gt;Reddit Community&lt;/a&gt;. If you would like to submit a bug report or feature request, please open an issue.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions to Manim are always welcome. In particular, there is a dire need for tests and documentation. For contribution guidelines, please see the &lt;a href=&#34;https://docs.manim.community/en/stable/contributing.html&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;However, please note that Manim is currently undergoing a major refactor. In general, contributions implementing new features will not be accepted in this period. The contribution guide may become outdated quickly; we highly recommend joining our &lt;a href=&#34;https://www.manim.community/discord/&#34;&gt;Discord server&lt;/a&gt; to discuss any potential contributions and keep up to date with the latest developments.&lt;/p&gt; &#xA;&lt;p&gt;Most developers on the project use &lt;code&gt;poetry&lt;/code&gt; for management. You&#39;ll want to have poetry installed and available in your environment. Learn more about &lt;code&gt;poetry&lt;/code&gt; at its &lt;a href=&#34;https://python-poetry.org/docs/&#34;&gt;documentation&lt;/a&gt; and find out how to install manim with poetry at the &lt;a href=&#34;https://docs.manim.community/en/stable/contributing/development.html&#34;&gt;manim dev-installation guide&lt;/a&gt; in the manim documentation.&lt;/p&gt; &#xA;&lt;h2&gt;How to Cite Manim&lt;/h2&gt; &#xA;&lt;p&gt;We acknowledge the importance of good software to support research, and we note that research becomes more valuable when it is communicated effectively. To demonstrate the value of Manim, we ask that you cite Manim in your work. Currently, the best way to cite Manim is to go to our &lt;a href=&#34;https://github.com/ManimCommunity/manim&#34;&gt;repository page&lt;/a&gt; (if you aren&#39;t already) and click the &#34;cite this repository&#34; button on the right sidebar. This will generate a citation in your preferred format, and will also integrate well with citation managers.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Our full code of conduct, and how we enforce it, can be read on &lt;a href=&#34;https://docs.manim.community/en/stable/conduct.html&#34;&gt;our website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The software is double-licensed under the MIT license, with copyright by 3blue1brown LLC (see LICENSE), and copyright by Manim Community Developers (see LICENSE.community).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cjyaddone/ChatWaifu</title>
    <updated>2022-12-27T01:35:58Z</updated>
    <id>tag:github.com,2022-12-27:/cjyaddone/ChatWaifu</id>
    <link href="https://github.com/cjyaddone/ChatWaifu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Combined ChatGPT with Moegoe TTS to create a Chatting Waifu&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/readme/cyberchat.png&#34; alt=&#34;cover&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/README.md&#34; title=&#34;中文&#34;&gt;中文&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/eng-README.md&#34; title=&#34;English&#34;&gt;English&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/jp-README.md&#34; title=&#34;日本語&#34;&gt;日本語&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;GitHub&#34; src=&#34;https://img.shields.io/github/license/cjyaddone/ChatWaifu?color=red&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Python-3.7|8|9|10-green&#34; alt=&#34;PYTHON&#34;&gt; &lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Fcjyaddone%2FChatWaifu?ref=badge_small&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fcjyaddone%2FChatWaifu.svg?type=small&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;&lt;/h1&gt; &#xA;&lt;h3&gt;这是一个使用TTS+VITS的ChatGPT语音对话程序!&lt;/h3&gt; &#xA;&lt;p&gt;效果演示BiliBIli:&lt;a href=&#34;https://www.bilibili.com/video/BV1rv4y1Q7eT&#34; title=&#34;BiliBili&#34;&gt;《青春猪头少年不会梦见赛博女友》&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;当前支持功能：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ChatGPT的对话聊天&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 回答转语音&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 多角色语音&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 语音识别对话 (研发了一款真正人性化的智能语音Q宝&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/MuBai-He/ChatWaifu-marai&#34;&gt;对接Marai机器人&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/cjyaddone/ChatWaifuL2D&#34;&gt;对接Live2D的UI版本&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;目录&lt;/h1&gt; &#xA;&lt;h3&gt;本项目均默认使用Chrome浏览器&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/#1.&#34;&gt;1.安装环境：&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;1.1 &lt;a href=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/#cd&#34;&gt;使用cd命令进入项目文件夹&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;1.2 &lt;a href=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/#99&#34;&gt;创建Python虚拟环境:&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;1.3 &lt;a href=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/#venv&#34;&gt;进入创建好的虚拟环境:&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;1.4 &lt;a href=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/#pip&#34;&gt;pip安装项目所需要的库文件:&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/#.model&#34;&gt;2.导入模型到根目录model文件夹（如果没有自行创建):&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;2.1 &lt;a href=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/#cd1&#34;&gt;双击导入model&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/#22&#34;&gt;3.运行（快和我的老婆们对话吧:&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;3.1 &lt;a href=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/#333&#34;&gt;获取ChatGPT Token&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;3.2 &lt;a href=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/#444&#34;&gt;开始和CyberWaifu聊天&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/#915&#34;&gt;4.鸣谢&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span id=&#34;1.&#34;&gt;1.安装环境：&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;安装anaconda环境或Python&amp;gt;=3.7&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;本例使用的环境名称是：chatWaifu&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;&lt;span id=&#34;cd&#34;&gt;1.1 使用cd命令进入项目文件夹&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;cd 你的项目路径&lt;/code&gt; &lt;img src=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/readme/5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span id=&#34;99&#34;&gt;1.2 创建Python虚拟环境:&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Conda:&lt;code&gt;conda create --name chatWaifu python=3.10&lt;/code&gt; &lt;img src=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/readme/1.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/readme/2.png&#34; alt=&#34;&#34;&gt; Python:&lt;code&gt;python -m venv chatWaifu&lt;/code&gt; &lt;img src=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/readme/6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span id=&#34;venv&#34;&gt;1.3 进入创建好的虚拟环境:&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Conda:&lt;code&gt;conda activate chatWaifu&lt;/code&gt; &lt;img src=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/readme/3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Python:&lt;code&gt;.\chatWaifu\Scripts\activate.bat&lt;/code&gt; &lt;img src=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/readme/7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span id=&#34;pip&#34;&gt;1.4 pip安装项目所需要的库文件:&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt; &lt;img src=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/readme/4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span id=&#34;.model&#34;&gt;2.导入模型到根目录model文件夹:&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Google Drive:&lt;a href=&#34;https://drive.google.com/file/d/1tMCafhnUoL7FbevVQ44VQi-WznDjt23_/view?usp=sharing&#34;&gt;https://drive.google.com/file/d/1tMCafhnUoL7FbevVQ44VQi-WznDjt23_/view?usp=sharing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;阿里云盘: &lt;a href=&#34;https://www.aliyundrive.com/s/9JEj1mp1ZRv&#34;&gt;https://www.aliyundrive.com/s/9JEj1mp1ZRv&lt;/a&gt; 提取码: m2y3&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span id=&#34;cd1&#34;&gt;2.1移动到项目根目录下双击导入model&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;&lt;span id=&#34;22&#34;&gt;3.运行（快和老婆们对话吧:&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;打字输入版：&lt;code&gt;python ChatWaifu.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;语音对话版（日语和英语输入默认日语输出）：&lt;code&gt;python ChatWaifuVoice.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;以下也可以使用，每个文件只对应一种语音输出输入模式&lt;/h3&gt; &#xA;&lt;p&gt;打字日语版：&lt;code&gt;python ChatWaifuJP.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;打字中文版：&lt;code&gt;python ChatWaifuCN.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;日语语音对话版（使用中文）：&lt;code&gt;python ChatWaifuJPVoice.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;中文语音对话版（使用中文）：&lt;code&gt;python ChatWaifuCNVoice.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;日文语音对话版（使用英文）：&lt;code&gt;python ChatWaifuJPVoiceEN.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;日语语音对话版（使用日文）：&lt;code&gt;python ChatWaifuJPVoiceJP.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span id=&#34;333&#34;&gt;3.1 获取ChatGPT Token&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;在浏览器登入&lt;a href=&#34;https://chat.openai.com&#34;&gt;https://chat.openai.com&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;按F12进入开发控制台&lt;/h4&gt; &#xA;&lt;h4&gt;找到 应用程序 -&amp;gt; cookie -&amp;gt; __Secure-next-auth.session-token&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cjyaddone/ChatWaifu/main/readme/token.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;将值复制进入终端并回车&lt;/h4&gt; &#xA;&lt;h3&gt;&lt;span id=&#34;444&#34;&gt;3.2 开始和CyberWaifu聊天！！！&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;语音对话版:&lt;/strong&gt; 当控制台提示&#34;You:&#34;时开始说话，说完并出现句子录音结束并发送到ChatGPT对话。&lt;/p&gt; &#xA;&lt;p&gt;附赠:&lt;a href=&#34;https://github.com/PlexPt/awesome-chatgpt-prompts-zh&#34;&gt;ChatGPT 中文调教指南&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span id=&#34;915&#34;&gt;4.鸣谢：&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[MoeGoe_GUI]&lt;a href=&#34;https://github.com/CjangCjengh/MoeGoe_GUI&#34;&gt;https://github.com/CjangCjengh/MoeGoe_GUI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Pretrained models]&lt;a href=&#34;https://github.com/CjangCjengh/TTSModels&#34;&gt;https://github.com/CjangCjengh/TTSModels&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[PyChatGPT]&lt;a href=&#34;https://github.com/terry3041/pyChatGPT&#34;&gt;https://github.com/terry3041/pyChatGPT&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>