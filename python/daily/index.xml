<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-26T01:35:12Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>roboflow/rf-detr</title>
    <updated>2025-07-26T01:35:12Z</updated>
    <id>tag:github.com,2025-07-26:/roboflow/rf-detr</id>
    <link href="https://github.com/roboflow/rf-detr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RF-DETR is a real-time object detection model architecture developed by Roboflow, SOTA on COCO and designed for fine-tuning.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RF-DETR: SOTA Real-Time Object Detection Model&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/py/rfdetr&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/rfdetr.svg?sanitize=true&#34; alt=&#34;version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypistats.org/packages/rfdetr&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/rfdetr&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/py/rfdetr&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/rfdetr&#34; alt=&#34;python-version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/roboflow/rfdetr/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202.0-blue&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://huggingface.co/spaces/SkalskiP/RF-DETR&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue&#34; alt=&#34;hf space&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://colab.research.google.com/github/roboflow-ai/notebooks/blob/main/notebooks/how-to-finetune-rf-detr-on-detection-dataset.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;colab&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://blog.roboflow.com/rf-detr&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/roboflow-ai/notebooks/main/assets/badges/roboflow-blogpost.svg?sanitize=true&#34; alt=&#34;roboflow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/GbfgXGJ8Bk&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1159501506232451173?logo=discord&amp;amp;label=discord&amp;amp;labelColor=fff&amp;amp;color=5865f2&amp;amp;link=https%3A%2F%2Fdiscord.gg%2FGbfgXGJ8Bk&#34; alt=&#34;discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;RF-DETR is a real-time, transformer-based object detection model architecture developed by Roboflow and released under the Apache 2.0 license.&lt;/p&gt; &#xA;&lt;p&gt;RF-DETR is the first real-time model to exceed 60 AP on the &lt;a href=&#34;https://cocodataset.org/#home&#34;&gt;Microsoft COCO benchmark&lt;/a&gt; alongside competitive performance at base sizes. It also achieves state-of-the-art performance on &lt;a href=&#34;https://github.com/roboflow/rf100-vl&#34;&gt;RF100-VL&lt;/a&gt;, an object detection benchmark that measures model domain adaptability to real world problems. RF-DETR is fastest and most accurate for its size when compared current real-time objection models.&lt;/p&gt; &#xA;&lt;p&gt;RF-DETR is small enough to run on the edge using &lt;a href=&#34;https://github.com/roboflow/inference&#34;&gt;Inference&lt;/a&gt;, making it an ideal model for deployments that need both strong accuracy and real-time performance.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rfdetr.roboflow.com&#34;&gt;Read the documentation to get started training.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;2025/07/23&lt;/code&gt;: We release three new checkpoints for RF-DETR: Nano, Small, and Medium. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;RF-DETR Base is now deprecated. We recommend using RF-DETR Medium which offers subtantially better accuracy at comparable latency.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2025/03/20&lt;/code&gt;: We release RF-DETR real-time object detection model. &lt;strong&gt;Code and checkpoint for RF-DETR-large and RF-DETR-base are available.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2025/04/03&lt;/code&gt;: We release early stopping, gradient checkpointing, metrics saving, training resume, TensorBoard and W&amp;amp;B logging support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2025/05/16&lt;/code&gt;: We release an &#39;optimize_for_inference&#39; method which speeds up native PyTorch by up to 2x, depending on platform.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Results&lt;/h2&gt; &#xA;&lt;p&gt;RF-DETR achieves state-of-the-art performance on both the Microsoft COCO and the RF100-VL benchmarks.&lt;/p&gt; &#xA;&lt;p&gt;The table below shows the performance of RF-DETR medium, compared to comparable medium models:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.roboflow.com/rfdetr/pareto1.png&#34; alt=&#34;rf-detr-coco-rf100-vl-9&#34;&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;family&lt;/th&gt; &#xA;   &lt;th&gt;size&lt;/th&gt; &#xA;   &lt;th&gt;coco_map50&lt;/th&gt; &#xA;   &lt;th&gt;coco_map50@95&lt;/th&gt; &#xA;   &lt;th&gt;rf100vl_map50&lt;/th&gt; &#xA;   &lt;th&gt;rv100vl_map50@95&lt;/th&gt; &#xA;   &lt;th&gt;latency&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RF-DETR&lt;/td&gt; &#xA;   &lt;td&gt;Nano&lt;/td&gt; &#xA;   &lt;td&gt;67.6&lt;/td&gt; &#xA;   &lt;td&gt;48.4&lt;/td&gt; &#xA;   &lt;td&gt;84.1&lt;/td&gt; &#xA;   &lt;td&gt;57.1&lt;/td&gt; &#xA;   &lt;td&gt;2.32&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RF-DETR&lt;/td&gt; &#xA;   &lt;td&gt;Small&lt;/td&gt; &#xA;   &lt;td&gt;72.1&lt;/td&gt; &#xA;   &lt;td&gt;53.0&lt;/td&gt; &#xA;   &lt;td&gt;85.9&lt;/td&gt; &#xA;   &lt;td&gt;59.6&lt;/td&gt; &#xA;   &lt;td&gt;3.52&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RF-DETR&lt;/td&gt; &#xA;   &lt;td&gt;Medium&lt;/td&gt; &#xA;   &lt;td&gt;73.6&lt;/td&gt; &#xA;   &lt;td&gt;54.7&lt;/td&gt; &#xA;   &lt;td&gt;86.6&lt;/td&gt; &#xA;   &lt;td&gt;60.6&lt;/td&gt; &#xA;   &lt;td&gt;4.52&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;YOLO11&lt;/td&gt; &#xA;   &lt;td&gt;n&lt;/td&gt; &#xA;   &lt;td&gt;52.0&lt;/td&gt; &#xA;   &lt;td&gt;37.4&lt;/td&gt; &#xA;   &lt;td&gt;81.4&lt;/td&gt; &#xA;   &lt;td&gt;55.3&lt;/td&gt; &#xA;   &lt;td&gt;2.49&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;YOLO11&lt;/td&gt; &#xA;   &lt;td&gt;s&lt;/td&gt; &#xA;   &lt;td&gt;59.7&lt;/td&gt; &#xA;   &lt;td&gt;44.4&lt;/td&gt; &#xA;   &lt;td&gt;82.3&lt;/td&gt; &#xA;   &lt;td&gt;56.2&lt;/td&gt; &#xA;   &lt;td&gt;3.16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;YOLO11&lt;/td&gt; &#xA;   &lt;td&gt;m&lt;/td&gt; &#xA;   &lt;td&gt;64.1&lt;/td&gt; &#xA;   &lt;td&gt;48.6&lt;/td&gt; &#xA;   &lt;td&gt;82.5&lt;/td&gt; &#xA;   &lt;td&gt;56.5&lt;/td&gt; &#xA;   &lt;td&gt;5.13&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;YOLO11&lt;/td&gt; &#xA;   &lt;td&gt;l&lt;/td&gt; &#xA;   &lt;td&gt;65.3&lt;/td&gt; &#xA;   &lt;td&gt;50.2&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;6.65&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;YOLO11&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;66.5&lt;/td&gt; &#xA;   &lt;td&gt;51.2&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;11.92&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LW-DETR&lt;/td&gt; &#xA;   &lt;td&gt;Tiny&lt;/td&gt; &#xA;   &lt;td&gt;60.7&lt;/td&gt; &#xA;   &lt;td&gt;42.9&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;x&lt;/td&gt; &#xA;   &lt;td&gt;1.91&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LW-DETR&lt;/td&gt; &#xA;   &lt;td&gt;Small&lt;/td&gt; &#xA;   &lt;td&gt;66.8&lt;/td&gt; &#xA;   &lt;td&gt;48.0&lt;/td&gt; &#xA;   &lt;td&gt;84.5&lt;/td&gt; &#xA;   &lt;td&gt;58.0&lt;/td&gt; &#xA;   &lt;td&gt;2.62&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LW-DETR&lt;/td&gt; &#xA;   &lt;td&gt;Medium&lt;/td&gt; &#xA;   &lt;td&gt;72.0&lt;/td&gt; &#xA;   &lt;td&gt;52.6&lt;/td&gt; &#xA;   &lt;td&gt;85.2&lt;/td&gt; &#xA;   &lt;td&gt;59.4&lt;/td&gt; &#xA;   &lt;td&gt;4.49&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;D-FINE&lt;/td&gt; &#xA;   &lt;td&gt;Nano&lt;/td&gt; &#xA;   &lt;td&gt;60.2&lt;/td&gt; &#xA;   &lt;td&gt;42.7&lt;/td&gt; &#xA;   &lt;td&gt;83.6&lt;/td&gt; &#xA;   &lt;td&gt;57.7&lt;/td&gt; &#xA;   &lt;td&gt;2.12&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;D-FINE&lt;/td&gt; &#xA;   &lt;td&gt;Small&lt;/td&gt; &#xA;   &lt;td&gt;67.6&lt;/td&gt; &#xA;   &lt;td&gt;50.7&lt;/td&gt; &#xA;   &lt;td&gt;84.5&lt;/td&gt; &#xA;   &lt;td&gt;59.9&lt;/td&gt; &#xA;   &lt;td&gt;3.55&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;D-FINE&lt;/td&gt; &#xA;   &lt;td&gt;Medium&lt;/td&gt; &#xA;   &lt;td&gt;72.6&lt;/td&gt; &#xA;   &lt;td&gt;55.1&lt;/td&gt; &#xA;   &lt;td&gt;84.6&lt;/td&gt; &#xA;   &lt;td&gt;60.2&lt;/td&gt; &#xA;   &lt;td&gt;5.68&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rfdetr.roboflow.com/learn/benchmarks/&#34;&gt;See our benchmark notes in the RF-DETR documentation.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;We are actively working on RF-DETR Large and X-Large models using the same techniques we used to achieve the strong accuracy that RF-DETR Medium attains. This is why RF-DETR Large and X-Large is not yet reported on our pareto charts and why we haven&#39;t benchmarked other models at similar sizes. Check back in the next few weeks for the launch of new RF-DETR Large and X-Large models.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install RF-DETR, install the &lt;code&gt;rfdetr&lt;/code&gt; package in a &lt;a href=&#34;https://www.python.org/&#34;&gt;&lt;strong&gt;Python&amp;gt;=3.9&lt;/strong&gt;&lt;/a&gt; environment with &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install rfdetr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Install from source&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;By installing RF-DETR from source, you can explore the most recent features and enhancements that have not yet been officially released. Please note that these updates are still in development and may not be as stable as the latest published release.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install git+https://github.com/roboflow/rf-detr.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Inference&lt;/h2&gt; &#xA;&lt;p&gt;The easiest path to deployment is using Roboflow&#39;s &lt;a href=&#34;https://github.com/roboflow/inference&#34;&gt;Inference&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;p&gt;The code below lets you run &lt;code&gt;rfdetr-base&lt;/code&gt; on an image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import os&#xA;import supervision as sv&#xA;from inference import get_model&#xA;from PIL import Image&#xA;from io import BytesIO&#xA;import requests&#xA;&#xA;url = &#34;https://media.roboflow.com/dog.jpeg&#34;&#xA;image = Image.open(BytesIO(requests.get(url).content))&#xA;&#xA;model = get_model(&#34;rfdetr-base&#34;)&#xA;&#xA;predictions = model.infer(image, confidence=0.5)[0]&#xA;&#xA;detections = sv.Detections.from_inference(predictions)&#xA;&#xA;labels = [prediction.class_name for prediction in predictions.predictions]&#xA;&#xA;annotated_image = image.copy()&#xA;annotated_image = sv.BoxAnnotator(color=sv.ColorPalette.ROBOFLOW).annotate(annotated_image, detections)&#xA;annotated_image = sv.LabelAnnotator(color=sv.ColorPalette.ROBOFLOW).annotate(annotated_image, detections, labels)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Predict&lt;/h2&gt; &#xA;&lt;p&gt;You can also use the .predict method to perform inference during local development. The &lt;code&gt;.predict()&lt;/code&gt; method accepts various input formats, including file paths, PIL images, NumPy arrays, and torch tensors. Please ensure inputs use RGB channel order. For &lt;code&gt;torch.Tensor&lt;/code&gt; inputs specifically, they must have a shape of &lt;code&gt;(3, H, W)&lt;/code&gt; with values normalized to the &lt;code&gt;[0..1)&lt;/code&gt; range. If you don&#39;t plan to modify the image or batch size dynamically at runtime, you can also use &lt;code&gt;.optimize_for_inference()&lt;/code&gt; to get up to 2x end-to-end speedup, depending on platform.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import io&#xA;import requests&#xA;import supervision as sv&#xA;from PIL import Image&#xA;from rfdetr import RFDETRBase&#xA;from rfdetr.util.coco_classes import COCO_CLASSES&#xA;&#xA;model = RFDETRBase()&#xA;&#xA;model = model.optimize_for_inference()&#xA;&#xA;url = &#34;https://media.roboflow.com/notebooks/examples/dog-2.jpeg&#34;&#xA;&#xA;image = Image.open(io.BytesIO(requests.get(url).content))&#xA;detections = model.predict(image, threshold=0.5)&#xA;&#xA;labels = [&#xA;    f&#34;{COCO_CLASSES[class_id]} {confidence:.2f}&#34;&#xA;    for class_id, confidence&#xA;    in zip(detections.class_id, detections.confidence)&#xA;]&#xA;&#xA;annotated_image = image.copy()&#xA;annotated_image = sv.BoxAnnotator().annotate(annotated_image, detections)&#xA;annotated_image = sv.LabelAnnotator().annotate(annotated_image, detections, labels)&#xA;&#xA;sv.plot_image(annotated_image)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Train a Model&lt;/h3&gt; &#xA;&lt;p&gt;You can fine-tune an RF-DETR Nano, Small, Medium, and Base model with a custom dataset using the &lt;code&gt;rfdetr&lt;/code&gt; Python package.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rfdetr.roboflow.com/learn/train/&#34;&gt;Read our training tutorial to get started&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Visit our &lt;a href=&#34;https://rfdetr.roboflow.com&#34;&gt;documentation website&lt;/a&gt; to learn more about how to use RF-DETR.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Both the code and the weights pretrained on the COCO dataset are released under the &lt;a href=&#34;https://github.com/roboflow/r-flow/raw/main/LICENSE&#34;&gt;Apache 2.0 license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Our work is built upon &lt;a href=&#34;https://arxiv.org/pdf/2406.03459&#34;&gt;LW-DETR&lt;/a&gt;, &lt;a href=&#34;https://arxiv.org/pdf/2304.07193&#34;&gt;DINOv2&lt;/a&gt;, and &lt;a href=&#34;https://arxiv.org/pdf/2010.04159&#34;&gt;Deformable DETR&lt;/a&gt;. Thanks to their authors for their excellent work!&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find our work helpful for your research, please consider citing the following BibTeX entry.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@software{rf-detr,&#xA;  author = {Robinson, Isaac and Robicheaux, Peter and Popov, Matvei},&#xA;  license = {Apache-2.0},&#xA;  title = {RF-DETR},&#xA;  howpublished = {\url{https://github.com/roboflow/rf-detr}},&#xA;  year = {2025},&#xA;  note = {SOTA Real-Time Object Detection Model}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;We welcome and appreciate all contributions! If you notice any issues or bugs, have questions, or would like to suggest new features, please &lt;a href=&#34;https://github.com/roboflow/rf-detr/issues/new&#34;&gt;open an issue&lt;/a&gt; or pull request. By sharing your ideas and improvements, you help make RF-DETR better for everyone.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://youtube.com/roboflow&#34;&gt; &lt;img src=&#34;https://media.roboflow.com/notebooks/template/icons/purple/youtube.png?ik-sdk-version=javascript-1.4.3&amp;amp;updatedAt=1672949634652&#34; width=&#34;3%&#34;&gt; &lt;/a&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/ultralytics/assets/main/social/logo-transparent.png&#34; width=&#34;3%&#34;&gt; &#xA; &lt;a href=&#34;https://roboflow.com&#34;&gt; &lt;img src=&#34;https://media.roboflow.com/notebooks/template/icons/purple/roboflow-app.png?ik-sdk-version=javascript-1.4.3&amp;amp;updatedAt=1672949746649&#34; width=&#34;3%&#34;&gt; &lt;/a&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/ultralytics/assets/main/social/logo-transparent.png&#34; width=&#34;3%&#34;&gt; &#xA; &lt;a href=&#34;https://www.linkedin.com/company/roboflow-ai/&#34;&gt; &lt;img src=&#34;https://media.roboflow.com/notebooks/template/icons/purple/linkedin.png?ik-sdk-version=javascript-1.4.3&amp;amp;updatedAt=1672949633691&#34; width=&#34;3%&#34;&gt; &lt;/a&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/ultralytics/assets/main/social/logo-transparent.png&#34; width=&#34;3%&#34;&gt; &#xA; &lt;a href=&#34;https://docs.roboflow.com&#34;&gt; &lt;img src=&#34;https://media.roboflow.com/notebooks/template/icons/purple/knowledge.png?ik-sdk-version=javascript-1.4.3&amp;amp;updatedAt=1672949634511&#34; width=&#34;3%&#34;&gt; &lt;/a&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/ultralytics/assets/main/social/logo-transparent.png&#34; width=&#34;3%&#34;&gt; &#xA; &lt;a href=&#34;https://discuss.roboflow.com&#34;&gt; &lt;img src=&#34;https://media.roboflow.com/notebooks/template/icons/purple/forum.png?ik-sdk-version=javascript-1.4.3&amp;amp;updatedAt=1672949633584&#34; width=&#34;3%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ultralytics/assets/main/social/logo-transparent.png&#34; width=&#34;3%&#34;&gt; &lt;/a&gt;&#xA; &lt;a href=&#34;https://blog.roboflow.com&#34;&gt; &lt;img src=&#34;https://media.roboflow.com/notebooks/template/icons/purple/blog.png?ik-sdk-version=javascript-1.4.3&amp;amp;updatedAt=1672949633605&#34; width=&#34;3%&#34;&gt; &lt;/a&gt;  &#xA;&lt;/div&gt;</summary>
  </entry>
</feed>