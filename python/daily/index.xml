<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-20T01:40:56Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Baekalfen/PyBoy</title>
    <updated>2023-10-20T01:40:56Z</updated>
    <id>tag:github.com,2023-10-20:/Baekalfen/PyBoy</id>
    <link href="https://github.com/Baekalfen/PyBoy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Game Boy emulator written in Python&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Baekalfen/PyBoy/master/README/pyboy.svg?sanitize=true&#34; width=&#34;480&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you have any questions, or just want to chat, &lt;a href=&#34;https://discord.gg/Zrf2nyH&#34;&gt;join us on Discord&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;It is highly recommended to read the &lt;a href=&#34;https://github.com/Baekalfen/PyBoy/raw/master/PyBoy.pdf&#34;&gt;report&lt;/a&gt; to get a light introduction to Game Boy emulation. &lt;em&gt;But do be aware, that the Python implementation has changed a lot&lt;/em&gt;. The report is relevant, eventhough you want to contribute to another emulator, or create your own.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;ve read the report and want more explicit details, have a look at the &lt;a href=&#34;http://bgb.bircd.org/pandocs.htm&#34;&gt;Pan Docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you are looking to make a bot or AI&lt;/strong&gt;, you can find all the external components in the &lt;a href=&#34;https://baekalfen.github.io/PyBoy/index.html&#34;&gt;PyBoy Documentation&lt;/a&gt;. There is also a short example on our Wiki page &lt;a href=&#34;https://github.com/Baekalfen/PyBoy/wiki/Scripts,-AI-and-Bots&#34;&gt;Scripts, AI and Bots&lt;/a&gt; as well as in the &lt;a href=&#34;https://github.com/Baekalfen/PyBoy/tree/master/examples&#34;&gt;examples directory&lt;/a&gt;. If more features are needed, or if you find a bug, don&#39;t hesitate to make an issue here on GitHub, or post on our &lt;a href=&#34;https://discord.gg/Zrf2nyH&#34;&gt;Discord channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!--&#xA;Generate GIF with the layout and captions&#xA;--&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;3&#34;&gt; &#xA;    &lt;div align=&#34;center&#34;&gt; &#xA;     &lt;img src=&#34;https://raw.githubusercontent.com/Baekalfen/PyBoy/master/README/1.gif&#34; width=&#34;400&#34;&gt;&#xA;     &lt;br&gt; &#xA;    &lt;/div&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Rewind any game&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/uiucanh/tetris&#34;&gt;Beat world records&lt;/a&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/lixado/PyBoy-RL&#34;&gt;Train with Reinforcement Learning&lt;/a&gt;&lt;br&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Baekalfen/PyBoy/master/README/5.gif&#34; width=&#34;200&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Baekalfen/PyBoy/master/README/7.gif&#34; width=&#34;200&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Baekalfen/PyBoy/master/README/6.gif&#34; width=&#34;200&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;The instructions are simple if you already have a functioning Python environment on your machine.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install PyBoy using &lt;strong&gt;&lt;code&gt;pip install pyboy&lt;/code&gt;&lt;/strong&gt; (add &lt;strong&gt;&lt;code&gt; --user&lt;/code&gt;&lt;/strong&gt; if your system asks)&lt;/li&gt; &#xA; &lt;li&gt;If your system isn&#39;t supported by &lt;a href=&#34;https://pypi.org/project/pysdl2-dll/&#34;&gt;pysdl2-dll&lt;/a&gt;, you&#39;ll need to install SDL2 from your package manager.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you need more details, or if you need to compile from source, check out the detailed &lt;a href=&#34;https://github.com/Baekalfen/PyBoy/wiki/Installation&#34;&gt;installation instructions&lt;/a&gt;. We support: macOS, Raspberry Pi (Raspbian), Linux (Ubuntu), and Windows 10.&lt;/p&gt; &#xA;&lt;p&gt;Now you&#39;re ready! Either use PyBoy directly from the terminal &lt;strong&gt;&lt;code&gt;$ pyboy file.rom&lt;/code&gt;&lt;/strong&gt; or use it in your Python scripts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pyboy import PyBoy&#xA;pyboy = PyBoy(&#39;ROMs/gamerom.gb&#39;)&#xA;while not pyboy.tick():&#xA;    pass&#xA;pyboy.stop()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using the context manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pyboy import PyBoy&#xA;with PyBoy(&#39;ROMs/gamerom.gb&#39;) as pyboy:&#xA;    while not pyboy.tick():&#xA;        pass&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When the emulator is running, you can easily access &lt;a href=&#34;https://baekalfen.github.io/PyBoy/index.html&#34;&gt;PyBoy&#39;s API&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pyboy import WindowEvent&#xA;&#xA;pyboy.send_input(WindowEvent.PRESS_ARROW_DOWN)&#xA;pyboy.tick() # Process one frame to let the game register the input&#xA;pyboy.send_input(WindowEvent.RELEASE_ARROW_DOWN)&#xA;&#xA;pil_image = pyboy.screen_image()&#xA;pil_image.save(&#39;screenshot.png&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Wiki shows how to interface with PyBoy from your own project: &lt;a href=&#34;https://github.com/Baekalfen/PyBoy/wiki&#34;&gt;Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Contributors&lt;/h1&gt; &#xA;&lt;p&gt;Thanks to all the people who have contributed to the project!&lt;/p&gt; &#xA;&lt;h2&gt;Original Developers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Asger Anders Lund Hansen - &lt;a href=&#34;https://github.com/AsgerLundHansen&#34;&gt;AsgerLundHansen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mads Ynddal - &lt;a href=&#34;https://github.com/Baekalfen&#34;&gt;baekalfen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Troels Ynddal - &lt;a href=&#34;https://github.com/troelsy&#34;&gt;troelsy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;GitHub Collaborators&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Kristian Sims - &lt;a href=&#34;https://github.com/krs013&#34;&gt;krs013&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Student Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rewind Time:&lt;/strong&gt; Jacob Olsen - &lt;a href=&#34;https://github.com/JacobO1&#34;&gt;JacobO1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Link Cable:&lt;/strong&gt; Jonas Flach-Jensen - &lt;a href=&#34;https://github.com/thejomas&#34;&gt;thejomas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Game Boy Color:&lt;/strong&gt; Christian Marslev and Jonas Gr√∏nborg - &lt;a href=&#34;https://github.com/CKuke&#34;&gt;CKuke&lt;/a&gt; and &lt;a href=&#34;https://github.com/kaff3&#34;&gt;kaff3&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contribute&lt;/h1&gt; &#xA;&lt;p&gt;Any contribution is appreciated. The currently known problems are tracked in the Issues tab. Feel free to take a swing at any one of them.&lt;/p&gt; &#xA;&lt;p&gt;For the more major features, there are the following that you can give a try. They are also described in more detail in the &lt;a href=&#34;https://github.com/Baekalfen/PyBoy/raw/master/Projects/Projects.pdf&#34;&gt;project list&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Link Cable&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;(Experimental)&lt;/em&gt; AI - use the &lt;code&gt;botsupport&lt;/code&gt; or game wrappers to train a neural network&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;(Experimental)&lt;/em&gt; Game Wrappers - make wrappers for popular games&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to implement something which is not on the list, feel free to do so anyway. If you want to merge it into our repo, then just send a pull request and we will have a look at it.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>EleutherAI/math-lm</title>
    <updated>2023-10-20T01:40:56Z</updated>
    <id>tag:github.com,2023-10-20:/EleutherAI/math-lm</id>
    <link href="https://github.com/EleutherAI/math-lm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;Llemma&lt;/code&gt;: an open language model for mathematics&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/EleutherAI/math-lm/main/llemma.jpg&#34; width=&#34;50%&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://arxiv.org/abs/2310.10631&#34;&gt;ArXiv&lt;/a&gt; | &lt;a href=&#34;https://huggingface.co/EleutherAI/llemma_34b&#34;&gt;Models&lt;/a&gt; | &lt;a href=&#34;https://huggingface.co/datasets/EleutherAI/proof-pile-2&#34;&gt;Data&lt;/a&gt; | &lt;a href=&#34;https://github.com/EleutherAI/math-lm&#34;&gt;Code&lt;/a&gt; | &lt;a href=&#34;https://blog.eleuther.ai/llemma/&#34;&gt;Blog&lt;/a&gt; | &lt;a href=&#34;https://llemma-demo.github.io/&#34;&gt;Sample Explorer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Repository for &lt;a href=&#34;https://arxiv.org/abs/2310.10631&#34;&gt;Llemma: an open language model for mathematics [Azerbayev et al 2023]&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This repository hosts data and training code related to the following artifacts:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;HF Hub Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Llemma 7b&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/EleutherAI/llemma_7b&#34;&gt;&lt;code&gt;EleutherAI/llemma_7b&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Llemma 34b&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/EleutherAI/llemma_34b&#34;&gt;&lt;code&gt;EleutherAI/llemma_34b&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Proof-Pile-2&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/datasets/EleutherAI/proof-pile-2&#34;&gt;&lt;code&gt;EleutherAI/ProofPile2&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AlgebraicStack&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://huggingface.co/datasets/EleutherAI/proof-pile-2/tree/main/algebraic-stack&#34;&gt;&lt;code&gt;EleutherAI/AlgebraicStack&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;This repository also contains submodules related to the overlap, fine-tuning, and theorem proving experiments described in the paper. Additional evaluation code is in a &lt;a href=&#34;https://github.com/wellecks/lm-evaluation-harness&#34;&gt;fork of the Eleuther LM Evaluation Harness&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Directories&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains the following directories&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;proof_pile_2&lt;/code&gt;: scripts for downloading and preprocessing data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gpt-neox&lt;/code&gt;: git submodule containing a modified branch of &lt;code&gt;EleutherAI/gpt-neox&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lm-evaluation-harness&lt;/code&gt;: code for all evaluations, except formal2formal theorem proving.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;llemma_formal2formal&lt;/code&gt;: git submodule containing scripts for the formal2formal experiments&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;overlap&lt;/code&gt;: git submodule containing the overlap and memorization analysis&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;finetunes&lt;/code&gt;: git submodule containing scripts for the fine-tuning experiments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Because this project contains submodules, you should clone this project with the &lt;code&gt;--recurse-submodules&lt;/code&gt; flag or, alternatively, run &lt;code&gt;git submodule update --init --recursive&lt;/code&gt; from within the project directory after cloning the project. After running &lt;code&gt;git pull&lt;/code&gt;, you should also run &lt;code&gt;git submodule update&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;Please cite the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{azerbayev2023llemma,&#xA;  title={Llemma: An Open Language Model For Mathematics}, &#xA;  author={Azerbayev, Zhangir and Schoelkopf, Hailey and Paster, Keiran and Dos Santos, Marco and McAleer, Stephen and Jiang, Albert Q. and Deng, Jia and Biderman, Stella and Welleck, Sean},&#xA;  journal={arXiv preprint arXiv:2310.06786},&#xA;  year={2023}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also be interested in citing our training data, which is a mix of novel data and data from the following sources:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{paster2023openwebmath,&#xA;  title={OpenWebMath: An Open Dataset of High-Quality Mathematical Web Text},&#xA;  author={Paster, Keiran and Santos, Marco Dos and Azerbayev, Zhangir and Ba, Jimmy},&#xA;  journal={arXiv preprint arXiv:2310.06786},&#xA;  year={2023}&#xA;}&#xA;&#xA;@software{together2023redpajama,&#xA;  author = {Together Computer},&#xA;  title = {RedPajama: An Open Source Recipe to Reproduce LLaMA training dataset},&#xA;  month = April,&#xA;  year = 2023,&#xA;  url = {https://github.com/togethercomputer/RedPajama-Data}&#xA;}&#xA;&#xA;@article{kocetkov2022stack,&#xA;  title={The stack: 3 tb of permissively licensed source code},&#xA;  author={Kocetkov, Denis and Li, Raymond and Allal, Loubna Ben and Li, Jia and Mou, Chenghao and Ferrandis, Carlos Mu{\~n}oz and Jernite, Yacine and Mitchell, Margaret and Hughes, Sean and Wolf, Thomas and Bahdanau, Dzmitry and von Werra, Leandro and de Vries, Harm},&#xA;  journal={arXiv preprint arXiv:2211.15533},&#xA;  year={2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>weaviate/Verba</title>
    <updated>2023-10-20T01:40:56Z</updated>
    <id>tag:github.com,2023-10-20:/weaviate/Verba</id>
    <link href="https://github.com/weaviate/Verba" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Retrieval Augmented Generation (RAG) chatbot powered by Weaviate&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Verba&lt;/h1&gt; &#xA;&lt;h2&gt;üêï The Golden RAGtriever&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to Verba: The Golden RAGtriever, an open-source initiative designed to offer a streamlined, user-friendly interface for Retrieval-Augmented Generation (RAG) applications. In just a few easy steps, dive into your data and make meaningful interactions!&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;pip install goldenverba&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://weaviate.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=powered%20by&amp;amp;message=Weaviate%20%E2%9D%A4&amp;amp;color=green&amp;amp;style=flat-square&#34; alt=&#34;Weaviate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/goldenverba/&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/personalized-badge/goldenverba?period=total&amp;amp;units=international_system&amp;amp;left_color=grey&amp;amp;right_color=orange&amp;amp;left_text=pip%20downloads&#34; alt=&#34;PyPi downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.docker.com/get-started/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Docker_support-%E2%9C%93-4c1?style=flat-square&amp;amp;logo=docker&amp;amp;logoColor=white&#34; alt=&#34;Docker support&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://verba.weaviate.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Check%20out%20the%20demo!-yellow?&amp;amp;style=flat-square&amp;amp;logo=react&amp;amp;logoColor=white&#34; alt=&#34;Demo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/weaviate/Verba/raw/main/img/verba.gif&#34; alt=&#34;Demo of Verba&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üéØ What Is Verba?&lt;/h2&gt; &#xA;&lt;p&gt;Verba is more than just a tool‚Äîit&#39;s a personal assistant for querying and interacting with your data. Have questions about your documents? Need to cross-reference multiple data points? Want to gain insights from your existing knowledge base? Verba makes it all possible through the power of Weaviate and Large Language Models (LLMs)!&lt;/p&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Under the Hood&lt;/h2&gt; &#xA;&lt;p&gt;Built on top of Weaviate&#39;s state-of-the-art Generative Search technology, Verba fetches relevant context from your documents to answer queries. It leverages the computational strength of LLMs to offer comprehensive, contextually relevant answers. All of this is conveniently accessible through Verba&#39;s intuitive user interface.&lt;/p&gt; &#xA;&lt;h2&gt;üí° Effortless Data Import with Weaviate&lt;/h2&gt; &#xA;&lt;p&gt;Verba offers seamless data import functionality, supporting a diverse range of file types including &lt;code&gt;.txt&lt;/code&gt;, &lt;code&gt;.md&lt;/code&gt;, and more. Before feeding your data into Weaviate, our system handles chunking and vectorization to optimize it for search and retrieval.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üîß Work in Progress: We are actively developing a data cleaning pipeline for custom datasets. Until then, please ensure your data is clean and well-structured before importing it into Weaviate.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;üí• Advanced Query Resolution with Hybrid and Generative Search&lt;/h2&gt; &#xA;&lt;p&gt;Harness the power of Weaviate&#39;s generate module and hybrid search features when using Verba. These advanced search techniques sift through your documents to identify contextually relevant fragments, which are then used by Large Language Models to formulate comprehensive answers to your queries.&lt;/p&gt; &#xA;&lt;h2&gt;üî• Accelerate Queries with Semantic Cache&lt;/h2&gt; &#xA;&lt;p&gt;Verba utilizes Weaviate&#39;s Semantic Cache to embed both the generated results and queries, making future searches incredibly efficient. When you ask a question, Verba will first check the Semantic Cache to see if a semantically identical query has already been processed.&lt;/p&gt; &#xA;&lt;h1&gt;‚ú® Getting Started with Verba&lt;/h1&gt; &#xA;&lt;p&gt;This section outlines various methods to set up and deploy Verba, so you can choose the one that fits you best:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Deploy with &lt;code&gt;pip&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build from Source&lt;/li&gt; &#xA; &lt;li&gt;Use Docker for Deployment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;: If you&#39;re not using Docker, ensure that you have Python &amp;gt;=3.9.0 installed on your system.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;üîë API Key Requirement&lt;/strong&gt;: Regardless of the deployment method, you&#39;ll need an OpenAI API key to enable data ingestion and querying features. You can specify this by either creating a .env file when cloning the project, or by storing the API key in your system environment variables.&lt;/p&gt; &#xA;&lt;h2&gt;üöÄ Quickstart: Deploy with pip&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Initialize a new Python Environment&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;python3 -m virtualenv venv&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install Verba&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;pip install goldenverba&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Launch Verba&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;verba start&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üõ†Ô∏è Quickstart: Build from Source&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clone the Verba repos&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone https://github.com/weaviate/Verba.git&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Initialize a new Python Environment&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;python3 -m virtualenv venv&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install Verba&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;pip install -e .&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Launch Verba&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;verba start&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üê≥ Quickstart: Deploy with Docker&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re unfamiliar with Docker, you can learn more about it &lt;a href=&#34;https://docker-curriculum.com/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clone the Verba repos&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone https://github.com/weaviate/Verba.git&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Deploy using Docker&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose up&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üåê Selecting the Optimal Weaviate Deployment for Verba&lt;/h2&gt; &#xA;&lt;p&gt;Verba provides flexibility in connecting to Weaviate instances based on your needs. By default, Verba opts for &lt;a href=&#34;https://weaviate.io/developers/weaviate/installation/embedded&#34;&gt;Weaviate Embedded&lt;/a&gt; if it doesn&#39;t detect the &lt;code&gt;VERBA_URL&lt;/code&gt; and &lt;code&gt;VERBA_API_KEY&lt;/code&gt; environment variables. This local deployment is the most straightforward way to launch your Weaviate database for prototyping and testing.&lt;/p&gt; &#xA;&lt;p&gt;However, you have other compelling options to consider:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;üå©Ô∏è Weaviate Cloud Service (WCS)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you prefer a cloud-based solution, Weaviate Cloud Service (WCS) offers a scalable, managed environment. Learn how to set up a cloud cluster by following the &lt;a href=&#34;https://weaviate.io/developers/wcs/guides/create-instance&#34;&gt;Weaviate Cluster Setup Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;üê≥ Docker Deployment&lt;/strong&gt; Another robust local alternative is deploying Weaviate using Docker. For more details, consult the &lt;a href=&#34;https://weaviate.io/developers/weaviate/installation/docker-compose&#34;&gt;Weaviate Docker Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;üåø Environment Variable Configuration&lt;/strong&gt; Regardless of your chosen deployment method, you&#39;ll need to specify the following environment variables. These can either be added to a .env file in your project directory or set as global environment variables on your system:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;VERBA_URL=http://your-weaviate-server:8080&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;VERBA_API_KEY=your-weaviate-database-key&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;üì¶ Data Import Guide&lt;/h1&gt; &#xA;&lt;p&gt;Verba offers straightforward commands to import your data for further interaction. Before you proceed, please be aware that importing data will &lt;strong&gt;incur costs&lt;/strong&gt; based on your configured OpenAI access key.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Important Notes:&lt;/strong&gt; Supported file types are currently limited to .txt, .md, and .mdx. Additional formats are in development. Basic CRUD operations and UI interactions are also in the pipeline.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;verba start --model &#34;gpt-3.5-turbo&#34;     # Initiates Verba application&#xA;verba import --path &#34;Path to your dir or file&#34; --model &#34;gpt-3.5-turbo&#34; --clear True # Imports data into Verba&#xA;verba clear                             # Deletes all data within Verba&#xA;verba clear_cache                       # Removes cached data in Verba&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;ve cloned the repository, you can get a quick start with sample datasets in the &lt;code&gt;./data&lt;/code&gt; directory. Use &lt;code&gt;verba import --path ./data&lt;/code&gt; to import these samples. You can also populate Verba with predefined suggestions using a JSON list via &lt;code&gt;verba import --path suggestions.json&lt;/code&gt;. An example is provided in the &lt;code&gt;./data/minecraft&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;üí∞ Large Language Model (LLM) Costs&lt;/h2&gt; &#xA;&lt;p&gt;Verba exclusively utilizes OpenAI models. Be advised that the usage costs for these models will be billed to the API access key you provide. Primarily, costs are incurred during data embedding and answer generation processes. The default vectorization engine for this project is &lt;code&gt;Ada v2&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üõ†Ô∏è Project Architecture&lt;/h2&gt; &#xA;&lt;p&gt;Verba is built on three primary components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Weaviate Database: You have the option to host on Weaviate Cloud Service (WCS) or run it locally.&lt;/li&gt; &#xA; &lt;li&gt;FastAPI Endpoint: Acts as the communication bridge between the Large Language Model provider and the Weaviate database.&lt;/li&gt; &#xA; &lt;li&gt;React Frontend (Static served through FastAPI): Offers an interactive UI to display and interact with your data. Development&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: If you&#39;re planning to modify the frontend, ensure you have Node.js version &amp;gt;=18.16.0 installed. For more details on setting up the frontend, check out the Frontend README.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;üíñ Open Source Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Your contributions are always welcome! Feel free to contribute ideas, feedback, or create issues and bug reports if you find any! Visit our &lt;a href=&#34;https://forum.weaviate.io/&#34;&gt;Weaviate Community Forum&lt;/a&gt; if you need any help!&lt;/p&gt;</summary>
  </entry>
</feed>