<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-12T01:36:43Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>trailofbits/buttercup</title>
    <updated>2025-08-12T01:36:43Z</updated>
    <id>tag:github.com,2025-08-12:/trailofbits/buttercup</id>
    <link href="https://github.com/trailofbits/buttercup" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Buttercup Cyber Reasoning System (CRS)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/trailofbits/buttercup/actions/workflows/tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/trailofbits/buttercup/actions/workflows/tests.yml/badge.svg?sanitize=true&#34; alt=&#34;Tests&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/trailofbits/buttercup/actions/workflows/tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/trailofbits/buttercup/actions/workflows/tests.yml/badge.svg?event=schedule&#34; alt=&#34;Tests (Nightly)&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/trailofbits/buttercup/actions/workflows/integration.yml&#34;&gt;&lt;img src=&#34;https://github.com/trailofbits/buttercup/actions/workflows/integration.yml/badge.svg?sanitize=true&#34; alt=&#34;Integration&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Buttercup&lt;/strong&gt; is a Cyber Reasoning System (CRS) developed by &lt;strong&gt;Trail of Bits&lt;/strong&gt; for the &lt;strong&gt;DARPA AIxCC (AI Cyber Challenge)&lt;/strong&gt;. Buttercup finds and patches software vulnerabilities in open-source code repositories like &lt;a href=&#34;https://github.com/tob-challenges/example-libpng&#34;&gt;example-libpng&lt;/a&gt;. It starts by running an AI/ML-assisted fuzzing campaign (built on oss-fuzz) for the program. When vulnerabilities are found, Buttercup analyzes them and uses a multi-agent AI-driven patcher to repair the vulnerability. &lt;strong&gt;Buttercup&lt;/strong&gt; system consists of several components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Orchestrator&lt;/strong&gt;: Coordinates the overall task process and manages the workflow&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Seed Generator&lt;/strong&gt;: Creates inputs for vulnerability discovery&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fuzzer&lt;/strong&gt;: Discovers vulnerabilities through intelligent fuzzing techniques&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Program Model&lt;/strong&gt;: Analyzes code structure and semantics for better understanding&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Patcher&lt;/strong&gt;: Generates and applies security patches to fix vulnerabilities&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;System Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;Minimum Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;CPU:&lt;/strong&gt; 8 cores&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Memory:&lt;/strong&gt; 16 GB RAM&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Storage:&lt;/strong&gt; 100 GB available disk space&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Network:&lt;/strong&gt; Stable internet connection for downloading dependencies&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Buttercup uses third-party AI providers (LLMs from companies like OpenAI, Anthropic and Google), which cost money. Please ensure that you manage per-deployment costs by using the built-in LLM budget setting.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Buttercup works best with access to models from OpenAI &lt;strong&gt;and&lt;/strong&gt; Anthropic, but can be run with at least one API key from one third-party provider (support for Gemini coming soon).&lt;/p&gt; &#xA;&lt;h3&gt;Supported Systems&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux x86_64&lt;/strong&gt; (fully supported)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ARM64&lt;/strong&gt; (partial support for upstream Google OSS-Fuzz projects)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Required System Packages&lt;/h3&gt; &#xA;&lt;p&gt;Before setup, ensure you have these packages installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Ubuntu/Debian&#xA;sudo apt-get update&#xA;sudo apt-get install -y make curl git&#xA;&#xA;# RHEL/CentOS/Fedora&#xA;sudo yum install -y make curl git&#xA;# or&#xA;sudo dnf install -y make curl git&#xA;&#xA;# MacOS&#xA;brew install make curl git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Supported Targets&lt;/h3&gt; &#xA;&lt;p&gt;Buttercup works with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;C source code repositories&lt;/strong&gt; that are OSS-Fuzz compatible&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Java source code repositories&lt;/strong&gt; that are OSS-Fuzz compatible&lt;/li&gt; &#xA; &lt;li&gt;Projects that build successfully and have existing fuzzing harnesses&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository with submodules:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --recurse-submodules https://github.com/trailofbits/buttercup.git&#xA;cd buttercup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Run automated setup (Recommended)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make setup-local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This script will install all dependencies, configure the environment, and guide you through the setup process.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you prefer manual setup, see the &lt;a href=&#34;https://raw.githubusercontent.com/trailofbits/buttercup/main/MANUAL_SETUP.md&#34;&gt;Manual Setup Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Start Buttercup locally&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make deploy-local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Verify local deployment:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make status&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When a deployment is successful, you should see all pods in &#34;Running&#34; or &#34;Completed&#34; status.&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Send Buttercup a simple task&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; When tasked, Buttercup will start consuming third-party AI resources.&lt;/p&gt; &#xA;&lt;p&gt;This command will make Buttercup pull down an example repo &lt;a href=&#34;https://github.com/tob-challenges/example-libpng&#34;&gt;example-libpng&lt;/a&gt; with a known vulnerability. Buttercup will start fuzzing it to find and patch vulnerabilities.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make send-libpng-task&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Access Buttercup&#39;s web-based GUI&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make web-ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then navigate to &lt;code&gt;http://localhost:31323&lt;/code&gt; in your web browser.&lt;/p&gt; &#xA;&lt;p&gt;In the GUI you can monitor active tasks and see when Buttercup finds bugs and generates patches for them.&lt;/p&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Stop Buttercup&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This is an important step to ensure Buttercup shuts down and stops consuming third-party AI resources.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make undeploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Accessing Logs&lt;/h2&gt; &#xA;&lt;p&gt;Buttercup includes local SigNoz deployment by default for comprehensive system observability. You can access logs, traces, and metrics through the SigNoz UI:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make signoz-ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then navigate to &lt;code&gt;http://localhost:33301&lt;/code&gt; in your web browser to view:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Distributed traces&lt;/li&gt; &#xA; &lt;li&gt;Application metrics&lt;/li&gt; &#xA; &lt;li&gt;Error monitoring&lt;/li&gt; &#xA; &lt;li&gt;Performance insights&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you configured LangFuse during setup, you can also monitor LLM usage and costs there.&lt;/p&gt; &#xA;&lt;p&gt;For additional log access methods, see the &lt;a href=&#34;https://raw.githubusercontent.com/trailofbits/buttercup/main/QUICK_REFERENCE.md&#34;&gt;Quick Reference Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trailofbits/buttercup/main/QUICK_REFERENCE.md&#34;&gt;Quick Reference Guide&lt;/a&gt; - Common commands and troubleshooting&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trailofbits/buttercup/main/MANUAL_SETUP.md&#34;&gt;Manual Setup Guide&lt;/a&gt; - Detailed manual installation steps&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trailofbits/buttercup/main/AKS_DEPLOYMENT.md&#34;&gt;AKS Deployment Guide&lt;/a&gt; - Production deployment on Azure&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trailofbits/buttercup/main/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt; - Development workflow and standards&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trailofbits/buttercup/main/deployment/README.md&#34;&gt;Deployment Documentation&lt;/a&gt; - Advanced deployment configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trailofbits/buttercup/main/CUSTOM_CHALLENGES.md&#34;&gt;Writing Custom Challenges&lt;/a&gt; - Custom project configuration and setup&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>