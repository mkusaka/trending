<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-16T01:36:07Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kvcache-ai/ktransformers</title>
    <updated>2025-07-16T01:36:07Z</updated>
    <id>tag:github.com,2025-07-16:/kvcache-ai/ktransformers</id>
    <link href="https://github.com/kvcache-ai/ktransformers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Flexible Framework for Experiencing Cutting-edge LLM Inference Optimizations&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;!-- &lt;h1&gt;KTransformers&lt;/h1&gt; --&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;img alt=&#34;KTransformers&#34; src=&#34;https://github.com/user-attachments/assets/d5a2492f-a415-4456-af99-4ab102f13f8b&#34; width=&#34;50%&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/p&gt; &#xA; &lt;h3&gt;A Flexible Framework for Experiencing Cutting-edge LLM Inference Optimizations&lt;/h3&gt; &#xA; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/#show-cases&#34;&gt;üåü Show Cases&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/#quick-start&#34;&gt;üöÄ Quick Start&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/#tutorial&#34;&gt;üìÉ Tutorial&lt;/a&gt; | &lt;a href=&#34;https://github.com/kvcache-ai/ktransformers/discussions&#34;&gt;üí¨ Discussion &lt;/a&gt;|&lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/#FAQ&#34;&gt; üôã FAQ&lt;/a&gt; &lt;/strong&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2 id=&#34;intro&#34;&gt;üéâ Introduction&lt;/h2&gt; KTransformers, pronounced as Quick Transformers, is designed to enhance your ü§ó &#xA;&lt;a href=&#34;https://github.com/huggingface/transformers&#34;&gt;Transformers&lt;/a&gt; experience with advanced kernel optimizations and placement/parallelism strategies. &#xA;&lt;br&gt;&#xA;&lt;br&gt; KTransformers is a flexible, Python-centric framework designed with extensibility at its core. By implementing and injecting an optimized module with a single line of code, users gain access to a Transformers-compatible interface, RESTful APIs compliant with OpenAI and Ollama, and even a simplified ChatGPT-like web UI. &#xA;&lt;br&gt;&#xA;&lt;br&gt; Our vision for KTransformers is to serve as a flexible platform for experimenting with innovative LLM inference optimizations. Please let us know if you need any other features. &#xA;&lt;h2 id=&#34;Updates&#34;&gt;üî• Updates&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;July 11, 2025&lt;/strong&gt;: Support Kimi-K2. (&lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/Kimi-K2.md&#34;&gt;Tutorial&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;June 30, 2025&lt;/strong&gt;: Support 3-layer (GPU-CPU-Disk) &lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/prefix_cache.md&#34;&gt;prefix cache&lt;/a&gt; reuse.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;May 14, 2025&lt;/strong&gt;: Support Intel Arc GPU (&lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/xpu.md&#34;&gt;Tutorial&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Apr 29, 2025&lt;/strong&gt;: Support AMX-Int8„ÄÅ AMX-BF16 and Qwen3MoE (&lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/AMX.md&#34;&gt;Tutorial&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/fafe8aec-4e22-49a8-8553-59fb5c6b00a2&#34;&gt;https://github.com/user-attachments/assets/fafe8aec-4e22-49a8-8553-59fb5c6b00a2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Apr 9, 2025&lt;/strong&gt;: Experimental support for LLaMA 4 models (&lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/llama4.md&#34;&gt;Tutorial&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Apr 2, 2025&lt;/strong&gt;: Support Multi-concurrency. (&lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/balance-serve.md&#34;&gt;Tutorial&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/faa3bda2-928b-45a7-b44f-21e12ec84b8a&#34;&gt;https://github.com/user-attachments/assets/faa3bda2-928b-45a7-b44f-21e12ec84b8a&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mar 15, 2025&lt;/strong&gt;: Support ROCm on AMD GPU (&lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/ROCm.md&#34;&gt;Tutorial&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mar 5, 2025&lt;/strong&gt;: Support unsloth 1.58/2.51 bits weights and &lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/fp8_kernel.md&#34;&gt;IQ1_S/FP8 hybrid&lt;/a&gt; weights. Support 139K &lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/DeepseekR1_V3_tutorial.md#v022--v023-longer-context--fp8-kernel&#34;&gt;Longer Context&lt;/a&gt; for DeepSeek-V3 and R1 in 24GB VRAM.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Feb 25, 2025&lt;/strong&gt;: Support &lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/fp8_kernel.md&#34;&gt;FP8 GPU kernel&lt;/a&gt; for DeepSeek-V3 and R1; &lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/DeepseekR1_V3_tutorial.md#v022-longer-context&#34;&gt;Longer Context&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Feb 15, 2025&lt;/strong&gt;: Longer Context (from 4K to 8K for 24GB VRAM) &amp;amp; Slightly Faster Speed Ôºà+15%, up to 16 Tokens/s), update &lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/DeepseekR1_V3_tutorial.md&#34;&gt;docs&lt;/a&gt; and &lt;a href=&#34;https://kvcache-ai.github.io/ktransformers/&#34;&gt;online books&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Feb 10, 2025&lt;/strong&gt;: Support Deepseek-R1 and V3 on single (24GB VRAM)/multi gpu and 382G DRAM, up to 3~28x speedup. For detailed show case and reproduction tutorial, see &lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/DeepseekR1_V3_tutorial.md&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Aug 28, 2024&lt;/strong&gt;: Decrease DeepseekV2&#39;s required VRAM from 21G to 11G.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Aug 15, 2024&lt;/strong&gt;: Update detailed &lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/injection_tutorial.md&#34;&gt;tutorial&lt;/a&gt; for injection and multi-GPU.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Aug 14, 2024&lt;/strong&gt;: Support llamfile as linear backend.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Aug 12, 2024&lt;/strong&gt;: Support multiple GPU; Support new model: mixtral 8*7B and 8*22B; Support q2k, q3k, q5k dequant on gpu.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Aug 9, 2024&lt;/strong&gt;: Support windows native.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- * **Aug 28, 2024**: Support 1M context under the InternLM2.5-7B-Chat-1M model, utilizing 24GB of VRAM and 150GB of DRAM. The detailed tutorial is [here](./doc/en/long_context_tutorial.md). --&gt; &#xA;&lt;h2 id=&#34;show-cases&#34;&gt;üåü Show Cases&lt;/h2&gt; &#xA;&lt;div&gt; &#xA; &lt;h3&gt;GPT-4/o1-level Local VSCode Copilot on a Desktop with only 24GB VRAM&lt;/h3&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/ebd70bfa-b2c1-4abb-ae3b-296ed38aa285&#34;&gt;https://github.com/user-attachments/assets/ebd70bfa-b2c1-4abb-ae3b-296ed38aa285&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;[NEW!!!] Local 671B DeepSeek-Coder-V3/R1:&lt;/strong&gt; Running its Q4_K_M version using only 14GB VRAM and 382GB DRAM(&lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/DeepseekR1_V3_tutorial.md&#34;&gt;Tutorial&lt;/a&gt;).&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Prefill Speed (tokens/s): &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;KTransformers: 54.21 (32 cores) ‚Üí 74.362 (dual-socket, 2√ó32 cores) ‚Üí 255.26 (optimized AMX-based MoE kernel, V0.3 only) ‚Üí 286.55 (selectively using 6 experts, V0.3 only)&lt;/li&gt; &#xA;     &lt;li&gt;Compared to 10.31 tokens/s in llama.cpp with 2√ó32 cores, achieving up to &lt;strong&gt;27.79√ó speedup&lt;/strong&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Decode Speed (tokens/s): &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;KTransformers: 8.73 (32 cores) ‚Üí 11.26 (dual-socket, 2√ó32 cores) ‚Üí 13.69 (selectively using 6 experts, V0.3 only)&lt;/li&gt; &#xA;     &lt;li&gt;Compared to 4.51 tokens/s in llama.cpp with 2√ó32 cores, achieving up to &lt;strong&gt;3.03√ó speedup&lt;/strong&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Upcoming Open Source Release: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;AMX optimizations and selective expert activation will be open-sourced in V0.3.&lt;/li&gt; &#xA;     &lt;li&gt;Currently available only in preview binary distribution, which can be downloaded &lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/DeepseekR1_V3_tutorial.md&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Local 236B DeepSeek-Coder-V2:&lt;/strong&gt; Running its Q4_K_M version using only 21GB VRAM and 136GB DRAM, attainable on a local desktop machine, which scores even better than GPT4-0613 in &lt;a href=&#34;https://huggingface.co/blog/leaderboard-bigcodebench&#34;&gt;BigCodeBench&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;img alt=&#34;DeepSeek-Coder-V2 Score&#34; src=&#34;https://github.com/user-attachments/assets/d052924e-8631-44de-aad2-97c54b965693&#34; width=&#34;100%&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Faster Speed:&lt;/strong&gt; Achieving 126 tokens/s for 2K prompt prefill and 13.6 tokens/s for generation through MoE offloading and injecting advanced kernels from &lt;a href=&#34;https://github.com/Mozilla-Ocho/llamafile/tree/main&#34;&gt;Llamafile&lt;/a&gt; and &lt;a href=&#34;https://github.com/IST-DASLab/marlin&#34;&gt;Marlin&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;VSCode Integration:&lt;/strong&gt; Wrapped into an OpenAI and Ollama compatible API for seamless integration as a backend for &lt;a href=&#34;https://github.com/TabbyML/tabby&#34;&gt;Tabby&lt;/a&gt; and various other frontends.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/4c6a8a38-05aa-497d-8eb1-3a5b3918429c&#34;&gt;https://github.com/user-attachments/assets/4c6a8a38-05aa-497d-8eb1-3a5b3918429c&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;!-- &lt;h3&gt;1M Context Local Inference on a Desktop with Only 24GB VRAM&lt;/h3&gt;&#xA;&lt;p align=&#34;center&#34;&gt;&#xA;&#xA;https://github.com/user-attachments/assets/a865e5e4-bca3-401e-94b8-af3c080e6c12&#xA;&#xA;* **1M Context InternLM 2.5 7B**: Operates at full bf16 precision, utilizing 24GB VRAM and 150GB DRAM, which is feasible on a local desktop setup. It achieves a 92.88% success rate on the 1M &#34;Needle In a Haystack&#34; test and 100% on the 128K NIAH test.&#xA;&#xA;&lt;p align=&#34;center&#34;&gt;&#xA;  &lt;picture&gt;&#xA;    &lt;img alt=&#34;Single Needle Retrieval 128K&#34; src=&#34;./doc/assets/needle_128K.png&#34; width=100%&gt;&#xA;  &lt;/picture&gt;&#xA;&lt;/p&gt;&#xA;&#xA;&lt;p align=&#34;center&#34;&gt;&#xA;  &lt;picture&gt;&#xA;    &lt;img alt=&#34;Single Needle Retrieval 1000K&#34; src=&#34;./doc/assets/needle_1M.png&#34; width=100%&gt;&#xA;  &lt;/picture&gt;&#xA;&lt;/p&gt;&#xA;&#xA;* **Enhanced Speed**: Reaches 16.91 tokens/s for generation with a 1M context using sparse attention, powered by llamafile kernels. This method is over 10 times faster than full attention approach of llama.cpp.&#xA;&#xA;* **Flexible Sparse Attention Framework**: Offers a flexible block sparse attention framework for CPU offloaded decoding. Compatible with SnapKV, Quest, and InfLLm. Further information is available [here](./doc/en/long_context_introduction.md).&#xA; --&gt; &#xA;&lt;p&gt;&lt;strong&gt;More advanced features will coming soon, so stay tuned!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2 id=&#34;quick-start&#34;&gt;üöÄ Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Getting started with KTransformers is simple! Follow the steps below to set up and start using it.&lt;/p&gt; &#xA;&lt;p&gt;we have already supported vendors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Metax&lt;/li&gt; &#xA; &lt;li&gt;Sanechips (ZhuFeng V1.0)&lt;/li&gt; &#xA; &lt;li&gt;Intel&lt;/li&gt; &#xA; &lt;li&gt;Ascend&lt;/li&gt; &#xA; &lt;li&gt;Kunpeng&lt;/li&gt; &#xA; &lt;li&gt;AMD&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üì• Installation&lt;/h3&gt; &#xA;&lt;p&gt;To install KTransformers, follow the official &lt;a href=&#34;https://kvcache-ai.github.io/ktransformers/en/install.html&#34;&gt;Installation Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2 id=&#34;tutorial&#34;&gt;üìÉ Brief Injection Tutorial&lt;/h2&gt; At the heart of KTransformers is a user-friendly, template-based injection framework. This allows researchers to easily replace original torch modules with optimized variants. It also simplifies the process of combining multiple optimizations, allowing the exploration of their synergistic effects. &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;img alt=&#34;Inject-Struction&#34; src=&#34;https://github.com/user-attachments/assets/6b4c1e54-9f6d-45c5-a3fc-8fa45e7d257e&#34; width=&#34;65%&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;p&gt;Given that vLLM already serves as a great framework for large-scale deployment optimizations, KTransformers is particularly focused on local deployments that are constrained by limited resources. We pay special attention to heterogeneous computing opportunities, such as GPU/CPU offloading of quantized models. For example, we support the efficient &lt;a herf=&#34;https://github.com/Mozilla-Ocho/llamafile/tree/main&#34;&gt;Llamafile&lt;/a&gt; and &lt;a herf=&#34;https://github.com/IST-DASLab/marlin&#34;&gt;Marlin&lt;/a&gt; kernels for CPU and GPU, respectively. More details can be found &lt;a herf=&#34;doc/en/operators/llamafile.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Example Usage&lt;/h3&gt; To utilize the provided kernels, users only need to create a YAML-based injection template and add the call to `optimize_and_load_gguf` before using the Transformers model. &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;with torch.device(&#34;meta&#34;):&#xA;    model = AutoModelForCausalLM.from_config(config, trust_remote_code=True)&#xA;optimize_and_load_gguf(model, optimize_config_path, gguf_path, config)&#xA;...&#xA;generated = prefill_and_generate(model, tokenizer, input_tensor.cuda(), max_new_tokens=1000)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this example, the AutoModel is first initialized on the meta device to avoid occupying any memory resources. Then, &lt;code&gt;optimize_and_load_gguf&lt;/code&gt; iterates through all sub-modules of the model, matches rules specified in your YAML rule file, and replaces them with advanced modules as specified.&lt;/p&gt; &#xA;&lt;p&gt;After injection, the original &lt;code&gt;generate&lt;/code&gt; interface is available, but we also provide a compatible &lt;code&gt;prefill_and_generate&lt;/code&gt; method, which enables further optimizations like CUDAGraph to improve generation speed.&lt;/p&gt; &#xA;&lt;h3&gt;How to custom your model&lt;/h3&gt; &#xA;&lt;p&gt;A detailed tutorial of the injection and multi-GPU using DeepSeek-V2 as an example is given &lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/injection_tutorial.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Below is an example of a YAML template for replacing all original Linear modules with Marlin, an advanced 4-bit quantization kernel.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- match:&#xA;    name: &#34;^model\\.layers\\..*$&#34;  # regular expression &#xA;    class: torch.nn.Linear  # only match modules matching name and class simultaneously&#xA;  replace:&#xA;    class: ktransformers.operators.linear.KTransformerLinear  # optimized Kernel on quantized data types&#xA;    device: &#34;cpu&#34;   # which devices to load this module when initializing&#xA;    kwargs:&#xA;      generate_device: &#34;cuda&#34;&#xA;      generate_linear_type: &#34;QuantizedLinearMarlin&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Each rule in the YAML file has two parts: &lt;code&gt;match&lt;/code&gt; and &lt;code&gt;replace&lt;/code&gt;. The &lt;code&gt;match&lt;/code&gt; part specifies which module should be replaced, and the &lt;code&gt;replace&lt;/code&gt; part specifies the module to be injected into the model along with the initialization keywords.&lt;/p&gt; &#xA;&lt;p&gt;You can find example rule templates for optimizing DeepSeek-V2 and Qwen2-57B-A14, two SOTA MoE models, in the &lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/ktransformers/optimize/optimize_rules&#34;&gt;ktransformers/optimize/optimize_rules&lt;/a&gt; directory. These templates are used to power the &lt;code&gt;local_chat.py&lt;/code&gt; demo.&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in our design principles and the implementation of the injection framework, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/deepseek-v2-injection.md&#34;&gt;design document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2 id=&#34;ack&#34;&gt;Acknowledgment and Contributors&lt;/h2&gt; &#xA;&lt;p&gt;The development of KTransformers is based on the flexible and versatile framework provided by Transformers. We also benefit from advanced kernels such as GGUF/GGML, Llamafile, Marlin, sglang and flashinfer. We are planning to contribute back to the community by upstreaming our modifications.&lt;/p&gt; &#xA;&lt;p&gt;KTransformers is actively maintained and developed by contributors from the &lt;a href=&#34;https://madsys.cs.tsinghua.edu.cn/&#34;&gt;MADSys group&lt;/a&gt; at Tsinghua University and members from &lt;a href=&#34;http://approaching.ai/&#34;&gt;Approaching.AI&lt;/a&gt;. We welcome new contributors to join us in making KTransformers faster and easier to use.&lt;/p&gt; &#xA;&lt;h2 id=&#34;ack&#34;&gt;Discussion&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions, feel free to open an issue. Alternatively, you can join our WeChat group for further discussion. QR Code: &lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/WeChatGroup.png&#34;&gt;WeChat Group&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2 id=&#34;FAQ&#34;&gt;üôã FAQ&lt;/h2&gt; &#xA;&lt;p&gt;Some common questions are answered in the &lt;a href=&#34;https://raw.githubusercontent.com/kvcache-ai/ktransformers/main/doc/en/FAQ.md&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>d78ui98/APKDeepLens</title>
    <updated>2025-07-16T01:36:07Z</updated>
    <id>tag:github.com,2025-07-16:/d78ui98/APKDeepLens</id>
    <link href="https://github.com/d78ui98/APKDeepLens" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Android security insights in full spectrum.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  APKDeepLens&#xA; &lt;/div&gt;&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/d78ui98/APKDeepLens/tree/master#features&#34;&gt;Features&lt;/a&gt; ‚Ä¢ &#xA; &lt;a href=&#34;https://github.com/d78ui98/APKDeepLens/tree/master#installation&#34;&gt;Installation&lt;/a&gt; ‚Ä¢ &#xA; &lt;a href=&#34;https://github.com/d78ui98/APKDeepLens/raw/master/CHANGELOG.md&#34;&gt;Changlog&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;APKDeepLens is a Python based tool designed to scan Android applications (APK files) for security vulnerabilities. It specifically targets the OWASP Top 10 mobile vulnerabilities, providing an easy and efficient way for developers, penetration testers, and security researchers to assess the security posture of Android apps.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/d78ui98/APKDeepLens/assets/27950739/c9236e3d-60d5-4832-85dc-f09a449bade3&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;APKDeepLens is a Python-based tool that performs various operations on APK files. Its main features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;APK Analysis&lt;/strong&gt; -&amp;gt; Scans Android application package (APK) files for security vulnerabilities.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OWASP Coverage&lt;/strong&gt; -&amp;gt; Covers OWASP Top 10 vulnerabilities to ensure a comprehensive security assessment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Advanced Detection&lt;/strong&gt; -&amp;gt; Utilizes custom python code for APK file analysis and vulnerability detection.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sensitive Information Extraction&lt;/strong&gt; -&amp;gt; Identifies potential security risks by extracting sensitive information from APK files, such as insecure authentication/authorization keys and insecure request protocols.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;In-depth Analysis&lt;/strong&gt; -&amp;gt; Detects insecure data storage practices, including data related to the SD card, and highlights the use of insecure request protocols in the code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Intent Filter Exploits&lt;/strong&gt; -&amp;gt; Pinpoint vulnerabilities by analyzing intent filters extracted from AndroidManifest.xml.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Local File Vulnerability Detection&lt;/strong&gt; -&amp;gt; Safeguard your app by identifying potential mishandlings related to local file operations&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Report Generation&lt;/strong&gt; -&amp;gt; Generates detailed and easy-to-understand reports for each scanned APK, providing actionable insights for developers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CI/CD Integration&lt;/strong&gt; -&amp;gt; Designed for easy integration into CI/CD pipelines, enabling automated security testing in development workflows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;User-Friendly Interface&lt;/strong&gt; -&amp;gt; Color-coded terminal outputs make it easy to distinguish between different types of findings.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To use APKDeepLens, make sure you have Python 3.10 (recommended) or higher installed, along with Java or OpenJDK. Once those are set up, you can install APKDeepLens by running the following command:&lt;/p&gt; &#xA;&lt;h3&gt;For Linux&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/d78ui98/APKDeepLens.git&#xA;cd APKDeepLens&#xA;python3 -m venv venv&#xA;source venv/bin/activate&#xA;pip install -r requirements.txt&#xA;python APKDeepLens.py --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;For Windows&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/d78ui98/APKDeepLens.git&#xA;cd APKDeepLens&#xA;python3 -m venv venv&#xA;.\venv\Scripts\activate&#xA;pip install -r .\requirements.txt&#xA;python APKDeepLens.py --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using Docker&lt;/h3&gt; &#xA;&lt;p&gt;If you prefer to use Docker, you can build and run APKDeepLens using the provided Dockerfile. Follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the Docker image:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;docker build -t apkdeeplens .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the Docker container:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;docker run --rm -v /path/to/apk/files:/apk apkdeeplens -apk /apk/file.apk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;/path/to/apk/files&lt;/code&gt; with the path to the directory containing your APK files.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To simply scan an APK, use the below command. Mention the apk file with &lt;code&gt;-apk&lt;/code&gt; argument. Once the scan is complete, a detailed report will be displayed in the console.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 APKDeepLens.py -apk file.apk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;ve already extracted the source code and want to provide its path for a faster scan you can use the below command. Mention the source code of the android application with &lt;code&gt;-source&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 APKDeepLens.py -apk file.apk -source &amp;lt;source-code-path&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To generate detailed PDF and HTML reports after the scan you can pass &lt;code&gt;-report&lt;/code&gt; argument as mentioned below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 APKDeepLens.py -apk file.apk -report&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to the APKDeepLens project. If you have a feature request, bug report, or proposal, please open a new issue &lt;a href=&#34;https://github.com/d78ui98/APKDeepLens/issues&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For those interested in contributing code, please follow the standard GitHub process. We&#39;ll review your contributions as quickly as possible :)&lt;/p&gt; &#xA;&lt;h2&gt;Featured at&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Blackhat MEA 2023 - &lt;a href=&#34;https://blackhatmea.com/session/apkaleidoscope-android-security-insights-full-spectrum-0&#34;&gt;https://blackhatmea.com/session/apkaleidoscope-android-security-insights-full-spectrum-0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Blackhat ASIA 2024 - &lt;a href=&#34;https://www.blackhat.com/asia-24/arsenal/schedule/index.html#apkdeeplens---android-security-insights-in-full-spectrum-37182&#34;&gt;https://www.blackhat.com/asia-24/arsenal/schedule/index.html#apkdeeplens---android-security-insights-in-full-spectrum-37182&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>