<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-14T01:38:24Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Shawn-Inspur/Yuan-1.0</title>
    <updated>2022-12-14T01:38:24Z</updated>
    <id>tag:github.com,2022-12-14:/Shawn-Inspur/Yuan-1.0</id>
    <link href="https://github.com/Shawn-Inspur/Yuan-1.0" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Yuan 1.0 Large pretrained LM&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Yuan-1.0&lt;/h1&gt; &#xA;&lt;p&gt;Yuan 1.0: Large-Scale Pre-trained Language Model in Zero-Shot and Few-Shot Learning&lt;/p&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;Recent work like GPT-3 has demonstrated excellent performance of Zero-Shot and Few-Shot learning on many natural language processing (NLP) tasks by scaling up model size, data size and the amount of compute. While training a model like GPT-3 requires huge amount of computing power that is a challenge to the researchers. In this work, we propose a method that incorporates large-scale distributed training performance into model architecture design. With this method, we trained Yuan 1.0, the current largest singleton language model with 246B parameters, which achieved excellent performance on thousands GPUs, and state-of-the-art results on different natural language processing tasks. We propose a data processing method that can efficiently filter massive amount of data from Internet. A new dataset with 5TB high-quality text, the current largest Chinese text corpus, is built based on this method. We propose a method based on calibration and label expansion to improve the Zero-Shot and Few-Shot performance, and steady performance improvements were observed. The articles that Yuan 1.0 generated are difficult to distinguish from articles written by humans.&lt;/p&gt; &#xA;&lt;p&gt;Please find details in the paper of Yuan-1.0. &lt;a href=&#34;https://arxiv.org/abs/2110.04725&#34;&gt;https://arxiv.org/abs/2110.04725&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;1. Open source of Yuan-1.0&lt;/h2&gt; &#xA;&lt;p&gt;We will open the corpus (1TB) and API of the Yuan model, as well as the codes for fine-tune, few-shot and zero-shot learning. Please visit &lt;a href=&#34;https://air.inspur.com/home&#34;&gt;official website&lt;/a&gt; (&lt;a href=&#34;https://air.inspur.com/home&#34;&gt;https://air.inspur.com/home&lt;/a&gt;) for details to get access of the corpus and APIs of Yuan model.&lt;/p&gt; &#xA;&lt;h2&gt;2. Requirements&lt;/h2&gt; &#xA;&lt;p&gt;The inference code is provided on python3. Before start using Yuan API to build your application, several python libs are required. You can simply install them via pip tools.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install requests hashlib json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;3. How to use Yuan-API&lt;/h2&gt; &#xA;&lt;p&gt;After submit application on official website, it will take several days (normally less than one week) for us to check your application.&lt;/p&gt; &#xA;&lt;p&gt;Please keep your registered account and phone number properly, which will be used to generate an unique key to get access the API.&lt;/p&gt; &#xA;&lt;p&gt;For more details, please check the example code, &lt;code&gt;yuan_api/examples&lt;/code&gt;, and follow the API document.&lt;/p&gt; &#xA;&lt;h2&gt;4. Applications&lt;/h2&gt; &#xA;&lt;p&gt;Here we summarize some simple application example configuration methods for users&#39; reference. The parameters not mentioned therein have adopted default values.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;ID&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;app&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;model&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;prompt template&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;input prefix&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;input suffix&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;output prefix&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;truncation character&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;example&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;few-shot&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;dialog generation&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;dialog&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;问：“&lt;code&gt;用户输入&lt;/code&gt;”答：“&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;问：“&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;”&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;答：“&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;”&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;故宫有什么好玩的？&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;content continuation&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;base_10B&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;用户输入&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;默认&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;徐凤年刚走入京大校门，已经有学生会迎新的同学走到了他面前，&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;not recommended&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;poetry maker&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;base_10B&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;以“&lt;code&gt;用户输入&lt;/code&gt;”为题作一首诗：“&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;以“&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;”为题作一首诗：“&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;”&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;清风&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;recommended&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;关键词抽取&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;base_10B&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;为以下正文提取关键词。正文：&lt;code&gt;用户输入&lt;/code&gt;；关键词：&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;为以下正文提取关键词。正文：&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;；&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;关键词：&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;。&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;帮我写一首诗，描写春天到了，百花盛开。&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ch-en translation&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;translate&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;将下列英文/中文翻译成中文/英文。英文/中文：&lt;code&gt;用户输入&lt;/code&gt;中文/英文：“&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;将下列英文/中文翻译成中文/英文。英文/中文：&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;中文/英文：“&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;”&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;自然派的哲学家也被称为“苏格拉底之前的哲学家” 。&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;not recommended&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Please look forward to more applications.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>terry3041/pyChatGPT</title>
    <updated>2022-12-14T01:38:24Z</updated>
    <id>tag:github.com,2022-12-14:/terry3041/pyChatGPT</id>
    <link href="https://github.com/terry3041/pyChatGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An unofficial Python wrapper for OpenAI&#39;s ChatGPT API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pyChatGPT&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/pyChatGPT&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/pyChatGPT.svg?sanitize=true&#34; alt=&#34;PyPi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/terry3041/pyChatGPT/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/terry3041/pyChatGPT.svg?color=green&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/code_style-black+flake8-blue.svg?sanitize=true&#34; alt=&#34;PyPi&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;An unofficial Python wrapper for OpenAI&#39;s ChatGPT API&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bypass Cloudflare&#39;s anti-bot protection using &lt;code&gt;undetected_chromedriver&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;del&gt;Captcha solver when auth with login credentials (experimental)&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/terry3041/pyChatGPT/main/#how-do-i-get-it-to-work-on-headless-linux-server&#34;&gt;Support headless machines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Proxy support (only without basic auth)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Google login support (experimental)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;On version 0.3.0, this library is using only the &lt;code&gt;undetected_chromedriver&lt;/code&gt; to bypass Cloudflare&#39;s anti-bot protection. &lt;code&gt;requests&lt;/code&gt; module is no longer used due to the complexity of the protection. &lt;strong&gt;Please make sure you have &lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;Google Chrome&lt;/a&gt; before using this wrapper.&lt;/strong&gt; From now on, this library will not support specifying a conversation (i.e. &lt;code&gt;parent_id&lt;/code&gt; and &lt;code&gt;conversation_id&lt;/code&gt; parameters) but you can still reset the conversation by calling &lt;code&gt;reset_conversation()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -U pyChatGPT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;h4&gt;Obtaining session_token&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;https://chat.openai.com/chat&lt;/a&gt; and open the developer tools by &lt;code&gt;F12&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Find the &lt;code&gt;__Secure-next-auth.session-token&lt;/code&gt; cookie in &lt;code&gt;Application&lt;/code&gt; &amp;gt; &lt;code&gt;Storage&lt;/code&gt; &amp;gt; &lt;code&gt;Cookies&lt;/code&gt; &amp;gt; &lt;code&gt;https://chat.openai.com&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Copy the value in the &lt;code&gt;Cookie Value&lt;/code&gt; field.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/19218518/206170122-61fbe94f-4b0c-4782-a344-e26ac0d4e2a7.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Interactive mode&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m pyChatGPT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Import as a module&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pyChatGPT import ChatGPT&#xA;&#xA;session_token = &#39;abc123&#39;  # `__Secure-next-auth.session-token` cookie from https://chat.openai.com/chat&#xA;api1 = ChatGPT(session_token)  # auth with session token&#xA;api2 = ChatGPT(session_token, proxy=&#39;http://proxy.example.com:8080&#39;)  # specify proxy&#xA;api3 = ChatGPT(auth_type=&#39;google&#39;, email=&#39;example@gmail.com&#39;, password=&#39;password&#39;) # auth with google login&#xA;api4 = ChatGPT(session_token, verbose=True)  # verbose mode (print debug messages)&#xA;&#xA;resp = api1.send_message(&#39;Hello, world!&#39;)&#xA;print(resp[&#39;message&#39;])&#xA;&#xA;api1.reset_conversation()  # reset the conversation&#xA;api1.close()  # close the session&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; &#xA;&lt;h3&gt;How do I get it to work on headless linux server?&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# install chromium &amp;amp; X virtual framebuffer&#xA;sudo apt install chromium-browser xvfb&#xA;&#xA;# start your script&#xA;python3 your_script.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How do I get it to work on Google Colab?&lt;/h3&gt; &#xA;&lt;p&gt;It is normal for the seession to be crashed when installing dependencies. Just ignore the error and run your script.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# install dependencies&#xA;!apt install chromium-browser xvfb&#xA;!pip install -U selenium_profiles pyChatGPT&#xA;&#xA;# install chromedriver&#xA;from selenium_profiles.utils.installer import install_chromedriver&#xA;install_chromedriver()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# start your script as normal&#xA;!python3 -m pyChatGPT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Insipration&lt;/h2&gt; &#xA;&lt;p&gt;This project is inspired by&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acheong08/ChatGPT&#34;&gt;ChatGPT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-api&#34;&gt;chatgpt-api&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rawandahmad698/PyChatGPT&#34;&gt;PyChatGPT&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This project is not affiliated with OpenAI in any way. Use at your own risk. I am not responsible for any damage caused by this project. Please read the &lt;a href=&#34;https://beta.openai.com/terms&#34;&gt;OpenAI Terms of Service&lt;/a&gt; before using this project.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the GPLv3 License - see the &lt;a href=&#34;https://raw.githubusercontent.com/terry3041/pyChatGPT/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tychxn/jd-assistant</title>
    <updated>2022-12-14T01:38:24Z</updated>
    <id>tag:github.com,2022-12-14:/tychxn/jd-assistant</id>
    <link href="https://github.com/tychxn/jd-assistant" rel="alternate"></link>
    <summary type="html">&lt;p&gt;京东抢购助手：包含登录，查询商品库存/价格，添加/清空购物车，抢购商品(下单)，查询订单等功能&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JD-Assistant&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.python.org/download/releases/3.4.0/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.4+-blue.svg?sanitize=true&#34; alt=&#34;version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tychxn/jd-assistant&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/status-stable-green.svg?sanitize=true&#34; alt=&#34;status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/tychxn/jd-assistant/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tychxn/jd-assistant&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/star%2C%20issue-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;star, issue&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;京东抢购助手（短期内不再更新）&lt;/p&gt; &#xA;&lt;h2&gt;主要功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;登陆京东商城（&lt;a href=&#34;http://www.jd.com/&#34;&gt;www.jd.com&lt;/a&gt;） &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;手机扫码登录&lt;/li&gt; &#xA;   &lt;li&gt;保存/加载登录cookies (可验证cookies是否过期)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;商品查询操作 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;提供完整的&lt;a href=&#34;https://raw.githubusercontent.com/tychxn/jd-assistant/master/area_id/&#34;&gt;&lt;code&gt;地址⇔ID&lt;/code&gt;&lt;/a&gt;对应关系&lt;/li&gt; &#xA;   &lt;li&gt;根据商品ID和地址ID查询库存&lt;/li&gt; &#xA;   &lt;li&gt;根据商品ID查询价格&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;购物车操作 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;清空/添加购物车 (无货商品也可以加入购物车，预约商品无法加入)&lt;/li&gt; &#xA;   &lt;li&gt;获取购物车商品详情&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;订单操作 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;获取订单结算页面信息 (商品详情, 应付总额, 收货地址, 收货人等)&lt;/li&gt; &#xA;   &lt;li&gt;提交订单（使用默认地址） &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;直接提交&lt;/li&gt; &#xA;     &lt;li&gt;有货提交&lt;/li&gt; &#xA;     &lt;li&gt;定时提交&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;查询订单 (可选择只显示未付款订单)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;其他 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;商品预约&lt;/li&gt; &#xA;   &lt;li&gt;用户信息查询&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;运行环境&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/&#34;&gt;Python 3&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;第三方库&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.python-requests.org/en/master/&#34;&gt;Requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.crummy.com/software/BeautifulSoup/bs4/doc/&#34;&gt;Beautiful Soup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Legrandin/pycryptodome&#34;&gt;PyCryptodome&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;安装：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;使用教程&lt;/h2&gt; &#xA;&lt;p&gt;程序主入口在 &lt;code&gt;main.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;a href=&#34;https://github.com/tychxn/jd-assistant/wiki/1.-%E4%BA%AC%E4%B8%9C%E6%8A%A2%E8%B4%AD%E5%8A%A9%E6%89%8B%E7%94%A8%E6%B3%95&#34;&gt;使用教程请参看Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;更新记录&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;【2020.03.10】修复了一些小问题。&lt;/li&gt; &#xA; &lt;li&gt;【2020.02.08】修复了查询库存接口响应数据结构变化导致的问题。&lt;/li&gt; &#xA; &lt;li&gt;【2020.02.06】添加下单成功消息推送功能；新增配置参数以减少各种异常情况。&lt;/li&gt; &#xA; &lt;li&gt;【2020.02.03】查询商品库存方法添加超时，避免少数情况下的卡死问题；对部分代码进行了优化。&lt;/li&gt; &#xA; &lt;li&gt;【2020.02.02】重写了监控库存提交订单功能：监控多商品时可以下单任一有库存商品，具体使用方式请参考wiki。&lt;/li&gt; &#xA; &lt;li&gt;【2020.01.29】修复了自定义商品数量时的bug。&lt;/li&gt; &#xA; &lt;li&gt;【2020.01.28】完善了监控库存提交订单功能的代码，具体使用方式请参考wiki。&lt;/li&gt; &#xA; &lt;li&gt;【2020.01.24】修复了查询单个商品库存接口需要添加额外参数的问题。&lt;/li&gt; &#xA; &lt;li&gt;【2020.01.15】提升了部分代码质量。&lt;/li&gt; &#xA; &lt;li&gt;【2019.12.14】解决查询单个商品库存接口变动的问题。&lt;/li&gt; &#xA; &lt;li&gt;【2019.11.10】临时增加预约商品抢购功能。&lt;/li&gt; &#xA; &lt;li&gt;【2019.02.16】更新了普通商品的抢购代码，在Wiki中写了一份使用教程。&lt;/li&gt; &#xA; &lt;li&gt;【2018.11.29】京东更新了抢购商品的下单接口，代码已更新，支持定时抢购。&lt;/li&gt; &#xA; &lt;li&gt;【2018.09.26】京东已下线&lt;code&gt;字符验证码&lt;/code&gt;接口，&lt;code&gt;账号密码登录&lt;/code&gt;功能失效，请使用扫码登录&lt;code&gt;asst.login_by_QRcode()&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;【2018.07.28】京东已采用&lt;code&gt;滑动验证码&lt;/code&gt;替换登录时出现的&lt;code&gt;字符验证码&lt;/code&gt;，但还没有下线&lt;code&gt;字符验证码&lt;/code&gt;接口，&lt;code&gt;账号密码登录&lt;/code&gt;功能依旧可用。等待后续更新滑动验证方式，推荐使用&lt;code&gt;扫码登录&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;备注&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🌟强烈建议大家在部署代码前使用有货的商品测试下单流程，并且：在京东购物车结算页面设置发票为&lt;code&gt;电子普通发票-个人&lt;/code&gt;，设置支付方式为&lt;code&gt;在线支付&lt;/code&gt;，否则可能出现各种未知的下单失败问题。🌟&lt;/li&gt; &#xA; &lt;li&gt;京东商城的登陆/下单机制经常改动，当前测试时间&lt;code&gt;2020.02.08&lt;/code&gt;。如果失效，欢迎提issue，我会来更新。&lt;/li&gt; &#xA; &lt;li&gt;代码在&lt;code&gt;macOS&lt;/code&gt;中编写，如果在其他平台上运行出行问题，欢迎提issue。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;待完成的功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Keep session alive&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 抢优惠券&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;不考虑的功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;✖️ 支付功能&lt;/li&gt; &#xA; &lt;li&gt;✖️ 多账号抢购&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsor&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/?from=jd-assistant&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tychxn/jd-assistant/master/docs/jetbrains.svg?sanitize=true&#34; alt=&#34;JetBrains&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>