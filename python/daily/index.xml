<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-22T01:36:21Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>divamgupta/stable-diffusion-tensorflow</title>
    <updated>2022-09-22T01:36:21Z</updated>
    <id>tag:github.com,2022-09-22:/divamgupta/stable-diffusion-tensorflow</id>
    <link href="https://github.com/divamgupta/stable-diffusion-tensorflow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Stable Diffusion in TensorFlow / Keras&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stable Diffusion in TensorFlow / Keras&lt;/h1&gt; &#xA;&lt;p&gt;A Keras / Tensorflow implementation of Stable Diffusion.&lt;/p&gt; &#xA;&lt;p&gt;The weights were ported from the original implementation.&lt;/p&gt; &#xA;&lt;h2&gt;Colab Notebooks&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to try it out is to use one of the Colab notebooks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/drive/1zVTa4mLeM_w44WaFwl7utTaa6JcaH1zK&#34;&gt;GPU Colab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/drive/15mQgITh3e9HQMNys0zR8JN4R2vp06d-N&#34;&gt;GPU Colab + Mixed Precision&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;~10s generation time per image (512x512) on default Colab GPU without drop in quality (&lt;a href=&#34;https://twitter.com/fchollet/status/1571954014845308928&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/drive/17zQOm_2Iu6pcP8otT-v6rx0D-pKgfaLm&#34;&gt;TPU Colab&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Slower than GPU for single-image generation, faster for large batch of 8+ images (&lt;a href=&#34;https://twitter.com/fchollet/status/1572004717362028546&#34;&gt;source&lt;/a&gt;).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/drive/1ANTUur1MF9DKNd5-BTWhbWa7xUBfCWyI&#34;&gt;GPU Colab with Gradio&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Install as a python package&lt;/h3&gt; &#xA;&lt;p&gt;Install using pip with the git repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install git+https://github.com/divamgupta/stable-diffusion-tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Installing using the repo&lt;/h3&gt; &#xA;&lt;p&gt;Download the repo, either by downloading the &lt;a href=&#34;https://github.com/divamgupta/stable-diffusion-tensorflow/archive/refs/heads/master.zip&#34;&gt;zip&lt;/a&gt; file or by cloning the repo with git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:divamgupta/stable-diffusion-tensorflow.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using pip without a virtual environment&lt;/h4&gt; &#xA;&lt;p&gt;Install dependencies using the &lt;code&gt;requirements.txt&lt;/code&gt; file or the &lt;code&gt;requirements_m1.txt&lt;/code&gt; file,:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using a virtual environment with &lt;em&gt;virtualenv&lt;/em&gt;&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create your virtual environment for &lt;code&gt;python3&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m venv venv&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Activate your virtualenv:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install dependencies using the &lt;code&gt;requirements.txt&lt;/code&gt; file or the &lt;code&gt;requirements_m1.txt&lt;/code&gt; file,:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Using the Python interface&lt;/h3&gt; &#xA;&lt;p&gt;If you installed the package, you can use it as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from stable_diffusion_tf.stable_diffusion import Text2Image&#xA;from PIL import Image&#xA;&#xA;generator = Text2Image(&#xA;    img_height=512,&#xA;    img_width=512,&#xA;    jit_compile=False,&#xA;)&#xA;img = generator.generate(&#xA;    &#34;An astronaut riding a horse&#34;,&#xA;    num_steps=50,&#xA;    unconditional_guidance_scale=7.5,&#xA;    temperature=1,&#xA;    batch_size=1,&#xA;)&#xA;Image.fromarray(img[0]).save(&#34;output.png&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using &lt;code&gt;text2image.py&lt;/code&gt; from the git repo&lt;/h3&gt; &#xA;&lt;p&gt;Assuming you have installed the required packages, you can generate images from a text prompt using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python text2image.py --prompt=&#34;An astronaut riding a horse&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The generated image will be named &lt;code&gt;output.png&lt;/code&gt; on the root of the repo. If you want to use a different name, use the &lt;code&gt;--output&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python text2image.py --prompt=&#34;An astronaut riding a horse&#34; --output=&#34;my_image.png&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check out the &lt;code&gt;text2image.py&lt;/code&gt; file for more options, including image size, number of steps, etc.&lt;/p&gt; &#xA;&lt;h2&gt;Example outputs&lt;/h2&gt; &#xA;&lt;p&gt;The following outputs have been generated using this implementation:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;em&gt;A epic and beautiful rococo werewolf drinking coffee, in a burning coffee shop. ultra-detailed. anime, pixiv, uhd 8k cryengine, octane render&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1890549/190841598-3d0b9bd1-d679-4c8d-bd5e-b1e24397b5c8.png&#34; alt=&#34;a&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;em&gt;Spider-Gwen Gwen-Stacy Skyscraper Pink White Pink-White Spiderman Photo-realistic 4K&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1890549/190841999-689c9c38-ece4-46a0-ad85-f459ec64c5b8.png&#34; alt=&#34;a&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;em&gt;A vision of paradise, Unreal Engine&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1890549/190841886-239406ea-72cb-4570-8f4c-fcd074a7ad7f.png&#34; alt=&#34;a&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CompVis/stable-diffusion&#34;&gt;https://github.com/CompVis/stable-diffusion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/geohot/tinygrad/raw/master/examples/stable_diffusion.py&#34;&gt;https://github.com/geohot/tinygrad/blob/master/examples/stable_diffusion.py&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>Processus-Thief/HEKATOMB</title>
    <updated>2022-09-22T01:36:21Z</updated>
    <id>tag:github.com,2022-09-22:/Processus-Thief/HEKATOMB</id>
    <link href="https://github.com/Processus-Thief/HEKATOMB" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hekatomb is a python script that connects to LDAP directory to retrieve all computers and users informations. Then it will download all DPAPI blob of all users from all computers and uses Domain backup keys to decrypt them.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The HEKATOMB project&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;img src=&#34;https://img.shields.io/badge/Python-3.6+-informational&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=ProcessusT&#34; title=&#34;Follow&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/ProcessusT?label=ProcessusT&amp;amp;style=social&#34;&gt;&lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;h1&gt; Because Domain Admin rights are not enough.&lt;br&gt; Hack them all. &lt;/h1&gt; &#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Hekatomb is a python script that connects to LDAP directory to retrieve all computers and users informations.&lt;br&gt; Then it will download all DPAPI blob of all users from all computers.&lt;br&gt; Finally, it will extract domain controller private key through RPC uses it to decrypt all credentials.&lt;br&gt; &lt;br&gt; Script kiddies code malwares in C#, real pentesters use Python and are already Domain Admins üêç&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Processus-Thief/HEKATOMB/main/.assets/github1.png&#34; width=&#34;80%;&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;br&gt; On last version (V 1.2) :&#xA;&lt;br&gt; - Increase the LDAP results limit of users or computers extraction (1000 previously)&#xA;&lt;br&gt; - Add the possibility to specify a user or a computer to target&#xA;&lt;br&gt; - Add the possibility to export results to a CSV file&#xA;&lt;br&gt; &#xA;&lt;br&gt; V 1.1 :&#xA;&lt;br&gt; - Domain controller private key extraction through RPC&#xA;&lt;br&gt; - Credentials classification by computers and by users&#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What da fuck is this ?&lt;/h2&gt; &#xA;&lt;br&gt; On Windows, credentials saved in the Windows Credentials Manager are encrypted using Microsoft&#39;s Data Protection API and stored as &#34;blob&#34; files in user AppData folder.&#xA;&lt;br&gt; Outside of a domain, the user&#39;s password hash is used to encrypt these &#34;blobs&#34;.&#xA;&lt;br&gt; When you are in an Active Directory environment, the Data Protection API uses the domain controller&#39;s public key to encrypt these blobs.&#xA;&lt;br&gt; With the extracted private key of the domain controller, it is possible to decrypt all the blobs, and therefore to recover all the secrets recorded in the Windows identification manager of all the workstations in the domain.&#xA;&lt;br&gt; &#xA;&lt;br&gt; Hekatomb automates the search for blobs and the decryption to recover all domain users&#39; secrets ‚ò†Ô∏è &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;br&gt; Hekatomb is coded in Python 3 and uses Pip to install its requirements : &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;git clone https://github.com/Processus-Thief/HEKATOMB&#xA;cd HEKATOMB&#xA;pip3 install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;br&gt; Hekatomb uses Impacket syntax : &#xA;&lt;br&gt;&#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;usage: hekatomb.py [-h] [-hashes LMHASH:NTHASH] [-pvk PVK] [-dns DNS] [-dnstcp] [-port [port]] [-just-user JUST_USER] [-just-computer JUST_COMPUTER] [-md5] [-debug] [-debugmax] target&#xA;&#xA;Script used to automate domain computers and users extraction from LDAP and extraction of domain controller private key through RPC to collect and decrypt all users&#39; DPAPI secrets saved in Windows credential manager.&#xA;&#xA;positional arguments:&#xA;  target                [[domain/]username[:password]@]&amp;lt;targetName or address of DC&amp;gt;&#xA;&#xA;options:&#xA;  -h, --help            show this help message and exit&#xA;&#xA;authentication:&#xA;  -hashes LMHASH:NTHASH     NTLM hashes, format is LMHASH:NTHASH&#xA;&#xA;authentication:&#xA;  -pvk PVK                  domain backup keys file&#xA;  -dns DNS                  DNS server IP address to resolve computers hostname&#xA;  -dnstcp                   Use TCP for DNS connection&#xA;  -port [port]              port to connect to SMB Server&#xA;  -just-user [USERNAME]     Test only specified username&#xA;  -just-computer [COMPUTER] Test only specified computer&#xA;  -md5                      Print md5 hash insted of clear passwords&#xA;&#xA;verbosity:&#xA;  -debug                Turn DEBUG output ON&#xA;  -debugmax             Turn DEBUG output TO MAAAAXXXX&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python3 hekatomb.py -hashes :ed0052e5a66b1c8e942cc9481a50d56 DOMAIN.local/administrator@10.0.0.1 -debug -dnstcp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;br &lt;h2&gt;How to retrieve domain backup keys ? &#xA;&lt;br&gt; If no domain backup keys are provided, the script will retrieve it through RPC</summary>
  </entry>
  <entry>
    <title>scipy/scipy</title>
    <updated>2022-09-22T01:36:21Z</updated>
    <id>tag:github.com,2022-09-22:/scipy/scipy</id>
    <link href="https://github.com/scipy/scipy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SciPy library main repository&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. image:: doc/source/_static/logo.svg :target: &lt;a href=&#34;https://scipy.org&#34;&gt;https://scipy.org&lt;/a&gt; :width: 100 :height: 100 :align: left&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&amp;amp;colorA=E1523D&amp;amp;colorB=007D8A&#34;&gt;https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&amp;amp;colorA=E1523D&amp;amp;colorB=007D8A&lt;/a&gt; :target: &lt;a href=&#34;https://numfocus.org&#34;&gt;https://numfocus.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/pypi/dm/scipy.svg?label=Pypi%20downloads&#34;&gt;https://img.shields.io/pypi/dm/scipy.svg?label=Pypi%20downloads&lt;/a&gt; :target: &lt;a href=&#34;https://pypi.org/project/scipy/&#34;&gt;https://pypi.org/project/scipy/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/conda/dn/conda-forge/scipy.svg?label=Conda%20downloads&#34;&gt;https://img.shields.io/conda/dn/conda-forge/scipy.svg?label=Conda%20downloads&lt;/a&gt; :target: &lt;a href=&#34;https://anaconda.org/conda-forge/scipy&#34;&gt;https://anaconda.org/conda-forge/scipy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/badge/stackoverflow-Ask%20questions-blue.svg&#34;&gt;https://img.shields.io/badge/stackoverflow-Ask%20questions-blue.svg&lt;/a&gt; :target: &lt;a href=&#34;https://stackoverflow.com/questions/tagged/scipy&#34;&gt;https://stackoverflow.com/questions/tagged/scipy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/badge/DOI-10.1038%2Fs41592--019--0686--2-blue&#34;&gt;https://img.shields.io/badge/DOI-10.1038%2Fs41592--019--0686--2-blue&lt;/a&gt; :target: &lt;a href=&#34;https://www.nature.com/articles/s41592-019-0686-2&#34;&gt;https://www.nature.com/articles/s41592-019-0686-2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;SciPy (pronounced &#34;Sigh Pie&#34;) is an open-source software for mathematics, science, and engineering. It includes modules for statistics, optimization, integration, linear algebra, Fourier transforms, signal and image processing, ODE solvers, and more.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Website:&lt;/strong&gt; &lt;a href=&#34;https://scipy.org&#34;&gt;https://scipy.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; &lt;a href=&#34;https://docs.scipy.org/doc/scipy/&#34;&gt;https://docs.scipy.org/doc/scipy/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Development version of the documentation:&lt;/strong&gt; &lt;a href=&#34;https://scipy.github.io/devdocs&#34;&gt;https://scipy.github.io/devdocs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mailing list:&lt;/strong&gt; &lt;a href=&#34;https://mail.python.org/mailman3/lists/scipy-dev.python.org/&#34;&gt;https://mail.python.org/mailman3/lists/scipy-dev.python.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Source code:&lt;/strong&gt; &lt;a href=&#34;https://github.com/scipy/scipy&#34;&gt;https://github.com/scipy/scipy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Contributing:&lt;/strong&gt; &lt;a href=&#34;https://scipy.github.io/devdocs/dev/index.html&#34;&gt;https://scipy.github.io/devdocs/dev/index.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bug reports:&lt;/strong&gt; &lt;a href=&#34;https://github.com/scipy/scipy/issues&#34;&gt;https://github.com/scipy/scipy/issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Code of Conduct:&lt;/strong&gt; &lt;a href=&#34;https://docs.scipy.org/doc/scipy/dev/conduct/code_of_conduct.html&#34;&gt;https://docs.scipy.org/doc/scipy/dev/conduct/code_of_conduct.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Report a security vulnerability:&lt;/strong&gt; &lt;a href=&#34;https://tidelift.com/docs/security&#34;&gt;https://tidelift.com/docs/security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Citing in your work:&lt;/strong&gt; &lt;a href=&#34;https://www.scipy.org/citing-scipy/&#34;&gt;https://www.scipy.org/citing-scipy/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;SciPy is built to work with NumPy arrays, and provides many user-friendly and efficient numerical routines, such as routines for numerical integration and optimization. Together, they run on all popular operating systems, are quick to install, and are free of charge. NumPy and SciPy are easy to use, but powerful enough to be depended upon by some of the world&#39;s leading scientists and engineers. If you need to manipulate numbers on a computer and display or publish the results, give SciPy a try!&lt;/p&gt; &#xA;&lt;p&gt;For the installation instructions, see &lt;code&gt;our install guide &amp;lt;https://docs.scipy.org/doc/scipy/getting_started.html#installation&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;h2&gt;Call for Contributions&lt;/h2&gt; &#xA;&lt;p&gt;We appreciate and welcome contributions. Small improvements or fixes are always appreciated; issues labeled as &#34;good first issue&#34; may be a good starting point. Have a look at &lt;code&gt;our contributing guide &amp;lt;https://scipy.github.io/devdocs/dev/index.html&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;Writing code isn‚Äôt the only way to contribute to SciPy. You can also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;review pull requests&lt;/li&gt; &#xA; &lt;li&gt;triage issues&lt;/li&gt; &#xA; &lt;li&gt;develop tutorials, presentations, and other educational materials&lt;/li&gt; &#xA; &lt;li&gt;maintain and improve &lt;code&gt;our website &amp;lt;https://github.com/scipy/scipy.org&amp;gt;&lt;/code&gt;__&lt;/li&gt; &#xA; &lt;li&gt;develop graphic design for our brand assets and promotional materials&lt;/li&gt; &#xA; &lt;li&gt;help with outreach and onboard new contributors&lt;/li&gt; &#xA; &lt;li&gt;write grant proposals and help with other fundraising efforts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you‚Äôre unsure where to start or how your skills fit in, reach out! You can ask on the mailing list or here, on GitHub, by leaving a comment on a relevant issue that is already open.&lt;/p&gt; &#xA;&lt;p&gt;If you are new to contributing to open source, &lt;code&gt;this guide &amp;lt;https://opensource.guide/how-to-contribute/&amp;gt;&lt;/code&gt;__ helps explain why, what, and how to get involved.&lt;/p&gt;</summary>
  </entry>
</feed>