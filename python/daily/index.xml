<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-18T01:32:06Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>CodeXTF2/Burp2Malleable</title>
    <updated>2022-08-18T01:32:06Z</updated>
    <id>tag:github.com,2022-08-18:/CodeXTF2/Burp2Malleable</id>
    <link href="https://github.com/CodeXTF2/Burp2Malleable" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Quick python utility I wrote to turn HTTP requests from burp suite into Cobalt Strike Malleable C2 profiles&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Burp2Malleable&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/CodeXTF2/Burp2Malleable/master/logo.png&#34; width=&#34;500&#34; height=&#34;334&#34;&gt; &lt;/p&gt; Quick python utility I wrote to turn HTTP requests from burp suite into Cobalt Strike Malleable C2 profiles. It lets you take captured/crafted requests from BurpSuite (or ZAP, POSTMAN etc.) of what you want your traffic to look like/blend in with, and turns them into CobaltStrike Malleable C2 profiles. It allows the operator to choose where their data is stored and in what format, so that the traffic looks as clean as possible. &#xA;&lt;h4&gt;Feel free to create issues for feature requests or bugs etc!&lt;/h4&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;python burp2malleable.py request.txt response.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CodeXTF2/Burp2Malleable/master/burp2malleable.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Example request and response&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;POST /api/v9/auth/login HTTP/1.1&#xA;Host: discord.com&#xA;X-Super-Properties: eyJvcyI6IldpbH0=&#xA;X-Fingerprint: 1008685949565288488.PHKwXlnLkLRgcC2N8fC2zosjGKc&#xA;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&#xA;&#xA;{&#34;login&#34;:&#34;a@a.com&#34;,&#34;password&#34;:&#34;bsdfv&#34;,&#34;undelete&#34;:false,&#34;captcha_key&#34;:null,&#34;login_source&#34;:null,&#34;gift_code_sku_id&#34;:null}&#xA;&#xA;&#xA;&#xA;HTTP/1.1 400 Bad Request&#xA;Date: Mon, 15 Aug 2022 10:38:13 GMT&#xA;Content-Type: application/json&#xA;Content-Length: 127&#xA;Connection: close&#xA;access-control-allow-origin: https://discord.com&#xA;access-control-allow-credentials: true&#xA;access-control-allow-methods: POST, GET, PUT, PATCH, DELETE&#xA;access-control-allow-headers: Content-Type, Authorization, X-Audit-Log-Reason, X-Track, X-Super-Properties, X-Context-Properties, X-Failed-Requests, X-Fingerprint, X-RPC-Proxy, X-Discord-Locale, X-Debug-Options, x-client-trace-id, If-None-Match, Range, X-RateLimit-Precision&#xA;strict-transport-security: max-age=31536000; includeSubDomains; preload&#xA;x-envoy-upstream-service-time: 40&#xA;Via: 1.1 google&#xA;Alt-Svc: h3=&#34;:443&#34;; ma=86400, h3-29=&#34;:443&#34;; ma=86400&#xA;CF-Cache-Status: DYNAMIC&#xA;Expect-CT: max-age=604800, report-uri=&#34;https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct&#34;&#xA;Report-To: {&#34;endpoints&#34;:[{&#34;url&#34;:&#34;https:\/\/a.nel.cloudflare.com\/report\/v3?s=NVkTuc0Tiecsv86A00v9WwDmAGBhWkOIUSbzNAmn7bbAEuwnrV8j1%2BNMu8qkv6yLwwy6izaKGbhzvNCLUrKlKUm1mjN8L3e2qu4mjYSmMI%2Bj5mLbso23JbU1P2Ah&#34;}],&#34;group&#34;:&#34;cf-nel&#34;,&#34;max_age&#34;:604800}&#xA;NEL: {&#34;success_fraction&#34;:0,&#34;report_to&#34;:&#34;cf-nel&#34;,&#34;max_age&#34;:604800}&#xA;X-Content-Type-Options: nosniff&#xA;Server: cloudflare&#xA;CF-RAY: 73b14ca4bbd187d8-SIN&#xA;&#xA;{&#34;captcha_key&#34;: [&#34;captcha-required&#34;], &#34;captcha_sitekey&#34;: &#34;f5561ba9-8f1e-40ca-9b5b-a0b3f719ef34&#34;, &#34;captcha_service&#34;: &#34;hcaptcha&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example generated profile&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;############################################################################&#xA;# Generated by Burp2Malleable - https://github.com/CodeXTF2/Burp2Malleable #     &#xA;# By: CodeX                                                                #&#xA;############################################################################&#xA;# Automatically generated with pyMalleableC2&#xA;# https://github.com/Porchetta-Industries/pyMalleableC2&#xA;#&#xA;# !!! Make sure to run this profile through c2lint before using !!!&#xA;&#xA;http-get {&#xA;    set verb &#34;POST&#34;;&#xA;    set uri &#34;/api/v9/auth/login&#34;;&#xA;    client {&#xA;        header &#34;Host&#34; &#34;discord.com&#34;;&#xA;        header &#34;X-Super-Properties&#34; &#34;eyJvcyI6IldpbH0=&#34;;&#xA;        header &#34;X-Fingerprint&#34; &#34;1008685949565288488.PHKwXlnLkLRgcC2N8fC2zosjGKc&#34;;&#xA;        header &#34;User-Agent&#34; &#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&#34;;&#xA;        parameter &#34;sad&#34; &#34;yes&#34;;&#xA;        metadata {&#xA;            mask;&#xA;            base64url;&#xA;            prepend &#34;&#34;;&#xA;            append &#34;&#34;;&#xA;            header &#34;a&#34;;&#xA;        }&#xA;    }&#xA;    server {&#xA;        output {&#xA;            mask;&#xA;            base64url;&#xA;            prepend &#34;{&#39;captcha_key&#39;: [&#39;captcha-required&#39;], &#39;captcha_sitekey&#39;: &#39;&#34;;&#xA;            append &#34;&#39;, &#39;captcha_service&#39;: &#39;hcaptcha&#39;}&#34;;&#xA;            print;&#xA;        }&#xA;        header &#34;Date&#34; &#34;Mon, 15 Aug 2022 10:38:13 GMT&#34;;&#xA;        header &#34;Content-Type&#34; &#34;application/json&#34;;&#xA;        header &#34;Content-Length&#34; &#34;127&#34;;&#xA;        header &#34;Connection&#34; &#34;close&#34;;&#xA;        header &#34;access-control-allow-origin&#34; &#34;https://discord.com&#34;;&#xA;        header &#34;access-control-allow-credentials&#34; &#34;true&#34;;&#xA;        header &#34;access-control-allow-methods&#34; &#34;POST, GET, PUT, PATCH, DELETE&#34;;&#xA;        header &#34;access-control-allow-headers&#34; &#34;Content-Type, Authorization, X-Audit-Log-Reason, X-Track, X-Super-Properties, X-Context-Properties, X-Failed-Requests, X-Fingerprint, X-RPC-Proxy, X-Discord-Locale, X-Debug-Options, x-client-trace-id, If-None-Match, Range, X-RateLimit-Precision&#34;;&#xA;        header &#34;strict-transport-security&#34; &#34;max-age=31536000; includeSubDomains; preload&#34;;&#xA;        header &#34;x-envoy-upstream-service-time&#34; &#34;40&#34;;&#xA;        header &#34;Via&#34; &#34;1.1 google&#34;;&#xA;        header &#34;Alt-Svc&#34; &#34;h3=&#39;:443&#39;; ma=86400, h3-29=&#39;:443&#39;; ma=86400&#34;;&#xA;        header &#34;CF-Cache-Status&#34; &#34;DYNAMIC&#34;;&#xA;        header &#34;Expect-CT&#34; &#34;max-age=604800, report-uri=&#39;https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct&#39;&#34;;&#xA;        header &#34;Report-To&#34; &#34;{&#39;endpoints&#39;:[{&#39;url&#39;:&#39;https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=NVkTuc0Tiecsv86A00v9WwDmAGBhWkOIUSbzNAmn7bbAEuwnrV8j1%2BNMu8qkv6yLwwy6izaKGbhzvNCLUrKlKUm1mjN8L3e2qu4mjYSmMI%2Bj5mLbso23JbU1P2Ah&#39;}],&#39;group&#39;:&#39;cf-nel&#39;,&#39;max_age&#39;:604800}&#34;;&#xA;        header &#34;NEL&#34; &#34;{&#39;success_fraction&#39;:0,&#39;report_to&#39;:&#39;cf-nel&#39;,&#39;max_age&#39;:604800}&#34;;&#xA;        header &#34;X-Content-Type-Options&#34; &#34;nosniff&#34;;&#xA;        header &#34;Server&#34; &#34;cloudflare&#34;;&#xA;        header &#34;CF-RAY&#34; &#34;73b14ca4bbd187d8-SIN&#34;;&#xA;    }&#xA;}&#xA;http-post {&#xA;    set verb &#34;POST&#34;;&#xA;    set uri &#34;/API/V9/AUTH/LOGIN&#34;;&#xA;    client {&#xA;        parameter &#34;sad&#34; &#34;yes&#34;;&#xA;        header &#34;Host&#34; &#34;discord.com&#34;;&#xA;        header &#34;X-Super-Properties&#34; &#34;eyJvcyI6IldpbH0=&#34;;&#xA;        header &#34;X-Fingerprint&#34; &#34;1008685949565288488.PHKwXlnLkLRgcC2N8fC2zosjGKc&#34;;&#xA;        header &#34;User-Agent&#34; &#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&#34;;&#xA;        id {&#xA;            mask;&#xA;            base64url;&#xA;            header &#34;b&#34;;&#xA;        }&#xA;        output {&#xA;            mask;&#xA;            base64url;&#xA;            prepend &#34;{&#39;login&#39;:&#39;a@a.com&#39;,&#39;password&#39;:&#39;bsdfv&#39;,&#39;undelete&#39;:false,&#39;cap&#34;;&#xA;            append &#34;tcha_key&#39;:null,&#39;login_source&#39;:null,&#39;gift_code_sku_id&#39;:null}&#34;;&#xA;            print;&#xA;        }&#xA;    }&#xA;    server {&#xA;        output {&#xA;            mask;&#xA;            base64url;&#xA;            prepend &#34;{&#39;captcha_key&#39;: [&#39;captcha-required&#39;], &#39;captcha_sitekey&#39;: &#39;f5561&#34;;&#xA;            append &#34;ba9-8f1e-40ca-9b5b-a0b3f719ef34&#39;, &#39;captcha_service&#39;: &#39;hcaptcha&#39;}&#34;;&#xA;            print;&#xA;        }&#xA;        header &#34;Date&#34; &#34;Mon, 15 Aug 2022 10:38:13 GMT&#34;;&#xA;        header &#34;Content-Type&#34; &#34;application/json&#34;;&#xA;        header &#34;Content-Length&#34; &#34;127&#34;;&#xA;        header &#34;Connection&#34; &#34;close&#34;;&#xA;        header &#34;access-control-allow-origin&#34; &#34;https://discord.com&#34;;&#xA;        header &#34;access-control-allow-credentials&#34; &#34;true&#34;;&#xA;        header &#34;access-control-allow-methods&#34; &#34;POST, GET, PUT, PATCH, DELETE&#34;;&#xA;        header &#34;access-control-allow-headers&#34; &#34;Content-Type, Authorization, X-Audit-Log-Reason, X-Track, X-Super-Properties, X-Context-Properties, X-Failed-Requests, X-Fingerprint, X-RPC-Proxy, X-Discord-Locale, X-Debug-Options, x-client-trace-id, If-None-Match, Range, X-RateLimit-Precision&#34;;&#xA;        header &#34;strict-transport-security&#34; &#34;max-age=31536000; includeSubDomains; preload&#34;;&#xA;        header &#34;x-envoy-upstream-service-time&#34; &#34;40&#34;;&#xA;        header &#34;Via&#34; &#34;1.1 google&#34;;&#xA;        header &#34;Alt-Svc&#34; &#34;h3=&#39;:443&#39;; ma=86400, h3-29=&#39;:443&#39;; ma=86400&#34;;&#xA;        header &#34;CF-Cache-Status&#34; &#34;DYNAMIC&#34;;&#xA;        header &#34;Expect-CT&#34; &#34;max-age=604800, report-uri=&#39;https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct&#39;&#34;;&#xA;        header &#34;Report-To&#34; &#34;{&#39;endpoints&#39;:[{&#39;url&#39;:&#39;https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=NVkTuc0Tiecsv86A00v9WwDmAGBhWkOIUSbzNAmn7bbAEuwnrV8j1%2BNMu8qkv6yLwwy6izaKGbhzvNCLUrKlKUm1mjN8L3e2qu4mjYSmMI%2Bj5mLbso23JbU1P2Ah&#39;}],&#39;group&#39;:&#39;cf-nel&#39;,&#39;max_age&#39;:604800}&#34;;&#xA;        header &#34;NEL&#34; &#34;{&#39;success_fraction&#39;:0,&#39;report_to&#39;:&#39;cf-nel&#39;,&#39;max_age&#39;:604800}&#34;;&#xA;        header &#34;X-Content-Type-Options&#34; &#34;nosniff&#34;;&#xA;        header &#34;Server&#34; &#34;cloudflare&#34;;&#xA;        header &#34;CF-RAY&#34; &#34;73b14ca4bbd187d8-SIN&#34;;&#xA;    }&#xA;}&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;./c2lint&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;===============&#xA;default&#xA;===============&#xA;&#xA;http-get&#xA;--------&#xA;POST /api/v9/auth/login?sad=yes HTTP/1.1&#xA;Host: discord.com&#xA;X-Super-Properties: eyJvcyI6IldpbH0=&#xA;X-Fingerprint: 1008685949565288488.PHKwXlnLkLRgcC2N8fC2zosjGKc&#xA;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&#xA;a: xX1eg2uo_iO0ahkT32lKnTqae5A&#xA;&#xA;HTTP/1.1 200 OK&#xA;Content-Length: 127&#xA;Date: Mon, 15 Aug 2022 10:38:13 GMT&#xA;Content-Type: application/json&#xA;Connection: close&#xA;access-control-allow-origin: https://discord.com&#xA;access-control-allow-credentials: true&#xA;access-control-allow-methods: POST, GET, PUT, PATCH, DELETE&#xA;access-control-allow-headers: Content-Type, Authorization, X-Audit-Log-Reason, X-Track, X-Super-Properties, X-Context-Properties, X-Failed-Requests, X-Fingerprint, X-RPC-Proxy, X-Discord-Locale, X-Debug-Options, x-client-trace-id, If-None-Match, Range, X-RateLimit-Precision&#xA;strict-transport-security: max-age=31536000; includeSubDomains; preload&#xA;x-envoy-upstream-service-time: 40&#xA;Via: 1.1 google&#xA;Alt-Svc: h3=&#39;:443&#39;; ma=86400, h3-29=&#39;:443&#39;; ma=86400&#xA;CF-Cache-Status: DYNAMIC&#xA;Expect-CT: max-age=604800, report-uri=&#39;https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct&#39;&#xA;Report-To: {&#39;endpoints&#39;:[{&#39;url&#39;:&#39;https:\/\/a.nel.cloudflare.com\/report\/v3?s=NVkTuc0Tiecsv86A00v9WwDmAGBhWkOIUSbzNAmn7bbAEuwnrV8j1%2BNMu8qkv6yLwwy6izaKGbhzvNCLUrKlKUm1mjN8L3e2qu4mjYSmMI%2Bj5mLbso23JbU1P2Ah&#39;}],&#39;group&#39;:&#39;cf-nel&#39;,&#39;max_age&#39;:604800}&#xA;NEL: {&#39;success_fraction&#39;:0,&#39;report_to&#39;:&#39;cf-nel&#39;,&#39;max_age&#39;:604800}&#xA;X-Content-Type-Options: nosniff&#xA;Server: cloudflare&#xA;CF-RAY: 73b14ca4bbd187d8-SIN&#xA;&#xA;{&#39;captcha_key&#39;: [&#39;captcha-required&#39;], &#39;captcha_sitekey&#39;: &#39;--Woyg0lFs9RSmfR69tWlPeDuePXOQ_oxE2EtEvVBAKoILKIS42z2VfnfuGcpiH7LIiIpkiB2wfJpQYUv_jG3Q6BERA&#39;, &#39;captcha_service&#39;: &#39;hcaptcha&#39;}&#xA;&#xA;http-post&#xA;---------&#xA;POST /API/V9/AUTH/LOGIN?sad=yes HTTP/1.1&#xA;Host: discord.com&#xA;X-Super-Properties: eyJvcyI6IldpbH0=&#xA;X-Fingerprint: 1008685949565288488.PHKwXlnLkLRgcC2N8fC2zosjGKc&#xA;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&#xA;b: 8Qwdy8k1LfnC&#xA;Content-Length: 145&#xA;&#xA;{&#39;login&#39;:&#39;a@a.com&#39;,&#39;password&#39;:&#39;bsdfv&#39;,&#39;undelete&#39;:false,&#39;capMl6axjTOnr49ZZGv6DTxgTmm8JYtcha_key&#39;:null,&#39;login_source&#39;:null,&#39;gift_code_sku_id&#39;:null}&#xA;&#xA;HTTP/1.1 200 OK&#xA;Content-Length: 127&#xA;Date: Mon, 15 Aug 2022 10:38:13 GMT&#xA;Content-Type: application/json&#xA;Connection: close&#xA;access-control-allow-origin: https://discord.com&#xA;access-control-allow-credentials: true&#xA;access-control-allow-methods: POST, GET, PUT, PATCH, DELETE&#xA;access-control-allow-headers: Content-Type, Authorization, X-Audit-Log-Reason, X-Track, X-Super-Properties, X-Context-Properties, X-Failed-Requests, X-Fingerprint, X-RPC-Proxy, X-Discord-Locale, X-Debug-Options, x-client-trace-id, If-None-Match, Range, X-RateLimit-Precision&#xA;strict-transport-security: max-age=31536000; includeSubDomains; preload&#xA;x-envoy-upstream-service-time: 40&#xA;Via: 1.1 google&#xA;Alt-Svc: h3=&#39;:443&#39;; ma=86400, h3-29=&#39;:443&#39;; ma=86400&#xA;CF-Cache-Status: DYNAMIC&#xA;Expect-CT: max-age=604800, report-uri=&#39;https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct&#39;&#xA;Report-To: {&#39;endpoints&#39;:[{&#39;url&#39;:&#39;https:\/\/a.nel.cloudflare.com\/report\/v3?s=NVkTuc0Tiecsv86A00v9WwDmAGBhWkOIUSbzNAmn7bbAEuwnrV8j1%2BNMu8qkv6yLwwy6izaKGbhzvNCLUrKlKUm1mjN8L3e2qu4mjYSmMI%2Bj5mLbso23JbU1P2Ah&#39;}],&#39;group&#39;:&#39;cf-nel&#39;,&#39;max_age&#39;:604800}&#xA;NEL: {&#39;success_fraction&#39;:0,&#39;report_to&#39;:&#39;cf-nel&#39;,&#39;max_age&#39;:604800}&#xA;X-Content-Type-Options: nosniff&#xA;Server: cloudflare&#xA;CF-RAY: 73b14ca4bbd187d8-SIN&#xA;&#xA;{&#39;captcha_key&#39;: [&#39;captcha-required&#39;], &#39;captcha_sitekey&#39;: &#39;f5561_kyvKAba9-8f1e-40ca-9b5b-a0b3f719ef34&#39;, &#39;captcha_service&#39;: &#39;hcaptcha&#39;}&#xA;&#xA;&#xA;[+] POST 3x check passed&#xA;[+] .http-get.server.output size is good&#xA;[+] .http-get.client size is good&#xA;[+] .http-post.client size is good&#xA;[+] .http-get.client.metadata transform+mangle+recover passed (1 byte[s])&#xA;[+] .http-get.client.metadata transform+mangle+recover passed (100 byte[s])&#xA;[+] .http-get.client.metadata transform+mangle+recover passed (128 byte[s])&#xA;[+] .http-get.client.metadata transform+mangle+recover passed (256 byte[s])&#xA;[+] .http-get.server.output transform+mangle+recover passed (0 byte[s])&#xA;[+] .http-get.server.output transform+mangle+recover passed (1 byte[s])&#xA;[+] .http-get.server.output transform+mangle+recover passed (48248 byte[s])&#xA;[+] .http-get.server.output transform+mangle+recover passed (1048576 byte[s])&#xA;[+] .http-post.client.id transform+mangle+recover passed (4 byte[s])&#xA;[+] .http-post.client.output transform+mangle+recover passed (0 byte[s])&#xA;[+] .http-post.client.output transform+mangle+recover passed (1 byte[s])&#xA;[+] .http-post.client.output POSTs results&#xA;[+] .http-post.client.output transform+mangle+recover passed (48248 byte[s])&#xA;[+] .http-post.client.output transform+mangle+recover passed (1048576 byte[s])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Work in progress, will be updated if I think of ideas. Feel free to submit issues/PRs/suggestions.&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Detect base64 strings in original request and response and automatically use those to store beacon data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Porchetta-Industries/pyMalleableC2&#34;&gt;https://github.com/Porchetta-Industries/pyMalleableC2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xscorp/Burpee&#34;&gt;https://github.com/xscorp/Burpee&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>SinicaGroup/Class-agnostic-Few-shot-Object-Counting</title>
    <updated>2022-08-18T01:32:06Z</updated>
    <id>tag:github.com,2022-08-18:/SinicaGroup/Class-agnostic-Few-shot-Object-Counting</id>
    <link href="https://github.com/SinicaGroup/Class-agnostic-Few-shot-Object-Counting" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Class agnostic Few shot Object Counting&lt;/h1&gt; &#xA;&lt;p&gt;This repository is the non-official pytorch implementation of a WACV 2021 Paper &#34;Class-agnostic Few-shot-Object-Counting&#34;. &lt;a href=&#34;https://openaccess.thecvf.com/content/WACV2021/papers/Yang_Class-Agnostic_Few-Shot_Object_Counting_WACV_2021_paper.pdf&#34;&gt;Link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In Proc. IEEE/CVF Winter Conference on Applications of Computer Vision (WACV), 2021 Shuo-Diao Yang, Hung-Ting Su, Winston H. Hsu, Wen-Chin Chen&lt;sup&gt;*&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/76461262/181033357-71dc9a34-7a78-4410-81d6-4dc7d74bedfd.png&#34; alt=&#34;39_ref_good&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/76461262/181033299-cda225d3-c964-4327-9d13-bdbdaa296af3.png&#34; width=&#34;200&#34; height=&#34;150&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/76461262/181033407-cb571edc-cb2f-4f1a-9127-fb74cafc933c.png&#34; width=&#34;200&#34; height=&#34;150&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/76461262/181033455-84efbbea-0656-4e47-b281-34e3eeb14482.png&#34; width=&#34;200&#34; height=&#34;150&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/76461262/181036373-715da5ae-e150-4980-92e7-3434146e40e8.png&#34; alt=&#34;2_ref_good&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/76461262/181036450-ee30acc9-1521-4dd1-b5c3-562308dc7f8d.png&#34; width=&#34;200&#34; height=&#34;150&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/76461262/181036669-6d0b78b4-8447-4f8c-9ac6-821351bc4f0b.png&#34; width=&#34;200&#34; height=&#34;150&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/76461262/181036720-a7539696-bd5f-4886-aff6-4a343d390276.png&#34; width=&#34;200&#34; height=&#34;150&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Our code has been implemented on Python 3.8 and PyTorch 1.8.1+cu101. Please follow the instructions to setup your environment. See other required packages in &lt;code&gt;requirements.txt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda create --name CFOCNet python=3.8&#xA;conda activate CFOCNet&#xA;pip install -r requirements.txt&#xA;pip install &#34;git+https://github.com/philferriere/cocoapi.git#egg=pycocotools&amp;amp;subdirectory=PythonAPI&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have problem about installing &lt;strong&gt;cocoapi&lt;/strong&gt;, come &lt;a href=&#34;https://github.com/philferriere/cocoapi&#34;&gt;here&lt;/a&gt; to find the official documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SinicaGroup/Class-agnostic-Few-shot-Object-Counting/main/CFOCNet_demo.ipynb&#34;&gt;CFOCNet_demo.ipynb&lt;/a&gt; This notebook tests the detail implementations of CFOCNet, giving insights such as how the size of each tensor changes across each stage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SinicaGroup/Class-agnostic-Few-shot-Object-Counting/main/model&#34;&gt;model&lt;/a&gt; This directory contains all related modules of our CFOCNet implementation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SinicaGroup/Class-agnostic-Few-shot-Object-Counting/main/Eval_Result&#34;&gt;Eval_Result&lt;/a&gt; This directory contains the ideal results during evaluation stage, where an example&#39;s predicted count and the density map aligns with the groundtruth.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Data Preparation&lt;/h2&gt; &#xA;&lt;p&gt;We train and evaluate our methods on COCO dataset 2017. &lt;br&gt; Please follow the instruction &lt;a href=&#34;https://gist.github.com/mkocabas/a6177fc00315403d31572e17700d7fd9&#34;&gt;here&lt;/a&gt; to download the COCO dataset 2017 &lt;br&gt; structure used in our code will be like : &lt;br&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$PATH_TO_DATASET/&#xA;├──── images&#xA;│    ├──── train2017&#xA;│             |──── 118287 images (.jpg)&#xA;│&#xA;│    ├──── test2017&#xA;│             |──── 40670 images (.jpg)&#xA;│&#xA;│    ├──── val2017&#xA;│             |──── 5000 images (.jpg)&#xA;│&#xA;├──── annotations&#xA;│    ├──── captions_train2017.json&#xA;│&#xA;│    ├──── captions_val2017.json&#xA;│&#xA;│    ├──── instances_train2017.json&#xA;|&#xA;│    ├──── instances_val2017.json&#xA;│&#xA;│    ├──── person_keypoints_train2017.json&#xA;│&#xA;│    ├──── person_keypoints_val2017.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After downloading the data, please navigate to our repository. &lt;br&gt; Then, modify the variable &#34;coco_path&#34; in line 8 in &lt;a href=&#34;https://raw.githubusercontent.com/SinicaGroup/Class-agnostic-Few-shot-Object-Counting/main/data/crop.py&#34;&gt;crop.py&lt;/a&gt; to your COCO dataset path.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd CODE_DIRECTORY&#xA;python data/crop.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After performing the above instructions, the structure of your coco dataset will be like : &lt;br&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$PATH_TO_DATASET/&#xA;├──── images&#xA;│    ├──── train2017&#xA;│             |──── 118287 images (.jpg)&#xA;│&#xA;│    ├──── test2017&#xA;│             |──── 40670 images (.jpg)&#xA;│&#xA;│    ├──── val2017&#xA;│             |──── 5000 images (.jpg)&#xA;│&#xA;│    ├──── crop&#xA;│             |──── 80 directories which store all categories 500 images in coco dataset 2017 (for references images)&#xA;│&#xA;├──── annotations&#xA;│    ├──── captions_train2017.json&#xA;│&#xA;│    ├──── captions_val2017.json&#xA;│&#xA;│    ├──── crop.json&#xA;│&#xA;│    ├──── instances_train2017.json&#xA;|&#xA;│    ├──── instances_val2017.json&#xA;│&#xA;│    ├──── person_keypoints_train2017.json&#xA;│&#xA;│    ├──── person_keypoints_val2017.json&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Training&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please go to &lt;a href=&#34;https://raw.githubusercontent.com/SinicaGroup/Class-agnostic-Few-shot-Object-Counting/main/configs/config.yaml&#34;&gt;config.yaml&lt;/a&gt; to change the configs under &#34;train&#34;. &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;To setup the training process, model configurations such as &lt;strong&gt;epochs&lt;/strong&gt;, &lt;strong&gt;batch_size&lt;/strong&gt;, and &lt;strong&gt;result_path&lt;/strong&gt; can be tuned, all of which are stored in config.yaml&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Modify run.sh to setup the training process &lt;code&gt;python main.py --config=config.yaml --doc=doc_name --train&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;doc_name can be any string you want.&lt;/li&gt; &#xA; &lt;li&gt;Execute the bash script through the below command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd CODE_DIRECTORY&#xA;bash run.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;After running the code, you will find your training logs under CODE_DIRECTORY/exp/logs/doc_name&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please go to &lt;a href=&#34;https://raw.githubusercontent.com/SinicaGroup/Class-agnostic-Few-shot-Object-Counting/main/configs/config.yaml&#34;&gt;config.yaml&lt;/a&gt; to change the configs under &#34;eval&#34;. &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;To setup the testing process, the configurations such as &lt;strong&gt;checkpoint&lt;/strong&gt;, &lt;strong&gt;sample&lt;/strong&gt;, and &lt;strong&gt;image_folder&lt;/strong&gt; can be tuned, all of which are stored in config.yaml. &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Modify run.sh to setup the testing process &lt;code&gt;python main.py --config=config.yaml --doc=doc_name --test&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;doc_name can be any string you want.&lt;/li&gt; &#xA; &lt;li&gt;Execute the bash script through the below command&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd CODE_DIRECTORY&#xA;bash run.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;After running the code, you will find your testing logs under &#34;CODE_DIRECTORY/exp/logs/doc_name&#34;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Implementation Details&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The runner architecture is from &lt;a href=&#34;https://github.com/ermongroup/ncsnv2&#34;&gt;NCSNv2&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;We crop 500 reference images for each categories.&lt;/li&gt; &#xA; &lt;li&gt;For query image, instead of random crop, we resize it with aspect ratio and padding to 256 x 256.&lt;/li&gt; &#xA; &lt;li&gt;The default setting in our code is 5-shot learning, where each query image has 5 reference images to learn.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Great thanks to the contributive discussions on the reproduction details with &lt;br&gt; the author of &lt;a href=&#34;https://openaccess.thecvf.com/content/WACV2021/html/Yang_Class-Agnostic_Few-Shot_Object_Counting_WACV_2021_paper.html&#34;&gt;Class-Agnostic Few-Shot Object Counting&lt;/a&gt;, Shuo-Diao Yang, &lt;br&gt; the author of &lt;a href=&#34;https://arxiv.org/abs/2203.08354&#34;&gt;Bilinear Matching Network&lt;/a&gt;, Min Shi, &lt;br&gt; and the author of &lt;a href=&#34;https://arxiv.org/abs/2205.10203&#34;&gt;Learning to Count Anything: Reference-less Class-agnostic Counting with Weak Supervision&lt;/a&gt;, Michael Hobley. &lt;br&gt; Their feedbacks have been really helpful, allowing us to replicate the model successfully.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>kovidgoyal/kitty</title>
    <updated>2022-08-18T01:32:06Z</updated>
    <id>tag:github.com,2022-08-18:/kovidgoyal/kitty</id>
    <link href="https://github.com/kovidgoyal/kitty" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross-platform, fast, feature-rich, GPU based terminal&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;kitty - the fast, feature-rich, cross-platform, GPU based terminal&lt;/h1&gt; &#xA;&lt;div class=&#34;paragraph&#34;&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://sw.kovidgoyal.net/kitty/&#34;&gt;the kitty website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;paragraph&#34;&gt; &#xA; &lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://github.com/kovidgoyal/kitty/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/kovidgoyal/kitty/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;paragraph&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://sw.kovidgoyal.net/kitty/faq/&#34;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;paragraph&#34;&gt; &#xA; &lt;p&gt;To ask other questions about kitty usage, use either the &lt;a href=&#34;https://github.com/kovidgoyal/kitty/discussions/&#34;&gt;discussions on GitHub&lt;/a&gt; or the &lt;a href=&#34;https://www.reddit.com/r/KittyTerminal&#34;&gt;Reddit community&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;paragraph&#34;&gt; &#xA; &lt;p&gt;Packaging status in various repositories:&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;paragraph&#34;&gt; &#xA; &lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://repology.org/project/kitty/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/kitty.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
</feed>