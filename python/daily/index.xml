<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-23T01:44:35Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rxrw/daily_morning</title>
    <updated>2022-08-23T01:44:35Z</updated>
    <id>tag:github.com,2022-08-23:/rxrw/daily_morning</id>
    <link href="https://github.com/rxrw/daily_morning" rel="alternate"></link>
    <summary type="html">&lt;p&gt;给别人家的女朋友发早安&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;从任何平台过来的朋友们请先阅读此内容哦！&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;每日早安推送给别人家的女朋友&lt;/h1&gt; &#xA;&lt;h2&gt;自我推广&lt;/h2&gt; &#xA;&lt;p&gt;本人在维护一套全新的闭源平台，不过要收费。可以让大家完善地自定义各种字段，模板内容。如果大家愿意，可以使用二维码进微信群详聊。但请注意，此群只解答收费项目相关的内容，与本项目相关的内容请勿进群。&lt;/p&gt; &#xA;&lt;p&gt;本项目没有停止更新哦～这里有&lt;a href=&#34;https://raw.githubusercontent.com/rxrw/daily_morning/master/UPGRADE.md&#34;&gt;更新说明&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;新项目链接：&lt;a href=&#34;https://dm.iuv520.com&#34;&gt;https://dm.iuv520.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;版权声明&lt;/h2&gt; &#xA;&lt;p&gt;更新：2022.08.22&lt;/p&gt; &#xA;&lt;p&gt;今天私聊了分享我这个项目的最受欢迎的网友，没有任何责怪的语气，但是她并没有回复我，因此：&lt;/p&gt; &#xA;&lt;p&gt;当初做这个项目的时候，其实没有想到会被这么多人喜欢，因此没有加任何的开源协议、版权声明、代码加密等措施。说实在的，这个功能很简单，但是有朋友告诉我很多人都在用我的代码和教程去自己发抖音集赞，甚至还有人进行盈利骗钱的操作。让我比较心烦的是，大家给别人的视频点赞，然后跑过来问我怎么用，我？？？&lt;/p&gt; &#xA;&lt;p&gt;因此，这个项目我会继续更新（本来都不打算更新了），首先更新协议如下：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;根据 Github &lt;a href=&#34;https://docs.github.com/cn/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/licensing-a-repository#choosing-the-right-license&#34;&gt;默认版权协议&lt;/a&gt;，在未发布开源许可协议时，遵循默认版权法，即任何人无法修改、复制本项目。但由于本项目使用说明解读，因此在 2022年8月22日23:00 之前对本项目的复制、修改不做严格限制。（收费除外）&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;增加 &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.txt&#34;&gt;GPLv3&lt;/a&gt; 协议：凡使用本项目，其代码必须公开；如由此项目衍生的收费服务，必须提前告知终端用户此项目是可以免费获得及收费的理由；在本项目基础上 Fork、修改后的代码，必须采用 GPLv3 协议。此协议受全世界版权法律保护，本人保留对一切违反本协议行为诉诸法律的权力。&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;版权声明：凡是在世界范围内各平台（包括但不限于抖音、微博、小红书、Github、Gitee、微信公众平台、微信小程序、Youtube、Instagram、Twitter 等）使用本项目（包括但不限于展示、发布使用说明等）时，必须在明显的位置（内容、评论区等）表明出处（在已知账号的情况下，提及原作者；未知账号的情况下，展示本项目的地址）。&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;文件保护声明：如果复制、修改本项目，衍生后的项目可以添加本文件的内容，但禁止删除本文件中的任何内容。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;其次，我会偶尔增加新功能。&lt;/p&gt; &#xA;&lt;h2&gt;自我介绍&lt;/h2&gt; &#xA;&lt;p&gt;首发在小红书，但是有大家说字看不清，因此在这里搞一篇使用说明。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;我一脸懵逼地在小红书新建的群里听说有网友在抖音帮推我这个项目..&lt;/p&gt; &#xA; &lt;p&gt;在此表示十分感谢，因为我懒得做视频。。当时也是一时兴起，所以就只发了小红书。。&lt;/p&gt; &#xA; &lt;p&gt;大家喜欢我的项目我真的十分感谢，不过有朋友说找不到我本人。对于涨粉丝这件事情我还是很感兴趣的。。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;我的小红书昵称==抖音昵称==微博账号==一切社交平台==“纠结当道”&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;并且都是柯南的头像，请认准 ID，谨防假冒。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9566402/185802023-1f28c90a-40e7-446e-8dad-420c83f83e38.jpeg&#34; alt=&#34;WechatIMG1&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/9566402/185802026-ef7c1b99-66a8-4535-a6a4-804677657667.jpeg&#34; alt=&#34;WechatIMG2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;使用说明&lt;/h2&gt; &#xA;&lt;p&gt;在我刚想构思这个教程怎么让不懂编程的朋友很快入门的时候，我考虑到：避免服务器搭建，避免定时任务，避免接触代码。在经历过各种思考后，觉得可以用 Github Actions 来白嫖。。&lt;/p&gt; &#xA;&lt;p&gt;效果如图。当然，文字是可以修改的。 &lt;img src=&#34;https://user-images.githubusercontent.com/9566402/183242263-c93517a2-5377-435d-8386-8d47252c9e07.jpg&#34; alt=&#34;5e72e89fd7ff692a0bfa62010517c0c&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;首先，按图搜索，测试号，进来之后微信扫码登录！ &lt;img src=&#34;https://user-images.githubusercontent.com/9566402/183242272-134e37e7-718d-42dd-9ed7-fca2810e94e6.png&#34; alt=&#34;cf7dbd4502df44765ed3506f55caea5&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;按图点击 Use this template，创建到自己的仓库下！ &lt;img src=&#34;https://user-images.githubusercontent.com/9566402/183242340-2ef26c63-1ca1-420e-abd4-8672c25d61c9.png&#34; alt=&#34;e6581c43572b00b12c1a82ca8d7178b&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;按下图，创建模板，设置变量，把微信公众平台上的各种字符串按说明创建到 GitHub -&amp;gt; Settings -&amp;gt; Secrets -&amp;gt; Actions 中。 &lt;img src=&#34;https://user-images.githubusercontent.com/9566402/183242301-fd6ab30e-bfe5-4245-b2a9-f690184db307.png&#34; alt=&#34;71bf9d11a876d23ef0f0728645a8ba0&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/9566402/183242295-4dcf06bb-2083-4883-8745-0af753ca805c.png&#34; alt=&#34;381e8ee4a7c5ec6b8c09719f2c7e486&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/9566402/183242320-18500adc-14e5-4522-a3ad-ae19cc4479bf.png&#34; alt=&#34;48c60750cec7adc546e0ad99e3082b3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;启用自己项目下的 Action！ &lt;img src=&#34;https://user-images.githubusercontent.com/9566402/183242334-9943c538-ba3d-4d01-8377-d040143b7560.png&#34; alt=&#34;30a5b1b2b06ba4a40a3d8ef01652409&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果运行出现错误，按以下方法可以看到错误，在这里 issue 提问也可以，在小红书群里问也可以 &lt;img src=&#34;https://user-images.githubusercontent.com/9566402/183242349-1aa5ada6-2ee7-4cf9-a542-4b2dad88b8fe.png&#34; alt=&#34;6b0da6f44e18c2bfd94910c377d13e6&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;启用后可以直接运行，看看女朋友的手机有没有收到推送吧！ 这个定时任务是每天早晨8点推送，如果会编程的同学可以自己自定义一些东西～&lt;/p&gt; &#xA;&lt;p&gt;图中的操作，除了各种英文字符串不一样，模板消息中的中文不一样，其他的应该都是一样的，不然程序跑不通的～&lt;/p&gt; &#xA;&lt;p&gt;Github 的右上角可以点击 star 给我点鼓励吧亲&lt;/p&gt; &#xA;&lt;p&gt;小红书上点点关注，点点赞，有什么好玩的东西可以at我，我来教你们做&lt;/p&gt; &#xA;&lt;p&gt;ps. 有一些注意事项在此补充&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;第一次登录微信公众平台测试号给的 app secret 是错误的，刷新一下页面即可&lt;/li&gt; &#xA; &lt;li&gt;生日的日期格式是：&lt;code&gt;05-20&lt;/code&gt;，纪念日的格式是 &lt;code&gt;2022-08-09&lt;/code&gt;，请注意区分。城市请写到地级市，比如：&lt;code&gt;北京&lt;/code&gt;，&lt;code&gt;广州&lt;/code&gt;，&lt;code&gt;承德&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;变量中粘贴的各种英文字符串不要有空格，不要有换行，除了模板之外都没有换行&lt;/li&gt; &#xA; &lt;li&gt;Github Actions 的定时任务，在 workflow 的定义是 &lt;code&gt;0 0 * * *&lt;/code&gt;，是 UTC 时间的零点，北京时间的八点。但是由于 Github 同一时间任务太多，因此会有延迟&lt;/li&gt; &#xA; &lt;li&gt;我会偶尔优化一下代码，emm 但现在我自己在做一个完整的平台项目，想让大家更加便捷地上手&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>crowsonkb/k-diffusion</title>
    <updated>2022-08-23T01:44:35Z</updated>
    <id>tag:github.com,2022-08-23:/crowsonkb/k-diffusion</id>
    <link href="https://github.com/crowsonkb/k-diffusion" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Karras et al. (2022) diffusion models for PyTorch&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;k-diffusion&lt;/h1&gt; &#xA;&lt;p&gt;An implementation of &lt;a href=&#34;https://arxiv.org/abs/2206.00364&#34;&gt;Elucidating the Design Space of Diffusion-Based Generative Models&lt;/a&gt; (Karras et al., 2022) for PyTorch. The patching method in &lt;a href=&#34;https://arxiv.org/abs/2207.04316&#34;&gt;Improving Diffusion Model Efficiency Through Patching&lt;/a&gt; is implemented as well.&lt;/p&gt; &#xA;&lt;h2&gt;Training:&lt;/h2&gt; &#xA;&lt;p&gt;To train models:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ./train.py --config CONFIG_FILE --name RUN_NAME&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For instance, to train a model on MNIST:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ./train.py --config configs/config_mnist.json --name RUN_NAME&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The configuration file allows you to specify the dataset type. Currently supported types are &lt;code&gt;&#34;imagefolder&#34;&lt;/code&gt; (a folder with one subfolder per image class, the classes are currently ignored), &lt;code&gt;&#34;cifar10&#34;&lt;/code&gt; (CIFAR-10), and &lt;code&gt;&#34;mnist&#34;&lt;/code&gt; (MNIST).&lt;/p&gt; &#xA;&lt;p&gt;Multi-GPU and multi-node training is supported with &lt;a href=&#34;https://huggingface.co/docs/accelerate/index&#34;&gt;Hugging Face Accelerate&lt;/a&gt;. You can configure Accelerate by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ accelerate config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;on all nodes, then running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ accelerate launch train.py --config CONFIG_FILE --name RUN_NAME&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;on all nodes.&lt;/p&gt; &#xA;&lt;h2&gt;Enhancements/additional features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;k-diffusion models support progressive growing.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;k-diffusion implements a sampler inspired by &lt;a href=&#34;https://arxiv.org/abs/2206.00927&#34;&gt;DPM-Solver&lt;/a&gt; and Karras et al. (2022) Algorithm 2 that produces higher quality samples at the same number of function evalutions as Karras Algorithm 2. It also implements a &lt;a href=&#34;https://en.wikipedia.org/wiki/Linear_multistep_method#Adams%E2%80%93Bashforth_methods&#34;&gt;linear multistep&lt;/a&gt; sampler (comparable to &lt;a href=&#34;https://arxiv.org/abs/2202.09778&#34;&gt;PLMS&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;k-diffusion supports &lt;a href=&#34;https://openai.com/blog/clip/&#34;&gt;CLIP&lt;/a&gt; guided sampling from unconditional diffusion models (see &lt;code&gt;sample_clip_guided.py&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;k-diffusion has wrappers for &lt;a href=&#34;https://github.com/crowsonkb/v-diffusion-pytorch&#34;&gt;v-diffusion-pytorch&lt;/a&gt;, &lt;a href=&#34;https://github.com/openai/guided-diffusion&#34;&gt;OpenAI diffusion&lt;/a&gt;, and &lt;a href=&#34;https://github.com/CompVis/latent-diffusion&#34;&gt;CompVis diffusion&lt;/a&gt; models allowing them to be used with its samplers and ODE/SDE.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;k-diffusion supports log likelihood calculation (not a variational lower bound) for native models and all wrapped models.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;To do:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Anything except unconditional image diffusion models&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Latent diffusion&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Dineshkarthik/telegram_media_downloader</title>
    <updated>2022-08-23T01:44:35Z</updated>
    <id>tag:github.com,2022-08-23:/Dineshkarthik/telegram_media_downloader</id>
    <link href="https://github.com/Dineshkarthik/telegram_media_downloader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Download media files from a telegram conversation/chat/channel up to 2GiB per file&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Telegram Media Downloader&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Dineshkarthik/telegram_media_downloader/actions&#34;&gt;&lt;img alt=&#34;Unittest&#34; src=&#34;https://github.com/Dineshkarthik/telegram_media_downloader/workflows/Unittest/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/Dineshkarthik/telegram_media_downloader&#34;&gt;&lt;img alt=&#34;Coverage Status&#34; src=&#34;https://codecov.io/gh/Dineshkarthik/telegram_media_downloader/branch/master/graph/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Dineshkarthik/telegram_media_downloader/raw/master/LICENSE&#34;&gt;&lt;img alt=&#34;License: MIT&#34; src=&#34;https://black.readthedocs.io/en/stable/_static/license.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/python/black&#34;&gt;&lt;img alt=&#34;Code style: black&#34; src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Dineshkarthik/telegram_media_downloader/discussions/categories/ideas&#34;&gt;Feature request&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&#34;https://github.com/Dineshkarthik/telegram_media_downloader/issues&#34;&gt;Report a bug&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; Support: &lt;a href=&#34;https://github.com/Dineshkarthik/telegram_media_downloader/discussions&#34;&gt;Discussions&lt;/a&gt; &lt;span&gt; &amp;amp; &lt;/span&gt; &lt;a href=&#34;https://t.me/tgmdnews&#34;&gt;Telegram Community&lt;/a&gt; &lt;/h3&gt; &#xA;&lt;h3&gt;Overview:&lt;/h3&gt; &#xA;&lt;p&gt;Download all media files from a conversation or a channel that you are a part of from telegram. A meta of last read/downloaded message is stored in the config file so that in such a way it won&#39;t download the same media file again.&lt;/p&gt; &#xA;&lt;h3&gt;Support:&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Category&lt;/th&gt; &#xA;   &lt;th&gt;Support&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Language&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Python 3.7 &lt;/code&gt; and above&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Download media types&lt;/td&gt; &#xA;   &lt;td&gt;audio, document, photo, video, video_note, voice&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;ToDo:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add support for multiple channels/chats.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;For *nix os distributions with &lt;code&gt;make&lt;/code&gt; availability&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ git clone https://github.com/Dineshkarthik/telegram_media_downloader.git&#xA;$ cd telegram_media_downloader&#xA;$ make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Windows which doesn&#39;t have &lt;code&gt;make&lt;/code&gt; inbuilt&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ git clone https://github.com/Dineshkarthik/telegram_media_downloader.git&#xA;$ cd telegram_media_downloader&#xA;$ pip3 install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;All the configurations are passed to the Telegram Media Downloader via &lt;code&gt;config.yaml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Getting your API Keys:&lt;/strong&gt; The very first step requires you to obtain a valid Telegram API key (API id/hash pair):&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://my.telegram.org/apps&#34;&gt;https://my.telegram.org/apps&lt;/a&gt; and log in with your Telegram Account.&lt;/li&gt; &#xA; &lt;li&gt;Fill out the form to register a new Telegram application.&lt;/li&gt; &#xA; &lt;li&gt;Done! The API key consists of two parts: &lt;strong&gt;api_id&lt;/strong&gt; and &lt;strong&gt;api_hash&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Getting chat id:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Using web telegram:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open &lt;a href=&#34;https://web.telegram.org/?legacy=1#/im&#34;&gt;https://web.telegram.org/?legacy=1#/im&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Now go to the chat/channel and you will see the URL as something like &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;https://web.telegram.org/?legacy=1#/im?p=u853521067_2449618633394&lt;/code&gt; here &lt;code&gt;853521067&lt;/code&gt; is the chat id.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;https://web.telegram.org/?legacy=1#/im?p=@somename&lt;/code&gt; here &lt;code&gt;somename&lt;/code&gt; is the chat id.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;https://web.telegram.org/?legacy=1#/im?p=s1301254321_6925449697188775560&lt;/code&gt; here take &lt;code&gt;1301254321&lt;/code&gt; and add &lt;code&gt;-100&lt;/code&gt; to the start of the id =&amp;gt; &lt;code&gt;-1001301254321&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;https://web.telegram.org/?legacy=1#/im?p=c1301254321_6925449697188775560&lt;/code&gt; here take &lt;code&gt;1301254321&lt;/code&gt; and add &lt;code&gt;-100&lt;/code&gt; to the start of the id =&amp;gt; &lt;code&gt;-1001301254321&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Using bot:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://t.me/username_to_id_bot&#34;&gt;@username_to_id_bot&lt;/a&gt; to get the chat_id of &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;almost any telegram user: send username to the bot or just forward their message to the bot&lt;/li&gt; &#xA;   &lt;li&gt;any chat: send chat username or copy and send its joinchat link to the bot&lt;/li&gt; &#xA;   &lt;li&gt;public or private channel: same as chats, just copy and send to the bot&lt;/li&gt; &#xA;   &lt;li&gt;id of any telegram bot&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;config.yaml&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;api_hash: your_api_hash&#xA;api_id: your_api_id&#xA;chat_id: telegram_chat_id&#xA;last_read_message_id: 0&#xA;ids_to_retry: []&#xA;media_types:&#xA;- audio&#xA;- document&#xA;- photo&#xA;- video&#xA;- voice&#xA;file_formats:&#xA;  audio:&#xA;  - all&#xA;  document:&#xA;  - pdf&#xA;  - epub&#xA;  video:&#xA;  - mp4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;api_hash - The api_hash you got from telegram apps&lt;/li&gt; &#xA; &lt;li&gt;api_id - The api_id you got from telegram apps&lt;/li&gt; &#xA; &lt;li&gt;chat_id - The id of the chat/channel you want to download media. Which you get from the above-mentioned steps.&lt;/li&gt; &#xA; &lt;li&gt;last_read_message_id - If it is the first time you are going to read the channel let it be &lt;code&gt;0&lt;/code&gt; or if you have already used this script to download media it will have some numbers which are auto-updated after the scripts successful execution. Don&#39;t change it.&lt;/li&gt; &#xA; &lt;li&gt;ids_to_retry - &lt;code&gt;Leave it as it is.&lt;/code&gt; This is used by the downloader script to keep track of all skipped downloads so that it can be downloaded during the next execution of the script.&lt;/li&gt; &#xA; &lt;li&gt;media_types - Type of media to download, you can update which type of media you want to download it can be one or any of the available types.&lt;/li&gt; &#xA; &lt;li&gt;file_formats - File types to download for supported media types which are &lt;code&gt;audio&lt;/code&gt;, &lt;code&gt;document&lt;/code&gt; and &lt;code&gt;video&lt;/code&gt;. Default format is &lt;code&gt;all&lt;/code&gt;, downloads all files.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Execution&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ python3 media_downloader.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All the downloaded media will be stored inside respective direcotry named in the same path as the python script.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Media type&lt;/th&gt; &#xA;   &lt;th&gt;Download directory&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;audio&lt;/td&gt; &#xA;   &lt;td&gt;path/to/project/audio&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;document&lt;/td&gt; &#xA;   &lt;td&gt;path/to/project/document&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;photo&lt;/td&gt; &#xA;   &lt;td&gt;path/to/project/photo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;video&lt;/td&gt; &#xA;   &lt;td&gt;path/to/project/video&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;voice&lt;/td&gt; &#xA;   &lt;td&gt;path/to/project/voice&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;voice_note&lt;/td&gt; &#xA;   &lt;td&gt;path/to/project/voice_note&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Proxy&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;socks4, socks5, http&lt;/code&gt; proxies are supported in this project currently. To use it, add the following to the bottom of your &lt;code&gt;config.yaml&lt;/code&gt; file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;proxy:&#xA;  scheme: socks5&#xA;  hostname: 11.22.33.44&#xA;  port: 1234&#xA;  username: your_username&#xA;  password: your_password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If your proxy doesn’t require authorization you can omit username and password. Then the proxy will automatically be enabled.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;h3&gt;Contributing Guidelines&lt;/h3&gt; &#xA;&lt;p&gt;Read through our &lt;a href=&#34;https://github.com/Dineshkarthik/telegram_media_downloader/raw/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; to learn about our submission process, coding rules and more.&lt;/p&gt; &#xA;&lt;h3&gt;Want to Help?&lt;/h3&gt; &#xA;&lt;p&gt;Want to file a bug, contribute some code, or improve documentation? Excellent! Read up on our guidelines for &lt;a href=&#34;https://github.com/Dineshkarthik/telegram_media_downloader/raw/master/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Code of Conduct&lt;/h3&gt; &#xA;&lt;p&gt;Help us keep Telegram Media Downloader open and inclusive. Please read and follow our &lt;a href=&#34;https://github.com/Dineshkarthik/telegram_media_downloader/raw/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>