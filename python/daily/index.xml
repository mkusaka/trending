<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-24T01:33:47Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ucbepic/docetl</title>
    <updated>2024-10-24T01:33:47Z</updated>
    <id>tag:github.com,2024-10-24:/ucbepic/docetl</id>
    <link href="https://github.com/ucbepic/docetl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A system for agentic LLM-powered data processing and ETL&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DocETL: Powering Complex Document Processing Pipelines&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docetl.org&#34;&gt;Website (Includes Demo)&lt;/a&gt; | &lt;a href=&#34;https://ucbepic.github.io/docetl&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://discord.gg/fHp7B2X3xx&#34;&gt;Discord&lt;/a&gt; | &lt;a href=&#34;https://arxiv.org/abs/2410.12189&#34;&gt;Paper&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ucbepic/docetl/main/docs/assets/readmefig.png&#34; alt=&#34;DocETL Figure&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;DocETL is a tool for creating and executing data processing pipelines, especially suited for complex document processing tasks. It offers a low-code, declarative YAML interface to define LLM-powered operations on complex data.&lt;/p&gt; &#xA;&lt;h2&gt;When to Use DocETL&lt;/h2&gt; &#xA;&lt;p&gt;DocETL is the ideal choice when you&#39;re looking to maximize correctness and output quality for complex tasks over a collection of documents or unstructured datasets. You should consider using DocETL if:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You want to perform semantic processing on a collection of data&lt;/li&gt; &#xA; &lt;li&gt;You have complex tasks that you want to represent via map-reduce (e.g., map over your documents, then group by the result of your map call &amp;amp; reduce)&lt;/li&gt; &#xA; &lt;li&gt;You&#39;re unsure how to best express your task to maximize LLM accuracy&lt;/li&gt; &#xA; &lt;li&gt;You&#39;re working with long documents that don&#39;t fit into a single prompt or are too lengthy for effective LLM reasoning&lt;/li&gt; &#xA; &lt;li&gt;You have validation criteria and want tasks to automatically retry when the validation fails&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cool Things People Are Doing with DocETL&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/redhog/docetl-conversation&#34;&gt;Conversation Generator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/redhog/docetl-speaker&#34;&gt;Text-to-speech&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rajib76/docetl_examples&#34;&gt;YouTube Transcript Topic Extraction&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;See the documentation for installing from PyPI.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Before installing DocETL, ensure you have Python 3.10 or later installed on your system. You can check your Python version by running:&lt;/p&gt; &#xA;&lt;p&gt;python --version&lt;/p&gt; &#xA;&lt;h3&gt;Installation Steps (from Source)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the DocETL repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/ucbepic/docetl.git&#xA;cd docetl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install Poetry (if not already installed):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install poetry&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Install the project dependencies:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Set up your OpenAI API key:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Create a .env file in the project root and add your OpenAI API key:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;OPENAI_API_KEY=your_api_key_here&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can set the OPENAI_API_KEY environment variable in your shell.&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Run the basic test suite to ensure everything is working (this costs less than $0.01 with OpenAI):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make tests-basic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it! You&#39;ve successfully installed DocETL and are ready to start processing documents.&lt;/p&gt; &#xA;&lt;p&gt;For more detailed information on usage and configuration, please refer to our &lt;a href=&#34;https://ucbepic.github.io/docetl&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>