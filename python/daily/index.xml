<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-05T01:32:17Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>heartexlabs/label-studio</title>
    <updated>2022-08-05T01:32:17Z</updated>
    <id>tag:github.com,2022-08-05:/heartexlabs/label-studio</id>
    <link href="https://github.com/heartexlabs/label-studio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Label Studio is a multi-type data labeling and annotation tool with standardized output format&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/ls_github_header.png&#34;&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/heartexlabs/label-studio?logo=heartex&#34; alt=&#34;GitHub&#34;&gt; &lt;img src=&#34;https://github.com/heartexlabs/label-studio/workflows/label-studio:build/badge.svg?sanitize=true&#34; alt=&#34;label-studio:build&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/heartexlabs/label-studio?include_prereleases&#34; alt=&#34;GitHub release&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://labelstud.io/&#34;&gt;Website&lt;/a&gt; • &lt;a href=&#34;https://labelstud.io/guide/&#34;&gt;Docs&lt;/a&gt; • &lt;a href=&#34;https://twitter.com/labelstudiohq&#34;&gt;Twitter&lt;/a&gt; • &lt;a href=&#34;https://slack.labelstudio.heartex.com/?source=github-1&#34;&gt;Join Slack Community &lt;img src=&#34;https://app.heartex.ai/docs/images/slack-mini.png&#34; width=&#34;18px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Label Studio?&lt;/h2&gt; &#xA;&lt;!-- &lt;a href=&#34;https://labelstud.io/blog/release-130.html&#34;&gt;&lt;img src=&#34;https://github.com/heartexlabs/label-studio/raw/master/docs/themes/htx/source/images/release-130/LS-Hits-v1.3.png&#34; align=&#34;right&#34; /&gt;&lt;/a&gt; --&gt; &#xA;&lt;p&gt;Label Studio is an open source data labeling tool. It lets you label data types like audio, text, images, videos, and time series with a simple and straightforward UI and export to various model formats. It can be used to prepare raw data or improve existing training data to get more accurate ML models.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#try-out-label-studio&#34;&gt;Try out Label Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#what-you-get-from-label-studio&#34;&gt;What you get from Label Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#included-templates-for-labeling-data-in-label-studio&#34;&gt;Included templates for labeling data in Label Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#set-up-machine-learning-models-with-Label-Studio&#34;&gt;Set up machine learning models with Label Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#integrate-label-studio-with-your-existing-tools&#34;&gt;Integrate Label Studio with your existing tools&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/annotation_examples.gif&#34; alt=&#34;Gif of Label Studio annotating different types of data&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Have a custom dataset? You can customize Label Studio to fit your needs. Read an &lt;a href=&#34;https://towardsdatascience.com/introducing-label-studio-a-swiss-army-knife-of-data-labeling-140c1be92881&#34;&gt;introductory blog post&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;h2&gt;Try out Label Studio&lt;/h2&gt; &#xA;&lt;p&gt;Install Label Studio locally, or deploy it in a cloud instance. Also you can try &lt;a href=&#34;https://app.heartex.com&#34;&gt;Label Studio Teams&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#install-locally-with-docker&#34;&gt;Install locally with Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#run-with-docker-compose&#34;&gt;Run with Docker Compose (Label Studio + Nginx + PostgreSQL)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#install-locally-with-pip&#34;&gt;Install locally with pip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#install-locally-with-anaconda&#34;&gt;Install locally with Anaconda&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#install-for-local-development&#34;&gt;Install for local development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/#deploy-in-a-cloud-instance&#34;&gt;Deploy in a cloud instance&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Install locally with Docker&lt;/h3&gt; &#xA;&lt;p&gt;Official Label Studio docker image is &lt;a href=&#34;https://hub.docker.com/r/heartexlabs/label-studio&#34;&gt;here&lt;/a&gt; and it can be downloaded with &lt;code&gt;docker pull&lt;/code&gt;. Run Label Studio in a Docker container and access it at &lt;code&gt;http://localhost:8080&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull heartexlabs/label-studio:latest&#xA;docker run -it -p 8080:8080 -v `pwd`/mydata:/label-studio/data heartexlabs/label-studio:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find all the generated assets, including SQLite3 database storage &lt;code&gt;label_studio.sqlite3&lt;/code&gt; and uploaded files, in the &lt;code&gt;./mydata&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h4&gt;Override default Docker install&lt;/h4&gt; &#xA;&lt;p&gt;You can override the default launch command by appending the new arguments:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it -p 8080:8080 -v `pwd`/mydata:/label-studio/data heartexlabs/label-studio:latest label-studio --log-level DEBUG&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Build a local image with Docker&lt;/h4&gt; &#xA;&lt;p&gt;If you want to build a local image, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t heartexlabs/label-studio:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run with Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;Docker Compose script provides production-ready stack consisting of the following components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Label Studio&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nginx.com/&#34;&gt;Nginx&lt;/a&gt; - proxy web server used to load various static data, including uploaded audio, images, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; - production-ready database that replaces less performant SQLite3.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To start using the app from &lt;code&gt;http://localhost&lt;/code&gt; run this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install locally with pip&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Requires Python &amp;gt;=3.7 &amp;lt;=3.9&#xA;pip install label-studio&#xA;&#xA;# Start the server at http://localhost:8080&#xA;label-studio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install locally with Anaconda&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create --name label-studio&#xA;conda activate label-studio&#xA;pip install label-studio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install for local development&lt;/h3&gt; &#xA;&lt;p&gt;You can run the latest Label Studio version locally without installing the package with pip.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install all package dependencies&#xA;pip install -e .&#xA;# Run database migrations&#xA;python label_studio/manage.py migrate&#xA;# Start the server in development mode at http://localhost:8080&#xA;python label_studio/manage.py runserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deploy in a cloud instance&lt;/h3&gt; &#xA;&lt;p&gt;You can deploy Label Studio with one click in Heroku, Microsoft Azure, or Google Cloud Platform:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/heartexlabs/label-studio/tree/heroku-persistent-pg&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34; height=&#34;30px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Fheartexlabs%2Flabel-studio%2Fmaster%2Fazuredeploy.json&#34;&gt;&lt;img src=&#34;https://aka.ms/deploytoazurebutton&#34; height=&#34;30px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://deploy.cloud.run&#34;&gt;&lt;img src=&#34;https://deploy.cloud.run/button.svg?sanitize=true&#34; height=&#34;30px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Apply frontend changes&lt;/h4&gt; &#xA;&lt;p&gt;The frontend part of Label Studio app lies in the &lt;code&gt;frontend/&lt;/code&gt; folder and written in React JSX. In case you&#39;ve made some changes there, the following commands should be run before building / starting the instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd label_studio/frontend/&#xA;npm ci&#xA;npx webpack&#xA;cd ../..&#xA;python label_studio/manage.py collectstatic --no-input&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Troubleshoot installation&lt;/h3&gt; &#xA;&lt;p&gt;If you see any errors during installation, try to rerun the installation&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install --ignore-installed label-studio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Install dependencies on Windows&lt;/h4&gt; &#xA;&lt;p&gt;To run Label Studio on Windows, download and install the following wheel packages from &lt;a href=&#34;https://www.lfd.uci.edu/~gohlke/pythonlibs&#34;&gt;Gohlke builds&lt;/a&gt; to ensure you&#39;re using the correct version of Python:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml&#34;&gt;lxml&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Upgrade pip &#xA;pip install -U pip&#xA;&#xA;# If you&#39;re running Win64 with Python 3.8, install the packages downloaded from Gohlke:&#xA;pip install lxml‑4.5.0‑cp38‑cp38‑win_amd64.whl&#xA;&#xA;# Install label studio&#xA;pip install label-studio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Run test suite&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r deploy/requirements-test.txt&#xA;cd label_studio&#xA;&#xA;# postgres (assumes default postgres user,db,pass)&#xA;DJANGO_DB=default DJANGO_SETTINGS_MODULE=core.settings.label_studio python -m pytest -vv -n auto&#xA;&#xA;# sqlite3&#xA;DJANGO_DB=sqlite DJANGO_SETTINGS_MODULE=core.settings.label_studio python -m pytest -vv -n auto&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;What you get from Label Studio&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/labelstudio-ui.gif&#34; alt=&#34;Screenshot of Label Studio data manager grid view with images&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-user labeling&lt;/strong&gt; sign up and login, when you create an annotation it&#39;s tied to your account.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multiple projects&lt;/strong&gt; to work on all your datasets in one instance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Streamlined design&lt;/strong&gt; helps you focus on your task, not how to use the software.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configurable label formats&lt;/strong&gt; let you customize the visual interface to meet your specific labeling needs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Support for multiple data types&lt;/strong&gt; including images, audio, text, HTML, time-series, and video.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Import from files or from cloud storage&lt;/strong&gt; in Amazon AWS S3, Google Cloud Storage, or JSON, CSV, TSV, RAR, and ZIP archives.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Integration with machine learning models&lt;/strong&gt; so that you can visualize and compare predictions from different models and perform pre-labeling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Embed it in your data pipeline&lt;/strong&gt; REST API makes it easy to make it a part of your pipeline&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Included templates for labeling data in Label Studio&lt;/h2&gt; &#xA;&lt;p&gt;Label Studio includes a variety of templates to help you label your data, or you can create your own using specifically designed configuration language. The most common templates and use cases for labeling include the following cases:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/templates-categories.jpg&#34;&gt; &#xA;&lt;h2&gt;Set up machine learning models with Label Studio&lt;/h2&gt; &#xA;&lt;p&gt;Connect your favorite machine learning model using the Label Studio Machine Learning SDK. Follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start your own machine learning backend server. See &lt;a href=&#34;https://github.com/heartexlabs/label-studio-ml-backend&#34;&gt;more detailed instructions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Connect Label Studio to the server on the model page found in project settings.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This lets you:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pre-label&lt;/strong&gt; your data using model predictions.&lt;/li&gt; &#xA; &lt;li&gt;Do &lt;strong&gt;online learning&lt;/strong&gt; and retrain your model while new annotations are being created.&lt;/li&gt; &#xA; &lt;li&gt;Do &lt;strong&gt;active learning&lt;/strong&gt; by labeling only the most complex examples in your data.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Integrate Label Studio with your existing tools&lt;/h2&gt; &#xA;&lt;p&gt;You can use Label Studio as an independent part of your machine learning workflow or integrate the frontend or backend into your existing tools.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use the &lt;a href=&#34;https://github.com/heartexlabs/label-studio-frontend&#34;&gt;Label Studio Frontend&lt;/a&gt; as a separate React library. See more in the &lt;a href=&#34;https://labelstud.io/guide/frontend.html&#34;&gt;Frontend Library documentation&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Ecosystem&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;label-studio&lt;/td&gt; &#xA;   &lt;td&gt;Server, distributed as a pip package&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/heartexlabs/label-studio-frontend&#34;&gt;label-studio-frontend&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;React and JavaScript frontend and can run standalone in a web browser or be embedded into your application.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/heartexlabs/dm2&#34;&gt;data-manager&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;React and JavaScript frontend for managing data. Includes the Label Studio Frontend. Relies on the label-studio server or a custom backend with the expected API methods.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/heartexlabs/label-studio-converter&#34;&gt;label-studio-converter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Encode labels in the format of your favorite machine learning library&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/heartexlabs/label-studio-transformers&#34;&gt;label-studio-transformers&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Transformers library connected and configured for use with Label Studio&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Want to use &lt;strong&gt;The Coolest Feature X&lt;/strong&gt; but Label Studio doesn&#39;t support it? Check out &lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/roadmap.md&#34;&gt;our public roadmap&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;@misc{Label Studio,&#xA;  title={{Label Studio}: Data labeling software},&#xA;  url={https://github.com/heartexlabs/label-studio},&#xA;  note={Open source software available from https://github.com/heartexlabs/label-studio},&#xA;  author={&#xA;    Maxim Tkachenko and&#xA;    Mikhail Malyuk and&#xA;    Andrey Holmanyuk and&#xA;    Nikolai Liubimov},&#xA;  year={2020-2022},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/heartexlabs/label-studio/develop/LICENSE&#34;&gt;Apache 2.0 LICENSE&lt;/a&gt; © &lt;a href=&#34;https://www.heartex.ai/&#34;&gt;Heartex&lt;/a&gt;. 2020-2021&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/heartexlabs/label-studio/raw/master/images/opossum_looking.png?raw=true&#34; title=&#34;Hey everyone!&#34; height=&#34;140&#34; width=&#34;140&#34;&gt;</summary>
  </entry>
  <entry>
    <title>getsentry/sentry</title>
    <updated>2022-08-05T01:32:17Z</updated>
    <id>tag:github.com,2022-08-05:/getsentry/sentry</id>
    <link href="https://github.com/getsentry/sentry" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sentry is cross-platform application monitoring, with a focus on error reporting.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://sentry.io/?utm_source=github&amp;amp;utm_medium=logo&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://sentry-brand.storage.googleapis.com/sentry-wordmark-dark-280x84.png&#34; alt=&#34;Sentry&#34; width=&#34;280&#34; height=&#34;84&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Users and logs provide clues. Sentry provides answers. &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What&#39;s Sentry?&lt;/h1&gt; &#xA;&lt;p&gt;Sentry is a developer-first error tracking and performance monitoring platform that helps developers see what actually matters, solve quicker, and learn continuously about their applications.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/getsentry/sentry/raw/master/.github/screenshots/projects.png&#34; width=&#34;270&#34;&gt; &lt;img src=&#34;https://github.com/getsentry/sentry/raw/master/.github/screenshots/issue-details.png&#34; width=&#34;270&#34;&gt; &lt;img src=&#34;https://github.com/getsentry/sentry/raw/master/.github/screenshots/transaction-summary.png&#34; width=&#34;270&#34;&gt; &lt;img src=&#34;https://github.com/getsentry/sentry/raw/master/.github/screenshots/releases.png&#34; width=&#34;270&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Official Sentry SDKs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-javascript&#34;&gt;JavaScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-react-native&#34;&gt;React-Native&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-ruby&#34;&gt;Ruby&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-php&#34;&gt;PHP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-go&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-rust&#34;&gt;Rust&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-java&#34;&gt;Java/Kotlin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-cocoa&#34;&gt;Objective-C/Swift&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-dotnet&#34;&gt;C#/F#&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-native&#34;&gt;C/C++&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-dart&#34;&gt;Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/perl-raven&#34;&gt;Perl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-clj/&#34;&gt;Clojure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-elixir&#34;&gt;Elixir&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-unity&#34;&gt;Unity&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-laravel&#34;&gt;Laravel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-electron/&#34;&gt;Electron&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Resources&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.sentry.io/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.sentry.io/&#34;&gt;Community&lt;/a&gt; (Bugs, feature requests, general questions)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/PXa5Apfe7K&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.sentry.io/internal/contributing/&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry/issues&#34;&gt;Bug Tracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getsentry/sentry&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.transifex.com/getsentry/sentry/&#34;&gt;Transifex&lt;/a&gt; (Translate Sentry!)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>samuelcolvin/pydantic</title>
    <updated>2022-08-05T01:32:17Z</updated>
    <id>tag:github.com,2022-08-05:/samuelcolvin/pydantic</id>
    <link href="https://github.com/samuelcolvin/pydantic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Data parsing and validation using Python type hints&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pydantic&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/samuelcolvin/pydantic/actions?query=event%3Apush+branch%3Amaster+workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/samuelcolvin/pydantic/workflows/CI/badge.svg?event=push&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coverage-badge.samuelcolvin.workers.dev/redirect/samuelcolvin/pydantic&#34;&gt;&lt;img src=&#34;https://coverage-badge.samuelcolvin.workers.dev/samuelcolvin/pydantic.svg?v=1&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/pydantic&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/pydantic.svg?sanitize=true&#34; alt=&#34;pypi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://anaconda.org/conda-forge/pydantic&#34;&gt;&lt;img src=&#34;https://img.shields.io/conda/v/conda-forge/pydantic.svg?sanitize=true&#34; alt=&#34;CondaForge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pepy.tech/project/pydantic&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/pydantic/month&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/samuelcolvin/pydantic&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/pydantic.svg?sanitize=true&#34; alt=&#34;versions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/samuelcolvin/pydantic/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/samuelcolvin/pydantic.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Data validation and settings management using Python type hints.&lt;/p&gt; &#xA;&lt;p&gt;Fast and extensible, &lt;em&gt;pydantic&lt;/em&gt; plays nicely with your linters/IDE/brain. Define how data should be in pure, canonical Python 3.7+; validate it with &lt;em&gt;pydantic&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://pydantic-docs.helpmanual.io/&#34;&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install using &lt;code&gt;pip install -U pydantic&lt;/code&gt; or &lt;code&gt;conda install pydantic -c conda-forge&lt;/code&gt;. For more installation options to make &lt;em&gt;pydantic&lt;/em&gt; even faster, see the &lt;a href=&#34;https://pydantic-docs.helpmanual.io/install/&#34;&gt;Install&lt;/a&gt; section in the documentation.&lt;/p&gt; &#xA;&lt;h2&gt;A Simple Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;from datetime import datetime&#xA;from typing import List, Optional&#xA;from pydantic import BaseModel&#xA;&#xA;class User(BaseModel):&#xA;    id: int&#xA;    name = &#39;John Doe&#39;&#xA;    signup_ts: Optional[datetime] = None&#xA;    friends: List[int] = []&#xA;&#xA;external_data = {&#39;id&#39;: &#39;123&#39;, &#39;signup_ts&#39;: &#39;2017-06-01 12:22&#39;, &#39;friends&#39;: [1, &#39;2&#39;, b&#39;3&#39;]}&#xA;user = User(**external_data)&#xA;print(user)&#xA;#&amp;gt; User id=123 name=&#39;John Doe&#39; signup_ts=datetime.datetime(2017, 6, 1, 12, 22) friends=[1, 2, 3]&#xA;print(user.id)&#xA;#&amp;gt; 123&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;For guidance on setting up a development environment and how to make a contribution to &lt;em&gt;pydantic&lt;/em&gt;, see &lt;a href=&#34;https://pydantic-docs.helpmanual.io/contributing/&#34;&gt;Contributing to Pydantic&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting a Security Vulnerability&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://github.com/samuelcolvin/pydantic/security/policy&#34;&gt;security policy&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>