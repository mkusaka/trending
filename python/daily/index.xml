<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-18T01:42:07Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pydantic/pydantic</title>
    <updated>2023-02-18T01:42:07Z</updated>
    <id>tag:github.com,2023-02-18:/pydantic/pydantic</id>
    <link href="https://github.com/pydantic/pydantic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Data validation using Python type hints&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pydantic&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pydantic/pydantic/actions?query=event%3Apush+branch%3Amain+workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/pydantic/pydantic/workflows/CI/badge.svg?event=push&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coverage-badge.samuelcolvin.workers.dev/redirect/pydantic/pydantic&#34;&gt;&lt;img src=&#34;https://coverage-badge.samuelcolvin.workers.dev/pydantic/pydantic.svg?sanitize=true&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/pydantic&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/pydantic.svg?sanitize=true&#34; alt=&#34;pypi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://anaconda.org/conda-forge/pydantic&#34;&gt;&lt;img src=&#34;https://img.shields.io/conda/v/conda-forge/pydantic.svg?sanitize=true&#34; alt=&#34;CondaForge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pepy.tech/project/pydantic&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/pydantic/month&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pydantic/pydantic&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/pydantic.svg?sanitize=true&#34; alt=&#34;versions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pydantic/pydantic/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pydantic/pydantic.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Data validation using Python type hints.&lt;/p&gt; &#xA;&lt;p&gt;Fast and extensible, &lt;em&gt;pydantic&lt;/em&gt; plays nicely with your linters/IDE/brain. Define how data should be in pure, canonical Python 3.7+; validate it with &lt;em&gt;pydantic&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Pydantic Company &lt;span&gt;üöÄ&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;ve started a company based on the principles that I believe have led to Pydantic&#39;s success. Learning more from the &lt;a href=&#34;https://pydantic.dev/announcement/&#34;&gt;Company Announcement&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Pydantic V1.10 vs. V2&lt;/h2&gt; &#xA;&lt;p&gt;This branch relates to development of pydantic V2 which is not yet ready for production use.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re a Pydantic user, you probably want either &lt;a href=&#34;https://docs.pydantic.dev/&#34;&gt;pydantic V1.10 Documentation&lt;/a&gt; or, &lt;a href=&#34;https://github.com/pydantic/pydantic/tree/1.10.X-fixes&#34;&gt;&lt;code&gt;1.10.X-fixes&lt;/code&gt; git branch&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.pydantic.dev/&#34;&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install using &lt;code&gt;pip install -U pydantic&lt;/code&gt; or &lt;code&gt;conda install pydantic -c conda-forge&lt;/code&gt;. For more installation options to make &lt;em&gt;pydantic&lt;/em&gt; even faster, see the &lt;a href=&#34;https://docs.pydantic.dev/install/&#34;&gt;Install&lt;/a&gt; section in the documentation.&lt;/p&gt; &#xA;&lt;h2&gt;A Simple Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;from datetime import datetime&#xA;from typing import List, Optional&#xA;from pydantic import BaseModel&#xA;&#xA;class User(BaseModel):&#xA;    id: int&#xA;    name = &#39;John Doe&#39;&#xA;    signup_ts: Optional[datetime] = None&#xA;    friends: List[int] = []&#xA;&#xA;external_data = {&#39;id&#39;: &#39;123&#39;, &#39;signup_ts&#39;: &#39;2017-06-01 12:22&#39;, &#39;friends&#39;: [1, &#39;2&#39;, b&#39;3&#39;]}&#xA;user = User(**external_data)&#xA;print(user)&#xA;#&amp;gt; User id=123 name=&#39;John Doe&#39; signup_ts=datetime.datetime(2017, 6, 1, 12, 22) friends=[1, 2, 3]&#xA;print(user.id)&#xA;#&amp;gt; 123&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;For guidance on setting up a development environment and how to make a contribution to &lt;em&gt;pydantic&lt;/em&gt;, see &lt;a href=&#34;https://docs.pydantic.dev/contributing/&#34;&gt;Contributing to Pydantic&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting a Security Vulnerability&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://github.com/pydantic/pydantic/security/policy&#34;&gt;security policy&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lucidrains/lion-pytorch</title>
    <updated>2023-02-18T01:42:07Z</updated>
    <id>tag:github.com,2023-02-18:/lucidrains/lion-pytorch</id>
    <link href="https://github.com/lucidrains/lion-pytorch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ü¶Å Lion, new optimizer discovered by Google Brain using genetic algorithms that is purportedly better than Adam(w), in Pytorch&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lucidrains/lion-pytorch/main/lion.png&#34; width=&#34;500px&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Lion - Pytorch&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2302.06675&#34;&gt;Lion&lt;/a&gt;, Evo&lt;strong&gt;L&lt;/strong&gt;ved S&lt;strong&gt;i&lt;/strong&gt;gn M&lt;strong&gt;o&lt;/strong&gt;me&lt;strong&gt;n&lt;/strong&gt;tum, new optimizer discovered by Google Brain that is purportedly better than Adam(w), in Pytorch. This is nearly a straight copy from &lt;a href=&#34;https://github.com/google/automl/raw/master/lion/lion_pytorch.py&#34;&gt;here&lt;/a&gt;, with few minor modifications.&lt;/p&gt; &#xA;&lt;p&gt;It is so simple, we may as well get it accessible and used asap by everyone to train some great models, if it really works ü§û&lt;/p&gt; &#xA;&lt;p&gt;In regards to learning rate, the authors write in section 5 - &lt;code&gt;Based on our experience, a suitable learning rate for Lion is typically 10x smaller than that for AdamW, although sometimes a learning rate that is 3x smaller may perform slightly better.&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;At the end of section 1, they also said that a larger decoupled weight decay is needed. - &lt;code&gt;Users should be aware that the uniform update calculated using the sign function usually yields a larger norm compared to those generated by SGD and adaptive methods. Therefore, Lion requires a smaller learning rate lr, and a larger decoupled weight decay Œª to maintain the effective weight decay strength.&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Update: seems to work for my local enwik8 autoregressive language modeling&lt;/p&gt; &#xA;&lt;p&gt;Update 2: &lt;a href=&#34;https://api.wandb.ai/links/lucidrains/d4v6c8sl&#34;&gt;experiments&lt;/a&gt;, seems much worse than Adam if learning rate held constant&lt;/p&gt; &#xA;&lt;p&gt;Update 3: Dividing the learning rate by 3, seeing better early results than Adam. Maybe Adam has been dethroned, after nearly a decade.&lt;/p&gt; &#xA;&lt;p&gt;Update 4: using the 10x smaller learning rate rule of thumb from the paper resulted in the worst run. so I guess it still takes a bit of tuning&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pip install lion-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# toy model&#xA;&#xA;import torch&#xA;from torch import nn&#xA;&#xA;model = nn.Linear(10, 1)&#xA;&#xA;# import Lion and instantiate with parameters&#xA;&#xA;from lion_pytorch import Lion&#xA;&#xA;opt = Lion(model.parameters(), lr = 1e-4)&#xA;&#xA;# forward and backwards&#xA;&#xA;loss = model(torch.randn(10))&#xA;loss.backward()&#xA;&#xA;# optimizer step&#xA;&#xA;opt.step()&#xA;opt.zero_grad()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use a fused kernel for updating the parameters, first &lt;code&gt;pip install triton -U --pre&lt;/code&gt;, then&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;opt = Lion(&#xA;    model.parameters(),&#xA;    lr = 1e-4,&#xA;    use_triton = True # set this to True to use cuda kernel w/ Triton lang (Tillet et al)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Appreciation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stability.ai/&#34;&gt;Stability.ai&lt;/a&gt; for the generous sponsorship to work and open source cutting edge artificial intelligence research&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citations&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{https://doi.org/10.48550/arxiv.2302.06675,&#xA;    url     = {https://arxiv.org/abs/2302.06675},&#xA;    author  = {Chen, Xiangning and Liang, Chen and Huang, Da and Real, Esteban and Wang, Kaiyuan and Liu, Yao and Pham, Hieu and Dong, Xuanyi and Luong, Thang and Hsieh, Cho-Jui and Lu, Yifeng and Le, Quoc V.},&#xA;    title   = {Symbolic Discovery of Optimization Algorithms},&#xA;    publisher = {arXiv},&#xA;    year = {2023}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{Tillet2019TritonAI,&#xA;    title   = {Triton: an intermediate language and compiler for tiled neural network computations},&#xA;    author  = {Philippe Tillet and H. Kung and D. Cox},&#xA;    journal = {Proceedings of the 3rd ACM SIGPLAN International Workshop on Machine Learning and Programming Languages},&#xA;    year    = {2019}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>encode/django-rest-framework</title>
    <updated>2023-02-18T01:42:07Z</updated>
    <id>tag:github.com,2023-02-18:/encode/django-rest-framework</id>
    <link href="https://github.com/encode/django-rest-framework" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Web APIs for Django. üé∏&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://www.django-rest-framework.org/&#34;&gt;Django REST framework&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/encode/django-rest-framework/actions/workflows/main.yml&#34;&gt;&lt;img src=&#34;https://github.com/encode/django-rest-framework/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;build-status-image&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/encode/django-rest-framework?branch=master&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/encode/django-rest-framework/master.svg?sanitize=true&#34; alt=&#34;coverage-status-image&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/djangorestframework/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/djangorestframework.svg?sanitize=true&#34; alt=&#34;pypi-version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Awesome web-browsable Web APIs.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Full documentation for the project is available at &lt;a href=&#34;https://www.django-rest-framework.org/&#34;&gt;https://www.django-rest-framework.org/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Funding&lt;/h1&gt; &#xA;&lt;p&gt;REST framework is a &lt;em&gt;collaboratively funded project&lt;/em&gt;. If you use REST framework commercially we strongly encourage you to invest in its continued development by &lt;a href=&#34;https://fund.django-rest-framework.org/topics/funding/&#34;&gt;signing up for a paid plan&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The initial aim is to provide a single full-time position on REST framework. &lt;em&gt;Every single sign-up makes a significant impact towards making that possible.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://getsentry.com/welcome/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/encode/django-rest-framework/master/docs/img/premium/sentry-readme.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://getstream.io/?utm_source=DjangoRESTFramework&amp;amp;utm_medium=Webpage_Logo_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=DjangoRESTFramework_Jan2022_HomePage&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/encode/django-rest-framework/master/docs/img/premium/stream-readme.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.spacinov.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/encode/django-rest-framework/master/docs/img/premium/spacinov-readme.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://retool.com/?utm_source=djangorest&amp;amp;utm_medium=sponsorship&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/encode/django-rest-framework/master/docs/img/premium/retool-readme.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bit.io/jobs?utm_source=DRF&amp;amp;utm_medium=sponsor&amp;amp;utm_campaign=DRF_sponsorship&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/encode/django-rest-framework/master/docs/img/premium/bitio-readme.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://posthog.com?utm_source=drf&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=open-source-sponsorship&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/encode/django-rest-framework/master/docs/img/premium/posthog-readme.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cryptapi.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/encode/django-rest-framework/master/docs/img/premium/cryptapi-readme.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.fezto.xyz/?utm_source=DjangoRESTFramework&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/encode/django-rest-framework/master/docs/img/premium/fezto-readme.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Many thanks to all our &lt;a href=&#34;https://fund.django-rest-framework.org/topics/funding/#our-sponsors&#34;&gt;wonderful sponsors&lt;/a&gt;, and in particular to our premium backers, &lt;a href=&#34;https://getsentry.com/welcome/&#34;&gt;Sentry&lt;/a&gt;, &lt;a href=&#34;https://getstream.io/?utm_source=DjangoRESTFramework&amp;amp;utm_medium=Webpage_Logo_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=DjangoRESTFramework_Jan2022_HomePage&#34;&gt;Stream&lt;/a&gt;, &lt;a href=&#34;https://www.spacinov.com/&#34;&gt;Spacinov&lt;/a&gt;, &lt;a href=&#34;https://retool.com/?utm_source=djangorest&amp;amp;utm_medium=sponsorship&#34;&gt;Retool&lt;/a&gt;, &lt;a href=&#34;https://bit.io/jobs?utm_source=DRF&amp;amp;utm_medium=sponsor&amp;amp;utm_campaign=DRF_sponsorship&#34;&gt;bit.io&lt;/a&gt;, &lt;a href=&#34;https://posthog.com?utm_source=drf&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=open-source-sponsorship&#34;&gt;PostHog&lt;/a&gt;, &lt;a href=&#34;https://cryptapi.io&#34;&gt;CryptAPI&lt;/a&gt;, and &lt;a href=&#34;https://www.fezto.xyz/?utm_source=DjangoRESTFramework&#34;&gt;FEZTO&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;p&gt;Django REST framework is a powerful and flexible toolkit for building Web APIs.&lt;/p&gt; &#xA;&lt;p&gt;Some reasons you might want to use REST framework:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://restframework.herokuapp.com/&#34;&gt;Web browsable API&lt;/a&gt; is a huge usability win for your developers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.django-rest-framework.org/api-guide/authentication/&#34;&gt;Authentication policies&lt;/a&gt; including optional packages for &lt;a href=&#34;https://www.django-rest-framework.org/api-guide/authentication/#django-rest-framework-oauth&#34;&gt;OAuth1a&lt;/a&gt; and &lt;a href=&#34;https://www.django-rest-framework.org/api-guide/authentication/#django-oauth-toolkit&#34;&gt;OAuth2&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.django-rest-framework.org/api-guide/serializers/&#34;&gt;Serialization&lt;/a&gt; that supports both &lt;a href=&#34;https://www.django-rest-framework.org/api-guide/serializers/#modelserializer&#34;&gt;ORM&lt;/a&gt; and &lt;a href=&#34;https://www.django-rest-framework.org/api-guide/serializers/#serializers&#34;&gt;non-ORM&lt;/a&gt; data sources.&lt;/li&gt; &#xA; &lt;li&gt;Customizable all the way down - just use &lt;a href=&#34;https://www.django-rest-framework.org/api-guide/views/#function-based-views&#34;&gt;regular function-based views&lt;/a&gt; if you don&#39;t need the &lt;a href=&#34;https://www.django-rest-framework.org/api-guide/generic-views/&#34;&gt;more&lt;/a&gt; &lt;a href=&#34;https://www.django-rest-framework.org/api-guide/viewsets/&#34;&gt;powerful&lt;/a&gt; &lt;a href=&#34;https://www.django-rest-framework.org/api-guide/routers/&#34;&gt;features&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.django-rest-framework.org/&#34;&gt;Extensive documentation&lt;/a&gt;, and &lt;a href=&#34;https://groups.google.com/forum/?fromgroups#!forum/django-rest-framework&#34;&gt;great community support&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There is a live example API for testing purposes, &lt;a href=&#34;https://restframework.herokuapp.com/&#34;&gt;available here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Below&lt;/strong&gt;: &lt;em&gt;Screenshot from the browsable API&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://www.django-rest-framework.org/img/quickstart.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.6+&lt;/li&gt; &#xA; &lt;li&gt;Django 4.1, 4.0, 3.2, 3.1, 3.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We &lt;strong&gt;highly recommend&lt;/strong&gt; and only officially support the latest patch release of each Python and Django series.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Install using &lt;code&gt;pip&lt;/code&gt;...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install djangorestframework&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add &lt;code&gt;&#39;rest_framework&#39;&lt;/code&gt; to your &lt;code&gt;INSTALLED_APPS&lt;/code&gt; setting.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;INSTALLED_APPS = [&#xA;    ...&#xA;    &#39;rest_framework&#39;,&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Example&lt;/h1&gt; &#xA;&lt;p&gt;Let&#39;s take a look at a quick example of using REST framework to build a simple model-backed API for accessing users and groups.&lt;/p&gt; &#xA;&lt;p&gt;Startup up a new project like so...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install django&#xA;pip install djangorestframework&#xA;django-admin startproject example .&#xA;./manage.py migrate&#xA;./manage.py createsuperuser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now edit the &lt;code&gt;example/urls.py&lt;/code&gt; module in your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from django.contrib.auth.models import User&#xA;from django.urls import include, path&#xA;from rest_framework import routers, serializers, viewsets&#xA;&#xA;&#xA;# Serializers define the API representation.&#xA;class UserSerializer(serializers.HyperlinkedModelSerializer):&#xA;    class Meta:&#xA;        model = User&#xA;        fields = [&#39;url&#39;, &#39;username&#39;, &#39;email&#39;, &#39;is_staff&#39;]&#xA;&#xA;&#xA;# ViewSets define the view behavior.&#xA;class UserViewSet(viewsets.ModelViewSet):&#xA;    queryset = User.objects.all()&#xA;    serializer_class = UserSerializer&#xA;&#xA;&#xA;# Routers provide a way of automatically determining the URL conf.&#xA;router = routers.DefaultRouter()&#xA;router.register(r&#39;users&#39;, UserViewSet)&#xA;&#xA;# Wire up our API using automatic URL routing.&#xA;# Additionally, we include login URLs for the browsable API.&#xA;urlpatterns = [&#xA;    path(&#39;&#39;, include(router.urls)),&#xA;    path(&#39;api-auth/&#39;, include(&#39;rest_framework.urls&#39;, namespace=&#39;rest_framework&#39;)),&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We&#39;d also like to configure a couple of settings for our API.&lt;/p&gt; &#xA;&lt;p&gt;Add the following to your &lt;code&gt;settings.py&lt;/code&gt; module:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;INSTALLED_APPS = [&#xA;    ...  # Make sure to include the default installed apps here.&#xA;    &#39;rest_framework&#39;,&#xA;]&#xA;&#xA;REST_FRAMEWORK = {&#xA;    # Use Django&#39;s standard `django.contrib.auth` permissions,&#xA;    # or allow read-only access for unauthenticated users.&#xA;    &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#xA;        &#39;rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly&#39;,&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it, we&#39;re done!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./manage.py runserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can now open the API in your browser at &lt;code&gt;http://127.0.0.1:8000/&lt;/code&gt;, and view your new &#39;users&#39; API. If you use the &lt;code&gt;Login&lt;/code&gt; control in the top right corner you&#39;ll also be able to add, create and delete users from the system.&lt;/p&gt; &#xA;&lt;p&gt;You can also interact with the API using command line tools such as &lt;a href=&#34;https://curl.haxx.se/&#34;&gt;&lt;code&gt;curl&lt;/code&gt;&lt;/a&gt;. For example, to list the users endpoint:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ curl -H &#39;Accept: application/json; indent=4&#39; -u admin:password http://127.0.0.1:8000/users/&#xA;[&#xA;    {&#xA;        &#34;url&#34;: &#34;http://127.0.0.1:8000/users/1/&#34;,&#xA;        &#34;username&#34;: &#34;admin&#34;,&#xA;        &#34;email&#34;: &#34;admin@example.com&#34;,&#xA;        &#34;is_staff&#34;: true,&#xA;    }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or to create a new user:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ curl -X POST -d username=new -d email=new@example.com -d is_staff=false -H &#39;Accept: application/json; indent=4&#39; -u admin:password http://127.0.0.1:8000/users/&#xA;{&#xA;    &#34;url&#34;: &#34;http://127.0.0.1:8000/users/2/&#34;,&#xA;    &#34;username&#34;: &#34;new&#34;,&#xA;    &#34;email&#34;: &#34;new@example.com&#34;,&#xA;    &#34;is_staff&#34;: false,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Documentation &amp;amp; Support&lt;/h1&gt; &#xA;&lt;p&gt;Full documentation for the project is available at &lt;a href=&#34;https://www.django-rest-framework.org/&#34;&gt;https://www.django-rest-framework.org/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For questions and support, use the &lt;a href=&#34;https://groups.google.com/forum/?fromgroups#!forum/django-rest-framework&#34;&gt;REST framework discussion group&lt;/a&gt;, or &lt;code&gt;#restframework&lt;/code&gt; on libera.chat IRC.&lt;/p&gt; &#xA;&lt;p&gt;You may also want to &lt;a href=&#34;https://twitter.com/starletdreaming&#34;&gt;follow the author on Twitter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Security&lt;/h1&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://github.com/encode/django-rest-framework/security/policy&#34;&gt;security policy&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>