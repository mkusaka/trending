<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-07T01:37:36Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>FujiwaraChoki/MoneyPrinter</title>
    <updated>2024-02-07T01:37:36Z</updated>
    <id>tag:github.com,2024-02-07:/FujiwaraChoki/MoneyPrinter</id>
    <link href="https://github.com/FujiwaraChoki/MoneyPrinter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automate Creation of YouTube Shorts using MoviepPy.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MoneyPrinter&lt;/h1&gt; &#xA;&lt;p&gt;Automate the creation of YouTube Shorts locally, simply by providing a video topic to talk about.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: Please make sure you look through existing/closed issues before opening your own. If it&#39;s just a question, please join our &lt;a href=&#34;https://dsc.gg/fuji-community&#34;&gt;discord&lt;/a&gt; and ask there.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/FujiwaraChoki/MoneyPrinter.git&#xA;cd MoneyPrinter&#xA;&#xA;# Install requirements&#xA;pip install -r requirements.txt&#xA;&#xA;# Copy .env.example and fill out values&#xA;cp .env.example .env&#xA;&#xA;# Run the backend server&#xA;cd Backend&#xA;python main.py&#xA;&#xA;# Run the frontend server&#xA;cd ../Frontend&#xA;python -m http.server 3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/FujiwaraChoki/MoneyPrinter/main/.env.example&#34;&gt;&lt;code&gt;.env.example&lt;/code&gt;&lt;/a&gt; for the required environment variables.&lt;/p&gt; &#xA;&lt;p&gt;If you need help, open &lt;a href=&#34;https://raw.githubusercontent.com/FujiwaraChoki/MoneyPrinter/main/ENV.md&#34;&gt;ENV.md&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Copy the &lt;code&gt;.env.example&lt;/code&gt; file to &lt;code&gt;.env&lt;/code&gt; and fill in the required values&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;http://localhost:3000&lt;/code&gt; in your browser&lt;/li&gt; &#xA; &lt;li&gt;Enter a topic to talk about&lt;/li&gt; &#xA; &lt;li&gt;Click on the &#34;Generate&#34; button&lt;/li&gt; &#xA; &lt;li&gt;Wait for the video to be generated&lt;/li&gt; &#xA; &lt;li&gt;The video&#39;s location is &lt;code&gt;temp/output.mp4&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Fonts&lt;/h2&gt; &#xA;&lt;p&gt;Add your fonts to the &lt;code&gt;fonts/&lt;/code&gt; folder, and load them by specifiying the font name on line &lt;code&gt;124&lt;/code&gt; in &lt;code&gt;Backend/video.py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/FujiwaraChoki/MoneyPrinter/main/LICENSE&#34;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; file for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>octaviovillegas/Curso_de_ingreso_PYTHON</title>
    <updated>2024-02-07T01:37:36Z</updated>
    <id>tag:github.com,2024-02-07:/octaviovillegas/Curso_de_ingreso_PYTHON</id>
    <link href="https://github.com/octaviovillegas/Curso_de_ingreso_PYTHON" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Curso de ingreso en PYTHON&lt;/p&gt;&lt;hr&gt;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/caidevOficial/Logos/raw/master/Instituciones/utn_logo_ingreso.gif?raw=true&#34; width=&#34;800&#34;&gt; &lt;/td&gt;&#xA;   &lt;td&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Curso de ingreso con Python&lt;/h2&gt; &#xA;&lt;h3&gt;Ejercitación y Trabajos Prácticos para rendir el examen de ingreso.&lt;/h3&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Carrera: Técnico superior en programación&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.sistemas-utnfra.com.ar/files/apunte-ingreso/Introduccion_Programacion_PY.pdf&#34;&gt;Sitio WEB de GitHub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;¿Cómo está organizado?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Cada concepto abordado tiene una serie de ejercicios a resolver.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Se debe realizar los ejercicios en el orden que se presentan.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Los ejercicios tienen un incremento de complejidad que acompaña la complejidad del tema abordado.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Es necesario comprender el tema anterior para continuar con los siguientes temas.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Cada tema tiene en los enunciados el objetivo que se deben cumplir.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;theader&gt; &#xA; &lt;h2 align=&#34;center&#34;&gt;Videos de las clases: 🎥&lt;/h2&gt; &#xA;&lt;/theader&gt;&#xA;&lt;table align=&#34;center&#34;&gt;  &#xA; &lt;tbody&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; [Preparación del entorno de desarrollo | Windows] &lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Link ➡️ &lt;a href=&#34;https://youtu.be/QMXxZZrOIVE&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Youtube Logo&#34; src=&#34;https://raw.githubusercontent.com/caidevOficial/Python_RepositoryCloner/main/Media/YT_Logo.png&#34; width=&#34;50/&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; Entrada y salida de datos &lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Link ➡️ &lt;a href=&#34;https://youtu.be/nqjMKuYC32g/&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Youtube Logo&#34; src=&#34;https://raw.githubusercontent.com/caidevOficial/Python_RepositoryCloner/main/Media/YT_Logo.png&#34; width=&#34;50/&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; Resolución de ejercicios de entrada y salida &lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Link ➡️ &lt;a href=&#34;https://youtu.be/pO4qQ8LYMco/&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Youtube Logo&#34; src=&#34;https://raw.githubusercontent.com/caidevOficial/Python_RepositoryCloner/main/Media/YT_Logo.png&#34; width=&#34;50/&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; Condicional if &lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Link ➡️ &lt;a href=&#34;https://youtu.be/5TKIK31xN-8/&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Youtube Logo&#34; src=&#34;https://raw.githubusercontent.com/caidevOficial/Python_RepositoryCloner/main/Media/YT_Logo.png&#34; width=&#34;50/&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; Ejercicio completo paso a paso (TP4) &lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Link ➡️ &lt;a href=&#34;https://youtu.be/VAqrcy13J6U/&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Youtube Logo&#34; src=&#34;https://raw.githubusercontent.com/caidevOficial/Python_RepositoryCloner/main/Media/YT_Logo.png&#34; width=&#34;50/&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; Instrucción match &lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Link ➡️ &lt;a href=&#34;https://youtu.be/CMPBacKahac/&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Youtube Logo&#34; src=&#34;https://raw.githubusercontent.com/caidevOficial/Python_RepositoryCloner/main/Media/YT_Logo.png&#34; width=&#34;50/&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; Ejercicio TP4 resuelto con match &lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Link ➡️ &lt;a href=&#34;https://youtu.be/xm5T3eSZSS4/&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Youtube Logo&#34; src=&#34;https://raw.githubusercontent.com/caidevOficial/Python_RepositoryCloner/main/Media/YT_Logo.png&#34; width=&#34;50/&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; Ejercicio completo paso a paso (Adivina el numero [bis]) &lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Link ➡️ &lt;a href=&#34;https://youtu.be/-Ph6v_3nzvI/&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Youtube Logo&#34; src=&#34;https://raw.githubusercontent.com/caidevOficial/Python_RepositoryCloner/main/Media/YT_Logo.png&#34; width=&#34;50/&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; Mejora Adivina el numero [bis] e introducción manejo del tiempo &lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Link ➡️ &lt;a href=&#34;https://youtu.be/-u2k8Llgl_s/&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Youtube Logo&#34; src=&#34;https://raw.githubusercontent.com/caidevOficial/Python_RepositoryCloner/main/Media/YT_Logo.png&#34; width=&#34;50/&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; Bucles while, for [foreach] &lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Link ➡️ &lt;a href=&#34;https://youtu.be/57kuDSoSAW8/&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Youtube Logo&#34; src=&#34;https://raw.githubusercontent.com/caidevOficial/Python_RepositoryCloner/main/Media/YT_Logo.png&#34; width=&#34;50/&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; Ejercicio integrador - Paso a paso (sin lista) &lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Link ➡️ &lt;a href=&#34;https://youtu.be/4E84LYdxURE/&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Youtube Logo&#34; src=&#34;https://raw.githubusercontent.com/caidevOficial/Python_RepositoryCloner/main/Media/YT_Logo.png&#34; width=&#34;50/&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; Ejercicio integrador - Paso a paso (con lista) &lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Link ➡️ &lt;a href=&#34;https://youtu.be/Z75vQULbHI0/&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Youtube Logo&#34; src=&#34;https://raw.githubusercontent.com/caidevOficial/Python_RepositoryCloner/main/Media/YT_Logo.png&#34; width=&#34;50/&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; Ejercicio tipo parcial &lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Link ➡️ &lt;a href=&#34;https://youtu.be/8dKiuw2xKyo/&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Youtube Logo&#34; src=&#34;https://raw.githubusercontent.com/caidevOficial/Python_RepositoryCloner/main/Media/YT_Logo.png&#34; width=&#34;50/&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; Examen de ingreso 2023 - Parte 1 &lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Link ➡️ &lt;a href=&#34;https://youtu.be/O6KRtB5f1f8/&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Youtube Logo&#34; src=&#34;https://raw.githubusercontent.com/caidevOficial/Python_RepositoryCloner/main/Media/YT_Logo.png&#34; width=&#34;50/&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; Examen de ingreso 2023 - Parte 2 &lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; Link ➡️ &lt;a href=&#34;https://www.youtube.com/watch?v=5Dc2_TRooks/&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Youtube Logo&#34; src=&#34;https://raw.githubusercontent.com/caidevOficial/Python_RepositoryCloner/main/Media/YT_Logo.png&#34; width=&#34;50/&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;theader&gt; &#xA; &lt;h2 align=&#34;center&#34;&gt;Colaboradores: 🌎&lt;/h2&gt; &#xA;&lt;/theader&gt;&#xA;&lt;table align=&#34;center&#34;&gt;  &#xA; &lt;tbody&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; 🦸🏻‍♂️ Mauricio Davila &lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/davilamr/&#34;&gt; &lt;img alt=&#34;GitHub&#34; src=&#34;https://img.shields.io/badge/GitHub-%2312100E.svg?&amp;amp;style=for-the-badge&amp;amp;logo=Github&amp;amp;logoColor=yellow&#34; width=&#34;125px&#34; height=&#34;30px&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; 🦹🏼 Joaquin Enriquez &lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/joaquinenriquez/&#34;&gt; &lt;img alt=&#34;GitHub&#34; src=&#34;https://img.shields.io/badge/GitHub-%2312100E.svg?&amp;amp;style=for-the-badge&amp;amp;logo=Github&amp;amp;logoColor=white&#34; width=&#34;125px&#34; height=&#34;30px&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr align=&#34;center&#34;&gt; &#xA;   &lt;td&gt; 🦹🏻Facundo Falcone &lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/caidevOficial/&#34;&gt; &lt;img alt=&#34;GitHub&#34; src=&#34;https://img.shields.io/badge/GitHub-%2312100E.svg?&amp;amp;style=for-the-badge&amp;amp;logo=Github&amp;amp;logoColor=blue&#34; width=&#34;125px&#34; height=&#34;30px&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>d60/twikit</title>
    <updated>2024-02-07T01:37:36Z</updated>
    <id>tag:github.com,2024-02-07:/d60/twikit</id>
    <link href="https://github.com/d60/twikit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Twitter API wrapper for Python with **no API key required** | Without api key | Free | Twitter scraper | Twitter Bot&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://i.imgur.com/VbAcRG5.jpg&#34; width=&#34;500&#34;&gt; &#xA;&lt;h1&gt;Twikit&lt;/h1&gt; &#xA;&lt;p&gt;A simple API wrapper to interact with twitter&#39;s internal API. Read the documentation for more information.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twikit.readthedocs.io/en/latest/twikit.html&#34;&gt;Documentation (English)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twikit.readthedocs.io/en/latest/twikit.twikit_async.html&#34;&gt;Async Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have any questions, please ask on &lt;a href=&#34;https://www.reddit.com/r/Python/comments/1aj53tt/twitter_api_wrapper_for_python_without_api_keys/&#34;&gt;Reddit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;No API Key Required&lt;/h3&gt; &#xA;&lt;p&gt;The library uses an unofficial API and therefore does &lt;strong&gt;not require an API key&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Completely Free&lt;/h3&gt; &#xA;&lt;p&gt;The service is entirely free to use.&lt;/p&gt; &#xA;&lt;h3&gt;Both Synchronous and Asynchronous Support&lt;/h3&gt; &#xA;&lt;p&gt;Whether you prefer &lt;strong&gt;synchronous&lt;/strong&gt; or &lt;strong&gt;asynchronous&lt;/strong&gt; programming, Twikit supports both, providing flexibility for different use cases.&lt;/p&gt; &#xA;&lt;h2&gt;Functionality&lt;/h2&gt; &#xA;&lt;p&gt;This library allows you to perform various Twitter-related actions, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Create tweets&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Search tweets&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Retrieve trending topics&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;etc...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-back&#34;&gt;pip install twikit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Define a client and log in to the account.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from twikit import Client&#xA;&#xA;USERNAME = &#39;example_user&#39;&#xA;EMAIL = &#39;email@example.com&#39;&#xA;PASSWORD = &#39;password0000&#39;&#xA;&#xA;# Initialize client&#xA;client = Client(&#39;en-US&#39;)&#xA;# Login to the service with provided user credentials&#xA;client.login(&#xA;    auth_info_1=USERNAME ,&#xA;    auth_info_2=EMAIL,&#xA;    password=PASSWORD&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Create a tweet with media attached.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Upload media files and obtain media_ids&#xA;media_ids = [&#xA;    client.upload_media(&#39;media1.jpg&#39;, index=0),&#xA;    client.upload_media(&#39;media2.jpg&#39;, index=1)&#xA;]&#xA;# Create a tweet with the provided text and attached media&#xA;client.create_tweet(&#xA;    text=&#39;Example Tweet&#39;,&#xA;    media_ids=media_ids&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more examples, see &lt;a href=&#34;https://github.com/d60/twikit/raw/main/example.py&#34;&gt;example.py&lt;/a&gt;. See &lt;a href=&#34;https://github.com/d60/twikit/raw/main/example_async.py&#34;&gt;example_async.py&lt;/a&gt; for examples of Async.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project is currently in beta, and I would like to hear your thoughts and suggestions. If you have any features you&#39;d like to see added or encounter any issues, please let me know in the &lt;a href=&#34;https://github.com/d60/twikit/issues&#34;&gt;issues&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, if you find this library useful, I would appreciate it if you would star this repository or share this library! Thank you very much!&lt;/p&gt;</summary>
  </entry>
</feed>