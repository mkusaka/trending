<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-20T01:31:07Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MasterBin-IIAU/Unicorn</title>
    <updated>2022-07-20T01:31:07Z</updated>
    <id>tag:github.com,2022-07-20:/MasterBin-IIAU/Unicorn</id>
    <link href="https://github.com/MasterBin-IIAU/Unicorn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;[ECCV&#39;22 Oral] Towards Grand Unification of Object Tracking&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Unicorn &lt;span&gt;🦄&lt;/span&gt; : Towards Grand Unification of Object Tracking&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paperswithcode.com/sota/multiple-object-tracking-on-bdd100k?p=towards-grand-unification-of-object-tracking&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/towards-grand-unification-of-object-tracking/multiple-object-tracking-on-bdd100k&#34; alt=&#34;PWC&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://paperswithcode.com/sota/multi-object-tracking-and-segmentation-on-2?p=towards-grand-unification-of-object-tracking&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/towards-grand-unification-of-object-tracking/multi-object-tracking-and-segmentation-on-2&#34; alt=&#34;PWC&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://paperswithcode.com/sota/multi-object-tracking-on-mots20?p=towards-grand-unification-of-object-tracking&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/towards-grand-unification-of-object-tracking/multi-object-tracking-on-mots20&#34; alt=&#34;PWC&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://paperswithcode.com/sota/visual-object-tracking-on-lasot?p=towards-grand-unification-of-object-tracking&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/towards-grand-unification-of-object-tracking/visual-object-tracking-on-lasot&#34; alt=&#34;PWC&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://paperswithcode.com/sota/visual-object-tracking-on-trackingnet?p=towards-grand-unification-of-object-tracking&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/towards-grand-unification-of-object-tracking/visual-object-tracking-on-trackingnet&#34; alt=&#34;PWC&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://paperswithcode.com/sota/multi-object-tracking-on-mot17?p=towards-grand-unification-of-object-tracking&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/towards-grand-unification-of-object-tracking/multi-object-tracking-on-mot17&#34; alt=&#34;PWC&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MasterBin-IIAU/Unicorn/master/assets/Unicorn.png&#34; alt=&#34;Unicorn&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository is the project page for the paper &lt;a href=&#34;https://arxiv.org/abs/2207.07078&#34;&gt;Towards Grand Unification of Object Tracking&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Highlight&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unicorn is accepted to ECCV 2022 as an &lt;strong&gt;oral presentation&lt;/strong&gt;!&lt;/li&gt; &#xA; &lt;li&gt;Unicorn first demonstrates grand unification for &lt;strong&gt;four object-tracking tasks&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Unicorn achieves strong performance in &lt;strong&gt;eight tracking benchmarks&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The object tracking field mainly consists of four sub-tasks: Single Object Tracking (SOT), Multiple Object Tracking (MOT), Video Object Segmentation (VOS), and Multi-Object Tracking and Segmentation (MOTS). Most previous approaches are developed for only one of or part of the sub-tasks.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For the first time, Unicorn accomplishes the great unification of the network architecture and the learning paradigm for &lt;strong&gt;four tracking tasks&lt;/strong&gt;. Besides, Unicorn puts forwards new state-of-the-art performance on many challenging tracking benchmarks &lt;strong&gt;using the same model parameters&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This repository supports the following tasks:&lt;/p&gt; &#xA;&lt;p&gt;Image-level&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Object Detection&lt;/li&gt; &#xA; &lt;li&gt;Instance Segmentation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Video-level&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Single Object Tracking (SOT)&lt;/li&gt; &#xA; &lt;li&gt;Multiple Object Tracking (MOT)&lt;/li&gt; &#xA; &lt;li&gt;Video Object Segmentation (VOS)&lt;/li&gt; &#xA; &lt;li&gt;Multi-Object Tracking and Segmentation (MOTS)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;Unicorn conquers four tracking tasks (SOT, MOT, VOS, MOTS) using &lt;strong&gt;the same network&lt;/strong&gt; with &lt;strong&gt;the same parameters&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/MasterBin-IIAU/Unicorn/master/assets/video_demo.gif&#34; width=&#34;700px&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Results&lt;/h2&gt; &#xA;&lt;h3&gt;SOT&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/MasterBin-IIAU/Unicorn/master/assets/SOT.png&#34; width=&#34;600pix&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;MOT (MOT17)&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/MasterBin-IIAU/Unicorn/master/assets/MOT.png&#34; width=&#34;600pix&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;MOT (BDD100K)&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/MasterBin-IIAU/Unicorn/master/assets/MOT-BDD.png&#34; width=&#34;600pix&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;VOS&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/MasterBin-IIAU/Unicorn/master/assets/VOS.png&#34; width=&#34;600pix&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;MOTS (MOTS Challenge)&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/MasterBin-IIAU/Unicorn/master/assets/MOTS.png&#34; width=&#34;600pix&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;MOTS (BDD100K MOTS)&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/MasterBin-IIAU/Unicorn/master/assets/MOTS-BDD.png&#34; width=&#34;600pix&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Installation: Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/MasterBin-IIAU/Unicorn/master/assets/install.md&#34;&gt;install.md&lt;/a&gt; for more details.&lt;/li&gt; &#xA; &lt;li&gt;Data preparation: Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/MasterBin-IIAU/Unicorn/master/assets/data.md&#34;&gt;data.md&lt;/a&gt; for more details.&lt;/li&gt; &#xA; &lt;li&gt;Training: Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/MasterBin-IIAU/Unicorn/master/assets/train.md&#34;&gt;train.md&lt;/a&gt; for more details.&lt;/li&gt; &#xA; &lt;li&gt;Testing: Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/MasterBin-IIAU/Unicorn/master/assets/test.md&#34;&gt;test.md&lt;/a&gt; for more details.&lt;/li&gt; &#xA; &lt;li&gt;Model zoo: Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/MasterBin-IIAU/Unicorn/master/assets/model_zoo.md&#34;&gt;model_zoo.md&lt;/a&gt; for more details.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Citing Unicorn&lt;/h2&gt; &#xA;&lt;p&gt;If you find Unicorn useful in your research, please consider citing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{unicorn,&#xA;  title={Towards Grand Unification of Object Tracking},&#xA;  author={Yan, Bin and Jiang, Yi and Sun, Peize and Wang, Dong and Yuan, Zehuan and Luo, Ping and Lu, Huchuan},&#xA;  booktitle={ECCV},&#xA;  year={2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Thanks &lt;a href=&#34;https://github.com/Megvii-BaseDetection/YOLOX&#34;&gt;YOLOX&lt;/a&gt; and &lt;a href=&#34;https://github.com/aim-uofa/AdelaiDet&#34;&gt;CondInst&lt;/a&gt; for providing strong baseline for object detection and instance segmentation.&lt;/li&gt; &#xA; &lt;li&gt;Thanks &lt;a href=&#34;https://github.com/researchmm/Stark&#34;&gt;STARK&lt;/a&gt; and &lt;a href=&#34;https://github.com/visionml/pytracking&#34;&gt;PyTracking&lt;/a&gt; for providing useful inference and evaluation toolkits for SOT and VOS.&lt;/li&gt; &#xA; &lt;li&gt;Thanks &lt;a href=&#34;https://github.com/ifzhang/ByteTrack&#34;&gt;ByteTrack&lt;/a&gt;, &lt;a href=&#34;https://github.com/SysCV/qdtrack&#34;&gt;QDTrack&lt;/a&gt; and &lt;a href=&#34;https://github.com/SysCV/pcan/&#34;&gt;PCAN&lt;/a&gt; for providing useful data-processing scripts and evalution codes for MOT and MOTS.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>kraanzu/termtyper</title>
    <updated>2022-07-20T01:31:07Z</updated>
    <id>tag:github.com,2022-07-20:/kraanzu/termtyper</id>
    <link href="https://github.com/kraanzu/termtyper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A typing application to level up your fingers!&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/97718086/177029838-49fc77c2-6dc4-4d62-ab6b-1d830c7260b5.png&#34; align=&#34;right&#34; alt=&#34;Termtyper icon&#34; width=&#34;303&#34; height=&#34;200&#34;&gt; &#xA;&lt;h1&gt;Termtyper 🖮&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;A typing application to level up your fingers!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kraanzu/termtyper/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/kraanzu/termtyper?color=red&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kraanzu/termtyper/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/kraanzu/termtyper?color=green&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kraanzu/termtyper/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/kraanzu/termtyper?color=yellow&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/WA2ER9MBWa&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/989186205025464390.svg?label=Discord&amp;amp;logo=Discord&amp;amp;colorB=7289da&amp;amp;style=for-the-badge&#34; alt=&#34;Support Server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation 🔨&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can install termtyper easily using python one-liner&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m pip install git+https://github.com/kraanzu/termtyper.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Or the long way?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/kraanzu/termtyper.git&#xA;cd termtyper&#xA;pip3 install .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Or maybe You use Arch btw?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;paru -S termtyper-git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then simply type &lt;code&gt;termtyper&lt;/code&gt; in your terminal to launch it.. ezy pzy&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠️ Note: Config file for &lt;code&gt;termtyper&lt;/code&gt; is located at your $XDG_CONFIG_HOME (or ~/.config/termtyper)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠️ Note: You must use python version &amp;gt;=3.10&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Features 🌟&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Some features that termtyper comes with:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An interactive &amp;amp; beautiful UI&lt;/li&gt; &#xA; &lt;li&gt;Mechanical sounds!&lt;/li&gt; &#xA; &lt;li&gt;Words and Time based typing&lt;/li&gt; &#xA; &lt;li&gt;Real-time comparision of speed carets&lt;/li&gt; &#xA; &lt;li&gt;Racebar themes with typing-speed based colors&lt;/li&gt; &#xA; &lt;li&gt;Change styles/settings on the fly&lt;/li&gt; &#xA; &lt;li&gt;Lots of options to tweak! (See &lt;a href=&#34;https://github.com/kraanzu/termtyper#tweaks-gear&#34;&gt;tweaks&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Tweaks &lt;span&gt;⚙&lt;/span&gt;&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Tweak&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Difficulty&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Choose how strict termtyper should be with your wrong keypresses&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Blind mode&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;You wouldn&#39;t be able to see your mistakes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Min Speed&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Fall below this average speed and you fail!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Min Accuracy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Fall below this average accuracy and you fail!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Min Burst&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Fall below this average accuracy for even a word and you fail!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Force Correct&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;You wouldn&#39;t be able to able to go on without cleaning your pool of mistakes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Confidence mode&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Are you sure you don&#39;t need backspace? Try this :)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Caret Style&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Caret style matters!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cursor Buddy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Setup your cursor buddy to run along with you!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Keypress Sound&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Need sounds while typing? Select your preference here&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Click Sound&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Choose the sound you wanna hear when you smack that key!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tab Reset&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Hey hey! You wanna reset already? I got ya!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Restart Same&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;I won&#39;t stop until I clear that passage!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;That&#39;s it fellas (See &lt;a href=&#34;https://github.com/kraanzu/termtyper#contribution-&#34;&gt;Contribution&lt;/a&gt; if you want something more)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;See Demo Video below in order to get a visual :)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Demo 🎥&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/97718086/179387912-27b0016b-fa31-4284-9006-c11d24171065.mp4&#34;&gt;https://user-images.githubusercontent.com/97718086/179387912-27b0016b-fa31-4284-9006-c11d24171065.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contribution 🤝&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Want to contribute? Feel free to open a PR! 😸&lt;/li&gt; &#xA; &lt;li&gt;Got some ideas for improvements? I&#39;m all ears! 👂&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Other TUI projects 🤓 :&lt;/h4&gt; &#xA;&lt;p&gt;If you liked termtyper then you might wanna try out some of my other TUI projects as well&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kraanzu/dooit&#34;&gt;dooit&lt;/a&gt; - A todo app that you didn&#39;t ask for but needed!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kraanzu/gupshup&#34;&gt;gupshup&lt;/a&gt; - A localhost TUI chat client&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>PwnFunction/v8-randomness-predictor</title>
    <updated>2022-07-20T01:31:07Z</updated>
    <id>tag:github.com,2022-07-20:/PwnFunction/v8-randomness-predictor</id>
    <link href="https://github.com/PwnFunction/v8-randomness-predictor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Using z3 to predict `Math.random` in v8&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;v8-randomness-predictor&lt;/h1&gt; &#xA;&lt;p&gt;Using &lt;a href=&#34;https://github.com/Z3Prover/z3&#34;&gt;z3&lt;/a&gt; to predict &lt;code&gt;Math.random&lt;/code&gt; in &lt;a href=&#34;https://v8.dev&#34;&gt;v8&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;YouTube video&lt;/h2&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=-h_rj2-HP2E&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/19750782/178938498-371e69b9-1182-427a-86c3-dca3e769e7ef.png&#34; alt=&#34;PwnFunction YouTube Video&#34; width=&#34;600&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Watch the &lt;a href=&#34;https://www.youtube.com/watch?v=-h_rj2-HP2E&#34;&gt;✨ YouTube Video&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Run Instructions&lt;/h2&gt; &#xA;&lt;p&gt;Get a few Random numbers from v8, run to following code in &lt;a href=&#34;https://v8.dev/docs/d8&#34;&gt;d8&lt;/a&gt;, &lt;a href=&#34;https://nodejs.org/&#34;&gt;nodejs&lt;/a&gt; or &lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;chrome&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;Array.from(Array(5), Math.random)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally you can set the random seed in nodejs so you&#39;d get the same numbers as shown below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;/*&#xA;* Run nodejs with `--random_seed` flag like&#xA;* node --random_seed=1337&#xA;*/&#xA;Array.from(Array(5), Math.random)&#xA;// [0.9311600617849973, 0.3551442693830502, 0.7923158995678377, 0.787777942408997, 0.376372264303491]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next we feed these random numbers into the python script (line 23).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;sequence = [&#xA;  0.9311600617849973,&#xA;  0.3551442693830502,&#xA;  0.7923158995678377,&#xA;  0.787777942408997,&#xA;  0.376372264303491,&#xA;][::-1]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the script.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ python3 main.py&#xA;&#xA;# Outputs&#xA;# {&#39;se_state1&#39;: 6942842836049070467, &#39;se_state0&#39;: 4268050313212552111}&#xA;# 0.23137147109312428&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PwnFunction/learn-z3&#34;&gt;Learn z3 by solving simple challenges&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v8.dev/blog/math-random&#34;&gt;There’s Math.random(), and then there’s Math.random()&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vigna.di.unimi.it/ftp/papers/xorshiftplus.pdf&#34;&gt;Further scramblings of Marsaglia’s xorshift generators&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apechkurov.medium.com/v8-deep-dives-random-thoughts-on-math-random-fb155075e9e5&#34;&gt;(V8 Deep Dives) Random Thoughts on Math.random()&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.securityevaluators.com/hacking-the-javascript-lottery-80cc437e3b7f&#34;&gt;Hacking the JavaScript Lottery&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>