<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-03T02:29:01Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pengzhile/pandora</title>
    <updated>2023-03-03T02:29:01Z</updated>
    <id>tag:github.com,2023-03-03:/pengzhile/pandora</id>
    <link href="https://github.com/pengzhile/pandora" rel="alternate"></link>
    <summary type="html">&lt;p&gt;潘多拉，一个命令行的ChatGPT。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pandora&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/python-%3E%3D3.7-green&#34; alt=&#34;Python version&#34;&gt; &lt;a href=&#34;https://github.com/pengzhile/pandora/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/pengzhile/pandora&#34; alt=&#34;Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pengzhile/pandora/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/pengzhile/pandora/master&#34; alt=&#34;Commits&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/pandora-chatgpt&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/pandora-chatgpt.svg?sanitize=true&#34; alt=&#34;PyPi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/pandora-chatgpt&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/badge/pandora-chatgpt&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pengzhile/pandora/actions/workflows/python-publish.yml&#34;&gt;&lt;img src=&#34;https://github.com/pengzhile/pandora/actions/workflows/python-publish.yml/badge.svg?sanitize=true&#34; alt=&#34;PyPi workflow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pengzhile/pandora/actions/workflows/docker-publish.yml&#34;&gt;&lt;img src=&#34;https://github.com/pengzhile/pandora/actions/workflows/docker-publish.yml/badge.svg?sanitize=true&#34; alt=&#34;Docker workflow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pengzhile/pandora/raw/master/doc/README.en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;潘多拉&lt;/code&gt;，一个命令行的&lt;code&gt;ChatGPT&lt;/code&gt;。&lt;/h3&gt; &#xA;&lt;h3&gt;实现了网页版&lt;code&gt;ChatGPT&lt;/code&gt;的主要操作。能过&lt;code&gt;Cloudflare&lt;/code&gt;，理论上速度还可以。&lt;/h3&gt; &#xA;&lt;h2&gt;界面截图&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/pengzhile/pandora/raw/master/doc/images/s05.png&#34; alt=&#34;alt Screenshot5&#34;&gt; &lt;img src=&#34;https://github.com/pengzhile/pandora/raw/master/doc/images/s10.jpeg&#34; alt=&#34;alt Screenshot10&#34;&gt;&lt;/p&gt; &lt;/summary&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/pengzhile/pandora/raw/master/doc/images/s01.png&#34; alt=&#34;alt Screenshot1&#34;&gt; &lt;img src=&#34;https://github.com/pengzhile/pandora/raw/master/doc/images/s02.png&#34; alt=&#34;alt Screenshot2&#34;&gt; &lt;img src=&#34;https://github.com/pengzhile/pandora/raw/master/doc/images/s03.png&#34; alt=&#34;alt Screenshot3&#34;&gt; &lt;img src=&#34;https://github.com/pengzhile/pandora/raw/master/doc/images/s04.png&#34; alt=&#34;alt Screenshot4&#34;&gt; &lt;img src=&#34;https://github.com/pengzhile/pandora/raw/master/doc/images/s06.png&#34; alt=&#34;alt Screenshot6&#34;&gt; &lt;img src=&#34;https://github.com/pengzhile/pandora/raw/master/doc/images/s11.jpeg&#34; alt=&#34;alt Screenshot11&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;如何运行&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Python版本目测起码要&lt;code&gt;3.7&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;pip安装运行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install Pandora-ChatGPT&#xA;pandora&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;编译运行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install .&#xA;pandora&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Docker Hub运行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker pull pengzhile/pandora&#xA;docker run -it --rm pengzhile/pandora&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Docker编译运行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker build -t pandora .&#xA;docker run -it --rm pandora&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;输入用户名密码登录即可，登录密码理论上不显示出来，莫慌。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;简单而粗暴，不失优雅。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;程序参数&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可通过 &lt;code&gt;pandora --help&lt;/code&gt; 查看。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-p&lt;/code&gt; 或 &lt;code&gt;--proxy&lt;/code&gt; 指定代理，格式：&lt;code&gt;protocol://user:pass@ip:port&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-t&lt;/code&gt; 或 &lt;code&gt;--token_file&lt;/code&gt; 指定一个存放&lt;code&gt;Access Token&lt;/code&gt;的文件，使用&lt;code&gt;Access Token&lt;/code&gt;登录。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;--server&lt;/code&gt; 以&lt;code&gt;http&lt;/code&gt;服务方式启动，格式：&lt;code&gt;ip:port&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-v&lt;/code&gt; 或 &lt;code&gt;--verbose&lt;/code&gt; 显示调试信息，且出错时打印异常堆栈信息，供查错使用。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Docker环境变量&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;PANDORA_ACCESS_TOKEN&lt;/code&gt; 指定&lt;code&gt;Access Token&lt;/code&gt;字符串。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PANDORA_PROXY&lt;/code&gt; 指定代理，格式：&lt;code&gt;protocol://user:pass@ip:port&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PANDORA_SERVER&lt;/code&gt; 以&lt;code&gt;http&lt;/code&gt;服务方式启动，格式：&lt;code&gt;ip:port&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PANDORA_VERBOSE&lt;/code&gt; 显示调试信息，且出错时打印异常堆栈信息，供查错使用。&lt;/li&gt; &#xA; &lt;li&gt;使用Docker方式，设置环境变量即可，无视上述&lt;code&gt;程序参数&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;关于 Access Token&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用&lt;code&gt;Access Token&lt;/code&gt;方式登录，可以无代理直连。&lt;/li&gt; &#xA; &lt;li&gt;通常使用&lt;code&gt;Google&lt;/code&gt;或&lt;code&gt;Microsoft&lt;/code&gt;账号登录&lt;code&gt;ChatGPT&lt;/code&gt;的人会用到&lt;/li&gt; &#xA; &lt;li&gt;首先正常登录&lt;code&gt;ChatGPT&lt;/code&gt;，不管是账号密码，还是&lt;code&gt;Google&lt;/code&gt;或是&lt;code&gt;Microsoft&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;登录成功到聊天页面后打开：&lt;code&gt;https://chat.openai.com/api/auth/session&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;其中&lt;code&gt;accessToken&lt;/code&gt;字段的那一长串内容即是&lt;code&gt;Access Token&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Access Token&lt;/code&gt;可以复制保存，其有效期目前为&lt;code&gt;1个月&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;不要泄露你的&lt;code&gt;Access Token&lt;/code&gt;，使用它可以操纵你的账号。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;HTTP服务文档&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如果你以&lt;code&gt;http&lt;/code&gt;服务方式启动，现在你可以打开一个极简版的&lt;code&gt;ChatGPT&lt;/code&gt;了。通过你指定的&lt;code&gt;http://ip:port&lt;/code&gt;来访问。&lt;/li&gt; &#xA; &lt;li&gt;API文档见：&lt;a href=&#34;https://github.com/pengzhile/pandora/raw/master/doc/HTTP-API.md&#34;&gt;doc/HTTP-API.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;操作命令&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;对话界面&lt;strong&gt;连敲两次&lt;/strong&gt;&lt;code&gt;Enter&lt;/code&gt;发送你的输入给&lt;code&gt;ChatGPT&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;对话界面使用&lt;code&gt;/?&lt;/code&gt;可以打印支持的操作命令。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/title&lt;/code&gt; 重新设置当前对话的标题。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/select&lt;/code&gt; 回到选择会话界面。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/reload&lt;/code&gt; 重新加载当前会话所有内容，&lt;code&gt;F5&lt;/code&gt;你能懂吧。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/regen&lt;/code&gt; 如果对&lt;code&gt;ChatGPT&lt;/code&gt;当前回答不满意，可以让它重新回答。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/edit&lt;/code&gt; 编辑你之前的一个提问。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/new&lt;/code&gt; 直接开启一个新会话。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/del&lt;/code&gt; 删除当前会话，回到会话选择界面。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/token&lt;/code&gt; 打印当前的&lt;code&gt;Access Token&lt;/code&gt;，也许你用得上，但不要泄露。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/clear&lt;/code&gt; 清屏，应该不用解释。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/version&lt;/code&gt; 打印&lt;code&gt;Pandora&lt;/code&gt;的版本信息。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/exit&lt;/code&gt; 退出&lt;code&gt;潘多拉&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;其他说明&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;项目是站在其他巨人的肩膀上，感谢！&lt;/li&gt; &#xA; &lt;li&gt;报错、BUG之类的提出&lt;code&gt;Issue&lt;/code&gt;，我会修复。&lt;/li&gt; &#xA; &lt;li&gt;因为之后&lt;code&gt;ChatGPT&lt;/code&gt;的API变动，我可能不会跟进修复。&lt;/li&gt; &#xA; &lt;li&gt;喜欢的可以给颗星，都是老朋友了。&lt;/li&gt; &#xA; &lt;li&gt;不影响&lt;code&gt;PHP是世界上最好的编程语言！&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>explosion/spaCy</title>
    <updated>2023-03-03T02:29:01Z</updated>
    <id>tag:github.com,2023-03-03:/explosion/spaCy</id>
    <link href="https://github.com/explosion/spaCy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;💫 Industrial-strength Natural Language Processing (NLP) in Python&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://explosion.ai&#34;&gt;&lt;img src=&#34;https://explosion.ai/assets/img/logo.svg?sanitize=true&#34; width=&#34;125&#34; height=&#34;125&#34; align=&#34;right&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;spaCy: Industrial-strength NLP&lt;/h1&gt; &#xA;&lt;p&gt;spaCy is a library for &lt;strong&gt;advanced Natural Language Processing&lt;/strong&gt; in Python and Cython. It&#39;s built on the very latest research, and was designed from day one to be used in real products.&lt;/p&gt; &#xA;&lt;p&gt;spaCy comes with &lt;a href=&#34;https://spacy.io/models&#34;&gt;pretrained pipelines&lt;/a&gt; and currently supports tokenization and training for &lt;strong&gt;70+ languages&lt;/strong&gt;. It features state-of-the-art speed and &lt;strong&gt;neural network models&lt;/strong&gt; for tagging, parsing, &lt;strong&gt;named entity recognition&lt;/strong&gt;, &lt;strong&gt;text classification&lt;/strong&gt; and more, multi-task learning with pretrained &lt;strong&gt;transformers&lt;/strong&gt; like BERT, as well as a production-ready &lt;a href=&#34;https://spacy.io/usage/training&#34;&gt;&lt;strong&gt;training system&lt;/strong&gt;&lt;/a&gt; and easy model packaging, deployment and workflow management. spaCy is commercial open-source software, released under the &lt;a href=&#34;https://github.com/explosion/spaCy/raw/master/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;💫 &lt;strong&gt;Version 3.5 out now!&lt;/strong&gt; &lt;a href=&#34;https://github.com/explosion/spaCy/releases&#34;&gt;Check out the release notes here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/explosion-ai/public/_build?definitionId=8&#34;&gt;&lt;img src=&#34;https://img.shields.io/azure-devops/build/explosion-ai/public/8/master.svg?logo=azure-pipelines&amp;amp;style=flat-square&amp;amp;label=build&#34; alt=&#34;Azure Pipelines&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/explosion/spaCy/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/explosion/spacy.svg?style=flat-square&amp;amp;logo=github&#34; alt=&#34;Current Release Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/spacy/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/spacy.svg?style=flat-square&amp;amp;logo=pypi&amp;amp;logoColor=white&#34; alt=&#34;pypi Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://anaconda.org/conda-forge/spacy&#34;&gt;&lt;img src=&#34;https://img.shields.io/conda/vn/conda-forge/spacy.svg?style=flat-square&amp;amp;logo=conda-forge&amp;amp;logoColor=white&#34; alt=&#34;conda Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/explosion/wheelwright/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/wheels-%E2%9C%93-4c1.svg?longCache=true&amp;amp;style=flat-square&amp;amp;logo=python&amp;amp;logoColor=white&#34; alt=&#34;Python wheels&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ambv/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?style=flat-square&#34; alt=&#34;Code style: black&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://pypi.org/project/spacy/&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/personalized-badge/spacy?period=total&amp;amp;units=international_system&amp;amp;left_color=grey&amp;amp;right_color=orange&amp;amp;left_text=pip%20downloads&#34; alt=&#34;PyPi downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://anaconda.org/conda-forge/spacy&#34;&gt;&lt;img src=&#34;https://img.shields.io/conda/dn/conda-forge/spacy?label=conda%20downloads&#34; alt=&#34;Conda downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/spacy_io&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/spacy_io.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;spaCy on Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📖 Documentation&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Documentation&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;⭐️ &lt;strong&gt;&lt;a href=&#34;https://spacy.io/usage/spacy-101&#34;&gt;spaCy 101&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;New to spaCy? Here&#39;s everything you need to know!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;📚 &lt;strong&gt;&lt;a href=&#34;https://spacy.io/usage/&#34;&gt;Usage Guides&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;How to use spaCy and its features.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🚀 &lt;strong&gt;&lt;a href=&#34;https://spacy.io/usage/v3&#34;&gt;New in v3.0&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;New features, backwards incompatibilities and migration guide.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🪐 &lt;strong&gt;&lt;a href=&#34;https://github.com/explosion/projects&#34;&gt;Project Templates&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;End-to-end workflows you can clone, modify and run.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🎛 &lt;strong&gt;&lt;a href=&#34;https://spacy.io/api/&#34;&gt;API Reference&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The detailed reference for spaCy&#39;s API.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;📦 &lt;strong&gt;&lt;a href=&#34;https://spacy.io/models&#34;&gt;Models&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Download trained pipelines for spaCy.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🌌 &lt;strong&gt;&lt;a href=&#34;https://spacy.io/universe&#34;&gt;Universe&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Plugins, extensions, demos and books from the spaCy ecosystem.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;👩‍🏫 &lt;strong&gt;&lt;a href=&#34;https://course.spacy.io&#34;&gt;Online Course&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Learn spaCy in this free and interactive online course.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;📺 &lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/c/ExplosionAI&#34;&gt;Videos&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Our YouTube channel with video tutorials, talks and more.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🛠 &lt;strong&gt;&lt;a href=&#34;https://spacy.io/usage#changelog&#34;&gt;Changelog&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Changes and version history.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;💝 &lt;strong&gt;&lt;a href=&#34;https://github.com/explosion/spaCy/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;How to contribute to the spaCy project and code base.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://explosion.ai/spacy-tailored-pipelines&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13643239/152853098-1c761611-ccb0-4ec6-9066-b234552831fe.png&#34; width=&#34;125&#34; alt=&#34;spaCy Tailored Pipelines&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Get a custom spaCy pipeline, tailor-made for your NLP problem by spaCy&#39;s core developers. Streamlined, production-ready, predictable and maintainable. Start by completing our 5-minute questionnaire to tell us what you need and we&#39;ll be in touch! &lt;strong&gt;&lt;a href=&#34;https://explosion.ai/spacy-tailored-pipelines&#34;&gt;Learn more →&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://explosion.ai/spacy-tailored-analysis&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1019791/206151300-b00cd189-e503-4797-aa1e-1bb6344062c5.png&#34; width=&#34;125&#34; alt=&#34;spaCy Tailored Pipelines&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Bespoke advice for problem solving, strategy and analysis for applied NLP projects. Services include data strategy, code reviews, pipeline design and annotation coaching. Curious? Fill in our 5-minute questionnaire to tell us what you need and we&#39;ll be in touch! &lt;strong&gt;&lt;a href=&#34;https://explosion.ai/spacy-tailored-analysis&#34;&gt;Learn more →&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;💬 Where to ask questions&lt;/h2&gt; &#xA;&lt;p&gt;The spaCy project is maintained by the &lt;a href=&#34;https://explosion.ai/about&#34;&gt;spaCy team&lt;/a&gt;. Please understand that we won&#39;t be able to provide individual support via email. We also believe that help is much more valuable if it&#39;s shared publicly, so that more people can benefit from it.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Platforms&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🚨 &lt;strong&gt;Bug Reports&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/explosion/spaCy/issues&#34;&gt;GitHub Issue Tracker&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🎁 &lt;strong&gt;Feature Requests &amp;amp; Ideas&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/explosion/spaCy/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;👩‍💻 &lt;strong&gt;Usage Questions&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/explosion/spaCy/discussions&#34;&gt;GitHub Discussions&lt;/a&gt; · &lt;a href=&#34;https://stackoverflow.com/questions/tagged/spacy&#34;&gt;Stack Overflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🗯 &lt;strong&gt;General Discussion&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/explosion/spaCy/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support for &lt;strong&gt;70+ languages&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Trained pipelines&lt;/strong&gt; for different languages and tasks&lt;/li&gt; &#xA; &lt;li&gt;Multi-task learning with pretrained &lt;strong&gt;transformers&lt;/strong&gt; like BERT&lt;/li&gt; &#xA; &lt;li&gt;Support for pretrained &lt;strong&gt;word vectors&lt;/strong&gt; and embeddings&lt;/li&gt; &#xA; &lt;li&gt;State-of-the-art speed&lt;/li&gt; &#xA; &lt;li&gt;Production-ready &lt;strong&gt;training system&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Linguistically-motivated &lt;strong&gt;tokenization&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Components for named &lt;strong&gt;entity recognition&lt;/strong&gt;, part-of-speech-tagging, dependency parsing, sentence segmentation, &lt;strong&gt;text classification&lt;/strong&gt;, lemmatization, morphological analysis, entity linking and more&lt;/li&gt; &#xA; &lt;li&gt;Easily extensible with &lt;strong&gt;custom components&lt;/strong&gt; and attributes&lt;/li&gt; &#xA; &lt;li&gt;Support for custom models in &lt;strong&gt;PyTorch&lt;/strong&gt;, &lt;strong&gt;TensorFlow&lt;/strong&gt; and other frameworks&lt;/li&gt; &#xA; &lt;li&gt;Built in &lt;strong&gt;visualizers&lt;/strong&gt; for syntax and NER&lt;/li&gt; &#xA; &lt;li&gt;Easy &lt;strong&gt;model packaging&lt;/strong&gt;, deployment and workflow management&lt;/li&gt; &#xA; &lt;li&gt;Robust, rigorously evaluated accuracy&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;📖 &lt;strong&gt;For more details, see the &lt;a href=&#34;https://spacy.io/usage/facts-figures&#34;&gt;facts, figures and benchmarks&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;⏳ Install spaCy&lt;/h2&gt; &#xA;&lt;p&gt;For detailed installation instructions, see the &lt;a href=&#34;https://spacy.io/usage&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Operating system&lt;/strong&gt;: macOS / OS X · Linux · Windows (Cygwin, MinGW, Visual Studio)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Python version&lt;/strong&gt;: Python 3.6+ (only 64 bit)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Package managers&lt;/strong&gt;: &lt;a href=&#34;https://pypi.org/project/spacy/&#34;&gt;pip&lt;/a&gt; · &lt;a href=&#34;https://anaconda.org/conda-forge/spacy&#34;&gt;conda&lt;/a&gt; (via &lt;code&gt;conda-forge&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;pip&lt;/h3&gt; &#xA;&lt;p&gt;Using pip, spaCy releases are available as source packages and binary wheels. Before you install spaCy and its dependencies, make sure that your &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;setuptools&lt;/code&gt; and &lt;code&gt;wheel&lt;/code&gt; are up to date.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -U pip setuptools wheel&#xA;pip install spacy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install additional data tables for lemmatization and normalization you can run &lt;code&gt;pip install spacy[lookups]&lt;/code&gt; or install &lt;a href=&#34;https://github.com/explosion/spacy-lookups-data&#34;&gt;&lt;code&gt;spacy-lookups-data&lt;/code&gt;&lt;/a&gt; separately. The lookups package is needed to create blank models with lemmatization data, and to lemmatize in languages that don&#39;t yet come with pretrained models and aren&#39;t powered by third-party libraries.&lt;/p&gt; &#xA;&lt;p&gt;When using pip it is generally recommended to install packages in a virtual environment to avoid modifying system state:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m venv .env&#xA;source .env/bin/activate&#xA;pip install -U pip setuptools wheel&#xA;pip install spacy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;conda&lt;/h3&gt; &#xA;&lt;p&gt;You can also install spaCy from &lt;code&gt;conda&lt;/code&gt; via the &lt;code&gt;conda-forge&lt;/code&gt; channel. For the feedstock including the build recipe and configuration, check out &lt;a href=&#34;https://github.com/conda-forge/spacy-feedstock&#34;&gt;this repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda install -c conda-forge spacy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Updating spaCy&lt;/h3&gt; &#xA;&lt;p&gt;Some updates to spaCy may require downloading new statistical models. If you&#39;re running spaCy v2.0 or higher, you can use the &lt;code&gt;validate&lt;/code&gt; command to check if your installed models are compatible and if not, print details on how to update them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -U spacy&#xA;python -m spacy validate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;ve trained your own models, keep in mind that your training and runtime inputs must match. After updating spaCy, we recommend &lt;strong&gt;retraining your models&lt;/strong&gt; with the new version.&lt;/p&gt; &#xA;&lt;p&gt;📖 &lt;strong&gt;For details on upgrading from spaCy 2.x to spaCy 3.x, see the &lt;a href=&#34;https://spacy.io/usage/v3#migrating&#34;&gt;migration guide&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📦 Download model packages&lt;/h2&gt; &#xA;&lt;p&gt;Trained pipelines for spaCy can be installed as &lt;strong&gt;Python packages&lt;/strong&gt;. This means that they&#39;re a component of your application, just like any other module. Models can be installed using spaCy&#39;s &lt;a href=&#34;https://spacy.io/api/cli#download&#34;&gt;&lt;code&gt;download&lt;/code&gt;&lt;/a&gt; command, or manually by pointing pip to a path or URL.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Documentation&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://spacy.io/models&#34;&gt;Available Pipelines&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Detailed pipeline descriptions, accuracy figures and benchmarks.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://spacy.io/usage/models&#34;&gt;Models Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Detailed usage and installation instructions.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://spacy.io/usage/training&#34;&gt;Training&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;How to train your own pipelines on your data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Download best-matching version of specific model for your spaCy installation&#xA;python -m spacy download en_core_web_sm&#xA;&#xA;# pip install .tar.gz archive or .whl from path or URL&#xA;pip install /Users/you/en_core_web_sm-3.0.0.tar.gz&#xA;pip install /Users/you/en_core_web_sm-3.0.0-py3-none-any.whl&#xA;pip install https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.0.0/en_core_web_sm-3.0.0.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Loading and using models&lt;/h3&gt; &#xA;&lt;p&gt;To load a model, use &lt;a href=&#34;https://spacy.io/api/top-level#spacy.load&#34;&gt;&lt;code&gt;spacy.load()&lt;/code&gt;&lt;/a&gt; with the model name or a path to the model data directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import spacy&#xA;nlp = spacy.load(&#34;en_core_web_sm&#34;)&#xA;doc = nlp(&#34;This is a sentence.&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also &lt;code&gt;import&lt;/code&gt; a model directly via its full name and then call its &lt;code&gt;load()&lt;/code&gt; method with no arguments.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import spacy&#xA;import en_core_web_sm&#xA;&#xA;nlp = en_core_web_sm.load()&#xA;doc = nlp(&#34;This is a sentence.&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;📖 &lt;strong&gt;For more info and examples, check out the &lt;a href=&#34;https://spacy.io/docs/usage/models&#34;&gt;models documentation&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;⚒ Compile from source&lt;/h2&gt; &#xA;&lt;p&gt;The other way to install spaCy is to clone its &lt;a href=&#34;https://github.com/explosion/spaCy&#34;&gt;GitHub repository&lt;/a&gt; and build it from source. That is the common way if you want to make changes to the code base. You&#39;ll need to make sure that you have a development environment consisting of a Python distribution including header files, a compiler, &lt;a href=&#34;https://pip.pypa.io/en/latest/installing/&#34;&gt;pip&lt;/a&gt;, &lt;a href=&#34;https://virtualenv.pypa.io/en/latest/&#34;&gt;virtualenv&lt;/a&gt; and &lt;a href=&#34;https://git-scm.com&#34;&gt;git&lt;/a&gt; installed. The compiler part is the trickiest. How to do that depends on your system.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Install system-level dependencies via &lt;code&gt;apt-get&lt;/code&gt;: &lt;code&gt;sudo apt-get install build-essential python-dev git&lt;/code&gt; .&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Mac&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Install a recent version of &lt;a href=&#34;https://developer.apple.com/xcode/&#34;&gt;XCode&lt;/a&gt;, including the so-called &#34;Command Line Tools&#34;. macOS and OS X ship with Python and git preinstalled.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Install a version of the &lt;a href=&#34;https://visualstudio.microsoft.com/visual-cpp-build-tools/&#34;&gt;Visual C++ Build Tools&lt;/a&gt; or &lt;a href=&#34;https://visualstudio.microsoft.com/vs/express/&#34;&gt;Visual Studio Express&lt;/a&gt; that matches the version that was used to compile your Python interpreter.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For more details and instructions, see the documentation on &lt;a href=&#34;https://spacy.io/usage#source&#34;&gt;compiling spaCy from source&lt;/a&gt; and the &lt;a href=&#34;https://spacy.io/usage#section-quickstart&#34;&gt;quickstart widget&lt;/a&gt; to get the right commands for your platform and Python version.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/explosion/spaCy&#xA;cd spaCy&#xA;&#xA;python -m venv .env&#xA;source .env/bin/activate&#xA;&#xA;# make sure you are using the latest pip&#xA;python -m pip install -U pip setuptools wheel&#xA;&#xA;pip install -r requirements.txt&#xA;pip install --no-build-isolation --editable .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install with extras:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install --no-build-isolation --editable .[lookups,cuda102]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🚦 Run tests&lt;/h2&gt; &#xA;&lt;p&gt;spaCy comes with an &lt;a href=&#34;https://raw.githubusercontent.com/explosion/spaCy/master/spacy/tests&#34;&gt;extensive test suite&lt;/a&gt;. In order to run the tests, you&#39;ll usually want to clone the repository and build spaCy from source. This will also install the required development dependencies and test utilities defined in the &lt;a href=&#34;https://raw.githubusercontent.com/explosion/spaCy/master/requirements.txt&#34;&gt;&lt;code&gt;requirements.txt&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can run &lt;code&gt;pytest&lt;/code&gt; on the tests from within the installed &lt;code&gt;spacy&lt;/code&gt; package. Don&#39;t forget to also install the test utilities via spaCy&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/explosion/spaCy/master/requirements.txt&#34;&gt;&lt;code&gt;requirements.txt&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;python -m pytest --pyargs spacy&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>ridgerchu/SpikeGPT</title>
    <updated>2023-03-03T02:29:01Z</updated>
    <id>tag:github.com,2023-03-03:/ridgerchu/SpikeGPT</id>
    <link href="https://github.com/ridgerchu/SpikeGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implementation of &#34;SpikeGPT: Generative Pre-trained Language Model with Spiking Neural Networks&#34;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SpikeGPT: Generative Pre-trained Language Model with Spiking Neural Networks&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34; float=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/ridgerchu/SpikeGPT/raw/master/static/spikegpt.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;SpikeGPT is a lightweight generative language model with pure binary, event-driven spiking activation units.&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in SpikeGPT, feel free to join our Discord by this &lt;a href=&#34;https://discord.gg/gdUpuTJ6QZ&#34;&gt;link&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;This repo is inspired by the &lt;a href=&#34;https://github.com/BlinkDL/RWKV-LM&#34;&gt;RWKV-LM&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Training on Enwik8&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the &lt;a href=&#34;https://data.deepai.org/enwik8.zip&#34;&gt;enwik8 dataset&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;train.py&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Inference with Prompt&lt;/h2&gt; &#xA;&lt;p&gt;You can choose to inference with your customized model or with our pre-trained model, our pre-trained model on BookCorpus is available &lt;a href=&#34;https://huggingface.co/ridger/SpikeGPT-BookCorpus/blob/main/BookCorpus-SpikeGPT.pth&#34;&gt;here&lt;/a&gt;. This model only trained 900M token on BookCorpus.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Modify the hyper-parameter of the network, which could be found in line 36-38 of the &lt;code&gt;run.py&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# For BookCorpus pre-trained model, you can change it if you trained your own model.&#xA;n_layer = 18&#xA;n_embd = 512&#xA;ctx_len = 1024&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;download our BookCorpus pre-trained model, and put it in thein the root directory of this repo.&lt;/li&gt; &#xA; &lt;li&gt;Modify the &#39;context&#39; variable in &lt;code&gt;run.py&lt;/code&gt; to your custom prompt&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;run.py&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find SpikeGPT useful in your work, please cite the following source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{zhu2023spikegpt,&#xA;        title = {SpikeGPT: Generative Pre-trained Language Model with Spiking Neural Networks},&#xA;        author = {Zhu, Rui-Jie and Zhao, Qihang and Eshraghian, Jason K.},&#xA;        journal = {arXiv preprint arXiv:2302.13939},&#xA;        year    = {2023}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>