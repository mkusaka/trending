<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-13T01:37:42Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>chao325/QmaoTai</title>
    <updated>2023-10-13T01:37:42Z</updated>
    <id>tag:github.com,2023-10-13:/chao325/QmaoTai</id>
    <link href="https://github.com/chao325/QmaoTai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;抢茅台2023最新，京东抢茅台，淘宝抢茅台 QmaoTai&lt;/p&gt;&lt;hr&gt;&lt;p&gt;抢茅台 iqmaotai&lt;/p&gt; &#xA;&lt;p&gt;注意：此代码为原作者代码，已失效。&lt;/p&gt; &#xA;&lt;h2&gt;&lt;del&gt;关于收费&lt;/del&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;2023年 10 月 6号 停止维护&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chao325/MaoTai_GUIT&#34;&gt;停止维护后&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;并在备注留下联系方式。（定制化开发其他软件请联系：&lt;a href=&#34;mailto:zcsupercn@foxmail.com&#34;&gt;zcsupercn@foxmail.com&lt;/a&gt;）&lt;/p&gt; &#xA;&lt;h1&gt;警惕骗子！！！&lt;/h1&gt; &#xA;&lt;p&gt;骗子自己没有start，就恶意的在我 lssues下辱骂。本人并没有接受他的任何赞助。如果还是这样，将永久停止仓库维护，大家都别赚了。&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;一堆别人的破代码卖 388 还扬言好货不便宜，便宜没好货&lt;/del&gt; &lt;strong&gt;骗子把价格降低到78了，388到78 可见降价幅度。代码明显是垃圾的&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;仓库地址为：&lt;a href=&#34;https://github.com/huawei-hw/JD-2023-10-8&#34;&gt;https://github.com/huawei-hw/JD-2023-10-8&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;这个人的抢购成功截图用的是我用户的！！他的无效软件卖388 并且恶意诋毁我二次开发的脚本。在这里郑重承诺，如果我的脚本不能用，流程错误。调用不到JD接口，本人愿意十倍赔偿所有赞助者，并且承担任何法律责任！！！&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;我不要求任何人赞助我，但是绝对不让骗子好过，一堆垃圾代码399 还恶意诋毁。中国开源社区都给你这种傻逼染臭了&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;老子98代码赞助，我每天给人远程，凌晨一点多还在回消邮件，忙的键盘都冒烟了，试问各位赞助者，你们哪个问题我有不管不问？基本都做到有问必答。&lt;/strong&gt; &lt;strong&gt;98的赞助，python源代码+软件都给你。随便你用。还要怎样。傻逼骗子去死吧&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;我刚刚才知道这个人是谁。是这样的他微信 在2023年9月26日加我好友。然后赞助了100块钱。期间，我不厌其烦。我在开车，晚上开长途回家走高速，都在解答他的问题。然后这个人程序自始至终都没出过问题。&lt;/p&gt; &#xA;&lt;p&gt;结果一一直在问我关于他自己学习的问题，我就很纳闷，为什么你自己的学习成本加在我头上？？&lt;/p&gt; &#xA;&lt;p&gt;即使这样，我还是解答他的问题，后面他没抢到，开始辱骂我。然后他发现自己骂错了。微信给我发消息说自己拉不来面子 才继续骂的我。我本人是非常支持他报警的。&lt;/p&gt; &#xA;&lt;p&gt;最后我声明几个事情：&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;我和他的聊天记录，可以公开，全程都保留。支持任何人报警求助&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;大家可以看看他的仓库，一个刚注册的GitHub新号去卖垃圾代码，还卖388 这个谁会去相信？上来的Github说明文件格式都和我相似。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;和恶意诋毁我的骗子聊天记录（部分）&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/chao325/QmaoTai/master/img/1.jpg&#34; width=&#34;60%&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/chao325/QmaoTai/master/img/2.png&#34; width=&#34;60%&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/chao325/QmaoTai/master/img/3.png&#34; width=&#34;60%&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/chao325/QmaoTai/master/img/4.png&#34; width=&#34;60%&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/chao325/QmaoTai/master/img/5.png&#34; width=&#34;60%&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;他的目的不仅是想要回去自己的100，也想继续以388的价格骗你们&lt;/strong&gt; &lt;strong&gt;老子不厌其烦解答问题，给他远程，半夜开高速都在回答他的问题。国庆假期也在回答。结果半夜凌晨两点多发消息骂我。现在开始诋毁我，还骗人钱。我真的是哭了。我他妈从来没遇到过这样的人。&lt;/strong&gt; &lt;strong&gt;现在想想真不值得，如果我晚上开长途还会消息，被车撞死了怎么办。我要绷不住了。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;不求大家赞助我，只求别让骗子得逞！！！&lt;/h2&gt; &#xA;&lt;p&gt;下面抢购成功是我的&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/chao325/QmaoTai/master/img/1431.png&#34;&gt; &#xA;&lt;h1&gt;更新日志&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;2023 年 9 月 21 号&lt;/strong&gt; JD有变，更改了多个函数计算错误等问题。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;get_seckill_url&lt;/li&gt; &#xA; &lt;li&gt;request_seckill_checkout_page&lt;/li&gt; &#xA; &lt;li&gt;make_reserve 等&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;处理Tik值 sk值有误问题&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;2023 年 9 月 19 号&lt;/strong&gt; 修复失效的eid和fp获取方法。 说明： &lt;br&gt; &lt;img src=&#34;img/23-9-19更新说明，必看.jpg&#34; width=&#34;50%&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;2023 年 9 月 13 号&lt;/strong&gt; 更新原作者留下报错问题 解决了服务器时间错误问题 修复了代码逻辑问题 优化了抢购逻辑，抢购更快&lt;/p&gt; &#xA;&lt;h2&gt;以下为原作者介绍&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;20210113&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;buy_time 可以不用再每天手动去进行设置修改，使用当天的日期&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Jd_Seckill&lt;/h3&gt; &#xA;&lt;h3&gt;特别声明:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;本仓库发布的&lt;code&gt;jd_seckill&lt;/code&gt;项目中涉及的任何脚本，仅用于测试和学习研究，禁止用于商业用途，不能保证其合法性，准确性，完整性和有效性，请根据情况自行判断。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;本项目内所有资源文件，禁止任何公众号、自媒体进行任何形式的转载、发布。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;huanghyw&lt;/code&gt; 对任何脚本问题概不负责，包括但不限于由任何脚本错误导致的任何损失或损害.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;间接使用脚本的任何用户，包括但不限于建立 VPS 或在某些行为违反国家/地区法律或相关法规的情况下进行传播, &lt;code&gt;huanghyw&lt;/code&gt; 对于由此引起的任何隐私泄漏或其他后果概不负责。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;请勿将&lt;code&gt;jd_seckill&lt;/code&gt;项目的任何内容用于商业或非法目的，否则后果自负。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果任何单位或个人认为该项目的脚本可能涉嫌侵犯其权利，则应及时通知并提供身份证明，所有权证明，我们将在收到认证文件后删除相关脚本。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;以任何方式查看此项目的人或直接或间接使用&lt;code&gt;jd_seckill&lt;/code&gt;项目的任何脚本的使用者都应仔细阅读此声明。&lt;code&gt;huanghyw&lt;/code&gt; 保留随时更改或补充此免责声明的权利。一旦使用并复制了任何相关脚本或&lt;code&gt;jd_seckill&lt;/code&gt;项目，则视为您已接受此免责声明。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;您必须在下载后的 24 小时内从计算机或手机中完全删除以上内容。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;本项目遵循&lt;code&gt;GPL-3.0 License&lt;/code&gt;协议，如果本特别声明与&lt;code&gt;GPL-3.0 License&lt;/code&gt;协议有冲突之处，以本特别声明为准。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;em&gt;您使用或者复制了本仓库且本人制作的任何代码或项目，则视为&lt;code&gt;已接受&lt;/code&gt;此声明，请仔细阅读&lt;/em&gt;&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;&lt;em&gt;您在本声明未发出之时点使用或者复制了本仓库且本人制作的任何代码或项目且此时还在使用，则视为&lt;code&gt;已接受&lt;/code&gt;此声明，请仔细阅读&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;简介&lt;/h3&gt; &#xA;&lt;p&gt;通过我这段时间的使用（2020-12-12 至 2020-12-17），证实这个脚本确实能抢到茅台。我自己三个账号抢了四瓶，帮两个朋友抢了 4 瓶。 大家只要确认自己配置文件没有问题，Cookie 没有失效，坚持下去总能成功的。&lt;/p&gt; &#xA;&lt;p&gt;根据这段时间大家的反馈，除了茅台，其它不需要加购物车的商品也不能抢。具体原因还没有进行排查，应该是京东非茅台商品抢购流程发生了变化。&lt;br&gt; 为了避免耽误大家的时间，先不要抢购非茅台商品。&lt;br&gt; 等这个问题处理好了，会上线新版本。&lt;/p&gt; &#xA;&lt;h3&gt;暗中观察&lt;/h3&gt; &#xA;&lt;p&gt;根据 12 月 14 日以来抢茅台的日志分析，大胆推断再接再厉返回 Json 消息中&lt;code&gt;resultCode&lt;/code&gt;与小白信用的关系。&lt;br&gt; 这里主要分析出现频率最高的&lt;code&gt;90016&lt;/code&gt;和&lt;code&gt;90008&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;样例 JSON&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#39;errorMessage&#39;: &#39;很遗憾没有抢到，再接再厉哦。&#39;, &#39;orderId&#39;: 0, &#39;resultCode&#39;: 90016, &#39;skuId&#39;: 0, &#39;success&#39;: False}&#xA;{&#39;errorMessage&#39;: &#39;很遗憾没有抢到，再接再厉哦。&#39;, &#39;orderId&#39;: 0, &#39;resultCode&#39;: 90008, &#39;skuId&#39;: 0, &#39;success&#39;: False}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;数据统计&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;案例&lt;/th&gt; &#xA;   &lt;th&gt;小白信用&lt;/th&gt; &#xA;   &lt;th&gt;90016&lt;/th&gt; &#xA;   &lt;th&gt;90008&lt;/th&gt; &#xA;   &lt;th&gt;抢到耗时&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;张三&lt;/td&gt; &#xA;   &lt;td&gt;63.8&lt;/td&gt; &#xA;   &lt;td&gt;59.63%&lt;/td&gt; &#xA;   &lt;td&gt;40.37%&lt;/td&gt; &#xA;   &lt;td&gt;暂未抢到&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;李四&lt;/td&gt; &#xA;   &lt;td&gt;92.9&lt;/td&gt; &#xA;   &lt;td&gt;72.05%&lt;/td&gt; &#xA;   &lt;td&gt;27.94%&lt;/td&gt; &#xA;   &lt;td&gt;4 天&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;王五&lt;/td&gt; &#xA;   &lt;td&gt;99.6&lt;/td&gt; &#xA;   &lt;td&gt;75.70%&lt;/td&gt; &#xA;   &lt;td&gt;24.29%&lt;/td&gt; &#xA;   &lt;td&gt;暂未抢到&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;赵六&lt;/td&gt; &#xA;   &lt;td&gt;103.4&lt;/td&gt; &#xA;   &lt;td&gt;91.02%&lt;/td&gt; &#xA;   &lt;td&gt;8.9%&lt;/td&gt; &#xA;   &lt;td&gt;2 天&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;猜测&lt;/h3&gt; &#xA;&lt;p&gt;推测返回 90008 是京东的风控机制，代表这次请求直接失败，不参与抢购。&lt;br&gt; 小白信用越低越容易触发京东的风控。&lt;/p&gt; &#xA;&lt;p&gt;从数据来看小白信用与风控的关系大概每十分为一个等级，所以赵六基本上没有被拦截，李四和王五的拦截几率相近，张三的拦截几率最高。&lt;/p&gt; &#xA;&lt;p&gt;风控放行后才会进行抢购，这时候用的应该是水库计数模型，假设无法一次性拿到所有数据的情况下来尽量的做到抢购成功用户的均匀分布，这样就和概率相关了。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;综上，张三想成功有点困难，小白信用是 100+的用户成功几率最大。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;主要功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;登陆京东商城（&lt;a href=&#34;http://www.jd.com/&#34;&gt;www.jd.com&lt;/a&gt;） &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;用京东 APP 扫码给出的二维码&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;预约茅台 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;定时自动预约&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;秒杀预约后等待抢购 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;定时开始自动抢购&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;运行环境&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/&#34;&gt;Python 3&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;第三方库&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;需要使用到的库已经放在 requirements.txt，使用 pip 安装的可以使用指令&lt;br&gt; &lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;如果国内安装第三方库比较慢，可以使用以下指令进行清华源加速 &lt;code&gt;pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple/&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用教程&lt;/h2&gt; &#xA;&lt;h4&gt;1. 推荐 Chrome 浏览器&lt;/h4&gt; &#xA;&lt;h4&gt;2. 网页扫码登录，或者账号密码登录&lt;/h4&gt; &#xA;&lt;h4&gt;3. 填写 config.ini 配置信息&lt;/h4&gt; &#xA;&lt;p&gt;(1)&lt;code&gt;eid&lt;/code&gt;和&lt;code&gt;fp&lt;/code&gt;找个普通商品随便下单,然后抓包就能看到,这两个值可以填固定的&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;现在已经支持自动获取，因为添加了一个新的三方库，需要在程序运行之前再执行一次安装第三方库的命令&lt;br&gt; 如果想手动获取，随便找一个商品下单，然后进入结算页面，打开浏览器的调试窗口，切换到控制台 Tab 页，在控制台中输入变量&lt;code&gt;_JdTdudfp&lt;/code&gt;，即可从输出的 Json 中获取&lt;code&gt;eid&lt;/code&gt;和&lt;code&gt;fp&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;(2)&lt;code&gt;sku_id&lt;/code&gt;,&lt;code&gt;default_user_agent&lt;/code&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;sku_id&lt;/code&gt;已经按照茅台的填好。 &lt;code&gt;cookies_string&lt;/code&gt; 现在已经不需要填写了 &lt;code&gt;default_user_agent&lt;/code&gt; 可以用默认的。谷歌浏览器也可以浏览器地址栏中输入 about:version 查看&lt;code&gt;USER_AGENT&lt;/code&gt;替换&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;(3)配置一下时间&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;现在不强制要求同步最新时间了，程序会自动同步京东时间&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;但要是电脑时间快慢了好几个小时，最好还是同步一下吧&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;以上都是必须的.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;tips： 在程序开始运行后，会检测本地时间与京东服务器时间，输出的差值为本地时间-京东服务器时间，即-50 为本地时间比京东服务器时间慢 50ms。 本代码的执行的抢购时间以本地电脑/服务器时间为准&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;(4)修改抢购瓶数&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;代码中默认抢购瓶数为 2，且无法在配置文件中修改 如果一个月内抢购过一瓶，最好修改抢购瓶数为 1 具体修改为：在&lt;code&gt;jd_spider_requests.py&lt;/code&gt;文件中搜索&lt;code&gt;self.seckill_num = 2&lt;/code&gt;，将&lt;code&gt;2&lt;/code&gt;改为&lt;code&gt;1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;4.运行 main.py&lt;/h4&gt; &#xA;&lt;p&gt;根据提示选择相应功能即可。如果出现请扫码登录的提示可查看项目目录下是否存在&lt;code&gt;qr_code.png&lt;/code&gt;文件,若存在打开图片，并使用京东手机 APP 扫码登录即可。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Linux 下命令行方式显示二维码（以 Ubuntu 为例）&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo apt-get install qrencode zbar-tools # 安装二维码解析和生成的工具，用于读取二维码并在命令行输出。&#xA;$ zbarimg qr_code.png &amp;gt; qrcode.txt &amp;amp;&amp;amp; cat qrcode.txt | qrencode -o - -t UTF8 # 解析二维码输出到命令行窗口。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;5.抢购结果确认&lt;/h4&gt; &#xA;&lt;p&gt;抢购是否成功通常在程序开始的一分钟内可见分晓！&lt;br&gt; 搜索日志，出现“抢购成功，订单号 xxxxx&#34;，代表成功抢到了，务必半小时内支付订单！程序暂时不支持自动停止，需要手动 STOP！&lt;br&gt; 若两分钟还未抢购成功，基本上就是没抢到！程序暂时不支持自动停止，需要手动 STOP！&lt;/p&gt; &#xA;&lt;h2&gt;Docker 运行&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;自行准备&lt;code&gt;docker&lt;/code&gt;或&lt;code&gt;docker-compose&lt;/code&gt;环境&lt;/li&gt; &#xA;  &lt;li&gt;修改&lt;code&gt;dockerfile&lt;/code&gt;目录中的配置文件&lt;code&gt;docker.env&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;目前支持直接使用&lt;code&gt;docker&lt;/code&gt;的方式进行管理，也支持&lt;code&gt;docker-compose&lt;/code&gt;的方式进行管理，根据自己的使用习惯进行选择&lt;/li&gt; &#xA;  &lt;li&gt;推荐使用&lt;code&gt;docker-compose&lt;/code&gt;的方式，更方便一点&lt;/li&gt; &#xA;  &lt;li&gt;最新代码合并到主分之后，镜像服务器构建新的镜像会需要大概 30 分钟的时间，请分支合并后一小时再拉取最新镜像&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;使用 Docker-Compose 进行容器管理（推荐）&lt;/h3&gt; &#xA;&lt;h4&gt;拉取镜像&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 如果不执行此步骤则启动容器时自动进行本地构建镜像&#xA;$ sudo docker-compose -f compose/docker-compose.yml pull&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;启动容器&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 如镜像不存在会自动本地构建一个镜像&#xA;$ sudo docker-compose -f compose/docker-compose.yml up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;注意：&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;默认运行选项为秒杀&lt;/li&gt; &#xA;  &lt;li&gt;容器默认前端运行，如果需要停止容器连续按两次&lt;code&gt;Ctrl+C&lt;/code&gt;。&lt;/li&gt; &#xA;  &lt;li&gt;如果想后端运行，执行命令&lt;code&gt;sudo docker-compose -f compose/docker-compose.yml up -d&lt;/code&gt;。&lt;/li&gt; &#xA;  &lt;li&gt;如果存在名称为&lt;code&gt;jd-seckill&lt;/code&gt;的非&lt;code&gt;docker-compose&lt;/code&gt;创建的容器，需要执行&lt;code&gt;sudo docker rm -f jd-seckill&lt;/code&gt;先进行删除。&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;查看登录二维码&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo docker-compose -f compose/docker-compose.yml exec jd-seckill qrcode&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;停止容器&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo docker-compose -f compose/docker-compose.yml down -t 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;滚动打印运行日志&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo docker-compose -f compose/docker-compose.yml logs -f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;查看容器状态&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo docker-compose -f compose/docker-compose.yml ps&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;使用 Docker 直接进行容器管理&lt;/h3&gt; &#xA;&lt;h4&gt;创建镜像&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;一共两种方式可以创建镜像，任选其一即可&lt;br&gt; 如果本地构建镜像失败，可以尝试拉取镜像的方式&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 第一种，直接从`DockerHub`仓库拉取镜像&#xA;$ sudo docker pull huanghyw/jd-seckill:latest&#xA;&#xA;# 第二种，本地构建镜像&#xA;$ cd dockerfile&#xA;$ sudo docker build -t huanghyw/jd-seckill:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;启动容器&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd dockerfile&#xA;$ sudo docker run -it --rm --env-file docker.env --name jd-seckill huanghyw/jd-seckill:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;查看登录二维码&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo docker exec jd-seckill qrcode&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;停止容器&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo docker stop jd-seckill -t 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;滚动打印运行日志&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo docker logs jd-seckill -f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;查看容器状态&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo docker ps -a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;感谢&lt;/h2&gt; &#xA;&lt;h5&gt;非常感谢原作者 &lt;a href=&#34;https://github.com/zhou-xiaojun/jd_mask&#34;&gt;https://github.com/zhou-xiaojun/jd_mask&lt;/a&gt; 提供的代码&lt;/h5&gt; &#xA;&lt;h5&gt;也非常感谢 &lt;a href=&#34;https://github.com/wlwwu/jd_maotai&#34;&gt;https://github.com/wlwwu/jd_maotai&lt;/a&gt; 进行的优化&lt;/h5&gt;</summary>
  </entry>
</feed>