<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-03T01:32:40Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>webhdx/PicoBoot</title>
    <updated>2022-07-03T01:32:40Z</updated>
    <id>tag:github.com,2022-07-03:/webhdx/PicoBoot</id>
    <link href="https://github.com/webhdx/PicoBoot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Raspberry Pi Pico (RP2040) based IPL replacement modchip for GameCube&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/webhdx/PicoBoot/main/assets/PicoBoot.png&#34; alt=&#34;PicoBoot&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;PicoBoot&lt;/h1&gt; &#xA;&lt;p&gt;This is a long awaited IPL replacement modchip for Nintendo GameCube. It&#39;s open source, cheap and easy to install.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;it&#39;s open source&lt;/li&gt; &#xA; &lt;li&gt;uses $4 Raspberry Pi Pico board&lt;/li&gt; &#xA; &lt;li&gt;very easy installation, only 5 wires to solder&lt;/li&gt; &#xA; &lt;li&gt;programmable via USB cable, without any drivers and programs&lt;/li&gt; &#xA; &lt;li&gt;automatically boots any DOL app of your choice&lt;/li&gt; &#xA; &lt;li&gt;uses &#34;IPL injection&#34; approach superior to mods like XenoGC&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Video guides and overview of the features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=qwL4ZSa0xMo&#34;&gt;PicoBoot Modchip Will Unleash The POWER of Your Nintendo GAMECUBE! | Installation Guide and Overview&lt;/a&gt; by &lt;a href=&#34;https://www.youtube.com/c/MachoNachoProductions&#34;&gt;MachoNachoProductions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=lfMTLEM0yeQ&#34;&gt;This new Gamecube Modchip is a GAMECHANGER - PicoBoot&lt;/a&gt; by &lt;a href=&#34;https://www.youtube.com/c/RockerGaming&#34;&gt;RockerGaming&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=W_9-mSBMBJ4&#34;&gt;$5 Gamecube IPL Modchip?! Picoboot Dol-001 + Dol-101 Installation / Setup / Showcase&lt;/a&gt; by &lt;a href=&#34;https://www.youtube.com/c/ModzvilleUSA&#34;&gt;ModzvilleUSA!&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üõ† Installation guide&lt;/h2&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/3nc12du&#34;&gt;Raspberry Pi Pico&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amzn.to/3HPBuwe&#34;&gt;SD Gecko&lt;/a&gt; or &lt;a href=&#34;https://amzn.to/3I1cCSl&#34;&gt;SD2SP2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;FAT32 or exFAT formatted SD card&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Links above are affiliate and I get small comission üíµ if you buy these products. Thanks to everyone who used links above üôè&lt;/p&gt; &#xA;&lt;h2&gt;Flashing Raspberry Pi Pico board&lt;/h2&gt; &#xA;&lt;p&gt;Go to &lt;a href=&#34;https://github.com/webhdx/PicoBoot/releases/latest&#34;&gt;the latest release page&lt;/a&gt; and download &lt;code&gt;picoboot.uf2&lt;/code&gt; file. Now connect Raspberry Pi Pico board to your computer while holding &lt;code&gt;BOOTSEL&lt;/code&gt; button pressed. If it&#39;s been done correctly you&#39;ll see &lt;code&gt;RPI-RP2&lt;/code&gt; mass storage device show up. Drag and drop &lt;code&gt;picoboot.uf2&lt;/code&gt; file to that device. It&#39;ll automatically eject and green LED will light up if it was programmed correctly. Unplug USB cable from Pico and proceed with hardware installation.&lt;/p&gt; &#xA;&lt;h2&gt;Preparing SD card&lt;/h2&gt; &#xA;&lt;p&gt;Format your SD card to FAT32 or exFAT. Download the latest Swiss release from &lt;a href=&#34;https://github.com/emukidid/swiss-gc/releases/latest&#34;&gt;here&lt;/a&gt; and grab &lt;code&gt;swiss_rXXXX.dol&lt;/code&gt; file, rename it to &lt;code&gt;ipl.dol&lt;/code&gt; and copy to the root of your SD card.&lt;/p&gt; &#xA;&lt;h2&gt;Hardware diagrams&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/webhdx/PicoBoot/main/assets/Installation%20Diagram%20(DOL-001).jpg&#34;&gt;Installation diagram for DOL-001&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/webhdx/PicoBoot/main/assets/Installation%20Diagram%20(DOL-101).jpg&#34;&gt;Installation diagram for DOL-101&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;I don&#39;t understand how it&#39;s better than XenoGC&lt;/h3&gt; &#xA;&lt;p&gt;XenoGC is a drive modchip, it can only patch disc data on the fly. This means you have to use a boot disk to run Swiss and play games from an SD card. PicoBoot uses completely different approach - injects custom payload during console boot sequence. This means it can load any application instead of a built in GameCube menu. It will work even if your disc drive is not working.&lt;/p&gt; &#xA;&lt;h3&gt;I installed your modchip and now my console doesn&#39;t work&lt;/h3&gt; &#xA;&lt;p&gt;Sorry. I do not take reponsibility for any damage done by installing this modchip. Do it at your own risk!&lt;/p&gt; &#xA;&lt;h3&gt;Can I use other RP2040 boards?&lt;/h3&gt; &#xA;&lt;p&gt;Yes, go for it. Just respect the &lt;a href=&#34;https://raw.githubusercontent.com/webhdx/PicoBoot/main/LICENSE&#34;&gt;license agreements&lt;/a&gt; and don&#39;t expect me to provide any support for your board. PicoBoot only supports official Raspberry Pi Pico module at the moment.&lt;/p&gt; &#xA;&lt;h3&gt;Will it work if I have XenoGC installed?&lt;/h3&gt; &#xA;&lt;p&gt;Yes, you can use it with XenoGC intalled.&lt;/p&gt; &#xA;&lt;h3&gt;I appreciate your work. Can I support you in any way?&lt;/h3&gt; &#xA;&lt;p&gt;This project is free and available for everyone. If you want to support it anyway, consider using &lt;a href=&#34;https://github.com/sponsors/webhdx&#34;&gt;&lt;span&gt;‚ù§Ô∏è&lt;/span&gt; Sponsor&lt;/a&gt; button.&lt;/p&gt; &#xA;&lt;h2&gt;Compiling firmware&lt;/h2&gt; &#xA;&lt;p&gt;Make sure your Raspberry Pi Pico environment is set up on your machine.&lt;/p&gt; &#xA;&lt;p&gt;Build Makefile and all required build scripts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# cmake .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then grab any DOL file you&#39;d like to boot and run processing script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# ./process_ipl.py iplboot.dol ipl.h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Do not change &lt;code&gt;ipl.h&lt;/code&gt; output file name.&lt;/p&gt; &#xA;&lt;p&gt;Once it&#39;s ready and &lt;code&gt;ipl.h&lt;/code&gt; file has been created you can build the firmware:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If everything worked you should see new file &lt;code&gt;picoboot.uf2&lt;/code&gt; created in the main project directory. Now hold &lt;code&gt;BOOTSEL&lt;/code&gt; button on Raspberry Pi Pico and connect USB cable. New mass storage device will appear. Copy &lt;code&gt;picoboot.uf2&lt;/code&gt; file to &lt;code&gt;RPI-RP2&lt;/code&gt; device. Once it&#39;s done it&#39;ll automatically eject itself. Disconnect the cable and you&#39;re all done.&lt;/p&gt; &#xA;&lt;h2&gt;Hall of Fame&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;d like to thank people who helped making PicoBoot possible:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;#gc-forever crew: &lt;a href=&#34;https://github.com/Extrems&#34;&gt;Extrems&lt;/a&gt;, &lt;a href=&#34;https://github.com/9ary&#34;&gt;novenary&lt;/a&gt;, &lt;a href=&#34;https://github.com/emukidid&#34;&gt;emu_kidid&lt;/a&gt; and others&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tmbinc&#34;&gt;tmbinc&lt;/a&gt; - he started it all üôè&lt;/li&gt; &#xA; &lt;li&gt;happy_bunny - I started my research with his great writeup on &lt;a href=&#34;https://www.retro-system.com/shuriken_attack.htm&#34;&gt;Shuriken Attack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;beta testers: &lt;a href=&#34;https://github.com/seewood&#34;&gt;seewood&lt;/a&gt;, &lt;a href=&#34;https://github.com/MethodOrMadness&#34;&gt;MethodOrMadness&lt;/a&gt;, &lt;a href=&#34;https://github.com/renanbianchi&#34;&gt;renanbianchi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;content creators: &lt;a href=&#34;https://www.youtube.com/c/MachoNachoProductions&#34;&gt;MachoNachoProductions&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/c/RockerGaming&#34;&gt;RockerGaming&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/c/ModzvilleUSA&#34;&gt;ModzvilleUSA!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;people who sponsored this project&lt;/li&gt; &#xA; &lt;li&gt;every PicoBoot enjoyer - it&#39;s all about you after all üòâ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Some parts of this project use GPL-2.0 licensed code from: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/redolution/iplboot&#34;&gt;https://github.com/redolution/iplboot&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>mxrch/GHunt</title>
    <updated>2022-07-03T01:32:40Z</updated>
    <id>tag:github.com,2022-07-03:/mxrch/GHunt</id>
    <link href="https://github.com/mxrch/GHunt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üïµÔ∏è‚Äç‚ôÇÔ∏è Offensive Google framework.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://files.catbox.moe/8a5nzs.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-3.8%2B-brightgreen&#34; alt=&#34;Python minimum version&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/docker/cloud/build/mxrch/ghunt&#34; alt=&#34;Docker Cloud Build Status&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/mxrch/ghunt/CodeQL?label=CodeQL&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Description&lt;/h1&gt; &#xA;&lt;p&gt;GHunt is a modulable OSINT tool designed to evolve over the years, and incorporates many techniques to investigate Google accounts, or objects.&lt;br&gt; It currently has &lt;strong&gt;email&lt;/strong&gt;, &lt;strong&gt;document&lt;/strong&gt;, &lt;strong&gt;youtube&lt;/strong&gt; and &lt;strong&gt;gaia&lt;/strong&gt; modules.&lt;/p&gt; &#xA;&lt;p&gt;üî• &lt;strong&gt;&lt;em&gt;GHunt is being completely refactored&lt;/em&gt;&lt;/strong&gt;, to allow use as a Python library, removing Selenium and Google Chrome dependencies, using definition types and async, to prepare for v2.&lt;br&gt; You can track the progress on this project here: &lt;a href=&#34;https://github.com/mxrch/GHunt/projects/1&#34;&gt;https://github.com/mxrch/GHunt/projects/1&lt;/a&gt; &lt;br&gt; And on this branch : &lt;a href=&#34;https://github.com/mxrch/GHunt/tree/refactor&#34;&gt;https://github.com/mxrch/GHunt/tree/refactor&lt;/a&gt; &lt;br&gt; Please understand that the activity of the master branch will now be reduced, and therefore the pull requests too.&lt;/p&gt; &#xA;&lt;h2&gt;What can GHunt find ?&lt;/h2&gt; &#xA;&lt;p&gt;üó∫Ô∏è &lt;strong&gt;Email&lt;/strong&gt; module:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Owner&#39;s name&lt;/li&gt; &#xA; &lt;li&gt;Gaia ID&lt;/li&gt; &#xA; &lt;li&gt;Last time the profile was edited&lt;/li&gt; &#xA; &lt;li&gt;Profile picture (+ detect custom picture)&lt;/li&gt; &#xA; &lt;li&gt;If the account is a Hangouts Bot&lt;/li&gt; &#xA; &lt;li&gt;Activated Google services (YouTube, Photos, Maps, News360, Hangouts, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Possible YouTube channel&lt;/li&gt; &#xA; &lt;li&gt;Possible other usernames&lt;/li&gt; &#xA; &lt;li&gt;Google Maps reviews (M)&lt;/li&gt; &#xA; &lt;li&gt;Possible physical location (M)&lt;/li&gt; &#xA; &lt;li&gt;Events from Google Calendar (C)&lt;/li&gt; &#xA; &lt;li&gt;Organizations (work &amp;amp; education) (A)&lt;/li&gt; &#xA; &lt;li&gt;Contact emails (A)&lt;/li&gt; &#xA; &lt;li&gt;Contact phones (A)&lt;/li&gt; &#xA; &lt;li&gt;Addresses (A)&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;Public photos (P)&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;Phones models (P)&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;Phones firmwares (P)&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;Installed softwares (P)&lt;/del&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üó∫Ô∏è &lt;strong&gt;Document&lt;/strong&gt; module:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Owner&#39;s name&lt;/li&gt; &#xA; &lt;li&gt;Owner&#39;s Gaia ID&lt;/li&gt; &#xA; &lt;li&gt;Owner&#39;s profile picture (+ detect custom picture)&lt;/li&gt; &#xA; &lt;li&gt;Creation date&lt;/li&gt; &#xA; &lt;li&gt;Last time the document was edited&lt;/li&gt; &#xA; &lt;li&gt;Public permissions&lt;/li&gt; &#xA; &lt;li&gt;Your permissions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üó∫Ô∏è &lt;strong&gt;Youtube&lt;/strong&gt; module:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Owner&#39;s Gaia ID (through Wayback Machine)&lt;/li&gt; &#xA; &lt;li&gt;Detect if the email is visible&lt;/li&gt; &#xA; &lt;li&gt;Country&lt;/li&gt; &#xA; &lt;li&gt;Description&lt;/li&gt; &#xA; &lt;li&gt;Total views&lt;/li&gt; &#xA; &lt;li&gt;Joined date&lt;/li&gt; &#xA; &lt;li&gt;Primary links (social networks)&lt;/li&gt; &#xA; &lt;li&gt;All infos accessible by the Gaia module&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;üó∫Ô∏è &lt;strong&gt;Gaia&lt;/strong&gt; module:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Owner&#39;s name&lt;/li&gt; &#xA; &lt;li&gt;Profile picture (+ detect custom picture)&lt;/li&gt; &#xA; &lt;li&gt;Possible YouTube channel&lt;/li&gt; &#xA; &lt;li&gt;Possible other usernames&lt;/li&gt; &#xA; &lt;li&gt;Google Maps reviews (M)&lt;/li&gt; &#xA; &lt;li&gt;Possible physical location (M)&lt;/li&gt; &#xA; &lt;li&gt;Organizations (work &amp;amp; education) (A)&lt;/li&gt; &#xA; &lt;li&gt;Contact emails (A)&lt;/li&gt; &#xA; &lt;li&gt;Contact phones (A)&lt;/li&gt; &#xA; &lt;li&gt;Addresses (A)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The features marked with a &lt;strong&gt;(P)&lt;/strong&gt; require the target account to have the default setting of &lt;code&gt;Allow the people you share content with to download your photos and videos&lt;/code&gt; on the Google AlbumArchive, or if the target has ever used Picasa linked to their Google account.&lt;br&gt; More info &lt;a href=&#34;https://github.com/mxrch/GHunt#%EF%B8%8F-protecting-yourself&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Those marked with a &lt;strong&gt;(M)&lt;/strong&gt; require the Google Maps reviews of the target to be public (they are by default).&lt;/p&gt; &#xA;&lt;p&gt;Those marked with a &lt;strong&gt;(C)&lt;/strong&gt; require user to have Google Calendar set on public (default it is closed).&lt;/p&gt; &#xA;&lt;p&gt;Those marked with a &lt;strong&gt;(A)&lt;/strong&gt; require user to have the additional info set &lt;a href=&#34;https://myaccount.google.com/profile&#34;&gt;on profile&lt;/a&gt; with privacy option &#34;Anyone&#34; enabled.&lt;/p&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://files.catbox.moe/2zb1z9.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;üì∞ Latest news&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;02/10/2020&lt;/strong&gt; : Since a few days ago, Google returns a 404 when we try to access someone&#39;s Google Photos public albums, we can only access it if we have a link to one of their albums.&lt;br&gt; Either this is a bug and this will be fixed, either it&#39;s a protection that we need to find how to bypass.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;03/10/2020&lt;/strong&gt; : Successfully bypassed. üï∫ (commit 01dc016)&lt;br&gt; It requires the &#34;Profile photos&#34; album to be public (it is by default)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20/10/2020&lt;/strong&gt; : Google WebArchive now returns a 404 even when coming from the &#34;Profile photos&#34; album, so &lt;strong&gt;the photos scraping is temporary (or permanently) disabled.&lt;/strong&gt; (commit e762543)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;25/11/2020&lt;/strong&gt; : Google now removes the name from the Google Maps profile if the user has 0 reviews (or contributions, even private). I did not find a bypass for the moment, so &lt;strong&gt;all the help in the research of a bypass is appreciated.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20/03/2021&lt;/strong&gt; : Successfully bypassed. üï∫ (commit b3b01bc)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;Manual installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure you have Python 3.8+ installed. (I developed it with Python 3.8.1)&lt;/li&gt; &#xA; &lt;li&gt;Some Python modules are required which are contained in &lt;code&gt;requirements.txt&lt;/code&gt; and will be installed below.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1. Chromedriver &amp;amp; Google Chrome&lt;/h3&gt; &#xA;&lt;p&gt;This project uses Selenium and automatically downloads the correct driver for your Chrome version. &lt;br&gt; ‚ö†Ô∏è So just make sure to have Google Chrome installed.&lt;/p&gt; &#xA;&lt;h3&gt;2. Cloning&lt;/h3&gt; &#xA;&lt;p&gt;Open your terminal, and execute the following commands :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/mxrch/ghunt&#xA;cd ghunt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Requirements&lt;/h3&gt; &#xA;&lt;p&gt;In the GHunt folder, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Adapt the command to your operating system if needed.&lt;/p&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;The Docker image is automatically built and pushed to Dockerhub after each push on this repo.&lt;br&gt; You can pull the Docker image with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull ghcr.io/mxrch/ghunt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you can use the &lt;code&gt;docker_check_and_gen.sh&lt;/code&gt; and &lt;code&gt;docker_hunt.sh&lt;/code&gt; to invoke GHunt through Docker, or you can use these commands :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -v ghunt-resources:/usr/src/app/resources -ti ghcr.io/mxrch/ghunt check_and_gen.py&#xA;docker run -v ghunt-resources:/usr/src/app/resources -ti ghcr.io/mxrch/ghunt ghunt.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;For the first run and sometime after, you&#39;ll need to check the validity of your cookies.&lt;br&gt; To do this, run &lt;code&gt;check_and_gen.py&lt;/code&gt;. &lt;br&gt; If you don&#39;t have cookies stored (ex: first launch), you will be asked for the required cookies. If they are valid, it will generate the Authentication token and the Google Docs &amp;amp; Hangouts tokens.&lt;/p&gt; &#xA;&lt;p&gt;Then, you can run the tool like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 ghunt.py email larry@google.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 ghunt.py doc https://docs.google.com/spreadsheets/d/1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;‚ö†Ô∏è I suggest you make an empty account just for this or use an account where you never login because depending on your browser/location, re-logging in into the Google Account used for the cookies can deauthorize them.&lt;/p&gt; &#xA;&lt;h1&gt;Where I get these cookies ?&lt;/h1&gt; &#xA;&lt;h2&gt;Auto (faster)&lt;/h2&gt; &#xA;&lt;p&gt;You can download the GHunt Companion extension that will automate the cookies extraction in 1-click !&lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://addons.mozilla.org/fr/firefox/addon/ghunt-companion/&#34;&gt;&lt;img src=&#34;https://ffp4g1ylyit3jdyti1hqcvtb-wpengine.netdna-ssl.com/addons/files/2015/11/get-the-addon.png&#34; alt=&#34;Firefox&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://chrome.google.com/webstore/detail/ghunt-companion/dpdcofblfbmmnikcbmmiakkclocadjab&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/web-dev-uploads/image/WlD8wC6g8khYWPJUsQceQkhXSlv1/UV4C4ybeBTsZt43U4xis.png&#34; alt=&#34;Chrome&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://microsoftedge.microsoft.com/addons/detail/ghunt-companion/jhgmpcigklnbjglpipnbnjhdncoihhdj&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/11660256/111323589-4f4c7c00-866a-11eb-80ff-da7de777d7c0.png&#34; alt=&#34;Edge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You just need to launch the check_and_gen.py file and choose the extraction mode you want to use, between putting GHunt in listening mode, or copy/paste the encoded cookies in base64.&lt;/p&gt; &#xA;&lt;h2&gt;Manual&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Be logged-in to myaccount.google.com&lt;/li&gt; &#xA; &lt;li&gt;After that, open the Dev Tools window and navigate to the Network tab&lt;br&gt; If you don&#39;t know how to open it, just right-click anywhere and click &#34;Inspect Element&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Go to myaccount.google.com, and in the browser requests, select the GET on &#34;accounts.google.com&#34; that gives a 302 redirect&lt;/li&gt; &#xA; &lt;li&gt;Then you&#39;ll find every cookie you need in the &#34;cookies&#34; section.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://files.catbox.moe/15j8pg.png&#34; alt=&#34;cookies&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;üõ°Ô∏è Protecting yourself&lt;/h1&gt; &#xA;&lt;p&gt;Regarding the collection of metadata from your Google Photos account:&lt;/p&gt; &#xA;&lt;p&gt;Given that Google shows &lt;strong&gt;&#34;X require access&#34;&lt;/strong&gt; on &lt;a href=&#34;https://myaccount.google.com/intro/dashboard&#34;&gt;your Google Account Dashboard&lt;/a&gt;, you might imagine that you had to explicitly authorize another account in order for it to access your pictures; but this is not the case.&lt;br&gt; Any account can access your AlbumArchive (by default):&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://files.catbox.moe/ufqc9g.jpg&#34; alt=&#34;account-dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s how to check and fix the fact that you&#39;re vulnerable (which you most likely are):&lt;br&gt; Go to &lt;a href=&#34;https://get.google.com/albumarchive/&#34;&gt;https://get.google.com/albumarchive/&lt;/a&gt; while logged in with your Google account. You will be &lt;strong&gt;automatically&lt;/strong&gt; redirected to your correct albumarchive URL (&lt;code&gt;https://get.google.com/albumarchive/YOUR-GOOGLE-ID-HERE&lt;/code&gt;). After that, click the three dots on the top left corner, and click on &lt;strong&gt;setting&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://files.catbox.moe/ru6kci.jpg&#34; alt=&#34;three-dots-setting&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then, uncheck the only option there:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://files.catbox.moe/b8879l.jpg&#34; alt=&#34;setting&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;On another note, the target account will &lt;strong&gt;also&lt;/strong&gt; be vulnerable if they have ever used &lt;strong&gt;Picasa&lt;/strong&gt; linked to their Google account in any way, shape or form. For more details on this, read ItsIgnacioPortal&#39;s comment on &lt;a href=&#34;https://github.com/mxrch/GHunt/issues/10&#34;&gt;issue #10&lt;/a&gt;.&lt;br&gt; For now, the only (known) solution to this is to delete the Picasa albums from your AlbumArchive.&lt;/p&gt; &#xA;&lt;h1&gt;Thanks&lt;/h1&gt; &#xA;&lt;p&gt;This tool is based on &lt;a href=&#34;https://sector035.nl/articles/getting-a-grasp-on-google-ids&#34;&gt;Sector&#39;s research on Google IDs&lt;/a&gt; and completed by my own as well.&lt;br&gt; If I have the motivation to write a blog post about it, I&#39;ll add the link here !&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Palenath (for the name bypass)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>liuzhijie443/ZhiMiao_JiuJia</title>
    <updated>2022-07-03T01:32:40Z</updated>
    <id>tag:github.com,2022-07-03:/liuzhijie443/ZhiMiao_JiuJia</id>
    <link href="https://github.com/liuzhijie443/ZhiMiao_JiuJia" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Áü•ËãóÊòìÁ∫¶‰πù‰ª∑Êä¢Ë¥≠&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ZhiMiao_JiuJia&lt;/h1&gt; &#xA;&lt;h3&gt;ÁõÆÊ†á&lt;/h3&gt; &#xA;&lt;p&gt;[2022-04-17ÁºñÂÜô]&lt;/p&gt; &#xA;&lt;p&gt;[2022-06-20ÂèØÁî®]&lt;/p&gt; &#xA;&lt;p&gt;‰∏Ä‰∏™ÁÆÄÂçïÁöÑ‰πù‰ª∑Êä¢Ë¥≠pythonËÑöÊú¨ÔºåÁî®‰∫éÊä¢Ë¥≠Áü•ËãóÊòìÁ∫¶Áñ´ËãóÔºåËØ∑ÂãøÁî®‰∫éÁõàÂà©ÔºåÂÖçË¥πÊèê‰æõÔºå‰ªÖ‰æõÂ≠¶‰π†„ÄÇ&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;‰ΩøÁî®ÊñπÊ≥ï&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;ÂèÇÊï∞ÈÖçÁΩÆÔºö&lt;/strong&gt; jiujia.ini&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[jiujia]&#xA;cookie=&#xA;wait_speed=1000&#xA;buy_speed=1000&#xA;p_id=54&#xA;id=492&#xA;# cookie Â∞èÁ®ãÂ∫èÊäìÂåÖcookie&#xA;# wait_speed Á≠âÂæÖÂºÄÂßãÂà∑Êñ∞Êó∂Èó¥ÔºåÂçï‰ΩçÊØ´Áßí&#xA;# buy_speed Êä¢Ë¥≠Èó¥ÈöîÔºåÂçï‰ΩçÊØ´Áßí&#xA;# p_id 1ÊòØ‰πù‰ª∑Ôºà‰πù‰ª∑‰∫∫‰π≥Â§¥Áò§ÁóÖÊØíÁñ´ËãóÔºâÔºå2ÊòØÂõõ‰ª∑ÔºàÂõõ‰ª∑‰∫∫‰π≥Â§¥Áò§ÁóÖÊØíÁñ´ËãóÔºâÔºå3ÊòØ‰∫å‰ª∑Ôºà‰∫å‰ª∑‰∫∫‰π≥Â§¥Áò§ÁóÖÊØíÁñ´Ëãó-ËøõÂè£ÔºâÔºå54ÊòØ‰∫å‰ª∑Ôºà‰∫å‰ª∑‰∫∫‰π≥Â§¥Áò§ÁóÖÊØíÁñ´Ëãó(Â§ßËÇ†ÊùÜËèå)ÔºâÔºåÂÖ∂‰ªñÁñ´ËãóËØ∑ÊäìÂåÖËé∑Âèñ„ÄÇ‰∏çÂêåÂåªÈô¢Â∞èÁ®ãÂ∫èÂÜÖÁΩÆÁöÑIDÂèØËÉΩ‰∏ç‰∏ÄÊ†∑ÔºåÂÖ∑‰ΩìËØ∑ÊäìÂåÖÊü•Áúã„ÄÇ&#xA;# id Èó®ËØäÂåªÈô¢id&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;cookieÈÖçÁΩÆÊñπÊ≥ïÔºö&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;‰ΩøÁî®fiddlerÊäìÂåÖÁü•ËãóÊòìÁ∫¶Â∞èÁ®ãÂ∫èÔºö&lt;a href=&#34;https://blog.csdn.net/A_Liucky_Girl/article/details/124534772&#34;&gt;https://blog.csdn.net/A_Liucky_Girl/article/details/124534772&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;fiddlerÊäì‰∏çÂà∞PCÁ´ØÂæÆ‰ø°Â∞èÁ®ãÂ∫èÁöÑÂåÖÔºö&lt;a href=&#34;https://www.csdn.net/tags/NtzaggxsNTA1MjgtYmxvZwO0O0OO0O0O.html&#34;&gt;https://www.csdn.net/tags/NtzaggxsNTA1MjgtYmxvZwO0O0OO0O0O.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ÁÇπÂáªÈó®ËØäËøõÂÖ•Áñ´ËãóÈ¢ÑÁ∫¶&lt;/p&gt; &#xA;&lt;p&gt;cloud.cn2030.com ÂºÄÂ§¥ÁöÑÂ∞±ÊòØÁü•ËãóÊòìÁ∫¶ÁöÑÂåÖ&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ASP.NET_SessionId=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2NTU3MDE2NjAuMDg2ODAyNywiZXhwIjoxNjU1NzA1MjYwLjA4NjgwMjcsInN1YiI6IllOVy5WSVAiLCJqdGkiOiIyMDIyMDYyMDEzMDc0MCIsInZhbCI6InJ2RmZBUUlBQUFBUU1EUXdZVFptWXpnek4yRm1OR0V5Tnh4dmNYSTFielZNY0VsRWRFMXFZMnR6UzA1ckxXTkdNelpOTldKekFCeHZcclxuVlRJMldIUTJVRlZNTVU5TlNFMTVlV1JOVDFOcGRtSnNTalJSRFRFeE15NHhOaTQwT0M0eU5Ea0FBQUFBQUFBQSJ9.mcqQXSdBADjCbXrmRgvWN7bj55tCNPXomPwf7rwsFRU&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÊäìÂåÖÂêéÁ≠âÂè∑ÂêéÈù¢eyÂà∞ÁªìÂ∞æËøô‰∏ÄÊÆµÂ∞±ÊòØcookie&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Èó®ËØäidÈÖçÁΩÆÊñπÊ≥ïÔºö&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;ÁÇπÂáªÈó®ËØäËøõÂÖ•Áñ´ËãóÈ¢ÑÁ∫¶&lt;/p&gt; &#xA;&lt;p&gt;ÂåÖÂàóË°®‰∏≠ÁöÑÔºö&lt;a href=&#34;https://cloud.cn2030.com/sc/wx/HandlerSubscribe.ashx?act=CustomerProduct&amp;amp;id=492&amp;amp;lat=22.83393&amp;amp;lng=108.31343&#34;&gt;https://cloud.cn2030.com/sc/wx/HandlerSubscribe.ashx?act=CustomerProduct&amp;amp;id=492&amp;amp;lat=22.83393&amp;amp;lng=108.31343&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;id=492Â∞±ÊòØÈó®ËØäid &lt;img src=&#34;https://user-images.githubusercontent.com/25584923/174531087-545f7d7c-8a15-4ead-9088-748d4cf193d4.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Áñ´Ëãó‰∫ßÂìÅp_idÈÖçÁΩÆÊñπÊ≥ïÔºö&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;1ÊòØ‰πù‰ª∑Ôºà‰πù‰ª∑‰∫∫‰π≥Â§¥Áò§ÁóÖÊØíÁñ´ËãóÔºâÔºå2ÊòØÂõõ‰ª∑ÔºàÂõõ‰ª∑‰∫∫‰π≥Â§¥Áò§ÁóÖÊØíÁñ´ËãóÔºâÔºå3ÊòØ‰∫å‰ª∑Ôºà‰∫å‰ª∑‰∫∫‰π≥Â§¥Áò§ÁóÖÊØíÁñ´Ëãó-ËøõÂè£ÔºâÔºå54ÊòØ‰∫å‰ª∑Ôºà‰∫å‰ª∑‰∫∫‰π≥Â§¥Áò§ÁóÖÊØíÁñ´Ëãó(Â§ßËÇ†ÊùÜËèå)ÔºâÔºåÂÖ∂‰ªñÁñ´ËãóËØ∑ÊäìÂåÖËé∑Âèñ„ÄÇ ‰∏çÂêåÂåªÈô¢Â∞èÁ®ãÂ∫èÂÜÖÁΩÆÁöÑIDÂèØËÉΩ‰∏ç‰∏ÄÊ†∑ÔºåÂÖ∑‰ΩìËØ∑ÊäìÂåÖÊü•Áúã„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;‰∏äÈù¢ÊäìÂåÖ‰ø°ÊÅØÁªÑÂêàËµ∑Êù•ÈÖçÁΩÆÊñá‰ª∂ÂÜÖÂÆπÂ∞±ÊòØ‰∏ãÈù¢ËøôÊ†∑Â≠êÔºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[jiujia]&#xA;cookie=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2NTU3MDE2NjAuMDg2ODAyNywiZXhwIjoxNjU1NzA1MjYwLjA4NjgwMjcsInN1YiI6IllOVy5WSVAiLCJqdGkiOiIyMDIyMDYyMDEzMDc0MCIsInZhbCI6InJ2RmZBUUlBQUFBUU1EUXdZVFptWXpnek4yRm1OR0V5Tnh4dmNYSTFielZNY0VsRWRFMXFZMnR6UzA1ckxXTkdNelpOTldKekFCeHZcclxuVlRJMldIUTJVRlZNTVU5TlNFMTVlV1JOVDFOcGRtSnNTalJSRFRFeE15NHhOaTQwT0M0eU5Ea0FBQUFBQUFBQSJ9.mcqQXSdBADjCbXrmRgvWN7bj55tCNPXomPwf7rwsFRU&#xA;wait_speed=1000&#xA;buy_speed=1000&#xA;p_id=1&#xA;id=492&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Á•ùÂ§ßÂÆ∂Êä¢Ë¥≠ÊàêÂäü&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Ê≥®ÊÑè‰∫ãÈ°π&lt;/h3&gt; &#xA;&lt;p&gt;ÂáÜÁÇπÂâç‰∏§ÂàÜÈíüÊâìÂºÄ&lt;br&gt; ÊµãËØïÈ¢ÑÁ∫¶ÊàêÂäüÂêéÂèäÊó∂ÂèñÊ∂àÈ¢ÑÁ∫¶Ôºå‰∏çÁÑ∂Ê≤°ÂäûÊ≥ïÈ¢ÑÁ∫¶Á¨¨‰∫åÊ¨°„ÄÇ&lt;br&gt; Êä¢Ë¥≠ÂâçÂÖàËØï‰∏Ä‰∏ãÊä¢2‰ª∑ÔºåÈúÄË¶ÅÊèêÂâçÂú®ÊàëÁöÑ-‰∏™‰∫∫‰ø°ÊÅØ-Â°´ÂÜôÂ•ΩÂßìÂêçÊÄßÂà´Ë∫´‰ªΩËØÅÂè∑&lt;br&gt; ÊØè‰∏™ipÊúâËá™Â∑±ÁöÑcookieÔºå‰∏çÂèØÂÖ±‰∫´Cookie„ÄÇ&lt;br&gt; Ê≤°ÊúâÂ§öÁ∫øÁ®ãÔºå‰πü‰∏çË¶ÅÂ§öÂºÄ&lt;br&gt; cookieÊúâÊïàÊúü‰∏Ä‰∏™Â∞èÊó∂&lt;br&gt; Â¶ÇÊûúÈúÄË¶ÅÊèêÈ´òÊàêÂäüÁéáËØ∑ÈÄâÊã©Â§öÂºÄÁîµËÑëÂíåÂ§öÂºÄË¥¶Âè∑Ôºå‰∏î‰∏ÄÂè∞ÁîµËÑëÂØπÂ∫î‰∏Ä‰∏™Ë¥¶Âè∑&lt;br&gt; ÊÑüË∞¢ÂàòÊ¨£Â§ßÁ•ûÔºö&lt;a href=&#34;https://www.liuxincode.cn/&#34;&gt;https://www.liuxincode.cn/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/25584923/174532767-b7c11363-a01c-4a06-a371-eeb6496ddd4f.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/25584923/174532654-95c33b79-c28b-4589-8876-35c7fbdaa53a.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>