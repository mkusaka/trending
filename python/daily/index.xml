<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-04T01:37:29Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lkwq007/stablediffusion-infinity</title>
    <updated>2022-10-04T01:37:29Z</updated>
    <id>tag:github.com,2022-10-04:/lkwq007/stablediffusion-infinity</id>
    <link href="https://github.com/lkwq007/stablediffusion-infinity" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Outpainting with Stable Diffusion on an infinite canvas&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;stablediffusion-infinity&lt;/h1&gt; &#xA;&lt;p&gt;Outpainting with Stable Diffusion on an infinite canvas.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/lkwq007/stablediffusion-infinity/blob/master/stablediffusion_infinity_colab.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/spaces/lnyan/stablediffusion-infinity&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue&#34; alt=&#34;Hugging Face Spaces&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Start with init_image (updated demo in Gradio):&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/1665437/193394123-d202efc8-24a7-41b3-a5cf-6b2e0b60db28.mp4&#34;&gt;https://user-images.githubusercontent.com/1665437/193394123-d202efc8-24a7-41b3-a5cf-6b2e0b60db28.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Start with text2img (&lt;a href=&#34;https://github.com/lkwq007/stablediffusion-infinity/tree/ipycanvas&#34;&gt;ipycanvas&lt;/a&gt; version):&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/1665437/190212025-f4a82c46-0ff1-4ca2-b79b-6c81601e3eed.mp4&#34;&gt;https://user-images.githubusercontent.com/1665437/190212025-f4a82c46-0ff1-4ca2-b79b-6c81601e3eed.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The web app might work on Windows (see this issue &lt;a href=&#34;https://github.com/lkwq007/stablediffusion-infinity/issues/12&#34;&gt;https://github.com/lkwq007/stablediffusion-infinity/issues/12&lt;/a&gt; for more information) and Apple Silicon devices (untested, check guide here: &lt;a href=&#34;https://huggingface.co/docs/diffusers/optimization/mps&#34;&gt;https://huggingface.co/docs/diffusers/optimization/mps&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;This project mainly works as a proof of concept. In that case, &lt;del&gt;the UI design is relatively weak&lt;/del&gt;, and the quality of results is not guaranteed. You may need to do prompt engineering or change the size of the selection box to get better outpainting results.&lt;/p&gt; &#xA;&lt;p&gt;The project now becomes a web app based on PyScript and Gradio. For Jupyter Notebook version, please check out the &lt;a href=&#34;https://github.com/lkwq007/stablediffusion-infinity/tree/ipycanvas&#34;&gt;ipycanvas&lt;/a&gt; branch.&lt;/p&gt; &#xA;&lt;p&gt;Pull requests are welcome for better UI control, ideas to achieve better results, or any other improvements.&lt;/p&gt; &#xA;&lt;p&gt;Update: the project also supports &lt;a href=&#34;https://github.com/Jack000/glid-3-xl-stable&#34;&gt;glid-3-xl-stable&lt;/a&gt; as inpainting/outpainting model. Note that you have to restart the &lt;code&gt;app.py&lt;/code&gt; to change model. (not supported on colab)&lt;/p&gt; &#xA;&lt;h2&gt;Setup environment&lt;/h2&gt; &#xA;&lt;p&gt;setup with &lt;code&gt;environment.yml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recurse-submodules https://github.com/lkwq007/stablediffusion-infinity&#xA;cd stablediffusion-infinity&#xA;conda env create -f environment.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;if the &lt;code&gt;environment.yml&lt;/code&gt; doesn&#39;t work for you, you may install dependencies manually:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda create -n sd-inf python=3.10&#xA;conda activate sd-inf&#xA;conda install pytorch torchvision torchaudio cudatoolkit=11.3 -c pytorch&#xA;conda install scipy scikit-image&#xA;conda install -c conda-forge diffusers transformers ftfy&#xA;pip install opencv-python&#xA;pip install gradio==3.4.0&#xA;pip install pytorch-lightning==1.7.7 einops==0.4.1 omegaconf==2.2.3&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For windows, you may need to replace &lt;code&gt;pip install opencv-python&lt;/code&gt; with &lt;code&gt;conda install -c conda-forge opencv&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;CPP library (optional)&lt;/h2&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;opencv&lt;/code&gt; library (e.g. &lt;code&gt;libopencv-dev&lt;/code&gt;/&lt;code&gt;opencv-devel&lt;/code&gt;, the package name may differ on different distributions) is required for &lt;code&gt;PyPatchMatch&lt;/code&gt;. You may need to install &lt;code&gt;opencv&lt;/code&gt; by yourself. If no &lt;code&gt;opencv&lt;/code&gt; installed, the &lt;code&gt;patch_match&lt;/code&gt; option (usually better quality) won&#39;t work.&lt;/p&gt; &#xA;&lt;h2&gt;How-to&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda activate sd-inf&#xA;python app.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running with Docker&lt;/h2&gt; &#xA;&lt;p&gt;This should get you started without needing to manually install anything, except for having an environment with Docker installed and an Nvidia GPU. This has been tested on Docker Desktop on Windows 10 using the WSL2 backend.&lt;/p&gt; &#xA;&lt;p&gt;First, update the .env file with your Huggingface token from &lt;a href=&#34;https://huggingface.co/settings/tokens&#34;&gt;https://huggingface.co/settings/tokens&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open your shell that has docker and run these commands&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd stablediffusion-infinity&#xA;docker-compose build&#xA;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Watch the log for the url to open in your browser. Choose the one that starts with &lt;a href=&#34;http://127.0.0.1:8888/&#34;&gt;http://127.0.0.1:8888/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;FAQs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Troubleshooting on Windows: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lkwq007/stablediffusion-infinity/issues/12&#34;&gt;https://github.com/lkwq007/stablediffusion-infinity/issues/12&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;False positive rate of safety checker is quite high: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lkwq007/stablediffusion-infinity/issues/8#issuecomment-1248448453&#34;&gt;https://github.com/lkwq007/stablediffusion-infinity/issues/8#issuecomment-1248448453&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;What is the init_mode &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;init_mode indicates how to fill the empty/masked region, usually &lt;code&gt;patch_match&lt;/code&gt; is better than others&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Why not use &lt;code&gt;postMessage&lt;/code&gt; for iframe interaction &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The iframe the gradio are in the same origin. For &lt;code&gt;postMessage&lt;/code&gt; version, check out &lt;a href=&#34;https://github.com/lkwq007/stablediffusion-infinity/tree/gradio-space&#34;&gt;gradio-space&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;p&gt;The code of &lt;code&gt;perlin2d.py&lt;/code&gt; is from &lt;a href=&#34;https://stackoverflow.com/questions/42147776/producing-2d-perlin-noise-with-numpy/42154921#42154921&#34;&gt;https://stackoverflow.com/questions/42147776/producing-2d-perlin-noise-with-numpy/42154921#42154921&lt;/a&gt; and is &lt;strong&gt;not&lt;/strong&gt; included in the scope of LICENSE used in this repo.&lt;/p&gt; &#xA;&lt;p&gt;The submodule &lt;code&gt;glid_3_xl_stable&lt;/code&gt; is based on &lt;a href=&#34;https://github.com/Jack000/glid-3-xl-stable&#34;&gt;https://github.com/Jack000/glid-3-xl-stable&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The submodule &lt;code&gt;PyPatchMatch&lt;/code&gt; is based on &lt;a href=&#34;https://github.com/vacancy/PyPatchMatch&#34;&gt;https://github.com/vacancy/PyPatchMatch&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>scrapy/scrapy</title>
    <updated>2022-10-04T01:37:29Z</updated>
    <id>tag:github.com,2022-10-04:/scrapy/scrapy</id>
    <link href="https://github.com/scrapy/scrapy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Scrapy, a fast high-level web crawling &amp; scraping framework for Python.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. image:: &lt;a href=&#34;https://scrapy.org/img/scrapylogo.png&#34;&gt;https://scrapy.org/img/scrapylogo.png&lt;/a&gt; :target: &lt;a href=&#34;https://scrapy.org/&#34;&gt;https://scrapy.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;====== Scrapy&lt;/h1&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/pypi/v/Scrapy.svg&#34;&gt;https://img.shields.io/pypi/v/Scrapy.svg&lt;/a&gt; :target: &lt;a href=&#34;https://pypi.python.org/pypi/Scrapy&#34;&gt;https://pypi.python.org/pypi/Scrapy&lt;/a&gt; :alt: PyPI Version&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/pypi/pyversions/Scrapy.svg&#34;&gt;https://img.shields.io/pypi/pyversions/Scrapy.svg&lt;/a&gt; :target: &lt;a href=&#34;https://pypi.python.org/pypi/Scrapy&#34;&gt;https://pypi.python.org/pypi/Scrapy&lt;/a&gt; :alt: Supported Python Versions&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://github.com/scrapy/scrapy/workflows/Ubuntu/badge.svg&#34;&gt;https://github.com/scrapy/scrapy/workflows/Ubuntu/badge.svg&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/scrapy/scrapy/actions?query=workflow%3AUbuntu&#34;&gt;https://github.com/scrapy/scrapy/actions?query=workflow%3AUbuntu&lt;/a&gt; :alt: Ubuntu&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://github.com/scrapy/scrapy/workflows/macOS/badge.svg&#34;&gt;https://github.com/scrapy/scrapy/workflows/macOS/badge.svg&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/scrapy/scrapy/actions?query=workflow%3AmacOS&#34;&gt;https://github.com/scrapy/scrapy/actions?query=workflow%3AmacOS&lt;/a&gt; :alt: macOS&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://github.com/scrapy/scrapy/workflows/Windows/badge.svg&#34;&gt;https://github.com/scrapy/scrapy/workflows/Windows/badge.svg&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/scrapy/scrapy/actions?query=workflow%3AWindows&#34;&gt;https://github.com/scrapy/scrapy/actions?query=workflow%3AWindows&lt;/a&gt; :alt: Windows&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/badge/wheel-yes-brightgreen.svg&#34;&gt;https://img.shields.io/badge/wheel-yes-brightgreen.svg&lt;/a&gt; :target: &lt;a href=&#34;https://pypi.python.org/pypi/Scrapy&#34;&gt;https://pypi.python.org/pypi/Scrapy&lt;/a&gt; :alt: Wheel Status&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/codecov/c/github/scrapy/scrapy/master.svg&#34;&gt;https://img.shields.io/codecov/c/github/scrapy/scrapy/master.svg&lt;/a&gt; :target: &lt;a href=&#34;https://codecov.io/github/scrapy/scrapy?branch=master&#34;&gt;https://codecov.io/github/scrapy/scrapy?branch=master&lt;/a&gt; :alt: Coverage report&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://anaconda.org/conda-forge/scrapy/badges/version.svg&#34;&gt;https://anaconda.org/conda-forge/scrapy/badges/version.svg&lt;/a&gt; :target: &lt;a href=&#34;https://anaconda.org/conda-forge/scrapy&#34;&gt;https://anaconda.org/conda-forge/scrapy&lt;/a&gt; :alt: Conda Version&lt;/p&gt; &#xA;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;p&gt;Scrapy is a fast high-level web crawling and web scraping framework, used to crawl websites and extract structured data from their pages. It can be used for a wide range of purposes, from data mining to monitoring and automated testing.&lt;/p&gt; &#xA;&lt;p&gt;Scrapy is maintained by Zyte_ (formerly Scrapinghub) and &lt;code&gt;many other contributors&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;.. _many other contributors: &lt;a href=&#34;https://github.com/scrapy/scrapy/graphs/contributors&#34;&gt;https://github.com/scrapy/scrapy/graphs/contributors&lt;/a&gt; .. _Zyte: &lt;a href=&#34;https://www.zyte.com/&#34;&gt;https://www.zyte.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check the Scrapy homepage at &lt;a href=&#34;https://scrapy.org&#34;&gt;https://scrapy.org&lt;/a&gt; for more information, including a list of features.&lt;/p&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.7+&lt;/li&gt; &#xA; &lt;li&gt;Works on Linux, Windows, macOS, BSD&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Install&lt;/h1&gt; &#xA;&lt;p&gt;The quick way::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install scrapy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the install section in the documentation at &lt;a href=&#34;https://docs.scrapy.org/en/latest/intro/install.html&#34;&gt;https://docs.scrapy.org/en/latest/intro/install.html&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;Documentation is available online at &lt;a href=&#34;https://docs.scrapy.org/&#34;&gt;https://docs.scrapy.org/&lt;/a&gt; and in the &lt;code&gt;docs&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h1&gt;Releases&lt;/h1&gt; &#xA;&lt;p&gt;You can check &lt;a href=&#34;https://docs.scrapy.org/en/latest/news.html&#34;&gt;https://docs.scrapy.org/en/latest/news.html&lt;/a&gt; for the release notes.&lt;/p&gt; &#xA;&lt;h1&gt;Community (blog, twitter, mail list, IRC)&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://scrapy.org/community/&#34;&gt;https://scrapy.org/community/&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.scrapy.org/en/master/contributing.html&#34;&gt;https://docs.scrapy.org/en/master/contributing.html&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Please note that this project is released with a Contributor Code of Conduct (see &lt;a href=&#34;https://github.com/scrapy/scrapy/raw/master/CODE_OF_CONDUCT.md&#34;&gt;https://github.com/scrapy/scrapy/blob/master/CODE_OF_CONDUCT.md&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;By participating in this project you agree to abide by its terms. Please report unacceptable behavior to &lt;a href=&#34;mailto:opensource@zyte.com&#34;&gt;opensource@zyte.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Companies using Scrapy&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://scrapy.org/companies/&#34;&gt;https://scrapy.org/companies/&lt;/a&gt; for a list.&lt;/p&gt; &#xA;&lt;h1&gt;Commercial Support&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://scrapy.org/support/&#34;&gt;https://scrapy.org/support/&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>online-ml/river</title>
    <updated>2022-10-04T01:37:29Z</updated>
    <id>tag:github.com,2022-10-04:/online-ml/river</id>
    <link href="https://github.com/online-ml/river" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🌊 Online machine learning in Python&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img height=&#34;220px&#34; src=&#34;https://raw.githubusercontent.com/online-ml/river/main/docs/img/logo.svg?sanitize=true&#34; alt=&#34;river_logo&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;!-- Tests --&gt; &lt;a href=&#34;https://github.com/online-ml/river/actions/workflows/unit-tests.yml&#34;&gt; &lt;img src=&#34;https://github.com/online-ml/river/actions/workflows/unit-tests.yml/badge.svg?sanitize=true&#34; alt=&#34;tests&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- Documentation --&gt; &lt;a href=&#34;https://riverml.xyz&#34;&gt; &lt;img src=&#34;https://img.shields.io/website?label=docs&amp;amp;style=flat-square&amp;amp;url=https%3A%2F%2Friverml.xyz%2F&#34; alt=&#34;documentation&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- Roadmap --&gt; &lt;a href=&#34;https://www.notion.so/d1e86fcdf21e4deda16eedab2b3361fb?v=503f44740b8b44a99a961aa96e9e46e1&#34;&gt; &lt;img src=&#34;https://img.shields.io/website?label=roadmap&amp;amp;style=flat-square&amp;amp;url=https://www.notion.so/d1e86fcdf21e4deda16eedab2b3361fb?v=503f44740b8b44a99a961aa96e9e46e1&#34; alt=&#34;roadmap&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- PyPI --&gt; &lt;a href=&#34;https://pypi.org/project/river&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/river.svg?label=release&amp;amp;color=blue&amp;amp;style=flat-square&#34; alt=&#34;pypi&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- PePy --&gt; &lt;a href=&#34;https://pepy.tech/project/river&#34;&gt; &lt;img src=&#34;https://static.pepy.tech/badge/river?style=flat-square&#34; alt=&#34;pepy&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- Mypy --&gt; &lt;a href=&#34;http://mypy-lang.org/&#34;&gt; &lt;img src=&#34;http://www.mypy-lang.org/static/mypy_badge.svg?sanitize=true&#34; alt=&#34;mypy&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- License --&gt; &lt;a href=&#34;https://opensource.org/licenses/BSD-3-Clause&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-BSD%203--Clause-blue.svg?style=flat-square&#34; alt=&#34;bsd_3_license&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; River is a Python library for &lt;a href=&#34;https://www.wikiwand.com/en/Online_machine_learning&#34;&gt;online machine learning&lt;/a&gt;. It aims to be the most user-friendly library for doing machine learning on streaming data. River is the result of a merger between &lt;a href=&#34;https://github.com/MaxHalford/creme&#34;&gt;creme&lt;/a&gt; and &lt;a href=&#34;https://github.com/scikit-multiflow/scikit-multiflow&#34;&gt;scikit-multiflow&lt;/a&gt;. &lt;/p&gt; &#xA;&lt;h2&gt;⚡️ Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;As a quick example, we&#39;ll train a logistic regression to classify the &lt;a href=&#34;http://archive.ics.uci.edu/ml/datasets/Website+Phishing&#34;&gt;website phishing dataset&lt;/a&gt;. Here&#39;s a look at the first observation in the dataset.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from pprint import pprint&#xA;&amp;gt;&amp;gt;&amp;gt; from river import datasets&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; dataset = datasets.Phishing()&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; for x, y in dataset:&#xA;...     pprint(x)&#xA;...     print(y)&#xA;...     break&#xA;{&#39;age_of_domain&#39;: 1,&#xA; &#39;anchor_from_other_domain&#39;: 0.0,&#xA; &#39;empty_server_form_handler&#39;: 0.0,&#xA; &#39;https&#39;: 0.0,&#xA; &#39;ip_in_url&#39;: 1,&#xA; &#39;is_popular&#39;: 0.5,&#xA; &#39;long_url&#39;: 1.0,&#xA; &#39;popup_window&#39;: 0.0,&#xA; &#39;request_from_other_domain&#39;: 0.0}&#xA;True&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now let&#39;s run the model on the dataset in a streaming fashion. We sequentially interleave predictions and model updates. Meanwhile, we update a performance metric to see how well the model is doing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from river import compose&#xA;&amp;gt;&amp;gt;&amp;gt; from river import linear_model&#xA;&amp;gt;&amp;gt;&amp;gt; from river import metrics&#xA;&amp;gt;&amp;gt;&amp;gt; from river import preprocessing&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; model = compose.Pipeline(&#xA;...     preprocessing.StandardScaler(),&#xA;...     linear_model.LogisticRegression()&#xA;... )&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; metric = metrics.Accuracy()&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; for x, y in dataset:&#xA;...     y_pred = model.predict_one(x)      # make a prediction&#xA;...     metric = metric.update(y, y_pred)  # update the metric&#xA;...     model = model.learn_one(x, y)      # make the model learn&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; metric&#xA;Accuracy: 89.20%&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Of course, this is just a contrived example. We welcome you to check the &lt;a href=&#34;https://riverml.xyz/dev/introduction/installation/&#34;&gt;introduction&lt;/a&gt; section of the documentation for a more thorough tutorial.&lt;/p&gt; &#xA;&lt;h2&gt;🛠 Installation&lt;/h2&gt; &#xA;&lt;p&gt;River is intended to work with &lt;strong&gt;Python 3.8 and above&lt;/strong&gt;. Installation can be done with &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install river&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are &lt;a href=&#34;https://pypi.org/project/river/#files&#34;&gt;wheels available&lt;/a&gt; for Linux, MacOS, and Windows, which means that you most probably won&#39;t have to build River from source.&lt;/p&gt; &#xA;&lt;p&gt;You can install the latest development version from GitHub as so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install git+https://github.com/online-ml/river --upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, through SSH:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install git+ssh://git@github.com/online-ml/river.git --upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🔮 Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linear models with a wide array of optimizers&lt;/li&gt; &#xA; &lt;li&gt;Nearest neighbors, decision trees, naïve Bayes&lt;/li&gt; &#xA; &lt;li&gt;Anomaly detection&lt;/li&gt; &#xA; &lt;li&gt;Drift detection&lt;/li&gt; &#xA; &lt;li&gt;Recommender systems&lt;/li&gt; &#xA; &lt;li&gt;Time series forecasting&lt;/li&gt; &#xA; &lt;li&gt;Imbalanced learning&lt;/li&gt; &#xA; &lt;li&gt;Clustering&lt;/li&gt; &#xA; &lt;li&gt;Feature extraction and selection&lt;/li&gt; &#xA; &lt;li&gt;Online statistics and metrics&lt;/li&gt; &#xA; &lt;li&gt;Built-in datasets&lt;/li&gt; &#xA; &lt;li&gt;Progressive model validation&lt;/li&gt; &#xA; &lt;li&gt;Model pipelines as a first-class citizen&lt;/li&gt; &#xA; &lt;li&gt;Check out &lt;a href=&#34;https://riverml.xyz/latest/api/overview/&#34;&gt;the API&lt;/a&gt; for a comprehensive overview&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🤔 Should I be using River?&lt;/h2&gt; &#xA;&lt;p&gt;You should ask yourself if you need online machine learning. The answer is likely no. Most of the time batch learning does the job just fine. An online approach might fit the bill if:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You want a model that can learn from new data without having to revisit past data.&lt;/li&gt; &#xA; &lt;li&gt;You want a model which is robust to &lt;a href=&#34;https://www.wikiwand.com/en/Concept_drift&#34;&gt;concept drift&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You want to develop your model in a way that is closer to what occurs in a production context, which is usually event-based.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some specificities of River are that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It focuses on clarity and user experience, more so than performance.&lt;/li&gt; &#xA; &lt;li&gt;It&#39;s very fast at processing one sample at a time. Try it, you&#39;ll see.&lt;/li&gt; &#xA; &lt;li&gt;It plays nicely with the rest of Python&#39;s ecosystem.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔗 Useful links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://riverml.xyz&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/river/#history&#34;&gt;Package releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/online-ml/awesome-online-machine-learning&#34;&gt;awesome-online-machine-learning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=nzFTmJnIakk&amp;amp;list=PLIU25-FciwNaz5PqWPiHmPCMOFYoEsJ8c&amp;amp;index=5&#34;&gt;2022 presentation at GAIA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dl.acm.org/doi/10.1145/3534678.3542600&#34;&gt;Online Clustering: Algorithms, Evaluation, Metrics, Applications and Benchmarking&lt;/a&gt; from &lt;a href=&#34;https://kdd.org/kdd2022/&#34;&gt;KDD&#39;22&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;👐 Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to contribute in any way you like, we&#39;re always open to new ideas and approaches.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/online-ml/river/discussions/new&#34;&gt;Open a discussion&lt;/a&gt; if you have any question or enquiry whatsoever. It&#39;s more useful to ask your question in public rather than sending us a private email. It&#39;s also encouraged to open a discussion before contributing, so that everyone is aligned and unnecessary work is avoided.&lt;/li&gt; &#xA; &lt;li&gt;Feel welcome to &lt;a href=&#34;https://github.com/online-ml/river/issues/new/choose&#34;&gt;open an issue&lt;/a&gt; if you think you&#39;ve spotted a bug or a performance issue.&lt;/li&gt; &#xA; &lt;li&gt;Our &lt;a href=&#34;https://www.notion.so/d1e86fcdf21e4deda16eedab2b3361fb?v=503f44740b8b44a99a961aa96e9e46e1&#34;&gt;roadmap&lt;/a&gt; is public. Feel free to work on anything that catches your eye, or to make suggestions. Simpler tasks are listed &lt;a href=&#34;https://www.notion.so/maxhalford/d1e86fcdf21e4deda16eedab2b3361fb?v=e74f58d5a1104e0ab1b29ba0761a7610&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please check out the &lt;a href=&#34;https://github.com/online-ml/river/raw/main/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; if you want to bring modifications to the code base.&lt;/p&gt; &#xA;&lt;h2&gt;🤝 Affiliations&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;70%&#34; src=&#34;https://docs.google.com/drawings/d/e/2PACX-1vSagEhWAjDsb0c24En_fhWAf9DJZbyh5YjU7lK0sNowD2m9uv9TuFm-U77k6ObqTyN2mP05Avf6TCJc/pub?w=2073&amp;amp;h=1127&#34; alt=&#34;affiliations&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;💬 Citation&lt;/h2&gt; &#xA;&lt;p&gt;If River has been useful to you and you would like to cite it in an scientific publication, please refer to the &lt;a href=&#34;https://www.jmlr.org/papers/volume22/20-1380/20-1380.pdf&#34;&gt;paper&lt;/a&gt; published at JMLR:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{montiel2021river,&#xA;  title={River: machine learning for streaming data in Python},&#xA;  author={Montiel, Jacob and Halford, Max and Mastelini, Saulo Martiello&#xA;          and Bolmier, Geoffrey and Sourty, Raphael and Vaysse, Robin and Zouitine, Adil&#xA;          and Gomes, Heitor Murilo and Read, Jesse and Abdessalem, Talel and others},&#xA;  year={2021}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;📝 License&lt;/h2&gt; &#xA;&lt;p&gt;River is free and open-source software licensed under the &lt;a href=&#34;https://github.com/online-ml/river/raw/main/LICENSE&#34;&gt;3-clause BSD license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>