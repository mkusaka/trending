<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-23T01:31:44Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>microsoft/qlib</title>
    <updated>2022-07-23T01:31:44Z</updated>
    <id>tag:github.com,2022-07-23:/microsoft/qlib</id>
    <link href="https://github.com/microsoft/qlib" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Qlib is an AI-oriented quantitative investment platform, which aims to realize the potential, empower the research, and create the value of AI technologies in quantitative investment. With Qlib, you can easily try your ideas to create better Quant investment strategies. An increasing number of SOTA Quant research works/papers are released in Qlib.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyqlib/#files&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/pyqlib.svg?logo=python&amp;amp;logoColor=white&#34; alt=&#34;Python Versions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/pyqlib/#files&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/platform-linux%20%7C%20windows%20%7C%20macos-lightgrey&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/pyqlib/#history&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/pyqlib&#34; alt=&#34;PypI Versions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/pyqlib/&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/qlib/workflows/Upload%20Python%20Package/badge.svg?sanitize=true&#34; alt=&#34;Upload Python Package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/actions&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/qlib/workflows/Test/badge.svg?branch=main&#34; alt=&#34;Github Actions Test Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/qlib/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/l/pyqlib&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/Microsoft/qlib?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Microsoft/qlib.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/Microsoft/qlib&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;📰&lt;/span&gt; &lt;strong&gt;What&#39;s NEW!&lt;/strong&gt; &amp;nbsp; &lt;span&gt;💖&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Recent released features&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HIST and IGMTF models&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/1040&#34;&gt;Released&lt;/a&gt; on Apr 10, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Qlib &lt;a href=&#34;https://github.com/microsoft/qlib/tree/main/examples/tutorial&#34;&gt;notebook tutorial&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;📖 &lt;a href=&#34;https://github.com/microsoft/qlib/pull/1037&#34;&gt;Released&lt;/a&gt; on Apr 7, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ibovespa index data&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🍚&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/990&#34;&gt;Released&lt;/a&gt; on Apr 6, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Point-in-Time database&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🔨&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/343&#34;&gt;Released&lt;/a&gt; on Mar 10, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Arctic Provider Backend &amp;amp; Orderbook data example&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🔨&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/744&#34;&gt;Released&lt;/a&gt; on Jan 17, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Meta-Learning-based framework &amp;amp; DDG-DA&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;span&gt;🔨&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/743&#34;&gt;Released&lt;/a&gt; on Jan 10, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Planning-based portfolio optimization&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🔨&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/754&#34;&gt;Released&lt;/a&gt; on Dec 28, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Release Qlib v0.8.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;) &lt;a href=&#34;https://github.com/microsoft/qlib/releases/tag/v0.8.0&#34;&gt;Released&lt;/a&gt; on Dec 8, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ADD model&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/704&#34;&gt;Released&lt;/a&gt; on Nov 22, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ADARNN model&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/689&#34;&gt;Released&lt;/a&gt; on Nov 14, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TCN model&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/668&#34;&gt;Released&lt;/a&gt; on Nov 4, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nested Decision Framework&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🔨&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/438&#34;&gt;Released&lt;/a&gt; on Oct 1, 2021. &lt;a href=&#34;https://github.com/microsoft/qlib/raw/main/examples/nested_decision_execution/workflow.py&#34;&gt;Example&lt;/a&gt; and &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/highfreq.html&#34;&gt;Doc&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Temporal Routing Adaptor (TRA)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/531&#34;&gt;Released&lt;/a&gt; on July 30, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Transformer &amp;amp; Localformer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/508&#34;&gt;Released&lt;/a&gt; on July 22, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Release Qlib v0.7.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;) &lt;a href=&#34;https://github.com/microsoft/qlib/releases/tag/v0.7.0&#34;&gt;Released&lt;/a&gt; on July 12, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TCTS Model&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/491&#34;&gt;Released&lt;/a&gt; on July 1, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Online serving and automatic model rolling&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🔨&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/290&#34;&gt;Released&lt;/a&gt; on May 17, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DoubleEnsemble Model&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/286&#34;&gt;Released&lt;/a&gt; on Mar 2, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;High-frequency data processing example&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🔨&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/257&#34;&gt;Released&lt;/a&gt; on Feb 5, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;High-frequency trading example&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/227&#34;&gt;Part of code released&lt;/a&gt; on Jan 28, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;High-frequency data(1min)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🍚&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/221&#34;&gt;Released&lt;/a&gt; on Jan 27, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tabnet Model&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;📈&lt;/span&gt; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/205&#34;&gt;Released&lt;/a&gt; on Jan 22, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Features released before 2021 are not listed here.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;http://fintech.msra.cn/images_v070/logo/1.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Qlib is an AI-oriented quantitative investment platform, which aims to realize the potential, empower the research, and create the value of AI technologies in quantitative investment.&lt;/p&gt; &#xA;&lt;p&gt;It contains the full ML pipeline of data processing, model training, back-testing; and covers the entire chain of quantitative investment: alpha seeking, risk modeling, portfolio optimization, and order execution.&lt;/p&gt; &#xA;&lt;p&gt;With Qlib, users can easily try ideas to create better Quant investment strategies.&lt;/p&gt; &#xA;&lt;p&gt;For more details, please refer to our paper &lt;a href=&#34;https://arxiv.org/abs/2009.11189&#34;&gt;&#34;Qlib: An AI-oriented Quantitative Investment Platform&#34;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Frameworks, Tutorial, Data &amp;amp; DevOps&lt;/th&gt; &#xA;   &lt;th&gt;Main Challenges &amp;amp; Solutions in Quant Research&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#plans&#34;&gt;&lt;strong&gt;Plans&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#framework-of-qlib&#34;&gt;Framework of Qlib&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;ul dir=&#34;auto&#34;&gt; &#xA;     &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#installation&#34;&gt;Installation&lt;/a&gt; &lt;/li&gt; &#xA;     &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#data-preparation&#34;&gt;Data Preparation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#auto-quant-research-workflow&#34;&gt;Auto Quant Research Workflow&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#building-customized-quant-research-workflow-by-code&#34;&gt;Building Customized Quant Research Workflow by Code&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#quant-dataset-zoo&#34;&gt;&lt;strong&gt;Quant Dataset Zoo&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#more-about-qlib&#34;&gt;More About Qlib&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#offline-mode-and-online-mode&#34;&gt;Offline Mode and Online Mode&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#performance-of-qlib-data-server&#34;&gt;Performance of Qlib Data Server&lt;/a&gt;&lt;/li&gt;&#xA;     &lt;/ul&gt; &lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#related-reports&#34;&gt;Related Reports&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#contact-us&#34;&gt;Contact Us&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &lt;/td&gt; &#xA;   &lt;td valign=&#34;baseline&#34;&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#main-challenges--solutions-in-quant-research&#34;&gt;Main Challenges &amp;amp; Solutions in Quant Research&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#forecasting-finding-valuable-signalspatterns&#34;&gt;Forecasting: Finding Valuable Signals/Patterns&lt;/a&gt; &#xA;       &lt;ul&gt; &#xA;        &lt;li type=&#34;disc&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#quant-model-paper-zoo&#34;&gt;&lt;strong&gt;Quant Model (Paper) Zoo&lt;/strong&gt;&lt;/a&gt; &#xA;         &lt;ul&gt; &#xA;          &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#run-a-single-model&#34;&gt;Run a Single Model&lt;/a&gt;&lt;/li&gt; &#xA;          &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#run-multiple-models&#34;&gt;Run Multiple Models&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;/ul&gt; &lt;/li&gt; &#xA;       &lt;/ul&gt; &lt;/li&gt; &#xA;      &lt;li type=&#34;circle&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#adapting-to-market-dynamics&#34;&gt;Adapting to Market Dynamics&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Plans&lt;/h1&gt; &#xA;&lt;p&gt;New features under development(order by estimated release time). Your feedbacks about the features are very important.&lt;/p&gt; &#xA;&lt;!-- | Feature                        | Status      | --&gt; &#xA;&lt;!-- | --                      | ------    | --&gt; &#xA;&lt;h1&gt;Framework of Qlib&lt;/h1&gt; &#xA;&lt;div style=&#34;align: center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/docs/_static/img/framework.svg?sanitize=true&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;At the module level, Qlib is a platform that consists of the above components. The components are designed as loose-coupled modules, and each component could be used stand-alone.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Infrastructure&lt;/code&gt; layer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Infrastructure&lt;/code&gt; layer provides underlying support for Quant research. &lt;code&gt;DataServer&lt;/code&gt; provides a high-performance infrastructure for users to manage and retrieve raw data. &lt;code&gt;Trainer&lt;/code&gt; provides a flexible interface to control the training process of models, which enable algorithms to control the training process.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Workflow&lt;/code&gt; layer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Workflow&lt;/code&gt; layer covers the whole workflow of quantitative investment. &lt;code&gt;Information Extractor&lt;/code&gt; extracts data for models. &lt;code&gt;Forecast Model&lt;/code&gt; focuses on producing all kinds of forecast signals (e.g. &lt;em&gt;alpha&lt;/em&gt;, risk) for other modules. With these signals &lt;code&gt;Decision Generator&lt;/code&gt; will generate the target trading decisions(i.e. portfolio, orders) to be executed by &lt;code&gt;Execution Env&lt;/code&gt; (i.e. the trading market). There may be multiple levels of &lt;code&gt;Trading Agent&lt;/code&gt; and &lt;code&gt;Execution Env&lt;/code&gt; (e.g. an &lt;em&gt;order executor trading agent and intraday order execution environment&lt;/em&gt; could behave like an interday trading environment and nested in &lt;em&gt;daily portfolio management trading agent and interday trading environment&lt;/em&gt; )&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Interface&lt;/code&gt; layer&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Interface&lt;/code&gt; layer tries to present a user-friendly interface for the underlying system. &lt;code&gt;Analyser&lt;/code&gt; module will provide users detailed analysis reports of forecasting signals, portfolios and execution results&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The modules with hand-drawn style are under development and will be released in the future.&lt;/li&gt; &#xA; &lt;li&gt;The modules with dashed borders are highly user-customizable and extendible.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(p.s. framework image is created with &lt;a href=&#34;https://draw.io/&#34;&gt;https://draw.io/&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h1&gt;Quick Start&lt;/h1&gt; &#xA;&lt;p&gt;This quick start guide tries to demonstrate&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;It&#39;s very easy to build a complete Quant research workflow and try your ideas with &lt;em&gt;Qlib&lt;/em&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Though with &lt;em&gt;public data&lt;/em&gt; and &lt;em&gt;simple models&lt;/em&gt;, machine learning technologies &lt;strong&gt;work very well&lt;/strong&gt; in practical Quant investment.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Here is a quick &lt;strong&gt;&lt;a href=&#34;https://terminalizer.com/view/3f24561a4470&#34;&gt;demo&lt;/a&gt;&lt;/strong&gt; shows how to install &lt;code&gt;Qlib&lt;/code&gt;, and run LightGBM with &lt;code&gt;qrun&lt;/code&gt;. &lt;strong&gt;But&lt;/strong&gt;, please make sure you have already prepared the data following the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/#data-preparation&#34;&gt;instruction&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This table demonstrates the supported Python version of &lt;code&gt;Qlib&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;install with pip&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;install from source&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;plot&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python 3.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python 3.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python 3.9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Conda&lt;/strong&gt; is suggested for managing your Python environment.&lt;/li&gt; &#xA; &lt;li&gt;Please pay attention that installing cython in Python 3.6 will raise some error when installing &lt;code&gt;Qlib&lt;/code&gt; from source. If users use Python 3.6 on their machines, it is recommended to &lt;em&gt;upgrade&lt;/em&gt; Python to version 3.7 or use &lt;code&gt;conda&lt;/code&gt;&#39;s Python to install &lt;code&gt;Qlib&lt;/code&gt; from source.&lt;/li&gt; &#xA; &lt;li&gt;For Python 3.9, &lt;code&gt;Qlib&lt;/code&gt; supports running workflows such as training models, doing backtest and plot most of the related figures (those included in &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/workflow_by_code.ipynb&#34;&gt;notebook&lt;/a&gt;). However, plotting for the &lt;em&gt;model performance&lt;/em&gt; is not supported for now and we will fix this when the dependent packages are upgraded in the future.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Qlib&lt;/code&gt;Requires &lt;code&gt;tables&lt;/code&gt; package, &lt;code&gt;hdf5&lt;/code&gt; in tables does not support python3.9.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Install with pip&lt;/h3&gt; &#xA;&lt;p&gt;Users can easily install &lt;code&gt;Qlib&lt;/code&gt; by pip according to the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  pip install pyqlib&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: pip will install the latest stable qlib. However, the main branch of qlib is in active development. If you want to test the latest scripts or functions in the main branch. Please install qlib with the methods below.&lt;/p&gt; &#xA;&lt;h3&gt;Install from source&lt;/h3&gt; &#xA;&lt;p&gt;Also, users can install the latest dev version &lt;code&gt;Qlib&lt;/code&gt; by the source code according to the following steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Before installing &lt;code&gt;Qlib&lt;/code&gt; from source, users need to install some dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install numpy&#xA;pip install --upgrade  cython&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository and install &lt;code&gt;Qlib&lt;/code&gt; as follows.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/microsoft/qlib.git &amp;amp;&amp;amp; cd qlib&#xA;pip install .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can install Qlib with &lt;code&gt;python setup.py install&lt;/code&gt; as well. But it is not the recommanded approach. It will skip &lt;code&gt;pip&lt;/code&gt; and cause obscure problems. For example, &lt;strong&gt;only&lt;/strong&gt; the command &lt;code&gt;pip install .&lt;/code&gt; &lt;strong&gt;can&lt;/strong&gt; overwrite the stable version installed by &lt;code&gt;pip install pyqlib&lt;/code&gt;, while the command &lt;code&gt;python setup.py install&lt;/code&gt; &lt;strong&gt;can&#39;t&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tips&lt;/strong&gt;: If you fail to install &lt;code&gt;Qlib&lt;/code&gt; or run the examples in your environment, comparing your steps and the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/.github/workflows/test_qlib_from_source.yml&#34;&gt;CI workflow&lt;/a&gt; may help you find the problem.&lt;/p&gt; &#xA;&lt;h2&gt;Data Preparation&lt;/h2&gt; &#xA;&lt;p&gt;Load and prepare data by running the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# get 1d data&#xA;python scripts/get_data.py qlib_data --target_dir ~/.qlib/qlib_data/cn_data --region cn&#xA;&#xA;# get 1min data&#xA;python scripts/get_data.py qlib_data --target_dir ~/.qlib/qlib_data/cn_data_1min --region cn --interval 1min&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This dataset is created by public data collected by &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/scripts/data_collector/&#34;&gt;crawler scripts&lt;/a&gt;, which have been released in the same repository. Users could create the same dataset with it. &lt;a href=&#34;https://github.com/microsoft/qlib/tree/main/scripts/data_collector#description-of-dataset&#34;&gt;Description of dataset&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Please pay &lt;strong&gt;ATTENTION&lt;/strong&gt; that the data is collected from &lt;a href=&#34;https://finance.yahoo.com/lookup&#34;&gt;Yahoo Finance&lt;/a&gt;, and the data might not be perfect. We recommend users to prepare their own data if they have a high-quality dataset. For more information, users can refer to the &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/data.html#converting-csv-format-into-qlib-format&#34;&gt;related document&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Automatic update of daily frequency data (from yahoo finance)&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This step is &lt;em&gt;Optional&lt;/em&gt; if users only want to try their models and strategies on history data.&lt;/p&gt; &#xA; &lt;p&gt;It is recommended that users update the data manually once (--trading_date 2021-05-25) and then set it to update automatically.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Users can&#39;t incrementally update data based on the offline data provided by Qlib(some fields are removed to reduce the data size). Users should use &lt;a href=&#34;https://github.com/microsoft/qlib/tree/main/scripts/data_collector/yahoo#automatic-update-of-daily-frequency-datafrom-yahoo-finance&#34;&gt;yahoo collector&lt;/a&gt; to download Yahoo data from scratch and then incrementally update it.&lt;/p&gt; &#xA; &lt;p&gt;For more information, please refer to: &lt;a href=&#34;https://github.com/microsoft/qlib/tree/main/scripts/data_collector/yahoo#automatic-update-of-daily-frequency-datafrom-yahoo-finance&#34;&gt;yahoo collector&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Automatic update of data to the &#34;qlib&#34; directory each trading day(Linux)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;use &lt;em&gt;crontab&lt;/em&gt;: &lt;code&gt;crontab -e&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;set up timed tasks:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;* * * * 1-5 python &amp;lt;script path&amp;gt; update_data_to_bin --qlib_data_1d_dir &amp;lt;user data dir&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;script path&lt;/strong&gt;: &lt;em&gt;scripts/data_collector/yahoo/collector.py&lt;/em&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Manual update of data&lt;/p&gt; &lt;pre&gt;&lt;code&gt;python scripts/data_collector/yahoo/collector.py update_data_to_bin --qlib_data_1d_dir &amp;lt;user data dir&amp;gt; --trading_date &amp;lt;start date&amp;gt; --end_date &amp;lt;end date&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;trading_date&lt;/em&gt;: start of trading day&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;end_date&lt;/em&gt;: end of trading day(not included)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- &#xA;- Run the initialization code and get stock data:&#xA;&#xA;  ```python&#xA;  import qlib&#xA;  from qlib.data import D&#xA;  from qlib.constant import REG_CN&#xA;&#xA;  # Initialization&#xA;  mount_path = &#34;~/.qlib/qlib_data/cn_data&#34;  # target_dir&#xA;  qlib.init(mount_path=mount_path, region=REG_CN)&#xA;&#xA;  # Get stock data by Qlib&#xA;  # Load trading calendar with the given time range and frequency&#xA;  print(D.calendar(start_time=&#39;2010-01-01&#39;, end_time=&#39;2017-12-31&#39;, freq=&#39;day&#39;)[:2])&#xA;&#xA;  # Parse a given market name into a stockpool config&#xA;  instruments = D.instruments(&#39;csi500&#39;)&#xA;  print(D.list_instruments(instruments=instruments, start_time=&#39;2010-01-01&#39;, end_time=&#39;2017-12-31&#39;, as_list=True)[:6])&#xA;&#xA;  # Load features of certain instruments in given time range&#xA;  instruments = [&#39;SH600000&#39;]&#xA;  fields = [&#39;$close&#39;, &#39;$volume&#39;, &#39;Ref($close, 1)&#39;, &#39;Mean($close, 3)&#39;, &#39;$high-$low&#39;]&#xA;  print(D.features(instruments, fields, start_time=&#39;2010-01-01&#39;, end_time=&#39;2017-12-31&#39;, freq=&#39;day&#39;).head())&#xA;  ```&#xA; --&gt; &#xA;&lt;h2&gt;Auto Quant Research Workflow&lt;/h2&gt; &#xA;&lt;p&gt;Qlib provides a tool named &lt;code&gt;qrun&lt;/code&gt; to run the whole workflow automatically (including building dataset, training models, backtest and evaluation). You can start an auto quant research workflow and have a graphical reports analysis according to the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Quant Research Workflow: Run &lt;code&gt;qrun&lt;/code&gt; with lightgbm workflow config (&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/LightGBM/workflow_config_lightgbm_Alpha158.yaml&#34;&gt;workflow_config_lightgbm_Alpha158.yaml&lt;/a&gt; as following.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  cd examples  # Avoid running program under the directory contains `qlib`&#xA;  qrun benchmarks/LightGBM/workflow_config_lightgbm_Alpha158.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If users want to use &lt;code&gt;qrun&lt;/code&gt; under debug mode, please use the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m pdb qlib/workflow/cli.py examples/benchmarks/LightGBM/workflow_config_lightgbm_Alpha158.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The result of &lt;code&gt;qrun&lt;/code&gt; is as follows, please refer to &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/backtest.html&#34;&gt;Intraday Trading&lt;/a&gt; for more details about the result.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;&#39;The following are analysis results of the excess return without cost.&#39;&#xA;                       risk&#xA;mean               0.000708&#xA;std                0.005626&#xA;annualized_return  0.178316&#xA;information_ratio  1.996555&#xA;max_drawdown      -0.081806&#xA;&#39;The following are analysis results of the excess return with cost.&#39;&#xA;                       risk&#xA;mean               0.000512&#xA;std                0.005626&#xA;annualized_return  0.128982&#xA;information_ratio  1.444287&#xA;max_drawdown      -0.091078&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Here are detailed documents for &lt;code&gt;qrun&lt;/code&gt; and &lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/workflow.html&#34;&gt;workflow&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Graphical Reports Analysis: Run &lt;code&gt;examples/workflow_by_code.ipynb&lt;/code&gt; with &lt;code&gt;jupyter notebook&lt;/code&gt; to get graphical reports&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Forecasting signal (model prediction) analysis&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Cumulative Return of groups &lt;img src=&#34;http://fintech.msra.cn/images_v070/analysis/analysis_model_cumulative_return.png?v=0.1&#34; alt=&#34;Cumulative Return&#34;&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Return distribution &lt;img src=&#34;http://fintech.msra.cn/images_v070/analysis/analysis_model_long_short.png?v=0.1&#34; alt=&#34;long_short&#34;&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Information Coefficient (IC) &lt;img src=&#34;http://fintech.msra.cn/images_v070/analysis/analysis_model_IC.png?v=0.1&#34; alt=&#34;Information Coefficient&#34;&gt; &lt;img src=&#34;http://fintech.msra.cn/images_v070/analysis/analysis_model_monthly_IC.png?v=0.1&#34; alt=&#34;Monthly IC&#34;&gt; &lt;img src=&#34;http://fintech.msra.cn/images_v070/analysis/analysis_model_NDQ.png?v=0.1&#34; alt=&#34;IC&#34;&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Auto Correlation of forecasting signal (model prediction) &lt;img src=&#34;http://fintech.msra.cn/images_v070/analysis/analysis_model_auto_correlation.png?v=0.1&#34; alt=&#34;Auto Correlation&#34;&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Portfolio analysis&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Backtest return &lt;img src=&#34;http://fintech.msra.cn/images_v070/analysis/report.png?v=0.1&#34; alt=&#34;Report&#34;&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;    &lt;!-- &#xA;- Score IC&#xA;![Score IC](docs/_static/img/score_ic.png)&#xA;- Cumulative Return&#xA;![Cumulative Return](docs/_static/img/cumulative_return.png)&#xA;- Risk Analysis&#xA;![Risk Analysis](docs/_static/img/risk_analysis.png)&#xA;- Rank Label&#xA;![Rank Label](docs/_static/img/rank_label.png)&#xA;--&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://qlib.readthedocs.io/en/latest/component/report.html&#34;&gt;Explanation&lt;/a&gt; of above results&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Building Customized Quant Research Workflow by Code&lt;/h2&gt; &#xA;&lt;p&gt;The automatic workflow may not suit the research workflow of all Quant researchers. To support a flexible Quant research workflow, Qlib also provides a modularized interface to allow researchers to build their own workflow by code. &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/workflow_by_code.ipynb&#34;&gt;Here&lt;/a&gt; is a demo for customized Quant research workflow by code.&lt;/p&gt; &#xA;&lt;h1&gt;Main Challenges &amp;amp; Solutions in Quant Research&lt;/h1&gt; &#xA;&lt;p&gt;Quant investment is an very unique scenario with lots of key challenges to be solved. Currently, Qlib provides some solutions for several of them.&lt;/p&gt; &#xA;&lt;h2&gt;Forecasting: Finding Valuable Signals/Patterns&lt;/h2&gt; &#xA;&lt;p&gt;Accurate forecasting of the stock price trend is a very important part to construct profitable portfolios. However, huge amount of data with various formats in the financial market which make it challenging to build forecasting models.&lt;/p&gt; &#xA;&lt;p&gt;An increasing number of SOTA Quant research works/papers, which focus on building forecasting models to mine valuable signals/patterns in complex financial data, are released in &lt;code&gt;Qlib&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks&#34;&gt;Quant Model (Paper) Zoo&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Here is a list of models built on &lt;code&gt;Qlib&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/XGBoost/&#34;&gt;GBDT based on XGBoost (Tianqi Chen, et al. KDD 2016)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/LightGBM/&#34;&gt;GBDT based on LightGBM (Guolin Ke, et al. NIPS 2017)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/CatBoost/&#34;&gt;GBDT based on Catboost (Liudmila Prokhorenkova, et al. NIPS 2018)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/MLP/&#34;&gt;MLP based on pytorch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/LSTM/&#34;&gt;LSTM based on pytorch (Sepp Hochreiter, et al. Neural computation 1997)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/GRU/&#34;&gt;GRU based on pytorch (Kyunghyun Cho, et al. 2014)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/ALSTM&#34;&gt;ALSTM based on pytorch (Yao Qin, et al. IJCAI 2017)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/GATs/&#34;&gt;GATs based on pytorch (Petar Velickovic, et al. 2017)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/SFM/&#34;&gt;SFM based on pytorch (Liheng Zhang, et al. KDD 2017)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/TFT/&#34;&gt;TFT based on tensorflow (Bryan Lim, et al. International Journal of Forecasting 2019)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/TabNet/&#34;&gt;TabNet based on pytorch (Sercan O. Arik, et al. AAAI 2019)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/DoubleEnsemble/&#34;&gt;DoubleEnsemble based on LightGBM (Chuheng Zhang, et al. ICDM 2020)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/TCTS/&#34;&gt;TCTS based on pytorch (Xueqing Wu, et al. ICML 2021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/Transformer/&#34;&gt;Transformer based on pytorch (Ashish Vaswani, et al. NeurIPS 2017)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/Localformer/&#34;&gt;Localformer based on pytorch (Juyong Jiang, et al.)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/TRA/&#34;&gt;TRA based on pytorch (Hengxu, Dong, et al. KDD 2021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/TCN/&#34;&gt;TCN based on pytorch (Shaojie Bai, et al. 2018)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/ADARNN/&#34;&gt;ADARNN based on pytorch (YunTao Du, et al. 2021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/ADD/&#34;&gt;ADD based on pytorch (Hongshun Tang, et al.2020)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/IGMTF/&#34;&gt;IGMTF based on pytorch (Wentao Xu, et al.2021)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/HIST/&#34;&gt;HIST based on pytorch (Wentao Xu, et al.2021)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Your PR of new Quant models is highly welcomed.&lt;/p&gt; &#xA;&lt;p&gt;The performance of each model on the &lt;code&gt;Alpha158&lt;/code&gt; and &lt;code&gt;Alpha360&lt;/code&gt; dataset can be found &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/README.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Run a single model&lt;/h3&gt; &#xA;&lt;p&gt;All the models listed above are runnable with &lt;code&gt;Qlib&lt;/code&gt;. Users can find the config files we provide and some details about the model through the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks&#34;&gt;benchmarks&lt;/a&gt; folder. More information can be retrieved at the model files listed above.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Qlib&lt;/code&gt; provides three different ways to run a single model, users can pick the one that fits their cases best:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Users can use the tool &lt;code&gt;qrun&lt;/code&gt; mentioned above to run a model&#39;s workflow based from a config file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Users can create a &lt;code&gt;workflow_by_code&lt;/code&gt; python script based on the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/workflow_by_code.py&#34;&gt;one&lt;/a&gt; listed in the &lt;code&gt;examples&lt;/code&gt; folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Users can use the script &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/run_all_model.py&#34;&gt;&lt;code&gt;run_all_model.py&lt;/code&gt;&lt;/a&gt; listed in the &lt;code&gt;examples&lt;/code&gt; folder to run a model. Here is an example of the specific shell command to be used: &lt;code&gt;python run_all_model.py run --models=lightgbm&lt;/code&gt;, where the &lt;code&gt;--models&lt;/code&gt; arguments can take any number of models listed above(the available models can be found in &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks/&#34;&gt;benchmarks&lt;/a&gt;). For more use cases, please refer to the file&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/run_all_model.py&#34;&gt;docstrings&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Each baseline has different environment dependencies, please make sure that your python version aligns with the requirements(e.g. TFT only supports Python 3.6~3.7 due to the limitation of &lt;code&gt;tensorflow==1.15.0&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Run multiple models&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Qlib&lt;/code&gt; also provides a script &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/run_all_model.py&#34;&gt;&lt;code&gt;run_all_model.py&lt;/code&gt;&lt;/a&gt; which can run multiple models for several iterations. (&lt;strong&gt;Note&lt;/strong&gt;: the script only support &lt;em&gt;Linux&lt;/em&gt; for now. Other OS will be supported in the future. Besides, it doesn&#39;t support parallel running the same model for multiple times as well, and this will be fixed in the future development too.)&lt;/p&gt; &#xA;&lt;p&gt;The script will create a unique virtual environment for each model, and delete the environments after training. Thus, only experiment results such as &lt;code&gt;IC&lt;/code&gt; and &lt;code&gt;backtest&lt;/code&gt; results will be generated and stored.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example of running all the models for 10 iterations:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python run_all_model.py run 10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It also provides the API to run specific models at once. For more use cases, please refer to the file&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/run_all_model.py&#34;&gt;docstrings&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks_dynamic&#34;&gt;Adapting to Market Dynamics&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Due to the non-stationary nature of the environment of the financial market, the data distribution may change in different periods, which makes the performance of models build on training data decays in the future test data. So adapting the forecasting models/strategies to market dynamics is very important to the model/strategies&#39; performance.&lt;/p&gt; &#xA;&lt;p&gt;Here is a list of solutions built on &lt;code&gt;Qlib&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks_dynamic/baseline/&#34;&gt;Rolling Retraining&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/benchmarks_dynamic/DDG-DA/&#34;&gt;DDG-DA on pytorch (Wendi, et al. AAAI 2022)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Quant Dataset Zoo&lt;/h1&gt; &#xA;&lt;p&gt;Dataset plays a very important role in Quant. Here is a list of the datasets built on &lt;code&gt;Qlib&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Dataset&lt;/th&gt; &#xA;   &lt;th&gt;US Market&lt;/th&gt; &#xA;   &lt;th&gt;China Market&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/qlib/contrib/data/handler.py&#34;&gt;Alpha360&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/qlib/contrib/data/handler.py&#34;&gt;Alpha158&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://qlib.readthedocs.io/en/latest/advanced/alpha.html&#34;&gt;Here&lt;/a&gt; is a tutorial to build dataset with &lt;code&gt;Qlib&lt;/code&gt;. Your PR to build new Quant dataset is highly welcomed.&lt;/p&gt; &#xA;&lt;h1&gt;More About Qlib&lt;/h1&gt; &#xA;&lt;p&gt;If you want to have a quick glance at the most frequently used components of qlib, you can try notebooks &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/examples/tutorial/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The detailed documents are organized in &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/docs/&#34;&gt;docs&lt;/a&gt;. &lt;a href=&#34;http://www.sphinx-doc.org&#34;&gt;Sphinx&lt;/a&gt; and the readthedocs theme is required to build the documentation in html formats.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd docs/&#xA;conda install sphinx sphinx_rtd_theme -y&#xA;# Otherwise, you can install them with pip&#xA;# pip install sphinx sphinx_rtd_theme&#xA;make html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also view the &lt;a href=&#34;http://qlib.readthedocs.io/&#34;&gt;latest document&lt;/a&gt; online directly.&lt;/p&gt; &#xA;&lt;p&gt;Qlib is in active and continuing development. Our plan is in the roadmap, which is managed as a &lt;a href=&#34;https://github.com/microsoft/qlib/projects/1&#34;&gt;github project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Offline Mode and Online Mode&lt;/h1&gt; &#xA;&lt;p&gt;The data server of Qlib can either deployed as &lt;code&gt;Offline&lt;/code&gt; mode or &lt;code&gt;Online&lt;/code&gt; mode. The default mode is offline mode.&lt;/p&gt; &#xA;&lt;p&gt;Under &lt;code&gt;Offline&lt;/code&gt; mode, the data will be deployed locally.&lt;/p&gt; &#xA;&lt;p&gt;Under &lt;code&gt;Online&lt;/code&gt; mode, the data will be deployed as a shared data service. The data and their cache will be shared by all the clients. The data retrieval performance is expected to be improved due to a higher rate of cache hits. It will consume less disk space, too. The documents of the online mode can be found in &lt;a href=&#34;https://qlib-server.readthedocs.io/&#34;&gt;Qlib-Server&lt;/a&gt;. The online mode can be deployed automatically with &lt;a href=&#34;https://qlib-server.readthedocs.io/en/latest/build.html#one-click-deployment-in-azure&#34;&gt;Azure CLI based scripts&lt;/a&gt;. The source code of online data server can be found in &lt;a href=&#34;https://github.com/microsoft/qlib-server&#34;&gt;Qlib-Server repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Performance of Qlib Data Server&lt;/h2&gt; &#xA;&lt;p&gt;The performance of data processing is important to data-driven methods like AI technologies. As an AI-oriented platform, Qlib provides a solution for data storage and data processing. To demonstrate the performance of Qlib data server, we compare it with several other data storage solutions.&lt;/p&gt; &#xA;&lt;p&gt;We evaluate the performance of several storage solutions by finishing the same task, which creates a dataset (14 features/factors) from the basic OHLCV daily data of a stock market (800 stocks each day from 2007 to 2020). The task involves data queries and processing.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;HDF5&lt;/th&gt; &#xA;   &lt;th&gt;MySQL&lt;/th&gt; &#xA;   &lt;th&gt;MongoDB&lt;/th&gt; &#xA;   &lt;th&gt;InfluxDB&lt;/th&gt; &#xA;   &lt;th&gt;Qlib -E -D&lt;/th&gt; &#xA;   &lt;th&gt;Qlib +E -D&lt;/th&gt; &#xA;   &lt;th&gt;Qlib +E +D&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Total (1CPU) (seconds)&lt;/td&gt; &#xA;   &lt;td&gt;184.4±3.7&lt;/td&gt; &#xA;   &lt;td&gt;365.3±7.5&lt;/td&gt; &#xA;   &lt;td&gt;253.6±6.7&lt;/td&gt; &#xA;   &lt;td&gt;368.2±3.6&lt;/td&gt; &#xA;   &lt;td&gt;147.0±8.8&lt;/td&gt; &#xA;   &lt;td&gt;47.6±1.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;7.4±0.3&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Total (64CPU) (seconds)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;8.8±0.6&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;4.2±0.2&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;+(-)E&lt;/code&gt; indicates with (out) &lt;code&gt;ExpressionCache&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;+(-)D&lt;/code&gt; indicates with (out) &lt;code&gt;DatasetCache&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Most general-purpose databases take too much time to load data. After looking into the underlying implementation, we find that data go through too many layers of interfaces and unnecessary format transformations in general-purpose database solutions. Such overheads greatly slow down the data loading process. Qlib data are stored in a compact format, which is efficient to be combined into arrays for scientific computation.&lt;/p&gt; &#xA;&lt;h1&gt;Related Reports&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://analyticsindiamag.com/qlib/&#34;&gt;Guide To Qlib: Microsoft’s AI Investment Platform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/47bP5YwxfTp2uTHjUBzJQQ&#34;&gt;微软也搞AI量化平台？还是开源的！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/vsJv7lsgjEi-ALYUz4CvtQ&#34;&gt;微矿Qlib：业内首个AI量化投资开源平台&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contact Us&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have any issues, please create issue &lt;a href=&#34;https://github.com/microsoft/qlib/issues/new/choose&#34;&gt;here&lt;/a&gt; or send messages in &lt;a href=&#34;https://gitter.im/Microsoft/qlib&#34;&gt;gitter&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you want to make contributions to &lt;code&gt;Qlib&lt;/code&gt;, please &lt;a href=&#34;https://github.com/microsoft/qlib/compare&#34;&gt;create pull requests&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For other reasons, you are welcome to contact us by email(&lt;a href=&#34;mailto:qlib@microsoft.com&#34;&gt;qlib@microsoft.com&lt;/a&gt;). &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;We are recruiting new members(both FTEs and interns), your resumes are welcome!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Join IM discussion groups:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://gitter.im/Microsoft/qlib&#34;&gt;Gitter&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;http://fintech.msra.cn/images_v070/qrcode/gitter_qr.png&#34; alt=&#34;image&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;We appreciate all contributions and thank all the contributors! &lt;a href=&#34;https://github.com/microsoft/qlib/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=microsoft/qlib&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Before we released Qlib as an open-source project on Github in Sep 2020, Qlib is an internal project in our group. Unfortunately, the internal commit history is not kept. A lot of members in our group have also contributed a lot to Qlib, which includes Ruihua Wang, Yinda Zhang, Haisu Yu, Shuyu Wang, Bochen Pang, and &lt;a href=&#34;https://github.com/evanzd/evanzd&#34;&gt;Dong Zhou&lt;/a&gt;. Especially thanks to &lt;a href=&#34;https://github.com/evanzd/evanzd&#34;&gt;Dong Zhou&lt;/a&gt; due to his initial version of Qlib.&lt;/p&gt; &#xA;&lt;h2&gt;Guidance&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions.&lt;br&gt; &lt;strong&gt;Here are some &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/qlib/main/docs/developer/code_standard_and_dev_guide.rst&#34;&gt;code standards and development guidance&lt;/a&gt; for submiting a pull request.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Making contributions is not a hard thing. Solving an issue(maybe just answering a question raised in &lt;a href=&#34;https://github.com/microsoft/qlib/issues&#34;&gt;issues list&lt;/a&gt; or &lt;a href=&#34;https://gitter.im/Microsoft/qlib&#34;&gt;gitter&lt;/a&gt;), fixing/issuing a bug, improving the documents and even fixing a typo are important contributions to Qlib.&lt;/p&gt; &#xA;&lt;p&gt;For example, if you want to contribute to Qlib&#39;s document/code, you can follow the steps in the figure below.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/demon143/qlib/raw/main/docs/_static/img/change%20doc.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t know how to start to contribute, you can refer to the following examples.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Examples&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Solving issues&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/microsoft/qlib/issues/749&#34;&gt;Answer a question&lt;/a&gt;; &lt;a href=&#34;https://github.com/microsoft/qlib/issues/765&#34;&gt;issuing&lt;/a&gt; or &lt;a href=&#34;https://github.com/microsoft/qlib/pull/792&#34;&gt;fixing&lt;/a&gt; a bug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Docs&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/microsoft/qlib/pull/797/files&#34;&gt;Improve docs quality&lt;/a&gt; ; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/774&#34;&gt;Fix a typo&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Feature&lt;/td&gt; &#xA;   &lt;td&gt;Implement a &lt;a href=&#34;https://github.com/microsoft/qlib/projects&#34;&gt;requested feature&lt;/a&gt; like &lt;a href=&#34;https://github.com/microsoft/qlib/pull/754&#34;&gt;this&lt;/a&gt;; &lt;a href=&#34;https://github.com/microsoft/qlib/pull/539/files&#34;&gt;Refactor interfaces&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dataset&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/microsoft/qlib/pull/733&#34;&gt;Add a dataset&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Models&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/microsoft/qlib/pull/689&#34;&gt;Implement a new model&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/qlib/tree/main/examples/benchmarks#contributing&#34;&gt;some instructions to contribute models&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/qlib/labels/good%20first%20issue&#34;&gt;Good first issues&lt;/a&gt; are labelled to indicate that they are easy to start your contributions.&lt;/p&gt; &#xA;&lt;p&gt;You can find some impefect implementation in Qlib by &lt;code&gt;rg &#39;TODO|FIXME&#39; qlib&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you would like to become one of Qlib&#39;s maintainers to contribute more (e.g. help merge PR, triage issues), please contact us by email(&lt;a href=&#34;mailto:qlib@microsoft.com&#34;&gt;qlib@microsoft.com&lt;/a&gt;). We are glad to help to upgrade your permission.&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the right to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>python/cpython</title>
    <updated>2022-07-23T01:31:44Z</updated>
    <id>tag:github.com,2022-07-23:/python/cpython</id>
    <link href="https://github.com/python/cpython" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Python programming language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;This is Python version 3.12.0 alpha 0&lt;/h1&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://github.com/python/cpython/workflows/Tests/badge.svg&#34;&gt;https://github.com/python/cpython/workflows/Tests/badge.svg&lt;/a&gt; :alt: CPython build status on GitHub Actions :target: &lt;a href=&#34;https://github.com/python/cpython/actions&#34;&gt;https://github.com/python/cpython/actions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://dev.azure.com/python/cpython/_apis/build/status/Azure%20Pipelines%20CI?branchName=main&#34;&gt;https://dev.azure.com/python/cpython/_apis/build/status/Azure%20Pipelines%20CI?branchName=main&lt;/a&gt; :alt: CPython build status on Azure DevOps :target: &lt;a href=&#34;https://dev.azure.com/python/cpython/_build/latest?definitionId=4&amp;amp;branchName=main&#34;&gt;https://dev.azure.com/python/cpython/_build/latest?definitionId=4&amp;amp;branchName=main&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/badge/discourse-join_chat-brightgreen.svg&#34;&gt;https://img.shields.io/badge/discourse-join_chat-brightgreen.svg&lt;/a&gt; :alt: Python Discourse chat :target: &lt;a href=&#34;https://discuss.python.org/&#34;&gt;https://discuss.python.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright © 2001-2022 Python Software Foundation. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;See the end of this file for further copyright and license information.&lt;/p&gt; &#xA;&lt;p&gt;.. contents::&lt;/p&gt; &#xA;&lt;h2&gt;General Information&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;https://www.python.org&#34;&gt;https://www.python.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Source code: &lt;a href=&#34;https://github.com/python/cpython&#34;&gt;https://github.com/python/cpython&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Issue tracker: &lt;a href=&#34;https://github.com/python/cpython/issues&#34;&gt;https://github.com/python/cpython/issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Documentation: &lt;a href=&#34;https://docs.python.org&#34;&gt;https://docs.python.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Developer&#39;s Guide: &lt;a href=&#34;https://devguide.python.org/&#34;&gt;https://devguide.python.org/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing to CPython&lt;/h2&gt; &#xA;&lt;p&gt;For more complete instructions on contributing to CPython development, see the &lt;code&gt;Developer Guide&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;.. _Developer Guide: &lt;a href=&#34;https://devguide.python.org/&#34;&gt;https://devguide.python.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using Python&lt;/h2&gt; &#xA;&lt;p&gt;Installable Python kits, and information about using Python, are available at &lt;code&gt;python.org&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;.. _python.org: &lt;a href=&#34;https://www.python.org/&#34;&gt;https://www.python.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build Instructions&lt;/h2&gt; &#xA;&lt;p&gt;On Unix, Linux, BSD, macOS, and Cygwin::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./configure&#xA;make&#xA;make test&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will install Python as &lt;code&gt;python3&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can pass many options to the configure script; run &lt;code&gt;./configure --help&lt;/code&gt; to find out more. On macOS case-insensitive file systems and on Cygwin, the executable is called &lt;code&gt;python.exe&lt;/code&gt;; elsewhere it&#39;s just &lt;code&gt;python&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Building a complete Python installation requires the use of various additional third-party libraries, depending on your build platform and configure options. Not all standard library modules are buildable or useable on all platforms. Refer to the &lt;code&gt;Install dependencies &amp;lt;https://devguide.python.org/setup/#install-dependencies&amp;gt;&lt;/code&gt;_ section of the &lt;code&gt;Developer Guide&lt;/code&gt;_ for current detailed information on dependencies for various Linux distributions and macOS.&lt;/p&gt; &#xA;&lt;p&gt;On macOS, there are additional configure and build options related to macOS framework and universal builds. Refer to &lt;code&gt;Mac/README.rst &amp;lt;https://github.com/python/cpython/blob/main/Mac/README.rst&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;On Windows, see &lt;code&gt;PCbuild/readme.txt &amp;lt;https://github.com/python/cpython/blob/main/PCbuild/readme.txt&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;If you wish, you can create a subdirectory and invoke configure from there. For example::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir debug&#xA;cd debug&#xA;../configure --with-pydebug&#xA;make&#xA;make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(This will fail if you &lt;em&gt;also&lt;/em&gt; built at the top-level directory. You should do a &lt;code&gt;make clean&lt;/code&gt; at the top-level first.)&lt;/p&gt; &#xA;&lt;p&gt;To get an optimized build of Python, &lt;code&gt;configure --enable-optimizations&lt;/code&gt; before you run &lt;code&gt;make&lt;/code&gt;. This sets the default make targets up to enable Profile Guided Optimization (PGO) and may be used to auto-enable Link Time Optimization (LTO) on some platforms. For more details, see the sections below.&lt;/p&gt; &#xA;&lt;p&gt;Profile Guided Optimization ^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/p&gt; &#xA;&lt;p&gt;PGO takes advantage of recent versions of the GCC or Clang compilers. If used, either via &lt;code&gt;configure --enable-optimizations&lt;/code&gt; or by manually running &lt;code&gt;make profile-opt&lt;/code&gt; regardless of configure flags, the optimized build process will perform the following steps:&lt;/p&gt; &#xA;&lt;p&gt;The entire Python directory is cleaned of temporary files that may have resulted from a previous compilation.&lt;/p&gt; &#xA;&lt;p&gt;An instrumented version of the interpreter is built, using suitable compiler flags for each flavor. Note that this is just an intermediary step. The binary resulting from this step is not good for real-life workloads as it has profiling instructions embedded inside.&lt;/p&gt; &#xA;&lt;p&gt;After the instrumented interpreter is built, the Makefile will run a training workload. This is necessary in order to profile the interpreter&#39;s execution. Note also that any output, both stdout and stderr, that may appear at this step is suppressed.&lt;/p&gt; &#xA;&lt;p&gt;The final step is to build the actual interpreter, using the information collected from the instrumented one. The end result will be a Python binary that is optimized; suitable for distribution or production installation.&lt;/p&gt; &#xA;&lt;p&gt;Link Time Optimization ^^^^^^^^^^^^^^^^^^^^^^&lt;/p&gt; &#xA;&lt;p&gt;Enabled via configure&#39;s &lt;code&gt;--with-lto&lt;/code&gt; flag. LTO takes advantage of the ability of recent compiler toolchains to optimize across the otherwise arbitrary &lt;code&gt;.o&lt;/code&gt; file boundary when building final executables or shared libraries for additional performance gains.&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s New&lt;/h2&gt; &#xA;&lt;p&gt;We have a comprehensive overview of the changes in the &lt;code&gt;What&#39;s New in Python 3.12 &amp;lt;https://docs.python.org/3.12/whatsnew/3.12.html&amp;gt;&lt;/code&gt;_ document. For a more detailed change log, read &lt;code&gt;Misc/NEWS &amp;lt;https://github.com/python/cpython/blob/main/Misc/NEWS.d&amp;gt;&lt;/code&gt;&lt;em&gt;, but a full accounting of changes can only be gleaned from the &lt;code&gt;commit history &amp;lt;https://github.com/python/cpython/commits/main&amp;gt;&lt;/code&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to install multiple versions of Python, see the section below entitled &#34;Installing multiple versions&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Documentation for Python 3.12 &amp;lt;https://docs.python.org/3.12/&amp;gt;&lt;/code&gt;_ is online, updated daily.&lt;/p&gt; &#xA;&lt;p&gt;It can also be downloaded in many formats for faster access. The documentation is downloadable in HTML, PDF, and reStructuredText formats; the latter version is primarily for documentation authors, translators, and people with special formatting requirements.&lt;/p&gt; &#xA;&lt;p&gt;For information about building Python&#39;s documentation, refer to &lt;code&gt;Doc/README.rst &amp;lt;https://github.com/python/cpython/blob/main/Doc/README.rst&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;h2&gt;Converting From Python 2.x to 3.x&lt;/h2&gt; &#xA;&lt;p&gt;Significant backward incompatible changes were made for the release of Python 3.0, which may cause programs written for Python 2 to fail when run with Python 3. For more information about porting your code from Python 2 to Python 3, see the &lt;code&gt;Porting HOWTO &amp;lt;https://docs.python.org/3/howto/pyporting.html&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;To test the interpreter, type &lt;code&gt;make test&lt;/code&gt; in the top-level directory. The test set produces some output. You can generally ignore the messages about skipped tests due to optional features which can&#39;t be imported. If a message is printed about a failed test or a traceback or core dump is produced, something is wrong.&lt;/p&gt; &#xA;&lt;p&gt;By default, tests are prevented from overusing resources like disk space and memory. To enable these tests, run &lt;code&gt;make testall&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If any tests fail, you can re-run the failing test(s) in verbose mode. For example, if &lt;code&gt;test_os&lt;/code&gt; and &lt;code&gt;test_gdb&lt;/code&gt; failed, you can run::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make test TESTOPTS=&#34;-v test_os test_gdb&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the failure persists and appears to be a problem with Python rather than your environment, you can &lt;code&gt;file a bug report &amp;lt;https://github.com/python/cpython/issues&amp;gt;&lt;/code&gt;_ and include relevant output from that command to show the issue.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;code&gt;Running &amp;amp; Writing Tests &amp;lt;https://devguide.python.org/runtests/&amp;gt;&lt;/code&gt;_ for more on running tests.&lt;/p&gt; &#xA;&lt;h2&gt;Installing multiple versions&lt;/h2&gt; &#xA;&lt;p&gt;On Unix and Mac systems if you intend to install multiple versions of Python using the same installation prefix (&lt;code&gt;--prefix&lt;/code&gt; argument to the configure script) you must take care that your primary python executable is not overwritten by the installation of a different version. All files and directories installed using &lt;code&gt;make altinstall&lt;/code&gt; contain the major and minor version and can thus live side-by-side. &lt;code&gt;make install&lt;/code&gt; also creates &lt;code&gt;${prefix}/bin/python3&lt;/code&gt; which refers to &lt;code&gt;${prefix}/bin/python3.X&lt;/code&gt;. If you intend to install multiple versions using the same prefix you must decide which version (if any) is your &#34;primary&#34; version. Install that version using &lt;code&gt;make install&lt;/code&gt;. Install all other versions using &lt;code&gt;make altinstall&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example, if you want to install Python 2.7, 3.6, and 3.12 with 3.12 being the primary version, you would execute &lt;code&gt;make install&lt;/code&gt; in your 3.12 build directory and &lt;code&gt;make altinstall&lt;/code&gt; in the others.&lt;/p&gt; &#xA;&lt;h2&gt;Issue Tracker and Mailing List&lt;/h2&gt; &#xA;&lt;p&gt;Bug reports are welcome! You can use Github to &lt;code&gt;report bugs &amp;lt;https://github.com/python/cpython/issues&amp;gt;&lt;/code&gt;&lt;em&gt;, and/or &lt;code&gt;submit pull requests &amp;lt;https://github.com/python/cpython/pulls&amp;gt;&lt;/code&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also follow development discussion on the &lt;code&gt;python-dev mailing list &amp;lt;https://mail.python.org/mailman/listinfo/python-dev/&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;h2&gt;Proposals for enhancement&lt;/h2&gt; &#xA;&lt;p&gt;If you have a proposal to change Python, you may want to send an email to the &lt;code&gt;comp.lang.python&lt;/code&gt;_ or &lt;code&gt;python-ideas&lt;/code&gt;_ mailing lists for initial feedback. A Python Enhancement Proposal (PEP) may be submitted if your idea gains ground. All current PEPs, as well as guidelines for submitting a new PEP, are listed at &lt;code&gt;peps.python.org &amp;lt;https://peps.python.org/&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;.. _python-ideas: &lt;a href=&#34;https://mail.python.org/mailman/listinfo/python-ideas/&#34;&gt;https://mail.python.org/mailman/listinfo/python-ideas/&lt;/a&gt; .. _comp.lang.python: &lt;a href=&#34;https://mail.python.org/mailman/listinfo/python-list&#34;&gt;https://mail.python.org/mailman/listinfo/python-list&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Release Schedule&lt;/h2&gt; &#xA;&lt;p&gt;See :pep:&lt;code&gt;693&lt;/code&gt; for Python 3.12 release details.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright and License Information&lt;/h2&gt; &#xA;&lt;p&gt;Copyright © 2001-2022 Python Software Foundation. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;Copyright © 2000 BeOpen.com. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;Copyright © 1995-2001 Corporation for National Research Initiatives. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;Copyright © 1991-1995 Stichting Mathematisch Centrum. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;code&gt;LICENSE &amp;lt;https://github.com/python/cpython/blob/main/LICENSE&amp;gt;&lt;/code&gt;_ for information on the history of this software, terms &amp;amp; conditions for usage, and a DISCLAIMER OF ALL WARRANTIES.&lt;/p&gt; &#xA;&lt;p&gt;This Python distribution contains &lt;em&gt;no&lt;/em&gt; GNU General Public License (GPL) code, so it may be used in proprietary projects. There are interfaces to some GNU code but these are entirely optional.&lt;/p&gt; &#xA;&lt;p&gt;All trademarks referenced herein are property of their respective holders.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>xuebinqin/DIS</title>
    <updated>2022-07-23T01:31:44Z</updated>
    <id>tag:github.com,2022-07-23:/xuebinqin/DIS</id>
    <link href="https://github.com/xuebinqin/DIS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is the repo for our new project Highly Accurate Dichotomous Image Segmentation&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;420&#34; height=&#34;320&#34; src=&#34;https://raw.githubusercontent.com/xuebinqin/DIS/main/figures/dis-logo-official.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xuebinqin/DIS/main/figures/dis5k-v1-sailship.jpeg&#34; alt=&#34;dis5k-v1-sailship&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://arxiv.org/pdf/2203.03041.pdf&#34;&gt;Highly Accurate Dichotomous Image Segmentation （ECCV 2022）&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://xuebinqin.github.io/&#34;&gt;Xuebin Qin&lt;/a&gt;, &lt;a href=&#34;https://scholar.google.co.uk/citations?user=6yvjpQQAAAAJ&amp;amp;hl=en&#34;&gt;Hang Dai&lt;/a&gt;, &lt;a href=&#34;https://scholar.google.de/citations?user=3lMuodUAAAAJ&amp;amp;hl=en&#34;&gt;Xiaobin Hu&lt;/a&gt;, &lt;a href=&#34;https://dengpingfan.github.io/&#34;&gt;Deng-Ping Fan*&lt;/a&gt;, &lt;a href=&#34;https://scholar.google.com/citations?user=z84rLjoAAAAJ&amp;amp;hl=en&#34;&gt;Ling Shao&lt;/a&gt;, &lt;a href=&#34;https://scholar.google.com/citations?user=TwMib_QAAAAJ&amp;amp;hl=en&#34;&gt;Luc Van Gool&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;This is the official repo for our newly formulated DIS task:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://xuebinqin.github.io/dis/index.html&#34;&gt;&lt;strong&gt;Project Page&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://arxiv.org/pdf/2203.03041.pdf&#34;&gt;&lt;strong&gt;Arxiv&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Updates !!!&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;** (2022-Jul.-17)** Our paper, code and dataset are now officially released!!! Please check our project page for more details: &lt;a href=&#34;https://xuebinqin.github.io/dis/index.html&#34;&gt;&lt;strong&gt;Project Page&lt;/strong&gt;&lt;/a&gt;.&lt;br&gt;&lt;/h2&gt; &#xA;&lt;p&gt;** (2022-Jul.-5)** Our DIS work is now accepted by ECCV 2022, the code and dataset will be released before July 17th, 2022. Please be aware of our updates.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;1. Our Dichotomous Image Segmentation (DIS) Dataset&lt;/h2&gt; &#xA;&lt;h3&gt;1.1 &lt;a href=&#34;https://xuebinqin.github.io/dis/index.html&#34;&gt;DIS dataset V1.0: DIS5K&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Download： &lt;a href=&#34;https://drive.google.com/file/d/1jOC2zK0GowBvEt03B7dGugCRDVAoeIqq/view?usp=sharing&#34;&gt;Google Drive&lt;/a&gt; or &lt;a href=&#34;https://pan.baidu.com/s/1y6CQJYledfYyEO0C_Gejpw?pwd=rtgw&#34;&gt;Baidu Pan 提取码：rtgw&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xuebinqin/DIS/main/figures/DIS5k-dataset-v1-sailship.png&#34; alt=&#34;dis5k-dataset-v1-sailship&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xuebinqin/DIS/main/figures/complexities-qual.jpeg&#34; alt=&#34;complexities-qual&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xuebinqin/DIS/main/figures/categories.jpeg&#34; alt=&#34;categories&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;1.2 &lt;a href=&#34;https://github.com/xuebinqin/DIS&#34;&gt;DIS dataset V2.0&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Although our DIS5K V1.0 includes samples from more than 200 categories, many categories, such as human, animals, cars and so on, in real world are not included. &lt;a href=&#34;&#34;&gt;So the current version (v1.0) of our dataset may limit the robustness of the trained models.&lt;/a&gt; To build the comprehensive and large-scale highly accurate dichotomous image segmentation dataset, we are building our DIS dataset V2.0. The V2.0 will be released soon. Please stay tuned.&lt;/p&gt; &#xA;&lt;p&gt;Samples from DIS dataset V2.0. &lt;img src=&#34;https://raw.githubusercontent.com/xuebinqin/DIS/main/figures/dis-v2.jpg&#34; alt=&#34;dis-v2&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;2. APPLICATIONS of Our DIS5K Dataset&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;3D Modeling&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xuebinqin/DIS/main/figures/3d-modeling.png&#34; alt=&#34;3d-modeling&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Image Editing&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xuebinqin/DIS/main/figures/ship-demo.gif&#34; alt=&#34;ship-demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Art Design Materials&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xuebinqin/DIS/main/figures/bg-removal.gif&#34; alt=&#34;bg-removal&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Still Image Animation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xuebinqin/DIS/main/figures/view-move.gif&#34; alt=&#34;view-move&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;AR&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xuebinqin/DIS/main/figures/motor-demo.gif&#34; alt=&#34;motor-demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3D Rendering&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xuebinqin/DIS/main/figures/video-3d.gif&#34; alt=&#34;video-3d&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;3. Architecture of Our IS-Net&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xuebinqin/DIS/main/figures/is-net.png&#34; alt=&#34;is-net&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;4. Human Correction Efforts (HCE)&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xuebinqin/DIS/main/figures/hce-metric.png&#34; alt=&#34;hce-metric&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;5. Experimental Results&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Predicted Maps, &lt;a href=&#34;https://drive.google.com/file/d/1FMtDLFrL6xVc41eKlLnuZWMBAErnKv0Y/view?usp=sharing&#34;&gt;(Google Drive)&lt;/a&gt;, &lt;a href=&#34;https://pan.baidu.com/s/1WUk2RYYpii2xzrvLna9Fsg?pwd=ph1d&#34;&gt;(Baidu Pan 提取码：ph1d)&lt;/a&gt;, of Our IS-Net and Other SOTAs&lt;/h3&gt; &#xA;&lt;h3&gt;Qualitative Comparisons Against SOTAs&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xuebinqin/DIS/main/figures/qual-comp.jpg&#34; alt=&#34;qual-comp&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Quantitative Comparisons Against SOTAs&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xuebinqin/DIS/main/figures/quan-comp.png&#34; alt=&#34;qual-comp&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;6. Run Our Code&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;(1) Clone this repo&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/xuebinqin/DIS.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;(2) Configuring the environment: go to the root &lt;code&gt;DIS&lt;/code&gt; folder and run&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda env create -f pytorch18.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can check the &lt;code&gt;requirements.txt&lt;/code&gt; to configure the dependancies.&lt;/p&gt; &#xA;&lt;h3&gt;(3) Train:&lt;/h3&gt; &#xA;&lt;p&gt;(a) Open &lt;code&gt;train_valid_inference_main.py&lt;/code&gt;, set the path of your to-be-inferenced &lt;code&gt;train_datasets&lt;/code&gt; and &lt;code&gt;valid_datasets&lt;/code&gt;, e.g., &lt;code&gt;valid_datasets=[dataset_vd]&lt;/code&gt; &lt;br&gt; (b) Set the &lt;code&gt;hypar[&#34;mode&#34;]&lt;/code&gt; to &lt;code&gt;&#34;train&#34;&lt;/code&gt; &lt;br&gt; (c) Create a new folder &lt;code&gt;your_model_weights&lt;/code&gt; in the directory &lt;code&gt;saved_models&lt;/code&gt; and set it as the &lt;code&gt;hypar[&#34;model_path&#34;] =&#34;../saved_models/your_model_weights&#34;&lt;/code&gt; and make sure &lt;code&gt;hypar[&#34;valid_out_dir&#34;]&lt;/code&gt;(line 668) is set to &lt;code&gt;&#34;&#34;&lt;/code&gt;, otherwise the prediction maps of the validation stage will be saved to that directory, which will slow the training speed down &lt;br&gt; (d) Run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python train_valid_inference_main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;(4) Inference&lt;/h3&gt; &#xA;&lt;p&gt;(a). Download the pre-trained weights (for fair academic comparisons only, the optimized model for engineering or common use will be released soon) &lt;code&gt;isnet.pth&lt;/code&gt; from &lt;a href=&#34;https://drive.google.com/file/d/1KyMpRjewZdyYfxHPYcd-ZbanIXtin0Sn/view?usp=sharing&#34;&gt;(Google Drive)&lt;/a&gt; or &lt;a href=&#34;https://pan.baidu.com/s/1-X2WutiBkWPt-oakuvZ10w?pwd=xbfk&#34;&gt;(Baidu Pan 提取码：xbfk)&lt;/a&gt; and store &lt;code&gt;isnet.pth&lt;/code&gt; in &lt;code&gt;saved_models/IS-Net&lt;/code&gt; &lt;br&gt; (b) Open &lt;code&gt;train_valid_inference_main.py&lt;/code&gt;, set the path of your to-be-inferenced &lt;code&gt;valid_datasets&lt;/code&gt;, e.g., &lt;code&gt;valid_datasets=[dataset_te1, dataset_te2, dataset_te3, dataset_te4]&lt;/code&gt; &lt;br&gt; (c) Set the &lt;code&gt;hypar[&#34;mode&#34;]&lt;/code&gt; to &lt;code&gt;&#34;valid&#34;&lt;/code&gt; &lt;br&gt; (d) Set the output directory of your predicted maps, e.g., &lt;code&gt;hypar[&#34;valid_out_dir&#34;] = &#34;../DIS5K-Results-test&#34;&lt;/code&gt; &lt;br&gt; (e) Run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python train_valid_inference_main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;(5) Use of our Human Correction Efforts(HCE) metric&lt;/h3&gt; &#xA;&lt;p&gt;Set the ground truth directory &lt;code&gt;gt_root&lt;/code&gt; and the prediction directory &lt;code&gt;pred_root&lt;/code&gt;. To reduce the time costs for computing HCE, the skeletion of the DIS5K dataset can be pre-computed and stored in &lt;code&gt;gt_ske_root&lt;/code&gt;. If &lt;code&gt;gt_ske_root=&#34;&#34;&lt;/code&gt;, the HCE code will compute the skeleton online which usually takes a lot for time for large size ground truth. Then, run &lt;code&gt;python hce_metric_main.py&lt;/code&gt;. Other metrics are evaluated based on the &lt;a href=&#34;https://github.com/mczhuge/SOCToolbox&#34;&gt;SOCToolbox&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;7. Term of Use&lt;/h2&gt; &#xA;&lt;p&gt;Our code and evaluation metric use Apache License 2.0. The Terms of use for our DIS5K dataset is provided as &lt;a href=&#34;https://raw.githubusercontent.com/xuebinqin/DIS/main/DIS5K-Dataset-Terms-of-Use.pdf&#34;&gt;DIS5K-Dataset-Terms-of-Use.pdf&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;We would like to thank Dr. &lt;a href=&#34;https://scholar.google.co.uk/citations?user=T9MTcK0AAAAJ&amp;amp;hl=en&#34;&gt;Ibrahim Almakky&lt;/a&gt; for his helps in implementing the dataloader cache machanism of loading large-size training samples and Jiayi Zhu for his efforts in re-organizing our code and dataset.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code&gt;@InProceedings{qin2022,&#xA;      author={Xuebin Qin and Hang Dai and Xiaobin Hu and Deng-Ping Fan and Ling Shao and Luc Van Gool},&#xA;      title={Highly Accurate Dichotomous Image Segmentation},&#xA;      booktitle={ECCV},&#xA;      year={2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Our Previous Works: &lt;a href=&#34;https://github.com/xuebinqin/U-2-Net&#34;&gt;U&lt;sup&gt;2&lt;/sup&gt;-Net&lt;/a&gt;, &lt;a href=&#34;https://github.com/xuebinqin/BASNet&#34;&gt;BASNet&lt;/a&gt;.&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;@InProceedings{Qin_2020_PR,&#xA;      title = {U2-Net: Going Deeper with Nested U-Structure for Salient Object Detection},&#xA;      author = {Qin, Xuebin and Zhang, Zichen and Huang, Chenyang and Dehghan, Masood and Zaiane, Osmar and Jagersand, Martin},&#xA;      journal = {Pattern Recognition},&#xA;      volume = {106},&#xA;      pages = {107404},&#xA;      year = {2020}&#xA;}&#xA;&#xA;@InProceedings{Qin_2019_CVPR,&#xA;        author = {Qin, Xuebin and Zhang, Zichen and Huang, Chenyang and Gao, Chao and Dehghan, Masood and Jagersand, Martin},&#xA;        title = {BASNet: Boundary-Aware Salient Object Detection},&#xA;        booktitle = {The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)},&#xA;        month = {June},&#xA;        year = {2019}&#xA;}&#xA;&#xA;@article{qin2021boundary,&#xA;       title={Boundary-aware segmentation network for mobile and web applications},&#xA;       author={Qin, Xuebin and Fan, Deng-Ping and Huang, Chenyang and Diagne, Cyril and Zhang, Zichen and Sant&#39;Anna, Adri{\`a} Cabeza and Suarez, Albert and Jagersand, Martin and Shao, Ling},&#xA;       journal={arXiv preprint arXiv:2101.04704},&#xA;       year={2021}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>