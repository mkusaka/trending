<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-17T01:33:56Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mem0ai/mem0</title>
    <updated>2024-07-17T01:33:56Z</updated>
    <id>tag:github.com,2024-07-17:/mem0ai/mem0</id>
    <link href="https://github.com/mem0ai/mem0" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The memory layer for Personalized AI&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mem0ai/mem0/main/docs/images/mem0-bg.png&#34; width=&#34;500px&#34; alt=&#34;Mem0 Logo&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://embedchain.ai/slack&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/slack-embedchain-brightgreen.svg?logo=slack&#34; alt=&#34;Slack&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://embedchain.ai/discord&#34;&gt; &lt;img src=&#34;https://dcbadge.vercel.app/api/server/6PzXDgEjG5?style=flat&#34; alt=&#34;Discord&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/mem0ai&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/mem0ai&#34; alt=&#34;Twitter&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Mem0: The Memory Layer for Personalized AI&lt;/h1&gt; &#xA;&lt;p&gt;Mem0 provides a smart, self-improving memory layer for Large Language Models, enabling personalized AI experiences across applications.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: The Mem0 repository now also includes the Embedchain project. We continue to maintain and support Embedchain ‚ù§Ô∏è. You can find the Embedchain codebase in the &lt;a href=&#34;https://github.com/mem0ai/mem0/tree/main/embedchain&#34;&gt;embedchain&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;üöÄ Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install mem0ai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Basic Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from mem0 import Memory&#xA;&#xA;# Initialize Mem0&#xA;m = Memory()&#xA;&#xA;# Store a memory from any unstructured text&#xA;result = m.add(&#34;I am working on improving my tennis skills. Suggest some online courses.&#34;, user_id=&#34;alice&#34;, metadata={&#34;category&#34;: &#34;hobbies&#34;})&#xA;print(result)&#xA;# Created memory: Improving her tennis skills. Looking for online suggestions.&#xA;&#xA;# Retrieve memories&#xA;all_memories = m.get_all()&#xA;print(all_memories)&#xA;&#xA;# Search memories&#xA;related_memories = m.search(query=&#34;What are Alice&#39;s hobbies?&#34;, user_id=&#34;alice&#34;)&#xA;print(related_memories)&#xA;&#xA;# Update a memory&#xA;result = m.update(memory_id=&#34;m1&#34;, data=&#34;Likes to play tennis on weekends&#34;)&#xA;print(result)&#xA;&#xA;# Get memory history&#xA;history = m.history(memory_id=&#34;m1&#34;)&#xA;print(history)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üîë Core Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-Level Memory&lt;/strong&gt;: User, Session, and AI Agent memory retention&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Adaptive Personalization&lt;/strong&gt;: Continuous improvement based on interactions&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Developer-Friendly API&lt;/strong&gt;: Simple integration into various applications&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cross-Platform Consistency&lt;/strong&gt;: Uniform behavior across devices&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Managed Service&lt;/strong&gt;: Hassle-free hosted solution&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìñ Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For detailed usage instructions and API reference, visit our documentation at &lt;a href=&#34;https://docs.mem0.ai&#34;&gt;docs.mem0.ai&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üîß Advanced Usage&lt;/h2&gt; &#xA;&lt;p&gt;For production environments, you can use Qdrant as a vector store:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from mem0 import Memory&#xA;&#xA;config = {&#xA;    &#34;vector_store&#34;: {&#xA;        &#34;provider&#34;: &#34;qdrant&#34;,&#xA;        &#34;config&#34;: {&#xA;            &#34;host&#34;: &#34;localhost&#34;,&#xA;            &#34;port&#34;: 6333,&#xA;        }&#xA;    },&#xA;}&#xA;&#xA;m = Memory.from_config(config)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üó∫Ô∏è Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integration with various LLM providers&lt;/li&gt; &#xA; &lt;li&gt;Support for LLM frameworks&lt;/li&gt; &#xA; &lt;li&gt;Integration with AI Agents frameworks&lt;/li&gt; &#xA; &lt;li&gt;Customizable memory creation/update rules&lt;/li&gt; &#xA; &lt;li&gt;Hosted platform support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üôã‚Äç‚ôÇÔ∏è Support&lt;/h2&gt; &#xA;&lt;p&gt;Join our Slack or Discord community for support and discussions. If you have any questions, feel free to reach out to us using one of the following methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://embedchain.ai/discord&#34;&gt;Join our Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://embedchain.ai/slack&#34;&gt;Join our Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/mem0ai&#34;&gt;Follow us on Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:founders@mem0.ai&#34;&gt;Email us&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>