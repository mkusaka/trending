<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-22T01:35:52Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nyaoouo/GBFR-ACT</title>
    <updated>2024-02-22T01:35:52Z</updated>
    <id>tag:github.com,2024-02-22:/nyaoouo/GBFR-ACT</id>
    <link href="https://github.com/nyaoouo/GBFR-ACT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A combat data track and analytic mod, suchas dps tracking&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GBFR-ACT&lt;/h1&gt; &#xA;&lt;h2&gt;Granblue Fantasy Relink - Analytics for Combat Tracking&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nyaoouo/GBFR-ACT/master/demo.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;备注&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;关于伤害动作构成&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;动作名称来源于群众提供，可能存在错误，错漏欢迎issue或者pr&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;关于统计错误&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;统计数据来源于半瓶水逆向分析，如发现错误数据请附带复现步骤（什么环境，什么动作，理论多少记录多少）（f12控制台有事件输出）提issue&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;步骤&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;安装python311&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;下载链接: &lt;a href=&#34;https://www.python.org/ftp/python/3.11.6/python-3.11.6-amd64.exe&#34;&gt;https://www.python.org/ftp/python/3.11.6/python-3.11.6-amd64.exe&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;注：建议以管理员权限安装&lt;/li&gt; &#xA;   &lt;li&gt;注2：本脚本对conda环境支持不好，建议不要使用conda环境&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;运行act_ws.py或uac_start.cmd&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;双击运行&lt;code&gt;act_ws.py&lt;/code&gt;或&lt;code&gt;uac_start.cmd&lt;/code&gt;，如果不出问题会弹出一个cmd窗口描述ACT已经安装成功&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;打开act_ws.html&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;建议使用Chrome浏览器打开&lt;code&gt;act_ws.html&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Remarks&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;About damage action composition&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The action names are provided by the public, and there may be errors. If you find any, please feel free to open an issue or a pull request.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;About statistical errors&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The statistical data is based on incomplete reverse engineering. If you find any incorrect data, please provide the reproduction steps (what environment, what action, how many records are theoretically recorded) (f12 console has event output) to open an issue.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Steps&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install Python 3.11&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Download link: &lt;a href=&#34;https://www.python.org/ftp/python/3.11.6/python-3.11.6-amd64.exe&#34;&gt;https://www.python.org/ftp/python/3.11.6/python-3.11.6-amd64.exe&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Note: It is recommended to install with administrator privileges.&lt;/li&gt; &#xA;   &lt;li&gt;Note 2: This script does not support conda environments well, it is advised not to use conda environments.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run act_ws.py or uac_start.cmd&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Double-click &lt;code&gt;act_ws.py&lt;/code&gt; or &lt;code&gt;uac_start.cmd&lt;/code&gt; to run. If there are no issues, a cmd window will pop up indicating that ACT has been successfully installed.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open act_ws.html&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It is recommended to use Chrome browser to open &lt;code&gt;act_ws.html&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>vvbbnn00/WARP-Clash-API</title>
    <updated>2024-02-22T01:35:52Z</updated>
    <id>tag:github.com,2024-02-22:/vvbbnn00/WARP-Clash-API</id>
    <link href="https://github.com/vvbbnn00/WARP-Clash-API" rel="alternate"></link>
    <summary type="html">&lt;p&gt;该项目可以让你通过订阅的方式使用Cloudflare WARP+，自动获取流量。This project enables you to use Cloudflare WARP+ through subscription, automatically acquiring traffic.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WARP Clash API&lt;/h1&gt; &#xA;&lt;p&gt;中文 | &lt;a href=&#34;https://raw.githubusercontent.com/vvbbnn00/WARP-Clash-API/master/README_en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;本项目是完全非商业项目，仅供学习交流使用，请勿用于非法用途，否则后果自负。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🤔 这是什么？&lt;/h2&gt; &#xA;&lt;p&gt;该项目可以让你通过订阅的方式使用&lt;code&gt;WARP+&lt;/code&gt;，支持&lt;code&gt;Clash&lt;/code&gt;、&lt;code&gt;Shadowrocket&lt;/code&gt;等客户端。项目内置了刷取&lt;code&gt;WARP+&lt;/code&gt; 流量的功能，可以让你的&lt;code&gt;WARP+&lt;/code&gt;流量不再受限制（每&lt;code&gt;18&lt;/code&gt;秒可获得&lt;code&gt;1GB&lt;/code&gt;流量），同时，配备了&lt;code&gt;IP&lt;/code&gt;选优功能。支持&lt;code&gt;Docker compose&lt;/code&gt; 一键部署，无需额外操作，即可享受你自己的&lt;code&gt;WARP+&lt;/code&gt;私有高速节点！&lt;/p&gt; &#xA;&lt;h2&gt;💡 特色功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;💻 支持&lt;code&gt;Clash&lt;/code&gt;、&lt;code&gt;Surge&lt;/code&gt;、&lt;code&gt;Shadowrocket&lt;/code&gt;等客户端&lt;/li&gt; &#xA; &lt;li&gt;🌏 支持&lt;code&gt;IP&lt;/code&gt;选优&lt;/li&gt; &#xA; &lt;li&gt;🐋 支持&lt;code&gt;Docker compose&lt;/code&gt;一键部署&lt;/li&gt; &#xA; &lt;li&gt;📕 全自动刷取&lt;code&gt;WARP+&lt;/code&gt;流量，请求经过代理，防封&lt;code&gt;IP&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;❓ 每次更新订阅随机节点，让你体验抽卡的乐趣&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 快速上手&lt;/h2&gt; &#xA;&lt;h3&gt;1. 安装&lt;code&gt;Docker&lt;/code&gt;和&lt;code&gt;Docker compose&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Docker&lt;/code&gt;安装教程：&lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;https://docs.docker.com/engine/install/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Docker compose&lt;/code&gt;安装教程：&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;https://docs.docker.com/compose/install/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. 下载项目&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/vvbbnn00/WARP-Clash-API.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. [可选] 配置&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;若您需要在公网上部署该项目，建议您配置&lt;code&gt;SECRET_KEY&lt;/code&gt;与&lt;code&gt;PUBLIC_URL&lt;/code&gt;。在项目目录下创建&lt;code&gt;.env.local&lt;/code&gt;文件，写入如下内容：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SECRET_KEY=your_secret_key&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;关于环境变量的更多信息，请参考&lt;a href=&#34;https://raw.githubusercontent.com/vvbbnn00/WARP-Clash-API/master/#-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F&#34;&gt;环境变量&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;4. 编译并运行&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;5. 获取订阅链接&lt;/h3&gt; &#xA;&lt;p&gt;访问&lt;code&gt;http://你的IP:21001&lt;/code&gt;，输入&lt;code&gt;SECRET_KEY&lt;/code&gt;（若没有配置，则可以留空），即可获取订阅链接。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;🎉 大功告成&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🌏 手动IP选优&lt;/h2&gt; &#xA;&lt;p&gt;项目本身包含了一个选优过的&lt;code&gt;IP&lt;/code&gt;列表，但是由于&lt;code&gt;WARP&lt;/code&gt;的&lt;code&gt;IP&lt;/code&gt;是动态的，所以可能会出现&lt;code&gt;IP&lt;/code&gt;不可用的情况。若您需要手动选优，可以遵循以下步骤：&lt;/p&gt; &#xA;&lt;p&gt;若您通过&lt;code&gt;docker-compose&lt;/code&gt;部署，可以在项目目录下通过以下命令手动执行&lt;code&gt;IP&lt;/code&gt;选优：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose exec warp-clash python3 app.py optimize&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;否则，可以在项目目录下执行以下命令：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 app.py optimize&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🔧 环境变量&lt;/h2&gt; &#xA;&lt;p&gt;没错，您可以通过环境变量来配置该项目，在配置时，只需新建一个&lt;code&gt;.env.local&lt;/code&gt;文件，写入您需要的环境变量即可。&lt;/p&gt; &#xA;&lt;p&gt;以下是可用的环境变量：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;变量名&lt;/th&gt; &#xA;   &lt;th&gt;默认值&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SECRET_KEY&lt;/td&gt; &#xA;   &lt;td&gt;无&lt;/td&gt; &#xA;   &lt;td&gt;用于保护订阅链接，若不配置，则不需要输入&lt;code&gt;SECRET_KEY&lt;/code&gt;即可获取订阅链接&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DO_GET_WARP_DATA&lt;/td&gt; &#xA;   &lt;td&gt;True&lt;/td&gt; &#xA;   &lt;td&gt;是否刷取&lt;code&gt;WARP+&lt;/code&gt;流量，若不需要刷取流量，则设置为&lt;code&gt;False&lt;/code&gt;即可&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;REQUEST_RATE_LIMIT&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;限制X秒一次请求，该功能不太稳定，建议不要开启&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RANDOM_COUNT&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;每次更新订阅随机节点的数量&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LOSS_THRESHOLD&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;丢包率阈值，超过该阈值的&lt;code&gt;IP&lt;/code&gt;将被剔除&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DELAY_THRESHOLD&lt;/td&gt; &#xA;   &lt;td&gt;500&lt;/td&gt; &#xA;   &lt;td&gt;延迟阈值，超过该阈值的&lt;code&gt;IP&lt;/code&gt;将被剔除&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PROXY_POOL_URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://getproxy.bzpl.tech/get/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;IP代理池地址，用于刷取&lt;code&gt;WARP+&lt;/code&gt;流量，您可以自行搭建，参照&lt;a href=&#34;https://github.com/jhao104/proxy_pool&#34;&gt;proxy_pool&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PUBLIC_URL&lt;/td&gt; &#xA;   &lt;td&gt;无&lt;/td&gt; &#xA;   &lt;td&gt;部署在公网上时，填写公网&lt;code&gt;IP&lt;/code&gt;或域名，用于生成订阅链接，比如 &lt;code&gt;https://subs.zeabur.app&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🗂️ 引用项目&lt;/h2&gt; &#xA;&lt;p&gt;本项目的开发参照了以下项目，感谢这些开源项目的作者：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/Misaka-blog/warp-script&#34;&gt;warp-script&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://replit.com/@aliilapro/warp&#34;&gt;warp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ViRb3/wgcf&#34;&gt;wgcf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jhao104/proxy_pool&#34;&gt;proxy_pool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.maxmind.com/geoip/geolite2-free-geolocation-data&#34;&gt;geolite2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;👥 社区部署的实例&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tofree.zeabur.app&#34;&gt;https://tofree.zeabur.app&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;一个免费的 WARP Clash API 实例，由社区部署。&lt;/p&gt;</summary>
  </entry>
</feed>