<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-27T01:37:30Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pgmpy/pgmpy</title>
    <updated>2025-05-27T01:37:30Z</updated>
    <id>tag:github.com,2025-05-27:/pgmpy/pgmpy</id>
    <link href="https://github.com/pgmpy/pgmpy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Python Library for Causal and Probabilistic Modeling using Bayesian Networks&lt;/p&gt;&lt;hr&gt;&lt;div&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.pgmpy.org&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pgmpy/pgmpy/dev/logo/logo_color.png&#34; width=&#34;175&#34; align=&#34;left&#34;&gt;&lt;/a&gt; pgmpy is a Python library for causal and probabilistic modeling using Bayesian Networks and related models. It provides a uniform API for building, learning, and analyzing models such as Bayesian Networks, Dynamic Bayesian Networks, Directed Acyclic Graphs (DAGs), and Structural Equation Models(SEMs). By integrating tools from both probabilistic inference and causal inference, pgmpy enables users to seamlessly transition between predictive and interventional analyses.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/pgmpy/pgmpy/actions/workflows/ci.yml/badge.svg?branch=dev&#34; alt=&#34;Build&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/pgmpy/pgmpy&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/pgmpy/pgmpy/branch/dev/graph/badge.svg?token=UaJMCdHaEF&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/pgmpy/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/pgmpy?color=blue&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://anaconda.org/conda-forge/pgmpy&#34;&gt;&lt;img src=&#34;https://img.shields.io/conda/vn/conda-forge/pgmpy&#34; alt=&#34;!conda&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/pgmpy/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/pgmpy.svg?color=blue&#34; alt=&#34;Python Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pgmpy/pgmpy/raw/dev/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pgmpy/pgmpy&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypistats.org/packages/pgmpy&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/pgmpy.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://pgmpy.org/pgmpy-benchmarks/&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/benchmarked%20by-asv-blue.svg?style=flat&#34; alt=&#34;asv&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://discord.gg/DRkdKaumBs&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-7289DA?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Join the pgmpy Discord server&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pgmpy.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Docs-blue?style=for-the-badge&amp;amp;logo=Read-the-Docs&amp;amp;logoColor=white&amp;amp;link=https://inseq.org&#34; alt=&#34;Read the Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pgmpy/pgmpy/tree/dev/examples&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Examples-orange?style=for-the-badge&amp;amp;logo=Jupyter&amp;amp;logoColor=white&amp;amp;link=https://github.com/pgmpy/pgmpy/tree/dev/examples&#34; alt=&#34;Examples&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pgmpy/pgmpy_notebook&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Tutorial-orange?style=for-the-badge&amp;amp;logo=Jupyter&amp;amp;logoColor=white&amp;amp;link=https://github.com/pgmpy/pgmpy_notebook&#34; alt=&#34;Tutorial&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Key Features&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pgmpy.org/examples/Structure%20Learning%20in%20Bayesian%20Networks.html&#34;&gt;&lt;strong&gt;Causal Discovery / Structure Learning&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Learn the model structure from data, with optional integration of &lt;strong&gt;expert knowledge&lt;/strong&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pgmpy.org/metrics/metrics.html&#34;&gt;&lt;strong&gt;Causal Validation&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Assess how compatible the causal structure is with the data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pgmpy.org/examples/Learning%20Parameters%20in%20Discrete%20Bayesian%20Networks.html&#34;&gt;&lt;strong&gt;Parameter Learning&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Estimate model parameters (e.g., conditional probability distributions) from observed data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pgmpy.org/examples/Inference%20in%20Discrete%20Bayesian%20Networks.html&#34;&gt;&lt;strong&gt;Probabilistic Inference&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Compute posterior distributions conditioned on observed evidence.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pgmpy.org/examples/Causal%20Inference.html&#34;&gt;&lt;strong&gt;Causal Inference&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Compute interventional and counterfactual distributions using do-calculus.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/pgmpy/pgmpy/raw/dev/examples/Simulating_Data.ipynb&#34;&gt;&lt;strong&gt;Simulations&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Generate synthetic data under specified evidence or interventions.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Resources and Links&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Example Notebooks:&lt;/strong&gt; &lt;a href=&#34;https://github.com/pgmpy/pgmpy/tree/dev/examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tutorial Notebooks:&lt;/strong&gt; &lt;a href=&#34;https://github.com/pgmpy/pgmpy_notebook&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Blog Posts:&lt;/strong&gt; &lt;a href=&#34;https://medium.com/@ankurankan_23083&#34;&gt;Medium&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; &lt;a href=&#34;https://pgmpy.org/&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bug Reports and Feature Requests:&lt;/strong&gt; &lt;a href=&#34;https://github.com/pgmpy/pgmpy/issues&#34;&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Questions:&lt;/strong&gt; &lt;a href=&#34;https://discord.gg/DRkdKaumBs&#34;&gt;discord&lt;/a&gt; Â· &lt;a href=&#34;https://stackoverflow.com/questions/tagged/pgmpy&#34;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;pgmpy is available on both &lt;a href=&#34;https://pypi.org/project/pgmpy/&#34;&gt;PyPI&lt;/a&gt; and &lt;a href=&#34;https://anaconda.org/conda-forge/pgmpy&#34;&gt;anaconda&lt;/a&gt;. To install from PyPI, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install pgmpy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install from conda-forge, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda install conda-forge::pgmpy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Discrete Data&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pgmpy.utils import get_example_model&#xA;&#xA;# Load a Discrete Bayesian Network and simulate data.&#xA;discrete_bn = get_example_model(&#39;alarm&#39;)&#xA;alarm_df = discrete_bn.simulate(n_samples=100)&#xA;&#xA;# Learn a network from simulated data.&#xA;from pgmpy.estimators import PC&#xA;dag = PC(data=alarm_df).estimate(ci_test=&#39;chi_square&#39;, return_type=&#39;dag&#39;)&#xA;&#xA;# Learn the parameters from the data.&#xA;dag_fitted = dag.fit(alarm_df)&#xA;dag_fitted.get_cpds()&#xA;&#xA;# Drop a column and predict using the learned model.&#xA;evidence_df = alarm_df.drop(columns=[&#39;FIO2&#39;], axis=1)&#xA;pred_FIO2 = dag_fitted.predict(evidence_df)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linear Gaussian Data&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Load an example Gaussian Bayesian Network and simulate data&#xA;gaussian_bn = get_example_model(&#39;ecoli70&#39;)&#xA;ecoli_df = gaussian_bn.simulate(n_samples=100)&#xA;&#xA;# Learn the network from simulated data.&#xA;from pgmpy.estimators import PC&#xA;dag = PC(data=ecoli_df).estimate(ci_test=&#39;pearsonr&#39;, return_type=&#39;dag&#39;)&#xA;&#xA;# Learn the parameters from the data.&#xA;from pgmpy.models import LinearGausianBayesianNetwork&#xA;gaussian_bn = LinearGausianBayesianNetwork(dag.edges())&#xA;dag_fitted = gaussian_bn.fit(ecoli_df)&#xA;dag_fitted.get_cpds()&#xA;&#xA;# Drop a column and predict using the learned model.&#xA;evidence_df = ecoli_df.drop(columns=[&#39;ftsJ&#39;], axis=1)&#xA;pred_ftsJ = dag_fitted.predict(evidence_df)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome all contributions --not just code-- to pgmpy. Please refer out &lt;a href=&#34;https://github.com/pgmpy/pgmpy/raw/dev/Contributing.md&#34;&gt;contributing guide&lt;/a&gt; for more details. We also offer mentorship for new contributors and maintain a list of potential &lt;a href=&#34;https://github.com/pgmpy/pgmpy/wiki/Mentored-Projects&#34;&gt;mentored projects&lt;/a&gt;. If you are interested in contributing to pgmpy, please join our &lt;a href=&#34;https://discord.gg/DRkdKaumBs&#34;&gt;discord&lt;/a&gt; server and introduce yourself. We will be happy to help you get started.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Vexa-ai/vexa</title>
    <updated>2025-05-27T01:37:30Z</updated>
    <id>tag:github.com,2025-05-27:/Vexa-ai/vexa</id>
    <link href="https://github.com/Vexa-ai/vexa" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Self-hosted, multi-user API that drops bots into Google Meet for real-time transcripts.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;left&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Vexa-ai/vexa/main/assets/logodark.svg?sanitize=true&#34; alt=&#34;Vexa Logo&#34; width=&#34;40&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vexa-ai/vexa/main/DEPLOYMENT.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Docker-Run_Locally-2496ED?style=flat-square&amp;amp;logo=docker&amp;amp;logoColor=white&#34; alt=&#34;Run Locally&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Vexa-ai/vexa/main/DEPLOYMENT.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Server-Self_Hosted-2EA44F?style=flat-square&amp;amp;logo=serverless&amp;amp;logoColor=white&#34; alt=&#34;Self Hosted&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Vexa: API for &lt;strong&gt;Real-Time Meeting Transcription&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;ð Help us reach 1000 stars! ð&lt;/b&gt;&lt;br&gt; &lt;b&gt;Current: &lt;img src=&#34;https://img.shields.io/github/stars/Vexa-ai/vexa?style=social&#34;&gt; â Goal: 1000 â­ï¸&lt;/b&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/Vexa-ai/vexa/stargazers&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;ð¬ &lt;a href=&#34;https://discord.gg/Ga9duGkVz9&#34;&gt;Join Discord Community!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Vexa is an API for &lt;strong&gt;real-time meeting transcription&lt;/strong&gt; using &lt;strong&gt;meeting bots&lt;/strong&gt; and direct &lt;strong&gt;streaming from web/mobile apps&lt;/strong&gt;. It extracts knowledge from various platforms including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Google Meet&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zoom&lt;/strong&gt; (coming soon)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Microsoft Teams&lt;/strong&gt; (coming soon)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It serves as an &lt;strong&gt;privacy-first&lt;/strong&gt;, &lt;strong&gt;open source&lt;/strong&gt; alternative to &lt;code&gt;recall.ai&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It focuses on doing one job well: &lt;strong&gt;clean, private, real-time transcription under your control so you can safely build on top&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build on Top. In Hours, Not Months&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Build powerful meeting assistants (like Otter.ai, Fireflies.ai, Fathom) for your startup, internal use, or custom integrations.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Vexa API provides powerful abstractions and a clear separation of concerns, enabling you to build sophisticated applications on top with a safe and enjoyable coding experience.&lt;/p&gt; &#xA;&lt;p&gt;For instance, the &lt;strong&gt;Vexa Example Client&lt;/strong&gt; (see &lt;a href=&#34;https://raw.githubusercontent.com/Vexa-ai/vexa/main/BUILT-WITH-VEXA.md&#34;&gt;Projects Built with Vexa&lt;/a&gt;) was built in just 3 hours of live coding with Cursor, showcasing the rapid development possible with Vexa.&lt;/p&gt; &#xA;&lt;p&gt;Furthermore, with our &lt;strong&gt;n8n integration&lt;/strong&gt; (see &lt;a href=&#34;https://raw.githubusercontent.com/Vexa-ai/vexa/main/BUILT-WITH-VEXA.md&#34;&gt;Projects Built with Vexa&lt;/a&gt; for examples), you can create incredibly complex workflows with no code, leveraging real-time transcription from Google Meet (with support for other platforms coming soon).&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Vexa-ai/vexa/main/assets/simplified_flow.png&#34; alt=&#34;Vexa Architecture Flow&#34; width=&#34;100%&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vexa-ai/vexa/main/services/api-gateway&#34;&gt;api-gateway&lt;/a&gt;: Routes API requests to appropriate services&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vexa-ai/vexa/main/services/bot-manager&#34;&gt;bot-manager&lt;/a&gt;: Handles bot lifecycle management&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vexa-ai/vexa/main/services/vexa-bot&#34;&gt;vexa-bot&lt;/a&gt;: The bot that joins meetings and captures audio&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vexa-ai/vexa/main/services/WhisperLive&#34;&gt;WhisperLive&lt;/a&gt;: Real-time audio transcription service&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vexa-ai/vexa/main/services/transcription-collector&#34;&gt;transcription-collector&lt;/a&gt;: Processes and stores transcription segments&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Vexa-ai/vexa/main/libs/shared-models/shared_models/models.py&#34;&gt;Database models&lt;/a&gt;: Data structures for storing meeting information&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Public Hosted API&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ð Get your API key at &lt;a href=&#34;https://www.vexa.ai/?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=vexa_repo&#34;&gt;www.vexa.ai&lt;/a&gt; to try Vexa instantly.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ð Read &lt;a href=&#34;https://raw.githubusercontent.com/Vexa-ai/vexa/main/DEPLOYMENT.md&#34;&gt;DEPLOYMENT.md&lt;/a&gt; for self-hosting and local run with single &lt;code&gt;make all&lt;/code&gt; on CPU even on laptop or on your GPU server.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The Vexa API is &lt;strong&gt;publicly available&lt;/strong&gt; at &lt;a href=&#34;https://www.vexa.ai/?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=vexa_repo&#34;&gt;www.vexa.ai&lt;/a&gt; with &lt;strong&gt;self-service access&lt;/strong&gt; - get your API key in just 3 clicks and have everything running in under 5 minutes.&lt;/p&gt; &#xA;&lt;h3&gt;Key features in this release:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Instant API Access&lt;/strong&gt;: Self-service API keys available directly from &lt;a href=&#34;https://www.vexa.ai/?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=vexa_repo&#34;&gt;www.vexa.ai&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Google Meet Bot Integration&lt;/strong&gt;: Programmatically send bots to join and transcribe meetings&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-Time Transcription&lt;/strong&gt;: Access meeting transcripts as they happen through the API&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-Time Translation&lt;/strong&gt;: Change the language of transcription to get instant translations across 99 languages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API Capabilities&lt;/h2&gt; &#xA;&lt;h2&gt;Simple API Integration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Set up and running in under 5 minutes&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Get your API key in 3 clicks at &lt;a href=&#34;https://www.vexa.ai/?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=vexa_repo&#34;&gt;www.vexa.ai&lt;/a&gt; and start using the API immediately.&lt;/p&gt; &#xA;&lt;h3&gt;Create a meeting bot&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# POST /bots&#xA;curl -X POST https://gateway.dev.vexa.ai/bots \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -H &#34;X-API-Key: YOUR_API_KEY&#34; \&#xA;  -d &#39;{&#xA;    &#34;native_meeting_id&#34;: &#34;xxx-xxxx-xxx&#34;,&#xA;    &#34;platform&#34;: &#34;google_meet&#34;&#xA;  }&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Retrieve meeting transcript&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# GET /transcripts/{platform}/{native_meeting_id}&#xA;# Example assumes native_meeting_id is derived from the meeting URL&#xA;curl -H &#34;X-API-Key: YOUR_CLIENT_API_KEY&#34; \&#xA;  https://gateway.dev.vexa.ai/transcripts/google_meet/xxx-xxxx-xxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;data&#34;: {&#xA;    &#34;meeting_id&#34;: &#34;meet_abc123&#34;,&#xA;    &#34;transcripts&#34;: [&#xA;      {&#xA;        &#34;time&#34;: &#34;00:01:15&#34;,&#xA;        &#34;speaker&#34;: &#34;John Smith&#34;,&#xA;        &#34;text&#34;: &#34;Let&#39;s discuss the quarterly results.&#34;&#xA;      },&#xA;      {&#xA;        &#34;time&#34;: &#34;00:01:23&#34;,&#xA;        &#34;speaker&#34;: &#34;Sarah Johnson&#34;,&#xA;        &#34;text&#34;: &#34;The Q3 revenue exceeded our projections by 15%.&#34;&#xA;      },&#xA;      {&#xA;        &#34;time&#34;: &#34;00:01:42&#34;,&#xA;        &#34;speaker&#34;: &#34;Michael Chen&#34;,&#xA;        &#34;text&#34;: &#34;Customer acquisition costs decreased by 12% from last quarter.&#34;&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Projects Built with Vexa&lt;/h2&gt; &#xA;&lt;p&gt;To see examples of projects built using the Vexa API, including our example client and other community contributions, please see the &lt;a href=&#34;https://raw.githubusercontent.com/Vexa-ai/vexa/main/BUILT-WITH-VEXA.md&#34;&gt;BUILT-WITH-VEXA.md&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ð« If you&#39;re building with Vexa, we&#39;d love your support! &lt;a href=&#34;https://github.com/Vexa-ai/vexa/stargazers&#34;&gt;Star our repo&lt;/a&gt; to help us reach 600 stars.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Features:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-time multilingual transcription&lt;/strong&gt; supporting &lt;strong&gt;99 languages&lt;/strong&gt; with &lt;strong&gt;Whisper&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-time translation&lt;/strong&gt; across all 99 supported languages&lt;/li&gt; &#xA; &lt;li&gt;(&lt;strong&gt;Note:&lt;/strong&gt; Additional features like LLM processing, RAG, and MCP server access are planned - see &#39;Coming Next&#39;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Current Status&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Public API&lt;/strong&gt;: Fully available with self-service API keys at &lt;a href=&#34;https://www.vexa.ai/?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=vexa_repo&#34;&gt;www.vexa.ai&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Google Meet Bot:&lt;/strong&gt; Fully operational bot for joining Google Meet calls&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-time Transcription:&lt;/strong&gt; Low-latency, multilingual transcription service is live&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-time Translation:&lt;/strong&gt; Instant translation between 99 supported languages&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pending:&lt;/strong&gt; Speaker identification is under development&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Coming Next&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Microsoft Teams Bot:&lt;/strong&gt; Integration for automated meeting attendance (June 2025)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zoom Bot:&lt;/strong&gt; Integration for automated meeting attendance (July 2025)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Direct Streaming:&lt;/strong&gt; Ability to stream audio directly from web/mobile apps&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-time LLM Processing:&lt;/strong&gt; Enhancements for transcript readability and features&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Meeting Knowledge Extraction (RAG):&lt;/strong&gt; Post-meeting analysis and Q&amp;amp;A&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MCP Server:&lt;/strong&gt; Access to transcription data for agents&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Self-Deployment&lt;/h2&gt; &#xA;&lt;p&gt;For &lt;strong&gt;security-minded companies&lt;/strong&gt;, Vexa offers complete &lt;strong&gt;self-deployment&lt;/strong&gt; options.&lt;/p&gt; &#xA;&lt;p&gt;To run Vexa locally on your own infrastructure, the primary command you&#39;ll use after cloning the repository is &lt;code&gt;make all&lt;/code&gt;. This command sets up the environment (CPU by default, or GPU if specified), builds all necessary Docker images, and starts the services.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=bHMIByieVek&#34;&gt;3 min video tutorial&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Detailed instructions: &lt;a href=&#34;https://raw.githubusercontent.com/Vexa-ai/vexa/main/DEPLOYMENT.md&#34;&gt;Local Deployment and Testing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributors are welcome! Join our community and help shape Vexa&#39;s future. Here&#39;s how to get involved:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Understand Our Direction&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Check out the &lt;strong&gt;project roadmap&lt;/strong&gt; to see where we&#39;re headed: &lt;a href=&#34;https://github.com/orgs/Vexa-ai/projects/1&#34;&gt;Vexa Project Roadmap&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Engage on Discord&lt;/strong&gt; (&lt;a href=&#34;https://discord.gg/Ga9duGkVz9&#34;&gt;Discord Community&lt;/a&gt;):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Introduce Yourself&lt;/strong&gt;: Start by saying hello in the introductions channel.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Stay Informed&lt;/strong&gt;: Check the Discord channel for known issues, feature requests, and ongoing discussions. Issues actively being discussed often have dedicated channels.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Discuss Ideas&lt;/strong&gt;: Share your feature requests, report bugs, and participate in conversations about a specific issue you&#39;re interested in delivering.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Get Assigned&lt;/strong&gt;: If you feel ready to contribute, discuss the issue you&#39;d like to work on and ask to get assigned on Discord.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Development Process&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Browse available &lt;strong&gt;tasks&lt;/strong&gt; (often linked from Discord discussions or the roadmap).&lt;/li&gt; &#xA;   &lt;li&gt;Request task assignment through Discord if not already assigned.&lt;/li&gt; &#xA;   &lt;li&gt;Submit &lt;strong&gt;pull requests&lt;/strong&gt; for review.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Critical Tasks &amp;amp; Bounties&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Selected &lt;strong&gt;high-priority tasks&lt;/strong&gt; may be marked with &lt;strong&gt;bounties&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Bounties are sponsored by the &lt;strong&gt;Vexa core team&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Check task descriptions (often on the roadmap or Discord) for bounty details and requirements.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We look forward to your contributions!&lt;/p&gt; &#xA;&lt;h2&gt;Project Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ð &lt;a href=&#34;https://vexa.ai&#34;&gt;Vexa Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ð¼ &lt;a href=&#34;https://www.linkedin.com/company/vexa-ai/&#34;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ð¦ &lt;a href=&#34;https://x.com/grankin_d&#34;&gt;X (@grankin_d)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ð¬ &lt;a href=&#34;https://discord.gg/Ga9duGkVz9&#34;&gt;Discord Community&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/dmitry-grankin/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/LinkedIn-Dmitry_Grankin-0A66C2?style=flat-square&amp;amp;logo=linkedin&amp;amp;logoColor=white&#34; alt=&#34;Meet Founder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/Ga9duGkVz9&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-Community-5865F2?style=flat-square&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Join Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Vexa is licensed under the &lt;strong&gt;Apache License, Version 2.0&lt;/strong&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/Vexa-ai/vexa/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt; &#xA;&lt;p&gt;The Vexa name and logo are trademarks of &lt;strong&gt;Vexa.ai Inc&lt;/strong&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>