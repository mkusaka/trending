<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-12T01:36:40Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>crestalnetwork/intentkit</title>
    <updated>2025-04-12T01:36:40Z</updated>
    <id>tag:github.com,2025-04-12:/crestalnetwork/intentkit</id>
    <link href="https://github.com/crestalnetwork/intentkit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open and fair framework for everyone to build AI agents equipped with powerful skills. Launch your agent, improve the world, your wallet, or both!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IntentKit&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/docs/images/intentkit_banner.png&#34; alt=&#34;IntentKit by Crestal&#34; width=&#34;100%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;IntentKit is an autonomous agent framework that enables the creation and management of AI agents with various capabilities including blockchain interaction, social media management, and custom skill integration.&lt;/p&gt; &#xA;&lt;h2&gt;Alpha Warning&lt;/h2&gt; &#xA;&lt;p&gt;This project is currently in alpha stage and is not recommended for production use.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🤖 Multiple Agent Support&lt;/li&gt; &#xA; &lt;li&gt;🔄 Autonomous Agent Management&lt;/li&gt; &#xA; &lt;li&gt;🔗 Blockchain Integration (EVM chains first)&lt;/li&gt; &#xA; &lt;li&gt;🐦 Social Media Integration (Twitter, Telegram, and more)&lt;/li&gt; &#xA; &lt;li&gt;🛠️ Extensible Skill System&lt;/li&gt; &#xA; &lt;li&gt;🔌 Extensible Plugin System (WIP)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;                                                                                    &#xA;                                 Entrypoints                                        &#xA;                       │                             │                              &#xA;                       │   Twitter/Telegram &amp;amp; more   │                              &#xA;                       └──────────────┬──────────────┘                              &#xA;                                      │                                             &#xA;  Storage:  ────┐                     │                      ┌──── Skills:          &#xA;                │                     │                      │                      &#xA;  Agent Config  │     ┌───────────────▼────────────────┐     │  Chain Integration   &#xA;                │     │                                │     │                      &#xA;  Credentials   │     │                                │     │  Wallet Management   &#xA;                │     │           The Agent            │     │                      &#xA;  Personality   │     │                                │     │  On-Chain Actions    &#xA;                │     │                                │     │                      &#xA;  Memory        │     │      Powered by LangGraph      │     │  Internet Search     &#xA;                │     │                                │     │                      &#xA;  Skill State   │     └────────────────────────────────┘     │  Image Processing    &#xA;            ────┘                                            └────                  &#xA;                                                                                    &#xA;                                                                More and More...    &#xA;                         ┌──────────────────────────┐                               &#xA;                         │                          │                               &#xA;                         │  Agent Config &amp;amp; Memory   │                               &#xA;                         │                          │                               &#xA;                         └──────────────────────────┘                               &#xA;                                                                                    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The architecture is a simplified view, and more details can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/docs/architecture.md&#34;&gt;Architecture&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/DEVELOPMENT.md&#34;&gt;Development Guide&lt;/a&gt; to get started with your setup.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/docs/&#34;&gt;Documentation&lt;/a&gt; before you start.&lt;/p&gt; &#xA;&lt;h2&gt;Project Structure&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/abstracts/&#34;&gt;abstracts/&lt;/a&gt;: Abstract classes and interfaces&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/&#34;&gt;app/&lt;/a&gt;: Core application code &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/core/&#34;&gt;core/&lt;/a&gt;: Core modules&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/services/&#34;&gt;services/&lt;/a&gt;: Services&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/entrypoints/&#34;&gt;entrypoints/&lt;/a&gt;: Entrypoints means the way to interact with the agent&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/admin/&#34;&gt;admin/&lt;/a&gt;: Admin logic&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/config/&#34;&gt;config/&lt;/a&gt;: Configurations&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/api.py&#34;&gt;api.py&lt;/a&gt;: REST API server&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/autonomous.py&#34;&gt;autonomous.py&lt;/a&gt;: Autonomous agent scheduler&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/singleton.py&#34;&gt;singleton.py&lt;/a&gt;: Singleton agent scheduler&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/scheduler.py&#34;&gt;scheduler.py&lt;/a&gt;: Scheduler for periodic tasks&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/readonly.py&#34;&gt;readonly.py&lt;/a&gt;: Readonly entrypoint&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/twitter.py&#34;&gt;twitter.py&lt;/a&gt;: Twitter listener&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/app/telegram.py&#34;&gt;telegram.py&lt;/a&gt;: Telegram listener&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/clients/&#34;&gt;clients/&lt;/a&gt;: Clients for external services&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/docs/&#34;&gt;docs/&lt;/a&gt;: Documentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/models/&#34;&gt;models/&lt;/a&gt;: Database models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/scripts/&#34;&gt;scripts/&lt;/a&gt;: Scripts for agent management&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/skills/&#34;&gt;skills/&lt;/a&gt;: Skill implementations&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/plugins/&#34;&gt;plugins/&lt;/a&gt;: Reserved for Plugin implementations&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/utils/&#34;&gt;utils/&lt;/a&gt;: Utility functions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Please read our &lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt; before submitting a pull request.&lt;/p&gt; &#xA;&lt;h3&gt;Contribute Skills&lt;/h3&gt; &#xA;&lt;p&gt;First check &lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/docs/contributing/wishlist.md&#34;&gt;Wishlist&lt;/a&gt; for active requests.&lt;/p&gt; &#xA;&lt;p&gt;Once you are ready to start, see &lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/docs/contributing/skills.md&#34;&gt;Skill Development Guide&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&#34;https://raw.githubusercontent.com/crestalnetwork/intentkit/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>yeongpin/cursor-free-vip</title>
    <updated>2025-04-12T01:36:40Z</updated>
    <id>tag:github.com,2025-04-12:/yeongpin/cursor-free-vip</id>
    <link href="https://github.com/yeongpin/cursor-free-vip" rel="alternate"></link>
    <summary type="html">&lt;p&gt;[Support 0.48.x]（Reset Cursor AI MachineID &amp; Auto Sign Up / In &amp; Bypass Higher Token Limit）自动注册 Cursor Ai ，自动重置机器ID ， 免费升级使用Pro功能: You&#39;ve reached your trial request limit. / Too many free trial accounts used on this machine. Please upgrade to pro. We have this limit in place to prevent abuse. Please let us know if you believe this is a mistake.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;➤ Cursor Free VIP&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/yeongpin/cursor-free-vip/main/images/logo.png&#34; alt=&#34;Cursor Pro Logo&#34; width=&#34;200&#34; style=&#34;border-radius: 6px;&#34;&gt; &lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/yeongpin/cursor-free-vip/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/yeongpin/cursor-free-vip?style=flat-square&amp;amp;logo=github&amp;amp;color=blue&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-CC_BY--NC--ND_4.0-lightgrey.svg?sanitize=true&#34; alt=&#34;License: CC BY-NC-ND 4.0&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yeongpin/cursor-free-vip/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/yeongpin/cursor-free-vip?style=flat-square&amp;amp;logo=github&#34; alt=&#34;Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yeongpin/cursor-free-vip/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/yeongpin/cursor-free-vip/total?style=flat-square&amp;amp;logo=github&amp;amp;color=52c41a1&#34; alt=&#34;Download&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;h4&gt;Support Latest 0.48.x Version | 支持最新 0.48.x 版本&lt;/h4&gt; &#xA; &lt;p&gt;This tool registers accounts with custom emails, support Google and GitHub account registrations, temporary GitHub account registration, kills all Cursor&#39;s running processes, resets and wipes Cursor data and hardware info.&lt;/p&gt; &#xA; &lt;p&gt;Supports Windows, macOS and Linux.&lt;/p&gt; &#xA; &lt;p&gt;For optimal performance, run with privileges and always stay up to date.&lt;/p&gt; &#xA; &lt;p&gt;Always clean your browser&#39;s cache and cookies. If possible, use a VPN to create new accounts.&lt;/p&gt; &#xA; &lt;p&gt;這是一個自動化工具，自動註冊，支持 Windows 和 macOS 系統，完成 Auth 驗證，重置 Cursor 的配置。&lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/yeongpin/cursor-free-vip/main/images/pro_2025-04-05_18-47-56.png&#34; alt=&#34;new&#34; width=&#34;800&#34; style=&#34;border-radius: 6px;&#34;&gt;&lt;br&gt; &lt;/p&gt; &#xA; &lt;h5&gt;If you don&#39;t have Google Chrome, you can download it from &lt;a href=&#34;https://www.google.com/intl/en_pk/chrome/&#34;&gt;here&lt;/a&gt;&lt;/h5&gt; &#xA; &lt;h5&gt;如果沒有 Google Chrome，可以從&lt;a href=&#34;https://www.google.com/intl/en_pk/chrome/&#34;&gt;這裡&lt;/a&gt;下載&lt;/h5&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🔄 Change Log | 更新日志&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yeongpin/cursor-free-vip/main/CHANGELOG.md&#34;&gt;Watch Change Log | 查看更新日志&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;✨ Features | 功能特點&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;🌟 Google OAuth Authentication with Lifetime Access&lt;br&gt;使用 Google OAuth 認證（終身訪問）&lt;br&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;⭐ GitHub OAuth Authentication with Lifetime Access&lt;br&gt;使用 GitHub OAuth 認證（終身訪問）&lt;br&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Automatically register Cursor membership&lt;br&gt;自動註冊 Cursor 會員&lt;br&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support Windows and macOS systems&lt;br&gt;支持 Windows 和 macOS 系統&lt;br&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Complete Auth verification&lt;br&gt;完成 Auth 驗證&lt;br&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Reset Cursor&#39;s configuration&lt;br&gt;重置 Cursor 的配置&lt;br&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Delete Cursor Google Account&lt;br&gt;删除 Cursor Google 账号&lt;br&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Multi-language support (English, 简体中文, 繁體中文, Vietnamese)&lt;br&gt;多語言支持（英文、简体中文、繁體中文、越南語）&lt;br&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;💻 System Support | 系統支持&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;x64&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;✅&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;macOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Intel&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;✅&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Windows&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;macOS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Apple Silicon&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Linux&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Linux&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Linux&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ARM64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Linux&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ARM64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;👀 How to use | 如何使用&lt;/h2&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;&lt;b&gt;⭐ Auto Run Script | 腳本自動化運行&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;Linux/macOS&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -fsSL https://raw.githubusercontent.com/yeongpin/cursor-free-vip/main/scripts/install.sh -o install.sh &amp;amp;&amp;amp; chmod +x install.sh &amp;amp;&amp;amp; ./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;irm https://raw.githubusercontent.com/yeongpin/cursor-free-vip/main/scripts/install.ps1 | iex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;⭐ Manual Reset Machine | 手動運行重置機器&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;Linux/macOS&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -fsSL https://raw.githubusercontent.com/yeongpin/cursor-free-vip/main/scripts/reset.sh | sudo bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;irm https://raw.githubusercontent.com/yeongpin/cursor-free-vip/main/scripts/reset.ps1 | iex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;If you want to stop the script, please press Ctrl+C&lt;br&gt;要停止腳本，請按 Ctrl+C&lt;/p&gt; &#xA;&lt;h2&gt;❗ Note | 注意事項&lt;/h2&gt; &#xA;&lt;p&gt;📝 Config | 文件配置 &lt;code&gt;Win / Macos / Linux Path | 路徑 [Documents/.cursor-free-vip/config.ini]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;⭐ Config | 文件配置&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;[Chrome]&#xA;# Default Google Chrome Path | 默認Google Chrome 遊覽器路徑&#xA;chromepath = C:\Program Files\Google/Chrome/Application/chrome.exe&#xA;&#xA;[Turnstile]&#xA;# Handle Turnstile Wait Time | 等待人機驗證時間&#xA;handle_turnstile_time = 2&#xA;# Handle Turnstile Wait Random Time (must merge 1-3 or 1,3) | 等待人機驗證隨機時間（必須是 1-3 或者 1,3 這樣的組合）&#xA;handle_turnstile_random_time = 1-3&#xA;&#xA;[OSPaths]&#xA;# Storage Path | 存儲路徑&#xA;storage_path = /Users/username/Library/Application Support/Cursor/User/globalStorage/storage.json&#xA;# SQLite Path | SQLite路徑&#xA;sqlite_path = /Users/username/Library/Application Support/Cursor/User/globalStorage/state.vscdb&#xA;# Machine ID Path | 機器ID路徑&#xA;machine_id_path = /Users/username/Library/Application Support/Cursor/machineId&#xA;# For Linux users: ~/.config/cursor/machineid&#xA;&#xA;[Timing]&#xA;# Min Random Time | 最小隨機時間&#xA;min_random_time = 0.1&#xA;# Max Random Time | 最大隨機時間&#xA;max_random_time = 0.8&#xA;# Page Load Wait | 頁面加載等待時間&#xA;page_load_wait = 0.1-0.8&#xA;# Input Wait | 輸入等待時間&#xA;input_wait = 0.3-0.8&#xA;# Submit Wait | 提交等待時間&#xA;submit_wait = 0.5-1.5&#xA;# Verification Code Input | 驗證碼輸入等待時間&#xA;verification_code_input = 0.1-0.3&#xA;# Verification Success Wait | 驗證成功等待時間&#xA;verification_success_wait = 2-3&#xA;# Verification Retry Wait | 驗證重試等待時間&#xA;verification_retry_wait = 2-3&#xA;# Email Check Initial Wait | 郵件檢查初始等待時間&#xA;email_check_initial_wait = 4-6&#xA;# Email Refresh Wait | 郵件刷新等待時間&#xA;email_refresh_wait = 2-4&#xA;# Settings Page Load Wait | 設置頁面加載等待時間&#xA;settings_page_load_wait = 1-2&#xA;# Failed Retry Time | 失敗重試時間&#xA;failed_retry_time = 0.5-1&#xA;# Retry Interval | 重試間隔&#xA;retry_interval = 8-12&#xA;# Max Timeout | 最大超時時間&#xA;max_timeout = 160&#xA;&#xA;[Utils]&#xA;# Check Update | 檢查更新&#xA;check_update = True&#xA;# Show Account Info | 顯示賬號信息&#xA;show_account_info = True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Use administrator privileges to run the script &lt;br&gt;請使用管理員身份運行腳本&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Confirm that Cursor is closed before running the script &lt;br&gt;請確保在運行腳本前已經關閉 Cursor&lt;br&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;This tool is only for learning and research purposes &lt;br&gt;此工具僅供學習和研究使用&lt;br&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Please comply with the relevant software usage terms when using this tool &lt;br&gt;使用本工具時請遵守相關軟件使用條款&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚨 Common Issues | 常見問題&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;如果遇到權限問題，請確保：&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;此腳本以管理員身份運行&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;If you encounter permission issues, please ensure:&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;This script is run with administrator privileges&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Error &#39;User is not authorized&#39;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;This means your account was banned for using temporary (disposal) mail. Ensure using a non-temporary mail service&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🤩 Contribution | 貢獻&lt;/h2&gt; &#xA;&lt;p&gt;歡迎提交 Issue 和 Pull Request！&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/yeongpin/cursor-free-vip/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=yeongpin/cursor-free-vip&amp;amp;preview=true&amp;amp;max=&amp;amp;columns=&#34;&gt; &lt;/a&gt; &#xA;&lt;br&gt;&#xA;&lt;br&gt; &#xA;&lt;h2&gt;📩 Disclaimer | 免責聲明&lt;/h2&gt; &#xA;&lt;p&gt;本工具僅供學習和研究使用，使用本工具所產生的任何後果由使用者自行承擔。 &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;This tool is only for learning and research purposes, and any consequences arising from the use of this tool are borne by the user.&lt;/p&gt; &#xA;&lt;h2&gt;💰 Buy Me a Coffee | 請我喝杯咖啡&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;td&gt; &lt;img src=&#34;https://raw.githubusercontent.com/yeongpin/cursor-free-vip/main/images/provi-code.jpg&#34; alt=&#34;buy_me_a_coffee&#34; width=&#34;280&#34;&gt;&lt;br&gt; &lt;/td&gt; &#xA;    &lt;td&gt; &lt;img src=&#34;https://raw.githubusercontent.com/yeongpin/cursor-free-vip/main/images/paypal.png&#34; alt=&#34;buy_me_a_coffee&#34; width=&#34;280&#34;&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;⭐ Star History | 星星數&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://star-history.com/#yeongpin/cursor-free-vip&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=yeongpin/cursor-free-vip&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;📝 License | 授權&lt;/h2&gt; &#xA;&lt;p&gt;本項目採用 &lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/&#34;&gt;CC BY-NC-ND 4.0&lt;/a&gt; 授權。 Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/yeongpin/cursor-free-vip/main/LICENSE.md&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>huggingface/smolagents</title>
    <updated>2025-04-12T01:36:40Z</updated>
    <id>tag:github.com,2025-04-12:/huggingface/smolagents</id>
    <link href="https://github.com/huggingface/smolagents" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🤗 smolagents: a barebones library for agents that think in python code.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;!-- Uncomment when CircleCI is set up&#xA;    &lt;a href=&#34;https://circleci.com/gh/huggingface/accelerate&#34;&gt;&lt;img alt=&#34;Build&#34; src=&#34;https://img.shields.io/circleci/build/github/huggingface/transformers/master&#34;&gt;&lt;/a&gt;&#xA;    --&gt; &lt;a href=&#34;https://github.com/huggingface/smolagents/raw/main/LICENSE&#34;&gt;&lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/github/license/huggingface/smolagents.svg?color=blue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/docs/smolagents&#34;&gt;&lt;img alt=&#34;Documentation&#34; src=&#34;https://img.shields.io/website/http/huggingface.co/docs/smolagents/index.html.svg?down_color=red&amp;amp;down_message=offline&amp;amp;up_message=online&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/huggingface/smolagents/releases&#34;&gt;&lt;img alt=&#34;GitHub release&#34; src=&#34;https://img.shields.io/github/release/huggingface/smolagents.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/huggingface/smolagents/raw/main/CODE_OF_CONDUCT.md&#34;&gt;&lt;img alt=&#34;Contributor Covenant&#34; src=&#34;https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &#xA; &lt;div style=&#34;display:flex;flex-direction:row;&#34;&gt; &#xA;  &lt;img src=&#34;https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/smolagents/smolagents.png&#34; alt=&#34;Hugging Face mascot as James Bond&#34; width=&#34;400px&#34;&gt; &#xA;  &lt;p&gt;Agents that think in code!&lt;/p&gt; &#xA; &lt;/div&gt; &lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;smolagents&lt;/code&gt; is a library that enables you to run powerful agents in a few lines of code. It offers:&lt;/p&gt; &#xA;&lt;p&gt;✨ &lt;strong&gt;Simplicity&lt;/strong&gt;: the logic for agents fits in ~1,000 lines of code (see &lt;a href=&#34;https://github.com/huggingface/smolagents/raw/main/src/smolagents/agents.py&#34;&gt;agents.py&lt;/a&gt;). We kept abstractions to their minimal shape above raw code!&lt;/p&gt; &#xA;&lt;p&gt;🧑‍💻 &lt;strong&gt;First-class support for Code Agents&lt;/strong&gt;. Our &lt;a href=&#34;https://huggingface.co/docs/smolagents/reference/agents#smolagents.CodeAgent&#34;&gt;&lt;code&gt;CodeAgent&lt;/code&gt;&lt;/a&gt; writes its actions in code (as opposed to &#34;agents being used to write code&#34;). To make it secure, we support executing in sandboxed environments via &lt;a href=&#34;https://e2b.dev/&#34;&gt;E2B&lt;/a&gt; or via Docker.&lt;/p&gt; &#xA;&lt;p&gt;🤗 &lt;strong&gt;Hub integrations&lt;/strong&gt;: you can &lt;a href=&#34;https://huggingface.co/docs/smolagents/reference/tools#smolagents.Tool.from_hub&#34;&gt;share/pull tools to/from the Hub&lt;/a&gt;, and more is to come!&lt;/p&gt; &#xA;&lt;p&gt;🌐 &lt;strong&gt;Model-agnostic&lt;/strong&gt;: smolagents supports any LLM. It can be a local &lt;code&gt;transformers&lt;/code&gt; or &lt;code&gt;ollama&lt;/code&gt; model, one of &lt;a href=&#34;https://huggingface.co/blog/inference-providers&#34;&gt;many providers on the Hub&lt;/a&gt;, or any model from OpenAI, Anthropic and many others via our &lt;a href=&#34;https://www.litellm.ai/&#34;&gt;LiteLLM&lt;/a&gt; integration.&lt;/p&gt; &#xA;&lt;p&gt;👁️ &lt;strong&gt;Modality-agnostic&lt;/strong&gt;: Agents support text, vision, video, even audio inputs! Cf &lt;a href=&#34;https://huggingface.co/docs/smolagents/examples/web_browser&#34;&gt;this tutorial&lt;/a&gt; for vision.&lt;/p&gt; &#xA;&lt;p&gt;🛠️ &lt;strong&gt;Tool-agnostic&lt;/strong&gt;: you can use tools from &lt;a href=&#34;https://huggingface.co/docs/smolagents/reference/tools#smolagents.Tool.from_langchain&#34;&gt;LangChain&lt;/a&gt;, &lt;a href=&#34;https://huggingface.co/docs/smolagents/reference/tools#smolagents.ToolCollection.from_mcp&#34;&gt;Anthropic&#39;s MCP&lt;/a&gt;, you can even use a &lt;a href=&#34;https://huggingface.co/docs/smolagents/reference/tools#smolagents.Tool.from_space&#34;&gt;Hub Space&lt;/a&gt; as a tool.&lt;/p&gt; &#xA;&lt;p&gt;Full documentation can be found &lt;a href=&#34;https://huggingface.co/docs/smolagents/index&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Check the our &lt;a href=&#34;https://huggingface.co/blog/smolagents&#34;&gt;launch blog post&lt;/a&gt; to learn more about &lt;code&gt;smolagents&lt;/code&gt;!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Quick demo&lt;/h2&gt; &#xA;&lt;p&gt;First install the package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install smolagents&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then define your agent, give it the tools it needs and run it!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;from smolagents import CodeAgent, DuckDuckGoSearchTool, HfApiModel&#xA;&#xA;model = HfApiModel()&#xA;agent = CodeAgent(tools=[DuckDuckGoSearchTool()], model=model)&#xA;&#xA;agent.run(&#34;How many seconds would it take for a leopard at full speed to run through Pont des Arts?&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/cd0226e2-7479-4102-aea0-57c22ca47884&#34;&gt;https://github.com/user-attachments/assets/cd0226e2-7479-4102-aea0-57c22ca47884&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can even share your agent to hub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;agent.push_to_hub(&#34;m-ric/my_agent&#34;)&#xA;&#xA;# agent.from_hub(&#34;m-ric/my_agent&#34;) to load an agent from Hub&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Our library is LLM-agnostic: you could switch the example above to any inference provider.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;HfApiModel, gateway for 4 inference providers&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;from smolagents import HfApiModel&#xA;&#xA;model = HfApiModel(&#xA;    model_id=&#34;deepseek-ai/DeepSeek-R1&#34;,&#xA;    provider=&#34;together&#34;,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;LiteLLM to access 100+ LLMs&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;from smolagents import LiteLLMModel&#xA;&#xA;model = LiteLLMModel(&#xA;    model_id=&#34;anthropic/claude-3-5-sonnet-latest&#34;,&#xA;    temperature=0.2,&#xA;    api_key=os.environ[&#34;ANTHROPIC_API_KEY&#34;]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;OpenAI-compatible servers&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;import os&#xA;from smolagents import OpenAIServerModel&#xA;&#xA;model = OpenAIServerModel(&#xA;    model_id=&#34;deepseek-ai/DeepSeek-R1&#34;,&#xA;    api_base=&#34;https://api.together.xyz/v1/&#34;, # Leave this blank to query OpenAI servers.&#xA;    api_key=os.environ[&#34;TOGETHER_API_KEY&#34;], # Switch to the API key for the server you&#39;re targeting.&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Local `transformers` model&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;from smolagents import TransformersModel&#xA;&#xA;model = TransformersModel(&#xA;    model_id=&#34;Qwen/Qwen2.5-Coder-32B-Instruct&#34;,&#xA;    max_new_tokens=4096,&#xA;    device_map=&#34;auto&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Azure models&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;import os&#xA;from smolagents import AzureOpenAIServerModel&#xA;&#xA;model = AzureOpenAIServerModel(&#xA;    model_id = os.environ.get(&#34;AZURE_OPENAI_MODEL&#34;),&#xA;    azure_endpoint=os.environ.get(&#34;AZURE_OPENAI_ENDPOINT&#34;),&#xA;    api_key=os.environ.get(&#34;AZURE_OPENAI_API_KEY&#34;),&#xA;    api_version=os.environ.get(&#34;OPENAI_API_VERSION&#34;)    &#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Amazon Bedrock models&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;import os&#xA;from smolagents import AmazonBedrockServerModel&#xA;&#xA;model = AmazonBedrockServerModel(&#xA;    model_id = os.environ.get(&#34;AMAZON_BEDROCK_MODEL_ID&#34;) &#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;CLI&lt;/h2&gt; &#xA;&lt;p&gt;You can run agents from CLI using two commands: &lt;code&gt;smolagent&lt;/code&gt; and &lt;code&gt;webagent&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;smolagent&lt;/code&gt; is a generalist command to run a multi-step &lt;code&gt;CodeAgent&lt;/code&gt; that can be equipped with various tools.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;smolagent &#34;Plan a trip to Tokyo, Kyoto and Osaka between Mar 28 and Apr 7.&#34;  --model-type &#34;HfApiModel&#34; --model-id &#34;Qwen/Qwen2.5-Coder-32B-Instruct&#34; --imports &#34;pandas numpy&#34; --tools &#34;web_search&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Meanwhile &lt;code&gt;webagent&lt;/code&gt;&amp;nbsp;is a specific web-browsing agent using &lt;a href=&#34;https://github.com/mherrmann/helium&#34;&gt;helium&lt;/a&gt; (read more &lt;a href=&#34;https://github.com/huggingface/smolagents/raw/main/src/smolagents/vision_web_browser.py&#34;&gt;here&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;For instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;webagent &#34;go to xyz.com/men, get to sale section, click the first clothing item you see. Get the product details, and the price, return them. note that I&#39;m shopping from France&#34; --model-type &#34;LiteLLMModel&#34; --model-id &#34;gpt-4o&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How do Code agents work?&lt;/h2&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://huggingface.co/docs/smolagents/reference/agents#smolagents.CodeAgent&#34;&gt;&lt;code&gt;CodeAgent&lt;/code&gt;&lt;/a&gt; works mostly like classical ReAct agents - the exception being that the LLM engine writes its actions as Python code snippets.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;flowchart TB&#xA;    Task[User Task]&#xA;    Memory[agent.memory]&#xA;    Generate[Generate from agent.model]&#xA;    Execute[Execute Code action - Tool calls are written as functions]&#xA;    Answer[Return the argument given to &#39;final_answer&#39;]&#xA;&#xA;    Task --&amp;gt;|Add task to agent.memory| Memory&#xA;&#xA;    subgraph ReAct[ReAct loop]&#xA;        Memory --&amp;gt;|Memory as chat messages| Generate&#xA;        Generate --&amp;gt;|Parse output to extract code action| Execute&#xA;        Execute --&amp;gt;|No call to &#39;final_answer&#39; tool =&amp;gt; Store execution logs in memory and keep running| Memory&#xA;    end&#xA;    &#xA;    Execute --&amp;gt;|Call to &#39;final_answer&#39; tool| Answer&#xA;&#xA;    %% Styling&#xA;    classDef default fill:#d4b702,stroke:#8b7701,color:#ffffff&#xA;    classDef io fill:#4a5568,stroke:#2d3748,color:#ffffff&#xA;    &#xA;    class Task,Answer io&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Actions are now Python code snippets. Hence, tool calls will be performed as Python function calls. For instance, here is how the agent can perform web search over several websites in one single action:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;requests_to_search = [&#34;gulf of mexico america&#34;, &#34;greenland denmark&#34;, &#34;tariffs&#34;]&#xA;for request in requests_to_search:&#xA;    print(f&#34;Here are the search results for {request}:&#34;, web_search(request))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Writing actions as code snippets is demonstrated to work better than the current industry practice of letting the LLM output a dictionary of the tools it wants to call: &lt;a href=&#34;https://huggingface.co/papers/2402.01030&#34;&gt;uses 30% fewer steps&lt;/a&gt; (thus 30% fewer LLM calls) and &lt;a href=&#34;https://huggingface.co/papers/2411.01747&#34;&gt;reaches higher performance on difficult benchmarks&lt;/a&gt;. Head to &lt;a href=&#34;https://huggingface.co/docs/smolagents/conceptual_guides/intro_agents&#34;&gt;our high-level intro to agents&lt;/a&gt; to learn more on that.&lt;/p&gt; &#xA;&lt;p&gt;Especially, since code execution can be a security concern (arbitrary code execution!), we provide options at runtime:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a secure python interpreter to run code more safely in your environment (more secure than raw code execution but still risky)&lt;/li&gt; &#xA; &lt;li&gt;a sandboxed environment using &lt;a href=&#34;https://e2b.dev/&#34;&gt;E2B&lt;/a&gt; or Docker (removes the risk to your own system).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On top of this &lt;a href=&#34;https://huggingface.co/docs/smolagents/reference/agents#smolagents.CodeAgent&#34;&gt;&lt;code&gt;CodeAgent&lt;/code&gt;&lt;/a&gt; class, we still support the standard &lt;a href=&#34;https://huggingface.co/docs/smolagents/reference/agents#smolagents.ToolCallingAgent&#34;&gt;&lt;code&gt;ToolCallingAgent&lt;/code&gt;&lt;/a&gt; that writes actions as JSON/text blobs. But we recommend always using &lt;code&gt;CodeAgent&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How smol is this library?&lt;/h2&gt; &#xA;&lt;p&gt;We strived to keep abstractions to a strict minimum: the main code in &lt;code&gt;agents.py&lt;/code&gt; has &amp;lt;1,000 lines of code. Still, we implement several types of agents: &lt;code&gt;CodeAgent&lt;/code&gt; writes its actions as Python code snippets, and the more classic &lt;code&gt;ToolCallingAgent&lt;/code&gt; leverages built-in tool calling methods. We also have multi-agent hierarchies, import from tool collections, remote code execution, vision models...&lt;/p&gt; &#xA;&lt;p&gt;By the way, why use a framework at all? Well, because a big part of this stuff is non-trivial. For instance, the code agent has to keep a consistent format for code throughout its system prompt, its parser, the execution. So our framework handles this complexity for you. But of course we still encourage you to hack into the source code and use only the bits that you need, to the exclusion of everything else!&lt;/p&gt; &#xA;&lt;h2&gt;How strong are open models for agentic workflows?&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;ve created &lt;a href=&#34;https://huggingface.co/docs/smolagents/reference/agents#smolagents.CodeAgent&#34;&gt;&lt;code&gt;CodeAgent&lt;/code&gt;&lt;/a&gt; instances with some leading models, and compared them on &lt;a href=&#34;https://huggingface.co/datasets/m-ric/agents_medium_benchmark_2&#34;&gt;this benchmark&lt;/a&gt; that gathers questions from a few different benchmarks to propose a varied blend of challenges.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/huggingface/smolagents/raw/main/examples/smolagents_benchmark/run.py&#34;&gt;Find the benchmarking code here&lt;/a&gt; for more detail on the agentic setup used, and see a comparison of using LLMs code agents compared to vanilla (spoilers: code agents works better).&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/smolagents/benchmark_code_agents.jpeg&#34; alt=&#34;benchmark of different models on agentic workflows. Open model DeepSeek-R1 beats closed-source models.&#34; width=&#34;60%&#34; max-width=&#34;500px&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;This comparison shows that open-source models can now take on the best closed models!&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Everyone is welcome to contribute, get started with our &lt;a href=&#34;https://github.com/huggingface/smolagents/raw/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Cite smolagents&lt;/h2&gt; &#xA;&lt;p&gt;If you use &lt;code&gt;smolagents&lt;/code&gt; in your publication, please cite it by using the following BibTeX entry.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@Misc{smolagents,&#xA;  title =        {`smolagents`: a smol library to build great agentic systems.},&#xA;  author =       {Aymeric Roucher and Albert Villanova del Moral and Thomas Wolf and Leandro von Werra and Erik Kaunismäki},&#xA;  howpublished = {\url{https://github.com/huggingface/smolagents}},&#xA;  year =         {2025}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>