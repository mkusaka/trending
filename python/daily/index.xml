<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-02T01:35:24Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ivnvxd/arc-export</title>
    <updated>2025-06-02T01:35:24Z</updated>
    <id>tag:github.com,2025-06-02:/ivnvxd/arc-export</id>
    <link href="https://github.com/ivnvxd/arc-export" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Export pinned Arc Browser tabs for importing bookmarks into other browsers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Arc Pinned Tabs to HTML Bookmarks Converter&lt;/h1&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This project provides a script for converting pinned tabs in the &lt;strong&gt;Arc Browser&lt;/strong&gt; to standard HTML bookmarks file. These bookmarks can then be imported into any web browser.&lt;/p&gt; &#xA;&lt;p&gt;This addresses the lack of a pinned tabs export feature in Arc Browser.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.x&lt;/li&gt; &#xA; &lt;li&gt;Arc Browser installed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository: &lt;code&gt;git clone git@github.com:ivnvxd/arc-export.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the project folder: &lt;code&gt;cd arc-export&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;or download using &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -o main.py https://raw.githubusercontent.com/ivnvxd/arc-export/main/main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Run the &lt;code&gt;main.py&lt;/code&gt; script from the command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python3 main.py [-h] [-s] [-o OUTPUT] [-v] [--version]&#xA;&#xA;# or if there is an error:&#xA;python main.py [-h] [-s] [-o OUTPUT] [-v] [--version]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;p&gt;If you encounter any problems, manually copy the &lt;code&gt;StorableSidebar.json&lt;/code&gt; file from the &lt;code&gt;~/Library/Application Support/Arc/&lt;/code&gt; directory to the project&#39;s directory and run the script again.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The script supports various command-line options for enhanced functionality:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Show help message and exit&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;-h&lt;/code&gt;, &lt;code&gt;--help&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Silence output&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;-s&lt;/code&gt;, &lt;code&gt;--silent&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Specify the output file path&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;-o OUTPUT&lt;/code&gt;, &lt;code&gt;--output OUTPUT&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enable verbose output&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;-v&lt;/code&gt;, &lt;code&gt;--verbose&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Print the git short hash and commit time&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;--version&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example usage:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;python3 main.py -v -o my_bookmarks.html&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ivnvxd/arc-export/main/example.gif&#34; alt=&#34;Example Usage&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How It Works&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Read JSON&lt;/strong&gt;: Reads the &lt;code&gt;StorableSidebar.json&lt;/code&gt; file from the Arc Browser&#39;s directory &lt;em&gt;or&lt;/em&gt; the project&#39;s directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Convert Data&lt;/strong&gt;: Converts the JSON data into a hierarchical bookmarks dictionary.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Generate HTML&lt;/strong&gt;: Transforms the bookmarks dictionary into an HTML file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Write HTML&lt;/strong&gt;: Saves the HTML file with a timestamp, allowing it to be imported into any web browser.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are very welcome. Please submit a pull request or create an issue.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for using this project! If you find it helpful and would like to support my work, kindly consider buying me a coffee. Your support is greatly appreciated!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/ivnvxd&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 60px !important;width: 217px !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;And do not forget to give the project a star if you like it! &lt;span&gt;‚≠ê&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dwyl/english-words</title>
    <updated>2025-06-02T01:35:24Z</updated>
    <id>tag:github.com,2025-06-02:/dwyl/english-words</id>
    <link href="https://github.com/dwyl/english-words" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üìù A text file containing 479k English words for all your dictionary/word-based projects e.g: auto-completion / autosuggestion&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;List Of English Words&lt;/h1&gt; &#xA;&lt;p&gt;A text file containing over 466k English words.&lt;/p&gt; &#xA;&lt;p&gt;While searching for a list of english words (for an auto-complete tutorial) I found: &lt;a href=&#34;https://stackoverflow.com/questions/2213607/how-to-get-english-language-word-database&#34;&gt;https://stackoverflow.com/questions/2213607/how-to-get-english-language-word-database&lt;/a&gt; which refers to &lt;a href=&#34;https://web.archive.org/web/20131118073324/https://www.infochimps.com/datasets/word-list-350000-simple-english-words-excel-readable&#34;&gt;https://www.infochimps.com/datasets/word-list-350000-simple-english-words-excel-readable&lt;/a&gt; (archived).&lt;/p&gt; &#xA;&lt;p&gt;No idea why infochimps put the word list inside an excel (.xls) file.&lt;/p&gt; &#xA;&lt;p&gt;I pulled out the words into a simple new-line-delimited text file. Which is more useful when building apps or importing into databases etc.&lt;/p&gt; &#xA;&lt;p&gt;Copyright still belongs to them.&lt;/p&gt; &#xA;&lt;p&gt;Files you may be interested in:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dwyl/english-words/master/words.txt&#34;&gt;words.txt&lt;/a&gt; contains all words.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dwyl/english-words/master/words_alpha.txt&#34;&gt;words_alpha.txt&lt;/a&gt; contains only [[:alpha:]] words (words that only have letters, no numbers or symbols). If you want a quick solution choose this.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dwyl/english-words/master/words_dictionary.json&#34;&gt;words_dictionary.json&lt;/a&gt; contains all the words from words_alpha.txt as json format. If you are using Python, you can easily load this file and use it as a dictionary for faster performance. All the words are assigned with 1 in the dictionary.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/dwyl/english-words/master/read_english_dictionary.py&#34;&gt;read_english_dictionary.py&lt;/a&gt; for example usage.&lt;/p&gt;</summary>
  </entry>
</feed>