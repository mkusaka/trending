<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-03T01:50:28Z</updated>
  <subtitle>Weekly Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>WongKinYiu/yolov9</title>
    <updated>2024-03-03T01:50:28Z</updated>
    <id>tag:github.com,2024-03-03:/WongKinYiu/yolov9</id>
    <link href="https://github.com/WongKinYiu/yolov9" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implementation of paper - YOLOv9: Learning What You Want to Learn Using Programmable Gradient Information&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;YOLOv9&lt;/h1&gt; &#xA;&lt;p&gt;Implementation of paper - &lt;a href=&#34;https://arxiv.org/abs/2402.13616&#34;&gt;YOLOv9: Learning What You Want to Learn Using Programmable Gradient Information&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://huggingface.co/spaces/kadirnar/Yolov9&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue&#34; alt=&#34;Hugging Face Spaces&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/merve/yolov9&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue&#34; alt=&#34;Hugging Face Spaces&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://colab.research.google.com/github/roboflow-ai/notebooks/blob/main/notebooks/train-yolov9-object-detection-on-custom-dataset.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Colab&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/abs/2402.13616&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/cs.CV-arXiv%3A2402.13616-B31B1B.svg?sanitize=true&#34; alt=&#34;arxiv.org&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/WongKinYiu/yolov9/main/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/WongKinYiu/yolov9/main/figure/performance.png&#34; width=&#34;79%&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;MS COCO&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Model&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Test Size&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;AP&lt;sup&gt;val&lt;/sup&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;AP&lt;sub&gt;50&lt;/sub&gt;&lt;sup&gt;val&lt;/sup&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;AP&lt;sub&gt;75&lt;/sub&gt;&lt;sup&gt;val&lt;/sup&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Param.&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;FLOPs&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;&#34;&gt;&lt;strong&gt;YOLOv9-S&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;640&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;46.8%&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;63.4%&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;50.7%&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;7.1M&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;26.4G&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;&#34;&gt;&lt;strong&gt;YOLOv9-M&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;640&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;51.4%&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;68.1%&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;56.1%&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;20.0M&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;76.3G&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/WongKinYiu/yolov9/releases/download/v0.1/yolov9-c-converted.pt&#34;&gt;&lt;strong&gt;YOLOv9-C&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;640&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;53.0%&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;70.2%&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;57.8%&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;25.3M&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;102.1G&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/WongKinYiu/yolov9/releases/download/v0.1/yolov9-e-converted.pt&#34;&gt;&lt;strong&gt;YOLOv9-E&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;640&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;55.6%&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;72.8%&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;60.6%&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;57.3M&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;189.0G&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- small and medium models will be released after the paper be accepted and published. --&gt; &#xA;&lt;h2&gt;Useful Links&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt; &lt;b&gt;Expand&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;p&gt;Custom training: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/30#issuecomment-1960955297&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/30#issuecomment-1960955297&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;ONNX export: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/2#issuecomment-1960519506&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/2#issuecomment-1960519506&lt;/a&gt; &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/40#issue-2150697688&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/40#issue-2150697688&lt;/a&gt; &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/130#issue-2162045461&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/130#issue-2162045461&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;TensorRT inference: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/143#issue-2164002309&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/143#issue-2164002309&lt;/a&gt; &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/34#issue-2150393690&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/34#issue-2150393690&lt;/a&gt; &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/79#issue-2153547004&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/79#issue-2153547004&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;C# ONNX inference: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/95#issue-2155974619&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/95#issue-2155974619&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;C# OpenVINO inference: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/95#issuecomment-1968131244&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/95#issuecomment-1968131244&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;OpenCV: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/113#issuecomment-1971327672&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/113#issuecomment-1971327672&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;Hugging Face demo: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/45#issuecomment-1961496943&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/45#issuecomment-1961496943&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;CoLab demo: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/pull/18&#34;&gt;https://github.com/WongKinYiu/yolov9/pull/18&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;ONNXSlim export: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/pull/37&#34;&gt;https://github.com/WongKinYiu/yolov9/pull/37&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;YOLOv9 ROS: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/144#issue-2164210644&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/144#issue-2164210644&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;YOLOv9 ROS TensorRT: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/145#issue-2164218595&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/145#issue-2164218595&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;YOLOv9 Julia: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/141#issuecomment-1973710107&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/141#issuecomment-1973710107&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;YOLOv9 ByteTrack: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/78#issue-2153512879&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/78#issue-2153512879&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;YOLOv9 DeepSORT: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/98#issue-2156172319&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/98#issue-2156172319&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;YOLOv9 counting: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/84#issue-2153904804&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/84#issue-2153904804&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;YOLOv9 face detection: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/121#issue-2160218766&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/121#issue-2160218766&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;AnyLabeling tool: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/48#issue-2152139662&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/48#issue-2152139662&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;AX650N deploy: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/96#issue-2156115760&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/96#issue-2156115760&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;Conda environment: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/pull/93&#34;&gt;https://github.com/WongKinYiu/yolov9/pull/93&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;AutoDL docker environment: &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/issues/112#issue-2158203480&#34;&gt;https://github.com/WongKinYiu/yolov9/issues/112#issue-2158203480&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Docker environment (recommended)&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt; &lt;b&gt;Expand&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# create the docker container, you can change the share memory size if you have more.&#xA;nvidia-docker run --name yolov9 -it -v your_coco_path/:/coco/ -v your_code_path/:/yolov9 --shm-size=64g nvcr.io/nvidia/pytorch:21.11-py3&#xA;&#xA;# apt install required packages&#xA;apt update&#xA;apt install -y zip htop screen libgl1-mesa-glx&#xA;&#xA;# pip install required packages&#xA;pip install seaborn thop&#xA;&#xA;# go to code folder&#xA;cd /yolov9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Evaluation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/WongKinYiu/yolov9/releases/download/v0.1/yolov9-c-converted.pt&#34;&gt;&lt;code&gt;yolov9-c-converted.pt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/releases/download/v0.1/yolov9-e-converted.pt&#34;&gt;&lt;code&gt;yolov9-e-converted.pt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/releases/download/v0.1/yolov9-c.pt&#34;&gt;&lt;code&gt;yolov9-c.pt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/releases/download/v0.1/yolov9-e.pt&#34;&gt;&lt;code&gt;yolov9-e.pt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/releases/download/v0.1/gelan-c.pt&#34;&gt;&lt;code&gt;gelan-c.pt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/releases/download/v0.1/gelan-e.pt&#34;&gt;&lt;code&gt;gelan-e.pt&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# evaluate converted yolov9 models&#xA;python val.py --data data/coco.yaml --img 640 --batch 32 --conf 0.001 --iou 0.7 --device 0 --weights &#39;./yolov9-c-converted.pt&#39; --save-json --name yolov9_c_c_640_val&#xA;&#xA;# evaluate yolov9 models&#xA;#python val_dual.py --data data/coco.yaml --img 640 --batch 32 --conf 0.001 --iou 0.7 --device 0 --weights &#39;./yolov9-c.pt&#39; --save-json --name yolov9_c_640_val&#xA;&#xA;# evaluate gelan models&#xA;# python val.py --data data/coco.yaml --img 640 --batch 32 --conf 0.001 --iou 0.7 --device 0 --weights &#39;./gelan-c.pt&#39; --save-json --name gelan_c_640_val&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will get the results:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.530&#xA; Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.702&#xA; Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.578&#xA; Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.362&#xA; Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.585&#xA; Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.693&#xA; Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.392&#xA; Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.652&#xA; Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.702&#xA; Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.541&#xA; Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.760&#xA; Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.844&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Training&lt;/h2&gt; &#xA;&lt;p&gt;Data preparation&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;bash scripts/get_coco.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download MS COCO dataset images (&lt;a href=&#34;http://images.cocodataset.org/zips/train2017.zip&#34;&gt;train&lt;/a&gt;, &lt;a href=&#34;http://images.cocodataset.org/zips/val2017.zip&#34;&gt;val&lt;/a&gt;, &lt;a href=&#34;http://images.cocodataset.org/zips/test2017.zip&#34;&gt;test&lt;/a&gt;) and &lt;a href=&#34;https://github.com/WongKinYiu/yolov7/releases/download/v0.1/coco2017labels-segments.zip&#34;&gt;labels&lt;/a&gt;. If you have previously used a different version of YOLO, we strongly recommend that you delete &lt;code&gt;train2017.cache&lt;/code&gt; and &lt;code&gt;val2017.cache&lt;/code&gt; files, and redownload &lt;a href=&#34;https://github.com/WongKinYiu/yolov7/releases/download/v0.1/coco2017labels-segments.zip&#34;&gt;labels&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Single GPU training&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# train yolov9 models&#xA;python train_dual.py --workers 8 --device 0 --batch 16 --data data/coco.yaml --img 640 --cfg models/detect/yolov9-c.yaml --weights &#39;&#39; --name yolov9-c --hyp hyp.scratch-high.yaml --min-items 0 --epochs 500 --close-mosaic 15&#xA;&#xA;# train gelan models&#xA;# python train.py --workers 8 --device 0 --batch 32 --data data/coco.yaml --img 640 --cfg models/detect/gelan-c.yaml --weights &#39;&#39; --name gelan-c --hyp hyp.scratch-high.yaml --min-items 0 --epochs 500 --close-mosaic 15&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Multiple GPU training&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# train yolov9 models&#xA;python -m torch.distributed.launch --nproc_per_node 8 --master_port 9527 train_dual.py --workers 8 --device 0,1,2,3,4,5,6,7 --sync-bn --batch 128 --data data/coco.yaml --img 640 --cfg models/detect/yolov9-c.yaml --weights &#39;&#39; --name yolov9-c --hyp hyp.scratch-high.yaml --min-items 0 --epochs 500 --close-mosaic 15&#xA;&#xA;# train gelan models&#xA;# python -m torch.distributed.launch --nproc_per_node 4 --master_port 9527 train.py --workers 8 --device 0,1,2,3 --sync-bn --batch 128 --data data/coco.yaml --img 640 --cfg models/detect/gelan-c.yaml --weights &#39;&#39; --name gelan-c --hyp hyp.scratch-high.yaml --min-items 0 --epochs 500 --close-mosaic 15&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Re-parameterization&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/WongKinYiu/yolov9/raw/main/tools/reparameterization.ipynb&#34;&gt;reparameterization.ipynb&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{wang2024yolov9,&#xA;  title={{YOLOv9}: Learning What You Want to Learn Using Programmable Gradient Information},&#xA;  author={Wang, Chien-Yao  and Liao, Hong-Yuan Mark},&#xA;  booktitle={arXiv preprint arXiv:2402.13616},&#xA;  year={2024}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{chang2023yolor,&#xA;  title={{YOLOR}-Based Multi-Task Learning},&#xA;  author={Chang, Hung-Shuo and Wang, Chien-Yao and Wang, Richard Robert and Chou, Gene and Liao, Hong-Yuan Mark},&#xA;  journal={arXiv preprint arXiv:2309.16921},&#xA;  year={2023}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Teaser&lt;/h2&gt; &#xA;&lt;p&gt;Parts of code of &lt;a href=&#34;https://arxiv.org/abs/2309.16921&#34;&gt;YOLOR-Based Multi-Task Learning&lt;/a&gt; are released in the repository.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt; &lt;b&gt;Expand&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/AlexeyAB/darknet&#34;&gt;https://github.com/AlexeyAB/darknet&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/WongKinYiu/yolor&#34;&gt;https://github.com/WongKinYiu/yolor&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/WongKinYiu/yolov7&#34;&gt;https://github.com/WongKinYiu/yolov7&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/VDIGPKU/DynamicDet&#34;&gt;https://github.com/VDIGPKU/DynamicDet&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/DingXiaoH/RepVGG&#34;&gt;https://github.com/DingXiaoH/RepVGG&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5&#34;&gt;https://github.com/ultralytics/yolov5&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/meituan/YOLOv6&#34;&gt;https://github.com/meituan/YOLOv6&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>dataelement/bisheng</title>
    <updated>2024-03-03T01:50:28Z</updated>
    <id>tag:github.com,2024-03-03:/dataelement/bisheng</id>
    <link href="https://github.com/dataelement/bisheng" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bisheng is an open LLM devops platform for next generation AI applications.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://www.dataelem.com/nstatic/bisheng.png&#34; alt=&#34;Bisheng banner&#34;&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dataelement/bisheng/main/README.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/dataelement/bisheng/main/README_ENG.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/dataelement/bisheng/main/README_JPN.md&#34;&gt;日本語&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://dataelem.feishu.cn/wiki/ZxW6wZyAJicX4WkG0NqcWsbynde&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-Wiki-brightgreen&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/license/dataelement/bisheng&#34; alt=&#34;license&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/dataelement/bisheng-frontend&#34; alt=&#34;docker-pull-count&#34;&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/dataelement/bisheng&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://star-history.com/#dataelement/bisheng&amp;amp;Timeline&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/dataelement/bisheng?color=yellow&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;div class=&#34;column&#34; align=&#34;middle&#34;&gt; &#xA; &lt;!-- &lt;a href=&#34;https://bisheng.slack.com/join/shared_invite/&#34;&gt; --&gt; &#xA; &lt;!-- &lt;img src=&#34;https://img.shields.io/badge/Join-Slack-orange&#34; alt=&#34;join-slack&#34;/&gt; --&gt;  &#xA; &lt;!-- &lt;img src=&#34;https://img.shields.io/github/license/bisheng-io/bisheng&#34; alt=&#34;license&#34;/&gt; --&gt; &#xA; &lt;!-- &lt;img src=&#34;https://img.shields.io/docker/pulls/bisheng-io/bisheng&#34; alt=&#34;docker-pull-count&#34; /&gt; --&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;欢迎来到 Bisheng&lt;/h1&gt; &#xA;&lt;h2&gt;Bisheng 是什么&lt;/h2&gt; &#xA;&lt;p&gt;Bisheng是一款领先的开源&lt;b&gt;大模型应用开发平台&lt;/b&gt;，赋能和加速大模型应用开发落地，帮助用户以最佳体验进入下一代应用开发模式。&lt;/p&gt; &#xA;&lt;p&gt;“毕昇”是活字印刷术的发明人，活字印刷术为人类知识的传递起到了巨大的推动作用。我们希望“毕昇”同样能够为智能应用的广泛落地提供有力的支撑。欢迎大家一道参与。&lt;/p&gt; &#xA;&lt;p&gt;Bisheng 基于 &lt;a href=&#34;https://github.com/dataelement/bisheng/raw/main/LICENSE&#34;&gt;Apache 2.0 License&lt;/a&gt; 协议发布，于 2023 年 8 月底正式开源。&lt;/p&gt; &#xA;&lt;h2&gt;产品亮点&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;便捷：即使是业务人员，基于我们预置的应用模板，通过简单直观的表单填写方式快速搭建以大模型为核心的智能应用。&lt;/li&gt; &#xA; &lt;li&gt;灵活：对大模型技术有了解的人员，我们紧跟最前沿大模型技术生态提供数百种开发组件，基于可视化且自由的流程编排能力，可开发出任意类型的大模型应用，而不仅是简单的提示词工程。&lt;/li&gt; &#xA; &lt;li&gt;可靠与企业级：当前许多同类的开源项目仅适用于实验测试场景，缺少真正生产使用的企业级特性，包括：高并发下的高可用、应用运营及效果持续迭代优化、贴合真实业务场景的实用功能等，这些都是毕昇平台的差异化能力；另外，更直观的是，企业内的数据质量参差不齐，想要真正把所有数据利用起来，首先需要有完备的非结构化数据治理能力，而这是过去几年我们团队所积累的核心能力，在毕昇的demo环境中您可以通过相关组件直接接入这些能力，并且这些能力免费不限量使用。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;产品应用&lt;/h2&gt; &#xA;&lt;p&gt;使用毕昇平台，我们可以搭建各类丰富的大模型应用：&lt;/p&gt; &#xA;&lt;p&gt;分析报告生成&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;📃 合同审核报告生成&lt;/li&gt; &#xA; &lt;li&gt;🏦 信贷调查报告生成&lt;/li&gt; &#xA; &lt;li&gt;📈 招股书分析报告生成&lt;/li&gt; &#xA; &lt;li&gt;💼 智能投顾报告生成&lt;/li&gt; &#xA; &lt;li&gt;👀 文档摘要生成&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;知识库问答&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;👩‍💻 用户手册问答&lt;/li&gt; &#xA; &lt;li&gt;👩🏻‍🔬 研报知识库问答&lt;/li&gt; &#xA; &lt;li&gt;🗄 规章制度问答&lt;/li&gt; &#xA; &lt;li&gt;💊 《中华药典》知识问答&lt;/li&gt; &#xA; &lt;li&gt;📊 股价数据库问答&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;对话&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🎭 扮演面试官对话&lt;/li&gt; &#xA; &lt;li&gt;📍 小红书文案助手&lt;/li&gt; &#xA; &lt;li&gt;👩‍🎤 扮演外教对话&lt;/li&gt; &#xA; &lt;li&gt;👨‍🏫 简历优化助手&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;要素提取&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;📄 合同关键要素提取&lt;/li&gt; &#xA; &lt;li&gt;🏗️ 工程报告要素提取&lt;/li&gt; &#xA; &lt;li&gt;🗂️ 通用元数据提取&lt;/li&gt; &#xA; &lt;li&gt;🎫 卡证票据要素提取&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;各类应用构建方法详见：&lt;a href=&#34;https://m7a7tqsztt.feishu.cn/wiki/ZfkmwLPfeiAhQSkK2WvcX87unxc&#34;&gt;应用案例&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;我们认为在企业真实场景中，“对话”仅是众多交互形式中的一种，未来我们还将新增流程自动化、搜索等更多应用形态的支持。&lt;/p&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;h3&gt;启动 Bisheng&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://m7a7tqsztt.feishu.cn/wiki/BSCcwKd4Yiot3IkOEC8cxGW7nPc&#34;&gt;安装 Bisheng&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;源码编译 Bisheng&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dataelem.feishu.cn/wiki/EKdDw0IkyiNSAEkzc29cqKnmn7c&#34;&gt;编译Bisheng&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;获取更多内容，请阅读 &lt;a href=&#34;https://m7a7tqsztt.feishu.cn/wiki/ITmJwMXVliBnzpkW3nkcqPVrnse&#34;&gt;开发者文档&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;贡献代码&lt;/h2&gt; &#xA;&lt;p&gt;欢迎向 Bisheng 社区贡献你的代码。代码贡献流程或提交补丁等相关信息详见 &lt;a href=&#34;https://github.com/dataelement/bisheng/raw/main/CONTRIBUTING.md&#34;&gt;代码贡献准则&lt;/a&gt;。 参考 &lt;a href=&#34;https://github.com/dataelement/community&#34;&gt;社区仓库&lt;/a&gt; 了解社区管理准则并获取更多社区资源。&lt;/p&gt; &#xA;&lt;!-- ### All contributors --&gt; &#xA;&lt;!-- Do not remove end of hero-bot --&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;All Thanks To Our Contributors:&lt;/h3&gt; &#xA;&lt;a href=&#34;https://github.com/dataelement/bisheng/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=dataelement/bisheng&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Bisheng 文档&lt;/h2&gt; &#xA;&lt;p&gt;获取更多有关安装、开发、部署和管理的指南，请查看 &lt;a href=&#34;https://m7a7tqsztt.feishu.cn/wiki/ZxW6wZyAJicX4WkG0NqcWsbynde&#34;&gt;Bisheng 文档&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;社区&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;欢迎加入 &lt;a href=&#34;https://www.dataelem.com/&#34;&gt;Slack&lt;/a&gt; 频道分享你的建议与问题。&lt;/li&gt; &#xA; &lt;li&gt;你也可以通过 &lt;a href=&#34;https://m7a7tqsztt.feishu.cn/wiki/XdGCwkDJviC0Z8klbdbcF790n9b&#34;&gt;FAQ&lt;/a&gt; 页面，查看常见问题及解答。&lt;/li&gt; &#xA; &lt;li&gt;你也可以加入 &lt;a href=&#34;https://github.com/dataelement/bisheng/discussions&#34;&gt;讨论组&lt;/a&gt; 发起问题和讨论。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- 订阅 Bisheng 邮件：&#xA;&#xA;- [Technical Steering Committee](https://www.dataelem.com/)&#xA;- [Technical Discussions](https://www.dataelem.com/)&#xA;- [Announcement](https://www.dataelem.com/) --&gt; &#xA;&lt;p&gt;关注 Bisheng 社交媒体：&lt;/p&gt; &#xA;&lt;!-- - [知乎](https://www.zhihu.com/org/bisheng-io)&#xA;- [CSDN](http://bishengio.blog.csdn.net/)&#xA;- [Bilibili](http://space.bilibili.com/xxxxx) --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bisheng 技术交流微信群&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://www.dataelem.com/nstatic/qrcode.png&#34; alt=&#34;Wechat QR Code&#34;&gt; &#xA;&lt;h2&gt;加入我们&lt;/h2&gt; &#xA;&lt;p&gt;DataElem Inc. 是 Bisheng 项目的幕后公司。我们正在 &lt;a href=&#34;https://www.dataelem.com/contact/team&#34;&gt;招聘&lt;/a&gt; 算法、开发和全栈工程师。欢迎加入我们，让我们携手构建下一代的智能应用开发平台。&lt;/p&gt; &#xA;&lt;h2&gt;特别感谢&lt;/h2&gt; &#xA;&lt;p&gt;Bisheng 采用了以下依赖库:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;感谢开源模型预估框架 &lt;a href=&#34;https://github.com/triton-inference-server&#34;&gt;Triton&lt;/a&gt; 。&lt;/li&gt; &#xA; &lt;li&gt;感谢开源LLM应用开发库 &lt;a href=&#34;https://github.com/langchain-ai/langchain&#34;&gt;langchain&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;感谢开源非结构化数据解析引擎 &lt;a href=&#34;https://github.com/Unstructured-IO/unstructured&#34;&gt;unstructured&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;感谢开源langchain可视化工具 &lt;a href=&#34;https://github.com/logspace-ai/langflow&#34;&gt;langflow&lt;/a&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#dataelement/bisheng&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=dataelement/bisheng&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vvbbnn00/WARP-Clash-API</title>
    <updated>2024-03-03T01:50:28Z</updated>
    <id>tag:github.com,2024-03-03:/vvbbnn00/WARP-Clash-API</id>
    <link href="https://github.com/vvbbnn00/WARP-Clash-API" rel="alternate"></link>
    <summary type="html">&lt;p&gt;该项目可以让你通过订阅的方式使用Cloudflare WARP+，自动获取流量。This project enables you to use Cloudflare WARP+ through subscription, automatically acquiring traffic.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WARP Clash API&lt;/h1&gt; &#xA;&lt;p&gt;中文 | &lt;a href=&#34;https://raw.githubusercontent.com/vvbbnn00/WARP-Clash-API/master/README_en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;本项目是完全非商业项目，仅供学习交流使用，请勿用于非法用途，否则后果自负。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🤔 这是什么？&lt;/h2&gt; &#xA;&lt;p&gt;该项目可以让你通过订阅的方式使用&lt;code&gt;WARP+&lt;/code&gt;，支持&lt;code&gt;Clash&lt;/code&gt;、&lt;code&gt;Shadowrocket&lt;/code&gt;等客户端。项目内置了刷取&lt;code&gt;WARP+&lt;/code&gt; 流量的功能，可以让你的&lt;code&gt;WARP+&lt;/code&gt;流量不再受限制（每&lt;code&gt;18&lt;/code&gt;秒可获得&lt;code&gt;1GB&lt;/code&gt;流量），同时，配备了&lt;code&gt;IP&lt;/code&gt;选优功能。支持&lt;code&gt;Docker compose&lt;/code&gt; 一键部署，无需额外操作，即可享受你自己的&lt;code&gt;WARP+&lt;/code&gt;私有高速节点！&lt;/p&gt; &#xA;&lt;h2&gt;💡 特色功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;💻 支持&lt;code&gt;Clash&lt;/code&gt;、&lt;code&gt;Surge&lt;/code&gt;、&lt;code&gt;Shadowrocket&lt;/code&gt;等客户端&lt;/li&gt; &#xA; &lt;li&gt;🔑 支持设置您自己的&lt;code&gt;LicenseKey&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;🌏 支持&lt;code&gt;IP&lt;/code&gt;选优&lt;/li&gt; &#xA; &lt;li&gt;🐋 支持&lt;code&gt;Docker compose&lt;/code&gt;一键部署&lt;/li&gt; &#xA; &lt;li&gt;📕 全自动刷取&lt;code&gt;WARP+&lt;/code&gt;流量，请求经过代理，防封&lt;code&gt;IP&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;❓ 每次更新订阅随机节点，让你体验抽卡的乐趣&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 快速上手&lt;/h2&gt; &#xA;&lt;h3&gt;1. 安装&lt;code&gt;Docker&lt;/code&gt;和&lt;code&gt;Docker compose&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Docker&lt;/code&gt;安装教程：&lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;https://docs.docker.com/engine/install/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Docker compose&lt;/code&gt;安装教程：&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;https://docs.docker.com/compose/install/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. 下载项目&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/vvbbnn00/WARP-Clash-API.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. [可选] 配置&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;若您需要在公网上部署该项目，建议您配置&lt;code&gt;SECRET_KEY&lt;/code&gt;与&lt;code&gt;PUBLIC_URL&lt;/code&gt;。在项目目录下创建&lt;code&gt;.env.local&lt;/code&gt;文件，写入如下内容：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SECRET_KEY=your_secret_key&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;关于环境变量的更多信息，请参考&lt;a href=&#34;https://raw.githubusercontent.com/vvbbnn00/WARP-Clash-API/master/#-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F&#34;&gt;环境变量&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;4. 编译并运行&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;5. 获取订阅链接&lt;/h3&gt; &#xA;&lt;p&gt;访问&lt;code&gt;http://你的IP:21001&lt;/code&gt;，输入&lt;code&gt;SECRET_KEY&lt;/code&gt;（若没有配置，则可以留空），即可获取订阅链接。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;🎉 大功告成&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🌏 手动IP选优&lt;/h2&gt; &#xA;&lt;p&gt;项目本身包含了一个选优过的&lt;code&gt;IP&lt;/code&gt;列表，但是由于&lt;code&gt;WARP&lt;/code&gt;的&lt;code&gt;IP&lt;/code&gt;是动态的，所以可能会出现&lt;code&gt;IP&lt;/code&gt;不可用的情况。若您需要手动选优，可以遵循以下步骤：&lt;/p&gt; &#xA;&lt;p&gt;若您通过&lt;code&gt;docker-compose&lt;/code&gt;部署，可以在项目目录下通过以下命令手动执行&lt;code&gt;IP&lt;/code&gt;选优：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose exec warp-clash python3 app.py optimize&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;否则，可以在项目目录下执行以下命令：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 app.py optimize&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🔧 环境变量&lt;/h2&gt; &#xA;&lt;p&gt;没错，您可以通过环境变量来配置该项目，在配置时，只需新建一个&lt;code&gt;.env.local&lt;/code&gt;文件，写入您需要的环境变量即可。&lt;/p&gt; &#xA;&lt;p&gt;以下是可用的环境变量：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;变量名&lt;/th&gt; &#xA;   &lt;th&gt;默认值&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DELAY_THRESHOLD&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;500&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;延迟阈值，超过该阈值的&lt;code&gt;IP&lt;/code&gt;将被剔除&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DO_GET_WARP_DATA&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;True&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;是否刷取&lt;code&gt;WARP+&lt;/code&gt;流量，若不需要刷取流量，则设置为&lt;code&gt;False&lt;/code&gt;即可&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GET_WARP_DATA_INTERVAL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;18&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;刷取&lt;code&gt;WARP+&lt;/code&gt;流量的时间间隔，单位为秒，每隔该时间间隔会刷取一次&lt;code&gt;WARP+&lt;/code&gt;流量，不建议间隔设置过短。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LOSS_THRESHOLD&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;丢包率阈值，超过该阈值的&lt;code&gt;IP&lt;/code&gt;将被剔除&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PROXY_POOL_URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://getproxy.bzpl.tech/get/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;IP代理池地址，用于刷取&lt;code&gt;WARP+&lt;/code&gt;流量，您可以自行搭建，参照&lt;a href=&#34;https://github.com/jhao104/proxy_pool&#34;&gt;proxy_pool&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PUBLIC_URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;无&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;部署在公网上时，填写公网&lt;code&gt;IP&lt;/code&gt;或域名，用于生成订阅链接，比如 &lt;code&gt;https://subs.zeabur.app&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RANDOM_COUNT&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;每次更新订阅随机节点的数量&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;REOPTIMIZE_INTERVAL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;重新选优的时间间隔，单位为秒，若小于等于0，则不会重新选优，否则每隔该时间间隔会重新选优一次，不建议间隔设置过短。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;REQUEST_RATE_LIMIT&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;限制X秒一次请求，该功能不太稳定，建议不要开启&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SECRET_KEY&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;无&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;用于保护订阅链接，若不配置，则不需要输入&lt;code&gt;SECRET_KEY&lt;/code&gt;即可获取订阅链接&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SHARE_SUBSCRIPTION&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;False&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;若您的站点想要向社区分享订阅，但不想让自己的账户信息被公开或修改，可以设置为&lt;code&gt;True&lt;/code&gt;，此时，访问订阅链接时，不需要输入&lt;code&gt;SECRET_KEY&lt;/code&gt;即可获取，而对于其他的操作，仍然需要输入&lt;code&gt;SECRET_KEY&lt;/code&gt;。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;📝 配置示例&lt;/h3&gt; &#xA;&lt;p&gt;例如，您设置&lt;code&gt;SECRET_KEY&lt;/code&gt;为&lt;code&gt;123456&lt;/code&gt;，并打算将订阅分享给社区，那么您的&lt;code&gt;.env.local&lt;/code&gt;文件应该如下：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-env&#34;&gt;SECRET_KEY=123456&#xA;SHARE_SUBSCRIPTION=True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🧰 进阶操作&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;请注意，如果您设置了&lt;code&gt;SECRET_KEY&lt;/code&gt;，需要在URL的末尾添加&lt;code&gt;key&lt;/code&gt;参数&lt;/strong&gt;，例如：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://your_IP:21001/some/api/actions?key=your_secret_key&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;重置账户的&lt;code&gt;PublicKey&lt;/code&gt;和&lt;code&gt;PrivateKey&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;项目支持您通过请求以下接口来重置&lt;code&gt;PublicKey&lt;/code&gt;和&lt;code&gt;PrivateKey&lt;/code&gt;：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -X POST http://host:port/api/account/reset_key&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;重置过后，需要重新获取订阅内容，否则可能无法使用。&lt;/p&gt; &#xA;&lt;h3&gt;设置自己的&lt;code&gt;LicenseKey&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;若您已经拥有了&lt;code&gt;WARP+&lt;/code&gt;的&lt;code&gt;LicenseKey&lt;/code&gt;，可以通过以下接口来设置：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -X POST http://host:port/api/account/update_license -H &#34;Content-Type: application/json&#34; -d &#34;{\&#34;license_key\&#34;: \&#34;your_license_key\&#34;}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;请注意，当您设置了&lt;code&gt;LicenseKey&lt;/code&gt;后，其&lt;code&gt;PublicKey&lt;/code&gt;和&lt;code&gt;PrivateKey&lt;/code&gt;将会被重置，需要重新获取订阅内容。&lt;/p&gt; &#xA;&lt;h2&gt;🗂️ 引用项目&lt;/h2&gt; &#xA;&lt;p&gt;本项目的开发参照了以下项目，感谢这些开源项目的作者：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/Misaka-blog/warp-script&#34;&gt;warp-script&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://replit.com/@aliilapro/warp&#34;&gt;warp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ViRb3/wgcf&#34;&gt;wgcf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jhao104/proxy_pool&#34;&gt;proxy_pool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.maxmind.com/geoip/geolite2-free-geolocation-data&#34;&gt;geolite2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>