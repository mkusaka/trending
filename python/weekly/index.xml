<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-03T01:46:21Z</updated>
  <subtitle>Weekly Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Skyvern-AI/skyvern</title>
    <updated>2024-11-03T01:46:21Z</updated>
    <id>tag:github.com,2024-11-03:/Skyvern-AI/skyvern</id>
    <link href="https://github.com/Skyvern-AI/skyvern" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automate browser-based workflows with LLMs and Computer Vision&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.skyvern.com&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;docs/images/skyvern_logo.png&#34;&gt; &#xA;   &lt;img height=&#34;120&#34; src=&#34;https://raw.githubusercontent.com/Skyvern-AI/skyvern/main/docs/images/skyvern_logo_blackbg.png&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; üêâ Automate Browser-based workflows using LLMs and Computer Vision üêâ &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.skyvern.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Website-blue?logo=googlechrome&amp;amp;logoColor=black&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.skyvern.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Docs-yellow?logo=gitbook&amp;amp;logoColor=black&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/fG2XXEuQX3&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1212486326352617534?logo=discord&amp;amp;label=discord&#34;&gt;&lt;/a&gt; &#xA; &lt;!-- &lt;a href=&#34;https://pepy.tech/project/skyvern&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/badge/skyvern&#34; alt=&#34;Total Downloads&#34;/&gt;&lt;/a&gt; --&gt; &lt;a href=&#34;https://github.com/skyvern-ai/skyvern&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/skyvern-ai/skyvern&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Skyvern-AI/skyvern/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/skyvern-ai/skyvern&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/skyvernai&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/skyvernai?style=social&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.linkedin.com/company/95726232&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Follow%2520%20on%2520LinkedIn-8A2BE2?logo=linkedin&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.skyvern.com&#34;&gt;Skyvern&lt;/a&gt; automates browser-based workflows using LLMs and computer vision. It provides a simple API endpoint to fully automate manual workflows on a large number of websites, replacing brittle or unreliable automation solutions.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Skyvern-AI/skyvern/main/docs/images/geico_shu_recording_cropped.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Traditional approaches to browser automations required writing custom scripts for websites, often relying on DOM parsing and XPath-based interactions which would break whenever the website layouts changed.&lt;/p&gt; &#xA;&lt;p&gt;Instead of only relying on code-defined XPath interactions, Skyvern relies on prompts in addition to computer vision and LLMs to parse items in the viewport in real-time, create a plan for interaction and interact with them.&lt;/p&gt; &#xA;&lt;p&gt;This approach gives us a few advantages:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Skyvern can operate on websites it‚Äôs never seen before, as it‚Äôs able to map visual elements to actions necessary to complete a workflow, without any customized code&lt;/li&gt; &#xA; &lt;li&gt;Skyvern is resistant to website layout changes, as there are no pre-determined XPaths or other selectors our system is looking for while trying to navigate&lt;/li&gt; &#xA; &lt;li&gt;Skyvern is able to take a single workflow and apply it to a large number of websites, as it‚Äôs able to reason through the interactions necessary to complete the workflow&lt;/li&gt; &#xA; &lt;li&gt;Skyvern leverages LLMs to reason through interactions to ensure we can cover complex situations. Examples include: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;If you wanted to get an auto insurance quote from Geico, the answer to a common question ‚ÄúWere you eligible to drive at 18?‚Äù could be inferred from the driver receiving their license at age 16&lt;/li&gt; &#xA;   &lt;li&gt;If you were doing competitor analysis, it‚Äôs understanding that an Arnold Palmer 22 oz can at 7/11 is almost definitely the same product as a 23 oz can at Gopuff (even though the sizes are slightly different, which could be a rounding error!)&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Want to see examples of Skyvern in action? Jump to &lt;a href=&#34;https://raw.githubusercontent.com/Skyvern-AI/skyvern/main/#real-world-examples-of-skyvern&#34;&gt;#real-world-examples-of-skyvern&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;How it works&lt;/h1&gt; &#xA;&lt;p&gt;Skyvern was inspired by the Task-Driven autonomous agent design popularized by &lt;a href=&#34;https://github.com/yoheinakajima/babyagi&#34;&gt;BabyAGI&lt;/a&gt; and &lt;a href=&#34;https://github.com/Significant-Gravitas/AutoGPT&#34;&gt;AutoGPT&lt;/a&gt; -- with one major bonus: we give Skyvern the ability to interact with websites using browser automation libraries like &lt;a href=&#34;https://playwright.dev/&#34;&gt;Playwright&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Skyvern uses a swarm of agents to comprehend a website, and plan and execute its actions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Interactable Element Agent&lt;/strong&gt;: This agent is responsible for parsing the HTML of a website and extracting the interactable elements.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Navigation Agent&lt;/strong&gt;: This agent is responsible for planning the navigation to complete a task. Examples include clicking buttons, inserting text, selecting options, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Data Extraction Agent&lt;/strong&gt;: This agent is responsible for extracting data from a website. It&#39;s capable of reading the tables and text on the page, and extracting the output in a user-defined structured format&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Password Agent&lt;/strong&gt;: This agent is responsible for filling out password forms on a website. It&#39;s capable of reading the username and password from a password manager, and filling out the form while preserving the privacy of the user-defined secrets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2FA Agent&lt;/strong&gt;: This agent is responsible for filling out 2FA forms on a website. It&#39;s capable of intercepting website requests for 2FAs, and either requesting user-defined APIs for 2FA codes or waiting for users to feed 2FA codes into it, and then completing the login process.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dynamic Auto-complete Agent&lt;/strong&gt;: This agent is responsible for filling out dynamic auto-complete forms on a website. It&#39;s capable of reading the options presented to it, selecting the appropriate option based on the user&#39;s input, and adjusting its inputs based on the feedback from inside the form. Popular examples include: Address forms, university dropdowns, and more.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;docs/images/skyvern-system-diagram-dark.png&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Skyvern-AI/skyvern/main/docs/images/skyvern-system-diagram-light.png&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;h1&gt;Demo&lt;/h1&gt; &#xA;&lt;!-- Redo demo --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/5cab4668-e8e2-4982-8551-aab05ff73a7f&#34;&gt;https://github.com/user-attachments/assets/5cab4668-e8e2-4982-8551-aab05ff73a7f&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Skyvern Cloud&lt;/h1&gt; &#xA;&lt;p&gt;We offer a managed cloud version of Skyvern that allows you to run Skyvern without having to manage the infrastructure. It allows you to run multiple Skyvern instances in parallel to automate your workflows at scale. In addition, Skyvern cloud comes bundled with anti-bot detection mechanisms, proxy network, and CAPTCHA solving to allow you to complete more complicated workflows.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to try it out,&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to &lt;a href=&#34;https://app.skyvern.com&#34;&gt;app.skyvern.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create an account &amp;amp; Get $5 of credits on us&lt;/li&gt; &#xA; &lt;li&gt;Kick off your first task and see Skyvern in action!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Here are some tips that may help you on your adventure:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Skyvern is really good at carrying out a single goal. If you give it too many instructions to do, it has a high likelihood of getting confused along the way.&lt;/li&gt; &#xA; &lt;li&gt;Being really explicit about goals is very important. For example, if you&#39;re generating an insurance quote, let it know very clearly how it can identify it has accomplished its goals. Use words like &#34;COMPLETE&#34; or &#34;TERMINATE&#34; to indicate success and failure modes, respectively.&lt;/li&gt; &#xA; &lt;li&gt;Workflows can be used if you&#39;d like to do more advanced things such as chaining multiple instructions together, or securely logging in. If you need any help with this, please feel free to book some time with us! We&#39;re always happy to help&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Quickstart&lt;/h1&gt; &#xA;&lt;p&gt;This quickstart guide will walk you through getting Skyvern up and running on your local machine.&lt;/p&gt; &#xA;&lt;h2&gt;Docker Compose setup (Recommended)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure you have &lt;a href=&#34;https://www.docker.com/products/docker-desktop/&#34;&gt;Docker Desktop&lt;/a&gt; installed and running on your machine&lt;/li&gt; &#xA; &lt;li&gt;Make sure you don&#39;t have postgres running locally (Run &lt;code&gt;docker ps&lt;/code&gt; to check)&lt;/li&gt; &#xA; &lt;li&gt;Clone the repository and navigate to the root directory&lt;/li&gt; &#xA; &lt;li&gt;Fill in the LLM provider key on the &lt;a href=&#34;https://raw.githubusercontent.com/Skyvern-AI/skyvern/main/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt;. &lt;em&gt;If you want to run Skyvern on a remote server, make sure you set the correct server ip for the UI container in &lt;a href=&#34;https://raw.githubusercontent.com/Skyvern-AI/skyvern/main/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run the following command via the commandline: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Navigate to &lt;code&gt;http://localhost:8080&lt;/code&gt; in your browser to start using the UI&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Full Setup (Contributors) - Prerequisites&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;‚ö†&lt;/span&gt; &lt;span&gt;‚ö†&lt;/span&gt; MAKE SURE YOU ARE USING PYTHON 3.11 &lt;span&gt;‚ö†&lt;/span&gt; &lt;span&gt;‚ö†&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; &lt;span&gt;‚ö†&lt;/span&gt; Only well-tested on MacOS &lt;span&gt;‚ö†&lt;/span&gt; &lt;span&gt;‚ö†&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;Before you begin, make sure you have the following installed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://brew.sh/&#34;&gt;Brew (if you&#39;re on a Mac)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://python-poetry.org/docs/#installation&#34;&gt;Poetry&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;brew install poetry&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;node&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note: Our setup script does these two for you, but they are here for reference.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python 3.11&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;poetry env use 3.11&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;PostgreSQL 14&lt;/a&gt; (if you&#39;re on a Mac, setup script will install it for you if you have homebrew installed) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;brew install postgresql&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup (Contributors)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository and navigate to the root directory&lt;/li&gt; &#xA; &lt;li&gt;Open Docker Desktop (Works for Windows, macOS, and Linux) or run Docker Daemon&lt;/li&gt; &#xA; &lt;li&gt;Run the setup script to install the necessary dependencies and setup your environment &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./setup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Start the server &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./run_skyvern.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can start sending requests to the server, but we built a simple UI to help you get started. To start the UI, run the following command: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./run_ui.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Navigate to &lt;code&gt;http://localhost:8080&lt;/code&gt; in your browser to start using the UI&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Additional Setup for Contributors&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re looking to contribute to Skyvern, you&#39;ll need to install the pre-commit hooks to ensure code quality and consistency. You can do this by running the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pre-commit install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Supported Functionality&lt;/h1&gt; &#xA;&lt;h2&gt;Skyvern Tasks&lt;/h2&gt; &#xA;&lt;p&gt;Tasks are the fundamental building block inside Skyvern. Each task is a single request to Skyvern, instructing it to navigate through a website and accomplish a specific goal.&lt;/p&gt; &#xA;&lt;p&gt;Tasks require you to specify a &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;navigation_goal&lt;/code&gt;, and optionally &lt;code&gt;data_extraction_goal&lt;/code&gt; if you&#39;d like to extract data from the website, and a &lt;code&gt;navigation_payload&lt;/code&gt; if you&#39;d like to provide additional context to help Skyvern fill information or answer questions presented by a website.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Skyvern-AI/skyvern/main/docs/images/task_creation_form_example.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Skyvern Workflows&lt;/h2&gt; &#xA;&lt;p&gt;Workflows are a way to chain multiple tasks together to form a cohesive unit of work.&lt;/p&gt; &#xA;&lt;p&gt;For example, if you wanted to download all invoices newer than January 1st, you could create a workflow that first navigated to the invoices page, then filtered down to only show invoices newer than January 1st, extracted a list of all eligible invoices, and iterated through each invoice to download it.&lt;/p&gt; &#xA;&lt;p&gt;Another example is if you wanted to automate purchasing products from an e-commerce store, you could create a workflow that first navigated to the desired product, then added it to a cart. Second, it would navigate to the cart and validate the cart state. Finally, it would go through the checkout process to purchase the items.&lt;/p&gt; &#xA;&lt;p&gt;Supported workflow features include:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Tasks (+ chained tasks)&lt;/li&gt; &#xA; &lt;li&gt;Loops&lt;/li&gt; &#xA; &lt;li&gt;File parsing&lt;/li&gt; &#xA; &lt;li&gt;Uploading files to block storage&lt;/li&gt; &#xA; &lt;li&gt;Sending emails&lt;/li&gt; &#xA; &lt;li&gt;Text Prompts&lt;/li&gt; &#xA; &lt;li&gt;(Coming soon) Conditionals&lt;/li&gt; &#xA; &lt;li&gt;(Coming soon) Custom Code Block&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Skyvern-AI/skyvern/main/docs/images/invoice_downloading_workflow_example.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Livestreaming&lt;/h2&gt; &#xA;&lt;p&gt;Skyvern allows you to livestream the viewport of the browser to your local machine so that you can see exactly what Skyvern is doing on the web. This is useful for debugging and understanding how Skyvern is interacting with a website, and intervening when necessary&lt;/p&gt; &#xA;&lt;h2&gt;Form Filling&lt;/h2&gt; &#xA;&lt;p&gt;Skyvern is natively capable of filling out form inputs on websites. Passing in information via the &lt;code&gt;navigation_goal&lt;/code&gt; or &lt;code&gt;navigation_payload&lt;/code&gt; will allow Skyvern to comprehend the information and fill out the form accordingly.&lt;/p&gt; &#xA;&lt;h2&gt;Data Extraction&lt;/h2&gt; &#xA;&lt;p&gt;Skyvern is also capable of extracting data from a website. Specifying a &lt;code&gt;data_extraction_goal&lt;/code&gt; will allow Skyvern to extract the data and return it to you in the response.&lt;/p&gt; &#xA;&lt;p&gt;You can also specify a &lt;code&gt;data_extraction_schema&lt;/code&gt; to tell Skyvern exactly what data you&#39;d like to extract from the website, in jsonc format. Skyvern&#39;s output will be structured in accordance to the supplied schema.&lt;/p&gt; &#xA;&lt;h2&gt;File Downloading&lt;/h2&gt; &#xA;&lt;p&gt;Skyvern is also capable of downloading files from a website. Specifying a &lt;code&gt;file_download_goal&lt;/code&gt; will allow Skyvern to download the file and return a link to the file in the response.&lt;/p&gt; &#xA;&lt;h2&gt;Authentication&lt;/h2&gt; &#xA;&lt;p&gt;Skyvern supports a number of different authentication methods to make it easier to automate tasks behind a login.&lt;/p&gt; &#xA;&lt;h3&gt;Password Manager Integrations&lt;/h3&gt; &#xA;&lt;p&gt;Skyvern currently supports the following password manager integrations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bitwarden&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 1Password&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; LastPass&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Skyvern-AI/skyvern/main/docs/images/secure_password_task_example.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;2FA&lt;/h3&gt; &#xA;&lt;p&gt;Skyvern supports a number of different 2FA methods to allow you to automate workflows that require 2FA.&lt;/p&gt; &#xA;&lt;p&gt;Examples include:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;QR-based 2FA (e.g. Google Authenticator, Authy)&lt;/li&gt; &#xA; &lt;li&gt;Email based 2FA&lt;/li&gt; &#xA; &lt;li&gt;SMS based 2FA&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Real-world examples of Skyvern&lt;/h1&gt; &#xA;&lt;p&gt;We love to see how Skyvern is being used in the wild. Here are some examples of how Skyvern is being used to automate workflows in the real world. Please open PRs to add your own examples!&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll need to have Skyvern running locally if you want to try these examples out. Please run the following command after going through the quickstart guide:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./run_skyvern.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Invoice Downloading on many different websites&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://meetings.hubspot.com/skyvern/demo&#34;&gt;Book a demo to see it live&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Skyvern-AI/skyvern/main/docs/images/invoice_downloading.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Automate the job application process&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.skyvern.com/create/job_application&#34;&gt;üí° See it in action&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Skyvern-AI/skyvern/main/docs/images/job_application_demo.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Automate materials procurement for a manufacturing company&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.skyvern.com/create/finditparts&#34;&gt;üí° See it in action&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Skyvern-AI/skyvern/main/docs/images/finditparts_recording_crop.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Navigating to government websites to register accounts or fill out forms&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.skyvern.com/create/california_edd&#34;&gt;üí° See it in action&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Skyvern-AI/skyvern/main/docs/images/edd_services.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;!-- Add example of delaware entity lookups x2 --&gt; &#xA;&lt;h2&gt;Filling out random contact us forms&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.skyvern.com/create/contact_us_forms&#34;&gt;üí° See it in action&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Skyvern-AI/skyvern/main/docs/images/contact_forms.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Retrieving insurance quotes from insurance providers in any language&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.skyvern.com/create/bci_seguros&#34;&gt;üí° See it in action&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Skyvern-AI/skyvern/main/docs/images/bci_seguros_recording.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.skyvern.com/create/geico&#34;&gt;üí° See it in action&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Skyvern-AI/skyvern/main/docs/images/geico_shu_recording_cropped.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;More extensive documentation can be found on our &lt;a href=&#34;https://docs.skyvern.com&#34;&gt;documentation website&lt;/a&gt;. Please let us know if something is unclear or missing by opening an issue or reaching out to us &lt;a href=&#34;mailto:founders@skyvern.com&#34;&gt;via email&lt;/a&gt; or &lt;a href=&#34;https://discord.gg/fG2XXEuQX3&#34;&gt;discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Supported LLMs&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Provider&lt;/th&gt; &#xA;   &lt;th&gt;Supported Models&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenAI&lt;/td&gt; &#xA;   &lt;td&gt;gpt4-turbo, gpt-4o, gpt-4o-mini&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Anthropic&lt;/td&gt; &#xA;   &lt;td&gt;Claude 3 (Haiku, Sonnet, Opus), Claude 3.5 (Sonnet)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Azure OpenAI&lt;/td&gt; &#xA;   &lt;td&gt;Any GPT models. Better performance with a multimodal llm (azure/gpt4-o)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AWS Bedrock&lt;/td&gt; &#xA;   &lt;td&gt;Anthropic Claude 3 (Haiku, Sonnet, Opus), Claude 3.5 (Sonnet)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ollama&lt;/td&gt; &#xA;   &lt;td&gt;Coming soon (contributions welcome)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Gemini&lt;/td&gt; &#xA;   &lt;td&gt;Coming soon (contributions welcome)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Llama 3.2&lt;/td&gt; &#xA;   &lt;td&gt;Coming soon (contributions welcome)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Environment Variables&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Sample Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ENABLE_OPENAI&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Register OpenAI models&lt;/td&gt; &#xA;   &lt;td&gt;Boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ENABLE_ANTHROPIC&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Register Anthropic models&lt;/td&gt; &#xA;   &lt;td&gt;Boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ENABLE_AZURE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Register Azure OpenAI models&lt;/td&gt; &#xA;   &lt;td&gt;Boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ENABLE_BEDROCK&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Register AWS Bedrock models&lt;/td&gt; &#xA;   &lt;td&gt;Boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LLM_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The name of the model you want to use&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;Currently supported llm keys: &lt;code&gt;OPENAI_GPT4_TURBO&lt;/code&gt;, &lt;code&gt;OPENAI_GPT4V&lt;/code&gt;, &lt;code&gt;OPENAI_GPT4O&lt;/code&gt;, &lt;code&gt;OPENAI_GPT4O_MINI&lt;/code&gt;, &lt;code&gt;ANTHROPIC_CLAUDE3&lt;/code&gt;, &lt;code&gt;ANTHROPIC_CLAUDE3_OPUS&lt;/code&gt;, &lt;code&gt;ANTHROPIC_CLAUDE3_SONNET&lt;/code&gt;, &lt;code&gt;ANTHROPIC_CLAUDE3_HAIKU&lt;/code&gt;, &lt;code&gt;ANTHROPIC_CLAUDE3.5_SONNET&lt;/code&gt;, &lt;code&gt;BEDROCK_ANTHROPIC_CLAUDE3_OPUS&lt;/code&gt;, &lt;code&gt;BEDROCK_ANTHROPIC_CLAUDE3_SONNET&lt;/code&gt;, &lt;code&gt;BEDROCK_ANTHROPIC_CLAUDE3_HAIKU&lt;/code&gt;, &lt;code&gt;BEDROCK_ANTHROPIC_CLAUDE3.5_SONNET&lt;/code&gt;, &lt;code&gt;AZURE_OPENAI&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OPENAI_API_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OpenAI API Key&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sk-1234567890&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OPENAI_API_BASE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OpenAI API Base, optional&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://openai.api.base&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OPENAI_ORGANIZATION&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OpenAI Organization ID, optional&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;your-org-id&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ANTHROPIC_API_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Anthropic API key&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sk-1234567890&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;AZURE_API_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Azure deployment API key&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sk-1234567890&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;AZURE_DEPLOYMENT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Azure OpenAI Deployment Name&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;skyvern-deployment&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;AZURE_API_BASE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Azure deployment api base url&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://skyvern-deployment.openai.azure.com/&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;AZURE_API_VERSION&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Azure API Version&lt;/td&gt; &#xA;   &lt;td&gt;String&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;2024-02-01&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Feature Roadmap&lt;/h1&gt; &#xA;&lt;p&gt;This is our planned roadmap for the next few months. If you have any suggestions or would like to see a feature added, please don&#39;t hesitate to reach out to us &lt;a href=&#34;mailto:founders@skyvern.com&#34;&gt;via email&lt;/a&gt; or &lt;a href=&#34;https://discord.gg/fG2XXEuQX3&#34;&gt;discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Open Source&lt;/strong&gt; - Open Source Skyvern&#39;s core codebase&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;[BETA] Workflow support&lt;/strong&gt; - Allow support to chain multiple Skyvern calls together&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Improved context&lt;/strong&gt; - Improve Skyvern&#39;s ability to understand content around interactable elements by introducing feeding relevant label context through the text prompt&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Cost Savings&lt;/strong&gt; - Improve Skyvern&#39;s stability and reduce the cost of running Skyvern by optimizing the context tree passed into Skyvern&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Self-serve UI&lt;/strong&gt; - Deprecate the Streamlit UI in favour of a React-based UI component that allows users to kick off new jobs in Skyvern&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Workflow UI Builder&lt;/strong&gt; - Introduce a UI to allow users to build and analyze workflows visually&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Chrome Viewport streaming&lt;/strong&gt; - Introduce a way to live-stream the Chrome viewport to the user&#39;s browser (as a part of the self-serve UI)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Past Runs UI&lt;/strong&gt; - Deprecate the Streamlit UI in favour of a React-based UI that allows you to visualize past runs and their results&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Prompt Caching&lt;/strong&gt; - Introduce a caching layer to the LLM calls to dramatically reduce the cost of running Skyvern (memorize past actions and repeat them!)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Web Evaluation Dataset&lt;/strong&gt; - Integrate Skyvern with public benchmark tests to track the quality of our models over time&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Improved Debug mode&lt;/strong&gt; - Allow Skyvern to plan its actions and get &#34;approval&#34; before running them, allowing you to debug what it&#39;s doing and more easily iterate on the prompt&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Auto workflow builder (&#34;Observer&#34;) mode&lt;/strong&gt; - Allow Skyvern to auto-generate workflows as it&#39;s navigating the web to make it easier to build new workflows&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Chrome Extension&lt;/strong&gt; - Allow users to interact with Skyvern through a Chrome extension (incl voice mode, saving tasks, etc.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Skyvern Action Recorder&lt;/strong&gt; - Allow Skyvern to watch a user complete a task and then automatically generate a workflow for it&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Interactable Livestream&lt;/strong&gt; - Allow users to interact with the livestream in real-time to intervene when necessary (such as manually submitting sensitive forms)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Integrate LLM Observability tools&lt;/strong&gt; - Integrate LLM Observability tools to allow back-testing prompt changes with specific data sets + visualize the performance of Skyvern over time&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Langchain Integration&lt;/strong&gt; - Create langchain integration in langchain_community to use Skyvern as a &#34;tool&#34;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;We welcome PRs and suggestions! Don&#39;t hesitate to open a PR/issue or to reach out to us &lt;a href=&#34;mailto:founders@skyvern.com&#34;&gt;via email&lt;/a&gt; or &lt;a href=&#34;https://discord.gg/fG2XXEuQX3&#34;&gt;discord&lt;/a&gt;. Please have a look at our &lt;a href=&#34;https://raw.githubusercontent.com/Skyvern-AI/skyvern/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; and &lt;a href=&#34;https://github.com/skyvern-ai/skyvern/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22&#34;&gt;&#34;Help Wanted&#34; issues&lt;/a&gt; to get started!&lt;/p&gt; &#xA;&lt;p&gt;If you want to chat with the skyvern repository to get a high level overview of how it is structured, how to build off it, and how to resolve usage questions, check out &lt;a href=&#34;https://sage.storia.ai?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=skyvern-readme&#34;&gt;Code Sage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Telemetry&lt;/h1&gt; &#xA;&lt;p&gt;By Default, Skyvern collects basic usage statistics to help us understand how Skyvern is being used. If you would like to opt-out of telemetry, please set the &lt;code&gt;SKYVERN_TELEMETRY&lt;/code&gt; environment variable to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Skyvern&#39;s open source repository is supported via a managed cloud. All of the core logic powering Skyvern is available in this open source repository licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/Skyvern-AI/skyvern/main/LICENSE&#34;&gt;AGPL-3.0 License&lt;/a&gt;, with the exception of anti-bot measures available in our managed cloud offering.&lt;/p&gt; &#xA;&lt;p&gt;If you have any questions or concerns around licensing, please &lt;a href=&#34;mailto:founders@skyvern.com&#34;&gt;contact us&lt;/a&gt; and we would be happy to help.&lt;/p&gt; &#xA;&lt;h1&gt;Star History&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#Skyvern-AI/skyvern&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=Skyvern-AI/skyvern&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>paperless-ngx/paperless-ngx</title>
    <updated>2024-11-03T01:46:21Z</updated>
    <id>tag:github.com,2024-11-03:/paperless-ngx/paperless-ngx</id>
    <link href="https://github.com/paperless-ngx/paperless-ngx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A community-supported supercharged version of paperless: scan, index and archive all your physical documents&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/paperless-ngx/paperless-ngx/actions&#34;&gt;&lt;img src=&#34;https://github.com/paperless-ngx/paperless-ngx/workflows/ci/badge.svg?sanitize=true&#34; alt=&#34;ci&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crowdin.com/project/paperless-ngx&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/paperless-ngx/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.paperless-ngx.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/deployments/paperless-ngx/paperless-ngx/github-pages?label=docs&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/paperless-ngx/paperless-ngx&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/paperless-ngx/paperless-ngx/branch/main/graph/badge.svg?token=VK6OUPJ3TY&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/%23paperlessngx%3Amatrix.org&#34;&gt;&lt;img src=&#34;https://matrix.to/img/matrix-badge.svg?sanitize=true&#34; alt=&#34;Chat on Matrix&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://demo.paperless-ngx.com&#34;&gt;&lt;img src=&#34;https://cronitor.io/badges/ve7ItY/production/W5E_B9jkelG9ZbDiNHUPQEVH3MY.svg?sanitize=true&#34; alt=&#34;demo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://github.com/paperless-ngx/paperless-ngx/blob/main/resources/logo/web/png/White%20logo%20-%20no%20background.png&#34; width=&#34;50%&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://github.com/paperless-ngx/paperless-ngx/raw/main/resources/logo/web/png/Black%20logo%20-%20no%20background.png&#34; width=&#34;50%&#34;&gt; &#xA;  &lt;img src=&#34;https://github.com/paperless-ngx/paperless-ngx/raw/main/resources/logo/web/png/Black%20logo%20-%20no%20background.png&#34; width=&#34;50%&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;!-- omit in toc --&gt; &#xA;&lt;h1&gt;Paperless-ngx&lt;/h1&gt; &#xA;&lt;p&gt;Paperless-ngx is a document management system that transforms your physical documents into a searchable online archive so you can keep, well, &lt;em&gt;less paper&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Paperless-ngx is the official successor to the original &lt;a href=&#34;https://github.com/the-paperless-project/paperless&#34;&gt;Paperless&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/jonaswinkler/paperless-ng&#34;&gt;Paperless-ng&lt;/a&gt; projects and is designed to distribute the responsibility of advancing and supporting the project among a team of people. &lt;a href=&#34;https://raw.githubusercontent.com/paperless-ngx/paperless-ngx/dev/#community-support&#34;&gt;Consider joining us!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks to the generous folks at &lt;a href=&#34;https://m.do.co/c/8d70b916d462&#34;&gt;DigitalOcean&lt;/a&gt;, a demo is available at &lt;a href=&#34;https://demo.paperless-ngx.com&#34;&gt;demo.paperless-ngx.com&lt;/a&gt; using login &lt;code&gt;demo&lt;/code&gt; / &lt;code&gt;demo&lt;/code&gt;. &lt;em&gt;Note: demo content is reset frequently and confidential information should not be uploaded.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paperless-ngx/paperless-ngx/dev/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paperless-ngx/paperless-ngx/dev/#getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paperless-ngx/paperless-ngx/dev/#contributing&#34;&gt;Contributing&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paperless-ngx/paperless-ngx/dev/#community-support&#34;&gt;Community Support&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paperless-ngx/paperless-ngx/dev/#translation&#34;&gt;Translation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paperless-ngx/paperless-ngx/dev/#feature-requests&#34;&gt;Feature Requests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paperless-ngx/paperless-ngx/dev/#bugs&#34;&gt;Bugs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paperless-ngx/paperless-ngx/dev/#related-projects&#34;&gt;Related Projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paperless-ngx/paperless-ngx/dev/#important-note&#34;&gt;Important Note&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;right&#34;&gt;This project is supported by:&lt;br&gt; &lt;a href=&#34;https://m.do.co/c/8d70b916d462&#34; style=&#34;padding-top: 4px; display: block;&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/SVG/DO_Logo_horizontal_white.svg&#34; width=&#34;140px&#34;&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/SVG/DO_Logo_horizontal_blue.svg&#34; width=&#34;140px&#34;&gt; &#xA;   &lt;img src=&#34;https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/SVG/DO_Logo_horizontal_black_.svg?sanitize=true&#34; width=&#34;140px&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/paperless-ngx/paperless-ngx/main/docs/assets/screenshots/documents-smallcards-dark.png&#34;&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://raw.githubusercontent.com/paperless-ngx/paperless-ngx/main/docs/assets/screenshots/documents-smallcards.png&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/paperless-ngx/paperless-ngx/main/docs/assets/screenshots/documents-smallcards.png&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;p&gt;A full list of &lt;a href=&#34;https://docs.paperless-ngx.com/#features&#34;&gt;features&lt;/a&gt; and &lt;a href=&#34;https://docs.paperless-ngx.com/#screenshots&#34;&gt;screenshots&lt;/a&gt; are available in the &lt;a href=&#34;https://docs.paperless-ngx.com/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Getting started&lt;/h1&gt; &#xA;&lt;p&gt;The easiest way to deploy paperless is &lt;code&gt;docker compose&lt;/code&gt;. The files in the &lt;a href=&#34;https://github.com/paperless-ngx/paperless-ngx/tree/main/docker/compose&#34;&gt;&lt;code&gt;/docker/compose&lt;/code&gt; directory&lt;/a&gt; are configured to pull the image from GitHub Packages.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to jump right in, you can configure a &lt;code&gt;docker compose&lt;/code&gt; environment with our install script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash -c &#34;$(curl -L https://raw.githubusercontent.com/paperless-ngx/paperless-ngx/main/install-paperless-ngx.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More details and step-by-step guides for alternative installation methods can be found in &lt;a href=&#34;https://docs.paperless-ngx.com/setup/#installation&#34;&gt;the documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Migrating from Paperless-ng is easy, just drop in the new docker image! See the &lt;a href=&#34;https://docs.paperless-ngx.com/setup/#migrating-to-paperless-ngx&#34;&gt;documentation on migrating&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;!-- omit in toc --&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;The documentation for Paperless-ngx is available at &lt;a href=&#34;https://docs.paperless-ngx.com/&#34;&gt;https://docs.paperless-ngx.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;If you feel like contributing to the project, please do! Bug fixes, enhancements, visual fixes etc. are always welcome. If you want to implement something big: Please start a discussion about that! The &lt;a href=&#34;https://docs.paperless-ngx.com/development/&#34;&gt;documentation&lt;/a&gt; has some basic information on how to get started.&lt;/p&gt; &#xA;&lt;h2&gt;Community Support&lt;/h2&gt; &#xA;&lt;p&gt;People interested in continuing the work on paperless-ngx are encouraged to reach out here on github and in the &lt;a href=&#34;https://matrix.to/#/%23paperless:matrix.org&#34;&gt;Matrix Room&lt;/a&gt;. If you would like to contribute to the project on an ongoing basis there are multiple &lt;a href=&#34;https://github.com/orgs/paperless-ngx/people&#34;&gt;teams&lt;/a&gt; (frontend, ci/cd, etc) that could use your help so please reach out!&lt;/p&gt; &#xA;&lt;h2&gt;Translation&lt;/h2&gt; &#xA;&lt;p&gt;Paperless-ngx is available in many languages that are coordinated on Crowdin. If you want to help out by translating paperless-ngx into your language, please head over to &lt;a href=&#34;https://crwd.in/paperless-ngx&#34;&gt;https://crwd.in/paperless-ngx&lt;/a&gt;, and thank you! More details can be found in &lt;a href=&#34;https://github.com/paperless-ngx/paperless-ngx/raw/main/CONTRIBUTING.md#translating-paperless-ngx&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Feature Requests&lt;/h2&gt; &#xA;&lt;p&gt;Feature requests can be submitted via &lt;a href=&#34;https://github.com/paperless-ngx/paperless-ngx/discussions/categories/feature-requests&#34;&gt;GitHub Discussions&lt;/a&gt;, you can search for existing ideas, add your own and vote for the ones you care about.&lt;/p&gt; &#xA;&lt;h2&gt;Bugs&lt;/h2&gt; &#xA;&lt;p&gt;For bugs please &lt;a href=&#34;https://github.com/paperless-ngx/paperless-ngx/issues&#34;&gt;open an issue&lt;/a&gt; or &lt;a href=&#34;https://github.com/paperless-ngx/paperless-ngx/discussions&#34;&gt;start a discussion&lt;/a&gt; if you have questions.&lt;/p&gt; &#xA;&lt;h1&gt;Related Projects&lt;/h1&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/paperless-ngx/paperless-ngx/wiki/Related-Projects&#34;&gt;the wiki&lt;/a&gt; for a user-maintained list of related projects and software that is compatible with Paperless-ngx.&lt;/p&gt; &#xA;&lt;h1&gt;Important Note&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Document scanners are typically used to scan sensitive documents like your social insurance number, tax records, invoices, etc. &lt;strong&gt;Paperless-ngx should never be run on an untrusted host&lt;/strong&gt; because information is stored in clear text without encryption. No guarantees are made regarding security (but we do try!) and you use the app at your own risk. &lt;strong&gt;The safest way to run Paperless-ngx is on a local server in your own home with backups in place&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>abi/screenshot-to-code</title>
    <updated>2024-11-03T01:46:21Z</updated>
    <id>tag:github.com,2024-11-03:/abi/screenshot-to-code</id>
    <link href="https://github.com/abi/screenshot-to-code" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Drop in a screenshot and convert it to clean code (HTML/Tailwind/React/Vue)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;screenshot-to-code&lt;/h1&gt; &#xA;&lt;p&gt;A simple tool to convert screenshots, mockups and Figma designs into clean, functional code using AI. &lt;strong&gt;Now supporting Claude Sonnet 3.5 and GPT-4o!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/abi/screenshot-to-code/assets/23818/6cebadae-2fe3-4986-ac6a-8fb9db030045&#34;&gt;https://github.com/abi/screenshot-to-code/assets/23818/6cebadae-2fe3-4986-ac6a-8fb9db030045&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Supported stacks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HTML + Tailwind&lt;/li&gt; &#xA; &lt;li&gt;HTML + CSS&lt;/li&gt; &#xA; &lt;li&gt;React + Tailwind&lt;/li&gt; &#xA; &lt;li&gt;Vue + Tailwind&lt;/li&gt; &#xA; &lt;li&gt;Bootstrap&lt;/li&gt; &#xA; &lt;li&gt;Ionic + Tailwind&lt;/li&gt; &#xA; &lt;li&gt;SVG&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Supported AI models:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Claude Sonnet 3.5 - Best model!&lt;/li&gt; &#xA; &lt;li&gt;GPT-4o - also recommended!&lt;/li&gt; &#xA; &lt;li&gt;DALL-E 3 or Flux Schnell (using Replicate) for image generation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/abi/screenshot-to-code/main/#-examples&#34;&gt;Examples&lt;/a&gt; section below for more demos.&lt;/p&gt; &#xA;&lt;p&gt;We also just added experimental support for taking a video/screen recording of a website in action and turning that into a functional prototype.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/abi/screenshot-to-code/assets/23818/8758ffa4-9483-4b9b-bb66-abd6d1594c33&#34; alt=&#34;google in app quick 3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/abi/screenshot-to-code/wiki/Screen-Recording-to-Code&#34;&gt;Learn more about video here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/_abi_&#34;&gt;Follow me on Twitter for updates&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üöÄ Hosted Version&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://screenshottocode.com&#34;&gt;Try it live on the hosted version (paid)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üõ† Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;The app has a React/Vite frontend and a FastAPI backend.&lt;/p&gt; &#xA;&lt;p&gt;Keys needed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abi/screenshot-to-code/raw/main/Troubleshooting.md&#34;&gt;OpenAI API key with access to GPT-4&lt;/a&gt; or Anthropic key (optional)&lt;/li&gt; &#xA; &lt;li&gt;Both are recommended so you can compare results from both Claude and GPT4o&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;d like to run the app with Ollama open source models (not recommended due to poor quality results), &lt;a href=&#34;https://github.com/abi/screenshot-to-code/issues/354#issuecomment-2435479853&#34;&gt;follow this comment&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Run the backend (I use Poetry for package management - &lt;code&gt;pip install poetry&lt;/code&gt; if you don&#39;t have it):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd backend&#xA;echo &#34;OPENAI_API_KEY=sk-your-key&#34; &amp;gt; .env&#xA;echo &#34;ANTHROPIC_API_KEY=your-key&#34; &amp;gt; .env&#xA;poetry install&#xA;poetry shell&#xA;poetry run uvicorn main:app --reload --port 7001&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also set up the keys using the settings dialog on the front-end (click the gear icon after loading the frontend).&lt;/p&gt; &#xA;&lt;p&gt;Run the frontend:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd frontend&#xA;yarn&#xA;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:5173&#34;&gt;http://localhost:5173&lt;/a&gt; to use the app.&lt;/p&gt; &#xA;&lt;p&gt;If you prefer to run the backend on a different port, update VITE_WS_BACKEND_URL in &lt;code&gt;frontend/.env.local&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For debugging purposes, if you don&#39;t want to waste GPT4-Vision credits, you can run the backend in mock mode (which streams a pre-recorded response):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;MOCK=true poetry run uvicorn main:app --reload --port 7001&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;If you have Docker installed on your system, in the root directory, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;OPENAI_API_KEY=sk-your-key&#34; &amp;gt; .env&#xA;docker-compose up -d --build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The app will be up and running at &lt;a href=&#34;http://localhost:5173&#34;&gt;http://localhost:5173&lt;/a&gt;. Note that you can&#39;t develop the application with this setup as the file changes won&#39;t trigger a rebuild.&lt;/p&gt; &#xA;&lt;h2&gt;üôã‚Äç‚ôÇÔ∏è FAQs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;I&#39;m running into an error when setting up the backend. How can I fix it?&lt;/strong&gt; &lt;a href=&#34;https://github.com/abi/screenshot-to-code/issues/3#issuecomment-1814777959&#34;&gt;Try this&lt;/a&gt;. If that still doesn&#39;t work, open an issue.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;How do I get an OpenAI API key?&lt;/strong&gt; See &lt;a href=&#34;https://github.com/abi/screenshot-to-code/raw/main/Troubleshooting.md&#34;&gt;https://github.com/abi/screenshot-to-code/blob/main/Troubleshooting.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;How can I configure an OpenAI proxy?&lt;/strong&gt; - If you&#39;re not able to access the OpenAI API directly (due to e.g. country restrictions), you can try a VPN or you can configure the OpenAI base URL to use a proxy: Set OPENAI_BASE_URL in the &lt;code&gt;backend/.env&lt;/code&gt; or directly in the UI in the settings dialog. Make sure the URL has &#34;v1&#34; in the path so it should look like this: &lt;code&gt;https://xxx.xxxxx.xxx/v1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;How can I update the backend host that my front-end connects to?&lt;/strong&gt; - Configure VITE_HTTP_BACKEND_URL and VITE_WS_BACKEND_URL in front/.env.local For example, set VITE_HTTP_BACKEND_URL=&lt;a href=&#34;http://124.10.20.1:7001&#34;&gt;http://124.10.20.1:7001&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Seeing UTF-8 errors when running the backend?&lt;/strong&gt; - On windows, open the .env file with notepad++, then go to Encoding and select UTF-8.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;How can I provide feedback?&lt;/strong&gt; For feedback, feature requests and bug reports, open an issue or ping me on &lt;a href=&#34;https://twitter.com/_abi_&#34;&gt;Twitter&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìö Examples&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;NYTimes&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Original&lt;/th&gt; &#xA;   &lt;th&gt;Replica&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;1238&#34; alt=&#34;Screenshot 2023-11-20 at 12 54 03 PM&#34; src=&#34;https://github.com/abi/screenshot-to-code/assets/23818/3b644dfa-9ca6-4148-84a7-3405b6671922&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;1414&#34; alt=&#34;Screenshot 2023-11-20 at 12 59 56 PM&#34; src=&#34;https://github.com/abi/screenshot-to-code/assets/23818/26201c9f-1a28-4f35-a3b1-1f04e2b8ce2a&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Instagram page (with not Taylor Swift pics)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/abi/screenshot-to-code/assets/23818/503eb86a-356e-4dfc-926a-dabdb1ac7ba1&#34;&gt;https://github.com/abi/screenshot-to-code/assets/23818/503eb86a-356e-4dfc-926a-dabdb1ac7ba1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Hacker News&lt;/strong&gt; but it gets the colors wrong at first so we nudge it&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/abi/screenshot-to-code/assets/23818/3fec0f77-44e8-4fb3-a769-ac7410315e5d&#34;&gt;https://github.com/abi/screenshot-to-code/assets/23818/3fec0f77-44e8-4fb3-a769-ac7410315e5d&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üåç Hosted Version&lt;/h2&gt; &#xA;&lt;p&gt;üÜï &lt;a href=&#34;https://screenshottocode.com&#34;&gt;Try it here (paid)&lt;/a&gt;. Or see &lt;a href=&#34;https://raw.githubusercontent.com/abi/screenshot-to-code/main/#-getting-started&#34;&gt;Getting Started&lt;/a&gt; for local install instructions to use with your own API keys.&lt;/p&gt;</summary>
  </entry>
</feed>