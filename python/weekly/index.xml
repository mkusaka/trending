<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-26T02:01:52Z</updated>
  <subtitle>Weekly Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>amazon-science/mm-cot</title>
    <updated>2023-02-26T02:01:52Z</updated>
    <id>tag:github.com,2023-02-26:/amazon-science/mm-cot</id>
    <link href="https://github.com/amazon-science/mm-cot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official implementation for &#34;Multimodal Chain-of-Thought Reasoning in Language Models&#34; (stay tuned and more will be updated)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Multimodal Chain-of-Thought Reasoning in Language Models&lt;/h1&gt; &#xA;&lt;h5 align=&#34;center&#34;&gt;&lt;i&gt;&#34;Imagine learning a textbook without figures or tables.&#34;&lt;/i&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Multimodal-CoT incorporates vision features in a decoupled training framework. The framework consists of two training stages: (i) rationale generation and (ii) answer inference. Both stages share the same model architecture but differ in the input and output.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/amazon-science/mm-cot/main/vision_features/mm-cot.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Install all required python dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Datasets&lt;/h2&gt; &#xA;&lt;p&gt;Download the dataset from the following repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/lupantech/ScienceQA/tree/main/data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download the extracted vision features from &lt;a href=&#34;https://drive.google.com/file/d/13B0hc_F_45-UlqPLKSgRz-ALtFQ8kIJr/view?usp=share_link&#34;&gt;vision_features&lt;/a&gt; and unzip the files under &lt;code&gt;vision_features&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;h3&gt;Training&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;# rationale generation&#xA;CUDA_VISIBLE_DEVICES=0,1 python main.py \&#xA;    --model allenai/unifiedqa-t5-base \&#xA;    --user_msg rationale --img_type detr \&#xA;    --bs 8 --eval_bs 4 --eval_acc 10 --output_len 512 \&#xA;    --final_eval --prompt_format QCM-LE&#xA;&#xA;# answer inference&#xA;CUDA_VISIBLE_DEVICES=0,1 python main.py \&#xA;    --model allenai/unifiedqa-t5-base \&#xA;    --user_msg answer --img_type detr \&#xA;    --bs 8 --eval_bs 4 --eval_acc 10 --output_len 64 \&#xA;    --final_eval --prompt_format QCMG-A \&#xA;    --eval_le experiments/rationale_allenai-unifiedqa-t5-base_detr_QCM-LE_lr5e-05_bs16_op512_ep20/predictions_ans_eval.json \&#xA;    --test_le experiments/rationale_allenai-unifiedqa-t5-base_detr_QCM-LE_lr5e-05_bs16_op512_ep20/predictions_ans_test.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Inference&lt;/h3&gt; &#xA;&lt;p&gt;Our trained models are available at &lt;a href=&#34;https://drive.google.com/file/d/1FtTYOJPHnWnFfCxNC6M3gar4RAX5E21b/view?usp=share_link&#34;&gt;models&lt;/a&gt;. To use our trained models, please put the them under the &lt;code&gt;models&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# rationale generation&#xA;CUDA_VISIBLE_DEVICES=0,1 python main.py \&#xA;    --model allenai/unifiedqa-t5-base \&#xA;    --user_msg rationale --img_type detr \&#xA;    --bs 8 --eval_bs 4 --eval_acc 10 --output_len 512 \&#xA;    --final_eval --prompt_format QCM-LE \&#xA;    --evaluate_dir models/MM-CoT-UnifiedQA-base-Rationale&#xA;&#xA;# answer inference&#xA;CUDA_VISIBLE_DEVICES=0,1 python main.py \&#xA;    --model allenai/unifiedqa-t5-base \&#xA;    --user_msg answer --img_type detr \&#xA;    --bs 8 --eval_bs 4 --eval_acc 10 --output_len 64 \&#xA;    --final_eval --prompt_format QCMG-A \&#xA;    --eval_le models/rationale/predictions_ans_eval.json \&#xA;    --test_le models/rationale/predictions_ans_test.json \&#xA;    --evaluate_dir models/MM-CoT-UnifiedQA-base-Answer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Citing MM-CoT&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{zhang2023multicot,&#xA;  title={Multimodal Chain-of-Thought Reasoning in Language Models},&#xA;  author={Zhang, Zhuosheng and Zhang, Aston and Li, Mu and Zhao, Hai and Karypis, George and Smola, Alex},&#xA;  journal={arXiv preprint arXiv:2302.00923},&#xA;  year={2023}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the Apache-2.0 License.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;Part of our codes are adapted from &lt;a href=&#34;https://github.com/lupantech/ScienceQA&#34;&gt;ScienceQA&lt;/a&gt; and &lt;a href=&#34;https://github.com/huggingface/transformers&#34;&gt;Transformers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We thank &lt;a href=&#34;https://lupantech.github.io/&#34;&gt;Pan Lu&lt;/a&gt; for providing parameter size for ScienceQA baselines.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Mikubill/sd-webui-controlnet</title>
    <updated>2023-02-26T02:01:52Z</updated>
    <id>tag:github.com,2023-02-26:/Mikubill/sd-webui-controlnet</id>
    <link href="https://github.com/Mikubill/sd-webui-controlnet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WebUI extension for ControlNet&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;sd-webui-controlnet&lt;/h2&gt; &#xA;&lt;p&gt;(WIP) WebUI extension for ControlNet&lt;/p&gt; &#xA;&lt;p&gt;This extension is for AUTOMATIC1111&#39;s &lt;a href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui&#34;&gt;Stable Diffusion web UI&lt;/a&gt;, allows the Web UI to add &lt;a href=&#34;https://github.com/lllyasviel/ControlNet&#34;&gt;ControlNet&lt;/a&gt; to the original Stable Diffusion model to generate images. The addition is on-the-fly, the merging is not required.&lt;/p&gt; &#xA;&lt;p&gt;ControlNet is a neural network structure to control diffusion models by adding extra conditions.&lt;/p&gt; &#xA;&lt;p&gt;Thanks &amp;amp; Inspired: kohya-ss/sd-webui-additional-networks&lt;/p&gt; &#xA;&lt;h3&gt;Limits&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dragging large file on the Web UI may freeze the entire page. It is better to use the upload file option instead.&lt;/li&gt; &#xA; &lt;li&gt;Just like WebUI&#39;s &lt;a href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui/raw/3715ece0adce7bf7c5e9c5ab3710b2fdc3848f39/modules/sd_hijack_unet.py#L27&#34;&gt;hijack&lt;/a&gt;, we used some interpolate to accept arbitrary size configure (see &lt;code&gt;scripts/cldm.py&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;p&gt;Some users may need to install the cv2 library before using it: &lt;code&gt;pip install opencv-python&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Upgrade gradio if any ui issues occured: &lt;code&gt;pip install gradio==3.16.2&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open &#34;Extensions&#34; tab.&lt;/li&gt; &#xA; &lt;li&gt;Open &#34;Install from URL&#34; tab in the tab.&lt;/li&gt; &#xA; &lt;li&gt;Enter URL of this repo to &#34;URL for extension&#39;s git repository&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Press &#34;Install&#34; button.&lt;/li&gt; &#xA; &lt;li&gt;Reload/Restart Web UI.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Put the ControlNet models (&lt;code&gt;.pt&lt;/code&gt;, &lt;code&gt;.pth&lt;/code&gt;, &lt;code&gt;.ckpt&lt;/code&gt; or &lt;code&gt;.safetensors&lt;/code&gt;) inside the &lt;code&gt;models/ControlNet&lt;/code&gt; folder.&lt;/li&gt; &#xA; &lt;li&gt;Open &#34;txt2img&#34; or &#34;img2img&#34; tab, write your prompts.&lt;/li&gt; &#xA; &lt;li&gt;Press &#34;Refresh models&#34; and select the model you want to use. (If nothing appears, try reload/restart the webui)&lt;/li&gt; &#xA; &lt;li&gt;Upload your image and select preprocessor, done.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Currently it supports both full models and trimmed models. Use &lt;code&gt;extract_controlnet.py&lt;/code&gt; to extract controlnet from original &lt;code&gt;.pth&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Pretrained Models: &lt;a href=&#34;https://huggingface.co/lllyasviel/ControlNet/tree/main/models&#34;&gt;https://huggingface.co/lllyasviel/ControlNet/tree/main/models&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Extraction&lt;/h3&gt; &#xA;&lt;p&gt;Two methods can be used to reduce the model&#39;s filesize:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Directly extract controlnet from original .pth file using &lt;code&gt;extract_controlnet.py&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Transfer control from original checkpoint by making difference using &lt;code&gt;extract_controlnet_diff.py&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;All type of models can be correctly recognized and loaded. The results of different extraction methods are discussed in &lt;a href=&#34;https://github.com/lllyasviel/ControlNet/discussions/12&#34;&gt;https://github.com/lllyasviel/ControlNet/discussions/12&lt;/a&gt; and &lt;a href=&#34;https://github.com/Mikubill/sd-webui-controlnet/issues/73&#34;&gt;https://github.com/Mikubill/sd-webui-controlnet/issues/73&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Pre-extracted model: &lt;a href=&#34;https://huggingface.co/webui/ControlNet-modules-safetensors&#34;&gt;https://huggingface.co/webui/ControlNet-modules-safetensors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pre-extracted difference model: &lt;a href=&#34;https://huggingface.co/kohya-ss/ControlNet-diff-modules&#34;&gt;https://huggingface.co/kohya-ss/ControlNet-diff-modules&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;T2I-Adapter Support (Experimental)&lt;/h3&gt; &#xA;&lt;p&gt;Currently support both sketch Adapter and image Adapter. Note that the impl is experimental, result may differ from original repo. See &lt;code&gt;Adapter Examples&lt;/code&gt; for reference.&lt;/p&gt; &#xA;&lt;p&gt;To use these models:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download files from &lt;a href=&#34;https://huggingface.co/TencentARC/T2I-Adapter&#34;&gt;https://huggingface.co/TencentARC/T2I-Adapter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Setup correct config in settings panel - &lt;code&gt;sketch_adapter_v14.yaml&lt;/code&gt; for sketch model and &lt;code&gt;image_adapter_v14.yaml&lt;/code&gt; for keypose and segmentation model.&lt;/li&gt; &#xA; &lt;li&gt;It&#39;s better to use a slightly lower strength (t) when generating images with sketch model, such as 0.6-0.8. (ref: &lt;a href=&#34;https://github.com/TencentARC/T2I-Adapter/raw/5f41a0e38fc6eac90d04bc4cede85a2bc4570653/ldm/models/diffusion/plms.py#L158&#34;&gt;ldm/models/diffusion/plms.py&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Tips&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Don&#39;t forget to add some negative prompt, default negative prompt in ControlNet repo is &#34;longbody, lowres, bad anatomy, bad hands, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Regarding canvas height/width: they are designed for canvas generation. If you want to upload images directly, you can safely ignore them.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Source&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Input&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Output&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;(no preprocessor)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/bal-source.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/bal-gen.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;(no preprocessor)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/dog_rel.jpg?raw=true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/dog_rel.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/mahiro_input.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/mahiro_canny.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/mahiro-out.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/evt_source.jpg?raw=true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/evt_hed.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/evt_gen.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/an-source.jpg?raw=true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/an-pose.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/an-gen.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/sk-b-src.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/sk-b-dep.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/sk-b-out.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/nm-src.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/nm-gen.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/nm-out.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Adapter Examples&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Input&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Output&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/dog_sk-2.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/dog_out-2.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/cat_sk-2.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/cat_out-2.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/kp_a-2.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/kp_o-2.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/kp_o2-2.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://github.com/Mikubill/sd-webui-controlnet/raw/main/samples/kp_a2-2.png?raw=true&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Minimum Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(Windows) (NVIDIA: Ampere) 4gb - with &lt;code&gt;--xformers&lt;/code&gt; enabled, and &lt;code&gt;Low VRAM&lt;/code&gt; mode ticked in the UI, goes up to 768x832&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;CFG Based ControlNet (Experimental)&lt;/h3&gt; &#xA;&lt;p&gt;The original ControlNet applies control to both conditional (cond) and unconditional (uncond) parts. Enabling this option will make the control only apply to the cond part. Some experiments indicate that this approach improves image quality.&lt;/p&gt; &#xA;&lt;p&gt;To enable this option, tick &lt;code&gt;Enable CFG-Based guidance for ControlNet&lt;/code&gt; in the settings.&lt;/p&gt; &#xA;&lt;p&gt;Note that you need to use a low cfg scale/guidance scale (such as 3-5) and proper weight tuning to get good result.&lt;/p&gt; &#xA;&lt;h3&gt;Guess Mode (Non-Prompt Mode, Experimental)&lt;/h3&gt; &#xA;&lt;p&gt;Guess Mode is CFG Based ControlNet + Exponential decay in weighting.&lt;/p&gt; &#xA;&lt;p&gt;See issue &lt;a href=&#34;https://github.com/Mikubill/sd-webui-controlnet/issues/236&#34;&gt;https://github.com/Mikubill/sd-webui-controlnet/issues/236&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;Original introduction from controlnet:&lt;/p&gt; &#xA;&lt;p&gt;The &#34;guess mode&#34; (or called non-prompt mode) will completely unleash all the power of the very powerful ControlNet encoder.&lt;/p&gt; &#xA;&lt;p&gt;In this mode, you can just remove all prompts, and then the ControlNet encoder will recognize the content of the input control map, like depth map, edge map, scribbles, etc.&lt;/p&gt; &#xA;&lt;p&gt;This mode is very suitable for comparing different methods to control stable diffusion because the non-prompted generating task is significantly more difficult than prompted task. In this mode, different methods&#39; performance will be very salient.&lt;/p&gt; &#xA;&lt;p&gt;For this mode, we recommend to &lt;strong&gt;use 50 steps and guidance scale between 3 and 5.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Multi-ControlNet / Joint Conditioning (Experimental)&lt;/h3&gt; &#xA;&lt;p&gt;This option allows multiple ControlNet inputs for a single generation. To enable this option, change &lt;code&gt;Multi ControlNet: Max models amount (requires restart)&lt;/code&gt; in the settings. Note that you will need to restart the WebUI for changes to take effect.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Guess Mode will apply to all ControlNet if any of them are enabled.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Source A&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Source B&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Output&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://user-images.githubusercontent.com/31246794/220448620-cd3ede92-8d3f-43d5-b771-32dd8417618f.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://user-images.githubusercontent.com/31246794/220448619-beed9bdb-f6bb-41c2-a7df-aa3ef1f653c5.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img width=&#34;256&#34; alt=&#34;&#34; src=&#34;https://user-images.githubusercontent.com/31246794/220448613-c99a9e04-0450-40fd-bc73-a9122cefaa2c.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- ### Advanced weight tuning --&gt;</summary>
  </entry>
  <entry>
    <title>comfyanonymous/ComfyUI</title>
    <updated>2023-02-26T02:01:52Z</updated>
    <id>tag:github.com,2023-02-26:/comfyanonymous/ComfyUI</id>
    <link href="https://github.com/comfyanonymous/ComfyUI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A powerful and modular stable diffusion GUI with a graph/nodes interface.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ComfyUI&lt;/h1&gt; &#xA;&lt;h2&gt;A powerful and modular stable diffusion GUI.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/comfyanonymous/ComfyUI/master/comfyui_screenshot.png&#34; alt=&#34;ComfyUI Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This ui will let you design and execute advanced stable diffusion pipelines using a graph/nodes/flowchart based interface. For some workflow examples and see what ComfyUI can do you can check out:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://comfyanonymous.github.io/ComfyUI_examples/&#34;&gt;ComfyUI Examples&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nodes/graph/flowchart interface to experiment and create complex Stable Diffusion workflows without needing to code anything.&lt;/li&gt; &#xA; &lt;li&gt;Fully supports SD1.x and SD2.x&lt;/li&gt; &#xA; &lt;li&gt;Asynchronous Queue system&lt;/li&gt; &#xA; &lt;li&gt;Many optimizations: Only re-executes the parts of the workflow that changes between executions.&lt;/li&gt; &#xA; &lt;li&gt;Command line option: &lt;code&gt;--lowvram&lt;/code&gt; to make it work on GPUs with less than 3GB vram.&lt;/li&gt; &#xA; &lt;li&gt;Can load both ckpt and safetensors models/checkpoints. Standalone VAEs and CLIP models.&lt;/li&gt; &#xA; &lt;li&gt;Embeddings/Textual inversion&lt;/li&gt; &#xA; &lt;li&gt;Loras&lt;/li&gt; &#xA; &lt;li&gt;Loading full workflows (with seeds) from generated PNG files.&lt;/li&gt; &#xA; &lt;li&gt;Saving/Loading workflows as Json files.&lt;/li&gt; &#xA; &lt;li&gt;Nodes interface can be used to create complex workflows like one for &lt;a href=&#34;https://comfyanonymous.github.io/ComfyUI_examples/2_pass_txt2img/&#34;&gt;Hires fix&lt;/a&gt; or much more advanced ones.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://comfyanonymous.github.io/ComfyUI_examples/area_composition/&#34;&gt;Area Composition&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://comfyanonymous.github.io/ComfyUI_examples/inpaint/&#34;&gt;Inpainting&lt;/a&gt; with both regular and inpainting models.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://comfyanonymous.github.io/ComfyUI_examples/controlnet/&#34;&gt;ControlNet&lt;/a&gt; and T2I-Adapter&lt;/li&gt; &#xA; &lt;li&gt;Starts up very fast.&lt;/li&gt; &#xA; &lt;li&gt;Works fully offline: will never download anything.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Workflow examples can be found on the &lt;a href=&#34;https://comfyanonymous.github.io/ComfyUI_examples/&#34;&gt;Examples page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installing&lt;/h1&gt; &#xA;&lt;p&gt;Git clone this repo.&lt;/p&gt; &#xA;&lt;p&gt;Put your SD checkpoints (the huge ckpt/safetensors files) in: models/checkpoints&lt;/p&gt; &#xA;&lt;p&gt;Put your VAE in: models/vae&lt;/p&gt; &#xA;&lt;p&gt;At the time of writing this pytorch has issues with python versions higher than 3.10 so make sure your python/pip versions are 3.10.&lt;/p&gt; &#xA;&lt;h3&gt;AMD&lt;/h3&gt; &#xA;&lt;p&gt;AMD users can install rocm and pytorch with pip if you don&#39;t have it already installed:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;pip install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/rocm5.2&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;NVIDIA&lt;/h3&gt; &#xA;&lt;p&gt;Nvidia users should install torch using this command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;pip install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu117&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Nvidia users should also install Xformers for a speed boost but can still run the software without it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;pip install xformers&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Troubleshooting&lt;/h4&gt; &#xA;&lt;p&gt;If you get the &#34;Torch not compiled with CUDA enabled&#34; error, uninstall torch with:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;pip uninstall torch&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;And install it again with the command above.&lt;/p&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Install the dependencies by opening your terminal inside the ComfyUI folder and:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;After this you should have everything installed and can proceed to running ComfyUI.&lt;/p&gt; &#xA;&lt;h3&gt;I already have another UI for Stable Diffusion installed do I really have to install all of these dependencies?&lt;/h3&gt; &#xA;&lt;p&gt;You don&#39;t. If you have another UI installed and working with it&#39;s own python venv you can use that venv to run ComfyUI. You can open up your favorite terminal and activate it:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;source path_to_other_sd_gui/venv/bin/activate&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;or on Windows:&lt;/p&gt; &#xA;&lt;p&gt;With Powershell: &lt;code&gt;&#34;path_to_other_sd_gui\venv\Scripts\Activate.ps1&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;With cmd.exe: &lt;code&gt;&#34;path_to_other_sd_gui\venv\Scripts\activate.bat&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;And then you can use that terminal to run Comfyui without installing any dependencies. Note that the venv folder might be called something else depending on the SD UI.&lt;/p&gt; &#xA;&lt;h1&gt;Running&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;python main.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;For AMD 6700, 6600 and maybe others&lt;/h3&gt; &#xA;&lt;p&gt;Try running it with this command if you have issues:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;HSA_OVERRIDE_GFX_VERSION=10.3.0 python main.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Notes&lt;/h1&gt; &#xA;&lt;p&gt;Only parts of the graph that have an output with all the correct inputs will be executed.&lt;/p&gt; &#xA;&lt;p&gt;Only parts of the graph that change from each execution to the next will be executed, if you submit the same graph twice only the first will be executed. If you change the last part of the graph only the part you changed and the part that depends on it will be executed.&lt;/p&gt; &#xA;&lt;p&gt;Dragging a generated png on the webpage or loading one will give you the full workflow including seeds that were used to create it.&lt;/p&gt; &#xA;&lt;p&gt;You can use () to change emphasis of a word or phrase like: (good code:1.2) or (bad code:0.8). The default emphasis for () is 1.1. To use () characters in your actual prompt escape them like \( or \).&lt;/p&gt; &#xA;&lt;p&gt;You can use {day|night}, for wildcard/dynamic prompts. With this syntax &#34;{wild|card|test}&#34; will be randomly replaced by either &#34;wild&#34;, &#34;card&#34; or &#34;test&#34; by the frontend every time you queue the prompt. To use {} characters in your actual prompt escape them like: \{ or \}.&lt;/p&gt; &#xA;&lt;p&gt;To use a textual inversion concepts/embeddings in a text prompt put them in the models/embeddings directory and use them in the CLIPTextEncode node like this (you can omit the .pt extension):&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;embedding:embedding_filename.pt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Colab Notebook&lt;/h3&gt; &#xA;&lt;p&gt;To run it on colab you can use my &lt;a href=&#34;https://raw.githubusercontent.com/comfyanonymous/ComfyUI/master/notebooks/comfyui_colab.ipynb&#34;&gt;Colab Notebook&lt;/a&gt; here: &lt;a href=&#34;https://colab.research.google.com/github/comfyanonymous/ComfyUI/blob/master/notebooks/comfyui_colab.ipynb&#34;&gt;Link to open with google colab&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fedora&lt;/h3&gt; &#xA;&lt;p&gt;To get python 3.10 on fedora: &lt;code&gt;dnf install python3.10&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then you can:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;python3.10 -m ensurepip&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This will let you use: pip3.10 to install all the dependencies.&lt;/p&gt; &#xA;&lt;h2&gt;How to increase generation speed?&lt;/h2&gt; &#xA;&lt;p&gt;The fp16 model configs in the CheckpointLoader can be used to load them in fp16 mode, depending on your GPU this will increase your gen speed by a significant amount.&lt;/p&gt; &#xA;&lt;p&gt;You can also set this command line setting to disable the upcasting to fp32 in some cross attention operations which will increase your speed. Note that this will very likely give you black images on SD2.x models.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;--dont-upcast-attention&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support and dev channel&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.element.io/#/room/%23comfyui%3Amatrix.org&#34;&gt;Matrix room: #comfyui:matrix.org&lt;/a&gt; (it&#39;s like discord but open source).&lt;/p&gt; &#xA;&lt;h1&gt;QA&lt;/h1&gt; &#xA;&lt;h3&gt;Why did you make this?&lt;/h3&gt; &#xA;&lt;p&gt;I wanted to learn how Stable Diffusion worked in detail. I also wanted something clean and powerful that would let me experiment with SD without restrictions.&lt;/p&gt; &#xA;&lt;h3&gt;Who is this for?&lt;/h3&gt; &#xA;&lt;p&gt;This is for anyone that wants to make complex workflows with SD or that wants to learn more how SD works. The interface follows closely how SD works and the code should be much more simple to understand than other SD UIs.&lt;/p&gt;</summary>
  </entry>
</feed>