<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-17T02:00:49Z</updated>
  <subtitle>Weekly Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tiangolo/sqlmodel</title>
    <updated>2023-12-17T02:00:49Z</updated>
    <id>tag:github.com,2023-12-17:/tiangolo/sqlmodel</id>
    <link href="https://github.com/tiangolo/sqlmodel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SQL databases in Python, designed for simplicity, compatibility, and robustness.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://sqlmodel.tiangolo.com&#34;&gt;&lt;img src=&#34;https://sqlmodel.tiangolo.com/img/logo-margin/logo-margin-vector.svg?sanitize=true&#34; alt=&#34;SQLModel&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;em&gt;SQLModel, SQL databases in Python, designed for simplicity, compatibility, and robustness.&lt;/em&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/tiangolo/sqlmodel/actions?query=workflow%3ATest&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/tiangolo/sqlmodel/workflows/Test/badge.svg?sanitize=true&#34; alt=&#34;Test&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/tiangolo/sqlmodel/actions?query=workflow%3APublish&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/tiangolo/sqlmodel/workflows/Publish/badge.svg?sanitize=true&#34; alt=&#34;Publish&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://coverage-badge.samuelcolvin.workers.dev/redirect/tiangolo/sqlmodel&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://coverage-badge.samuelcolvin.workers.dev/tiangolo/sqlmodel.svg?sanitize=true&#34; alt=&#34;Coverage&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://pypi.org/project/sqlmodel&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/sqlmodel?color=%2334D058&amp;amp;label=pypi%20package&#34; alt=&#34;Package version&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: &lt;a href=&#34;https://sqlmodel.tiangolo.com&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://sqlmodel.tiangolo.com&#34;&gt;https://sqlmodel.tiangolo.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Source Code&lt;/strong&gt;: &lt;a href=&#34;https://github.com/tiangolo/sqlmodel&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/tiangolo/sqlmodel&#34;&gt;https://github.com/tiangolo/sqlmodel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;SQLModel is a library for interacting with &lt;abbr title=&#34;Also called &amp;quot;Relational databases&amp;quot;&#34;&gt;SQL databases&lt;/abbr&gt; from Python code, with Python objects. It is designed to be intuitive, easy to use, highly compatible, and robust.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;SQLModel&lt;/strong&gt; is based on Python type annotations, and powered by &lt;a href=&#34;https://pydantic-docs.helpmanual.io/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;Pydantic&lt;/a&gt; and &lt;a href=&#34;https://sqlalchemy.org/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;SQLAlchemy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The key features are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Intuitive to write&lt;/strong&gt;: Great editor support. &lt;abbr title=&#34;also known as auto-complete, autocompletion, IntelliSense&#34;&gt;Completion&lt;/abbr&gt; everywhere. Less time debugging. Designed to be easy to use and learn. Less time reading docs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy to use&lt;/strong&gt;: It has sensible defaults and does a lot of work underneath to simplify the code you write.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Compatible&lt;/strong&gt;: It is designed to be compatible with &lt;strong&gt;FastAPI&lt;/strong&gt;, Pydantic, and SQLAlchemy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt;: You have all the power of SQLAlchemy and Pydantic underneath.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Short&lt;/strong&gt;: Minimize code duplication. A single type annotation does a lot of work. No need to duplicate models in SQLAlchemy and Pydantic.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;!-- sponsors --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.govcert.lu&#34; target=&#34;_blank&#34; title=&#34;This project is being supported by GOVCERT.LU&#34;&gt;&lt;img src=&#34;https://sqlmodel.tiangolo.com/img/sponsors/govcert.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- /sponsors --&gt; &#xA;&lt;h2&gt;SQL Databases in FastAPI&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://fastapi.tiangolo.com&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png&#34; style=&#34;width: 20%;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;SQLModel&lt;/strong&gt; is designed to simplify interacting with SQL databases in &lt;a href=&#34;https://fastapi.tiangolo.com&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;FastAPI&lt;/a&gt; applications, it was created by the same &lt;a href=&#34;https://tiangolo.com/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;author&lt;/a&gt;. üòÅ&lt;/p&gt; &#xA;&lt;p&gt;It combines SQLAlchemy and Pydantic and tries to simplify the code you write as much as possible, allowing you to reduce the &lt;strong&gt;code duplication to a minimum&lt;/strong&gt;, but while getting the &lt;strong&gt;best developer experience&lt;/strong&gt; possible.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;SQLModel&lt;/strong&gt; is, in fact, a thin layer on top of &lt;strong&gt;Pydantic&lt;/strong&gt; and &lt;strong&gt;SQLAlchemy&lt;/strong&gt;, carefully designed to be compatible with both.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;A recent and currently supported &lt;a href=&#34;https://www.python.org/downloads/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34;&gt;version of Python&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As &lt;strong&gt;SQLModel&lt;/strong&gt; is based on &lt;strong&gt;Pydantic&lt;/strong&gt; and &lt;strong&gt;SQLAlchemy&lt;/strong&gt;, it requires them. They will be automatically installed when you install SQLModel.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;div class=&#34;termy&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ pip install sqlmodel&#xA;---&amp;gt; 100%&#xA;Successfully installed sqlmodel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;For an introduction to databases, SQL, and everything else, see the &lt;a href=&#34;https://sqlmodel.tiangolo.com/databases/&#34; target=&#34;_blank&#34;&gt;SQLModel documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s a quick example. ‚ú®&lt;/p&gt; &#xA;&lt;h3&gt;A SQL Table&lt;/h3&gt; &#xA;&lt;p&gt;Imagine you have a SQL table called &lt;code&gt;hero&lt;/code&gt; with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;id&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;name&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;secret_name&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;age&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And you want it to have this data:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;id&lt;/th&gt; &#xA;   &lt;th&gt;name&lt;/th&gt; &#xA;   &lt;th&gt;secret_name&lt;/th&gt; &#xA;   &lt;th&gt;age&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Deadpond&lt;/td&gt; &#xA;   &lt;td&gt;Dive Wilson&lt;/td&gt; &#xA;   &lt;td&gt;null&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;Spider-Boy&lt;/td&gt; &#xA;   &lt;td&gt;Pedro Parqueador&lt;/td&gt; &#xA;   &lt;td&gt;null&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;Rusty-Man&lt;/td&gt; &#xA;   &lt;td&gt;Tommy Sharp&lt;/td&gt; &#xA;   &lt;td&gt;48&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Create a SQLModel Model&lt;/h3&gt; &#xA;&lt;p&gt;Then you could create a &lt;strong&gt;SQLModel&lt;/strong&gt; model like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;from typing import Optional&#xA;&#xA;from sqlmodel import Field, SQLModel&#xA;&#xA;&#xA;class Hero(SQLModel, table=True):&#xA;    id: Optional[int] = Field(default=None, primary_key=True)&#xA;    name: str&#xA;    secret_name: str&#xA;    age: Optional[int] = None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That class &lt;code&gt;Hero&lt;/code&gt; is a &lt;strong&gt;SQLModel&lt;/strong&gt; model, the equivalent of a SQL table in Python code.&lt;/p&gt; &#xA;&lt;p&gt;And each of those class attributes is equivalent to each &lt;strong&gt;table column&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Create Rows&lt;/h3&gt; &#xA;&lt;p&gt;Then you could &lt;strong&gt;create each row&lt;/strong&gt; of the table as an &lt;strong&gt;instance&lt;/strong&gt; of the model:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;hero_1 = Hero(name=&#34;Deadpond&#34;, secret_name=&#34;Dive Wilson&#34;)&#xA;hero_2 = Hero(name=&#34;Spider-Boy&#34;, secret_name=&#34;Pedro Parqueador&#34;)&#xA;hero_3 = Hero(name=&#34;Rusty-Man&#34;, secret_name=&#34;Tommy Sharp&#34;, age=48)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This way, you can use conventional Python code with &lt;strong&gt;classes&lt;/strong&gt; and &lt;strong&gt;instances&lt;/strong&gt; that represent &lt;strong&gt;tables&lt;/strong&gt; and &lt;strong&gt;rows&lt;/strong&gt;, and that way communicate with the &lt;strong&gt;SQL database&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Editor Support&lt;/h3&gt; &#xA;&lt;p&gt;Everything is designed for you to get the best developer experience possible, with the best editor support.&lt;/p&gt; &#xA;&lt;p&gt;Including &lt;strong&gt;autocompletion&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;img class=&#34;shadow&#34; src=&#34;https://sqlmodel.tiangolo.com/img/index/autocompletion01.png&#34;&gt; &#xA;&lt;p&gt;And &lt;strong&gt;inline errors&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;img class=&#34;shadow&#34; src=&#34;https://sqlmodel.tiangolo.com/img/index/inline-errors01.png&#34;&gt; &#xA;&lt;h3&gt;Write to the Database&lt;/h3&gt; &#xA;&lt;p&gt;You can learn a lot more about &lt;strong&gt;SQLModel&lt;/strong&gt; by quickly following the &lt;strong&gt;tutorial&lt;/strong&gt;, but if you need a taste right now of how to put all that together and save to the database, you can do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;from typing import Optional&#xA;&#xA;from sqlmodel import Field, Session, SQLModel, create_engine&#xA;&#xA;&#xA;class Hero(SQLModel, table=True):&#xA;    id: Optional[int] = Field(default=None, primary_key=True)&#xA;    name: str&#xA;    secret_name: str&#xA;    age: Optional[int] = None&#xA;&#xA;&#xA;hero_1 = Hero(name=&#34;Deadpond&#34;, secret_name=&#34;Dive Wilson&#34;)&#xA;hero_2 = Hero(name=&#34;Spider-Boy&#34;, secret_name=&#34;Pedro Parqueador&#34;)&#xA;hero_3 = Hero(name=&#34;Rusty-Man&#34;, secret_name=&#34;Tommy Sharp&#34;, age=48)&#xA;&#xA;&#xA;engine = create_engine(&#34;sqlite:///database.db&#34;)&#xA;&#xA;&#xA;SQLModel.metadata.create_all(engine)&#xA;&#xA;with Session(engine) as session:&#xA;    session.add(hero_1)&#xA;    session.add(hero_2)&#xA;    session.add(hero_3)&#xA;    session.commit()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That will save a &lt;strong&gt;SQLite&lt;/strong&gt; database with the 3 heroes.&lt;/p&gt; &#xA;&lt;h3&gt;Select from the Database&lt;/h3&gt; &#xA;&lt;p&gt;Then you could write queries to select from that same database, for example with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;from typing import Optional&#xA;&#xA;from sqlmodel import Field, Session, SQLModel, create_engine, select&#xA;&#xA;&#xA;class Hero(SQLModel, table=True):&#xA;    id: Optional[int] = Field(default=None, primary_key=True)&#xA;    name: str&#xA;    secret_name: str&#xA;    age: Optional[int] = None&#xA;&#xA;&#xA;engine = create_engine(&#34;sqlite:///database.db&#34;)&#xA;&#xA;with Session(engine) as session:&#xA;    statement = select(Hero).where(Hero.name == &#34;Spider-Boy&#34;)&#xA;    hero = session.exec(statement).first()&#xA;    print(hero)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Editor Support Everywhere&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;SQLModel&lt;/strong&gt; was carefully designed to give you the best developer experience and editor support, &lt;strong&gt;even after selecting data&lt;/strong&gt; from the database:&lt;/p&gt; &#xA;&lt;img class=&#34;shadow&#34; src=&#34;https://sqlmodel.tiangolo.com/img/index/autocompletion02.png&#34;&gt; &#xA;&lt;h2&gt;SQLAlchemy and Pydantic&lt;/h2&gt; &#xA;&lt;p&gt;That class &lt;code&gt;Hero&lt;/code&gt; is a &lt;strong&gt;SQLModel&lt;/strong&gt; model.&lt;/p&gt; &#xA;&lt;p&gt;But at the same time, ‚ú® it is a &lt;strong&gt;SQLAlchemy&lt;/strong&gt; model ‚ú®. So, you can combine it and use it with other SQLAlchemy models, or you could easily migrate applications with SQLAlchemy to &lt;strong&gt;SQLModel&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;And at the same time, ‚ú® it is also a &lt;strong&gt;Pydantic&lt;/strong&gt; model ‚ú®. You can use inheritance with it to define all your &lt;strong&gt;data models&lt;/strong&gt; while avoiding code duplication. That makes it very easy to use with &lt;strong&gt;FastAPI&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the terms of the &lt;a href=&#34;https://github.com/tiangolo/sqlmodel/raw/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>xaoyaoo/PyWxDump</title>
    <updated>2023-12-17T02:00:49Z</updated>
    <id>tag:github.com,2023-12-17:/xaoyaoo/PyWxDump</id>
    <link href="https://github.com/xaoyaoo/PyWxDump" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ëé∑ÂèñÂæÆ‰ø°Ë¥¶Âè∑‰ø°ÊÅØ(ÊòµÁß∞/Ë¥¶Âè∑/ÊâãÊú∫/ÈÇÆÁÆ±/Êï∞ÊçÆÂ∫ìÂØÜÈí•/wxid)ÔºõPCÂæÆ‰ø°Êï∞ÊçÆÂ∫ìËØªÂèñ„ÄÅËß£ÂØÜËÑöÊú¨ÔºõËÅäÂ§©ËÆ∞ÂΩïÊü•ÁúãÂ∑•ÂÖ∑ÔºõËÅäÂ§©ËÆ∞ÂΩïÂØºÂá∫‰∏∫html(ÂåÖÂê´ËØ≠Èü≥ÂõæÁâá)„ÄÇÊîØÊåÅÂ§öË¥¶Êà∑‰ø°ÊÅØËé∑ÂèñÔºåÊîØÊåÅÊâÄÊúâÂæÆ‰ø°ÁâàÊú¨„ÄÇ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&#xA; &lt;center&gt;&#xA;  PyWxDump&#xA; &lt;/center&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.python.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-3-blue.svg?sanitize=true&#34; alt=&#34;Python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/languages/code-size/xaoyaoo/pywxdump&#34; alt=&#34;GitHub code size in bytes&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/xaoyaoo/pywxdump/total&#34; alt=&#34;GitHub all releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/xaoyaoo/PyWxDump.svg?sanitize=true&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump/fork&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/xaoyaoo/PyWxDump.svg?sanitize=true&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/xaoyaoo/PyWxDump&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pywxdump/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/pywxdump&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/pywxdump/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/wheel/pywxdump&#34; alt=&#34;Wheel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypistats.org/packages/pywxdump&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/pywxdump&#34; alt=&#34;PyPI-Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/l/pywxdump&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump/actions/workflows/publish.yml&#34;&gt;&lt;img src=&#34;https://github.com/xaoyaoo/PyWxDump/actions/workflows/publish.yml/badge.svg?sanitize=true&#34; alt=&#34;Publish&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ê¨¢ËøéÂ§ßÂÆ∂Êèê‰æõÊõ¥Â§öÁöÑÊÉ≥Ê≥ïÔºåÊàñËÄÖÊèê‰æõ‰ª£Á†ÅÔºå‰∏ÄËµ∑ÂÆåÂñÑËøô‰∏™È°πÁõÆ„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Â¶ÇÊúâÈóÆÈ¢òÔºåËØ∑ÂÖàÊü•ÁúãÔºö&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump/tree/master/doc/FAQ.md&#34;&gt;FAQ&lt;/a&gt; ÊòØÂê¶ÊúâÁ≠îÊ°àÔºåÊàñËÄÖÂÖ≥Ê≥®ÂÖ¨‰ºóÂè∑ÂõûÂ§ç: &lt;code&gt;FAQ&lt;/code&gt;„ÄÇ&lt;/h3&gt; &#xA;&lt;h3&gt;Â¶ÇÊûúÊòØÂ∞èÁôΩÔºåËØ∑ÂÖ≥Ê≥®ÂÖ¨‰ºóÂè∑Ôºö&lt;code&gt;ÈÄçÈÅ•‰πãËäØ&lt;/code&gt; (Âè≥Ëæπ‰∫åÁª¥Á†Å) ÔºåÂõûÂ§çÔºö&lt;code&gt;PyWxDump&lt;/code&gt; Ëé∑ÂèñÂõæÊñáÊïôÁ®ã„ÄÇ&lt;/h3&gt; &#xA;&lt;p&gt;qq‰∫§ÊµÅÁæ§Ôºö577704006ÔºàÂ∑¶Ëæπ‰∫åÁª¥Á†ÅÔºâ or ÁÇπÂáªÈìæÊé•Âä†ÂÖ•Áæ§ËÅä&lt;a href=&#34;https://s.xaoyo.top/gOLUDl&#34;&gt;pywxdumpÂäüËÉΩ‰∫§ÊµÅ&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ÔºàÂõ†‰∏∫qqÁæ§Â∞ÜÊª°ÔºåÊâÄ‰ª•ËøõÁæ§ÈúÄË¶ÅÂØÜÁ†ÅÔºåÂØÜÁ†ÅËØ∑Êü•Áúã&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump/tree/master/doc/UserGuide.md&#34;&gt;UserGuide.md&lt;/a&gt;Ôºâ&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;a href=&#34;https://s.xaoyo.top/gOLUDl&#34;&gt; &lt;img width=&#34;40%&#34; src=&#34;https://github.com/xaoyaoo/PyWxDump/raw/master/doc/qq.png&#34; alt=&#34;QQÁæ§&#34; title=&#34;Âä†ÂÖ•QQÁæ§&#34; height=&#34;300&#34;&gt;&lt;/a&gt; &#xA; &lt;img align=&#34;right&#34; width=&#34;40%&#34; src=&#34;https://github.com/xaoyaoo/PyWxDump/raw/master/doc/qrcode_gh.jpg&#34; alt=&#34;ÂÖ¨‰ºóÂè∑&#34; title=&#34;ÂÖ≥Ê≥®ÂÖ¨‰ºóÂè∑&#34; height=&#34;300&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;‰∏Ä„ÄÅÈ°πÁõÆ‰ªãÁªç&lt;/h1&gt; &#xA;&lt;h2&gt;1. È°πÁõÆÁÆÄ‰ªã&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump&#34;&gt;PyWxDump&lt;/a&gt;ÊòØ‰∏ÄÊ¨æÁî®‰∫éËé∑ÂèñË¥¶Âè∑‰ø°ÊÅØ(ÊòµÁß∞/Ë¥¶Âè∑/ÊâãÊú∫/ÈÇÆÁÆ±/Êï∞ÊçÆÂ∫ìÂØÜÈí•) „ÄÅËß£ÂØÜÊï∞ÊçÆÂ∫ì„ÄÅÊü•ÁúãËÅäÂ§©ËÆ∞ÂΩï„ÄÅÂ§á‰ªΩÂØºÂá∫ËÅäÂ§©ËÆ∞ÂΩï‰∏∫htmlÁöÑÂ∑•ÂÖ∑„ÄÇ&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;big&gt; Ë∂ÖÁ∫ßÊÉ≥Ë¶ÅstarÔºåËµ∞ËøáË∑ØËøáÔºåÂ∏ÆÂøôÁÇπ‰∏™&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/xaoyaoo/PyWxDump.svg?style=social&amp;amp;label=Star&#34; alt=&#34;Star&#34;&gt;&lt;/a&gt; ÂëóÔºåË∞¢Ë∞¢Âï¶~&lt;/big&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2. ÂäüËÉΩ‰ªãÁªç&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ôºà1ÔºâËé∑ÂèñÂæÆ‰ø°ÊòµÁß∞„ÄÅÂæÆ‰ø°Ë¥¶Âè∑„ÄÅÂæÆ‰ø°ÊâãÊú∫Âè∑„ÄÅÂæÆ‰ø°ÈÇÆÁÆ±„ÄÅÂæÆ‰ø°KEYÁöÑÂü∫ÂùÄÂÅèÁßª&lt;/li&gt; &#xA; &lt;li&gt;Ôºà2ÔºâËé∑ÂèñÂæÆ‰ø°ÁöÑÂæÆ‰ø°ÊòµÁß∞„ÄÅÂæÆ‰ø°Ë¥¶Âè∑„ÄÅÂæÆ‰ø°ÊâãÊú∫Âè∑„ÄÅÂæÆ‰ø°ÈÇÆÁÆ±„ÄÅÂæÆ‰ø°KEY„ÄÅÂæÆ‰ø°ÂéüÂßãIDÔºàwxid_******Ôºâ&lt;/li&gt; &#xA; &lt;li&gt;Ôºà3ÔºâËé∑ÂèñÂæÆ‰ø°Êñá‰ª∂Â§πË∑ØÂæÑ&lt;/li&gt; &#xA; &lt;li&gt;Ôºà4ÔºâÊîØÊåÅÊü•ÁúãËÅäÂ§©ËÆ∞ÂΩïÊü•Áúã&lt;/li&gt; &#xA; &lt;li&gt;Ôºà5ÔºâÊ†πÊçÆkeyËß£ÂØÜÂæÆ‰ø°Êï∞ÊçÆÂ∫ì&lt;/li&gt; &#xA; &lt;li&gt;Ôºà6ÔºâÊèê‰æõÊï∞ÊçÆÂ∫ìÈÉ®ÂàÜÂ≠óÊÆµËØ¥Êòé&lt;/li&gt; &#xA; &lt;li&gt;Ôºà7ÔºâÊîØÊåÅÂæÆ‰ø°Â§öÂºÄÂú∫ÊôØÔºåËé∑ÂèñÂ§öÁî®Êà∑‰ø°ÊÅØÁ≠â&lt;/li&gt; &#xA; &lt;li&gt;Ôºà8ÔºâÂæÆ‰ø°ÈúÄË¶ÅÁôªÂΩïÁä∂ÊÄÅÊâçËÉΩËé∑ÂèñÊï∞ÊçÆÂ∫ìÂØÜÈí•&lt;/li&gt; &#xA; &lt;li&gt;Ôºà9ÔºâÊîØÊåÅÂØºÂá∫ËÅäÂ§©ËÆ∞ÂΩï‰∏∫html,Â§á‰ªΩÂæÆ‰ø°ËÅäÂ§©ËÆ∞ÂΩï,Êñπ‰æøÊü•Áúã&lt;/li&gt; &#xA; &lt;li&gt;Ôºà10ÔºâÂêàÂπ∂Â§ö‰∏™Êï∞ÊçÆÂ∫ìÔºåÊñπ‰æøÊü•Áúã&lt;/li&gt; &#xA; &lt;li&gt;Ôºà11ÔºâÂ¢ûÂä†ÊûÅÁÆÄÁâàpywxdump&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Âà©Áî®Âú∫ÊôØ&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;ÈíìÈ±ºÊîªÂáª(ÈÄöËøáÈíìÈ±ºÊéßÂà∞ÁöÑÊú∫Âô®ÈÄöÂ∏∏ÈÉΩÊòØÁôªÂΩïÁä∂ÊÄÅ)&lt;/li&gt; &#xA; &lt;li&gt;Ê∏óÈÄèÂà∞ËøêÁª¥Êú∫Âô®(Êúâ‰∫õËøêÁª¥Êú∫Âô®‰ºöÊó•Â∏∏ÁôªÂΩïËá™Â∑±ÁöÑÂæÆ‰ø°)&lt;/li&gt; &#xA; &lt;li&gt;Êüê‰∫õÂ∑•‰ΩúÈúÄË¶ÅÂèñËØÅ(Êï∞ÊçÆÂ∫ìÈúÄË¶ÅÊã∑Ë¥ùÂà∞Êú¨Âú∞)&lt;/li&gt; &#xA; &lt;li&gt;Ëá™Ë°åÂ§á‰ªΩ(Êó•Â∏∏Â§á‰ªΩËá™Â∑±ÁïôÂ≠ò)&lt;/li&gt; &#xA; &lt;li&gt;Á≠âÁ≠â...............&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;3. Êõ¥Êñ∞ËÆ°Âàí„ÄêÁî±‰∫éÂÆ∂ÈáåÊúâ‰∫ãÔºåËøô‰∫õËÆ°Âàí(Èô§8„ÄÅ9„ÄÅ10)Â∞Ü‰ºöÂú®12.30Âè∑ÂâçÁªü‰∏ÄÊõ¥Êñ∞„Äë&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1.ÊØè‰∏™‰∫∫ËÅäÂ§©ËÆ∞ÂΩïÂàÜÊûêÔºåÁîüÊàêËØç‰∫ë„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;2.ÂàÜÊûêÊØè‰∏™‰∫∫ÊØèÂ§©ÁöÑËÅäÂ§©Êï∞ÈáèÔºåÁîüÊàêÊäòÁ∫øÂõæÔºàÂ§©-ËÅäÂ§©Êï∞ÈáèÔºâ&lt;/li&gt; &#xA; &lt;li&gt;3.ÂàÜÊûê‰∏çÂêåÁöÑ‰∫∫ÁöÑÊúàËÅäÂ§©Êï∞ÈáèÔºåÂπ¥ËÅäÂ§©Êï∞ÈáèÔºåÁîüÊàêÊäòÁ∫øÂõæ&lt;/li&gt; &#xA; &lt;li&gt;4.ÁîüÊàêÂπ¥Â∫¶ÂèØËßÜÂåñÊä•Âëä&lt;/li&gt; &#xA; &lt;li&gt;5.ÂàõÂª∫GUIÂõæÂΩ¢ÁïåÈù¢ÔºåÊñπ‰æø‰ΩøÁî®&lt;/li&gt; &#xA; &lt;li&gt;8.Â¢ûÂä†‰ºÅ‰∏öÂæÆ‰ø°ÁöÑÊîØÊåÅ&lt;/li&gt; &#xA; &lt;li&gt;9.Â¢ûÂä†Ëé∑ÂèñÂÆûÊó∂ËÅäÂ§©ËÆ∞ÂΩïÁöÑÂäüËÉΩ&lt;/li&gt; &#xA; &lt;li&gt;10.ËÅäÂ§©ËÆ∞ÂΩïÂÖ≥ÈîÆÂ≠óÊêúÁ¥¢ ÊàñËÄÖÊåâÊó∂Èó¥ÁÇπÊêúÁ¥¢ÂàóÂá∫ÊâÄÊúâÁöÑËÅîÁ≥ª‰∫∫ËÆ∞ÂΩïÂ∞±nice‰∫Ü&lt;/li&gt; &#xA; &lt;li&gt;11.Â¢ûÂä†Â•ΩÂèãÁöÑ‰ø°ÊÅØËé∑Âèñ&lt;/li&gt; &#xA; &lt;li&gt;12.Â§á‰ªΩÂêéÁöÑËÅäÂ§©ËÆ∞ÂΩïÔºåÊÅ¢Â§çÂà∞ÂæÆ‰ø°‰∏≠&lt;/li&gt; &#xA; &lt;li&gt;13.ÊúãÂèãÂúàÁöÑÊü•Áúã‰∏éÂ§á‰ªΩ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;4. ÂÖ∂‰ªñ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump&#34;&gt;PyWxDump&lt;/a&gt;ÊòØ&lt;a href=&#34;https://github.com/AdminTest0/SharpWxDump&#34;&gt;SharpWxDump&lt;/a&gt; ÁöÑÁªèËøáÈáçÊûÑpythonËØ≠Ë®ÄÁâàÊú¨ÔºåÂêåÊó∂Ê∑ªÂä†‰∫Ü‰∏Ä‰∫õÊñ∞ÁöÑÂäüËÉΩ„ÄÇ&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;È°πÁõÆÂú∞ÂùÄÔºö&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump&#34;&gt;https://github.com/xaoyaoo/PyWxDump&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ÁõÆÂâçÂè™Âú®windows‰∏ãÊµãËØïËøáÔºåmac„ÄÅlinux‰∏ãÂèØËÉΩ‰ºöÂ≠òÂú®ÈóÆÈ¢ò„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;Â¶ÇÂèëÁé∞&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump/tree/master/pywxdump/version_list.json&#34;&gt;version_list.json&lt;/a&gt;Áº∫Â§±ÊàñÈîôËØØ, ËØ∑Êèê‰∫§&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump/issues&#34;&gt;issues&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Â¶ÇÂèëÁé∞bugÊàñÊúâÊîπËøõÊÑèËßÅ, ËØ∑Êèê‰∫§&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump/issues&#34;&gt;issues&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Â¶ÇÊúâÂÖ∂‰ªñÊÉ≥Ë¶ÅÁöÑÂäüËÉΩ, ËØ∑Êèê‰∫§&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump/issues&#34;&gt;issues&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Â∏∏ËßÅÈóÆÈ¢òËØ∑ÂèÇËÄÉ&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump/tree/master/doc/FAQ.md&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Êõ¥Êñ∞Êó•ÂøóËØ∑ÂèÇËÄÉ&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump/tree/master/doc/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xaoyaoo/xaoyaoo/raw/main/donate.md&#34;&gt;&lt;span&gt;üíñ&lt;/span&gt; Support Me&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;5. Star History&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;click to expand&lt;/summary&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://star-history.com/#xaoyaoo/pywxdump&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=xaoyaoo/pywxdump&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;‰∫å„ÄÅ‰ΩøÁî®ËØ¥Êòé&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;ËØ¶ÁªÜ‰ΩøÁî®ËØ¥ÊòéËßÅ&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump/tree/master/doc/UserGuide.md&#34;&gt;UserGuide.md&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ÊûÅÁÆÄÁâà‰ΩøÁî®ËØ¥Êòé&lt;a href=&#34;https://github.com/xaoyaoo/pywxdumpmini&#34;&gt;pywxdumpmini&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;„ÄêÊ≥®„Äë:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÂÖ≥‰∫éÂü∫ÂùÄ‰ΩøÁî®cheat engineËé∑ÂèñÔºåÂèÇËÄÉ&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump/tree/master/doc/CE%E8%8E%B7%E5%8F%96%E5%9F%BA%E5%9D%80.md&#34;&gt;CEËé∑ÂèñÂü∫ÂùÄ.md&lt;/a&gt; ÔºàËØ•ÊñπÊ≥ïÂèØÁî®&lt;code&gt;wxdump bias&lt;/code&gt;ÂëΩ‰ª§‰ª£ÊõøÔºåÁé∞‰ªÖÁî®‰ΩúÂ≠¶‰π†ÂéüÁêÜÔºâ&lt;/li&gt; &#xA; &lt;li&gt;ÂÖ≥‰∫éÊï∞ÊçÆÂ∫ìËß£ÊûêÔºåÂèÇËÄÉ&lt;a href=&#34;https://github.com/xaoyaoo/PyWxDump/tree/master/doc/wx%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E8%BF%B0.md&#34;&gt;wxÊï∞ÊçÆÂ∫ìÁÆÄËø∞.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;‰∏â„ÄÅÂÖçË¥£Â£∞ÊòéÔºàÈùûÂ∏∏ÈáçË¶ÅÔºÅÔºÅÔºÅÔºÅÔºÅÔºÅÔºÅÔºâ&lt;/h1&gt; &#xA;&lt;p&gt;Êú¨È°πÁõÆ‰ªÖ‰æõÂ≠¶‰π†‰∫§ÊµÅ‰ΩøÁî®ÔºåËØ∑ÂãøÁî®‰∫éÈùûÊ≥ïÁî®ÈÄîÔºåÂê¶ÂàôÂêéÊûúËá™Ë¥ü„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ÊÇ®Â∫îËØ•Âú®‰∏ãËΩΩ‰øùÂ≠òÔºåÁºñËØë‰ΩøÁî®Êú¨È°πÁõÆÁöÑ24Â∞èÊó∂ÂÜÖÔºåÂà†Èô§Êú¨È°πÁõÆÁöÑÊ∫ê‰ª£Á†ÅÂíåÔºàÁºñËØëÂá∫ÁöÑÔºâÁ®ãÂ∫è„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Êú¨È°πÁõÆ‰ªÖÂÖÅËÆ∏Âú®ÊéàÊùÉÊÉÖÂÜµ‰∏ãÂØπÊï∞ÊçÆÂ∫ìËøõË°åÂ§á‰ªΩÔºå‰∏•Á¶ÅÁî®‰∫éÈùûÊ≥ïÁõÆÁöÑÔºåÂê¶ÂàôËá™Ë°åÊâøÊãÖÊâÄÊúâÁõ∏ÂÖ≥Ë¥£‰ªª„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;‰∏ãËΩΩ„ÄÅ‰øùÂ≠ò„ÄÅËøõ‰∏ÄÊ≠•ÊµèËßàÊ∫ê‰ª£Á†ÅÊàñËÄÖ‰∏ãËΩΩÂÆâË£Ö„ÄÅÁºñËØë‰ΩøÁî®Êú¨Á®ãÂ∫èÔºåË°®Á§∫‰Ω†ÂêåÊÑèÊú¨Ë≠¶ÂëäÔºåÂπ∂ÊâøËØ∫ÈÅµÂÆàÂÆÉ;&lt;/p&gt; &#xA;&lt;p&gt;ËØ∑ÂãøÂà©Áî®Êú¨È°πÁõÆÁöÑÁõ∏ÂÖ≥ÊäÄÊúØ‰ªé‰∫ãÈùûÊ≥ïÊµãËØïÔºåÂ¶ÇÂõ†Ê≠§‰∫ßÁîüÁöÑ‰∏ÄÂàá‰∏çËâØÂêéÊûú‰∏éÈ°πÁõÆ‰ΩúËÄÖÊó†ÂÖ≥„ÄÇ&lt;/p&gt; &#xA;&lt;h1&gt;Âõõ„ÄÅËÆ∏ÂèØËØÅ&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;MIT License&#xA;&#xA;Copyright (c) 2023 xaoyaoo&#xA;&#xA;Permission is hereby granted, free of charge, to any person obtaining a copy&#xA;of this software and associated documentation files (the &#34;Software&#34;), to deal&#xA;in the Software without restriction, including without limitation the rights&#xA;to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&#xA;copies of the Software, and to permit persons to whom the Software is&#xA;furnished to do so, subject to the following conditions:&#xA;&#xA;The above copyright notice and this permission notice shall be included in all&#xA;copies or substantial portions of the Software.&#xA;&#xA;PyWxDump is hosted at: https://github.com/xaoyaoo/PyWxDump&#xA;&#xA;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#xA;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#xA;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#xA;AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#xA;LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&#xA;OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE&#xA;SOFTWARE.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>spla-tam/SplaTAM</title>
    <updated>2023-12-17T02:00:49Z</updated>
    <id>tag:github.com,2023-12-17:/spla-tam/SplaTAM</id>
    <link href="https://github.com/spla-tam/SplaTAM" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SplaTAM: Splat, Track &amp; Map 3D Gaussians for Dense RGB-D SLAM&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;SplaTAM: Splat, Track &amp;amp; Map 3D Gaussians for Dense RGB-D SLAM&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://nik-v9.github.io/&#34;&gt;&lt;strong&gt;Nikhil Keetha&lt;/strong&gt;&lt;/a&gt; ¬∑ &lt;a href=&#34;https://jaykarhade.github.io/&#34;&gt;&lt;strong&gt;Jay Karhade&lt;/strong&gt;&lt;/a&gt; ¬∑ &lt;a href=&#34;https://krrish94.github.io/&#34;&gt;&lt;strong&gt;Krishna Murthy Jatavallabhula&lt;/strong&gt;&lt;/a&gt; ¬∑ &lt;a href=&#34;https://gengshan-y.github.io/&#34;&gt;&lt;strong&gt;Gengshan Yang&lt;/strong&gt;&lt;/a&gt; ¬∑ &lt;a href=&#34;https://theairlab.org/team/sebastian/&#34;&gt;&lt;strong&gt;Sebastian Scherer&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://www.cs.cmu.edu/~deva/&#34;&gt;&lt;strong&gt;Deva Ramanan&lt;/strong&gt;&lt;/a&gt; ¬∑ &lt;a href=&#34;https://www.vision.rwth-aachen.de/person/216/&#34;&gt;&lt;strong&gt;Jonathon Luiten&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;&lt;a href=&#34;https://arxiv.org/pdf/2312.02126.pdf&#34;&gt;Paper&lt;/a&gt; | &lt;a href=&#34;https://youtu.be/jWLI-OFp3qU&#34;&gt;Video&lt;/a&gt; | &lt;a href=&#34;https://spla-tam.github.io/&#34;&gt;Project Page&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&lt;/div&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/spla-tam/SplaTAM/main/assets/1.gif&#34; alt=&#34;Logo&#34; width=&#34;100%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Coming Soon: Stay Tuned for Faster, Better and Stronger SplaTAM V2 Update!&lt;/h2&gt; &#xA;&lt;!-- TABLE OF CONTENTS --&gt; &#xA;&lt;details open style=&#34;padding: 10px; border-radius:5px 30px 30px 5px; border-style: solid; border-width: 1px;&#34;&gt; &#xA; &lt;summary&gt;Table of Contents&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/spla-tam/SplaTAM/main/#installation&#34;&gt;Installation&lt;/a&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/spla-tam/SplaTAM/main/#demo&#34;&gt;Online Demo&lt;/a&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/spla-tam/SplaTAM/main/#usage&#34;&gt;Usage&lt;/a&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/spla-tam/SplaTAM/main/#downloads&#34;&gt;Downloads&lt;/a&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/spla-tam/SplaTAM/main/#benchmarking&#34;&gt;Benchmarking&lt;/a&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/spla-tam/SplaTAM/main/#acknowledgement&#34;&gt;Acknowledgement&lt;/a&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/spla-tam/SplaTAM/main/#citation&#34;&gt;Citation&lt;/a&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;a href=&#34;https://raw.githubusercontent.com/spla-tam/SplaTAM/main/#developers&#34;&gt;Developers&lt;/a&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h5&gt;(Recommended)&lt;/h5&gt; &#xA;&lt;p&gt;SplaTAM has been tested on python 3.10, CUDA&amp;gt;=11.6. The simplest way to install all dependences is to use &lt;a href=&#34;https://www.anaconda.com/&#34;&gt;anaconda&lt;/a&gt; and &lt;a href=&#34;https://pypi.org/project/pip/&#34;&gt;pip&lt;/a&gt; in the following steps:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create -n splatam python=3.10&#xA;conda activate splatam&#xA;conda install -c &#34;nvidia/label/cuda-11.6.0&#34; cuda-toolkit&#xA;conda install pytorch==1.12.1 torchvision==0.13.1 torchaudio==0.12.1 cudatoolkit=11.6 -c pytorch -c conda-forge&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, we also provide a conda environment.yml file :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda env create -f environment.yml&#xA;conda activate splatam&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;p&gt;For installation on Windows using Git bash, please refer to the &lt;a href=&#34;https://github.com/spla-tam/SplaTAM/issues/9#issuecomment-1848348403&#34;&gt;instructions shared in Issue#9&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Docker and Singularity Setup&lt;/h4&gt; &#xA;&lt;p&gt;We also provide a docker image. We recommend using a venv to run the code inside a docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull nkeetha/splatam:v1&#xA;bash bash_scripts/docker_start.bash&#xA;cd /SplaTAM/&#xA;pip install virtualenv --user&#xA;mkdir venv&#xA;cd venv&#xA;virtualenv splatam --system-site-packages&#xA;pip install -r venv_requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Setting up a singularity container is similar:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd &amp;lt;/path/to/singularity/folder/&#xA;singularity pull splatam.sif docker://nkeetha/splatam:v1&#xA;singularity instance start --nv splatam.sif splatam&#xA;singularity run --nv instance://gradslam_2&#xA;cd &amp;lt;path/to/SplaTAM/&amp;gt;&#xA;pip install virtualenv --user&#xA;mkdir venv&#xA;cd venv&#xA;virtualenv splatam --system-site-packages&#xA;pip install -r venv_requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;h3&gt;Online&lt;/h3&gt; &#xA;&lt;p&gt;You can SplaTAM your own environment with an iPhone or LiDAR-equipped Apple device by downloading and using the &lt;a href=&#34;https://apps.apple.com/au/app/nerfcapture/id6446518379&#34;&gt;NeRFCapture&lt;/a&gt; app.&lt;/p&gt; &#xA;&lt;p&gt;Make sure that your iPhone and PC are connected to the same WiFi network, and then run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash bash_scripts/online_demo.bash configs/iphone/online_demo.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On the app, keep clicking send for successive frames. Once the capturing of frames is done, the app will disconnect from the PC and check out SplaTAM&#39;s interactive rendering of the reconstruction on your PC! Here are some cool example results:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/spla-tam/SplaTAM/main/assets/collage.gif&#34; alt=&#34;Logo&#34; width=&#34;75%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Offline&lt;/h3&gt; &#xA;&lt;p&gt;You can also first capture the dataset and then run SplaTAM offline on the dataset with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash bash_scripts/nerfcapture.bash configs/iphone/nerfcapture.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dataset Collection&lt;/h3&gt; &#xA;&lt;p&gt;If you would like to only capture your own iPhone dataset using the NeRFCapture app, please use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash bash_scripts/nerfcapture2dataset.bash configs/iphone/dataset.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;We will use the iPhone dataset as an example to show how to use SplaTAM. The following steps are similar for other datasets.&lt;/p&gt; &#xA;&lt;p&gt;To run SplaTAM, please use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/splatam.py configs/iphone/splatam.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To visualize the final interactive SplaTAM reconstruction, please use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python viz_scripts/final_recon.py configs/iphone/splatam.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To visualize the SplaTAM reconstruction in an online fashion, please use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python viz_scripts/online_recon.py configs/iphone/splatam.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run 3D Gaussian Splatting on the SplaTAM reconstruction, please use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/post_splatam_opt.pt configs/iphone/post_splatam_opt.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run 3D Gaussian Splatting on a dataset using ground truth poses, please use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/gaussian_splatting.py configs/iphone/gaussian_splatting.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;p&gt;DATAROOT is &lt;code&gt;./data&lt;/code&gt; by default. Please change the &lt;code&gt;input_folder&lt;/code&gt; path in the scene-specific config files if datasets are stored somewhere else on your machine.&lt;/p&gt; &#xA;&lt;h3&gt;Replica&lt;/h3&gt; &#xA;&lt;p&gt;Download the data as below, and the data is saved into the &lt;code&gt;./data/Replica&lt;/code&gt; folder. Note that the Replica data is generated by the authors of iMAP (but hosted by the authors of NICE-SLAM). Please cite iMAP if you use the data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash bash_scripts/download_replica.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;TUM-RGBD&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash bash_scripts/download_tum.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;ScanNet&lt;/h3&gt; &#xA;&lt;p&gt;Please follow the data downloading procedure on the &lt;a href=&#34;http://www.scan-net.org/&#34;&gt;ScanNet&lt;/a&gt; website, and extract color/depth frames from the &lt;code&gt;.sens&lt;/code&gt; file using this &lt;a href=&#34;https://github.com/ScanNet/ScanNet/raw/master/SensReader/python/reader.py&#34;&gt;code&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;[Directory structure of ScanNet (click to expand)]&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;  DATAROOT&#xA;  ‚îî‚îÄ‚îÄ scannet&#xA;        ‚îî‚îÄ‚îÄ scene0000_00&#xA;            ‚îî‚îÄ‚îÄ frames&#xA;                ‚îú‚îÄ‚îÄ color&#xA;                ‚îÇ   ‚îú‚îÄ‚îÄ 0.jpg&#xA;                ‚îÇ   ‚îú‚îÄ‚îÄ 1.jpg&#xA;                ‚îÇ   ‚îú‚îÄ‚îÄ ...&#xA;                ‚îÇ   ‚îî‚îÄ‚îÄ ...&#xA;                ‚îú‚îÄ‚îÄ depth&#xA;                ‚îÇ   ‚îú‚îÄ‚îÄ 0.png&#xA;                ‚îÇ   ‚îú‚îÄ‚îÄ 1.png&#xA;                ‚îÇ   ‚îú‚îÄ‚îÄ ...&#xA;                ‚îÇ   ‚îî‚îÄ‚îÄ ...&#xA;                ‚îú‚îÄ‚îÄ intrinsic&#xA;                ‚îî‚îÄ‚îÄ pose&#xA;                    ‚îú‚îÄ‚îÄ 0.txt&#xA;                    ‚îú‚îÄ‚îÄ 1.txt&#xA;                    ‚îú‚îÄ‚îÄ ...&#xA;                    ‚îî‚îÄ‚îÄ ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;We use the following sequences:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;scene0000_00&#xA;scene0059_00&#xA;scene0106_00&#xA;scene0181_00&#xA;scene0207_00&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;ScanNet++&lt;/h3&gt; &#xA;&lt;p&gt;Please follow the data downloading and image undistortion procedure on the &lt;a href=&#34;https://kaldir.vc.in.tum.de/scannetpp/&#34;&gt;ScanNet++&lt;/a&gt; website. Additionally for undistorting the DSLR depth images, we use our &lt;a href=&#34;https://github.com/Nik-V9/scannetpp&#34;&gt;own variant of the official ScanNet++ processing code&lt;/a&gt;. We will open a pull request to the official ScanNet++ repository soon.&lt;/p&gt; &#xA;&lt;p&gt;We use the following sequences:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;8b5caf3398&#xA;b20a261fdf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For b20a261fdf, we use the first 360 frames, due to an abrupt jump/teleportation in the trajectory post frame 360. Please note that ScanNet++ was primarily intended as a NeRF Training &amp;amp; Novel View Synthesis dataset.&lt;/p&gt; &#xA;&lt;h3&gt;Replica-V2&lt;/h3&gt; &#xA;&lt;p&gt;We use the Replica-V2 dataset from vMAP to evaluate novel view synthesis. Please download the pre-generated replica sequences from &lt;a href=&#34;https://github.com/kxhit/vMAP&#34;&gt;vMAP&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Benchmarking&lt;/h2&gt; &#xA;&lt;p&gt;For running SplaTAM, we recommend using &lt;a href=&#34;https://wandb.ai/&#34;&gt;weights and biases&lt;/a&gt; for the logging. This can be turned on by setting the &lt;code&gt;wandb&lt;/code&gt; flag to True in the configs file. Also make sure to specify the path &lt;code&gt;wandb_folder&lt;/code&gt;. If you don&#39;t have a wandb account, first create one. Please make sure to change the &lt;code&gt;entity&lt;/code&gt; config to your wandb account. Each scene has a config folder, where the &lt;code&gt;input_folder&lt;/code&gt; and &lt;code&gt;output&lt;/code&gt; paths need to be specified.&lt;/p&gt; &#xA;&lt;p&gt;Below, we show some example run commands for one scene from each dataset. After SLAM, the trajectory error will be evaluated along with the rendering metrics. The results will be saved to &lt;code&gt;./experiments&lt;/code&gt; by default.&lt;/p&gt; &#xA;&lt;h3&gt;Replica&lt;/h3&gt; &#xA;&lt;p&gt;To run SplaTAM on the &lt;code&gt;room0&lt;/code&gt; scene, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/splatam.py configs/replica/splatam.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run SplaTAM-S on the &lt;code&gt;room0&lt;/code&gt; scene, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/splatam.py configs/replica/splatam_s.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For other scenes, please modify the &lt;code&gt;configs/replica/splatam.py&lt;/code&gt; file or use &lt;code&gt;configs/replica/replica.bash&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;TUM-RGBD&lt;/h3&gt; &#xA;&lt;p&gt;To run SplaTAM on the &lt;code&gt;freiburg1_desk&lt;/code&gt; scene, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/splatam.py configs/tum/splatam.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For other scenes, please modify the &lt;code&gt;configs/tum/splatam.py&lt;/code&gt; file or use &lt;code&gt;configs/tum/tum.bash&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;ScanNet&lt;/h3&gt; &#xA;&lt;p&gt;To run SplaTAM on the &lt;code&gt;scene0000_00&lt;/code&gt; scene, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/splatam.py configs/scannet/splatam.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For other scenes, please modify the &lt;code&gt;configs/scannet/splatam.py&lt;/code&gt; file or use &lt;code&gt;configs/scannet/scannet.bash&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;ScanNet++&lt;/h3&gt; &#xA;&lt;p&gt;To run SplaTAM on the &lt;code&gt;8b5caf3398&lt;/code&gt; scene, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/splatam.py configs/scannetpp/splatam.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run Novel View Synthesis on the &lt;code&gt;8b5caf3398&lt;/code&gt; scene, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/eval_novel_view.py configs/scannetpp/eval_novel_view.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For other scenes, please modify the &lt;code&gt;configs/scannetpp/splatam.py&lt;/code&gt; file or use &lt;code&gt;configs/scannetpp/scannetpp.bash&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;ReplicaV2&lt;/h3&gt; &#xA;&lt;p&gt;To run SplaTAM on the &lt;code&gt;room0&lt;/code&gt; scene, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/splatam.py configs/replica_v2/splatam.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run Novel View Synthesis on the &lt;code&gt;room0&lt;/code&gt; scene post SplaTAM, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/eval_novel_view.py configs/replica_v2/eval_novel_view.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For other scenes, please modify the config files.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;We thank the authors of the following repositories for their open-source code:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;3D Gaussians &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/JonathonLuiten/Dynamic3DGaussians&#34;&gt;Dynamic 3D Gaussians&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/graphdeco-inria/gaussian-splatting&#34;&gt;3D Gaussian Splating&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Dataloaders &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gradslam/gradslam/tree/conceptfusion&#34;&gt;GradSLAM &amp;amp; ConceptFusion&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Baselines &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/cvg/nice-slam&#34;&gt;Nice-SLAM&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/eriksandstroem/Point-SLAM&#34;&gt;Point-SLAM&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find our paper and code useful, please cite us:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bib&#34;&gt;@article{keetha2023splatam,&#xA;    author    = {Keetha, Nikhil and Karhade, Jay and Jatavallabhula, Krishna Murthy and Yang, Gengshan and Scherer, Sebastian and Ramanan, Deva and Luiten, Jonathan}&#xA;    title     = {SplaTAM: Splat, Track &amp;amp; Map 3D Gaussians for Dense RGB-D SLAM},&#xA;    journal   = {arXiv},&#xA;    year      = {2023},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Developers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Nik-V9&#34;&gt;Nik-V9&lt;/a&gt; (&lt;a href=&#34;https://nik-v9.github.io/&#34;&gt;Nikhil Keetha&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JayKarhade&#34;&gt;JayKarhade&lt;/a&gt; (&lt;a href=&#34;https://jaykarhade.github.io/&#34;&gt;Jay Karhade&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JonathonLuiten&#34;&gt;JonathonLuiten&lt;/a&gt; (&lt;a href=&#34;https://www.vision.rwth-aachen.de/person/216/&#34;&gt;Jonathan Luiten&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/krrish94&#34;&gt;krrish94&lt;/a&gt; (&lt;a href=&#34;https://krrish94.github.io/&#34;&gt;Krishna Murthy Jatavallabhula&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gengshan-y&#34;&gt;gengshan-y&lt;/a&gt; (&lt;a href=&#34;https://gengshan-y.github.io/&#34;&gt;Gengshan Yang&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>