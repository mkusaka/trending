<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-15T01:49:26Z</updated>
  <subtitle>Weekly Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>soimort/you-get</title>
    <updated>2024-09-15T01:49:26Z</updated>
    <id>tag:github.com,2024-09-15:/soimort/you-get</id>
    <link href="https://github.com/soimort/you-get" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⏬ Dumb downloader that scrapes the web&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;You-Get&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/soimort/you-get/actions&#34;&gt;&lt;img src=&#34;https://github.com/soimort/you-get/workflows/develop/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/you-get/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/you-get.svg?sanitize=true&#34; alt=&#34;PyPI version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/soimort/you-get?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTICE (30 May 2022): Support for Python 3.5, 3.6 and 3.7 will eventually be dropped. (&lt;a href=&#34;https://github.com/soimort/you-get/wiki/TLS-1.3-post-handshake-authentication-(PHA)&#34;&gt;see details here&lt;/a&gt;)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTICE (8 Mar 2019): Read &lt;a href=&#34;https://github.com/soimort/you-get/raw/develop/CONTRIBUTING.md&#34;&gt;this&lt;/a&gt; if you are looking for the conventional &#34;Issues&#34; tab.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://you-get.org/&#34;&gt;You-Get&lt;/a&gt; is a tiny command-line utility to download media contents (videos, audios, images) from the Web, in case there is no other handy way to do it.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s how you use &lt;code&gt;you-get&lt;/code&gt; to download a video from &lt;a href=&#34;https://www.youtube.com/watch?v=jNQXAC9IVRw&#34;&gt;YouTube&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ you-get &#39;https://www.youtube.com/watch?v=jNQXAC9IVRw&#39;&#xA;site:                YouTube&#xA;title:               Me at the zoo&#xA;stream:&#xA;    - itag:          43&#xA;      container:     webm&#xA;      quality:       medium&#xA;      size:          0.5 MiB (564215 bytes)&#xA;    # download-with: you-get --itag=43 [URL]&#xA;&#xA;Downloading Me at the zoo.webm ...&#xA; 100% (  0.5/  0.5MB) ├██████████████████████████████████┤[1/1]    6 MB/s&#xA;&#xA;Saving Me at the zoo.en.srt ... Done.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And here&#39;s why you might want to use it:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You enjoyed something on the Internet, and just want to download them for your own pleasure.&lt;/li&gt; &#xA; &lt;li&gt;You watch your favorite videos online from your computer, but you are prohibited from saving them. You feel that you have no control over your own computer. (And it&#39;s not how an open Web is supposed to work.)&lt;/li&gt; &#xA; &lt;li&gt;You want to get rid of any closed-source technology or proprietary JavaScript code, and disallow things like Flash running on your computer.&lt;/li&gt; &#xA; &lt;li&gt;You are an adherent of hacker culture and free software.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;What &lt;code&gt;you-get&lt;/code&gt; can do for you:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download videos / audios from popular websites such as YouTube, Youku, Niconico, and a bunch more. (See the &lt;a href=&#34;https://raw.githubusercontent.com/soimort/you-get/develop/#supported-sites&#34;&gt;full list of supported sites&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Stream an online video in your media player. No web browser, no more ads.&lt;/li&gt; &#xA; &lt;li&gt;Download images (of interest) by scraping a web page.&lt;/li&gt; &#xA; &lt;li&gt;Download arbitrary non-HTML contents, i.e., binary files.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Interested? &lt;a href=&#34;https://raw.githubusercontent.com/soimort/you-get/develop/#installation&#34;&gt;Install it&lt;/a&gt; now and &lt;a href=&#34;https://raw.githubusercontent.com/soimort/you-get/develop/#getting-started&#34;&gt;get started by examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Are you a Python programmer? Then check out &lt;a href=&#34;https://github.com/soimort/you-get&#34;&gt;the source&lt;/a&gt; and fork it!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/GfthFAz.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;The following dependencies are recommended:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python&lt;/a&gt;&lt;/strong&gt; 3.7.4 or above&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.ffmpeg.org/&#34;&gt;FFmpeg&lt;/a&gt;&lt;/strong&gt; 1.0 or above&lt;/li&gt; &#xA; &lt;li&gt;(Optional) &lt;a href=&#34;https://rtmpdump.mplayerhq.hu/&#34;&gt;RTMPDump&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Option 1: Install via pip&lt;/h3&gt; &#xA;&lt;p&gt;The official release of &lt;code&gt;you-get&lt;/code&gt; is distributed on &lt;a href=&#34;https://pypi.python.org/pypi/you-get&#34;&gt;PyPI&lt;/a&gt;, and can be installed easily from a PyPI mirror via the &lt;a href=&#34;https://en.wikipedia.org/wiki/Pip_(package_manager)&#34;&gt;pip&lt;/a&gt; package manager: (Note that you must use the Python 3 version of &lt;code&gt;pip&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pip install you-get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Option 2: Install via &lt;a href=&#34;https://github.com/zsh-users/antigen&#34;&gt;Antigen&lt;/a&gt; (for Zsh users)&lt;/h3&gt; &#xA;&lt;p&gt;Add the following line to your &lt;code&gt;.zshrc&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;antigen bundle soimort/you-get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Option 3: Download from GitHub&lt;/h3&gt; &#xA;&lt;p&gt;You may either download the &lt;a href=&#34;https://github.com/soimort/you-get/archive/master.zip&#34;&gt;stable&lt;/a&gt; (identical with the latest release on PyPI) or the &lt;a href=&#34;https://github.com/soimort/you-get/archive/develop.zip&#34;&gt;develop&lt;/a&gt; (more hotfixes, unstable features) branch of &lt;code&gt;you-get&lt;/code&gt;. Unzip it, and put the directory containing the &lt;code&gt;you-get&lt;/code&gt; script into your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd path/to/you-get&#xA;$ [sudo] python -m pip install .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd path/to/you-get&#xA;$ python -m pip install . --user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to install &lt;code&gt;you-get&lt;/code&gt; to a permanent path. (And don&#39;t omit the dot &lt;code&gt;.&lt;/code&gt; representing the current directory)&lt;/p&gt; &#xA;&lt;p&gt;You can also use the &lt;a href=&#34;https://pipenv.pypa.io/en/latest&#34;&gt;pipenv&lt;/a&gt; to install the &lt;code&gt;you-get&lt;/code&gt; in the Python virtual environment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pipenv install -e .&#xA;$ pipenv run you-get --version&#xA;you-get: version 0.4.1555, a tiny downloader that scrapes the web.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Option 4: Git clone&lt;/h3&gt; &#xA;&lt;p&gt;This is the recommended way for all developers, even if you don&#39;t often code in Python.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone git://github.com/soimort/you-get.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then put the cloned directory into your &lt;code&gt;PATH&lt;/code&gt;, or run &lt;code&gt;python -m pip install path/to/you-get&lt;/code&gt; to install &lt;code&gt;you-get&lt;/code&gt; to a permanent path.&lt;/p&gt; &#xA;&lt;h3&gt;Option 5: Homebrew (Mac only)&lt;/h3&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;you-get&lt;/code&gt; easily via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ brew install you-get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Option 6: pkg (FreeBSD only)&lt;/h3&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;you-get&lt;/code&gt; easily via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# pkg install you-get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Option 7: Flox (Mac, Linux, and Windows WSL)&lt;/h3&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;you-get&lt;/code&gt; easily via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ flox install you-get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Shell completion&lt;/h3&gt; &#xA;&lt;p&gt;Completion definitions for Bash, Fish and Zsh can be found in &lt;a href=&#34;https://github.com/soimort/you-get/tree/develop/contrib/completion&#34;&gt;&lt;code&gt;contrib/completion&lt;/code&gt;&lt;/a&gt;. Please consult your shell&#39;s manual for how to take advantage of them.&lt;/p&gt; &#xA;&lt;h2&gt;Upgrading&lt;/h2&gt; &#xA;&lt;p&gt;Based on which option you chose to install &lt;code&gt;you-get&lt;/code&gt;, you may upgrade it via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pip install --upgrade you-get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or download the latest release via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ you-get https://github.com/soimort/you-get/archive/master.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to get the latest &lt;code&gt;develop&lt;/code&gt; branch without messing up the PIP, you can try:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pip install --upgrade git+https://github.com/soimort/you-get@develop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Download a video&lt;/h3&gt; &#xA;&lt;p&gt;When you get a video of interest, you might want to use the &lt;code&gt;--info&lt;/code&gt;/&lt;code&gt;-i&lt;/code&gt; option to see all available quality and formats:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ you-get -i &#39;https://www.youtube.com/watch?v=jNQXAC9IVRw&#39;&#xA;site:                YouTube&#xA;title:               Me at the zoo&#xA;streams:             # Available quality and codecs&#xA;    [ DASH ] ____________________________________&#xA;    - itag:          242&#xA;      container:     webm&#xA;      quality:       320x240&#xA;      size:          0.6 MiB (618358 bytes)&#xA;    # download-with: you-get --itag=242 [URL]&#xA;&#xA;    - itag:          395&#xA;      container:     mp4&#xA;      quality:       320x240&#xA;      size:          0.5 MiB (550743 bytes)&#xA;    # download-with: you-get --itag=395 [URL]&#xA;&#xA;    - itag:          133&#xA;      container:     mp4&#xA;      quality:       320x240&#xA;      size:          0.5 MiB (498558 bytes)&#xA;    # download-with: you-get --itag=133 [URL]&#xA;&#xA;    - itag:          278&#xA;      container:     webm&#xA;      quality:       192x144&#xA;      size:          0.4 MiB (392857 bytes)&#xA;    # download-with: you-get --itag=278 [URL]&#xA;&#xA;    - itag:          160&#xA;      container:     mp4&#xA;      quality:       192x144&#xA;      size:          0.4 MiB (370882 bytes)&#xA;    # download-with: you-get --itag=160 [URL]&#xA;&#xA;    - itag:          394&#xA;      container:     mp4&#xA;      quality:       192x144&#xA;      size:          0.4 MiB (367261 bytes)&#xA;    # download-with: you-get --itag=394 [URL]&#xA;&#xA;    [ DEFAULT ] _________________________________&#xA;    - itag:          43&#xA;      container:     webm&#xA;      quality:       medium&#xA;      size:          0.5 MiB (568748 bytes)&#xA;    # download-with: you-get --itag=43 [URL]&#xA;&#xA;    - itag:          18&#xA;      container:     mp4&#xA;      quality:       small&#xA;    # download-with: you-get --itag=18 [URL]&#xA;&#xA;    - itag:          36&#xA;      container:     3gp&#xA;      quality:       small&#xA;    # download-with: you-get --itag=36 [URL]&#xA;&#xA;    - itag:          17&#xA;      container:     3gp&#xA;      quality:       small&#xA;    # download-with: you-get --itag=17 [URL]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, the one on the top is the one you will get. If that looks cool to you, download it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ you-get &#39;https://www.youtube.com/watch?v=jNQXAC9IVRw&#39;&#xA;site:                YouTube&#xA;title:               Me at the zoo&#xA;stream:&#xA;    - itag:          242&#xA;      container:     webm&#xA;      quality:       320x240&#xA;      size:          0.6 MiB (618358 bytes)&#xA;    # download-with: you-get --itag=242 [URL]&#xA;&#xA;Downloading Me at the zoo.webm ...&#xA; 100% (  0.6/  0.6MB) ├██████████████████████████████████████████████████████████████████████████████┤[2/2]    2 MB/s&#xA;Merging video parts... Merged into Me at the zoo.webm&#xA;&#xA;Saving Me at the zoo.en.srt ... Done.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(If a YouTube video has any closed captions, they will be downloaded together with the video file, in SubRip subtitle format.)&lt;/p&gt; &#xA;&lt;p&gt;Or, if you prefer another format (mp4), just use whatever the option &lt;code&gt;you-get&lt;/code&gt; shows to you:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ you-get --itag=18 &#39;https://www.youtube.com/watch?v=jNQXAC9IVRw&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;At this point, format selection has not been generally implemented for most of our supported sites; in that case, the default format to download is the one with the highest quality.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ffmpeg&lt;/code&gt; is a required dependency, for downloading and joining videos streamed in multiple parts (e.g. on some sites like Youku), and for YouTube videos of 1080p or high resolution.&lt;/li&gt; &#xA; &lt;li&gt;If you don&#39;t want &lt;code&gt;you-get&lt;/code&gt; to join video parts after downloading them, use the &lt;code&gt;--no-merge&lt;/code&gt;/&lt;code&gt;-n&lt;/code&gt; option.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Download anything else&lt;/h3&gt; &#xA;&lt;p&gt;If you already have the URL of the exact resource you want, you can download it directly with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ you-get https://stallman.org/rms.jpg&#xA;Site:       stallman.org&#xA;Title:      rms&#xA;Type:       JPEG Image (image/jpeg)&#xA;Size:       0.06 MiB (66482 Bytes)&#xA;&#xA;Downloading rms.jpg ...&#xA; 100% (  0.1/  0.1MB) ├████████████████████████████████████████┤[1/1]  127 kB/s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Otherwise, &lt;code&gt;you-get&lt;/code&gt; will scrape the web page and try to figure out if there&#39;s anything interesting to you:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ you-get https://kopasas.tumblr.com/post/69361932517&#xA;Site:       Tumblr.com&#xA;Title:      [tumblr] tumblr_mxhg13jx4n1sftq6do1_640&#xA;Type:       Portable Network Graphics (image/png)&#xA;Size:       0.11 MiB (118484 Bytes)&#xA;&#xA;Downloading [tumblr] tumblr_mxhg13jx4n1sftq6do1_640.png ...&#xA; 100% (  0.1/  0.1MB) ├████████████████████████████████████████┤[1/1]   22 MB/s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This feature is an experimental one and far from perfect. It works best on scraping large-sized images from popular websites like Tumblr and Blogger, but there is really no universal pattern that can apply to any site on the Internet.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Search on Google Videos and download&lt;/h3&gt; &#xA;&lt;p&gt;You can pass literally anything to &lt;code&gt;you-get&lt;/code&gt;. If it isn&#39;t a valid URL, &lt;code&gt;you-get&lt;/code&gt; will do a Google search and download the most relevant video for you. (It might not be exactly the thing you wish to see, but still very likely.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ you-get &#34;Richard Stallman eats&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pause and resume a download&lt;/h3&gt; &#xA;&lt;p&gt;You may use &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt; to interrupt a download.&lt;/p&gt; &#xA;&lt;p&gt;A temporary &lt;code&gt;.download&lt;/code&gt; file is kept in the output directory. Next time you run &lt;code&gt;you-get&lt;/code&gt; with the same arguments, the download progress will resume from the last session. In case the file is completely downloaded (the temporary &lt;code&gt;.download&lt;/code&gt; extension is gone), &lt;code&gt;you-get&lt;/code&gt; will just skip the download.&lt;/p&gt; &#xA;&lt;p&gt;To enforce re-downloading, use the &lt;code&gt;--force&lt;/code&gt;/&lt;code&gt;-f&lt;/code&gt; option. (&lt;strong&gt;Warning:&lt;/strong&gt; doing so will overwrite any existing file or temporary file with the same name!)&lt;/p&gt; &#xA;&lt;h3&gt;Set the path and name of downloaded file&lt;/h3&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--output-dir&lt;/code&gt;/&lt;code&gt;-o&lt;/code&gt; option to set the path, and &lt;code&gt;--output-filename&lt;/code&gt;/&lt;code&gt;-O&lt;/code&gt; to set the name of the downloaded file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ you-get -o ~/Videos -O zoo.webm &#39;https://www.youtube.com/watch?v=jNQXAC9IVRw&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tips:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;These options are helpful if you encounter problems with the default video titles, which may contain special characters that do not play well with your current shell / operating system / filesystem.&lt;/li&gt; &#xA; &lt;li&gt;These options are also helpful if you write a script to batch download files and put them into designated folders with designated names.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Proxy settings&lt;/h3&gt; &#xA;&lt;p&gt;You may specify an HTTP proxy for &lt;code&gt;you-get&lt;/code&gt; to use, via the &lt;code&gt;--http-proxy&lt;/code&gt;/&lt;code&gt;-x&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ you-get -x 127.0.0.1:8087 &#39;https://www.youtube.com/watch?v=jNQXAC9IVRw&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;However, the system proxy setting (i.e. the environment variable &lt;code&gt;http_proxy&lt;/code&gt;) is applied by default. To disable any proxy, use the &lt;code&gt;--no-proxy&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tips:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you need to use proxies a lot (in case your network is blocking certain sites), you might want to use &lt;code&gt;you-get&lt;/code&gt; with &lt;a href=&#34;https://github.com/rofl0r/proxychains-ng&#34;&gt;proxychains&lt;/a&gt; and set &lt;code&gt;alias you-get=&#34;proxychains -q you-get&#34;&lt;/code&gt; (in Bash).&lt;/li&gt; &#xA; &lt;li&gt;For some websites (e.g. Youku), if you need access to some videos that are only available in mainland China, there is an option of using a specific proxy to extract video information from the site: &lt;code&gt;--extractor-proxy&lt;/code&gt;/&lt;code&gt;-y&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Watch a video&lt;/h3&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--player&lt;/code&gt;/&lt;code&gt;-p&lt;/code&gt; option to feed the video into your media player of choice, e.g. &lt;code&gt;mpv&lt;/code&gt; or &lt;code&gt;vlc&lt;/code&gt;, instead of downloading it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ you-get -p vlc &#39;https://www.youtube.com/watch?v=jNQXAC9IVRw&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, if you prefer to watch the video in a browser, just without ads or comment section:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ you-get -p chromium &#39;https://www.youtube.com/watch?v=jNQXAC9IVRw&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tips:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It is possible to use the &lt;code&gt;-p&lt;/code&gt; option to start another download manager, e.g., &lt;code&gt;you-get -p uget-gtk &#39;https://www.youtube.com/watch?v=jNQXAC9IVRw&#39;&lt;/code&gt;, though they may not play together very well.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Load cookies&lt;/h3&gt; &#xA;&lt;p&gt;Not all videos are publicly available to anyone. If you need to log in your account to access something (e.g., a private video), it would be unavoidable to feed the browser cookies to &lt;code&gt;you-get&lt;/code&gt; via the &lt;code&gt;--cookies&lt;/code&gt;/&lt;code&gt;-c&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;As of now, we are supporting two formats of browser cookies: Mozilla &lt;code&gt;cookies.sqlite&lt;/code&gt; and Netscape &lt;code&gt;cookies.txt&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Reuse extracted data&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;code&gt;--url&lt;/code&gt;/&lt;code&gt;-u&lt;/code&gt; to get a list of downloadable resource URLs extracted from the page. Use &lt;code&gt;--json&lt;/code&gt; to get an abstract of extracted data in the JSON format.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For the time being, this feature has &lt;strong&gt;NOT&lt;/strong&gt; been stabilized and the JSON schema may have breaking changes in the future.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Sites&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Site&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;URL&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Videos?&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Images?&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Audios?&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;YouTube&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.youtube.com/&#34;&gt;https://www.youtube.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;X (Twitter)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://x.com/&#34;&gt;https://x.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;VK&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://vk.com/&#34;&gt;https://vk.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Vimeo&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://vimeo.com/&#34;&gt;https://vimeo.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Veoh&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.veoh.com/&#34;&gt;https://www.veoh.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Tumblr&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.tumblr.com/&#34;&gt;https://www.tumblr.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TED&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.ted.com/&#34;&gt;https://www.ted.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SoundCloud&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://soundcloud.com/&#34;&gt;https://soundcloud.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SHOWROOM&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.showroom-live.com/&#34;&gt;https://www.showroom-live.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Pinterest&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.pinterest.com/&#34;&gt;https://www.pinterest.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;MTV81&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.mtv81.com/&#34;&gt;https://www.mtv81.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Mixcloud&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.mixcloud.com/&#34;&gt;https://www.mixcloud.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Metacafe&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.metacafe.com/&#34;&gt;https://www.metacafe.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Magisto&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.magisto.com/&#34;&gt;https://www.magisto.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Khan Academy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.khanacademy.org/&#34;&gt;https://www.khanacademy.org/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Internet Archive&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://archive.org/&#34;&gt;https://archive.org/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Instagram&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://instagram.com/&#34;&gt;https://instagram.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;InfoQ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.infoq.com/presentations/&#34;&gt;https://www.infoq.com/presentations/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Imgur&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://imgur.com/&#34;&gt;https://imgur.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Heavy Music Archive&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.heavy-music.ru/&#34;&gt;https://www.heavy-music.ru/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Freesound&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.freesound.org/&#34;&gt;https://www.freesound.org/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Flickr&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.flickr.com/&#34;&gt;https://www.flickr.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;FC2 Video&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://video.fc2.com/&#34;&gt;https://video.fc2.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Facebook&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.facebook.com/&#34;&gt;https://www.facebook.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;eHow&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.ehow.com/&#34;&gt;https://www.ehow.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Dailymotion&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.dailymotion.com/&#34;&gt;https://www.dailymotion.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Coub&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://coub.com/&#34;&gt;https://coub.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CBS&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.cbs.com/&#34;&gt;https://www.cbs.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Bandcamp&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://bandcamp.com/&#34;&gt;https://bandcamp.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AliveThai&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://alive.in.th/&#34;&gt;https://alive.in.th/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;interest.me&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://ch.interest.me/tvn&#34;&gt;https://ch.interest.me/tvn&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;755&lt;br&gt;ナナゴーゴー&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://7gogo.jp/&#34;&gt;https://7gogo.jp/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;niconico&lt;br&gt;ニコニコ動画&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.nicovideo.jp/&#34;&gt;https://www.nicovideo.jp/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;163&lt;br&gt;网易视频&lt;br&gt;网易云音乐&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://v.163.com/&#34;&gt;https://v.163.com/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://music.163.com/&#34;&gt;https://music.163.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;56网&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.56.com/&#34;&gt;https://www.56.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;AcFun&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.acfun.cn/&#34;&gt;https://www.acfun.cn/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Baidu&lt;br&gt;百度贴吧&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://tieba.baidu.com/&#34;&gt;https://tieba.baidu.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;爆米花网&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.baomihua.com/&#34;&gt;https://www.baomihua.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;bilibili&lt;br&gt;哔哩哔哩&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.bilibili.com/&#34;&gt;https://www.bilibili.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;豆瓣&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.douban.com/&#34;&gt;https://www.douban.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;斗鱼&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.douyutv.com/&#34;&gt;https://www.douyutv.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;凤凰视频&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://v.ifeng.com/&#34;&gt;https://v.ifeng.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;风行网&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.fun.tv/&#34;&gt;https://www.fun.tv/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;iQIYI&lt;br&gt;爱奇艺&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.iqiyi.com/&#34;&gt;https://www.iqiyi.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;激动网&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.joy.cn/&#34;&gt;https://www.joy.cn/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;酷6网&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.ku6.com/&#34;&gt;https://www.ku6.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;酷狗音乐&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.kugou.com/&#34;&gt;https://www.kugou.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;酷我音乐&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.kuwo.cn/&#34;&gt;https://www.kuwo.cn/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;乐视网&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.le.com/&#34;&gt;https://www.le.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;荔枝FM&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.lizhi.fm/&#34;&gt;https://www.lizhi.fm/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;懒人听书&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.lrts.me/&#34;&gt;https://www.lrts.me/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;秒拍&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.miaopai.com/&#34;&gt;https://www.miaopai.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;MioMio弹幕网&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.miomio.tv/&#34;&gt;https://www.miomio.tv/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;MissEvan&lt;br&gt;猫耳FM&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.missevan.com/&#34;&gt;https://www.missevan.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;痞客邦&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.pixnet.net/&#34;&gt;https://www.pixnet.net/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PPTV聚力&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.pptv.com/&#34;&gt;https://www.pptv.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;齐鲁网&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://v.iqilu.com/&#34;&gt;https://v.iqilu.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;QQ&lt;br&gt;腾讯视频&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://v.qq.com/&#34;&gt;https://v.qq.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;企鹅直播&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://live.qq.com/&#34;&gt;https://live.qq.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Sina&lt;br&gt;新浪视频&lt;br&gt;微博秒拍视频&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://video.sina.com.cn/&#34;&gt;https://video.sina.com.cn/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://video.weibo.com/&#34;&gt;https://video.weibo.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Sohu&lt;br&gt;搜狐视频&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://tv.sohu.com/&#34;&gt;https://tv.sohu.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Tudou&lt;br&gt;土豆&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.tudou.com/&#34;&gt;https://www.tudou.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;阳光卫视&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.isuntv.com/&#34;&gt;https://www.isuntv.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Youku&lt;br&gt;优酷&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.youku.com/&#34;&gt;https://www.youku.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;战旗TV&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.zhanqi.tv/lives&#34;&gt;https://www.zhanqi.tv/lives&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;央视网&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.cntv.cn/&#34;&gt;https://www.cntv.cn/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Naver&lt;br&gt;네이버&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://tvcast.naver.com/&#34;&gt;https://tvcast.naver.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;芒果TV&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.mgtv.com/&#34;&gt;https://www.mgtv.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;火猫TV&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.huomao.com/&#34;&gt;https://www.huomao.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;阳光宽频网&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.365yg.com/&#34;&gt;https://www.365yg.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;西瓜视频&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.ixigua.com/&#34;&gt;https://www.ixigua.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;新片场&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.xinpianchang.com/&#34;&gt;https://www.xinpianchang.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;快手&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.kuaishou.com/&#34;&gt;https://www.kuaishou.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;抖音&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.douyin.com/&#34;&gt;https://www.douyin.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TikTok&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.tiktok.com/&#34;&gt;https://www.tiktok.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;中国体育(TV)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://v.zhibo.tv/&#34;&gt;https://v.zhibo.tv/&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://video.zhibo.tv/&#34;&gt;https://video.zhibo.tv/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;知乎&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.zhihu.com/&#34;&gt;https://www.zhihu.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For all other sites not on the list, the universal extractor will take care of finding and downloading interesting resources from the page.&lt;/p&gt; &#xA;&lt;h3&gt;Known bugs&lt;/h3&gt; &#xA;&lt;p&gt;If something is broken and &lt;code&gt;you-get&lt;/code&gt; can&#39;t get you things you want, don&#39;t panic. (Yes, this happens all the time!)&lt;/p&gt; &#xA;&lt;p&gt;Check if it&#39;s already a known problem on &lt;a href=&#34;https://github.com/soimort/you-get/wiki/Known-Bugs&#34;&gt;https://github.com/soimort/you-get/wiki/Known-Bugs&lt;/a&gt;. If not, follow the guidelines on &lt;a href=&#34;https://github.com/soimort/you-get/raw/develop/CONTRIBUTING.md&#34;&gt;how to report an issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Involved&lt;/h2&gt; &#xA;&lt;p&gt;You can reach us on the Gitter channel &lt;a href=&#34;https://gitter.im/soimort/you-get&#34;&gt;#soimort/you-get&lt;/a&gt; (here&#39;s how you &lt;a href=&#34;https://irc.gitter.im&#34;&gt;set up your IRC client&lt;/a&gt; for Gitter). If you have a quick question regarding &lt;code&gt;you-get&lt;/code&gt;, ask it there.&lt;/p&gt; &#xA;&lt;p&gt;If you are seeking to report an issue or contribute, please make sure to read &lt;a href=&#34;https://github.com/soimort/you-get/raw/develop/CONTRIBUTING.md&#34;&gt;the guidelines&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;h2&gt;Legal Issues&lt;/h2&gt; &#xA;&lt;p&gt;This software is distributed under the &lt;a href=&#34;https://raw.github.com/soimort/you-get/master/LICENSE.txt&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In particular, please be aware that&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Translated to human words:&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;In case your use of the software forms the basis of copyright infringement, or you use the software for any other illegal purposes, the authors cannot take any responsibility for you.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;We only ship the code here, and how you are going to use it is left to your own discretion.&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;Made by &lt;a href=&#34;https://github.com/soimort&#34;&gt;@soimort&lt;/a&gt;, who is in turn powered by &lt;span&gt;☕&lt;/span&gt;, &lt;span&gt;🍺&lt;/span&gt; and &lt;span&gt;🍜&lt;/span&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can find the &lt;a href=&#34;https://github.com/soimort/you-get/graphs/contributors&#34;&gt;list of all contributors&lt;/a&gt; here.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lucidrains/alphafold3-pytorch</title>
    <updated>2024-09-15T01:49:26Z</updated>
    <id>tag:github.com,2024-09-15:/lucidrains/alphafold3-pytorch</id>
    <link href="https://github.com/lucidrains/alphafold3-pytorch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implementation of Alphafold 3 in Pytorch&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lucidrains/alphafold3-pytorch/main/alphafold3.png&#34; width=&#34;500px&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Alphafold 3 - Pytorch&lt;/h2&gt; &#xA;&lt;p&gt;Implementation of &lt;a href=&#34;https://www.nature.com/articles/s41586-024-07487-w&#34;&gt;Alphafold 3&lt;/a&gt; in Pytorch&lt;/p&gt; &#xA;&lt;p&gt;You can chat with other researchers about this work &lt;a href=&#34;https://discord.gg/Xsq4WaBR9S&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=qjFgthkKxcA&#34;&gt;Review of the paper&lt;/a&gt; by &lt;a href=&#34;https://x.com/sokrypton&#34;&gt;Sergey&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://elanapearl.github.io/blog/2024/the-illustrated-alphafold/&#34;&gt;Illustrated guide&lt;/a&gt; by &lt;a href=&#34;https://elanapearl.github.io/&#34;&gt;Elana P. Simon&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=AE35XCN5NuU&#34;&gt;Talk by Max Jaderberg&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A fork with full Lightning + Hydra support is being maintained by &lt;a href=&#34;https://github.com/amorehead&#34;&gt;Alex&lt;/a&gt; at &lt;a href=&#34;https://github.com/amorehead/alphafold3-pytorch-lightning-hydra&#34;&gt;this repository&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A visualization of the molecules of life used in the repository can be seen and interacted with &lt;a href=&#34;https://colab.research.google.com/drive/1S9TD8WmS1Gjgwjo9xyEYTbdxgMVVZcQe?usp=sharing&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Appreciation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/joseph-c-kim&#34;&gt;Joseph&lt;/a&gt; for contributing the Relative Positional Encoding and the Smooth LDDT Loss!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/engelberger&#34;&gt;Felipe&lt;/a&gt; for contributing Weighted Rigid Align, Express Coordinates In Frame, Compute Alignment Error, and Centre Random Augmentation modules!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/amorehead&#34;&gt;Alex&lt;/a&gt; for fixing various issues in the transcribed algorithms&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gitabtion&#34;&gt;Heng&lt;/a&gt; for pointing out inconsistencies with the paper and pull requesting the solutions&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gitabtion&#34;&gt;Heng&lt;/a&gt; for finding an issue with the molecular atom indices for the distogram loss&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/luwei0917&#34;&gt;Wei Lu&lt;/a&gt; for catching a few erroneous hyperparameters&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/amorehead&#34;&gt;Alex&lt;/a&gt; for the PDB dataset preparation script!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/milot-mirdita&#34;&gt;Milot&lt;/a&gt; for optimizing the PDB dataset clustering script!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/amorehead&#34;&gt;Alex&lt;/a&gt; for basically writing the entire gargantuan flow from parsing the PDB all the way to the molecule and atomic inputs for training&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/vandrw&#34;&gt;Andrei&lt;/a&gt; for working on the weighted PDB dataset sampling!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tanjimin&#34;&gt;Jimin&lt;/a&gt; for submitting a small fix to an issue with the coordinates being passed into &lt;code&gt;WeightedRigidAlign&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/xluo233&#34;&gt;@xluo233&lt;/a&gt; for contributing the confidence measures, clash penalty ranking, and sample ranking logic!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sj900&#34;&gt;sj900&lt;/a&gt; for integrating and testing the &lt;code&gt;WeightedPDBSampler&lt;/code&gt; within the &lt;code&gt;PDBDataset&lt;/code&gt; and for adding initial support for MSA and template parsing!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/xluo233&#34;&gt;@xluo233&lt;/a&gt; again for contributing the logic for computing the model selection score as well as the unresolved rasa!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wufandi&#34;&gt;Fandi&lt;/a&gt; for discovering a few inconsistencies in the elucidated atom diffusion module with the supplementary&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ptosco&#34;&gt;Paolo&lt;/a&gt; for proposing the &lt;code&gt;PDB neutral stable molecule&lt;/code&gt; hypothesis!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dhuvik&#34;&gt;Dhuvi&lt;/a&gt; for fixing a bug related to metal ion molecule ID assignment for &lt;code&gt;Alphafold3Inputs&lt;/code&gt;!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tom (from the Discord channel) for identifying a discrepancy between this codebase&#39;s distogram and template unit vector computations and those of OpenFold (and &lt;a href=&#34;https://github.com/vandrw&#34;&gt;Andrei&lt;/a&gt; for helping address the distogram issue)!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Kaihui-Cheng&#34;&gt;Kaihui&lt;/a&gt; for identifying a bug in how non-standard atoms were handled in polymer residues!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/vandrw&#34;&gt;Andrei&lt;/a&gt; for taking on the gradio frontend interface!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/patrick-kidger&#34;&gt;Patrick&lt;/a&gt; for &lt;a href=&#34;https://docs.kidger.site/jaxtyping/&#34;&gt;jaxtyping&lt;/a&gt;, &lt;a href=&#34;https://github.com/fferflo&#34;&gt;Florian&lt;/a&gt; for &lt;a href=&#34;https://github.com/fferflo/einx&#34;&gt;einx&lt;/a&gt;, and of course, &lt;a href=&#34;https://github.com/arogozhnikov&#34;&gt;Alex&lt;/a&gt; for &lt;a href=&#34;https://einops.rocks/&#34;&gt;einops&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Soumith and the Pytorch organization for giving me the opportunity to open source this work&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pip install alphafold3-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from alphafold3_pytorch import Alphafold3&#xA;from alphafold3_pytorch.utils.model_utils import exclusive_cumsum&#xA;&#xA;alphafold3 = Alphafold3(&#xA;    dim_atom_inputs = 77,&#xA;    dim_template_feats = 108&#xA;)&#xA;&#xA;# mock inputs&#xA;&#xA;seq_len = 16&#xA;&#xA;molecule_atom_indices = torch.randint(0, 2, (2, seq_len)).long()&#xA;molecule_atom_lens = torch.full((2, seq_len), 2).long()&#xA;&#xA;atom_seq_len = molecule_atom_lens.sum(dim=-1).amax()&#xA;atom_offsets = exclusive_cumsum(molecule_atom_lens)&#xA;&#xA;atom_inputs = torch.randn(2, atom_seq_len, 77)&#xA;atompair_inputs = torch.randn(2, atom_seq_len, atom_seq_len, 5)&#xA;&#xA;additional_molecule_feats = torch.randint(0, 2, (2, seq_len, 5))&#xA;additional_token_feats = torch.randn(2, seq_len, 33)&#xA;is_molecule_types = torch.randint(0, 2, (2, seq_len, 5)).bool()&#xA;is_molecule_mod = torch.randint(0, 2, (2, seq_len, 4)).bool()&#xA;molecule_ids = torch.randint(0, 32, (2, seq_len))&#xA;&#xA;template_feats = torch.randn(2, 2, seq_len, seq_len, 108)&#xA;template_mask = torch.ones((2, 2)).bool()&#xA;&#xA;msa = torch.randn(2, 7, seq_len, 32)&#xA;msa_mask = torch.ones((2, 7)).bool()&#xA;&#xA;additional_msa_feats = torch.randn(2, 7, seq_len, 2)&#xA;&#xA;# required for training, but omitted on inference&#xA;&#xA;atom_pos = torch.randn(2, atom_seq_len, 3)&#xA;&#xA;distogram_atom_indices = molecule_atom_lens - 1&#xA;&#xA;distance_labels = torch.randint(0, 37, (2, seq_len, seq_len))&#xA;resolved_labels = torch.randint(0, 2, (2, atom_seq_len))&#xA;&#xA;# offset indices correctly&#xA;&#xA;distogram_atom_indices += atom_offsets&#xA;molecule_atom_indices += atom_offsets&#xA;&#xA;# train&#xA;&#xA;loss = alphafold3(&#xA;    num_recycling_steps = 2,&#xA;    atom_inputs = atom_inputs,&#xA;    atompair_inputs = atompair_inputs,&#xA;    molecule_ids = molecule_ids,&#xA;    molecule_atom_lens = molecule_atom_lens,&#xA;    additional_molecule_feats = additional_molecule_feats,&#xA;    additional_msa_feats = additional_msa_feats,&#xA;    additional_token_feats = additional_token_feats,&#xA;    is_molecule_types = is_molecule_types,&#xA;    is_molecule_mod = is_molecule_mod,&#xA;    msa = msa,&#xA;    msa_mask = msa_mask,&#xA;    templates = template_feats,&#xA;    template_mask = template_mask,&#xA;    atom_pos = atom_pos,&#xA;    distogram_atom_indices = distogram_atom_indices,&#xA;    molecule_atom_indices = molecule_atom_indices,&#xA;    distance_labels = distance_labels,&#xA;    resolved_labels = resolved_labels&#xA;)&#xA;&#xA;loss.backward()&#xA;&#xA;# after much training ...&#xA;&#xA;sampled_atom_pos = alphafold3(&#xA;    num_recycling_steps = 4,&#xA;    num_sample_steps = 16,&#xA;    atom_inputs = atom_inputs,&#xA;    atompair_inputs = atompair_inputs,&#xA;    molecule_ids = molecule_ids,&#xA;    molecule_atom_lens = molecule_atom_lens,&#xA;    additional_molecule_feats = additional_molecule_feats,&#xA;    additional_msa_feats = additional_msa_feats,&#xA;    additional_token_feats = additional_token_feats,&#xA;    is_molecule_types = is_molecule_types,&#xA;    is_molecule_mod = is_molecule_mod,&#xA;    msa = msa,&#xA;    msa_mask = msa_mask,&#xA;    templates = template_feats,&#xA;    template_mask = template_mask&#xA;)&#xA;&#xA;sampled_atom_pos.shape # (2, &amp;lt;atom_seqlen&amp;gt;, 3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;An example with molecule level input handling&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from alphafold3_pytorch import Alphafold3, Alphafold3Input&#xA;&#xA;contrived_protein = &#39;AG&#39;&#xA;&#xA;mock_atompos = [&#xA;    torch.randn(5, 3),   # alanine has 5 non-hydrogen atoms&#xA;    torch.randn(4, 3)    # glycine has 4 non-hydrogen atoms&#xA;]&#xA;&#xA;train_alphafold3_input = Alphafold3Input(&#xA;    proteins = [contrived_protein],&#xA;    atom_pos = mock_atompos&#xA;)&#xA;&#xA;eval_alphafold3_input = Alphafold3Input(&#xA;    proteins = [contrived_protein]&#xA;)&#xA;&#xA;# training&#xA;&#xA;alphafold3 = Alphafold3(&#xA;    dim_atom_inputs = 3,&#xA;    dim_atompair_inputs = 5,&#xA;    atoms_per_window = 27,&#xA;    dim_template_feats = 108,&#xA;    num_molecule_mods = 0,&#xA;    confidence_head_kwargs = dict(&#xA;        pairformer_depth = 1&#xA;    ),&#xA;    template_embedder_kwargs = dict(&#xA;        pairformer_stack_depth = 1&#xA;    ),&#xA;    msa_module_kwargs = dict(&#xA;        depth = 1&#xA;    ),&#xA;    pairformer_stack = dict(&#xA;        depth = 2&#xA;    ),&#xA;    diffusion_module_kwargs = dict(&#xA;        atom_encoder_depth = 1,&#xA;        token_transformer_depth = 1,&#xA;        atom_decoder_depth = 1,&#xA;    )&#xA;)&#xA;&#xA;loss = alphafold3.forward_with_alphafold3_inputs([train_alphafold3_input])&#xA;loss.backward()&#xA;&#xA;# sampling&#xA;&#xA;alphafold3.eval()&#xA;sampled_atom_pos = alphafold3.forward_with_alphafold3_inputs(eval_alphafold3_input)&#xA;&#xA;assert sampled_atom_pos.shape == (1, (5 + 4), 3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Data preparation&lt;/h2&gt; &#xA;&lt;h3&gt;PDB dataset curation&lt;/h3&gt; &#xA;&lt;p&gt;To acquire the AlphaFold 3 PDB dataset, first download all first-assembly (and asymmetric unit) complexes in the Protein Data Bank (PDB), and then preprocess them with the script referenced below. The PDB can be downloaded from the RCSB: &lt;a href=&#34;https://www.wwpdb.org/ftp/pdb-ftp-sites#rcsbpdb&#34;&gt;https://www.wwpdb.org/ftp/pdb-ftp-sites#rcsbpdb&lt;/a&gt;. The two Python scripts below (i.e., &lt;code&gt;filter_pdb_{train,val,test}_mmcifs.py&lt;/code&gt; and &lt;code&gt;cluster_pdb_{train,val,test}_mmcifs.py&lt;/code&gt;) assume you have downloaded the PDB in the &lt;strong&gt;mmCIF file format&lt;/strong&gt;, placing its first-assembly and asymmetric unit mmCIF files at &lt;code&gt;data/pdb_data/unfiltered_assembly_mmcifs/&lt;/code&gt; and &lt;code&gt;data/pdb_data/unfiltered_asym_mmcifs/&lt;/code&gt;, respectively.&lt;/p&gt; &#xA;&lt;p&gt;For reproducibility, we recommend downloading the PDB using AWS snapshots (e.g., &lt;code&gt;20240101&lt;/code&gt;). To do so, refer to &lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-welcome.html&#34;&gt;AWS&#39;s documentation&lt;/a&gt; to set up the AWS CLI locally. Alternatively, on the RCSB website, navigate down to &#34;Download Protocols&#34;, and follow the download instructions depending on your location.&lt;/p&gt; &#xA;&lt;p&gt;For example, one can use the following commands to download the PDB as two collections of mmCIF files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# For `assembly1` complexes, use the PDB&#39;s `20240101` AWS snapshot:&#xA;aws s3 sync s3://pdbsnapshots/20240101/pub/pdb/data/assemblies/mmCIF/divided/ ./data/pdb_data/unfiltered_assembly_mmcifs&#xA;# Or as a fallback, use rsync:&#xA;rsync -rlpt -v -z --delete --port=33444 \&#xA;rsync.rcsb.org::ftp_data/assemblies/mmCIF/divided/ ./data/pdb_data/unfiltered_assembly_mmcifs/&#xA;&#xA;# For asymmetric unit complexes, also use the PDB&#39;s `20240101` AWS snapshot:&#xA;aws s3 sync s3://pdbsnapshots/20240101/pub/pdb/data/structures/divided/mmCIF/ ./data/pdb_data/unfiltered_asym_mmcifs&#xA;# Or as a fallback, use rsync:&#xA;rsync -rlpt -v -z --delete --port=33444 \&#xA;rsync.rcsb.org::ftp_data/structures/divided/mmCIF/ ./data/pdb_data/unfiltered_asym_mmcifs/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;WARNING: Downloading the PDB can take up to 700GB of space.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: The PDB hosts all available AWS snapshots here: &lt;a href=&#34;https://pdbsnapshots.s3.us-west-2.amazonaws.com/index.html&#34;&gt;https://pdbsnapshots.s3.us-west-2.amazonaws.com/index.html&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;After downloading, you should have two directories formatted like this: &lt;a href=&#34;https://files.rcsb.org/pub/pdb/data/assemblies/mmCIF/divided/&#34;&gt;https://files.rcsb.org/pub/pdb/data/assemblies/mmCIF/divided/&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://files.rcsb.org/pub/pdb/data/structures/divided/mmCIF/&#34;&gt;https://files.rcsb.org/pub/pdb/data/structures/divided/mmCIF/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;00/&#xA;01/&#xA;02/&#xA;..&#xA;zz/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For these directories, unzip all the files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;find ./data/pdb_data/unfiltered_assembly_mmcifs/ -type f -name &#34;*.gz&#34; -exec gzip -d {} \;&#xA;find ./data/pdb_data/unfiltered_asym_mmcifs/ -type f -name &#34;*.gz&#34; -exec gzip -d {} \;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next run the commands&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -P ./data/ccd_data/ https://files.wwpdb.org/pub/pdb/data/monomers/components.cif.gz&#xA;wget -P ./data/ccd_data/ https://files.wwpdb.org/pub/pdb/data/component-models/complete/chem_comp_model.cif.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;from the project&#39;s root directory to download the latest version of the PDB&#39;s Chemical Component Dictionary (CCD) and its structural models. Extract each of these files using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;find data/ccd_data/ -type f -name &#34;*.gz&#34; -exec gzip -d {} \;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;PDB dataset filtering&lt;/h3&gt; &#xA;&lt;p&gt;Then run the following with &lt;code&gt;pdb_assembly_dir&lt;/code&gt;, &lt;code&gt;pdb_asym_dir&lt;/code&gt;, &lt;code&gt;ccd_dir&lt;/code&gt;, and &lt;code&gt;mmcif_output_dir&lt;/code&gt; replaced with the locations of your local copies of the first-assembly PDB, asymmetric unit PDB, CCD, and your desired dataset output directory (i.e., &lt;code&gt;./data/pdb_data/unfiltered_assembly_mmcifs/&lt;/code&gt;, &lt;code&gt;./data/pdb_data/unfiltered_asym_mmcifs/&lt;/code&gt;, &lt;code&gt;./data/ccd_data/&lt;/code&gt;, and &lt;code&gt;./data/pdb_data/{train,val,test}_mmcifs/&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/filter_pdb_train_mmcifs.py --mmcif_assembly_dir &amp;lt;pdb_assembly_dir&amp;gt; --mmcif_asym_dir &amp;lt;pdb_asym_dir&amp;gt; --ccd_dir &amp;lt;ccd_dir&amp;gt; --output_dir &amp;lt;mmcif_output_dir&amp;gt;&#xA;python scripts/filter_pdb_val_mmcifs.py --mmcif_assembly_dir &amp;lt;pdb_assembly_dir&amp;gt; --mmcif_asym_dir &amp;lt;pdb_asym_dir&amp;gt; --output_dir &amp;lt;mmcif_output_dir&amp;gt;&#xA;python scripts/filter_pdb_test_mmcifs.py --mmcif_assembly_dir &amp;lt;pdb_assembly_dir&amp;gt; --mmcif_asym_dir &amp;lt;pdb_asym_dir&amp;gt; --output_dir &amp;lt;mmcif_output_dir&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the scripts for more options. Each first-assembly mmCIF that successfully passes all processing steps will be written to &lt;code&gt;mmcif_output_dir&lt;/code&gt; within a subdirectory named according to the mmCIF&#39;s second and third PDB ID characters (e.g. &lt;code&gt;5c&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;PDB dataset clustering&lt;/h3&gt; &#xA;&lt;p&gt;Next, run the following with &lt;code&gt;mmcif_dir&lt;/code&gt; and &lt;code&gt;{train,val,test}_clustering_output_dir&lt;/code&gt; replaced, respectively, with your local output directory created using the dataset filtering script above and with your desired clustering output directories (i.e., &lt;code&gt;./data/pdb_data/{train,val,test}_mmcifs/&lt;/code&gt; and &lt;code&gt;./data/pdb_data/data_caches/{train,val,test}_clusterings/&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/cluster_pdb_train_mmcifs.py --mmcif_dir &amp;lt;mmcif_dir&amp;gt; --output_dir &amp;lt;train_clustering_output_dir&amp;gt; --clustering_filtered_pdb_dataset&#xA;python scripts/cluster_pdb_val_mmcifs.py --mmcif_dir &amp;lt;mmcif_dir&amp;gt; --reference_clustering_dir &amp;lt;train_clustering_output_dir&amp;gt; --output_dir &amp;lt;val_clustering_output_dir&amp;gt; --clustering_filtered_pdb_dataset&#xA;python scripts/cluster_pdb_test_mmcifs.py --mmcif_dir &amp;lt;mmcif_dir&amp;gt; --reference_1_clustering_dir &amp;lt;train_clustering_output_dir&amp;gt; --reference_2_clustering_dir &amp;lt;val_clustering_output_dir&amp;gt; --output_dir &amp;lt;test_clustering_output_dir&amp;gt; --clustering_filtered_pdb_dataset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;--clustering_filtered_pdb_dataset&lt;/code&gt; flag is recommended when clustering the filtered PDB dataset as curated using the scripts above, as this flag will enable faster runtimes in this context (since filtering leaves each chain&#39;s residue IDs 1-based). However, this flag must &lt;strong&gt;not&lt;/strong&gt; be provided when clustering other (i.e., non-PDB) datasets of mmCIF files. Otherwise, interface clustering may be performed incorrectly, as these datasets&#39; mmCIF files may not use strict 1-based residue indexing for each chain.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: One can instead download preprocessed (i.e., filtered) mmCIF (&lt;code&gt;train&lt;/code&gt;/&lt;code&gt;val&lt;/code&gt;/&lt;code&gt;test&lt;/code&gt;) files (~25GB, comprising 148k complexes) and chain/interface clustering (&lt;code&gt;train&lt;/code&gt;/&lt;code&gt;val&lt;/code&gt;/&lt;code&gt;test&lt;/code&gt;) files (~3GB) for the PDB&#39;s &lt;code&gt;20240101&lt;/code&gt; AWS snapshot via a &lt;a href=&#34;https://mailmissouri-my.sharepoint.com/:f:/g/personal/acmwhb_umsystem_edu/EqU8tjUmmKxJr-FAlq4tzaIBi2TIBtmw5Vl3k_kmgNlepA?e=mzlyv6&#34;&gt;shared OneDrive folder&lt;/a&gt;. Each of these &lt;code&gt;tar.gz&lt;/code&gt; archives should be decompressed within the &lt;code&gt;data/pdb_data/&lt;/code&gt; directory e.g., via &lt;code&gt;tar -xzf data_caches.tar.gz -C data/pdb_data/&lt;/code&gt;. Moreover, mappings of UniProt accession IDs to taxonomic IDs for MSA pairing can be downloaded and extracted via the commands &lt;code&gt;wget https://colabfold.steineggerlab.workers.dev/af3/uniref30_2202_accession_mapping.tsv.gz -P data/pdb_data/data_caches/&lt;/code&gt; and &lt;code&gt;gunzip data/pdb_data/data_caches/uniref30_2202_accession_mapping.tsv.gz&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;At the project root, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sh ./contribute.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, add your module to &lt;code&gt;alphafold3_pytorch/alphafold3.py&lt;/code&gt;, add your tests to &lt;code&gt;tests/test_af3.py&lt;/code&gt;, and submit a pull request. You can run the tests locally with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pytest tests/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Image&lt;/h2&gt; &#xA;&lt;p&gt;The included &lt;code&gt;Dockerfile&lt;/code&gt; contains the required dependencies to run the package and to train/inference using PyTorch with GPUs.&lt;/p&gt; &#xA;&lt;p&gt;The default base image is &lt;code&gt;pytorch/pytorch:2.3.0-cuda12.1-cudnn8-runtime&lt;/code&gt; and installs the latest version of this package from the &lt;code&gt;main&lt;/code&gt; GitHub branch.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;## Build Docker Container&#xA;docker build -t af3 .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, use build arguments to rebuild the image with different software versions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;PYTORCH_TAG&lt;/code&gt;: Changes the base image and thus builds with different PyTorch, CUDA, and/or cuDNN versions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GIT_TAG&lt;/code&gt;: Changes the tag of this repo to clone and install the package.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;## Use build argument to change versions&#xA;docker build --build-arg &#34;PYTORCH_TAG=2.2.1-cuda12.1-cudnn8-devel&#34; --build-arg &#34;GIT_TAG=0.1.15&#34; -t af3 .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, run the container with GPUs and mount a local volume (for training) using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;## Run Container&#xA;docker run -v .:/data --gpus all -it af3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Citations&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{Abramson2024-fj,&#xA;  title    = &#34;Accurate structure prediction of biomolecular interactions with&#xA;              {AlphaFold} 3&#34;,&#xA;  author   = &#34;Abramson, Josh and Adler, Jonas and Dunger, Jack and Evans,&#xA;              Richard and Green, Tim and Pritzel, Alexander and Ronneberger,&#xA;              Olaf and Willmore, Lindsay and Ballard, Andrew J and Bambrick,&#xA;              Joshua and Bodenstein, Sebastian W and Evans, David A and Hung,&#xA;              Chia-Chun and O&#39;Neill, Michael and Reiman, David and&#xA;              Tunyasuvunakool, Kathryn and Wu, Zachary and {\v Z}emgulyt{\.e},&#xA;              Akvil{\.e} and Arvaniti, Eirini and Beattie, Charles and&#xA;              Bertolli, Ottavia and Bridgland, Alex and Cherepanov, Alexey and&#xA;              Congreve, Miles and Cowen-Rivers, Alexander I and Cowie, Andrew&#xA;              and Figurnov, Michael and Fuchs, Fabian B and Gladman, Hannah and&#xA;              Jain, Rishub and Khan, Yousuf A and Low, Caroline M R and Perlin,&#xA;              Kuba and Potapenko, Anna and Savy, Pascal and Singh, Sukhdeep and&#xA;              Stecula, Adrian and Thillaisundaram, Ashok and Tong, Catherine&#xA;              and Yakneen, Sergei and Zhong, Ellen D and Zielinski, Michal and&#xA;              {\v Z}{\&#39;\i}dek, Augustin and Bapst, Victor and Kohli, Pushmeet&#xA;              and Jaderberg, Max and Hassabis, Demis and Jumper, John M&#34;,&#xA;  journal  = &#34;Nature&#34;,&#xA;  month    = &#34;May&#34;,&#xA;  year     =  2024&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{Darcet2023VisionTN,&#xA;    title   = {Vision Transformers Need Registers},&#xA;    author  = {Timoth&#39;ee Darcet and Maxime Oquab and Julien Mairal and Piotr Bojanowski},&#xA;    year    = {2023},&#xA;    url     = {https://api.semanticscholar.org/CorpusID:263134283}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{Arora2024SimpleLA,&#xA;    title   = {Simple linear attention language models balance the recall-throughput tradeoff},&#xA;    author  = {Simran Arora and Sabri Eyuboglu and Michael Zhang and Aman Timalsina and Silas Alberti and Dylan Zinsley and James Zou and Atri Rudra and Christopher R&#39;e},&#xA;    journal = {ArXiv},&#xA;    year    = {2024},&#xA;    volume  = {abs/2402.18668},&#xA;    url     = {https://api.semanticscholar.org/CorpusID:268063190}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{Puny2021FrameAF,&#xA;    title   = {Frame Averaging for Invariant and Equivariant Network Design},&#xA;    author  = {Omri Puny and Matan Atzmon and Heli Ben-Hamu and Edward James Smith and Ishan Misra and Aditya Grover and Yaron Lipman},&#xA;    journal = {ArXiv},&#xA;    year    = {2021},&#xA;    volume  = {abs/2110.03336},&#xA;    url     = {https://api.semanticscholar.org/CorpusID:238419638}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{Duval2023FAENetFA,&#xA;    title   = {FAENet: Frame Averaging Equivariant GNN for Materials Modeling},&#xA;    author  = {Alexandre Duval and Victor Schmidt and Alex Hernandez Garcia and Santiago Miret and Fragkiskos D. Malliaros and Yoshua Bengio and David Rolnick},&#xA;    journal = {ArXiv},&#xA;    year    = {2023},&#xA;    volume  = {abs/2305.05577},&#xA;    url     = {https://api.semanticscholar.org/CorpusID:258564608}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{Wang2022DeepNetST,&#xA;    title   = {DeepNet: Scaling Transformers to 1, 000 Layers},&#xA;    author  = {Hongyu Wang and Shuming Ma and Li Dong and Shaohan Huang and Dongdong Zhang and Furu Wei},&#xA;    journal = {ArXiv},&#xA;    year    = {2022},&#xA;    volume  = {abs/2203.00555},&#xA;    url     = {https://api.semanticscholar.org/CorpusID:247187905}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{Ainslie2023CoLT5FL,&#xA;    title   = {CoLT5: Faster Long-Range Transformers with Conditional Computation},&#xA;    author  = {Joshua Ainslie and Tao Lei and Michiel de Jong and Santiago Ontan&#39;on and Siddhartha Brahma and Yury Zemlyanskiy and David Uthus and Mandy Guo and James Lee-Thorp and Yi Tay and Yun-Hsuan Sung and Sumit Sanghai},&#xA;    year    = {2023}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{Ash2019OnTD,&#xA;    title   = {On the Difficulty of Warm-Starting Neural Network Training},&#xA;    author  = {Jordan T. Ash and Ryan P. Adams},&#xA;    journal = {ArXiv},&#xA;    year    = {2019},&#xA;    volume  = {abs/1910.08475},&#xA;    url     = {https://api.semanticscholar.org/CorpusID:204788802}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@ARTICLE{Heinzinger2023.07.23.550085,&#xA;    author  = {Michael Heinzinger and Konstantin Weissenow and Joaquin Gomez Sanchez and Adrian Henkel and Martin Steinegger and Burkhard Rost},&#xA;    title   = {ProstT5: Bilingual Language Model for Protein Sequence and Structure},&#xA;    year    = {2023},&#xA;    doi     = {10.1101/2023.07.23.550085},&#xA;    journal = {bioRxiv}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article {Lin2022.07.20.500902,&#xA;    author  = {Lin, Zeming and Akin, Halil and Rao, Roshan and Hie, Brian and Zhu, Zhongkai and Lu, Wenting and Santos Costa, Allan dos and Fazel-Zarandi, Maryam and Sercu, Tom and Candido, Sal and Rives, Alexander},&#xA;    title   = {Language models of protein sequences at the scale of evolution enable accurate structure prediction},&#xA;    elocation-id = {2022.07.20.500902},&#xA;    year    = {2022},&#xA;    doi     = {10.1101/2022.07.20.500902},&#xA;    publisher = {Cold Spring Harbor Laboratory},&#xA;    URL     = {https://www.biorxiv.org/content/early/2022/07/21/2022.07.20.500902},&#xA;    eprint  = {https://www.biorxiv.org/content/early/2022/07/21/2022.07.20.500902.full.pdf},&#xA;    journal = {bioRxiv}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Avaiga/taipy</title>
    <updated>2024-09-15T01:49:26Z</updated>
    <id>tag:github.com,2024-09-15:/Avaiga/taipy</id>
    <link href="https://github.com/Avaiga/taipy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Turns Data and AI algorithms into production-ready web applications in no time.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://taipy.io?utm_source=github&#34; target=&#34;_blank&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://github.com/Avaiga/taipy/assets/100117126/509bf101-54c2-4321-adaf-a2af63af9682&#34;&gt; &#xA;   &lt;img alt=&#34;Taipy&#34; src=&#34;https://github.com/Avaiga/taipy/assets/100117126/4df8a733-d8d0-4893-acf0-d24ef9e8b58a&#34; width=&#34;400&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; Build Python Data &amp;amp; AI web applications &lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA;  From simple pilots to production-ready web applications in no time. &#xA; &lt;br&gt; No more compromise on performance, customization, and scalability. &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;strong&gt;Go beyond existing libraries&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://docs.taipy.io/en/latest/&#34;&gt;&lt;strong&gt;📚 Explore the docs &lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://discord.com/invite/SJyz2VJGxV&#34;&gt;&lt;strong&gt; 🫱🏼‍🫲🏼 Discord support &lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://docs.taipy.io/en/latest/gallery/&#34;&gt;&lt;strong&gt; 👀 Demos &amp;amp; Examples &lt;/strong&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;⭐️ What&#39;s Taipy?&lt;/h2&gt; &#xA;&lt;p&gt;Taipy is designed for data scientists and machine learning engineers to build data &amp;amp; AI web applications. &amp;nbsp;&lt;/p&gt; &#xA;&lt;p&gt;⭐️ Enables building production-ready web applications. &lt;br&gt; ⭐️ No need to learn new languages. Only Python is needed.&lt;br&gt; ⭐️ Concentrate on Data and AI algorithms without development and deployment complexities.&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h4 align=&#34;left&#34;&gt; Taipy is a Two-in-One Tool for UI Generation and Scenario/Data Management &lt;/h4&gt; &#xA;&lt;br&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;User Interface Generation&lt;/th&gt; &#xA;   &lt;th&gt;Scenario and Data Management&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Avaiga/taipy/develop/readme_img/taipy_github_GUI_video.gif&#34; alt=&#34;Interface Animation&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Avaiga/taipy/develop/readme_img/taipy_github_scenarios_video.gif&#34; alt=&#34;Back-End Animation&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;✨ Key Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Avaiga/taipy/develop/readme_img/taipy_github_scenario.png&#34; alt=&#34;Scenario Banner&#34; width=&#34;49%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Avaiga/taipy/develop/readme_img/taipy-github-optimized.png&#34; alt=&#34;Back-End Animation&#34; width=&#34;49.7%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Avaiga/taipy/develop/readme_img/taipy_github_data_support.png&#34; alt=&#34;Back-End Animation&#34; width=&#34;49.7%&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;⚙️ Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;To install Taipy stable release run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install taipy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install Taipy on a Conda Environment or from source, please refer to the &lt;a href=&#34;https://docs.taipy.io/en/latest/installation/&#34;&gt;Installation Guide&lt;/a&gt;.&lt;br&gt; To get started with Taipy, please refer to the &lt;a href=&#34;https://docs.taipy.io/en/latest/getting_started/&#34;&gt;Getting Started Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;🔌 Scenario and Data Management&lt;/h2&gt; &#xA;&lt;p&gt;Let&#39;s create a scenario in Taipy that allows you to filter movie data based on your chosen genre.&lt;br&gt; This scenario is designed as a straightforward pipeline.&lt;br&gt; Every time you change your genre selection, the scenario runs to process your request.&lt;br&gt; It then displays the top seven most popular movies in that genre.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠️ Keep in mind, in this example, we&#39;re using a very basic pipeline that consists of just one task. However,&lt;br&gt; Taipy is capable of handling much more complex pipelines 🚀&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Below is our filter function. This is a typical Python function and it&#39;s the only task used in this scenario.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def filter_genre(initial_dataset: pd.DataFrame, selected_genre):&#xA;    filtered_dataset = initial_dataset[initial_dataset[&#39;genres&#39;].str.contains(selected_genre)]&#xA;    filtered_data = filtered_dataset.nlargest(7, &#39;Popularity %&#39;)&#xA;    return filtered_data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is the execution graph of the scenario we are implementing&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/Avaiga/taipy/raw/develop/readme_img/readme_exec_graph.png&#34; width=&#34;600&#34; align=&#34;center&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Taipy Studio&lt;/h3&gt; &#xA;&lt;p&gt;You can use the Taipy Studio extension in Visual Studio Code to configure your scenario with no code&lt;br&gt; Your configuration is automatically saved as a TOML file.&lt;br&gt; Check out Taipy Studio &lt;a href=&#34;https://docs.taipy.io/en/latest/manuals/studio/&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more advanced use cases or if you prefer coding your configurations instead of using Taipy Studio,&lt;br&gt; Check out the movie genre demo scenario creation with this &lt;a href=&#34;https://docs.taipy.io/en/latest/gallery/other/movie_genre_selector/&#34;&gt;Demo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Avaiga/taipy/raw/develop/readme_img/readme_demo_studio.gif&#34; alt=&#34;TaipyStudio&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;User Interface Generation and Scenario &amp;amp; Data Management&lt;/h2&gt; &#xA;&lt;p&gt;This simple Taipy application demonstrates how to create a basic film recommendation system using Taipy.&lt;br&gt; The application filters a dataset of films based on the user&#39;s selected genre and displays the top seven films in that genre by popularity. Here is the full code for both the frontend and backend of the application.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import taipy as tp&#xA;import pandas as pd&#xA;from taipy import Config, Scope, Gui&#xA;&#xA;# Defining the helper functions&#xA;&#xA;# Callback definition - submits scenario with genre selection&#xA;def on_genre_selected(state):&#xA;    scenario.selected_genre_node.write(state.selected_genre)&#xA;    tp.submit(scenario)&#xA;    state.df = scenario.filtered_data.read()&#xA;&#xA;## Set initial value to Action&#xA;def on_init(state):&#xA;    on_genre_selected(state)&#xA;&#xA;# Filtering function - task&#xA;def filter_genre(initial_dataset: pd.DataFrame, selected_genre):&#xA;    filtered_dataset = initial_dataset[initial_dataset[&#34;genres&#34;].str.contains(selected_genre)]&#xA;    filtered_data = filtered_dataset.nlargest(7, &#34;Popularity %&#34;)&#xA;    return filtered_data&#xA;&#xA;# The main script&#xA;if __name__ == &#34;__main__&#34;:&#xA;    # Taipy Scenario &amp;amp; Data Management&#xA;&#xA;    # Load the configuration made with Taipy Studio&#xA;    Config.load(&#34;config.toml&#34;)&#xA;    scenario_cfg = Config.scenarios[&#34;scenario&#34;]&#xA;&#xA;    # Start Taipy Orchestrator&#xA;    tp.Orchestrator().run()&#xA;&#xA;    # Create a scenario&#xA;    scenario = tp.create_scenario(scenario_cfg)&#xA;&#xA;    # Taipy User Interface&#xA;    # Let&#39;s add a GUI to our Scenario Management for a full application&#xA;&#xA;    # Get list of genres&#xA;    genres = [&#xA;        &#34;Action&#34;, &#34;Adventure&#34;, &#34;Animation&#34;, &#34;Children&#34;, &#34;Comedy&#34;, &#34;Fantasy&#34;, &#34;IMAX&#34;&#xA;        &#34;Romance&#34;,&#34;Sci-FI&#34;, &#34;Western&#34;, &#34;Crime&#34;, &#34;Mystery&#34;, &#34;Drama&#34;, &#34;Horror&#34;, &#34;Thriller&#34;, &#34;Film-Noir&#34;,&#34;War&#34;, &#34;Musical&#34;, &#34;Documentary&#34;&#xA;    ]&#xA;&#xA;    # Initialization of variables&#xA;    df = pd.DataFrame(columns=[&#34;Title&#34;, &#34;Popularity %&#34;])&#xA;    selected_genre = &#34;Action&#34;&#xA;&#xA;    # User interface definition&#xA;    my_page = &#34;&#34;&#34;&#xA;# Film recommendation&#xA;&#xA;## Choose your favorite genre&#xA;&amp;lt;|{selected_genre}|selector|lov={genres}|on_change=on_genre_selected|dropdown|&amp;gt;&#xA;&#xA;## Here are the top seven picks by popularity&#xA;&amp;lt;|{df}|chart|x=Title|y=Popularity %|type=bar|title=Film Popularity|&amp;gt;&#xA;    &#34;&#34;&#34;&#xA;&#xA;    Gui(page=my_page).run()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And the final result: &lt;img src=&#34;https://raw.githubusercontent.com/Avaiga/taipy/develop/readme_img/readme_app.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;⚒️ Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Want to help build Taipy? Check out our &lt;a href=&#34;https://github.com/Avaiga/taipy/raw/develop/CONTRIBUTING.md&#34;&gt;&lt;strong&gt;Contributing Guide&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🪄 Code of conduct&lt;/h2&gt; &#xA;&lt;p&gt;Want to be part of the Taipy community? Check out our &lt;strong&gt;&lt;a href=&#34;https://github.com/Avaiga/taipy/raw/develop/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🪪 License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2021-2024 Avaiga Private Limited&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at (Apache License)&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.txt&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
</feed>