<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-01T01:46:37Z</updated>
  <subtitle>Weekly Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zas023/JdBuyer</title>
    <updated>2023-01-01T01:46:37Z</updated>
    <id>tag:github.com,2023-01-01:/zas023/JdBuyer</id>
    <link href="https://github.com/zas023/JdBuyer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;京东抢购自动下单助手，GUI 支持 Windows 和 macOS&lt;/p&gt;&lt;hr&gt;&lt;div id=&#34;top&#34;&gt;&lt;/div&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/zas023/Jdbuyer.svg?style=for-the-badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/zas023/Jdbuyer.svg?style=for-the-badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/zas023/Jdbuyer.svg?style=for-the-badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/platform-windows%20%7C%20macos-green?style=for-the-badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-GLP-important?style=for-the-badge&#34;&gt; &lt;/h1&gt; &#xA;&lt;!-- PROJECT LOGO --&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/PlayCover/PlayCover&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zas023/JdBuyer/main/logo.ico&#34; alt=&#34;Logo&#34; width=&#34;100&#34; height=&#34;100&#34;&gt; &lt;/a&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt;Jd小猪手&lt;/h3&gt; &#xA; &lt;p align=&#34;center&#34;&gt; 一款支持京东自动下单的小工具。 &lt;br&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;1 关于项目&lt;/h2&gt; &#xA;&lt;p&gt;欢迎使用京东小猪手，当您在京东上想要购买的商品无货时，小助手可以帮助您全天候监听商品库存，并在有货时第一时间自动尝试下单，且下单成功后支持微信通知触达。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zas023/JdBuyer/main/assest/shootscreen.mac.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;📢&lt;strong&gt;注意&lt;/strong&gt;：由于货源有限，监听到货源后并不能保证一定下单成功，只能保证让你和全国黄牛站在同一起跑线上，剩下的交给奇迹。&lt;/p&gt; &#xA;&lt;h3&gt;1.1 ChangeList&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2022-10-29&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;新增预售商品定金下单模式&lt;/li&gt; &#xA; &lt;li&gt;切换库存查询方式（注意控制速度）&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;2 食用教程&lt;/h2&gt; &#xA;&lt;p&gt;目前该项目支持两种 &lt;strong&gt;Shell 脚本&lt;/strong&gt; 和 &lt;strong&gt;GUI 图形界面&lt;/strong&gt; 两种运行模式，目前 Shell 模式支持日志和微信通知，但还需一些额外配置，可根据自身条件选择启动方式。&lt;/p&gt; &#xA;&lt;h3&gt;2.1 Shell 脚本&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;安装运行环境&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;安装第三方库&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install -r requirements.txt&#xA;# or &#xA;pip3 install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;修改配置&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;进入项目目录，找到 &lt;code&gt;config.ini&lt;/code&gt; 文件，按照其中说明修改对于配置。&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;运行脚本&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;修改项目主文件 &lt;code&gt;JdBuyer.py&lt;/code&gt; 最后部分中 &lt;code&gt;skuId&lt;/code&gt; 和 &lt;code&gt;areaId&lt;/code&gt;。 &lt;em&gt;其余参数字请按注释自行选择修改&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;然后运行程序：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python JdBuyer.py&#xA;# or&#xA;python JdBuyer.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.2 GUI 图形界面&lt;/h3&gt; &#xA;&lt;p&gt;目前可支持 windows 和 macos，请到 &lt;a href=&#34;https://github.com/zas023/JdBuyer/releases&#34;&gt;release&lt;/a&gt; 下载对于文件：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;windwos 下载 JdBuyerApp.zip，解压后双击运行其中可执行文件即可；&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;macos 下载 JdBuyerApp.app，下载后直接双击运行即可。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. 如何配置&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;运行程序后，可以看到一共有一下五个配置：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;参数名称&lt;/th&gt; &#xA;   &lt;th&gt;是否必填&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;商品SKU&lt;/td&gt; &#xA;   &lt;td&gt;是&lt;/td&gt; &#xA;   &lt;td&gt;京东商品详情页链接中可以找到,&lt;br&gt;如 &lt;a href=&#34;https://item.jd.com/100015253061.html&#34;&gt;https://item.jd.com/100015253061.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;地区ID&lt;/td&gt; &#xA;   &lt;td&gt;是&lt;/td&gt; &#xA;   &lt;td&gt;下单地址所在的地区,&lt;br&gt;可以在工程 &lt;a href=&#34;https://raw.githubusercontent.com/zas023/JdBuyer/main/area_id&#34;&gt;area_id&lt;/a&gt; 文件夹中找到&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;购买商品数量&lt;/td&gt; &#xA;   &lt;td&gt;是&lt;/td&gt; &#xA;   &lt;td&gt;默认1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;库存查询间隔&lt;/td&gt; &#xA;   &lt;td&gt;是&lt;/td&gt; &#xA;   &lt;td&gt;监听库存的时间间隔，默认3秒&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;支付密码&lt;/td&gt; &#xA;   &lt;td&gt;否&lt;/td&gt; &#xA;   &lt;td&gt;如需使用虚拟资产，如京豆、E卡等&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;注：所有配置均只会保存本地。&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. 如何运行&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;当完成以上配置后，点击【开始】按钮即可，如果当前是未登陆状态，会自动弹出登陆二维码等待你打开京东APP扫码登录，登陆成功后会自动开始执行任务。&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;注：如长时间未登录提示二维码过期，点击【结束】按钮，重新【开始】即可。&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2.3 视频教程&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1pe4y1e7ty&#34;&gt;B站传送门，记得一键三连哦！&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;3 Todo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持扫码登陆&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 登陆状态保活&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 开发图形界面&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;免责声明&lt;/h1&gt; &#xA;&lt;p&gt;本项目所用资源均源自网络，如有侵犯您的权益，请来信告知，将立即予以处理。&lt;/p&gt; &#xA;&lt;p&gt;任何以任何方式查看此项目的人或直接或间接使用该项目任何使用者都应仔细阅读此声明。一旦使用并复制了任何相关脚本或Script项目的规则，则视为您已接受此免责声明。&lt;/p&gt; &#xA;&lt;p&gt;您必须在下载后的24小时内从计算机或手机中完全删除以上内容。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Evil0ctal/Douyin_TikTok_Download_API</title>
    <updated>2023-01-01T01:46:37Z</updated>
    <id>tag:github.com,2023-01-01:/Evil0ctal/Douyin_TikTok_Download_API</id>
    <link href="https://github.com/Evil0ctal/Douyin_TikTok_Download_API" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🚀「Douyin_TikTok_Download_API」是一个开箱即用的高性能异步抖音|TikTok数据爬取工具，支持API调用，在线批量解析及下载。&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://douyin.wtf/&#34; alt=&#34;logo&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Evil0ctal/Douyin_TikTok_Download_API/main/logo/logo192.png&#34; width=&#34;120&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Douyin_TikTok_Download_API(抖音/TikTok API)&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Evil0ctal/Douyin_TikTok_Download_API/main/README.en.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Evil0ctal/Douyin_TikTok_Download_API/main/README.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;🚀「Douyin_TikTok_Download_API」是一个开箱即用的高性能异步&lt;a href=&#34;https://www.douyin.com&#34;&gt;抖音&lt;/a&gt;|&lt;a href=&#34;https://www.tiktok.com&#34;&gt;TikTok&lt;/a&gt;数据爬取工具，支持API调用，在线批量解析及下载。&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Evil0ctal/Douyin_TikTok_Download_API/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square&#34; alt=&#34;Release Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square&#34; alt=&#34;GitHub Star&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square&#34; alt=&#34;GitHub Fork&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/issues?q=is%3Aissue+is%3Aclosed&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square&#34; alt=&#34;GitHub closed issues&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/repo-size/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square&amp;amp;color=3cb371&#34; alt=&#34;GitHub Repo size&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://pypi.org/project/douyin-tiktok-scraper/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/douyin-tiktok-scraper?style=flat-square&amp;amp;color=%23a8e6cf&#34; alt=&#34;PyPI v&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/douyin-tiktok-scraper/#files&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/wheel/douyin-tiktok-scraper?style=flat-square&amp;amp;color=%23dcedc1&#34; alt=&#34;PyPI wheel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/douyin-tiktok-scraper/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/douyin-tiktok-scraper?style=flat-square&amp;amp;color=%23ffd3b6&#34; alt=&#34;PyPI dm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/douyin-tiktok-scraper/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/douyin-tiktok-scraper?color=%23ffaaa5&amp;amp;style=flat-square&#34; alt=&#34;PyPI pyversions&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://api.douyin.wtf/docs&#34;&gt;&lt;img src=&#34;https://img.shields.io/website?down_color=lightgrey&amp;amp;label=API%20Status&amp;amp;down_message=API%20offline&amp;amp;style=flat-square&amp;amp;up_color=%23dfb9ff&amp;amp;up_message=online&amp;amp;url=https%3A%2F%2Fapi.douyin.wtf%2Fdocs&#34; alt=&#34;API status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://api.tikhub.io/docs&#34;&gt;&lt;img src=&#34;https://img.shields.io/website?down_color=lightgrey&amp;amp;label=TikHub-API%20Status&amp;amp;down_message=API%20offline&amp;amp;style=flat-square&amp;amp;up_color=%23dfb9ff&amp;amp;up_message=online&amp;amp;url=https%3A%2F%2Fapi.tikhub.io%2Fdocs&#34; alt=&#34;TikHub-API status&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://afdian.net/@evil0ctal&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E7%88%B1%E5%8F%91%E7%94%B5-evil0ctal-blue.svg?style=flat-square&amp;amp;color=ea4aaa&amp;amp;logo=github-sponsors&#34; alt=&#34;爱发电&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ko-fi.com/evil0ctal&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Kofi-evil0ctal-orange.svg?style=flat-square&amp;amp;logo=kofi&#34; alt=&#34;Kofi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.patreon.com/evil0ctal&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Patreon-evil0ctal-red.svg?style=flat-square&amp;amp;logo=patreon&#34; alt=&#34;Patreon&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;👻介绍&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;🚨如需使用私有服务器运行本项目，请参考部署方式[&lt;a href=&#34;https://raw.githubusercontent.com/Evil0ctal/Douyin_TikTok_Download_API/main/README.md#%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F%E4%BA%8C-docker&#34;&gt;Docker部署&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/Evil0ctal/Douyin_TikTok_Download_API/main/README.md#%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F%E4%B8%80-linux&#34;&gt;一键部署&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;本项目是基于 &lt;a href=&#34;https://github.com/pywebio/PyWebIO&#34;&gt;PyWebIO&lt;/a&gt;，&lt;a href=&#34;https://fastapi.tiangolo.com/&#34;&gt;FastAPI&lt;/a&gt;，&lt;a href=&#34;https://docs.aiohttp.org/&#34;&gt;AIOHTTP&lt;/a&gt;，快速异步的&lt;a href=&#34;https://www.douyin.com/&#34;&gt;抖音&lt;/a&gt;/&lt;a href=&#34;https://www.tiktok.com/&#34;&gt;TikTok&lt;/a&gt;数据爬取工具，并通过Web端实现在线批量解析以及下载无水印视频或图集，数据爬取API，iOS快捷指令无水印下载等功能。你可以自己部署或改造本项目实现更多功能，也可以在你的项目中直接调用&lt;a href=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/raw/Stable/scraper.py&#34;&gt;scraper.py&lt;/a&gt;或安装现有的&lt;a href=&#34;https://pypi.org/project/douyin-tiktok-scraper/&#34;&gt;pip包&lt;/a&gt;作为解析库轻松爬取数据等.....&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;一些简单的运用场景：&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;下载禁止下载的视频，进行数据分析，iOS无水印下载（搭配&lt;a href=&#34;https://apps.apple.com/cn/app/%E5%BF%AB%E6%8D%B7%E6%8C%87%E4%BB%A4/id915249334&#34;&gt;iOS自带的快捷指令APP&lt;/a&gt; 配合本项目API实现应用内下载或读取剪贴板下载）等.....&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🖥公共站点: 我很脆弱...请勿压测(·•᷄ࡇ•᷅ ）&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;TikHub-API:&lt;/strong&gt; 支持&lt;code&gt;Douyin|TikTok&lt;/code&gt;用户主页爬取该作者[主页视频数据(去水印链接, 已点赞视频列表(权限需为公开), 视频评论数据, 背景音乐视频列表数据, 等等...), 详细信息请查看TikHub-API文档，此外TikHub-API对比本项目API在抓取TikTok数据时，TikHub-API速度更快。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;🍔Web APP: &lt;a href=&#34;https://douyin.wtf/&#34;&gt;https://douyin.wtf/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;🍟API Document: &lt;a href=&#34;https://api.douyin.wtf/docs&#34;&gt;https://api.douyin.wtf/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;🌭TikHub API Document: &lt;a href=&#34;https://api.tikhub.io/docs&#34;&gt;https://api.tikhub.io/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;💾iOS Shortcut(快捷指令): &lt;a href=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/discussions/104?sort=top&#34;&gt;Shortcut release&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;📦️桌面端下载器(仓库推荐)：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Johnserf-Seed/TikTokDownload&#34;&gt;Johnserf-Seed/TikTokDownload&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HFrost0/bilix&#34;&gt;HFrost0/bilix&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tairraos/TikDown/&#34;&gt;Tairraos/TikDown - [需更新]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;🛸基于本项目的其他仓库&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TikHubIO/TikHub_API_PyPi&#34;&gt;TikHubIO/TikHub_API_PyPi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Evil0ctal/Douyin_Tiktok_Scraper_PyPi&#34;&gt;Evil0ctal/Douyin_Tiktok_Scraper_PyPi&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⚗️技术栈&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/raw/main/web_app.py&#34;&gt;web_app.py&lt;/a&gt; - &lt;a href=&#34;https://www.pyweb.io/&#34;&gt;PyWebIO&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/raw/main/web_api.py&#34;&gt;web_api.py&lt;/a&gt; - &lt;a href=&#34;https://fastapi.tiangolo.com/&#34;&gt;FastAPI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/raw/main/scraper.py&#34;&gt;scraper.py&lt;/a&gt; - &lt;a href=&#34;https://docs.aiohttp.org/&#34;&gt;AIOHTTP&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;strong&gt;scraper.py:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;向[Douyin|TikTok]的API提交请求并取回数据，处理后返回字典(dict)，支持异步。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;strong&gt;web_api.py:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;获得请求参数并使用&lt;code&gt;Scraper()&lt;/code&gt;类处理数据后以JSON形式返回，视频下载，配合iOS快捷指令实现快速调用，支持异步。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;strong&gt;web_app.py:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;为&lt;code&gt;web_api.py&lt;/code&gt;以及&lt;code&gt;scraper.py&lt;/code&gt;制作的简易Web程序，将网页输入的值进行处理后使用&lt;code&gt;Scraper()&lt;/code&gt;类处理并配合&lt;code&gt;web_api.py&lt;/code&gt;的接口输出在网页上(类似前后端分离)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;以上文件的参数大多可在&lt;a href=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/raw/main/config.ini&#34;&gt;config.ini&lt;/a&gt;中进行修改&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💡项目文件结构&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;.&#xA;└── Douyin_TikTok_Download_API/&#xA;    ├── /static -&amp;gt; (PyWebIO static resources)&#xA;    ├── web_app.py -&amp;gt; (Web APP)&#xA;    ├── web_api.py -&amp;gt; (API)&#xA;    ├── scraper.py -&amp;gt; (Parsing library)&#xA;    ├── config.ini -&amp;gt; (Configuration file)&#xA;    ├── install.sh -&amp;gt; (Installation bash script)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;✨功能：&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;抖音（抖音海外版: TikTok）视频/图片解析&lt;/li&gt; &#xA; &lt;li&gt;网页端批量解析(支持抖音/TikTok混合提交)&lt;/li&gt; &#xA; &lt;li&gt;网页端解析结果页批量下载无水印视频(V3.X以上版本移除，请自行部署V2.X版本)&lt;/li&gt; &#xA; &lt;li&gt;API调用获取链接数据&lt;/li&gt; &#xA; &lt;li&gt;制作&lt;a href=&#34;https://pypi.org/project/douyin-tiktok-scraper/&#34;&gt;pip包&lt;/a&gt;方便快速导入你的项目&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/cn/app/%E5%BF%AB%E6%8D%B7%E6%8C%87%E4%BB%A4/id915249334&#34;&gt;iOS快捷指令快速调用API&lt;/a&gt;实现应用内下载无水印视频/图集&lt;/li&gt; &#xA; &lt;li&gt;解析作者主页内所有视频(&lt;a href=&#34;https://api.tikhub.io/docs&#34;&gt;TikHub-API&lt;/a&gt; 支持抖音/TikTok)&lt;/li&gt; &#xA; &lt;li&gt;解析视频内所有评论信息(&lt;a href=&#34;https://api.tikhub.io/docs&#34;&gt;TikHub-API&lt;/a&gt; 支持抖音/TikTok)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🤦‍待办清单：&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;💡欢迎提出建议或直接提交PR至此仓库 ♪(･ω･)ﾉ)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 编写一个桌面端的异步下载器实现本地批量下载&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; TikHub-API添加对hash_tag页面的数据爬取 &lt;a href=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/issues/101&#34;&gt;#101&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 对其他短视频平台添加支持，如：抖音火山版，快手，西瓜视频，哔哩哔哩&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;📦调用解析库:&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;💡PyPi：&lt;a href=&#34;https://pypi.org/project/douyin-tiktok-scraper/&#34;&gt;https://pypi.org/project/douyin-tiktok-scraper/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;安装解析库：&lt;code&gt;pip install douyin-tiktok-scraper&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import asyncio&#xA;from douyin_tiktok_scraper.scraper import Scraper&#xA;&#xA;api = Scraper()&#xA;&#xA;async def hybrid_parsing(url: str) -&amp;gt; dict:&#xA;    # Hybrid parsing(Douyin/TikTok URL)&#xA;    result = await api.hybrid_parsing(url)&#xA;    print(f&#34;The hybrid parsing result:\n {result}&#34;)&#xA;    return result&#xA;&#xA;asyncio.run(hybrid_parsing(url=input(&#34;Paste Douyin/TikTok share URL here: &#34;)))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🗺️支持的提交格式：&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;💡提示：包含但不仅限于以下例子，如果遇到链接解析失败请开启一个新 &lt;a href=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/issues&#34;&gt;issue&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;抖音分享口令 (APP内复制)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;7.43 pda:/ 让你在几秒钟之内记住我  https://v.douyin.com/L5pbfdP/ 复制此链接，打开Dou音搜索，直接观看视频！&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;抖音短网址 (APP内复制)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;https://v.douyin.com/L4FJNR3/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;抖音正常网址 (网页版复制)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;https://www.douyin.com/video/6914948781100338440&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;抖音发现页网址 (APP复制)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;https://www.douyin.com/discover?modal_id=7069543727328398622&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TikTok短网址 (APP内复制)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;https://www.tiktok.com/t/ZTR9nDNWq/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TikTok正常网址 (网页版复制)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;https://www.tiktok.com/@evil0ctal/video/7156033831819037994&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;抖音/TikTok批量网址(无需使用符合隔开)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;https://v.douyin.com/L4NpDJ6/&#xA;https://www.douyin.com/video/7126745726494821640&#xA;2.84 nqe:/ 骑白马的也可以是公主%%百万转场变身https://v.douyin.com/L4FJNR3/ 复制此链接，打开Dou音搜索，直接观看视频！&#xA;https://www.tiktok.com/t/ZTR9nkkmL/&#xA;https://www.tiktok.com/t/ZTR9nDNWq/&#xA;https://www.tiktok.com/@evil0ctal/video/7156033831819037994&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🛰️API文档&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;💡提示：也可以在web_api.py的代码注释中查看接口文档&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;API文档：&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;本地：&lt;a href=&#34;http://localhost:8000/docs&#34;&gt;http://localhost:8000/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;在线：&lt;a href=&#34;https://api.douyin.wtf/docs&#34;&gt;https://api.douyin.wtf/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;TikHub-API文档：&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;在线：&lt;a href=&#34;https://api.tikhub.io/docs&#34;&gt;https://api.tikhub.io/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;API演示：&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;爬取视频数据(TikTok或Douyin混合解析) &lt;code&gt;https://api.douyin.wtf/api?url=[视频链接/Video URL]&amp;amp;minimal=false&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;下载视频/图集(TikTok或Douyin混合解析) &lt;code&gt;https://api.douyin.wtf/download?url=[视频链接/Video URL]&amp;amp;prefix=true&amp;amp;watermark=false&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;替换域名下载视频/图集&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;[抖音]&#xA;原始链接:&#xA;https://www.douyin.com/video/7159502929156705567&#xA;替换域名:&#xA;https://api.douyin.wtf/video/7159502929156705567&#xA;# 返回无水印视频下载响应&#xA;[TikTok]&#xA;original link:&#xA;https://www.tiktok.com/@evil0ctal/video/7156033831819037994&#xA;Replace Domain:&#xA;https://api.douyin.wtf/@evil0ctal/video/7156033831819037994&#xA;# Return No Watermark Video Download Response&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;更多演示请查看文档内容......&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💻部署(方式一 Linux)&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;💡提示：最好将本项目部署至美国地区的服务器，否则可能会出现奇怪的BUG。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;推荐大家使用&lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;Digitalocean&lt;/a&gt;的服务器，主要是因为免费。&lt;/p&gt; &#xA;&lt;p&gt;使用我的邀请链接注册，你可以获得$200的credit，当你在上面消费$25时，我也可以获得$25的奖励。&lt;/p&gt; &#xA;&lt;p&gt;我的邀请链接：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://m.do.co/c/9f72a27dec35&#34;&gt;https://m.do.co/c/9f72a27dec35&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;使用脚本一键部署本项目&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用wget命令下载&lt;a href=&#34;https://raw.githubusercontent.com/Evil0ctal/Douyin_TikTok_Download_API/main/bash/install.sh&#34;&gt;install.sh&lt;/a&gt;至服务器&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget https://raw.githubusercontent.com/Evil0ctal/Douyin_TikTok_Download_API/main/bash/install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;下载完成后使用root权限执行&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo sh install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;运行Bash脚本后会自动使用&lt;a href=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/raw/main/config.py&#34;&gt;config.py&lt;/a&gt;来帮助你修改&lt;a href=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/raw/main/config.ini&#34;&gt;config.ini&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;Please edit config.ini, all input must be numbers!&#xA;Default API port: 8000&#xA;If you want use different port input new API port here: 80&#xA;Use new port for web_api.py: 80&#xA;Default API rate limit: 10/minute&#xA;If you want use different rate limit input new rate limit here: 60&#xA;Use new rate limit: 60/minute&#xA;Default App port: 80&#xA;If you want use different port input new App port here: 8080&#xA;Use new port: 8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;随后脚本会询问你要启动的服务&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;api：单独启动&lt;code&gt;web_api.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;web：单独启动&lt;code&gt;web_app.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;all：同时启动&lt;code&gt;web_api.py&lt;/code&gt;和&lt;code&gt;web_app.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;Run API or Web? [api/web/all/quit] api&#xA;Do you want to start the api service when system boot? [y/n] y&#xA;Created symlink /etc/systemd/system/multi-user.target.wants/web_api.service → /etc/systemd/system/web_api.service.&#xA;API service will start when system boot!&#xA;Starting API...&#xA;API is running! You can visit http://your_ip:port&#xA;You can stop the api service by running: systemctl stop web_api.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;开启/停止服务&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;web服务：&lt;code&gt;systemctl start/stop web_app.service&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;api服务：&lt;code&gt;systemctl start/stop web_api.service&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;开启/关闭开机自动运行&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;web服务：&lt;code&gt;systemctl enable/disable web_app.service&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;api服务：&lt;code&gt;systemctl enable/disable web_api.service&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;更新项目&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cd /www/wwwroot/Douyin_TikTok_Download_API/bash&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo sh update.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;💽部署(方式二 Docker)&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;💡Docker Image repo: &lt;a href=&#34;https://hub.docker.com/repository/docker/evil0ctal/douyin_tiktok_download_api&#34;&gt;Docker Hub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;安装docker&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;curl -fsSL get.docker.com -o get-docker.sh&amp;amp;&amp;amp;sh get-docker.sh &amp;amp;&amp;amp;systemctl enable docker&amp;amp;&amp;amp;systemctl start docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;留下config.int和docker-compose.yml文件即可&lt;/li&gt; &#xA; &lt;li&gt;运行命令,让容器在后台运行&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;查看容器日志&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;docker logs -f douyin_tiktok_download_api&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;删除容器&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;docker rm -f douyin_tiktok_download_api&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;更新&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;docker compose pull &amp;amp;&amp;amp; docker compose down &amp;amp;&amp;amp; docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;❤️ 贡献者&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Evil0ctal&#34;&gt;&lt;img src=&#34;https://github.com/Evil0ctal.png?size=50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jw-star&#34;&gt;&lt;img src=&#34;https://github.com/jw-star.png?size=50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Jeffrey-deng&#34;&gt;&lt;img src=&#34;https://github.com/Jeffrey-deng.png?size=50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/chris-ss&#34;&gt;&lt;img src=&#34;https://github.com/chris-ss.png?size=50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/weixuan00&#34;&gt;&lt;img src=&#34;https://github.com/weixuan00.png?size=50&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tairraos&#34;&gt;&lt;img src=&#34;https://github.com/Tairraos.png?size=50&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📸截图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;API速度测试(对比官方API)&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;🔎点击展开截图&lt;/summary&gt; &#xA; &lt;p&gt;抖音官方API: &lt;img src=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/raw/main/Screenshots/benchmarks/Douyin_API.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;本项目API: &lt;img src=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/raw/main/Screenshots/benchmarks/Douyin_API_Douyin_wtf.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;TikTok官方API: &lt;img src=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/raw/main/Screenshots/benchmarks/TikTok_API.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;本项目API: &lt;img src=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/raw/main/Screenshots/benchmarks/TikTok_API_Douyin_wtf.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;项目界面&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;🔎点击展开截图&lt;/summary&gt; &#xA; &lt;p&gt;Web主界面:&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/raw/main/Screenshots/v3_screenshots/Home.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;Web main interface:&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/raw/main/Screenshots/v3_screenshots/Home_en.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;📜 Star历史&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#Evil0ctal/Douyin_TikTok_Download_API&amp;amp;Timeline&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=Evil0ctal/Douyin_TikTok_Download_API&amp;amp;type=Timeline&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Evil0ctal/Douyin_TikTok_Download_API/raw/Stable/LICENSE&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Start: 2021/11/06 GitHub: &lt;a href=&#34;https://github.com/Evil0ctal&#34;&gt;@Evil0ctal&lt;/a&gt; Contact: &lt;a href=&#34;mailto:Evil0ctal1985@gmail.com&#34;&gt;Evil0ctal1985@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>AtsushiSakai/PythonRobotics</title>
    <updated>2023-01-01T01:46:37Z</updated>
    <id>tag:github.com,2023-01-01:/AtsushiSakai/PythonRobotics</id>
    <link href="https://github.com/AtsushiSakai/PythonRobotics" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Python sample codes for robotics algorithms.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRobotics/raw/master/icon.png?raw=true&#34; align=&#34;right&#34; width=&#34;300&#34; alt=&#34;header pic&#34;&gt; &#xA;&lt;h1&gt;PythonRobotics&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRobotics/workflows/Linux_CI/badge.svg?sanitize=true&#34; alt=&#34;GitHub_Action_Linux_CI&#34;&gt; &lt;img src=&#34;https://github.com/AtsushiSakai/PythonRobotics/workflows/MacOS_CI/badge.svg?sanitize=true&#34; alt=&#34;GitHub_Action_MacOS_CI&#34;&gt; &lt;a href=&#34;https://ci.appveyor.com/project/AtsushiSakai/pythonrobotics&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/sb279kxuv1be391g?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/AtsushiSakai/PythonRobotics&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/AtsushiSakai/PythonRobotics/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/AtsushiSakai/PythonRobotics/context:python&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/python/g/AtsushiSakai/PythonRobotics.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language grade: Python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AtsushiSakai/PythonRobotics&#34;&gt;&lt;img src=&#34;https://tokei.rs/b1/github/AtsushiSakai/PythonRobotics&#34; alt=&#34;tokei&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Python codes for robotics algorithm.&lt;/p&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#what-is-this&#34;&gt;What is this?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#how-to-use&#34;&gt;How to use&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#localization&#34;&gt;Localization&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#extended-kalman-filter-localization&#34;&gt;Extended Kalman Filter localization&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#particle-filter-localization&#34;&gt;Particle filter localization&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#histogram-filter-localization&#34;&gt;Histogram filter localization&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#mapping&#34;&gt;Mapping&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#gaussian-grid-map&#34;&gt;Gaussian grid map&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#ray-casting-grid-map&#34;&gt;Ray casting grid map&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#lidar-to-grid-map&#34;&gt;Lidar to grid map&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#k-means-object-clustering&#34;&gt;k-means object clustering&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#rectangle-fitting&#34;&gt;Rectangle fitting&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#slam&#34;&gt;SLAM&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#iterative-closest-point-icp-matching&#34;&gt;Iterative Closest Point (ICP) Matching&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#fastslam-10&#34;&gt;FastSLAM 1.0&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#path-planning&#34;&gt;Path Planning&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#dynamic-window-approach&#34;&gt;Dynamic Window Approach&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#grid-based-search&#34;&gt;Grid based search&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#dijkstra-algorithm&#34;&gt;Dijkstra algorithm&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#a-algorithm&#34;&gt;A* algorithm&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#d-algorithm&#34;&gt;D* algorithm&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#d-lite-algorithm&#34;&gt;D* Lite algorithm&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#potential-field-algorithm&#34;&gt;Potential Field algorithm&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#grid-based-coverage-path-planning&#34;&gt;Grid based coverage path planning&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#state-lattice-planning&#34;&gt;State Lattice Planning&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#biased-polar-sampling&#34;&gt;Biased polar sampling&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#lane-sampling&#34;&gt;Lane sampling&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#probabilistic-road-map-prm-planning&#34;&gt;Probabilistic Road-Map (PRM) planning&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#rapidly-exploring-random-trees-rrt&#34;&gt;Rapidly-Exploring Random Trees (RRT)&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#rrt&#34;&gt;RRT*&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#rrt-with-reeds-shepp-path&#34;&gt;RRT* with reeds-shepp path&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#lqr-rrt&#34;&gt;LQR-RRT*&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#quintic-polynomials-planning&#34;&gt;Quintic polynomials planning&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#reeds-shepp-planning&#34;&gt;Reeds Shepp planning&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#lqr-based-path-planning&#34;&gt;LQR based path planning&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#optimal-trajectory-in-a-frenet-frame&#34;&gt;Optimal Trajectory in a Frenet Frame&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#path-tracking&#34;&gt;Path Tracking&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#move-to-a-pose-control&#34;&gt;move to a pose control&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#stanley-control&#34;&gt;Stanley control&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#rear-wheel-feedback-control&#34;&gt;Rear wheel feedback control&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#linearquadratic-regulator-lqr-speed-and-steering-control&#34;&gt;Linear–quadratic regulator (LQR) speed and steering control&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#model-predictive-speed-and-steering-control&#34;&gt;Model predictive speed and steering control&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#nonlinear-model-predictive-control-with-c-gmres&#34;&gt;Nonlinear Model predictive control with C-GMRES&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#arm-navigation&#34;&gt;Arm Navigation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#n-joint-arm-to-point-control&#34;&gt;N joint arm to point control&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#arm-navigation-with-obstacle-avoidance&#34;&gt;Arm navigation with obstacle avoidance&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#aerial-navigation&#34;&gt;Aerial Navigation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#drone-3d-trajectory-following&#34;&gt;drone 3d trajectory following&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#rocket-powered-landing&#34;&gt;rocket powered landing&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#bipedal&#34;&gt;Bipedal&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#bipedal-planner-with-inverted-pendulum&#34;&gt;bipedal planner with inverted pendulum&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#use-case&#34;&gt;Use-case&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#contribution&#34;&gt;Contribution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#citing&#34;&gt;Citing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#sponsors&#34;&gt;Sponsors&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#JetBrains&#34;&gt;JetBrains&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#1password&#34;&gt;1Password&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AtsushiSakai/PythonRobotics/master/#authors&#34;&gt;Authors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;What is this?&lt;/h1&gt; &#xA;&lt;p&gt;This is a Python code collection of robotics algorithms.&lt;/p&gt; &#xA;&lt;p&gt;Features:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Easy to read for understanding each algorithm&#39;s basic idea.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Widely used and practical algorithms are selected.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Minimum dependency.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;See this paper for more details:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1808.10703&#34;&gt;[1808.10703] PythonRobotics: a Python code collection of robotics algorithms&lt;/a&gt; (&lt;a href=&#34;https://github.com/AtsushiSakai/PythonRoboticsPaper/raw/master/python_robotics.bib&#34;&gt;BibTeX&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;p&gt;For running each sample code:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.python.org/&#34;&gt;Python 3.10.x&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://numpy.org/&#34;&gt;NumPy&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://scipy.org/&#34;&gt;SciPy&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://matplotlib.org/&#34;&gt;Matplotlib&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.cvxpy.org/&#34;&gt;cvxpy&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For development:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pytest.org/&#34;&gt;pytest&lt;/a&gt; (for unit tests)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytest-xdist/&#34;&gt;pytest-xdist&lt;/a&gt; (for parallel unit tests)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://mypy-lang.org/&#34;&gt;mypy&lt;/a&gt; (for type check)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.sphinx-doc.org/&#34;&gt;sphinx&lt;/a&gt; (for document generation)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pycodestyle/&#34;&gt;pycodestyle&lt;/a&gt; (for code style check)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;This README only shows some examples of this project.&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in other examples or mathematical backgrounds of each algorithm,&lt;/p&gt; &#xA;&lt;p&gt;You can check the full documentation online: &lt;a href=&#34;https://atsushisakai.github.io/PythonRobotics/index.html&#34;&gt;Welcome to PythonRobotics’s documentation! — PythonRobotics documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;All animation gifs are stored here: &lt;a href=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs&#34;&gt;AtsushiSakai/PythonRoboticsGifs: Animation gifs of PythonRobotics&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;How to use&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repo.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;git clone https://github.com/AtsushiSakai/PythonRobotics.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the required libraries.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;using conda :&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;conda env create -f requirements/environment.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;using pip :&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;pip install -r requirements/requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Execute python script in each directory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add star to this repo if you like it &lt;span&gt;😃&lt;/span&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Localization&lt;/h1&gt; &#xA;&lt;h2&gt;Extended Kalman Filter localization&lt;/h2&gt; &#xA;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/Localization/extended_kalman_filter/animation.gif&#34; width=&#34;640&#34; alt=&#34;EKF pic&#34;&gt; &#xA;&lt;p&gt;Documentation: &lt;a href=&#34;https://github.com/AtsushiSakai/PythonRobotics/raw/master/Localization/extended_kalman_filter/extended_kalman_filter_localization.ipynb&#34;&gt;Notebook&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Particle filter localization&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/Localization/particle_filter/animation.gif&#34; alt=&#34;2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a sensor fusion localization with Particle Filter(PF).&lt;/p&gt; &#xA;&lt;p&gt;The blue line is true trajectory, the black line is dead reckoning trajectory,&lt;/p&gt; &#xA;&lt;p&gt;and the red line is an estimated trajectory with PF.&lt;/p&gt; &#xA;&lt;p&gt;It is assumed that the robot can measure a distance from landmarks (RFID).&lt;/p&gt; &#xA;&lt;p&gt;These measurements are used for PF localization.&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.probabilistic-robotics.org/&#34;&gt;PROBABILISTIC ROBOTICS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Histogram filter localization&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/Localization/histogram_filter/animation.gif&#34; alt=&#34;3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a 2D localization example with Histogram filter.&lt;/p&gt; &#xA;&lt;p&gt;The red cross is true position, black points are RFID positions.&lt;/p&gt; &#xA;&lt;p&gt;The blue grid shows a position probability of histogram filter.&lt;/p&gt; &#xA;&lt;p&gt;In this simulation, x,y are unknown, yaw is known.&lt;/p&gt; &#xA;&lt;p&gt;The filter integrates speed input and range observations from RFID for localization.&lt;/p&gt; &#xA;&lt;p&gt;Initial position is not needed.&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.probabilistic-robotics.org/&#34;&gt;PROBABILISTIC ROBOTICS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Mapping&lt;/h1&gt; &#xA;&lt;h2&gt;Gaussian grid map&lt;/h2&gt; &#xA;&lt;p&gt;This is a 2D Gaussian grid mapping example.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/Mapping/gaussian_grid_map/animation.gif&#34; alt=&#34;2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ray casting grid map&lt;/h2&gt; &#xA;&lt;p&gt;This is a 2D ray casting grid mapping example.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/Mapping/raycasting_grid_map/animation.gif&#34; alt=&#34;2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Lidar to grid map&lt;/h2&gt; &#xA;&lt;p&gt;This example shows how to convert a 2D range measurement to a grid map.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/Mapping/lidar_to_grid_map/animation.gif&#34; alt=&#34;2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;k-means object clustering&lt;/h2&gt; &#xA;&lt;p&gt;This is a 2D object clustering with k-means algorithm.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/Mapping/kmeans_clustering/animation.gif&#34; alt=&#34;2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Rectangle fitting&lt;/h2&gt; &#xA;&lt;p&gt;This is a 2D rectangle fitting for vehicle detection.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/Mapping/rectangle_fitting/animation.gif&#34; alt=&#34;2&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;SLAM&lt;/h1&gt; &#xA;&lt;p&gt;Simultaneous Localization and Mapping(SLAM) examples&lt;/p&gt; &#xA;&lt;h2&gt;Iterative Closest Point (ICP) Matching&lt;/h2&gt; &#xA;&lt;p&gt;This is a 2D ICP matching example with singular value decomposition.&lt;/p&gt; &#xA;&lt;p&gt;It can calculate a rotation matrix, and a translation vector between points and points.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/SLAM/iterative_closest_point/animation.gif&#34; alt=&#34;3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cs.gmu.edu/~kosecka/cs685/cs685-icp.pdf&#34;&gt;Introduction to Mobile Robotics: Iterative Closest Point Algorithm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FastSLAM 1.0&lt;/h2&gt; &#xA;&lt;p&gt;This is a feature based SLAM example using FastSLAM 1.0.&lt;/p&gt; &#xA;&lt;p&gt;The blue line is ground truth, the black line is dead reckoning, the red line is the estimated trajectory with FastSLAM.&lt;/p&gt; &#xA;&lt;p&gt;The red points are particles of FastSLAM.&lt;/p&gt; &#xA;&lt;p&gt;Black points are landmarks, blue crosses are estimated landmark positions by FastSLAM.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/SLAM/FastSLAM1/animation.gif&#34; alt=&#34;3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www.probabilistic-robotics.org/&#34;&gt;PROBABILISTIC ROBOTICS&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www-personal.acfr.usyd.edu.au/tbailey/software/slam_simulations.htm&#34;&gt;SLAM simulations by Tim Bailey&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Path Planning&lt;/h1&gt; &#xA;&lt;h2&gt;Dynamic Window Approach&lt;/h2&gt; &#xA;&lt;p&gt;This is a 2D navigation sample code with Dynamic Window Approach.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ri.cmu.edu/pub_files/pub1/fox_dieter_1997_1/fox_dieter_1997_1.pdf&#34;&gt;The Dynamic Window Approach to Collision Avoidance&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/DynamicWindowApproach/animation.gif&#34; alt=&#34;2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Grid based search&lt;/h2&gt; &#xA;&lt;h3&gt;Dijkstra algorithm&lt;/h3&gt; &#xA;&lt;p&gt;This is a 2D grid based the shortest path planning with Dijkstra&#39;s algorithm.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/Dijkstra/animation.gif&#34; alt=&#34;PythonRobotics/figure_1.png at master · AtsushiSakai/PythonRobotics&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In the animation, cyan points are searched nodes.&lt;/p&gt; &#xA;&lt;h3&gt;A* algorithm&lt;/h3&gt; &#xA;&lt;p&gt;This is a 2D grid based the shortest path planning with A star algorithm.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/AStar/animation.gif&#34; alt=&#34;PythonRobotics/figure_1.png at master · AtsushiSakai/PythonRobotics&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In the animation, cyan points are searched nodes.&lt;/p&gt; &#xA;&lt;p&gt;Its heuristic is 2D Euclid distance.&lt;/p&gt; &#xA;&lt;h3&gt;D* algorithm&lt;/h3&gt; &#xA;&lt;p&gt;This is a 2D grid based the shortest path planning with D star algorithm.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/DStar/animation.gif&#34; alt=&#34;figure at master · nirnayroy/intelligentrobotics&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The animation shows a robot finding its path avoiding an obstacle using the D* search algorithm.&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/D*&#34;&gt;D* Algorithm Wikipedia&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;D* Lite algorithm&lt;/h3&gt; &#xA;&lt;p&gt;This algorithm finds the shortest path between two points while rerouting when obstacles are discovered. It has been implemented here for a 2D grid.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/DStarLite/animation.gif&#34; alt=&#34;D* Lite&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The animation shows a robot finding its path and rerouting to avoid obstacles as they are discovered using the D* Lite search algorithm.&lt;/p&gt; &#xA;&lt;p&gt;Refs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://idm-lab.org/bib/abstracts/papers/aaai02b.pd&#34;&gt;D* Lite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cs.cmu.edu/~maxim/files/dlite_icra02.pdf&#34;&gt;Improved Fast Replanning for Robot Navigation in Unknown Terrain&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Potential Field algorithm&lt;/h3&gt; &#xA;&lt;p&gt;This is a 2D grid based path planning with Potential Field algorithm.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/PotentialFieldPlanning/animation.gif&#34; alt=&#34;PotentialField&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In the animation, the blue heat map shows potential value on each grid.&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cs.cmu.edu/~motionplanning/lecture/Chap4-Potential-Field_howie.pdf&#34;&gt;Robotic Motion Planning:Potential Functions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Grid based coverage path planning&lt;/h3&gt; &#xA;&lt;p&gt;This is a 2D grid based coverage path planning simulation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/GridBasedSweepCPP/animation.gif&#34; alt=&#34;PotentialField&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;State Lattice Planning&lt;/h2&gt; &#xA;&lt;p&gt;This script is a path planning code with state lattice planning.&lt;/p&gt; &#xA;&lt;p&gt;This code uses the model predictive trajectory generator to solve boundary problem.&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://journals.sagepub.com/doi/pdf/10.1177/0278364906075328&#34;&gt;Optimal rough terrain trajectory generation for wheeled mobile robots&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www.frc.ri.cmu.edu/~alonzo/pubs/papers/JFR_08_SS_Sampling.pdf&#34;&gt;State Space Sampling of Feasible Motions for High-Performance Mobile Robot Navigation in Complex Environments&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Biased polar sampling&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/StateLatticePlanner/BiasedPolarSampling.gif&#34; alt=&#34;PythonRobotics/figure_1.png at master · AtsushiSakai/PythonRobotics&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Lane sampling&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/StateLatticePlanner/LaneSampling.gif&#34; alt=&#34;PythonRobotics/figure_1.png at master · AtsushiSakai/PythonRobotics&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Probabilistic Road-Map (PRM) planning&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/ProbabilisticRoadMap/animation.gif&#34; alt=&#34;PRM&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This PRM planner uses Dijkstra method for graph search.&lt;/p&gt; &#xA;&lt;p&gt;In the animation, blue points are sampled points,&lt;/p&gt; &#xA;&lt;p&gt;Cyan crosses means searched points with Dijkstra method,&lt;/p&gt; &#xA;&lt;p&gt;The red line is the final path of PRM.&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Probabilistic_roadmap&#34;&gt;Probabilistic roadmap - Wikipedia&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;　　&lt;/p&gt; &#xA;&lt;h2&gt;Rapidly-Exploring Random Trees (RRT)&lt;/h2&gt; &#xA;&lt;h3&gt;RRT*&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/RRTstar/animation.gif&#34; alt=&#34;PythonRobotics/figure_1.png at master · AtsushiSakai/PythonRobotics&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a path planning code with RRT*&lt;/p&gt; &#xA;&lt;p&gt;Black circles are obstacles, green line is a searched tree, red crosses are start and goal positions.&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/1005.0416&#34;&gt;Incremental Sampling-based Algorithms for Optimal Motion Planning&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.419.5503&amp;amp;rep=rep1&amp;amp;type=pdf&#34;&gt;Sampling-based Algorithms for Optimal Motion Planning&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;RRT* with reeds-shepp path&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/RRTStarReedsShepp/animation.gif&#34; alt=&#34;Robotics/animation.gif at master · AtsushiSakai/PythonRobotics&#34;&gt;)&lt;/p&gt; &#xA;&lt;p&gt;Path planning for a car robot with RRT* and reeds shepp path planner.&lt;/p&gt; &#xA;&lt;h3&gt;LQR-RRT*&lt;/h3&gt; &#xA;&lt;p&gt;This is a path planning simulation with LQR-RRT*.&lt;/p&gt; &#xA;&lt;p&gt;A double integrator motion model is used for LQR local planner.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/LQRRRTStar/animation.gif&#34; alt=&#34;LQR_RRT&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://lis.csail.mit.edu/pubs/perez-icra12.pdf&#34;&gt;LQR-RRT*: Optimal Sampling-Based Motion Planning with Automatically Derived Extension Heuristics&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/MahanFathi/LQR-RRTstar&#34;&gt;MahanFathi/LQR-RRTstar: LQR-RRT* method is used for random motion planning of a simple pendulum in its phase plot&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quintic polynomials planning&lt;/h2&gt; &#xA;&lt;p&gt;Motion planning with quintic polynomials.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/QuinticPolynomialsPlanner/animation.gif&#34; alt=&#34;2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It can calculate a 2D path, velocity, and acceleration profile based on quintic polynomials.&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ieeexplore.ieee.org/document/637936/&#34;&gt;Local Path Planning And Motion Control For Agv In Positioning&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reeds Shepp planning&lt;/h2&gt; &#xA;&lt;p&gt;A sample code with Reeds Shepp path planning.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/ReedsSheppPath/animation.gif?raw=true&#34; alt=&#34;RSPlanning&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://planning.cs.uiuc.edu/node822.html&#34;&gt;15.3.2 Reeds-Shepp Curves&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pdfs.semanticscholar.org/932e/c495b1d0018fd59dee12a0bf74434fac7af4.pdf&#34;&gt;optimal paths for a car that goes both forwards and backwards&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ghliu/pyReedsShepp&#34;&gt;ghliu/pyReedsShepp: Implementation of Reeds Shepp curve.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;LQR based path planning&lt;/h2&gt; &#xA;&lt;p&gt;A sample code using LQR based path planning for double integrator model.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/LQRPlanner/animation.gif?raw=true&#34; alt=&#34;RSPlanning&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Optimal Trajectory in a Frenet Frame&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/FrenetOptimalTrajectory/animation.gif&#34; alt=&#34;3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is optimal trajectory generation in a Frenet Frame.&lt;/p&gt; &#xA;&lt;p&gt;The cyan line is the target course and black crosses are obstacles.&lt;/p&gt; &#xA;&lt;p&gt;The red line is the predicted path.&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.researchgate.net/profile/Moritz_Werling/publication/224156269_Optimal_Trajectory_Generation_for_Dynamic_Street_Scenarios_in_a_Frenet_Frame/links/54f749df0cf210398e9277af.pdf&#34;&gt;Optimal Trajectory Generation for Dynamic Street Scenarios in a Frenet Frame&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Cj6tAQe7UCY&#34;&gt;Optimal trajectory generation for dynamic street scenarios in a Frenet Frame&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Path Tracking&lt;/h1&gt; &#xA;&lt;h2&gt;move to a pose control&lt;/h2&gt; &#xA;&lt;p&gt;This is a simulation of moving to a pose control&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathTracking/move_to_pose/animation.gif&#34; alt=&#34;2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://link.springer.com/book/10.1007/978-3-642-20144-8&#34;&gt;P. I. Corke, &#34;Robotics, Vision and Control&#34; | SpringerLink p102&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Stanley control&lt;/h2&gt; &#xA;&lt;p&gt;Path tracking simulation with Stanley steering control and PID speed control.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathTracking/stanley_controller/animation.gif&#34; alt=&#34;2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://robots.stanford.edu/papers/thrun.stanley05.pdf&#34;&gt;Stanley: The robot that won the DARPA grand challenge&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.ri.cmu.edu/pub_files/2009/2/Automatic_Steering_Methods_for_Autonomous_Automobile_Path_Tracking.pdf&#34;&gt;Automatic Steering Methods for Autonomous Automobile Path Tracking&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Rear wheel feedback control&lt;/h2&gt; &#xA;&lt;p&gt;Path tracking simulation with rear wheel feedback steering control and PID speed control.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathTracking/rear_wheel_feedback/animation.gif&#34; alt=&#34;PythonRobotics/figure_1.png at master · AtsushiSakai/PythonRobotics&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1604.07446&#34;&gt;A Survey of Motion Planning and Control Techniques for Self-driving Urban Vehicles&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Linear–quadratic regulator (LQR) speed and steering control&lt;/h2&gt; &#xA;&lt;p&gt;Path tracking simulation with LQR speed and steering control.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathTracking/lqr_speed_steer_control/animation.gif&#34; alt=&#34;3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ieeexplore.ieee.org/document/5940562/&#34;&gt;Towards fully autonomous driving: Systems and algorithms - IEEE Conference Publication&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Model predictive speed and steering control&lt;/h2&gt; &#xA;&lt;p&gt;Path tracking simulation with iterative linear model predictive speed and steering control.&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathTracking/model_predictive_speed_and_steer_control/animation.gif&#34; width=&#34;640&#34; alt=&#34;MPC pic&#34;&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/AtsushiSakai/PythonRobotics/raw/master/PathTracking/model_predictive_speed_and_steer_control/Model_predictive_speed_and_steering_control.ipynb&#34;&gt;notebook&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://grauonline.de/wordpress/?page_id=3244&#34;&gt;Real-time Model Predictive Control (MPC), ACADO, Python | Work-is-Playing&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Nonlinear Model predictive control with C-GMRES&lt;/h2&gt; &#xA;&lt;p&gt;A motion planning and path tracking simulation with NMPC of C-GMRES&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathTracking/cgmres_nmpc/animation.gif&#34; alt=&#34;3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AtsushiSakai/PythonRobotics/raw/master/PathTracking/cgmres_nmpc/cgmres_nmpc.ipynb&#34;&gt;notebook&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Arm Navigation&lt;/h1&gt; &#xA;&lt;h2&gt;N joint arm to point control&lt;/h2&gt; &#xA;&lt;p&gt;N joint arm to a point control simulation.&lt;/p&gt; &#xA;&lt;p&gt;This is an interactive simulation.&lt;/p&gt; &#xA;&lt;p&gt;You can set the goal position of the end effector with left-click on the plotting area.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/ArmNavigation/n_joint_arm_to_point_control/animation.gif&#34; alt=&#34;3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In this simulation N = 10, however, you can change it.&lt;/p&gt; &#xA;&lt;h2&gt;Arm navigation with obstacle avoidance&lt;/h2&gt; &#xA;&lt;p&gt;Arm navigation with obstacle avoidance simulation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/ArmNavigation/arm_obstacle_navigation/animation.gif&#34; alt=&#34;3&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Aerial Navigation&lt;/h1&gt; &#xA;&lt;h2&gt;drone 3d trajectory following&lt;/h2&gt; &#xA;&lt;p&gt;This is a 3d trajectory following simulation for a quadrotor.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/AerialNavigation/drone_3d_trajectory_following/animation.gif&#34; alt=&#34;3&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;rocket powered landing&lt;/h2&gt; &#xA;&lt;p&gt;This is a 3d trajectory generation simulation for a rocket powered landing.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/AerialNavigation/rocket_powered_landing/animation.gif&#34; alt=&#34;3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ref:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AtsushiSakai/PythonRobotics/raw/master/AerialNavigation/rocket_powered_landing/rocket_powered_landing.ipynb&#34;&gt;notebook&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Bipedal&lt;/h1&gt; &#xA;&lt;h2&gt;bipedal planner with inverted pendulum&lt;/h2&gt; &#xA;&lt;p&gt;This is a bipedal planner for modifying footsteps for an inverted pendulum.&lt;/p&gt; &#xA;&lt;p&gt;You can set the footsteps, and the planner will modify those automatically.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/Bipedal/bipedal_planner/animation.gif&#34; alt=&#34;3&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt; &#xA;&lt;h1&gt;Use-case&lt;/h1&gt; &#xA;&lt;p&gt;If this project helps your robotics project, please let me know with creating an issue.&lt;/p&gt; &#xA;&lt;p&gt;Your robot&#39;s video, which is using PythonRobotics, is very welcome!!&lt;/p&gt; &#xA;&lt;p&gt;This is a list of user&#39;s comment and references:&lt;a href=&#34;https://github.com/AtsushiSakai/PythonRobotics/raw/master/users_comments.md&#34;&gt;users_comments&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contribution&lt;/h1&gt; &#xA;&lt;p&gt;Any contribution is welcome!!&lt;/p&gt; &#xA;&lt;p&gt;Please check this document:&lt;a href=&#34;https://atsushisakai.github.io/PythonRobotics/how_to_contribute.html&#34;&gt;How To Contribute — PythonRobotics documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Citing&lt;/h1&gt; &#xA;&lt;p&gt;If you use this project&#39;s code for your academic work, we encourage you to cite &lt;a href=&#34;https://arxiv.org/abs/1808.10703&#34;&gt;our papers&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you use this project&#39;s code in industry, we&#39;d love to hear from you as well; feel free to reach out to the developers directly.&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a id=&#34;support&#34;&gt;&lt;/a&gt;Supporting this project&lt;/h1&gt; &#xA;&lt;p&gt;If you or your company would like to support this project, please consider:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/AtsushiSakai&#34;&gt;Sponsor @AtsushiSakai on GitHub Sponsors&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.patreon.com/myenigma&#34;&gt;Become a backer or sponsor on Patreon&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.paypal.me/myenigmapay/&#34;&gt;One-time donation via PayPal&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you would like to support us in some other way, please contact with creating an issue.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a id=&#34;sponsors&#34;&gt;&lt;/a&gt;Sponsors&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;JetBrains&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://www.jetbrains.com/&#34;&gt;JetBrains&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;They are providing a free license of their IDEs for this OSS development.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/1Password/1password-teams-open-source&#34;&gt;1Password&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;They are providing a free license of their 1Password team license for this OSS project.&lt;/p&gt; &#xA;&lt;h1&gt;Authors&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AtsushiSakai/PythonRobotics/graphs/contributors&#34;&gt;Contributors to AtsushiSakai/PythonRobotics&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>