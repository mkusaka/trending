<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-22T01:47:30Z</updated>
  <subtitle>Weekly Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>DS4SD/docling</title>
    <updated>2024-12-22T01:47:30Z</updated>
    <id>tag:github.com,2024-12-22:/DS4SD/docling</id>
    <link href="https://github.com/DS4SD/docling" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Get your documents ready for gen AI&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/ds4sd/docling&#34;&gt; &lt;img loading=&#34;lazy&#34; alt=&#34;Docling&#34; src=&#34;https://github.com/DS4SD/docling/raw/main/docs/assets/docling_processing.png&#34; width=&#34;100%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Docling&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://trendshift.io/repositories/12132&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://trendshift.io/api/badge/repositories/12132&#34; alt=&#34;DS4SD%2Fdocling | Trendshift&#34; style=&#34;width: 250px; height: 55px;&#34; width=&#34;250&#34; height=&#34;55&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2408.09869&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/arXiv-2408.09869-b31b1b.svg?sanitize=true&#34; alt=&#34;arXiv&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ds4sd.github.io/docling/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-live-brightgreen&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/docling/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/docling&#34; alt=&#34;PyPI version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/docling/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/docling&#34; alt=&#34;PyPI - Python Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://python-poetry.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://python-poetry.org/badge/v0.json&#34; alt=&#34;Poetry&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34; alt=&#34;Code style: black&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pycqa.github.io/isort/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&amp;amp;labelColor=ef8336&#34; alt=&#34;Imports: isort&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pydantic.dev&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/pydantic/pydantic/main/docs/badge/v2.json&#34; alt=&#34;Pydantic v2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pre-commit/pre-commit&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;amp;logoColor=white&#34; alt=&#34;pre-commit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/DS4SD/docling&#34; alt=&#34;License MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pepy.tech/projects/docling&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/badge/docling/month&#34; alt=&#34;PyPI Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Docling parses documents and exports them to the desired format with ease and speed.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üóÇÔ∏è Reads popular document formats (PDF, DOCX, PPTX, XLSX, Images, HTML, AsciiDoc &amp;amp; Markdown) and exports to HTML, Markdown and JSON (with embedded and referenced images)&lt;/li&gt; &#xA; &lt;li&gt;üìë Advanced PDF document understanding including page layout, reading order &amp;amp; table structures&lt;/li&gt; &#xA; &lt;li&gt;üß© Unified, expressive &lt;a href=&#34;https://ds4sd.github.io/docling/concepts/docling_document/&#34;&gt;DoclingDocument&lt;/a&gt; representation format&lt;/li&gt; &#xA; &lt;li&gt;ü§ñ Easy integration with ü¶ô LlamaIndex &amp;amp; ü¶úüîó LangChain for powerful RAG / QA applications&lt;/li&gt; &#xA; &lt;li&gt;üîç OCR support for scanned PDFs&lt;/li&gt; &#xA; &lt;li&gt;üíª Simple and convenient CLI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Explore the &lt;a href=&#34;https://ds4sd.github.io/docling/&#34;&gt;documentation&lt;/a&gt; to discover plenty examples and unlock the full power of Docling!&lt;/p&gt; &#xA;&lt;h3&gt;Coming soon&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚ôæÔ∏è Equation &amp;amp; code extraction&lt;/li&gt; &#xA; &lt;li&gt;üìù Metadata extraction, including title, authors, references &amp;amp; language&lt;/li&gt; &#xA; &lt;li&gt;ü¶úüîó Native LangChain extension&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To use Docling, simply install &lt;code&gt;docling&lt;/code&gt; from your package manager, e.g. pip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install docling&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Works on macOS, Linux and Windows environments. Both x86_64 and arm64 architectures.&lt;/p&gt; &#xA;&lt;p&gt;More &lt;a href=&#34;https://ds4sd.github.io/docling/installation/&#34;&gt;detailed installation instructions&lt;/a&gt; are available in the docs.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;To convert individual documents, use &lt;code&gt;convert()&lt;/code&gt;, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from docling.document_converter import DocumentConverter&#xA;&#xA;source = &#34;https://arxiv.org/pdf/2408.09869&#34;  # document per local path or URL&#xA;converter = DocumentConverter()&#xA;result = converter.convert(source)&#xA;print(result.document.export_to_markdown())  # output: &#34;## Docling Technical Report[...]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More &lt;a href=&#34;https://ds4sd.github.io/docling/usage/&#34;&gt;advanced usage options&lt;/a&gt; are available in the docs.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Check out Docling&#39;s &lt;a href=&#34;https://ds4sd.github.io/docling/&#34;&gt;documentation&lt;/a&gt;, for details on installation, usage, concepts, recipes, extensions, and more.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Go hands-on with our &lt;a href=&#34;https://ds4sd.github.io/docling/examples/&#34;&gt;examples&lt;/a&gt;, demonstrating how to address different application use cases with Docling.&lt;/p&gt; &#xA;&lt;h2&gt;Integrations&lt;/h2&gt; &#xA;&lt;p&gt;To further accelerate your AI application development, check out Docling&#39;s native &lt;a href=&#34;https://ds4sd.github.io/docling/integrations/&#34;&gt;integrations&lt;/a&gt; with popular frameworks and tools.&lt;/p&gt; &#xA;&lt;h2&gt;Get help and support&lt;/h2&gt; &#xA;&lt;p&gt;Please feel free to connect with us using the &lt;a href=&#34;https://github.com/DS4SD/docling/discussions&#34;&gt;discussion section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Technical report&lt;/h2&gt; &#xA;&lt;p&gt;For more details on Docling&#39;s inner workings, check out the &lt;a href=&#34;https://arxiv.org/abs/2408.09869&#34;&gt;Docling Technical Report&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://github.com/DS4SD/docling/raw/main/CONTRIBUTING.md&#34;&gt;Contributing to Docling&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;p&gt;If you use Docling in your projects, please consider citing the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bib&#34;&gt;@techreport{Docling,&#xA;  author = {Deep Search Team},&#xA;  month = {8},&#xA;  title = {Docling Technical Report},&#xA;  url = {https://arxiv.org/abs/2408.09869},&#xA;  eprint = {2408.09869},&#xA;  doi = {10.48550/arXiv.2408.09869},&#xA;  version = {1.0.0},&#xA;  year = {2024}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The Docling codebase is under MIT license. For individual model usage, please refer to the model licenses found in the original packages.&lt;/p&gt; &#xA;&lt;h2&gt;IBM ‚ù§Ô∏è Open Source AI&lt;/h2&gt; &#xA;&lt;p&gt;Docling has been brought to you by IBM.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>langflow-ai/langflow</title>
    <updated>2024-12-22T01:47:30Z</updated>
    <id>tag:github.com,2024-12-22:/langflow-ai/langflow</id>
    <link href="https://github.com/langflow-ai/langflow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Langflow is a low-code app builder for RAG and multi-agent AI applications. It‚Äôs Python-based and agnostic to any model, API, or database.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/langflow-ai/langflow/main/docs/static/img/hero.png&#34; alt=&#34;Langflow&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34; style=&#34;font-size: 12px;&#34;&gt; Langflow is a low-code app builder for RAG and multi-agent AI applications. It‚Äôs Python-based and agnostic to any model, API, or database. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34; style=&#34;font-size: 12px;&#34;&gt; &lt;a href=&#34;https://docs.langflow.org&#34; style=&#34;text-decoration: underline;&#34;&gt;Docs&lt;/a&gt; - &lt;a href=&#34;https://astra.datastax.com/signup?type=langflow&#34; style=&#34;text-decoration: underline;&#34;&gt;Free Cloud Service&lt;/a&gt; - &lt;a href=&#34;https://docs.langflow.org/get-started-installation&#34; style=&#34;text-decoration: underline;&#34;&gt;Self Managed&lt;/a&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/langflow-ai/langflow/main/README.md&#34;&gt;&lt;img alt=&#34;README in English&#34; src=&#34;https://img.shields.io/badge/English-d9d9d9&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/langflow-ai/langflow/main/README.PT.md&#34;&gt;&lt;img alt=&#34;README in Portuguese&#34; src=&#34;https://img.shields.io/badge/Portuguese-d9d9d9&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/langflow-ai/langflow/main/README.ES.md&#34;&gt;&lt;img alt=&#34;README in Spanish&#34; src=&#34;https://img.shields.io/badge/Spanish-d9d9d9&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/langflow-ai/langflow/main/README.zh_CN.md&#34;&gt;&lt;img alt=&#34;README in Simplified Chinese&#34; src=&#34;https://img.shields.io/badge/%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-d9d9d9&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/langflow-ai/langflow/main/README.ja.md&#34;&gt;&lt;img alt=&#34;README in Japanese&#34; src=&#34;https://img.shields.io/badge/%E6%97%A5%E6%9C%AC%E8%AA%9E-d9d9d9&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/langflow-ai/langflow/main/README.KR.md&#34;&gt;&lt;img alt=&#34;README in KOREAN&#34; src=&#34;https://img.shields.io/badge/%ED%95%9C%EA%B5%AD%EC%96%B4-d9d9d9&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/langflow-ai/langflow/main/README.FR.md&#34;&gt;&lt;img alt=&#34;README in French&#34; src=&#34;https://img.shields.io/badge/Fran%C3%A7ais-d9d9d9&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;‚ú® Core features&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Python-based&lt;/strong&gt; and agnostic to models, APIs, data sources, or databases.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Visual IDE&lt;/strong&gt; for drag-and-drop building and testing of workflows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Playground&lt;/strong&gt; to immediately test and iterate workflows with step-by-step control.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-agent&lt;/strong&gt; orchestration and conversation management and retrieval.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Free cloud service&lt;/strong&gt; to get started in minutes with no setup.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Publish as an API&lt;/strong&gt; or export as a Python application.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Observability&lt;/strong&gt; with LangSmith, LangFuse, or LangWatch integration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enterprise-grade&lt;/strong&gt; security and scalability with free DataStax Langflow cloud service.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customize workflows&lt;/strong&gt; or create flows entirely just using Python.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ecosystem integrations&lt;/strong&gt; as reusable components for any model, API or database.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/langflow-ai/langflow/main/docs/static/img/integrations.png&#34; alt=&#34;Integrations&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üì¶ Quickstart&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install with uv (recommended)&lt;/strong&gt; (Python 3.10 to 3.12):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;uv pip install langflow&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install with pip&lt;/strong&gt; (Python 3.10 to 3.12):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install langflow&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cloud:&lt;/strong&gt; DataStax Langflow is a hosted environment with zero setup. &lt;a href=&#34;https://astra.datastax.com/signup?type=langflow&#34;&gt;Sign up for a free account.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Self-managed:&lt;/strong&gt; Run Langflow in your environment. &lt;a href=&#34;https://docs.langflow.org/get-started-installation&#34;&gt;Install Langflow&lt;/a&gt; to run a local Langflow server, and then use the &lt;a href=&#34;https://docs.langflow.org/get-started-quickstart&#34;&gt;Quickstart&lt;/a&gt; guide to create and execute a flow.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hugging Face:&lt;/strong&gt; &lt;a href=&#34;https://huggingface.co/spaces/Langflow/Langflow?duplicate=true&#34;&gt;Clone the space using this link&lt;/a&gt; to create a Langflow workspace.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=kinngWhaUKM&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/f1adfbe7-3c35-43a4-b265-661f3d4f875f&#34; alt=&#34;Getting Started&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚≠ê Stay up-to-date&lt;/h2&gt; &#xA;&lt;p&gt;Star Langflow on GitHub to be instantly notified of new releases.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/03168b17-a11d-4b2a-b0f7-c1cce69e5a2c&#34; alt=&#34;Star Langflow&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üëã Contribute&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions from developers of all levels. If you&#39;d like to contribute, please check our &lt;a href=&#34;https://raw.githubusercontent.com/langflow-ai/langflow/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; and help make Langflow more accessible.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#langflow-ai/langflow&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=langflow-ai/langflow&amp;amp;type=Timeline&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ù§Ô∏è Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/langflow-ai/langflow/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=langflow-ai/langflow&#34; alt=&#34;langflow contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mherrmann/helium</title>
    <updated>2024-12-22T01:47:30Z</updated>
    <id>tag:github.com,2024-12-22:/mherrmann/helium</id>
    <link href="https://github.com/mherrmann/helium" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lighter web automation with Python&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lighter web automation with Python&lt;/h1&gt; &#xA;&lt;p&gt;Helium is a Python library for automating browsers such as Chrome and Firefox. For example:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mherrmann/helium/master/docs/helium-demo.gif&#34; alt=&#34;Helium Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To get started with Helium, you need Python 3 and Chrome or Firefox.&lt;/p&gt; &#xA;&lt;p&gt;I would recommend creating a virtual environment. This lets you install Helium for just your current project, instead of globally on your whole computer.&lt;/p&gt; &#xA;&lt;p&gt;To create and activate a virtual environment, type the following commands into a command prompt window:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m venv venv&#xA;# On Mac/Linux:&#xA;source venv/bin/activate&#xA;# On Windows:&#xA;call venv\scripts\activate.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you can install Helium with &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m pip install helium&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now enter &lt;code&gt;python&lt;/code&gt; into the command prompt and (for instance) the commands in the animation at the top of this page (&lt;code&gt;from helium import *&lt;/code&gt;, ...).&lt;/p&gt; &#xA;&lt;h2&gt;Your first script&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;ve compiled a &lt;a href=&#34;https://raw.githubusercontent.com/mherrmann/helium/master/docs/cheatsheet.md&#34;&gt;cheatsheet&lt;/a&gt; that quickly teaches you all you need to know to be productive with Helium.&lt;/p&gt; &#xA;&lt;h2&gt;Connection to Selenium&lt;/h2&gt; &#xA;&lt;p&gt;Under the hood, Helium forwards each call to Selenium. The difference is that Helium&#39;s API is much more high-level. In Selenium, you need to use HTML IDs, XPaths and CSS selectors to identify web page elements. Helium on the other hand lets you refer to elements by user-visible labels. As a result, Helium scripts are typically 30-50% shorter than similar Selenium scripts. What&#39;s more, they are easier to read and more stable with respect to changes in the underlying web page.&lt;/p&gt; &#xA;&lt;p&gt;Because Helium is simply a wrapper around Selenium, you can freely mix the two libraries. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# A Helium function:&#xA;driver = start_chrome()&#xA;# A Selenium API:&#xA;driver.execute_script(&#34;alert(&#39;Hi!&#39;);&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So in other words, you don&#39;t lose anything by using Helium over pure Selenium.&lt;/p&gt; &#xA;&lt;p&gt;In addition to its more high-level API, Helium simplifies further tasks that are traditionally painful in Selenium:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;iFrames:&lt;/strong&gt; Unlike Selenium, Helium lets you interact with elements inside nested iFrames, without having to first &#34;switch to&#34; the iFrame.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Window management.&lt;/strong&gt; Helium notices when popups open or close and focuses / defocuses them like a user would. You can also easily switch to a window by (parts of) its title. No more having to iterate over Selenium window handles.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Implicit waits.&lt;/strong&gt; By default, if you try click on an element with Selenium and that element is not yet present on the page, your script fails. Helium by default waits up to 10 seconds for the element to appear.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Explicit waits.&lt;/strong&gt; Helium gives you a much nicer API for waiting for a condition on the web page to become true. For example: To wait for an element to appear in Selenium, you would write: &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;element = WebDriverWait(driver, 10).until(&#xA;    EC.presence_of_element_located((By.ID, &#34;myDynamicElement&#34;))&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; With Helium, you can write: &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;wait_until(Button(&#39;Download&#39;).exists)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status of this project&lt;/h2&gt; &#xA;&lt;p&gt;I have too little spare time to maintain this project for free. If you&#39;d like my help, please go to my &lt;a href=&#34;http://herrmann.io&#34;&gt;web site&lt;/a&gt; to ask about my consulting rates. Otherwise, unless it is very easy for me, I will usually not respond to emails or issues on the issue tracker. I will however accept and merge PRs. So if you add some functionality to Helium that may be useful for others, do share it with us by creating a Pull Request. For instructions, please see &lt;a href=&#34;https://raw.githubusercontent.com/mherrmann/helium/master/#Contributing&#34;&gt;Contributing&lt;/a&gt; below.&lt;/p&gt; &#xA;&lt;h2&gt;How you can help&lt;/h2&gt; &#xA;&lt;p&gt;I find Helium extremely useful in my own projects and feel it should be more widely known. Here&#39;s how you can help with this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Star this project on GitHub.&lt;/li&gt; &#xA; &lt;li&gt;Tell your friends and colleagues about it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/intent/tweet?text=I%20find%20Helium%20very%20useful%20for%20web%20automation%20with%20Python%3A%20https%3A//github.com/mherrmann/helium&#34;&gt;Share it on Twitter with one click&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Share it on other social media&lt;/li&gt; &#xA; &lt;li&gt;Write a blog post about Helium.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With this, I think we can eventually make Helium the de-facto standard for web automation in Python.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull Requests are very welcome. Please follow the same coding conventions as the rest of the code, in particular the use of tabs over spaces. Also, read through my &lt;a href=&#34;https://gist.github.com/mherrmann/5ce21814789152c17abd91c0b3eaadca&#34;&gt;PR guidelines&lt;/a&gt;. Doing this will save you (and me) unnecessary effort.&lt;/p&gt; &#xA;&lt;p&gt;Before you submit a PR, ensure that the tests still work:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -Ur requirements/test.txt&#xA;python setup.py test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This runs the tests against Chrome. To run them against Firefox, set the environment variable &lt;code&gt;TEST_BROWSER&lt;/code&gt; to &lt;code&gt;firefox&lt;/code&gt;. Eg. on Mac/Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TEST_BROWSER=firefox python setup.py test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;set TEST_BROWSER=firefox&#xA;python setup.py test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you do add new functionality, you should also add tests for it. Please see the &lt;a href=&#34;https://raw.githubusercontent.com/mherrmann/helium/master/tests&#34;&gt;&lt;code&gt;tests/&lt;/code&gt;&lt;/a&gt; directory for what this might look like.&lt;/p&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;I (Michael Herrmann) originally developed Helium in 2013 for a Polish IT startup called BugFree software. (It could be that you have seen Helium before at &lt;a href=&#34;https://heliumhq.com&#34;&gt;https://heliumhq.com&lt;/a&gt;.) We shut down the company at the end of 2019 and I felt it would be a shame if Helium simply disappeared from the face of the earth. So I invested some time to modernize it and bring it into a state suitable for open source.&lt;/p&gt; &#xA;&lt;p&gt;Helium used to be available for both Java and Python. But because I now only use it from Python, I didn&#39;t have time to bring the Java implementation up to speed as well. Similarly for Internet Explorer: Helium used to support it, but since I have no need for it, I removed the (probably broken) old implementation.&lt;/p&gt; &#xA;&lt;p&gt;The name Helium was chosen because it is also a chemical element like Selenium, but it is lighter.&lt;/p&gt;</summary>
  </entry>
</feed>