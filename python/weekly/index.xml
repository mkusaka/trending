<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-20T01:54:40Z</updated>
  <subtitle>Weekly Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TheAlgorithms/Python</title>
    <updated>2023-08-20T01:54:40Z</updated>
    <id>tag:github.com,2023-08-20:/TheAlgorithms/Python</id>
    <link href="https://github.com/TheAlgorithms/Python" rel="alternate"></link>
    <summary type="html">&lt;p&gt;All Algorithms implemented in Python&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;!-- Title: --&gt; &#xA; &lt;a href=&#34;https://github.com/TheAlgorithms/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/TheAlgorithms/website/1cd824df116b27029f17c2d1b42d81731f28a920/public/logo.svg?sanitize=true&#34; height=&#34;100&#34;&gt; &lt;/a&gt; &#xA; &lt;h1&gt;&lt;a href=&#34;https://github.com/TheAlgorithms/&#34;&gt;The Algorithms&lt;/a&gt; - Python&lt;/h1&gt; &#xA; &lt;!-- Labels: --&gt; &#xA; &lt;!-- First row: --&gt; &#xA; &lt;a href=&#34;https://gitpod.io/#https://github.com/TheAlgorithms/Python&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;Gitpod Ready-to-Code&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/TheAlgorithms/Python/raw/master/CONTRIBUTING.md&#34;&gt; &lt;img src=&#34;https://img.shields.io/static/v1.svg?label=Contributions&amp;amp;message=Welcome&amp;amp;color=0059b3&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;Contributions Welcome&#34;&gt; &lt;/a&gt; &#xA; &lt;img src=&#34;https://img.shields.io/github/repo-size/TheAlgorithms/Python.svg?label=Repo%20size&amp;amp;style=flat-square&#34; height=&#34;20&#34;&gt; &#xA; &lt;a href=&#34;https://the-algorithms.com/discord&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/808045925556682782.svg?logo=discord&amp;amp;colorB=7289DA&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;Discord chat&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://gitter.im/TheAlgorithms/community&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Chat-Gitter-ff69b4.svg?label=Chat&amp;amp;logo=gitter&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;Gitter chat&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- Second row: --&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://github.com/TheAlgorithms/Python/actions&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/TheAlgorithms/Python/build.yml?branch=master&amp;amp;label=CI&amp;amp;logo=github&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;GitHub Workflow Status&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/pre-commit/pre-commit&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;pre-commit&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/psf/black&#34;&gt; &lt;img src=&#34;https://img.shields.io/static/v1?label=code%20style&amp;amp;message=black&amp;amp;color=black&amp;amp;style=flat-square&#34; height=&#34;20&#34; alt=&#34;code style: black&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- Short description: --&gt; &#xA; &lt;h3&gt;All algorithms implemented in Python - for education&lt;/h3&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Implementations are for learning purposes only. They may be less efficient than the implementations in the Python standard library. Use them at your discretion.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Read through our &lt;a href=&#34;https://raw.githubusercontent.com/TheAlgorithms/Python/master/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt; before you contribute.&lt;/p&gt; &#xA;&lt;h2&gt;Community Channels&lt;/h2&gt; &#xA;&lt;p&gt;We are on &lt;a href=&#34;https://the-algorithms.com/discord&#34;&gt;Discord&lt;/a&gt; and &lt;a href=&#34;https://gitter.im/TheAlgorithms/community&#34;&gt;Gitter&lt;/a&gt;! Community channels are a great way for you to ask questions and get help. Please join us!&lt;/p&gt; &#xA;&lt;h2&gt;List of Algorithms&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://raw.githubusercontent.com/TheAlgorithms/Python/master/DIRECTORY.md&#34;&gt;directory&lt;/a&gt; for easier navigation and a better overview of the project.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>morph-labs/rift</title>
    <updated>2023-08-20T01:54:40Z</updated>
    <id>tag:github.com,2023-08-20:/morph-labs/rift</id>
    <link href="https://github.com/morph-labs/rift" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Rift: an AI-native language server for your personal AI software engineer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rift&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Morph.rift-vscode&#34;&gt;Download for VSCode&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Rift is open-source infrastructure for AI-native development environments. Rift makes your IDE &lt;em&gt;agentic&lt;/em&gt;. Software will soon be written mostly by AI software engineers that work alongside you. Codebases will soon be living, spatial artifacts that &lt;em&gt;maintain context&lt;/em&gt;, &lt;em&gt;listen to&lt;/em&gt;, &lt;em&gt;anticipate&lt;/em&gt;, &lt;em&gt;react to&lt;/em&gt;, and &lt;em&gt;execute&lt;/em&gt; your every intent. The &lt;a href=&#34;https://raw.githubusercontent.com/morph-labs/rift/main/rift-engine/&#34;&gt;Rift Code Engine&lt;/a&gt; implements an AI-native extension of the &lt;a href=&#34;https://microsoft.github.io/language-server-protocol/&#34;&gt;language server protocol&lt;/a&gt;. The &lt;a href=&#34;https://raw.githubusercontent.com/morph-labs/rift/main/editors/rift-vscode&#34;&gt;Rift VSCode extension&lt;/a&gt; implements a client and end-user interface which is the first step into that future.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/morph-labs/rift/assets/13114790/726f35ed-4959-4f69-9a80-fd903b26f909&#34;&gt;https://github.com/morph-labs/rift/assets/13114790/726f35ed-4959-4f69-9a80-fd903b26f909&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/wa5sgWMfqv&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/morph-labs/rift/main/#getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/morph-labs/rift/main/#manual-installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/morph-labs/rift/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/morph-labs/rift/main/#tips&#34;&gt;Tips&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/morph-labs/rift/main/#the-road-ahead&#34;&gt;The road ahead&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Conversational code editing&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/morph-labs/rift/raw/pranav/dev/assets/code-edit.gif&#34; alt=&#34;code edit screencast&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Codebase-wide edits&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/morph-labs/rift/raw/pranav/dev/assets/aider.gif&#34; alt=&#34;aider screencast&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Contextual codebase generation&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/morph-labs/rift/raw/pranav/dev/assets/smol.gif&#34; alt=&#34;smol screencast&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tips&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Press Command+K to focus the Rift Omnibar. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Once focused, you can either engage with the current chat or use a slash-command (e.g. &lt;code&gt;/aider&lt;/code&gt;) to spawn a new agent.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Each instance of a Rift Chat or Code Edit agent will remain attached to the open file / selection you used to spawn it. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To switch to a new file or request a code edit on a new selection, spawn a new agent by pressing Command+K and running a slash-command (e.g. &lt;code&gt;/edit&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Both Rift Chat and Code Edit see a window around your cursor or selection in the currently active editor window. To tell them about other resources in your codebase, mention them with &lt;code&gt;@&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Code Edit&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can &lt;code&gt;@&lt;/code&gt;-mention files and directories to tell your agents about other parts of the codebase. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;@&lt;/code&gt;-mentioning files currently only works with Aider if those files are tracked by git.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Currently, Rift works best when the active workspace directory is the same as the root directory of the &lt;code&gt;git&lt;/code&gt; project.&lt;/li&gt; &#xA; &lt;li&gt;Command+Shift+P -&amp;gt; &#34;Rift: Start Server&#34; restarts the server if it has been auto-installed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Install the VSCode extension from the VSCode Marketplace. By default, the extension will attempt to automatically start the Rift Code Engine every time the extension is activated. During this process, if a &lt;code&gt;rift&lt;/code&gt; executable is not found in a virtual environment under &lt;code&gt;~/.morph&lt;/code&gt;, the extension will ask you to attempt an automatic installation of a Python environment and the Rift Code Engine. To disable this behavior, such as for development, go to the VSCode settings, search for &#34;rift&#34;, and set &lt;code&gt;rift.autostart&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If the automatic installation of the Rift Code Engine fails, follow the below instructions for manual installation.&lt;/p&gt; &#xA;&lt;h3&gt;Manual installation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Rift Code Engine&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set up a Python virtual environment for Python 3.10 or higher. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On Mac OSX: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Install &lt;a href=&#34;https://brew.sh&#34;&gt;homebrew&lt;/a&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;brew install python@3.10&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;mkdir -p ~/.morph/ &amp;amp;&amp;amp; cd ~/.morph/ &amp;amp;&amp;amp; python3.10 -m venv env&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;source ./env/bin/activate&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;On Linux: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;On Ubuntu: &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;code&gt;sudo apt install software-properties-common -y&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;sudo add-apt-repository ppa:deadsnakes/ppa&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;sudo apt install python3.10 &amp;amp;&amp;amp; sudo apt install python3.10-venv&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;mkdir -p ~/.morph/ &amp;amp;&amp;amp; cd ~/.morph/ &amp;amp;&amp;amp; python3.10 -m venv env&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;source ./env/bin/activate&lt;/code&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;On Arch: &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;code&gt;yay -S python310&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;mkdir -p ~/.morph/ &amp;amp;&amp;amp; cd ~/.morph/ &amp;amp;&amp;amp; python3.10 -m venv env&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;source ./env/bin/activate&lt;/code&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;On Windows: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;We recommend that you use &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/wsl/install&#34;&gt;WSL&lt;/a&gt; with Ubuntu. Once inside a WSL shell, follow the Ubuntu installation instructions above.&lt;/li&gt; &#xA;     &lt;li&gt;Make sure &lt;strong&gt;inbound connections over port 7797 from WSL to Windows&lt;/strong&gt; are allowed (e.g. try following this &lt;a href=&#34;https://www.nextofwindows.com/allow-server-running-inside-wsl-to-be-accessible-outside-windows-10-host&#34;&gt;guide&lt;/a&gt; but for port 7797 instead of 3000).&lt;/li&gt; &#xA;     &lt;li&gt;On Windows we recommend that users disable &lt;code&gt;rift.autostart&lt;/code&gt; in VSCode and run Rift manually as &lt;code&gt;~/.morph/env/bin/rift&lt;/code&gt; after following the installation instructions below.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install Rift. We recommend that you &lt;code&gt;pip install&lt;/code&gt; Rift in a dedicated Python &amp;gt;=3.10 virtual environment from this repository. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Make sure that &lt;code&gt;which pip&lt;/code&gt; returns a path whose prefix matches the location of a virtual environment, such as the one installed above.&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;!-- - Using `pip` and PyPI: --&gt; &#xA;  &lt;!--   - `pip install --upgrade &#39;pyrift[all]&#39;` --&gt; &#xA;  &lt;!--     - `[all]` is required to pull in direct dependencies needed for third-party agents like Aider, Smol Dev, and GPT Engineer. --&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;using &lt;code&gt;pip&lt;/code&gt; from GitHub: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;pip install &#34;git+https://github.com/morph-labs/rift.git@main#egg=pyrift&amp;amp;subdirectory=rift-engine&#34;&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;From source: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;cd ~/.morph/ &amp;amp;&amp;amp; git clone git@github.com:morph-labs/rift &amp;amp;&amp;amp; cd ./rift/rift-engine/ &amp;amp;&amp;amp; pip install -e .&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Rift VSCode Extension&lt;/strong&gt; (via &lt;code&gt;code --install-extension&lt;/code&gt;, change the executable as needed):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;From the repository root: &lt;code&gt;cd ./editors/rift-vscode &amp;amp;&amp;amp; npm i &amp;amp;&amp;amp; bash reinstall.sh&lt;/code&gt;. Make sure your OpenAI API key is set in the VSCode settings (open with &lt;code&gt;Ctrl + ,&lt;/code&gt; then search for &#34;rift&#34;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;The road ahead&lt;/h2&gt; &#xA;&lt;!-- TODO(jesse): rephrase / polish in light of Rift 2.0 --&gt; &#xA;&lt;p&gt;Existing code generation tooling is presently mostly code-agnostic, operating at the level of tokens in / tokens out of code LMs. The &lt;a href=&#34;https://microsoft.github.io/language-server-protocol/&#34;&gt;language server protocol&lt;/a&gt; (LSP) defines a standard for &lt;em&gt;language servers&lt;/em&gt;, objects which index a codebase and provide structure- and runtime-aware interfaces to external development tools like IDEs.&lt;/p&gt; &#xA;&lt;p&gt;The Rift Code Engine is an AI-native language server which will expose interfaces for code transformations and code understanding in a uniform, model- and language-agnostic way --- e.g. &lt;code&gt;rift.summarize_callsites&lt;/code&gt; or &lt;code&gt;rift.launch_ai_swe_async&lt;/code&gt; should work on a Python codebase with &lt;a href=&#34;https://huggingface.co/blog/starcoder&#34;&gt;StarCoder&lt;/a&gt; as well as it works on a Rust codebase using &lt;a href=&#34;https://github.com/salesforce/CodeGen&#34;&gt;CodeGen&lt;/a&gt;. Within the language server, models will have full programmatic access to language-specific tooling like compilers, unit and integration test frameworks, and static analyzers to produce correct code with minimal user intervention. We will develop UX idioms as needed to support this functionality in the Rift IDE extensions.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to Rift at all levels of the stack, for example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;adding support for new open-source models in the Rift Code Engine&lt;/li&gt; &#xA; &lt;li&gt;implementing the Rift API for your favorite programming language&lt;/li&gt; &#xA; &lt;li&gt;UX polish in the VSCode extension&lt;/li&gt; &#xA; &lt;li&gt;adding support for your favorite editor.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://raw.githubusercontent.com/morph-labs/rift/main/CONTRIBUTORS.md&#34;&gt;contribution guide&lt;/a&gt; for details and guidelines.&lt;/p&gt; &#xA;&lt;p&gt;Programming is evolving. Join the &lt;a href=&#34;https://discord.gg/wa5sgWMfqv&#34;&gt;community&lt;/a&gt;, contribute to our roadmap, and help shape the future of software.&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d love to hear your feedback on Rift! Share your thoughts with us &lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSd6YXKYqsXI720Q2ZrxjloCfMrO_1MjF7O6ZkvdEMZZqpbmmw/viewform&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>iam-veeramalla/aws-devops-zero-to-hero</title>
    <updated>2023-08-20T01:54:40Z</updated>
    <id>tag:github.com,2023-08-20:/iam-veeramalla/aws-devops-zero-to-hero</id>
    <link href="https://github.com/iam-veeramalla/aws-devops-zero-to-hero" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AWS zero to hero repo for devops engineers to learn AWS in 30 Days. This repo includes projects, presentations, interview questions and real time examples.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;aws-devops-zero-to-hero&lt;/h1&gt; &#xA;&lt;p&gt;AWS zero to hero repo for devops engineers to learn AWS in 30 Days. This repo includes projects, presentations, interview questions and real time examples. Each day&#39;s class will provide real-time knowledge on AWS services, allowing you to apply what you&#39;ve learned and gain practical skills in working with AWS in a DevOps context.&lt;/p&gt; &#xA;&lt;h2&gt;Day 1: Introduction to AWS&lt;/h2&gt; &#xA;&lt;p&gt;You will learn what is private and public cloud. Why companies are moving to public cloud, what are the advantages of moving to cloud.&lt;/p&gt; &#xA;&lt;p&gt;Also, you will be introduced to the basics of AWS, including the core services and their significance in DevOps practices. Finally learn how to set up an AWS account and navigate the AWS Management Console.&lt;/p&gt; &#xA;&lt;h2&gt;Day 2: IAM (Identity and Access Management)&lt;/h2&gt; &#xA;&lt;p&gt;You will explore IAM, which is used for managing access to AWS resources. You&#39;ll learn how to create IAM users, groups, and roles, and how to apply permissions and security best practices to ensure proper access control.&lt;/p&gt; &#xA;&lt;h2&gt;Day 3: EC2 Instances&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll dive into EC2, which provides virtual servers in the cloud. You&#39;ll learn how to launch EC2 instances, connect to them using SSH, and understand key concepts such as instance types, security groups, and key pairs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Your First AWS Project&lt;/strong&gt;: Deploy a simple web application(such as jenkins) on the ec2 instance and access the application from outside AWS.&lt;/p&gt; &#xA;&lt;h2&gt;Day 4: AWS Networking (VPC)&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll explore AWS networking concepts, with a specific focus on VPC (Virtual Private Cloud). You&#39;ll learn how to create and configure VPCs, subnets, and route tables, enabling you to design and manage the network infrastructure for your applications.&lt;/p&gt; &#xA;&lt;h2&gt;Day 5: AWS Security&lt;/h2&gt; &#xA;&lt;p&gt;This day emphasizes security best practices in AWS. You&#39;ll learn how to implement security measures such as security groups, network ACLs (Access Control Lists), and IAM policies to ensure the confidentiality, integrity, and availability of your AWS resources.&lt;/p&gt; &#xA;&lt;h2&gt;Day 6: AWS Route 53&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; Configure and manage a domain name using Route 53. You&#39;ll register a domain, set up DNS records, and explore advanced features such as health checks, routing policies, and DNS-based failover.&lt;/p&gt; &#xA;&lt;h2&gt;Day 7: Secure VPC Setup with EC2 Instances&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Design and configure a VPC: Create a VPC with custom IP ranges. Set up public and private subnets. Configure route tables and associate subnets.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Implement network security: Set up network access control lists (ACLs) to control inbound and outbound traffic. Configure security groups for EC2 instances to allow specific ports and protocols.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Provision EC2 instances: Launch EC2 instances in both the public and private subnets. Configure security groups for the instances to allow necessary traffic. Create and assign IAM roles to the instances with appropriate permissions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Networking and routing: Set up an internet gateway to allow internet access for instances in the public subnet. Configure NAT gateway or NAT instance to enable outbound internet access for instances in the private subnet. Create appropriate route tables and associate them with the subnets.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;SSH key pair and access control: Generate an SSH key pair and securely store the private key. Configure the instances to allow SSH access only with the generated key pair. Implement IAM policies and roles to control access and permissions to AWS resources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Test and validate the setup: SSH into the EC2 instances using the private key and verify connectivity. Test network connectivity between instances in different subnets. Validate security group rules and network ACL settings.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By implementing this project, you&#39;ll gain hands-on experience in setting up a secure VPC with EC2 instances, implementing networking and routing, configuring security groups and IAM roles, and ensuring proper access control. This project will provide a practical understanding of how these AWS services work together to create a secure and scalable infrastructure for your applications.&lt;/p&gt; &#xA;&lt;h2&gt;Day 8: AWS Interview Questions on EC2, IAM and VPC&lt;/h2&gt; &#xA;&lt;h2&gt;Day 9: Amazon S3&lt;/h2&gt; &#xA;&lt;p&gt;This day focuses on Amazon S3, a scalable object storage service. You&#39;ll learn how to create S3 buckets, upload and download objects, and organize data using S3 features like versioning, lifecycle policies, and access control.&lt;/p&gt; &#xA;&lt;h2&gt;Day 10: AWS CLI&lt;/h2&gt; &#xA;&lt;h2&gt;Day 11: AWS CloudFormation&lt;/h2&gt; &#xA;&lt;p&gt;This day introduces Infrastructure as Code (IaC) using AWS CloudFormation. You&#39;ll learn how to create CloudFormation templates to automate the provisioning of resources, manage stacks, and ensure consistent infrastructure across deployments.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You&#39;ll work on creating a CloudFormation template that provisions a fully configured application stack, including EC2 instances, networking components, and security groups.&lt;/p&gt; &#xA;&lt;h2&gt;Day 12: AWS CodeCommit&lt;/h2&gt; &#xA;&lt;p&gt;This day focuses on AWS CodeCommit, a managed source control service. You&#39;ll learn how to set up a Git repository in CodeCommit, collaborate with team members, and manage version control of your codebase.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You&#39;ll configure a CodeCommit repository for a team project, including setting up access control and collaboration workflows.&lt;/p&gt; &#xA;&lt;h2&gt;Day 13: AWS CodePipeline&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll dive into AWS CodePipeline, a fully managed continuous delivery service. You&#39;ll learn how to build end-to-end CI/CD pipelines by configuring source, build, and deployment stages, automating the entire software release process.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You&#39;ll create a CI/CD pipeline using CodePipeline for an application deployment, including source code integration, build, and automatic deployment to a target environment.&lt;/p&gt; &#xA;&lt;h2&gt;Day 14: AWS CodeBuild&lt;/h2&gt; &#xA;&lt;p&gt;This day focuses on AWS CodeBuild, a fully managed build service. You&#39;ll learn how to configure build projects in CodeBuild, define build specifications, and perform build and testing processes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You&#39;ll configure and run CodeBuild for a project, including defining build specifications and integrating with other AWS services.&lt;/p&gt; &#xA;&lt;h2&gt;Day 15: AWS CodeDeploy&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll explore AWS CodeDeploy, a service for automating application deployments to various compute environments. You&#39;ll learn how to create deployment groups, configure deployment strategies, and perform automatic rollbacks if necessary.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You&#39;ll implement a Blue/Green deployment strategy for a sample application using CodeDeploy, ensuring zero-downtime deployments and easy rollback options.&lt;/p&gt; &#xA;&lt;h2&gt;Day 16: AWS CloudWatch&lt;/h2&gt; &#xA;&lt;p&gt;This day focuses on monitoring AWS resources using AWS CloudWatch. You&#39;ll learn how to create alarms, set up notifications, and collect metrics to gain insights into the health and performance of your applications and infrastructure.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You&#39;ll set up CloudWatch alarms for critical metrics of an application, define appropriate threshold conditions, and configure notification actions.&lt;/p&gt; &#xA;&lt;h2&gt;Day 17: AWS Lambda&lt;/h2&gt; &#xA;&lt;p&gt;This day introduces serverless computing with AWS Lambda. You&#39;ll learn how to create and deploy serverless functions, trigger them based on events, and leverage Lambda to build scalable and event-driven architectures.&lt;/p&gt; &#xA;&lt;h2&gt;Day 18: AWS CloudWatch Events and EventBridge&lt;/h2&gt; &#xA;&lt;p&gt;This day focuses on AWS CloudWatch Events and EventBridge, services for event-driven architectures. You&#39;ll learn how to create event rules, configure event targets, and build serverless event-driven workflows.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You&#39;ll build a serverless event-driven workflow using CloudWatch Events and EventBridge, demonstrating the integration and automation of different AWS services based on events.&lt;/p&gt; &#xA;&lt;h2&gt;Day 19: AWS CloudFront&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;ve never heard of CDN or CloudFront before, don&#39;t worry, we will start from scratch and gradually build up your understanding. By the end, you&#39;ll be well-versed in these technologies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You&#39;ll configure a s3 bucket to host a static website and learn how to serve the requests to this website through CDN that is AWS Cloud Front.&lt;/p&gt; &#xA;&lt;h2&gt;Day 20: AWS ECR (Elastic Container Registry)&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll explore AWS ECR, a fully managed container registry for storing and managing container images. You&#39;ll learn how to push and pull Docker images to and from ECR, enabling seamless integration with ECS and other container services.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You&#39;ll build a CI/CD pipeline that automatically builds, pushes, and deploys Docker images to ECR, ensuring streamlined container image management.&lt;/p&gt; &#xA;&lt;h2&gt;Day 21: AWS ECS (Elastic Container Service)&lt;/h2&gt; &#xA;&lt;p&gt;This day focuses on AWS ECS, a fully managed container orchestration service. You&#39;ll learn how to run and manage containers using ECS, including creating task definitions, managing services, and scaling with auto-scaling capabilities.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You&#39;ll deploy a multi-container application using ECS, configure auto-scaling policies, and ensure high availability and efficient resource utilization.&lt;/p&gt; &#xA;&lt;h2&gt;Day 22: AWS EKS (Elastic Kubernetes Service)&lt;/h2&gt; &#xA;&lt;p&gt;This day introduces AWS EKS, a fully managed Kubernetes service. You&#39;ll learn how to deploy and manage Kubernetes clusters using EKS, including launching worker nodes, configuring networking, and deploying applications using Kubernetes manifests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You&#39;ll deploy a sample application on EKS using Kubernetes manifests, demonstrating the capabilities of running containerized applications on a managed Kubernetes service.&lt;/p&gt; &#xA;&lt;h2&gt;Day 23: AWS Systems Manager&lt;/h2&gt; &#xA;&lt;p&gt;This day focuses on AWS Secrets Manager, a service for storing and managing secrets such as database credentials, API keys, and other sensitive information. You&#39;ll learn how to store, retrieve, and rotate secrets securely in your applications.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You&#39;ll configure Secrets Manager to store and manage secrets, integrate secret retrieval in an application, and implement secret rotation policies.&lt;/p&gt; &#xA;&lt;h2&gt;Day 24: Create Infrastructure using Terraform&lt;/h2&gt; &#xA;&lt;p&gt;This day focusses on creating infrastructure using Terraform with real time example.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You&#39;ll create a VPC and deploy 2 applications in different availability zones. We will also create a load balancer to balance the load between the instances automatically.&lt;/p&gt; &#xA;&lt;h2&gt;Day 25: AWS CloudTrail and Config&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll explore AWS CloudTrail and AWS Config, which provide auditing and compliance capabilities. You&#39;ll learn how to track API calls using CloudTrail and ensure compliance with AWS Config rules.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You&#39;ll configure CloudTrail to log API activities and set up AWS Config rules to enforce compliance policies for your AWS resources.&lt;/p&gt; &#xA;&lt;h2&gt;Day 26: AWS Elastic Load Balancer&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll explore AWS Elastic Load Balancer, a service for distributing incoming application traffic across multiple targets. You&#39;ll learn how to configure and manage load balancers to ensure high availability, fault tolerance, and scalability.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You&#39;ll configure an Elastic Load Balancer for an application, define target groups, and observe the load balancing behavior across instances.&lt;/p&gt; &#xA;&lt;h2&gt;Day 27: 500 AWS interview questions and answers topic wise for interviews.&lt;/h2&gt; &#xA;&lt;p&gt;This day focuses on learning how to migrate applications to AWS cloud. What are the most popular strategies and tools used to achieve the cloud migration.&lt;/p&gt; &#xA;&lt;h2&gt;Day 28: AWS Cloud Migration Strategies and Tools&lt;/h2&gt; &#xA;&lt;p&gt;This day focuses on learning how to migrate applications to AWS cloud. What are the most popular strategies and tools used to achieve the cloud migration.&lt;/p&gt; &#xA;&lt;h2&gt;Day 29: AWS Best Practices and Job Preparation&lt;/h2&gt; &#xA;&lt;p&gt;On the final day, you&#39;ll review best practices for AWS services, including security, cost optimization and performance.&lt;/p&gt; &#xA;&lt;h2&gt;Day 30: AWS Project with RDS&lt;/h2&gt;</summary>
  </entry>
</feed>