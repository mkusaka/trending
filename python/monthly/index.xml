<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-01T01:56:56Z</updated>
  <subtitle>Monthly Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>QwenLM/Qwen3-Coder</title>
    <updated>2025-08-01T01:56:56Z</updated>
    <id>tag:github.com,2025-08-01:/QwenLM/Qwen3-Coder</id>
    <link href="https://github.com/QwenLM/Qwen3-Coder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Qwen3-Coder is the code version of Qwen3, the large language model series developed by Qwen team, Alibaba Cloud.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name=&#34;readme-top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen3-Coder/qwen3_coder.png&#34; width=&#34;400&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen3-Coder/qwen3-coder-main.jpg&#34; width=&#34;800&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; üíú &lt;a href=&#34;https://chat.qwenlm.ai/&#34;&gt;&lt;b&gt;Qwen Chat&lt;/b&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;ü§ó &lt;a href=&#34;https://huggingface.co/collections/Qwen/qwen3-coder-687fc861e53c939e52d52d10&#34;&gt;Hugging Face&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;ü§ñ &lt;a href=&#34;https://modelscope.cn/organization/qwen&#34;&gt;ModelScope&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp; üìë &lt;a href=&#34;https://qwenlm.github.io/blog/qwen3-coder&#34;&gt;Blog&lt;/a&gt; &amp;nbsp;&amp;nbsp; ÔΩú &amp;nbsp;&amp;nbsp;üìñ &lt;a href=&#34;https://qwen.readthedocs.io/&#34;&gt;Documentation&lt;/a&gt; &lt;br&gt; &amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp; üåç &lt;a href=&#34;https://huggingface.co/spaces/Qwen/Qwen3-Coder-WebDev&#34;&gt;WebDev&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;üí¨ &lt;a href=&#34;https://github.com/QwenLM/Qwen/raw/main/assets/wechat.png&#34;&gt;WeChat (ÂæÆ‰ø°)&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;ü´® &lt;a href=&#34;https://discord.gg/CV4E9rpNSD&#34;&gt; Discord&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp; üìÑ &lt;a href=&#34;https://arxiv.org/abs/2505.09388&#34;&gt;Arxiv&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp; üëΩ &lt;a href=&#34;https://github.com/QwenLM/qwen-code&#34;&gt;Qwen Code&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Visit our Hugging Face or ModelScope organization (click links above), search checkpoints with names starting with &lt;code&gt;Qwen3-Coder-&lt;/code&gt;, and you will find all you need! Enjoy!&lt;/p&gt; &#xA;&lt;h1&gt;Latest News&lt;/h1&gt; &#xA;&lt;p&gt;üî•üî•üî• Qwen3-Coder-30B-A3B-Instruct has been released, for more information &lt;a href=&#34;https://huggingface.co/Qwen/Qwen3-Coder-30B-A3B-Instruct/tree/main&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Qwen3-Coder: Agentic Coding in the World.&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Today, we&#39;re announcing Qwen3-Coder, our most agentic code model to date. &lt;strong&gt;Qwen3-Coder&lt;/strong&gt; is available in multiple sizes, but we&#39;re excited to introduce its most powerful variant first: &lt;strong&gt;Qwen3-Coder-480B-A35B-Instruct&lt;/strong&gt; ‚Äî a 480B-parameter Mixture-of-Experts model with 35B active parameters, offering exceptional performance in both coding and agentic tasks. &lt;strong&gt;Qwen3-Coder-480B-A35B-Instruct&lt;/strong&gt; sets new state-of-the-art results among open models on Agentic Coding, Agentic Browser-Use, and Agentic Tool-Use, comparable to Claude Sonnet.&lt;/p&gt; &#xA;&lt;p&gt;üíª &lt;strong&gt;Significant Performance&lt;/strong&gt;: among open models on &lt;strong&gt;Agentic Coding&lt;/strong&gt;, &lt;strong&gt;Agentic Browser-Use&lt;/strong&gt;, and other foundational coding tasks, achieving results comparable to Claude Sonnet;&lt;/p&gt; &#xA;&lt;p&gt;üìö &lt;strong&gt;Long-context Capabilities&lt;/strong&gt;: with native support for &lt;strong&gt;256K&lt;/strong&gt; tokens, extendable up to &lt;strong&gt;1M&lt;/strong&gt; tokens using Yarn, optimized for repository-scale understanding;&lt;/p&gt; &#xA;&lt;p&gt;üõ† &lt;strong&gt;Agentic Coding&lt;/strong&gt;: supporting for most platform such as &lt;strong&gt;Qwen Code&lt;/strong&gt;, &lt;strong&gt;CLINE&lt;/strong&gt;, featuring a specially designed function call format;&lt;/p&gt; &#xA;&lt;h2&gt;Basic information&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;‚ú® Supporting long context understanding and generation with the context length of 256K tokens;&lt;/li&gt; &#xA; &lt;li&gt;‚ú® Supporting 358 coding languages;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;[&#39;ABAP&#39;, &#39;ActionScript&#39;, &#39;Ada&#39;, &#39;Agda&#39;, &#39;Alloy&#39;, &#39;ApacheConf&#39;, &#39;AppleScript&#39;, &#39;Arc&#39;, &#39;Arduino&#39;, &#39;AsciiDoc&#39;, &#39;AspectJ&#39;, &#39;Assembly&#39;, &#39;Augeas&#39;, &#39;AutoHotkey&#39;, &#39;AutoIt&#39;, &#39;Awk&#39;, &#39;Batchfile&#39;, &#39;Befunge&#39;, &#39;Bison&#39;, &#39;BitBake&#39;, &#39;BlitzBasic&#39;, &#39;BlitzMax&#39;, &#39;Bluespec&#39;, &#39;Boo&#39;, &#39;Brainfuck&#39;, &#39;Brightscript&#39;, &#39;Bro&#39;, &#39;C&#39;, &#39;C#&#39;, &#39;C++&#39;, &#39;C2hs Haskell&#39;, &#39;CLIPS&#39;, &#39;CMake&#39;, &#39;COBOL&#39;, &#39;CSS&#39;, &#39;CSV&#39;, &#34;Cap&#39;n Proto&#34;, &#39;CartoCSS&#39;, &#39;Ceylon&#39;, &#39;Chapel&#39;, &#39;ChucK&#39;, &#39;Cirru&#39;, &#39;Clarion&#39;, &#39;Clean&#39;, &#39;Click&#39;, &#39;Clojure&#39;, &#39;CoffeeScript&#39;, &#39;ColdFusion&#39;, &#39;ColdFusion CFC&#39;, &#39;Common Lisp&#39;, &#39;Component Pascal&#39;, &#39;Coq&#39;, &#39;Creole&#39;, &#39;Crystal&#39;, &#39;Csound&#39;, &#39;Cucumber&#39;, &#39;Cuda&#39;, &#39;Cycript&#39;, &#39;Cython&#39;, &#39;D&#39;, &#39;DIGITAL Command Language&#39;, &#39;DM&#39;, &#39;DNS Zone&#39;, &#39;Darcs Patch&#39;, &#39;Dart&#39;, &#39;Diff&#39;, &#39;Dockerfile&#39;, &#39;Dogescript&#39;, &#39;Dylan&#39;, &#39;E&#39;, &#39;ECL&#39;, &#39;Eagle&#39;, &#39;Ecere Projects&#39;, &#39;Eiffel&#39;, &#39;Elixir&#39;, &#39;Elm&#39;, &#39;Emacs Lisp&#39;, &#39;EmberScript&#39;, &#39;Erlang&#39;, &#39;F#&#39;, &#39;FLUX&#39;, &#39;FORTRAN&#39;, &#39;Factor&#39;, &#39;Fancy&#39;, &#39;Fantom&#39;, &#39;Forth&#39;, &#39;FreeMarker&#39;, &#39;G-code&#39;, &#39;GAMS&#39;, &#39;GAP&#39;, &#39;GAS&#39;, &#39;GDScript&#39;, &#39;GLSL&#39;, &#39;Genshi&#39;, &#39;Gentoo Ebuild&#39;, &#39;Gentoo Eclass&#39;, &#39;Gettext Catalog&#39;, &#39;Glyph&#39;, &#39;Gnuplot&#39;, &#39;Go&#39;, &#39;Golo&#39;, &#39;Gosu&#39;, &#39;Grace&#39;, &#39;Gradle&#39;, &#39;Grammatical Framework&#39;, &#39;GraphQL&#39;, &#39;Graphviz (DOT)&#39;, &#39;Groff&#39;, &#39;Groovy&#39;, &#39;Groovy Server Pages&#39;, &#39;HCL&#39;, &#39;HLSL&#39;, &#39;HTML&#39;, &#39;HTML+Django&#39;, &#39;HTML+EEX&#39;, &#39;HTML+ERB&#39;, &#39;HTML+PHP&#39;, &#39;HTTP&#39;, &#39;Haml&#39;, &#39;Handlebars&#39;, &#39;Harbour&#39;, &#39;Haskell&#39;, &#39;Haxe&#39;, &#39;Hy&#39;, &#39;IDL&#39;, &#39;IGOR Pro&#39;, &#39;INI&#39;, &#39;IRC log&#39;, &#39;Idris&#39;, &#39;Inform 7&#39;, &#39;Inno Setup&#39;, &#39;Io&#39;, &#39;Ioke&#39;, &#39;Isabelle&#39;, &#39;J&#39;, &#39;JFlex&#39;, &#39;JSON&#39;, &#39;JSON5&#39;, &#39;JSONLD&#39;, &#39;JSONiq&#39;, &#39;JSX&#39;, &#39;Jade&#39;, &#39;Jasmin&#39;, &#39;Java&#39;, &#39;Java Server Pages&#39;, &#39;JavaScript&#39;, &#39;Julia&#39;, &#39;Jupyter Notebook&#39;, &#39;KRL&#39;, &#39;KiCad&#39;, &#39;Kit&#39;, &#39;Kotlin&#39;, &#39;LFE&#39;, &#39;LLVM&#39;, &#39;LOLCODE&#39;, &#39;LSL&#39;, &#39;LabVIEW&#39;, &#39;Lasso&#39;, &#39;Latte&#39;, &#39;Lean&#39;, &#39;Less&#39;, &#39;Lex&#39;, &#39;LilyPond&#39;, &#39;Linker Script&#39;, &#39;Liquid&#39;, &#39;Literate Agda&#39;, &#39;Literate CoffeeScript&#39;, &#39;Literate Haskell&#39;, &#39;LiveScript&#39;, &#39;Logos&#39;, &#39;Logtalk&#39;, &#39;LookML&#39;, &#39;Lua&#39;, &#39;M&#39;, &#39;M4&#39;, &#39;MAXScript&#39;, &#39;MTML&#39;, &#39;MUF&#39;, &#39;Makefile&#39;, &#39;Mako&#39;, &#39;Maple&#39;, &#39;Markdown&#39;, &#39;Mask&#39;, &#39;Mathematica&#39;, &#39;Matlab&#39;, &#39;Max&#39;, &#39;MediaWiki&#39;, &#39;Metal&#39;, &#39;MiniD&#39;, &#39;Mirah&#39;, &#39;Modelica&#39;, &#39;Module Management System&#39;, &#39;Monkey&#39;, &#39;MoonScript&#39;, &#39;Myghty&#39;, &#39;NSIS&#39;, &#39;NetLinx&#39;, &#39;NetLogo&#39;, &#39;Nginx&#39;, &#39;Nimrod&#39;, &#39;Ninja&#39;, &#39;Nit&#39;, &#39;Nix&#39;, &#39;Nu&#39;, &#39;NumPy&#39;, &#39;OCaml&#39;, &#39;ObjDump&#39;, &#39;Objective-C++&#39;, &#39;Objective-J&#39;, &#39;Octave&#39;, &#39;Omgrofl&#39;, &#39;Opa&#39;, &#39;Opal&#39;, &#39;OpenCL&#39;, &#39;OpenEdge ABL&#39;, &#39;OpenSCAD&#39;, &#39;Org&#39;, &#39;Ox&#39;, &#39;Oxygene&#39;, &#39;Oz&#39;, &#39;PAWN&#39;, &#39;PHP&#39;, &#39;POV-Ray SDL&#39;, &#39;Pan&#39;, &#39;Papyrus&#39;, &#39;Parrot&#39;, &#39;Parrot Assembly&#39;, &#39;Parrot Internal Representation&#39;, &#39;Pascal&#39;, &#39;Perl&#39;, &#39;Perl6&#39;, &#39;Pickle&#39;, &#39;PigLatin&#39;, &#39;Pike&#39;, &#39;Pod&#39;, &#39;PogoScript&#39;, &#39;Pony&#39;, &#39;PostScript&#39;, &#39;PowerShell&#39;, &#39;Processing&#39;, &#39;Prolog&#39;, &#39;Propeller Spin&#39;, &#39;Protocol Buffer&#39;, &#39;Public Key&#39;, &#39;Pure Data&#39;, &#39;PureBasic&#39;, &#39;PureScript&#39;, &#39;Python&#39;, &#39;Python traceback&#39;, &#39;QML&#39;, &#39;QMake&#39;, &#39;R&#39;, &#39;RAML&#39;, &#39;RDoc&#39;, &#39;REALbasic&#39;, &#39;RHTML&#39;, &#39;RMarkdown&#39;, &#39;Racket&#39;, &#39;Ragel in Ruby Host&#39;, &#39;Raw token data&#39;, &#39;Rebol&#39;, &#39;Red&#39;, &#39;Redcode&#39;, &#34;Ren&#39;Py&#34;, &#39;RenderScript&#39;, &#39;RobotFramework&#39;, &#39;Rouge&#39;, &#39;Ruby&#39;, &#39;Rust&#39;, &#39;SAS&#39;, &#39;SCSS&#39;, &#39;SMT&#39;, &#39;SPARQL&#39;, &#39;SQF&#39;, &#39;SQL&#39;, &#39;STON&#39;, &#39;SVG&#39;, &#39;Sage&#39;, &#39;SaltStack&#39;, &#39;Sass&#39;, &#39;Scala&#39;, &#39;Scaml&#39;, &#39;Scheme&#39;, &#39;Scilab&#39;, &#39;Self&#39;, &#39;Shell&#39;, &#39;ShellSession&#39;, &#39;Shen&#39;, &#39;Slash&#39;, &#39;Slim&#39;, &#39;Smali&#39;, &#39;Smalltalk&#39;, &#39;Smarty&#39;, &#39;Solidity&#39;, &#39;SourcePawn&#39;, &#39;Squirrel&#39;, &#39;Stan&#39;, &#39;Standard ML&#39;, &#39;Stata&#39;, &#39;Stylus&#39;, &#39;SuperCollider&#39;, &#39;Swift&#39;, &#39;SystemVerilog&#39;, &#39;TOML&#39;, &#39;TXL&#39;, &#39;Tcl&#39;, &#39;Tcsh&#39;, &#39;TeX&#39;, &#39;Tea&#39;, &#39;Text&#39;, &#39;Textile&#39;, &#39;Thrift&#39;, &#39;Turing&#39;, &#39;Turtle&#39;, &#39;Twig&#39;, &#39;TypeScript&#39;, &#39;Unified Parallel C&#39;, &#39;Unity3D Asset&#39;, &#39;Uno&#39;, &#39;UnrealScript&#39;, &#39;UrWeb&#39;, &#39;VCL&#39;, &#39;VHDL&#39;, &#39;Vala&#39;, &#39;Verilog&#39;, &#39;VimL&#39;, &#39;Visual Basic&#39;, &#39;Volt&#39;, &#39;Vue&#39;, &#39;Web Ontology Language&#39;, &#39;WebAssembly&#39;, &#39;WebIDL&#39;, &#39;X10&#39;, &#39;XC&#39;, &#39;XML&#39;, &#39;XPages&#39;, &#39;XProc&#39;, &#39;XQuery&#39;, &#39;XS&#39;, &#39;XSLT&#39;, &#39;Xojo&#39;, &#39;Xtend&#39;, &#39;YAML&#39;, &#39;YANG&#39;, &#39;Yacc&#39;, &#39;Zephir&#39;, &#39;Zig&#39;, &#39;Zimpl&#39;, &#39;desktop&#39;, &#39;eC&#39;, &#39;edn&#39;, &#39;fish&#39;, &#39;mupad&#39;, &#39;nesC&#39;, &#39;ooc&#39;, &#39;reStructuredText&#39;, &#39;wisp&#39;, &#39;xBase&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;‚ú® Retain strengths in math and general capabilities from base model.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!Important]&lt;/p&gt; &#xA; &lt;p&gt;Qwen3-coder function calling relies on our new tool parser &lt;code&gt;qwen3coder_tool_parser.py&lt;/code&gt; &lt;a href=&#34;https://huggingface.co/Qwen/Qwen3-Coder-480B-A35B-Instruct/blob/main/qwen3coder_tool_parser.py&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;We updated both the special tokens and their corresponding token ids, in order to maintain consistency with Qwen3. Please make sure to use the new tokenizer.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;model name&lt;/th&gt; &#xA;   &lt;th&gt;type&lt;/th&gt; &#xA;   &lt;th&gt;length&lt;/th&gt; &#xA;   &lt;th&gt;Download&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Qwen3-Coder-480B-A35B-Instruct&lt;/td&gt; &#xA;   &lt;td&gt;instruct&lt;/td&gt; &#xA;   &lt;td&gt;256k&lt;/td&gt; &#xA;   &lt;td&gt;ü§ó &lt;a href=&#34;https://huggingface.co/Qwen/Qwen3-Coder-480B-A35B-Instruct&#34;&gt;Hugging Face&lt;/a&gt; ‚Ä¢ ü§ñ &lt;a href=&#34;https://modelscope.cn/models/Qwen/Qwen3-Coder-480B-A35B-Instruct&#34;&gt;ModelScope&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Qwen3-Coder-480B-A35B-Instruct-FP8&lt;/td&gt; &#xA;   &lt;td&gt;instruct&lt;/td&gt; &#xA;   &lt;td&gt;256k&lt;/td&gt; &#xA;   &lt;td&gt;ü§ó &lt;a href=&#34;https://huggingface.co/Qwen/Qwen3-Coder-480B-A35B-Instruct-FP8&#34;&gt;Hugging Face&lt;/a&gt; ‚Ä¢ ü§ñ &lt;a href=&#34;https://modelscope.cn/models/Qwen/Qwen3-Coder-480B-A35B-Instruct-FP8&#34;&gt;ModelScope&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Qwen3-Coder-30B-A3B-Instruct&lt;/td&gt; &#xA;   &lt;td&gt;instruct&lt;/td&gt; &#xA;   &lt;td&gt;256k&lt;/td&gt; &#xA;   &lt;td&gt;ü§ó &lt;a href=&#34;https://huggingface.co/Qwen/Qwen3-Coder-30B-A3B-Instruct&#34;&gt;Hugging Face&lt;/a&gt; ‚Ä¢ ü§ñ &lt;a href=&#34;https://modelscope.cn/models/Qwen/Qwen3-Coder-30B-A3B-Instruct&#34;&gt;ModelScope&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Qwen3-Coder-30B-A3B-Instruct-FP8&lt;/td&gt; &#xA;   &lt;td&gt;instruct&lt;/td&gt; &#xA;   &lt;td&gt;256k&lt;/td&gt; &#xA;   &lt;td&gt;ü§ó &lt;a href=&#34;https://huggingface.co/Qwen/Qwen3-Coder-30B-A3B-Instruct-FP8&#34;&gt;Hugging Face&lt;/a&gt; ‚Ä¢ ü§ñ &lt;a href=&#34;https://modelscope.cn/models/Qwen/Qwen3-Coder-30B-A3B-Instruct-FP8&#34;&gt;ModelScope&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Detailed performance and introduction are shown in this &lt;a href=&#34;https://qwenlm.github.io/blog/qwen3-coder&#34;&gt; üìë blog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!Important] &lt;strong&gt;Qwen3-Coder-480B-A35B-Instruct&lt;/strong&gt; are instruction models for chatting;&lt;/p&gt; &#xA; &lt;p&gt;This model supports only non-thinking mode and does not generate &lt;code&gt;&amp;lt;think&amp;gt;&amp;lt;/think&amp;gt;&lt;/code&gt; blocks in its output. Meanwhile, specifying &lt;code&gt;enable_thinking=False&lt;/code&gt; is no longer required.**&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;üëâüèª Chat with Qwen3-Coder&lt;/h3&gt; &#xA;&lt;p&gt;You can just write several lines of code with &lt;code&gt;transformers&lt;/code&gt; to chat with Qwen3-Coder-480B-A35B-Instruct. Essentially, we build the tokenizer and the model with &lt;code&gt;from_pretrained&lt;/code&gt; method, and we use generate method to perform chatting with the help of chat template provided by the tokenizer. Below is an example of how to chat with &lt;strong&gt;Qwen3-Coder-480B-A35B-Instruct&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from transformers import AutoModelForCausalLM, AutoTokenizer&#xA;&#xA;model_name = &#34;Qwen/Qwen3-Coder-480B-A35B-Instruct&#34;&#xA;&#xA;model = AutoModelForCausalLM.from_pretrained(&#xA;    model_name,&#xA;    torch_dtype=&#34;auto&#34;,&#xA;    device_map=&#34;auto&#34;&#xA;)&#xA;tokenizer = AutoTokenizer.from_pretrained(model_name)&#xA;&#xA;prompt = &#34;write a quick sort algorithm.&#34;&#xA;messages = [&#xA;    {&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: prompt}&#xA;]&#xA;text = tokenizer.apply_chat_template(&#xA;    messages,&#xA;    tokenize=False,&#xA;    add_generation_prompt=True&#xA;)&#xA;model_inputs = tokenizer([text], return_tensors=&#34;pt&#34;).to(model.device)&#xA;&#xA;generated_ids = model.generate(&#xA;    **model_inputs,&#xA;    max_new_tokens=65536&#xA;)&#xA;generated_ids = [&#xA;    output_ids[len(input_ids):] for input_ids, output_ids in zip(model_inputs.input_ids, generated_ids)&#xA;]&#xA;&#xA;response = tokenizer.batch_decode(generated_ids, skip_special_tokens=True)[0]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;apply_chat_template()&lt;/code&gt; function is used to convert the messages into a format that the model can understand. The &lt;code&gt;add_generation_prompt&lt;/code&gt; argument is used to add a generation prompt, which refers to &lt;code&gt;&amp;lt;|im_start|&amp;gt;assistant\n&lt;/code&gt; to the input. Notably, we apply ChatML template for chat models following our previous practice. The &lt;code&gt;max_new_tokens&lt;/code&gt; argument is used to set the maximum length of the response. The &lt;code&gt;tokenizer.batch_decode()&lt;/code&gt; function is used to decode the response. In terms of the input, the above messages is an example to show how to format your dialog history and system prompt. You can use the other size of instruct model in the same way.&lt;/p&gt; &#xA;&lt;h4&gt;Fill in the middle with Qwen3-Coder&lt;/h4&gt; &#xA;&lt;p&gt;The code insertion task, also referred to as the &#34;fill-in-the-middle&#34; challenge, requires the insertion of code segments in a manner that bridges the gaps within a given code context. For an approach aligned with best practices, we recommend adhering to the formatting guidelines outlined in the paper &#34;Efficient Training of Language Models to Fill in the Middle&#34;[&lt;a href=&#34;https://arxiv.org/abs/2207.14255&#34;&gt;arxiv&lt;/a&gt;].&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!Important] It should be noted that FIM is supported in every version of Qwen3-Coder. Qwen3-Coder-480B-A35B-Instruct is shown here as an example.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The prompt should be structured as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;prompt = &#39;&amp;lt;|fim_prefix|&amp;gt;&#39; + prefix_code + &#39;&amp;lt;|fim_suffix|&amp;gt;&#39; + suffix_code + &#39;&amp;lt;|fim_middle|&amp;gt;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Following the approach mentioned, an example would be structured in this manner:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from transformers import AutoTokenizer, AutoModelForCausalLM&#xA;# load model&#xA;device = &#34;cuda&#34; # the device to load the model onto&#xA;&#xA;TOKENIZER = AutoTokenizer.from_pretrained(&#34;Qwen/Qwen3-Coder-480B-A35B-Instruct&#34;)&#xA;MODEL = AutoModelForCausalLM.from_pretrained(&#34;Qwen/Qwen3-Coder-480B-A35B-Instruct&#34;, device_map=&#34;auto&#34;).eval()&#xA;&#xA;&#xA;input_text = &#34;&#34;&#34;&amp;lt;|fim_prefix|&amp;gt;def quicksort(arr):&#xA;    if len(arr) &amp;lt;= 1:&#xA;        return arr&#xA;    pivot = arr[len(arr) // 2]&#xA;    &amp;lt;|fim_suffix|&amp;gt;&#xA;    middle = [x for x in arr if x == pivot]&#xA;    right = [x for x in arr if x &amp;gt; pivot]&#xA;    return quicksort(left) + middle + quicksort(right)&amp;lt;|fim_middle|&amp;gt;&#34;&#34;&#34;&#xA;            &#xA;messages = [&#xA;    {&#34;role&#34;: &#34;system&#34;, &#34;content&#34;: &#34;You are a code completion assistant.&#34;},&#xA;    {&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: input_text}&#xA;]&#xA;&#xA;&#xA;text = tokenizer.apply_chat_template(&#xA;    messages,&#xA;    tokenize=False,&#xA;    add_generation_prompt=True&#xA;)&#xA;model_inputs = TOKENIZER([text], return_tensors=&#34;pt&#34;).to(model.device)&#xA;&#xA;# Use `max_new_tokens` to control the maximum output length.&#xA;eos_token_ids = [151659, 151661, 151662, 151663, 151664, 151643, 151645]&#xA;generated_ids = MODEL.generate(model_inputs.input_ids, max_new_tokens=512, do_sample=False, eos_token_id=eos_token_ids)[0]&#xA;# The generated_ids include prompt_ids, we only need to decode the tokens after prompt_ids.&#xA;output_text = TOKENIZER.decode(generated_ids[len(model_inputs.input_ids[0]):], skip_special_tokens=True)&#xA;&#xA;print(f&#34;Prompt: {input_text}\n\nGenerated text: {output_text}&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use Cases&lt;/h2&gt; &#xA;&lt;h3&gt;Example: Physics-Based Chimney Demolition Simulation with Controlled Explosion&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Prompt with Qwen Chat Web Dev &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;‰ΩøÁî® three.js, cannon-es.js ÁîüÊàê‰∏Ä‰∏™ÈúáÊíºÁöÑ3DÂª∫Á≠ëÊãÜÈô§ÊºîÁ§∫„ÄÇ&#xA;&#xA;## Âú∫ÊôØËÆæÁΩÆÔºö&#xA;- Âú∞Èù¢ÊòØ‰∏Ä‰∏™Ê∑±ÁÅ∞Ëâ≤Ê∑∑ÂáùÂúüÂπ≥Èù¢ÔºåÂ∞∫ÂØ∏80*80Ôºå&#xA;- ÊâÄÊúâÁâ©‰Ωì‰∏•Ê†ºÈÅµÂæ™Áé∞ÂÆûÁâ©ÁêÜËßÑÂàôÔºåÂåÖÊã¨ÈáçÂäõ„ÄÅÊë©Êì¶Âäõ„ÄÅÁ¢∞ÊíûÊ£ÄÊµãÂíåÂä®ÈáèÂÆàÊÅí&#xA;&#xA;## Âª∫Á≠ëÁªìÊûÑÔºö&#xA;- ‰∏ÄÂ∫ßÂúÜÂΩ¢È´òÂ±ÇÂª∫Á≠ëÔºåÂë®ÈïøÂØπÂ∫î20‰∏™ÊñπÂùó&#xA;- Âª∫Á≠ëÊÄªÈ´òÂ∫¶60‰∏™ÊñπÂùó&#xA;- ÊØèÂ±ÇÈááÁî®Á†ñÁ†åÁªìÊûÑÔºåÊñπÂùó‰∏éÁ†ñÁªìÊûÑÂª∫Á≠ë‰∏ÄËá¥, ÈîôÂºÄ50%ÊéíÂàóÔºåÂ¢ûÂº∫ÁªìÊûÑÁ®≥ÂÆöÊÄß&#xA;- Âª∫Á≠ëÂ§ñÂ¢ô‰ΩøÁî®Á±≥Ëâ≤ÊñπÂùó&#xA;- **ÈáçË¶ÅÔºöÊñπÂùóÂàùÂßãÊéíÂàóÊó∂ÂøÖÈ°ªÁ°Æ‰øùÁ¥ßÂØÜË¥¥ÂêàÔºåÊó†Èó¥ÈöôÔºåÂèØ‰ª•ÈÄöËøáËΩªÂæÆÈáçÂè†ÊàñË∞ÉÊï¥ÂçäÂæÑÊù•ÂÆûÁé∞**&#xA;- **ÈáçË¶ÅÔºöÂª∫Á≠ëÂàùÂßãÂåñÂÆåÊàêÂêéÔºåÊâÄÊúâÊñπÂùóÂ∫îËØ•Â§Ñ‰∫éÁâ©ÁêÜ&#34;Áù°Áú†&#34;Áä∂ÊÄÅÔºåÁ°Æ‰øùÂª∫Á≠ëÂú®ÁàÜÁÇ∏Ââç‰øùÊåÅÂÆåÁæéÁöÑÈùôÊ≠¢Áä∂ÊÄÅÔºå‰∏ç‰ºöÂõ†ÈáçÂäõËÄå‰∏ãÊ≤âÊàñÊùæÊï£**&#xA;- Âª∫Á≠ëÁ†ñÂùó‰πãÈó¥‰ΩøÁî®Á≤òÊÄßÊùêÊñôÂ°´ÂÖÖÔºà‰∏çÂèØËßÅÔºâÔºåÈÄöËøáÈ´òÊë©Êì¶ÂäõÔºà0.8+ÔºâÂíå‰ΩéÂºπÊÄßÔºà0.05‰ª•‰∏ãÔºâÊù•Ê®°ÊãüÁ≤òÂêàÊïàÊûú&#xA;- Á†ñÂùóÂú®Âª∫Á≠ëÂÄíÂ°åÁû¨Èó¥‰∏ç‰ºöÊï£ÊéâÔºåËÄåÊòØÂª∫Á≠ë‰Ωú‰∏∫‰∏Ä‰∏™Êï¥‰ΩìÂÄíÂú®Âú∞Èù¢ÁöÑÊó∂ÂÄôÊâçÂõ†ÂèóÂäõËøáÂ§ßËÄåÊï£Êéâ&#xA;&#xA;## ÂÆöÂêëÁàÜÁ†¥Á≥ªÁªüÔºö&#xA;- Âú®Âª∫Á≠ëÁöÑÁ¨¨1Â±ÇÁöÑÊúÄÂè≥‰æßÊñπÂùóÈôÑËøëÂÆâË£ÖÁàÜÁÇ∏Ë£ÖÁΩÆÔºà‰∏çÂèØËßÅÔºâ&#xA;- Êèê‰æõÊìç‰ΩúÊåâÈíÆÁÇπÂáªÁàÜÁÇ∏&#xA;- **ÁàÜÁÇ∏Êó∂Âî§ÈÜíÊâÄÊúâÁõ∏ÂÖ≥ÊñπÂùóÁöÑÁâ©ÁêÜÁä∂ÊÄÅ**&#xA;- ÁàÜÁÇ∏ÁÇπ‰∫ßÁîüÂçäÂæÑ2ÁöÑÂº∫ÂäõÂÜ≤ÂáªÊ≥¢ÔºåÂÜ≤ÂáªÊ≥¢ÂΩ±ÂìçÂà∞ÁöÑÊñπÂùó, ÂèóÂà∞2-5Âçï‰ΩçÁöÑÂÜ≤ÂáªÂäõ&#xA;&#xA;## Âª∫Á≠ëÁ®≥ÂÆöÊÄßË¶ÅÊ±ÇÔºö&#xA;- **Á°Æ‰øùÂª∫Á≠ëÂú®Êú™ÁàÜÁÇ∏Êó∂ÂÆåÂÖ®ÈùôÊ≠¢ÔºåÊó†‰ªª‰ΩïÊôÉÂä®Êàñ‰∏ãÊ≤â**&#xA;- **Áâ©ÁêÜ‰∏ñÁïåÂàùÂßãÂåñÂêéÁªôÂª∫Á≠ëÂá†‰∏™Áâ©ÁêÜÊ≠•È™§Êù•Ëá™ÁÑ∂Á®≥ÂÆöÔºåÊàñ‰ΩøÁî®Áù°Áú†Êú∫Âà∂**&#xA;- **ÊñπÂùóÈó¥ÁöÑÊé•Ëß¶ÊùêÊñôÂ∫îÂÖ∑ÊúâÈ´òÊë©Êì¶ÂäõÂíåÊûÅ‰ΩéÂºπÊÄßÔºåÊ®°ÊãüÁ†ñÂùóÈó¥ÁöÑÁ†ÇÊµÜÁ≤òÂêà**&#xA;&#xA;## ÈúáÊíºÁöÑÂÄíÂ°åÊïàÊûúÔºö&#xA;- ÊñπÂùóÂú®ÁàÜÁÇ∏ÂÜ≤Âáª‰∏ã‰∏ç‰ªÖÈ£ûÊï£ÔºåËøò‰ºöÂú®Á©∫‰∏≠ÁøªÊªöÂíåÁ¢∞Êíû&#xA;- ÁÉüÂ∞ò‰ºöÈöèÁùÄÂª∫Á≠ëÂÄíÂ°åÈÄêÊ∏êÊâ©Êï£ÔºåËê•ÈÄ†ÁúüÂÆûÁöÑÊãÜÈô§Áé∞Âú∫Ê∞õÂõ¥&#xA;&#xA;## Â¢ûÂº∫ÁöÑËßÜËßâÊïàÊûúÔºö&#xA;- Ê∑ªÂä†ÁéØÂ¢ÉÂÖâÁÖßÂèòÂåñÔºöÁàÜÁÇ∏Áû¨Èó¥‰∫ÆÂ∫¶ÊøÄÂ¢ûÔºåÁÑ∂ÂêéË¢´ÁÉüÂ∞òÈÅÆÊå°ÂèòÊöó&#xA;- Á≤íÂ≠êÁ≥ªÁªüÂåÖÊã¨ÔºöÁÉüÈõæ„ÄÅÁÅ∞Â∞ò&#xA;&#xA;## ÊäÄÊúØË¶ÅÊ±ÇÔºö&#xA;- Á≤íÂ≠êÁ≥ªÁªüÁî®‰∫éÁÉüÈõæÂíåÁÅ∞Â∞òÊïàÊûú&#xA;- ÊâÄÊúâ‰ª£Á†ÅÈõÜÊàêÂú®Âçï‰∏™HTMLÊñá‰ª∂‰∏≠ÔºåÂåÖÂê´ÂøÖË¶ÅÁöÑCSSÊ†∑Âºè&#xA;- Ê∑ªÂä†ÁÆÄÂçïÁöÑUIÊéßÂà∂ÔºöÈáçÁΩÆÊåâÈíÆ„ÄÅÁõ∏Êú∫ËßíÂ∫¶ÂàáÊç¢, ÁàÜÁÇ∏ÊåâÈíÆ, Èº†Ê†áÂ∑¶ÈîÆÊéßÂà∂ÊëÑÂÉèÊú∫ËßíÂ∫¶ÔºåÂè≥ÈîÆÊéßÂà∂ÊëÑÂÉèÊú∫‰ΩçÁΩÆÔºåÊªöËΩÆÊéßÂà∂ÊëÑÂÉèÊú∫ÁÑ¶Ë∑ù&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen3-Coder/demo1.mp4&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen3-Coder/main/assets/usage_demo_example1.png&#34; width=&#34;400&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h3&gt;Example: Multicolor and Interactive Animation&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Prompt with Cline [act mode] &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;Create an amazing animation multicolor and interactive using p5js&#xA;&#xA;use this cdn:&#xA;https://cdn.jsdelivr.net/npm/p5@1.7.0/lib/p5.min.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen3-Coder/demo2.mp4&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen3-Coder/main/assets/usage_demo_example2.png&#34; width=&#34;400&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h3&gt;Example: 3D Google Earth&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Prompt with Qwen Chat Web Dev &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;To create a 3D Google Earth, you need to load the terrain map correctly. You can use any online resource. The code is written into an HTML file.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen3-Coder/demo3.mp4&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen3-Coder/main/assets/usage_demo_example3.png&#34; width=&#34;400&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h3&gt;Example: Testing Your WPM with a Famous Quote&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Prompt with Qwen-Code CLI &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;Create an interesting typing game with a keyboard in the lower middle of the screen and some famous articles in the upper middle. When the user types a word correctly, a cool reaction should be given to encourage him. Design a modern soft color scheme inspired by macarons. Come up with a very creative solution first, and then start writing code.&#xA;The game should be able to support typing, and you need to neglect upcase and lowercase.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen3-Coder/demo4.mp4&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen3-Coder/main/assets/usage_demo_example4.png&#34; width=&#34;400&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h3&gt;Example: Bouncing Ball in Rotation Hypercube&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Prompt with Qwen Chat Web Dev &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;Make a page in HTML that shows an animation of a ball bouncing in a rotating hypercube&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen3-Coder/demo5.mp4&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen3-Coder/main/assets/usage_demo_example5.png&#34; width=&#34;400&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h3&gt;Example: Solar System Simulation&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Prompt with Cline [act mode] &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;write a web page to show the solar system simulation&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen3-Coder/demo6.mp4&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen3-Coder/main/assets/usage_demo_example6.png&#34; width=&#34;400&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h3&gt;Example: DUET Game&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Prompt with Cline [act mode] &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;Create a complete, single-file HTML game with CSS and JavaScript. The game is inspired by &#34;Duet&#34;.&#xA;&#xA;Gameplay:&#xA;&#xA;There are two balls, one red and one blue, rotating around a central point.&#xA;The player uses the &#39;A&#39; and &#39;D&#39; keys to rotate them counter-clockwise and clockwise.&#xA;White rectangular obstacles move down from the top of the screen.&#xA;The player must rotate the balls to avoid hitting the obstacles.&#xA;If a ball hits an obstacle, the game is over.&#xA;Visuals:&#xA;&#xA;Make the visual effects amazing.&#xA;Use a dark background with neon glowing effects for the balls and obstacles.&#xA;Animations should be very smooth.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen3-Coder/demo7.mp4&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/QwenLM/Qwen3-Coder/main/assets/usage_demo_example7.png&#34; width=&#34;400&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#QwenLM/Qwen3-Coder&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=QwenLM/Qwen3-Coder&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find our work helpful, feel free to give us a cite.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{qwen3technicalreport,&#xA;      title={Qwen3 Technical Report}, &#xA;      author={Qwen Team},&#xA;      year={2025},&#xA;      eprint={2505.09388},&#xA;      archivePrefix={arXiv},&#xA;      primaryClass={cs.CL},&#xA;      url={https://arxiv.org/abs/2505.09388},&#xA;}&#xA;@article{hui2024qwen2,&#xA;  title={Qwen2. 5-Coder Technical Report},&#xA;  author={Hui, Binyuan and Yang, Jian and Cui, Zeyu and Yang, Jiaxi and Liu, Dayiheng and Zhang, Lei and Liu, Tianyu and Zhang, Jiajun and Yu, Bowen and Dang, Kai and others},&#xA;  journal={arXiv preprint arXiv:2409.12186},&#xA;  year={2024}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contact Us&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested to leave a message to either our research team or product team, join our &lt;a href=&#34;https://discord.gg/z3GAxXZ9Ce&#34;&gt;Discord&lt;/a&gt; or &lt;a href=&#34;https://github.com/QwenLM/Qwen/raw/main/assets/wechat.png&#34;&gt;WeChat groups&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34; style=&#34;font-size: 14px; color: #555; margin-top: 20px;&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/QwenLM/Qwen3-Coder/main/#readme-top&#34; style=&#34;text-decoration: none; color: #007bff; font-weight: bold;&#34;&gt; ‚Üë Back to Top ‚Üë &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>frappe/hrms</title>
    <updated>2025-08-01T01:56:56Z</updated>
    <id>tag:github.com,2025-08-01:/frappe/hrms</id>
    <link href="https://github.com/frappe/hrms" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Source HR and Payroll Software&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://frappe.io/hr&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/frappe/hrms/develop/.github/frappe-hr-logo.png&#34; height=&#34;80px&#34; width=&#34;80px&#34; alt=&#34;Frappe HR Logo&#34;&gt; &lt;/a&gt; &#xA; &lt;h2&gt;Frappe HR&lt;/h2&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA; &lt;p&gt;Open Source, modern, and easy-to-use HR and Payroll Software&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/frappe/hrms/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/frappe/hrms/actions/workflows/ci.yml/badge.svg?branch=develop&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/frappe/hrms&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/frappe/hrms/branch/develop/graph/badge.svg?token=0TwvyUg3I5&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://trendshift.io/repositories/10972&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://trendshift.io/api/badge/repositories/10972&#34; alt=&#34;frappe%2Fhrms | Trendshift&#34; style=&#34;width: 250px; height: 55px;&#34; width=&#34;250&#34; height=&#34;55&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/frappe/hrms/develop/.github/hrms-hero.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://frappe.io/hr&#34;&gt;Website&lt;/a&gt; - &#xA; &lt;a href=&#34;https://docs.frappe.io/hr/introduction&#34;&gt;Documentation&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Frappe HR&lt;/h2&gt; &#xA;&lt;p&gt;Frappe HR has everything you need to drive excellence within the company. It&#39;s a complete HRMS solution with over 13 different modules right from Employee Management, Onboarding, Leaves, to Payroll, Taxation, and more!&lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;When Frappe team started growing in terms of size, we needed an open-source HR and Payroll software. We didn&#39;t find any &#34;true&#34; open-source HR software out there and so decided to build one ourselves. Initially, it was a set of modules within ERPNext but version 14 onwards, as the modules became more mature, Frappe HR was created as a separate product.&lt;/p&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Employee Lifecycle&lt;/strong&gt;: From onboarding employees, managing promotions and transfers, all the way to documenting feedback with exit interviews, make life easier for employees throughout their life cycle.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Leave and Attendance&lt;/strong&gt;: Configure leave policies, pull regional holidays with a click, check-in and check-out with geolocation capturing, track leave balances and attendance with reports.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Expense Claims and Advances&lt;/strong&gt;: Manage employee advances, claim expenses, configure multi-level approval workflows, all this with seamless integration with ERPNext accounting.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Performance Management&lt;/strong&gt;: Track goals, align goals with key result areas (KRAs), enable employees to evaluate themselves, make managing appraisal cycles easy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Payroll &amp;amp; Taxation&lt;/strong&gt;: Create salary structures, configure income tax slabs, run standard payroll, accomodate additional salaries and off cycle payments, view income breakup on salary slips and so much more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Frappe HR Mobile App&lt;/strong&gt;: Apply for and approve leaves on the go, check-in and check-out, access employee profile right from the mobile app.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;View Screenshots&lt;/summary&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/frappe/hrms/develop/.github/hrms-appraisal.png&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/frappe/hrms/develop/.github/hrms-requisition.png&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/frappe/hrms/develop/.github/hrms-attendance.png&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/frappe/hrms/develop/.github/hrms-salary.png&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/frappe/hrms/develop/.github/hrms-pwa.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Under the Hood&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/frappe/frappe&#34;&gt;&lt;strong&gt;Frappe Framework&lt;/strong&gt;&lt;/a&gt;: A full-stack web application framework written in Python and Javascript. The framework provides a robust foundation for building web applications, including a database abstraction layer, user authentication, and a REST API.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/frappe/frappe-ui&#34;&gt;&lt;strong&gt;Frappe UI&lt;/strong&gt;&lt;/a&gt;: A Vue-based UI library, to provide a modern user interface. The Frappe UI library provides a variety of components that can be used to build single-page applications on top of the Frappe Framework.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Production Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Managed Hosting&lt;/h3&gt; &#xA;&lt;p&gt;You can try &lt;a href=&#34;https://frappecloud.com&#34;&gt;Frappe Cloud&lt;/a&gt;, a simple, user-friendly and sophisticated &lt;a href=&#34;https://github.com/frappe/press&#34;&gt;open-source&lt;/a&gt; platform to host Frappe applications with peace of mind.&lt;/p&gt; &#xA;&lt;p&gt;It takes care of installation, setup, upgrades, monitoring, maintenance and support of your Frappe deployments. It is a fully featured developer platform with an ability to manage and control multiple Frappe deployments.&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;a href=&#34;https://frappecloud.com/hrms/signup&#34; target=&#34;_blank&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://frappe.io/files/try-on-fc-white.png&#34;&gt; &#xA;   &lt;img src=&#34;https://frappe.io/files/try-on-fc-black.png&#34; alt=&#34;Try on Frappe Cloud&#34; height=&#34;28&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Development setup&lt;/h2&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;You need Docker, docker-compose and git setup on your machine. Refer &lt;a href=&#34;https://docs.docker.com/&#34;&gt;Docker documentation&lt;/a&gt;. After that, run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/frappe/hrms&#xA;cd hrms/docker&#xA;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Wait for some time until the setup script creates a site. After that you can access &lt;code&gt;http://localhost:8000&lt;/code&gt; in your browser and the login screen for HR should show up.&lt;/p&gt; &#xA;&lt;p&gt;Use the following credentials to log in:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Username: &lt;code&gt;Administrator&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Password: &lt;code&gt;admin&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Local&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Set up bench by following the &lt;a href=&#34;https://frappeframework.com/docs/user/en/installation&#34;&gt;Installation Steps&lt;/a&gt; and start the server and keep it running &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ bench start&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;In a separate terminal window, run the following commands &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ bench new-site hrms.local&#xA;$ bench get-app erpnext&#xA;$ bench get-app hrms&#xA;$ bench --site hrms.local install-app hrms&#xA;$ bench --site hrms.local add-to-hosts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can access the site at &lt;code&gt;http://hrms.local:8080&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Learning and Community&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://frappe.school&#34;&gt;Frappe School&lt;/a&gt; - Learn Frappe Framework and ERPNext from the various courses by the maintainers or from the community.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.frappe.io/hr&#34;&gt;Documentation&lt;/a&gt; - Extensive documentation for Frappe HR.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discuss.erpnext.com/&#34;&gt;User Forum&lt;/a&gt; - Engage with the community of ERPNext users and service providers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/frappehr&#34;&gt;Telegram Group&lt;/a&gt; - Get instant help from the community of users.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/frappe/erpnext/wiki/Issue-Guidelines&#34;&gt;Issue Guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://erpnext.com/security&#34;&gt;Report Security Vulnerabilities&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/frappe/erpnext/wiki/Contribution-Guidelines&#34;&gt;Pull Request Requirements&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Logo and Trademark Policy&lt;/h2&gt; &#xA;&lt;p&gt;Please read our &lt;a href=&#34;https://raw.githubusercontent.com/frappe/hrms/develop/TRADEMARK_POLICY.md&#34;&gt;Logo and Trademark Policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34; style=&#34;padding-top: 0.75rem;&#34;&gt; &#xA; &lt;a href=&#34;https://frappe.io&#34; target=&#34;_blank&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://frappe.io/files/Frappe-white.png&#34;&gt; &#xA;   &lt;img src=&#34;https://frappe.io/files/Frappe-black.png&#34; alt=&#34;Frappe Technologies&#34; height=&#34;28&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>hesreallyhim/awesome-claude-code</title>
    <updated>2025-08-01T01:56:56Z</updated>
    <id>tag:github.com,2025-08-01:/hesreallyhim/awesome-claude-code</id>
    <link href="https://github.com/hesreallyhim/awesome-claude-code" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A curated list of awesome commands, files, and workflows for Claude Code&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;/h1&gt; &#xA;&lt;!-- [![Awesome](https://awesome.re/badge-flat2.svg)](https://awesome.re) --&gt; &#xA;&lt;pre style=&#34;display: inline-block; text-align: left;&#34;&gt;&#xA; ‚ñà‚ñà‚ñà‚ñà‚ñà‚îê ‚ñà‚ñà‚îê    ‚ñà‚ñà‚îê‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê ‚ñà‚ñà‚ñà‚îê   ‚ñà‚ñà‚ñà‚îê‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê&#xA;‚ñà‚ñà‚îå‚îÄ‚îÄ‚ñà‚ñà‚îê‚ñà‚ñà‚îÇ    ‚ñà‚ñà‚îÇ‚ñà‚ñà‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îò‚ñà‚ñà‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îò‚ñà‚ñà‚îå‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚îê‚ñà‚ñà‚ñà‚ñà‚îê ‚ñà‚ñà‚ñà‚ñà‚îÇ‚ñà‚ñà‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îÇ‚ñà‚ñà‚îÇ ‚ñà‚îê ‚ñà‚ñà‚îÇ‚ñà‚ñà‚ñà‚ñà‚ñà‚îê  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê‚ñà‚ñà‚îÇ   ‚ñà‚ñà‚îÇ‚ñà‚ñà‚îå‚ñà‚ñà‚ñà‚ñà‚îå‚ñà‚ñà‚îÇ‚ñà‚ñà‚ñà‚ñà‚ñà‚îê&#xA;‚ñà‚ñà‚îå‚îÄ‚îÄ‚ñà‚ñà‚îÇ‚ñà‚ñà‚îÇ‚ñà‚ñà‚ñà‚îê‚ñà‚ñà‚îÇ‚ñà‚ñà‚îå‚îÄ‚îÄ‚îò  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚îÇ‚ñà‚ñà‚îÇ   ‚ñà‚ñà‚îÇ‚ñà‚ñà‚îÇ‚îî‚ñà‚ñà‚îå‚îò‚ñà‚ñà‚îÇ‚ñà‚ñà‚îå‚îÄ‚îÄ‚îò&#xA;‚ñà‚ñà‚îÇ  ‚ñà‚ñà‚îÇ‚îî‚ñà‚ñà‚ñà‚îå‚ñà‚ñà‚ñà‚îå‚îò‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îÇ‚îî‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îå‚îò‚ñà‚ñà‚îÇ ‚îî‚îÄ‚îò ‚ñà‚ñà‚îÇ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê&#xA;‚îî‚îÄ‚îò  ‚îî‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îò‚îî‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îò     ‚îî‚îÄ‚îò‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&#xA; ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#xA;&#xA; ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê‚ñà‚ñà‚îê      ‚ñà‚ñà‚ñà‚ñà‚ñà‚îê ‚ñà‚ñà‚îê   ‚ñà‚ñà‚îê‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê&#xA;‚ñà‚ñà‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îò‚ñà‚ñà‚îÇ     ‚ñà‚ñà‚îå‚îÄ‚îÄ‚ñà‚ñà‚îê‚ñà‚ñà‚îÇ   ‚ñà‚ñà‚îÇ‚ñà‚ñà‚îå‚îÄ‚îÄ‚ñà‚ñà‚îê‚ñà‚ñà‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îò    ‚ñà‚ñà‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îò‚ñà‚ñà‚îå‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚îê‚ñà‚ñà‚îå‚îÄ‚îÄ‚ñà‚ñà‚îê‚ñà‚ñà‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;‚ñà‚ñà‚îÇ     ‚ñà‚ñà‚îÇ     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îÇ‚ñà‚ñà‚îÇ   ‚ñà‚ñà‚îÇ‚ñà‚ñà‚îÇ  ‚ñà‚ñà‚îÇ‚ñà‚ñà‚ñà‚ñà‚ñà‚îê      ‚ñà‚ñà‚îÇ     ‚ñà‚ñà‚îÇ   ‚ñà‚ñà‚îÇ‚ñà‚ñà‚îÇ  ‚ñà‚ñà‚îÇ‚ñà‚ñà‚ñà‚ñà‚ñà‚îê&#xA;‚ñà‚ñà‚îÇ     ‚ñà‚ñà‚îÇ     ‚ñà‚ñà‚îå‚îÄ‚îÄ‚ñà‚ñà‚îÇ‚ñà‚ñà‚îÇ   ‚ñà‚ñà‚îÇ‚ñà‚ñà‚îÇ  ‚ñà‚ñà‚îÇ‚ñà‚ñà‚îå‚îÄ‚îÄ‚îò      ‚ñà‚ñà‚îÇ     ‚ñà‚ñà‚îÇ   ‚ñà‚ñà‚îÇ‚ñà‚ñà‚îÇ  ‚ñà‚ñà‚îÇ‚ñà‚ñà‚îå‚îÄ‚îÄ‚îò&#xA;‚îî‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê‚ñà‚ñà‚îÇ  ‚ñà‚ñà‚îÇ‚îî‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îå‚îò‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îå‚îò‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê    ‚îî‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê‚îî‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îå‚îò‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îå‚îò‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îê&#xA; ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò‚îî‚îÄ‚îò  ‚îî‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/pre&gt; &#xA;&lt;!--lint enable remark-lint:awesome-badge--&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://awesome.re&#34;&gt;&lt;img src=&#34;https://awesome.re/badge-flat2.svg?sanitize=true&#34; alt=&#34;Awesome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/hesreallyhim/awesome-claude-code&#34;&gt;Awesome Claude Code&lt;/a&gt; ü§ù &lt;a href=&#34;https://github.com/hesreallyhim/awesome-claude-code-agents&#34;&gt;Awesome Claude Code Agents&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;!--lint enable remark-lint:awesome-badge--&gt; &#xA;&lt;!--lint disable double-link--&gt; &#xA;&lt;p&gt;This is a curated list of slash-commands, &lt;code&gt;CLAUDE.md&lt;/code&gt; files, CLI tools, and other resources and guides for enhancing your &lt;a href=&#34;https://docs.anthropic.com/en/docs/claude-code&#34;&gt;Claude Code&lt;/a&gt; workflow, productivity, and vibes.&lt;/p&gt; &#xA;&lt;!--lint enable double-link--&gt; &#xA;&lt;p&gt;Claude Code is a cutting-edge CLI-based coding assistant and agent that you can access in your terminal or IDE. It is a rapidly evolving tool that offers a number of powerful capabilities, and allows for a lot of configuration, in a lot of different ways. Users are actively working out best practices and workflows. It is the hope that this repo will help the community share knowledge and understand how to get the most out of Claude Code.&lt;/p&gt; &#xA;&lt;h3&gt;Announcements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2025-07-30 - Quick Update: Still trying to iron out the submission flow (sorry for anyone that received duplicate &#34;Congratulations!&#34; issues). If you end up fighting any of the programmatic submission tools, just submit something that has all the necessary data, and I&#39;ll take it from there once approved. Other notes: (i) I think it would be really cool/fun to set up a &#34;Claude Code Leaderboard&#34;, so feel free to weigh in on the &lt;a href=&#34;https://github.com/hesreallyhim/awesome-claude-code/discussions/81&#34;&gt;Discussion&lt;/a&gt;; (ii) I&#39;m still trying to figure out what to do about &lt;strong&gt;SUB AGENTS&lt;/strong&gt;, and I&#39;ve reached out to some of the other folks who have started similar repo&#39;s; (iii) Added a small section that will be updated with new submissions as they roll in.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;New Additions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dazuiba/CCNotify&#34;&gt;&lt;code&gt;CC Notify&lt;/code&gt;&lt;/a&gt; by &lt;a href=&#34;https://github.com/dazuiba&#34;&gt;dazuiba&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Piebald-AI/tweakcc&#34;&gt;&lt;code&gt;tweakcc&lt;/code&gt;&lt;/a&gt; by &lt;a href=&#34;https://github.com/Piebald-AI&#34;&gt;Piebald-AI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GowayLee/cchooks&#34;&gt;&lt;code&gt;cchooks&lt;/code&gt;&lt;/a&gt; by &lt;a href=&#34;https://github.com/GowayLee&#34;&gt;GowayLee&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;p&gt;‚ñ™&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#workflows--knowledge-guides-&#34;&gt;Workflows &amp;amp; Knowledge Guides&lt;/a&gt;&lt;br&gt; ‚ñ™&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#tooling-&#34;&gt;Tooling&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;‚ñ´&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#ide-integrations&#34;&gt;IDE Integrations&lt;/a&gt;&lt;br&gt; ‚ñ™&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#hooks-&#34;&gt;Hooks&lt;/a&gt;&lt;br&gt; ‚ñ™&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#slash-commands-&#34;&gt;Slash-Commands&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;‚ñ´&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#version-control--git&#34;&gt;Version Control &amp;amp; Git&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;‚ñ´&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#code-analysis--testing&#34;&gt;Code Analysis &amp;amp; Testing&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;‚ñ´&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#context-loading--priming&#34;&gt;Context Loading &amp;amp; Priming&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;‚ñ´&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#documentation--changelogs&#34;&gt;Documentation &amp;amp; Changelogs&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;‚ñ´&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#ci--deployment&#34;&gt;CI / Deployment&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;‚ñ´&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#project--task-management&#34;&gt;Project &amp;amp; Task Management&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;‚ñ´&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#miscellaneous&#34;&gt;Miscellaneous&lt;/a&gt;&lt;br&gt; ‚ñ™&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#claudemd-files-&#34;&gt;CLAUDE.md Files&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;‚ñ´&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#language-specific&#34;&gt;Language-Specific&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;‚ñ´&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#domain-specific&#34;&gt;Domain-Specific&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;‚ñ´&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#project-scaffolding--mcp&#34;&gt;Project Scaffolding &amp;amp; MCP&lt;/a&gt;&lt;br&gt; ‚ñ™&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#official-documentation-&#34;&gt;Official Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Workflows &amp;amp; Knowledge Guides üß†&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A &lt;strong&gt;workflow&lt;/strong&gt; is a tightly coupled set of Claude Code-native resources that facilitate specific projects&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cloudartisan/cloudartisan.github.io/tree/main/.claude/commands&#34;&gt;&lt;code&gt;Blogging Platform Instructions&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/cloudartisan&#34;&gt;cloudartisan&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;CC-BY-SA-4.0&lt;br&gt; Provides a well-structured set of commands for publishing and maintaining a blogging platform, including commands for creating posts, managing categories, and handling media files.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://claudelog.com&#34;&gt;&lt;code&gt;ClaudeLog&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://www.reddit.com/user/inventor_black/&#34;&gt;InventorBlack&lt;/a&gt;&lt;br&gt; A comprehensive knowledge base with detailed breakdowns of advanced &lt;a href=&#34;https://claudelog.com/mechanics/you-are-the-main-thread/&#34;&gt;mechanics&lt;/a&gt; including &lt;a href=&#34;https://claudelog.com/mechanics/claude-md-supremacy&#34;&gt;CLAUDE.md best practices&lt;/a&gt;, practical technique guides like &lt;a href=&#34;https://claudelog.com/mechanics/plan-mode&#34;&gt;plan mode&lt;/a&gt;, &lt;a href=&#34;https://claudelog.com/faqs/what-is-ultrathink/&#34;&gt;ultrathink&lt;/a&gt;, &lt;a href=&#34;https://claudelog.com/mechanics/task-agent-tools/&#34;&gt;sub-agents&lt;/a&gt;, &lt;a href=&#34;https://claudelog.com/mechanics/agent-first-design/&#34;&gt;agent-first design&lt;/a&gt; and &lt;a href=&#34;https://claudelog.com/configuration&#34;&gt;configuration guides&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/disler/just-prompt/tree/main/.claude/commands&#34;&gt;&lt;code&gt;Context Priming&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/disler&#34;&gt;disler&lt;/a&gt;&lt;br&gt; Provides a systematic approach to priming Claude Code with comprehensive project context through specialized commands for different project scenarios and development contexts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kingler/n8n_agent/tree/main/.claude/commands&#34;&gt;&lt;code&gt;n8n_agent&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/kingler&#34;&gt;kingler&lt;/a&gt;&lt;br&gt; Amazing comprehensive set of comments for code analysis, QA, design, documentation, project structure, project management, optimization, and many more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/steadycursor/steadystart/tree/main/.claude/commands&#34;&gt;&lt;code&gt;Project Bootstrapping and Task Management&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/steadycursor&#34;&gt;steadycursor&lt;/a&gt;&lt;br&gt; Provides a structured set of commands for bootstrapping and managing a new project, including meta-commands for creating and editing custom slash-commands.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/scopecraft/command/tree/main/.claude/commands&#34;&gt;&lt;code&gt;Project Management, Implementation, Planning, and Release&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/scopecraft&#34;&gt;scopecraft&lt;/a&gt;&lt;br&gt; Really comprehensive set of commands for all aspects of SDLC.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/harperreed/dotfiles/tree/master/.claude/commands&#34;&gt;&lt;code&gt;Project Workflow System&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/harperreed&#34;&gt;harperreed&lt;/a&gt;&lt;br&gt; A set of commands that provide a comprehensive workflow system for managing projects, including task management, code review, and deployment processes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://diwank.space/field-notes-from-shipping-real-code-with-claude&#34;&gt;&lt;code&gt;Shipping Real Code w/ Claude&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/creatorrr&#34;&gt;Diwank&lt;/a&gt;&lt;br&gt; A detailed blog post explaining the author&#39;s process for shipping a product with Claude Code, including CLAUDE.md files and other interesting resources.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Helmi/claude-simone&#34;&gt;&lt;code&gt;Simone&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/Helmi&#34;&gt;Helmi&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; A broader project management workflow for Claude Code that encompasses not just a set of commands, but a system of documents, guidelines, and processes to facilitate project planning and execution.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wcygan/dotfiles/tree/d8ab6b9f5a7a81007b7f5fa3025d4f83ce12cc02/claude/commands&#34;&gt;&lt;code&gt;Slash-commands megalist&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/wcygan&#34;&gt;wcygan&lt;/a&gt;&lt;br&gt; A pretty stunning list (88 at the time of this post!) of slash-commands ranging from agent orchestration, code review, project management, security, documentation, self-assessment, almost anything you can dream of.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Tooling üß∞&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Tooling&lt;/strong&gt; denotes applications that are built on top of Claude Code and consist of more components than slash-commands and &lt;code&gt;CLAUDE.md&lt;/code&gt; files&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ryoppippi/ccusage&#34;&gt;&lt;code&gt;CC Usage&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/ryoppippi&#34;&gt;ryoppippi&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Handy CLI tool for managing and analyzing Claude Code usage, based on analyzing local Claude Code logs. Presents a nice dashboard regarding cost information, token consumption, etc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nyatinte/ccexp&#34;&gt;&lt;code&gt;ccexp&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/nyatinte&#34;&gt;nyatinte&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Interactive CLI tool for discovering and managing Claude Code configuration files and slash commands with a beautiful terminal UI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ruvnet/claude-code-flow&#34;&gt;&lt;code&gt;Claude Code Flow&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/ruvnet&#34;&gt;ruvnet&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; This mode serves as a code-first orchestration layer, enabling Claude to write, edit, test, and optimize code autonomously across recursive agent cycles.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Maciek-roboblog/Claude-Code-Usage-Monitor&#34;&gt;&lt;code&gt;Claude Code Usage Monitor&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/Maciek-roboblog&#34;&gt;Maciek-roboblog&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; A real-time terminal-based tool for monitoring Claude Code token usage. It shows live token consumption, burn rate, and predictions for token depletion. Features include visual progress bars, session-aware analytics, and support for multiple subscription plans.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/possibilities/claude-composer&#34;&gt;&lt;code&gt;Claude Composer&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/possibilities&#34;&gt;Mike Bannister&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;Unlicense&lt;br&gt; A tool that adds small enhancements to Claude Code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/claude-did-this/claude-hub&#34;&gt;&lt;code&gt;Claude Hub&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/claude-did-this&#34;&gt;Claude Did This&lt;/a&gt;&lt;br&gt; A webhook service that connects Claude Code to GitHub repositories, enabling AI-powered code assistance directly through pull requests and issues. This integration allows Claude to analyze repositories, answer technical questions, and help developers understand and improve their codebase through simple @mentions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/smtg-ai/claude-squad&#34;&gt;&lt;code&gt;Claude Squad&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/smtg-ai&#34;&gt;smtg-ai&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;AGPL-3.0&lt;br&gt; Claude Squad is a terminal app that manages multiple Claude Code, Codex (and other local agents including Aider) in separate workspaces, allowing you to work on multiple tasks simultaneously.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/parruda/claude-swarm&#34;&gt;&lt;code&gt;Claude Swarm&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/parruda&#34;&gt;parruda&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Launch Claude Code session that is connected to a swarm of Claude Code Agents.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/eyaltoledano/claude-task-master&#34;&gt;&lt;code&gt;Claude Task Master&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/eyaltoledano&#34;&gt;eyaltoledano&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;NOASSERTION&lt;br&gt; A task management system for AI-driven development with Claude, designed to work seamlessly with Cursor AI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/grahama1970/claude-task-runner&#34;&gt;&lt;code&gt;Claude Task Runner&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/grahama1970&#34;&gt;grahama1970&lt;/a&gt;&lt;br&gt; A specialized tool to manage context isolation and focused task execution with Claude Code, solving the critical challenge of context length limitations and task focus when working with Claude on complex, multi-step projects.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dagger/container-use&#34;&gt;&lt;code&gt;Container Use&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/dagger&#34;&gt;dagger&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Development environments for coding agents. Enable multiple agents to work safely and independently with your preferred stack.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Piebald-AI/tweakcc&#34;&gt;&lt;code&gt;tweakcc&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/Piebald-AI&#34;&gt;Piebald-AI&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Command-line tool to customize your Claude Code styling.&lt;/p&gt; &#xA;&lt;h3&gt;IDE Integrations&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=AndrePimenta.claude-code-chat&#34;&gt;&lt;code&gt;Claude Code Chat&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/andrepimenta&#34;&gt;andrepimenta&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;¬©&lt;br&gt; An elegant and user-friendly Claude Code chat interface for VS Code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/stevemolitor/claude-code.el&#34;&gt;&lt;code&gt;claude-code.el&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/stevemolitor&#34;&gt;stevemolitor&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; An Emacs interface for Claude Code CLI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/greggh/claude-code.nvim&#34;&gt;&lt;code&gt;claude-code.nvim&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/greggh&#34;&gt;greggh&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; A seamless integration between Claude Code AI assistant and Neovim.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/stravu/crystal&#34;&gt;&lt;code&gt;crystal&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/stravu&#34;&gt;stravu&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; A full-fledged desktop application for orchestrating, monitoring, and interacting with Claude Code agents.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Hooks ü™ù&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Hooks&lt;/strong&gt; are a brand new API for Claude Code that allows users to activate commands and run scripts at different points in Claude&#39;s agentic lifecycle.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;[Experimental]&lt;/strong&gt; - The resources listed in this section have not been fully vetted and may not work as expected, given the bleeding-edge nature of Claude Code hooks. Nevertheless, I wished to include them at least as a source of inspiration and to explore this unknown terrain. YMMV!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dazuiba/CCNotify&#34;&gt;&lt;code&gt;CC Notify&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/dazuiba&#34;&gt;dazuiba&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; CCNotify provides desktop notifications for Claude Code, alerting you to input needs or task completion, with one-click jumps back to VS Code and task duration display.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/GowayLee/cchooks&#34;&gt;&lt;code&gt;cchooks&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/GowayLee&#34;&gt;GowayLee&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; A lightweight Python SDK with a clean API and good documentation; simplifies the process of writing hooks and integrating them into your codebase, providing a nice abstraction over the JSON configuration files.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/beyondcode/claude-hooks-sdk&#34;&gt;&lt;code&gt;claude-code-hooks-sdk&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/beyondcode&#34;&gt;beyondcode&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; A Laravel-inspired PHP SDK for building Claude Code hook responses with a clean, fluent API. This SDK makes it easy to create structured JSON responses for Claude Code hooks using an expressive, chainable interface.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/johnlindquist/claude-hooks&#34;&gt;&lt;code&gt;claude-hooks&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/johnlindquist&#34;&gt;John Lindquist&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; A TypeScript-based system for configuring and customizing Claude Code hooks with a powerful and flexible interface.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Veraticus/nix-config/tree/main/home-manager/claude-code/hooks&#34;&gt;&lt;code&gt;Linting, testing, and notifications (in go)&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/Veraticus&#34;&gt;Josh Symonds&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Nice set of hooks for enforcing code quality (linting, testing, notifications), with a nice configuration setup as well.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nizos/tdd-guard&#34;&gt;&lt;code&gt;TDD Guard&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/nizos&#34;&gt;Nizar Selander&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; A hooks-driven system that monitors file operations in real-time and blocks changes that violate TDD principles.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Slash-Commands üî™&lt;/h2&gt; &#xA;&lt;h3&gt;Version Control &amp;amp; Git&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/danielscholl/mvn-mcp-server/raw/main/.claude/commands/bug-fix.md&#34;&gt;&lt;code&gt;/bug-fix&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/danielscholl&#34;&gt;danielscholl&lt;/a&gt;&lt;br&gt; Streamlines bug fixing by creating a GitHub issue first, then a feature branch for implementing and thoroughly testing the solution before merging.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/evmts/tevm-monorepo/raw/main/.claude/commands/commit.md&#34;&gt;&lt;code&gt;/commit&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/evmts&#34;&gt;evmts&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Creates git commits using conventional commit format with appropriate emojis, following project standards and creating descriptive messages that explain the purpose of changes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/steadycursor/steadystart/raw/main/.claude/commands/2-commit-fast.md&#34;&gt;&lt;code&gt;/commit-fast&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/steadycursor&#34;&gt;steadycursor&lt;/a&gt;&lt;br&gt; Automates git commit process by selecting the first suggested message, generating structured commits with consistent formatting while skipping manual confirmation and removing Claude co-Contributorship footer&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/toyamarinyon/giselle/raw/main/.claude/commands/create-pr.md&#34;&gt;&lt;code&gt;/create-pr&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/toyamarinyon&#34;&gt;toyamarinyon&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Streamlines pull request creation by handling the entire workflow: creating a new branch, committing changes, formatting modified files with Biome, and submitting the PR.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/liam-hq/liam/raw/main/.claude/commands/create-pull-request.md&#34;&gt;&lt;code&gt;/create-pull-request&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/liam-hq&#34;&gt;liam-hq&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Provides comprehensive PR creation guidance with GitHub CLI, enforcing title conventions, following template structure, and offering concrete command examples with best practices.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/evmts/tevm-monorepo/raw/main/.claude/commands/create-worktrees.md&#34;&gt;&lt;code&gt;/create-worktrees&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/evmts&#34;&gt;evmts&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Creates git worktrees for all open PRs or specific branches, handling branches with slashes, cleaning up stale worktrees, and supporting custom branch creation for development.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jeremymailen/kotlinter-gradle/raw/master/.claude/commands/fix-github-issue.md&#34;&gt;&lt;code&gt;/fix-github-issue&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/jeremymailen&#34;&gt;jeremymailen&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Analyzes and fixes GitHub issues using a structured approach with GitHub CLI for issue details, implementing necessary code changes, running tests, and creating proper commit messages.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/metabase/metabase/raw/master/.claude/commands/fix-issue.md&#34;&gt;&lt;code&gt;/fix-issue&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/metabase&#34;&gt;metabase&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;NOASSERTION&lt;br&gt; Addresses GitHub issues by taking issue number as parameter, analyzing context, implementing solution, and testing/validating the fix for proper integration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/metabase/metabase/raw/master/.claude/commands/fix-pr.md&#34;&gt;&lt;code&gt;/fix-pr&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/metabase&#34;&gt;metabase&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;NOASSERTION&lt;br&gt; Fetches and fixes unresolved PR comments by automatically retrieving feedback, addressing reviewer concerns, making targeted code improvements, and streamlining the review process.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/evmts/tevm-monorepo/raw/main/.claude/commands/husky.md&#34;&gt;&lt;code&gt;/husky&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/evmts&#34;&gt;evmts&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Sets up and manages Husky Git hooks by configuring pre-commit hooks, establishing commit message standards, integrating with linting tools, and ensuring code quality on commits.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/arkavo-org/opentdf-rs/raw/main/.claude/commands/pr-review.md&#34;&gt;&lt;code&gt;/pr-review&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/arkavo-org&#34;&gt;arkavo-org&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Reviews pull request changes to provide feedback, check for issues, and suggest improvements before merging into the main codebase.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/giselles-ai/giselle/raw/main/.claude/commands/update-branch-name.md&#34;&gt;&lt;code&gt;/update-branch-name&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/giselles-ai&#34;&gt;giselles-ai&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Updates branch names with proper prefixes and formats, enforcing naming conventions, supporting semantic prefixes, and managing remote branch updates.&lt;/p&gt; &#xA;&lt;h3&gt;Code Analysis &amp;amp; Testing&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rygwdn/slack-tools/raw/main/.claude/commands/check.md&#34;&gt;&lt;code&gt;/check&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/rygwdn&#34;&gt;rygwdn&lt;/a&gt;&lt;br&gt; Performs comprehensive code quality and security checks, featuring static analysis integration, security vulnerability scanning, code style enforcement, and detailed reporting.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Graphlet-AI/eridu/raw/main/.claude/commands/clean.md&#34;&gt;&lt;code&gt;/clean&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/Graphlet-AI&#34;&gt;Graphlet-AI&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Addresses code formatting and quality issues by fixing black formatting problems, organizing imports with isort, resolving flake8 linting issues, and correcting mypy type errors.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kingler/n8n_agent/raw/main/.claude/commands/code_analysis.md&#34;&gt;&lt;code&gt;/code_analysis&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/kingler&#34;&gt;kingler&lt;/a&gt;&lt;br&gt; Provides a menu of advanced code analysis commands for deep inspection, including knowledge graph generation, optimization suggestions, and quality evaluation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/to4iki/ai-project-rules/raw/main/.claude/commands/optimize.md&#34;&gt;&lt;code&gt;/optimize&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/to4iki&#34;&gt;to4iki&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Analyzes code performance to identify bottlenecks, proposing concrete optimizations with implementation guidance for improved application performance.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rzykov/metabase/raw/master/.claude/commands/repro-issue.md&#34;&gt;&lt;code&gt;/repro-issue&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/rzykov&#34;&gt;rzykov&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;NOASSERTION&lt;br&gt; Creates reproducible test cases for GitHub issues, ensuring tests fail reliably and documenting clear reproduction steps for developers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zscott/pane/raw/main/.claude/commands/tdd.md&#34;&gt;&lt;code&gt;/tdd&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/zscott&#34;&gt;zscott&lt;/a&gt;&lt;br&gt; Guides development using Test-Driven Development principles, enforcing Red-Green-Refactor discipline, integrating with git workflow, and managing PR creation.&lt;/p&gt; &#xA;&lt;h3&gt;Context Loading &amp;amp; Priming&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/elizaOS/elizaos.github.io/raw/main/.claude/commands/context-prime.md&#34;&gt;&lt;code&gt;/context-prime&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/elizaOS&#34;&gt;elizaOS&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Primes Claude with comprehensive project understanding by loading repository structure, setting development context, establishing project goals, and defining collaboration parameters.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/okuvshynov/cubestat/raw/main/.claude/commands/initref.md&#34;&gt;&lt;code&gt;/initref&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/okuvshynov&#34;&gt;okuvshynov&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Initializes reference documentation structure with standard doc templates, API reference setup, documentation conventions, and placeholder content generation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ethpandaops/xatu-data/raw/master/.claude/commands/load-llms-txt.md&#34;&gt;&lt;code&gt;/load-llms-txt&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/ethpandaops&#34;&gt;ethpandaops&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Loads LLM configuration files to context, importing specific terminology, model configurations, and establishing baseline terminology for AI discussions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Mjvolk3/torchcell/raw/main/.claude/commands/load_coo_context.md&#34;&gt;&lt;code&gt;/load_coo_context&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/Mjvolk3&#34;&gt;Mjvolk3&lt;/a&gt;&lt;br&gt; References specific files for sparse matrix operations, explains transform usage, compares with previous approaches, and sets data formatting context for development.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Mjvolk3/torchcell/raw/main/.claude/commands/load_dango_pipeline.md&#34;&gt;&lt;code&gt;/load_dango_pipeline&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/Mjvolk3&#34;&gt;Mjvolk3&lt;/a&gt;&lt;br&gt; Sets context for model training by referencing pipeline files, establishing working context, and preparing for pipeline work with relevant documentation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yzyydev/AI-Engineering-Structure/raw/main/.claude/commands/prime.md&#34;&gt;&lt;code&gt;/prime&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/yzyydev&#34;&gt;yzyydev&lt;/a&gt;&lt;br&gt; Sets up initial project context by viewing directory structure and reading key files, creating standardized context with directory visualization and key documentation focus.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ddisisto/si/raw/main/.claude/commands/rsi.md&#34;&gt;&lt;code&gt;/rsi&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/ddisisto&#34;&gt;ddisisto&lt;/a&gt;&lt;br&gt; Reads all commands and key project files to optimize AI-assisted development by streamlining the process, loading command context, and setting up for better development workflow.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation &amp;amp; Changelogs&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/berrydev-ai/blockdoc-python/raw/main/.claude/commands/add-to-changelog.md&#34;&gt;&lt;code&gt;/add-to-changelog&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/berrydev-ai&#34;&gt;berrydev-ai&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Adds new entries to changelog files while maintaining format consistency, properly documenting changes, and following established project standards for version tracking.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jerseycheese/Narraitor/tree/feature/issue-227-ai-suggestions/.claude/commands/analyze-issue.md&#34;&gt;&lt;code&gt;/create-docs&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/jerseycheese&#34;&gt;jerseycheese&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Analyzes code structure and purpose to create comprehensive documentation detailing inputs/outputs, behavior, user interaction flows, and edge cases with error handling.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/slunsford/coffee-analytics/raw/main/.claude/commands/docs.md&#34;&gt;&lt;code&gt;/docs&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/slunsford&#34;&gt;slunsford&lt;/a&gt;&lt;br&gt; Generates comprehensive documentation that follows project structure, documenting APIs and usage patterns with consistent formatting for better user understanding.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hackdays-io/toban-contribution-viewer/raw/main/.claude/commands/explain-issue-fix.md&#34;&gt;&lt;code&gt;/explain-issue-fix&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/hackdays-io&#34;&gt;hackdays-io&lt;/a&gt;&lt;br&gt; Documents solution approaches for GitHub issues, explaining technical decisions, detailing challenges overcome, and providing implementation context for better understanding.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Consiliency/Flutter-Structurizr/raw/main/.claude/commands/update-docs.md&#34;&gt;&lt;code&gt;/update-docs&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/Consiliency&#34;&gt;Consiliency&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Reviews current documentation status, updates implementation progress, reviews phase documents, and maintains documentation consistency across the project.&lt;/p&gt; &#xA;&lt;h3&gt;CI / Deployment&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kelp/webdown/raw/main/.claude/commands/release.md&#34;&gt;&lt;code&gt;/release&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/kelp&#34;&gt;kelp&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Manages software releases by updating changelogs, reviewing README changes, evaluating version increments, and documenting release changes for better version tracking.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hackdays-io/toban-contribution-viewer/raw/main/.claude/commands/run-ci.md&#34;&gt;&lt;code&gt;/run-ci&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/hackdays-io&#34;&gt;hackdays-io&lt;/a&gt;&lt;br&gt; Activates virtual environments, runs CI-compatible check scripts, iteratively fixes errors, and ensures all tests pass before completion.&lt;/p&gt; &#xA;&lt;h3&gt;Project &amp;amp; Task Management&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/scopecraft/command/raw/main/.claude/commands/create-command.md&#34;&gt;&lt;code&gt;/create-command&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/scopecraft&#34;&gt;scopecraft&lt;/a&gt;&lt;br&gt; Guides Claude through creating new custom commands with proper structure by analyzing requirements, templating commands by category, enforcing command standards, and creating supporting documentation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/taddyorg/inkverse/raw/main/.claude/commands/create-jtbd.md&#34;&gt;&lt;code&gt;/create-jtbd&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/taddyorg&#34;&gt;taddyorg&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;AGPL-3.0&lt;br&gt; Creates Jobs-to-be-Done frameworks that outline user needs with structured format, focusing on specific user problems and organizing by job categories for product development.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/taddyorg/inkverse/raw/main/.claude/commands/create-prd.md&#34;&gt;&lt;code&gt;/create-prd&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/taddyorg&#34;&gt;taddyorg&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;AGPL-3.0&lt;br&gt; Generates comprehensive product requirement documents outlining detailed specifications, requirements, and features following standardized document structure and format.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Wirasm/claudecode-utils/raw/main/.claude/commands/create-prp.md&#34;&gt;&lt;code&gt;/create-prp&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/Wirasm&#34;&gt;Wirasm&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Creates product requirement plans by reading PRP methodology, following template structure, creating comprehensive requirements, and structuring product definitions for development.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/disler/just-prompt/raw/main/.claude/commands/project_hello_w_name.md&#34;&gt;&lt;code&gt;/project_hello_w_name&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/disler&#34;&gt;disler&lt;/a&gt;&lt;br&gt; Creates customizable greeting components with name input, demonstrating argument passing, component reusability, state management, and user input handling.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/chrisleyva/todo-slash-command/raw/main/todo.md&#34;&gt;&lt;code&gt;/todo&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/chrisleyva&#34;&gt;chrisleyva&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; A convenient command to quickly manage project todo items without leaving the Claude Code interface, featuring due dates, sorting, task prioritization, and comprehensive todo list management.&lt;/p&gt; &#xA;&lt;h3&gt;Miscellaneous&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TuckerTucker/tkr-portfolio/raw/main/.claude/commands/five.md&#34;&gt;&lt;code&gt;/five&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/TuckerTucker&#34;&gt;TuckerTucker&lt;/a&gt;&lt;br&gt; Applies the &#34;five whys&#34; methodology to perform root cause analysis, identify underlying issues, and create solution approaches for complex problems.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Mjvolk3/torchcell/raw/main/.claude/commands/fixing_go_in_graph.md&#34;&gt;&lt;code&gt;/fixing_go_in_graph&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/Mjvolk3&#34;&gt;Mjvolk3&lt;/a&gt;&lt;br&gt; Focuses on Gene Ontology annotation integration in graph databases, handling multiple data sources, addressing graph representation issues, and ensuring correct data incorporation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/GaloyMoney/lana-bank/raw/main/.claude/commands/mermaid.md&#34;&gt;&lt;code&gt;/mermaid&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/GaloyMoney&#34;&gt;GaloyMoney&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;NOASSERTION&lt;br&gt; Generates Mermaid diagrams from SQL schema files, creating entity relationship diagrams with table properties, validating diagram compilation, and ensuring complete entity coverage.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Mjvolk3/torchcell/raw/main/.claude/commands/review_dcell_model.md&#34;&gt;&lt;code&gt;/review_dcell_model&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/Mjvolk3&#34;&gt;Mjvolk3&lt;/a&gt;&lt;br&gt; Reviews old Dcell implementation files, comparing with newer Dango model, noting changes over time, and analyzing refactoring approaches for better code organization.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zuplo/docs/raw/main/.claude/commands/use-stepper.md&#34;&gt;&lt;code&gt;/use-stepper&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/zuplo&#34;&gt;zuplo&lt;/a&gt;&lt;br&gt; Reformats documentation to use React Stepper component, transforming heading formats, applying proper indentation, and maintaining markdown compatibility with admonition formatting.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;CLAUDE.md Files üìÇ&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;code&gt;CLAUDE.md&lt;/code&gt; files&lt;/strong&gt; are files that contain important guidelines and context-specfic information or instructions that help Claude Code to better understand your project and your coding standards&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Language-Specific&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/didalgolab/ai-intellij-plugin/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;AI IntelliJ Plugin&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/didalgolab&#34;&gt;didalgolab&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Provides comprehensive Gradle commands for IntelliJ plugin development with platform-specific coding patterns, detailed package structure guidelines, and clear internationalization standards.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/alexei-led/aws-mcp-server/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;AWS MCP Server&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/alexei-led&#34;&gt;alexei-led&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Features multiple Python environment setup options with detailed code style guidelines, comprehensive error handling recommendations, and security considerations for AWS CLI interactions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/touchlab/DroidconKotlin/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;DroidconKotlin&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/touchlab&#34;&gt;touchlab&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Delivers comprehensive Gradle commands for cross-platform Kotlin Multiplatform development with clear module structure and practical guidance for dependency injection.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/expectedparrot/edsl/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;EDSL&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/expectedparrot&#34;&gt;expectedparrot&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Offers detailed build and test commands with strict code style enforcement, comprehensive testing requirements, and standardized development workflow using Black and mypy.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/giselles-ai/giselle/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;Giselle&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/giselles-ai&#34;&gt;giselles-ai&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Provides detailed build and test commands using pnpm and Vitest with strict code formatting requirements and comprehensive naming conventions for code consistency.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hashintel/hash/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;HASH&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/hashintel&#34;&gt;hashintel&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;NOASSERTION&lt;br&gt; Features comprehensive repository structure breakdown with strong emphasis on coding standards, detailed Rust documentation guidelines, and systematic PR review process.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/inkline/inkline/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;Inkline&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/inkline&#34;&gt;inkline&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;NOASSERTION&lt;br&gt; Structures development workflow using pnpm with emphasis on TypeScript and Vue 3 Composition API, detailed component creation process, and comprehensive testing recommendations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mattgodbolt/jsbeeb/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;JSBeeb&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/mattgodbolt&#34;&gt;mattgodbolt&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;GPL-3.0&lt;br&gt; Provides development guide for JavaScript BBC Micro emulator with build and testing instructions, architecture documentation, and debugging workflows.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/LamoomAI/lamoom-python/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;Lamoom Python&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/LamoomAI&#34;&gt;LamoomAI&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Serves as reference for production prompt engineering library with load balancing of AI Models, API documentation, and usage patterns with examples.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/langchain-ai/langgraphjs/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;LangGraphJS&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/langchain-ai&#34;&gt;langchain-ai&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Offers comprehensive build and test commands with detailed TypeScript style guidelines, layered library architecture, and monorepo structure using yarn workspaces.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/metabase/metabase/raw/master/CLAUDE.md&#34;&gt;&lt;code&gt;Metabase&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/metabase&#34;&gt;metabase&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;NOASSERTION&lt;br&gt; Details workflow for REPL-driven development in Clojure/ClojureScript with emphasis on incremental development, testing, and step-by-step approach for feature implementation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sgcarstrends/backend/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;SG Cars Trends Backend&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/sgcarstrends&#34;&gt;sgcarstrends&lt;/a&gt;&lt;br&gt; Provides comprehensive structure for TypeScript monorepo projects with detailed commands for development, testing, deployment, and AWS/Cloudflare integration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/spylang/spy/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;SPy&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/spylang&#34;&gt;spylang&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Enforces strict coding conventions with comprehensive testing guidelines, multiple code compilation options, and backend-specific test decorators for targeted filtering.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/KarpelesLab/tpl/raw/master/CLAUDE.md&#34;&gt;&lt;code&gt;TPL&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/KarpelesLab&#34;&gt;KarpelesLab&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Details Go project conventions with comprehensive error handling recommendations, table-driven testing approach guidelines, and modernization suggestions for latest Go features.&lt;/p&gt; &#xA;&lt;h3&gt;Domain-Specific&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Layr-Labs/avs-vibe-developer-guide/raw/master/CLAUDE.md&#34;&gt;&lt;code&gt;AVS Vibe Developer Guide&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/Layr-Labs&#34;&gt;Layr-Labs&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Structures AI-assisted EigenLayer AVS development workflow with consistent naming conventions for prompt files and established terminology standards for blockchain concepts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/CommE2E/comm/raw/master/CLAUDE.md&#34;&gt;&lt;code&gt;Comm&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/CommE2E&#34;&gt;CommE2E&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;BSD-3-Clause&lt;br&gt; Serves as a development reference for E2E-encrypted messaging applications with code organization architecture, security implementation details, and testing procedures.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/badass-courses/course-builder/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;Course Builder&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/badass-courses&#34;&gt;badass-courses&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Enables real-time multiplayer capabilities for collaborative course creation with diverse tech stack integration and monorepo architecture using Turborepo.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/eastlondoner/cursor-tools/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;Cursor Tools&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/eastlondoner&#34;&gt;eastlondoner&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Creates a versatile AI command interface supporting multiple providers and models with flexible command options and browser automation through &#34;Stagehand&#34; feature.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/soramimi/Guitar/raw/master/CLAUDE.md&#34;&gt;&lt;code&gt;Guitar&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/soramimi&#34;&gt;soramimi&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;GPL-2.0&lt;br&gt; Serves as development guide for Guitar Git GUI Client with build commands for various platforms, code style guidelines for contributing, and project structure explanation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Fimeg/NetworkChronicles/raw/legacy-v1/CLAUDE.md&#34;&gt;&lt;code&gt;Network Chronicles&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/Fimeg&#34;&gt;Fimeg&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Presents detailed implementation plan for AI-driven game characters with technical specifications for LLM integration, character guidelines, and service discovery mechanics.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/different-ai/note-companion/raw/master/CLAUDE.md&#34;&gt;&lt;code&gt;Note Companion&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/different-ai&#34;&gt;different-ai&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Provides detailed styling isolation techniques for Obsidian plugins using Tailwind with custom prefix to prevent style conflicts and practical troubleshooting steps.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ParetoSecurity/pareto-mac/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;Pareto Mac&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/ParetoSecurity&#34;&gt;ParetoSecurity&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;GPL-3.0&lt;br&gt; Serves as development guide for Mac security audit tool with build instructions, contribution guidelines, testing procedures, and workflow documentation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/steadycursor/steadystart/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;SteadyStart&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/steadycursor&#34;&gt;steadycursor&lt;/a&gt;&lt;br&gt; Clear and direct instructives about style, permissions, Claude&#39;s &#34;role&#34;, communications, and documentation of Claude Code sessions for other team members to stay abreast.&lt;/p&gt; &#xA;&lt;h3&gt;Project Scaffolding &amp;amp; MCP&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/basicmachines-co/basic-memory/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;Basic Memory&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/basicmachines-co&#34;&gt;basicmachines-co&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;AGPL-3.0&lt;br&gt; Presents an innovative AI-human collaboration framework with Model Context Protocol for bidirectional LLM-markdown communication and flexible knowledge structure for complex projects.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/grahama1970/claude-code-mcp-enhanced/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;claude-code-mcp-enhanced&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/grahama1970&#34;&gt;grahama1970&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Provides detailed and emphatic instructions for Claude to follow as a coding agent, with testing guidance, code examples, and compliance checks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Family-IT-Guy/perplexity-mcp/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;Perplexity MCP&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/Family-IT-Guy&#34;&gt;Family-IT-Guy&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;ISC&lt;br&gt; Offers clear step-by-step installation instructions with multiple configuration options, detailed troubleshooting guidance, and concise architecture overview of the MCP protocol.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Official Documentation üèõÔ∏è&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Links to some of Anthropic&#39;s terrific documentation and resources regarding Claude Code&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!--lint disable double-link--&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.anthropic.com/en/docs/claude-code&#34;&gt;&lt;code&gt;Anthropic Documentation&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/anthropics&#34;&gt;Anthropic&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;¬©&lt;br&gt; The official documentation for Claude Code, including installation instructions, usage guidelines, API references, tutorials, examples, loads of information that I won&#39;t list individually. Like Claude Code, the documentation is frequently updated.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/anthropics/anthropic-quickstarts/raw/main/CLAUDE.md&#34;&gt;&lt;code&gt;Anthropic Quickstarts&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/anthropics&#34;&gt;Anthropic&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Offers comprehensive development guides for three distinct AI-powered demo projects with standardized workflows, strict code style guidelines, and containerization instructions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/anthropics/claude-code-action/tree/main/examples&#34;&gt;&lt;code&gt;Claude Code GitHub Actions&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href=&#34;https://github.com/anthropics&#34;&gt;Anthropic&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚öñÔ∏è&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Official GitHub Actions integration for Claude Code with examples and documentation for automating AI-powered workflows in CI/CD pipelines.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing üåª&lt;/h2&gt; &#xA;&lt;p&gt;Please note that this project is released with a &lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/code-of-conduct.md&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project you agree to abide by its terms.&lt;/p&gt; &#xA;&lt;p&gt;Regarding content, we especially welcome:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Proven, effective resources that follow best practices and may even be in use in production.&lt;/li&gt; &#xA; &lt;li&gt;Innovative, creative, or experimental workflows that perhaps are still being iterated upon, but have high potential value, and push the boundaries of Claude Code&#39;s documented capabilities and use cases.&lt;/li&gt; &#xA; &lt;li&gt;Additional libraries and tooling that are built on top of Claude Code and offer enhanced functionality.&lt;/li&gt; &#xA; &lt;li&gt;Applications of Claude Code outside of the traditional &#34;coding assistant&#34; context, e.g., CI/CD integration, testing, documentation, dev-ops, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more information on how to contribute to this project. Or, fire up Claude Code and invoke the &lt;code&gt;/project:add-new-resource&lt;/code&gt; command and let Claude walk you through it!&lt;/p&gt; &#xA;&lt;p&gt;If you have any suggestions or thoughts on how to improve the repo, or how to best organize the list, feel free to start a Discussion topic. This is meant to be for the Claude Code community, and in general I prefer not to act on sole authority.&lt;/p&gt; &#xA;&lt;h3&gt;A note about licenses&lt;/h3&gt; &#xA;&lt;p&gt;Because simply listing a hyperlink does not qualify as redistribution, the license of the original source is not relevant to its inclusion. However, for posterity and convenience, we do host copies of all resources whose license permits it. Therefore, please include information about the resource&#39;s license. Additionally, take note: &lt;em&gt;if you do not include a LICENSE in your GitHub repo, then by default it is fully copyrighted and redistribution is not allowed&lt;/em&gt;. So, if you are intending to make an open source project, it&#39;s critical to pick from one of the many available open source licenses. This is just a reminder that without a LICENSE, your project is not open source (it&#39;s merely source-code-available) - it may of course still be included on this list, but this notice is to inform readers about the default rules regarding GitHub and LICENSE files. See &lt;a href=&#34;https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/licensing-a-repository&#34;&gt;here&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
</feed>