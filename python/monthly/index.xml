<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-01T02:18:40Z</updated>
  <subtitle>Monthly Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hwchase17/langchain</title>
    <updated>2023-03-01T02:18:40Z</updated>
    <id>tag:github.com,2023-03-01:/hwchase17/langchain</id>
    <link href="https://github.com/hwchase17/langchain" rel="alternate"></link>
    <summary type="html">&lt;p&gt;‚ö° Building applications with LLMs through composability ‚ö°&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ü¶úÔ∏èüîó LangChain&lt;/h1&gt; &#xA;&lt;p&gt;‚ö° Building applications with LLMs through composability ‚ö°&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hwchase17/langchain/actions/workflows/lint.yml&#34;&gt;&lt;img src=&#34;https://github.com/hwchase17/langchain/actions/workflows/lint.yml/badge.svg?sanitize=true&#34; alt=&#34;lint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hwchase17/langchain/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/hwchase17/langchain/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hwchase17/langchain/actions/workflows/linkcheck.yml&#34;&gt;&lt;img src=&#34;https://github.com/hwchase17/langchain/actions/workflows/linkcheck.yml/badge.svg?sanitize=true&#34; alt=&#34;linkcheck&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/langchainai&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/https/twitter.com/langchainai.svg?style=social&amp;amp;label=Follow%20%40LangChainAI&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/6adMQxSpJS&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/6adMQxSpJS?compact=true&amp;amp;style=flat&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Production Support:&lt;/strong&gt; As you move your LangChains into production, we&#39;d love to offer more comprehensive support. Please fill out &lt;a href=&#34;https://forms.gle/57d8AmXBYp8PP8tZA&#34;&gt;this form&lt;/a&gt; and we&#39;ll set up a dedicated support Slack channel.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Install&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;pip install langchain&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ü§î What is this?&lt;/h2&gt; &#xA;&lt;p&gt;Large language models (LLMs) are emerging as a transformative technology, enabling developers to build applications that they previously could not. But using these LLMs in isolation is often not enough to create a truly powerful app - the real power comes when you can combine them with other sources of computation or knowledge.&lt;/p&gt; &#xA;&lt;p&gt;This library is aimed at assisting in the development of those types of applications. Common examples of these types of applications include:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;‚ùì Question Answering over specific documents&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://langchain.readthedocs.io/en/latest/use_cases/question_answering.html&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;End-to-end Example: &lt;a href=&#34;https://github.com/hwchase17/notion-qa&#34;&gt;Question Answering over Notion Database&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;üí¨ Chatbots&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://langchain.readthedocs.io/en/latest/use_cases/chatbots.html&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;End-to-end Example: &lt;a href=&#34;https://github.com/hwchase17/chat-langchain&#34;&gt;Chat-LangChain&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;ü§ñ Agents&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://langchain.readthedocs.io/en/latest/use_cases/agents.html&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;End-to-end Example: &lt;a href=&#34;https://huggingface.co/spaces/JavaFXpert/Chat-GPT-LangChain&#34;&gt;GPT+WolframAlpha&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìñ Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://langchain.readthedocs.io/en/latest/?&#34;&gt;here&lt;/a&gt; for full documentation on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Getting started (installation, setting up the environment, simple examples)&lt;/li&gt; &#xA; &lt;li&gt;How-To examples (demos, integrations, helper functions)&lt;/li&gt; &#xA; &lt;li&gt;Reference (full API docs) Resources (high-level explanation of core concepts)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üöÄ What can this help with?&lt;/h2&gt; &#xA;&lt;p&gt;There are six main areas that LangChain is designed to help with. These are, in increasing order of complexity:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;üìÉ LLMs and Prompts:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This includes prompt management, prompt optimization, generic interface for all LLMs, and common utilities for working with LLMs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;üîó Chains:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Chains go beyond just a single LLM call, and are sequences of calls (whether to an LLM or a different utility). LangChain provides a standard interface for chains, lots of integrations with other tools, and end-to-end chains for common applications.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;üìö Data Augmented Generation:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Data Augmented Generation involves specific types of chains that first interact with an external datasource to fetch data to use in the generation step. Examples of this include summarization of long pieces of text and question/answering over specific data sources.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ü§ñ Agents:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Agents involve an LLM making decisions about which Actions to take, taking that Action, seeing an Observation, and repeating that until done. LangChain provides a standard interface for agents, a selection of agents to choose from, and examples of end to end agents.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;üß† Memory:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Memory is the concept of persisting state between calls of a chain/agent. LangChain provides a standard interface for memory, a collection of memory implementations, and examples of chains/agents that use memory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;üßê Evaluation:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;[BETA] Generative models are notoriously hard to evaluate with traditional metrics. One new way of evaluating them is using language models themselves to do the evaluation. LangChain provides some prompts/chains for assisting in this.&lt;/p&gt; &#xA;&lt;p&gt;For more information on these concepts, please see our &lt;a href=&#34;https://langchain.readthedocs.io/en/latest/?&#34;&gt;full documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üíÅ Contributing&lt;/h2&gt; &#xA;&lt;p&gt;As an open source project in a rapidly developing field, we are extremely open to contributions, whether it be in the form of a new feature, improved infra, or better documentation.&lt;/p&gt; &#xA;&lt;p&gt;For detailed information on how to contribute, see &lt;a href=&#34;https://raw.githubusercontent.com/hwchase17/langchain/master/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MoonInTheRiver/DiffSinger</title>
    <updated>2023-03-01T02:18:40Z</updated>
    <id>tag:github.com,2023-03-01:/MoonInTheRiver/DiffSinger</id>
    <link href="https://github.com/MoonInTheRiver/DiffSinger" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DiffSinger: Singing Voice Synthesis via Shallow Diffusion Mechanism (SVS &amp; TTS); AAAI 2022; Official code&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DiffSinger: Singing Voice Synthesis via Shallow Diffusion Mechanism&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2105.02446&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/arXiv-Paper-%3CCOLOR%3E.svg?sanitize=true&#34; alt=&#34;arXiv&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/MoonInTheRiver/DiffSinger&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/MoonInTheRiver/DiffSinger?style=social&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/MoonInTheRiver/DiffSinger/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/MoonInTheRiver/DiffSinger/total.svg?sanitize=true&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/spaces/NATSpeech/DiffSpeech&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-blue?label=TTSDemo&#34; alt=&#34;Hugging Face&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/spaces/Silentlin/DiffSinger&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-blue?label=SVSDemo&#34; alt=&#34;Hugging Face&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository is the official PyTorch implementation of our AAAI-2022 &lt;a href=&#34;https://arxiv.org/abs/2105.02446&#34;&gt;paper&lt;/a&gt;, in which we propose DiffSinger (for Singing-Voice-Synthesis) and DiffSpeech (for Text-to-Speech).&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;üéâ&lt;/span&gt; &lt;span&gt;üéâ&lt;/span&gt; &lt;span&gt;üéâ&lt;/span&gt; &lt;strong&gt;Updates&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sep.11, 2022: &lt;span&gt;üîå&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/MoonInTheRiver/DiffSinger/master/docs/README-SVS-opencpop-pndm.md&#34;&gt;DiffSinger-PN&lt;/a&gt;. Add plug-in &lt;a href=&#34;https://arxiv.org/abs/2202.09778&#34;&gt;PNDM&lt;/a&gt;, ICLR 2022 in our laboratory, to accelerate DiffSinger freely.&lt;/li&gt; &#xA; &lt;li&gt;Jul.27, 2022: Update documents for &lt;a href=&#34;https://raw.githubusercontent.com/MoonInTheRiver/DiffSinger/master/docs/README-SVS.md&#34;&gt;SVS&lt;/a&gt;. Add easy inference &lt;a href=&#34;https://raw.githubusercontent.com/MoonInTheRiver/DiffSinger/master/docs/README-SVS-opencpop-cascade.md#4-inference-from-raw-inputs&#34;&gt;A&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://raw.githubusercontent.com/MoonInTheRiver/DiffSinger/master/docs/README-SVS-opencpop-e2e.md#4-inference-from-raw-inputs&#34;&gt;B&lt;/a&gt;; Add Interactive SVS running on &lt;a href=&#34;https://huggingface.co/spaces/Silentlin/DiffSinger&#34;&gt;HuggingFaceü§ó SVS&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Mar.2, 2022: MIDI-B-version.&lt;/li&gt; &#xA; &lt;li&gt;Mar.1, 2022: &lt;a href=&#34;https://github.com/MoonInTheRiver/NeuralSVB&#34;&gt;NeuralSVB&lt;/a&gt;, for singing voice beautifying, has been released.&lt;/li&gt; &#xA; &lt;li&gt;Feb.13, 2022: &lt;a href=&#34;https://github.com/NATSpeech/NATSpeech&#34;&gt;NATSpeech&lt;/a&gt;, the improved code framework, which contains the implementations of DiffSpeech and our NeurIPS-2021 work &lt;a href=&#34;https://openreview.net/forum?id=xmJsuh8xlq&#34;&gt;PortaSpeech&lt;/a&gt; has been released.&lt;/li&gt; &#xA; &lt;li&gt;Jan.29, 2022: support MIDI-A-version SVS.&lt;/li&gt; &#xA; &lt;li&gt;Jan.13, 2022: support SVS, release PopCS dataset.&lt;/li&gt; &#xA; &lt;li&gt;Dec.19, 2021: support TTS. &lt;a href=&#34;https://huggingface.co/spaces/NATSpeech/DiffSpeech&#34;&gt;HuggingFaceü§ó TTS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;span&gt;üöÄ&lt;/span&gt; &lt;strong&gt;News&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Feb.24, 2022: Our new work, NeuralSVB was accepted by ACL-2022 &lt;a href=&#34;https://arxiv.org/abs/2202.13277&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/arXiv-Paper-%3CCOLOR%3E.svg?sanitize=true&#34; alt=&#34;arXiv&#34;&gt;&lt;/a&gt;. &lt;a href=&#34;https://neuralsvb.github.io&#34;&gt;Demo Page&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Dec.01, 2021: DiffSinger was accepted by AAAI-2022.&lt;/li&gt; &#xA; &lt;li&gt;Sep.29, 2021: Our recent work &lt;code&gt;PortaSpeech: Portable and High-Quality Generative Text-to-Speech&lt;/code&gt; was accepted by NeurIPS-2021 &lt;a href=&#34;https://arxiv.org/abs/2109.15166&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/arXiv-Paper-%3CCOLOR%3E.svg?sanitize=true&#34; alt=&#34;arXiv&#34;&gt;&lt;/a&gt; .&lt;/li&gt; &#xA; &lt;li&gt;May.06, 2021: We submitted DiffSinger to Arxiv &lt;a href=&#34;https://arxiv.org/abs/2105.02446&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/arXiv-Paper-%3CCOLOR%3E.svg?sanitize=true&#34; alt=&#34;arXiv&#34;&gt;&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Environments&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to use env of anaconda:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;conda create -n your_env_name python=3.8&#xA;source activate your_env_name &#xA;pip install -r requirements_2080.txt   (GPU 2080Ti, CUDA 10.2)&#xA;or pip install -r requirements_3090.txt   (GPU 3090, CUDA 11.4)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Or, if you want to use virtual env of python:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;## Install Python 3.8 first. &#xA;python -m venv venv&#xA;source venv/bin/activate&#xA;# install requirements.&#xA;pip install -U pip&#xA;pip install Cython numpy==1.19.1&#xA;pip install torch==1.9.0&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Documents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MoonInTheRiver/DiffSinger/master/docs/README-TTS.md&#34;&gt;Run DiffSpeech (TTS version)&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MoonInTheRiver/DiffSinger/master/docs/README-SVS.md&#34;&gt;Run DiffSinger (SVS version)&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Mel Pipeline&lt;/th&gt; &#xA;   &lt;th&gt;Dataset&lt;/th&gt; &#xA;   &lt;th&gt;Pitch Input&lt;/th&gt; &#xA;   &lt;th&gt;F0 Prediction&lt;/th&gt; &#xA;   &lt;th&gt;Acceleration Method&lt;/th&gt; &#xA;   &lt;th&gt;Vocoder&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MoonInTheRiver/DiffSinger/master/docs/README-TTS.md&#34;&gt;DiffSpeech (Text-&amp;gt;F0, Text+F0-&amp;gt;Mel, Mel-&amp;gt;Wav)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://keithito.com/LJ-Speech-Dataset/&#34;&gt;Ljspeech&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Explicit&lt;/td&gt; &#xA;   &lt;td&gt;Shallow Diffusion&lt;/td&gt; &#xA;   &lt;td&gt;NSF-HiFiGAN&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MoonInTheRiver/DiffSinger/master/docs/README-SVS-popcs.md&#34;&gt;DiffSinger (Lyric+F0-&amp;gt;Mel, Mel-&amp;gt;Wav)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MoonInTheRiver/DiffSinger&#34;&gt;PopCS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Ground-Truth F0&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Shallow Diffusion&lt;/td&gt; &#xA;   &lt;td&gt;NSF-HiFiGAN&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MoonInTheRiver/DiffSinger/master/docs/README-SVS-opencpop-cascade.md&#34;&gt;DiffSinger (Lyric+MIDI-&amp;gt;F0, Lyric+F0-&amp;gt;Mel, Mel-&amp;gt;Wav)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://wenet.org.cn/opencpop/&#34;&gt;OpenCpop&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MIDI&lt;/td&gt; &#xA;   &lt;td&gt;Explicit&lt;/td&gt; &#xA;   &lt;td&gt;Shallow Diffusion&lt;/td&gt; &#xA;   &lt;td&gt;NSF-HiFiGAN&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MoonInTheRiver/DiffSinger/master/docs/README-SVS-opencpop-cascade.md&#34;&gt;FFT-Singer (Lyric+MIDI-&amp;gt;F0, Lyric+F0-&amp;gt;Mel, Mel-&amp;gt;Wav)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://wenet.org.cn/opencpop/&#34;&gt;OpenCpop&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MIDI&lt;/td&gt; &#xA;   &lt;td&gt;Explicit&lt;/td&gt; &#xA;   &lt;td&gt;Invalid&lt;/td&gt; &#xA;   &lt;td&gt;NSF-HiFiGAN&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MoonInTheRiver/DiffSinger/master/docs/README-SVS-opencpop-e2e.md&#34;&gt;DiffSinger (Lyric+MIDI-&amp;gt;Mel, Mel-&amp;gt;Wav)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://wenet.org.cn/opencpop/&#34;&gt;OpenCpop&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MIDI&lt;/td&gt; &#xA;   &lt;td&gt;Implicit&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Pitch-Extractor + NSF-HiFiGAN&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MoonInTheRiver/DiffSinger/master/docs/README-SVS-opencpop-pndm.md&#34;&gt;DiffSinger+PNDM (Lyric+MIDI-&amp;gt;Mel, Mel-&amp;gt;Wav)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://wenet.org.cn/opencpop/&#34;&gt;OpenCpop&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MIDI&lt;/td&gt; &#xA;   &lt;td&gt;Implicit&lt;/td&gt; &#xA;   &lt;td&gt;PLMS&lt;/td&gt; &#xA;   &lt;td&gt;Pitch-Extractor + NSF-HiFiGAN&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Tensorboard&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;tensorboard --logdir_spec exp_name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table style=&#34;width:100%&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MoonInTheRiver/DiffSinger/master/resources/tfb.png&#34; alt=&#34;Tensorboard&#34; height=&#34;250&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{liu2021diffsinger,&#xA;  title={Diffsinger: Singing voice synthesis via shallow diffusion mechanism},&#xA;  author={Liu, Jinglin and Li, Chengxi and Ren, Yi and Chen, Feiyang and Liu, Peng and Zhao, Zhou},&#xA;  journal={arXiv preprint arXiv:2105.02446},&#xA;  volume={2},&#xA;  year={2021}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;lucidrains&#39; &lt;a href=&#34;https://github.com/lucidrains/denoising-diffusion-pytorch&#34;&gt;denoising-diffusion-pytorch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Official &lt;a href=&#34;https://github.com/PyTorchLightning/pytorch-lightning&#34;&gt;PyTorch Lightning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;kan-bayashi&#39;s &lt;a href=&#34;https://github.com/kan-bayashi/ParallelWaveGAN&#34;&gt;ParallelWaveGAN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;jik876&#39;s &lt;a href=&#34;https://github.com/jik876/hifi-gan&#34;&gt;HifiGAN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Official &lt;a href=&#34;https://github.com/espnet/espnet&#34;&gt;espnet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;lmnt-com&#39;s &lt;a href=&#34;https://github.com/lmnt-com/diffwave&#34;&gt;DiffWave&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;keonlee9420&#39;s &lt;a href=&#34;https://github.com/keonlee9420/DiffSinger&#34;&gt;Implementation&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Especially thanks to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Team Openvpi&#39;s maintenance: &lt;a href=&#34;https://github.com/openvpi/DiffSinger&#34;&gt;DiffSinger&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Your re-creation and sharing.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>acheong08/ChatGPT</title>
    <updated>2023-03-01T02:18:40Z</updated>
    <id>tag:github.com,2023-03-01:/acheong08/ChatGPT</id>
    <link href="https://github.com/acheong08/ChatGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Reverse engineered ChatGPT API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGPT &lt;img src=&#34;https://github.com/acheong08/ChatGPT/raw/main/logo.png?raw=true&#34; width=&#34;7%&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/revChatGPT&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/revChatGPT.svg?sanitize=true&#34; alt=&#34;PyPi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/revChatGPT&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/badge/revchatgpt&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Reverse Engineered ChatGPT API by OpenAI. Extensible for chatbots etc.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h2&gt;Support my work&lt;/h2&gt; &#xA; &lt;p&gt;Make a pull request and fix my bad code.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;V1 Standard ChatGPT&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h2&gt;Update 2023/02/14 9:00 PM GMT+8: It is working. Use this.&lt;/h2&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Proxy server Rate limit: 25 requests per 10 seconds (per IP)&lt;/p&gt; &#xA; &lt;p&gt;OpenAI rate limit: 50 requests per hour on free accounts. You can get around it with multi-account cycling&lt;/p&gt; &#xA; &lt;p&gt;Plus accounts has around 150 requests per hour rate limit&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;pip3 install revChatGPT&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create account on &lt;a href=&#34;https://chat.openai.com/&#34;&gt;OpenAI&#39;s ChatGPT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Save your email and password&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Authentication method: (Choose 1)&lt;/h3&gt; &#xA;&lt;h4&gt;- Email/Password&lt;/h4&gt; &#xA;&lt;p&gt;Not supported for Google/Microsoft accounts&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;email&#34;: &#34;email&#34;,&#xA;  &#34;password&#34;: &#34;your password&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;- Session token&lt;/h4&gt; &#xA;&lt;p&gt;Comes from cookies on chat.openai.com as &#34;__Secure-next-auth.session-token&#34;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;session_token&#34;: &#34;...&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;- Access token&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chat.openai.com/api/auth/session&#34;&gt;https://chat.openai.com/api/auth/session&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;access_token&#34;: &#34;&amp;lt;access_token&amp;gt;&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;- Optional configuration:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;conversation_id&#34;: &#34;UUID...&#34;,&#xA;  &#34;parent_id&#34;: &#34;UUID...&#34;,&#xA;  &#34;proxy&#34;: &#34;...&#34;,&#xA;  &#34;paid&#34;: false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Save this as &lt;code&gt;$HOME/.config/revChatGPT/config.json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you are using Windows, you will need to create an environment variable named &lt;code&gt;HOME&lt;/code&gt; and set it to your home profile for the script to be able to locate the config.json file.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Command line&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;python3 -m revChatGPT.V1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        ChatGPT - A command-line interface to OpenAI&#39;s ChatGPT (https://chat.openai.com/chat)&#xA;        Repo: github.com/acheong08/ChatGPT&#xA;&#xA;Type &#39;!help&#39; to show a full list of commands&#xA;&#xA;Logging in...&#xA;&#xA;You:&#xA;(Press Esc followed by Enter to finish)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The command line interface supports multi-line inputs and allows navigation using arrow keys. Besides, you can also edit history inputs by arrow keys when the prompt is empty. It also completes your input if it finds matched previous prompts. To finish input, press &lt;code&gt;Esc&lt;/code&gt; and then &lt;code&gt;Enter&lt;/code&gt; as solely &lt;code&gt;Enter&lt;/code&gt; itself is used for creating new line in multi-line mode.&lt;/p&gt; &#xA;&lt;h3&gt;Developer API&lt;/h3&gt; &#xA;&lt;h4&gt;Basic example (streamed):&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from revChatGPT.V1 import Chatbot&#xA;&#xA;chatbot = Chatbot(config={&#xA;  &#34;email&#34;: &#34;&amp;lt;your email&amp;gt;&#34;,&#xA;  &#34;password&#34;: &#34;&amp;lt;your password&amp;gt;&#34;&#xA;})&#xA;&#xA;print(&#34;Chatbot: &#34;)&#xA;prev_text = &#34;&#34;&#xA;for data in chatbot.ask(&#xA;    &#34;Hello world&#34;,&#xA;):&#xA;    message = data[&#34;message&#34;][len(prev_text) :]&#xA;    print(message, end=&#34;&#34;, flush=True)&#xA;    prev_text = data[&#34;message&#34;]&#xA;print()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Basic example (single result):&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from revChatGPT.V1 import Chatbot&#xA;&#xA;chatbot = Chatbot(config={&#xA;  &#34;email&#34;: &#34;&amp;lt;your email&amp;gt;&#34;,&#xA;  &#34;password&#34;: &#34;&amp;lt;your password&amp;gt;&#34;&#xA;})&#xA;&#xA;prompt = &#34;how many beaches does portugal have?&#34;&#xA;response = &#34;&#34;&#xA;&#xA;for data in chatbot.ask(&#xA;  prompt&#xA;):&#xA;    response = data[&#34;message&#34;]&#xA;&#xA;print(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;All API methods&lt;/h4&gt; &#xA;&lt;p&gt;Refer to the &lt;a href=&#34;https://github.com/acheong08/ChatGPT/wiki/V1&#34;&gt;wiki&lt;/a&gt; for advanced developer usage.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h2&gt;V2 Fast ChatGPT API is dead (broken by OpenAI)&lt;/h2&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Awesome ChatGPT&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/stars/acheong08/lists/awesome-chatgpt&#34;&gt;My list&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have a cool project you want added to the list, open an issue.&lt;/p&gt; &#xA;&lt;h1&gt;Disclaimers&lt;/h1&gt; &#xA;&lt;p&gt;This is not an official OpenAI product. This is a personal project and is not affiliated with OpenAI in any way. Don&#39;t sue me.&lt;/p&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/virtualharby&#34;&gt;virtualharby&lt;/a&gt; - Memes for emotional support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acheong08/ChatGPT/graphs/contributors&#34;&gt;All contributors&lt;/a&gt; - Pull requests&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>